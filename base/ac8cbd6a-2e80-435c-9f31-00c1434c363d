{
    "title": "Drive",
    "pages": [
        "Author's Notes:\n\n'Drive' is my story for Literotica's Highway Song story event.\n\nThis is another first for me. Dipping my toe into the Loving Wives category... and hoping not to pull back a stump!\n\nTruthfully, considering how volatile this category is (and some of its readers are), I have NO expectations.\n\nIt sinks, or it swims, whatever. DAMN the TORPEDOS!\n\nSpecial thanks to blackrandl1958 for her expert advice and for inspiring this story out of my head. Also, a big thanks to norafares for passing her eyes over this work, as well, to find the gremlins.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nDrive\n\n********\n\nChapter 1\n\nPinkie's Diner sat a little too far back from the road, a mistake in the original site surveyor's work. This misfortune turned to opportunity as the new owner had a clever lawyer who sued and wrangled the entirety of the lot behind the diner for his client. The restaurant now had room for future expansion, but better than that, it had room for a truck parking lot. Investing in his client's new business venture, the lawyer had Pinkie's floorplan expanded to handle extra customers, and it quickly became the place to stop for a warm meal and great coffee.\n\nForty years later, it was still the favored place for weary travelers and local residents of Rochester, NY.\n\nOne of those residents took a seat on the same stool at the counter he'd parked his ass on for the last seven years. He wasn't a daily visitor; his work had him travel a little too much to be such a frequent visitor. He wasn't sure how this seat was always available when he did stop in for breakfast or dinner, but he sent his gratitude to whatever force in the universe made it possible.\n\n\"Good morning, Hal.\"\n\nThe man looked up with a smile at the gray-haired waitress smiling at him with a pot of coffee in one hand and a mug in the other.\n\n\"Morning, Eve,\" he replied.\n\nShe set the mug before him and poured as she watched his face. With decades of experience, she no longer needed to watch the cup to know when to stop.\n\n\"Are you okay, hun?\"\n\nA slight snort escaped as Hal looked up once more. Damn perceptive, Eve. He managed a single nod, and she let him get away with that, her experience telling her he wasn't ready to talk.\n\n\"Usual?\"\n\nHe nodded again, and she was off. The woman wrote nothing down yet recalled the orders of all of her regular customers. He marveled once more at her incredible memory.\n\nA single sharp pain flared and just as quickly faded, as his memories nipped at him and slipped away.\n\nHe sipped his coffee and watched it move in the mug he held so tightly, like a lifeline.\n\nHe had to get out of his head, a dangerous place, so he let his senses spread outwards, picking up the sounds and movements of those around him. It was a skill he'd used to stay alive so many times. Now it was keeping him sane.\n\nThe din in the vast space was filled with the high-pitched tink of cutlery on plates, the deeper clunk of mugs on tabletops, the uneven murmur of people speaking, some whispering, and some having no grasp of what inside voice meant. There was nothing out of the ordinary, and he took comfort in that\u2014\n\nThere was one sound, almost imperceptible in its minimal volume. It almost seemed to be hiding. It was higher pitched than the forks and knives that did battle or the spoons that mixed the poisons into perfectly fine black coffee. A repeated tapping, almost a vibrat\u2014it was the sound of trembling.\n\nRings against a mug.\n\nThe sound of fear.\n\nThat didn't belong here, and he didn't need to hear it. Not today, of all days.\n\nHe made the mistake of looking in the direction of the sound and caught sight of the source. He looked away, cursing himself, but it was too late.\n\nShe was sitting two stools to his left, his brain quickly categorizing his scan of her.\n\nTall, maybe as tall as him. Slim physique with long limbs and long elegant fingers wrapped around her coffee mug. Multiple silver rings, the source of the tapping as her hands were trembling, badly.\n\nShe was blonde, and what he'd first taken to be an albino boa constrictor was actually a long braid of her hair. Geezus! That was a lot of hair.\n\nHer eyes were big and soft brown with long lashes. When they flicked in his direction, he saw the pain and fear in them. Smudged makeup from crying. Fading bruises from being hit.\n\nShe had slightly protruding canines that hadn't been corrected by expensive braces. Her lips looked soft, though the top one was healing after being split, likely from a hard slap over that sharp tooth.\n\nHer nose was slightly larger than usual, but it balanced her larger eyes and that bite. While not classically beautiful, her face had authentic character, and that was attractive in its own way.\n\nDefinitely attractive, except for her body language, which screamed victim.\n\nShe'd draw every predator within sight of her, and from the bruises, it looked like she already had. He wondered if she was running. It seemed likely. He gauged her to be in her early thirties, almost a decade younger than he was, so he pondered if her current state was a new development or if she'd always struggled to survive.\n\nShe wore tight light-blue jeans with rips across her sleek thighs and frayed cuffs over dirty, flat-soled black runners which had seen better days.\n\nThe smudged, pink satin jacket barely reached her waist and was worn open. From the side, he'd gotten the impression it might not be able to close, up top at least.\n\nHe picked up a male voice behind him talking about the woman. He wasn't the only one recognizing what she was.\n\nThe difference was, he wasn't hunting.\n\nEve arrived with his plate, and he felt a flood of relief for the distraction. He smiled at her and saw the question in her all too knowing eyes. He just shook his head, thanked her, and began to eat.\n\nEve walked over to stand before the woman. \"You sure you don't want anything to eat, hun?\"\n\n\"No... thank you. Just more coffee, please.\"\n\nHis fork paused on its way back down to his plate, as the woman's deep, sultry voice sent chills down his spine. He hadn't expected that. He wasn't sure what had given it such a gravelly quality, but it was jarring as he'd expected her to have an almost childlike timbre instead.\n\nIt still held a note of fear and weariness in it that clawed at him, so he pushed it from his mind and finished up his breakfast. When he was done, Eve was there, ready to take his plate and pour him some more coffee.\n\n\"Will I see you again tomorrow?\" she asked.\n\n\"No, not for a week or so. Going for a long drive,\" Hal said.\n\n\"Another business trip? They run you ragged!\" she insisted, making him smile at the concern in her voice.\n\n\"Not business. Driving west, to LA. It's personal,\" he finished awkwardly.\n\n\"You're not driving the entire way!\" Eve said in surprise. \"You'll fly from Buffalo?\"\n\n\"No, I'm driving. I need the time... to think.\" Hal pushed back the thoughts that threatened to derail his mind.\n\n\"Could-could I get a lift? Just to Erie? I-I have a sister in Pittsburgh. I can get a Greyhound from Erie.\"\n\nThe voice was full of suppressed desperation, yet to his ears, it felt as smooth as honey, poured over gravel. He looked into her soft brown eyes, only slightly glassy from the tears she was holding at bay.\n\nShe'd turned on her stool, and he could now see the deep cleavage between her substantial implants. Several thin gold chains were getting lost between those orbs. He picked up her weak attempt to use this view to sway his decision.\n\nToday, of all days... today was not the day to ask him for acts of heroism. Not with the monster inside him whispering pleas to be released. He was in no condition to be the protector of this injured, doe-eyed waif.\n\nHe turned his face away and looked down into his coffee. \"No.\"\n\n\"I can take you to Erie,\" said a voice behind Hal.\n\nHe knew the voice belonged to the same man, likely a long-haul trucker, who'd been quietly making rude comments behind him about the woman's hot body. Hal knew she shouldn't accept.\n\nHe could feel the blonde's eyes on him. Eve's as well. He kept his hands on his mug and his eyes down, as dark whispers filled his mind.\n\n\"Sure. Thanks.\"\n\nHe felt her acceptance like a whip across his back, and a sudden rage flared.\n\nThis wasn't his responsibility.\n\nShe wasn't his responsibility!\n\nHe hadn't cheated... His eyes closed as pain ripped through him once more.\n\n\"I just have to use the ladies' room.\"\n\n\"Sure. My rig is parked right behind the restaurant. It's the one with the Queen's Pork Sausage trailer. You can't miss it.\"\n\nHal let their voices wash over him as he took slow deep breaths. He drank his coffee, then pushed his mind back into the external awareness mode once more and picked through the sounds to calm himself.\n\nHe immediately picked up whispers, but this time, not from within his mind. He tuned everything else out.\n\n\"Pete! Where the fuck are you?... Good! Meet me at the rest stop just east of Buffalo. I got another slut. Yeah! Sweet ass and big titties. Yup. We'll do it same as last time...\" The voice tapered off as the trucker walked away. Hurrying to prepare the trap.\n\nShit.\n\nHe knew it was a mistake. Based on her tears and trembles, not the first mistake this woman had walked right into.\n\nFUCK!\n\nHis mug suddenly exploded into shards between his hands, the dregs of his coffee splashing onto the counter.\n\nEve was immediately there and wiped up the spill. She collected the bits of the mug as she eyed him cautiously.\n\n\"Sorry about that. Put it on my bill,\" he sighed.\n\nEve nodded and began to move away. Before he could stop himself, he reached out and touched her arm.\n\n\"You need to stop her from going with him.\"\n\nEve's eyebrows went up, but she just waited.\n\nHe took a breath. \"He called his buddy.\" He took another breath to keep his rage in check. \"They're planning to rape her at the next rest stop.\"\n\nEve gasped as she lifted her hand to her mouth. Then she looked him in the eye. \"Hal, she needs safe passage to Erie.\"\n\nHe blinked at her in confusion. \"Yes... that's why you need to tell her not to\u2014\"\n\n\"You need to take her,\" Eve insisted. Her tone gave no room for argument.\n\nHis mouth opened to protest, but she was giving him the look mothers used on stubborn children. She was expert class.\n\nExcept... she didn't know what this child had grown into. She had no idea of the danger\u2014\n\nEve rushed away, and Hal saw her catch the woman just before she left the building. He saw the woman was only carrying a small pink backpack. The two leaned their heads close together as Eve spoke quietly.\n\nHal saw the woman jerk back then burst into tears. Eve put an arm around her and led her back towards Hal, whose gut got tighter and tighter the closer they got.\n\nWhen they were standing before him, he managed to look into the woman's teary eyes. \"Erie?\" he said, and she nodded weakly. Once more, a victim.\n\n\"Okay. I'll get you there,\" he said gruffly.\n\nEve gave him a sweet smile as she released her hold on the woman. \"Her name is Sam. Sam, this is Hal.\" They gave each other minimal nods.\n\nHe tossed some bills on the counter and looked the waitress in the eye. \"When I get back from LA, I want a slice of blueberry pie.\"\n\nShe patted his arm. \"Sure thing, hun.\"\n\nWith the smallest of glimpses at the woman, Sam, he headed for the door. He held it for her, and she was right behind him like she was frightened he would leave without her.\n\nOutside, he led her to his rental. As he was crossing the country, he'd splurged on an upgraded car. It was just another sedan but a little bigger and a little more luxurious than he usually got. It even had GPS navigation to warn him of traffic tie-ups along his route.\n\nHe opened the door for her, feeling stupid for falling into his old patterns.\n\nShe glanced at him in surprise then quickly sat inside. He closed the door then walked around to his door. He glanced back at the diner and saw Eve watching him with a little smile. He frowned in frustration, then got in.\n\nHe used his cell to look up the Erie bus station's address and entered it into the GPS. Then he got them on their way, driving onto the highway's westbound onramp. They continued in silence, each trapped in their thoughts.\n\nSometime later, they passed the rest station where the trucker planned to have his little party.\n\nHal heard Sam begin to cry again, but he did his best to ignore it.\n\nThey bypassed Buffalo, but on the outskirts, he pulled off the highway as he was conscious of Sam's discomfort. He drove into the parking lot of a McDonalds and shut the engine. She looked over at him nervously.\n\n\"You've been pressing your knees together for the last fifteen miles. I don't have a problem with stopping if you need us to. You just have to tell me. Please use the washroom inside.\" She nodded in relief, then gave him another worried glance. \"Your stomach has been grumbling ever since we left the diner. I'm going in to get you breakfast. What do you want?\"\n\nShe tried to protest, but her gut squealed.\n\nShe smiled in embarrassment. \"An Egg McMuffin?\"\n\nHe nodded and opened his door. Sam scrambled to get out, too. He locked the car then opened the restaurant's door for her. She smiled at his manners then rushed away to use the facilities.\n\nHe ordered three of the breakfast sandwiches for her and a few bottles of water for the car.\n\nHal spotted a teen girl moving quickly for the door carrying a familiar backpack. It had the same tear on the strap Sam's had. This was something he felt comfortable dealing with.\n\nHe took two long strides and snagged the bag's carrying loop, tugging it from her grip.\n\n\"What the fuck! Give that back!\" she screamed at him in full attack mode.\n\nHe just stood quietly, watching her eyes.\n\n\"I said, give me my bag, asshole!\" Her volume was going up, hoping to intimidate him.\n\n\"What's going on here?\" A deep voice boomed from behind Hal.\n\n\"This piece of shit is stealing my bag!\" the young girl shrieked, clearly upset that her technique was failing to move him.\n\nThe manager moved to stand between Hal and the teen. \"Is that true? Did you take her bag?\"\n\n\"No.\"\n\n\"FUCKER'S LYING! GIMME MY BAG!\" she screamed.\n\nSam suddenly came rushing from the back of the restaurant with a wild look of desperation on her face.\n\nHal looked away from the teen to face the manager. \"The bag belongs to this woman, who was just in your restroom where this thief stole it.\"\n\n\"FUCK YOU!\" the girl yelled as she leaped away from the manager's reach and dashed out the door. The big man attempted to catch her, but he was no match for the girl's fleet feet. She ducked around the corner of the building and was gone.\n\nSam's bottom lip was trembling again as Hal handed over the backpack. He picked up his purchases from the table behind him, then headed outside with Sam following close.\n\nThis time he let her open her own door, and she quickly got in.\n\n\"Did you do what needed to be done?\" he asked, and she nodded. \"How did she get the backpack?\"\n\n\"It was hanging on the hook inside the stall door. I sat down and started. A short time later, she reached over and grabbed it. She did something to the door lock, too. I had trouble opening it.\" She aimed her big sad eyes at him. \"Thank you for getting it back.\"\n\nHe nodded. \"Lesson learned. Eat your breakfast.\" He handed her the bag after taking the water bottles out. He noticed there were no napkins in the bag. \"Napkins in the glovebox. Try not to spill any food, please.\" She just nodded.\n\nHal got them back on the interstate, and they joined the flow of traffic on 90, heading west along the south shore of Lake Erie. Sam took the opportunity to wolf down her food. She slowed and took her time with the third one, then rested back against the seat, looking a little more relaxed.\n\n\"Oh my god. Thank you. I haven't eaten in days,\" she said in relief.\n\nHal was feeling a little better himself. It actually felt good to take care of someone else. She was definitely a distraction. Perhaps that was a good thing.\n\n\"You're welcome.\" He glanced over and saw she was watching him. He raised a brow and put his eyes back on the road. \"What?\"\n\n\"You aren't what I expected.\"\n\nHe spared her another glance and saw she was studying him. \"What led you to have expectations at all? We've just met.\" His guilt flared as he knew he'd done the same thing when he first saw her. Though, so far, she hadn't proved his impression wrong.\n\nShe seemed surprised by that question. \"People... we judge each other with our first glance. That's just... people stuff,\" she said to explain herself.\n\n\"What did you think?\" he asked, curious despite his better judgment.\n\nShe hesitated, then the words just began to spill forth. \"Your clothes are wrinkled like you've slept in them, they're not terribly flattering, and you don't look like you've shaved in a couple of days. I thought maybe you were one of those... invisible people. The ones who never stand out or get noticed. They let the world wash over them and push them around. Now, you seem completely comfortable in your skin. Especially back there at the restaurant. I envy that.\"\n\nHe frowned.\n\n\"I'm sorry! There I go putting my foot in my mouth again. I didn't mean to insult you!\" she gasped desperately.\n\nHe shook his head. \"It's okay. I'm not insulted.\" He paused. \"I've had... a bad time the last couple of days. I'm not the best company. It's one of the reasons I'll be driving across the country. Alone with my thoughts.\"\n\nShe was quiet for a moment as she watched his face. \"Is... is that why you said no?\" she asked quietly.\n\nHe grunted quietly. Like saying no had worked out for him. \"Yes.\"\n\n\"I'm sorry for intruding... but I'm glad you saved me from those monsters.\"\n\nHe nodded stiffly. Sam didn't understand how close she was to a monster now.\n\nThey rode on in silence. The scenery was dull as the Interstate was built for speed, not beauty.\n\n\"How long have you been running?\"\n\nThe question just popped out of his mouth before he had a chance to block it with manners and sensitivity. Maybe it was the monster. It seemed likely. It often surfaced when he wasn't paying attention.\n\nShe froze, then glanced over at him then away. \"What-what makes you think\u2014\"\n\n\"Bruises on your face, the split lip, the bruising on your wrist. Not eating for days. Your... behavior in the diner.\" Hal finally managed to shut himself up as he saw she was getting upset. \"It's okay. I'm not judging you. I'm just... observant, and I never know when to keep my mouth shut. Sorry,\" he finished weakly.\n\nThey rode in silence for a while, then she spoke quietly.\n\n\"Two days. Frank beat me. Again. I couldn't take it anymore, so I ran when he left to go to the club.\"\n\n\"Club?\" Hal asked gently.\n\n\"The Kitty Club. It's a strip club he manages. I work... worked there.\"\n\n\"Is this Frank coming after you?\"\n\nFrightened doe's eyes looked his way. Fuck, those lashes were long! \"Probably. Yes.\"\n\n\"Does he just think he owns you, or do you owe him money?\" Hal delivered the questions in a matter of fact tone, but inside, he felt the monster shifting, eager and alert.\n\n\"Both.\" She sniffed but seemed to get control once more. \"He said I was too old for the stage and not sexy enough to work the bar. He told me I had to get these.\" She gestured to her implants. \"He paid for them.\"\n\n\"Did he say how much they cost?\" Hal was getting the picture of how this guy's mind worked. She wasn't getting out from under Frank's thumb.\n\n\"He wouldn't tell me,\" she said with a definite tremble in her already gravelly voice.\n\n\"I see. Does Frank know where your sister lives?\" he asked. Sam's decision making had been sketchy so far. Hal was concerned she might be leading this violent dirtbag into a confrontation with her sister as well.",
        "Sam shook her head. \"I haven't spoken with Delilah in fifteen years. I know she got married, moved to Pittsburgh, and has two kids. My younger brother Jimmy gave me her details a few years back when he came looking for me. Jimmy died in a motorcycle accident that summer.\"\n\nHal wondered if Frank had anything to do with that but kept his suspicions to himself.\n\nHe had to distance himself from this. He was only Sam's safe passage to Erie. There, they would part ways, and she would take a bus to stay with her sister. He had to stop himself from examining her life path beyond that. While he'd seen her make a few mistakes and heard evidence of ones she'd made in the past, this was her life, and he had his own crisis to unravel.\n\n\"Why are you going to LA?\"\n\nHer question caught him unprepared, and his muscles locked as he prevented himself from reacting. He took deep, slow breaths in and out through his nose until the tension eased.\n\nOnce he could unlock his muscles, he looked over to see her watching him nervously. That made him feel a little ill. He didn't need to add to her fear. \"Sorry.\"\n\n\"You don't need to tell me,\" she blurted timidly.\n\n\"No... it's... just personal.\"\n\nMore silent miles rolled by. Hal felt like he'd broken her trust.\n\n\"Are you going to be okay?\"\n\nOnce more, her sudden question cut through him, but this time he was just left stunned. This... victim was concerned about him?\n\nHis first response was to laugh, but he held it in. Then remorse struck as he realized what a shit he would have been to laugh at Sam's compassion. Another sign of the monster within him.\n\nHe could give her a lie and say everything is fine! But he couldn't. The truth, then.\n\n\"I don't know. I'll just have to wait and see. That's why I'm taking a week to get there. I need the time.\"\n\nHe risked another glance and saw some of the lost trust had returned, healed by the openness of his response.\n\n\"You know what I do\u2014did. What do you do?\"\n\nGeezus, her questions were so innocent; why did they feel like they were cutting him wide open?\n\nHe had to go with the safe answer. \"Inventory Control Manager for an office equipment manufacturer.\"\n\nHe looked over, and she smiled. It was the first time he'd seen her do that, and those protruding canines of hers widened the smile crazily. He couldn't help but smile in return. Still, he wondered what the smile was for. \"What?\"\n\nShe shook her head, and her smile just got broader and sillier. He felt a tug in his chest.\n\n\"Seriously, what?\" Hal asked with a grin of his own.\n\nShe seemed to come to a decision. \"Your job just doesn't seem to suit you.\"\n\nHis eyebrows rose. \"Why?\"\n\nShe shook her head and looked at him more intensely like she was trying to see through him. \"I don't know... it's like, you should be doing something bigger\u2014\"\n\n\"Bigger?\" he snorted in amusement.\n\n\"I don't know! More important! Less dull!\" she exclaimed as she shook her head.\n\nHal smiled to himself. \"Don't knock dull. I like dull.\"\n\nShe giggled, and that sounded delightful with her husky voice. There was just a hint of desperate relief in the sound.\n\n\"I don't see it,\" she said as she continued to peer at him with an evaluating look. \"Maybe a fireman or a cop? Or something military... like.\"\n\nHe looked her in the eye. \"Military-like?\"\n\nShe looked away in embarrassment. \"I don't really know what kind. I'm not good at describing things.\"\n\n\"I'll repeat myself. Don't knock dull. Not everyone is suited to handle high adrenaline activities. A little calm is appreciated.\"\n\nShe nodded, but he got the impression that she wasn't satisfied with how it was left. He caught her looking at him with a slight frown.\n\n\"What now?\"\n\n\"I see a ring. You're married?\"\n\nOnce more, her simple question sliced deep. He had to struggle not to let it show. He nodded.\n\n\"What does she do?\"\n\nHe took a breath. Let it out. \"Dental Hygienist.\"\n\n\"Ugh! Staring into people's mouths all day,\" she moaned.\n\nHe managed a nod, desperately wishing she'd choose a different subject.\n\nOblivious to his pain, she continued to dig. \"Why isn't she on this trip with you?\"\n\nThe monster focused its attention on his tormentor, willing and eager to end her quickly. It knew a dozen ways to do it, but Hal maintained his iron-willed control. She would live another day.\n\n\"Busy,\" he managed, once he could breathe once more.\n\nShe looked over and saw the muscles jumping in his tightly clenched jaws and the pain in his eyes. Her face dropped. \"oh... oh my god, I'm so sorry.\"\n\nHe quickly glanced at her and saw she knew. That was almost worse than her ignorance. \"Don't\u2014\"\n\n\"I didn't mean to pry\u2014\"\n\n\"DON'T!\"\n\nHal struggled to get his breathing under control. He had to get away from this woman before she discovered her danger.\n\nHe spotted a road sign indicating an exit for Erie, PA. He looked at it like a lifeline. Only three more miles, and he'd get off the interstate. He'd drive her to the bus station, then he'd be rid of her and be alone.\n\nThat was safer.\n\nAs they approached the exit, he glanced over and saw a look of misery on her face. The fear was returning as well.\n\n\"You don't have money for a bus ticket, do you.\"\n\nGlassy doe eyes looked at him. Sam's bottom lip was trembling as she shook her head.\n\nShit!\n\n\"You should call your sister before you show up on her doorstep.\"\n\nHer look of dread increased, but she nodded.\n\nHe pulled off the interstate and followed the GPS route through the city, north towards the lakeshore. The Greyhound bus station was up by the piers.\n\nHal kept an eye on his passenger and noted her increased agitation the closer they got to the station.\n\nThey finally reached the parking lot next to the buses. He shut off the car and looked over at Sam. She was struggling to keep it together, and he appreciated that. He got out, and after a moment, she did as well.\n\n\"I'll pay for your ticket, but you need to call your sister first,\" he brusquely stated as he locked the car.\n\nShe looked at him and nodded.\n\nThey walked side by side across the lot to the bus station and went inside. Looking around, they saw there were very few people around. They also saw no payphones, but they found a bench across from the ticket booth and sat together. \"Do you have a cell...\" Another lost look. \"So, no. Okay, use mine. I'll check on the bus,\" he said as he opened up the phone app and handed it to her. She pulled a small red book from the backpack and opened it to the page where she'd written her sister's information.\n\nHal stood and walked across the hall to speak to the ticket agent.\n\n\"Hi, one way to Pittsburgh?\"\n\nThe man glanced at his screen as he tapped a key. \"The bus, the only bus today for Pittsburgh, will be here in thirty minutes. Thirty-six dollars.\"\n\nHal paused as he picked up Sam's side of the call.\n\n\"Hello? Delilah? It's me, Sam... Samantha. Your sister.\" There was a long pause. \"Don't say that, please don't.\" Another pause. \"I-I was hoping to come see you. Today.\" Sam began to sniff. \"Please-please don't be that way, Deli! OH! I'm not! Please! No! Please! Ohhh...\" Sam looked at the cell then slowly curled up on the bench as the tears burst forth. Deep racking sobs tore from her as Hal turned to her and watched in dismay.\n\nHe realized there would be no reunion with the sister, the consequence of another bad decision made years before. He walked away from the booth back to the crying woman. He sat on the end of the bench, gently took his cell back, and rubbed her back to calm her\u2014more automatic behavior.\n\nA moment flashed into his mind.\n\nLisa, sobbing into her pillow. Him, sitting on the edge of their bed, touching his wife's back to give comfort. He couldn't recall the reason for the tears, but a feeling of guilt made him believe they were his fault. He was unsure if he could trust that.\n\nHe now wondered if those tears played some part in the events which led to this moment.\n\nHis mind was lost, analyzing every seemingly innocent gesture and word, looking for the truth in the details.\n\nEventually, a bus pulled into the station, and they heard the announcement of the 12:40 to Pittsburgh. Neither moved from the bench.\n\nAs the bus left, Hal heard a deep, pained exhale from the woman whose head had moved to his leg during his trip down memory lane. He looked down to see he was stroking her hair. She seemed much calmer now.\n\nWhat the hell was he going to do now? He was destined to travel to the west coast. She had no place in that mess. He didn't want her to get caught up in it.\n\nHe also didn't have it in him to kick her to the curb. It felt like she'd had too many kicks recently. He might be a monster, but he wasn't cruel.\n\nHe had to keep moving west. He couldn't decide for her, but he had no choice. He looked down at her and saw her eyes were closed.\n\n\"Wha\u2014ahem, what are you going to do now?\" he forced out of his tight throat.\n\nShe shook her head, pressing it harder against his leg as a shudder ran through her muscles.\n\nHe turned his face to the side and looked out the window so he wouldn't see her expression.\n\nHe could just walk away. He'd fulfilled his promise to Eve. Safe pass\u2014\n\nQueen's Pork Sausages.\n\nA trailer with this emblem was hooked to an old red Denworthy rig with a big sleeper cab. He'd only caught a glimpse of the potential rapist's truck as they left the lot of Pinkie's, but he was sure he was looking at it now, in the lot just across the street.\n\nSo that answered the question of leaving Sam behind. They were likely watching.\n\n\"Sam, we have to go. Now.\"\n\nThe woman looked up at him in confusion, then froze when she saw the cold look in his eyes.\n\n\"Come on.\" He helped her to her feet, pushed her backpack into her arms, and got her moving.\n\n\"What's going on? Where are we going?\" she asked with genuine fear in her voice.\n\n\"The creep from Pinkie's followed us. We're going to my car.\" Hal's senses were on high alert, and he caught motion in the parking lot. Left and right. Converging. So, he brought his friend. The monster within trembled in anticipation.\n\nThey were parked in the second row of cars and had to pass through the first. Their assailants would spring the trap as he and Sam stepped out from between the vehicles.\n\nHe altered course subtly to have them pass between a parked cube truck and a jeep. As they reached the rear bumper, he gave Sam a gentle push into the narrow space. \"Keep going,\" he said softly. She took three steps forward and looked back over her shoulder. He was gone.\n\nShe took three more stumbling steps forward, and a hand grabbed her wrist painfully tight, yanking her forward. Her legs gave out in her fright. She shrieked as she fell sideways against the bumper of the jeep. Terrified, she grabbed onto the heavy tubing to prevent the rapist from taking her.\n\nBehind her, she heard a fast series of thuds, snaps, and breathy squeals. Something clattered to the pavement, followed by heavier, brutal impacts and muted snaps.\n\nShe kept her eyes tightly closed as the angry crackle of sparks sounded twice.\n\nThen a calm voice in her ear.\n\n\"Sam, it's okay. We have to leave now. Come on.\"\n\nGentle hands helped her stand and collect her bag, and she looked down in fright at the two unconscious men, face down on the paving.\n\n\"Quickly now.\"\n\nSam clung to Hal's arm as he guided her to the passenger side door. When the door closed with her inside, she felt infinitely safer, so she spun in her seat to look back at the two attackers still on their faces. As Hal slipped behind the steering wheel, she stared at him with wide eyes. He was talking to someone on his cell.\n\n\"Thanks.\" He hung up and tossed a black-handled stun gun into the console between the seats. He caught her look. \"I took that from the trucker. It's how they were going to get you into their truck.\"\n\nHe quickly got the car started and drove out of the lot at a sedate pace. He tapped the GPS a few times, and then they were on their way.\n\nHe didn't speak again until they were back on the interstate. He looked over at Sam and saw she was still watching him. \"Are you okay?\" he asked.\n\n\"Yes, but what did you do?\"\n\nHe looked away with a stiff expression. \"I know how to fight.\" He looked back at her. \"So, going to your sister's is out?\"\n\nShe immediately looked like she might start crying again, but she nodded.\n\n\"Do you have a plan B?\" he asked.\n\nShe shook her head.\n\n\"No other sibling, cousins, an aunt?\"\n\nHer face fell, and her lip trembled as his chest tightened.\n\nShit.\n\n\"Where are we going?\" she asked in a quiet voice.\n\n\"I'm going to LA. That's all I know. Do you have someplace you need to be?\"\n\nShe shook her head with glassy sad eyes locked onto his frustrated ones.\n\nFuck.\n\nHe didn't want her with him in LA. It wasn't going to be safe for her. He wasn't sure what the outcome of this trip would be. That was what he needed the thinking time for, alone time.\n\nFuck!\n\nShe started to cry again.\n\n\"Why are you crying now?\" he said in exasperation.\n\n\"I'm scared! I don't want to burden you, but I have no home, no money, no\u2014\" She choked on her words. \"...family. My ex-boyfriend wants to beat me to death and cut my tits off, and those rapists tried to abduct me in broad daylight, a second time!\" She was shaking badly. \"I'm terrified, but I feel safe here with you. But you don't want me here!\"\n\nHer tears became sobs, and Hal felt trapped. The monster had been quiet and dormant after he unleashed it on the two men in the parking lot, but the crying was stirring it up again. He had to nip that in the bud.\n\n\"You can stay with me until we work something out,\" he said sternly. \"Stop crying.\"\n\nThe tears tapered off as she watched him with hope in her eyes. He didn't want to see that, so he kept his eyes on the road.\n\nThe crying stopped, and they rode on through the countryside.\n\n\"Where are we going? Tonight, I mean,\" she asked timidly.\n\nHe nodded. \"I booked a room in a motel in Columbus, Ohio. I'll get a second room when we get there.\"\n\nHal glanced over and saw another worried expression. \"What's wrong?\"\n\n\"I don't want to be a burden...\"\n\nHe sighed. \"What is it?\"\n\n\"I ran with just what I had on me.\" Another doe-eyed look was aimed at him. \"I'm not prepared for a week-long trip.\"\n\nHal glanced at her again and took deep breaths to calm himself. He finally nodded. \"Okay, we'll stop and pick up some items for you for the trip.\" At her look of anguish, he continued. \"I have a travel expense account.\"\n\nHer eyes got a little glassy again, but she forced her tears back. \"Thank you.\"\n\nHe gave her a nod, and they went back to driving in silence. It would take almost four hours to get to Columbus, so they settled back in the plush seats.\n\nAfter a while, Hal felt her eyes on him again. He glanced over cautiously, but she just had a look of intense curiosity on her face.\n\n\"What?\" he asked, wondering if he really wanted to know.\n\n\"I didn't see it, but your fight with those two, it didn't sound like any fight I've ever heard. It was so quiet.\"\n\nHe gave her a raised eyebrow in surprise. \"You've heard a lot of fights?\"\n\nShe nodded with a serious expression. \"Frank and his boys, the bouncers, they beat people up fairly often. Sometimes people drink too much and touch the girls. They take them outside, and we can hear it in the dressing room. I think they do it outside the window on purpose. Scares the girls.\" She examined her chipped nail polish as pain crossed her expression. \"Sometimes they do it just for fun. Take some poor sap outside and slap him around. Sometimes it's one of us. Me.\"\n\nShe gave herself a shake, then looked at him. \"The fights are always noisy with screams of fear, pleading, crying, cursing and yelling, and the slap of skin on skin. Always.\" She looked at him again. \"You were silent, and the fight was over so fast!\"\n\n\"I don't like fighting\u2014\"\n\n\"Liar,\" the monster whispered, but only Hal heard.\n\nHe took a deep breath. \"Hit hard to disable the opponent. End the fight quickly. Walk away.\"\n\nHe felt the monster's cool contempt at his words. He knew it was only satisfied when the opponent was dead.\n\n\"Inventory Control Manager,\" she wondered aloud, but quietly.\n\nHe remained silent. It was safer.\n\nChapter 2\n\nHal joined the rush hour traffic in the loop highway around the western edge of Columbus, Ohio. They'd made good time, even with a few potty breaks for Sam.\n\nThe first time they stopped, he'd waited in the car, and Sam had been a nervous wreck by the time she'd done her business and got back to the car. For subsequent stops, he went into the buildings with her and waited. This seemed to ease her fears of being left behind.\n\nOn one of their stops, he called ahead to the next motel he'd booked and managed to get the room next to his, too.\n\nSam finally managed to fall asleep, and he was struck by how innocent she looked when asleep.\n\nHe saw his turn off and exited the highway to enter the suburban outskirts. He spotted the motel, but they had some errands to run first. But before that, dinner.\n\n\"Sam? Time to wake up.\"\n\nEyelids fluttered, and big brown eyes looked at him. \"We're at the motel?\"\n\n\"I thought we'd have dinner first,\" he suggested, and her eyes lit up. He gestured to the GPS screen. \"There are a lot of restaurants in this neighborhood. Pick one.\"\n\nFrom how wide her eyes went, Hal thought this might have been the first time she'd been asked to choose. He nodded, so she scoured the screen with her eyes.\n\n\"They've got an Olive Garden!\" she exclaimed excitedly.\n\nHe glanced at her then the map where she was pointing. \"That's what you want?\"\n\nHer smile became a worried expression. \"You don't like it?\"\n\n\"It's fine! I like it,\" he insisted. \"Olive Garden, it is.\" Her smile returned twice as bright. He had a little trouble looking away from her smile.\n\nHe got them to the parking lot and found a spot close to the door.\n\nGetting out, they stretched and chuckled at their mutual groans.\n\nHe locked the car, and they made their way inside. The hostess behind the desk took one look at Sam's outfit, and her lip went up. The tall blonde moved a little closer to Hal's back.\n\nHe moved up and held the young woman's eyes with his. She seemed about to dismiss him due to his not terribly flattering clothes, but the manager arrived and saw the annoyed look on Hal's face. The man leaned closer so Hal could whisper something in his ear. The man's brows shot upward, then he pushed the young woman aside as he selected a table for them. He personally led Hal and Sam to a lovely table for four off to the side and seated them. Hal put the wall to his back and had Sam sit to his left, not to block his view. \"Your waitress will be right over,\" the man said with a smile he shared with Hal.\n\nWhen they were alone, Sam leaned in a little closer. \"What did you tell him?\" she whispered.\n\nHe shrugged. \"The snotty little brat was going to give us a hard time getting a table, so I told him I was a federal marshal, you were in witness protection, and we didn't need any delays.\"\n\nShe began to giggle then looked at him with wide eyes. \"It's true! You could be a marshal!\" She suddenly froze. \"Are you a marshal?\" she whispered hoarsely in surprise.\n\nHe grinned and shook his head. They looked at the menu and made their orders when the harried waitress rushed over.\n\nWhen the food arrived, Hal found it to be adequate, but he got more satisfaction just from watching Sam's enjoyment. When she finally sat back and rested her hands across the tiny bulge in her otherwise flat stomach, she looked truly relaxed.\n\n\"Full?\" he asked, and she nodded with a sleepy smile.\n\n\"Don't fall asleep now! We have to do some shopping!\" he insisted.\n\nShe pouted, then her eyes flicked up to see two men approaching their table. A look of dread washed over her features, and she gripped Hal's hand, making him look to see who she was afraid of.",
        "\"Holy shit! I knew it had to be you! Rapunzel, who'da thought I see you in my own town!\" a fat man exclaimed as he got closer. The thin man standing next to him just kept his eyes on Hal.\n\nThe talker looked around. \"Where's Frank?\"\n\nHal glanced at Sam, but she was frozen, so he answered for her. \"She's not with Frank anymore.\"\n\nThe man's beady eyes finally focused on him. \"Bullshit. Mr. Capello don't let no one go, and certainly not Goldilocks here. Who the fuck are you?\"\n\n\"I'm her friend. Who are you?\"\n\nThe chunky man snorted. \"I run the Kitty Club just south of seventy. Yeah, me and Frank go way back. I know Rapunzel here from her stage days when she'd be up there shaki\u2014\"\n\n\"I don't think she cares to recall those days,\" Hal said firmly, interrupting the smirking man whose eyes went cold.\n\nThe man passed his eyes over Hal, and the smirk came back. \"You're not the friendly type.\"\n\nHal contained his snort. The man had no idea. \"You could say that. Have a good evening.\"\n\nChubby nodded to himself, then nodded to his partner before fixing his eyes on Sam. \"See ya 'round, Goldilocks.\"\n\nWhen they were alone, the waitress hurried over, and Hal settled the bill.\n\nHe saw Sam was trembling from the visit. He needed to distract her, or he'd be dealing with tears again.\n\n\"Come on. We have some shopping to do.\"\n\nShe stood, and he wrapped his arm around her back to steady her. She glanced at him in surprise but clung to his hand to keep the arm there until they reached the door. He guided her to his car, then drove and parked in front of the supercenter.\n\n\"We can get the basics here, everything you'll need,\" he said as he exited the car again. She nodded and rushed to get next to him, taking his arm in hers. She glanced behind her.\n\nThey went inside, and Hal grabbed a cart. He immediately took her to the woman's wear section, and he directed her past the discount t-shirts rack she'd stopped beside.\n\n\"Please don't take this as a criticism. This is an opportunity to upgrade your wardrobe. You don't need to stick to t-shirts. Don't worry about the cost. If it looks nice on you and fits, we'll get it.\" She was looking at him with wide eyes. \"We need a week's worth of outfits.\"\n\nShe began tentatively. With each blouse she liked, she would turn to Hal and look for permission. He'd just nod. Only once did he shake his head, but only because he thought it didn't flatter her. She took the items over to the change room, where he stood guard over their cart. When she returned with only three of the blouses, he raised an eyebrow.\n\n\"The others didn't fit over my tits,\" she explained and received a scowl from a nearby salesclerk.\n\n\"Let's find some more,\" was all he said. Sam smiled as the three items went into the cart.\n\nWhile she hunted, he found a few items for himself in the men's wear section across the aisle; a three-pack of black t-shirts and a three-pack of boxer briefs, also black. A pair of charcoal grey running pants finished up his purchases, and all went into the cart.\n\nThe next hour went by with Sam trying clothes until they had at least eight days' worth of outfits. Along with the blouses, she had three dresses, which she seemed particularly thrilled about. He made her buy jeans with fewer rips, but she countered with three pairs of yoga pants, which he knew weren't going to leave much to the imagination.\n\nThroughout the activity, she modeled many of the outfits for him, and he saw she had an amazing figure. His original assessment of her from the glance at Pinkie's didn't take into account how long and toned her legs were or how the cutest apple bottom topped them. She had almost no extra meat on her bones, but her ass was truly perfect in his estimate. He caught himself comparing it to Lisa's, and his mood suddenly spiked downwards.\n\nHe struggled to shake the funk as he guided her to the lingerie section. He held her eyes with his. \"Again, get undergarments that fit and feel comfortable.\"\n\n\"The bras that can support these tend to be expen\u2014\" she began but stopped when he shot her a glare.\n\nHe held up a hand as he rubbed his face with the other. \"I'm sorry. I didn't mean to react like that. I just... have things on my mind. Don't worry about the price. If it supports those, it's worth every penny.\"\n\nShe snorted in surprise, then moved off between the cases with a happy smile on her lips.\n\nHe wondered where the hell those words came from. He wasn't a flirt. Not like Lisa.\n\nShe returned with arms full of bras and panties, which went into the cart. She caught the distracted look on Hal's face, but she didn't ask.\n\nThey were walking past the shoe section, and he stopped. \"You need some sandals for the dresses and definitely new running shoes.\"\n\nHer eyes lit up, and she went on the hunt for sandals. He spotted a nice pair of women's runners. White with pink accents and a well-cushioned sole. They were a little pricey, but they were well made and would give far more comfort than the ratty flat crap she had on her feet now. He grabbed a six-pack of ankle socks as well. These and the shoes went into his cart.\n\nHe walked over and saw her sitting on a bench, looking at her feet. Her eyes were sad. \"What's wrong?\"\n\n\"I can't wear sandals with nails like these!\" she sniffed.\n\nHe pulled up his cell's map application and found a nail spa nearby. \"Let's wrap this up. You can have your nails done at a place in the next shopping complex.\"\n\nLarge eyes held his gaze as she looked at him in bewilderment. \"Why are you being so nice to me?\"\n\nHe paused as he thought about that. Doing things for Sam was making him feel better. \"I-It's helping me too. I can't explain it better. Not yet.\"\n\nShe slipped her crappy runner on and stood. She put two pairs of strappy sandals into the cart and looked at him. \"Thank you.\"\n\nHe just nodded and got them walking again.\n\nThey stopped before the luggage, and she looked at him in confusion.\n\n\"Did you think I was going to make you carry your clothes from motel to motel in plastic shopping bags? You need a suitcase. Pick one. Medium size. The hard-shell ones are pretty good.\"\n\nShe looked around, and her eyes immediately locked onto a bright pink hard-shell a short distance away. She walked over and touched it almost reverently. She looked back at him. \"I've never owned a piece of luggage before.\" She looked down at it sadly. \"I've never gone anywhere to need one. This is the farthest I've been from home.\"\n\nLeaving the cart in the aisle, Hal walked over and pulled the piece out to give it a thorough examination. It passed his quality control review, so he carried it back to the cart and slid it underneath. He picked up a pink make-up kit to hold the cosmetics they'd be picking up next.\n\n\"What's that?\" Sam asked as the small bag went into the cart, too.\n\n\"Make-up kit. We're heading there next.\" He pushed off, and she rushed to catch up.\n\nThis took a little time, but he ensured she got moisturizer, deodorant, the cosmetics she liked, a few brushes and combs, a toothbrush, and toothpaste. He bought her the largest size pump bottles of shampoo and conditioner for her massive amount of hair.\n\nThe cart was quite full by the time they went through the checkout. Sam fretted about the cost until he'd had enough. He didn't want to snap at her again, so he just hugged her. Hal was as surprised he'd done it as she was, then a little amused to discover she was actually an inch taller than his 5' 9\". He was also more than a little aware of her soft breasts when they squished against him. He pulled back, and she smiled shyly at him.\n\nThey carried their loot out to the car, and he opened the trunk. She saw he had two black hard-shell suitcases inside already. He put her pink case inside, opened it, and quickly loaded the items they'd purchased into it. There was only a little room left when he was done. \"We forgot to get you sleepwear!\" he said in frustration.\n\n\"I don't wear clothes when I sleep,\" she confessed.\n\nHe glanced down at her chest, then pulled one of the black t-shirts from his purchases and tossed it inside her suitcase. He then closed the case. \"You should have something on in case you need to leave in an emergency.\"\n\nShe just nodded.\n\nThey drove over to the nail salon, and he followed her in. He found a spot to sit and wait while a pretty Asian woman brought her over to the pedicure area first. Seeing she was being taken care of, Hal leaned back in his chair and closed his eyes. He catnapped like this until he heard Sam and the nail technician approach him again. He opened his eyes and saw the widest smile on Sam's face. She was wearing disposable flip flop sandals to let the polish on her toenails dry, and he spotted her favorite hot pink color on her toes. She saw carrying her old runners, so he took them from her and dropped them into a nearby trash can.\n\nSam held out a hand, palm down, and he admired the polish they'd applied there too. It started off as a soft pink and faded into white at the tips of her fingernails. They weren't fake. Her real nails only extended a short distance beyond her fingertips. He told her they were lovely, and she blossomed anew.\n\nOnce more, Hal paid and gave the young woman a good tip for making Sam so happy.\n\nThey went back to the car, and Hal got them on their way to the motel, which wasn't far from the shopping district.\n\nThey went inside to register, and Hal got the key cards for the rooms, ground floor, side by side on the west side of the building. He drove them around the building and parked in the spot before one of the rooms.\n\n\"This is mine, and you get the other one.\"\n\nShe looked at him. \"We don't have to be in separate rooms,\" she said quietly.\n\n\"Yes, we do.\" He took a deep breath. \"I don't sleep too well these days. It's saf\u2014better for you to have your own room.\"\n\nShe watched him, then nodded.\n\nHe got their suitcases as she opened her room. With a small push, he rolled hers over to her. She grinned happily and caught its handle as it rolled by, to wheel it into her room before closing her door. He opened his door and rolled his cases inside.\n\nHe went back to her door and knocked.\n\n\"Who is it?\"\n\n\"It's Hal,\" he said with a smile. She did it right.\n\nShe opened the door and saw his smile, which brought a smile to her lips, too.\n\n\"If you need anything during the night, just knock on the wall between our rooms three times. I sleep very light. I'd like to get on the road tomorrow at 9 AM, so that means leaving the motel no later than 7:45 AM to get breakfast. We come back, brush our teeth, then load the car and be on our way. Okay?\"\n\nShe nodded, so he continued. \"Feel free, if you want to watch a movie\u2014\" She shook her head.\n\n\"Thank you. I'm going to take a long hot shower and wash my hair. That's enough for one night,\" she said.\n\nHe smiled as he took in the long braid. \"Okay, lock up, and I'll see you in the morning.\"\n\nShe smiled and closed the door. Listening for the secondary lock, Hal heard her snap it into place. Satisfied, he went into his room and locked up behind himself.\n\nHe stripped down and folded his worn and wrinkled clothes. He frowned, as in his haste to escape from his home, he hadn't packed any other clothes. All he had were the t-shirts, underwear, and running pants he just bought. His suitcase contained his boots and socks, so he'd switch from loafers to those tomorrow. He set aside clothes for the morning and carefully packed away the dirty items.\n\nNaked, he began his exercises. It was a mixture of stretches and stresses for different muscle groups.\n\nIt helped him sharpen his focus, clear away the day's noise, and put all of his daily actions into compartments for later review.\n\nThis routine always left him feeling cleansed, but tonight he couldn't achieve that due to Lisa's recent actions. The taint remained.\n\nThe best he could hope for was to achieve enough of a relaxed state that he'd be able to slip into sleep when he went to bed.\n\nAn hour in, he realized he needed to stop. The cleansing wasn't going to happen, and even relaxation seemed an impossibility.\n\nReleasing the monster on those two in the parking lot in Erie, yet not allowing it to finish them, had been a mistake. He could feel its alert presence in his mind. Waiting for the next opportunity to get loose again.\n\nHe wasn't concerned that the trucker and his friend might continue their predation. He'd left them with injuries that meant their driving careers were over. Walking without pain was likely not in their future, either.\n\nHe switched over to push-ups then sit-ups. When he felt a good burn, he jogged in place for twenty minutes and then walked into the bathroom to shower. The hot spray felt good, and he allowed his mind to wander, just a little. He thought about how much effort it must be for Sam to wash all that hair!\n\nAn image of her standing naked under the spray popped into his mind, and he forced it out.\n\nIn its place came a memory of Lisa in the shower with him. It was the last time he'd been with her. Compared to Sam, Lisa's body wasn't so tall, wasn't so slim, and she had more flesh on her ass. She knew how to get his motor going and how to drive him to madness. She wasn't above doing both together to reach a new high in her search for chaos and bliss. She was the most dangerous woman he knew.\n\nHe'd caught a twenty-something gardener with his pants down around his ankles as he tried to line his cock up with Lisa's asshole while she writhed under him on the edge of the bed. The man's frustration made him miss the sound of Hal entering the bedroom door behind them. He was a pothead, and the scent of weed was heavy on him and in the air as Lisa mumbled incoherently.\n\nHer eyes watching him in the mirror as he entered might have been a little glassy, but her crooked smile as she watched the monster break bone after bone in the screaming and retching man's hands and arms now seemed far more aware than she'd pretended she was.\n\nAs they stood together in the shower afterward, his pelvis was crushed up against her soft ass, his hot cock buried to the root in her ass, and his cum filled her. She was struggling and hoarsely moaning as he had one hand gripping her gushing pussy while the other was squeezing her throat, slowly choking the life from her.\n\nThe monster was sated, and Hal returned to his mind to feel her life on the edge of slipping away. He quickly loosened his grip, and Lisa sucked in a deep breath. He carefully lifted her off his softening cock and gently sat her on the bench in the shower.\n\n\"Fucking... coward.\"\n\nHe looked up into Lisa's tear-filled eyes and saw her disappointment. Her eyelids began to flutter as she spiked through a few more micro orgasms as sensation flooded back into her body across her raw nerves.\n\nHal ripped his mind away from that memory and concentrated on the mundane task of getting clean.\n\nPhysically, at least. He wasn't sure he'd ever be mentally clean again.\n\nChapter 3\n\nIt was the chirp of a key card that pulled Hal to full awareness. The monster was already moving his body, sliding him off the bed to roll soundlessly to his feet, the knife he'd pulled from under his pillow clutched in his hand. In his black t-shirt and matching black shorts, he was partially hidden in the shadows of the dark room. He slipped up to the wall next to the door and adjusted his grip on the knife.\n\nWhen the door burst open, time slowed to a crawl in the monster's perceptions. The tall, skinny man he saw at Olive Garden charged inside, gun in hand. His feet tangled in the bedspread Hal had arranged on the floor just inside the door, and down he went. His weapon went off as he fell on it, and he went still, his brains sprayed across the carpet.\n\nAs the first guy was tripping, a second man stepped through the door and got a fist to the gut. He began to double over. Hal grabbed the front of his shirt and felt something tearing under it. He pushed the man out the door as he reversed his grip on his knife to slam the pommel against the man's temple.\n\nHe released the crumpling man to dart into the open door of Sam's room. Chubby was standing a few feet inside the room, spinning to point his gun at Hal. Terrified, he put a bullet in the wall as Hal surged closer to drive his knife up under the man's ribs into his heart. The impact lifted the heavy man off his feet, and Hal used his momentum to carry the man like a shield as he charged the last assailant.\n\nThat man was fast and got his gun pointed at Hal, but the two shots he managed to squeeze off just hit the corpse.\n\nHal ripped his knife free of the body just as it collided with the last gunman. He darted his arm around and stabbed the final man in the throat, tearing open his jugular. The man squeezed the trigger once more, and Hal felt the wind of the bullet as it passed by. They all fell in a pile, and Hal drove his knife through the man's wrist, pinning it to the floor. He heard the squeal of tires on the pavement as their getaway driver got away. He crouched over the corpse as the gunman choked out his last breath. Hal was silent as he listened, but no one else was coming. He could hear terrified moaning coming from the bed.\n\n\"Sam!\" Hal called out as he pushed the monster back into the dark recesses of his mind. He left the knife pinning the man to the floor and moved cautiously to the bed.\n\n\"Hal?\" her voice asked quietly from under the sheets.\n\n\"Yeah, it's me. Stay there for a second. I'm just going to take a quick look around. You're safe here.\"\n\nHe went to the door and listened. Nothing. He darted outside and checked on the man he knocked unconscious. Lifting his shirt, he saw the microphone, wires, and tape he'd felt when he grabbed his shirt. The monster had wanted to kill him, but Hal still had override on kills.\n\nThe man was out and might have a mild concussion.\n\nHe went into his room and collected his cell. He dialed his handler.\n\n\"Report.\"\n\n\"Need assistance. Clean up. Attempted murder and abduction. Three dead, one captured wearing a wire.\"\n\n\"Shit. Give me the address, then sit tight.\"\n\nHal gave his handler the details then hung up. He went back to Sam's room. He heard her crying quietly.\n\n\"Sam? It's okay; it's over.\" He sat on the edge of the bed\n\nShe pulled the sheets down to her chin and looked around for him.\n\nShe squeaked when she saw the two dead men on the floor. \"These were the guys we met at Olive Garden, plus goons,\" he said.\n\n\"You\u2014you killed them?\" she said quietly.\n\n\"They weren't here to play. The skinny guy rushed into my room with his gun out. Ended up shooting himself in the head with it when he tripped. Stupid.\" He pointed to the others. \"These two were after you. Someone got away.\" He frowned when he saw Sam was still holding the blanket up to her chin.\n\nRed and blue lights suddenly filled the doorway as the local police arrived.\n\n\"Are you wearing the t-shirt I gave you?\" he asked, and she shook her head.\n\nHe sighed and pulled his off to hand to her. \"Put this on. The police are here, and they aren't going to be friendly. It's going to be okay, though. I made a call.\" He looked to the door as she struggled to pull the shirt on.\n\n\"POLICE! COME OUT WITH YOUR HANDS UP!\"\n\nHe sighed. \"Here we go.\"\n\nSam was staring in shock at Hal's back. It was a roadmap of pain. The scars were many and varied. She watched him stand and walk through the door, lit up by the lurid colors and flashing lights.\n\nThen it was her turn. She was grateful for his long t-shirt as she only had panties on underneath.\n\nShe tried to emulate his controlled movements, but she was just too frightened.\n\nShe stepped into the lights.\n\nChapter 4\n\nHal caught up on his sleep in the police's holding cell. There wasn't anything else he could do.\n\n\"Demon!\"\n\nHe opened his eyes and looked towards the entrance to the cell. \"Demmon.\"",
        "\"Whatever. You're getting out,\" the cop said.\n\nHal stood and walked over to the door, and the cop let him out of the cage. He followed the man out to a big room filled with desks and a few police, the night shift. As they hadn't given him any clothes to wear, he was standing there in his black shorts, and that's all. The room went quiet as people turned to stare at him.\n\nIt used to bother him how curious people were about the scars and burns, the visible signs of torture and pain he carried, but now he just ignored them. Sam was sitting with her back to him at one of the desks, talking to a female detective. She seemed okay for now. They'd given her a blanket to wrap around her shoulders.\n\nStanding a short distance behind Sam was his handler. Karl Gunderman was a man in his sixties who looked like he was in his forties. He was a small, slim man with a thick black beard and a buzz cut on top. His reality didn't seem to match the rich baritone voice on the phone. Hal had never seen the man smile, and he certainly wasn't smiling now. He approached Hal and quickly searched for new injuries with his eyes.\n\n\"I wasn't hit. A close call but no injuries,\" Hal said quietly.\n\n\"Why?\" Karl asked.\n\nHal snorted softly as he thought of Eve at Pinkie's and how she'd bullied him into taking responsibility for Sam. \"No choice.\"\n\nKarl's eyebrows rose. He looked to Sam, and Hal nodded.\n\n\"Why are you off program?\" Karl asked.\n\nHal winced as an image of Lisa flashed through his mind, and Karl frowned crossly. They'd worked together for so long they didn't need to speak in words to communicate. The man knew Lisa was the wildcard in the equation of Hal's life.\n\n\"I need the time. No more than a week,\" Hal said, looking into Karl's eyes. The man finally nodded.\n\n\"Can you do it without her, the trouble magnet?\" Karl said, gesturing to Sam. He'd already got a read on her.\n\nHal watched Sam from behind and wondered if she wanted to get away from him now that she'd seen what he was capable of\u2014well, the beginnings of what he was capable of becoming.\n\nShe must have felt his gaze or finally noticed how quiet the room had become as she turned her head and saw him standing there in his shorts and tortured flesh.\n\nSam was immediately on her feet and rushed to him to wrap her arms around him. She burrowed her face into his neck, and he felt her body trembling. His arms automatically went around her, as well.\n\nHal traded a surprised look with Karl, and then he shook his head to answer the man's last question.\n\nKarl frowned and shook his head in resignation. He held up a finger and mouthed one week. Hal nodded, and his handler left without another word.\n\n\"Ms. Dulane, I just have a few more questions,\" the female officer said, and Hal felt Sam hold him tighter.\n\n\"Sam is done answering questions.\"\n\nThe officer didn't like hearing that and got angry. \"This is an active investi\u2014\"\n\n\"Stand down, Officer Hanes.\"\n\nThe officer turned to see her CO frowning at her. \"Sir?\"\n\n\"Orders from upstairs. There is no case. Destroy the paperwork.\"\n\nThe female officer stared at Hal then nodded to her commander. \"Yes, sir.\" She moved back to her desk.\n\n\"Thank you,\" Hal said.\n\n\"Don't thank me. Not my decision.\" He handed over a large manila envelope containing Hal's wallet, keys, room key cards. Even an evidence bag with his knife was inside. Karl had done his job perfectly once more.\n\n\"The goons who busted in had key cards. Did you question the night desk clerk?\" Hal asked.\n\n\"He's in the wind, as is the driver, but even if we found them, there's no case to link them to,\" the man said with a grimace as if he tasted something unpleasant. He looked at Hal uncomfortably. \"You fucked up a sting operation we've been working on for over a year. That said, Officer Romano wanted me to thank you for not killing him.\" The grimace was back. Hal just nodded.\n\n\"We need to go back to the motel to get our stuff. Can we get a lift?\" Hal asked.\n\nThe commander nodded. \"It's been arranged. You'll meet the driver at the entrance to the precinct.\" He walked away without saying another word; his body language clearly showing his distaste for the entire situation.\n\n\"Let's go,\" Hal said to Sam, and she stepped back to look at him.\n\n\"We just get to leave? I don't understand. People died.\" She looked lost.\n\nHe couldn't explain it to her. She wouldn't understand. Maybe she'd decide to leave him here, now.\n\n\"Yes, we get to leave. There are no charges to file. It will probably just be reported as a failed robbery ending in the assailants' deaths and justifiable self-defense on our\u2014my side. I'll understand if you don't want to continue on with me\u2014\"\n\n\"No!\" Sam clung to his arm. \"Don't leave me behind!\" she whispered huskily. \"I don't want to be alone!\"\n\nHe blinked at her, then nodded. \"Okay, let's go back to the motel.\"\n\nThey went down the stairs to the ground floor where a man was watching them with a smile. \"Mr. Demon?\"\n\n\"Demmon,\" he automatically corrected.\n\n\"My apologies! I'm to drive you back to your motel.\" The man was a little mesmerized by how Sam was filling out her black t-shirt.\n\n\"Let's go,\" Hal said to jar the man back to the task at hand.\n\nThey followed him out to a minivan and climbed onto the middle bench seat as the driver hustled to take his place behind the wheel.\n\nThe drive back didn't take long, but Sam held Hal's arm the entire way. She continued to tremble.\n\nWhen the driver dropped them off at their rooms, a hint of the sun approached the horizon. Police tape was still encircling the area before the room entrances, and two police cars were stationed outside this. Hal walked up to the police car closest to the rooms, and the officer behind the wheel glared up at him.\n\n\"We're going inside to get our bags, and then we're leaving. Are you here until we leave?\" he asked.\n\nThe cop gestured to the other cruiser. \"He's protecting the site. I'm your escort out to the city limits to make sure you do leave,\" the officer snapped back.\n\nHal nodded and walked over to the police tape. He carefully untangled it from his rental and cleared their way to the doors to their rooms. Both doors were broken.\n\nHal noticed a bullet hole in the window of Sam's unit. He was relieved to see the bullet had stopped at the ceiling overhang. It could easily have traveled to one of the rooms in the building across the parking lot.\n\n\"Get dressed for the day, get your suitcase, and pack your items into it. Then meet me here in front of the car. We're getting an early start today, so we'll get breakfast in Springfield,\" he instructed. She nodded and went to the open door.\n\n\"I can't!\" she choked as she looked inside.\n\nHal sighed to himself and led her inside. He asked her to choose some clothes and get dressed. He packed her remaining clothes into the case. He stepped over the large bloodstain in the carpet and collected her items from the washroom into her make-up kit. He carried that back out and put it into the case. He held open a plastic bag for her dirty items then added this to the case before closing it up. He looked to Sam and blinked at the transformation.\n\nShe was wearing his black t-shirt under a soft, light grey button-down sweater with a deep 'V' neckline.\n\nBelow this was dark grey yoga pants, which clung to her legs like a second skin. He could only imagine what they looked like on her ass.\n\nShe also had on the new sneakers and ankle socks and was waiting for him to say something.\n\n\"Wow! You look very lovely in that outfit,\" he managed.\n\nHer smile lit up her whole face, then became shy.\n\nHe gestured for her to take her suitcase as he left the room with her following. He stepped into his unit and sighed as they hadn't made any effort to clean the gray matter from the carpet and walls. He turned to face her. \"You should probably wait here. The room is... unpleasant.\"\n\nShe nodded, then he went inside. He carefully stepped around the mess to get into his bathroom, where he took a quick shower and dried off. He shaved and used deodorant, then packed his kit.\n\nFinally, he cleaned his knife. He'd do a more thorough job that night.\n\nHe went into the hall and stepped around and over the mess. He heard a squeak and looked up to see Sam inside the room and turning to face the door. He looked down at his naked body.\n\nShit.\n\nHe quickly pulled on some briefs, the running pants, and his last black t-shirt.\n\nHe unlocked the larger suitcase and dug out a pair of socks and his combat boots. He sealed up his luggage, locked them, and carried them to the doorway. \"Let's go,\" he said, and they stepped outside.\n\nHal loaded their suitcases into the trunk then held Sam's door open for her.\n\nShe sat and pulled her legs inside as he watched them.\n\nHe closed her door and walked around to his. Once he started the car, the police cruiser behind him backed up to unblock the way. Hal pulled out of the spot and drove them back through the suburb streets to get them onto the interstate. The police car tailed them all the way to the next exit, where it peeled off and left the interstate.\n\nHal looked over at Sam, leaning back in her seat with her head turned to face him. \"Rough night, huh,\" he said gently.\n\nShe smiled weakly at him. \"Actually, I had a lovely shower, and my hair is cleaner than it's been in months. The bed was comfortable, and I was getting wonderful sleep until those men broke into my room. Then I was just terrified.\" Her smile became a deep frown. \"I thought they'd shot you and were going to take me back to Frank.\"\n\nHe nodded as he could imagine that's what it sounded like. \"But that's not what happened,\" he said quietly.\n\n\"No! I pulled the blanket over my head and jumped every time a gun went off. I almost peed myself. I was so scared!\" She looked at him with wide eyes. \"Then it was over, and you were talking calmly to me like nothing had happened. You weren't even breathing hard, and they were all dead.\"\n\nHe shook his head as it was important to him. \"One lived.\"\n\nShe just looked at him as they drove through the countryside. She didn't know this man, yet he'd beaten up men trying to rape her. He'd taken her with him on a trip he hadn't wanted to share. He'd paid for her expenses to dress and feed her, and now, he'd killed for her. She didn't know how to react. He didn't look like he was expecting anything from her, but she owed him so much!\n\n\"Thank you for saving me,\" she said, tears trying fall from her eyes while she fought back because he didn't need them.\n\nHe glanced at her and nodded.\n\nThe remaining miles to Springfield disappeared under their wheels, and he pulled off the highway for breakfast.\n\nThey ate in companionable silence and were soon back on the road.\n\n\"Where are we staying tonight?\" she asked.\n\n\"A little place called St. Charles, Missouri, which is just west of St. Louis. I've got a hotel room booked. It has two queen beds, as that's all they had. I could try to find us a hotel with two roo\u2014\"\n\n\"No! I mean, that's not necessary. After last night, I think I'd feel safer if we shared a room,\" she said hopefully.\n\nHe pondered that. Safer. Would she be safer in the same room as the monster? He'd given it the lives of two men last night, so his dreams should be calm... for a time. He was feeling remarkably centered this morning. As long as he didn't think about the trip's ultimate destination and the decision he'd have to make. He refocused on Sam, who looked like she'd been holding her breath while she waited for an answer.\n\n\"Ok, we can give it a try. I must warn you. I don't sleep well, and I react to surprises in dangerous ways, as proven last night. You'll need to tell me if you're getting up to go to the washroom before you get out of bed. Moving around without telling me might be... bad.\"\n\nShe nodded to him thoughtfully.\n\n\"Waking me by talking to me is fine, but don't approach the bed until I'm awake and responding verbally, in a normal voice,\" he explained.\n\n\"Is it a condition?\" she asked, and he felt the question cut deep.\n\nHow was he to explain this? He couldn't. He wasn't even allowed to. Still, he could offer her something.\n\n'Yes. I... see someone about it.\" That was safe enough to share.\n\nShe nodded, then settled back in the chair to look out her side window. He let out a breath he hadn't realized he was holding. He didn't want to lie to her.\n\nSoon the endless flat expanse lulled Sam into sleep. Hal realized she hadn't been able to get any sleep at the precinct.\n\nNow, he had time to think, but all he could think of was Sam and how pretty she looked in her new outfit. He felt that pulling sensation again, the one he hadn't felt for some time.\n\nHe pushed that out of his mind as it reminded him of his behavior the day he met Lisa in high school.\n\nWhile he hadn't known it on his first day in the new school, Lisa was a shit disturber and a major cock tease. The entire male student body, and most of the male teachers, were in a constant state of blue balls around her, and she loved every minute. Her ability to manipulate any male within sight or earshot made her both revered and despised in equal measure.\n\nHal had been through the orphanage/foster home/juvie hall/public school system grinder by the time he reached the school Lisa was terrorizing. When he was inflicted upon the same school population, he was well on his way to complete social breakdown. His streak of self-destructive behavior was out of control.\n\nLisa immediately recognized a kindred spirit and hooked her crazy train to his runaway engine that would. They started their rebellion by having sex on the principal's desk with the school's PA system active. Their actions just escalated from there.\n\nLisa would pretend some jock was getting lucky with her, and Hal would beat him to within an inch of his life then ravage Lisa to punish her. He hadn't understood; he was doing exactly what she wanted. She pushed him harder and harder, and the fights continued. By the end of their first month together, they were racing across state lines in a stolen school bus, its original driver left bloody and beaten in the school parking lot.\n\nThe judge at their trial had military connections and gave Hal the choice of rotting in a cell or attending a special program that would help him harness the excess energy he had. It sounded better than jail, so he agreed to join the program and disappeared into their black box.\n\nLisa was assigned more typical psychotherapeutic treatments. She learned the rules of that game and manipulated her way out the other side with her high school diploma and a scholarship she used to train to be a dental hygienist.\n\nTen years later, Hal was one of the biggest success stories the ghost-ops project ever had. They announced he was ready for the next phase. He was put back into the civilian population, a managerial job in a small company in a small city in northern New York State. He was still on active duty and was frequently sent on missions to different hellish places around the world, but he always came back, though not always intact. He'd heal and step back into his useful role in society. His success in the program continued. Eventually, he no longer returned from missions injured. Those lessons were over.\n\nThen came the day he spotted her.\n\nLisa was eating lunch in an outdoor caf\u00e9, and a young man at the next table was desperately trying to win her attention. She was twisting him around her little finger pretty well, and Hal felt his need for her pulling at him as well.\n\nHe'd walked right up to her table and sat across from her. The young man tried to object, but Hal simply seized his little finger in a painful grip and calmly asked if he could live without it.\n\nHal and Lisa spent the rest of the day trying to fuck each other to death.\n\nHe surfaced from his memories painfully erect. Lisa had always had that effect on him.\n\nHe understood now; it wasn't a healthy relationship. His handler had said as much on a few occasions. It was only Hal's continued excellence in the missions he was assigned that allowed him to continue his marriage to her. He understood that any threat to the performance of his duties would be met with a swift correction.\n\nHe was once more pulled back to the present by signs for Terre Haute. They'd stop for lunch here, and he was leaving the choice up to Sam once more.\n\nAs he pulled off the ramp, he gently called out to her. \"Sam, we're stopping for lunch.\"\n\n\"Hhmmnah? What? Lunch?\" she asked as she blinked the sleep from her eyes. \"Where are we?\"\n\n\"Terre Haute, Indiana. I'm just going to drive up the street to see what options we have.\"\n\nThey'd gone a few blocks when Sam made a small sound indicating something had caught her interest. It was an Applebee's, so he pulled into the parking lot.\n\nShe looked at him. \"Are you okay with this?\"\n\nHe smiled and nodded. \"It's fine.\"\n\nThey got out, and he scanned the area with his eyes quickly then locked up as Sam waited for him in front of the car. He moved to her side, and she took his arm as they walked to the front door. He wondered when this touching started, then realized it was in the police station. He was going to pull free, but he realized he didn't really mind. Sam seemed happy too.\n\nThey went inside, and Sam was all smiles when the pretty hostess gave her a big smile and guided them to a table. So much different from the treatment she'd received at dinner the night before.\n\nHal took a seat watching the door, and Sam surprised him by sitting next to him, but then, she had the night before, as well. She poured over the menu while Hal quickly settled on a small salad. Truthfully, he wasn't hungry.\n\nThe waitress was equally friendly with Sam, and her cheeks were pink from smiling so much.\n\n\"Thank you so much for these new clothes! They make such a difference!\" she gushed to him when they were alone once more.\n\n\"They're just clothes. You're the same person. If it takes a new outfit for them to treat you properly, then that reflects on them, not you,\" he said with a small shrug.\n\nShe leaned against him as she squeezed his arm against her. That felt very good, but Hal was uncomfortable about feeling this good.\n\n\"Sam, I need you to stop.\"\n\nShe leaned back and looked at him. \"I-I'm so sorry! I didn't mean to make you think I was after sex!\" She began to slide out from the bench, but he seized her hand.\n\n\"No! That's not what I was thinking. You've been very sweet, and what you've gone through has been very difficult. I get that you may feel grateful.\" He paused to take some deep, even breaths as he didn't want to talk about his wife, but it had become necessary. He saw the sad expression on her face, so he placed his other hand over hers and looked into her eyes.\n\n\"I'm married and have been for years. That's very important to me, but... recent events have shed light on a very ugly possibility... probability.\" He winced as pain shot through his chest. He took a cleansing breath and started again.\n\n\"I'm not very good at reading my wife. She's much better at reading me. I-I think she's been manipulating me our entire marriage. More likely, she's been doing it since we met in high school. I-I'm not sure if she loves me... or ever did... or is even able to. I finally recognized the patterns a few days ago. I need to deal with this before I can make any changes to my life.\" He sighed deeply. \"I can be absolutely oblivious to emotional clues. It's one of the things I like about you. I can see your emotional state very easily. It's right there on your pretty face. It's such a relief.\"\n\nSam looked like she might cry again, but she had a smile on her lips. \"I'm sorry about your wife. I have to admit I've heard many men tell me their wives didn't understand them, their marriage was a mistake, and they were interested in sex. This is the first time I've heard the opposite. It's... refreshing,\" she sighed. He raised a brow in surprise, so she smiled shyly. \"I like you too, but I won't pressure you into making changes until you're ready.\" She tilted her face down and looked at him from under her bangs. \"Would it be okay for me to continue holding your arm and hand? Just because it calms me,\" she said hurriedly.",
        "He looked at her anxious expression and nodded. She was so much easier to read than Lisa.\n\nThe waitress arrived and took their orders.\n\nWhen she left, Sam looked at Hal in surprise. \"Only a salad?\"\n\nHe snorted. \"These aren't exactly the healthiest of salads. If I added the dressing, it might match your chicken tenders and fries for calories.\"\n\nShe looked worried. \"Am I overeating?\"\n\n\"No, that's not what I said or meant. Eat what you like. You seem to take care of your body... very well,\" Hal insisted awkwardly.\n\nThat shy smile returned to her lips as her eyes looked down at his hand on hers. She noticed a scar in the middle of the back of his hand. Her brow furrowed as she turned his hand over to see a corresponding scar on his palm. Something had punched through his hand! She recalled seeing his back was severely scarred as well.\n\n\"How did you get all these scars?\" she asked.\n\nHe shook his head. \"I can't talk about them. You shouldn't ask about them.\" She nodded, but she looked a little nervous. \"I just think of them as lessons. I don't get them anymore.\"\n\n\"Inventory Control Manager?\" she asked.\n\nHe nodded. \"That's my civilian job. We won't talk about any other.\"\n\nShe nodded definitively then smiled at him. \"What kind of movies do you like?\"\n\nHe looked at her cautiously. \"You'll laugh.\"\n\nNow she grinned at him delightedly. \"I promise I won't! What is it? Musicals?\"\n\nHe gave her an odd look. \"Musicals? No!\" He looked around, but they were still alone. \"Animation. Anything animated.\"\n\nSam's jaw dropped. This wasn't what she'd expected at all! \"What was the last one you saw?\"\n\nHe smiled as he remembered. \"Spider-Man: Into the Spider-Verse. A truly wonderful film!\"\n\n\"So, you like superhero movies?\" she reasoned.\n\n\"No, not particularly. The movie I saw before that was My Neighbor Totoro.\" At her lost expression, he continued. \"It's a Japanese animation about a family that moves into the countryside and meets woodland spirits. It was a sweet movie.\"\n\nShe smiled at him. \"You are a surprising man!\"\n\nHe looked at her cautiously. \"That's... good?\"\n\n\"Very good!\" she insisted.\n\nTheir food arrived, and Sam's look of delight made Hal feel good. He realized she made him feel this way far more often than Lisa ever did. His wife only seemed happy when he was off-balance around her.\n\nHe ate his salad while pondering this fact.\n\nWhen they finished, he paid and asked the waitress where the closest Walmart was. She directed him to a mall instead, just south of the highway.\n\nIt didn't take long to get there, and once inside, Hal found a shop to pick up more black t-shirts and running pants.\n\nSam enjoyed walking through the mall with him, so that's what they did. He saw her eyes lock on a display of gold bangles as they passed a jewelry store. They were on sale.\n\nOn impulse, Hal directed their steps into the store as Sam's eyes widened in surprise. He realized he should buy her one as it would be cruel to dangle them before her only to pull her away. He wondered what compelled him to go in.\n\nWhen they left the shop, Hal's head was spinning from the clever sales pitch, his wallet was four hundred dollars poorer, and Sam was floating on cloud nine with five lovely bangles around her left wrist chiming together happily.\n\n\"Oh my god, Hal! I've never worn anything so lovely!\" she cooed.\n\nHe just nodded and got them outside and into the car. He stopped to fill the gas tank. Then it was back onto the interstate towards St. Charles.\n\nHe recalled, for this overnight stop, he had a single hotel room with two beds. The admiring looks he was getting from Sam was making him uncomfortable. He had to get out in front of that.\n\n\"Sam, I don't want you to get the wrong idea about the bangles.\" He saw he had her attention now. \"I didn't buy them for you with any expectations on my part. I'm a married man and follow the vows I made. I-I don't know why I bought them, except they made you smile... and you haven't smiled enough recently.\"\n\nHe glanced over, and her lovely doe eyes were all glassy again, and she was biting her lip. \"Damn, I've upset you again!\"\n\nShe vigorously shook her head. \"You're a lovely man. Thank you for thinking my smile was important enough to spend too much money on this beautiful gift for me!\"\n\nHal nodded and faced the road again as he went over her response in his mind. It seemed safe enough, so he put it aside.\n\nThe scenery continued to be relatively dull, and Sam finally nodded off. Later, Hal woke her so she could witness the crossing of the Mississippi and Missouri rivers. She was pleased to be able to say she did.\n\nThe hotel was very close to the highway. They drove around the complex it was part of and noticed a movie theatre.\n\n\"We have time. Would you like to see a movie? We can get dinner afterward,\" he suggested.\n\nShe grinned and nodded. \"You pick the movie, though!\" she replied.\n\nThey parked and walked up to the entrance to read the listings. \"Is there anything you don't want to see?\" Hal asked as he wasn't familiar with any of the films showing.\n\n\"I don't like horror at all. Are you okay with comedies?\" Sam asked, pointing to a movie poster.\n\nHe nodded, so he bought the tickets, popcorn, and drinks. The theatre was pretty empty, so they had good seats.\n\nMost of the movie's humor was lost on Hal, but he delighted in hearing the husky purr of Sam's laughter, so he enjoyed the movie vicariously through her.\n\nAfterward, when Sam learned that he'd never eaten there before, she directed him to the nearby P. F. Chang's. He saw Sam subtly showing off her bangles, and the hostess complimented her on them. She glowed with happiness, and Hal acknowledged it was an excellent investment. He also thought they looked very attractive on her wrist.\n\nSam made Hal try some items from the menu, and he found most were quite good. He didn't mention the time he'd spent in mainland China. This food was nothing like what he'd had there.\n\nWhen they were done, they drove to the hotel and checked in with their suitcases and Sam's backpack. They went up to their room, which was another first for Sam, while to Hal, it was just another hotel room.\n\n\"I'll take the bed closest to the door. Again, call out if you need to get up. Don't approach my bed without speaking with me first. I need to verbally respond before it's safe.\"\n\nSam watched him with a serious expression and nodded.\n\n\"If you want to use the washroom first, go ahead. I do a workout before bed.\"\n\n\"Really? I heard exercising before bed made it harder to sleep,\" she said in surprise.\n\n\"Not for me,\" he said with a small shrug. \"Feel free to watch TV or a movie. I can tune that out.\"\n\nHe opened his suitcase and took out his shorts. He realized he wouldn't be able to exercise nude. That meant he'd have to keep his underwear on. He didn't like to change his routine, but circumstances demanded it.\n\nHe undressed down to his skivvies and set today's clothes aside to pack away later. He paused when he saw Sam was watching him intently. \"What's wrong?\"\n\nHer eyes were taking in all the damage. \"Lessons, huh. Were you a slow learner?\"\n\nHe smiled self-consciously. \"Actually, faster than most.\" He couldn't tell her that most of the other agents in the program didn't survive past their seventh field mission. At her skeptical expression, he felt compelled to explain but couldn't give her details. \"Just... really unforgiving teachers.\" He nodded and moved to the far end of the room by the windows. He pushed the chair, footstool, and lamp aside to give himself space to exercise.\n\nHe looked at Sam. \"Avoid this area.\" When she nodded, he began. Today, it was fighting techniques. Having set himself within a safe zone, he started with punches and blocks and cycled through multiple disciplines until he progressed to kicks and leg sweeps. These were particularly tricky as he didn't have any margin for error. Kicking the wall, bed, chair, or air conditioning unit would result in a broken bone. Maintaining his position throughout the practice session was critical, so he forced all distractions from his mind.\n\nWhen he reached the end of the exercise and was moving on to focus on muscle groups, he noticed Sam was watching him from the bathroom door. She was biting her bottom lip, and her face was flushed.\n\nHe paused, breathing hard, sweat running down his skin. \"Something... wrong?\"\n\nShe ducked into the bathroom and closed the door with a definitive click.\n\nHal wondered what that was about. He pushed it from his mind and went back to his exercises.\n\nHe was finishing up when Sam returned from the bathroom. She was once more wearing the black t-shirt, but he noticed she had another one in her hand. He looked over to the pile of clothes he wore today, and his shirt was missing. He stopped and pointed to the spot where his shirt had been as he looked to her.\n\n\"I'm wearing it,\" she said quietly. \"It helps me relax.\"\n\nHe wasn't sure how to respond to that, so he picked up his shorts and walked into the bathroom to take a quick shower. When he returned, he saw Sam leaning back against the headboard of her bed, reading a paperback she'd taken from her open backpack. She looked over at his body.\n\n\"Do you have any body fat?\" she asked.\n\nHe looked down at his body and poked his belly and sides, finding none. He shrugged then put his dirty clothes in the plastic laundry bag in his suitcase. He set out clothes for tomorrow, then closed the case.\n\nHe opened his other suitcase and took out his knife and tools. He took these into the bathroom and properly cleaned and honed the blade.\n\nThe kit went back into the suitcase, which he locked. The knife he placed on the nightstand.\n\nHe pulled off the bedspread and put it in the hall before he recalled this might trip Sam in the night. Instead, he hung two hangers off the doorknob as an early warning system.\n\nDone, he went back to his bed and stretched out on top.\n\n\"You don't get under the sheets?\" she asked.\n\n\"No. I don't like the sensation of being held down. Also, it's too easy to get tangled.\" He slipped his knife under his pillow.\n\nHal rested back on the pillow and felt his mind settling down. He was surprised by how quickly it was happening as he expected Sam's presence would be a distraction. Instead, he felt... comfortable.\n\nThat strange new sensation followed him down into the deepest sleep he'd had since...\n\nChapter 5\n\nIn the morning, they had breakfast in the hotel's small restaurant, brushed their teeth, packed up, and headed down to the car. Hal put their luggage and her bag in the back and did a quick check of the vehicle before opening the door to let Sam inside. She looked at him curiously, but he just smiled and shook his head. He didn't mention the visible handprint on the trunk hood.\n\nAs they pulled onto the interstate, he scanned the vehicles in his rear-view mirror to see if any of them matched the cars he'd scanned the day before. Nothing jumped out at him: too many similar makes and models.\n\nHe'd keep up the habit of watching. If someone was following them, they'd make a mistake sooner or later. Then they were his.\n\nHe felt the monster stir in anticipation.\n\n-=-\n\nThe drive to Oklahoma City from St Charles was a long one, and both of them were grateful for the hotel bed at the end of the day.\n\nThey'd gotten into a road trip rhythm and found they were enjoying each other's company.\n\nHal had once more grabbed an image in his mind of the cars following him off the highway and was narrowing down the potential vehicles that might be following them. The fact that they weren't being confronted meant their tail might be someone his handler arranged to ensure their asset was behaving.\n\nIt also might be someone else, waiting for the right moment to strike. He remained alert for the second possibility.\n\nThe next morning Sam decided the weather suited one of her new dresses, and he let her know how lovely she looked in it.\n\nWhile her chest was bigger than the dress might have been designed to support, it wasn't blatantly displaying her cleavage, so Hal did his best to refrain from staring... too much.\n\nIt also showed off her long legs to their best advantage. It became clear to Sam that Hal thought she was a knockout. Her shy smiles showed she appreciated how the outfit drew his eyes.\n\nHer backpack didn't suit the outfit, so it stayed in the trunk.\n\nTheir mileage for the day would be less than the day before, and their target was the much smaller town of Santa Rosa, New Mexico. Hal had a motel room booked, and he confirmed it had two beds.\n\nThe landscape was changing, and as it did, Sam noticed Hal's mood was changing with it. While he wasn't a big talker, he became quieter as his eyes scanned across the scrub.\n\nWhen they finally reached their destination and took the off-ramp to leave the Interstate, she noted his intense interest in the rear-view mirror. There was very little traffic following them.\n\n\"Gotcha,\" Hal muttered quietly.\n\nSam looked at him then glanced back, but she saw nothing special about the three cars coming down the ramp.\n\n\"Is someone following us?\" she asked nervously.\n\nHe nodded as he pulled onto Route 66 to drive up a hill for a short distance before turning into the parking lot of their motel. Hal stopped the car before the office and stepped out to watch a dark sedan signal to turn into the gas station across the street then change their mind to drive onwards.\n\nSam stepped out of the car to look over at Hal nervously.\n\n\"They're blown. We'll see if they give up or continue,\" Hal said, memorizing every detail of what he'd seen.\n\n\"Are they going to attack us?\" Sam asked with a tremble in her voice.\n\nThat brought Hal's attention back to Sam, and he saw how nervous she was. He shook his head. \"I don't believe so. My impression is that this is an observation team. They're keeping an eye on us and where we're going. If I'm wrong about that please don't worry. I can deal with them. I won't let them touch you.\"\n\nSam smiled at him across the hood of the car, but he could tell she was still nervous.\n\nThe monster whispered to him that it needed to kill the men stealing her peace of mind. He was a little concerned about the possessive behavior it was displaying, but he agreed with the dark presence for once. He pushed that aside as he needed to take care of Sam first.\n\nHe went into the office with his hand on her back, which seemed to calm her. He registered and paid for the room but got an odd look from the clerk when he confirmed once more that there were two beds. The clerk's eyes were otherwise locked onto Sam's generous bosom.\n\nThey drove the short distance to the room, and he backed the car into the spot before their unit on the ground floor. They brought their luggage inside, minus Sam's backpack, and took a look around. It was sufficient, if not as updated as the other motels/hotels they'd been in.\n\n\"I'll take the bed closest to the door,\" he said. \"Same rules as the hotel. Okay?\"\n\nSam nodded and smiled as the previous night had been smooth. She'd had to get up once, and he'd responded immediately when she called out to let him know she needed to use the bathroom. She could have sworn he was deep asleep from the soft breathing she'd heard, but he must be as light a sleeper as he claimed.\n\n\"Let's see what culinary delights await us in Santa Rosa!\" Hal said with a smile as he opened up the map application on his cell.\n\nThey reviewed their options and decided to try out Joseph's Bar &amp; Grill as they had some Mexican favorites of Hal's.\n\nThe drive was short, and they managed to get a booth when they were seated. Hal convinced Sam to try the Chicken Quesadillas while he had the Tamales.\n\nHal surprised Sam when he spoke to the waitress in Spanish to place their order. The young woman took their order with a wide smile.\n\n\"Aren't you just full of surprises! How many other languages do you know?\" Sam teased.\n\nHal smiled self-consciously. \"A few.\"\n\nSam's eyes widened as she realized he was serious. \"The Mysterious Mr. Demmon,\" she sighed as she assumed this might be something else he couldn't explain. She couldn't suppress her curiosity. \"What ones?\" she asked, hopefully.\n\nHal thought about it and realized he didn't have to answer why he learned the languages.\n\n\"Spanish, French, Italian, Portuguese, Mandarin, Cantonese, Arabic, Russian, Turkish, Hindi, and English, of course. I'm not an expert in all of them, but I can make myself understood, and I understand enough to get by.\"\n\n\"To my ear, you speak Spanish like a native!\" she exclaimed.\n\nHe looked out the window, and his mind took him back to his fragmented memories of his childhood. \"I-I think I spent some of my earlier years in a similar town. It's bringing back memories. Not all of them are good.\"\n\nSam gave him a sad look. \"You don't remember where you grew up?\"\n\nHe shook his head and shrugged as he forced a smile onto his lips. \"It doesn't matter. That was then, and I live in the now,\" he recited. He couldn't explain to her that much was lost when the doctors started manipulating his brain. All he knew was the memories that remained weren't happy, but he could function in society now.\n\nShe nodded, but her eyes never left his.\n\n\"How about you? Ever have an urge to learn another language?\" he asked to direct the attention away from himself.\n\nShe blushed. \"I don't think I could learn another language! Besides, isn't English spoken around the world?\"\n\nHe chuckled. \"It is spoken in a lot of places, but not everywhere. Get away from the major cities' urban centers where global business is conducted, and the local languages dominate. Move further into the countryside, and local dialects take over. To them, the US might as well be Mars. The world doesn't revolve around the US. That's one of the most important lessons I've learned... in my travels.\"\n\n\"I'd like to travel one day. This trip has been eye-opening already. I'm seeing so much of the country!\" Sam said with a grin.\n\nHal found he was beginning to crave those smiles! He loved those crazy fangs of hers and how they widened her grins, adding a touch of hilarity to her smile. His... need to see her smile worried him. He wasn't sure of their\u2014his future. Everything hinged upon what would happen in Los Angeles.\n\n\"What's wrong? You were smiling, and then it suddenly looked like you might cry,\" she said gently.\n\n\"Cry? No, I haven't done that since... it's been a very long time.\" His mind recalled the hard days after the trial when he was a teen. When he was first separated from Lisa and sent off to the Military hospital. There'd been tears then and more emotions he didn't want to acknowledge. The process to create who he was now had been brutal and painful, not something he wanted to dwell on.\n\nThe waitress saved him from the abyss of his memories when she arrived with their plates. He switched back to Spanish to thank her. He also complimented her and the restaurant staff for their excellent and prompt service. The young woman bounced happily on her toes as she thanked him in return before fleeing back to the kitchen.\n\n\"I think you enjoy that very much,\" Sam said with a knowing smile.\n\n\"It's true,\" he said in acceptance.\n\nHal proceeded to instruct her on how to eat her Quesadillas.\n\nAfter her first bite, she beamed him a delighted smile. \"Oh my god! This is my new favorite meal!\" she cooed.\n\nChuckling, Hal tucked into his meal. It was delicious, and he nodded in appreciation.\n\nThey didn't waste time talking when there was food this good to occupy their mouths.\n\nWhen they finished the main course, they ordered dessert. Sam went with the coconut cream pie while Hal selected apple pie ala mode.\n\nThey both agreed that they had overeaten when they leaned back against the bench cushions, but they were happy.",
        "Hal basked in the first genuine feelings of complete happiness he ever remembered feeling. He was free of tension, and his company was lovely and equally happy. She enjoyed... being with him. There were no expectations or judgments. This utter peace and bliss felt precious, fragile, and wondrous.\n\nHe suddenly began to wonder why he'd never felt this way with Lisa. Yes, she excited him, but soon enough, he'd start to feel unworthy, insecure, and the pressure would mount until he finally exploded into rage. Lisa would then have him right where she wanted him.\n\nNow, he felt his peace was in danger of popping like a soap bubble. Like a self-fulfilling prophecy, his anxiety over this most recent revelation destroyed his feelings of contentment. He did his best to keep it from his face, but Sam saw his expression change and watched him with sad eyes.\n\nHe paid the bill and left a generous tip. They wandered into the attached gift shop and looked over the memorabilia and souvenirs. On a whim, Hal picked up a CD of classic music from the heyday of Route 66.\n\nSam held up a dark blue t-shirt with a large route emblem for the highway on the chest. He saw how it was resting over her boobs and suddenly imagined how great it would look on her. She was smiling at him mischievously as she bit her lip. He plucked the shirt from her fingers and added it with the CD on the counter to buy it while she giggled with her throaty voice.\n\nThey walked out to the car, and his instincts ensured the area was safe before they got in. His peace of mind was gone.\n\nThe hotel was their refuge for the night. Hal locked up and made his preparations. Due to the heavy meal, he decided to move his exercise session to the morning. He stripped down and put on his shorts while Sam was showering. When she exited the bathroom, he saw her long, blonde locks were still wet. He suddenly had the urge to touch it.\n\n\"May I brush your hair?\" he blurted.\n\nSam smiled in surprise at him and nodded, handing him the brush as she sat at the end of his bed. He moved closer to slide his hand between the back of her neck and her hair. She sighed at the sensation of his gentle touch. He ran the brush through her beautiful hair, from her scalp all the way down to the ends. He was mesmerized by the sheer amount of hair she had and how soft it was.\n\n\"Your hair feels wonderful. Are the shampoo and conditioner working out for you?\" Hal asked softly.\n\nShe was tingling madly, so she just nodded.\n\nWhen he finished brushing out all of the knots, he admired its shine. \"May I braid it for you?\" he asked.\n\nShe desperately wanted to keep feeling his hands in her hair. \"Yessss! I mean, if you want to,\" she gasped softly.\n\nHe used the comb to separate the bundle of hair in his hands and weaved them into a strong thick braid.\n\nSam tried not to squirm from the sparks Hal was sending through her body as his strong hands firmly gripped her hair and gently tugged the bundles as he worked.\n\nWhen he was done, she bit her lip to distract herself from the heat between the legs as she bound the braid's end with an elastic band. \"Thank you! You did an excellent job with the braid!\" she gushed, just a little breathily.\n\n\"Your hair is amazing!\" Hal said with an admiring smile. She blushed, and they went silent as neither knew where to take that next.\n\n\"I guess we should go to bed\u2014our beds,\" Hal stammered.\n\nShe chuckled with the release of tension and nodded as she stood and went back to her bed.\n\nWhen they were ready, Hal turned off the light and laid back. His hands twitched with their need to be back in her hair. He struggled to push that away, but it took him much longer to settle his mind tonight.\n\nHe couldn't see Sam's eyes watching his silhouette against the minimal light coming through a gap in the curtains. He couldn't see her struggling with her need to feel his hands on her once more.\n\nBoth found sleep difficult to find.\n\nChapter 6\n\nSam became aware of a noise and opened her eyes. The clock between the beds showed it was just a little after one in the morning. She saw Hal's shape sitting up in bed, and he was breathing in gasps. Perhaps he'd had a bad dream? A distant jingle of keys could be heard as someone dropped a set somewhere outside in the parking lot.\n\nHer eyes went back to the man in the next bed. God, she wanted him. He'd treated her better than anyone ever had in her entire life. He was gentle and patient and seemed to love seeing her smile. She'd caught him watching her, a smile on his face to match her own. She couldn't remember a time when she'd been this happy.\n\nShe knew he was going through some kind of marital crisis, and she'd promised she wouldn't interfere, but hearing him shake and tremble was more than she could endure. She had to ease him back to sleep.\n\nSam pushed her sheets back and stepped over to the side of his bed.\n\nHal's head suddenly swiveled in her direction, and a hand grabbed her throat. She was lifted off her feet and slammed down on his bed faster than she could understand what was happening.\n\nHis hard body was on hers, and his other hand suddenly covered her mouth, pressing against the bottom of her nose. She was having trouble breathing with his weight on her and his hand, blocking her mouth and nose. She tried pushing him away, but he was just too strong. She looked up into his face, but it was hidden by shadows. He seemed to be watching her but said nothing.\n\nThen she felt it. He was becoming excited, and it was pressing against her. She managed to wiggle her head to inhale a little air, and the pressure down below was both delicious and terrifying as he continued to watch her in total silence.\n\nShe needed air, but his grip just tightened, and genuine fear seized her.\n\nHe was going to kill her.\n\nA harsh jingle sounded outside their door, and Hal's face lifted to look in that direction. A sliver of light from a gap in the curtains painted his face briefly, and she saw his eyes. Cold and emotionless, like a shark's. There was no expression on his face as if the muscles were paralyzed.\n\nThe jingle became the grinding noise of a key fumbling against the lock on their door. A drunken and slurring voice could be heard through the door.\n\n\"Separate beds... stupid fuck. Here Titty Titty! I've come to fuck you!\"\n\nHal leaped off the bed, releasing Sam so she could suck in a deep breath.\n\nAs the door began to swing open, Hal's left hand shot through the opening to grab the man's throat. He squeaked in surprise as he was yanked inside. Hal's right fist hammered his face. The man's nose shattered and flattened out as his head snapped back, his muscles all going loose with his fall into unconsciousness.\n\n\"HAL!\" Sam managed to scream, though her rough, gravelly voice was hoarse from the strangle grip he'd had on her earlier.\n\nHal's second punch stopped just before impact, and he swayed as he released the neck of the hotel's reception clerk.\n\n\"Sam?\" Hal's voice was full of dread.\n\n\"I'm okay. You... you didn't hurt me,\" she lied.\n\nHal turned on the lamp next to the door. He looked down at the unconscious man in the open doorway. \"It's the clerk from the front desk.\" He leaned down to take a sniff. \"I smell alcohol.\"\n\nRed and blue lights suddenly painted the doorway as a cruiser pulled into the parking lot and parked behind their car. The sheriff got out, put on his hat, walked up to the open door, and looked down at the unconscious clerk.\n\n\"So, what happened here?\" the sheriff asked as he eyed the scars covering Hal's torso.\n\n\"The clerk tried to break in. I stopped him,\" Hal said, his voice cold and clipped. He twitched when Sam gently touched his arm.\n\nShe'd wrapped a sheet around herself and was now standing next to him.\n\n\"I heard this man say he was coming in to have sex with me. He used cruder words,\" Sam said to the sheriff.\n\n\"So your... husband got jealous and beat him?\" the officer asked, looking closer at Sam's neck. The mark from Hal's grip was beginning to show.\n\n\"We're not married,\" Sam blurted.\n\nThe sheriff pointed to Hal's hand. \"He seems to be married to someone. That mark on your neck is no hickey. Are you okay, miss?\" The lawman put his hand on his holster, and Sam felt Hal's body respond. She froze.\n\nHal forced himself to relax. He'd been drilled on this by his doctors. He had a script to follow. \"I have an acute case of PTSD. I was woken incorrectly just before the clerk's arrival.\" He turned his head to Sam. \"I sincerely apologize for any harm I might have caused you.\"\n\n\"It's okay!\" Sam insisted. \"I forgot to call out to you! It was my fault!\"\n\nThe sheriff gave Sam a disgusted look as he assumed she was just another victim taking the blame for being abused by a predator. He turned his eyes to Hal. \"I believe you've worn out your welcome in Santa Rosa. Get your belongings and go.\"\n\nSam made a sound of protest, but Hal touched her arm and nodded to the sheriff. \"We'll leave immediately.\"\n\nHal gestured for Sam to get her clothes and get dressed in the bathroom. He packed his suitcase, hiding the knife he collected from under his pillow. When Sam came out with her make-up kit packed, Hal took his turn getting dressed in the bathroom.\n\nWhen he came out, the sheriff was speaking quietly but firmly to Sam, no doubt trying to help her break free from the monster that Hal was. He didn't blame the man, but he could see the sheriff's mind was made up, and the denials Sam made were falling on deaf ears.\n\nAn ambulance arrived, and they waited for the clerk to be loaded onto the gurney and wheeled away. The man had begun to come to and was complaining about his sore nose.\n\nOnce they had access to their car, Hal loaded their suitcases into the trunk. He held Sam's door for her then faced the sheriff as he shut her door.\n\n\"You arrived pretty quickly after he broke in. Were you just in the neighborhood?\"\n\nThe sheriff glared at Hal. \"We got an anonymous call from a concerned citizen.\"\n\nHal looked across the parking lot to the gas station across the road. The dark sedan was parked there\u2014concerned citizens.\n\nHe nodded, walked around to his door, and got in. Sam was watching him with a worried expression. He waited for the sheriff to get back into his cruiser, then he drove out of the parking lot. The sheriff pulled out behind him, no doubt to follow him to the town limits.\n\nHal watched his rear-view mirror and saw their tail leave the gas station to follow.\n\nHe pulled back onto the interstate and saw the sheriff continue past the ramp. A short interval later, headlights pulled onto the interstate behind them.\n\n\"Where are we going now?\" Sam asked in a quiet voice.\n\nHal looked over at her, and his heart clenched as the fact that he'd hurt her sent a chill through him.\n\n\"I want you to know how sorry I am that I hurt you! I knew you weren't safe with me. I should have insisted on separate rooms\u2014\"\n\n\"No! We were fine the night before! I made a mistake\u2014\"\n\n\"That almost cost you your life because of me! Because I'm a monster!\" he exclaimed in anguish.\n\nHe held the steering wheel tight, his knuckles white from the death grip. He watched the lines on the road tick by and saw their tail following well back. He hadn't realized how loud his breathing had become and tried to calm himself.\n\n\"You-you're not a monster,\" Sam said quietly, almost as if she were trying to convince herself.\n\n\"I am. Part of me is,\" he admitted.\n\n\"You said it was PTSD\u2014\"\n\n\"It's not. That was a lie for the sheriff. Something he would accept.\" He looked over to her. \"But you saw it. The monster. It left its mark on you.\" A shudder went through his body. \"I can't let that happen again.\"\n\nThey drove on through the darkness, lost in their thoughts.\n\n\"What... where did the monster come from?\" Sam asked cautiously.\n\nHe gave her a bleak look then concentrated on the road. It was easier to talk that way.\n\n\"It's always been inside me. Now, it's just compartmentalized. I'm not allowed to talk about it but considering it almost killed you, you deserve to know. You can't tell anyone about this. I mean it. It's not safe for you.\"\n\nHe held her eyes with his, and she nodded, eyes wide with fright.\n\nHal squirmed inside as he was responsible for that fear, and that was something he never wanted to do to her. She didn't deserve it.\n\n\"You're married.\"\n\nAnother sharp but straightforward comment cut through him. He nodded.\n\n\"She knows.\" It wasn't a question.\n\n\"Yes.\"\n\n\"Have you ever hurt her?\"\n\nHe sucked in a painful breath. Sam couldn't know what these questions were doing to him, but he was reeling from the cuts.\n\n\"Yes.\"\n\n\"Is-is that why you're going to LA? Did she leave you?\" Sam asked gently.\n\nShe was so far from the mark, Hal gasped out an involuntary bark of relieved laughter, then immediately clamped his mouth shut.\n\nHe needed to answer that. \"No... she hasn't left me.\" He realized he wished she would. It would be... cleaner. \"She won't. Not until... she gets what she wants.\"\n\n\"What\u2014\"\n\n\"Please, I can't...\" Hal gripped the wheel tighter until he felt the stitching begin to cut into his skin. He forced his hands to relax.\n\n\"I'm sorry,\" Sam asked. \"I really like you. I don't like to see you in pain, so I want to help. If talking it out can help you. I want you to know I'm willing to listen.\"\n\nHal felt the urge to burst into hysterical laughter, but he managed to suppress it. The woman he almost killed didn't want to see him in pain?!\n\n\"Th-thank you.\"\n\nThe moment the words left his lips, their incredible inadequacy slammed home. This woman, who had no place in his predator life, who'd likely been a constant victim in her life, now occupied his heart and mind.\n\nUntil this moment, that had been Lisa's domain. No other woman had ever, ever threatened his wife's domination of his being.\n\nHe didn't know what to do with this new awareness. It still had no place in his current situation.\n\nHe wasn't free of Lisa. She still had her claws in him, deeply. He'd been entirely under her spell since that first day they met in high school, and he still was.\n\nAfter he'd been sent away to the army, he and Lisa had been separated for over a decade. When he returned to her, he was a changed man. The doctors, technicians, and trainers in the Ghost-Ops Division he was assigned to had seen to that. They hadn't removed anything, just reorganized it so he could fit into civilized society, yet be the weapon they needed him to be. That first day when Lisa brought him back to her place from the outdoor cafe, she'd tested him to see if he was still the man she'd molded to her desires. He knew every inch of her body. He knew what she loved and what she craved. He gave her that, and when she still showed signs of kicking him to the curb as another failed conquest, he panicked and let the monster out, just a little. It punished her for playing with him, and when they were finally spent, she smiled as she caught her breath, gingerly touching the bruises on her throat. Her satisfied smile that day sank the hook into his soul. He was hers.\n\nHis handler had threatened to have Lisa eliminated for her interference with their successful project. Hal managed to convince him to hold off until he could prove his performance wouldn't be impacted.\n\nHe did prove his skills exceeded anyone else in the project. He fulfilled his mission goals with less collateral damage, less noise, and more accuracy than the others, so his handler had to agree to his request to be allowed to marry Lisa.\n\nTheir married years began well enough. He was able to keep Lisa satisfied without exposing her to the monster. But every so often, they'd go through a rough patch where nothing he did was good enough for her, and his anxiety would begin to build.\n\nDuring those times, she would revert to using her master class cock teasing skills, exciting and enticing strangers in bars, sporting events, neighborhood parks, and on tropical vacations. She'd tease them beyond their self-control, with the promise of a fuck they'd never forget. Her real goal was to drive Hal into a jealous rage, to make him lose control. When confronted with the situation, he'd attempt to diffuse it, but that always failed as Lisa picked her targets well and wound them up into a frenzy. They'd attack, he'd lose control, and the monster would get loose.\n\nHe'd come close to killing them on more than one occasion. One near fatality had Lisa's lipstick on his cock. Later, she'd asserted the man had gotten her too drunk to distinguish whose cock was in her mouth\n\nLisa was always there to confront his dark side after it dealt with its rival, and it took its reward from her willing flesh.\n\nDuring this escalation of hostilities, his handler returned to inform him that Lisa's disruptive behavior, if it continued to get worse, was going to be dealt with. While Hal's performance in his missions had not been affected, the odds were increasing that Lisa would force him into violence they couldn't cover.\n\nHowever, this threat remained just that, a threat, as he'd become too valuable to the Project to risk affecting his happiness and performance.\n\nHe realized he wasn't happy, and Lisa's need to sample his dark side continued to get worse. As it did, his happiness diminished, but Lisa was content as she was getting what she wanted.\n\nAs she always did.\n\nTheir interlude in the shower not that long ago when he'd lost control and almost strangled her, was an eye-opener for him. He finally understood she wasn't going to stop until he'd killed her.\n\nThat thought terrified him, but he felt he had no control in their relationship.\n\nEnter Chet.\n\nHal discovered the man sitting in the waiting room of the dental office where Lisa worked. The moment they locked eyes, Hal knew he was facing another predator, one who'd been visiting his wife at work.\n\nHe was six-foot, young, handsome, tanned, and blonde, with broad shoulders and a narrow waist. He'd easily fit in with college jocks or Cali surfers.\n\nIt was the cold dead eyes that locked on Hal's, which gave away his true nature.\n\nBefore Hal could decide how to react, Chet stood, casually walked to the front desk, and let the office assistant know he'd reschedule his appointment. Then he looked at Hal and told the assistant to tell Lisa he'd see her at their 6 PM appointment on the twentieth. As Hal wondered at that, the man smirked and left.\n\nWhen Hal confronted Lisa about the reference to 6 PM on the twentieth, she claimed Chet must have gotten the date wrong as she'd be in LA at a conference. With a chuckle, she dismissed his insistence that she assign Chet to another hygienist.\n\nHer small satisfied smile sent a knife through his heart.\n\nHe realized at that moment, Lisa was a monster, too.\n\nChapter 7\n\nThey stopped in Albuquerque to get a room at a hotel to finish their sleep.\n\nWhile Sam spoke softly, she insisted she felt safer in a room with him than a separate room when they had people following them.\n\nHal didn't have the will to argue, especially when she touched his arm and turned her doe-eyes on him. He reiterated the rules, then they managed to catch up on their lost sleep.\n\nThey got a later start than usual, but they'd covered some of the day's mileage already. They grabbed brunch in Gallup, once more visiting an Applebee's. Obviously, one of Sam's favorite places.\n\nSpeaking of the lovely blonde, she was wearing her blue Route 66 t-shirt and light grey yoga pants, which proved to be a significant distraction for the wait staff and Hal. She was delighted with the attention he was giving her. She'd perfected her look of innocence when he questioned her on the provocative nature of her attire.\n\nHer throaty giggle when he gave up brought a smile to his face. Her joy filled him with happiness. He began to wish for a future where he'd hear that sound every day."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "cheating wife",
        "highway song story",
        "rough",
        "submissive"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/drive-11"
}