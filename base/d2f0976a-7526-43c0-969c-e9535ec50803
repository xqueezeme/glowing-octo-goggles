{
    "title": "The Choosing Ch. 11",
    "pages": [
        "I have no memory of Hatha taking me from Nadar's chambers. She must have, because I was dressed and back in my own stone cottage. I sat beside the fire on a milking stool someone had brought in from the stables. I watched the flames dance before my eyes. I had not bathed since last night and I could still smell him on my skin. Every now and then I brought my hand to my face just to inhale his aroma.\n\nThe loss hit me like a gut punch each time I did.\n\n\"My Chosen.\"\n\nI looked over my shoulder to see Roth. He was alone. We were alone. Hatha had gone to find us dinner.\n\nWhen was the last time we had been alone? After the Choosing ceremony?\n\nHe came forward, laying a hand gently on my shoulder. Right over the bite mark of his son. I pulled away and he murmured an apology.\n\nNow he had my attention. The Dark Prince apologizing to me? What was that about? I swiveled in my stool to face him. He folded to the ground, sitting at my feet cross-legged, like a child awaiting a bedtime tale.\n\n\"What do you want Sire?\"\n\nHe laughed. \"Ever direct aren't you my Chosen? Anja would have adored you.\"\n\n\"Anja?\"\n\n\"Anja. My wife. My Chosen. My heart. The Mother of my son.\" He looked wistful, lost in memory of his beloved.\n\n\"I cannot replace her Sire.\"\n\nHe reached up, taking my hand in his. \"I know that Talia.\" It was odd to hear my name come from his mouth. Our relationship had changed, he marked the change with my name. \"It was wrong for me to try. Losing her left a hole in my heart that I looked to fill with your submission.\"\n\n\"What of Malchard? Of Beatrix?\"\n\n\"There is much that we need to bring to rights in Vandarra. I'd like you at my side as The Vessel. Together I doubt there is much we cannot achieve. As my ally. I will not force it.\" He laughed. \"It seems redundant for me to make such a pronouncement. I know you cannot be forced. You are instead a force of will.\"\n\n\"I am,\" I said, not sure if it was a good or bad quality.\n\n\"Like Nadar.\"\n\nAt the mention of his son, my heart jumped. He smiled at my reaction and shook his head. \"He is as stubborn as you. As willful in his ways. As vulnerable.\"\n\n\"Vulnerable?\" I had never thought myself so.\n\n\"Your heart is fragile. You protect it with your pride. As does my son. Pride will not get you the love you seek. You must take risks to find it. You will not always succeed. You will make mistakes. I speak a truth I have lived Talia. I should not have Claimed my Anja, in tying her to my will I destroyed hers. I was frightened of the love that consumed me. I imprisoned her in that love when I should have set her free.\"\n\n\"Free? Let her go?\"\n\n\"I do not think she would have gone. She loved me as I did her. I should have let her claim me. Given her the power she needed instead of taking it all for myself.\"\n\n\"Claimed you. Is that possible? Can it be so?\"\n\nHe squeezed the hand he still held in his. \"You are the Vessel. You can make it so.\"\n\n\"He does not want me.\"\n\nRoth shook his head. \"He does not want to take you as I did his Mother. He loves you too much for that.\"\n\nLoves me. The thought slammed through me like a shot of whiskey. I was heady with the idea.\n\n\"So I should take him?\"\n\n\"If it is what you want. Make it so.\" He released my hand and stood, leaning over to press a kiss to my head. I watched him leave, walking away in the effortless glide of a Master.\n\nMake it so. Was it as simple as that? My head was churning thoughts as Hatha returned with our food.\n\n\"Hatha,\" I said, \"I need your help with Prince Nadar. I mean to Claim him and I want to know how.\"\n\nShe smiled in that slight Hatha way, shook her head and said, \"Well, it's about time Mistress.\"\n\n* * * *\n\nHatha ran a tight ship preparing me for the Claiming. She blustered and complained, barking out orders like a drill sergeant. Askel muttered under his breath the word tyrant, regretting it immediately after suffering the sharp clip of Hatha's hand. As I had only two handmaidens\u2014Corina too had thankfully survived the attack of the Queen's Guard\u2014Askel was forced into Sarran handmaiden duties. Hatha had barked at him that it was the least he could do, stifling any further protest with her black glare.\n\nI laughed at him and he poked out his tongue, earning him another quick clip to the ear. He was painting symbols up my leg. Her blow made him smudge one. He wiped it off and with a muttered curse reapplied the black symbol.\n\nHatha had scrubbed and shaved me. She worked now on my hair, weaving it into a tower of glittering curls. Askel looked up from my leg and I was pleased to see the approval in his eyes.\n\n\"You look beautiful Mistress.\"\n\n\"And you look very good at my feet Askel.\"\n\nHe grinned and angled his head to kiss a bare patch of skin on my thigh.\n\n\"Enough,\" Hatha barked, \"Back to work.\"\n\nPreparing me took until night fall. Hatha opened the shutters of the back window and let the light of the full moon fall upon my skin. The power washed over me. I closed my eyes and sank into feeling.\n\nTonight. Rather than tethered I was to be set free. Free in love.\n\nA stab of fear gripped me as thoughts of rejection flooded my mind. What if he did not want me? What if Roth was wrong? Hatha came behind me, pressing her body to my back. I leaned into her. \"Still your mind Mistress. You do not need thought tonight. Only feeling.\"\n\nShe reached around me and tweaked hard on my nipple. I gasped. She chuckled in my ear. \"Feel Mistress. Only feel.\"\n\n\"You are sure he will come,\" I asked.\n\nHatha plucked my nipple once more. \"I have said it will be so Mistress. You need to trust me.\"\n\nI turned and took her face between my hands, \"More than trust Hatha. I love you.\"\n\nShe blushed and tried to look away but I would not let her. I brought my mouth to hers and laid a gentle kiss upon her lips.\n\n\"It's time Mistress,\" she murmured against my mouth. I gave her one more quick kiss and nodded.\n\nShe led me through the township. Askel and Corina flanked me. The streets had been lined with torches. I walked naked and proud, my love, my hope painted on my skin and shining on my face. Far removed from the guarded woman who had been forced upon the Chosen path at the Summer Choosing.\n\nI felt like I had been released. That I had broken free from the cocoon of my pride and fear and blossomed into a creature of delight. Roth's guard lined the street, watching me pass. My pleasure floated out to them. I saw it, like glowing pink tendrils snake out and grab each one, seeping into their souls until they gasped in pleasure.\n\nI was filled to the brim with a delicious freedom. It spilled from my body, soaking the streets with each step closer to Nadar that I took.\n\nAt the end of the street was the town common. A pasture set aside for the outdoor meetings of the township. It was a clearing surrounded by a ring of trees. Hatha had arranged for each bough to be festooned with colored paper lanterns. The ground glowed in a rainbow of reflected color.\n\nIn the center of the clearing stood Nadar and Roth. Nadar was tense. He did not meet my eyes as I came forward to meet them. I did not know what he had been told to make him come here, Hatha had just told me that it was arranged. Looking into the stony face of my dark angel I was now not so sure. He did not look at all happy.\n\nHatha presented me formally to both Princes. \"Roth, Dark Prince of Pleasure and Nadar, Night Prince of the Dark Master House Roth. I give you Talia of Hawthorne. Mistress Vessel of the Sarran Vere.\"\n\nRoth and Nadar bowed low whereas I merely dipped my head. Here standing before them as the Vessel, they were my lesser.\n\nAs soon as the formal presentation was complete Nadar stepped away, moving behind his father. I raised a brow to Roth in question, he smiled and shook his head.\n\nNadar didn't know.\n\nHe didn't know why he was here.\n\nI searched Nadar's face. He would not meet my eyes. He stared out above my head, his face a thinly veiled mask of fragile calm. The bite mark at my shoulder throbbed with the need to once again connect with his fangs.\n\n\"My Mistress comes to ask a Claim,\" Hatha's voice rang out across the clearing.\n\n\"I come to hear a Claim,\" Roth answered in rote response.\n\nWe had Nadar's attention. His eyes had snapped back to look between Roth and myself. Vandarran Claiming began not with the woman but with the man, by asking first Hatha had turned the traditional ceremony on its head.\n\n\"What Claim?\" Nadar asked.\n\nIt was now or never. I stepped forward, my heart hammering in my chest, anticipation itching beneath my skin. \"My Claim on your heart Prince Nadar.\"\n\n\"My heart?\"\n\n\"Yes.\" I came closer to him, reaching out my hand.\n\nHe jerked away, looking at his Father. \"I do not understand. I will not Claim her. You cannot make me do it.\"\n\nRoth turned to face his son's angry face. \"No. You will not Claim her. Not as I did to your Mother. She asks to Claim you.\"\n\n\"Claim me?\"\n\n\"As my partner. As my equal. As the other half of my heart. As my dark angel.\"\n\nHe took a step towards me. \"Dark Angel. I remember...I thought I had dreamt you.\"\n\n\"And I you my Prince.\"\n\nWe stood a foot apart, staring at each other as if for the very first time.\n\nRoth took Nadar's hand as Hatha took mine. They brought them together, we laced our fingers. His touched soothed my very soul.\n\n\"Vandarran and Sarran. Linked as equals. Will you come together as the first step to heal our country?\" Roth asked.\n\n\"I will,\" we answered in unison.\n\nHe smiled. The first full smile I had seen upon his dark face. I did not need to wonder if this was the face with which Nadar's mother had fallen in love.\n\n\"I leave you then to finish the Claiming. Join your bodies as one as your hearts have already become.\n\nRoth and the rest of Vandarrans left until standing in the clearing was only Nadar and I, Askel, Corina and Hatha.\n\nAskel stepped forward sweeping into a low bow. \"My Prince. My Vessel.\"\n\nI nodded in response.\n\n\"I ask you leave Mistress to attend your sister.\"\n\n\"You have your leave and my permission. Go in love Askel.\" I steepled my fingers at my forehead, chest and sex. Askel bowed once more and left the clearing.\n\nHatha moved to stand before Nadar. \"It is time my Prince, to embrace your Sarran heritage.\"\n\nNadar nodded. Corina and Hatha came to him. Together moving in synchronicity, nimble fingers stripped him easily of his Master's finery.\n\nHis eyes stayed on mine as the women removed his clothing. My smile grew with the joy that I let free within. I was for the first time in my life exactly where I wanted to be, with the person I most wanted.\n\nWhen Nadar was stripped to his nude beauty I heard Corina let out a little sigh of approval. I did not begrudge her admiration; he was so truly magnificent that no woman could look away.\n\nI wanted to share him. Share the joy that blossomed in my soul.\n\nGive and Receive. Receive and Give.\n\nWould Nadar truly join in the way of the Sarran?\n\n\"Mark him,\" I ordered Hatha, who nodded and went to retrieve the Sarran ink.\n\nI walked a circle around Nadar's naked body, trailing a finger over his exposed skin. \"This beauty is the perfect canvas for the Sarran tattoo. Ink first though my Prince. I will mark you with the spells that bond our souls.\"\n\nHe shuddered a sigh and I watched as his cock rose tall and proud between his legs. My beautiful young handmaiden fell to her knees, licking her lips at the sight. She looked up at me for permission and I nodded.\n\nNadar let out a gasp as her young mouth wrapped around his cock. I nestled behind him, pressing my breasts to his back. He rocked his hips forward to Corina's mouth and I murmured my approval in his ear, \"Yes. Give and take. Take and receive. The cycle of pleasure. Take and share the power.\"\n\nHe let out a low moan at the seductive power of my words. Hatha returned with the ceremonial brush and Sarran ink. I marked his back first. Between his shoulders I drew our bond in bold swirls of black and fine filigree.\n\nEach stroke drew him deeper into the Sarran way. His skin sang with power, his hips rocked in an age old dance of worship. I came to his front to watch Corina kneeling at the altar of his cock. I took her head in my hands slowing the movement of her mouth.\n\n\"Please, pleassss,\" he groaned, losing the power of speech to the teasing, slow, sucking pleasure of Corina's mouth.\n\nI knelt down to Corina's ear. \"Let him fuck your face now.\" I whispered. She groaned in pleasure and thrust forward to take Nadar's cock deep in her throat.\n\n\"Come now. Come now my love.\"\n\nAs his body jerked forward I came in with the brush to mark his belly with my symbol\u2014with the power of the Vessel. As the last brush stroke completed the spell Nadar cried out his orgasm.\n\nCorina pulled back and brought Nadar's cock down to spray his seed across her firm young breasts. After his orgasm was complete she came and offered her breasts to me. I dipped my head to lick the seed from her young tits, watching Nadar's face all the while, looking for his reaction to what had just occurred.\n\nHe stepped towards me, chanting the words I most wanted to hear, \"Give and take. Take and receive. The cycle of pleasure. Take and share the power.\"\n\nHe had accepted the Sarran way. He had accepted me.\n\n\"I share with you now. I give to you now. I take my pleasure with you.\" His words rolled over me like a wash of heat. My sex dripped wet with the need for him to claim me hard.\n\n\"On your knees,\" he ordered.\n\nI submitted with pleasure, falling to the soft carpet of grass.\n\n\"On all fours.\"\n\nYes. Yes. There was nothing I wanted more.\n\nI dropped my hand before me and waited on all fours for his next order. It did not come. Instead the fat head of his cock thrust deep inside my sex.\n\nThe moan I let out shook the trees around us. The lanterns danced at the sound of my voice. A rainbow of color strobed across our skin. I raised my head to see Hatha with the ceremonial brush, painting Corina's writhing body.\n\n\"Pleasure her,\" Nadar cried out, \"Pleasure your Mistress.\"\n\nCorina slid beneath my body on her back, bringing her mouth up to latch upon my clitoris. Her pretty young sex spread in offering at my mouth, I lowered my head to taste her, groaning at the sweetness of her syrup.\n\nHatha brushed magic across my back as Nadar took me hard. The soft ink bristles flashed the heat of sexual magic across my skin.\n\nI was the heat. The darkness. I was the moon. I was all power and all power surged through me.\n\nI came. Clenching my sex around Nadar's cock and spurting my release over Corina's sweet mouth.\n\nNadar slipped free of my sex and pulled me back to rest upon his chest. He lay on the ground and I turned to mount him. I looked down at his sex flushed face and let the love pour from my soul.\n\nI sang. A wordless song of love and joy.\n\nThe cycle was complete. The Claiming had set. I had a home. A purpose in this one man.\n\nTogether we would learn the Sarran way. Together we would reunite our people.\n\nThe path I had begun on the road to the Night Palace ended here with this choice. My choice.\n\nNadar.\n\nMy dark angel.\n\n- - - - - - - - -\n\nThe final chapter. Thank you so much to Gatorhermit and my beloved Mistress Red Pen for your encouragement and grammar domination.\n\nAnd Pacofear, I thank the crazy random happenstance that had you stumble across my 'Dirty Train Girl' and become my critique partner. Your ratbastardy (it's a word if I say it's a word!) is all through this work and without it, well, it would be quite shabby. Thank you so much. He rocks and he doesn't have time to critique any of your stuff because he's too busy with mine -- and besides I'm his favorite.\n\nAnd while I'm sounding like a D grade celeb at a shoddy awards night I'm going to run with it and thank all of YOU who took the time to read my stuff.\n\nThanks, you're sweet!\n\nDarcy"
    ],
    "authorname": "darcysweet",
    "tags": [
        "roth",
        "nadar",
        "talia",
        "hatha",
        "the vessel",
        "sarran"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-11"
}