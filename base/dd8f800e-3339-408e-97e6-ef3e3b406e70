{
    "title": "Helping Her, Saving Me Ch. 03",
    "pages": [
        "Helping Her, Saving Me Ch3\n\nAll characters are 18 or over. Comments and feedback very welcome -- many thanks to those of you who took the time to comment on earlier chapters, and I hope you enjoy this further instalment.\n\n \n\nI thought it might be difficult meeting Belinda after I'd spent most of the day ravishing her older daughter, but I should have known better. I think she'd given it some thought that day, and she handled it perfectly.\n\nWhen I came into the kitchen Ellie was standing near her mother. They'd obviously been talking -- Ellie presumably giving her the edited highlights of our time together. Both of them were naked. Both the stuff of fantasy -- Belinda with her mature, ripe, full figure with the aura of confident sexuality, Ellie with her toned, perfect, smooth young body and yes, a slightly dreamy, dazed aura.\n\nBelinda held out her hand to me. \"Come here.\"\n\nI walked over to them a little nervously. But as I approached, she put one of her arms around my shoulders and the other around Ellie's shoulders and brought the three of us close together in a circle so our heads were touching in a group hug.\n\n\"Now listen,\" she said. \"I'm so glad this has happened. Ellie tells me it was everything she hoped for, and I'm so pleased. I thought it would probably work out, but you can never be sure, and I'm delighted.\"\n\nShe paused. \"The one thing I don't want to happen is any jealousy or awkwardness because of this, OK?\"\n\nEllie nodded, then spoke. \"Thank you for letting me have this time with him, Mum. It was... just wonderful.\"\n\n\"Would you like it to happen again?\" Belinda's voice was gentle.\n\nEllie looked up at her. \"God, yes, of course... but I couldn't do that. He's your... boyfriend. Your... man.\"\n\n\"No,\" said Belinda. \"If he wants, he can be... our man.\"\n\nI kept silent. Although this obviously affected me, this was a conversation that was primarily between Belinda and Ellie.\n\nEllie was hesitant. \"But... I think you really love Rob, Mum. You've been so happy since you got together. I couldn't... I should find somebody of my own.\"\n\n\"And I'm sure you will, one day. When you're ready. But you shouldn't think that by doing this I would love him any less, or resent you in any way. When you were born, do you think I loved your Dad any less? When Jessica arrived, did I love you any less? Did you feel your father was incapable of loving all three of us?\"\n\nEllie was quiet for a minute, processing this.\n\n\"Are you... sure?\"\n\n\"Very sure.\"\n\nEllie turned her head slightly to look at me. \"And do you think you could... do that? Both of us?\"\n\nBelinda laughed. \"I think we can see the answer to that already.\"\n\nI followed her eyes. So did Ellie, who stifled a giggle.\n\nDespite its taxing day, my cock was pointing eagerly upwards.\n\n\"Sorry,\" I said, more than a little embarrassed.\n\n\"Don't be. It's very flattering. Isn't it, Ellie?\"\n\nEllie blushed, but nodded.\n\n\"So, I guess the only immediate question is, who's going to take care of him now? Do you want to take him back to your room, Ellie? While I fix something for dinner?\"\n\nEllie hesitated for a moment, then shook her head. \"I'll do dinner Mum. I've already been so... I've had a lovely day already.\"\n\n\"You sure, darling?\"\n\n\"Yes... you go. And... thanks Mum. Thanks to both of you.\"\n\nBelinda kissed her daughter. \"No need to thank me, darling. As long as you and your sister are happy, that's the only thing I need.\"\n\nEllie's brow furrowed. \"And what about Jess? We'll have to tell her, won't we? I don't want her to feel... left out. I don't want to keep secrets from her.\"\n\n\"Of course we'll tell her, darling. Next time she comes home. She can make up her own mind. I think we probably know what Rob's answer will be.\"\n\nWith that, Belinda slyly tapped my cock, which bounced happily downwards and then back up again.\n\n\"Mum!\" Ellie was a little shocked at this blatant act of intimacy.\n\n\"What? I often used to tease your father like that... you must remember seeing me do it.\"\n\nEllie blushed again. \"Well... yes. But... it still feels a bit weird, seeing you do it so casually like that.\"\n\n\"I think you'll get used to it. You touch him now, while I look. I dare you.\"\n\n\"Mum!\"\n\n\"Go on. Give him a squeeze. Then I'll take him upstairs and we'll see you for dinner in about an hour.\"\n\nSomewhat reluctantly, Ellie reached out and shyly encircled my cock with her fingers. I groaned involuntarily.\n\n\"Mmm. See -- he likes it.\"\n\nEllie licked her lips, a tiny dab of her tongue and then it was gone. She squeezed me again. Then Belinda firmly reached down and removed her daughter's hand.\n\n\"No, I think we agreed it was going to be my turn. And I have to say, I'm quite looking forward to it - so you get on with dinner, young lady. There's some chicken in the freezer, so why don't you do us a curry?\"\n\n\"All right.\"\n\nBelinda kissed her daughter again. \"I'm the luckiest mother in the world.\"\n\n\"You're the best. Now take him upstairs before I... get really slutty in front of you.\"\n\n\"We're going,\" she said. \"The spices are in the rack. Not too much curry powder this time, sweetheart.\"\n\n\"I know!\"\n\nBelinda started to lead me upstairs. I was starting to think this was how a prize bull must feel, being led from paddock to paddock to service the expectant females. Was I complaining? You can probably guess the answer to that.\n\nHalf way up the stairs Ellie called out again. \"Mum! Rob!\"\n\n\"Yes darling?\"\n\n\"Um... could I ask one thing though? For later?\"\n\n\"Of course you can, sweetheart.\"\n\n\"Could Rob... sleep in my room later? Not for... sex, I'm not sure I could, even if he was able to... which he probably wouldn't be... but... I was thinking how nice it would be to... wake up beside him. Just once.\"\n\n\"Yes, darling. You can do that whenever you like. We'll work something out -- and it is lovely, having a man there beside you all night and there when you wake up. Now -- get on with the dinner!\"\n\nEllie did a mock-salute, smiling, and returned to the kitchen.\n\nOnce we were in her bedroom, Belinda turned to face me. She was laughing quietly.\n\n\"I'm pretty sure you didn't imagine anything like this when you came here for the first time, did you, Rob?\"\n\n\"No,\" I said. \"Not in a million years. I'm not sure I believe it now.\"\n\nBelinda knelt in front of me, my still rock-hard cock directly in front of her. \"Of course, if you ever change your mind... we'll quite understand.\" She delicately ran her tongue along the underside of my cock. \"It's a big responsibility, being the man of a house like this.\"\n\nI groaned.\n\n\"And I know you've already had a very full day with Ellie. How many times did you come with her?\"\n\n\"Three. I think.\"\n\n\"Mmhm. Lucky girl. And where did you come?\"\n\n\"Twice... inside her. And once... in her mouth.\"\n\nBelinda took me in her mouth, sucking me with delicate and skilled enthusiasm. Then she withdrew, my cock glistening with salvia. She stroked me with her hand again.\n\n\"Lovely,\" she said. \"Does my daughter give good blowjobs?\"\n\n\"Very good... but not as good as yours.\"\n\nShe kissed the tip of my cock. \"Good - I probably shouldn't be so vain and silly, but I admit to feeling just a teensy bit competitive with my daughter. And three times is quite a lot to come, isn't it? If I was to make you to come a fourth time after such a busy day ... I'd be really quite proud of myself.\"\n\nAnd with that she renewed her efforts, sucking me with an intensity and single-mindedness that was impossible to resist. Belinda was really something special when it came to oral sex -- it was like an act of focused worship that was flattering and deeply exciting.\n\n\"I'll do my best,\" I managed.\n\nShe paused again briefly. \"I know you will. But... I wouldn't put too much store on Ellie saying she doesn't want any more sex tonight. I'll bet you anything that when she gets you into her bed later she's going to be greedy for more of the same. But... you'll have to cross that bridge when you come to it, won't you?\"\n\nShe rose to her feet and then pushed me gently back onto the bed. She straddled me, and I could feel the hot wetness of her on the top of my leg as she positioned herself to slide down onto me.\n\n\"For now,\" she whispered, \"you just worry about fucking me and filling me up with your lovely hot cum.\"\n\n**\n\nA few hours later I was cuddled up with Ellie in her bed. I felt -- quite justifiably, I think -- rather exhausted. Ellie was reading a book which she held with one hand, her head resting on my chest. Her other hand absent-mindedly stroked my cock and balls. Every now and again her hand would move a little and she'd stroke the top of my legs, my hips, or my stomach. But not for long. Her hand was drawn back to my groin as if that was the natural place for it to belong.\n\nFor my part my eyes were closed and I contented myself with running my fingers up and down her smooth arms. Life felt pretty good, I confess. Though I hoped Belinda was wrong about Ellie expecting further attentions that night. I think even the most testosterone-fuelled eighteen-year-old boy would have needed some time off after the day I'd had.\n\nAs if reading my mind, Ellie turned her head and kissed me lightly on the cheek.\n\n\"Don't worry,\" she said. \"I shan't expect anything more from you until the morning.\"\n\n\"Thank you. Very thoughtful.\"\n\nShe yawned and stretched. \"So sleepy... I'm going to put the light out now. Thank you for a wonderful day, Rob.\"\n\n\"It was wonderful for me too,\" I said. \"I'll never forget it.\"\n\nShe smiled at me and kissed me again, on the mouth this time. A lingering, loving kiss that I returned in kind.\n\n\"Sleep well,\" she said.\n\n\"You too.\"\n\nShe clicked the light off and turned on her side, pulling me towards her back so I nestled comfortably along the length of her body, my groin against her bottom and my head just behind hers.\n\n\"Mmm... they call this spooning, don't they?\"\n\n\"I think they do.\"\n\n\"So nice...\" Her voice was very faint and sleepy now. \"So, so... nice.\"\n\nAnd then she was asleep. A few moments later I was too.\n\nWhen I awoke the room was dark and Ellie was moving. I could feel her body sliding down the bed. Then I felt her hand wrap herself around me, and a probing tongue licked my cock from the tip down the base and back again. A gentle, insistent tongue.\n\n\"Hey...\" I said woozily, and with a slight trace of indignation. \"What are you up to?\"\n\n\"It's half-twelve,\" she said. \"It's morning, technically.\"\n\nAnd then her mouth took me, hot and wet and welcoming, and I surrendered myself to her.\n\n**\n\n\"Poor Rob,\" said Belinda at the breakfast table. \"He looks like he's done half a dozen marathons back to back. I hope you let him have some sleep, Ellie.\"\n\n\"Some,\" said Ellie, grinning. \"But... he didn't seem to mind.\"\n\n\"No,\" I said. \"I didn't mind. But if it's OK with you, I declare today a rest day.\"\n\nBoth women made a show of protesting, but it was only in fun. Instead the conversation turned to other topics -- Christmas shopping, some family visits, getting Belinda's car cured of the mysterious rattle it had developed... I felt very at home in their company. I had never really been that comfortable around other people, always feeling the need to project an image of myself that I thought would be what people wanted or expected -- but in that house, with Belinda moving around the kitchen and Ellie on a stool sipping her coffee, all of us completely naked - I felt totally relaxed.\n\nI realised a silence had fallen and both of them were looking at me.\n\n\"Sorry -- what?\"\n\nEllie giggled. \"You're really out of it, aren't you? Mum said -- are you going to tell Penny, or do you want us to?\"\n\n\"Hmm,\" I said. \"I don't really know.\"\n\nI thought about it. Penny had been fine -- more than fine, delighted -- when Belinda and I had got together. But Ellie was one of her best friends. How would she feel about that? To describe the situation as unconventional would be to understate it massively. And if Jess was to ever to decide to join our arrangement... then that really would be a whole new ballpark.\n\n\"I suppose we have to tell her?\"\n\nNeither Belinda or Ellie dignified that with a worded response. Belinda rolled her eyes and Ellie smacked me lightly on the backside.\n\n\"Tell him the rule, Mum.\"\n\nBelinda looked at me. \"I've always told the girls... when you're faced with a difficult decision, and you don't know the right thing to do, the choice you like least is nearly always the right one.\"\n\n\"Shit,\" I said. \"So that means... I have to tell her.\"\n\nI knew they were right. It should come from me. Anything else would be cowardly, and I valued the new relationship I had with my niece too highly to try and do anything except be straight with her.\n\n\"I'll call her in a while,\" I said. \"She's probably still in bed at the moment.\"\n\n\"Maybe not alone,\" said Ellie. \"Maybe she got lucky herself last night. Maybe Jess did too.\"\n\nBelinda frowned. \"Well... I hope they were both careful and sensible.\"\n\n\"Of course they were, Mum. They're smart girls. You don't have to worry about them.\"\n\nI looked at my phone. There was a text from Penny from the previous night, saying she was going to be out late but she'd message me later in the day. It was rather touching how she kept me up to date with her movements and whereabouts.\n\n\"Maybe I'll drive over and see her,\" I said. \"Buy her some lunch and have a chat.\"\n\n\"Yes,\" said Belinda. \"I think that would be a good idea. And I'm sure she'd be glad to see you.\"\n\n\"I'll go back to the house first, I think. Get some clean clothes. And I know Penny wanted some bedding from her room.\"\n\n\"Need a hand?\" Ellie's eyes were innocent, but her mother was wise to her.\n\n\"No. Leave him be, Ellie! He'll never get there in time for lunch once you get your claws into him again. And I need you to help me here.\"\n\nEllie pouted, but only half-heartedly.\n\nI reached over and kissed Belinda. \"I'll see you later.\" She responded warmly to the kiss, wrapping an arm around me and pulling me close. A deliberate reminder to her daughter of the pecking order, perhaps?\n\nIf so, I'm not sure it quite worked. After reluctantly breaking free of Belinda's embrace, I turned to do the same to Ellie. This time both arms went around me, her chest pushing tight against mine as she opened her mouth to kiss me deeply. And, as if that wasn't enough, she rubbed as thigh provocatively in my crotch.\n\n\"Ellie! For goodness sake!\" Her mother was amused and exasperated in equal measure.\n\nIt took a heroic effort to break free but somehow I managed it.\n\n\"Run, while you still can,\" advised Belinda. Ellie just smirked.\n\n**\n\nAt home I changed into some clean slacks and a shirt that Penny had brought for me. Then I gathered up her pillows and duvet from her room -- the new ones we'd brought her just didn't smell enough of home, she'd reported sorrowfully -- and put them in the car. Then I set off.\n\nThe drive was uneventful but I found myself fretting on the way. I was conscious that Belinda, Ellie and Jessica had been very much Penny's substitute family for a long time, and although Penny and I were now very close, I was worried she would feel I was in some way usurping her position. She'd been through a lot in her young life, losing her father and then her mother and I didn't want her feeling in any way threatened or undermined. Or, at an even more basic level, that she would find my behaviour \"creepy\". I was a good fifteen or so years older than the girls, not quite old enough to be their father but certainly old enough for the age gap to be frowned upon by some.\n\nWell, I supposed I would find out soon enough.\n\nI parked near her hall of residence and then pulled out my phone. I'd sent her a message saying I was on my way with some of her stuff but there was no blue tick indicating she'd read it. She was probably still asleep, though it was nearly lunchtime. She wouldn't be the first or last student to sleep through that meal after a late night, that was for sure.\n\nThe main entrance had a security lock but a student on the way out obligingly held the door for me as she came out so I was able to scuttle in, weighed down by my plastic bags of bedding. Then I squeezed myself into the lift and made my way to her floor.\n\nI knocked lightly on her door. \"Pen. It's me, Rob. Are you awake?\"\n\nThere was silence at first. Then a few muffled voices. I kicked myself. Of course! Why was I the only one to think I was having sexual adventures? Teenage students had been known to have the odd sexual encounter themselves. And now I was potentially going to embarrass her by walking in on her while she had a boy in her bed. Not the best start to a conversation that was going to be awkward anyway.\n\n\"Just a minute.\" Her voice was soft and a little sleepy. I imagined that clothes were being hurriedly thrown on and perhaps condoms washed hastily down the toilet.\n\nI waited outside. A minute passed. I debated perhaps just leaving the bags outside her door and beating a retreat, but I knew that would be cowardly. Then I heard further sounds of movement and the door opened. Penny stood there, rather flushed and dressed in a pair of loose trousers and a baggy sweatshirt that made her look very young. Behind her stood another girl who I thought at first glance was Jessica. A second glance made me realise my mistake: she had a similar build and hair colour but her face was narrower and she was a little older, perhaps in her mid-twenties.\n\n\"Hey Rob,\" said Penny. \"Come in. This is Sue. Sue -- this is Uncle Rob.\"\n\nI shook hands with Sue who looked at me with a cool interest.\n\n\"The famous Uncle Rob,\" she said. \"Very nice to meet you.\"\n\nI didn't quite know how to respond to that so I didn't. Instead I apologised again to Penny for not giving her more of an advance warning about my visit.\n\n\"That's OK,\" said Penny. \"It was about time we... I... got up anyway. The thing about being a student is you can turn into an awful slug if you're not careful.\"\n\n\"Perhaps I could buy you lunch,\" I said. \"Unless you have plans.\"\n\n\"Oh yes! That would be great!\"\n\nI turned back to Sue. \"You'd be welcome to join us.\" I didn't mean this, but felt it was incumbent on me to ask. I was relieved when she said she had already arranged to meet some other friends.\n\nAs she was leaving she shook my hand again and her eyes inspected me curiously. I don't quite know what she was expecting to find but I had the definite sense of being given the once-over, that she was in possession of some information about me that I didn't know myself. It was unsettling, and I felt more relaxed when the door closed behind her.\n\n\"Where shall we go?\" I asked Penny.\n\n\"Um... I don't know. The refectory's open, and it's pretty cheap and the food's not bad.\"\n\n\"I think we can do better than that,\" I said. \"How about the pub just outside town? I can drive us there -- it's only five minutes away.\"\n\n\"Perfect! Except I must get changed then. If it was the refectory these kinds of clothes would be fine, but if you're taking me out then I should make more of an effort.\"\n\n\"You look lovely,\" I said, and meant it. Penny was blossoming in her new environment it seemed. She'd always been a pretty girl, now she was well on the way to becoming a very beautiful one.\n\n\"Thanks, but I'm going to get changed. I'll be quick though, I promise.\"\n\n\"I'll wait outside,\" I said, a little awkwardly.\n\n\"Don't be silly! You've seen me naked enough times now at Belinda's house.\" And with that she started undressing while I carefully studied the various arty prints on her wall.\n\nWhat she said was quite true. Of course there had been occasions when all four of us had been at Belinda's house and clothes had naturally been dispensed with. I had never been alone with Penny in this kind of situation however. When it was just the two of us at home we had kept to a certain unspoken protocol that had emerged naturally and had felt appropriate given the age gap between us.",
        "Now that was forgotten, it seemed. Off came the sweatshirt, establishing that she was not wearing a bra. She seemed to spend a disproportionate amount of time choosing a new one, finally settling on a white one that, from the corner of my eye, seemed no different from the previous three she had considered. Off came the loose trousers, to be replaced by a simple black skirt that finished some distance above the knee.\n\nShe brushed her hair quickly then examined herself critically in the mirror. \"God, what a sight! But I'll have to do. Sorry.\"\n\n\"You look lovely,\" I said again.\n\n\"You're sweet,\" she said and impulsively kissed me on the cheek. I hugged her, feeling a sudden rush of affection for her. Whatever happened, I told myself, her happiness should come first. If she doesn't like what you're about to tell her, you'll have to end it.\n\nBut, not for the first time, I was to be surprised by the female psyche.\n\n**\n\nThe pub was a pleasant surprise. It had looked nice enough from the outside, but when we stepped inside we were both won over by its homely, cosy charm. We found a corner table and Penny instantly began to peruse the menu.\n\n\"I am starving,\" she said. \"I'm going to stuff myself like a pig if that's OK.\"\n\nI laughed. \"You do that. I may do the same.\"\n\n\"Oh god, I can't decide. Grilled chicken or the lasagne?\"\n\n\"Order them both. We can share.\"\n\n\"Really? But don't you want to have something else? I bet the steaks here are good.\"\n\n\"No,\" I said. \"That's fine. You choose our main meals for us to share, I'll choose the desserts.\"\n\n\"You are the perfect uncle,\" she said cheerfully. \"Can I have a shandy as well?\"\n\nI went to the bar and got the drinks and placed our order. When I returned to the table she looked at me.\n\n\"Can I ask you something?\"\n\n\"Sure.\" I was wary. Had Ellie perhaps messaged her already? Or perhaps Ellie had messaged Jess, who'd told her?\n\nBut it wasn't that.\n\n\"What did you think of Sue?\"\n\nI considered, a little relieved that I didn't have to dive into my own news and explanations just yet. \"She seemed... nice. Is she... a close friend?\"\n\n\"Not really. I haven't known her long. Just a week, really.\"\n\nI nodded. There was clearly more to come, though Penny didn't seem quite sure how to proceed.\n\n\"Does Jess know her?\"\n\n\"Hmm. Sort of. Jess doesn't like her much, actually.\"\n\n\"Oh. Why not?\"\n\nPenny fidgeted with the cutlery, arranging her knife and fork first one way and then another.\n\n\"She thinks... well, she thinks she's manipulative and... it's hard to explain. And a bit embarrassing.\"\n\n\"OK,\" I said. \"Well, I'll listen if you want to tell me, but if you don't want to, that's also fine.\"\n\nShe glanced up at me, then took a deep breath.\n\n\"Well... Jess says she -- I mean Sue -- gets off on seducing straight girls. So she's not with me because she likes me, but because I'm... like a challenge.\"\n\nI pondered this for a moment. \"And would you say you are... straight?\"\n\n\"Yes... mostly. I mean I definitely thought I was. But men have been so... shit recently. I mean... not you. But the ones I've been meeting.\"\n\n\"I'm sorry to hear that,\" I said. Which I genuinely was.\n\n\"So -- when Sue started showing an interest, I was kind of like -- well, why the hell not?\"\n\nI nodded. \"And did it... live up to your expectations?\"\n\nShe blushed. \"I can't quite believe we're having this conversation.\"\n\nNor me, I thought. But if you think this is sharing intimate details, wait until you hear my news, my darling niece.\n\nShe fiddled some more with her cutlery. \"I mean -- yeah, it was pretty good. Sue... she's pretty experienced. So... without going into all the details... it was pretty satisfactory, really.\"\n\n\"Well, that's good, isn't it?\"\n\n\"Yeah. I suppose. But... I feel a bit used, somehow. She's fun to be with, but I think she's going to move on pretty soon to her next conquest. And then I'll feel even more shit.\"\n\nI reached out and put my hand over hers. \"I'm sorry,\" I said. \"But it sounds like you're being very clear-headed about the whole thing. Much more intelligent and aware than I was at your age. By about a million miles.\"\n\n\"Thanks,\" she said.\n\n\"So maybe you should make the first move? Dump Sue before she dumps you?\"\n\n\"I don't know. That feels a bit mean. I hate breaking up with people. I much prefer it when they do it. Then I can feel sorry for myself for a bit but that's much better than feeling guilty that you've hurt someone, isn't it?\"\n\nAt that moment I don't think I have ever felt such a surge of love as I did at that moment for that slightly embarrassed girl sitting opposite. I squeezed her hand hard.\n\n\"Penny,\" I said. \"You are just... wonderful. It'll sort itself out. Don't worry. And there's a whole gang of people out there who are just waiting to find somebody like you.\"\n\nShe smiled at me. \"I'm not expecting a Disney movie ending just yet. I just want to... have some fun with some nice, sexy, attractive people.\"\n\n\"I completely get that,\" I said. \"I really do.\"\n\n\"How are you and Belinda? Still groping each other and giggling like teenagers?\"\n\n\"Certainly not,\" I said. \"We behave with suitably grown-up decorum at all times.\"\n\n\"Fuck off!\" Penny was cheering up considerably now. \"You're like a pair of hormone crazed fuck bunnies.\"\n\n\"Language!\"\n\n\"Well -- sorry. But you are. Neither Jess nor I can believe that you and her mum are probably having more sex than most of the people we know put together. Poor Ellie, having to share a house with you two.\"\n\n\"Yessss... that's part of why I came to see you,\" I said.\n\nPenny removed her hand from mine and looked at me suspiciously. \"Have you upset Ellie?\"\n\n\"No.\"\n\n\"Because if you have, I may have to kill you. I mean, I love you -- but Ellie's one of my best friends. So I would fucking kill you.\"\n\n\"There will be no need to kill me,\" I said. \"I mean -- not because Ellie's upset. You may want to kill me... for other reasons.\"\n\n\"What the fuck have you done?\" All thoughts of Sue were long gone. She was staring at me now with a steely, focused glare that was surprisingly intimidating.\n\n\"Well... it wasn't actually my idea,\" I said. \"I want to be clear about that, OK?\"\n\n\"Tell me what you've fucking done!\"\n\nHer voice was getting louder. Some other diners in the pub gazed over at us, and I smiled weakly at them.\n\n\"Keep your voice down! I promise you... Ellie and Belinda are both very happy. And so am I.\"\n\n\"What the fuck is it then?\" An angry whisper now, which was something.\n\n\"Well... Belinda told me... Ellie's been having some boy trouble of her own. And that... maybe I could help.\"\n\nPenny stared at me for several long moments. I could see realisation begin to dawn.\n\n\"No. Fucking. Way.\"\n\nAt that moment the waitress arrived with our food. This gave both of us the chance to organise our thoughts and compose ourselves a little.\n\nWhen she'd gone, Penny leaned forward. Her mounting anger had apparently receded, to be replaced by an eager curiosity.\n\n\"So you and Ellie... and Belinda was cool with it?\"\n\n\"She pretty much... organised it.\"\n\n\"Fuck! That's... fuck!\"\n\n\"Yes,\" I agreed.\n\n\"I mean -- I knew Ellie really fancied you... even you must have seen that... and I knew Belinda has always been pretty open-minded and cool with all kinds of things... but... fuck!\"\n\nShe saw something in my face and scoffed.\n\n\"You didn't know Ellie fancied you?\"\n\n\"It was... a bit of a surprise,\" I admitted.\n\n\"God! Men really are stupid! I bet you've got no idea at all that... well, never mind.\"\n\n\"What?\"\n\n\"Forget it. Tell me about you and Ellie.\"\n\n\"Well... I'm not going to give you all the details. But... we had a very... satisfactory and agreeable time.\"\n\n\"God, I hope it was better than you make it sound. That sounds like you took her to the zoo.\"\n\n\"No... it was all... very much at home. Belinda went out for the day... and Ellie and I stayed home for the day.\"\n\n\"Fuck! Does Jess know?\"\n\n\"She's probably being updated about it all as we speak.\"\n\n\"God, I can't wait to speak to her. And Ellie! That clever little... And you! Talk about being fucking lucky!\"\n\n\"I know.\"\n\nTemporarily lost for words, Penny turned her attention to the food. She ate hungrily, but her eyes kept returning to my face. To my relief she seemed more intrigued and amused than angry or upset.\n\n\"So,\" she said, having devoured most of her meal and a reasonable proportion of mine, \"was it like a one-off? Or are you now the live-in stud for both of them?\"\n\n\"Um -- I think probably the latter. For now, anyway.\"\n\n\"Are you going to have like a timetable? Or alternate weeks, or something?\"\n\n\"I have no idea. This literally just happened yesterday.\"\n\n\"So you spent all of yesterday shagging Ellie?\"\n\n\"Well... not all of it. But... quite a lot.\"\n\nShe chewed her lip. \"God. I can't wait to talk to Ellie and find out how it was.\"\n\n\"What?\" I was genuinely startled.\n\n\"We share everything. Of course she'll tell me all about it.\"\n\n\"Well... maybe some things you're better off not knowing!\"\n\n\"Why? What are you ashamed of? I'm sure she'll mostly have good things to say. Both the girls say Belinda's been like a giddy schoolgirl since you started shagging her.\"\n\nI admit this pleased me more than it should, even if it didn't entirely square with my own observations.\n\n\"Really?\"\n\n\"Yes. Though don't get big-headed about it. There's always room for improvement.\"\n\n\"OK,\" I said, suitably abashed. \"But -- Ellie will... basically tell you everything?\"\n\n\"Oh yeah. I mean -- not quite thrust by thrust, but certainly all the key information.\"\n\n\"Key information... and that would be...?\"\n\n\"Oh -- you know. How many times she... you know. How good they were. If she faked any. How many times you did. Where you did. Any things you did she didn't like. Any things that you didn't like. Positions. Stamina. You know -- the important stuff.\"\n\nEven though I was horrified by this, I had to settle one thing immediately.\n\n\"Hey - no faking was involved.\"\n\n\"I'm sure she didn't fake,\" she said soothingly. \"And if she did, I won't tell you, so don't worry. You can continue to bask in your male pig-headed ignorance.\"\n\n\"Thanks,\" I said. I was still appalled at the level of detail my niece was confidently expecting to receive.\n\n\"Can I call her now?\"\n\n\"No! Absolutely not.\"\n\n\"I'm going to text her. You can't stop me doing that.\" And with that she pulled out her phone and began to tap away, the tip of her tongue visible at the corner of her mouth as she focused on the tiny phone keyboard.\n\n\"Who'd like dessert?\" asked the waitress brightly.\n\n\"Not for me,\" said Penny. \"I've eaten too much already. But he can have some. He's really been burning off the calories recently. I'll have a coffee though, please.\"\n\nShe put her phone on the table and gazed at it expectantly. We both did.\n\nIt wasn't long before it buzzed. She picked it up and looked at it. Then she looked at me. It was a slightly different look from any I could remember ever giving me before. As if she was seeing me in a new light.\n\n\"Goodness,\" she said softly. \"Quite the rave review.\"\n\n\"What did she say?\"\n\nShe tutted. \"I'm not going to tell you. That would be breaking a confidence.\"\n\n\"Breaking a... talk about double-standards! She's telling you everything about me!\"\n\n\"Yes... it's not really fair, is it? But... I think you've ended up with quite a good deal, so you're in no position to complain, are you? Now go and pay the bill, like a good uncle. I want to ask her a few more things before you drive me back.\"\n\nI did what I was told.\n\n**\n\nFor most of the drive back she was engrossed in her phone, short, staccato bursts of typing followed by pauses as she waited for the replies to come back. Occasionally there would be a small snort of amusement, which didn't do much for my ego, but I manfully restrained from enquiring as to the exact content of the communications. Some things it's better not to know.\n\n\"Is... Jess on the chat too?\" I asked, trying to sound casual.\n\nPenny made a vaguely affirmative noise.\n\n\"And... how is she?\"\n\n\"She's going to cut your dick off,\" said Penny cheerfully.\n\n\"Really?\"\n\nPenny was distracted again. \"What? Oh - no. Not really.\"\n\n\"So she's OK?\"\n\n\"What? Oh... you'll have to find out, won't you? Now shush.\"\n\nI shushed.\n\nWhen I parked outside her block she looked up, sighed, and put her phone in her bag. Then she turned and faced me.\n\n\"My uncle,\" she said thoughtfully. \"Who'd have thought it?\"\n\n\"I know.\" I hesitated. \"Shall I come in... or do you have stuff to do?\"\n\n\"I need to do some things,\" she said. \"I need to speak to Jess. And... I need to speak to Sue.\"\n\n\"OK. Well -- call me if I can do anything.\"\n\n\"I think you've done quite enough for one weekend. Aww -- you're blushing!\"\n\nShe leaned over and hugged me. I hugged her back, relieved that we were still on speaking terms. Better than that. She seemed more amused and entertained than grossed out or hurt.\n\nShe pulled away slightly, and cupped my face in her hands. Then, to my surprise, she kissed me on the lips. Not a long kiss, but not a peck either.\n\n\"Don't forget about me,\" she said. \"What with all these women throwing themselves at you.\"\n\n\"Never,\" I said. \"I promise.\"\n\n\"Good. Now sod off home. I'll text you later. Though you'll probably be too... busy to see it.\"\n\nThen, with a final cheeky grin, she opened the door and got out. I watched her walk away, her trim figure moving confidently and attractively as she strode towards the entrance doorway. The sensation of her kiss still lingered. I remembered the glimpses of her body I'd seen earlier that day. Was there something of a sexual spark between us now? Surely not.\n\nI told myself severely I just had sex on the brain. I was seeing it everywhere. Then I started the car again and drove home.\n\n**\n\nOver the next week Belinda, Ellie and I worked out a kind of routine. In essence I spent alternate nights in each of their beds, which was fine and lovely of course, and I was prepared to put up with the mild inconvenience of never quite remembering where I'd last left my phone charger or my clothes. Amazingly I also managed to press on with my studies, which I was still enjoying and doing well at, with very positive feedback from my tutors.\n\nOn balance, I couldn't really believe life could get much better. Though I did sometimes think of my sister, and then I would feel a wave of regret that all of this good fortune for me had come at the expense of losing her. That I would never get to apologise to her for all my selfish behaviour of the past.\n\nI also had a succession of teasing texts from Penny, who would send me links to various health supplements and medicines designed to keep male strength up. I ignored them. When I enquired about Sue, she said that she'd decided to keep the relationship going for now as they were in a drama production together and it would be too awkward to have a messy split now. I wasn't sure this was the best reasoning but I let it go. Sometimes you have to let people figure out things on their own.\n\nI heard from Belinda that Jess had taken the news of my involvement with her older sister quite well, though she'd had a lot of questions and had mainly been concerned that I wasn't taking advantage of them.\n\n\"But don't worry. I put her straight on that score,\" said Belinda, gently massaging my cock. \"I said that all of us were very content. But she may give you the third degree when she comes home this weekend.\"\n\n\"This weekend?\"\n\n\"Mmm.\" She lowered her head and took me in her mouth for a moment before withdrawing. \"She wants to come home for a few days -- I'm going to get her on Friday.\"\n\nI groaned as her mouth went back around me. \"OK... I'll prepare myself for interrogation.\"\n\nBelinda busied herself for a few minutes then paused again. \"Oh, and I was thinking of inviting some people around next week for supper. Wednesday evening?\"\n\n\"Sure,\" I said, a little faintly. \"Whatever you want.\"\n\n\"Would you like me to stop talking and just focus on blowing you?\"\n\n\"Well... I wouldn't want you to think I was taking advantage... but... well... yeah\"\n\nShe chuckled and ran her tongue along the underside of my cock. \"Do you want to come in my mouth?\"\n\n\"Mmm yes please...\"\n\n\"OK,\" she said. \"You do that.\"\n\n**\n\nWhen Belinda arrived back with Jess that Friday evening I was on the sofa with Ellie snuggled up beside me. I was reading and she was watching a film on Netflix, her head on my shoulder. We were naked, of course.\n\n\"Aww... look at the two lovebirds,\" said Jess. But her tone was friendly. Belinda smiled at me reassuringly.\n\nEllie bounded from the sofa and hugged her sister.\n\n\"I've missed you, Jess!\"\n\nWhen Ellie stepped away I got up and gave Jess a slightly awkward peck on the cheek. She gave me a look that I couldn't quite read, then started to get undressed. Belinda had already bustled through to the kitchen to start getting supper ready.\n\nJess sighed. \"It will be nice not to have to wear any clothes for a couple of days.\"\n\nEllie and I returned to the sofa. After a moment's hesitation Jess joined us there. I sat on one end with Ellie leaning against me, turned to face her sister who sat at the opposite end. Within a few seconds the girls were engrossed in conversation, swapping news and gossip. I returned to my book, though I wasn't able to give it my full attention.\n\nI had my arm around Ellie and I was absent-mindedly stroking her arm, as I often did when I read. I loved the feel of her smooth skin under my fingertips and she seemed to like it too, sometimes nudging me to continue when I stopped to turn a page. Once when I looked up I saw Jess staring at my hand, then she hastily dragged her eyes away and looked back at her sister.\n\nAbout fifteen minutes later Belinda called that supper was ready and we trooped through to the dinner table. It was a friendly, chatty meal with lots of teasing and laughter, as meals always seemed to be in that house. A long way from the strained, formal meals I remembered from my own childhood. But I sensed a slight reserve in Jess's attitude to me. She was polite and smiled and it would have taken a keen observer to note that anything was different. But I sensed it, and when I caught Belinda's eye I saw she did too.\n\nLater I helped clear up while the two girls went off to the living room. Belinda put her arms around me.\n\n\"She's just adjusting,\" she said. \"Don't worry.\"\n\n\"You sure?\"\n\n\"Absolutely.\"\n\n\"I hope she doesn't feel... you know... that I just expect her to hop into bed with me too.\"\n\n\"No. I told her that in the car on the way back. That you're very special to Ellie and to me, but she shouldn't take that as any kind of guide to what she should do.\"\n\n\"Good,\" I said.\n\n\"I did tell her you should spend some time together. I'm going to take Ellie out tomorrow morning, so you'll have a few hours then.\"\n\nI looked at her suspiciously.\n\n\"You're not going to hide my clothes again, are you?\"\n\nShe laughed. \"No. Not this time. Last time you needed a bit of a push, but this time the ball is entirely in Jess's court. In fact, maybe you could take her out for a nice brunch somewhere. It might not be a bad thing to have some clothes on for once.\"\n\n\"Good idea,\" I said, and kissed her. She put her arms around me and pressed her lovely womanly body against mine.\n\n\"Mmm,\" she said. \"My turn with you tonight. I hope you're feeling energetic.\"\n\nI nodded, and kissed her again. I could feel myself hardening against her. She reached down and rubbed me gently.\n\n\"Don't do that,\" I said. \"I've got to go back in there and sit with the girls.\"\n\n\"You don't want Jess to see your lovely cock nice and hard next to her on the sofa? She might have to get used to it.\"\n\n\"Maybe not just yet,\" I said, and moved her hand firmly away. She pouted, but didn't protest further.\n",
        "That night Belinda seemed even more aroused than usual, making love to me with an animal intensity that was exhilarating. For that hour it seemed like nothing else mattered in the world but our two bodies and the pleasure we could give each other and generate for ourselves.\n\nRight at the end, as I was pounding her brutally as she lay spread-eagled beneath me, I felt her arms go around me once more and she pulled my head down towards hers, turning slightly so her mouth was next to my ear.\n\n\"Fuck me daddy,\" she whispered. \"Fuck me and come in me.\"\n\nThe words were like an electric shock. I gasped and almost immediately began to spurt deep inside her. I felt her own orgasm start and spread to meet mine, her body spasming as her muscles contracted and milked the seed from my cock. I came for what seemed like an eternity, throwing rope after rope of my milky semen into her before collapsing on the bed beside her.\n\nAfterwards, as she lay in my arms, both of us still panting from our exertions, I wondered if I should ask her where that thought had come from. But something made me hesitate. It could wait for another day. Or perhaps never. I knew her saying that had excited us both hugely. And some things are better left undiscussed. These days we're encouraged to talk about everything, but when it comes to connecting sexually, a sense of mystery - and yes, of the taboo - can be a wonderful extra ingredient.\n\n**\n\nIn the morning Jess slept in, so after I said goodbye to Belinda and Ellie I found myself at something of a loose end. I caught up on some of my client work and then fiddled a little with one of my course assignments. But I knew I was mainly changing the essay for its own sake, not actually making it better, so after a while I gave up and closed the laptop.\n\nI looked at my phone. It was nearly eleven. If I was going to spend any time with Jess she needed to surface soon. But maybe she was avoiding me. It was certainly an unconventional arrangement that she'd returned home to, so it would be understandable if she decided to just lie low until her mother and sister returned. If she thought all that lay downstairs was an excruciating, embarrassing conversation with an older man who she suspected of taking advantage of the other members of her family... it would make perfect sense to stay exactly where she was.\n\nI pondered what to do. Then I remembered what Ellie had said about Belinda's rule of thumb. In any difficult situation where you can't decide on the \"right thing\", the thing you least want to do is probably the thing you should do.\n\nSo I made her a cup of tea. Jess was very partial to herbal teas, so I rummaged around, found a box of peppermint tea, made her a cup, made myself a cup of normal tea (there are some lines even I won't cross), put them on a tray, and went upstairs.\n\nI knocked on Jess's door.\n\n\"Jess? I've made you some tea. Can I come in?\"\n\nThere was a muffled noise that sounded vaguely affirmative, so I opened the door and went in.\n\nJess was buried deep underneath a duvet, her blonde head just visible on the pillows. The room was dark, so after putting the tray down on a chair I went to the window and pulled the curtains slightly open, allowing a small stream of light into the room.\n\n\"What's the time?\" Her voice was sleepy.\n\n\"Eleven.\"\n\n\"Oh. It's late.\"\n\n\"No rush. You stay there if you want to. I was maybe going to take you out for brunch, if you wanted to, but if you'd rather stay there, that's fine.\"\n\n\"Mum and Ellie gone?\"\n\n\"Yes. They left over an hour ago.\"\n\nSilence. I didn't quite know what to do. I suspect she didn't either.\n\nThen, in a very low, nervous voice, she asked: \"Are you expecting to get into bed with me?\"\n\n\"No! Absolutely not, Jess!\"\n\n\"You don't think I'm attractive?\"\n\nEven then I had to smile. We all have an ego.\n\n\"You're lovely. Beautiful. Gorgeous. But... I'm with your mum, and your sister, because that's what they chose. What they wanted. At least for now. But I have no expectations that you'll want the same, Jess. Why would you?\"\n\n\"You sure?\"\n\n\"Completely sure. I just want us... to still be friends, if you think you can manage that.\"\n\nShe made a sort of indistinct noise that could have been positive, negative or somewhere in-between.\n\n\"Drink your tea,\" I said. \"I'll see you downstairs later. When you're ready.\"\n\n\"Okay.\"\n\nI took that as my cue to leave. Just as I was about to leave, she called out.\n\n\"Rob!\"\n\nI paused. \"Yes?\"\n\n\"I... it's not that I don't find you attractive.\"\n\n\"Thank you,\" I said.\n\n\"We all do. All of us. But... it just feels wrong.\"\n\n\"I understand,\" I said. \"It feels... very strange to me as well. Not wrong... but I certainly feel like I don't deserve it.\"\n\nThere was a pause.\n\n\"Come and talk to me,\" she said finally. \"Please.\"\n\nShe sat up in bed and I came back into the room. She sat up and took a sip of her tea. The duvet had fallen down to her waist, revealing her lovely creamy breasts, though I was careful to keep my eyes on her face.\n\nI got my tea and went to sit in the chair by her dressing table.\n\n\"Come and sit on the bed,\" she said. \"I think I can trust you to do that.\"\n\nSo I went and perched a little cautiously on the end of her bed. I was naked, of course, and I knew she was too. I had a very strong physical awareness of her presence, and I fervently hoped I wouldn't get an erection.\n\n\"If you weren't with Mum,\" she said. \"Never mind being with Ellie as well... and if you had made a pass at me... I would have said yes.\"\n\n\"I'm very flattered,\" I said.\n\n\"But... because you are with them... I don't see how I can. I can't really explain it... but it's just a bit... I don't know... like you're a caveman and we're your harem. A bit... primitive.\"\n\n\"I get that. I really do.\"\n\nShe nodded. \"So... sorry, I guess.\"\n\n\"Hell, Jess, you don't have to apologise! I'm glad we can talk about it. And I'm glad you're being so understanding. I promise you -- I never want to hurt any of you. And if this gets too complicated... we'll fix it.\"\n\nWe looked at each other for a moment. I smiled at her and after a moment she smiled back. I turned back to the door.\n\n\"I'll see you downstairs,\" I said. \"You must be hungry. I'll fix you something to eat.\"\n\n\"Do we have any bacon? I would LOVE some if we do.\"\n\n\"Coming up,\" I said. \"See you in five minutes.\"\n\nDownstairs I busied myself getting her food ready. I was hugely relieved that conversation had gone as well as it had. She wasn't thrilled about the new arrangement, I could tell, but she was honest and open and surprisingly understanding. And I did see what she meant about the \"caveman\" nature of the arrangement. It did all feel rather... patriarchal.\n\nBut -- it also felt right. At least for now.\n\nJess came downstairs and sat at the breakfast bar, the sunlight dappled on her bare skin. She was naked except for a pair of woolly slippers which I found rather charming. She attacked the plate of toast and bacon with commendable focus and enthusiasm and I took myself into the living room to browse the news headlines on my tablet.\n\nAbout ten minutes later I heard the dishwasher go on and then Jess came and flopped down on the sofa opposite me. We chatted easily for a while about her course and how she'd adjusted to life away from home, and then I remembered something I'd meant to ask her.\n\n\"So -- when I saw Penny, I bumped into her friend Sue. Penny said you weren't a big fan of hers.\"\n\nJess wrinkled her nose. \"No. Not really. Not at all, if I'm honest.\"\n\n\"Because she's just looking for conquests?\"\n\n\"She's on a power trip, that's for sure. She really gets off on seducing straight girls. Getting them all confused and mixed up and then moving onto the next. That makes her a bitch, if you ask me.\"\n\n\"If that's true, then I think so too,\" I said. \"How do you know this?\"\n\n\"One of the girls on my course is doing her first year again. Turns out one of the main reasons she dropped out last year is because Sue messed with her head, made her think they were made for each other and were going to be together forever - and then just dropped her.\"\n\n\"Should I be worried about Penny?\"\n\nShe considered. \"I am. A bit. But... you know, Penny's a bit like you sometimes. She's quite stubborn. And she's... processing a lot of stuff at the moment.\"\n\n\"What stuff?\"\n\nShe looked at me, then dropped her eyes. \"Private stuff. Not for me to say.\"\n\n\"OK,\" I said. \"Fair enough.\"\n\nI must have looked concerned because she looked at me very sympathetically. \"You really love her, don't you?\"\n\n\"I really do,\" I said. \"More than I thought I ever could.\"\n\n\"Good. Because otherwise I'd cut your balls off.\"\n\n\"Yikes.\" I shifted a little uneasily in my seat and she laughed.\n\n\"Though I guess my mum and my sister would be pretty annoyed if I did.\"\n\nThere didn't seem to be a tactful way to answer that so I didn't say anything.\n\nShe seemed to be thinking for a moment.\n\n\"Actually... can I ask you something? It might seem a bit weird. But... we seem to becoming quite a weird family, so... what the hell, right?\"\n\n\"You can ask me whatever you want.\"\n\nShe was quiet, as if thinking of the best way to phrase the question.\n\n\"Well... it's kind of about them, actually.\"\n\n\"About what?\"\n\n\"Balls. You know... a guy's balls\"\n\n\"OK,\" I said, more than a little taken aback. \"Er... what exactly?\"\n\n\"Well... I've not been with many guys. Three, if you must know. And I met this guy a couple of weeks ago, and he was really hot, and well... we ended up in bed.\"\n\n\"OK,\" I said again. I had no idea where this was going.\n\n\"Anyway... in the morning, he was asleep, and I was on the side of the bed against the wall, and I needed to get a drink of water, so I needed to climb over him.\"\n\nShe paused. Her face was red with embarrassment. \"God, I can't believe I'm telling you this.\"\n\n\"Go on.\"\n\n\"Well... I slipped. I think I was still a bit tipsy, to be honest. And my knee... went into his... you know. His balls.\"\n\n\"Ouch,\" I said, with deep feeling.\n\n\"Yeah... he was... in quite a lot of pain for quite a long time. I mean... I couldn't have permanently damaged him, could I? I've not spoken to him since... to be honest he was kind of rude about how clumsy I was so I just left... but I felt kind of bad. But I didn't want to message him and say 'hey, I hope your balls are OK?', could I? Do you think he'll be all right?\"\n\n\"He'll be fine,\" I said, with more sincerity than I really felt. \"I mean... you didn't feel anything get... well, crushed, did you?\"\n\n\"No... it was more of a... glancing blow with my knee.\"\n\n\"Then he'll be fine, I'm sure.\"\n\n\"Really?\"\n\n\"Really. He would have had an uncomfortable five or ten minutes, but after an hour... he'd probably have been completely recovered.\"\n\n\"Thank God,\" she said with evident relief. \"I've been really worrying about it. I mean, I would have been more sympathetic if he hadn't been such a dick, but... I didn't like feeling maybe he could never become a dad because of me.\"\n\n\"No danger of that,\" I said. \"I promise you, Jess.\"\n\nShe was silent for a few moments. Then she looked curiously over at my mid-section.\n\n\"They're really sensitive, huh?\"\n\n\"Yeah,\" I said. \"There's a reason your Mum told you to squeeze unpleasant men by the nuts. It's.. just about the worst feeling you can imagine.\"\n\nShe giggled, then looked apologetic. \"Sorry. So -- it's obviously happened to you a few times?\"\n\n\"Yes. I used to play quite a lot of soccer. Not an uncommon risk in that sport. I remember once I almost passed out after somebody hit a free kick right into me.\"\n\nShe winced. \"Ouch. Well, that's good to know. If you can recover from that and still shag my sister AND my mum on alternate nights, I really don't need to worry about that guy, do I?\"\n\n**\n\nThat night I slept with Ellie. I don't know if there was something in the water that weekend, but, just like her mother the previous night, she was also very frisky. For the first few times we had been together she had been loving and energetic but also a little on the submissive side when it came to taking the initiative. Now her confidence was growing and she had discovered, to her delight, that she could now read my body language to such an extent that she knew exactly when to slow down or change the pressure or friction to try and ensure I didn't come. Of course, I couldn't let this new approach go completely unchallenged -- I had my reputation as being a bit of a bastard to maintain. And so we had a quite wondrous and playful few hours, tormenting and teasing each other to delicious effect until we both collapsed in a sweaty heap, my seed trickling out of her after my second orgasm and her fourth.\n\n\"God,\" I said, when my breathing had returned to normal. \"You're trying to kill me.\"\n\nShe purred contentedly, her arm across my chest and her face buried in my neck. I stroked her hip and she pushed herself even closer into me. A few minutes later she was asleep, her breathing changing to become longer and heavier. I lay awake for a while, feeling drained and content, listening to her soft sounds.\n\nAll of this exertion had left me feeling rather dehydrated. I carefully disengaged myself from Ellie and went quietly downstairs. I made my way to the kitchen and got a glass of water, enjoying the coldness of it as I stood at the sink, looking out into the moonlit garden.\n\nI heard the soft footsteps of somebody else coming down the stairs and I made my way into the living room to see that it was Jess.\n\n\"Hey,\" I said quietly. \"Can't sleep?\"\n\n\"No. Too much bloody noise.\" She sounded deeply irritated.\n\n\"Oh.\" I hadn't realised our performance would have been audible, but I now remembered Ellie had cried out loudly several times and the walls in this house were fairly thin. It was entirely possible I'd made a bit of noise myself.\n\n\"Sorry.\"\n\n\"I mean, were you going for a world record or something?\"\n\n\"No. Just... having fun. I didn't realise we were so loud.\"\n\n\"Yeah. I figured. I mean -- I didn't think you were actually trying to torture me.\"\n\n\"Torture you?\"\n\n\"Yeah. Get me jealous and worked up and completely unable to sleep.\"\n\n\"Ah,\" I said. I wasn't quite sure what else I could add.\n\nShe looked at pointedly at my groin. \"I mean, I am actually in the mood to let you do whatever you wanted to right now. But of course, you're not going to be good for anything, are you?\"\n\n\"No,\" I said. \"I'm sorry -- I don't think I could.\"\n\n\"Probably just as well. I'd probably regret it in the morning.\"\n\nI nodded. She puffed out her cheeks and let out a long, frustrated sigh. Then she looked at me ruefully.\n\n\"Sorry to moan. It's all right. You can go to bed. Go and curl up with my lucky bitch of a sister. I'll be fine.\"\n\n\"Actually, I'm not that sleepy,\" I said. \"I was thinking I'd watch something or read for a while down here.\"\n\n\"Can I watch with you? Maybe that'll take my mind off it.\"\n\n\"Sure.\"\n\nSo we settled onto the sofa and started browsing through the various online services. We found a thriller on Netflix that neither of us had seen and started watching that. We carefully stayed at opposite ends of the sofa from each other.\n\nThe film wasn't that great and she started to fidget after about fifteen minutes. Suddenly, with a reluctant sigh she shuffled down the sofa to be next to me. She took the remote control and paused the film.\n\nShe took a deep breath. \"I know I said I didn't like the idea... but just knowing, if I wanted to, we could... you know... well... I haven't been able to think about much else, if I'm honest. And hearing you tonight with Ellie... and the other night with Mum. I mean... it's like this house is all about sex. Except... not for me.\"\n\n\"Sorry,\" I said again. It seemed inadequate.\n\n\"But you know what made me really jealous? Well -- not jealous -- but it made me feel funny inside.\"\n\n\"What?\"\n\n\"When I saw you stroking Ellie's arm. I could see... that it wasn't just sex. You really care about her, and Mum too.\"\n\n\"I do, yes. Very much.\"\n\nShe stared at the paused film on the television. I sympathised. This was an unusual, not to say unique, position for any young woman to find herself in. I wasn't sure I had any words that would help her.\n\nInstead I instinctively reached out and stroked her arm, long, gentle affectionate strokes along her forearm, caressing the top of her wrist and then back to the area near the elbow, back and forth, trying to convey in touch what I couldn't do with words.\n\n\"That's nice,\" she said. \"That feels really nice.\"\n\nWe sat like that for a while. Then, unexpectedly, she turned towards me and kissed me lightly on the lips. I kissed her back but remained passive, letting her decide how much further she wanted to take this.\n\nHer kisses slowly became stronger and more passionate, her tongue exploring my mouth. Then she broke free suddenly and stared at me, wild-eyed.\n\n\"Jesus,\" she said. \"I... I really want you, Rob.... I really need you.\"\n\nShe looked down again at my crotch, where my cock was, at best, semi-erect.\n\n\"But I'm going to have to wait until another time, aren't I?\"\n\nI stroked her hair and she pushed her face against my hand, kissing my palm. Then I kissed her forehead, and her nose, before planting a soft kiss on her lips. As I began to pull away she reached up and pulled my head back in for another longer, more heartfelt round of kissing, a small sigh escaping from her as she did so. Her breasts were pushed against my chest.\n\nSadly, she was right about my ability to perform again so soon. At least in the conventional way.\n\n\"Lie down,\" I said, and I pushed her carefully backwards so her back was against the sofa. Then I eased her forward so her bottom was on the edge of the cushion. I kissed her again, then lowered my head and kissed and sucked for a few moments on each of her nipples. She moaned.\n\nI trailed my tongue across her stomach and then further downwards, taking my time. She put one of her hands on my head and tried to push me closer to where she wanted me, but I smiled to myself and resisted the pressure. Instead I moved one of my hands up between her legs, stroking her inner thighs. She spread her legs wider to accommodate and encourage me.\n\n\"Yes,\" she said. \"Oh god please.\"\n\nI nuzzled the top of her pubic mound with my mouth as I raised my hand higher. I lightly dragged the tip of one finger down the lips of her slit then took the finger into my mouth so I could taste her.\n\n\"I'm going to make you come with my mouth,\" I murmured to her. \"Would you like that, Jess?\"\n\n\"God... yes... please...\"\n\nI slid a little lower so my face was just a few inches from her entrance. Once again I gently teased her with my finger, prising her puffy lips apart and tracing a pattern around her little erect clit. Then I knelt down and began to lick her, swirling my tongue up and around, writing careful, slow, leisurely letters on that perfect teen pussy.\n\nShe began to move beneath me, twisting and squirming as her excitement and frustration built. She stretched out with her hands to try and push me down more firmly into her groin but I took her hands in mine and pinned them firmly to the sofa cushions on either side of us. But I took pity on her enough to increase the pressure and the tempo of what I was doing. This was a girl who needed to climax badly, and in this case speed was more important than quality or duration. Or, to put it another way, this was no time to show off.\n\nAfter just a few minutes her breathing began to change, becoming shorter and more ragged. Then her body began to twitch and jerk in small, almost imperceptible jolts. She was close now, and I released her hands so she could do whatever she needed to take herself over the edge. Now those hands went around my head, both of them, and she pulled my face down hard against herself as she ground her pussy against my mouth and chin. I reflected distantly, not for the first time, on the surprising strength a woman can exhibit when she is close to orgasm and needs something to be just right.",
        "\"Oh god... oh fucking god... I'm going to fucking come...\"\n\nAnd she did, those tiny jolts suddenly increasing in size to a wave of more pronounced spasms. Her hands, which had been holding my head in place as if her life depended on it, now hurriedly pushed me a little away, as if her whole lower body couldn't stand any further contact. I gratefully sucked in some extra air and waited patiently for the rippling explosions to subside.\n\n\"Holy... Jesus... Fuck...\" she finally managed, after a minute had passed.\n\nI kissed her legs and then cheekily planted a soft kiss just above her clit, making her gasp. Then, as I started to get to my feet, she leaned forward, put her arms around me and kissed me deeply.\n\n\"Thank you,\" she said, when she finally broke away. \"That was... just lovely.\"\n\n\"For me too,\" I said. \"Thank you, Jessica.\"\n\n\"Really? But... you did all the work... and it's not like I did anything for you, even if you'd been able to.\"\n\n\"I loved it,\" I said, with complete sincerity. \"I hope you'll perhaps let me do it again, sometime. If you wanted to.\"\n\n\"God... definitely. That was just... exactly what I needed.\"\n\n\"Good,\" I said, and kissed her again. \"Now I'm going back to bed.\"\n\n\"Me too. I can sleep now. You may need to help me -- my legs feel all wobbly!\"\n\nI had my arm firmly around her as we went back up the stairs together. At the door to Ellie's room, she pulled me close for a final kiss.\n\n\"I wonder... next time... if we could do a bit more?\" she whispered.\n\n\"I'm sure we could that. But see how you feel in the morning. You may wake up and wish this had never happened. I hope not -- but see how you feel.\"\n\n\"No,\" she said, and even in the gloom I could see her smiling. \"I'm glad it happened. And next time...\" -- she leaned close, and whispered even more softly into my ear -- \"I want you to really fuck me with your lovely cock. And I'll be so, so careful with your balls, I promise.\"\n\nAs she said that she reached down and gently patted the objects in question. Then she was gone, a final glimpse of the whiteness of her buttocks as she turned and went off into her own room.\n\nI slid back into the sheets beside Ellie, who rolled over and put her arms around me.\n\n\"Did I just hear you make my sister come?\" she murmured sleepily.\n\n\"Sssh. Yes, you did. Now go back to sleep.\"\n\nShe lifted her head and pecked me on the cheek. \"Good boy,\" she said woozily, and a few seconds later she was asleep again. It didn't take long before I was too.\n\n \n"
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "free use",
        "mother daughter",
        "nudist",
        "older man",
        "sisters",
        "younger woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/helping-her-saving-me-ch-03"
}