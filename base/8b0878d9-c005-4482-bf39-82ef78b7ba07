{
    "title": "The Mystic Adventure Ch. 04",
    "pages": [
        "(This is part 4 of the Mystic Adventure. It doesn't really stand on it's own so please consider reading from part 1.)\n\nWe lay there a bit longer as the girls recovered their senses and I tried to figure out how my life had changed so utterly and completely during the last few days. \n\nI thought back to the morning of the drive to the airport and how I felt somewhat lost without \"you know who\". I had dreaded the process of tying up loose ends and then trying to meet a new person. The process of finding out if two people are compatible and could get along through all the little challenges of a relationship can be exciting but daunting as well. I remember thinking that I would just cool it for awhile. \n\nYeah, I don't think this quite fits the definition of \"cooling it\". \n\nI looked over at Kelly. She was looking at me.\n\n\"You're thinking you should have left me at that Cruise counter aren't you?\", she grinned.\n\nFuck. It's like she can look straight into my head, see exactly what I'm thinking, and then come up with a quip that sums up a feeling I've been working on shaping for how many minutes, by saying just the opposite. \n\nI rolled over onto her and kissed her with as much passion as I could possibly muster. I had that feeling again. That feeling of just wanting to \"absorb\" her or something. Our bodies were fully pressed together but I couldn't seem to get close enough to her. I wanted to melt into her somehow. \n\nI caught a breath by just opening my mouth a bit but still basically keeping it on hers, \"Yeah, big mistake\", I mumbled. \"I shoulda kept walking.\"\n\nShe grinned around my mouth and pulled me tighter - like she was trying to get closer to me. \n\n\"God. You two are sickening.\" We looked over at Kim. She still had her eyes closed and was trying to give us shit but she broke into a grin, betraying her sarcasm. \n\nKelly gave her a playful punch in the arm. \"Watch it sister, I *am* still letting you play with my toy you know.\"\n\n\"Oh, he's *your* toy now?\" Kim was still smiling.\n\nHmm. I was a \"Boy Toy\" now? How cool is that? \n\nKelly looked back at me and her face suddenly got serious. \"Yes, he is.\" \n\nHead. Spinning. \n\nShe had done it again. I thought I had prepared myself for her devilish attacks on my heart but clearly, I hadn't. She had distracted me with her playful banter and, when I wasn't looking, sliced me open and climbed inside in one masterful stroke. \n\nEven though I was laying on top of her, I could feel my knees get weak. I felt it throughout my whole body actually. I looked deeply into her bright blue eyes and saw them well up with tears. She lifted her head up and kissed me and pretty much fucking merged our soles. \n\nI think this is where the term \"head over heels\" came from. I felt like one of those guys in a cheesy sci-fi movie when he's falling through some sort of time warp. I didn't know which way was up and which way was down. I just knew that I was tumbling into a heavenly oblivion.\n\nI'm not sure how long I fell but at some point, we disengaged and looked over at Kim. \n\nShe was just staring at us. \"Fuck. Me.\"\n\nI guess a little bit of what was happening on the inside of us was conveyed to the onlooker on the outside.\n\nKelly switched gears again. \"Yeah, I'll still let him fuck you but no more quips about us being sickening - got it?\", she said matter-of-factly, but playfully.\n\n\"OK Boy Toy, you're crushing me.\" She pushed me off of her and sat up. I lay on my back in the sugary sand. \n\nKelly looked over at me, \"I hate to leave this place but don't we have reservations for dinner at the the Bitter Pill Yacht Club or something Brad?\"\n\nI laughed at her \"accidental\" screw-up of the name. \"It's the Bitter *End* Yacht Club you goof. It's a quick sail up to Gorda Sound. We should be fine but we should be going.\"\n\nThe girls grabbed their clothes and waded out into the water to wash the sand off before putting their things back on. We swam back through the tunnel to the other side and made our way over the rocks and back to the dink on the beach. \n\nOn the ride back to the boat, Kelly slid her hand over to mine and grabbed hold. It was very sweet and touching. She looked over to see Kim looking at us again. \n\n\"Not a word Kim\", Kelly said before Kim even had a chance to *think* of anything to say. Kim just smiled and shook her head. \n\nWe got back to the boat and the girls hosed themselves off with fresh water on the transom platform while I started getting things ready for the trip up and around the top of Virgin Gorda to Gorda Sound and the Bitter End. \n\nThere were quite a few boats anchored off the Baths and I was looking around to figure out the best way to maneuver out after raising the anchor.\n\n\"Kell, hand me the binoculars.\" Among the boats arriving at the beach hunting about for a spot, I saw a boat that looked familiar. Kelly handed me the binocs and I tried to get a look at the name of the boat. \"Razor,\" I said. \"Steve's here.\"\n\n\"Ooh,\" Kim perked up, \"let's call him on the radio and see if he wants to have dinner with us!\"\n\n\"Actually, I have a better idea,\" I said.\n\n\"Let's let him get anchored and then you guys put on your skimpiest suits and take the dink over and ask him to put suntan lotion on you. Tell him you asked me but I didn't want to get my hands greasy. You'll blow his mind.\"\n\n\"I think Kim might blow something else,\" Kelly winked at Kim who seemed to be almost licking her lips at the thought.\n\n\"You're bad Brad,\" Kim said, \"but I like the way you think.\"\n\nThe girls went below to get on even smaller suits than they already had on and I tried to stay out of view in case he happened to scan the other boats just like I did. As I watched him anchor, I noticed that his buddy just seemed to be sitting in the cockpit, not doing anything to help. Steve was running back and forth between the helm at the stern and the anchor at the bow - practically killing himself to get the boat anchored by himself. Steve did a great job getting the anchor set though and I was impressed by his seamanship. \n\nOnce he was settled, I called to the girls down below to see if they were ready. \n\nThey were ready.\n\nAs they came up the companionway stares, my jaw dropped again. I didn't think it was possible to have so little fabric be involved in a bathing suit. I instantly knew that they were wearing suits from Micro Kitten which are widely known as pretty much the smallest suits there can possibly be. The tops were thin strips of sheer fabric that barely covered their nipples and nothing else. Kim's was lime green and Kelly's was white. The bottoms were so small that even though their pussy hair was trimmed to almost nothing, it still peeked out of the top of the suit. \n\n\"Oh my fucking god,\" I said as they came into the cockpit. \"This may not be such a good idea. I don't think it's healthy for a man to have virtually all of his blood rush to his dick at once. You two are going to kill him.\"\n\nThey laughed as they adjusted the little straps and patches of fabric. \n\n\"Not much left to the imagination is there,\" Kelly said as she looked down at her own crotch and tried to keep the fabric from being sucked into her cunt. \n\n\"I can imagine plenty.\" I handed them a hand-held radio that I had set to channel 8. \"I've set this to continually transmit. I want to hear everything so keep it close to you if you can.\n\n\"Take the dink forward from here first, then over to his boat and then back to his stern so he doesn't see you until you get there. This is going to be awesome.\"\n\nI helped the girls into the dink and it was all I could do not to attack them right there. They were impossibly hot in those suits. Frankly, I was a little jealous that they were wearing them for Steve and not for me. Yeah, like I've suffered so much on this trip...\n\nJust before Kelly got into the dink, she stopped and turned to me. She put both her hands on my face and kissed me tenderly. It was like \"Ok, pause the slut act, yeah, I'm still totally into you, I'll be back after I finish this little diversion,\" kind of thing. By now, I was feeling like I could completely tell every little meaning in these things she did and that's exactly what she meant with that kiss. \n\nIt felt good.\n\nShe hopped in the dink and they headed off for the show. \n\nI turned on my radio and could hear them fairly well even over the din of the engine. I knew it would be fine once they turned it off at Steve's boat. \n\nI looked over at Razor to see if Steve might spot them coming but he was busy in the cockpit and would disappear below from time to time bringing back food or drink for his buddy. The girls quickly made their way over and then cut the engine back to approach quietly. They pulled up to the stern and cut the engine. \n\n\"Hello! Anybody home?\" I had the binoculars out and saw Steve's buddy look up and see the girls climbing out of the dink. I swear, the beer he was holding actually fell out of his hand as he stared at them, frozen with the view. \n\n\"Whoever it is, come on aboard,\" I heard Steve's voice and then saw his head pop up out of the cabin. \n\n\"Holy fuck.\"\n\n\"Hi Steve! We thought we saw you come in,\" Kim said as she came forward. As Steve came up from the cabin, she walked right over to him, wrapped her arms around him, and smashed her face onto his.\"\n\nAfter a few seconds, she pulled back. \"You remember us from the dock right?\" \n\n\"Yeah sweetie, I think I remember you quite well. Where's Brad?\" He started looking around but Kim grabbed his head.\n\n\"Aw, don't worry about him. We were going to lay out and get a tan but Brad didn't want us getting the deck all oily. He's such a poop. Can we use yours?\"\n\nI looked back at Kelly who had discreetly put the hand-held radio in a drink holder in the cockpit so that I could pick up all the action. Good girl.\n\nShe went over to Steve's buddy, \"It looks like you dropped your beer. Let me get that for you.\" She bent over his lap to reach down to the cockpit floor to reach the beer can rolling around there. Of course, this put her ass, which was basically only covered by a string, right in his face. \n\n\"You bet you can sun bathe on my dick, deck. Anytime you want ladies.\"\n\n\"Would you put the lotion on us too? We can't reach everywhere it needs to go.\"\n\nOh yeah, baby. Lay it on thick.\n\nSteve was starting to chuckle, now starting to realize that this was a game they were playing. He looked up again; scanning the surrounding boats and quickly saw me sitting on deck with the glasses on him. He gave me the \"You!\" point and a thumbs up, which I gave back. \n\n\"Hi Steve, I'm Kelly. I know you already know Kim. Who's your friend? He seems a little tense.\"\n\n\"Hello Kelly. You, both of you, are absolutely stunning. I can't believe Brad lets you off the boat. \n\n\"This is Jerry. He's an old friend from way back. Still kind of struggling with your sea legs aren't ya Jerr?\" \n\nJerry didn't say anything. I think was still in shock at the exposed girl flesh that was 6 inches from his face. \n\nKelly sat down next to him and put her arm around him and gave him a hug. This, of course, caused her tits to be smashed into his chest. \"Aw, I'm sorry to hear that Jerry. I'm sure you'll be fine. You don't mind if we sun bathe on your boat do you?\"\n\nJerry just stared at her tits and slowly shook his head in reply. \n\nKelly popped up and put her arms around Steve and gave him a quick hug and kiss. \"It's great to meet you Steve. Will you do us? With the oil?\" \n\nMan, she's good.\n\n\"Oh darlin', I would be honored to do you, with oil,\" Steve said as he followed them up on deck. \n\nThey both lay down on the towels they brought and handed Steve the oil. They were on their stomachs and Steve started rubbing oil on their backs. I couldn't really hear very well since the radio was back in the cockpit but I could see them pointing to where he missed a spot. I could see Steve hesitate after he had done their backs and legs. The only spot \"undone\" were their asses. Kim raised her head and looked back at him and pointed to her butt. That was all Steve needed and he went to work oiling up their asses. \n\nKim reached over to Kelly and untied her top. She motioned for Steve to do her back again and then untied her own top and lay back down. When Steve had finished their backs, they rolled over onto their backs for the front side application. Of course, with their tops untied, they \"accidentally\" got twisted as they rolled. Kim reached over to Kelly and pulled her top all the way off and then pulled her own off as well. I saw Steve just sit down and look over at me and shake his head. Yeah, welcome to my world buddy.\n\nSteve hesitated again, not knowing whether to apply the oil to the front or not. Clearly, they could reach everyplace they needed themselves but that wasn't really the game was it? I saw Kim make a gesture that said \"Well?\", and Steve poured more oil in his hand. He started on Kim's belly and slowly moved up toward her tits. He finally gave a \"what the fuck\" shrug and went to it. He added more oil and worked it in slowly, making sure to get every inch covered. He moved back down to her belly and then down lower. Her suit was so small that he practically had to finger her to get all the exposed areas covered with oil. She spread her legs just slightly to make sure he could get his hands where they needed to go. \n\nSteve repeated the same process with Kelly and then the girls rolled back over. Steve sat there for a few minutes and then I saw Kim point back to the cockpit. Steve got up, went back to the cockpit and picked up the handheld radio Kelly had left there. Kim had obviously told him to use it to talk to me. \n\n\"Hey man, you there?\"\n\n\"Yeah, how's it going Steve? Having a nice vacation?\"\n\n\"I am now Brad. I owe you one buddy.\"\n\n\"Nah, I owe you. I didn't want them messing up my deck with all that oil. I'm glad to be rid of them.\"\n\n\"Yeah right!\" We both laughed at the last remnants of the game we were playing.\n\n\"How's Jerry doing? He doesn't look like he's having much fun.\"\n\nSteve looked over at Jerry who was simply staring at the two girls laying on the foredeck. \"I'm afraid he's not. He's feeling sick and talking about heading home early so I may have to cut short this trip and ferry him back to Road Town so he can catch a flight home.\"\n\n\"Man that sucks. He just looks like he needs to loosen up a little bit. I bet if he keeps watching what the girls are doing on the foredeck, he won't want to go home so badly.\"\n\nSteve looked over at Jerry again and followed his gaze up to the bow. The girls were essentially writhing all over each other in hot oil. Kim was on top of Kelly straddling her and mashing her tits into Kelly's face. This forced her ass up in the air as Kelly tried to fit a fourth finger in Kim's exposed snatch. \n\nKim slid down to put her face in Kelly's cunt and started lapping at her cunt. After a few licks, she slid back up to Kelly and stuck her tongue in her mouth. Well, I guess that's just a variation on my pussy to mouth fantasy. It's minus the dick - my dick - but smokin' hot just the same. \n\nKim then spun around and stuck her head between Kelly's legs again. She paused, looked up at Steve and Jerry, and then went back to licking the fuck out of Kelly's cunt. She spun around again and mashed her face and tongue back into Kelly's. \n\n\"Jesus Christ,\" Steve muttered, his finger still frozen on the transmit button of the radio.\n\nI swung the glasses back and saw that Steve and Jerry were standing, mesmerized by what was happening on deck. \n\nI swung the glasses back to the girls in time see them both apparently reach a mind-bending orgasm. They slid up next to each other and kissed and caressed each other, then fell back exhausted. \n\nAfter a few minutes, the girls got up and headed back to the cockpit (how aptly named just about now huh?). Steve still had his finger on the transmit button so I heard the whole conversation.\n\n\"Well, we've had enough sun for now. Thanks for letting us use the deck. I don't think we got too much oil on it.\" Kim reached up to Steve and gave him what looked like a deep, tongue thrashing kiss which, no doubt, tasted like the woman I was in love with. Hmm. Yeah, that felt good to say - in a strange sort of way. \n\nThey were carrying their tops so they were basically totally naked as they headed back to the dink tied up at the stern. Kim turned to Steve before she got in.\n\n\"Oh, I almost forgot. Brad has reservations at a place called the Bitter End Yacht Club for dinner tonight. We're getting ready to head up there. Do you want to join us? We'd love it if you came.\"\n\n\"I just about did already darlin'.\" The girls cracked up and I even think I heard Jerry give a chuckle as well. Maybe that *did* loosen him up a little...\n\nSteve looked over at Jerry, \"Well, you feelin' up for that or do you need to get back?\"\n\nIt was the first words I'd heard Jerry say the entire time. \"I think that sounds like a good idea.\"\n\nYeah, no shit it does, huh Jerry?\n\n\"Excellent.\" Steve looked over at me and then down at the radio and realized he'd been transmitting the whole thing. \n\n\"Can you add two more to the reservation Brad? We'd love to join you if you'll have us.\"\n\n\"Already did Steve. I didn't really think you would turn us down. The reservations are at 9:00. How about if you guys come over to Mystic at 8:00 for cocktails and then we'll head to the Yacht Club from there?\"\n\n\"You are the man Brad. Don't bring any money. This one is on me.\"\n\n\"We'll see you at 8:00.\"\n\nThe girls got in the dink and headed back to the boat. They didn't even bother putting their tops on at this point so they gave a pretty good show to anyone who might have noticed them zipping over. \n\nI helped them into the boat, ogling them all the while.\n\n\"Oh man, that was fun!,\" Kim said jumping up and down. Damn, I hate it when she does that. \n\n\"Yeah, you two looked like you enjoyed your sun bathing session,\" I joked. \n\nKim grinned at me.\n\n\"Jerry looked like he was going to pop a gasket,\" I said.\n\n\"He's actually kind of cute,\" Kelly said. \"I think he just needs to let go. He needs a Pact like we have.\"\n\n\"Well, I noticed he went from being ready to go home to being ready to party with you two after seeing the hot oil wrestling so maybe he can relax.\"\n\n\"I bet we can loosen him up can't we Kim?\" She winked at Kim and grinned again at me. \n\nThe thought of her making out with Jerry was kind of conflicting for me. I felt sort of possessive of her now after what had been happening over the last few days. But it was also kind of exciting to think of watching her with someone else. Frankly, I had no right to hold her back from anything after what I had done with Kim under her eyes so yeah, fuck, this could be interesting. \n\nJesus, this could turn into a full out orgy given the way things have gone. Yes, I know, you thought of it first little buddy. I can tell.\n\nIt's kind of weird, I like seeing cocks when I watch porn. I'm not gay but, while girl-girl stuff is hot, I still like seeing a dick, or five, in there banging the shit out of the girls. I guess it could be the same thing in real life but it still seemed like it would be weird.\n\nWhy do I feel like I'm going to find out in a few hours?\n\nThe girls went below and put on slightly more modest suits for the sail up the coast. They then went up on the bow to get the anchor up and we motored out to put the sails up. It was an easy reach North to the top of the island and then a quick tack to head back down the channel into the harbor. \n\nGorda Sound is a busy place and there were lots of boats on moorings scattered throughout the harbor. You can't anchor in the harbor, you have to pick up a mooring and pay a nightly fee to the Harbor Master. In return, you can hail the water taxi to take you to and from your boat to the main dock. This is actually really nice since riding the dinghy to shore in your evening wear is rather inelegant.",
        "I explained to the girls about picking up a mooring as we took the sails down and got the motor running. \n\nThe mooring balls are basically just big floats the size of a basketball that are permanently anchored to the bottom - tied to a big block of concrete actually - and have another line attached to them that hangs down in the water. You have to approach the ball and snag the loose line with a boathook which can be tricky because it's slimy and wet. Hmm, the girls should have no trouble getting their hands on that...\n\nOnce you get the line on board, you just loop it over a cleat and you are done. Dropping the mooring is even easier. Nothing to haul up. Just untie the line and let it go.\n\nI explained all this to the girls and, while it seems easy enough, it never is. The East side of the harbor is actually just a low sand spit that connects to a smaller island. It blocks the waves but the wind comes through unchecked. It changes direction as it bounces off the mountains on either side and blows around big boats that are going slowly, like they were toys. \n\nOne of the fun things to do once you've picked up *your* mooring, is to sit in the cockpit drinking and laugh at other people as they try to pick up theirs. So, I was thinking about alternate plans if this didn't work out. I thought maybe I could give the helm to Kelly since she was pretty good at steering and I could go up on the bow myself to snag the line and get it on the cleat as quickly as possible. Hmm.\n\nI spotted a ball that looked as good as any other and headed slowly to it. Without much speed, there isn't much water flowing past the rudder and the boat is very hard to control so you have to have some speed, which makes snagging the line that much harder. I pointed to the girls which one I wanted and had them get ready. Kelly got the boathook ready and Kim got ready to grab the line and make it fast on a cleat. As I got close to the ball, I could no longer see it so Kelly gave me hand signals to keep me on track. \n\nI saw her reach the hook into the water which was my cue to put the engine in neutral. After that, all I could see were perfect assess bending down and the girls fumbling around. After a few seconds, they both stood up and raised their hands in the air with a shout. \n\nHoly fuck! First try? I left the wheel and ran up to the bow to check what they'd done. \n\nShit! \"Come on. You've done this before right? Nobody picks up a mooring on their first try. Nobody.\"\n\n\"Well, I guess we're not nobodies then are we Brad?\" Kelly gave me a hug and another of those sweet kisses that make my stomach tingle instead of my dick. \n\n\"I guess not. Great job guys.\" I put my arms around both of them as we made our way back to the cockpit. \n\n\"Well, I think we've done the stink part - I'm pretty ripe right now. And you two at least, have done the go naked part. I guess the next thing is to start drinking. We should have plenty of hot water for showers. Why don't you two go get cleaned up while I make some rum punch and snacks for our little cocktail party. I think we need to shower separately this time or we'll never be ready.\" \n\nThey laughed and headed below while I tidied up lines and checked the weather. As I was getting ready to go below to make the punch, I saw Razor enter the harbor and drop her sails. I put the glasses on her and actually saw Jerry up and helping Steve with the sails. I swear, these girls must have magical powers. I shook my head and went below. \n\nThe girls were out of the shower and I could smell the clean scent of soap and shampoo filling the air. Yum.\n\nI made a pitcher of rum punch and cut up some cheese and fruit and set it up on deck and went below to shower and clean up.\n\nIt felt good to take a shower and wash the sweat and salt off and feel a bit more civilized. Once you give yourself over to it, it's fun to just be grimy and sweaty but it always feels good to clean up. Hot showers are one of mankind's greatest inventions.\n\nThe Bitter End is a pretty fancy place but in the tropics, even the fanciest places are relatively casual - for the guys at least. Suits are too hot so people end up with what is ironically a kind of Miami Vice look. As trite as it is nowadays in the States, it still works well in the islands. Nice light colored shirts and slacks is all it takes.\n\nFor the ladies though, they never seem to miss a chance to get decked out in their best stuff. As I came up on deck and got a look at Kim and Kelly sipping on drinks in the cockpit, I saw that they didn't miss this one either. \n\nKim was wearing a light blue mini dress with spaghetti straps that held up drapes of satiny fabric. Kelly was wearing a classic \"little black dress\" that hugged her body and accentuated every curve. It had keyhole cutouts strategically placed to tease and temp the observer. \n\nThey both got up as I came up and did a quick little modeling run - within the confines of the cockpit - that made my jaw drop. They were just stunningly beautiful and I had no words.\n\n\"Oh, you clean up nice,\" Kim said as she got a look at my Don Johnson duds. \n\n\"Yummy Brad. Can I have you for dessert after dinner,\" Kelly said as she moved over and gave me a hug and a kiss.\n\n\"You two are spectacular.\"\n\n\"You like?\" Kim did a little turn and I could see that the back of her dress - fuck, there was no back to her dress. It opened up down to the top of her ass and cut away on the sides such that you felt like if she turned fast enough, the fabric would pull away and expose her tits to the world. \n\nGod, I had basically seen both of these girls totally naked over the course of the last few days but these dresses, with their teasing views and highlights were infinitely hotter that straight nakedness. \n\nMaybe. \n\nI think I'll have to do some additional research to completely verify that finding...\n\nAs I was admiring the girls, I didn't notice Steve and Jerry approaching in their dinghy until they pulled up to the stern swim platform. \n\n\"Mother of God may we please come aboard?\" Steve said all at once as his eyes drank in the two beauties.\n\n\"Hey Steve! Absolutely. Good to see you again. I guess you've met the girls.\"\n\n\"Yes, I had the pleasure of meeting them both again today you may recall. Frankly, I can't get the thought of them out of my head. Hello ladies.\"\n\n\"Hi Steve. Hope you had a good sail over.\" Kim went over and gave Steve a hug and a kiss on the cheek. \"Hi Jerry. You look like you're feeling better.\"\n\n\"Hi Kim. Yeah, I'm feeling a lot better. I'm sorry I was such a weirdo today. It's a long story but I'm feeling better than I have in a long time.\"\n\n\"Oh I'm so glad. I was a little worried about you.\" Kim walked over and gave Jerry a hug and kiss on the cheek as well. \n\nWe all relaxed on the cockpit cushions and got cups full of punch. The rum served to quickly loosen up the conversation and we easily talked about the islands, where we were from, and what our plans were. \n\nIt turned out that Jerry's father was a very wealthy banker who was basically arranging Jerry's marriage to some socialite that would enable some business deal to go through. Jerry had no interest in the woman but couldn't find a way to tell his father. Despite the tropical paradise, he was mired in the inevitability of his future and couldn't enjoy it. \n\n\"I know this sounds trite but to be honest, seeing you two on the deck today,\" he looked at Kim and Kelly, \"the way you just didn't give a shit about anything else in the world or who might see you and make a comment, made me see how stupid I've been. I was actually ready to fly home and marry that woman today - knowing I'd be miserable but willing to sacrifice it for the good of the company. Fuck that shit. I've got to start thinking about me and what *I* want.\"\n\n\"Sometimes, you've just got to be selfish Jerry.\" Kim got up and walked over to him. She bent down and held his head in her hands and looked into his eyes. Jerry tried to look into her eyes but the fact that her tits were now hanging free in the loose dress made that physically impossible for him. It was a valiant effort but he failed miserably. \n\nSteve and I also failed miserably at trying not to look at Kim's ass as it was revealed from the other perspective. Kelly, sitting between us, patted our crotches lightly. \"Down boys, this is a poignant moment.\"\n\n\"We've had the same kind of discovery in our short time down here too.\" Kim sat down next to him but was still looking him straight in the eye. \"Life is too short to not be happy. You might lose all that money but it doesn't buy true happiness. It's a cliche but it's true I think.\" \n\n\"Thanks Kim. I'm sure you're right.\"\n\n\"Cool. So let's have fun!\" Kelly hopped up and went below for more punch. \n\nWith Jerry loosened up so to speak, we talked about all kinds of things as we polished off another pitcher of punch. Rum punch is the standard party drink in the Virgin Islands and it goes down really easily - especially after a long day in the hot sun. \n\nAt about 8:30, I got on the radio to the Yacht Club to request the water taxi to pick us up. Now I'm sure that the crew on the water taxi had seen all manner of women decked out in their finest getups but I could see their eyes light up as they pulled up alongside and caught a glimpse of the girls in their dresses. They practically fell over themselves to be the one to help Kim and Kelly from Mystic onto the taxi and then hovered over them on the trip to shore. \n\nAs we walked into the restaurant, it was like a scene from a movie - the one where everything stops as the people turn and see the two beautiful women entering the room. It was actually kind of funny since after they peeled their eyes from the girls, they would look at us guys with a look that said \"What the Hell are *you* doing with girls like that?\"\n\nDinner was fabulous and we all seemed to gel as the meal progressed. Steve and Jerry were on cloud nine being in the company of the girls after having just themselves for the past few days. We were sitting in a horseshoe table with Jerry in the middle, the two girls on either side of him, and Steve and I on the ends. Jerry couldn't decide which girl to look at and, after a while, didn't even try to hide his staring at the tits that were flanking him. The girls poured it on too - leaning over him to taste somebody's drink or whatever. \n\nDuring the evening, we all found out about what we all did \"in real life\" as we called it, and it seemed like everyone was kind of \"floating\". Not really tied down to anything or anyone - with exception of Jerry, who was trying to figure out what he was going to do about his arranged marriage. \n\nKim, never too far from the sex aspect, started the ball rolling. \"Well, I hope at least the sex is good between you and your fiance.\"\n\nJerry just kind of shrugged, but didn't really say anything. \n\nKim wasn't going to let that go. \"Well?\"\n\n\"It's okay\", he said looking down.\n\n\"Okay? It should be nothing short of mind-blowing dude. How are her blow jobs? Any teeth?\" \n\nJust then the waiter came by and just about dropped the the tray of salads he was carrying.\n\n\"Kim\", I motioned her to keep her voice down just a bit. I didn't want to get thrown out before we'd finished our meal.\n\n\"Oh, sorry.\"\n\nShe wasn't going to let it go though. She looked back at Jerry and continued in a lower voice, \"Well?\"\n\nJerry was looking kind of uncomfortable. \"She's not really into that kind of thing.\"\n\nKim's eyebrows raised. \"She's not into blow jobs?\"\n\n\"Not really.\"\n\n\"Well, what kind of sex does she like?\"\n\n\"Like I said, she's not really into it all that much.\" \n\nJerry was starting to sweat a little bit despite the air conditioning which earlier had caused the girls nipples to stand attention when we first sat down.\n\n\"Wait. She's not into sex at all?\" Kim had shifted in her seat and turned towards Jerry in a full on interrogation.\n\n\"She thinks it's 'icky'.\"\n\nKim sat back in her seat as if she had been punched in the chest. She seemed to think for a minute - trying to wrap her head around that concept no doubt - and then sat forward again to continue the investigation that was baffling her.\n\n\"So, like, how many times a week *do* you have sex?\"\n\nJerry looked up at her like she'd just asked \"how many times to aliens visit your house each week\".\n\n\"Per week?\"\n\n\"Yeah, how often do you fuck her?\" She paused briefly, \"You *have* fucked her right?\"\n\nJerry was now clearly under stress and I was thinking he might just bolt out of here and we'd never see him again. But just then, he relaxed and let out a big breath. Like he was deciding to just fuck it and come clean.\n\n\"Not exactly\", he said, sitting back in his seat and poking at his plate. \n\nKim just stared at him for awhile and then looked over at me with her eyes wide open. I just shrugged.\n\n\"Jerry, you've either dipped your willy in the honey pot or you haven't. There's no half-way.\"\n\nDespite his duress, Jerry cracked a small smile at Kim's slang.\n\n\"Jerry? We need to know this.\" Kim was like an investigative reporter trying to find the source of the missing pension fund money.\n\n\"She's given me a hand... She will, like, uhh, fondle me sometimes while she's reading her email.\"\n\nOh shit. Look out Jerry, I thought. Kim is going to pop.\n\n\"She gives you hand jobs! While reading her email!\"\n\nSeveral of the other patrons glanced over and I motioned to Kim to try and keep it down.\n\nKim lowered her voice but was still incredulous. \"Jerry, you are in your sexual prime. You should be boning the shit out of the person you are with.\"\n\n\"Well, like I said, it's kind of an arranged thing. She's okay looking and I wouldn't mind having sex with her, but I guess it's just not a big part of the relationship.\"\n\nKim sat back in her seat again, contemplating this new way of looking at sex that was so foreign to her. It was a little awkward, discussing Jerry's sex life - or lack thereof - in the restaurant.\n\nKim couldn't let it drop though. She sat forward again, and paused, like she was trying to find the right words to ask a delicate question. \"Jerry...like...how many other relationships have you had? You've had sex with other girls right? I mean, I guess I don't understand how you can consider getting married to this woman when she's clearly not really that into you - or sex for that matter.\"\n\nKelly tried to come to Jerry's aid, \"Kim, not everyone is quite as uninhibited as you are. Maybe Jerry and his fiancee are just taking their time to get to know each other first.\" She knew after the last words left her mouth how hollow it sounded and so did we all.\n\nJerry looked back at Kim and then Kelly, \"Look, you girls are incredibly beautiful and sexy and I'm sure you have had plenty of boyfriends and relationships but it just hasn't happened that way for me. My social circle, as they say, is very structured. The girls I have dated, have always seemed to be interested more in my money and family than in me. Even if they were great looking, I could never get past the fact that they just had dollar signs in their eyes. As much as I may have wanted to \"bone\" them, I just couldn't get interested in someone I didn't respect.\"\n\nWow. Well played Jerry. Kim sat back in her seat again but seemed to be looking at Jerry in a different way. With more respect that just a few seconds ago when she thought he wasn't taking control of the situation perhaps?\n\nKelly reached over and gave Jerry a hug, \"Aww, Jerry, that's so sweet and sad at the same time. I'm so sorry.\" She put her head on his shoulder.\n\nI think Kim was feeling like she might have pushed a little too hard as well. She put her head on his other shoulder as well. \"Sorry Jerry. I had no right to press you on that part of your life. It's clearly a different world from where I am and I know you are in a tough spot.\"\n\nShe reached up and kissed his cheek and said, \"I'll make it up to you somehow.\"\n\nOh god... This should be interesting.\n\nRight about then, the waiter brought our meals and we dug into lobster, steak, and all manner of wonderful food and wine. Jerry seemed to forget about the earlier questioning and started to enjoy himself. Of course, with two gorgeous women sitting next to him, and now fawning over him even more than they had been, it wasn't hard. \n\nKim shared some of her lobster with him and when a bit of butter dripped down his chin, she instinctively reached up and licked it off. To her of course, this was no big thing. To Jerry however, I think that may have been more action than he'd had in the past few years. \n\nOh Jerry. If you only knew what you were in for...\n\nThroughout this whole episode, Steve had frequently looked over at me with a look that could only be described as \"Holy fuck, holy fuck. You've had these girls to yourself for three days now? How can you walk? Holy fuck.\"\n\nI think that's what he was saying anyway.\n\nAt some point in the evening during the conversation, somebody said it. I'm not even sure who it was but the words came out - \"We should all just chuck it and move down here and run a bareboat charter company.\" \n\nEveryone kind of chuckled and said \"Yeah, we should,\" and \"That would be cool,\" in that joking way you do when it's a great idea but you'd never do it. But then we all went silent - each of us wondering if the others were actually serious. \n\nJerry broke the ice. \"What would it take?\"\n\nI looked at him. \"What do you mean?\"\n\n\"I mean, how much money do you think it would take to do something like that?\"\n\nI paused, wondering if he could possibly be thinking of actually doing this. Okay, just for shits let's see. \n\n\"Well, you'd need a couple of boats at least to start, some dock space, an office. You could probably get some slightly used boats from the big charter operations that would be in pretty good shape.\"\n\nI made some estimates and wild ass guesses and came up with about a million dollars to get started. \n\n\"We should do it,\" he said.\n\n\"Uh Jerry, you can count us out,\" Kim said. \"Remember, we didn't even have enough money for a hotel room so we had to stowaway on Brad's boat?\" \n\nHmm, yes, that actually worked out quite well didn't it - I thought to myself with a smile.\n\nJerry looked at each of us in a slow arc around the table. \"Look, I've been wondering what I wanted to do with the money my Grandfather left me and I was thinking I would just be putting it back into my Dad's business but I think I've changed my mind.\n\n\"What if I financed this yacht charter business and you guys ran it? Brad, you and Steve seem to know all there is to know about boats and sailing and I kind of think the girls would probably make pretty good hostesses for crewed charters. Hell, just putting them on the brochure would guarantee a ton of business.\" \n\nKelly punched him playfully in the arm and then kissed him on the cheek while I tried not to let my mind run away with itself. I looked at Steve who seemed to be doing the same thing. \n\nIn all actuality, it was a stupid idea. None of us really knew the first thing about setting up a company - especially one in a foreign country. Practical me started ticking off in my mind, all the things that would be working against us. \n\nStill...\n\nAs if to seal the deal before we'd even really started, Jerry snatched the check when the waiter brought it and declared, \"Our first business expense! We're on!\"\n\nThe rest of the evening was a whirlwind. We found a bar on the beach and drank, danced in the moonlight, and talked about this plan that was seemingly forming by itself. I don't think anyone really took it seriously but it kept coming up in our conversations. \n\nKim took turns dancing with Steve and Jerry (and eventually both of them together) but Kelly danced only with me. I told her I was willing to share her dances with the other guys but she just said \"Nah, I think I just want to dance with you if you don't mind.\"",
        "\"I don't mind that one bit.\"\n\nSlow dancing with a woman in a skin-tight mini-dress is agony and ecstasy. Your hands can't help but drop down to sneak a quick caress of her ass but you can't really just grope her on in front of the tourists. And when she pulls herself into you and her belly smashes up against your cock and she looks up at you with impossibly blue eyes, it's very difficult to resist the urge to tear her clothes off and fuck her right then and there. \n\nSomehow, I resisted but it was hard, very hard. And she knew it.\n\nWe walked along the sand back to the water taxi dock. \n\nKim was sandwiched between Steve and Jerry, \"You guys are up for a night cap back on Mystic right?\"\n\nShe didn't really think they would refuse did she?\n\nWe got back aboard the boat and Kelly grabbed some punch from below.\n\nWe sat in the cockpit, Kelly and me on one side, and Kim between Steve and Jerry on the other. \n\nWith the alcohol lubrication taking full effect, Kim managed to steer the conversation back to sex - Jerry's sex life to be exact. \n\n\"So Jerr. I know you may not really want to get into this but I gotta know. How many girls have you slept with?\"\n\nJerry pretty much resigned himself to telling all at this point, \"Only one. It was my High School girlfriend. We did it at a drive-in movie in the car.\"\n\n\"Ooooh, kinky!\", Kim said turning in tight for more details. \n\n\"Did she sit on your cock in the driver's seat or did you do it in the back seat?\" \n\nJerry was momentarily taken aback by the frank sex talk and Steve was just staring at her with his mouth open. It all seemed natural to me at this point. Shit, how far I'd come in three short days.\n\n\"Umm, I don't remember. We were pretty scared so we kind of rushed through it. I think we did it in the back seat.\"\n\n\"Did she come?\"\n\n\"Uhh, I don't know. Probably not.\"\n\n\"Oh Jerry. You've got some catching up to do.\" \n\nShe turned to Steve, \"How 'bout you big guy. Have you ever fucked a girl?\" She grinned, figuring she already knew the answer to that.\n\n\"Yeah darlin', I've had my share. I'm not sure any of them were as incredibly sexy as you are though.\"\n\n\"Well thanks Steve-O. That's very nice of you to say. You're mighty handsome yourself there buddy. I bet you had to fight them off.\"\n\nShe turned back to Jerry. \"Now, about that blow job. You do like the *idea* of a blow job right Jerr?\" \n\nJerry stammered. I'm sure he had been thinking something might happen tonight after all the teasing he had been getting but I don't think he was really prepared for what was shaping up. \"Uhh, yeah, I guess so.\"\n\n\"You guess so?\", Kim looked into his eyes. \"You guess you might like a blow job?\"\n\nKelly smiled up at me and said quietly, \"This is going to be interesting.\" \n\n\"You mean here? Now? In front of everyone?\"\n\n\"Aww, don't be shy Jerr. We're all friends right? Besides, once we get started, I imagine they will be joining in in one way or another anyway, right guys?\" She looked over at Kelly and me. I just smiled and shrugged. \n\nSteve looked over at me, \"Has she been like this for the last three days?\"\n\n\"Yeah, she's uhh, a bit of a firecracker I'd say.\" \n\nKim turned back to Jerry, \"Okay Dude, let's see what we've got to work with here.\" She started unbuckling his pants and unzipping his zipper. \n\nJerry didn't really know what to do but he wasn't fighting back. \n\n\"Oh Jerry, you've been thinking about this haven't you?\" She rubbed his cock as it grew in his underwear. She looked up at him and continued. \"Now, there are certain techniques for a proper blow job. The first thing is that the girl has to be careful about dragging her teeth..\"\n\n\"Kim!\", Kelly interrupted, causing Kim to look over. \"This isn't science class. You're taking the fun out of it. Just blow him already!\"\n\nBoth Steve and I got a chuckle out of Kelly's \"get to the action\" admonition.\n\nKim looked back at Jerry with a questioning \"Well?\" \n\nJerry just nodded his head. \n\nKim didn't need any more prompting and deftly whipped his cock out of his shorts and engulfed his cock in one smooth motion. \n\nJerry died and went to heaven.\n\n\"Oh fuuuck\", he groaned as he rolled his head back. \n\nKim slurped her mouth off his cock and looked up at him. \"That doesn't feel good or anything does it Jerr?\" \n\n\"Holy shit Kim. You can do that some more if you want.\"\n\n\"Oh I can? That would be okay with you if I sucked your cock a little bit more? Like this?\" She bent down to let him have another round. \n\nJerry rolled his head back again, \"Oh my god. That's feels...fuck.\"\n\nIn order for Kim to get her head down to Jerry's crotch, she had to pretty much slide her ass onto Steve's lap and now she was grinding it into his chest. To get an ever better angle on his dick, she got onto her knees on the other side of Steve so she was basically kneeling across his lap. A little puff of warm breeze blew what little of her dress that was covering her ass, up even higher, exposing a blue thong to Steve's gaze. \n\nSteve wasn't really sure what to do about the woman in his lap and the ass in his face. Was this Jerry's time or could he play too? He brought his hand up but couldn't decide if he should caress Kim's ass or not. \n\nI looked down at Kim who had stretched her legs out and snuggled in closer with her head on my chest as I reclined on the seat cushions. She looked up at me with another dazzling smile. Yeah, this was going to be a fun show. \n\nKim must have somehow sensed Steve's indecision. Or, just wondered why it was taking him so long to start groping her. She slurped her mouth off Jerry's cock once more and looked back over her shoulder at Steve looking at her ass.\n\n\"You can tap that if you want Steve-O.\" \n\nSteve looked at her like \"really?\"\n\nKim just nodded and went back to work on Jerry's cock.\n\nSteve started sliding his right hand along Kim's perfect butt and reached under her dress to catch some tit with his left. Jerry meanwhile, was alternately rolling his head back and looking back down at Kim licking and sucking the fuck out of his dick.\n\nKim again pulled her mouth off of him and turned herself around to face Steve. \"Dude. drop those pants. Do I have to do everything?\" She did another of her pattented de-belting and un-zippering moves and had Steve's dick out and in her mouth before he even knew what hit him. \n\nNow it was Steve's turn to roll his head back and start groaning. Jerry now had Kim's ass in his chest and her belly smashing his slippery dick. She reached back with one hand and started pulling down one side of her thong and then motioned for Jerry to pull it the rest of the way off. \n\nOnce they were off, Kim, with her ass in Jerry's lap, spread her legs a bit, inviting Jerry to explore. \n\nKelly looked up at me again, \"Want to join in?\"\n\n\"I'm kind of enjoying the show. Want to just watch?\"\n\n\"You mind if I watch with your cock in my mouth?\"\n\n\"Well, if you must.\" I said in my sarcastic voice. \n\nShe giggled and rubbed my crotch. \"Yeah, you *do* like to watch don't you?\"\n\nShe managed to wrangle my cock from my pants and lowered her head down to my stomach so she could suck and look at the threesome on the otherside of the cockpit at the same time. \n\nShe started with little flicks and licks, just teasing me a little but then went to full on sucking. It sounds funny to describe it but it was like a casual blow job. She wasn't going after it to try to get me to come - just nice easy pleasure to add to the pleasure of watching the others.\n\nOf course, my hand went down her exquisite back, over her butt, and down to the edge of her dress which had by now, creeped up to the bottom of her ass. Oh man, that is mega sexy. Having my fingers inches from her cunt and asshole while she's licking my cock. Fuck.\n\nI looked over at Jerry who seemed to be a couple of knuckles deep into Kim's snatch. He was looking at Kelly sucking my cock and then looked up at me looking at him. I raised my eyebrows in a look of \"Pretty crazy huh?\" He just smiled and shook his head. Fuck man, his fiancee didn't have a chance anymore.\n\nKim pulled her mouth off of Steve and gave him a kiss. \"Want to try the other end again? I think Jerry's got me lubed up a bit. Your cock would probably slide right in now. What say?\" They both smiled at her over-the-top slut act but nobody wanted to stop the game just yet.\n\nShe turned back around to face Jerry while Steve got out of his pants and up on his knees behind her. Jerry was holding his slimy fingers in the air not quite sure what to do with them. \n\nKim looked at him and then back at his fingers. \"You're supposed to lick that off. Like this.\" She sucked his fingers into her mouth and licked each one clean and then reached up and stuck her tongue in his mouth. \n\nJerry was stunned but quickly grabbed the back of her head and mashed their faces together even harder. After a few seconds, they separated for breath. \n\n\"Yeah?\" she said.\n\nJerry nodded and Kim went back to work on his dick.\n\nShe lurched forward and let out a groan around Jerry's cock as Steve slammed into her from behind. \n\nKelly pulled her mouth off my cock and whispered up to me, \"she's going to alternate back and forth sucking one while the other fucks her huh?\"\n\n\"Looks like it.\"\n\n\"Kind of like the pussy to mouth action that you like so much huh?\"\n\n\"I do rather like that. I didn't know you knew. Did I tell you that or is that a guess?\"\n\n\"We girls have ways of telling what turns our men on. I think I figured it out pretty quickly.\"\n\nFirst I'm her Boy Toy and now I'm her man. I guess the hook is pretty much set isn't it. Funny, how it's not painful at all. No, it's not painful at - Oh, man, Kelly had resumed sucking my cock - all.\n\nI looked over at Steve who was still slamming into Kim's cunt. A few seconds later, Kim pulled away from him and turned herself around again - just as Kelly had predicted. \n\nShe looked back at Jerry, \"Get up on your knees and get that dick of yours in me Bucko. You're getting the full treatment tonight.\"\n\nJerry got out from under her legs and looked around. I saw him reach the \"fuck it\" point and drop his pants and kneel between Kim's spread legs. She had Steve's dick in her hand but was still looking back at Jerry to make sure he got started.\n\n\"Do I have to send Kelly over there to help you get - Ahhh, yeah. I guess not. Start pounding Sport. I've got a cock to suck over here.\"\n\nShe looked up at Steve, \"You know, if I lick the slime off of your cock right now and then put my tongue in your mouth, it's almost be like eating me out. Interested?\"\n\n\"Fuck yeah little lady.\" Steve barely got the words out before Kim's mouth was wrapped around his cock. She sucked for a few strokes and then pulled off his dick and went after his mouth. Yeah, that's pretty fucking hot. \n\nI looked back at Jerry who seemed to be experimenting with different stroking speeds. Actually, he was probably just trying not to come. I was surprised he had lasted this long given how pent up he must have been. \n\nSpeaking of coming, Kelly was still working on my dick and that, combined with the porno happening a couple of feet away was taking me closer. My fingers had managed to slip over the edge of the back of her dress to find her thong. It was doing a very bad job of containing the wetness that was being generated. The fact that what she was doing to me made her wet as well was a double turn on. \n\nI slid her thong aside and slipped my fingers into her cunt. God I love that feeling. I pulled them out and slicked up her asshole as well and just played back and forth between her cunt and ass. Velvet.\n\nKim pulled away from Jerry and turned around again to face him. This time, it wasn't his fingers that were slimy, it was his dick. Kim didn't waste time with explanations, she just sucked him clean and then tongue lashed his face. \n\n\"That's what pussy tastes like Champ but you should try a more direct approach.\"\n\nShe rolled onto her back, spread her legs, and pointed to her snatch. Jerry didn't need any more prompting. He stretched out along the cushions and dove in head-first. Kim leaned her head back and opened her mouth for Steve's cock. \n\nKelly had pretty much stopped sucking me and was watching the others intently. \n\n\"Pretty hot huh?\", I whispered.\n\nShe looked back up at me and nodded vigorously. \"I've never done it with two guys before. Damn, that's...fuck.\"\n\n\"You want to join in?\"\n\n\"Nah, I'll just watch but sometime, maybe. We'll see.\"\n\nBefore I had time to really think about this, I heard Steve start to breath louder - the unmistakable sound of a guy getting real close.\n\nKim spit his cock out and said \"Not yet.\" She sat up and pulled Jerry up to her. She positioned him sitting on the cushions, swung her leg over him to face him, and sat down on his cock. She started sliding up and down and back and forth on his dick causing him to roll his head back again and let out a guttural groan.\n\nShe reached over to Steve and pulled him over to her and opened her mouth - this apparently, the universal slut signal to \"stand up and stick your dick in my mouth\". Steve was happy to oblige.\n\nKim was bucking like a bronco and sucking the crap out of Steve and it was pretty clear that somebody was going to blow at any minute - myself included.\n\nSteve started first. His breath quickened again and he started groaning more. Kim pulled him out of her mouth and jacked him with her left hand while holding on to Jerry's shoulder with her right. \n\nShe turned to look at Jerry, \"You get front row at the cumshot Chief. Steve here is just about ready and when he comes, it's going to be a pretty big blast I bet. He's a pretty big boy and he's -\"\n\nBamm! The shot hit her in the face like a train. She turned her mouth back to it in time to take the next one in the back of the throat. She closed her mouth to swallow that one and was hit in the nose with the next one. She continued to jack the spunk out of him, letting it drip off her chin and onto her tits. \n\nThat was enough for Jerry. He leaned back and hammered his cock up into Kim, lifting her off the deck. He let out a primeval groan that probably woke everyone in the harbor. He came back down and then immediately drove himself and Kim up again. And again. And again. \n\nKim continued to ride him up and down, hanging onto his shoulders for dear life and mashing her tits in his face. I could see come oozing out of her cunt as she continued to ride up and down.\n\nKelly had been jacking me slowly while watching the other and this, and my fingers in her butt was sending me... Oh, fuck.\n\nKelly felt my dick pulse in her hand but she wasn't quick enough to get her mouth back on me so I hit her in the cheek. She took the next shot in the mouth and then engulfed my spurting fountain for the rest. When I stopped, she pulled me out and used my cock to wipe all the spunk on her cheek into her mouth for a final clean up. She rolled over onto her back and spread her legs to give my fingers easy access to her cunt. I smeared my hand all over her cunt and clit and started rubbing. It didn't take her long to start bucking and writhing and finally convulsing into an intense orgasm herself. \n\nKelly lay there catching her breath and I looked over at the others. Jerry was finally cooling down after having his world rocked by Kim the Super Slut and Steve had sat back down and was leaning against the bulkhead. \n\nJerry looked at Kim who was grinning from ear to ear. I think she liked the idea of being his sex teacher - introducing him to the Kinky Kim School of Debauchery. I'm quite sure he enjoyed being a student at that institution. \n\n\"Damn Jerr. You just about pitched me over the side! I guess it felt pretty good?\"\n\n\"Holy shit Kim. You are incredible. I don't think.... It was.... Fuck.\"\n\nJerry was having trouble with complete sentences. I think I've been there too. These girls can do that to you.\n\n\"Yeah, I got a little carried away. Sorry 'bout that. You okay over there Steve-O?\"\n\n\"Damn Kim.\" Steve wasn't exactly quoting Shakespeare either.\n\nKim looked back over her shoulder at Kelly and me. Me with my dick out and Kelly with her legs still spread and my hand in her snatch. \"Looks like you two joined the fun too. Cool! Everybody got some!\"\n\nI caught her eye, \"I'm sure you wouldn't have been able to sleep tonight if we hadn't.\"\n\nShe laughed, \"Probably not.\"\n\nShe finally pulled herself off of Jerry's cock, \"God, I'm a sticky mess. I'll be right back.\"\n\nShe got up and went below but was back in a few seconds with some warm washcloths. She handed one to Kelly and to Steve and then personally helped Jerry clean up. \n\nI think Jerry was now in a coma. He was just laying back on the cushions, not moving much. \n\nAfter the food, the drinking and oh yeah, the sex, we were all pretty dead.\n\n\"Steve, we've got plenty of room. Why don't you guys just crash here for the night.\"\n\n\"Thanks man, that sounds good. I think I'd have to carry Jerry back. He looks like he's out.\"\n\nJerry didn't move or open his eyes. He just mumbled, \"I'm still alive. Barely.\"\n\nKim looked over at me, \"Brad, you think you and Kell could take the Starboard stateroom and I could umm, bunk with these guys?\"\n\nJesus Christ, she was going to kill them. I shrugged, \"Sure.\"\n\nKelly was almost asleep so I picked her up and carried her below and put her on my bed. I helped her out of her dress and got her under the sheets. Fuck, she was so gorgeous and smooth. If I wasn't so tired... Shit.\n\nI tore myself away and went back up to help get Jerry down below. He was so dead that I didn't think even Kim would be able to get anything out of him tonight. Steve, on the other hand, might be ready for another round...\n\nI went back to the cabin and Kelly and climbed in next to her. It was weird getting into bed with her. It felt like another milestone ticked off. Man, I could totally see myself doing this for another hundred years. Yeah.\n\nI looked at her sleeping. God she was beautiful. I turned out the light and looked at her for a few more minutes until I started fading. I leaned over and kissed her on the nose and she smiled a little tiny smile. \n\nI leaned back on the pillow. Yeah. And went to sleep."
    ],
    "authorname": "smugmug",
    "tags": [
        "sailing",
        "vacation",
        "tropics",
        "threesome",
        "mff"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-mystic-adventure-ch-04"
}