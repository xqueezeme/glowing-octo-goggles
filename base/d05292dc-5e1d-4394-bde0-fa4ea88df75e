{
    "title": "There and Back Again Ch. 117-118",
    "pages": [
        "Chapter One Hundred Seventeen: Burn It \n\n\"Alright, so...hear me out before you make a judgement, but...I want to burn down the Alienage,\" Cailan said. \n\nI choked -- on what, I couldn't say -- and began coughing, while Alistair thumped me on the back. Aedan sputtered, face turning an unusual shade of crimson, but Kallian merely raised one eyebrow inquiringly. \n\nAedan finally managed to get out an entire sentence. \"I think you're a lot more sleep-deprived than we thought, Cailan,\" he ventured. \n\n\"Or maybe you had a head injury you didn't tell anyone about during the battle?\" I wondered. \n\nCailan rolled his eyes. \"I did ask you to hear me out before you judge,\" he reminded us. \n\nAlistair waved his arm in a 'go on' sort of gesture, and Cailan nodded at him before turning to Kallian. \n\n\"After Denerim was evacuated, it looks like there was a fire started in one of the homes in the Alienage. It burnt a large number of houses, and damaged more. No one was hurt, but it's going to have to be rebuilt. And it gave me an idea. \n\n\"Look, I know it's been your home, but the fact is, the Alienage is a mess. It's impossible to keep clean, the houses are falling down, plagues keep spreading there...no one should live like that.\" \n\n\"We've never exactly had much of a choice,\" Kallian defended. \n\nCailan threw up his arms excitedly. \"No, no, I'm not blaming you. You've done the best you could with what you have. But that's the point, really. You didn't have much to work with, and then once people were living there, it was very difficult to do anything about it, even if someone had tried. We couldn't kick out dozens or hundreds of people while we renovated their homes, and doing it one building at a time was too expensive and time consuming, not to mention the nobility would not have approved the expenditure even if it were possible.\" \n\nCailan continued, breathless and enthusiastic, not allowing anyone else to get a word in edgewise, \"That's why this is the perfect opportunity. The Alienage is empty, likely for a couple more weeks, and half of it is already destroyed. There's no one to displace. We have a few trustworthy mages available to help us, and the nobility are busy doing other things. If the rest of the Alienage burned while everyone was evacuated, they wouldn't have to approve a motion to rebuild, because I have sole discretion over the budget during an emergency -- and then we could do it right, without a fight. Highever and Amaranthine won't be ready for the stonemasons for a while yet, so those that came from Orzammar are going to be sitting on their thumbs anyway -- and we've already paid for their services. There's a lot of old stone quarries around Denerim that could be reopened. \n\n\"We could build multi-story stone buildings, give each family more space, and still have room to spare. We could expand the green space around the Vhenadahl, maybe build a school? It wouldn't even cost that much, especially if the returning residents helped with the construction. The biggest problem will be housing people during the reconstruction, but fortunately it's summer. We could set up temporary camps outside the gates, allow hunting nearby to supplement food stores...we have the army to build camps like we did in the Bannorn. As long as we can keep any rain off, it shouldn't be unbearable until the first buildings are ready, and then people can crowd in and share until everything is finished. \n\n\"It gives us an excuse to arm the elves -- they need to protect themselves while living outside of the city, and to hunt. It allows us to improve the Alienage, and even employ some of the elves temporarily as labourers during the building.\" \n\nHe finally stopped, gulping breaths of air rather comically at the end of his hurried speech. He glanced back and forth between Aedan and Kallian, expecting -- correctly -- that the two of them would have the strongest opinions on the subject. \n\nI didn't know what to think. In some ways it made sense -- the Alienage really was a travesty, and burning it to the ground seemed like one of the few ways to recover it, especially if it was as badly damaged as Cailan said -- but where would all those people live during the construction? It would take a lot of time to build as much as he was suggesting, and the evacuees were expected back within weeks at the most. I was also concerned about the likelihood of backlash in the Landsmeet; most nobles' opinions on the city elves seemed to consist of a 'survival of the fittest' mentality. I doubted there was any money left in the Arl of Denerim's estate to cover it either, though it should have been the Arl's responsibility -- if only there was an Arl of Denerim right now -- and not Vaughn or Howe, either. \n\nAedan shared my concern about the cost, and he and Cailan immediately began debating the viability of the plan from that perspective. Kallian was surprisingly quiet. I expected her to be either enthusiastic at the prospect of making the Alienage livable, or angry at the idea of burning down the rest of her former home, but she just kept her gaze fixed firmly in her lap while Cailan and Aedan brain-stormed the funding aspect. I was barely listening, mind awhirl with possibilities and risks, but it sounded like Aedan thought it was possible. \n\nFinally, when Kallian still hadn't said anything, Cailan addressed her directly. \"What do you think?\" \n\nShe looked up at him, tilting her head slightly. \"I think nicer houses won't fix the biggest problem Ferelden -- and the rest of Thedas -- faces with elves.\" Cailan's face fell, and she held up a hand. \"Don't get me wrong -- it would be nice not to worry that the next stiff breeze will blow down someone's home, and to have somewhere for the homeless to go, but without jobs, and income, and the ability to defend ourselves from those who would do us harm, it'll be just a differently-decorated slum. When most humans see us as less worthy of respect than the rodents we end up eating, why bother putting us in prettier houses?\" \n\nCailan looked crestfallen. \"I want to improve the elves' lives. I want you to have safe places to sleep and not risk frostbite all winter. I want you to be seen as citizens. It's not going to happen overnight, Maker knows, but can't we at least try? I will do my best to change our culture, a little at a time, but this might be our only opportunity to really address the housing situation. Once everyone is back, as it stands, most of the elves will be homeless, and I think we all know the nobility as a rule will leave them to fend for themselves.\" \n\nKallian examined Cailan's earnest face for a long silent moment, and I could almost see the wheels spinning. I wonder what she's looking for. Finally she nodded. \"If you can manage the details -- housing for my people during the renovations, funds for the construction -- then I agree, and I will help you. Most people have taken their few valuables with them out of the Alienage, so it's as good a time as we're likely to get.\" \n\nAedan nodded agreement, and Cailan turned to Alistair and I, sitting together, stunned. \"Yes?\" he asked. \"I'd like as much support as I can get.\" \n\nAlistair squeezed my hand once, and it knocked me out of my reverie. \"Yes, of course. If you think it can be done, we're behind you.\" \n\nAedan interjected, \"Send messengers to Nathaniel and Fergus -- I know they'll back you too. Highever has always been better about elven rights, and Nathaniel's no racist. I bet Leonas and Alfstanna would too -- and the more obvious support you have, the less backlash. Lots of the nobility have gone home, but send messengers, and I'm sure at least some will agree.\" \n\n\"Right.\" Cailan ran his hand through his hair, rubbing his scalp thoughtfully. \"If we're going to do this, it's got to be now -- as soon as possible. We need the mages to burn the rest of the Alienage right away, before anyone thinks to look at the extent of the damage. I 'borrowed' a handful of mages from the Circle -- in addition to the healers -- to supplement the army and eventually reinforce Amaranthine, and there's three I think would help us and keep their mouths shut. Do you suppose any of the Warden mages would help?\" \n\nI nodded. \"I'll go ask, but I wouldn't be surprised. I'll be right back.\" \n\n\"Meet us by the east gate, instead -- we'll try to avoid too much notice, yes?\" Cailan suggested. \n\nI ran back to where our group had set up, finding Alim and Anders playing chess in the small dining room we'd borrowed. Solona was in her room -- a room she was sharing with Anders, I was pleased to note -- and quickly joined us when I called her. I avoided asking Wynne -- who was probably too busy healing anyway -- guessing that she'd be less than approving of our plan. Which should probably make me second guess the wisdom of the plan, but...Nah. It's got to be done. \n\nI explained the plan in hurried whispers as we headed to the east gate; all three mages were more than happy to lend their aid to the cause. \n\n\"I'm not much good with fire,\" Anders declared, while I shushed him, looking around to see who could be listening. \"I'm pretty good with ice, though, so I can help keep the fire from raging out of control,\" he whispered. \n\n\"Protect the Vhenadahl at all costs,\" I suggested. Alim nodded, but Anders just looked at me in confusion. \"The big tree,\" I elaborated, and he nodded. \"The walls should keep the fire from spreading to the rest of the city.\" \n\nWhen we met up with Cailan, Aedan, Alistair, and Kallian, the four had three unfamiliar, elven mages with them, as well as Zevran, of course, and Wulf, who nodded at me when I arrived, but stayed firmly behind Kallian like a shadow. A number of soldiers also joined us, armed and armoured, though not wearing royal livery. The group of us left through the side gate, walking quickly but quietly across the city and through a large gate to the Alienage. \n\nI stopped, shocked at the destruction the initial fire had caused; where Kallian's father's home had been, across a large square from the Vhenadahl, there was now nothing but a burnt out shell filled with rubble and mud. The fire had originated in the larger building next door, a run-down two-story affair that had barely looked inhabitable at the best of times, but it was now burned to the ground. All of the buildings around it -- mostly dilapidated shacks -- were damaged, and the fire had clearly spread across the roofs to the next few rows of houses as well. Several buildings were open to the sky, spears of charred wood no longer holding anything up standing all around. \n\nIt was depressing, but while I felt sad and slightly ill, Kallian looked remarkably unaffected, and then I remembered she'd already been to the Alienage to bring those who'd refused to evacuate to the Palace. \n\n\"It's a miracle no one was hurt,\" Alistair breathed, wrapping his arm around my waist as I stared somberly at the wreckage. \n\nI was jolted from my shock when Cailan called out orders softly. \"Spread out, search every remaining building -- I don't want any accidental deaths or injuries.\" \n\nWe all nodded and went to work, Alistair and some of the soldiers breaking down locked doors while Aedan, Wulf, and Zevran picked locks; Kallian and I followed and checked inside once the doors were open. It was horrifying, actually, violently breaking in to what was someone's home -- especially seeing the pathetic state of many of those houses. They were barren, as I would expect of an area that had been evacuated, but more than that it was obvious even so the abject squalor many of the elves lived in. There were homes that Kallian said housed six or eight people, but with only one, lumpy straw mattress surrounded by spaces where people had slept huddled on scrounged wooden planks or other makeshift pallets. Most had one or two chairs, at most, and many had no other furniture at all. \n\nThere were odd, abandoned belongings that, without words, Kallian and I began gathering up as we went, making a pile on a scavenged wooden slab: small stuffed animals and dolls, hand-carved toys, wooden and ceramic plant pots, articles of clothing, and other small keepsakes were all saved and put aside, and I hoped Kallian would be able to find their owners once everyone returned. \n\nWe didn't find anyone living there. Even squatters had found better places to stay, I supposed; the thought made me even sadder. Cailan looked horrified, and I wondered if it was his first time in the Alienage. Once the entire area was cleared, those of us without magic gathered near the Vhenadahl while the mages planned strategy. My spine tingled as Anders and two of the others started casting, laying down a thick layer of ice on the ground surrounding the tree, spreading it to the nearest walls facing onto the green space. Once that was done, Anders planted himself in front of the group of us as the other mages spread out throughout the Alienage. \n\nThe plan was to set small fires, and then use magic to encourage them to spread, rather than just blasting the entire place with magical flames; I held my breath as I felt the spells that started the fires. It didn't take long before there was smoke pouring out of the buildings the mages occupied, and soon the mages themselves were standing outside, arms spread, spells periodically magnifying the heat or containing the blaze to prevent it from burning out of control. As the flames crept nearer the Vhenadahl, Anders went to work with controlled blasts of ice, keeping the heat from rolling over those of us standing nearby. \n\nIn the end it took a couple of hours for the mages to drive the fires to all corners of the Alienage, scorching some of the surrounding stone walls for appearance's sake. As an observer, it was a frightening thing to see at times, with flames leaping from building to building and smoke pouring into the sky; evening fell, and it looked even more impressive, lighting up the night sky. As we finished, a large group of soldiers, following Eamon and a couple of other nobles I didn't recognise, showed up carrying axes and buckets -- obviously planning to fight the flames -- but by the time they'd arrived, the fires were all but out. \n\nEamon sputtered as he approached. \"Your Majesty! What are you doing here?\" \n\nCailan turned calmly towards the older man. \"We had reports of a fire, so I grabbed the nearest mages and brought them here to combat it. Thanks to these Wardens, and mages on loan from the Circle, the fires have been put out -- but I'm afraid most of the Alienage is unsalvageable.\" \n\nI had to hide my smile at Cailan's blatant lie, and I noticed several of the soldiers and mages suppressing smirks as well. Eamon began loudly bemoaning the destruction, and when the last of the mages gave us the nod, Cailan put his arm across the Arl's shoulders, ushering the man back towards the Palace, with us, the mages, and the soldiers following behind. \n\n\"Uncle,\" I heard Cailan say, \"I had no idea you were so sensitive to the needs of city elves. I have an idea -- what if I put you in charge of the reclamation and rebuilding? I've got a budget in mind...\" \n\nI almost giggled at poor Eamon's surprised, reluctant agreement as the two began discussing stone work and unskilled labour as Cailan cleverly implied (without promising anything) that if Eamon performed well enough, he might be considered for the vaunted Royal Chancellor position I knew he'd been aiming for from the start. \n\nThe soldiers and mages returned to their quarters, but Kallian followed us back to our common area, laughing with us as we talked about poor Eamon's new role. I wondered how he'd react to working side-by-side with Kallian during planning and construction. \n\n***** \n\nFor the next several weeks there was a flurry of activity around the Palace. Cailan had the stonemasons, some of the nobles, Kallian, and Eamon in meetings, drawing up plans for the reconstruction, and had tasked some of the army with building temporary housing for the elves outside of the gates of Denerim. They erected the wooden platforms the army had used to keep water and mud out of the tents, and built a few communal, covered wooden structures for cooking and dining. Some of the scouts were sent hunting, hoping to provide food not only for the elves, but for the returning peasants until the harvest could be brought in and the markets returned to normal. \n\nSome of the soldiers had been miners or farmers before joining the battle, and those that could be spared were sent to help bring in harvest and re-open the stone quarries near Denerim, and stone blocks began slowly moving into the city for the construction. There wasn't much for the Wardens to do in Denerim, once all the returning soldiers had been declared free of the taint, so Aedan organised patrols for the roads between the quarries and the city to protect the caravans of stone. \n\nEvacuees began slowly filtering back into the city; the families and staff of many of the nobles had been sent by boat to the Free Marches, and they were some of the first to return -- including Isolde and Connor. Commoners and elves started to return, and it wasn't long before the market district was again full of loud, boisterous activity. \n\nFood was at a premium, but between the harvest coming in from nearby farmlands and the smoked meat brought in by the army, no one went hungry, though soldiers had to guard the carts that distributed the supplies to anxious residents to ensure everyone got only their fair share. There was grumbling when people realised elves were being fed exactly the same as the humans, but when the extent of the damage to the Alienage became obvious, most of the complaining was silenced. \n\nIt was going to be a lean winter, I knew, but with the extreme organization that Cailan had instituted, not to mention the messages being sent around Thedas hoping for disaster relief or at least favourable trade agreements, I had hope that Denerim would come out of the Blight relatively unscathed. \n\nIt became obvious, before long, that a fairly large number of the urban population had settled in the Free Marches, or wherever they had fled when Denerim was evacuated, and once it was clear that certain businesses would not reopen, Cailan cautiously gave permission for some of the elves to open booths in the market. They sold clothing, baskets, crafts, and whatever else they could make from what raw materials they could find or buy; there were those who refused to purchase items from the 'knife-ears', but it was reasonably well-received when it became clear that it would keep the prices low for necessary items. \n\nAs the camp outside the gate filled with elves, Kallian began working with some of the soldiers to teach a few of the elves basic combat techniques and hunting; a small militia was formed, with the goal of defending the camp from wildlife, bandits and the like, and they aided the guards with patrolling around the camp. Tensions flared at first, but began to relax as armed elves did not attack the human guards tasked with teaching or defending them, and the groups started working together. \n\nI heard Anora had returned to the city, under guard; I didn't see her, and Cailan seemed to be doing well keeping her out of his thoughts. I didn't want to bring her up, not when he was doing so well, so I kept my curiosity to myself. I'll find out eventually, anyway. \n\nDuring all of this activity, the Wardens remaining in Denerim and I ended up extremely bored. We couldn't go anywhere until the delegation from Weisshaupt arrived, and the celebration of the end of the Blight took place -- Cailan had planned it to coincide with All Soul's Day, a summer holiday celebration that would happen in a little under two months. There's only so much training even the Wardens can do. \n\nAedan received a letter from Fergus, saying they had taken back Castle Cousland without any difficulty, and that Nathaniel had tracked down Thomas Howe in some brothel in Highever -- named the Dewy Petal, of all the ridiculous things -- high out of his mind on opium. I didn't even know opium was a thing, in Thedas. Huh. Apparently Thomas had left the castle after news of his father's death and loss of titles had reached him, and after he assaultied a prostitute, some enterprising madam had hooked him on the addictive opium as a way of keeping him less aggressive. Nathaniel was going to take Thomas to Amaranthine and see what he was like once the drug withdrawal was over; Fergus had begun the recovery process in Highever, but promised to be in Denerim for the celebration. ",
        "At first it was nice, having nothing to do; Alistair and I spent days in bed together, barely rising to talk to our friends, see the returning patrols, and spend time with my brother -- we made love, talked about our future, and caught up on a year's worth of missed sleep. But eventually we were well-rested, well-loved, and though our nights would remain passionate for the foreseeable future, we were looking for other things to do. \n\nI began working with Kallian, trying to think of what things would be needed in the Alienage before the building was completed; Aedan, Alistair, and the other Wardens still in Denerim began working with the Palace Guards, the City Guards, the new elven militia, and the remaining soldiers who needed combat training. \n\nPlans for the Alienage were coming along; there were going to be more than enough apartment-style homes for all of the elves, with plenty extra left over for population growth, and Cailan had agreed to allow some official stores to open, instead of the unofficial, illegal ones that had existed before. One large building was going to be used as a school, a meeting place, and chapel for Chantry services; Mother Boann had somehow gotten clearance to begin holding services weekly, and hoped that between the Chantry and my donation, she'd be able to begin teaching the children reading, writing, and numbers once the Alienage was restored. \n\nBuilding began within three weeks, and with many of the returning elves helping out as unskilled labour, and the dwarven stone masons -- who didn't discriminate against 'knife ears' -- plus surplus army soldiers with some experience, construction wasn't going to take long. Cailan heard from Nathaniel, who'd arrived in Amaranthine unscathed, and he promised to send the stonemasons to the Vigil as soon as they could be spared in Denerim. \n\nI received my first messages from Soldier's Peak; Levi reported that some parts of the fortress had been 'satisfactorily' reclaimed, whatever that meant, and that Avernus had not caused any problems. He confirmed he had more than enough coin to continue cleaning up and furnishing the rooms, and he had hired some maids, cooks, and other staff to assist and make the place livable once we moved in. Faren had scrawled a quick note praising the soldiers that had been assigned there; apparently there had been a few more undead rise periodically, and they had fared well defeating them. Jowan added that he'd been helping Avernus as he was able, and hadn't seen any sign of worrisome blood magic or shady research. \n\nBy the time the Weisshaupt delegation arrived in Denerim -- by boat from Cumberland -- seven weeks after we arrived in the city, the temporary camps outside the city gates had been abandoned, half of the planned housing had been built, and the elves had retained their rights to carry arms within the Alienage -- and join the city guard. To my surprise, Eamon had worked exceptionally well with Kallian, and even seemed to hold a grudging respect for the petite brunette, who combined common sense and a desire for equality for her people in a way that impressed everyone, no matter how much above her in station they were. And the dwarves had left for Amaranthine, satisfied that the Alienage would be finished appropriately without their help. Most of the army, which had not been officially disbanded, were also sent to Amaranthine, to defend against the eventual darkspawn attack I knew would come. \n\nThe group from Weisshaupt included six Wardens, more than I expected to travel all the way to Ferelden; out of sheer paranoia, Aedan and Alistair kept me well away from them at all times, and as such I didn't even know what they looked like. Cailan, Aedan, Alistair, and Riordan met the group at the docks once word of their arrival reached us, and they came to the Palace, immediately sequestering themselves in meetings. \n\nIn bed, late that night after not seeing my husband for almost the entire day, Alistair told me that so far there had just been a lot of bluster, the representatives angry that Duncan had broken them away, but it seemed we were right -- there wasn't much they could do about it. They had raised several concerns, none of which worried Aedan or Alistair much. \n\nThey implied that there were secrets of the Order that they were unaware of, and Aedan's response was that, if Duncan, in the middle of a Blight, hadn't needed to know, we didn't need to either. \n\nThey had asked whether Aedan and Alistair had really been the leaders, assuming that Duncan and Riordan had done everything, but everyone had insisted that the two current Warden-Commanders had been the ones to collect most of the treaties, and had worked with Lanaya, Greagoir, Irving, and Sereda to sign new ones. \n\nThey tried implying Aedan and Alistair were too young, too green for command, but Cailan and Riordan both backed them up, and when asked which of the delegates had experience in gathering an army to combat the Blight or in fighting an Archdemon, the silence was response enough. They might have been young, but my husband and brother were probably the most experienced Wardens in Thedas. \n\nThe delegates were expected to stay for several more days, and I promised Alistair to stay away, continuing my work with Kallian and Eamon, until they were gone. Eamon seemed much happier with Isolde and Connor back; I didn't see the Arlessa or their son much, but their impact on Eamon's state of mind was huge. He was almost polite, even to me. The problem for me was there wasn't much left to do. The plans had been finalised, the construction almost complete, and Kallian was spending her days in the Alienage organising the work and supervising the construction itself. And all the strange Wardens around had my skin itching from the taint, and it took far too much concentration to ignore the sensation. Somehow it bothered me less when I knew the Wardens responsible. \n\nSo I found myself wandering the Palace halls, admiring the tapestries, getting lost and having to work my way back, until I found myself in a library I hadn't known existed. It was dusty, obviously long-unused, a large chamber with enormous bay windows covered by thick curtains. I opened the drapes, but despite that, only weak light shone through the dirty windows; it was enough that I didn't need to light a lantern, and I spent a while browsing titles. Most of them were familiar -- histories of Thedas, treatises on the evils of the Tevinter Imperium, old political dissertations. Many of the same books graced the shelves in Redcliffe's library, and I imagined most of the castles around Ferelden would be similar. \n\nThere was one section full of fiction, which I perused with more interest; I blushed and quickly put back one book I picked up, titled \"Antivan Nights\"; I had thought it might be a Thedosian \"Arabian Nights\", but the salacious images I accidentally flipped past had me stuttering at my silly mistake. I was looking for something less racy when I heard footsteps, and an unfamiliar head poked through the door into the dusty room. \n\n\"Hello,\" I called out. \n\nA dark-haired, slender elf in an immaculate uniform stepped hesitantly into the room. \"I apologise, your Highness. I don't mean to disturb you.\" \n\n\"It's no problem. I'm surprised to see anyone else in this ridiculously dusty library, I admit, but it's no bother. And please, call me Sierra.\" \n\nThe elf took a few more steps inside, seemingly encouraged by my lack of angry outburst. \"The Lady Anora requested something to read. She didn't give me a particular title, though, so I'm somewhat anxious about choosing a book.\" He wrung his hands together nervously. \n\n\"Well, let me see. She's probably read all of those before,\" I gestured at the two walls covered in histories and politics. \"How about we grab a couple of these story books, one thick dry political history, and...here.\" I picked up \"Antivan Nights\" and set it on the pile. \"Be sure to let her know I chose this one for her. Tell her you chose the rest, but don't take credit for this one, okay?\" \n\nThe elf nodded vigourously, clearly still nervous. \"Of course, my Lady.\" I winced at the honourific, but at least it wasn't 'your Highness'. \"Thank you. I'll just take these to her right away.\" \n\nI was still giggling at my own prank when someone else slowly approached, and I turned to see who else was joining me in the room that probably hadn't seen so much activity in years. \"Who's there?\" \n\nA thin, red-headed man, another elf, stepped through the door, and smiled awkwardly. He had long hair held back by a simple leather thong, and was wearing a wrinkled pair of trousers and a brown, loose tunic. He had a smooth, well-healed scar from the corner of his lips down to his chin, which slightly distorted his mouth when he spoke. \n\n\"Pardon me, m'Lady. Just looking for something to read.\" His accent was different, something I didn't recognise. I wondered if he was one of the elves Kallian had hired from the Alienage to help out until everything at the Palace had settled down. Perhaps his scar affects his voice too? He clearly didn't recognise me, and it was a bit of a relief. \n\n\"No problem; help yourself.\" I gestured at the shelves, and he stepped inside softly. \n\n\"Find something to read for yourself?\" \n\n\"Oh, I wasn't even looking that hard. I'm just bored, but reading Thedosian history or some naughty romance novel doesn't appeal to me.\" \n\nHe ignored the comment about the erotica, and raised an eyebrow at me. \"Bored?\" \n\n\"Well, my husband and my brother and all our friends are busy, but I'm not supposed to leave the Palace...so yeah, bored.\" \n\n\"Your husband?\" \n\nI was distracted by sneezing, having stirred up some dust as I flipped through a children's short story collection. \"Hmm? Oh, yes. Sorry. I'm Sierra Theirin -- my husband is Alistair Theirin.\" \n\n\"Oh, your Highness, I apologise...\" \n\nI waved my hand dismissively. \"Please, just Sierra. It's fine, really. What sort of book are you looking for?\" \n\nWe chatted for a few minutes about the pros and cons of Brother Genitivi's writing, which I hadn't actually read, but having met the man I felt like he'd be a pretty decent writer. \n\n\"You've met Brother Genitivi?\" \n\n\"Well, yes, in Haven with the Wardens...he was captured by a dragon cult and my husband and brother rescued him...\" \n\n\"Sierra? Love?\" Alistair's voice, faint but audible, drifted in from outside. \n\nI stopped and stepped to the door, poking my head out to see my husband and brother come around a corner next to the library. \"Here! I'm just looking at some books, and talking to...\" I turned back to the elf, whose face looked slightly flushed for some reason. \"I'm sorry, I don't know your name.\" \n\nThe elf opened his mouth to reply, just as Aedan gasped and Alistair interrupted. \"Warden Constable Torpin.\" \n\nChapter One Hundred Eighteen: Identity Crisis \n\n\"Sierra? Love?\" Alistair's voice, faint but audible, drifted in from outside the library where I'd been loitering all afternoon. \n\nI stopped and stepped to the door, poking my head out to see my husband and brother come around a corner next to the library. \"Here! I'm just looking at some books, and talking to...\" I turned back to the elf, whose face looked slightly flushed for some reason. \"I'm sorry, I don't know your name.\" \n\nThe elf opened his mouth to reply, just as Aedan gasped and Alistair interrupted. \"Warden Constable Torpin.\" \n\nI felt Alistair's hands settle at my waist from behind possessively. \n\nI gaped. It hadn't occurred to me to ask who the elf was, and with my unconscious, stupid human bias, it never occurred to me that an unimposing-looking elf would be anything other than a servant. Stupid, stupid, stupid, Sierra. Once I thought about it, I could feel the taint radiating off of the elf; I'd been working so hard at ignoring the feeling since the Weisshaupt delegates had arrived that I hadn't noticed. \n\nI spent a few seconds rethinking our conversation, trying to remember if I'd said anything to the man that I shouldn't have. He had probably figured out that something was strange -- I realised that much of what we'd discussed made little sense, now that I thought about it. An elf from the Alienage would likely be completely illiterate, never mind having read Genitivi's histories. And he wasn't as servile as the other city elves I'd met -- I was so happy not to be seen as intimidating that I hadn't noticed. He either thought I was an idiot, or he had figured out there was more going on with me than with some typical Thedosian noblewoman. I slapped myself on the forehead. \n\n\"You knew exactly who I was. You came looking for me.\" \n\nTorpin flushed again and nodded. \"We were curious about you. It's...unusual for Wardens to be married, more so for them to travel with their non-Warden spouses. We suspect you know far more about the Order than a non-Warden should. And the fact that they were so adamant against bringing you to the meetings made us wonder what they were hiding.\" \n\nAedan stepped forward, face red with fury, as Alistair pulled me behind him protectively. \"Listen to me, Warden-Constable. I'll say this precisely one time. My sister has been through enough. And she is not a Warden -- even if we were still part of your Order, she is not. You have no authority here. Speak to her again, try to reach her in any way, and I will send you back to Weisshaupt in a box.\" \n\nAedan and Alistair shared a quick glance, and then with a nod, Alistair turned, wrapping his arm around my waist, and practically dragged me out of the library, leaving Aedan alone with the Weisshaupt Warden. I could hear the elf objecting as I was ushered away, but Aedan's clipped response was too quiet to make out. \n\nAlistair didn't speak the entire way back to our room, and I just accompanied him meekly, wondering how much trouble I was in. I had to admit that not finding out who the elf was before chatting with him was rather stupid, but I didn't think I'd said anything that would betray my excessive knowledge of Grey Warden secrets, or anything about myself he wasn't supposed to know. \n\nOnce we got to our room, Alistair ushered me through the door, and I dejectedly walked inside a few steps. I heard Alistair lock the door behind us, and I sighed and reluctantly turned around. \n\nHe surprised me, then, by pulling me into a tight hug, burying his face in my hair and squeezing me to him like I would disappear. \n\n\"Are you alright?\" \n\nI snuggled into his shoulder, wrapping my arms around his waist. Not for comfort, but just because I enjoyed the intimacy. \"I'm fine, Alistair. Nothing happened. I didn't even know I had a problem until you showed up! I'm glad you found me before I said anything stupid.\" \n\n\"You wouldn't have.\" He released me and climbed onto the bed, sitting with his back against the headboard. He patted the spot next to him, and I cuddled up beside him again. \"Will you tell me what you did talk about?\" \n\nTrying to explain my insanely silly brain fart was extremely embarrassing. After I went through the conversation, as far as I could remember, I tried anxiously to justify myself. \n\nHe chuckled teasingly. \"So you had a conversation about history books and Chantry scholars, with an unknown elf you somehow assumed was a servant -- despite not acting or dressing like a servant, and being far too well educated.\" \n\n\"I was distracted! I was too busy being impressed with myself for my prank on Anora. I think he was listening to my conversation with that elf, and knew he could get away with acting less formal with me. And why should I have to demand the name of every person I talk to anyway? How was I supposed to know I'd be ambushed by a Warden? You never told me their leader was an elf...\" \n\nI rambled to a stop as Alistair placed a finger over my lips with an amused smile. \"I'm not angry -- at least, not at you. It is sort of funny, though.\" I groaned, and he laughed. \"What's all this about a prank on Anora?\" \n\nI told him about the selection of books I helped the actual elven servant to choose, and he laughed at my helpless giggles as I related sending the sex book to Anora. \"That's cruel!\" He pulled me into his lap for a kiss, and my laughter quickly changed to moaning as his lips attacked my sensitive ear. \n\nHis voice changed, too, dropping into that husky, sexy timbre he reserved for me alone. \"Do you suppose she's done with that book?\" \n\nI gasped as his lips trailed down my neck, tilting my head to give him better access. \"I...I don't know, but there were more like that, where it came from,\" I whispered. \"I could go get one...\" \n\n\"Maybe tomorrow, if you're not too exhausted from what I plan to do to you tonight.\" He shifted me to lay on my back on the bed, looming over me with a predatory smile, and I gulped. \n\n\"Bring it on, then.\" \n\nNo one saw us for the rest of the night. \n\n*** \n\nApparently after we'd left, the Weisshaupt contingent insisted on holding a meeting with the rest of Ferelden's Grey Wardens. They painted a bleak picture of being Wardens without the support of the order, and demanded that all of them leave Ferelden and report to another Grey Warden outpost -- either in Orlais, Nevarra, the Free Marches, or Weisshaupt itself. All of our people declined, with the exception of Riordan, Dougal, and Loghain, who were instructed to report to Jader immediately. Riordan agreed to leave as soon as the celebration in Denerim was over -- but they had to detour to Nevarra with Anora first. I bet Weisshaupt is none-too-pleased about that! \n\nThe Weisshaupt Wardens were gone the next day; Aedan refused to tell us what had transpired between him and Torpin after Alistair and I left, but my brother was tense and irritable for several days afterwards. Even Zevran had trouble pulling him out of his foul mood, and we all tiptoed around him until Fergus arrived in the capital. I avoided Fergus, not wanting to put a damper on Aedan's renewed good humour by fighting with my liege lord, so I barely saw either Cousland before All Soul's Day. \n\nSten left the day after that. With his Grey Warden status and some coin gifted to him by Aedan, he managed to purchase passage to Rivain on a merchant ship heading to Dairsmuid; from there it was a mere week's walk to Kont-aar, the last Qunari stronghold on mainland Thedas. Rivain was largely peaceful, even with the Qunari presence, so he was at minimal risk. \n\nHe declined anyone walking him to the docks; I knew he would want to avoid emotional displays, and so we bid him farewell at the palace and let him go. I managed to finagle myself one last hug, plastering myself against his stony chest; to my shock, he patted my shoulder awkwardly instead of standing stiffly uncomfortable like normal. I'm actually going to miss him too...huh. It was strange to think that a Qunari had become a part of my family, but that's what had happened. \n\nI presented him with a large bag of cookies, as he left, as well as a card with a recipe for one of his favourites -- oatmeal with raisins. The big softie really does have a sweet tooth. With a nod, he left us and headed to the docks. \n\nI wondered what would happen to him when he got back to Seheron, and if we'd ever see him again. He'd signed an agreement with Aedan for mutual aid against the Blight, choosing to ally himself with us instead of Weisshaupt; Aedan had supplied him with enough Archdemon blood to recruit and keep a small number of Wardens in Seheron for a century, and a recipe for the Joining potion. I hope Qunari Grey Wardens aren't something Thedas comes to fear, down the road... \n\nRiordan had been excessively quiet since the battle had been won, and I finally cornered him after the Weisshaupt group left, convincing him to take a walk with me in the palace's gardens. He looked gaunt, tired, even despite all the time we'd had to rest since returning to Denerim. ",
        "\"How are you holding up?\" he asked, before I had a chance to say anything. \n\nI was touched by his concern, especially in light of his own significant issues. \"I'm okay. I'm still mourning, I suppose, but I'm trying not to feel guilty about how Duncan died. I miss him, Riordan.\" \n\nHe sighed. \"As do I. You should not feel guilty, Sierra. Knowing what he would be facing, had he survived...well, I think I envy him, to be honest.\" \n\nI touched Riordan's arm, shocked and saddened. \"Riordan...\" \n\n\"I was not meant to survive the battle. You said so yourself. Now, instead of a death that means something, trying to end the Blight, I will be forced to take my Calling and go alone into the Deep Roads. Once I take Anora to Nevarra and return to Jader with Loghain, I will be leaving for Orzammar almost immediately. My sanity will not last much longer, I am afraid. For some reason I fared better than Duncan, but I do not have long.\" \n\n\"Why don't you let Dougal take Anora and Loghain, at least? Spend the last of your time travelling, or with friends, or something. Stay here, if you like. Maybe Avernus could help you?\" I fought back the tears at the idea of losing a connection to Duncan, not to mention the idea of him dying alone in those dank, tainted tunnels underground. \n\nHe shook his head sadly. \"My entire adult life has been about duty, Sierra; I will not shirk it now. Besides, I'd like to go back to Jader anyway. I wish to say goodbye to my brothers and sisters, before my Calling. And as much as I understand Duncan's choice to separate from Weisshaupt...I wish my name to be recorded in the archives, alongside all of the others who have come before me. I don't disapprove of the split, but I am a Grey Warden, not a Fereldan Grey Warden. \n\n\"No, I look forward to going home, and the side-trip to Nevarra shouldn't be much of a hardship. Though I do wish the king would tell us where in Nevarra we're going...\" \n\n\"You don't know? He'd better tell you soon -- you'll be leaving in a week!\" \n\n\"Perhaps he's having second thoughts?\" \n\n\"About putting her aside? I doubt it. She well and truly screwed herself on that one. If she'd respected his 'memory' at all in Denerim before the Landsmeet...if she hadn't betrayed us, I think he could have forgiven her. But no, I imagine the hold-up is not wanting his enemies to know where she'll be.\" \n\nRiordan smiled, looking exhausted despite his brief amusement. \n\n\"Are you going to be okay?\" I reached out and touched his arm softly, and he patted my hand. \n\n\"I will. The nightmares are less since the Archdemon's death. It won't be long now. I'll be fine.\" \n\nNodding, throat constricted around all the things I didn't know how to say, I hugged him briefly and then walked away in search of my husband, hoping for a distraction. \n\nAll of the Wardens near Denerim had been recalled from their patrols for the celebration on All Soul's Day. Several of the elves who'd stayed in the Palace during the evacuation had been hired as servants, and Cailan had them cleaning our armour, and washing and repairing tabards; he even brought in some apparently famous hair stylist, who Leliana had recommended, to do touch-ups on everyone's hair. By the day before the celebration, we were all outfitted appropriately, and acceptably groomed, ready for the festivities. \n\nLike the Wardens, I was permitted to wear armour for the ceremony -- Aedan was paranoid about the possibility of assassination attempts, so we were all fully armed as well -- and I proudly donned my Grey Warden 'companion' tabard over my set of green leather. Alistair's dragon bone shone in the sun, and the rest of our group also looked good. Loghain insisted on being left behind; I had barely seen or spoken to the taciturn Warden since we'd arrived in Denerim, and I wondered if he'd spent all his time commiserating with Anora. He maintained that he'd be a distraction -- either hated by those who'd opposed him, or lauded by those who'd benefitted from him -- and it would take the focus away from the purpose of the day. He's probably not wrong.  \n\nA parade was to be the start of the celebration, and we all gathered anxiously at the palace gates. Several carts were brought out; they'd been decorated with flowers and fabric to look festive, and we were divided among three of them. Cailan's went first, of course, surrounded by loyal guard members; Fergus, Nathaniel, Leonas Bryland, and Eamon, among others, sat behind him. We came next, Riordan, Alistair and I joining Aedan and Zevran on the first, the rest of our group divided between the other two as they wished. Several of the Circle mages sat with the Wardens. The rest of the nobility who'd been in the battle followed us on a few more carts, and a large number of soldiers brought up the rear. \n\nWe had to wait a few minutes until Kylon -- who'd been promoted to the head of Denerim's Guard -- was happy with the security detail, and then we were travelling through Denerim. There were crowds on the streets, pressed up against the walls to allow the parade to go by; people screamed and cheered, throwing paper flowers and waving madly, and we all got into the spirit of the thing, waving back. Cailan had bags of coppers and wrapped candies to throw to the children -- the larger proportion of which ended up in the Alienage, I noted -- and it was fun watching the little ones scramble to grab the treasures. \n\nThe parade wended through the noble's district, out to the docks, through the Alienage, and down to the market, ending up outside the city gates. The remains of the elves' tent city had been dismantled, and a large field near the city gates had been cleared. There were pavilions set up offering food for free; the scouts Cailan had sent out hunting had obviously been working hard, because there was wild boar, bronto, deer, sheep, and several other animals I didn't care to look at too closely roasting over several large spits. There was a tent selling ale, several others hawking pastries, sweets, and keepsakes, but no one would go hungry -- one tent with free food had even been set aside for any elves who were too nervous to approach the larger pavilions. \n\nThere were musicians playing, story-tellers weaving wild tales, and magicians amazing the crowds with sleight of hand tricks; acrobats tumbled across maps, and puppeteers retold the story of the battle that ended the Blight, much to the Wardens' embarrassment. They all had hats out to collect coppers, and it looked like they'd all make a decent amount of coin given the size of the crowd. \n\nKylon had the guards taking rotations, each having some time to eat and explore the fairgrounds between patrols; some of the army bolstered the guards' numbers, and overall it seemed unlikely there would be any violence. We still kept our armour on, just in case. \n\nA large seating area had been set aside for the nobility, and the Wardens were invited. Our carts rolled up to the edge of the grounds, and we were allowed to climb down and mingle with the crowds, getting ourselves food before resting on benches with the nobles. \n\nLater there was dancing, two large flat areas covered with wooden planks, one with a maypole in the centre, and a group of musicians alternated between songs more suited to the formal dances of the nobility, and the more carefree, less structured dancing of the common folk. I danced with my husband, but also Cailan, my brother, Nathaniel, most of the Wardens, and several of the nobility. I didn't know any of the steps to the formal dances, so I only agreed to go during the less structured ones; even in armour, it was a lot of fun twirling and laughing between various partners. \n\nNeeding a breather, I sat for a moment and watched my adorably clueless husband dance with some young noblewoman -- it wasn't Habren, but I hadn't caught her name. The look she'd given him, the glare directed my way, left no question what she was hoping for; I couldn't even blame her. My husband, whether dressed in armour or a suit, was the most handsome man in Thedas, after all, and now a prince. But as much as she tried to flirt, he was only concentrating on his feet, trying not to step on her as he shuffled her awkwardly around the dance floor. I'd have been jealous, if his obvious discomfort wasn't so clearly written across his face. \n\nWhile I watched, someone sat down beside me; I turned to see Fergus, a mug of ale in one hand and a glass of wine in the other. He held out the wine, and I took it with a grateful smile. I took a sip, and it was good -- sweet, just how I liked it.  \n\n\"You've been talking to Zevran, your Grace.\" \n\nHe smiled. \"Well, I felt I should get to know the man who won my brother's heart.\" \n\nI was shocked, having expected Fergus to either be bothered by Aedan's orientation, or possibly try to deny it. And he didn't call me Princess. \"He's a wonderful person.\" \n\nFergus chuckled. \"You're surprised that I know.\" \n\nI flushed. \"I shouldn't make assumptions, I suppose. Aedan never wanted to discuss his...interest, with your parents. He thought they wouldn't approve, and I just assumed you would feel the same.\" \n\nHe examined me, smile faltering. \"My parents? Shouldn't you be saying 'our' parents?\" \n\nI sighed. \"I know you don't believe me, and I won't push myself where I'm not wanted, your Grace. Not to mention, even though I believe I am your sister, I wasn't raised by the same people. I can't claim to know anything about how they'd feel about...anything, really. A blood relationship isn't the same as parentage.\" \n\nHe sat silently considering that for a moment, and then nodded. \"They weren't upset that he likes men. But an heir would have been important, and it would eventually have caused problems. I know they'd been looking for a match with someone who would be...understanding. Not have expectations. \n\n\"But now...he's a Grey Warden. He can't hold a title, so his children wouldn't be in line for the Teyrnir anyway. Even if Cailan reverses that rule for Ferelden...it just doesn't feel like it matters anymore. After everything that happened, after all we've lost...\" His voice cracked, and I suppressed the urge to touch him, to offer sympathy. \"If he can have some measure of happiness, that's all I want for him. I wouldn't take that away from him.\" \n\nI looked away from the raw pain on his face, watching Alistair for a moment as he tried to spin the little harpy he was dancing with. \"Thank you, your Grace. I know your approval will go a long way towards helping with Aedan's happiness. And...I'm sorry. For your loss. I know it doesn't mean much coming from me, but...\" \n\nHe waved his hand dismissively. \"Thank you, Princess.\" I winced, and he looked away, face flushed. \"I've danced with all of the rest of my vassals, and I told you I would treat you the same as the rest. So, will you do me the honour?\" \n\nI twitched, startled. \"Y..your Grace?\" \n\nHe reached out and took the wine glass from my hand, then held his hand out expectantly. \"A dance, Sierra. Yes or no?\" \n\nI nodded dumbly, taking his hand and standing up to follow the Teyrn onto the dance floor in shock. Alistair caught my eye, a concerned look on his face, and I tried to give him a reassuring smile. He frowned, but didn't come and make a scene, for which I was grateful. He abandoned the woman he'd been dancing with as he slowly moved off the dance floor, eyes never leaving me. \n\nI followed Fergus closer to the centre of the floor, heart pounding with anxiety. The music changed, as we walked, to one of the more formal dances, and I grimaced, tugging on Fergus' hand. \"Stop. Your Grace, please stop. I don't know how to dance to this.\" \n\n\"Just follow my lead.\" He pulled me into position, one of his hands firmly on my back, the other gripping my suddenly sweaty fingers. \"Relax. I'm not going to try to make you look stupid. This isn't a group dance. It's like fighting: just move when I do.\" \n\nAnd then he stepped. I moved my foot to keep from being trod upon, and suddenly we were, sort of, dancing. To my relief, he didn't try too many fancy moves, and for the most part we just swayed back and forth to the tempo of the music. After the first minute, I settled into the pattern of the steps, trying not to be caught staring at the feet of the people twirling around us. \n\nI was relieved when the song was over; Fergus was a good dancer, and he hadn't let me look like an idiot, which he could have, but between my discomfort around him and my discomfort with dancing, I couldn't have escaped the dance floor fast enough. So when the last notes of the song sounded, I curtsied, carefully, and then hurried back to my seat where Alistair waited for me. \n\nI spent the rest of the afternoon glued to my husband's side, praying no one else would ask me to dance. \n\nFinally there was a ceremony; Cailan climbed up on a platform, and one of the Circle mages performed some spell that amplified his words. He made all of our group -- companions and Wardens alike -- stand beside him as he spoke. \n\n\"Fereldans!\" he shouted, as everyone quietened down to listen. \"We are gathered here today to rejoice at the end of the Blight that threatened our homeland. We have done what no other nation in Thedas has ever managed: we ended a Blight in less than a single year. We are here to remember and celebrate the lives of those we lost, and to give thanks to our soldiers, our mages, and our allies -- including elves and dwarves; because of them, we defeated the horde of darkspawn that threatened not only our lives, but our way of life. But most of all, we must thank these people standing beside me. \n\n\"These Grey Wardens selflessly dedicate themselves to destroying darkspawn and defending against Blights; these Wardens, despite their numbers being decimated at Ostagar, without the support of their Order, and despite a civil war, gathered an army and defeated the Archdemon. And Duncan, their Commander, the Hero of Ferelden, gave his life to ensure we would all be safe. \n\n\"I give you your saviours: Ferelden's Grey Wardens!\" \n\nThe cheering was deafening, and not a one of us on the dais had managed to get through the speech without blushing -- with the possible exception of Zevran, who I was pretty sure was genetically incapable of it. We waved, bowed to Cailan, waited politely for the clapping to die down, and then scampered away from the platform as fast as we could without being impolitic. \n\nThe rest of the evening was a riot of laughter, wine, dancing, singing, and spending the last of the time available to us together, before we would be separated. I missed Faren, Jowan, Bel, Oghren, and Conrad, though I drank enough wine to be rather silly, if not totally sloshed, and wasn't entirely upset the dwarves would be missing my acute loss of control. I'd never hear the end of the teasing. Alistair, slightly less tipsy than me, helped me back to our room after the long, slow cart ride, and after downing a couple of glasses of water, we collapsed together on the bed and slept like drunken dwarves."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-117-118"
}