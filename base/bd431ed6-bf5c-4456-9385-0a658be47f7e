{
    "title": "Time After Time",
    "pages": [
        "Something a little off-beat this time. It is a lesbian love story but that might not be immediately obvious so please bear with me. 'Time After Time' is a long story\u2014there will be sex but it's secondary to the plot. Anyway, I hope you enjoy it. \n\nCharacters in sex scenes are eighteen years old or over. All characters and places are imaginary\u2014any resemblance to persons living or dead is coincidental. \n\nAuthor's note: For the benefit of US readers who may be unaware, the legal age in the UK for buying alcohol is eighteen. \n\nCopyright \u00a9 2017 to the author \n\n* * * * * \n\n1877 \n\nThe woman in the four-poster bed was dying, her breathing ragged and stertorous. Four other people were in the room, keeping silent vigil: sitting on one side of the bed was the nurse who every few minutes would wipe the sick woman's brow with a damp cloth; at the other side, holding the woman's hand, was her husband, his expression anguished; the doctor and the rector stood close by, ready to give such aid as might be necessary. \n\nThe three men had been contemporaries at Oxford University and had remained friends despite the different paths their lives had taken. The husband was now a high-ranking official in the Indian Civil Service, the doctor had a well-regarded practice in London's Harley Street while the rector's living was a comfortable sinecure in an ancient Buckinghamshire parish. \n\nThe doctor took the woman's free hand and felt for her pulse. \"Not long now, I fear,\" he said, his voice low. \n\nThe husband brought his wife's hand to his lips and kissed it gently. Her eyes opened and she smiled at him. \"Thank you for a lovely marriage, dearest Henry,\" she whispered, then: \"I'm so sorry I could never give you a son.\" \n\n\"I had you,\" the man told her softly, \"I needed no-one else.\" \n\n\"You've made me so very happy, Henry.\" She added a little more audibly: \"I know we'll meet again one day.\" Her eyes closed as she gave a little sigh. \n\nThe doctor felt for a pulse again then lowered her hand to the bed and bent forward to lift an eyelid. He nodded, as much to himself as to the others, and patted his friend's shoulder. \"She's gone, old man. I'm so sorry. We'll leave you with her for a while so that you can make your farewells.\" He signalled to the rector and the nurse and both followed him from the room. \n\n\"It's ironic,\" he said to the rector when the nurse had left them to inform the other staff, \"All those years in India where they have an abundance of exotic and deadly diseases and Berenice remained unscathed. They return to England on their long leave and she succumbs to a congestion of the lungs.\" \n\n\"At least she had her faith,\" said the rector, \"She knows that they will meet again in the next life.\" The doctor raised a cynical eyebrow but said nothing. \n\n\"Oh, I know you don't hold with what you call mumbo-jumbo,\" added the rector, noticing the doctor's expression, \"But I'm sure her dying words will be a great comfort to Henry. They will meet again in God's mansion, of that I'm certain.\" \n\nThe doctor couldn't contain himself. \"My dear Monty, how many times must I explain? We are animals, superior animals, true, but animals nonetheless. We have the one life and at the end of it is oblivion. They are no more likely to meet again than man is to fly to the moon.\" This was a long-standing dispute between the two although it had done nothing to damage their friendship\u2014in fact, although they were unlikely to admit it, they rather enjoyed the argument. \n\n\"Edmund, if you weren't such a decent man, I would really fear for your soul when your time comes. As it is, I believe the good Lord will take into account your generosity of spirit, overlook your shortcomings and admit you to his presence.\" \n\n* * * * * \n\nThe funeral was held on the bleakest of midwinter days with heavy dark clouds piling up from the east, bringing with them the promise of even worse weather. Every now and then there were flurries of icy sleet while a savagely biting wind swept across the churchyard, cutting unhindered through the topcoats and mufflers of the assembled mourners to leave them shivering and uncomfortable. \n\nAlthough it was not within his parish, the Reverend Montague Peacock conducted the service for his old friend's wife with the blessing of the local vicar, an elderly man who valued his warmth and comfort. At times gusts of wind were so vicious that they tore at the words Peacock was reading from the Book of Common Prayer, shredding and dispersing them, rendering them nigh inaudible: \"...we therefore commit her body to the ground; earth to earth, ashes to ashes, dust to dust; in sure and certain hope...\" \n\nAt last the service ended and the sexton and his helpers lowered the casket into the ground. Henry Chastain was the first to cast a handful of the cold damp earth into his wife's final resting place, to be followed by the others present. He remained by the grave for some time while the mourners gradually made their way back to the rented house where refreshments were to be provided. His friends the doctor and the rector remained with him although they stood back some little way to allow him a private moment. \n\n* * * * * \n\nBy late evening the company had dispersed, leaving the three friends alone. \"What do you intend to do now, Henry?\" asked Dr Edmund Gillam. \n\n\"I have a few years to go before retirement so I might as well return to India,\" Chastain replied, \"A packet leaves Tilbury in three weeks time and I'll be on it. Now that Berenice has gone there's little enough to keep me here. I suppose it would be easy for me to obtain a government post in London but I'm used to India and the way of life there. I've made arrangements for a monument to be installed. You will have the grave tended for me, won't you?\" \n\n\"Of course, old man.\" Henry's friends raised their glasses in silent toast. \n\nAlmost three months later Henry Chastain made landfall in India and quickly threw himself into his work. \n\n1894 \n\nThe three friends were gathered together in the smoking room of their London club., chairs drawn up close to a roaring fire. The rector drank sherry and favoured an old and much-loved cherry-wood pipe while his companions each smoked fine cigars and held a glass of whisky-and-soda (or chota-peg as Henry Chastain would have it\u2014fortunately the club's waiters were used to visitors from the sub-continent). \n\n\"So, what are your plans, Henry, now that you've retired and presumably returned home for good?\" enquired the doctor. \n\n\"I've taken a place down in Wiltshire, rented on long lease.\" Henry Chastain drew on his cigar to release a cloud of fragrant smoke. \"It's a comfortable house, pleasantly situated in the countryside, and should do me nicely until my time comes. I think I'll enjoy life as a country gentleman.\" \n\n\"You'll be by yourself?\" \n\n\"Except for staff, yes. Of course, I'll expect regular visits from you two, your duties permitting that is.\" \n\n\"You've never thought of remarrying?\" Dr Gillam asked. \n\n\"No, I never met anyone who could match Berenice in my eyes and I've become accustomed to my own company. I think I'd make a poor spouse now.\" \n\nTalk was general, covering mundane matters, for a while until the rector said: \"By the way, do you fellows remember a Roland DeVere, up at Oxford when we were?\" \n\n\"DeVere... DeVere...\" mused Henry Chastain, \"Ah yes, wasn't he the chap devoted to good works and so on, full of odd ideas, labelled the workhouses degrading and inhumane, always campaigning to have them closed?\" \n\n\"Oh yes, that's the fellow,\" said the doctor, \"I believe that over the years he became a noted philanthropist\" \n\n\"That's the one. He inherited a small fortune, never married so he gave considerable sums to charity. He was quite friendly with Charles Dickens I understand\u2014they had similar aims and ideals.\" Reverend Peacock signalled to a waiter to bring a fresh round of drinks and continued: \"Anyway, he died recently; except for a few generous bequests to his servants, he left most of his money to various charities. If ever a man has earned his place in heaven, he has.\" \n\nDoctor Gillam rolled his eyes. \"Monty, how many times\u2014\" \n\n\"I know, I know...\" said the rector, a little testily, \"As far as you're concerned, there is no afterlife. Well, I believe there is.\" \n\n\"Though perhaps not necessarily in a heaven,\" said Chastain. \n\n\"What do you mean, Henry?\" \n\n\"Well, there's always the possibility of reincarnation.\" \n\n\"Hah! Reincarnation?\" the rector snapped, \"Unchristian nonsense\u2014superstition!\" \n\n\"Come now, Monty, is the concept any more far-fetched than the idea of a benevolent, white-bearded father-figure presiding over a heaven where we will spend eternity?\" This was unusual. Chastain normally left the religious arguments to his two friends. \n\n\"What's this, Henry?\" said the doctor, \"The wisdom of the East we hear so much about?\" \n\n\"Don't disparage the wisdom of the East,\" his friend admonished, \"I've seen some strange things and I tell you, we could learn much from them.\" \n\n\"Ah, things like the Indian rope trick, I suppose.\" \n\n\"No, I've never seen the rope trick,\" said Chastain, \"I don't really believe it exists. I've never met anyone who has seen it first-hand. It's always a case of someone knows someone who knows someone who has seen it. Fancy and myth, that's all. And if it does exist, then it's most likely fakery. No, I'm referring to some of their philosophies and religious practices. They may seem strange to our western eyes but they have something... they have something...\" \n\nMr Peacock rapped his pipe in the grate to remove the dottle. \"And do you really believe in this humbug about reincarnation?\" \n\n\"I'm not necessarily saying I believe... but I hope that I'm open-minded about it. Many Asian races believe in it. They hold that we all live many lives until such time as we attain perfection\u2014nirvana, some call it. The good or evil you do in this life is weighed against you in your next life and determines your progress or regression. When you have attained nirvana, then you move to a higher plane of existence.\" \n\n\"Assuming there is some truth in it,\" said Doctor Gillam, \"what would you want to come back as? A man of great wealth? A genius? An eminent astronomer discovering a new planet?\" He chuckled and grew jocular. \"Or if you've been slightly bad, deserving of minor punishment, perhaps as a pampered cat in a comfortable home?\" \n\nHenry Chastain sipped his whisky and smiled. \"I think perhaps I'd like to come back as a woman, just to see what it's like.\" \n\nThere was a bark of laughter from his friends. \"What on earth for?\" one of them scoffed, \"Women have no rights, they don't even have the vote. Yes, some are now being admitted to universities, even to medical schools, but those places are not truly welcoming, make life damned difficult for them in fact. It would be no fun being a woman, Henry.\" \n\n\"Oh, I think there will be great changes in days to come. I'll wager that within forty or fifty years women will have the vote, be in government even. I'll wager that within a hundred years women will have many rights equal with men.\" \n\n\"Balderdash!\" And the three men continued to argue amiably well into the night. \n\n1909 \n\nHenry Chastain was dying but then his life had been a long one. At eighty-two he had outlived most, if not all, of his contemporaries including a number of close friends. Montague Peacock had passed away several years previously, serving his parish faithfully to the end. Edmund Gillam was still alive although now becoming more frail by the day. He was here at Henry's bedside together with a new, much younger, doctor, a brisk, no-nonsense sort of fellow whom Gillam tended to scorn for his sad lacking in empathy. \n\nThe young man felt for Chastain's pulse then dropped his hand. \"Well, the old boy can't last much longer,\" he said, oblivious as to whether or not Henry could hear him, \"Surprised he's lasted this long.\" \n\nDoctor Gillam's glance was icy, his reply snappy. \"The 'old boy' as you call him is ten months my junior. I suppose you're expecting me to fall off the perch any moment now.\" \n\nThere was a rasping chuckle from the bed. \"Don't worry, Edmund, he'll learn in time. He'll grow old himself one day. Then he'll find that he clings on to every ounce of life he can.\" He beckoned his friend closer. \"By and large I've had a good life, Edmund, so I can't complain. I've missed Berenice every day but these things happen. So it's my time now\u2014you know, at least one oriental race calls it going into the Great Void where we prepare for being reborn.\" He seemed to doze only to wake again a few minutes later. \"To die will be an awfully big adventure.\" He closed his eyes and slept. That was the last thing he said. Half-an-hour later he died peacefully and without awakening. \n\nDoctor Edmund Gillam lowered his head. \"Goodbye, old friend.\" \n\n\"That was a peculiar thing he said,\" remarked the young doctor as he helped Gillam to cover the dead man, \"That thing about death being an adventure.\" \n\n\"It was a quotation,\" Doctor Gillam told him, \"from the story Peter Pan by that writer fellow, Barrie. And with some of Henry's beliefs about what might happen after death, it could well be an adventure.\" \n\nThe younger man was scathing. \"Faugh! Nothing happens after death.\" \n\n* * * * * \n\nHenry Chastain was gossamer floating on an unearthly breeze. All about him was a radiance of unknown and exotic hues, strange and yet somehow soothing. And then the radiance transformed itself into a long tunnel at the far end of which was a blazing white light, a light of such intensity that the eye could hardly bear to look upon it. \n\nHenry felt himself being drawn towards the brilliance... \n\n1989 \n\nTwo elderly women leaned over the push-chair to admire the lovely toddler. The child stared back at them, large eyes of an unusually vivid colour\u2014a startling sapphire-blue\u2014unblinking. \n\n\"Just look at those eyes. There's something old and knowing about them, a kind of wisdom.\" The speaker nodded and lowered her voice dramatically. \"You could easily think she's been here before.\" \n\n\"Oh yes,\" said her friend, taking another look at the child, \"she's definitely been here before. You can always tell.\" \n\nThe two old women laughed and the tall young mother smiled politely. What the hell are they on about? she wondered. \n\n1992 \n\nThe small girl had the funny dream again, a dream she'd had perhaps two or three times previously. It wasn't a scary dream like the ones she sometimes had when the older kids told her about ghosts and monsters lurking under her bed in the dark, waiting to pounce on her. It was just... funny... She dreamt that she was lying in a bed in a darkened room. She knew there were others there, an old man and a younger one... Daddy and Grandpa perhaps... but she didn't think so... and then she wasn't in the bed any more but floating towards a light, floating... floating... \n\n2004 - Hal \n\n\"You think you're what?\" screamed my mother. And when I say screamed I mean screamed. I had known from the outset that this conversation was going to go badly but it had to come out at some stage. It might as well be now as later, get it over with. \n\n\"I said I think I'm gay, Mother, I think I'm a lesbian.\" For a long time, since I was a small girl at primary school, I'd felt that there was something different about me. It had taken me quite a while to figure it out but I'd got there in the end. Emotionally, sexually, I was drawn only to girls. \n\n\"No you're not a lesbian\u2014you can't possibly be! No child of mine could be such a wicked pervert!\" \n\n\"I'm not a pervert!\" I said as evenly as I could, \"And I'm not wicked\u2014I just find find girls more attractive than boys. In fact, I don't find boys attractive at all.\" \n\nMother threw her hands up in horror and screeched again: \"You know that lesbians and queer men burn in Hell for eternity! God hates homosexuals!\" \n\n\"How the hell do you know how God feels about gay people?\" When I had decided to come out to my mother, I had promised myself that I'd keep my cool but it was becoming difficult to do so. \n\n\"Because I'm one of God's chosen! That's how I know!\" \n\nMy mother was a member of an extreme fundamentalist church, The Exclusive of the Redeemer. As far back as I could remember Mother had been cold, narrow-minded and unbending. That's why my father had eventually left and found someone else, while my childhood had been devoid of any maternal love and comfort. Since Mother had joined The Exclusive a couple of years previously she had become far worse. There weren't many of them but they could make themselves heard loud and clear, frequently holding town centre rallies at weekends in an attempt to ram their warped version of Christianity down people's throats. In public they were careful to avoid preaching anything that smacked of hate crime but they certainly let themselves go within the privacy of their church: Catholics, Anglicans and other protestant religions, non-Christian religions, agnostics, atheists, homosexuals, you name it, all were fair game for their loathing. As far as The Exclusive were concerned, only the couple of hundred or so of them who made up the church were to be saved, to sit at God's table. The rest of us poor sods, that is the whole world, would suffer for ever in the fiery pit. Well, thinking about it the company in the fiery pit would probably be preferable to eternal supping on hatred-laden heavenly nectar with The Exclusive. I'd read a lot of stories in magazines and newspapers about US Bible Belt fundamentalists and their bigotries. Take it from me, The Exclusive of the Redeemer made the Bible-Belters look open-minded and generous of spirit. \n\n\"The Bible tells us that God made us all and made mankind in His image, right?\" I said. Mother nodded and clasped her hands as if in prayer. I could imagine a silent: \"Hallelujah!\" from her. Perhaps I shouldn't have gone down this route but I was getting seriously pissed off. \"Well then,\" I continued, \"seeing as God made all of us, that means He made gay people as well as straight, what does that say about God's image?\" \n\nMother's face reddened as she raised a clenched fist and for a moment I really thought she was going to hit me. Then with an effort she lowered the fist. Oddly, her voice became level, almost calm. \"That's blasphemy! You're sick, sick and twisted and evil. You will get out of this house now and you will only be allowed back when you're cured of this disease.\" \n\n\"Mother, your sexuality is something you're born with. It's not an illness that can be cured.\" \n\n\"Of course it is!\" she snapped, \"Homosexuality is a serious mental illness. I suggest you see our GP and ask to be referred to a psychiatrist. I will pray to God that this filth is stricken from your mind. In the meantime, you will pack a bag and leave this house immediately.\" \n\n\"Where am I supposed to go?\" \n\n\"God will guide you if he hasn't already turned his face from you which is most likely. Otherwise you must rely on the evil spirit that has possessed you.\" \n\nSo one moment I was mentally ill, the next I was possessed by a demon. I knew that I'd never win. I trudged up the stairs to my room and began to pack a few clothes and other necessities. At least I knew of one place where God or my evil spirit would guide me and where I would be made welcome. \n\nMother slammed the front door behind me. There was no word of farewell. \n\nI was sixteen years old. \n\n* * * * * \n\n\"Hello, Grandma.\" \n\n\"Hal, child, what are you doing here?\" She held the door open for me and took my hand. \"Come in, come in.\" ",
        "I indicated my suitcases. \"Mother's thrown me out, Grandma. Can I come and stay with you and Grandpa?\" \n\n\"Of course you can, sweetheart.\" Grandma pursed her lips, disapproving. \"But why would she want to do that?\" \n\n\"Grandma ... \" I hesitated briefly, uncertain now as to what my grandmother's reaction would be although I thought it would be okay. \"Grandma... the thing is, I think I'm a lesbian. I told Mother and she sent me packing.\" \n\nAn eyebrow raised, Grandma commented: \"Is that all?\" She led me into her living room and indicated the sofa. \"Sit down there, child, and tell me what happened.\" When I had finished, she said: \"That daughter of mine... she always was a bit of a prig, even as a small child. Sometimes I thought she was a changeling, she was so unlike me or your grandfather. And since she joined that bunch of fanatics she's been far worse. The Exclusive of the Redeemer my backside! More like The Exclusive of the Extreme Mean-Minded Bigots. God knows how many families those bloody idiots have torn apart with their warped ideology. Right, you've got a home here for as long as you want. And I know your grandfather will agree as soon as he gets home.\" \n\n\"Thanks, Grandma, I do love you both. You don't mind about me being gay then?\" \n\n\"Lord no, child. I've known you're gay for several years... or should I say I suspected you might be.\" \n\nI looked at my grandmother with astonishment. \"How could you possibly know, Grandma? I've only recently worked it out for myself.\" \n\nShe smiled and enveloped me in a great warm hug. \"It's been obvious in lots of little ways to anybody with half an eye. For instance, do you remember a few years ago we watched an old Audrey Hepburn film on TV together?\" \n\nI remembered. \"Some thriller I think\u2014wasn't Cary Grant in it?\" \n\nGrandma nodded. \"That's right, Charade. You were about twelve or thirteen then and every time Audrey Hepburn came on the screen you practically drooled. When Cary Grant or any other of the male stars were in a scene you were utterly indifferent but the minute Audrey appeared you leaned towards the TV screen entranced. I thought then it was more than a girlish crush.\" \n\n\"Well, Audrey Hepburn was gorgeous,\" I mumbled. \n\nGrandpa came home later and when I had explained why I had left home, he put his arms around me and said: \"Don't let your mother's attitude grind you down, Hal. You think you're a lesbian, well, that's as may be, you're young yet and there's plenty of time for you to be sure\u2014but if you are, so what? We don't give a damn about that. You're our very precious granddaughter and we love you to bits. So just be true to yourself and be happy.\" \n\nFor the first time in a number of years I felt truly loved and wanted. \n\n2006 - Berry \n\nThe Deep Velvet Bar isn't that easy to find, tucked away as it is in a small side street just off the town centre and I walked past it several times before I spotted the discreet sign to one side of the doorway. \n\nTaking a deep breath to steady myself, I walked up a short flight of steps and through the entrance with all the bravado of a late-end teenager who feels that she has every right to be there. I didn't get very far. A tall thick-set woman with shorn hair, dressed in a tight dinner-jacket with bow-tie, held up a meaty hand to stop me. \n\n\"And where do you think you're going, petal?\" \n\n\"Into the lounge bar.\" My voice came out as a nervous squeak. \n\n\"And how old are you?\" \n\n\"I'm nineteen.\" \n\nShe snorted disbelief. \"In a pig's eyeball you are.\" \n\nIt's always been a bit of a curse that I look far younger than I am. I know nineteen isn't old but on what could be a good or bad day\u2014depending on what I was planning on doing\u2014I didn't look much above fourteen or fifteen if that. One of my friends once joked that I'd be about eighty-five before I could get a drink in a pub. Oh, I know that I'll be grateful for my apparent youth when I'm middle-aged but right now it was an inconvenience. I reached into my jacket pocket, dug out my driving licence and passed it to the doorkeeper who studied it closely. I could see the wheels turning in her head as she worked it out from my date of birth. \n\nAfter what seemed an age, she nodded and returned the licence. \"Okay love, you're in. It's just that we can't be too careful, some of the kids round here could fool anyone when they're dolled up. Keep looking as young as you do and you'll be the envy of half the women in town. Stop off at the desk there and pay your entrance fee.\" \n\nHaving paid the fee, I took another deep breath and walked into the lounge bar of my first lesbian club. \n\n* * * * * \n\n\"Look, I've found the ideal boy for you this time,\" Mandy told me, \"His name's Kevin, he's twenty-one and he's a trainee architect. And you're exactly his type. I can fix you up with a blind date as soon as you like.\" \n\nMandy was a senior on the design team where I was an apprentice. She was also self-appointed Queen Matchmaker. I liked her a lot but was getting a bit tired of her determination to fix me up with a bloke. She seemed to think that without a man at my side my life was dull and incomplete. She'd obviously never heard the old adage about fish and bicycles. Since I had been working with her she had tried to interest me in (although not necessarily in this order): her younger brother, her younger brother's best friend; her cousin Roger, cousin Roger's best friend; assorted young men in the company (at least ten at the last count); Old Uncle Tom Cobley and all... well, I think you get the message. The attempt to link me with architect Kevin was the final straw. I had hoped to keep my personal life exactly that, personal, but the time had come to straighten Mandy out. I guessed she wouldn't give up otherwise. \n\n\"Mandy, can we find somewhere to have a private talk please?\" \n\nShe looked puzzled then shrugged. \"Boss isn't in today, we can use his office.\" \n\nWith the door closed behind us, I said: \"Mandy, I know you mean well but I'm just not interested in all these men you want me to date.\" \n\n\"Why ever not, Berry? They're all perfectly decent types.\" \n\n\"I don't care how decent they are,\" I told her, \"they're not for me. And before you ask, I'm not interested in bad boys either. In fact, I'm just not interested in boys, period. Not now, not never ever!\" \n\nComprehension dawned and Mandy blushed as plumped herself down in the boss's chair. \"You mean... you... you're... are you gay, Berry?\" \n\nI gave her a little round of applause. \"You've got there in the end, Mandy.\" \n\nHer blush deepened. \"I'm so sorry, Berry. I've been making a bloody fool of myself, haven't I? Have you got a girlfriend?\" \n\nI think it was my turn to blush for I felt my face growing warm. \"No.\" \n\nSomething in my tone must have alerted Mandy for she looked at me searchingly and then grinned. \"You've never had a girlfriend have you?\" \n\nI shook my head, embarrassed. \"There were a couple of girls at school but all we did was kiss and cuddle. I loved it but I think they were only experimenting\u2014they've both got boyfriends now. I don't know any real gay girls, or at least I don't think I do. And I don't know how to go about finding one.\" \n\nMandy's grin broadened. \"Now I think I can help you out there. Have you heard of The Deep Velvet Bar?\" \n\n\"No, I haven't.\" \n\n\"I understand it's a lesbian hang-out\u2014it's in one of those old-fashioned alleyways off Market Square. Never been there myself\u2014my husband would likely have a fit\u2014but I've heard it's a decent place. I know several wives who've been there just so they can enjoy a drink and gossip without being hit on by men. Give it a try. You may or may not find a girlfriend there but you'll be with kindred spirits. And Berry, as soon as we walk out of this office our conversation will be forgotten...\" \n\n* * * * * \n\nMy first impression of The Deep Velvet Bar was that it did look like a decent place. It was certainly unlike any of the pubs or wine bars that I usually went to. Lighting was dimmed but not too much so, just enough to create a cosy atmosphere. The bar itself was semi-circular, appeared to be of highly-polished marble and the rows of bottles and glasses on the shelves behind gleamed in the reflected light. In front of the bar stood a dozen or so high round stools, most of them occupied. There was a polished wood dance-floor and a DJ sat on a small podium, currently playing a selection of gentle mood music. The dance-floor was surrounded by tables for three or four and the walls were lined with horseshoe-shaped booths. The walls themselves were painted in subdued pastel colours and decorated with murals of scantily-clad and naked women, Ancient Greek and Roman style, all bordering on the erotic. Perhaps needless to say, all of the customers were women. \n\nJust being here in the club made me feel good. It was like I'd come home. \n\nI went to the bar and asked for a Campari-and-soda. A pretty barmaid looked at me doubtfully. \"I guess you must be okay if Big Jacqui let you in,\" she mused, \"But you don't look old enough to buy a drink so if you don't mind I'd like to check any ID you have. We've got our drinks retailer's licence to think about.\" \n\nI gave an exaggerated sigh and passed my driver's licence over. Oh God, please give me a few wrinkles so I don't always have to go through this. No, sorry, scrap that last request, God, I don't think wrinkles would suit me just yet, make me look like a geriatric Munchkin. \n\nHaving been served with my driving licence and my Campari, I found an empty seat at a table by the dance-floor. Quite a few women were dancing and I noticed that a number of them were damned near making love to the smooth rhythm of the music. I felt a sudden erotic charge and wished I was amongst them with a girlfriend of my own. Perhaps some dreams do come true, even if only a little\u2014after a few minutes my thoughts were interrupted by a low, husky voice. \"Hello there, pretty one.\" \n\nI looked up at the speaker, a elegant-looking brunette in a stylish black dress. She was taller than me but that's not difficult\u2014I'm barely five foot\u2014and I estimated her age as being early- to mid-thirties. \"By yourself?\" she asked and when I nodded said: \"So am I. May I join you?\" \n\nShe sat in the chair nearest to me and extended a shapely hand. \"I'm Eleanor.\" \n\n\"Hello, I'm Berry.\" \n\n\"It's nice to meet you, Berry.\" She pointed to my now empty glass. \"Can I get you another?\" She hesitated briefly then added: \"You are old enough to drink alcohol?\" \n\nI'd had it by then and simply exploded. \"Yes, I bloody well am old enough to drink bloody alcohol! I'm bloody well nineteen years old! And I'm getting bloody sick of people asking!\" \n\nOops! I reckoned I'd blown it straight off. I'd come into The Deep Velvet Bar hoping to make new friends and the first person to approach me in a friendly way got snarled and snapped at, all because I looked nineteen going on twelve. I peeped at Eleanor sheepishly and saw that far from being offended she was smiling, amused. \"I take it you get that a lot?\" \n\n\"Yes, sorry I blew my top\u2014that was rude of me. You're the third person in ten minutes to query my age and I just cracked. Right now, looking young is not an advantage. Nobody takes me very seriously.\" \n\n\"Poor little pretty one,\" Eleanor sympathised. She hailed a waitress whose name-tag identified her as Karen, ordering a gin-and-tonic for herself and another Campari for me. Karen looked at me, obviously uncertain. \"It's okay,\" Eleanor told her, \"she's nineteen.\" As Karen walked away to get our order, Eleanor laughed and added: \"I had to tell her\u2014I didn't want you ripping the poor girl's throat out. You looked quite fierce then.\" \n\nWhen waitress Karen, still looking a bit doubtful, had served our drinks, Eleanor said: \"So, is this your first time here, Berry? And were you planning to meet someone?\" \n\n\"Yes, my first time. No plans to meet anyone, though. A work colleague told me about this place, suggested I try it.\" \n\n\"Do you mind me asking something Berry, are you gay?\" \n\n\"Yes.\" \n\n\"You're sure about that? \n\n\"Yes, of course!\" I replied, indignant. \n\n\"You're not just curious?\" \n\n\"No!\" I was wondering where this was leading. \n\n\"Sorry I asked,\" Eleanor apologised, \"but we do get a few chancers in here who just want to try it on for size then decide it's not for them. All too often they leave a trail of unhappy girls behind them.\" She lifted her glass. \"Anyway, pretty one, here's to new friendships.\" \n\nEleanor was certainly a nice-looking woman, with classic high cheek-bones and a slight slant to hazel eyes that gave her an almost feline air. Her dark-brown hair was shortish, tousled and unkempt, the kind of unkempt which must have cost a small fortune in an upmarket hairdressing salon. And her dress and shoes almost certainly came from some exclusive boutique, not any of the common-or-garden High Street chain stores. \"So, pretty Berry, what do you do?\" \n\n\"I'm an engineering design apprentice,\" I told her, \"That way I get paid while I'm studying\u2014beats the hell out of university followed by a massive student debt. I go to college once a week on a day release scheme and to a couple of evening classes, all at the company's expense. And I still live at home so I've no massive rents to pay.\" \n\nEleanor took my hand and gave a little squeeze. \"That's very sensible of you, Berry. Too many degrees are almost worthless these days.\" \n\n\"What about you, what do you do?\" \n\nEleanor smiled. \"I'm a florist. I've got a small chain of shops over five counties in this part of the country.\" Judging by Eleanor's clothing, I guessed her business must be doing very nicely. \n\nSuddenly she grabbed my hand to pull me to my feet. \"Come on, Berry. We're wasting some nice smoochy music when we could be dancing.\" \n\nWe joined the crowd on the small dance-floor and Eleanor pulled me in close so that our bodies seemed to combine into one. Me being so much smaller, my face was pressed against lovely firm boobs and as we swayed to the music her thigh eased between my legs to press against my mound, at the same moment sharp teeth and warm tongue nibbled and lapped at my ear. I could feel my honeypot getting hot and damp. Keep this up, Eleanor, and I'll have to dive into the toilets to strip off my wet keks. \n\nBut it didn't have to get that far\u2014Eleanor had a suggestion. \"If you like, Berry,\" she whispered between little nips and licks, \"we could go to my place\u2014it'll be nice and private there.\" \n\nI felt myself flush and I think I gulped. \"Oh, yes... that sounds lovely...\" \n\n* * * * * \n\nEleanor's place was a bungalow in a short residential street somewhere on the edge of town, almost rural in location. Despite the darkness I got the impression that this was the kind of quiet area where a majority of people stayed home at night\u2014most of the houses had drawn curtains with just the faintest illumination or the flickering of TV sets to indicate occupancy. Half-a-dozen or so street-lamps, alternating with medium-sized trees, cast dull-yellow pools of light on the pavements and as we exited the taxi I thought I saw a fox sneaking across the road a number of yards away. I mentioned this to Eleanor when she had paid the driver. \n\n\"Yes, we've got a number of urban foxes round here but they don't bother us much except when the vixens are in heat\u2014they can make a lot of noise then.\" She gave a little chuckle and grabbed my hand. \"Talking of vixens in heat, let's get in the house.\" \n\nEleanor led me into her sitting-room and turned on a small Art Deco-style table lamp which gave off a warm and cheering glow. \"I can't offer you Campari,\" she said, \"but I do have some rather delicious red wine if you'd like a glass.\" \n\n\"Yes please.\" \n\n\"Be right back. Just make yourself at home.\" \n\nWhile Eleanor was fetching the wine, I had a good look around. The walls were painted white while the floor was covered with a thick and luxurious carpet in a rich chocolate-brown colour. There was a comfortable-looking sofa with a pair of matching armchairs and in front of the sofa stood a large coffee-table which appeared to have been made from a piece of highly-polished driftwood. A couple of packed bookcases attracted my attention\u2014one was devoted solely to books on flowers and botany, reflecting Eleanor's business interests I suppose, while the other was filled with novels, mainly classic and modern, although I did spot a complete set of Harry Potter books. Standing between the book-cases was a handsome Chinese cabinet while on the walls a number of decent prints were displayed, mainly nude women. Against one wall was an upright piano on top of which was a silver-framed photograph of an attractive although somewhat severe-looking woman. \n\n\"Here we are.\" Eleanor returned with two glasses of wine which she placed on the coffee table. She sat and patted the spot next to her. \"Come and sit beside me, Berry.\" \n\nI did as she told me and taking one of the glasses sipped the wine. Eleanor was right. It was delicious, rich and spicy. Eleanor said: \"I saw you looking at the photograph. That's Simone, my civil partner.\" I must have looked a bit uncomfortable at hearing that for she continued: \"Nothing to worry about, Berry. We have an open relationship\u2014Simone lives in Paris where she oversees our French business. We have a number of florist shops in France as well as this country. It's a long-distance relationship but we make sure to meet for a few days every month or so. We love each other but accept that prolonged celibacy is not for us. So we're both free to take lovers as we wish.\" \n\nSuch openness was new to me and I was uncertain about what to say so I gestured to the piano. \"Do you play?\" Silly question perhaps but I do know one or two people who have inherited old pianos which are never played. \n\n\"Yes, like to hear something?\" Eleanor went to the piano, settled on the stool and without using a music sheet played a short and quiet mood piece which sounded familiar although I couldn't name it. When she finished and returned to sit beside me, I asked what it was. \n\n\"Debussy's Claire de Lune,\" she told me. \n\n\"It's beautiful,\" I said. \n\n\"Yes, it is beautiful, and soothing.\" Eleanor reached out and caressed one of my cheeks with the back of her fingers. \"The music's beautiful and so are you, Berry.\" She leaned forward and kissed me very gently on the lips. Sitting back, she looked at me with a small smile. \"You're a shy one aren't you?\" \n\nThere's nothing like the truth. \"A bit... it's not that so much... it's just... I'm a virgin, Eleanor. I'm sorry...\" \n\nEleanor stroked my cheek again. \"What's to be sorry about, pretty one? There's no shame in being a virgin. If you don't want this to go any further, though, I'll stop.\" \n\n\"I don't want it to stop, Eleanor. It's just I'm afraid I'll disappoint you.\" \n\nShe laughed. \"Sweet little Berry, you won't disappoint me, love. We all start out as virgins.\" Taking my face between warm hands, Eleanor kissed me again, still gentle but lingering. Plucking up my courage, I cupped her face in turn and let myself melt into her kiss. After long moments I felt her tongue tracing the shape of my mouth and I opened to admit her, at the same time coming to meet her with my own tongue. I could taste the richness of the wine in her mouth and I moaned a little with pleasure. \n\nEleanor's lips moved away to settle at the angle of my jaw, just below an ear. She began to move around my throat, alternating tiny kisses with little puffs of breath. When she reached the hollow at the base of my throat she slowly licked her way up to my chin only to return again to kiss her way round to my other ear. \n\nHolding me close with one arm, Eleanor continued planting a series of tiny kisses all over my face and throat, resting them occasionally to return to my lips and eager tongue. With her free hand, she started to unfasten buttons until my shirt gaped open to reveal my breasts. \"Oh, aren't they just sweet,\" she cooed. ",
        "My boobs... Well, when he wants to piss me off my younger brother calls them my end of lemon slices. Less kind people have referred to my little pickled onions or, even worse, my poached eggs. Myself, I like to think of my boobs as being just like me\u2014small, neat and perky. Whatever, Eleanor seemed to like them. She spent several minutes stroking them and then took one of my hard little nipples in her mouth to lick and suck and nip gently with her teeth. After a while, she moved her mouth to my other breast where the nipple had become rigid under the ministrations of her fingers. I shuddered with pleasure and my moans became louder. Although I often toyed with my nipples when masturbating, I had never imagined how much more pleasurable it could be to have another woman playing with them and suckling on them. My juices were flowing freely by now and I'm sure my panties were soaked. \n\nEleanor's hand moved down to lift the hem of my skirt far enough to leave my thighs bare. Still nibbling at my boobs, she caressed my thighs until she reached my pussy. Tickling up and down my slit on the outside of my knickers, she chuckled: \"Here, kitty, kitty, kitty...\" \n\nAs if suddenly recalling that I was a virgin, Eleanor whispered: \"Berry, I'd like to take your panties down if that's okay\u2014I'd love to have a look at your pussy.\" \n\nI was too far gone now to object, even if I'd wanted to which I didn't. I made some sort of noise which Eleanor took for assent so she eased the garment down my legs and gazed at my honeypot. I was glad that I'd taken the time this evening to trim down my usually thick bush. \n\n\"She's lovely,\" Eleanor said. She ran a finger up my oozing slit, gathering the slippery moisture, then laid a butterfly kiss on my vulva. I shivered as Eleanor brought her wet finger to my nose so that I could sniff my own muskiness. \"You smell heavenly, Berry.\" She smeared the honey around my lips and then fell to kissing me once more, sucking on my tongue as she played with my folds, tweaking my outer lips together before sliding a finger into my vagina. \n\n\"Oh God, you're so tight, Berry. I just love tight pussy.\" She moved her finger in and out for a while and then gradually and gently introduced a second finger. I could feel my walls clamping down on her. I know that by now I was making all sorts of little noises which I could not control. Then Eleanor said: \"Don't be shy, pretty one, my pussy's longing for you to play with her.\" \n\nI brought a hand up under Eleanor's skirt to reach for her pussy and found that she was panty-free, shaved clean and sopping wet. That smooth honeypot felt so lovely under my fingers and they slipped into her easily. My hand was quickly covered in Eleanor's juices and I fumbled for her clitoris. \n\nBy this time she was working on my clit with her thumb and I could feel a climax approaching. When it did hit me it was more powerful than any orgasm I'd ever given myself. I would never have thought that I could make the noises I did, whimpering, gasping, crying out. Lord, but she must have had magic fingers. Eleanor pulled me closer. \"That's right, pretty one. Let it all go...\" Let it all go I did to leave my hips grinding against her hand and my breath coming in short gasps. \n\nWhen I finally recovered my breath I gasped: \"It's never been like that before.\" I giggled a little. \"I could get used to that. But Eleanor, you haven't come yet.\" \n\nShe smiled. \"I did, just a little one, when you were having it. Just watching your pleasure set me off. There's plenty of time for more. Come here, Berry, and have a cuddle.\" She held me close and we swapped little kisses and nibbles then she said: \"Would you like to learn to lick pussy, pretty one?\" \n\n\"Yes please.\" \n\nEleanor got up and pulled me to my feet. \"Right, bedroom's the best place for that. I'm going to show you lots of lovely things two girls can do together. I bet you'll just love sixty-nine...\" \n\nI stayed with Eleanor several times and learned a lot. She was a very skilful lover and I was happy that I'd been born gay. But then Simone returned to England for an extended visit and so my brief affair with Eleanor came to an end. After all, she was as good as married, open relationship or not, so there wouldn't have been much purpose in becoming enamoured of her. I did see her in The Deep Velvet Bar on occasion but from then on we just kept things on a friendly basis. Anyway, by that time I'd started to hook up with other girls, broadening my experience. The important thing, though, was that I was no longer a virgin lesbian. Thanks to Eleanor I had taken my first steps into the wonderful world of pussy. \n\n2008 to 2010 - Hal \n\nI came to realise that Amber Lytton could be a bit of a bitch but she was my bit of a bitch, or so I thought at the time. Truth be told, I suppose that subconsciously I probably realised that she was bad news but at the time I was so infatuated with the woman. But hey, I'm getting ahead of myself here... \n\nI'd done two years at art college because: (a) my home town has a well-regarded art college and I was able to carry on living at my grandparents' house and (b) the only subjects I was qualified to read at university were English and/or history. Let's face it, such degrees are pretty well useless nowadays unless you intend to be a teacher and who wants to spend their days with a bunch of stroppy teens, especially when you've just finished being a stroppy teen yourself and know what disgusting little buggers they are. When it came to the subjects which can really help you get on in today's world such as the sciences and technology I was quite dim, I had a total blind spot\u2014I'm sure I caused many a maths and physics teacher to have a near-breakdown. I liked English, history, similar subjects, even biology but I was at my best in the art-room and was lucky to get a good enough A-level grade to get into the college. \n\nMy two years there passed swiftly and I loved every moment. I found that I had a particular talent for ceramics and following our diploma ceremony Jill Wellman, our pottery teacher, took me to one side. \n\n\"Okay, Hal, it's out into the great wide world. Have you got anything lined up yet?\" \n\n\"No,\" I admitted, \"I'd love to carry on working with my hands like I've done here so I'll have to start sending out job applications and hope to strike lucky.\" \n\n\"I think I can help you, \" Jill said, \"I've got a friend in town called Robbie Hurst, got his own ceramics business and he's one of the best there is. Robbie mainly produces one-off exclusive items made to order or commission. He's always been a one-man band but he's got so much work on now he's looking for talented help. You're one of the best students I've had in years so if you're interested I can give you a good recommendation.\" \n\n\"You bet I'm interested\u2014thank you, Miss Wellman.\" \n\n\"It's Jill, you're not my student now. I'll give Robbie a call later today. Leave me your address and phone number so he can contact you about an interview.\" Jill hesitated and then added: \"I'd better warn you, Robbie's no spring chicken but he has a reputation for being one of the randiest men in town and he might try it on with you sooner or later. Don't get me wrong, he's not the kind of boss who'll try to grab your arse all the time or make coarse remarks about your boobs, he's quite the gentleman. But he oozes charm and he's always been brilliant at talking women into bed.\" \n\n\"Thanks for the warning, Jill, but he'll find his charm wasted me.\" \n\n\"We'll see,\" Jill smiled, \"Likes a challenge does our Robbie.\" \n\n* * * * * \n\nRobbie Hurst was probably in his late fifties although he looked good on it. He was about five-nine with a trim figure, a full head of pepper-and-salt hair and Jill Wellman was right, he oozed charm. His studio/workshop was in a small back street and I realised that I had passed it on a number of occasions without taking any real notice\u2014Robbie was a master-craftsman but he wasn't all that good at displaying his work so as to attract casual passers-by. I had taken him a number of my pieces which he examined with great care, nodding apparent approval over each one. \n\n\"Jill was full of praise about your work, Hal, and I fully concur. You are very good indeed. The job's yours if you want it.\" \n\n\"Yes please, Mr Hurst. When do you want me to start?\" \n\n\"Call me Robbie,\" he corrected, \"I'm snowed under at the moment so if you'd like to start immediately you can. I'll start you off on fairly basic work and we can build on it from there. I'm sure I've got some overalls or dungarees which will fit you. One thing, Hal, this isn't a nine-to-five operation\u2014you'll be working your backside off when necessary. Okay?\" \n\nI grinned with delight. \"Okay... Robbie.\" \n\nHe was right. The work was hard and time-consuming and I could see why he needed assistance. I was only surprised he hadn't got round to it before. But I loved it and threw myself into the work with gusto. Innocent in the ways of the world, I had jumped at the job without even asking what the salary was but Robbie was generous. And he reviewed my pay-rate every few months, always granting me a small increase. \n\nDespite the warning that Robbie was the randiest bloke in town, to me for a while he was simply a very experienced craftsman and a good teacher. I probably learned more about ceramics work from him in weeks than I had done in my two years at art college. And Robbie was always the perfect gentleman. Even when he eventually tried it on with me\u2014I'd been working for him about nine or ten months then\u2014I couldn't be annoyed with him. There was no inappropriate touching or sly sexist innuendo, just open matter-of-factness. \n\n\"There's a big ceramics manufacturers' trade show and convention coming up soon in London,\" he told me, \"It's certainly the most important one in the UK, and it's up in the top five world-wide. It's held at the Earls Court Exhibition Centre\u2014I'll have a display stall there\u2014and accommodation is being arranged for delegates at four- and five-star hotels around the city. How'd you like to come along with me? I'll pay\u2014most hotels are half-empty at this time of year and offer special rates. I can offset all the costs against tax as necessary business expenses.\" \n\n\"Wow, that sounds great, Robbie,\" I enthused, \"I'd love to come.\" \n\n\"Good, I'll book us a room in one of the better hotels.\" \n\nA little alarm bell went off in my head. \"Hang on, Robbie, did you say you'd book us a room?\" \n\n\"Yes.\" He gave me a cheeky wink. \"It'll be a little less costly that way.\" \n\n\"Robbie, I am not sharing a room with you,\" I told him firmly, \"You're a good boss and a great teacher, I like you lots and I love working with you, but you've got quite a reputation as a pork-swordsman. I've never slept with a man in my life and I'm not going to be another notch on your bedpost.\" \n\nHe turned on the charm, putting on a little-boy-lost look which probably won a lot of women over. \"Come on, Hal,\" he wheedled, \"why not give it a try\u2014there has to be a first time for everyone. I'll be gentle and can practically guarantee you'll enjoy it.\" \n\nI sighed in an exaggerated way. \"Robbie, apart from the difference in our ages, I'll give you the best reason in the world why we're not going to share a room in a hotel. I play for the other team. I'm a dyke, a lady's gardener, a muff-muncher. I'm gay, Robbie, G-A-Y-E, gay. So it's no, N-O, no.\" \n\n\"There's no E in gay,\" he pointed out. \n\n\"I know that, I threw it in to make sure you were paying attention.\" \n\nRobbie regarded me for a long moment then: \"Okay, separate rooms it is.\" He laughed and with an engaging grin stuck his hand out. \"Still friends?\" \n\nWe shook on it. \"Still friends, you randy old sod,\" I laughed in turn. \n\nThe convention was great. And that was where I met Amber. \n\n* * * * * \n\n\"This all your work?\" My questioner, a woman maybe in her mid-twenties, waved her hand at the range of samples I'd set out on our stall. Tall, fairly slim and stunning with dark, shoulder-length hair, she was casually dressed in jeans with a loose shirt and sports jacket but I could tell that she had a good figure. Don't you just love a great set of boobs? \n\n\"Some pieces are mine,\" I said, pointing out one or two, \"The rest were made by my boss, Robbie Hurst.\" \n\n\"Oh, Robbie's your boss? I've met him, quite a craftsman... or should I say cocksman? Has he got into your pants yet?\" Then pointing to the rainbow badge I was wearing, she drawled: \"Perhaps not. So...you're one of those.\" \n\nThe bloody rude, patronising bitch! I thought, And maybe another fucking homophobe to boot! \"Yes! I'm one of those!\" I snarled, \"So what?\" \n\nShe laughed. \"Relax sweetie, don't get your knickers in a twist, I'm just taking the piss.\" She turned the collar of her jacket aside to show an identical badge attached to her shirt. \"See, I'm one of the sorority.\" She offered me her hand. \"Amber Lytton at your service.\" \n\nHer hand was smooth and cool, obviously better cared for than my slightly work-roughened paws. \"I'm Hal Mercer. Are you in the business, Amber?\" \n\nShe shook her head. \"I'm an IT expert. I'm with Alibert Securities in Newcombe Parva. I specialise in organising security systems and trades conventions. We had this year's contract for the ceramics trade show and I'm here to make sure nothing goes arse-end up.\" Newcombe Parva is a town about twenty miles from my home\u2014that's probably how Amber knew Robbie and his reputation. \n\n\"Wow, that's clever,\" I admired, \"I'm totally useless at technology\u2014I even had to get my grandmother to set up my mobile phone for me.\" \n\n\"I bet that made you a bit of a weirdo at school and college,\" Amber replied, \"Oh well, to each his own, I couldn't produce lovely work like this. Ah, I see your boss coming back. Fancy grabbing a coffee, Hal?\" \n\nAmber and I drank coffee and chatted together for about half-an-hour before we had to return to work. She took my hand again in both of hers, running a suggestive middle-finger along my palm as she did so. Pulling me towards her, she kissed my cheek. \"Hope I'll see you around, Hal, sweetie.\" \n\nWhen I got back to our stall, Robbie asked: \"You seeing Amber again?\" \n\nI shrugged. \"Don't know. We didn't make any arrangements.\" \n\nHe nodded. \"Well, be careful if you do see her, Hal, she's got a reputation and not necessarily a good one.\" \n\n* * * * * \n\nI'd made what I considered to be a major contribution to the business. A small shop became vacant in Market Square and after a lot of difficult negotiation and argument, I persuaded Robbie to take out the lease. Our small town, with all its historic connections, had a lot of tourists year round and I was certain we could do good business with an attractive shop in the right place. It took some time to set up and then we hired a middle-aged woman to run the shop while Robbie and I continued to work in our back-street studio. If she was off for any reason, then I'd stand in for her. \n\nBefore the shop was properly set up, we had to clear out a load of rubbish. One cardboard box was filled with old photographs and postcards, all late Victorian and Edwardian. I was fascinated and decided to keep them, thus starting me off on a hobby which in years to come was to make a huge change in my life. But that was for the future. \n\nI was right. After a slow start the shop began to make money and then we hired another couple of promising art-school graduates to work with us in the studio. Robbie still worked mainly on his very expensive bespoke orders, our graduates dealt with the larger commercial orders while I concentrated on pieces for the shop. \"Bloody hell,\" Robbie moaned one day, \"I take you on to help out and suddenly I'm a large-scale employer.\" \n\n\"You love it really, Robbie,\" I scoffed, \"It gives you more money to pursue the ladies.\" \n\nI was covering in the shop one day and working at a shelf display in the back when I heard someone come in. Before I could greet them, a vaguely familiar voice said: \"How much is that doggie in the window?\" I turned to see a grinning Amber Lytton there. \n\n\"So, how's my favourite potter?\" She grabbed my face in both hands and planted a huge kiss on my lips. \"I'm in town on business, looked through your window and there you were. It's Saturday\u2014have dinner with me tonight, Hal. I won't take no for an answer and what Amber wants, Amber gets.\" \n\n\"Who said I'd refuse? I'd love to go to dinner with you.\" \n\n\"Great, give me your address and I'll pick you up about seven. Why not pack a small bag and then you can stay overnight at my place.\" \n\nBeing taken out to dinner was a new experience for me. My usual dining out treat tended to be either a takeaway curry or fish and chips. I didn't own any dresses at that time and thought maybe I should give serious thought to buying some. But I did have a stylish light grey trouser suit bought for a friend's wedding and donned that together with a pale lilac shirt. I've never quite figured out where I fall on the spectrum. I don't really consider myself butch but neither am I a girly-girl. I suppose the closest description you could give me is 'tomboy'. \n\nWhen Amber arrived at our house, I thought she was beyond stunning. Like me she was dressed in a trouser suit, in her case emerald green with a very pale green shirt and a velvet choker. I introduced her to my grandparents and I could tell straight away that Grandma wasn't impressed. She's usually warm and welcoming to my friends, old and new, but with Amber she was cool and formal. Perhaps I should have taken note then as Grandma is very astute and generally a good judge of people. \n\n* * * * * \n\nAmber took me to The Malmsey Arms, a very upmarket hotel a mile or two outside of Newcombe Parva. It had a countrywide reputation for being one of the places to go, as long as you could afford it that is. Amber paid off our taxi and I heard her asking the driver to pick us up at about eleven. I handed my overnight bag in at the cloakroom and then we went straight to the dining room. \n\n\"Good evening, Ms Lytton, how very nice to see you again,\" said the ma\u00eetre d' as we entered. Impressed? I was mega-impressed. I'd never been anywhere with a ma\u00eetre d' before, let alone one who was able to address guests by name. \"I've made sure you have your usual table.\" Wow! Not only known to the ma\u00eetre d' but to have your 'usual' table... \n\n\"Your waiter tonight will be Alfred,\" he said as he seated us, \"and I'll send the sommelier immediately.\" \n\n\"Do you like sea-food, Hal?\" Amber asked, and when I said yes added: \"Will you trust me to order dinner for both, I know what's good here.\" The sommelier arrived with the wine list and after a few moments study Amber pointed to one. \"The Pouilly-Fuiss\u00e9, I think.\" \n\n\"Excellent choice, Ms Lytton.\" The man bowed away as Alfred arrived. Boy, I could get to like this style of living. For our meal, Amber ordered Coquille-St-Jacques followed by Dover sole. \n\nThroughout our evening, I had to contribute very little to the conversation, Amber keeping me entertained with a host of amusing anecdotes about her work and the people she had to deal with, both inside and outside of the company. She kept me laughing and it's only with hindsight that I saw beneath the surface. \n\nHindsight... wonderful thing, hindsight. When you're young\u2014and at the time I wasn't quite twenty-one\u2014you're so very easily impressed. It was only when I thought about her stories a long time later that I realised most were driven by a strong undercurrent of spite. If only I'd been mature enough to spot it at the time. Amber Lytton, despite the surface generosity and sophistication, was not a very nice person. \n\n* * * * * \n\nIn the taxi to her home, Amber put an arm around my shoulders and pulled me close. Her lips, soft and warm, met my mouth and a lively tongue entered, seeking mine. A hand crept under my jacket to find and cup one of my breasts, finger and thumb gently toying with a nipple which stiffened immediately. \"Ah, no bra,\" Amber whispered. \"I don't think we'll need the guest bedroom tonight, will we Hal?\" My honeypot tingled in anticipation. ",
        "At her house, Amber seized a bottle of wine with a couple of glasses and led me to her bedroom. She turned on a bedside lamp, casting a soft glow over the room which could have featured in one of these beautiful homes magazines. Let's just say that it was unashamed luxury. Being an IT expert with a company like Aliberts paid well, I guessed. Amber poured me some wine and settled me into a comfortable armchair. \"Sit for a moment and enjoy the show,\" she instructed. \n\nWith her back to me, she undressed slowly but not fully. Having removed her jacket and trousers, Amber knotted her shirt just below her midriff and slowly peeled off her lacy black panties to reveal a perfect backside, two lovely globes which simply begged to be kissed and licked. I could see some sort of tattoo on them but because of the subdued light and her shirt I couldn't make out what they were. Amber turned to face me, throwing her arms out like a chorus girl ending her act. \"Tah dah!\" \n\nLike her buttocks, her legs were flawless, long and smooth. As the old saying goes: 'Her legs reached all the way up to her armpits'. But it was her pussy that drew my eyes. A deep cleft with thick, pouting labia, it was completely bare and I could see that moisture was already glistening. Amber began to idly finger herself. \"Your turn, Hal.\" \n\nI started to undo the buttons of my shirt and she held up a hand to stop me. \"Only the bottom stuff for the moment, Hal,\" she said, \"There's something very sexy about the top half covered and the bottom half nude.\" Looking at her again, I decided she was right. I took off my jacket and slowly lowered my trousers, revealing my underwear. Nothing as exotic or erotic as Amber's I'm afraid\u2014I tend to favour boyish boxer shorts as being more practical and comfortable. They also spare me the occasional problem of wedgies when I'm working. I wondered what Amber would think but I needn't have worried. \n\n\"I like those,\" she commented, \"I'll have to try some myself one day. Carry on, Hal, let's see what you're made of.\" \n\nI turned my back to remove the shorts and tied up my shirt the way Amber had hers before revealing myself to her. \n\nShe slid a finger into her pussy as she looked at me. \"Hmmm! A little bit bushy down there, we'll have to do something about that but not right now. Okay, Hal, let's masturbate.\" \n\nI was surprised. \"Masturbate?\" \n\n\"Yes.\" Amber waggled her fingers at me. \"Masturbate. You know, fingers, pussy, put the two together and see where it leads you, hopefully an orgasm. I like to masturbate with a partner first, it gets you warmed for the main action to follow. Sit up on that end of the bed, I'll be at this end, and we can watch each other.\" \n\nIt's not a thing that would have occurred to me but I reckoned it could be an exciting way of displaying yourself to a partner. Amber splayed her legs, giving me a wonderful view of everything. She spread her pussy lips and slipped a finger inside herself. I didn't do anything immediately, being enthralled at the vision before me. After a few seconds she withdrew it and sucked off her juices. \"That's nice. Come on, Hal, let's see you do it. I know...\" She soaked her finger again then leaned forward, holding it to my lips. \"This should get you going.\" \n\nI took her finger into my mouth and licked up the thick nectar. \n\n\"Good, eh?\" Amber asked. \n\n\"Yes, have some of mine.\" I reached in my slit, which had started to flow easily, and repaid Amber's offering. \n\n\"That's delicious, Hal. So let's go for it.\" \n\nI eased kitty open with two fingers and started to play with my vagina and clit as Amber did the same to herself. Maybe she was right. Perhaps I was a little too luxuriant down below but it had never occurred to me to trim or shave. However, the sight of Amber's naked puss did make it very exciting and I resolved to give it a try at the first opportunity. That first opportunity came more quickly than I expected. \n\nWe both came, me several minutes behind Amber. Mine wasn't one of the great world-shattering orgasms, merely a quiet and mildly satisfying one. When I'd finished, Amber said: \"Hair-dressing time, Hal. Come on through to the bathroom and we'll sort out that forest of yours.\" \n\nWith me sitting on the lavatory seat, Amber cleaned up my pussy then very carefully trimmed my mass of pubic hair to a stubble. With that done, she gently shaved me until I was as bare as she. Once finished, she rubbed soothing body lotion over the area and then said: \"I don't know why you wanted to hide your pussy, Hal. She is so lovely.\" Dipping her head and spreading my lips, she took a long lick all the way from my perineum to clit. \"Right, back to bed. I think full nakedness is called for now, don't you?\" \n\nIn the bedroom, Amber, with back to me once more, shed her shirt and then unclasped her bra. I was now able to make out details of the tattoo: it was a tree, the bole running along her spine with the roots clawing at her buttocks and the foliage spread across her shoulders. Coiled about the tree was a multi-coloured serpent, some sort of fruit in its mouth. Very biblical. Amber faced me once more. Her boobs were firm and fairly large, not porn-star-surgically-enhanced-unbelievably-ridiculously-large but naturally so. Her puffy pink areolas were also large, certainly larger than any I had seen before, while her nipples were hard little stubs. She offered one to my mouth and I sucked avidly. As I did so, Amber unbuttoned my shirt and peeled it off. \n\n\"Lie back, Hal,\" she instructed. Dipping a finger into a wine-glass, she eased my outer labia apart and liberally coated the inside of my quim with the wine before licking me out. \"That's a very good year,\" she grinned, \"although I don't think your pussy needs any enhancement to taste good.\" Hooking my legs over her shoulders, Amber began lapping and nuzzling at kitty as she eased two fingers into me. \"God, Hal, but you're so wet... and so hot...\" \n\nAmber continued to eat me, seeming to sense exactly the right moment to draw back so that I didn't come too soon. She quickly had me whimpering in a combination of frustration and anticipation. I felt her draw back the hood of my clit and the tip of her tongue flicking at the tiny nub. When her exploring fingers found my g-spot, I exploded, yelling out loud as great rolling waves of pleasure crashed over me. \n\nAmber moved up to straddle my torso. Even though my breasts are no more than moderately sized, I've got quite long nipples and she lowered herself so that one of them was inside her slit. She rubbed herself against my nipple and her prominent clit continually brushed the upper slope of my breast. While doing this, she pulled and squeezed my other nipple. I reached up to play with her magnificent boobs. I could feel my breast getting more and more wet with Amber's juices as she moved faster and faster, her eyes tightly closed, her face contorted with pleasure. She screamed as she came and then collapsed on top of me, body heaving as she tried to catch her breath. When she had recovered a little, Amber licked all around the nipple and breast she had used to give herself an orgasm. \n\nShe rolled off me and grinned. \"I love the taste of fresh clean come,\" she said, \"I think this calls for some more wine, Hal, and then you can eat me out...\" \n\nI can't in honesty say that I was in love with Amber but I was certainly in lust and infatuated. Our liaison lasted for about six months until... \n\n* * * * * \n\nI had a text from Amber: Are you working late tonight? \n\nI replied: No. \n\nAmber: OK come round to my place. Front door will be unlocked. Come straight to the bedroom for big surprise. LOL. \n\nIt was about seven or so when I arrived. I could see Amber's car in the garage so pulled my car into her driveway. The front door was unlocked as promised and I made my way up to the bedroom as instructed. As I mounted the stairs, I could hear moans and whimpers and assumed that Amber was masturbating in anticipation of my arrival. She'd promised me a big surprise. Boy, did I get one, although perhaps shock is a better word. \n\n\"What the hell...?\" \n\nAmber was on the bed on all fours, head bent down between the spread legs of a supine woman who had startling red hair, by the looks of it a very bad dye job. Behind Amber, shagging her doggy-fashion with what looked like an enormous strap-on, was a stockily-built short-haired woman whose right arm was a sleeve of tattoos from shoulder to a little above the wrist. A brassy-looking blonde knelt behind her, head thrust forward, and it seemed that she was licking strap-on's anus. I couldn't be sure about Miss Dildo but Red and Blondie both looked like down-market hookers. Amber lifted her head and gave me a big smile. \"There you are, sweetie, get your clothes off and join us.\" \n\nI think my mouth fell open and I was unable to say anything for a few seconds, then: \"No fucking way!\" I turned and stamped off down the stairs. I heard Amber saying, \"Oh hell, the stupid kid's going to throw a hissy-fit. Carry on without me for a moment while I go after her.\" \n\nA naked Amber, large breasts bouncing, caught up with me near the front door. \"Don't be silly, Hal, come back with me and have some fun. You'll like Leonie, she's absolutely brilliant with that king-sized dildo of hers. And unlike a bloke she can keep it up for hours. You'll come like a rocket. And if this is what's worrying you, we always practise safe sex, put a condom on the dildo.\" \n\nI caught the 'always', sounded as if this was a regular game with Amber and her friends. \"Safe sex? If you think I'm going to let that female gorilla at me\u2014\" I gestured towards the upper floor. \"How could you, Amber?\" \n\n\"What's wrong with it, Hal? I like a length of cock sometimes and I'm sure you will too.\" \n\n\"No I won't!\" I practically shouted, \"I've never had one of those things in me and I'm not starting now! If ever I want to try a dildo, it'll be with someone of my choosing, not yours.\" \n\n\"Okay, so you can lick Leonie out. If you don't like that idea, then you can fuck Lila or Tansy or both\u2014they've got very tasty pussies.\" \n\nI could feel the tears gathering. \"Amber, I may be a stupid kid but I'm just not into this kind of thing. One girl at a time is plenty for me. I'm sorry, Amber, but I don't think we can carry on like this. I don't think I want to see you again.\" \n\nAmber's voice suddenly became furious. \"You don't walk out on me, you little bitch. I walk out on people, not the other way round. Walk out now and you'll regret it, maybe not today, maybe not tomorrow, but you'll regret it.\" \n\n\"Goodbye, Amber.\" \n\n\"Wait, Hal...\" Her manner changed abruptly, becoming conciliatory in tone. \"I'm sorry, I suppose I can understand your not liking the idea of several partners. If you don't want to see me again, that's fine. Give me your phone, I'll delete my name and number. You'd be bound to mess it up if you try.\" Amber took my phone and pressed several buttons. \"There! that's done. So long, Hal, it was nice while it lasted.\" \n\nI moped around for a couple of days before telling Robbie I'd split with Amber. \n\n\"Good,\" he said, \"I hate to say this about a woman but she's an absolute arsehole, always has been.\" \n\n\"Why didn't you say so before?\" \n\n\"Hal, you were obviously stuck on her. If I'd bad-mouthed her to you, it would likely have hurt our friendship. You have to discover these things for yourself. It's all part of the great game called growing up.\" \n\nWhen I told Grandma, she commented: \"Good. Now you can hope to find someone really nice.\" \n\n* * * * * \n\nI didn't though, find someone nice that is. It's easier said than done. Oh, I had my fair share of short-lived affairs and one-night stands but I never met anyone I wanted to make it permanent with. To be honest, I just didn't trust anybody enough to make a go of it. So I soldiered on. One thing I did do because Amber wasn't in control, a little act of independence probably, was to let my pubic hair grow back although now I kept it neatly trimmed and my vulva bare. \n\nOne day, a couple of years after my disastrous affair with Amber, Robbie came to see me in the shop. He was carrying the large portfolio which usually held his designs for fine porcelain items. Placing the portfolio on the counter, he said: \"Hal, I'm thinking about redesigning the shop frontage. It's a bit dull the way it is.\" \n\nI was puzzled. Robbie had always seemed satisfied with it before. \"What did you have in mind, Robbie?\" \n\nHe opened the portfolio to extract a large sheet of cartridge paper. \"I've sketched my ideas here. I think it looks much better\u2014see what you think.\" \n\nIt was a very decent drawing of the shop's front but at first I couldn't see any major changes. Then I noticed the lintel... \n\nHurst &amp; Mercer - Fine Ceramics \n\n\"Robbie...\" \n\n\"I'm offering you a partnership, Hal,\" he grinned, \"I know I'm a great craftsman but I'm no innovator\u2014you are, you have ideas. I was in something of a rut when I hired you and it's largely thanks to you that the business has moved on so well. What do you say?\" \n\n\"Robbie... I'm very flattered but I can't afford to buy into the business.\" \n\n\"I've thought about that,\" he said, \"There's a charitable trust set up in some multi-millionaire's will giving young business people one-off tax-free grants to help them on their way. I'm pretty sure you'll qualify for a grant. The grants are generous but even so there may be a shortfall. I've had a word with a bank manager friend of mine and if necessary she's willing to arrange a loan at very favourable rates. Turn me down, Hal, and... and... I'll go and ask Amber Lytton to marry me!\" \n\nI threw myself into Robbie's arms and planted a big wet kiss on each cheek. \"Thank you Robbie! Of course I accept. I wouldn't wish the alternative on anybody.\" \n\n2012/2013 - Berry \n\nI was near the doorway of Hurst &amp; Mercer's ceramics shop when a girl stepped out and sashayed her way along to the nearby bakery-cum-caf\u00e9. I caught my breath\u2014it was as if life had suddenly kicked me in the midriff. She was tall, well, tallish\u2014after all, five-two looks tall to me\u2014with an attractive face lightly dusted with freckles, and chestnut-brown hair cut in a boyish style with a distinctive quiff. She wore a plaid shirt with clay-spattered dungarees and looked as good in them as any top model sporting the latest Balenciaga creation. I waited. I had to get a second look if possible. \n\nShe came back a few minutes later carrying a coffee carton and a paper bag showing grease-stains from which I guessed she'd bought either a couple of their delicious jam doughnuts or one of their sublime curry pasties. I stood there trying to look nonchalant and taking care not to stare at her. First impressions were right, though, she was easy on the eye. She turned into the ceramics shop again and I don't think she noticed me. \n\nNow this is where things get weird. Yes, I found the girl attractive and could have looked at her all day. But that wasn't what had affected me so much. I knew this girl. Some instinct told me that I knew her very well, that there was a strong connection between us, and yet I had never seen her before in my life. Never. Our town is a small one yet still large enough for you to go through life without ever seeing many of the other residents. There was a possible explanation... \n\nI wanted to find out more before approaching her directly and I got the slightly daft notion\u2014all right, the totally insane notion\u2014of following her about while maintaining a discreet distance between us. I know this makes me sound like a stalker but I'm not\u2014I only wanted to understand why I'd felt this strange attraction between us. I had a few days off work so could afford the time. Didn't do me a lot of good. She went from the Hurst &amp; Mercer shop to the Hurst &amp; Mercer studio and workshop and back again. She went here, there and everywhere, sometimes apparently on business, other times on private matters. After four days I was none the wiser about her. Then she walked a mile or so to end up at a small house in the suburbs. Odd, but she chose a really twisty, turny route although it would have been much quicker for her to go directly by the main road. \n\nHal \n\nThere was no doubt about it now, the girl was following me. Why, God alone knows, but I was getting a bit antsy over it. I hadn't got a good look at her but my impression was of someone not much older than a young schoolgirl. Help! I was being stalked by an underage serial killer. Surely they shouldn't be allowed their serial killer's licence until they were at least eighteen. But as I said, there couldn't be any doubt. It was four days now and over that time she had maintained a certain distance between us, I stopped and she stopped, I took evasive routes, she was there. I turned into odd back-streets and she turned into odd back-streets. I tried to make the odd back-streets not too odd for fear that she might rush me and hack me to pieces with a concealed chain-saw. If I heard just one little buzzing noise, then I'd leg it as fast as I could, always assuming I could outrun a teenage serial killer. \n\nI let myself into Grandma's house and went to the sitting room to look out of the window. The net curtains meant that I was able to see out without passers-by being able to see in. Yes, she was there, staring up at the house. \n\n\"What are you looking at, Hal?\" I jumped, nearly peeing myself\u2014I hadn't heard Grandma come into the room, the curse of fitted carpets and soft carpet slippers. Shows how jumpy I was. I gestured her to my side. \n\n\"I think I've got a stalker, Grandma. See that girl there? No, don't pull the curtain back, I don't want her to know we can see her.\" \n\n\"What about her?\" \n\n\"She's been following me,\" I told Grandma, \"several days now.\" \n\n\"Anyone you know?\" I shook my head. \"Why, she looks very young,\" Grandma continued, \"Are you sure about this?\" \n\n\"Yes, it's been at least four days now, that's when I first spotted her. Could be much longer for all I know. Everywhere I go, she's close behind.\" \n\n\"That is odd,\" Grandma commented, \"I remember something in a James Bond book, years ago, words to the effect of 'once is happenstance, twice is coincidence, three times is enemy action'. Looks like enemy action. Tell you what, Hal, why don't you follow her when she goes, see if you can figure out what she's up to?\" \n\n\"Yes, but she obviously knows me by sight, she'd soon spot me.\" \n\n\"I can fix that for you\u2014a disguise.\" Grandma bustled from the room to return about ten minutes later with an armful of what looked like old clothing. First she held up a coat, probably the most vile-looking coat I had ever seen. \"This was my mother's, your great-grandmother, Hal. She bought it in the 1940s. I'm afraid wartime played havoc with fashions and quality but it's ideal for your purposes. She was much heavier than you so it should be nice and roomy.\" Then Grandma showed me an equally disgusting pair of lace-up shoes. \n\n\"That outfit's foul,\" I complained, \"And if I wore them, I'd still look like me.\" I ran a hand through my short hair. \"Only more stupid,\" I added as an afterthought. \n\n\"Ah, I've thought of that. There was a bit of a fashion for wigs in the late Seventies and I made the mistake of impulse-buying this\u2014your grandfather didn't stop laughing for a week.\" She produced a hideous wig, a kind of muddy-yellow coloured bob which couldn't, by any standards, be mistaken for real hair. To go with the wig was a huge pair of sun-glasses with swept-up frames and to finish the ensemble a stick of garish red lipstick and a pot of liver-coloured rouge. \"God knows how old these are, I found them stuffed at the back of a drawer. Right, let's get to work. As soon as you're ready, you can go out the back way, down the path to the next street, then wait for the girl to move off. You follow her. Simple.\" ",
        "When Grandma had finished, I looked at myself in the hall mirror. \"God, I can't go out like this,\" I moaned, \"I look like Norman Bates's mother.\" \n\nBerry \n\nI was going to have to stop this shadowing business, it was sneaky and it was getting me nowhere. I knew no more about the girl than I had when I first saw her. The next time I would approach her directly to establish contact. I was pretty sure I knew why I felt this strange connection so maybe talking with her would help confirm the attraction. I looked up at the house again but it just stared back silently at me. \n\nI suppose she was visiting friends or relatives in there. Whatever, it appeared that she wouldn't be coming out of the house for some time, bit pointless me just hanging around for much longer. As far as I could see, there was only one other person on the road at the moment, a really weird-looking old woman in outsized sun-glasses standing under a lime tree a couple of corners along, seemed to have popped up from nowhere. I wondered if the poor old dear was a dementia case\u2014her clothing looked like she frequented a down-market charity shop, her hairstyle a badly-done home-dye job, while her make-up was early ventriloquist's dummy with glaring red lipstick and sort of maroon cheeks. \n\nI set off back towards the town centre. On the way I passed a small newsagent's shop and decided I needed a sugar rush so I went in and bought a dark chocolate Bounty bar. I left the shop and stood for a few seconds to unwrap the chocolate when a voice snapped in my ear: \"Right! What the hell do you think you're playing at, following me around everywhere?\" \n\nI spun round to see the weird old woman a few yards away. \"I'm not following you,\" I protested. \n\nShe reached up and snatched off the sun-glasses and the horrible hairstyle, now obviously a cheap and nasty wig, to reveal a short, boyish haircut with a quiff. An attractive freckled face was marred by the dreadful make-up, if anything looking even stranger now that the wig was off. \"Look familiar?\" she demanded. \n\n\"Oh...\" \n\n\"Yes, oh...\" \n\nCaught out. I tried to make the best of it. Holding out my hand I said: \"My name's Berry.\" \n\n\"Is that 'bury' as in what I'm likely to do to you if you keep following me?\" she retorted, disregarding my hand. \"I'm waiting for an explanation.\" \n\nI ignored the sarcasm, saying: \"This is going to sound a bit odd but I know you, I was trying to find out more about you.\" \n\n\"No, you don't know me\u2014I've never seen you before in my life.\" \n\n\"That's what's so odd,\" I agreed, \"We're total strangers to each other and yet I know you.\" \n\n\"You're not making sense,\" she told me, \"Anyway, a young kid like you could get yourself into real trouble following total strangers around.\" \n\nHere we go again. Silently cursing my youthful looks and with as much dignity as possible I said: \"This young kid happens to be twenty-five.\" \n\nShe raised an eyebrow. \"If that's the truth, you're a year older than I am. So you ought to have more sense\u2014for all you know, I might be a very nasty type given to violence. Whatever, this following me around stops now! Understand?\" \n\nI nodded. \"Okay, I promise that I won't follow you around any more.\" \n\n\"Good! See you stick to it.\" She turned and stomped off. \n\nA mischievous imp must have muttered in my ear. \"Hey!\" I called. \n\n\"What?\" she shouted, half-turning. \n\nI grinned at her. \"Did anyone ever tell you you look like Norman Bates's mother?\" \n\nHal \n\nBeing at a loose end one evening, I decided to go to The Deep Velvet Bar for a drink. I didn't go there often as I preferred pubs but some of my friends were regulars. It was after nine midweek, the place was fairly quiet and I couldn't see any of the gang so I slipped into a booth seat by myself. They didn't sell bitter so I asked a waitress for a bottle of Lowenbr\u00e4u Export as an acceptable alternative. Sipping my beer, I glanced around and suddenly I felt a surge of anger. There, sitting at the bar, was my stalker. Despite what had been said between us, she was still following me around. I got up from my seat and stormed over to her. \n\n\"What the hell are you up to?\" I hissed. \n\nShe turned. \"Oh, hello.\" \n\n\"I said, what the hell are you up to?\" \n\nShe looked puzzled. \"What do you mean?\" \n\nI took a deep breath. \"I mean you'd agreed to stop following me and now you're still at it.\" \n\n\"Oh, is that what you think?\" She shook her head. \"I'm not following you. How long have you been here?\" \n\n\"What's that got to do with it?\" \n\n\"Please...\" \n\nI shrugged. \"About ten minutes or so.\" \n\nShe waved to the barperson, a tall\u2014well over six-foot\u2014butch, good-looking and sporting a Fifties-style flat-top haircut. \"Tina, what time did I get here?\" \n\n\"Eight, eight-ten, something like that,\" Tina said. \n\n\"And I've been here the whole time?\" \n\n\"Yeah. Why, you havin' trouble, Berry?\" Tina turned a suspicious look on me, a look that said if needs be she'd love to throw me out. \n\n\"No, no...\" Berry hastened to reassure her, \"My friend here thought she saw me in the supermarket twenty minutes ago.\" \n\n\"Well, she's wrong.\" Throwing another glare my way, Tina moved off to serve another customer. \n\nBerry turned to me. \"Well?\" \n\n\"Okay, so I made a mistake.\" I resented having to make the admission and it showed in my voice. \n\n\"And...\" \n\n\"And what?\" \n\n\"Don't you think I deserve an apology?\" \n\n\"Sorry,\" I grunted. I knew I sounded grudging and insincere but... Well, you can take it or leave it, lady, that's all you're getting from me. I made to go. \n\n\"Wait.\" Berry reached out to touch my arm. \"There's no need for us to be like this when we could be friends. Can we sit down somewhere and talk?\" \n\nI studied her face for a few seconds and realised that she looked and sounded genuine. I jerked my head towards the booth where I had left my glass of beer when my temper went off. \"Over there. But don't take this as meaning I want to be friends.\" \n\nWhen we were settled she said: \"You know my first name. I'm Berry Osborne.\" She put out a hand to shake. \n\n\"Hal Mercer.\" This time I took her hand and when I did so I felt a tingling between us, almost electric in its strength. I think Berry felt it too for her eyes widened a little. That unexpected jolt said to me that maybe, just maybe, there could be something between us after all. \n\nSuddenly I felt tongue-tied, uncertain as to what, if anything, I could say. That whatever-it-was that hit me when I took Berry's had hand thrown me. Finally I muttered: \"Nice t-shirt.\" Pretty feeble, I agree, but Berry's t-shirt was great. It was illustrated with a cartoon of two bikini-clad females in a rainbow-hued dinghy and bore the caption Sorry, Guys! Only Girls Float MY Boat. \n\n\"So, are you the Mercer in Hurst &amp; Mercer?\" Berry asked. \n\n\"Yes.\" \n\n\"That's brilliant, being a partner in your own business. I'm an electronics and engineering designer, been thinking of going freelance but it's a big step into a tough market. The only way I'll get to the top in my company is if all the male managers and directors have a collective heart attack.\" \n\n\"Guess you could always make dozens of wax images and stick pins in all of them,\" I suggested. \n\n\"Good idea. Look, Hal, about us...\" \n\n\"Yes, about us... You've really got me baffled with this idea that you know me so well when we've never met before.\" \n\nBerry looked uncertain for a moment and then blurted out: \"I think we've been together in a previous life.\" I laughed so she added: \"I'm serious, Hal. We've known each other in a previous life, perhaps more than once.\" \n\nI stopped laughing\u2014she obviously meant it. \"You mean like reincarnation?\" \n\n\"Yes.\" \n\n\"You believe in that crap?\" \n\n\"Yes\u2014but I don't think it's crap.\" \n\nOver the years I'd read quite a number of newspaper stories about people under hypnosis being regressed to so-called previous lives. The point that always made me laugh was they were almost invariably reincarnations of famous people. As far as I could tell, nobody ever admitted to having driven a medieval shit-cart or having been a ditch-digger in Ancient Rome. I don't know why I reacted as badly as I did, maybe I was still smarting over the stalking incident. \"I suppose you were Cleopatra,\" I sneered, \"And who was I? Mark fucking Antony? Or was I the serpent that bit your arse?\" \n\nBerry looked hurt. \"Please don't mock me, Hal.\" \n\n\"Don't mock you? I don't even want to talk to you any more.\" Berry's eyes filled with tears but I was getting unreasonably riled up and stood to leave. \"I was just starting to like you but you're fucking crazy. You can fuck off, Berry, fuck off and stay away from me!\" \n\nAt the door I turned to have a last look. Berry was still sitting there, dejected and crying full on. My conscience pricked me briefly and for a moment I thought about going back to her. Then common sense kicked in. Why the hell should I waste my sympathy on an eccentric little twit like her? \n\n* * * * * \n\nI had a really weird dream that night. Not frightening, not even mildly scary. Just weird. \n\nI was old, that much I was aware of, and I was lying in a deep, soft bed. I could see the flickering of a roaring fire in the grate and the room was stiflingly hot. The room itself was dark-panelled and lit only by two or three old-fashioned oil lamps. There were two other persons in the room, of that I'm sure, for one of them, I think a young man, lifted a hand to feel my pulse. \"Well, the old boy can't last much longer,\" he said, \"Surprised he's lasted this long.\" He dropped my hand back as if it was something repulsive... \n\nI woke up before the dream went any further. For some odd reason it seemed to be vaguely familiar but I couldn't figure out why. Did the person who spoke really say 'the old boy'? I wasn't sure. My bedside clock read 3:47 so I turned over to resume my sleep. The remainder of the night was dreamless, or if I had dreams I didn't remember them. \n\n* * * * * \n\nI spread a thick layer of my favourite apricot jam on a slice of toast and chomped with pleasure. When I'd woken up that morning, I'd felt a tiny twinge of guilt over my treatment of Berry but dismissed it quickly. It was still buried. Having slurped a mouthful of coffee I said to Grandma: \"By the way, I saw that girl again last evening.\" \n\n\"Which girl, dear? Not that Amber, I hope.\" \n\n\"No, no, my stalker. Although it's difficult to choose between them, they're both weird in different ways. In fact, she's a nutcase\u2014I don't mean Amber, even if she is\u2014no, I mean my stalker.\" \n\n\"Oh? In what way is she a nutcase?\" \n\n\"She was in The Deep Velvet Bar when I went for a drink. She suggested we try starting again, so we were having a normal conversation and I was even beginning to think possibly we could become friends. Then she came out with it\u2014she believes in reincarnation.\" I shook my head as if baffled by human foibles. \n\n\"And what's so nutty about that?\" Grandma asked. \n\n\"Well, it's not exactly reasonable thinking, is it? You live then you die and you're dead. She's got this daft idea that she and I were together in previous lives.\" \n\nGrandma poured herself another cup of tea. \"And what did you say to her?\" she asked, her voice becoming a little waspish. \n\n\"Well, I told her she was mad, didn't I? No, tell the truth, I told her she was effing crazy and to eff off and stay away from me.\" \n\nGrandma's lips pursed into a thin line of disapproval. \"Hal Mercer, for the first time in your life I'm ashamed of you.\" \n\n\"What have I done?\" I demanded, astonished. \n\n\"Didn't it occur to you that she may be a Buddhist or some other religion that believes in reincarnation? Or that she may be a believer but not of any particular religion?\" Grandma put her cup down into the saucer with a clatter, a sure sign she was annoyed. \"And you can't dismiss her as a nut just because her beliefs are different to yours. Who's to say that she's wrong? Millions of people all over the world believe in rebirth. Hal, you've been a victim of bigotry and intolerance yourself because you're a lesbian. Yet now you're displaying the same kind of intolerance towards someone else, you've treated her badly simply because you don't agree with her beliefs. Don't you think you're being a bit unfair to the girl?\" \n\nSuddenly my breakfast didn't taste all that good and, chastened, I put down my toast, looking at the table because I couldn't meet Grandma's eyes. She was right and I knew it\u2014I'd been damned nasty when I could have expressed doubt far more pleasantly or even simply kept quiet. I thought about an unhappy-looking girl shedding tears, thought about how I could have made amends at the time but didn't. I swallowed my pride. \"Guess I'd better go to see her again,\" I mumbled, \"try to apologise.\" \n\n\"That's a very good idea, Hal,\" Grandma agreed. \n\nThere were a few more people in the Deep Velvet that night although it wasn't exactly overcrowded. I could see Berry sitting at the bar again and I approached slowly, knowing that I was doing the right thing but almost afraid to. I could see the tall butch, Tina, serving a customer at the far end of the bar and she spotted me at the same time. The look on her face said that she'd be pleased to kick my arse out through the door and watch me bounce off each step before I hit the pavement. Nervously, I touched Berry's shoulder and said: \"Could we talk, please?\" \n\nBerry turned to face me and I really noticed for the first time how attractive she was and what startling blue eyes she had. She regarded me with an expression of distaste and contempt. \n\nBerry \n\nI noticed Tina glaring at somebody behind me and then felt a light touch on my arm. It was Hal with an odd look on her face\u2014it seemed to be a mixture of shame and contrition mingled with a touch of defiance. Her voice was quiet, almost a whisper, as she spoke. \"Could we talk, please?\" \n\nI didn't feel kindly disposed towards her. \"Why should you want to talk to me?\" I snarled, \"I'm too fucking crazy to talk to, remember?\" \n\n\"Please\u2014I've come to apologise. Please...\" \n\n\"You mean that?\" \n\nShe nodded. \n\nFrom the corner of my eye I could see Tina approaching, probably to let Hal know how unwelcome she was. In the toughest possible way. I held up a hand to stop her, saying: \"It's okay, Tina, just a girl thing.\" To Hal I said : \"Okay, we'll talk in one of the booths. But be warned, I'm in no mood to take any shit from you tonight.\" Reckless way to talk to someone much taller and tougher-looking than you but I'd no doubt that Tina would leap in if necessary. \n\n\"Thank you,\" Hal muttered. \n\nAs soon as we settled, I snapped: \"Right, let's have it!\" \n\n\"I am so sorry for the way I spoke to you last night,\" she said, \"I had no right to mock your beliefs and I was so wrong in the way I acted. I hurt you and made you cry and that was unforgivable. I had a good telling off for it this morning from someone I love and respect very much. She said she was ashamed of me and I was already feeling ashamed of myself. So here I am...\" \n\n\"Your mother?\" \n\n\"Not her, she's an Exclusive of the Redeemer\u2014kicked me out years ago because I'm gay. It was my grandmother who put me straight. Anyway, Berry, I've said what I came for, again I'm very sorry. I won't bother you any more.\" Hal got up to leave. \n\n\"Wait, Hal.\" I'm not one to hold a grudge\u2014her remorse seemed genuine and I gestured that she should sit down. \"I'm taking a chance here but shall we try again, from the word go, like we've never met?\" I stuck my hand out and added: \"Hello, I'm Berry Osborne.\" \n\nA moment's uncertainty then: \"Hello, Berry, my name's Hal Mercer.\" She gave me an embarrassed little smile when taking my hand. As she did so, I felt that same electric thrill of something, the very sensation I'd had the previous night when we shook hands. I'm pretty sure that Hal felt it too for her eyes reflected astonishment as they'd done before. Our joined hands lingered as if we were both reluctant to let go. \n\nWhen we did let go, I hailed a waitress and ordered drinks, red wine for me (my tastes have become more sophisticated since my Campari-soda days) and a bottle of Lowenbr\u00e4u Export for Hal. For a few moments, both of us seemed uncertain of what to say. In the end I started the conversation. \"You said that your mother threw you out. What happened\u2014if it's not too painful for you to talk about.\" \n\n\"No, not too painful.\" Hal told me about her mother's membership of the most bigoted church in several counties and of Hal being rejected when she was only sixteen. \"It didn't hurt too much because she'd always been a cold fish. I thought when I came out to her that it'd go badly and it did. I just hadn't calculated how badly. Had to be done, though. But my grandparents\u2014my mother's parents although you'd hardly believe it, they're so loving and tolerant\u2014they took me in. They were quite happy about my sexuality. I've got my own little flat now, above the shop, but I still keep some clothes at their house and stay overnight with them sometimes. I'm guaranteed a decent breakfast that way. Anyway, I mentioned meeting you last night and what I said and that's when Grandma gave me a good arse-kicking, metaphorically speaking that is.\" \n\nHal's story made me grateful that my parents had been so very supportive when I came out. \"Well, perhaps we can put that behind us now,\" I said, \"see if we can be friends.\" \n\n\"Yes...\" Hal seemed to hesitate, her voice a little nervous: \"Berry, would you let me take you out to dinner one evening... if you'd like to that is... if you're free sometime... you don't have to if you don't want...\" She was trying hard but obviously ill-at-ease about herself. \n\n\"You mean like a date?\" \n\n\"Let's say I want to make amends for my nastiness.\" \n\n\"Thanks, Hal, I'd like that. Let's forget 'nastiness' shall we, let's call it a date. How about Saturday?\" \n\n\"Saturday's great, Berry.\" \n\n* * * * * \n\nWhat to wear, the eternal question. A bit late in the day I realised I'd no idea of where Hal meant to take me. Mind you, there's nowhere in our little town posh enough to have a demanding dress-code, unless you count The Duke of Ramsey hotel where I'd heard they ask men to wear ties in the dining room. In the end, and keeping my fingers crossed, I opted for a pair of blue jeans and my latest t-shirt. It depicted the rainbow motif and sitting at the highest point of the arc were Glinda the Good Witch with the Wicked Witch of the West from The Wizard of Oz. The witches had their arms about each other and were kissing. The fancy-lettered caption, also in rainbow colours, read\u2014what else?\u2014Pride - Somewhere Over The Rainbow. \n\nHal, when she arrived at my flat, was also wearing jeans, black in her case, with a plain white granddad shirt and a light jacket. Her shoes were flatties which pleased me, they meant that she wouldn't be towering over me quite so much. The first thing she said was: \"Wow, another fun t-shirt. I love it.\" \n\n\"Is it okay?\" I asked, \"I can always change it if it's not suitable.\" \n\n\"Don't you dare, it's brilliant.\" She added a little anxiously: \"I've been a bit worried in case I've booked a table in the wrong place. Do you like Mexican food?\" \n\n\"You bet! Are we going to La Fuente?\" \n\nLa Fuente is small and cosy, clean and neat without being too elaborate and is always busy. I guess most people in this town have never been to Mexico and wouldn't know the difference but the food served seems to be authentic\u2014it tastes fabulous anyway. Hal had chosen our date venue well and I told her so. The lighting is subdued and each scrubbed wood table has a chequered cloth with candles in crimson glass holders. I enjoyed a margarita while Hal chose a bottle of Mexican beer call Dos Equis. A pretty waitress came to take our orders\u2014Hal had beef enchiladas while I asked for quesadillas stuffed with mushrooms and chillies. ",
        "\"Hal,\" I said as we were waiting for our food, \"please don't be upset by this question, but would you have apologised to me if it hadn't been for your grandmother?\" \n\nHal considered for a moment. \"I think I'd have got round to it sooner or later, maybe much too late to sound sincere. I'm not really a horrible person and my conscience would have won eventually, in fact it had already started when Grandma gave me that impetus. I think maybe my reaction when you suggested we had previous lives was partly to do with my mother. Because of her church's bigotry I tend react badly to any suggestion of religion or an afterlife.\" She pulled a rueful face. \"Imagine going into an afterlife only to find that they are still homophobic up there. But I shouldn't blame others, I didn't have to be so unpleasant\u2014that was down to me. I was just... oh, I don't know...\" \n\nI put a hand on one of hers and gave a little squeeze. \"I think I can see why you feel the way you do. Let's forget all that now and just try to learn about each other.\" \n\nWe talked non-controversial things for a while then Hal asked: \"Is Berry really your given name or is it a nickname?\" \n\n\"It's short. I'm actually called Bernice.\" \n\n\"Why, that's a lovely name, sweet and old-fashioned.\" \n\nI looked closely at Hal, thinking she might be poking fun at me but she seemed sincere. \"My mother read it in some book and liked it,\" I said, \"How about you? Is Hal short for Haldora?\" \n\n\"No, my name's Henrietta.\" \n\n\"Oh, that's another nice old name. Why Hal?\" \n\n\"It's from primary school,\" Hal told me, \"One day our teacher was telling us about Henry the Fifth's wars against the French. She mentioned that when young, Henry was sometimes called 'Hal'. So the other kids started calling me Hal and I liked it, insisted that everyone call me Hal from then on.\" \n\nWe finished our meal with a shared plate of chocolate fudge cake and went on to a nearby pub for a drink. Afterwards, Hal walked me home. On impulse I slipped a hand into hers as we walked. Again I felt that odd connection. Hal glanced at me, surprised, but didn't pull away. Rather, her grip tightened a little. When we arrived at my place Hal seemed a smidgeon uncertain, if not embarrassed. \"Well, thanks for coming out with me, it was nice,\" she muttered and turned to go. \n\n\"Wait, Hal,\" I called, \"we agreed to call this a date. Supposing we change that to our first date. I'd really like to see you again. Do you want to meet up?\" \n\n\"Yes, I'd like that but I wasn't sure whether you'd want to.\" \n\n\"I want to. How about a pub lunch tomorrow?\" I suggested, \"Let's go out of town. We could go to The Lazy Badger. We'll take my car.\" \n\nHal smiled happily. \"It's a date. I'm staying with my grandparents again tonight, I'll give you the address to pick me up.\" \n\n\"And I'll give you my number if you'd like to put it on your mobile.\" \n\nOnce more there was an embarrassed look on Hal's face. She dug her phone from her jacket pocket and handed it to me. \"Will you do it, please? I'm an idiot when it comes to technology. I can phone and I can text but when I try to do something clever like entering a new number, I always bollix it up. One time I ended up calling a tattoo parlour in Singapore.\" \n\nI laughed, mainly at the image of some mystified Chinese tattoo artist being asked the time of the next bus to Newcombe Parva. I entered my number and as I returned Hal's phone I grabbed hold of her for a hug and kissed her cheek. \n\nHal \n\nThe evening had gone far better than expected and I really enjoyed Berry's company. I had experienced an unfamiliar little lurch inside when she'd taken my hand, and when she told me she'd like to see me again, and yet again when she'd kissed my cheek. It was only hand-holding and only a little kiss and yet something deep within me had been aroused. She had obviously forgiven me without question and I wondered if I could have been so magnanimous. \n\nEither I was running a bit late Sunday morning or Berry was a little early but I was just stepping out of the shower when she arrived. I heard Grandma greeting her and inviting her in. She called up the stairs that my friend was here. \n\n\"Be down in a moment,\" I responded. The moment extended a bit to fifteen minutes or so\u2014for the first time in ages I was taking extra care over my appearance, ensuring that my hair was just so and that my clothes were eye-catching. I'm not much of a girl for make-up but this time I applied some very carefully so that I looked as good as possible. And all the while I was asking myself, Why go to all this trouble for someone who's only a friend and a new friend at that? For that's the way I believed I was thinking of Berry at that time. Finally I was ready. \n\nI found Grandma and Berry in the sitting-room, side-by-side on the sofa, gossiping away as if they were life-long buddies. Berry got up and gave me a little kiss on the cheek and then another on the other cheek, very Continental. She whispered: \"You look lovely, Hal.\" Behind Berry's back Grandma gave me a broad smile and a thumbs-up while Grandpa lowered his Sunday newspaper and nodded approval. Plainly they liked Berry. \n\nBerry was wearing another of her wonderful t-shirts and I made a note to enquire where she bought them. This one showed a full rainbow, at either end of which reclined a naked, golden-skinned woman. The caption read: There's Gold Where The Rainbow Ends. \n\nThe Lazy Badger is a sixteenth century coaching inn at Merrovale, a village about seven miles from town. Their food is great and they serve a very decent pint of bitter. \n\nWe had a good lunch there and then spent an hour or so wandering in the woodland behind the pub. Berry took my hand again as we walked and we interlocked fingers. Her small hand was warm and I felt a strange blend of indescribable emotions coursing through my body, emotions that I had never felt with any other girl, especially not with Amber. In fact, every time Berry touched my hand my breath seemed to stop for a few seconds and my heart gave a little flip. There was definitely some kind of connection there. \n\nOn the way back into town Berry drove to an area I knew only slightly and drew up outside a medium-sized detached house. \"My parents' place, come in and meet them. My brother's away at college so you don't have to endure him yet.\" \n\nI was reluctant. \"Isn't it a bit soon for meeting family?\" I said. \n\n\"So? I've met your grandparents already.\" Berry grabbed my hand and tugged me along the drive. \"Come along and don't worry, they won't bite.\" \n\n\"They know you're gay?\" \n\n\"Since I was about fourteen\u2014they're happy enough about it. They were great about it when I came out.\" \n\nIf I had seen Berry's parents, Noel and Lydia, in the street, I might have been amused. Berry obviously got her height from her father who couldn't have been much more than five-four. His head was bald, merry eyes twinkled and huge ears stuck out, giving an overall impression of a mischievous gnome. By contrast, Berry's mother was tall, about five-nine or -ten, slim and still very attractive, almost, but not quite, as attractive as her daughter. Now where had that thought come from? Banter between Lydia and Noel suggested that they totally adored one another. Both greeted me with warm hugs as if they had known me for years. \n\nNaturally enough, the general conversation eventually crept round to questions about my family, not intrusive but simply interested. I explained that my grandparents had cared for me from my mid-teens, adding that I had no idea where my father was and that I was estranged from my mother. \n\n\"Can I ask why?\" Lydia said, adding: \"You'll get used to me being nosy, Hal, if I want to know something I ask. If you don't want to tell me, that's okay too.\" \n\n\"No, it's all right\u2014she disowned me way back because I'm gay. She's an Exclusive of the Redeemer.\" \n\n\"Oh, them. Well, Hal, if you're ever in need of a mother-daughter talk and your grandma can't help, then you're welcome to come to me. I'm a great listener.\" \n\nI could barely conceal my astonishment at this. \"But... but you don't know me.\" \n\nLydia gave a sigh and rolled her eyes up in mock exasperation. \"Hal, where in the rule book does it say you have to know someone to be kind to them?\" \n\n* * * * * \n\nIt turned out that Berry had talents over and above her work skills. She designed those brilliant t-shirts herself and had them made up by a friend in the business. One morning she came into the shop and handed me a wrapped package. An attached card read: 'For my newest and loveliest friend.' \n\nIt was a Berry t-shirt with a cartoon of wide-eyed Betty Boop seated on an upturned rainbow, a string of musical notes indicating that she was singing, while above her the Man-in-the-Moon grinned and winked. The caption was a couple of lines from an old 1950s song: \"...give me the moonlight/give me the girl/and leave the rest to me...\" I loved the t-shirt. In return I sent Berry a single rose\u2014on the card I wrote 'New friends and friends forever, I hope.' Me, little old unromantic me\u2014and I thought that Amber Lytton had kicked the romance out of me. \n\nI guess it wasn't all that long before Berry and I were becoming an item. We were certainly accepted as such in The Deep Velvet Bar, with even Tina warming to me... a little... \n\nI'm not sure exactly when I fell in love with Berry but fall I did... it somehow crept up on me, hitting me hard and fast... for ever... \n\n* * * * * \n\nOne night I had the strange dream again and then it became more than one night\u2014I found I was having the dream on average once a week. \n\nI was old, that much I was aware of, and I was lying in a deep, soft bed. I could see the flickering of a roaring fire in the grate and the room was stiflingly hot. The room itself was in was dark-panelled and lit only by two or three old-fashioned oil lamps. There were two other persons in the room, of that I'm sure, for one of them, I think a young man, lifted a hand to feel my pulse. \"Well, the old boy can't last much longer,\" he said, \"Surprised he's lasted this long.\" He dropped my hand back as if it was something repulsive... I knew that I was dying but instead of being scared I felt there was something comforting about the onset of death's embrace. \n\nThe second person in the room was, I knew, an old friend. He was a doctor and I assumed the younger man was too. I heard my friend admonish his colleague and then I said something about dying being an adventure. Suddenly I was floating down a long tunnel towards an intense white light. \n\nThis was the point where the dream always ended and I awoke. The first time I'd had the dream it seemed familiar. After the second time, memories came flooding back. The dream was nothing new\u2014I recalled variations of it throughout my childhood and teenage years, probably dating back to when I was a small girl. Those early dreams, which were every few months at first, later on occurring on average once a year, had not been as detailed as they were now; mostly they had consisted of lying in the huge, soft bed and then floating towards the white light. They seemed to have stopped when I turned fifteen or so. I realised something else\u2014the dream had returned with a vengeance since I'd met Berry. \n\nAh hell, why should I be concerned? No doubt my subconscious was clearing out some daytime rubbish. A dream is just a dream... right? \n\nBerry \n\nHal and I were in my flat where we had eaten an early supper and then watched a repeat of the film Ghost on TV. I guess the film triggered what came next. We were holding hands and Hal gave mine a little squeeze before saying: \"Berry, I'm not being snotty now but can I ask you something personal?\" Her expression as she spoke was slightly embarrassed. \n\n\"Anything you like.\" \n\n\"Why do you believe in reincarnation? I'm not trying to be awkward\u2014I'd really like to know.\" Hal and I had been dating for several weeks and I was pleased she could now ask this touchy question without any intention of causing offence . \n\n\"It just seems like the best answer to me,\" I told her, \"In cosmic terms a human life is nothing, less that the blink of an eye. It's so short there must be something more to it than that. I don't see sitting on a cloud strumming a harp for ever as the answer nor do I accept the idea of eternal torment in some kind of a hell. So, rebirth to give you a chance to make things better, to make yourself better.\" \n\n\"What about really bad people?\" asked Hal, \"Would they get another chance?\" \n\n\"I think so, although their next few lives will be damned tough on them. I suppose the truly evil ones, those who may never improve, might just be obliterated.\" I was holding both her hands now and gazed intently into her eyes. \"The first time I saw you outside your shop, I felt this huge connection between us even though we hadn't met or spoken. That's why I believe we've been together before, perhaps often. But what about you, Hal, do you believe in anything?\" \n\nHal took a sip of her wine before replying. \"I don't honestly know,\" she admitted, \"My experience with religion hasn't been a happy one. I know that not all Christians are as awful as the Exclusives but they have poisoned my outlook. I suppose at best you could say I'm agnostic\u2014I can't see any proof for or against. My head tells me there's nothing after this life, my heart hopes there will be.\" \n\nWe sat in silence for a while before I spoke again. \"Hal, tell me the truth now. Are you attracted to me?\" \n\n\"Yes, very much. I think you're one of the loveliest girls I've known.\" \n\n\"Yet you've never made a move on me. I know... before you say anything I know I haven't made a pass either. I thought maybe you needed time because of Amber.\" Hal had told me about Amber and her subsequent lack of trust in women. \n\n\"That's partly it.\" Hal lifted one of my hands and kissed it, the first time she'd done such a thing. \"I was so nasty to you that first time in The Deep Velvet Bar and I didn't want to risk any more upset. There's more, Berry. I've felt the connection too and it frightens me a little.\" \n\nI grabbed Hal's face in my hands. \"Listen to me. You apologised for being nasty and your apology was sincere. That's behind us. End of. As regards our 'connection', there is nothing to be scared of, not if we don't let it. And I'm no Amber Lytton, you'll not catch me in bed with a dildo-rampant dyke. Now I'm going to kiss you, Hal Mercer, and you're going to like it or I'm losing my touch.\" \n\nI pressed my lips to Hal's and her arms went around me as she responded. Long seconds passed until we drew apart. \"Well?\" \n\nThere was a look akin to wonder on Hal's face. \"I said I'm attracted to you, Berry,\" she said, her voice husky, \"That's wrong. I'm in love with you. I've never felt like this before.\" \n\n\"I've been in love with you ever since I first saw you,\" I told her, \"You were in mucky dungarees getting a take-out from the baker's shop and you were lovelier than any famous supermodel. I knew straight away you were the one. It was like... oh, I don't know... a punch in the gut but a lovely punch in the gut\u2014that's when I thought we'd been together before.\" \n\n\"Come here.\" Hal pulled me towards her and this time she kissed me. Her lips were soft and sweet and her tongue crept out to caress my mouth. I opened so that our tongues could mingle. Her free hand, which was slightly rough from her work, reached up to stroke my cheek gently. I unfastened the top buttons of her shirt and kissed the silky skin beneath. Hal was wearing a light cologne and I inhaled her scent with pleasure. She moaned a little and breathed out a single word: \"Berry...\" \n\nI opened a couple more buttons and reached into her shirt to cup one of her bra-covered boobs. Hal's breasts didn't seem to be too large but I could feel a hard nipple pressing against the bra as if begging to be let out. I started to reach around her back but: \"It fastens in the front,\" she whispered. Her boobs weren't exceptionally big when I uncovered them but they were firm and upright and a little over a handful for someone of my size. And Hal's erect nipples were exquisite, long and thick and light chocolate in colour and I took one in my mouth to bite on it gently. \n\nHall pulled my head up to kiss me again, her lively tongue exploring all corners of my mouth. Pulling back from me she whispered: \"Play fair, Berry, let me see your boobs.\" \n\n\"Don't be disappointed,\" I said, \"I'm a bit flat-chested.\" \n\n\"I don't care how flat-chested you are as long as you haven't got a dangling dick down below,\" she laughed. \n\n\"Believe me, I'm all girl where it matters.\" I raised my arms adding: \"All yours.\" Hal lifted my embroidered top over my head to find that I was bare to the waist. With boobs like mine bras are really a waste of money. I might need them as I grow older but that's a long way off. \n\n\"Berry, you're gorgeous, I love your boobs, they're so pretty.\" Lowering her head, she licked first one and then the other and then drew almost all of my right boob into her mouth, suckling on my hard little nipple until it felt bigger than it had ever done. Not one of my previous lovers had affected me like that. Now it was my turn to moan as Hal switched her attention to my other breast. She dipped a finger into her wine and rubbed it all around my nipple before sucking and licking until it, too, seemed more engorged than ever before. I could feel my panties getting damp as moisture started to seep from kitty. \n\n\"Talking about fairness,\" I said, \"let's get your shirt off so I can see you properly.\" \n\nHal finished unbuttoning her shirt and removed it together with her open bra. I made a little surprised noise. Her belly-button was pierced, adorned with a silver pentagram, and surrounded by a tattoo of the signs of the Zodiac. \"A bit of defiance,\" Hal explained, \"The Exclusives consider astrology to be the Devil's work so I had this done to show I couldn't give a stuff what they think.\" \n\n\"Well, I think it's lovely,\" I told her before leaning down to plant a lingering kiss on each one of the signs. Hal made contented little noises, holding my head close to her as I went the rounds starting and finishing with Aries. I began to kiss my way slowly up her body and between her breasts until I reached the warm hollow at the base of her throat. Again I latched onto one of those wonderful nipples of hers, holding her boob between my hands while Hal pulled and twisted the other nipple. An agile tongue flicked at my ear and sharp little teeth nibbled the rim while short, blunt fingernails raked my back. \n\nThen we were kissing avidly once more, tongues fighting lovingly for supremacy, both of us making tiny moans of pleasure. My panties felt soaked by now and I wriggled my backside, trying to stop them becoming stuck in my honeypot. \n\nHal pulled away so that she could reach and undo the zip on my skirt. She pulled the garment away, leaving me in my lace panties, and ran a finger up the wet crotch. Hal bent her head to my lap and kissed my vulva through the panties. \"Oh God, Berry...\" she moaned, \"I can smell you... so delicious...\" \n\nWith a slight struggle, I managed to get Hal's jeans down around her ankles, and then I had another struggle to get her shoes off before removing the jeans completely. She was wearing boxer shorts rather than knickers and I couldn't help laughing\u2014they were decorated with 'Garfield' cartoons, kitty covering kitty as it were. I slipped my hand down the front, giggling at the thought that I might be goosing Garfield.. The pubic hair on Hal's mound felt soft and curly as I ran my fingers through it before delving lower to find a smooth-shaven vulva. I rubbed her cleft, soaking my hand with her juices. As I did so, I could feel Hal's exploring finger slipping under the leg of my panties to caress my slit. ",
        "I pulled my hands from Hal's shorts and started to lick my fingers clean. Hal took hold of my panties and removed them\u2014I'd sort of planned this seduction and made sure that I was shaved clean for Hal. She again lowered her head to my crotch and inhaled deeply. Rising, she said: \"I don't think I'll get enough of that,\" before kissing me hard. \n\nI grabbed the waistband of Hal's shorts and tugged them off. Her pubic hair was the same chestnut colour as her boyish hair-cut and prominent pussy lips were thick and puffy with desire. Pink inner lips protruded slightly from the outer and I folded them back so that they resembled rosy butterfly wings. Thick creamy-looking juice seeped from her vagina and slowly trickled down to her perineum. A prominent clitoris stood out and I gently stroked its hood as I introduced fingers into Hal's slippery pussy. I was delighted to find that she was every bit as tight as I am down there\u2014my long-ago encounter with Eleanor had taught me to appreciate that. Copying Hal, I bent to breathe in her musky scent. \n\nHal's middle finger penetrated my pussy and she folded her hand so as to apply pressure to my clit while I bucked my hips against her hand as I slowly moved my finger back and forth hoping to rub against her g-spot. I'm not sure which one of us moaned the more loudly but it was a close thing. Both of our pussies were making wet noises and mine made a kind of loud plop! sound\u2014almost embarrassing\u2014as Hal suddenly pulled out her finger to suck my slippery fluids. \n\nHal fell onto her back on the sofa and tugged me up so that I was straddling one of her thighs, pulling me closer so that my thigh was pressing against her crotch. Our lips and tongues met in a long kiss and we played with each other's boobs as we began to rub against one another, our thighs becoming slick with our secretions. I could feel that familiar tightness building up in me as my breathing grew more heavy and rapturous. Hal's breathing was changing now into a light panting and I could see her pupils dilating. She wrapped her arms about me tightly and our movements became more rapid. Then we were both crying out as our climaxes approached. \n\nHal suddenly squealed loudly as she came and I followed her seconds later, whimpering with pleasure as I buried my face hard into her neck. \n\nWe lay there for some time, holding each other closely as we gradually recovered. There was a lilt of laughter in Hal's voice as she said: \"I guess that's our love well and truly consummated.\" \n\n\"Guess it is.\" \n\n\"I love you, Berry.\" \n\n\"I love you, Hal.\" \n\n\"Bed?\" \n\nI replied enthusiastically. \"Yes. Right now.\" \n\nHal \n\nThere's a shop a few doors down from ours but I don't really know what you'd call it. It's certainly not a junk shop but neither is it exactly an antiques shop. I suppose curio shop is the best description, the stock comprising books, bric-a-brac, jewellery, furniture, in fact examples of almost everything up to and including stuffed animals, most of the goods being obtained from house clearances. The proprietor is an elderly man called Alfred Lee and he's like one of Charles Dickens's grotesques but nicer, always dressed in baggy trousers, granddad shirt with a shabby cardigan and plum-coloured waistcoat on top. To round off this sartorial elegance he wears a tasselled velvet smoking cap and fingerless mittens. I suspect he dresses this way to attract custom and it works because his shop is rarely empty. The tourists seem to love him. \n\nWe'd got pally when he found out I collected old photographs and postcards. He often watched out for me and called me in if he had any interesting items. So one lunchtime I was returning from the bakery with my lunch when Albert hailed me. \"Hal, I've got something special here, think you'll like it.\" \n\n'It' turned out to be a box containing about a dozen heavy, tooled-leather photograph albums. Albert pulled one at random and flicked through it, showing me a series of sepia photos with scenes set in India, probably mid- to late nineteenth century. \"Did a house clearance couple of days back,\" the old man told me, \"Found these tucked away in an attic corner. Must have been there years, nobody in the house knew anything about them. I think they were cherished once for they were well wrapped up in linen covers. Yours for thirty-five quid.\" That was a bargain, he'd probably have got far more at auction if he could have been bothered but he had something of a down on auctioneers. \n\nAnyway, Albert loves to haggle so I joined in the game and we finally shook hands on twenty-eight pounds. I went to the glass-topped counter to pay and it was there I spotted the ring. It was quite small, old gold set with a square sapphire surrounded by tiny diamonds. Albert got it out to show me. \n\n\"Must have been a young teenager's ring, art deco I'd say,\" he commented, \"Maybe 1920s or 30s. I've had it quite a while.\" The ring was too small for my fingers but I reckoned it would fit Berry nicely and the intensely-coloured sapphire was a perfect match for her eyes. I'm not really sure what I had in mind then. I had fallen for Berry and I suppose I had a vague idea of it being an engagement ring at some point. It was a bit pricey but I had to have it. We haggled again, a little longer this time, and eventually agreed a price. \"Tell you what,\" Albert added with a wink, \"I'm glad to see it go after all this time so I'll throw in those photo albums free.\" \n\n\"Thanks, Albert, you're a doll.\" I leaned across and kissed his whiskery cheek. \n\nHe smiled shyly, touched where I'd kissed, and said: \"I'll have to find you more bargains, Hal.\" \n\nI took the albums up to my flat meaning to enjoy them one evening when I didn't have too much on. But then life got in the way and I shoved them to one side and forgot about them for a goodish while. \n\n* * * * * \n\nThere was an unexpected reconciliation with my mother, although not as I would have wished it. My grandparents came to see me as I was closing up the shop one afternoon and neither looked their normal happy selves. \"I've got some bad news, Hal,\" said Grandma, \"Your mother is in St Cecily's Hospice with terminal cancer, started out as bowel cancer but it's spread to other organs. She's got maybe a couple of weeks or so. Your grandfather and I are going to visit her now. Do you want to come along? I know she was neglectful of you, brutally so when she chucked you out but perhaps now's the time to push that aside...\" \n\nI knew Grandma was right. At this point I couldn't summon up any great feelings of worry or concern but in the circumstances felt I should try to mend bridges. \"Just let me clean up and I'll be with you,\" I said. \n\n\"You'll find marked changes in her attitude,\" Grandpa told me, \"Years ago some old sage said something to the effect that knowing you're dying concentrates the mind wonderfully. I think your mother is realising now what she had and threw away. She's been asking for you.\" \n\nIt's surprising how different things look from the perspective of adulthood. No longer did my mother resemble the icy and disapproving ruler of my younger years. Propped up in her hospital-bed, she was frail and vulnerable. We had been told that her pain-killing medication kept her mildly sedated but that she was aware and lucid. To my surprise, her eyes lit up when she saw me enter her room. \"Henrietta, you've come to see me. Thank you.\" She held out a hand for me to hold, a hand that was little more now than skin and bones. \n\nWe spent about an hour with her that first evening, me holding her hand the whole time. As we were leaving, Grandma asked Mother whether there was anything she wanted. \n\n\"No-one from the church has been to see me,\" Mother replied, \"I'd like to see the minister if possible, if the poor man can spare the time.\" \n\n\"Poor man indeed!\" sniffed Grandma as we left, \"Can't be bothered, more like.\" \n\n* * * * * \n\nI let Robbie know that I'd be taking a few days off, explaining the circumstances. Before going to see my mother the following day, my grandparents and I stopped off at the Church of the Exclusive of the Redeemer. Outwardly the building, dark brickwork crusted with the filth of decades, was both unappealing and uninviting while the interior was gloomy and unwelcoming, there being little in the way of lighting. It was cold too, despite the pleasant weather outside, and smelling strongly of damp. From what I could see of it the altar was nothing more than a plain old kitchen table with a rough wooden cross hanging above, while the pews were cheap and narrow splintery benches which must have been hell on the backside. Not the sort of surroundings guaranteed to bring joy into worship. \"I remember this place from when I was a boy,\" Grandpa whispered, \"It was miserable even then. Used to be an old Victorian dame school among other things. It was even used as a temporary mortuary during World War Two.\" \n\nA door at the far end of the church opened and someone advanced to meet us, a pallid-faced, overweight man dressed in a sombre suit and wearing a dog-collar. His liverish-coloured lips were huge and floppy as if the filler had run out before he was completed and his mouth wobbled as he spoke. \"May I help you?\" \n\nGrandma had appointed herself spokesperson. \"Are you in charge here?\" \n\nThe man bowed his head. \"I am the minister, Reverend Lunt.\" \n\n\"We're the parents and daughter of a member of your congregation, Cynthia Mercer. She's in the local hospice, dying of cancer. Nobody from the church has been to see her. Would you please do something to arrange a visit.\" \n\n\"Ah...\" The Reverend Lunt steepled his fingers and stared at the cobwebbed ceiling as if he had spotted something of interest there. \"We are aware of Mrs Mercer's illness. She is shunned. I have forbidden members to contact her.\" \n\nWe were astonished. \"Why would you want to do that?\" Grandma demanded. \n\n\"Because God gave her the cancer to punish her.\" \n\nGrandma shook her head as if she couldn't believe what she'd heard. \"What gives you that ridiculous idea?\" \n\nThe minister gestured towards me, distaste on his slab of a face. \"Because she brought this... this deviant being, this unnatural homosexual creature into the world. God abominates perverts and all those associated with them. As it is, I will have to re-consecrate the church when you leave\u2014her very presence pollutes.\" \n\nFor a moment I thought Grandpa was going to punch Reverend Lunt but Grandma felt him tensing up and gripped his arm firmly. \"Call yourself a Christian?\" she snapped to the minister, \"You're nothing but an utter hypocrite, Reverend. Before you start re-consecrating your church, I suggest you get your Bible and read Luke 10, verses 30-37.\" \n\nAs we stepped out into the welcome sunlight, Grandpa snorted: \"Lunt? He's got a funny way of pronouncing the letter C.\" \n\n\"What's that Luke whatever?\" I asked Grandma. \n\n\"The parable of the Good Samaritan,\" she told me. \n\n* * * * * \n\n\"There's nobody coming to visit from the church,\" I said. \n\nMother seemed to shrink a little. \"Why not?\" \n\nGrandma prodded me in the back. \"Go on, Hal. Tell your mother the truth.\" \n\nIn the circumstances, I was reluctant to say anything to upset Mother but Grandma poked me again. \"Go on.\" \n\n\"They're shunning you,\" I said, \"Your minister says that God has given you cancer to punish you for giving birth to me.\" \n\nMother closed her eyes for a moment, letting out a long sigh. She opened them again, tears glistening, and looked at me. \"I'm so sorry, Henrietta, I've been such a fool all these years. You're a daughter I should have been proud of instead of rejecting you for something you couldn't help. Is it too late for us?\" \n\nI felt my own tears coming as I took her frail hand between both of mine. \"No, Mum, it's never too late.\" \n\nAfter a while, Mother said: \"I know I've not got long now but I've got some urgent business to deal with. Will you get a solicitor to come and see me as soon as possible, preferably tomorrow? Anyone except a woman called Ashton, she's a member of the church...\" \n\nAfter that I visited my mother every day. Towards the end she welcomed the presence of the hospice's resident chaplain, a decent Church of England minister who was not judgemental. The last time I saw her before she died, I brought Berry with me. We approached her bedside holding hands. I wasn't sure whether I was doing the right thing but Mother did seem reconciled to my sexuality. \"Mum, this is Berry. She's my girlfriend.\" I held my breath. \n\nMother reached out a hand to Berry. \"Hello, Berry. You'd better know that I was a very poor mother, didn't give Henrietta the love and care she deserved. Please give her that love in my stead. Say you will.\" \n\nBerry lifted my mother's hand to her lips. \"I will, Mrs Mercer...\" \n\nMother died that night, peacefully in her sleep. \n\n* * * * * \n\nI did grieve because for all that had torn us apart, she was still my mother. I think that as much as anything, I grieved for what could have been instead of what was. My grandparents worked at giving me comfort although they, too, were mourning the loss of a daughter. And Berry's folks were unstinting in the love and support they showed me. Lydia Osborne was right, I think, you didn't need to know people well to show them kindness. \n\nI was taking Berry to see the house left to me in my mother's will. There was a posh car sitting outside when we arrived, a large Mercedes GLC-SE Executive. The front door was ajar and I could hear the murmur of voices inside. I started to go into the house and Berry pulled me back. \"It could be burglars, Hal. Let's call the police.\" \n\n\"I don't think so.\" I pointed to the Mercedes. \"When was the last time you saw a burglar driving one of those? I think I know exactly who it is.\" \n\nI was right. We walked into the sitting-room, Berry nervously clutching my hand, to confront the Reverend Lunt who had a self-satisfied smirk on his flabby face. With him was a middle-aged woman, thick-set with close-cropped grey hair, dressed in a dark-coloured business suit. She looked vaguely familiar but I couldn't place her. Perhaps she'd been a customer in the shop at some time. \n\nLunt glared accusingly at our joined hands so quite deliberately I pulled Berry closer and put an arm around her waist. \"And what are you doing here?\" Lunt demanded. \n\n\"I might ask you the same question.\" \n\n\"I am here to inspect my\u2014 I mean, the church's new property. This is Ms Ashton, my\u2014 I mean, the church's solicitor.\" \n\n\"I see. You ordered your congregation to shun my mother when she needed pastoral comfort but as soon as she dies you're here to grab what you can. You're not only a fucking hypocrite Reverend Lunt, you're a fucking vulture as well.\" \n\n\"There's no need to use foul language, young woman,\" said the solicitor. \n\n\"It's the only kind of language for people like him,\" I replied, \"What makes him think this is his\u2014 I'm sorry, the church's property.\" \n\nMs Ashton showed me a clipboard holding a number of legal-looking papers together with a set of keys. \"Your mother's will left the house and her belongings to the Reverend and the church.\" \n\nI reached into my shoulder-bag for some papers which I passed to her. \"Mother's new will\u2014she changed it before she died. The house is mine, along with all other assets. Oh, and in case you have a sudden urge to rip it up, that's a photocopy, the original is held by my solicitor, Jacobi &amp; Son.\" \n\nAs Ms Ashton reached to take the will from me with stubby fingers, her jacket and shirt cuffs drew back to reveal a glimpse of tattoo around her wrist. Then I knew where I had seen her before. She was the dildo queen I'd witnessed servicing Amber Lytton's lissom body. Now what was her name...? ah yes, Leonie. She had a bloody nerve criticising my language given her sexual proclivities. I wondered if the church knew of her fleshly incontinence. Perhaps not. If they did, maybe she was too useful for them to shun\u2014knew where the bodies were buried as it were. \n\n\"This can't be right!\" blustered the Reverend Lunt. Spittle flew from rubbery lips as he spoke. \n\nLeonie Ashton finished reading through the short will. \"It seems in order to me, and Jacobi &amp; Son is a reputable firm.\" \n\nLunt tried again. \"The woman must have been mentally incompetent when she did that. She was surely under duress.\" \n\n\"My mother, not 'the woman', had cancer, not dementia,\" I told him, \"She knew exactly what she was doing and I'm sure Mr Jacobi will agree, not to mention the hospice nurses who witnessed her signing the will.\" \n\nThe Reverend made one last appeal to his solicitor. \"Surely we can contest the changed will?\" \n\nMs Ashton nodded. \"Oh yes, you've got the right to contest it. But as your solicitor I must advise that costs would probably run into thousands to contest in court and you'll likely lose anyway. If you lose you might be held liable for Ms Mercer's legal costs as well as your own. Regrettably, my advice is to accept the situation.\" \n\nI was elated and shouted Yippee! inside. I'd probably have felt sorry for most people in the same boat but not for the Reverend Lunt. \"Yes, put it down to experience,\" I said, \"Perhaps next time you'll be more careful about shunning church members.\" Then I threw his own words back in his face. \"Please leave my house now, your presence pollutes.\" \n\nThe Reverend Lunt had an unpleasant gleam in his eye as he turned his gaze on Berry. \"As for you child, don't you think you're a little young to be associating with this... this person?\" I could guess what was going through his nasty little mind. He'd lost out on the will so he'd try to get me another way. I reckon he had visions of reporting me to the police, accusing me of sexually molesting a minor. \n\nBerry is still sensitive about her too youthful looks and her grip on my hand tightened but she kept her voice steady as she replied. \"Don't be fooled by my appearance, Reverend Lunt. It's none of your business, but I'm actually a year older than 'this person' as you call my girlfriend.\" \n\n\"Bah!\" I didn't know people actually said \"Bah!`' outside of comic books but Reverend Lunt did. Thwarted, he stormed off towards the front door, closely followed by Leonie Ashton. As the solicitor passed me, I held out my hand saying: \"Keys please.\" Scowling, she slapped the bunch of keys into my hand, hard enough to sting. I didn't trust either of them, though, so resolved to get all locks changed quickly. And annoyed by her manner as she handed the keys over, and that she'd admonished me for 'foul language', I couldn't let well alone, I had to shoot my big mouth off . As she turned away from me, I said sotto voce: \"Seen Amber Lytton recently... stud?\" She didn't answer, just went brick-red and glowered. Later, I was to regret my impetuosity. \n\nBerry \n\nI was relieved to see the two get into the Mercedes and drive away. There is something scary about religious fundamentalists. In some other countries they might easily have shot us in God's name. I'd noticed the thick-set solicitor flushing as Hal whispered to her and asked what she'd said. \n\nShe laughed. \"Oh, it was just something I saw her doing a long time ago.\" \n\nI cottoned on and joined in the laughter. \"She's the supposed sexual powerhouse, right? The one you saw shagging Amber Lytton.\" \n\n\"Yep. But forget her. Come here, Berry.\" Hal pulled me towards her and kissed me full on the mouth. \"I should have done that in front of them,\" she said, \"They'd both probably have had a stroke.\" She kissed me again. \"I'll show you round.\" \n\nThere wasn't a lot to see, the house being a typical small three-bedroom semi with some need of updating and decoration. Upstairs, Hal stopped outside one closed door. \"This was my room before I got the bum's rush.\" She turned the handle and I followed her into the room. It was pleasant enough with the afternoon sunlight streaming through net curtains covering a large window. There were a number of shelves filled with books and half-a-dozen or so cuddly toys arranged on the single bed which was covered with a multi-coloured patchwork quilt. This room had not been neglected, it was neat and cared-for. ",
        "\"She... she looked after it, for eight years she looked after my room,\" whispered Hal. Her voice quavered, sounding close to tears. \n\nI tried to give her something to cling on to. \"I think maybe she wanted you home, Hal, but was too... stubborn or proud or indoctrinated, whatever, to approach you.\" \n\n\"And I was too bloody stubborn or uncaring to even try to come home.\" A solitary tear trickled down Hal's cheek and I took her in my arms to comfort her. For all that she was six or seven inches taller than me, at that moment it was as if I was the bigger of the two. \n\nI brushed away her tear and said: \"Let's make love, Hal, right here and now.\" \n\n\"But the bed's only small.\" \n\n\"So how much room do we need?\" I said, \"I love you, Hal, and right now I want you.\" \n\n\"And I love you, Berry,\" Hal said as she reached for me, \"I never thought it would happen for me.\" She wrapped her arms around me as she bent her head for a kiss. It was just a soft touching of lips at first which seemed endless. I lifted my arms so that they were around Hal's neck and took her lower lip between mine, tugging very gently. Hal moaned a little as her tongue flickered across my upper lip and then we were frantically exploring each other's mouths. I hoped I tasted as good to Hal as her natural sweetness did to me. Her lips left mine, she began to nibble and lick one of my ears and my honeypot started to tingle and become damp. I pushed my hips hard against Hal's. \n\n\"Stop wasting time, Hal\u2014undress me, please.\" \n\nHal pulled my t-shirt off slowly, inch by inch, tantalising me as she continued to lick and suck my ear. At last I was free of the top and Hal went down on her knees to unzip and lower my jeans, again doing it as slowly as she could. She stopped as the jeans reached just below my crotch to press her nose and mouth to my panty-covered mound. \"I can never get enough of your smell,\" she said before finally pushing the jeans down to my ankles. As she lifted each foot clear of the garment she gave my toes a fairy kiss. Throwing the jeans to one side, she bent her head even lower to my ankles as if kow-towing to me, and started to kiss her way up my legs. \n\nBy now kitty was flowing freely, soaking my panties, and I put my hand down to finger her. Hal reached up to stop me. \"Don't be impatient. If we're going to make love, then we'll do it properly.\" She continued to kiss the inside of one leg and it seemed to take an age until she reached the point where my thigh met my torso. To my frustration she lowered her head again and started on the other leg, same thing\u2014a series of gentle, lingering kisses up to the inside of my thigh. \n\n\"Do you want me to take your panties off?\" Hal teased. \n\n\"Just do it,\" I said through clenched teeth. \n\nAgain she drew the panties down my legs with maddening slowness and again the gradual kissing up my legs as I whimpered with urgent need. At last she reached my pussy and inhaled before easing my lips apart and giving me a flat-tongued lick from perineum to clitoris. Hall stood up abruptly. \n\n\"No!\" I moaned. \n\n\"Fair's fair,\" she pointed out, \"I've got to get naked too.\" \n\nI damned near tore her clothes from her, no finesse from Berry. To hell with unhurried foreplay, I wanted a good shagging and I wanted it immediately. Her boxer shorts\u2014Bugs Bunny if you want to know\u2014were the last to go and I could smell her readiness too. As I stood, Hal embraced me so that our nude bodies pressed closely together and she kissed me hard, tongue probing. I pulled away so that I could suck on one of her large nipples while caressing her other breast. I could feel Hal's fingers probing softly at my cleft, teasing and tickling and penetrating a little. \n\nSuddenly she picked me up in her arms and sat me on the edge of the bed, going to her knees in front of me. She spread my legs and buried her face in my pussy, kissing her way around my outer lips before easing them apart so that her tongue could seek its way into my vagina. I rested my legs on Hal's shoulders and held her head close to me with one hand, playing with my stiffened little nipples with the other hand. I still worried sometimes about my tiny boobs but Hal kept assuring me she loved them. Hal withdrew her tongue to explore the whole of my pussy and slid two fingers into me, moving them in and out to brush against the spongy area of my g-spot. \"That's it... right there... again...\" I sighed. Hal's tongue was now flicking against my clit and I could feel my pussy walls tightening on her fingers. My breathing was coming in short gasps now and my climax was very close. I held Hal even closer, bucking my hips against her face. \"Oh God... don't stop... don't stop...\" I yelled out as I came, the orgasm damned near blowing the top of my head off. \n\nHal continued to lick and finger-fuck me and I could feel another one building up inside me even before the first had settled down. I released Hal's head and clutched at the quilt with both hands as my second orgasm exploded and I made all sorts of incoherent noises. My eyes were squeezed shut and I opened them to see Hal looming above me, grinning triumphantly, her lips and chin shining with my come. \"Worth waiting for?\" she asked. \n\n\"You've ruined me for anyone else,\" I panted. \n\n\"Better not be anyone else,\" she laughed, \"I love you, Berry, you're all mine now.\" \n\n\"I love you too, so shut up and kiss me,\" I demanded. Her kiss was sloppy with my juices and I licked her clean. My own come had never tasted as good to me as it did then. I guess Hal must have added some magic ingredient. \n\nHal lay back on the bed and I lay on top of her, kissing and nuzzling at her mouth and throat and boobs. Our naked bodies felt so good together like this and I reached down to play with Hal's pussy. Thick nectar was flowing and my fingers slipped into her tightness easily. Her clit, bigger than mine, rubbed against the heel of my hand and Hal jerked, letting out a little cry of pleasure. I applied a little more pressure, at the same time seeking out her g-spot. I sensed that she was going to come very quickly, the pressure must have been building up inside her while she was bringing me off, so I worked that little bit harder to get her there. My hand and fingers worked hard against her and her hips thrust hard against me and then Hal was holding me tight, making little crying noises as her pussy seemed to pout and more slippery juice coated my hand. \n\n\"Turn round, Berry,\" Hal said, voice throaty. I guessed what she wanted and turned so that I was straddling her face with her pussy in front of me. The outer lips were still slightly swollen and creamy liquid dripped from them. Her pink inner lips, with their delicate shell-like edges, were visible and I took them gently between my teeth and nibbled at them. I slipped two fingers into kitty and with my other hand eased back her clitoral hood to expose the sensitive button. I licked at the delicious offering and I could feel Hal doing the same to my honeypot. We came off together and for me it was a mind-blower. From the way Hal jerked and yelled I reckon it was pretty good for her, too. \n\nWe just lay there afterwards, cuddling and kissing and saying the silly little post coital things that lovers say. After a while we dozed off... \n\n* * * * * \n\nWithin a few weeks, Hal had moved into her house and started redecorating. She asked me to move in with her but I had a few months lease to run on my flat so we agreed I should see that out. \n\nI was head over heels in love with Hal and one evening I came to a decision. I took out my jewellery case and searched through the collection of ring-boxes until I found what I wanted, a beautiful antique ring that had been left to me by a great-aunt. It was white gold set with three lovely fire-opals. I knew that when the moment was right, I was going to ask Hal to marry me. The ring was way too large for my fingers but it looked as if it would fit Hal perfectly. It wasn't the traditional type of engagement ring but that didn't matter. It would be a perfect declaration of my love... \n\nI took to carrying the ring about with me, waiting for the opportune moment to propose. Until one night in The Deep Velvet Bar I found out that Hal was cheating on me... \n\n* * * * * \n\n\"Hello, Hal sweetie, here I am as requested.\" The tall woman who had appeared by our booth turned to me. \"We've not met\u2014I'm Amber Lytton.\" \n\n\"Amber!\" Hal looked astonished. \"What are you doing here? And what do you mean 'requested'?\" \n\n\"Why, I've come because of the texts you sent me, what else?\" \n\n\"I haven't sent you any texts.\" \n\nAmber sighed. \"Oh, Hal, still telling lies?\" She turned to me again. \"I'm afraid Hal always was a stranger to the truth. Don't tell me you've never noticed.\" \n\n\"What the hell are you on about?\" Hal practically shouted. A nearby waitress turned to see what was going one. \n\n\"Hal, you know you texted me asking me to get you out of this relationship.\" \n\n\"I did no such thing!\" \n\n\"Hal... Hal...\" Amber reached into her bag to take out her mobile phone. She pressed a few buttons and handed the phone to me. It was set to display the texts. I read the first one aloud. \n\n\"Amber darling, hope it's not too late to realise it's you I love. I'm stuck with this fucking midget now and I can't shake her off. She's getting on my nerves. Get me off the hook please. Yours ever, Hal xxx\" \n\nI looked at Hal's horror-stricken face. \"I didn't sent that!\" she protested. \n\nAmber pointed to her phone. \"There are lots more.\" \n\nI read the next message: \"Amber, this titless wonder's so fucking boring. Please come as soon as possible. Hal xxx\" \n\n\"But I didn't\u2014\" \n\nBefore Hal could stop her, Amber had grabbed Hal's bag and rummaged in it, producing her mobile. She passed it to me. \"Here are the originals.\" \n\nI read the first couple of texts on Hal's phone. They were identical to the messages on Amber's phone and the menu indicated that they had been sent. I felt sick as I looked at Hal who looked equally sick. Amber, standing by, just looked sad. \"I thought you loved me,\" I whispered. \n\n\"I do love you! I didn't send those texts!\" \n\n\"Don't lie!\" I yelled, brandishing Hal's phone. A number of people were now staring at our table. \"I've got the evidence right here, your own bloody mobile. Well, don't worry about getting rid of the titless wonder, she's going right now! I never want to see you again, Hal!\" Tears were threatening to blind me as I went to leave. \n\n\"Berry, I love you! I didn't send those texts!\" \n\nI realised I was still holding Hal's phone. Half turning, I threw it in her general direction. \"Here, you'll need this to text your lady friend! I hope you're happy together!\" I was almost running at that point. \n\n* * * * * \n\nI didn't know that anyone could cry as long and as bitterly as I did after that confrontation in The Deep Velvet Bar. My heart was broken and I was broken with it. \n\nIn the end I just ran out of tears. I could have understood Hal admiring, even fancying, another woman\u2014we're all prone to that, it's only human nature, but it was the terrible betrayal that tore me apart. The nasty things she'd said in those texts... and with bloody Amber Lytton... I'd loved Hal so much and this... Oh, scrub the 'I'd loved', make it I love Hal still. But I could never let her into my life again, I'd never be able to trust her. And so it went on for a month or more of abject misery... \n\nHal \n\nI don't think Berry realised what she'd done but the phone hit my forehead above an eye, catching me with a corner. It hurt, temporarily blinding me, and I could feel blood starting to trickle. I wiped it away, clearing my eye in time to see Berry exiting the club. Amber was still standing there, a smug look on her face. \"If you run you might catch her,\" she scoffed, \"Don't think she'll want to talk to you though.\" \n\nI should have slapped her stupid but I'm not a violent person and I was more concerned about Berry anyway. I dashed out of the club into the lobby, almost crashing into Big Jacqui the doorkeeper. \"Whoa!\" she exclaimed, \"What's everyone in such a bloody hurry for? First Berry, then you.\" \n\n\"Berry, which way did she go?\" \n\nIgnoring my question she said: \"Nasty little cut there, Hal. You'd better get that seen to.\" \n\n\"Fuck the cut,\" I swore, \"did you see where Berry went?\" \n\nJacqui pointed to the left. \"That way I think.\" \n\nI ran down the steps into the street but couldn't see Berry anywhere. There were several taxis lined up outside, waiting for the evening's exodus. One of the drivers was a bloke Berry and I had used on several occasions. \"Looking for your friend, love?\" he called, \"She grabbed the first cab in line. She looked pretty upset about something.\" \n\nGoing back into The Deep Velvet Bar, I couldn't see Amber anywhere. I grabbed one of the waitresses. \"Have you seen the woman who came to our booth?\" I asked, \"Tall, glamorous and well-dressed, shoulder-length dark hair?\" \n\n\"I think someone like that went into the ladies' room a few minutes ago.\" \n\nThanking the girl, I pushed my way through the crowd and went into the toilets. Amber was by herself at one of the bowls, washing her hands. All of the stalls seemed to be empty except for one where the door was closed. Well, whoever was in there, I didn't give a stuff. \n\nAmber pointed to the cut on my brow. \"Good shot, that girl of yours. Or should I say ex-girl?\" I caught a glimpse of myself in a mirror. There was a line of blood running down the side of my face and what would be a king-sized bruise starting. \n\nClose to tears, I said: \"How did you manage that, Amber?\" \n\nShe gave me an ugly smirk. \"Easy, sweetie. I hacked into your phone and then sent those texts to myself. Remember me removing my number from it way back when? I set it up then so I could get in any time I wanted. A child could fool you when it comes to technology, Hal. Most people change their phones frequently but you're too dim to do that.\" \n\n\"But why...? \n\n\"I told you you'd regret walking out on me one day. Well, I've made sure of that.\" Amber finished drying her hands and added: \"In a way this is your own fault, Hal. I'd almost forgotten about it, was going to let it go. But then you had to go and make some snide remark to Leonie Ashton recently and of course the sweet woman couldn't wait to tell me all about it. Sensitive soul is Leonie.\" \n\nSensitive? Leonie? Like a hungry scorpion. I felt sick, as much with myself as anything. Me and my big mouth! \n\n\"Anyway, sweetie, must fly.\" Amber reached out to stroke my cheek before I could move out of her way. I recoiled and felt my skin crawl. I'd sooner have had a tarantula creeping up my face. \"Have to get home and give Leonie her reward.\" \n\n* * * * * \n\nI tried over and over to contact Berry to tell her what had really happened, phoned, texted, never any answer. I suppose Caller ID gave me away. I went to her flat a number of times but she wouldn't open the door\u2014it had a convenient peep-hole so she always checked visitors\u2014assuming she was there anyway. She might have gone to her parents' house and I didn't want to drag them into this. Only one time I knew for sure that she was there because she shouted: \"Go away, Hal! I don't want to see you any more!\" After a few weeks I gave up trying. I wondered what to do with the sapphire ring which now seemed to be wasted. In the end I tucked it away into a sideboard drawer. \n\nI did a hell of a lot of weeping during that time. I also wore my Betty Boop t-shirt constantly until it was pretty manky because I wanted something of Berry's close to me. \n\nI told my grandparents that Berry and I had fallen out but wouldn't give them the full story. I think Grandma would have gone after Amber with a rolling-pin if I had done. She just said: \"I hope you can make it up\u2014strikes me you two were meant to be together.\" \n\nThe only person who knew the full truth about our split was Robbie and I swore him to secrecy. He had some contacts in Aliberts and offered to put in a bad word about Amber but I refused. \"That'd bring me down to her level, Robbie,\" I said, \"and I'd hate to be like her.\" \n\nOne Saturday evening, sick of just moping about crying, I decided to pull myself together, get on with life again. Sooner or later I'd have to get over Berry\u2014later, probably, because I was so much in love with her. Casting around for things to do, I realised that I still hadn't had a good look at those leather-bound albums with the old photographs. I'd given them a few cursory glances since I first acquired them and then put them to one side to enjoy later. Subsequent events had knocked that on the head. I'd noted that each album had a decorative label on the inside front cover with a brief description of contents in elegant handwriting, 'copperplate' I believe they used to call it. The albums' pages were typical of the period, thick stiff paper with slots to insert photograph corners. \n\nThe names and date on the first album's label were: Henry &amp; Berenice Chastain 1868. That was odd, her first name was the same as Berry's, just a slight difference in the spelling. The first few photographs were typical stiff and formal Victorian poses, he sitting and her standing behind him, one hand on his shoulder, then she sitting and him standing. Both appeared to be very well dressed by the standards of the time. Money there, I'd guess. \n\nThen I came upon a series of pictures of the two as individuals, head-and-shoulder portraits. There was something about the wife... good God! She was damned near a double of Berry, they could almost have been sisters. What were the odds of two people, nearly one-hundred-and-fifty years apart, being so alike. Unless Berenice Chastain was some ancestor of Berry's. \n\nI looked again at Henry's photos. There was something hauntingly familiar about him, too. It took me several long minutes to recognise it and then I took a photograph from the album and carried it to a mirror, holding it beside my face. There was a distinct likeness. Oh, his face was strong, masculine while mine feminine with soft lines but nevertheless... it was almost like father and daughter looking back at me from the glass... \n\nBerry and I, both having Victorian ancestors married to each other? Coincidence? Far-fetched? Grandma might know, one of her hobbies was family genealogy. I called her, explained briefly and almost truthfully that I'd found a reference in an old book. \n\n\"Chastain...\" she mused, \"No-one of that name in our family.\" \n\n\"This would be about the 1860s,\" I told her. \n\n\"About the time of your four-times great grandparents then. No, no Chastains. Some of our family back then were called Wilkins, Tallis, Foster... I can't recall all of the names right now... certainly not Chastain, though.\" \n\n\"What about my father's family?\" I said. \n\n\"No, no Chastains there, either.\" \n\nBefore calling Grandma I'd quickly looked through some of the other albums, finding pictures of Henry and Berenice sitting in splendour, surrounded by turbaned servants. \"Was there anyone in service in India?\" I asked, \"Military officer or official of some kind?\" \n\nGrandma laughed. \"Sorry, Hal, but nothing so posh. All sides of our family were from common stock, labourers mostly. One of your great-great-grandfathers was a railway signalman, another a farm worker. I think one was a brick-layer. There was one who was a lowly clerk-cum-messenger in an insurance office, that was about the highest any of that generation ever achieved.\" \n\n* * * * * \n\nThe recurring dream came again that night, following the usual pattern of going a little further than it had previously. \n\nI was an elderly man in bed in a ill-lit room and I was dying. There were two doctors with me, one old and a life-long friend, the other young and seemingly callous. I spoke to my friend, something about the younger man growing old one day and finding out what it was like. I clearly recall saying \"To die will be an awfully big adventure...\" before closing my eyes to sleep and then I found myself floating in the strange tunnel, floating towards the dazzling light, and knew that I must have died. This time the dream took me further and faster than ever before and I found myself bursting from the tunnel into a limitless white space. ",
        "I could sense unseen presences all around me, reassuring, soothing, serene... And then there was the voice, gender-neutral, soft and radiating pure love, all around me and inside of me, unheard but clear. \"This is not the end... You and she are bound together, you are destined always to be with each other...\" \n\nBerenice... Bernice... Berry... \n\nI woke up, sobbing uncontrollably, my pillow damp with tears. It was still dark outside and the red figures on my clock showed it to be 4:40. When I brought my weeping under control, I dragged myself from bed and went into the bathroom to splash my face with cold water. \n\nReturning, I sat on the edge of my bed and thought about the dream. Could it have been caused by Henry Chastain's photograph album? Unlikely, for the recurring dream had started long before I acquired the album, even several times in childhood. Then there was the uncanny likenesses between Henry and Berenice Chastain and myself and Berry. Even the similarity in names, Henry and Henrietta, Berenice and Bernice\u2014our names had been chosen for whatever reasons by our parents yet perhaps they had been influenced by... what...? \n\nUnconsciously I reached out to turn on my bedside radio which I keep tuned to an easy-listening station. Peculiar, I wasn't even aware that I wanted the radio on. My conscious mind told me that perhaps I was hoping to catch the five o'clock news, something I rarely did, but truth to tell it was almost as if I was being compelled by an outside force. Even after turning on, I wasn't really paying much attention to the music but it gradually filtered through. Cyndi Lauper was singing: \"...if you're lost, you can look and you will find me.../time after time...\" \n\n\"If you're lost...\" Well, I was certainly lost without Berry. \n\n\"...you can look and you will find me...\" Could I find Berry and rekindle her love for me? \n\n\"...time after time...\" Was my dream right? Were we destined to be together always? \n\nOr was I perhaps cracking up? No, I didn't think so\u2014lonely and unhappy, yes, but definitely of sound mind. I summed up what I thought of as the weird stuff: the recurring dream which, on and off, seemed to have been with me for much of my life; the supernatural voice in the latest dream; Henry Chastain's photograph album; the similarities in our looks and names; Cyndi Lauper's song at an exact moment when I was likely to be receptive. I shivered in awe. Against all logic I was beginning to think that perhaps Berry was right, that we had travelled previous lives together. And if we were destined to be bound to each other always, then life and love would surely find a way to bring us together again. I felt a sudden uplifting of my mood, a burst of optimism if you like, and settled back to rest some more, a little easier than I had been for weeks. \n\nBerry \n\nIt was fairly late one evening when my doorbell rang. I thought it might be Hal, calling to make more of her pitiful excuses. At first she'd tried to speak to me daily but I wouldn't let her near me or answer her phone calls. Now I'd heard nothing from her the past eight or nine days so I'd assumed she'd finally got the message and given up. The bell chimed again, several times, more impatient and aggressive. It sounded like she wasn't going to give up easily and I prepared to give her a real mouthful of invective this time. \n\nI peered through the spyhole. To my surprise it wasn't Hal but Tina from The Deep Velvet Bar. Opening the door, I said: \"Tina, what is it?\" \n\nTina stepped into my flat, dragging a dishevelled and slightly bruised Amber Lytton by one arm. \"Amber's got something to tell you, Berry\u2014haven't you, Amber?\" Amber just stared at the floor, sullen and uncommunicative, so Tina shook her roughly. \"I said you've got something to tell Berry, haven't you?\" \n\n\"Okay, okay...\" Amber raised her eyes to glare at Tina and then at me. \"Hal wasn't cheating on you, I framed her. She didn't send me those texts, I hacked into her phone and did it myself. It was easy\u2014she always was a bit thick when it came to technology. Hasn't even changed her phone in the past few years\" \n\nI guessed at the reason for Amber's bruises. It looked as if Tina had applied some gentle persuasion. \"Why would you want to do that?\" I asked. \n\n\"To screw up her relationship with you. She walked out on me, nobody gets away with doing that.\" \n\n\"But that was years ago...\" \n\n\"So what?\" Tone defiant and aggressive. \n\n\"There's something else,\" Tina butted in, \"Tell Berry why you came back here tonight.\" \n\nAmber's glower should have destroyed Tina on the spot but Tina was made of tougher stuff. She gave Amber another shake. \"Go on!\" \n\n\"I came back to see if I could cause any more trouble for Hal in case you'd got together again.\" \n\nDumbfounded, I could think of nothing to say, but not Tina. \"Fucking hell, woman, you really are a vindictive cow, aren't you?\" she snapped. \n\nAnd I was shaken. I'd kicked out the woman I loved more than anything in the world and now it seemed she was innocent\u2014at the moment, I just didn't know what to do. \"What happens now?\" I asked Tina. \n\n\"I suppose that's up to you.\" \n\nAmber wrenched her arm away from Tina's grip. \"No, it's up to me,\" she spat, \"First, I'm going to bring charges against you for assault, that's what happens now. And I'll deny everything\u2014 I'll tell whoever that you're just two jealous bitches trying to stitch me up. My word against yours, no witnesses.\" \n\nTina gave Amber an evil grin and reached into her shirt pocket, taking out a small oblong box. \"Mini tape recorder,\" she explained. She flicked a couple of buttons and we heard Amber's voice making her admission. Tina switched the little machine off and returned it to her pocket, adding: \"The kind journalists used to carry in the old days so interviewees couldn't claim they were misquoted. Got your confession on it. And you know the real beauty of it? You can't hack into it to change anything. Very twentieth century primitive. \n\n\"Now, if you want to report me for assault, go ahead. Let's see\u2014there are three categories. Most serious is grievous bodily harm. No, doesn't apply here, you're not grievously hurt. Next is actual bodily harm. You're not really harmed, just a couple of small bruises. Nah... Likely the worst that can happen is I'm charged with common assault\u2014magistrate's court with a small fine, perhaps. But as a first-time offender I'd probably be offered a police caution instead which means no court, no fine, just keep my nose clean for a couple of years. \n\n\"On the other hand, lady, you've admitted to hacking Hal's phone with malicious intent to harass her.\" Tina's evil grin reappeared as she pointed at Amber and then tapped the pocket containing the tape recorder. \"Don't know if you've heard but hacking and harassment are considered to be crimes now\u2014probably get you twelve to eighteen months inside. I'll bet some of those tough dykes in the nick would love to have a bit of posh totty like you to play with.\" \n\nIn an instant the defiance seeped out of Amber and she slumped, defeated. \"Okay, you win. Can I go now?\" \n\nTina nodded. \"But take this on board. If you ever try to cause trouble for Hal or Berry again, if you ever come into The Deep Velvet again, then that tape goes to the police, got it?\" \n\nI closed the door behind Amber and then asked Tina: \"Was all that true?\" \n\n\"Yes, every word.\" \n\n\"How did you find out?\" \n\n\"After you left The Deep Velvet that night, Hal confronted Amber in the women's toilets,\" Tina explained, \"Amber admitted everything to Hal, she positively gloated. What they didn't realise was that I was in one of the lavatory stalls, overheard every word. By the time I'd finished, they'd both disappeared. I didn't come to you at the time because I couldn't prove what I'd heard\u2014you might have thought I was lying to get Hal off the hook. I had to wait until tonight when Amber came into the bar. I tried appealing to her better nature but she hasn't got one so she needed a little coaxing to tell the truth.\" Tina grinned again. \"I can be very persuasive when needs be.\" \n\n\"I noticed,\" I said. With a sigh, I flopped into a chair. \"What do I do, Tina? It never occurred to me that anyone could hack into a phone and plant false messages.\" \n\n\"It's easily done,\" said Tina, \"No trouble at all for an expert.\" \n\n\"Hal's tried lots of times to speak to me and I've more or less told her to fuck off.\" Devastated, I continued: \"I haven't heard from her for over a week now, I think she's given up on me.\" \n\n\"Do you really love her?\" Tina asked. \n\n\"She's the love of my life.\" \n\n\"Then get your finger out and go see her. You might still have a chance if she loves you the way you love her.\" \n\n* * * * * \n\nSound advice from Tina and yet I couldn't bring myself to act on it. I didn't think that Hal could possibly forgive me now. I know that she had hurt me once and I'd forgiven her but that was only a storm in a teacup before we really knew each other, sorted within twenty-four hours or less. This was much more serious. Hal wasn't guilty but I'd rejected her for three weeks or more, refusing to give her a chance to explain her side of events. There was every likelihood that I'd lost her. \n\nSo I went to the two people I could usually rely on to give the right answer, Mum and Dad. They knew that I'd broken up with Hal but I hadn't given them the full story, just said we'd fallen out over something private and were unlikely to be reconciled. Not ever. They'd wisely provided me with the shoulders to cry on without preaching or interfering in any way. Even Mum's habitual nosiness had been held in check. Now I gave them all the grisly details. \n\n\"She must be a very unhappy soul,\" Mum commented when I finished. \n\n\"Yes, and it's my fault for not listening to her.\" \n\n\"Oh, not Hal, love. I meant the Amber woman. You have to be a dreadfully sad person to want to inflict so much misery on others.\" Well, that was Mum for you\u2014compassion should have been her middle name. \n\n\"What about Hal?\" said my father, \"You still love her, do you, Bernice?\" \n\n\"Yes, Dad, from the first time I saw her I thought\u2014no, I knew\u2014she was my soul-mate. I love her with everything I've got.\" \n\n\"Then do what your friend Tina advised,\" he told me, \"Get off your arse and go see Hal, try to make up with her. Crawl and grovel if you have to but do it.\" This was serious advice. Dad never called me Bernice unless he was being stern and practical. And at twenty-six I could count the number of times I'd heard him use a vulgarity on one thumb. \n\nI'd call Hal straight away, ask if she'd see me. I put a hand into my jacket pocket but my phone wasn't there. I remembered. I'd come out in such a hurry to see my parents that I'd left my phone in the flat. As her number was programmed into my phone, I had no idea what it was. What my hand had encountered in my pocket, though, was the small box containing the ring I had for Hal. I'd forgotten it was there. \n\n\"Can I call for a taxi?\" I asked my folks. \n\nDad sighed theatrically. \"No need, I'll get the car out and take you to Hal's.\" \n\nMum wrapped me in a comforting embrace. \"It'll be okay, love.\" \n\nMy emotions were all knotted up when Dad dropped me off. He parked a couple of houses down from Hal's, saying: \"I'll just wait here in case Hal won't let you in. If she does, I'll go home and leave you to it. I really hope it works out, Berry\u2014your mum and I reckon you and Hal were made for each other. We love you very much and we've come to love Hal.\" \n\nI gave him a hug. \"Thanks, Dad. I love you too.\" \n\nScared, I walked up to Hal's front door and tapped very quietly. As I did so, it occurred to me that she wouldn't\u2014couldn't\u2014forgive me, that she might not want me any more and I started to weep, mixed tears of shame and fear. Shame that I had doubted Hal so readily and fear that she would turn me away. \n\nHal \n\nI was taken aback by a late night visitor, Tina. She stood on the doorstep, all six-foot-two of her towering over me. \n\n\"I suppose you've come to kick the shit out of me,\" I said before she could speak, \"Well, you'd better get it over with.\" \n\n\"Now why should I want to do that?\" she replied, apparently puzzled. \n\n\"Because I supposedly betrayed Berry and hurt her badly.\" \n\nTina smiled. I'd never noticed before but she had a really nice smile when she took the trouble. \"Nothing like that. I've come to tell you that Berry knows what really happened. I persuaded Amber to tell her the truth tonight. And don't worry about Amber any more, I've warned her off, you'll not see her again. Okay, Hal, I've done my bit. The rest is up to you and Berry. If you can sort yourselves out, I want an invitation to your wedding. \n\n\"And Hal, do yourself a favour. Get a new phone and learn how to use it.\" \n\n* * * * * \n\nSo, it looked as if today's early morning hopes might be fulfilled after all. I picked up my phone and called Berry's number but there was no reply. I supposed she could be in bed or in the bath or... anything... My instinct was to rush round to her flat but it was late so I decided to leave it until the following day. Then an awful thought struck me: supposing that Berry had found someone else and they were together tonight... No, if that was the case, Tina wouldn't have bothered with coming to see me. Anyway, hadn't the supernatural voice in my dream said that we were destined to be together always. Or was that really nothing more than a dream? Was my subconscious playing tricks on me. I flopped onto the sofa, tired and confused. I didn't know what to think any more... I might have dozed off for a while... \n\n...suspended in white, limitless nothing. Soothing warmth, wrapping sensations of unbounded love and serenity. Lightness of being. Words of comfort, felt but not heard. \"Remember, this is not the end, you are destined to be together always...\" \n\n...I jerked awake, thinking at first I was hearing things, the time nearing midnight and the knock on the front door being soft, almost timid. It was repeated and when I opened the door I found Berry standing there, anguished tears spilling down her face. \"Tina found out the truth,\" she gabbled before I could say a word, \"Got Amber to confess to me. I was wrong and I'm so, so sorry. Please, Hal, can you forgive me? Tell me it's okay... please...\" \n\nI could feel her pain and my throat tightened with love. I said nothing, just opened my arms to her and she clutched at me, hiding her face against my chest. I drew her into the house and held her, stroking her hair. \"It's okay,\" I soothed, \"It's okay, Berry, it's all over now. Amber's out of it, she can't hurt us any more.\" Slowly Berry's sobs eased and eventually stopped. She pulled away a little and reached into her jacket pocket to bring out a small box which she opened to reveal a beautiful ring set with three fire-opals. \n\n\"Hal, I don't deserve this but I love you so very much, will you marry me?\" \n\nI didn't reply immediately and the scared look returned to Berry's face. Instead I took her hand and led her to the sitting-room, opening the sideboard drawer to retrieve the box with the sapphire ring. Showing it to Berry, I finally answered her: \"I was going to ask you the same thing. I love you very much, Berry. Will you marry me?\" Then we were hugging tightly, both of us weeping like kids. \n\n* * * * * \n\nWe were huddled together on the sofa. Our tears had finally dried and we were at peace. Berry touched the healing cut on my brow and asked: \"What happened here? Was that my fault?\" \n\nI figured that a white lie was in order. \"Nothing to do with you. I was careless, walked into a door.\" \n\nBerry looked doubtful for a moment and then accepted it. She embraced me closely and said: \"If you're sure you still want me after what's happened, Hal, I promise I'll love you until the day I die.\" \n\n\"Yes, I'm sure about us. But I've got something strange to tell you, Berry\u2014it's something to do with both of us, our destiny you might say.\" Apprehension darted across her face and I hastened to kiss her mouth gently to reassure her. \"Don't be worried, it's nothing dreadful. Berry, there's been some really weird shit happening to me over the past few days. It'll be best if I show you part of it then I can tell you the rest.\" I got up and fetched the first of Henry Chastain's photograph albums. \"Before I show you this and tell you about other things, let's say my eyes have been opened and I'm much less sceptical than I was. \n\n\"You've just said that you'll love me until the day you die. Well, maybe it'll be a lot longer than that. Maybe we'll be together for always, time after time.\" \n\nThe End"
    ],
    "authorname": "Maonaigh",
    "tags": [
        "religious bigotry",
        "homophobia",
        "lesbian seduction",
        "mutual masturbation",
        "lesbian sex",
        "oral sex",
        "lesbian love",
        "betrayal",
        "revenge"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/time-after-time-3"
}