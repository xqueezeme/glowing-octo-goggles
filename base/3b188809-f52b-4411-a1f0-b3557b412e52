{
    "title": "The Concert Ch. 05",
    "pages": [
        "Jason lounged in the Eames chair, a towel draped loosely over his sinewy legs, watching the two women, laying naked on the bed, grinding their bodies together. He had been told unambiguously (if silently) to sit and watch rather than to join in. He was happy to do so.\n\nAmanda and Danielle were kissing passionately, with a fervor that caused Jason's heart to pound. Their hands were moving over each other's bodies, almost desperately, touching, caressing, exploring. It was as if a pent-up passion had been unleashed and had found its expression in one sudden outpouring.\n\nThe sound of their mouths, licking and smacking on each other's bodies, along with the soft moans from both of them, was hypnotic. As Jason sat riveted by their lovemaking, his cock began to lengthen. He took the towel from his lap and tossed it aside. \n\nDanielle was kissing Amanda's neck and whispering in Amanda's ear. Jason couldn't quite hear what she was saying.\n\n\"You're so beautiful, Amanda. I want to make love to you. Lay back now. Close your eyes.\" \n\nAmanda smiled and closed her eyes, laying on her back. Danielle started to lightly kiss her face, her neck, and shoulders. She got on her hands and knees and let her full breasts brush against Amanda's skin. She let out a girlish giggle.\n\n\"Tickles.\"\n\nDanielle brushed her nipple across Amanda's cheek and brought it to her mouth. Her eyes closed, Amanda parted her lips and encircled it with her wet mouth and tongue.\n\n\"That's it. Suck it. Feels so good,\" Danielle whispered.\n\nAmanda sucked the nipple into her mouth hungrily, pressing it against the roof of her mouth with her tongue. She could feel it hardening in her mouth, growing bigger and firmer. Danielle gently removed it, replacing it with the other. Amanda suckled it like a hungry baby.\n\nAs Jason watched, his cock hardened, stretching out long and resting against the side of his leg. He licked his lips, longing to be sharing their experience. \n\nDanielle replaced her nipple with her mouth, and kissed Amanda deeply. Then she began to kiss her neck and shoulders, using her tongue to trace the outline of Amanda's heaving breast. Amanda let out a soft moan. When her mouth found her nipple and caressed it, flicking it with her tongue, Amanda moaned again.\n\nDanielle's lips and tongue played with Amanda's nipples until they, too, were standing up. Both women were in a heightened state of arousal, their nipples sticking out and up.\n\nDanielle worked her way down Amanda's body, over her abdomen, and to the shaved area of her pussy. She was on her hands and knees, like an animal reaching down to feed, to lick, to explore. Jason had a clear view of Danielle's pussy; it was dripping wet. She was obviously loving this. So was he.\n\nDanielle slowly parted Amanda's legs, and started to kiss the inside of her thighs. Amanda spread her legs as if to say \"put your tongue here, please.\" Danielle took her time but then finally obliged, letting her warm tongue slide between the folds of her wet pussy. Amanda let out a loud moan and Jason felt a throbbing in his cock. \n\nDanielle glided her tongue slowly up and down her labia and over her clitoris, and then let it delve deep inside her hole, and out again. Over and over, her tongue repeated its circuitous route. Amanda was writhing now, her fingers in her mouth, her head thrashing side to side. \n\nAfter many minutes of this, Danielle paused, lifted her head and glanced behind her. Jason was sitting spread eagle, his arms gripping the arms of the chair, his cock big now, filling with blood. Danielle smiled and crept slowly to Amanda's side, whispering in her ear.\n\n\"Guess what? Baby's here. And he's been watching you. Watching me make love to you with my tongue. And he's so turned on. Look at him.\"\n\nAmanda opened her eyes and raised herself onto her elbows. She could see Jason smiling at her, his long cock laying against his thigh.\n\n\"Do you want to give him a show? Drive him crazy?\" Danielle whispered. Amanda looked at her and nodded, her eyes wide with excitement. \"Come.\"\n\nDanielle guided Amanda to the edge of the bed, right in front of Jason. She sat on the very edge while Danielle knelt on the floor at her feet. She slowly spread Amanda's legs revealing the wettest pussy Jason had ever seen.\n\nWhile Amanda sat facing Jason, her legs spread, Danielle began to stimulate her clit with her tongue. She glided her tongue in an undulating fashion, so each time it entered her, it rubbed her clit. Amanda sat straight backed, looking right in Jason's eyes, one hand playing with her nipple, the other in her mouth.\n\nJason watched her, hypnotized.\n\nAmanda started to gasp and moan each time Danielle's tongue brushed over her clit. She seemed to know exactly what would send bolts of electricity through Amanda's body. Amanda arched her back, her breasts thrust upward, her nipples big and hard.\n\nJason's cock flopped onto his stomach. It was as long as any Amanda had ever seen. Longer even than Franco's. \n\nDanielle worked Amanda's clit and she could tell her orgasm was approaching. Amanda moaned loudly, her breasts heaving. She lifted her hips to meet Danielle's face and tongue. \n\nJason was licking his lips now, panting.\n\nDanielle turned and glanced at Jason, then looked up at Amanda.\n\n\"Look at how turned on he is. From watching you. You turn him on so much.\"\n\nShe turned back to Jason.\n\n\"Doesn't she turn you on, Baby? Isn't Amanda hot?\"\n\nJason could hardly talk. \n\n\"Oh, yeah. Fuckin' hot.\"\n\nDanielle turned to Amanda.\n\n\"Do you want him to touch himself? While he watches you? Do you want that?\"\n\nAmanda was heaving now. She nodded her head \"yes\" vigorously.\n\n\"Tell him. Tell him what you want him to do,\" Danielle whispered.\n\nAmanda looked at Jason. She was breathing heavily.\n\n\"Baby. I want you take that big cock in your hand. Do it, baby.\"\n\nJason reached down and gripped his cock, raising it so it stood straight up. It was rock hard.\n\n\"Now, I want you to stroke it, baby. Stroke it for me. It's such a turn on. It'll make me come. You do want to see me come, don't you?\"\n\nNow it was Jason's turn to nod energetically.\n\nDanielle turned to Amanda and smiled, then buried her face in Amanda's pussy. Amanda leaned back, her eyes fixed on Jason's cock. He was stroking it, pulling the skin down so the head swelled upward, the veins bulging.\n\nDanielle held her tongue against Amanda's swollen clitoris and shook her head quickly from side to side. Amanda felt her orgasm rise and crest over her. \n\nAs Jason stroked himself, Amanda's orgasm filled her body. He watched her body shake as pre-cum oozed out of the tip. When her orgasm finally subsided, she fell backwards onto the bed. Danielle crawled up beside her, her lips at her ear.\n\n\"You're so beautiful when you come,\" she whispered sensuously. Amanda smiled, her eyes closed. \"So beautiful.\" She looked back at Jason. \n\n\"Mmmmmm. Jason's so turned on by you. He's still big and hard. He didn't come yet. I'm hot too. You've got me so wet right now. Can we fuck you, Amanda? We both want to fuck you so bad.\"\n\nAmanda let out a giggle, her eyes still closed. She nodded her head.\n\nDanielle turned to Jason who was still stroking his rigid cock. \n\n\"C'mon, baby. You're up.\"\n\nJason was on the bed in an instant, laying next to Amanda, on the other side of her from Danielle. His fingers lightly grazed across Amanda's tummy. She smiled.\n\n\"We're going to give Amanda a little treat,\" she cooed softly. \"You and I are going to give her whatever it is she wants. It's all about her.\"\n\nJason nodded, understanding perfectly and ready to play his role -- whatever it might entail.\n\n\"Amanda said she likes her breasts to be licked. Shall we?\"\n\nWith that, they lowered their heads and began to lick her breasts, sliding their tongues over her already hard nipples, and wrapping their lips around them. Amanda placed one hand behind each of their heads and pulled them to her breasts. She arched her back. They sucked and tongued her nipples while their hands glided up and down her body. The feeling was electric.\n\nDanielle lifted her head and resumed her narrative, in a soft, whispering voice.\n\n\"We know you've been watching us. Watching us fuck. Touching yourself. It got us so excited. Knowing you were right there. All wet. And hot. We want you, Amanda. What do you want us to do?\"\n\nAmanda looked at Danielle, then at Jason. She thought a moment. \n\n\"I want you and me to be on top.\"\n\nDanielle and Jason looked at each other.\n\n\"Show us,\" Danielle said. \"Show us what you want.\"\n\nAmanda sat up and turned Jason over on his back. His cock stretched past his navel, long and thick. Amanda guided Danielle to Jason's head. She was on her hands and knees, facing his feet, her full breasts hanging down.\n\nAmanda took Jason's hand and guided it to his cock. She led him to hold it straight up in the air. She licked her lips, leaned down, and licked the precum off the tip. She swirled her tongue around the head and took it into her mouth, and let it pop out with a smack. \n\nShe got on her hands, straddling him, facing Danielle. With her eyes fixed on Danielle's, she ever so slowly maneuvered herself so that her dripping wet pussy was hovering over Jason's cock. As if in slow motion, she lowered herself down onto Jason's throbbing cock, her eyes and Danielle's fixed on one other.\n\nAmanda's mouth was open as she slowly pushed herself down on the tip of his cock, until it popped into her, making her gasp. She stayed fixated on Danielle as she pushed herself down onto the shaft, feeling it enter her, filling her.\n\nJason was perfectly still, letting Amanda control the moment; Danielle watched her with fiery eyes.\n\n\"Now,\" Amanda moaned. \"I want him to lick your pussy.\"\n\nDanielle smiled and positioned herself over Jason's face, and lowered her pussy to his mouth. His tongue received it enthusiastically. She felt him slide his tongue over her lips, and enter her, probing her already dripping wet pussy.\n\nAmanda studied the expression on Danielle's face, watching her gasp as Jason fucked her with his tongue. She watched Danielle's ample breast start to heave as he tongued her clit. She let out a whimper when she felt Jason's tongue thrusting deep inside her.\n\nWhen Amanda knew that she and Danielle were feeling the same thing, she started to move her body, undulating to take Jason even deeper. Slowly, she rolled her hips so that his cock massaged her insides and his pubic bone rubbed against her clit. She arched her back, touching her breasts, and playing with her nipples. She let out a moan. She was putting on a show. This time, for Danielle.\n\nJason, meanwhile, was taking it all in, every sound, every smell, every image. The scent of Danielle's pussy was filling his senses. She was incredibly wet, with a salty sweetness that made him so hot. He could hear the sounds of the two women moaning, and that made his cock swell. Occasionally, he would catch a glimpse of Amanda, her eyes locked on Danielle's, her body undulating in the sexiest motion he had ever seen. He felt like he could come at any moment.\n\nDanielle was staring at Amanda, the way she moved her hips, grinding on top of Jason's cock, the look in her eyes as she took him deep inside her. It made Danielle so hot. She tilted her pelvis forward to give Jason's tongue access to her clit. He found it and went to work instantly, licking and sucking it until Danielle was moaning too. She arched her back. Showing Amanda her big, beautiful breasts, caressing them, pinching the nipples to make them stand out.\n\nAmanda circled her hips, taking Jason's cock all the way inside, feeling him fill her completely. She arched her back, her hands bracing herself on Jason's thighs, her breasts reaching up in the air. She could feel her orgasm approaching. Never did her eyes leave Danielle's.\n\nDanielle watched Amanda getting closer and closer to coming. She felt SHE was the one riding Jason's huge cock; just as Amanda felt she was the one licking Danielle's pussy. Danielle's eyes started to flutter as she felt herself about to come. She pressed herself against Jason's face. She couldn't get enough of the feeling of his tongue inside her.\n\nJason could feel Danielle's pussy as it started to contract and he knew she was on the verge of coming. He reached up with his hands and felt Danielle's full breasts. He rubbed the nipples and his tongue worked overtime on her clit. His cock felt bigger and harder than it had ever been.\n\nAmanda leaned forward, her hands braced on his chest. She was so close to her orgasm. Jason started to raise his hips, sliding his long cock into her. Danielle, heaving now, leaned forward too, her hands on top of Amanda's. They were face to face.\n\n\"Kiss me,\" Amanda groaned.\n\nDanielle's mouth found Amanda's, their tongues meeting instantly. Jason lifted his hips, pumping Amanda now, and flicking Danielle's clit with his tongue. Amanda's body began to shudder as she started to climax. She cried out.\n\n\"Oh yeah,\" whispered Danielle. \"It feels so good. I love how he's fucking you. He's fucking us both.\"\n\nJason loved hearing that he had a central role in their fantasy. He was living HIS fantasy -- fucking two women at once, one with his cock and the other with his tongue. He lifted his hips, pressing deep into Amanda's pussy, almost involuntarily. Danielle's hands found Amanda's breasts, pinching the nipples, making her groan even louder. Amanda's body was bucking now, shaking as she climaxed. \n\n\"That's it. Come for me. I've wanted this for so long. I've wanted you.\"\n\nDanielle's fingers reached down to Amanda's pussy. She could feel Jason's cock sliding in and out of her. She began to rub her clitoris fast.\n\nAmanda literally screamed with pleasure as she came. Danielle watched her intently, amazed at the intensity of her orgasm. Jason, too, watched her from between Danielle's dripping legs, lifting and lowering his hips to extend and further ignite her climax. He still hadn't come though he felt he could explode at any moment.\n\nEventually, Amanda slumped and Danielle held her. Jason slowed his pumping. Amanda's eyes were closed, her body limp like a rag doll. Danielle gently laid her down on Jason's chest. \n\nAfter Amanda rolled over on her side, Danielle curled up next to her, facing her, also on her side. Jason disengaged from her, and lay next to Amanda on the other side. He hadn't come yet and his cock was still long and hard.\n\nAmanda was catching her breath, touching Danielle's face, while Danielle softly ran her fingertips over her skin. Jason was spooning her from behind and she could feel his breath on her neck, and his hard cock against her ass. She reached back and grabbed Jason's ass, pulling him to her, while she felt Danielle's breast pressed against her own.\n\n\"Looks like we've got an Amanda sandwich,\" said Jason as he pressed his body against her backside. Truly, Amanda felt Danielle and Jason's soft skin, as well as their hands all over her body. It felt wonderful.\n\n\"What do you feel like?\" Danielle whispered in her ear. \"What do you want us to do?\"\n\n\"Mmmmmm,\" moaned Amanda. \"You've done everything wonderfully.\"\n\n\"I want to act out your fantasy,\" Danielle whispered. \"You know, the one with Franco and whatshername.\"\n\n\"Isabelle?\" \n\n\"Yeah, Isabelle. That's Franco right behind you. Can you feel him?\"\n\nAmanda moaned softly and reached back to feel his curly hair. He kissed her on the neck. \n\n\"Yes, I feel him. Baby, you feel so good.\"\n\n\"And I'm Isabelle. Tell us what you want,\" Danielle whispered.\n\nAmanda thought a moment and then looked at Danielle. \n\n\"I want to watch you. Both of you. And then I want to join you. And I want the three of us to fuck.\"\n\nDanielle nodded her head and guided Amanda to the easy chair. She leaned in and kissed her softly on the lips, then returned to the bed. \n\nAmanda watched as Danielle slid next to Jason and rolled over on her back. He kissed her deeply and cupped her breast in his strong hand. He rubbed her nipples with the palm of his hand, and began to kiss her neck.\n\n\"What's going on?\" he whispered, so only Danielle could hear.\n\nDanielle kissed his face, her mouth next to his ear.\n\n\"We're acting out her fantasy. I'm her roommate. You're her roommate's Italian boyfriend.\" Jason smiled and nodded. \n\nShe rolled over so she was atop him. She brushed her big breasts over his face and mouth. He reached up hungrily to suck them.\n\nDanielle kissed his chest and stomach. She took his cock in her hands and raised it up. She ran her tongue from the base to the tip, and swirled it over the head. She pressed the tip against her bee-stung lips and let it slowly push into her mouth. He felt her warm, wet mouth and soft lips envelope his hardness. It felt like he had just entered the most luscious pussy in the world. He moaned loudly. Amanda, watching, let her finger find her own pussy, massaging her clit.\n\nDanielle ran her tongue over the head of his cock, circling it, sucking it. He moaned again. She opened her mouth wide and took him slowly into her throat. She slowly slid it out and turned to Amanda.\n\n\"This is too big for me to eat all by myself. You want to share?\"\n\nAmanda smiled mischievously and crawled onto the bed. She came to the other side of Jason, face to face with Danielle. Her tongue slowly licked the length of Jason's cock as Danielle watched. Then Danielle took a turn and licked Jason's cock, running it over the tip and making him shudder. Soon both of them were licking at the same time, voraciously. Then their tongues touched, and they were licking his cock, and each other.\n\nAmanda wrapped her lips around the head of his cock, licking it, feeling its soft contours. Then Danielle did the same, taking the hard tip into her warm mouth. They were taking turns, sucking him, licking him, watching each other. Again and again they traded off, licking the shaft, taking the head in their mouths, sucking him. Jason began moaning loudly. He had never felt anything like this before.\n\nThen Amanda began licking simultaneously with Danielle, licking all around his tip while Danielle was doing the same. Her tongue was sliding over his cock and onto Danielle's tongue, and back onto Jason's cock. For Jason it was like the best blow job he'd ever experienced\u2014times ten. Amanda became so excited she began to kiss and lick Danielle's mouth passionately, with Jason's cock in between them. They were tonguing each other, while his hard cock pressed against their faces. It took every ounce of Jason's willpower to keep from coming.\n\n\"God, I want you,\" Amanda moaned. \"I want to make love to you. To your pussy. With my mouth.\"\n\nDanielle was also breathing hard.\n\n\"Oh, I want that. I've wanted that from the moment I saw you. Please. Lick me. Lick my pussy.\"\n\nDanielle lay back, her breasts heaving, her nipples hard and extended. She arched her back and parted her legs. Amanda's mouth found her pussy, her tongue entering her wetness. Danielle gasped.\n\nWhile Amanda let her tongue explore every crevice Jason took some initiative of his own. First, he started by giving Danielle's erect nipples a good hard suck, causing her to moan. Then he got behind Amanda, whose ass was raised as she licked Danielle. He rubbed the tip of his engorged cock against her wet, warm pussy. It felt incredible. For both of them.\n\nSlowly, he pushed the head of his cock between the folds of her pussy. She was SO wet, SO hot, he could hardly believe it. She must be living her fantasy after all.\n\nAmanda was eating Danielle with such passion, such abandon. She was sending her tongue deep into Danielle's hole, as far as she could reach, and then flicking the clit on the way out. She was using her whole face, her body, as she devoured Danielle's pussy with her mouth. It made Jason so turned on, his cock throbbed. \n\nHe pushed his rock hard cock inside Amanda's pussy. Slowly. Steadily. Deeply. Amanda moaned as she felt his length filling her. Her ass was up in the air, her legs spread, her pussy open to him, and Jason was able to sink his entire length deep inside her. He could feel the tip of his cock rubbing against her cervix. Amanda moaned again.",
        "He slowly slid his cock out so just the head lay buried within her wetness. Then he pushed it all the way back in again. Amanda went weak in the knees. Her eyes rolled back in her head. She let out a loud groan.\n\nAgain, Jason sank his long, hard cock into her pussy. And again, Amanda cried out. Her body starting to shudder. She couldn't concentrate on eating Danielle's pussy. She was too distracted by her advancing orgasm. \n\nDanielle sat up, smiling at Jason.\n\n\"Oh yeah,\" she whispered. \"Fuck her. I know you want to fuck her so bad.\"\n\nShe took Amanda's breasts in her hands, fingering the nipples. They were like ripe grapes.\n\nAmanda looked up at Danielle. She was drunk with pleasure. She tried to kiss Danielle on the lips but Jason pressed his cock into her again and she couldn't control herself. Her body was starting to shake.\n\nDanielle took Amanda's face in her hands, gently, and place her full lips against hers, kissing her tenderly.\n\n\"Is this what you want? Are you getting what you want?\"\n\nAmanda could only nod. She was trembling. On the verge of coming yet again. Danielle lifted her to her knees, and kissed her again on the lips. Jason was on his knees behind her. Amanda leaned against him, her hands reaching back to feel his muscular ass. Danielle could clearly see Jason's big cock entering her from underneath.\n\nDanielle's hands were on Amanda's body, touching her breasts, her face, her thighs, and her pussy. Jason was pumping her from behind, sliding all the way in and out. Danielle was so close she could almost feel his cock entering HER, spreading HER, and it made her so hot.\n\nAmanda's body, meanwhile, was absolutely on fire. Thankfully, she didn't have to support herself, as she was being held up by Jason's strong hands, not to mention his hard cock. Danielle was pressed against her front, her breasts brushing against Amanda's breasts, touching her, caressing her. \n\nDanielle was face to face with Amanda, kissing her, whispering to her.\n\n\"Do you like the way Franco fucks? Doesn't he fuck good? Oh, he's wanted to fuck you so bad. Feel how hard he is. You make him so fucking hard.\"\n\nJason started to lift and lower Amanda onto his hard shaft. Amanda reached back and felt his strong shoulders. It felt so good to be in his arms. And to feel Danielle touching her. Danielle began to kiss Amanda's neck, her tongue gliding over her skin. Amanda arched her back.\n\nJason leaned back so Amanda could lay against him. Still he pumped his pelvis, stroking her, again and again. Danielle began to kiss Amanda's breasts, taking her nipples into her mouth, licking them, sucking them.\n\nJason slid his legs around so they extended straight out and he rested his weight on his hands. He leaned back, with Amanda laying against his broad chest. She was sitting on him, laying on him really, feeling his hard cock deep inside her. Amanda's hands were in his hair, caressing him. Danielle was licking her breasts, her hands between Amanda's legs feeling the confluence of her and Jason's bodies. \n\nJason raised his hips, sliding his cock in and out of her. Danielle's fingers found the point where his cock and her pussy met, and navigated to her clit. She rolled the swollen flesh with her fingers like a marble in oil. Amanda's body started to shake.\n\n\"That's it,\" whispered Danielle. \"Come, baby. We've wanted to do this for so long. Come for us, baby.\"\n\nAmanda's orgasm was near. Her eyes fluttered open. Danielle's were fixed on hers.\n\n\"I want you on top of me,\" Amanda blurted. \"I want you to fuck me too! You and Franco both!\"\n\nAmanda paused and then pushed on Jason so he lay on his back, with Amanda laying face up on top of him. Danielle lay on top of her, her hand working Amanda's pussy, her breasts pressed against Amanda's breasts. She brought her lips to Amanda's ears.\n\n\"Yes, that's Franco FUCKING you. And me, Isabelle. We're both FUCKING you. We've wanted to FUCK you for so long.\"\n\nAmanda moaned loudly.\n\n\"Oh, yes\" Amanda cried. \"Fuck me. Please. Fuck me.\"\n\nDanielle rubbed her clit with her fingers. She was so close.\n\n\"We knew you were watching us all the time. It made us so hot. We wanted you to join us. Just like this.\"\n\nAmanda was crying out now.\n\n\"I wanted to join you too! I didn't know if you'd want me!\"\n\n\"Oh, Amanda. We wanted to you so bad. All those nights. We wanted you in our bed. With us. So we could do this. Oh, yeah. Franco wanted to fuck you. I wanted to fuck you. He used to BEG me to let him fuck you. I want to fuck her so bad, he'd say. She's so sexy. I want my cock deep inside her pussy. Oh, Amanda. Feel how much he wants you. Feel his cock. His big Italian cock. You make him so hard. YOU do it.\"\n\n\"Is it true?\" Amanda cried. \"Did you want me? Did you want to fuck me? You and Franco?\"\n\n\"Tell her, Franco. Tell her. Did we want her to join us? All those nights? Did we want her to slip into our bed? Naked. So both of us ... together ... could fuck her?\"\n\nJason turned his face so his lips where barely touching Amanda's ears.\n\n\"Si,\" he whispered. \"Si, Bellissima. Ti amo. Ti amo.\"\n\nA smile spread across Amanda's face. Jason pushed himself deep inside her. Danielle vibrated her clit. And Amanda came. She came with an orgasm beyond anything she had ever experienced in her life. \n\nAnd then, only then, did Jason finally let himself go, letting the full force of his orgasm build up like some primordial volcano, spewing his creamy cum deep into Amanda's pussy. Again and again, he exploded, filling her insides with his seed. \n\nAnd so the three friends lay together. Amanda sandwiched between the others, coming again and again as Danielle kissed her and Jason whispered sweet Italian nothings in her ear.\n\nIt was the beginning of a beautiful three-way relationship, one that started in lust but soon developed into a deep friendship. They would see each other often that summer, taking turns acting out each other's fantasies and, in the process, achieving a level of sexual ecstasy they had never known before. And while they eventually went their separate ways, back to school or to pursue their careers, they never forgot what had transpired that summer, or how it had made them feel."
    ],
    "authorname": "petitmort",
    "tags": [
        "cunnilingus",
        "fellatio",
        "voyeurism",
        "threesome"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-concert-ch-05"
}