{
    "title": "The Year of the Cat Ch. 22",
    "pages": [
        "100% Fiction. All sexualized characters are adults. \n\nMatt stepped out from Janice's bedroom into the bright, morning dining room. Linda stood at the sink, rinsing breakfast plates. She was wearing a red, checkered pattered blouse with frills at the shoulder and a plunging scooped neckline, buttoned by several beleaguered buttons; the top three already dispatched from duty.\n\n\"Good morning, handsome!\" Linda cooed, leaning forward to give Matt a tender peck on the lips. Her bare breast tops mashed delightfully against his chest and arm. \n\n\"Mmmm! Mornin'!\" Matt smiled. \n\nJanice and Tracy sipped their coffee, nearby at the dining room table. Janice stood and bounced over to him. She had on a pair of dark athletic shorts and skin tight Henley style shirt that clung to her curves with barely a wrinkle. She gave Matt a warm embrace and wrapped his lips in a long lingering kiss. \"Good morning, my bedroom rockstar! Last night was fucking incredible!!\" \n\nMatt easily recalled taking Janice upstairs after his long, lust drenched ride home from the amusement park with Tracy on his lap, last night, and making love to her with a particularly inspired enthusiasm. \n\n\"It sure was, baby!\" Matt smiled. \n\n\"I feel like I should bake some apology cupcakes for your neighbors.\" Tracy remarked. \"You two were LOUD!\"\n\n\"Mmm! I want in on that cupcake action too!\" Linda exclaimed. \n\nTracy slowly stood to her feet and faced Matt. Her arms were extended in expectation. \"Well... where's my 'good morning' kiss?\"\n\nMatt tried not to gawk at Tracy's naked form, easily discernible from the long, translucent night shirt bathed in the morning sunlight. \n\nHe smiled as he approached, embracing her, gently. Matt was surprised by a open mouthed kiss with a wet wriggling tongue exploring his. \n\n\"Good morning, Matty Pants!\" she said, giggling as she squeezed his butt through his grey sweatpants with her open palm. \n\nJanice approached with a hot cup of freshly poured coffee, handing it to Matt and then joining her sister by palming his other tight ass cheek. \n\n\"Got anything planned today, hun?\" Janice cooed to Matt.\n\nMatt thought briefly. \"Tracy and I were going to try to get her naked pictures off of the internet, then I was going to look through the wanted ads to find some work.\"\n\n\"We'll look together for that too.\" Tracy said, patting his arm. \"I need to find some income as well.\"\n\n\"Something will come about for you two.\" Linda said in a cheerful tone. \"Just remember to keep an open mind when you're looking.\"\n\n\"Well!\" Janice exclaimed. \"In the meantime, I guess that makes me the happy bread winner of the family! I've got a few emails to send, so I'll let you all have at it. Good luck with your pictures, Tracy.\"\n\nJanice kissed Matt before retreating to her room to work in private. Linda finished the dishes and then disappeared to Matt's bedroom, to go about preparing her suitcase to depart the following day, leaving he and Tracy alone.\n\n\"Okay.\" said Tracy opening up her laptop and taking a seat next Matt at the dining room table. \"So... how do we find out where my pictures ended up?\"\n\n\"Well, as far as I know, a Reverse Image Search is your best bet. I just need to find one of your photos online.\"\n\n\"Here...\" Tracy said, her fingers quickly gliding over the keys of her laptop. \"This is where I saw it... Spoiler warning: I'm naked... duh.\"\n\n\"Got it.\" Matt chuckled. The image opened on the screen. Just as she said; there was Tracy, in full nude glory. The image displayed her standing in front of an open shower curtain. Her unbelievable curves were accentuated by her sensual expression and pose. \n\n\"Whoa...\" Matt breathed. \n\nTracy prodded him, annoyed. \"Focus, Puffy Pants. They're just boobs.\"\n\nMatt blinked. \"Sorry... ok, here we go.\" Matt selected the file and pressed 'Enter'.\n\nA few seconds elapsed before the results were displayed. Matt gulped upon reading the figures. \n\n\"Oh... shit.\" he said, almost unconsciously. \n\n\"What!?\" Tracy exclaimed. \n\n\"Uhhh... this might be above my ability to fix, Tracy. Your uhhh... pictures have... sorta become... rather popular.\" Matt said, sheepishly. \n\n\"Oh fuck...\" Tracy almost whispered, mortified. \"How bad is it?\"\n\n\"You'd have an easier time separating pee from pool water at this point.\" Matt replied, flatly. \n\n\"What...the...fuck?\" Tracy gasped. \n\n\"Yeah... just this picture alone has already been shared thousands of times and there's hundreds of comments about it already.\"\n\nTracy was aghast as she covered her face in shame. \"Oh god... I bet I'm being eviscerated. 'Look at this freak of nature!' they're probably saying!\"\n\n\"Mmm... not that I see.\" said Matt reading over the comments. \"most just want to know where they can find more pictures of you. There's about a dozen 'holy shit's in a row with a ton of 'who is she?'s and a lot of 'fucking amazing's.\"\n\nTracy uncovered her face. Her countenance was confused. \"What?! Let me see...\"\n\nMatt slid the laptop over to her. She leaned close to inspect the comments. Several quiet moments passed as Tracy looked over every single comment on the thread. Matt caught several half smiles glide across her face as she read. \n\n\"Wow.\" Tracy said, finally. She seemed much less agitated. \"You guys are so WEIRD about boobs!\"\n\nMatt eyes had settled again on Tracy's nude image open on the screen. He found her erotic pose truly captivating. Out of the corner of her eye, Tracy noticed Matt's attention held to the screen. she cleared her throat loudly to snap Matt out of his trace. \n\nMatt blinked with a shade of red forming. \"S..sorry.\"\n\n\"What is it about this picture that's such a big deal?\"\n\nMatt coughed nervously. \"Well... objectively speaking... it's just a really well arranged photo. I mean, the lighting, in particular, is super effective in creating these interesting shapes right here on your hip... and then the same shape repeats right here beneath your left breast. Mmm! Damn, just beautiful! And this pose you chose is so glamorous and sexy. It fills the frame with all these lines that just naturally guide your eyes around the photo. Not to mention that your completion is flawless and smooth, how your wet skin is reflecting the light and you have an expression on your face that looks so vulnerable, yet seductive at the same time... it's really hot!\"\n\nTracy was sitting back in amazed silence, listening to Matt go on and on about her photo. \"Whoa... you sound like a damn expert!\"\n\nMatt blinked, becoming aware of his over enthusiasm. \"Oh... hehe. I'm no 'expert'... I just know what I like.\"\n\n\"Well, just so you know, I was two seconds from busting my ass over the edge of the tub when Joey took that photo. THAT sure as hell wasn't 'glamorous'!\" Tracy giggled. \n\nA moment passed where the two sat beside each other, looking at the photo on the screen. \n\n\"What's a 'FAN' page?\" Tracy asked. \"I keep seeing people asking if I have one and how much it is.\"\n\n\"'FAN' stands for 'Fan Access Network'. Basically, it's a website where 'models' can post photos and videos and 'fans' can pay a monthly subscription fee to view them.\" Matt explained. \n\n\"Wow...\" Tracy said, almost under her breath. \"Is there any money in it?\"\n\n\"Uhhh... hell yeah! I just read about some FAN model that just bought a car within a month of opening her page!\" Matt chuckled. \"Makes me wish I had titties!\"\n\nTracy scoffed. \"You would never leave your room if you had titties! You'd be playing with them all day!\" she said, giggling. \n\n\"Probably right.\" Matt grinned. \n\nJust then Janice's bedroom door burst open. \"Boobie emergency!\" she exclaimed, rushing into the dining room. She was attempting to clasp the back of her beige utility bra closed behind her back. Her huge breasts were ballooning against and over the undergarment.\n\n\"God! I just GOT this bra at Thanksgiving. Don't tell me I'm busting out of it already!\" Janice grunted with her laborious task. \n\nMatt assisted Janice, doing up the five hooks in the back. She turned to face him. \n\n\"Ooo! Daaamn.\" Tracy winced, regarding her sister's ill fitting brassiere. \"Yeah... time to retire that one too.\"\n\nMatt was gobsmacked by how significantly larger his girlfriend's breasts had grown. He remembered when she first bought the bra; how the cups seemed to encase her tits fully and securely. Now, the tortured undergarment resembled the J cup bra that she wore when she first arrived to his apartment. Janice's breasts bulged hugely over the tops of her cups, pushing the brassiere outwards, causing spillage beneath as well. \n\n\"Dang!\" Janice cried. \"I actually have to go in to work for a meeting tomorrow! I can't go looking like this!\"\n\n\"Try this one.\" Linda called out, tossing her black, M cup. \"If it fits, you can keep it.\"\n\n\"Thanks, but even THIS looks small! I need to go back to Dee Dee's to get properly fitted again.\"\n\n\"Ooo! Can I go?\" Tracy asked. \"I could use a good fitting bra for job interviews.\"\n\n\"How about I take you both?\" Linda suggested. \"It'll be my treat to you before I head home.\"\n\n\"Ok, Mom! Thanks!\"\n\n~~~~~~~~~~~~\n\nThe bell at the front door of the specialty brassier shop rang as the three women entered. \n\n\"Welcome to Dee Dee's... oh! Welcome back, ladies!\" the friendly, middle aged woman exclaimed, recognizing Janice and Linda. \n\n\"Hello again!\" Linda replied. \"We we're hoping to get another fitting done today, but I think we're going to browse around for a minute beforehand.\"\n\n\"Oh! Well, take your time! I'll be here whenever you're ready.\"\n\nThe women casually pursued through the beautiful brassieres displayed on the wall in various sizes and colors. Above their heads, a closed circuit security camera followed the ladies movement, unnoticed. \n\nSuddenly an amplified female voice spoke over the store public address system. \"Linda Paige!? Is that you?!\"\n\nLinda's eyes were wide as they scanned her surroundings, looking for the owner of the familiar voice.\n\n\"As I live and breathe...\" a woman's voice exclaimed from the open door marked 'Office' at the rear of the store. \"Gentlemen, please guide your attention to the main stage and put your hands together for the incredible JUUUUICY LUUUUCY!!\"\n\nLinda's color was draining from her amazed face at the mention of that name. The thin, middle aged woman approached her with a wide smile. \n\n\"Oh...my... GOD!\" Linda exclaimed, recognizing the woman immediately. \"Dierdre Collins!!\" \n\n\"Dierdre Franklin, now!\" the woman said with a smile, holding up a left hand, displaying the gold band on her ring finger. \n\nLinda and Dierdre squealed in joy as they hugged each other tightly. \n\n\"Jesus, Linda!! You still look AMAZING!\"\n\n\"So do you, Dee Dee!\"\n\n\"Well... I'm still kicking anyways.\"\n\nDierdre looked over Linda's shoulder to Janice and Tracy standing nearby. \n\n\"Oh... my god! Are these your 'little' girls?\" \n\nLinda smiled, proudly. \"Yes. This is Janice and Tracy.\"\n\n\"Oh my!\" Dierdre exclaimed, looking over the girls. \"Woman, you have some strong genes! Your daughters are just as gorgeous as their mamma!\"\n\n\"More gorgeous!\" Linda beamed, giving the young women a proud smile. \n\nDierdre smiled. \"Oh my, let me tell you, girls... your mom used to have the guys lining up around the block to get into the club!\"\n\n\"The club?\" Tracy asked. \n\nLinda had a sheepish smile on her face. \"Uhh... yeah. Dee Dee and I worked at a Gentlemen's Club together... years ago. \"\n\n\"You used to be a stripper, Mom?!\" Janice exclaimed, in disbelief. \n\n\"An 'Exotic Dancer', dear.\" Dierdre corrected. \"...and the best one in the whole region too!\"\n\n\"You never told us this, Mom!\" Tracy exclaimed with a amazed, wide eyed look. \n\nLinda blushed. \"You two were weren't even teenagers yet; too young to understand what your mom had to do for money... and by the time you WERE old enough, I just didn't know how to bring it up.\"\n\n\"We were the dynamic duo in those days.\" Dierdre said, patting Linda's rear end. \"Dee Dee Deluxe and Juicy Lucy!\"\n\nTracy and Janice couldn't stifle their giggling. Linda blushed, joining them in laughter.\n\n\"So... what have you been up to all these years, Linda?\" Dierdre asked. \n\n\"Trying to make ends meet, mostly. I've just recently come into some money and now I'm figuring out my next step...\" Linda said. \"I was toying with the idea of moving to this area... to be closer to my daughters... and to maybe open a massage studio.\"\n\n\"Oh! Mom! That would be great!\" Janice exclaimed. \n\n\"Massages. Hmmm.\" Dierdre mused aloud. \"Ms. Jacobson?\" she called over her shoulder to the middle aged sales lady. \n\n\"Yes, Dee Dee?\" \n\n\"Tell me: what, would you say, is the most common complaint you hear from our customers?\"\n\n\"Oh... that's easy, Dee Dee: 'Boy, oh boy, my back is KILLING me!'\"\n\n\"Hmmm! Interesting!\" Dierdre smiled at Linda. \"You know what else is interesting? The 'For Lease' sign on the empty storefront next door.\"\n\nTracy's eyes widened. \"Oh my god, that's PERFECT, Mom!\"\n\nLinda blinked, as the gears in her head began to spin. \"My goodness! That's... not a bad idea.\"\n\n\"Food for thought!\" Dierdre spoke with a wink. \"I sure wouldn't be opposed to a collaborative venture.\"\n\n\"We will definitely be in touch, Dierdre!\" Linda exclaimed. \"So... how have you been?\"\n\n\"Managing this store has kept me busy. Had a little scare with breast cancer a few years ago, as you could probably tell.\" Dierdre said, looking down at her small breasts in her floral print business blouse. \"...but I beat it with a full double mastectomy. Now I've got these cute little implants and I can wear ANYTHING I want and it's wonderful!\"\n\n\"Oh my gosh!\" Linda exclaimed. \"That's so scary!... I had NO idea, honey. I'm sorry I wasn't there!\"\n\nDierdre dismissed her friend's guilty self conviction with a wave of her hand. \"I had my husband, Kyle with me the entire way. He's a rock. He never left my side once.\" she smiled. \n\n\"Oh, Dee Dee! I'm so glad you're better!... Congratulations! You never did take shit off of anyone, why should cancer be any different?\"\n\n\"I'd be lying if I said I didn't miss the 'glory days.\" Dierdre sighed, her eyes falling upon Linda's large, round breasts. \"...but I can't help but to be thankful for what I have: more time to spend with my beautiful family.\"\n\n\"I'm so happy for you, Dee Dee!\" Linda squealed, giving her friend a warm embrace. \n\n\"So!\" Dierdre said, taking a step back and getting a long, full look at Linda's, Janice's and Tracy's busts in turn. \"I assume you're here for a fitting... Ms. Jacobson? Could you bring out a... 42 M cup, a 38 N cup and... my goodness, a 36 P cup? Two each, please.\"\n\n\"Right away, Dee Dee.\"\n\nJanice and Tracy blinked in surprise. \"You can just tell by looking at us?\"\n\n\"That's always been Dee Dee's talent.\" Linda chuckled. \"She was truly born to own a bra shop one day.\"\n\nThe six undergarments that Ms. Jacobson had brought the women not only fit perfectly, but were supportive, feminine and beautiful.\n\n\"Wow!\" Linda exclaimed, regarding herself in the mirror. \"I've always hated bras... No offense, Dee Dee, but, I'll be damned if I don't look hot in this!\"\n\n\"Sure do, Mom!\" Tracy said. \"We ALL do!\"\n\n\"Glad you approve!\" Dierdre smiled. \"You're getting the Family Discount for the lot of them.\"\n\n\"Thank you so much, Dee Dee!!\" Linda exclaimed. \n\n\"My pleasure, neighbor!\" Dierdre said with a wink. \n\n~~~~~~~~~~~~\n\nMatt, taking a break from job hunting, was preparing a cold cut sandwich in the kitchen, when the three women returned from their late morning outing. \n\n\"Hey, babe.\" Janice kissed him to greet. \n\n\"Hi! How'd shopping go?\" Matt asked, noticing the three women seemed somewhat more somber, reflective, as they entered, carrying their bags.\n\n\"Good. Real good...\" Janice replied. \"Uhhh... Matty, honey? We have a favor to ask you...\"\n\n\"Yes, baby?\"\n\n\"We want you to check our breasts for lumps.\" Linda said. \n\n\"Oh...\" Matt's eyes widened. \"Like for cancer?\"\n\n\"Yes. For all three of us.\" Tracy added. \n\n\"We've all checked each other... and we all feel okay.\" Janice said. \"We just want a second opinion.\"\n\n\"Of course!\" Matt said. \"I'll just wash my hands real quick.\"\n\n\"I'll go first, since I'm the most susceptible.\" said Linda, pulling her blouse over her head. \"Now, Matthew... this is a SERIOUS exam. No boners!\"\n\nMatt gulped as he scrubbed his hands. He hadn't even begun and the very sight of Linda's bare breasts had his cock lengthening down his leg. \n\n\"She's just kidding, baby.\" Janice cooed, stepping behind him and running her hand across the front of his sweatpants. \"We know you'll take it seriously. You don't want anything bad to happen to our boobies.\"\n\n\"Uhhh...Or to the people they're attached to!\" Matt added. \n\nTracy smiled warmly at Matt, drying his hands.\n\nLinda approached Matt and arched her back, thrusting her gorgeous, round breasts forward. He attempted to swallow his nerves, trying not to focus on the two daughters watching him massage their mother's bare tits, while sporting a full on erection. \n\n\"Don't be your usual 'scaredy-cat' self, Matthew...\" Linda said. \"Squeeze those things!\"\n\n\"I'd hate to hurt you, Ms. Paige!\" Matt said, concerned. \n\n\"For the last time: it's MOM! Now... go ahead and go crazy. I'll tell you if it's too much for me.\"\n\nMatt gulped as his fingers disappeared into Linda's abundant softness. He pressed at her breasts with more strength than he had ever allowed before, rotating his wrist to add a quarter sized circular motion. Matt went about patiently covering Linda's vast amount of breast mass with his deep probing digits. Her soft tits were consistently pliable throughout their entire massive volume, no irregularities were detected. \n\n\"You seem healthy to me, Mom.\" Matt said, looking relieved. \"You ought to go see a real doctor as well, though.\"\n\n\"I will. Thank you.\" Linda said softly, kissing him on the lips. \"I love you, my Son.\"\n\nMatt felt a wave of goosebumps wash over his body at Linda's warm sentiment. \"I... l-love you, M-Mom.\" He fought back his eyes from suddenly welling with tears. \n\n\"My turn!\" Janice exclaimed, hopping forward, her enormous breasts almost bounding out of the top of her tank top in the process. She grasped Matt by the wrist and led him to the living room couch. Spinning him around, then nudging him to a seated position, Janice crawled onto Matt's lap and nestled her shorts covered snatch against his rock hard erection. \n\n\"Okay... I'm ready for my Boobie Exam, Doctor~\" Janice cooed in a playfully exaggerated sensual voice. She tugged at the bottom hem of her tank top, pulling the shoulder straps over their perch and allowing her giant tits to tumble free from the low cut collar. \n\nMatt shuddered in ecstasy as Janice began a slow, steady grind against his cock. She leaned forward, crowding his face with her massive breasts. \n\n\"I need a Taste Test first, Doctor. Just for good measure!\" \n\nMatt's eyes looked over to Tracy, who had taken a seat beside him on the couch, waiting for her turn. Before Janice's gigantic tits obscured his sight completely, Matt saw Tracy lick her lips in anticipation. \n\nHe felt Janice's erect nipple and opened his mouth to suck, enjoying long sweeps of his tongue against her sensitive areolas. \n\n\"Mmmph!\" Matt exulted in joyous rapture. \n\n\"Jesus, you two!\" Tracy exclaimed in mock disgust, despite her inability to look away. \n\nJanice smiled and leaned back, allowing Matt room to properly examine her breasts. \n\nMatt sighed with a grin, looking back and forth at Janice's gorgeous tits. He raised his hands and once again began massaging tiny circles all over Janice's entire breast volume. \n\n\"Mmm, Doctor! You're going to have to give me a Coochie Exam later!\" Janice cooed. \"I'm overdue for my COCK injection!\"\n\n\"Fuck...!\" Matt croaked, feeling his dick lurch, happily. \"Uhh... ok. You passed your Boobie Exam, baby. I'll schedule your Coochie Examination for... bed time tonight?\"",
        "\"This afternoon? Great!\" Janice exclaimed, hopping off of Matt's lap. \n\nTracy was smiling at Matt's tit drunk grin. He attempted to stand up from the couch in order to examine Tracy, but she crouched forward quickly, climbing upon Matt's lap, just as Janice did. \n\nTracy gave Matt a seductive wink. \"I like this ride! It was the funnest one of the whole day, yesterday!\"\n\nShe didn't hesitate one moment before her tight T-shirt was being peeled from her body, up over her head. \n\nMatt's mind could only think of one word: \"Damn...\" \n\nTracy's astounding, naked breasts in full daylight encompassed Matt's entire field of vision. His mouth went completely dry from hanging open in slack jawed amazement. Her tits were so large and gorgeous that Matt hesitated to mar their perfection with his hands.\n\n\"Want to kill two birds? I have this skin cream to prevent stretch marks.\" Tracy said, procuring a stout jar of scented balm. \"Will you rub it in while you examine me?\"\n\n\"O... okay.\" Matt croaked. \n\nTracy fished a large dollop from the jar and placed a generous blob of cold, white cream in Matt's open hand. He rubbed his palms together to warm the ointment. \n\nAlthough it was hardly necessary, Tracy arched her back slightly to allow Matt's hands to easily access her massive tits. She raised her arms, entwining her fingers behind her head. His slick hands reached up and sank into her softness, spreading the lotion over Tracy's larger than life breasts. \n\n\"Mmm!\" Tracy cooed, quietly to Matt. \"If only those internet boys could see this! I bet they'd be as hard as YOU are right now!\"\n\nMatt almost didn't hear her. He was utterly captivated by the complete power of Tracy's glimmering gorgeousness as he massaged the ointment into her flawless, pale skin. His dick spasmodically hopped against Tracy's covered snatch. She answered by subtly moving her hips, sliding her crotch against his thick, erect penis. \n\n\"Damn!\" Tracy exulted in a whisper. \"If only you were just a little smaller... I would SO fuck you right now!\"\n\nMatt had to resist the urge to cum in his pants, right there on the spot. His mental girding barely withstanding Tracy's increasing pressure and tempo against his dick. \n\n\"I don't know why...\" Tracy breathed, allowing a blissful moan to escape. \"I'm just so fucking HONRY lately! Like... ever since this morning after seeing ... oh FFUCK YES RIGHT THERE!!\" Tracy whisper screamed, suddenly. \n\nShe bore down heavy on his lap, gyrating her hips, mashing her clitoris against Matt's wall of penis. \n\n\"Oh...! Ohh...!! Mmm! Mmmmm! OH MY GOD!!\"\n\n\"Shit!!\" Matt cried, feeling as though Tracy's intense orgasm was drawing out his own. Suddenly, his dick lurched out a thick offering of sperm to the insides of his underwear. Tracy and Matt's wet spots mingled between them. \n\n\"Oh... my... fuck.\" Tracy wheezed. \"You made me cum again... That's unheard of for me!! What the hell do you have going on down there, Matty Pants!?\"\n\nMatt chuckled, bashfully. \"Well, right now it feels like there's a baby shower going on.\"\n\nTracy guffawed in surprise. \"You came too?\"\n\nMatt nodded, bashfully. \n\n\"Wow! So... I'm, like... hot and stuff, huh?\" she said, turning red. \n\n\"Uhh... yeah, Tracy... duh!\" Matt chuckled. \n\nShe giggled through her shyness. \n\n\"Do you think anyone would actually pay to see these?\" Tracy said, pushing Matt's hands into her shimmering, soft tits. \n\n\"They're... incredible, Tracy.\" Matt said with sincerity. \"Yes! I don't think you would have any problem finding people willing to fork over some cash to see these... AMAZING tits of yours!\"\n\n\"Hmm...\" Tracy mused. \n\nAfter several, drawn out minutes of Matt's thorough examination of Tracy's breasts with his fingers, he finally relinquished his hold. \n\n\"You feel so good!... I mean, so healthy.\" Matt stammered. \n\n\"Thank you, Doctor.\" Tracy cooed. \"You better clean up for your next appointment!~\"\n\n~~~~~~~~~~~~\n\n\"Oh!! Fuck yes, Doctor!!\" Janice shouted. \"Give me that good medicine! Oh... yesss! That good cock injection!!\"\n\nMatt's dick slammed into Janice's wet pussy over and over. Afternoon sunlight streamed through the open windows as the two young lovers fucked with celebratory zeal. \n\n\"I love giving you this medicine!!\" Matt grunted. \n\n\"Mmm! Yesss! Oh god, I love it too, honey!! I don't ever want to get better!! I want to take this injection forever!\"\n\nMatt felt his balls begin to churn, ready to launch another batch of cum into Janice's quivering vagina. \n\n\"Oh ffffuck!!\" Matt shouted as his legs started to shake. \n\n\"Yess, baby!\" Janice exclaimed. \n\nMatt slumped forward, resting his head on Janice's sweat damp breasts. They both smiled as their breathing returned to a normal pace. \n\nMatt pulled his thick penis slowly from Janice's vagina. He noticed a darker shade on his skin and a trickle of blood. \n\n\"Oh jesus!\" Matt cried. \"Are you ok?! Did I do that?!\"\n\nJanice smiled, bashfully looking down. \"I'm fine, honey. It just means we're not pregnant.\" \n\n\"Oh...\" Matt blinked. \"I thought your period wasn't supposed to start until next week.\" \n\n\"Tracy must be affecting my cycle. She's the alpha of our little brood.\" Janice said, quickly raising herself from the bed and jogging to the bathroom. \n\n\"Oh... well, do you feel okay, otherwise? Is there anything I can do to make you feel more comfortable?\"\n\nJanice leaned her head out from the open bathroom door wearing a warm smile. \"I'm fine, my love. Thank you.\"\n\n\"Well... okay.\" Matt said, hesitantly. \"Are we doing something tonight for your Mom's last evening here?\"\n\n\"She mentioned wanting to keep it a low key tonight.\" Janice said, unseen, inside the bathroom. \"Maybe I'll order in for us and we'll all have a relaxing night at home.\"\n\n\"That sounds really nice. I'll go out and pick up some wine later.\"\n\n\"Mmmm! Wonderful!\" Janice stepped out of the bathroom, arms outstretched in a wide open yawn. \"I think your medicine is making me sleepy. Mind if I take a quick cat nap?\"\n\n\"Of course not! Pleasant dreams, beautiful!\"\n\n~~~~~~~~~~~~\n\nLater that day, as the afternoon progressed quietly, Tracy sat at the dining room table with a newspaper spread open. A red marker circled around potential employer candidates. \n\nJanice and Linda were both napping in their bedrooms.\n\nJust then, Matt entered through the front door, carrying a paper shopping bag. \n\n\"Hey, Trace. How goes the search?\"\n\n\"Ok... not great. Whatcha got there?\" Tracy asked, eyeing Matt's bag. \n\n\"Just some wine for tonight. I also picked up some tampons, ibuprofen and sticky heat wraps for Janice. There's some in here for you too.\"\n\nTracy scoffed, shaking her head. \"Matt... you are SO weird!\"\n\nMatt blinked, not at all expecting her response. \n\n\"Hot guys like you are supposed be assholes...\" Tracy smirked. \"and I think you might be the furthest thing from an asshole I've ever met.\"\n\n\"Thank you.\" Matt blushed, setting the items in front of Tracy's paper. \"What's the point of being an asshole anyway, huh?\"\n\n\"Who knows? To make up for inadequacies elsewhere, maybe?\" Tracy said, making an obvious nod towards Matt's crotch. \n\n\"I'm fairly certain that assholes come in all shapes and sizes.\" Matt laughed. \n\n\"Hmmm. All I'm saying is: you're chill as fuck and you have a giant dick- there's gotta be a connection!\" she said, keeping her eyes focused on his pant fronts. \n\nMatt chuckled. \"I was just dealt a fortunate hand... it's not like I made the right decisions in life to get this thing.\" Matt said, shimmying his hips, playfully letting his dick wiggle in his loose pants. \n\n\"Well, at least you're using it to spread joy. I swear, I've known Janice since she was born and I've NEVER seen her so happy... like ever!\"\n\n\"Well, that makes two of us, then. I didn't even think I COULD be as happy as she makes me!\" Matt said, shaking his head in wonder. \n\n\"Awww!\" Tracy cooed. \"...Y'all make me wanna puke.\"\n\nThe two laughed together.\n\nTracy continued to look over the 'Help Wanted' ads on the newspaper page. \n\n\"Oh! Look here...\" she called to Matt, who was pouring himself a glass of water. \"There's a waitress position open, right close by, on the Avenue. Ever been to this place?\"\n\nMatt recognized the restaurant immediately; it was one of his favorite places to linger as a single man. Not only were the chicken wings delicious and the beers cold and cheap, but the standard uniforms that the waitresses were required to wear allowed customers a thrilling spectacle, as well. Matt remembered almost falling into infatuation with a particularly busty waitress who worked there almost a year ago. Her double 'D' cups were on effortless display in her ridiculously tiny halter top, unbuttoned completely and tied at the base with a small knot. Her bare midriff led down to a minuscule, pleated micro skirt. All it took was for her to lean over slightly and her delightfully round ass cheeks would stare at him beneath the plaid garment. Matt was honestly amazed that the place hadn't been shut down by some sexual discrimination lawsuit. \n\n\"Yeah... I know the place. Uhhh... you don't want to work there.\" Matt said, flatly. \n\n\"Why not?\"\n\n\"They make their waitresses wear these skimpy little uniforms and I can only assume you aren't eager to show any more of yourself.\"\n\nTracy's smile instantly dropped, her head lowered in shame. \"Ummm... about that...\"\n\n\"...what?\"\n\n\"I did something crazy, Matty.\" she practically whispered. \n\nMatt's brow furrowed in concern. \"What?\"\n\n\"I... uploaded a naked selfie online!\" \n\n\"WHAT?!\" Matt's voice whisper shouted. \n\nTracy began to giggle. \"I couldn't resist! All those guys were going crazy for it!\"\n\n\"Are you sure that was a good idea?\"\n\n\"Probably not, but it was already too late... like pee in pool water, right? I just thought, 'fuck it'.\"\n\n\"How long has it been online?\"\n\n\"Only about an hour. I bet no one has even seen it yet.\" said Tracy. \"Here. Let's see...\"\n\nTracy looked at her phone screen and flicked her browser open to navigate to the bookmarked web page. Matt watched her eyes widen and her jaw drop in complete shock. \n\n\"Oh... Holy shit!\" Tracy managed to squeak. \n\nMatt's face was a picture of dreaded suspense, waiting for Tracy to speak. \n\n\"Hundreds!!... Almost a thousand upvotes already!!\"\n\n\"Wow!\" \n\n\"These guys are NUTS!\" Tracy said as she brought up her picture. \"Here, tell me what you think of this one, Mr. Expert.\"\n\nMatt took Tracy's phone from her outstretched hand and viewed the image. It showed Tracy smiling, brightly in the frame. She was completely naked, shown from the chest, up. A forearm was draped across her breasts, obscuring her nipples from sight, but causing an amazing cascade of compressed titty meat bursting from above and below her tiny arm. Their gargantuan size struggled to fit in the picture frame, limited by Tracy's extended selfie reach. \n\n\"Damn...\" Matt breathed. \"well, as usual, the subject matter is absolutely gorgeous.\"\n\nTracy blushed. A smile was unable to be repressed from his compliment. \n\n\"...and it looks like everybody agrees with me!\" Matt continued, smiling broadly. \"You are quite popular, Tracy! Have you put any more thought into starting a FAN page?\"\n\n\"I don't know if I'm ready to take that plunge yet.\" Tracy said, nervously. \n\n\"Well, if you do plan on continuing,\" Matt spoke. \"I think I would invest in a selfie stick or something. You're having some trouble fitting inside the frame.\"\n\n\"I know... \" Tracy sighed. \"I wish YOU knew how to take photos.\" \n\nMatt felt a slight sting in his pride. He happened to be fairly proud of the collection of photographs he had captured in the Far East. \n\nHe cleared his throat. \"Well... uhh... if you want to see... I have some pictures I took in Japan. Maybe you'll like them... I don't know.\" Matt was crimson with embarrassment. \n\n\"Oh! Show me, please! I had no idea!\"\n\nMatt presented his phone, open to his camera roll. \"Here. Start at this picture and don't scroll t-\"\n\nTracy immediately swiped her finger to the left and was presented with a full screen shot of Matt's fully erect, naked cock, glistening in the glaring sunlight. It was the first time Tracy had actually viewed Matt's penis, only feeling it's presence, up until now. \n\n\"Oh my god!!\" Tracy gasped. \"Damn, maybe YOU'RE the one who needs a FAN page!\"\n\n\"Yeah... uhh, sorry. Janice took that one... scroll the other way.\"\n\nTracy swiped to the right and began scrolling through the beautiful scenes of tranquil Buddhist shrines and temples, peaceful sculpted zen gardens, Tokyo street shots of beautiful Japanese kimonos, worn by smiling Asian women, eager to display their lavishly embroidered silk garments for Matt's camera. \n\n\"Ok...\" Tracy said only after a few swipes of her finger. \"You might actually be overqualified! These are beautiful!\"\n\n\"Thanks.\" Matt chuckled. \"My interest in taking pictures was kinda sparked over there. It would be fun to keep it going.\"\n\n\"So you wouldn't have a problem with taking naked photos of me?\"\n\nMatt shook his head 'no' emphatically. \n\n\"Hmmm.\" Tracy's eyes glazed over, lost in contemplation, as she stared at the ceiling. A moment passed before she blinked, shaking her head to clear the fanciful daydream from her imagination. \n\n\"Its just a crazy idea, after all.\" Tracy smiled. Matt wasn't sure if she was speaking to him or herself. \"I think I'm going to give this restaurant a chance before I do anything silly.\"\n\n~~~~~~~~~~~~\n\n\"Uhh... you might actually be overqualified, ma'am.\" the nervous day manager spoke to Tracy, trying to keep his eyes in their sockets. They sat across from one another in a cramped, closet-like restaurant office. \n\nTracy had noticed the scowl upon the face of the waitress when she had asked her for a job application. Just as Matt had described, the woman's outfit was astoundingly small. \n\n\"What do you mean? I haven't worked as a waitress in years!\"\n\n\"Uhh... I was talking about your... size. We might have trouble finding you a uniform that'll fit your...umm.\" his eyes trailed down and settled into Tracy's enormous, round breasts stretching horizontal stress lines across her tight shirt.\n\nTracy's eyebrow raised while she attempted to swallow her rising anger. \n\nThe manager came to, suddenly looking up into Tracy's burning stare. \"Uhh! I'll go see if we have any in the back. Wait here for a moment.\"\n\nTracy was left alone in the tiny office littered with paperwork. She could quite clearly hear the sounds of the bustling restaurant outside. Just then, she heard the manager's voice through the thin wall. \n\n\"I need a 4x sized uniform top... maybe 5-\"\n\n\"Are you fucking kidding me, Brad!?!\" a young female voice shouted. \"You're seriously considering hiring that FREAK SHOW!? She's going to take ALL of my tip money shaking those fake tits around my customers!!\"\n\n\"I think they're actually natu-\"\n\n\"I DON'T GIVE A FUCK, BRAD! I'VE WORKED HERE FOR FIVE YEARS!!\"\n\nTracy glowered to herself, hearing the manager sigh and relent. She stood up to leave the tiny office before 'Brad' could return. Opening the door, Tracy came face to face with the scowling waitress. \n\nTheir eyes met and immediately. The waitress knew, seeing Tracy's hurt expression, that she had been heard. A flash of shame crossed her face before stubborn resolve took over again quickly. \n\n\"What?!\" the waitress barked. \n\n\"He's right.\" Tracy said, calmly looking into the woman's eyes. \"They are natural.\"\n\nThe waitress scoffed at her as Tracy passed, walking towards the restaurant exit. \"Try the strip club across town, sweetie~!\"\n\nTracy paused. Her fists were clenched at her side. In her mind, she spun around and punched the waitress directly in the nose. Tracy didn't say a word, in actuality. She, instead, closed her eyes and took a deep breath. Tracy swallowed the urge to tear up and left the restaurant, not looking behind her. \n\n~~~~~~~~~~~~\n\nEntering through the front door of the apartment, Tracy's head hung low. Her mother sat at the dining room table, rolling a large joint. \n\n\"Aww... what's the matter, darling?\" Linda cooed, recognizing her daughter's distress immediately. \n\nJanice poked her head in from her bedroom. \"Dinner is on it's wa-... hey, you ok, Trace?\"\n\nTracy sighed, taking a seat across from her mother. \"Waitressing might not be my calling. Not with THESE things, anyway.\" she said looking down at her chest. \"I was told to try a strip club instead.\"\n\nJanice gasped. \"What the fuck!? Where is this place?! I'm going over there RIGHT NOW!\"\n\n\"Easy there, slugger... \" Linda chuckled. \"It's not the worst idea.\"\n\n\"Mom!...\" Janice huffed. \"Tracy and I both respect what you had to go through to make sure we were taken care of... but, as long as Tracy's living here with me, she's NEVER going to have to resort to becoming 'Juicy Lucy Jr.'!\"\n\nLinda cackled loudly. Matt poked his head in from the bedroom, investigating Janice's raised voice. \n\n\"Being an exotic dancer does get a bad rap, I'll admit it.\" Linda said, smiling at Tracy. \"Why do you think I never mentioned it to you growing up? I doubt you two needed that kind of embarrassment in Middle school. You two were dealing with enough already with your changing bodies.\"\n\n\"Sure, I had to deal with the occasional grimy customer and, in this case, a greasy, low life boss that scammed us out of most the money we made... but it wasn't \n\nALL bad.\" Linda had a glow in her eye recalling her nights in the club, long ago. \"They never talk about how empowering it is to have a huge group of men... sometimes women too... absolutely captivated by your every move...\"\n\nTracy's eyes widened. She suddenly snapped her fingers. \"That's it!\" she exclaimed. \"That's the feeling I felt when I uploaded that naked picture, Matt: ...empowerment!\"\n\n\"Wait... when you WHAT!?\" Janice cried. \n\n\"Yeah... uhhh. Look... I have an announcement, you two:\" said Tracy. \"I've made a decision. I've decided to become an online porno lady... or whatever they're called. And Matty Pants here, is going to help take my pictures.\"\n\nJanice and Linda's mouths hung open in disbelief at what they were hearing. \n\n\"Tracy... I-I just made that speech about you not having to resort to that kind of thing!\" Janice stammered. \n\n\"Yeah, it was beautiful,... but, just look at this!\" Tracy said, showing Janice her phone. \"I'm up to ten thousand 'upvotes' on this one website alone! It hasn't even been a day!\"\n\n\"Ten thousand?!\" Janice exclaimed. \n\nTracy eagerly explained her plan to open a 'FAN' page to the three. It was obvious to Matt that she had been doing her research on the subject. By the end of her excited pitch, both Janice and Linda were hopping up and down in excitement for Tracy. \n\n\"Holy SHIT!\" Linda marveled. \"I wish this kinda thing was around back in my day!\"\n\n\"Are you going to let me do your makeup for you?\" Janice asked, excitedly. \"I can't wait to give you all kinds of makeovers!\"\n\n\"Absolutely!\" Tracy replied. \n\nShe stepped forward in front of Matt. \"Ok... so are you still in, partner?\" Tracy extended a hand to shake. \"You ready to make a bunch of guys' bust a nut?\"\n\nMatt furrowed his brow, giving Tracy a double take, before taking her hand to shake. \"Err... I suppose I am... partner.\"\n\nThe three women had to giggle at Matt's awkward expression. \n\n~~~~~~~~~~~~\n\nThe food arrived to the apartment and the four spent their meal musing ideas for Tracy's FAN page, laughing loudly. \n\n\"I suppose I need to come up with a fake name, huh?\" Tracy said, between bites. \n\n\"'Two-Ton-Titted Tabitha'?\" Janice giggled. \n\n\"'Blossomin' Barbra'~!\" teased Linda. \n\nTracy shook her head wearing a sour expression. She looked over at Matt, who was lost in contemplation. \"Any ideas from Team Testicle?\"\n\nMatt blushed at his idea. \"Uhhm... how about 'Katie Cupcakes'?\"\n\nLinda and Janice giggled, hysterically at his suggestion. ",
        "Tracy had a quiet grin spread across her face. \"I get it! 'cup cakes'... like bra cups! That's fucking CUTE! I love it!\"\n\n\"How far do you plan to go with these pictures, Tracy?\" Janice asked, trying to mask her trepidation. \"Are you going to show EVERYTHING?\"\n\n\"Mmm. Eventually... maybe.\" Tracy cocked her head. \"I want to at least build up a healthy bit of anticipation first!\"\n\n\"That's my girl!\" Linda beamed. \"You're already practicing the first rule of showbiz: 'leave 'em wanting more'!\"\n\n\"What's another way to hold interest?\" asked Tracy. \n\n\"Maybe you could do themed days of the week, like 'Wet Wednesdays', where you're featured in the bathtub or applying oil...\" Matt suggested. \"Or maybe 'Throwback Thursdays', where you could try on bras that you've long outgrown.\"\n\n\"Guys like that?\" Tracy asked, looking perplexed. \n\nMatt's eyes widened as he nodded, earnestly. \n\n\"I still have all my old bras, so I gotcha covered there.\" said Janice. \"... or not covered... or whatever, you know what I mean.\"\n\n\"I'm nervous!\" Tracy giggled. \"I feel like I don't know what to do first. I hope I don't make myself look like a complete idiot.\"\n\n\"You're lucky, Tracy.\" Linda said, running her hand up Matt's leg while he sat beside her in his chair. \"You've got the perfect consultant right here.\"\n\n\"I know, right?\" Janice laughed. \"Who better to steer you in the right direction than a true Boobie Lover!\"\n\n\"You promise to make me look sexy and not like a goofball, Matty Pants?\"\n\nMatt chuckled. \"Doesn't seem like much of a challenge. Of course, I promise.\"\n\nAfter dinner, Linda talked Tracy and Matt into joining Janice and her for a joint smoking session in the living room. \n\n\"Cheers!\" Linda said, passing the large joint to Tracy.\n\nTracy gladly accepted the marijuana cigarette and took a large drag, almost immediately erupting into a coughing fit. \n\n\"Fuck!\" Tracy cursed, catching her breath. \"I'm a lightweight. Here, Matty...\" she said extending her hand towards him. \n\nMatt regarded the joint with mild apprehension. He hadn't smoked in so many months that he could have easily passed a urine analysis test if a new job required it. He considered his options, silently holding the joint aloft. \n\n\"Go ahead, honey.\" said Janice, noticing Matt's hesitation. \"She isn't gonna piss test you, right 'Katie'?\"\n\nTracy shook her head, giggling. \"Nope! And that's just ONE of the many perks of this job!\" she said with a wink. \n\n\"Well... ok, then.\" Matt said before inhaling a long drag of the acrid smoke. He felt the hazy effect on his mental clarity after just a few seconds. \n\n\"We need music!\" Linda exclaimed, standing to her feet and walking over to the record shelf to pursue through Matt's album collection. \"I want to hear a funky groove. Help me find something, Matthew love.\"\n\n\"Sure!\" Matt said, hopping to his feet and sidling beside Linda. \"You can't go wrong with D'Angelo. Let's put this on.\"\n\nMatt cued the album on the record player and turned up the volume. When the soul laden rhythm began and the velvet smooth bass line joined in, Linda couldn't help but to fall into a swaying dance.\n\n\"Oh, hell yeah! This is perfect. Come dance with me!\" she said, reaching out to Matt. \n\nMatt smiled and took Linda's hand. She was startled to be suddenly spun around by the hand, her torso coming to a snug rest against Matt's. \n\n\"Oh my...!\" Linda gasped, feeling his body in thrillingly close contact. The two began to sway together in an intimate dance. Linda's arms reached around Matt's body and clutched his two butt cheeks with her hands, holding on, tenderly. Her head rested on his shoulder, allowing her to sink further into Matt's warm embrace. \n\nJanice traded a smiling glance with Tracy on the couch. She leaned over and secretly conferred with her sister. After a brief discussion, the girls nodded to each other with a grin. \n\n\"Hay Tracy!\" Janice spoke in a voice loud enough to be heard over the music. \"How about we have a slumber party in my room tonight!\"\n\n\"Sure, Little Sister!\" Tracy exclaimed in an announcing voice. \"That'll be swell!\"\n\nMatt looked up at the sisters rising to their feet with a concerned expression. \"Are you o-\"\n\n\"Everything's fine, baby!\" Janice winked. \"Enjoy yourself tonight!\"\n\n\"Goodnight, you two!\" Tracy cooed, blowing a kiss. \n\nMatt's eyes followed her and Tracy walking to Janice's room and disappearing behind the closed door. He became aware of eyes upon him and looked down at Linda. She was smiling up at him with a beautifully serene expression. \n\n\"Hmm! Just you and me.\" she sighed. Matt's eyes grew wide when he felt her grip tighten on his ass, pushing his crotch into hers. \n\nMatt couldn't suppress his excited grin. \"Wow... I bet it would have been something else to see you dance in the club back in the day!\"\n\nLinda chuckled. \"Not to toot my own horn, but no guy ever left one of my private lap dances without a grin plastered over their faces!\" Linda beamed. \n\n\"That doesn't surprise me at all!\" \n\nA wistful smile crossed over her face. \"... but, there was one secret fantasy I was never allowed to fulfill in the club.\"\n\n\"What was that?\" asked Matt. \n\nLinda chuckled. \"I always wanted to take a lap dance the whole way. You know? Get a guy worked up and then fuck the shit out of him, right there on the chair! Besides it being against the law, I just never met someone in the club that I would have wanted to do that with.\"\n\nMatt's eyes raised to the ceiling in contemplation. \"Maybe you'll get a chance to fulfill your fantasy with the rock n' roll cruise coming up.\"\n\nLinda scoffed. \"...Yeah, Matthew! And maybe, one day, someone will buy you a CLUE!\"\n\nMatt blinked, confused. \n\nLinda sighed, rolling her eyes at Matt's befuddled expression. \"Grab a chair and meet me in your bedroom in five minutes.\"\n\nMatt watched Linda turn and exit the living room, closing his bedroom door behind her. \n\nMatt blushed in mild embarrassment at his obliviousness, standing alone while the music continued to play. He puttered about, straightening up the living room for a few minutes. Then, picking up and carrying a chair from the dining room, Matt approached his bedroom door. \n\nJust before he raised his hand to knock, the bedroom door flew open and there stood Linda before him. She had changed outfits, replacing her alluringly tight jeans and blouse with a spectacularly sexy, red lingerie teddy. \n\nMatt's jaw dropped to the floor as his wide eyes traversed her gorgeous curves. The red lace undergarment was stretched tightly over her jutting bust, creating a bulging display of spilling breast fat. Her chestnut hued areola shown effortlessly through the woven lace pattern. Wide, woven holes in the lace along her hips allowed a stunning view of her soft, enticing flesh. \n\n\"Why, hello, handsome!\" Linda exclaimed, taking Matt's hand and leading him to the center of his bedroom floor. \"Welcome to 'The Pink Taco'... I'm Lucy! You from around here?\"\n\nMatt played along with a bashful grin, shaking his head 'no'.\n\n\"Mmm! I didn't think so! I would have remembered a sexy fella like you!\" Linda exclaimed, giving Matt a seductive wink. \"Could I interest you in a private dance, Mister? I promise to make it one you'll never forget!\"\n\n\"H-how could I say 'no'?\" \n\n\"THAT'S what I wanted to hear!\" beamed Linda, brightly. \"Mmm! Have a seat, baby!\"\n\nMatt placed the chair on the floor and sat down. He rested his hands, anxiously on his lap. \n\nMusic from the living room filtered through the bedroom door as Linda approached and began to sway her hips to the sultry tune playing quietly. \n\nMatt's eyes followed her hands gracefully gliding up and down her body. She cupped her breasts in her palms, jiggling their massive, sloshing weight in a repetitive, hypnotizing motion. \n\nLinda then turned around, with her back facing Matt. She bent at the hip, pushing her thong covered ass cheeks towards Matt's lap. His cock had been thickening steadily since Linda had appeared in her negligee, but when he felt her butt cheeks begin to smother his chubby, Matt's dick raced into full solidity. \n\n\"Whoa!\" he heard Linda exclaim. \"Mister... is that what I think it is?\"\n\nMatt grinned. \"Sure is, Mom... I mean, Lucy.\"\n\nLinda stood and turned to face him again. \"Wow!! Your thingy feels BIG, Mister!\"\n\n\"Why, thank you.\"\n\nShe threw her leg over Matt's thighs, straddling him. \"I think I'm gonna really enjoy this dance!\" she cooed. \"I just gotta watch out for the boss.\" She said, casting her eyes around the empty room, cautiously. \n\nSquatting down slightly, Linda stuck her huge, lace covered tits directly in front of Matt's face. With dainty fingertips, she reached up and slowly pulled the red lace obscuring her breasts aside.\n\nLinda's beautiful tits wobbled into view as she lowered her panty clad vagina, pressing down hard against Matt's erection. She bit her lip, feeling the significant thickness grinding against her clitoris. \n\n\"Oh my god!\" Linda gasped. \"Oh... Mister... you feel SO good!\"\n\n\"Damn, Lucy... so do you!\"\n\n\"If you promise not to tell on me, I'll show you how good I REALLY feel!\"\n\nMatt almost gave himself a headache from nodding 'yes' so vigorously. \n\nShe eagerly grabbed Matt's hands and pressed his palms into her huge, soft tits. \n\nHer hips began rocking in isolated movement, sliding her twat up and down Matt's protruding pecker. \n\n\"Fuck!\" Linda breathed, heavily. \"I can't believe what I'm feeling! I have to see this thing!\"\n\nMatt watched Linda slide off of his lap and kneel down to the floor. Their eyes made fiery, lengthy contact while Linda ran her hands up Matt's bare legs towards the loose, black shorts he wore. She pressed an index finger to her lips to signal silence, then he watched her hand disappear within the leg hole and soon felt her small fingers encircling the throbbing shaft of his penis, inside his shorts. \n\n\"You've got to be fucking kidding me!\" Linda exclaimed, breathlessly. She pulled up on the bottom hem of his shorts, fishing his dick out of the leg hole. Matt's huge, bare cock was unsheathed into the light.\n\n\"Holy shit! This is the most beautiful dick I have ever seen!\" Linda gasped. Her head spun from side to side, scanning the area, anxiously. \"I'll get fired if my boss finds me doing this, but... fuck it and fuck him. I want this cock more than this shitty job anyways!\"\n\nMatt couldn't wipe the grin from his face. \"It's all yours, gorgeous!\"\n\nLinda bent forward, dragging her wet tongue up the entirety of Matt's thick dick. Once she reached the mushroom shaped tip, her lips wrapped around the bell head. Her tongue slid around the wide peak of Matt's erect penis, adding suction to the exhilarating sensation. \n\n\"Oh my god!!\" Matt gasped. \"You feel amazing, Lucy!\"\n\n\"Mmmm!\" Linda exulted, pulling his cock out of her mouth with a popping sound. \"Want to see why they call me 'Juicy' Lucy?\"\n\nMatt nodded, eagerly. \"I can't wait!\"\n\nHe was surprised when Linda stood to her feet and climbed on to his chair, standing above him with her feet on either of his hips. Her red, thong panties were eye level with Matt as he watched her turn around to present her bulbous butt to him. With a quick swipe of her hand, Linda's thin panties were pushed to the side. She then bent at the hip in front of Matt's face. He watched, enraptured as her sumptuous, wet vagina appeared before his eyes. \n\n\"See how juicy my pussy is for you, Mister?\"\n\nMatt didn't hesitate a second before his face was buried in Linda's snatch, lapping at her soaked vagina. \n\n\"Holy fuck!\" Linda gasped, steadying her knees on her precarious perch. Her wet snatch pressed over Matt's mouth. \n\n\"Oh my god, Mister! I swear... I've never done this before... but I can't help myself! I need your dick! Right now!\"\n\nMatt gave a muffled approval from in between her legs. Linda gingerly straightened herself upright and stepped down off the chair. She then, assisted Matt out of his clothes, still seated. \n\nOnce again, throwing her leg over Matt's lap, facing him, she lowered herself, slowly. \n\nMatt moaned in pleasure, feeling Linda's outer labia spread over his cock shaft, bathing it in natural lubricant. A guiding hand was felt and soon a moist warmth engulfed his sensitive cock head. \n\n\"Oooooo! Fuck yes!!\" Linda cried, as her pussy stretched over Matt's girth and her sopping cavity was stuffed to the brim with veined, throbbing penis. \n\nLinda began to slowly ride Matt's cock as her pussy struggled in valiant, joyous effort. \n\n\"Oh! My! God! Your! Dick!\" Linda bellowed as she hopped up and down. \"Fuck yes, baby. Oh god, give me that good fucking. Mmmph! My pussy feels so full!\"\n\nMatt's head was lost within Linda's recklessly rocking breasts, pummeling his face with soft, luscious mammary fat.\n\nMatt felt Linda's tell tale tightening around his thick shaft. \"Oh... fuck, Matthew!! Oh my god!!\" Her orgasm shook her to a standstill. The waves of pleasure coursed through Linda's body. \n\nWhen her orgasm had subsided, she sank down, once again, into his lap. \"Phew! I'm too old for this shit anymore.\" Linda chuckled, draping her arms over Matt's shoulders. \n\n\"You were amazing, 'Lucy'.\" Matt smiled, leaning forward to kiss her lips. \n\n\"Mmm! So were you, 'Mister'!\" Linda beamed. \"Now, get your fine tushy into bed so I can finish you properly!\"\n\n\"Yes, ma'am!\" Matt grinned. \n\nLinda quickly dispatched the red lingerie and slid, naked onto the covers. Matt's boner bobbed towards her spread legs, as he crawled onto the bed, over her. \n\nLinda guided his thick cock to her pink folds, feeling the exquisite pressure on her inner labia. Matt watched her eyes roll back in her head when he pressed his hips forward, sliding his entire length deep into her wet vagina. \n\n\"Oh! My fucking god...\" Linda squealed. \"You're amazing! Please! Fuck me good, baby. I love this big fucking dick so much!!\"\n\nMatt's hips pumped back and forth, driving his shaft repeatedly into her quivering pussy. Linda's pleasured screams resounded off the walls. Finally, after several minutes, Matt's cock expanded one last time before cum began to blast into Linda's moist crevice. \n\n\"Unngh!\" Matt moaned, releasing his sperm completely. \n\n\"Mmm! Damn that was good!\" Linda breathed, once Matt's dick had stopped lurching inside of her. \"Way better than I even fantasized!\"\n\n\"It was amazing for me too!\"\n\n\"Great!\" Linda smiled. \"So, anyway... that'll be $300.\"\n\nMatt's eyes went wide.\"Uhhm... really? ...Mom?\"\n\nLinda's face showed no sign of cracking a smile. \"Yes, really... son. The Pink Taco doesn't do freebies.\"\n\nMatt blinked. \"C-can I owe you?\"\n\n\"Mmm.\" Linda considered. \"Alright, you can make it up by helping me set up my massage studio. Deal?\"\n\nMatt smiled. \"Deal!\""
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big tits",
        "huge boobs",
        "enormous breasts",
        "slow burn",
        "role play"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-22"
}