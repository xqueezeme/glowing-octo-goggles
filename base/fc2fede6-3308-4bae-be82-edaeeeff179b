{
    "title": "There and Back Again Ch. 150",
    "pages": [
        "Chapter One Hundred Fifty: Getting Centered\n\nThe Knight-Commander of Kinloch Hold blinked at me in surprise. \"You want to keep a darkspawn mage alive and imprisoned?\"\n\nI rolled my head, stretching my neck, feeling it pop with a satisfying noise. That rejuvenation spell works wonders -- Anders is a miracle worker, thank God for spirit healing -- but I wonder how often it can be redone. It's already wearing off -- and I still feel woozy, too. I was relieved to be mostly coherent for the moment, at least. \"Want is the wrong word. But we have no choice. And we need as few people to know about it as possible, which is why my brother wasn't exactly forthcoming.\"\n\nHe tilted his head in confusion, and I had a sudden inspiration.\n\n\"Knight-Commander, did you know First Enchanter Remille?\" Thank the Maker I read \"The Calling\" before coming to Thedas.\n\nIt was his turn to grimace. \"Not personally, no. Fortunately.\"\n\n\"But you've heard...what he did.\" He nodded. \"Suffice it to say, if this particular darkspawn is somehow rescued and freed, the damage could be worse than the Blight. And we have reason to believe that there are those in a position of power unscrupulous enough to try to twist events to their own benefit, like Remille.\" I rubbed my eyes, feeling fatigue creep back in slowly. I need to end this conversation soon. I can't afford for him to see me as unstable. \"The fewer who know about it, the less chance of the wrong people finding out. I trust you enough to know you won't aid someone like that -- but I don't know your men or your mages. We need to keep this information on a 'need to know' basis only -- and you are the only one who needs to know. So. Will you help us?\"\n\nHe considered for a moment, eyes searching my face. \"You aren't telling me everything.\" I shrugged silently. He narrowed his eyes. \"Do you swear that this chamber, if we build it for you, will never be used to imprison people -- human or elven mages? That you will never use it to harm people or find some way to use it against the Chantry?\"\n\n\"I swear.\" I kept my face neutral, willing him to believe me -- believe the truth. \"The only being I will ever contain in that cell is the darkspawn we are building it for.\"\n\n\"I believe you,\" he said after a few seconds of thought. \"Your position on mages is well-known. But what of your successors? Your Seneschal? You will not always be here, nor will you live forever, and politics being what they are, you may have no control over who takes over.\"\n\n\"I won't tell them.\" I waved my hand vaguely at the Wardens around me. \"The only reason I know is because of my unique relationship with the Wardens. The only successor who will be told will be the next Warden Commander. I sincerely hope that within a generation, there will be only one or two people who know the creature even exists, never mind where it is being kept. I cannot guarantee anything on behalf of the next generation of Wardens, obviously, but I assure you my husband and brother will do their best to ensure that whoever inherits the knowledge will be responsible enough to handle it wisely.\" I yawned widely then, slapping my hands over my mouth in embarrassment. Alistair's hand squeezed my shoulder, and I saw Greagoir looking around, puzzled at the pitying looks directed my way by the others in the room.\n\n\"Your Highness? Is everything all right?\"\n\nI pulled on my earlobe roughly and clenched one fist until the nails dug into my palm -- a strategy for staying awake I'd learned while being held captive by the Architect.\n\n\"Sorry. I've been awake for three...four days?\" I turned to Alistair to confirm, and he winced.\n\n\"Almost five.\"\n\n\"Five days!\" Greagoir exclaimed. \"Whatever for?\"\n\nI sighed. \"Don't worry about it. So, will you help us?\"\n\nHe finally nodded, clearly reluctant but understanding the need. \"I will.\"\n\nAlistair broke in, his hand gently rubbing at the stiff muscles in my neck. \"Thank you, Knight-Commander. May I ask, how long does it take to do?\"\n\n\"It will take several days.\" He paused at my dismayed gasp, his gaze knowing. Days? I'm not sure I can keep this up for hours, never mind days. \"I think, however, there may be something else we can do to help in the meantime.\"\n\n*****\n\nI stood in a small, stuffy storage closet at the base of Avernus' tower, flanked by far too many bodies -- seven sweaty men in enormous tin cans, though at least their helmets were off. The walls of the room had been lined with furniture scavenged from around the Keep -- to Levi's dismay -- and templars took up all of the floor space except for a tiny clearing centered on me.\n\nAlistair stood behind me, his hands on my shoulders, his palms sweaty with nerves. I wanted to reassure him, to soothe his obvious worries, but between exhaustion and my own fear, all I could do was press back against him and hope that somehow helped.\n\nUpstairs, somewhere, I knew that every other Warden, mage, and templar not currently in the room with me was standing outside another door, armed to the teeth, waiting -- just in case. And a company of soldiers, all of them clueless but no less armed, filled the floor below. In case something went wrong.\n\nGod -- or the Maker, or anyone -- help all of us if something goes wrong.\n\nThe plan was simple: transfer the Architect's mana to a group of templars hand-picked for the job by Greagoir. They were the strongest templars travelling with him, and the six men had practiced for hours doing exactly what we were about to attempt -- using multiple less-talented templars to magically restrain one mage that none of them could handle alone. Not that they'd ever trained against a mage with a mana pool as large as the Architect's. The usual groups they practiced with consisted of two or three templars working together, not six, but the theory should hold.\n\nI'd never practiced it, though. My only experience was a few attempts to demonstrate the effect with Alistair and Greagoir during the Blight, and five minutes of clumsy work during the fight against the Archdemon's General, and that was only with one templar at a time -- and practically slamming it into them without any effort on their part, during the fight, to be honest -- not splitting it six ways voluntarily.\n\nThe idea had surprised me. It shouldn't have, I supposed -- Greagoir had learned as much as he could from me during the Blight, and was dismayed to find out that none of the other templars in Ferelden could do what I did, at least, not to the same degree. I had the strongest magical resistance in Thedas, as far as we knew, likely due to being raised on Earth; the templars' resistances were paltry by comparison, and it bothered Greagoir that some of the abilities I had demonstrated were just not possible for any of his men. So I shouldn't have been surprised that he'd put so many resources into research attempting to duplicate my abilities.\n\nIt didn't give me the confidence that I would have wished for. Templars in Thedas...well, the subject was complicated, but their self-control and judgement, as a group, left a lot to be desired, in my experience.\n\nI wasn't exactly spoiled for choice, however. We needed time for Greagoir to complete a chamber that could safely contain the Architect, days during which the creature needed to remain restrained. I was the only one who could do it alone -- and I'd already been awake for five days. I'd moved past hallucinations into a constant, dizzying sense of unreality, and I was fairly convinced my sanity was hanging by a single, spindly thread. Without sleep -- and soon -- I wasn't going to be capable of helping anyone anymore, and the Architect would be free. And no one wanted to imagine what the tainted magister would do if he escaped.\n\nSo I took a deep breath and waited for Greagoir's nod. The men he'd chosen stood shoulder-to-shoulder, concentrating, eyes closed, their breathing synchronized. I waited until I was given the green light, and then slowly, carefully, relaxed my hold on the Architect's mana and allowed a small trickle to slip through my metaphorical fingers.\n\nI could feel the Architect fighting me, struggling for control of that tiny stream of mana -- even Zevran's potions had stopped keeping the creature unconscious; Anders theorized it was something to do with the increased metabolism all tainted creatures seemed to have, and the Architect was one of the most heavily tainted creatures in existence -- but before anything could happen, I felt the first templar in front of me scoop it up, and suddenly the two of us were unevenly sharing the creature's mana.\n\nBefore I could even react, that templar somehow spread the effect out among his fellows -- I was going to have to think about that one more once I was rested -- and the trickle of mana was being held by the six of them together.\n\nEncouraged, and in response to a smile and nod from Greagoir and a sudden relaxing in the tension I could feel from my husband at my back, I allowed more mana to flow out, turning the trickle to a stream. It was immediately gobbled up by the templars around me, flowing through each until it was even. I concentrated on the stream, constantly feeling for any flaws in the system, any places where the mana was bleeding through or leaking out, and couldn't feel a thing.\n\nIt was working.\n\nI had to admit, my elation was tempered by concern -- what could unscrupulous templars do to an unsuspecting mage with this ability? -- but I couldn't deny the relief I felt as the pressure in my head waned. I took a deep steadying breath, and turned the stream into a small river. And then a bigger one.\n\nSoon the seven of us were sharing the load equally, and I felt like floating; the sensation was similar to the lightness I felt as a child after having a cast removed from my arm when I'd fallen off some playground equipment and broken it. My small, dirty, peeling arm had felt like it would float away when the heavy plaster was cut off, and my brain felt like that now.\n\nIt wasn't enough, though. I had to not just reduce the mana I held, I had to eliminate all of it. And so I concentrated, and with a mental effort, pushed. There was a little bit of resistance -- like squeezing something into a stretchy, tight plastic bag -- but I clenched my teeth and shoved, and the last of the Architect's mana drained out of me, leaving me empty.\n\nI wobbled. The connection between me and the six templars was severed, and the emptiness in my head left a dizzying space. With my purpose in staying awake gone, my eyes rolled back, and I slumped backwards into Alistair's arms. I felt my husband pick me up, his strong arms cradling me gently against his chest; I smiled, basking in the sunshine feeling radiating off of him, knowing I could trust him completely to take care of me. Part of me knew he must be tired too -- it had been more than a day since he'd slept, I thought -- but at that moment, curled up in his arms, feeling light and floaty and blessedly free for the first time in days, I couldn't bring myself to object.\n\nI heard six templars settle into the chairs and couches brought in for their use, heard Greagoir and Alistair talking, though I couldn't be bothered to pay attention to the actual words. Alistair turned towards the door, angling me awkwardly to maneuver me out the narrow aperture; I was asleep before we reached the hallway.\n\n********\n\nI woke an indeterminate time later in the softest bed in Thedas. I recognised it -- I'd slept in it alone for a week when I'd visited the Peak two months before. I was in my own chambers. The only light in the room was a single candle in a sconce on the wall; it cast slight shadows on the opposite wall, and gave just enough light for me to see the familiar furniture and the dark opening that led to the bathroom.\n\nAnd I wasn't alone. I was on my side, with my back pressed against the chest of my husband, who was spooning me protectively. His arm lay heavy over my waist, his slow steady breaths ruffled my hair, and together we were blessedly warm in our little cocoon.\n\nI thought about it for a moment, but decided against waking him. Knowing him, he'd spent much of the time while I was sleeping taking care of me, and he needed rest too. Besides, I had a lot to think about, and hadn't had much time to spend alone in quiet contemplation.\n\nThe first subject for consideration dropped onto me before I had much chance to do anything else, and I felt the blackness of despair settle over me. I shouldn't have been surprised; you can only put grief off for so long, after all.\n\nI'd had a miscarriage. A little spark of life, a combination of Alistair and me, a tiny ball of hope for the future...had been extinguished. I'd had no choice, no control, no ability to change the outcome. In the brief seconds before the seriousness of my bleeding had hit me, I'd managed to squeeze a whole lifetime of hopes and dreams into that itty bitty fetus -- only to have it torn away from me in almost the same moment it had arrived.\n\nFinally, rested, without the weight of the Architect's containment on my shoulders, I could mourn. I hadn't even known how much I had to lose, but that didn't stop the keen ache of its loss. In the centre of my chest, in that place where the human heart beat out its lifespan one second at a time, I hurt -- in a way I'd never dreamed I could. I clutched my chest and stifled a sob, and finally the tears I'd been suppressing since I'd realised what had happened started to fall.\n\nFor one, brief, shining moment, I'd been a mother -- in my heart, if not in actuality -- and then it was gone. My body had gone from incubator to coffin to just empty faster than my emotions could keep up, and it felt like I had a yawning space in my abdomen, just gaping open, where something should have been.\n\nThe fact that it was all over, so indelibly, almost before it began...it bothered me. As much as I could recognise the necessity -- I really didn't have time to pander to my body with everything that was happening, and I still knew that to be true -- that didn't mean it wasn't painful. I wasn't ready for it to be over.\n\nI can't say I wasn't warned. Anders did try to tell me, not that it would have changed anything if I'd really understood what he had meant.\n\nMy heart-wrenching sobbing finally woke my sleeping husband; no matter how hard I'd tried to hold still, stay quiet, keep it in, I hadn't been completely successful -- and he had proven he had almost a sixth sense about those sorts of things anyway. His arms tightened around me, and before he was even all the way awake he was murmuring soothing nothings in my ear, urging me to turn towards him, offering the comfort I craved.\n\nI gave in, rolling over and burying my face against his chest, wrapping my arms around his torso and clinging for dear life. I could feel little quakes rocking his body, and realised that he was crying too. The two of us stayed like that, together, holding on tight and bawling, alternating between offering comfort and taking it, for what felt like hours, but was probably minutes. After a bit, I was cried out -- still devastated, but I didn't have any tears left. I ended up sprawled across Alistair's chest, our legs intertwined, his strong hands gently stroking my hair as the hiccups and hysterics slowly faded.\n\n\"I'm sorry,\" he finally offered, voice tight with emotion and hoarse from crying.\n\nI paused, trying to suppress the initial surge of anger his words elicited. How many times have I over-reacted or misunderstood? I need to give him the benefit of the doubt.\n\nI went up on one elbow so I could see his face. \"For what, exactly?\" I asked. My tone was careful -- I knew he'd hear the warning, but I really was just trying to understand.\n\nHe stroked one finger across my cheek softly. \"For everything.\" I raised one eyebrow, slightly irritated, and he hurried to elucidate further. \"For my irresponsible actions taking away your choice on when to become pregnant. For not realising the risk sooner. For letting you come with us, chase the Architect, stay awake for days, fight...when I should have known you could have been pregnant.\" He gulped and I saw another tear run down his blotchy cheek. \"For not being able to stop it or fix it. For wishing...wishing the miscarriage hadn't happened when you never got to choose to be pregnant in the first place. I mean, I should be relieved, right? But I'm not. And I'm sorry.\" His tone rose as he spoke, until his words were nearly unintelligible by the end.\n\nI felt a huge wave -- of relief, of love, of empathy -- hit me, and I squirmed up his body to wrap my arms around his neck and pull him to me. Here I was thinking he just regretted getting me pregnant...and he was going through the same thing I was all along. I could feel the wetness on my neck, and I pulled back just enough to kiss away his tears, pressing kisses to every inch of his blotchy red face that I could reach. \"Hush,\" I told him. \"And I suppose I'm not the only one who's left you to stew in all of this. Didn't Anders say anything to you?\"\n\nI rested my forehead on his, our noses rubbing slightly as he shook his head uncertainly.\n\nI sighed. \"First, I'm not angry with you. No, we didn't plan it, but you don't have as much sex as we do without accepting some risk of pregnancy. Nothing is perfect -- not some herb, and definitely not the human memory, especially when stressed. You had a few other things on your mind at the time! I don't blame you.\"\n\nI kissed him gently, and he gave me a tentative, watery smile.\n\n\"As for the fighting, the staying awake...Anders assures me that it didn't cause the miscarriage. I believe him. He said sometimes...sometimes bad things just happen. We got unlucky, that's all. We didn't make this happen. It doesn't make it better, exactly, but...it isn't anyone's fault, Alistair. Not mine, and not yours.\"\n\nHe examined my face silently, looking for signs that I wasn't being honest with him; I waited, and could feel the moment he accepted that I was telling the truth when his body relaxed underneath me.\n\n\"And as for being relieved, I'm not, either. We might not have planned it, but if I was to have a baby now, it would have worked out. We'd have managed. Anders said something to me, what was it...\" I considered. \"Ah. He said 'early isn't the same thing as unwanted,' or something to that effect.\"\n\nI rolled off him, curling up beside him and resting my head on his shoulder. \"I think, if you'd been relieved...I might have been angry. Furious, actually. It wasn't planned, but the moment I realised I was pregnant, I'd already been making plans, imagining a future for us with a little family. And then I realised, with all that bleeding...\" I paused to press my face against Alistair's chest, heaving a deep breath and waiting for my throat to open again. \"I miss him already,\" I whispered.\n\nAlistair rolled to his side facing me, pulling me into his arms. He held me for a few minutes until the urge to start crying again passed. \"Him? I thought her.\"\n\nI shook my head, looking up at him wryly. \"So it's going to be like that, is it? When we conceive again?\"\n\nHe grinned and nodded, and I chuckled. He squeezed me gently as his smile faded to be replaced by an anxious expression. \"We can try again, whenever you want. I asked Anders, and he said...he said we don't have to wait, if we don't want to, once you're healed. I'm not pressuring you, if you don't want to yet, but...I'm game, whenever you're ready. Okay?\"\n\nI was speechless. I stared at him, mouth agape, without a single coherent response coming to mind. I'd thought I was all cried out, but I'd been wrong; tears snuck out of my eyes to trickle down my cheek, and a hysterical sound, a cross between a laugh and a sob, issued from my mouth. Alistair just pulled me even closer, and I laid my head down and let my mind wander as the tears kept falling.",
        "Try again? Like, on purpose? I couldn't quite wrap my head around the concept. I mean, we'd both agreed we wanted children, and I would never forget the feeling of utter dismay and disappointment when I'd realised the child we'd accidentally conceived was going to die; but it was one thing to have it happen accidentally, and a whole different kettle of fish to actively plan it. On one hand, I could just see a little blond-headed child in Alistair's arms, his smile of paternal pride...but on the other hand, was I ready to do it on purpose? What if I make a terrible mother? I squashed that sentiment ruthlessly.\n\n\"Not yet,\" I finally whispered. \"There's so much to do for the next little while. But...but soon,\" I concluded.\n\n\"Soon,\" he agreed, and with that decided, he kissed my temple and curled up beside me, dropping off to sleep with a faint smile on his face.\n\n********\n\nWhen I woke again, I had no idea how long I'd been asleep or what time it was. Dim light filtered through the shutters, but it could have been dawn or dusk -- or just a particularly cloudy day, for all I could tell.\n\nI was alone in the massive bed, but I could hear voices from just outside the door -- Alistair and Aedan, I decided after listening for a minute. I conducted a brief internal inventory; I was still tired, but the bone-chilling exhaustion had gone, and I was aware that some amount of fatigue was likely to linger for a while after being awake for five days. I was stiff from lying in bed too long, and felt slightly icky -- between sweat, tears, and the remains of the miscarriage I'd only managed to clean up with a quick wipe, I was desperate for a bath.\n\nThe grief was still there -- I wondered if it would ever really disappear, or just fade with time the way it had after Duncan's and Riordan's deaths -- but I'd had the chance to face it, have my cry, and get the support I needed, and it wasn't so sharp anymore. I was sure it would come back to bother me at times, but for the moment I felt like perhaps I was coping in a relatively healthy way.\n\nAnd however briefly, the grief was over-ridden by curiosity. Something had obviously happened at the Circle; my brother, normally so diplomatic and charming, had been a right idiot when dealing with the templars, and Anders and the others looked like they kind of understood where it was coming from, so it wasn't just a bad day. I wanted to know why, and this was as good a chance as I was likely to get if I didn't want to talk about it in front of everyone.\n\nI peeled back the covers, stretching lazily, and then hopped out of bed. I hadn't noticed that I'd been sleeping in one of Alistair's tunics -- he must have changed me when I was asleep, and had known I'd find wearing his clothes comforting -- so I combed through my armoire, found a loose pair of cotton pants to slip on, gathered my wild hair into a messy ponytail, and headed out the door.\n\nAlistair was just in his cotton sleeping pants, but Aedan was in full armour, his two swords sheathed at his hips. Zevran was with him, silently brooding. They were talking softly in the hallway between our room and our sitting room, but they all stopped to look at me when they heard me open the door.\n\nAlistair smiled apologetically, and I leaned up to press a kiss to his cheek before turning to my brother to do the same. I felt him sigh in relief, and his arms wrapped around me, squeezing too hard until I squeaked out an objection.\n\n\"I'm sorry,\" he rushed to say before I could get a word in. \"I wasn't here and I had our only healer with me and-\"\n\n\"Shh.\" I squeezed him again, and then eased away and took his hand in my own. \"It isn't your fault.\" I met his eyes, urging him to believe me. \"I'm okay, or at least, I will be.\"\n\nAlistair excused himself to go find a shirt, and I drew Aedan and Zevran into our little sitting room, giving Zevran a tight hug and then urging both of them into chairs.\n\n\"So. Tell me.\"\n\nAedan's expression turned cagey. \"Greagoir and the templars and mages are working on one of the cages to hold the Architect. The six who took over for you are doing fine, and the Architect is mostly still asleep, or at least quiescent. The-\"\n\n\"No.\" Aedan raised his eyebrow at me at the interruption, and Zevran clenched his jaw and looked away. \"Tell me what happened. You can give me every little detail about the Circle and Solona and Faren and everything after, but I want to know what happened first.\"\n\nAlistair rejoined us, settling on the floor at my feet; I stroked his shoulder, and he pressed his cheek to my hand. \"I'd like to know too. You're usually a bit more, uh, tactful.\"\n\nAedan and Zevran exchanged glances. Zevran's scowl deepened. Aedan shook his head, sighing, and Zevran's face reddened noticeably, a feat given his golden skin. \"Would you have them helpless, then, love? Unsuspecting, right up until they pay for it?\"\n\nI looked back and forth between the two men, and finally Zevran slumped in his chair, waving one hand dismissively. \"Whatever you wish, amore mio. What do I know?\" The Antivan kept muttering to himself under his breath, refusing to make eye contact; I strained to hear the words, but they were in Antivan and my bad self-taught Italian wasn't anywhere good enough for that.\n\nAnd then Aedan derailed any thoughts I had of trying to interpret further. \"The Crows figured out Zevran's alive, and they know he's here.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-150"
}