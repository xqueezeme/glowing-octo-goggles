{
    "title": "Undaunted",
    "pages": [
        "Note: This is the third (and final) installment of Jamie and Shaie's story, so some pre-reading is required. If you haven't read Unbidden and Untethered yet, please do so (in that order) before reading this one. Thank you, and please feel free to leave comments as always. \n\nPart One\n\n\"So what you're saying is that there's pretty much nothing else I can do?\" I asked Diane Hoffram as I sat in her office on a Thursday afternoon.\n\nMid-forties with green eyes and pale blonde hair, the kind lawyer held a small, private practice on a third-floor condominium unit that Shaie had previously mistaken as my ex-girlfriend's.\n\nI had first hired Diane's services a couple of years ago, when things with Joan had gotten so out of hand that I had felt the need to explore legal options just to get my ex to stop. Diane was the fourth lawyer I had approached at the time, but she was the first one who hadn't looked at me funny as I was explaining to her my situation. She had not hesitated in helping me out either, even referring me to a really great therapist after our first meeting.\n\nAnd now, I was back in her office because the last Temporary Restraining Order that I had been granted against Joan was about to expire.\n\n\"For now,\" the older woman answered, shaking her head as she leaned back against her chair. \"The thing is, Jamie, unless your ex actually does something illegal, filing for another TRO would be our best recourse.\"\n\nMy shoulders sagged and Diane noted my reaction.\n\n\"Again, we can file charges against her for violating the current TRO, especially since you were able to get the security footage from your apartment building,\" she continued as I sank into my own chair. \"But you already said that's not something you wanted to pursue.\"\n\nI sighed and nodded in acceptance. I didn't want my ex to go to jail and possibly worsen things as a result of filing charges. I just wanted her to leave me alone for good.\n\nTruth be told, I didn't even know why Joan still did it. It wasn't like the woman actually wanted me back. It had always been more that she liked seeing how she affected me every time she showed up out of the blue\u2014at least until I learned to ignore her and her disruptions had become less and less frequent.\n\nFor a while there, it seemed like she had finally decided to stop and move on. I had five whole months of peace and quiet until I saw her again during my first date with Shaie. It was accidental that she also happened to be in the restaurant that night, I knew, but that was all it took to get Joan started again.\n\nMy only consolation now was that she had seemed to simmer back down and there hadn't been another incident in the last three weeks. Still, I didn't want to be forever looking over my shoulder, wondering when my ex was going to pop up and stir shit next.\n\n\"You can hire personal security or move again for added protection,\" Diane offered kindly when I kept silent. \"But even that won't guarantee that she'll stop trying.\"\n\n\"Those are just two things I can't afford to do right now,\" I tried to smile as I shook my head. I straightened in my chair, having heard just about all that I needed to know on the matter. \"Alright, thanks again, Ms. Hoffram. Are there any other documents you need from me for the restraining order?\"\n\n\"No, I think we have everything we need,\" Diane smiled. \"The hearing is set two weeks from now, so unless something new comes up, I guess I'll see you then.\"\n\nI thanked Diane once more before I left, truly grateful for all her help but not feeling any better than when I had come in.\n\nI just felt so tired of it all. I suddenly felt trapped and frustrated, unable to believe how\u2014two years after my breakup with Joan\u2014I still had to go through all of this just to have any semblance of normalcy in my life.\n\nI fished my phone out of my purse and dialed Shaie's number as I stepped out of the building. If there was anyone who could make me feel like there was still some light at the end of this incredibly long tunnel, it was her.\n\n*****\n\n\"It's time to wake up,\" Shaie's voice was soft against my right ear, piercing through my sleep.\n\nI frowned. I was laying face-down on her soft bed but, even with my eyes still closed, I could tell that sunlight filled her bedroom and it was now Friday morning.\n\n\"Five more minutes,\" I groaned and buried my face against the pillow. I heard Shaie laugh as she ran her hand lightly up and down my bare arm.\n\n\"You said that fifteen minutes ago.\" She reminded. Then she sighed. \"James, as much as I'd like to keep you naked in my bed all day, you asked me to wake you up at 7 because you have that big meeting at work today, remember?\"\n\nI had smiled as she spoke. I liked it whenever she called me James. While Shaie certainly wasn't the first person to shorten my name that way, the way she said it always made it sound more like an endearment than a nickname. I was back to frowning, however, as soon as she mentioned work.\n\nI turned my head towards the sound of her voice and opened my eyes to see Shaie, fully dressed in her yoga outfit. She laid sideways on the bed towards me, the tanned skin on her face glowing against the sunlight with a slight sheen of sweat. Some of her dark curls fell softly against her forehead, and her amber eyes shone as her full lips curved into a sexy smile.\n\nI still couldn't believe my luck that I had been dating this amazingly gorgeous woman for the last couple of months.\n\n\"How are you always so happy in the morning?\" I grumbled. I propped myself on my elbows, half-wincing at the soreness I felt on my lower back and half-smiling at the reminder of how Shaie had worked me the night before.\n\n\"How are you always so grumpy?\" She grinned, her hand falling from my arm to my blanket-covered waist. And then she smacked my ass, laying on the cheeriness thickly. \"Come on! Rise and shine! Now, move your butt!\"\n\nShe gave me a quick kiss on the lips before she bounded off the bed, and my body followed her as she moved. I watched Shaie as she began rolling up her yoga mat, the toned muscles of her arms making me briefly\u2014but very seriously\u2014consider calling in sick.\n\n\"Keep looking at me like that and I just might keep you in bed after all, big meeting or not.\" Shaie warned, grinning as she glanced at me.\n\nWith Shaie, what might start out as light teasing always had the tendency of building up into something we'd both eventually feel the urge to see through and, while that always excited me, I really did have to be at work today.\n\nI sighed instead and fixed the blanket around me as I stood. Shaie caught me as I made my way to her bathroom, her arms wrapping around my stomach as she softly pulled me closer to her. I closed my eyes for a moment and rested the back of my head against her shoulder, my fingers reflexively reaching to touch her hair as she began placing gentle kisses on my neck.\n\n\"I can't,\" I groaned, pulling away when her mouth grew more urgent. Her arms loosened but her hands stayed on my waist as I turned towards her. \"I still have to go back to my apartment and get ready. I'm running late as it is.\"\n\nI never kept a change of clothes at Shaie's place, nor did she keep her clothes in mine. I did have my own toothbrush in her bathroom sink because... well, that was just good sense.\n\n\"I knew I shouldn't have let you take all those 'five more minutes.'\" Shaie's nose crinkled slightly in frustration but she was still smiling as her hands fell to her sides.\n\n\"But I'll see you tonight at the launch, right?\" I asked as I stepped away, smiling when she pretended to pout for a second.\n\n\"Yeah,\" she smiled back, her hand reaching for mine and almost pulling me in again before deciding to let go. \"I'll go there as soon as I'm done at Floe. Now, go get ready so you can... go and get ready.\"\n\nI grinned and rolled my eyes at her before continuing on to the bathroom. I stood in front of the sink, smiling at how Shaie always kept my clothes in a neat pile on the counter before I surveyed myself in the mirror.\n\nMy long, dark brown curls were bedraggled, but my brown eyes were still shining after that exchange. I lifted my chin up and gasped at the trail of hickeys Shaie had placed all over my neck last night.\n\n\"Shaie!\" I exclaimed, and the beautiful woman popped her head inside the bathroom after a short moment.\n\n\"What?\" She said, trying to look innocent even as she grinned cheekily.\n\nI turned towards her and pointed at my neck. \"I mean, should I start investing on turtlenecks now, or...?\"\n\nHer grin only got wider as she carelessly shrugged. \"You never had a problem using scarves before.\" She said.\n\nShaie winked at me before she moved away, leaving me smiling after her as I began to fix myself up.\n\n*****\n\nThree, please!\" I smiled at the bartender, who acknowledged my order with a friendly nod. He was in the middle of fixing a few drinks and it'd probably be a short while before I got the beers I had asked for, but I didn't mind waiting.\n\nIt was a quarter past 9 in the evening and Brad, Kayla, and I were in one of the most well-known clubs in the city. Our office handled the ad campaign for a local beer company and we had launched it tonight through a promotional event. Of course, the three of us were just there to make sure everything went smoothly with the event organizers at this point.\n\nIt was one of the better parts of my job, really. Once the program for this kind of events ended\u2014like it did for this one just a few minutes ago\u2014then we were mostly free to enjoy the rest of the night.\n\nI relaxed against the bar and checked my phone for messages. There was one from Shaie telling me that she was on her way and I smiled, seeing that it had been sent about twenty minutes ago which meant that I should expect her to be here any moment now. As if on cue, I felt a hand wrap around my waist and my smile started to widen as I turned around\u2014only to disappear completely as soon as I saw who that hand belonged to.\n\nI pushed the hand away immediately and stepped back, scowling at my ex-girlfriend, Joan, who smiled at me as if she hadn't just done something incredibly inappropriate. The fear I always felt upon seeing her was instinctive, but I had gotten better at getting over it quickly and did so now.\n\n\"Were you expecting someone else?\" She asked loud enough so that I could hear her through the music as I continued to glare at her. Her tone and demeanor were friendly, but the cold glint in her cobalt blue eyes told me something else. She really hated the fact that I was dating again.\n\nIt wasn't that Joan was jealous or insecure of Shaie. In fact, I highly doubted that the woman had ever felt inferior to anyone her entire life. Joan was confident, successful, and stunning with her long, jet-black hair and striking blue eyes\u2014some of the things that had attracted me to her in the first place\u2014but I knew what was underneath that exterior well enough now to know that she didn't actually want me back. She just didn't think I should be able to move on from her. Ever.\n\nYeah, I never knew people like that existed until I met her either.\n\nI took another step away from her and turned, instead of taking her bait. I could still see Brad and Kayla where I had left them on the dance floor as I headed towards the exit. I wasn't trying to run away from Joan\u2014I just knew full well that she wasn't beyond causing a scene whenever she didn't get her way, and I didn't want that.\n\nBesides, I figured it was safer outside where there were people from security I could ask assistance from.\n\nSure enough, Joan grabbed at my arm from behind just as I was about to approach the bouncer. She continued to walk, only stopping once we were at a safe distance from the few people that were outside the club. Her nails bit painfully against my bare skin, but I knew not to show her that as she placed herself between me and the entrance.\n\n\"You need to let go of me,\" I looked straight into her eyes as I calmly spoke and Joan followed, lifting her hand in mock surrender.\n\n\"What? I'm not doing anything wrong.\" She said, feigning innocence. \"I just want to talk.\"\n\n\"You're in violation of a restraining order right now,\" I pointed out. I stepped to the side so I could get past her but Joan was quick to block my way. I tried to appear unbothered but, God, I was so sick of this!\n\n\"Was I supposed to know you'd be here?\" My ex scoffed. \"Last I checked, this is a public place, and I have as much right to be here as you do.\"\n\n\"As long as you stay 50 yards away from me,\" I shrugged, once again making a move to get past her and once again being blocked. I placed my hands on my hips and looked at her squarely. \"Step aside.\"\n\nShe raised a dark eyebrow at me, her lips curling in a smile that mocked. \"What's this? You're dating that sex-on-legs I saw you with, so now, you're too good to talk to me all of a sudden?\"\n\nI really couldn't believe the words that came out of Joan's mouth sometimes, but I knew she was just trying to get a rise out of me.\n\n\"The TRO's been in place for a year now, Joan,\" I said, keeping my voice even. \"Now, move, please.\"\n\n\"What did I ever do to you?\" She said. The woman actually had the gall to look hurt, and that just about did it for me.\n\n\"How about hitting me, lying to me, cheating on me repeatedly, for starters? I mean\u2014,\" I said before I caught myself.\n\nJoan still looked very much like the victim she was playing to be but the subtle triumph in her eyes stopped me from completely playing into her hands. She might have succeeded in pushing my buttons, but I'd be damned if I let myself get sucked into this same conversation again.\n\n\"No, you know what?\" I sighed in exasperation, and Joan glanced away for a second as I shook my head at her. \"I don't need thi\u2014\"\n\nI had to step back quickly when Joan suddenly moved to kiss me, her hands reaching for my face as she tried to close the distance between us.\n\n\"Are you goddamned kidding me?!\" I gasped in disbelief, holding my hand out while Joan just looked at me innocently. I stepped around her, this time pushing past her shoulders when she tried to block my way. \"Just stay the fuck away.\"\n\nI kept walking until I was back inside the club and then, at the end of the short corridor\u2014just right outside where the crowd started\u2014I stopped and leaned against the wall.\n\nI closed my eyes and shook my hands out, wanting to calm my nerves before I rejoined my friends. My legs felt weak and I tried to tamp down my anxiety by taking deep breaths. Dance music blared loudly while all the helplessness I had felt after leaving the lawyer's office yesterday came rushing right back, threatening to overwhelm.\n\nI couldn't help but think of Shaie.\n\nThings had been going so well with her these past two months and she had been just so... amazing, really, about this situation with my ex. She never pried, allowing me to open up to her in my own pace, and by my own choice. She never made me feel pressured or guilty, and she always managed to make me feel understood.\n\nBut how long could her patience last if stuff like this kept recurring? And could I really be okay with subjecting Shaie to the same seemingly endless cycle I was in, even if she was willing? I felt close to tears, just knowing that those questions would have to be answered eventually.\n\nNot yet, I thought, and I didn't know if it was a statement or a wish.\n\n\"Jamie?\"\n\nI opened my eyes to see Shaie in front of me, looking all kinds of wonderful with a simple dark shirt on over tight denims, and her curls framing her face. She had the softest look in her eyes as she gazed at me, and I immediately stepped into her arms. They wrapped around me in response and I hugged her tighter, feeling\u2014now, more than ever\u2014as if we were on borrowed time.\n\nAnd wanting nothing else but to hold on to her for as long as I possibly still could.\n\n*****\n\nBrad and Kayla found the two of us ten minutes later, back at our table, after their first round of dancing. They both knew Shaie already since our firm handled the ads for Shaie's business, and greeted her warmly as they both sat down.\n\n\"So, this is why we never did get our beers,\" Brad teased before asking Shaie how things were at Floe, and the two of them tried to make small talk over the noise.\n\nI loved seeing Shaie interact with people. She was just so at ease, so comfortable in her own skin, and she had a certain way about her that just naturally draws people in. She had her arm around my waist, and I smiled at the way her fingers played with the hem of my white top as she talked engagingly with Brad.\n\nPoor Kayla, though. She couldn't really fully relax around Shaie since she was in charge of the Floe account. I could just imagine it being like partying with your boss\u2014you're expected to have fun but you can't really let loose because... well, it's your boss. I decided to give Kayla some reprieve by inviting Shaie to dance.\n\nThe two of us made our way to the dance floor, and even I could feel every pair of eyes that naturally gravitated towards Shaie as she passed. One thing Joan had gotten right was that Shaie was practically sex on legs, and never more so when she danced. The number of people that she automatically attracts never bothered me because Shaie always seemed oblivious to it and, right now, it seemed she only had eyes for me.\n\nWe danced to a couple of fast songs, laughing and generally just goofing around. But then a slower song with one of those sexy beats came on, and Shaie pulled me close. Her arms, which she had been holding up before the music changed, softly fell around me, her hands gently grazing the back of my shoulders and travelling down my sides before settling firmly on my waist.\n\nI felt her body pressing onto mine as we swayed, and my nipples hardened underneath my bra at the barest contact. It didn't surprise me anymore how Shaie could so easily spark my desires and I found myself leaning into it more and more quickly as of late.\n\nMy own hands made their way up her shoulders, settling on the soft curls at her nape. I smiled up into Shaie's gaze, but what I saw in her eyes had me stopping all movement and catching my breath.\n\nHer desire was there, making the amber orbs seem darker, but there was also something else. Some silent emotion that was both so gentle and intense, I couldn't look away.\n\nI felt my heart slam against my chest, leaving a soft little ache as it continued its beat and, for the briefest moment, I had the strongest urge to run away. I didn't know how to handle that look and all the things it could possibly mean, so I closed my eyes and pulled Shaie's head down for a kiss instead.\n\nI fitted my lips firmly against hers, my tongue darting out slightly and coaxing her ready response. I concentrated on the feel of her tongue against my own, throwing myself into her kiss and letting it drive away the inexplicable fear that I was suddenly feeling. Shaie's hands fell on the small of my back as her mouth repeatedly slashed across mine.\n\nSoon, we were both lost, and when I finally drew my head back and looked into her eyes again, all I saw in them was a passion that was equal to my own.\n\n\"Take me home,\" I breathed shakily.\n\nI was sure that my words were swallowed up by the music, but Shaie didn't need to hear them to know how much I wanted her at this moment. She smiled, taking my hand as she turned and began clearing a path out for both of us through the crowd.\n\n*****\n\nWe did our best to restrain ourselves on the short drive back to Shaie's place, but we were back to kissing by the time we stepped into her unit, our mouths hungrier as we tore at each other's clothes.\n\nI lifted the hem of her grey shirt, my fingers lightly treading the bare skin at her waist before working on the button of her jeans. Shaie tugged at my top as she walked me towards her bedroom and I heard part of the fabric rip as she hastily pulled it off me, breaking our kiss for just the briefest second.",
        "I answered by unzipping her jeans, but all I could do was hold on to her waistband when my bra came off next. I felt her thumbs on both of my nipples, roughly rubbing and gently pulling on the sensitive nubs as I moaned against her lips.\n\nShaie gave both of my breasts a hard, little squeeze before her hands moved to support my back as she lowered me onto her bed. She took the rest of my clothes off, pulling urgently at my jeans and panties until I laid naked on her soft sheets. My eyes followed her as she moved off the mattress, taking in every gorgeous bit of flesh she bared as she quickly undressed in front of me.\n\nHer lips broke into a slow smile once she was as naked as I was and I smiled back as she slid on top of me. I closed my eyes as I met her kiss, sighing when her soft, warm mouth began to trace a path from my jaw to my earlobe before moving downward to my neck. I shivered when the tip of her tongue drew a wet circle on the pulse at my throat, then I gasped as her teeth clamped down on the soft skin.\n\nThe firm muscles of her right thigh pressed against my center and I gave a soft cry, feeling my own slickness slathered up against my clit as her hips began to move.\n\nBut there was something different about Shaie this time.\n\nHer mouth savored rather than devoured, and her hands caressed instead of the usual possessive way they touched my skin. She stoked my desire, slowly and steadily, but it was as if she didn't want to hurt me for some reason\u2014as if I were this fragile thing she didn't want to break\u2014and my body strained desperately against hers in protest.\n\nI didn't want to be savored tonight. I wanted to be fucked.\n\nI cupped her jaw, bringing her lips back to mine before my hands slid down. I gripped her ass, pressing her harder against me while I started grinding my clit wantonly on her thigh. My tongue slashed against hers, coaxing and pleading for her to meet my urgency.\n\nShaie gave a low growl as my nails dug into her flesh, and I knew I was close to getting what I wanted. I couldn't help but give the soft, round cheeks a sharp, little slap as I bit her lip just hard enough to make her gasp.\n\nI grinned at her as she drew her head back and gazed down on me, her eyes now dark golden pools of wild desire. Slowly, her surprise gave way to a sexy smile, and there she was.\n\nThe Shaie I knew. The Shaie I was familiar with. The Shaie I could deal with.\n\n\"Oh, you asked for it,\" she warned playfully with a slight shake of her head and I lunged at her, forcing her to adjust her position as I decided to beat her to the punch and began kissing her again.\n\nShaie grabbed at my left breast as her lips met mine with equal fervor, and we moved around as our hands roamed over each other, both of us wanting to come out of this kiss on top.\n\nI ended up finally pinning her with my hands on her wrists near the foot of the bed, both of us a bit out of breath as I straddled her. And then I felt Shaie relax underneath me, giving up the fight and smiling as I leaned over her.\n\n\"Yeah, I did.\" I grinned at her, bringing my lips to her ear as I softly added, \"But you're gonna get it first.\"\n\nI kissed the smooth skin of her neck, my tongue tracing soft, wet lines downward until my mouth found the turgid nipple of her left breast. I heard Shaie sigh as my lips closed around it and sucked, twirling and pulling on the rosy nub while my hand found her slippery warmth.\n\n\"Fuck, yes!\" Shaie moaned happily as I spread her pussy lips apart, using my middle finger to drag her juices to her clit before circling it the same way that I was swirling her nipple in my mouth.\n\nHer hands ran over the skin of my back as she continued to gasp and writhe beneath me, all the while allowing me to play with her sensitive spots to my heart's content. My mouth left her breasts as Shaie began moving her hips in an eager effort to get my finger inside her.\n\nI shook my head at her, smiling before I started trailing kisses down to her stomach. My hands reached to play with her breasts as my mouth inched with deliberate slowness closer and closer to her waiting pussy.\n\nShaie's groan was a mixture of pleasure and frustration, and I was unprepared when she suddenly sat up and grabbed me by the waist. Quickly, she whirled me into position, not stopping until my face was right above her cunt\u2014and hers, directly below my own soaking warmth.\n\nI felt the excitement build up in me as I realized what she wanted to happen but Shaie wasted no time, her hands on my lower back keeping me in place as her mouth hungrily latched onto my cunt.\n\n\"Aaahh!\" I cried out the instant her tongue grazed against my clit. The muscles on my arms went weak, bringing my face closer to her wetness. I recovered quickly, however, and responded by dragging my own tongue from her clit down the length of her slit, and then back again before fixing on her swollen nub.\n\nSoon, we were going hard at it, each of us giving as good as we were getting and both of us racing to make the other come. Our cries of pleasure mixed and grew louder as we devoured each other's cunts, and I nearly caved when Shaie began to fuck me with her mouth, her tongue darting in and out of my wet hole as she gripped my ass and spread the cheeks wide.\n\nI managed to hold my ground and I hooked my arms around her thighs, knowing that I had the advantage of easier access and better leverage. I slid two of my fingers deeply into her, my tongue repeatedly flicking at her clit while I began to suck her. I began to fuck her earnestly and Shaie finally released me, her head falling back on the mattress in ecstasy.\n\n\"Yes, yes! Fucking yes!\" She half-moaned, half-growled, her nails digging into my hips as she gave herself fully to my ministrations.\n\nI felt her begin to tighten around my fingers and I moaned in satisfaction while I synchronized the rhythm of both my mouth and my hand. I grew more desperate as I continued to lap up her juices, now sensing that her pleasure was close. And then it came, her orgasm flooding my fingers and smearing my cheeks, her thighs keeping my head still as Shaie mindlessly ground her pussy against my face.\n\n\"Oh my God!\" Her cry was long and deep-throated, and her palm struck against the soft skin of my ass in reflex as she crested.\n\nI lifted my head as soon as her legs allowed, smiling while I tried to catch my breath. But Shaie moved quickly, not giving me any time to relish my victory as I found myself now pinned beneath her. She had my legs spread apart in an instant as three of her fingers entered me slowly but smoothly, showing me just how wet her mouth had gotten me.\n\n\"Fuuuuck!\" I hissed, my eyes meeting Shaie's gaze as she plunged as deep as she could go. She kept still as my pussy adjusted around her and, soon, I was thrusting my hips against her, my slippery warmth slowly dragging up and down the length of her fingers.\n\nShaie's hand matched the movement of my hips, her rhythm steadily increasing until she was pounding into me. I felt every movement of her fingers as they grazed my G spot over and over, continuously drawing out sounds of pleasure from the back of my throat.\n\nHer eyes held mine as my orgasm neared, and I watched as a particular softness began to mix with the wild look in those golden orbs. It was the same one I had seen earlier on the dance floor and I closed my eyes against it once more, biting my lower lip until my orgasm reached its peak, bursting into a torrent of pure pleasure that had me clutching at Shaie's shoulders as it suddenly hit me.\n\n\"Oh my God, I'm in love with you.\"\n\nShaie's voice was soft and tinged with wonder, but I heard the words loud and clear even through my mindless haze. My arms wrapped around her tighter as my hands balled themselves into fists, and I buried my face against her neck, hiding the sudden tears that I couldn't seem to keep from spilling.\n\nIt felt like it was the worst thing Shaie could have possibly said to me at that moment. Things had been going so well between us that I was afraid any change might ruin it, and\u2014from the moment they left her lips\u2014I knew that Shaie's words had just changed everything.\n\n==========\n\nPart Two\n\nSHAIE\n\nI did not start this out this day knowing that I was in love with Jamie, and I sure as hell had no idea that I would be declaring it by the end of the night.\n\nI knew I liked her. I mean, of course, I liked her. A lot.\n\nDating Jamie had been interesting. What we had wasn't exactly casual, but it wasn't heavy or drama-filled either as I had initially feared it would be. Jamie was actually quite easy and fun to get along with once she had let her guard down, and it had been a pretty amazing couple of months with her.\n\nDid I constantly find myself thinking of Jamie even when we weren't together? Yes. Did I always look forward to any time that I get to spend with her? Again, yes. But I wasn't one to regularly inspect or analyze my feelings, and I figured that was just a normal reaction to a person whose body and company I immensely enjoyed.\n\nAnd that was how I felt as I headed to the club to see Jamie tonight. Normal. Just a regular Jane who was excited by the thought of spending time with the woman that she was exclusively dating.\n\nI made my way towards the club's entrance, stopping at a good distance when I saw Jamie talking with her ex outside. I was far away enough that I couldn't hear their conversation, but it seemed to me that Jamie had the situation under control. Still, I wanted to be around, just in case.\n\nJamie had opened up somewhat about her ex to me but, while I did believe her accounts, I was also aware that some of the things she had told me about Joan might have been coming from a biased perspective. They were exes, after all, and\u2014to be honest\u2014it was a little hard for me to wrap my head around the idea that anyone could ever be that purposely devious and manipulative.\n\nUntil tonight.\n\nThere was a brief moment when Joan happened to glance towards my direction and, while the woman's eyes had betrayed nothing when she saw me, the sudden smirk that had crossed her lips before she averted her gaze gave her away. I could tell the exact moment when Joan had gotten the idea to try and kiss Jamie right in front of me, and I had absolutely no doubt that it was all done for my benefit.\n\nIt might have worked, too\u2014if I didn't know for a fact that Jamie wanted no part of her ex at all.\n\nJamie left hurriedly then, too upset to notice that I was there, and I watched a smug grin spread slowly on Joan's lips as her eyes fell back on me. I had no idea what Joan thought she was trying to prove to me after the way she had just been rejected, but I knew then and there that Jamie had been right about everything regarding the woman's character\u2014and that restraining orders alone wouldn't be enough to get Joan to stop.\n\nI began to walk towards her instead of following Jamie inside the club as I had initially intended.\n\n\"What's your problem?\" Joan asked antagonistically as I neared. I stopped about a foot away from where she stood, noting how she folded her arms in front of her and raised a dark brow at me in defense.\n\n\"You're going to leave Jamie alone.\" I told her with a calmness borne out of sheer certainty.\n\nJoan visibly straightened as I spoke. She was only a couple of inches taller than Jamie\u2014meaning that I still had a good three inches over her\u2014but Joan wasn't the type of person who was easily intimidated.\n\n\"Or what?\" She scoffed, her smile only growing more derisive by the second. Joan was actually very pretty, but there was nothing attractive about her as she continued to taunt. \"Am I supposed to be scared of Jamie's nameless rebound now or something?\"\n\n\"My name's Shaie,\" I replied simply, willfully ignoring the other thing she had called me. \"Shaie Peralto.\"\n\nI rarely threw my last name around\u2014I liked to think that I had managed to pave my own way well enough without using its weight\u2014but I decided to make the exception this time. Anyone worth their salt in the corporate world would be able to associate it with one of the biggest security firms in the state (if not the country), and if Joan didn't... well, then I figured she could try and find out soon enough.\n\nBut surprised recognition did register in Joan's deep blue eyes, and she hadn't seemed so smug even as she defiantly tilted her chin up and said, \"You're deluded if you think I would ever care who you are.\"\n\n\"You should.\" I shrugged, knowing full well that I would have no problem seeing through with my veiled threat if necessary. \"I'll only say this one more time: Leave. Jamie. Alone.\"\n\nI turned away then, having said all that I had needed to say and not really caring to hear Joan's response.\n\nI headed inside the club to look for Jamie\u2014only to immediately find her leaning against a wall near the entrance. She seemed... exhausted, as if she was trying to muster up whatever energy she still had left, and all I could think of was how she was probably one of the strongest women I had ever known.\n\nI had only dealt with Joan for all of two minutes yet I could already feel the stress that accompanied the short interaction as it left my body, and I knew that must be nothing compared to how Jamie felt every time that she had had to deal with her ex over the last four years.\n\nStanding there and looking at her in that moment, I felt a myriad of emotions surge within me. Sudden and overlapping, they expanded in my chest until I thought my heart would burst. It wasn't a foreign feeling\u2014I had felt this way a few times before in the last two months\u2014but it had always been fleeting and I hadn't dared give it much thought.\n\nWell, it wasn't so fleeting this time. The feeling stayed with me, bubbling under the surface throughout the night. There were moments\u2014like while we were dancing, for one\u2014when it had threatened to boil over, but something would always bring it back down to a simmer and the feeling had remained contained and safely undefined.\n\nRight up until it just wasn't anymore.\n\nWe were having sex and I was looking at Jamie, watching and loving the way she responded to my touch. The way she felt around my fingers and the way she tilted her head back and closed her eyes, her lips slightly parted and her breath held, as she neared her pleasure. The way she would always cling to whatever part of me that she could when she finally came...\n\nAnd then, it hit me: I was in love with Jamie.\n\nAdmittedly, it wasn't exactly an ideal time to tell someone you loved them for the first time while you were right in the middle of fucking. But the words came spilling out of my mouth before I could stop them, and I immediately knew that it wasn't just some heat-of-the-moment fluke.\n\nThe feeling that had gnawed at me all night\u2014the feeling that had frequented me throughout the past few weeks\u2014had a name at last, and it all just made absolute sense.\n\nBut then we avoided the subject after, both of us cautiously silent as we settled ourselves in for the night. I still wasn't sure whether that silence was a good thing or not as I lay staring at the ceiling above my bed almost an hour later, but at least Jamie hadn't bolted out the door the first chance she got.\n\nI felt her warm breath on my shoulder, and I could tell from its cadence that Jamie had long fallen asleep. She stirred against me, instinctively pressing herself closer, and I let out a breath, finally allowing myself to relax as I rested my cheek on top of her head and closed my eyes.\n\nI might not have the slightest clue as to what Jamie thought or how she felt about what I had said, but neither of us was going anywhere tonight. Besides, love was still an all-too-new feeling for me, and I was more than willing to let that discussion wait until the morning.\n\n*****\n\n\"Are you serious right now, Shaie?!\" My best friend, Lucy's voice pierced through my head, gaining my attention.\n\nShe didn't seem mad as she stood in front of me with an evening dress on each hand, but she definitely looked exasperated as she glared at me incredulously. It was Saturday afternoon, and Lucy had invited me over for lunch to help her decide which dress she was going to wear for Tony and Marnie's rehearsal dinner later.\n\n\"What?\" I asked, sitting just a bit straighter on her bed.\n\n\"You. Spacing out on me for the fourth time in the last 90 minutes.\" She pointed out, deadpan. \"What's up?\"\n\n\"Nothing,\" I sighed, a little embarrassed by the fact that I had been spacing out. \"I just have a lot on my mind right now, I guess.\"\n\nWell, not a lot, really. Just one specific thing that kept breaking off into a hundred different tangents.\n\nI had woken up that morning to find Jamie just about completely dressed. It was strange because she usually liked to sleep in, and she was putting her shoes on as she sat on her side of the bed. For a moment, I thought she was about to sneak off, but she had turned to me and smiled when she had heard me stir.\n\n\"Good morning,\" Jamie had greeted softly, brushing off a few curls that had fallen across my forehead. \"I didn't want to wake you up yet until I absolutely had to.\"\n\n\"You have somewhere else to be this morning?\" I had smiled back while I stretched out my limbs, glad that last night hadn't scared her away.\n\n\"Yeah,\" Jamie had replied. \"I have to pick up my dress and make sure it's all good for tomorrow. Plus, a bunch of other little errands before the wedding rehearsal\u2014but I'll see you later tonight at the dinner, right?\"\n\nShe had turned towards me again and waited for my response, kissing me lightly on the lips when I had nodded as I sat up. Jamie had given me another kiss before she left, and I had lain back down on my pillow when I heard the door close behind her.\n\nFor some reason, I had begun to grow uneasy, although I couldn't quite put my finger on why I felt that way. Jamie seemed fine. I mean, she didn't seem anxious or upset about last night. She was the same way with me that she had been these past two months, actually.\n\nAnd yet I couldn't shake the feeling that something wasn't quite right, and that feeling had been nagging at me ever since. It had constantly distracted me all day, even now that I was supposed to be helping Lucy out.\n\n\"Like what?\" Lucy prodded, managing to pull back my attention before it wandered off again.\n\nShe brought her hands down to her sides and walked towards me, prompting me to stand and move away as she got closer. I wasn't really in the mood to be pried at the moment.\n\n\"It's nothing!\" I said, frowning when Lucy narrowed her blue eyes and tried to peer into my face. \"Look, I don't want to talk about it, okay?\"\n\nWhen my friend merely continued to study my features, I decided to bring the subject back to the reason I was there in the first place.\n\n\"This one.\" I told her, touching the dress she held in her right hand. Both of them would look perfect on her actually, having been handpicked by Lucy's personal stylist as part of her new wardrobe, and it was really just about making sure that Lucy would neither be overdressed nor underdressed tonight.\n\nThere was a short pause before Lucy glanced at the dress I had picked and considered it again.\n\n\"Okay,\" she finally said, laying the dress down on her bed. Then she moved to return the other one and I breathed a sigh of relief.\n\n\"So, how are things between you and Jamie?\" Lucy suddenly called out from her closet, and I couldn't help but roll my eyes. I should have known she wouldn't just let the matter drop.\n\n\"Fine.\" I answered simply. \"Are we all good with the dress?\"\n\n\"Pretty much,\" Lucy replied, coming out and heading towards her dresser. She opened a drawer and started casually rummaging through it. \"I just need you to help me pick out the earrings to go with it. Wow, two months have got to be some kind of a record for you!\"",
        "I had stood up and leaned sideways against the wall behind Lucy as she spoke, and it took me a moment before I finally realized that she was still going on about Jamie and me.\n\n\"Hey, I've dated some people for longer than that before!\" I protested lightly, shaking my head as she held out two different earrings to her ears and waited for my reaction.\n\n\"In the last five years?\" Lucy asked drily, quickly turning back to her jewelry and then holding up a new mismatched pair.\n\n\"Left.\" I decided. \"And what's your point?\"\n\nLucy shrugged, grinning as she placed the earrings back and turned her full attention back to me. \"Just saying I'm glad things are going great between you two.\"\n\n\"They are.\" I told her, leaving out the part about my creeping suspicion that things somehow weren't so great anymore after last night. I didn't want to talk about it with Lucy, at least not until I knew for sure.\n\n\"Then what's been bothering you?\" Lucy sighed exasperatedly and I grinned. She really couldn't stand not knowing.\n\n\"Okay, look,\" I shrugged. \"How about I'll tell you if\u2014and only if\u2014you tell me what happened on your ski trip last weekend?\"\n\nThere had been something different about Lucy ever since she had gotten back from that trip. She seemed more uptight than usual as of late and, although she tried to pretend as if everything was normal, I knew her all too well to believe that was the case.\n\nI watched now, with a bit of amazement, as a slow blush crept across Lucy's cheeks.\n\n\"Nothing,\" she replied, seeming a bit flustered. \"And it wasn't a ski trip. It was a work trip. It was... nothing.\"\n\nI smiled, choosing not to say anything further.\n\nFrom the way Lucy had responded, it was clear that the trip wasn't 'nothing' at all, but I was more than willing to leave the subject, so long as Lucy let my own 'nothing' go\u2014which she finally did.\n\n*****\n\nI arrived at the rehearsal dinner at about a quarter past 7 in the evening, wearing a thin-strapped, lacy, black dress and heels. The event was held in Marnie's childhood home once again, and I instinctively scanned the rustically decorated room for Jamie as I greeted the happy couple by the door.\n\nFinally, I found her.\n\nShe was speaking with Jenna and one of Tony's groomsmen at the far end of the living room, her tan glowing deeply against the knee-length, soft mustard dress that she was wearing. Her dark curls cascaded in two long and sexy waves over her shoulders as she nodded at something Jenna had said.\n\nHer make-up gave her the perfect evening look, and I watched as Jamie's cherry lips broke into a sexy grin the moment her dark brown eyes fell on me.\n\nIn that moment, it felt like everything was right again. It was if Jamie and I had always been in sync and I had no reason to be worried in the first place.\n\nI set my course towards her, and I couldn't help but smile at the appreciative look she was giving me as I approached. Jamie greeted me with a quick kiss, taking my hand as she seamlessly joined me in on their conversation. Lucy found us a short while later just as dinner was being announced, and the five of us took our seats at the long table.\n\nEveryone seemed to be in good spirits. Speeches were made, conversations were had. It was quite a great evening altogether and yet, somehow, the unsettling feeling that had been with me all day returned as I sat there next to Jamie.\n\nMy disquiet grew stronger by the second until I could no longer pretend that it wasn't there. Something was definitely off between Jamie and me, and it frustrated me to no end that I just couldn't seem to figure out exactly what it was.\n\nIt wasn't like anything had changed with the way we interacted or talked. It wasn't like Jamie was suddenly being distant. No, she was the same as she had always been with me\u2014engagingly flirty and subtly affectionate. She was always holding my hand or touching whatever little part of me that she could, even while she was conversing with other people.\n\nA third of the way through the main course and a couple glasses of wine later, Jamie gently squeezed my thigh under the table and lightly leaned her cheek on my shoulder. We were all laughing at a little anecdote that the bride-to-be's uncle was telling, and her touch brought my eyes to her.\n\nI watched a subtle, nearly imperceptible shift in her demeanor as she giggled and relaxed against my right shoulder, and that was when it finally clicked.\n\nJamie hadn't been relaxed around me all evening.\n\nShe hadn't been acting any differently, but now I could see that it had been a conscious effort on her part not to act differently. It was as if there was some invisible strain on her to stay the exact same way she had been with me for the past couple of months\u2014before last night, before I had told her that I was in love with her\u2014and, in a sense, she had been silently urging me to follow her lead.\n\nWhat if this was all that Jamie wanted us to be? The thought entered my mind then, unbidden. What if this was as far as it could go for her?\n\nJamie's rebound, her ex had called me. Not that I would normally put too much stock on what Joan says, but it wasn't like that thought had never crossed my mind before. I knew from the start that it was a possibility, and I had always thought I was prepared enough to be fine with things if that ended up being the case.\n\nBut the idea of being Jamie's rebound now...\n\nI would probably laugh if it were someone else in this situation and not me. I was the one who liked to keep things casual. I was the one who had no problem getting out of a relationship before feelings started getting in the way and someone ended up getting hurt.\n\nAll this time, I guess I just never thought it was my heart that would ever be at risk of breaking\u2014and it was too late to do anything about it now.\n\nMy heart was already on the line and in Jamie's hands, and damn if the sudden uncertainty of it all didn't scare the shit out of me.\n\n*****\n\nWe dropped Lucy off first before I started driving Jamie towards her apartment. I was only taking her home since we had both agreed to get some rest tonight in our respective beds, given that, as a bridesmaid, Jamie would have to be at the wedding tomorrow much earlier than I did\n\nEverything had been really nice with Jamie for the last hour or so, and I was pretty sure that the amount of wine that she had drunk over dinner had a lot to do with it. I wasn't complaining, especially since that intangible wall between us seemed to be thinning out as a result.\n\nThe wine had also loosened her lips, I noticed, as Jamie produced a steady stream of chatter to keep me amused while I drove. She held my hand in hers, her finger absently tracing squiggles on my right palm as she talked. Things felt perfect in that moment and, for one fleeting second, I wondered if following Jamie's lead and acting like last night never happened would be so bad after all.\n\nAs soon as the thought had come to mind, however, I immediately recognized that it simply wasn't possible. Last night did happen and, like it or not, things just weren't the same anymore.\n\nI couldn't deny or ignore how I felt about Jamie now even if I tried, and I knew I didn't want to end this night still uncertain of how she felt about me as I drove.\n\n\"Jamie, I think we need to talk.\" I told her, cutting off her story about the wedding rehearsal they had earlier. I almost regretted the words as soon as they came out of my mouth, but they had to be said.\n\n\"Oh, I'm sorry, wasn't that what we were already doing?\" Jamie teased, smiling at me but avoiding my gaze when I glanced her way.\n\n\"I'm serious.\" I said firmly, although I couldn't help but grin as well while I quickly turned my attention back to driving.\n\n\"Okay,\" she started cautiously, letting my hand drop to her lap as she lifted her left leg slightly and angled herself towards me. \"Talk about what?\"\n\nI flicked another look towards her direction, glad to note that she was still smiling before I glanced away again.\n\n\"Last night,\" I answered, pausing to take a deep breath before I continued. \"I think we have to\u2014what are you doing?\"\n\nJamie's fingers had begun a lazy path from the inside of my knee as I spoke, and my flesh jumped lightly at the unexpected contact. They travelled up slowly, making their way a couple of inches up my right thigh and hiking my dress up in the process. Her touch was light but electric, and it sent a sudden bolt of desire to the pit of my stomach.\n\n\"I'm driving,\" I reminded her when her hand continued its deliberate ascent up my thigh. I started to turn my head towards her, my eyes narrowing in an attempt to get my point across, but Jamie gently nudged my cheeks back with her other hand, forcing my eyes to look straight ahead.\n\n\"Then eyes on the road and both hands on the wheel,\" Jamie said, taking my free hand from her lap and putting it where she said it should be. \"And maybe slow down a bit, just for good measure.\"\n\nHer tone was playful and teasing, but I could sense that Jamie was excited by the unexpected constraints that my position behind the wheel had placed on me. And judging by the way that my blood had suddenly seemed to come alive in that moment, so was I.\n\nHer hand was back on my thigh in the next instant, and my nerves tingled where her feather-light touch grazed. My heart began to pound in anticipation as Jamie continued to ignite the heat between my legs, but all I could do was wait for her fingers to finally reach the part that was now aching to be explored.\n\nMy excitement was not without frustration, however, as her fingers continued to tease my sensitive skin, and a part of me wanted to level the field so I could reciprocate.\n\n\"Should I pull over?\" I asked when her hand dangerously neared my waiting warmth.\n\n\"No.\" Jamie replied in a tone that left no room for argument, both thrilling and maddening me further.\n\nI continued to do as she told, unable to deny just how much I was enjoying this little game. It wasn't like Jamie to be this bold and commanding\u2014nor was I used to being restricted\u2014but the apprehension that came with knowing that I wasn't in my comfort zone merely served to heighten my arousal, mixing instead of clashing with it.\n\nI sucked in a breath when I felt Jamie's finger across the length of my slit over my panties. Her movements were unhurried, her pressure firm she deftly played with my cotton-clad pussy, and I could feel my legs relaxing a little as I gradually opened myself up to the movement of her hand.\n\nNeither of us spoke now. It was taking all I had just to be able to concentrate on driving, and Jamie seemed content to silently watch my reaction. Her breath grew increasingly uneven as her fingers rubbed soft circles on my clit, and I fought the urge to close my eyes when they briefly pressed against my wet center for one delicious moment.\n\nEyes on the road. Hands on the wheel. I reminded myself, my thigh muscles straining against the sensual onslaught of her touch.\n\nI heard Jamie's sharp intake of breath when her hand finally found its way inside the fabric of my panties, her fingers feeling deliciously cool against the fire she had so skillfully stoked between my legs.\n\n\"Jamie...\" I managed to sigh, but I wasn't sure if I was telling her to stop or begging her to keep going.\n\nShe ignored me, her fingers dragging the slippery wetness they encountered up towards my clitoris where she began to gently rub back and forth. I couldn't stop the lengthy moan that escaped my lips, my hands tightening on the wheel as Jamie began to repeatedly tease the aching nub.\n\n\"Fuck!\" I hissed when I almost missed a turn, and Jamie gave a short, breathy laugh next to me.\n\n\"As you wish,\" she said, right before she suddenly dipped two fingers into my now-dripping cunt. Once. Twice. Thrice in slow and deep successions, causing me to moan every time.\n\nBut then she was back to rubbing my clit\u2014her touch light and teasing one moment, then urgent and pressing the next before delving into my warmth once again. She repeated the action a few more times, driving me closer and closer to mindlessness.\n\nI heard Jamie whimper beside me and snuck a glance. She was biting her lip, her gaze fixed intensely on my mouth, and I knew that she was now feeling pretty restricted, too.\n\nIt was a relief when we finally reached Jamie's apartment building.\n\nI took my seatbelt off as soon as I put the car into park, my legs immediately relaxing as my hand took command of hers. I pushed her deep inside me, resting my head against the seat as my hips began to move. I heard Jamie moan as I rode her fingers hard and fast, my hand firm on her wrists as I thought of nothing else except claiming the pleasure she had dangled in front of me.\n\nJamie groaned and curved her fingers inside my pussy. I could feel the tips dragging through the soft ridged flesh of my cunt and I knew I was so close. Jamie knew it, too, and her thumb pressed upward against my clit as she gave a soft string of encouraging words that I could barely make out through the intense humming in my blood.\n\nMy orgasm built quickly and steadily, causing me to cry out in pleasure when it finally burst through. My nails dug against the flesh on Jamie's wrist and my flesh tightened, keeping her in place while I pulsed around her fingers in a seemingly unending rhythm.\n\nIt was a while before my heart eventually showed any signs of slowing down, and I opened my eyes slowly when I felt Jamie shift in her seat. She was gazing at me tenderly, her eyes shining with emotion and a hint of sadness that confused me a little before she smiled, leaning over to place a deep and gentle kiss on my lips.\n\nShe had also taken her seatbelt off and was almost kneeling in her seat, her free hand propping against the back of my seat for leverage. I gasped as she unhurriedly drew her fingers out of me, and her tongue touched mine, leaving the feint taste of wine in my mouth when she finally pulled away.\n\nThere was no sadness in those deep brown eyes now as they fell on me and Jamie's lips broke into a triumphant grin, clearly pleased with what she had just accomplished. I couldn't help but laugh a little.\n\n\"Oh, you know I'm going to get you back for that,\" I promised her, still a little out of breath.\n\n\"Maybe,\" Jamie shrugged, giving me another kiss before she suddenly opened the passenger door, grinning as she glanced back at me. \"But it won't be tonight. I'll see you at the wedding tomorrow.\"\n\nWith that, she was out of the car and out of my reach, smiling back at me one last time before disappearing into her apartment building.\n\nI could do little else but stare after her with my dress still hiked up and my cunt still exposed. I breathed deeply, waiting for the strength to return to my legs while I slowly realized that Jamie had effectively deflected my attempt to talk about us, specifically about last night.\n\nA sobering thought occurred to me then. Did Jamie intentionally initiate sex tonight just so she could avoid the conversation?\n\nI sat up straighter and began fixing myself, remembering the last time that Jamie had been this confusingly evasive\u2014and why. It had been when we first started hooking up, when she was still too afraid to actually date.\n\nAnd now, she was running scared. Again.\n\nI let my head fall back on the headrest of my seat and groaned. I couldn't believe that Jamie and I were back to this. Two fucking months later, and we were right back where we started.\n\nWell, shit.\n\n==========\n\nPart Three\n\nSHAIE\n\nIt was a lovely wedding held in a picturesque, Baroque church that perfectly complemented the solemn elegance of the ceremony. Tony had never looked more dapper in his tux; Marnie was absolutely radiant in her wedding dress, and two people couldn't be happier as they stood together in front of the altar.\n\nBut it was Jamie that my eyes had kept returning to from the moment she had started down that flower-strewn aisle in her bridesmaid's dress.\n\nIt was the exact same off-shoulder cut that she had worn in the dress shop eight weeks ago, except in a different color. I watched the way her tan glowed deeply against the gentle champagne hue of the fabric, her right leg occasionally peeking through the knee-length slit as she walked.\n\nHer makeup was soft and classy, her lips a light shade of pink instead of the red tones she usually wore, and her hair was done up in an elegant bun, with the tips of her long brown curls flowing over to touch the base of her nape.\n\nShe was fucking gorgeous, and it sucked how all I had to do was look at her and I immediately started wanting her. Everything would be so much easier if that wasn't the case.\n\nThe previous night was still fresh on my mind, and I was still a little miffed and a whole lot frustrated with her because of it. I had no idea where things stood between us, and I wished Jamie would stop keeping me in the dark and just fucking tell me already so that I could figure out what to do next.\n\nI mean, it would be one thing if she was just afraid, wouldn't it? But I would need to make a much harder decision if it turned out that Jamie simply didn't love me back.\n\nI sighed, forcing myself to look away as I tried to concentrate on the event at hand. We were at a wedding, neither Jamie nor I actually had the time to discuss things now, and any resolution would just have to wait until the day was over.\n\nPretty soon, it was time for Tony and Marnie to exchange their vows, and my eyes instinctively sought Jamie once again as the lovely couple began making their promises to one another\u2014only to find Jamie staring back at me with an expression that was both incredibly soft and intense at the same time.\n\nMy breath caught at the smile that slowly spread on Jamie's lips when our gazes met. Hope began to form in the back of my throat, and I smiled back at her, knowing then and there that Jamie loved me, too...\n\nBut will she ever be brave enough to actually own it?\n\nAs if thinking the same thing, a sad cloud crossed Jamie's features and she glanced down. When she brought her eyes up again, it was to fix her gaze at the bride and groom as they said their 'I do's'. I did the same, the both of us choosing to deal with our own questions at a later time.\n\nJamie came over and gave me a quick hug as soon as the ceremony was over, her hands landing in mine as they fell away from my arms. I barely had the chance to tell her how beautiful she looked before I felt a light tap on my shoulder, and I turned towards my aunt's familiar voice.\n\nAunt Liz was one of those people who just have a way of livening up a room. She was about 5'5\", with the same light brown eyes and dark hair as mine, although her locks were straight and longer. She was only fourteen years my senior and, growing up, I definitely saw her as a cool aunt and was very close to her.\n\nShe had married Tony's and Lucy's father when I was thirteen and, while they had ended up divorcing a few years later, she had also grown fond of and close to her ex-husband's kids\u2014which was why she had flown in to see Tony get married.\n\n\"Aunt Liz!\" I exclaimed, ignoring the quickness with which Jamie let go of my hand.\n\nLiz and I exchanged an excited hug and made small talk about how she had been and when she had gotten in, and then I tried to introduce Jamie, who had stepped forward as I lightly placed my hand on her waist.\n\n\"Aunt Liz,\" I began. This is Jamie, my\u2014\"\n\n\"Hi! I'm friends with the bride.\" Jamie interjected, smiling as she offered her hand to my aunt, who shook it engagingly in return. \"I understand you and Tony are very close?\"\n\nI glanced at Jamie quickly, my eyes narrowing just the tiniest bit in annoyance as she began to converse with Liz. Did she have to remove herself so far from me?",
        "It wasn't like I was planning to introduce her as my girlfriend. I was merely going to say that she was my date for the wedding and, while I could understand that Jamie might not be ready for that yet, I felt like she could have at least introduced herself as my friend.\n\nI didn't have time to dwell on that, however, since one of the event organizers suddenly called Jamie away for more pictures. She excused herself and I turned my attention back to my aunt, knowing that the next time I would see Jamie would be at the reception.\n\n*****\n\nThe Barrett Hotel wasn't much\u2014I knew because I had booked a suite, aware that I would probably be drinking more than just a glass of wine for the night\u2014but the Grand Ballroom where Tony and Marnie held their reception fully lived up to its name.\n\nLocated on the fourth floor mezzanine of the building, the room was both spacious and luxurious, with a high ceiling, marbled columns, and elegantly carpeted floors. There were balconies that overlooked pool and garden views on three of its sides, and the room was perfectly designed to give off a sense of the ethereal fairytale that I bet the happy couple was currently living.\n\nJamie, on the other hand, was a chaotic blur throughout the evening.\n\nI had never seen her be this social. She was always flitting\u2014joining other people in on our conversations one moment, and then dragging me to the dance floor the next. It was always the fast songs she seemed to want to dance to, and I would have found all of it strange if I didn't know exactly what she was doing.\n\nIt was impressive\u2014and, at times, mildly amusing\u2014the lengths that she would go to just to not have to actually talk about us.\n\nJamie might not be avoiding me, but she was definitely avoiding being alone with me. She was not allowing any room for the two of us to have a moment to ourselves, all in an effort to circumvent having the conversation. I let her have her fun, knowing we were bound to have the conversation at some point anyway.\n\nI could be patient, I thought. At least, for tonight.\n\nBut Jamie miscalculated when she led me to dance for the third time. The DJ had been playing another fast tune as we made our way into the crowd, but he suddenly switched into a slow, romantic song by the time Jamie and I had found a spot to settle in.\n\nI grinned and held out my hand to Jamie, my eyebrows raised in a silent challenge. I could see the flash of apprehension in her eyes before she resignedly stepped into my arms. We both knew she couldn't very well get out of this one, at least not without saying why and ending up having the very same conversation she had been trying to evade all night.\n\nThe two of us began to move and, gradually, we both started to relax around each other. I hadn't realized how strung this whole situation had made me until I felt all the tension clear away from my body, and soon, I forgot it ever existed.\n\nAll I felt now was how good Jamie felt in my arms as I pulled her close. She rested her head just below my left shoulder with a gentle sigh, and I felt her hands tighten on the back of my neck the longer we swayed to the music until it seemed as if she were holding on to me.\n\nAs if she never wanted to let me go.\n\nMy hands instinctively pressed against the base of Jamie's spine in response. I wasn't going anywhere, and the fact that I felt the strongest urge to reassure Jamie of that reminded me just how head over heels I was for her.\n\nI pulled away a bit, and Jamie lifted her head to meet my gaze. That look was back in her eyes\u2014the one that said she was in love with me, too\u2014and it gave me the courage to open my mouth and tell her again how I felt.\n\n\"Wait. Shit. Don't!\" Jamie said, lightly pushing off me before I could speak. A sudden fear crossed her features before she turned and hurried away, leaving me once again staring incredulously after her retreating form.\n\nI felt the anger that had been gradually building up inside me. Whether it was intentional on her part or not, Jamie had been putting me in a rollercoaster of hope and frustration these past couple of days\u2014and I had just about enough of it.\n\n*****\n\nJAMIE\n\nI broke through the crowd, not having any idea what to do or where to go. All I knew was that I needed a place where I could be alone for a moment so that I could sort out the anxiety that I was now feeling.\n\nI took a quick look around, finally deciding that the nearest ladies' room would suffice. I walked towards its direction, not stopping until I was safely inside, and placed my hands on the sink counter, gazing at my own reflection while I reminded myself to breathe.\n\nJust. Fucking. Breathe.\n\nIt wasn't a minute later that Shaie came barging in, the golden fires in her eyes swiftly zeroing in on me. I straightened up and instinctively took a step back, noting the way Shaie's perfect breasts were heaving through the bodice of her mint and emerald dress.\n\n\"'Wait-Shit-Don't?!'\" Shaie exclaimed, the frustration in her voice echoing off the tiled walls. The anger in her tone scared me, but I knew that she had every right to be mad. \"What the hell was that, Jamie?\"\n\nI took another breath, not knowing what to say. Thankfully, we heard the sound of someone flushing, and a gray-haired woman came out of a stall soon after. The stranger glanced at both Shaie and me as she awkwardly made her way over to the sink. Meanwhile, I did my best to avoid Shaie's eyes while the two of us waited for the lady to finish washing her hands.\n\nShaie began checking the other stalls as soon as the woman finally left. Once she was satisfied that no one else was there, she quickly walked over to bolt the door before turning her attention back to me.\n\n\"Well?\" She prompted, crossing her arms in front of her as she waited for my response. I took a deep breath and mentally tried to come up with an excuse for my behavior.\n\n\"I'm sorry. I just\u2014\" I started before finally sighing in defeat. There was no way to avoid talking about this now, so I figured I might as well opt for the truth. \"I panicked. I knew what you were going to say.\"\n\nThe look that crossed Shaie's amber eyes told me that she knew exactly what I was talking about and that she had no plans of denying it either.\n\n\"And you don't want me to say it?\" She asked, her tone a bit cautious and a lot softer this time as I watched her shoulders relax a little.\n\n\"Why does anything have to change?\" I asked, unable to keep my own frustration out of my voice. \"I mean, things were going so well! It was fun! It was simple! It was\u2014\"\n\n\"Convenient?\" Shaie finished drily with a slight frown of annoyance.\n\n\"Safe.\" I corrected her with a pointed look.\n\n\"Same thing, really.\" She shrugged. And then, \"You think love isn't any of those things?\"\n\n\"Well, it certainly isn't simple, is it?\" I answered with a discouraged sigh as I leaned my back against the counter. I shook my head slightly at the floor before turning to look at her again. \"Shaie, I have issues. Clearly. My ex alone\u2014\"\n\n\"I know that!\" Shaie interrupted, running her hand through her soft curls as she walked over and sagged against the counter beside me. \"You've had those issues before we started dating. You've had them in the last couple of months. And I have issues, too, Jamie, but so what? We deal with them!\"\n\n\"Oh, yeah?\" I countered, my laugh humorless as I glanced at her. \"What happens 6, 8, 12 months later when Joan doesn't stop, and you find yourself still dealing with the same shit I have been going through for years?\"\n\n\"That's not fair, Jamie.\" Shaie said quietly, and I shied away from her gaze knowing that she was right. \"You're judging me for something I haven't done yet about something that hasn't even happened yet. I can't argue with that.\"\n\nIt took me a moment to speak again as I tried to grope for an explanation that Shaie might accept.\n\n\"I have no control over what Joan does or what she might do,\" I finally said. \"And you shouldn't have to deal with that. You shouldn't want to\u2014\"\n\n\"Well, that isn't up to you!\" Shaie exploded, the jagged edge returning to her voice. \"I hate to break it to you, Jamie, but you can't control how I feel either\u2014no more than I can. I lo\u2014\"\n\nI pushed off the counter, crossing the small distance between us as she spoke, and fitted my lips against hers before she could finish saying the words.\n\n\"Jamie...\" Shaie began to protest, immediately drawing her head back. But my mouth caught hers once more and I cupped her jaw before she could turn away, and I closed my eyes as I kissed Shaie with everything that I got.\n\nI ran my tongue across her lips as my mouth slashed across hers\u2014urging, imploring, trying to coax Shaie's response while I molded myself onto her body.\n\nMy right hand travelled down the bare skin of her arm to seek her own while I hiked the skirt of my dress up with the other. With a sigh, I drew her bottom lip into my mouth as, with a desperate whimper, I brought her hand and pressed my center insistently into her touch.\n\nDidn't it already show how much I do want her? Didn't Shaie know she had so much of me already? Couldn't that be enough?\n\n\"Please.\" I begged.\n\nWhen Shaie finally reciprocated, it was with all the anger and frustration that she was feeling. Her kiss ravaged and bruised, her teeth clamping on my lip before her tongue delved sharply into mine as she finally took what I was offering. She switched our positions abruptly, and it was me that once again leaned back on the counter now as her skilled fingers began to move under my dress, drawing out more and more of my juices with every stroke.\n\nA sound of pleasure escaped my lips when Shaie focused all her attention on my clit, coating it with my own wetness as she rubbed rough circles on the sensitive nub. Her mouth broke off from mine when she heard my moan, and Shaie turned me around so swiftly, I could only gasp and brace my palms against the marbled counter while she bent me over the sink.\n\nShaie kept a firm pressure on the small of my back as she threw my dress up over my waist. It was easy for her to rip off the lacy fabric of my panties as she brusquely nudged my feet apart, exposing my slippery cunt to her hungry view.\n\nI hissed, wincing in slight pain and discomfort when I felt Shaie's digits seek entrance. I was wet, but I wasn't ready yet for the three fingers that she was determined to push all the way through. I bit my lips, my eyes seeking hers in the mirror for comfort as Shaie continued to stretch and fill me, but Shaie was intent on watching her fingers instead as they disappeared inside me, inch by slow inch.\n\nI closed my eyes, taking the pain of Shaie's anger along with the pleasure of her desire. I welcomed the punishment, and hoped that this would somehow help me atone.\n\nShaie stilled once her fingers were up to the hilt, allowing me some time to adjust to their fullness. Her free hand snaked around my shoulders, pulling me up against her as she cupped my jaw between her fingers and bared my neck to her mouth. Her teeth sank into the sensitive skin and I instinctively writhed against her when she began to suck, causing me to feel every delicious movement of her fingers within me.\n\nAgain, I moaned, feeling myself get wetter, and Shaie moaned right with me as she slid even deeper into my cunt.\n\nShe started moving her hand, her fingers twisting and drilling further into my slippery hole before she changed her rhythm all of a sudden and began ramming her fingers in and out. The hand above my throat fell to grip my waist and I sagged forward against the counter, unable to contain the steady stream of sounds that Shaie drew out of me with every forceful thrust.\n\nWith my fingers straining against the marble, I tried to brace myself for the stormy orgasm that Shaie was stirring up inside me. I closed my eyes and gritted my teeth, my body jerking forward while Shaie fucked me hard and deep until I finally cried out. I could feel my pussy clamping on her fingers as the muscles on my thighs began to shake against the force of my pleasure. I bowed my head onto my arm, gasping and moaning as I rode jolt after jolt of ecstasy until it seemed as if my legs were about to give out from underneath me.\n\nAfter a while, the pulsing in my flesh slowed and I flinched as Shaie eased her fingers out of me. She was pulling my dress back down when I glanced up again into the mirror and caught her eyes at last.\n\nIt was then that I finally saw the world of hurt behind Shaie's anger, and it stabbed at my heart, causing me to gasp and whirl around to face her. My hands instinctively reached, but Shaie stepped back before I could touch her, one side of her full lips curling as she softly scoffed at my gesture.\n\n\"Shaie...\" I started to plead, not really knowing what to say to make things right as she took another step back.\n\nAnd then she shook her head wordlessly before turning away, and I could only watch as Shaie walked out of the door. Hot tears began to burn the backs of my eyes and I fell against the sink as I pressed my face into my hands.\n\nWhat have I just done?\n\n*****\n\nIt was a while before I was able to gather enough composure to return to the wedding reception.\n\nMy eyes scanned for Shaie as soon as I stepped into the room, and I found her sitting at our table listening to whatever Lucy was telling her at that moment. Shaie looked up, as if somehow sensing that I was there now, too, and our gazes met for one long second.\n\nAll I wanted to do was to go to her and fix this, but I didn't know how or where to begin.\n\nMy feet moved in her direction anyway, only to stop when Shaie abruptly stood. She said something that caused Lucy to look my way before Shaie turned and headed towards one of the balconies, where she knew I wasn't likely to follow.\n\nHow the fuck could I have let things come to this?\n\nAll I had wanted was to hold on to what I had with Shaie, and now it seemed like it was all slipping from my hands. Everything I had been trying to preserve for the past two days was suddenly crumbling and I had no clue how else to keep it together.\n\nLucy stood up, too, but I was surprised when the beautiful blonde walked towards me instead of following Shaie. She touched my arm when she got to where I was standing, and gently led me away from the crowd into a quiet corner before finally turning to face me.\n\n\"Okay, what is going on between you two?\" Lucy asked, the frown on her face seeming to be more out of concern than anything else.\n\nI hesitated, uncertain if I should be talking about this with Lucy. She was Shaie's best friend, after all. But then, it occurred to me: Lucy was Shaie's best friend. Maybe, if I told her, then she could help Shaie understand where I was coming from.\n\nSo I started talking to Lucy. I talked about how Shaie said she was in love with me. I talked about how things had been really great between Shaie and me right up to that point, and how I hadn't wanted things to change. I told her my concerns about Joan, about how I just wanted to keep Shaie untouched by that messy part of my life.\n\n\"Do you love her?\" Lucy suddenly interrupted, catching me off guard.\n\n\"W-what?\" I stammered, and Lucy's hands went to her hips as she cocked her head to the side.\n\n\"Do you love Shaie?\" She repeated, emphasizing each word as if the answer to her question would solve everything.\n\nI opened my mouth, but no word came out. What did love have to do with it anyway?\n\nI had loved Joan, too, and it was that same love that Joan had used to manipulate me into staying despite the abuse. How was I supposed to trust any judgment based on how I felt after that?\n\nLogically, I knew that Shaie was nothing like my ex and that my dynamic with her had been very different from what I had with Joan, but there was always that chance, however slim, that things with Shaie might change. I just wasn't sure that I could handle it if I just ended up making that same mistake again.\n\n\"If you love her, then just tell her,\" Lucy continued when she got no immediate response from me. \"But if you don't\u2014and I am definitely saying this as Shaie's friend\u2014then you need to cut her loose. Clean and quick.\"\n\nEvery fiber of my being balked at the thought of letting Shaie go. I mean, the whole point of this conversation in the first place was so that I could keep what I had with Shaie.\n\n\"It's not as simple as that!\" I protested. \"My ex\u2014\"\n\n\"But it is as simple as that!\" Lucy exclaimed, the frustration in her voice matching my own and catching us both by surprise. When she next spoke, she was quiet, as if she was just coming to her own realizations. \"Or it can be if you want it to be.\"\n\n\"But\u2014\"\n\n\"Look,\" Lucy said firmly, sounding a bit impatient now as if I was suddenly keeping her from something. \"It's either you love Shaie, or you don't. Either way, you need to stop running away from things and let her know how you feel.\"\n\n\"I'm not running away,\" I frowned.\n\n\"No.\" Lucy agreed before she added, \"But this\u2014what you're doing? You're going to end up pushing her away and you know it. And if that's the plan well, then you should just save Shaie the time and trouble and end it now.\"\n\n\"I don't want to lose Shaie.\" I confessed, and Lucy's features softened. I glanced away, feeling close to tears once again.\n\n\"Then don't.\" Lucy said kindly, her hands touching my forearms to drive her point. \"Shaie's probably just as terrified as you are, but she's trying anyway. The least you could do is to try, too. Stop playing relationship chicken. Stop hiding behind your ex. Shaie deserves better than that.\"\n\nShe let go of my hand and stepped back. \"Now, if you'll excuse me,\" Lucy said. \"I have somewhere else I have to be right now.\"\n\nWith that, the blonde woman hurried away and I turned my head towards the balcony where Shaie had retreated earlier, knowing that everything Lucy had just said was right.\n\nI had mostly been ambivalent through all this, and Shaie had shown me nothing but patience while I had constantly kept one foot out of the door. It was high time that I decided whether I was actually in or out.\n\nI took a deep breath and started walking.\n\n*****\n\nSHAIE\n\nI didn't turn when I heard the footsteps walking towards me, but I saw the hand that fell next to mine on the cold, concrete ledge and knew right away that it was Jamie's.\n\n\"I thought you were scared of heights,\" I commented, turning away from the gorgeous view of the night sky that I had been looking at to glance at her. I had none of the anger that I had felt earlier, only a sense of exhaustion and defeat that was slowly creeping in.\n\n\"I am.\" Jamie said. There was a slight edge to her voice that held my attention as Jamie gazed back at me, and I noticed it then\u2014the nearly imperceptible trembling in her fingers as she shakily explained, \"This doesn't mean that I'm any less afraid.\"\n\nI turned fully towards her, suddenly aware that we were now talking about something more than just heights.\n\n\"I love you, Jamie.\" I told her simply, not really expecting her to say it back right now, but feeling the need to put my foot down. \"I can't help it, and I should at least be able to say that to you without you shutting me out. I grew up in a family where people didn't tell each other how they felt and I've known for a long time now that that isn't what I want for myself. So if you\u2014\"\n\n\"I know.\" Jamie interjected. \"I mean, I understand. And I'm sorry.\"\n\nThere were tears brimming from her eyes and I tried to brace myself for what she was about to say next. Jamie took her time, that same hesitation that had infuriated me when we were starting showing up again, but I kept silent, knowing that it merely meant that she was trying to open herself up.",
        "\"I thought,\" Jamie finally began with a shaky breath. \"That I was only trying to be fair to you. I thought that I was only trying to keep you from getting dragged into my own personal mess\u2014and that's true. That's part of it. But, if I'm honest with myself, it's also that I'm just scared.\"\n\nJamie's eyes were imploring, begging to be understood as they stared into mine.\n\n\"I'm scared that things are changing,\" she continued. \"I'm scared because I don't know if it means things between us are going to be better, or if everything is just about to go downhill from here. I'm scared that I might be making just another mistake, or that one day you'll think that you've made a mistake. I'm scared to give too much of myself because I'm scared that I'll end up losing myself again\u2014but I find that all that isn't as scary as the thought of losing you.\"\n\nThere it was again, that sudden hope that sprang in my chest as she spoke. But after the emotional back-and-forth that Jamie had put me through in the last 48 hours, I was a little wary of trusting the feeling.\n\n\"What are you saying?\" I asked her.\n\n\"I'm saying that I'm in love with you, too.\" Jamie replied, her smile tentative, as if she didn't know what her words would do. \"I have been for a good while now, I was just too scared to admit it and let you know.\"\n\n\"And now you're not scared anymore?\" I hedged, wanting to be sure that I wasn't just imagining things as Jamie took a tiny step closer.\n\n\"Are you kidding me? I'm fucking terrified!\" Jamie said with a soft little laugh, but she was quite serious when she added, \"But I'm not going to let it stop me from being happy anymore. I love you, Shaie.\"\n\nI couldn't help but smile then. I hadn't known just how much I wanted Jamie to say she loved me until that very second and, now that she had, I was suddenly beside myself.\n\nI breathed deeply, fighting the unexpected lump of emotion at the back of my throat as I pulled Jamie in for a deep and gentle kiss that left us both weak-kneed and clutching each other for support by the time our lips parted.\n\n\"I love you, too.\" I told her, my heartbeat still racing as Jamie and I smiled at each other.\n\nWe stayed just like that for a couple of beats, and then we both turned our heads back to the view before us as we stood on that balcony with our bare arms touching.\n\n\"What does this mean?\" I finally asked her in the continuing silence. \"I mean, what happens now?\"\n\n\"I have no fucking clue,\" Jamie laughed softly. And then she sobered a bit as she shrugged. \"I guess we'll just have to find out.\"\n\nThe sigh that I let out then was as shaky as her own, but the fingers that Jamie slowly laced with mine as she took my hand in hers told me that we would be discovering this new, uncertain path together.\n\nAnd that was more than enough for me.\n\n-END-\n\n*** They say write what you want to read, and that was all that I had set out to do from the moment I first started writing about Jamie and Shaie. Thanks to those of you who have read and followed these two characters on their journey! Your responses had been nothing short of awesome and were, at times, exactly the push I needed to keep writing.*** \n\n \n\n \n"
    ],
    "authorname": "JamieHunter326",
    "tags": [
        "lesbian romance",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/undaunted"
}