{
    "title": "Oil of Roses Ch. 27",
    "pages": [
        "Many thanks to Literotica author 'englander1961' for her help, editorial services, encouragement and a title much better than my original, which has elevated her to the status of House Goddess of Sexy Story Titles. Thanks to Sammi Scott, aka Titsy McYarn, the Cute at the Heart of the Abyss for her help and valuable critique. Thanks to Literotica author 'KY ridgerunner' for the stories that planted the idea in my head months ago. A belated and much overdue thanks to John Hasty for his peerless editing. Bounteous thanks to Kevin for his incredibly thorough critiquing and voluminous notes.\n\nAfter you've read this, if you have any inclination at all to comment, please do so, either by email or on the comment board... The best way for me to grow and improve as an author is to hear from the people who read my work. I welcome constructive critiques and non-abusive comments. I will answer, in at least a semi-prompt manner, any email that comes with an email address. If you feel you must respond in a hateful or angry fashion, you may put your head down upon your desk and do so, quietly to yourself, for as long as you feel it necessary. This story may not be copied to other sites without my permission. If you have not read the earlier installment(s) of this tale, it would probably help you to make sense of this one if you did so.\n\n* * * * *\n\nEven with the worries over the pain in Harry's lower back, the young women were feeling a sense of relief, an easing of the worry and fear they'd been living under since the attack. They were finally convinced that given time to heal, Harry was going to be okay. The men that had hurt him had been dealt with and no one had any doubt that Benjamin Sapperstein was living on borrowed time.\n\nNicki'd gone to take a nap, so Carol and Kelly had wasted no time getting naked and falling into each other's arms .\n\nIn a warm post-coital glow they had grabbed a quick shower and 'Princess' was massaging her Mistress when the phone rang.\n\n\"Princess, hand me my phone.\"\n\n\"Yes ma'am.\"\n\n\"Hello Margo, what's up? Oh, just giving the new girl a work-out... yes, she's very sweet.\"\n\n\"Thank you Mistress.\"\n\n\"Quiet, Princess... uh, okay... that's an odd thing for your psychologist to ask, isn't it?\n\n\"Alright, if he and his wife want to go it alone, they can try looking around in 'Whips & Clips' down at Industrial and 8th. It's sort of the touristy club for bondage and domination, not a whole lot of S & M, despite the name of the place. They'll definitely find some toys that are willing to play with novices, but the pets will probably be novices themselves in which case the whole experience could end up very unsatisfactorily or they'll get hustled by some unscrupulous fucktards. I really wouldn't recommend it.\n\n\"If they're willing to wait and go in with me as a guide, possibly Tamara as well, you and Kelly, Eddy... hell, if they're content to wait even longer I'd love Harry to go with us, I can take them somewhere they're much more likely to find someone they'll have a positive experience with.\n\n\"Alright my love, talk to you when you get here.\"\n\n\"If I may inquire, Mistress, what was that about?\"\n\n\"After relaying the story of her recent past to Dr. Stallings, her psychologist, he's interested in him and his wife shopping for a pet or pets for themselves. He wanted some recommendations for places to go shopping, as it were.\"\n\nThere was a knock at the room door.\n\n\"Who is it?\" Carol called out.\n\n\"Nicki,\" came the muffled reply.\n\n\"Well, if she's in for a penny she's in for a pound,\" Carol murmured to herself. \"Princess, go open the door for her.\"\n\nNicki's eyes widened as the door to the suite opened and she was motioned inside by a naked Kelly, still damp from her shower, who appeared to be without any self-consciousness whatsoever and in absolutely no hurry to close the door.\n\n\"Come in, Nicki, I'm just giving Mistress a massage,\" Kelly said as she padded back to the bed, stopping to pick up the bottle of massage oil from the ice bucket where she'd had it warming in hot water.\n\nCarol rolled her head to one side and looked up at Nicki. \"Hey, thought you were going to nap?\"\n\n\"Tried to,\" Nicki said as she curled up in the chair, hugging her knees to her chest, \"but as soon as I closed my eyes, my brain started going a mile a minute. Stuff about the move, mostly.\"\n\n\"Damn, I hate when that happens,\" Carol murmured as Kelly poured a line of oil down her back. The scent of roses filled the room. Carol smiled at the memories the smell brought to her. She turned her head a bit and peered at Nicki. \"Sister-in-law, relax, your body English is just screaming 'tension'. If you're going to live at the house, naked bodies are something you're going to see a whole lot of.\"\n\n\"I know... it's just... oh, what the fuck!\" Nicki got up, went to the impromptu bar, poured herself a large Jack Daniels, downed it, and stripped off her clothes. \n\nNaked, she returned to her chair and forced herself to sit in a more relaxed position.\n\n\"You're right, Carol, if I'm going to be around, I need to get over my issues about this kind of thing.\"\n\nIn a sickeningly sweet cornpone voice, Kelly said, \"Welcome to the naked side of 'family', sugah!\"\n\nAs Nicki snorted out laughter, Carol turned beneath Kelly and pulled her down to her, kissing her deeply. Kelly relaxed into the kiss after only a second's hesitation, molding her body to her wife's, the two of them sliding along each other, finding the perfect fit between their two lovely forms. \n\nAfter the kiss broke, Kelly sat up. Carol looked up at her lover. \"Kelly, you can't ever know how glad I am that you agreed to marry us, but I'm looking forward to spending my life trying to show you.\"\n\nNicki wouldn't have believed that the black woman's beautiful nipples could crinkle any tighter, but they did.\n\n\"Mistress, if you keep saying things like that, Miss Nicki will get more of a show than she might be ready for.\"\n\nA gentle warmth and a pleasant tingle of anticipation she hadn't felt in a long time let Nicki know that perhaps she was more ready for that show than Kelly and Carol thought, but she said nothing.\n\n\"You're right, Princess, back to my massage!\" \n\nAs Carol turned over yet again beneath Kelly, Nicki relaxed into another, more natural position in the chair, half-sprawled across one arm.\n\n\"So Carol, from what Harry told me I know that you're his and Margo's pet but you're dominant around Kelly some of the time and that Kelly is submissive to you and Margo, but apparently not Harry, Margo is usually dominant but she has a minor submissive streak as well... who the fuck decides who's what and when?\"\n\n\"Well, for starters, right now Kelly's need to be submissive is stronger than my need to be submissive... a lot of very strange stuff has happened to my beautiful Princess in a very short amount of time. That's left her feeling 'out-of-control', and there are two ways to handle that, by putting yourself 'in control' or letting go. She's decided to 'let go' for awhile, and that's fine with me, and with Margo, Kelly's earned that right a thousand times over. There's a remarkable sense of freedom in voluntary slavery to someone you love and who loves you in return. You have the illusion of not being responsible for anything. You don't make decisions, or at least any important ones, they're made for you by people who cherish you. You don't worry about things, as you have no control, no say-so, no opinion... you just relax into service. Oh, there are generally lines you won't cross, things you won't do, but in a good relationship you already know it's highly unlikely you'll get anywhere near those, so you can relax and be irresponsible. All you have to do is please someone, and as you love them and care about them, that's not at all difficult. When it's time for you to do something, you'll be told, or you'll have a schedule. You're taken care of, and all you have to do in return is serve.\n\n\"The freedom to be submissive is a gift you give someone out of love. If Margo walked in right now and needed to be submissive, Kelly and I would go dominant because we love her and that's what she needs. Likewise, if she was here in her usual headspace, which is sort of maternal dominant, and felt the need, we'd both go sub, or I'd relax into submissive and Kelly and Margo could both use me, whatever felt right to the participants at the time. Then there's 'Complete and Total Ice Bitch' mode, which she's played in a role-playing fantasy of mine once and made me and Harry so hot and bothered it was damn near 'Race to the Rape', although I doubt Margo would've put up any fight at all. If she showed up in that headspace, I suspect Kelly and I both would be gleefully groveling on the floor, doing whatever she told us to for just the chance to please her.\"\n\nKelly's squirming as she sat astride Carol's thigh gave Nicki and Carol a pretty clear idea of her reaction to that possibility. \n\n\"What happens if someone wants to be dominant and no one wants to be submissive?\" Nicki asked, getting up to make herself another, weaker, drink.\n\n\"That's one of the advantages of having a serious submissive as one of the members of the relationship,\" Carol said as Kelly began to oil the cheeks of her ass. \"It truly is an effort for me to play 'dominant'... although at the moment... mmm... it's certainly a happy place to be.\"\n\n\"Looks like,\" Nicki said admiringly.\n\nCarol raised herself up on her elbows. \"Want a massage? I'm sure Princess wouldn't mind, would you dear?\"\n\n\"No Mistress, not at all,\" Kelly replied, moistening her lips.\n\nIf Nicki Grimes had had quite a bit more to drink, she'd have been able to claim later that she didn't really know what she was doing. But she did know, and she didn't want to avoid responsibility for anything that might, or might not, happen due to her actions.\n\n\"Sure,\" she said, moving to the bed and lying face down next to Carol.\n\n\"It'll take a few moments for me to heat the oil up again, please forgive the delay,\" Kelly said, heading towards the sink to run more hot water into the ice bucket.\n\n\"Not a problem,\" Nicki replied. \n\n\"So, to continue our conversation,\" Carol said, turning her head to face her, \"I foresee a much more likely problem where everyone is in a submissive mood and no one's feeling particularly dominant... and in that circumstance, it'll be my duty, as the true submissive in the group, to serve the desires of my master and mistresses and play the dominant, whether I feel like it or not.\"\n\n\"Wouldn't that be a problem for you, if you weren't in that headspace at all?\" asked Nicki.\n\n\"No, like I told Harry, I'm an actress... it's part of the job description, so to speak. Remember, my purpose is to serve so I'd put on a very convincing performance and although my emotional needs might have to take a temporary back seat to the rest of the household's, my physical needs would be met most thoroughly... I'd be in the perfect position to insure it.\"\n\n\"Makes sense when you look at it that way,\" Nicki said, chewing on her bottom lip. \"So right now, Kelly is sort of hiding, or taking a vacation from responsibility.\"\n\n\"Yes ma'am,\" Kelly replied, coming back in from the bathroom. \"And I'm loving every minute of it. My life was feeling like I was trying to steer a rollercoaster... and that's blatantly impossible. Right now, I feel like I've, for the moment, just accepted that, thrown up my hands and shrieked 'wheeeee'!\n\n\"Of course, I also enjoy a lot of the punishment parts, so I guess it's a good thing I'm such a bad girl,\" she added, grinning mischievously. Out of sight of Nicki, she cocked an eyebrow at Carol, then ran her eyes up and down Nicki's naked body, licking her lips. Carol barely raised both eyebrows in return, as if to say 'play it by ear'. The beautiful woman poured a line of warm oil down the length of Nicki's back.\n\nNicki was startled by the oil, and by Kelly's hands spreading it over her skin, stroking down onto the sides of her breasts as if they'd done this a thousand times before, but she forced herself to relax. \n\nCarol resumed talking to her to help the process. \"It's kind of funny, Nicki. That's the same massage oil I used on your brother, first night, or rather morning, that I was with him.\"\n\n\"He told me a little about that first encounter, but I don't recall anything about a massage.\"\n\n\"It wasn't exactly a massage. He was pretty hung-over, in spite of my ministrations... it wasn't like I could see evidence of intra-cranial bleeding, but loud noises were definitely a bad idea and he was moving real slow. I was giving him sort of a sponge-bath, direly needed with as much alcohol as he was sweating out and we were talking. When I got around to washing his cock, well, it produced a reaction-\"\n\n\"I imagine it would,\" Nicki said, with just a hint in her voice that Carol washing her crotch might produce a similar state of excitement.\n\n\"-and I felt obligated to banish what I had summoned. So I used that oil as lubricant to give him a hand job.\"\n\n\"No, no he definitely didn't mention that, I'd have remembered if he had,\" Nicki said. \n\nSomething in her voice had Carol's brain twitching... she couldn't tell if the excitement she felt in Nicki's voice and reaction was due to the fantasy of Carol pleasuring Nicki, or something else but something definitely had the woman excited. Carol's eyes shifted to Kelly but she was innocently working the oil into Nicki's mid-back. She caught Kelly's eye and mouthed 'go for it'. Kelly nodded. \n\n\"If you'll excuse me, Nicki dear, I need to go make a phone call or two, but I'll leave you in Princess' capable hands... and other body parts as well. And then you'll be in both of ours... at least until Margo gets back. Then I'm afraid you'll be at the mercy of the three of us.\"\n\nThe smile that flickered across Nicki's face left no doubt that she was okay with that fate.\n\nAfter Carol had gotten up and grabbed her phone, she turned just before leaving the room. Nicki's eyes were locked onto her, at ass level.\n\nWhen she was insured privacy, she called Tatiana.\n\n\"Tattie? Yeah, looks like the three of us, probably the four of us, once Margo gets back, might be busy for a little while. Feel like playing hostess?\n\n\"You are a life saver, Tattie. Love you, talk to you later.\"\n\nShe dialed Margo's number, expecting it to kick over to voicemail. She was right.\n\n\"Margo, when you finish with Dr. Stallings... well, things are getting interesting between Nicki, Kelly and I. You know how you always tell everybody to trust my instincts, well, they're telling me this is a good thing. Her interest seems to pretty much spike on all three of us so come on in when you get back.\"\n\nShe returned to the bedroom to find Kelly straddling Nicki's back, facing her feet. Kelly's feet were tucked under Nicki's armpits to either side of her face. Nicki was holding them tightly against her as Kelly ran her oily hands forwards and back over Nicki's ass and legs, slowing down to pay special attention to running her thumbs thoroughly down and between Nicki's ass cheeks. Carol could see the slow and rhythmic twitching of Kelly's cunt on Nicki's back. As she got closer she saw that Nicki was kissing and sucking on the instep of Kelly's foot.\n\n\"I walk out of the room for a few moments and look what I come back to... my wife seducing my sister-in-law.\"\n\n\"Oh, like you didn't see that happening before you left,\" said Nicki, pausing in her oral assault on Kelly's foot.\n\nSomething in her voice and the cadence of her speech brought both Kelly and Carol up short. Kelly turned and looked at Carol.\n\n\"Damn, she sounds like Harry.\"\n\n\"Yeah, no doubt whose sister she is,\" Carol responded.\n\n\"If she wasn't so sexy, I'd find it a little creepy,\" Kelly said before returning to her massage of Nicki's butt.\n\nCarol opened the window a crack, and then sat down in front of Nicki, her legs casually open, exposing herself fully to her sister-in-law while she loaded the small pipe they'd brought from the house.\n\nLighting the pipe and drawing a deep lungful of smoke, she waited and exhaled, then drew in another mouthful and squatted in front of Nicki, bringing their lips together. Nicki's mouth opened without hesitation and Carol passed the smoke to her, along with a thrusting tongue and a firm kiss. \n\nNicki managed to keep the smoke down, fighting back the urge to cough as Carol nuzzled her ear and whispered, \"I'll be right back, I have to go take care of our serving girl\".\n\n\"Open wide, wench,\" she said as she prepared to draw in another mouthful of smoke. \n\nKelly looked at her bride-to-be and said \"I love you, Mistress\" as she opened her mouth just in time for Carol to press their lips together, sharing the mouthful of smoke.\n\n\"I love you too, Princess,\" Carol replied after they'd released their breaths. \"And just as I can't wait to marry Harry and Margo, I can't wait to marry you.\"\n\nKelly crawled forward, almost as if against her will, and forced Carol down across the head of the bed, laying her body over Carol's as she wrapped one hand behind Carol's head and firmly planted the other in Carol's crotch. Nicki disentangled herself and rolled over to watch as Kelly, like an unstoppable force, kissed and fondled her Mistress as Carol struggled to get free. Carol's hand was holding out the pipe, motioning towards Nicki, so she leaned in and took it, allowing Carol to use both hands to fend off her amorous slave. Finally Carol managed to get a hand into the hair at the back of Kelly's head and pull her away. \n\n\"Bad girl, very bad girl, Princess!\"\n\n\"Mistress, when you say things like what you said about marrying me, it's very hard for me to control myself.\"\n\n\"So I noticed... so Nicki noticed... well Nicki, how do you think we should punish this wench?\"\n\n\"Uh... I really don't... um...\"\n\n\"Don't worry, sweetie, if you make a suggestion that's not appropriate, Princess and I will artfully steer around it, you're not really being put on the spot.\"\n\n\"Okay... is a spanking appropriate?\"\n\n\"That girl just wants to get her hands on my ass,\" Kelly said, grinning. \"You don't have to wait for a reason,\" she continued, shifting herself closer to Nicki, \"you can touch me there anytime you want to.\"\n\n\"PRINCESS!\"\n\n\"Yes Mistress,\" Kelly said, sliding into a curled up position, her hair still held in Carol's fist.\n\n\"That's quite enough of that. Yes Nicki, I think a spanking is very appropriate, as are a few other punishments as well, but I'm going to need your help. We're working without a lot of the equipment we have at the house, so I'll need you to restrain her.\" \n\nAnd so it was that Kelly ended up lying down on top of Nicki, facing in the opposite direction. Nicki's torso poked up between Kelly's legs and she'd wrapped her arms around the victim-du-jour's legs, locking her hands together to make sure Kelly's legs couldn't easily get free. Kelly's arms were bound together underneath Nicki's legs with silk scarves.\n\n\"Exactly why is it again you need my help restraining her?\" Nicki asked, smiling lasciviously.\n\nCarol laughed, \"Other than the sheer erotic kick of using one person to restrain another? No real reason, although I get the feeling you're not objecting too strenuously?\"\n\nNicki could feel Kelly writhing atop her, breasts pressed against Nicki's legs, each heaving breath of Kelly's causing her beautiful ass to move and the shifts in her position bringing the aroma of Kelly's arousal drifting up to her nose. \n\n\"Not objecting at all, Carol. Now, shall we proceed to punish this willful girl?\"\n\n\"In a moment,\" she said and went to kneel down face to face with Kelly. \"You remember your safe word?\" Kelly nodded. \"Alright then, don't be afraid to use it. This is a game, it should be fun for everyone. If it's not fun for you, then we have a problem that we need to fix, okay?\" ",
        "\"Yes Mistress.\"\n\n\"Good girl.\" \n\n\"Alright, Nicki, first lesson in slave management... remember that if you hear her utter the word 'pomegranate', or in case her voice is muffled any set of sounds that resemble 'pomegranate', or barring that if she snaps her fingers or claps her hands three times in rapid succession, you... Stop... immediately. You stop everything and if she's bound or restrained or gagged, you get her out of it, immediately.\"\n\nShe went back to the other end of the bed, picked up the paddle, leather on one side, fur on the other, and raised it, leather side down.\n\n\"Call out the count, Princess.\"\n\n\"Yes Mistress.\"\n\nThe first swat was light, almost playful, but they increased in severity, slowly, gradually, until with number six Kelly responded \"Six, pomegranate!\" \n\nWith that, Carol eased back the severity several notches for the remaining four swats and after the tenth had fallen began to run the furry side of the paddle gently over Kelly's reddened bottom.\n\nFor Nicki, it had been one of the most oddly erotic experiences of her life. \n\nShe had seen sex shows of every variety, most in pursuit of a story she'd done on the sex club industry, she'd gone to strip clubs and gotten lap dances from both genders, but nothing had been so primally erotic as watching Kelly be spanked scarcely a foot in front of her face while she held her down. Kelly's body, squirming against hers in a dance of pain and pleasure, their sweat and the smells of their arousal mingling together in a palpable fog around them... combined with her somewhat lowered inhibitions, it was more than she felt it necessary to resist. \n\nAs Carol continued to caress Kelly's ass with the paddle, Nicki quickly released her hold on Kelly's legs and shifted from over and around to under and supporting Kelly's body above her until Kelly's knees came down to take most of the load. \n\nHer re-positioning completed, Nicki said, \"Eat me, Princess.\"\n\n\"Yes ma'am... what should I call you, ma'am.\" With that Kelly began to tease her way around the edges of Nicki's cunt.\n\n\"Is 'Mistress' acceptable to you, Nicki?\" Carol asked.\n\n\"Um hmm,\" Nicki squeaked in agreement, wriggling in an attempt to bring the lovely woman's teasing tongue more firmly in contact with her aching clit.\n\n\"You will refer to her as Mistress Nicki, Princess,\" Carol said.\n\n\"Yes Mistress,\" Kelly replied, breaking briefly from her torturous attentions to Nicki's twitching cunt.\n\nKelly began to huff her warm breath over Nicki's mound, her nose brushing the tips of her pubic hair as her breath flowed throughout the mat of hair. \n\nThe whimper Nicki made was quite audible. Her fingernails raked gently down Kelly's sides and her squirming dance continued.\n\n\"Nicki is there something wrong,\" Carol asked, breathing the words huskily into her ear.\n\n\"Yes... she won't... she just... she's teasing me!\"\n\n\"Second lesson, if you're not in control of your slave, you're the bitch, not her. Right now, you're not in control of your slave. Remembering the first lesson, get control of your slave.\"\n\n\"Kelly, I asked you to eat me...\" Nicki said hesitantly.\n\n\"Nicki, are you forgetting the dynamic? Get control of your slave.\"\n\n\"But Carol, what if I do something wrong?\"\n\n\"Then we'll hear the safe word or signal and you'll stop and everything will be fine. Until then, have fun... this is a game. Play with us,\" Carol said, caressing her sister-in-law's belly.\n\nThrough all of their conversation Kelly had continued to tease Nicki, occasionally giving her the barest taste of what she craved by flicking the very tip of her clitoris with her tongue.\n\nIn her mind, Nicki thought back to her fuck-buddy Georgina in Atlanta... she was always so assured and confident, always in control... Nicki's hand snaked between their bodies, her hand curling up behind Kelly's head.\n\n\"Slut, I said 'eat me' not 'tease me'. And I didn't intend for you to take your good sweet time with it either, slut. I meant now.\" She forced Kelly's head down into her crotch and the girl's talented tongue immediately made itself at home all up and down Nicki's warm slit. \"Oh... that's much... better... slut.\" She took her other hand, moved it into position and locked her fingers behind Kelly's head, pushing her cunt into Kelly's face, riding her mouth and tongue like a cock.\n\nCarol curled up next to her, playing with her hair with one hand while caressing her with the other. \"Now, you're no longer the bitch in this situation, Nicki... very good. Now a question, sister-in-law... do you like it rough, or gentle?\"\n\n\"Gentle... unless otherwise noted... like our little slut... is finding out... right now.\"\n\nKelly had brought her arms in tight against Nicki's sides, wrapping her hands around the blonde woman's slender ass, massaging her ass cheeks forcefully, while she nibbled and kissed and licked and bit and sucked on whatever was thrust into her mouth at the moment.\n\nCarol reached over and tilted Nicki's head to the side, bringing their lips together, before shifting her hand back down to stroke the small, pert breasts that adorned Nicki's chest. The two women's tongues slithered around each other until Carol pulled back and looked at Nicki admiringly.\n\n\"Whoa... damned glad to make your acquaintance, sister-in-law.\"\n\nNicki blushed. \n\n\"So, how are you doing?\" Carol continued.\n\n\"Almost there... but can't quite... do you have a vibrator... or a dildo... something she could... use on me?\"\n\n\"Oh, we have better than that. Let her up, Nicki. Kelly, go get strapped in, now!\"\n\nFifteen minutes later, Carol held onto Nicki, running her hands over her body, as the woman lay atop her while Kelly fucked her hard from behind, the sound of flesh and leather slapping together punctuating each stroke. In the interim Carol had made herself a Jack on the rocks and was taking sips of it through a straw, then passing some to her new lover as they kissed.\n\n\"Goddamn- (slap) you're my (slap) kind of (slap) woman (slap) not only (slap) has her (slap) wicked (slap) way with (slap) me and (slap) loans me (slap) her slave (slap) and feeds (slap) me Jack (slap).\"\n\n\"Welcome my love to the joys of multiple partners... you should be around... well, you will be around, when the whole gang is there... Eddy and Tamara with each other, Karen and Patricia with each other, the rest of us; Margo, me, Kelly and Harry-\" \n\nThe orgasm that ripped through Nicki's body at that moment... Carol wondered at the timing... could be, probably was, purely coincidental.\n\n\"-all together... it's real easy to end up so stimulated that your eyes just roll up in your head and you're gone, for all practical intents and purposes... of course, the fact that we're all very stoned helps with that as well.\"\n\nAfter that Nicki's orgasms came fast and furious, one after the other and Carol locked their lips together, kissing her new lover while she held her and the trembling continued to move through her in waves.\n\nThen after seeing to Mistress Nicki's needs, Kelly moved down to Mistress Carol's waiting hole, fucking her beloved wife as Carol held their sister-in-law's insensate body in her arms. As Carol slowly approached her own climax, her whole body rocking foreward and back from Kelly's vigorous efforts, Nicki returned to the land of the aware and gave her wholehearted help to Kelly by sliding off and repositioning herself to lick and suck on Carol's clit. It really didn't take long at all after that.\n\nCarol lay there, her sister-in-law back in her arms, her beloved but willful Princess, having removed the strap-on, curled up next to her, and wondered how next they were to chastise her wayward pet.\n\n * * * * *\n\nAfter the break he'd gently helped her explore her feelings about the incredible changes her life had undergone in the recent past, and about the trauma of the attack upon her lover Harry. \n\nIt was evident to him that Margo was closer to a case of Post-Traumatic Stress Disorder than she allowed herself to think she was and as the afternoon drew to a close, he had done his job admirably, asking her the questions whose answers led her to the same conclusion.\n\n\"So Hal, where do we go from here?\" Margo asked, her voice rough from an afternoon of effectively non-stop talking.\n\n\"Margo, you know the treatment as well as I do... therapy and medication; although in your case, I think since you're unrepentantly self-medicating, the medication can be avoided altogether, especially if you make sure to do a bowl or two before bed every evening.\"\n\nShe smiled. \"That's an awfully strange prescription to hear from a doctor, Hal.\"\n\n\"Bullshit, you know as well as I do that pot has innumerable medical uses and this is damn sure one of them. You haven't manifested any symptoms that make me think anything stronger, or a more conventional prescription, is warranted. If you do, I'll write you a prescription.\n\n\"As far as the therapy, I'll want to see you twice a week to start, let's say two hour sessions, get with Helga, my office-Fuhrer on Monday to set up days and times.\"\n\n\"Helga, your office-Fuhrer?\"\n\n\"Yeah... a patient of mine with a lot of rather interesting quirks, not the least of which are a fascination with Nazi regalia and a dominant streak a mile wide... she occasionally works as a professional Dom, but since her 'Ilsa, She-Wolf of the SS' persona is very specialized, she can't really make a living at it. What she can do is be the most efficient office manager I've ever had. She was let go from her old job because her faux-German accent and occasional slip of the tongue into Nazi-speak created a hostile work environment for a Jewish co-worker. She's not a racist, at least not any more so than any of us, but it still disturbed her co-worker, so after being counseled and written up several times, she was let go. She couldn't afford therapy anymore and I needed an office manager. Serendipity abounds! I pay her more than she was making, her therapy is part of her benefits package and I have the most efficiently run office in the city... even if the rest of the staff lives in a sort of mock-terror of her.\"\n\n\"Alright, that's definitely an interesting way of working out the difficulties.\"\n\n\"Yes it is... 'creative solutions', that should be my motto. And this'll be completely off the books, Margo. It would be anyway, but with you and your crew agreeing to help out Tori and me, well, if anything positive comes of that, I'll be repaid, a thousand times over.\" \n\n * * * * *\n\nMargo sat in the car, listening to her voicemail. \n\nOn the one hand, she had Carol telling her she'd probably be walking into an orgy in her suite.\n\nAnd on the other, Dr. Lowry telling her Harry was spiking a fever and it looked like the infection that was causing it was in the area of his lacerated kidney. \n\nPart of her so wanted to scream at her wives and her sister-in-law, telling them now was not the time for happy-happy-fuck-fuck... but she knew that was only her stress and the aftermath of her therapy talking. Lowry was a damn good doctor and no one, least of all her, was surprised at this infection. In spite of all their medical prowess, with the damage done and the contamination of the wounds, everyone had expected secondary infections to show up. She and Lowry had discussed a preventative course of antibiotics but decided to adopt a 'wait and see' attitude. Well, they'd waited and now they were seeing exactly the sort of infection they'd expected. A course of antibiotics should take care of the infection and leave Harry as right as rain before they knew it, at least on that front.\n\nShe drove to the hospital and checked in on him, only to find him talking with some of the G & P employees. She leaned in, kissed him and whispered in his ear that she and the others would be in a little later, but right now she was going to go de-stress for awhile.\n\nHarry looked at her and smiled. \"Go ahead, my love, you deserve it. Don't worry about me, I'm feeling better already. See y'all a little later.\"\n\n * * * * *\n\nMargo strode into the room, her mind a whirl of conflicting emotions. It had been years since her last therapy session and she'd forgotten how she felt in the aftermath of a good session... disturbed. As the therapy did its work, stirring things around in her psyche, bringing things to light that she had hidden from herself, forcing her to look at herself in new and sometimes uncomfortable ways, it was to be expected that she came away from it with her mind and emotions at a roiling boil.\n\nShe entered the bedroom to find Kelly lying bound on one side of the bed, looking at Nicki and Carol as they slept, arms and legs entwined. \n\nMargo knelt down behind her. \"So, how did it go, Princess?\" she whispered.\n\n\"Very well, Madam, very well. She's a wonderful playmate, so like our husband in some ways that it's almost scary, but so dissimilar in others. Her self-image, her self-confidence, they need a lot of work, but she's going to be an excellent member of the family.\"\n\nMargo untied Kelly. \"I need you in the bathroom... I think we'll be in there awhile.\"\n\n\"Yes Madam,\" Kelly replied, \"whatever you wish.\"\n\nThe two of them walked softly into the suite's large bathroom and closed the door.\n\n\"Undress me, Princess. Make it quick.\"\n\nKelly was startled by the change in tone and feel of Margo's voice and attitude, but not hurt or alarmed. She felt safe under the control of this woman no matter where they went.\n\nShe removed Margo's suit as efficiently as she could, folding each piece and putting them on the counter.\n\n\"So, am I to gather from your bound condition when I found you that you've misbehaved this afternoon?\" Margo asked, stern and cold.\n\n\"Yes Madam,\" Kelly responded, eyes downcast as she continued undressing her. \"I teased Mistress Nicki when I should have been satisfying her, among other, lesser, transgressions.\"\n\nThe curl of Margo's lips gave her opinion of Kelly at the moment. \"So be it,\" she said. \"Then for your lapses in obedience I shall continue your punishment.\"\n\nAs Kelly finished undressing her, Margo leaned back against the wall, parted her legs and grabbing hold of Kelly's hair, forced her to her knees. She pushed the bathmat, thick and fluffy, over towards Kelly who slid it under her knees, then Margo forced Kelly's head between her open thighs. Margo could tell she was only slightly whiff, but the principle of the act was plain. 'Princess' would've been expected to service her without regard for her state of cleanliness.\n\nWith one hand Margo caressed herself, allowing herself to sink into the wealth of sensations Kelly was subjecting her to. With the other hand, Margo kept a tight grip upon Kelly's head, holding the reins of her servant, as it were. \n\nFor her part, Kelly found herself quite happy where she was. She had let go of herself and her mischievousness and done as Carol said, given herself over to service. A woman she adored had let her know what was required of her and although the smell and taste were stronger than usual, they were by no means unpleasant. Kelly gave it her all, licking and sucking, nuzzling her face into the thick mound of hair, seeking out Margo's clitoris with her mouth and tongue, exploring the folds and crevices of Margo's cunt with her fingers. Deep in her throat, she heard herself making sounds of satisfaction, sounds of pleasure, sounds of worship at the oldest of humanity's temples.\n\nMargo in turn responded. She set the pace, thrusting herself forward onto her lover's face, forcing Kelly to match her, finding herself teetering on the edge of orgasm, unable to go any further. The agony was delicious and she rode along that edge, seconds and minutes of desire and frustration stretching out into what seemed an infinite period.\n\nAnd then her mind shifted gears... her husband was going to be alright, the beautiful woman on the floor between her legs was her wife, another wonderful woman in the next room was her spouse as well. Intensified by the riot of emotions flooding through her, the climax that hit her was so strong that her knees went beyond weak and she slumped towards the floor.\n\nKelly moved her hands from where they'd been occupied and caught her wife and Mistress as she slumped, helping to ease her down to a sitting position.\n\n\"Are you all right, Madam?\"\n\n\"Yes... yes I am... just hold me, sweetie, just hold me. That was one hell of an orgasm... I believe I needed that more than I thought.\"\n\nThe two women curled up on the floor together until Margo's legs returned to normal. \n\n\"Alright Princess,\" she said, her voice and tone much more relaxed than previously, \"let's get me showered.\"\n\nAs Margo let herself be bathed by Kelly, she explained to her pet why her mood was so mercurial.\n\n\"So there's a chance you'll be like this after every session of therapy?\" \n\n\"I'm afraid so, darling. I'm sorry; it's just the way things-\"\n\nKelly's hand came up to her mouth. \"Shhhh, Big Mama, don't be sorry... you make sure you come get me after every session.\"\n\n\"What?\"\n\n\"Margo, my love... not only is it good to be needed, but I love you, I want you... hell, I want you in some ways I didn't imagine I'd ever want someone. Being with you while you're raw and bleeding emotionally and mentally... it's a gift you give me, an honor you do me.\n\n\"And it's a hell of a fun ride, too... for people who like roller-coasters.\"\n\nAs she finished bathing Margo she continued. \n\n\"It's pretty much known to everyone by now that I'm in love, messy, sloppy, romantic love, with our husband, right?\"\n\n\"Yeah, that's pretty much a given at this point.\"\n\n\"Well, what might not be quite so evident, but is no less true, is that I'm very much in love with you and Carol as well, just in different ways. Think about this... Harry doesn't really get to play with Princess much, if at all... but there's nothing Princess wouldn't do for you.\n\n\"And I do mean, nothing, Margo, my trust in you is that absolute.\"\n\nMargo looked at her wife with eyes more open than before. \"Don't you trust Harry and Carol just as much?\"\n\n\"Yes, but it's different somehow... not sure how to explain it, or even if I can explain it, ever. While we're all married to each other, for me, there are differences.\"\n\n\"How do you see our little group marriage?\"\n\n\"That's easy... we're all married to each other.\"\n\n\"No, silly, wonderful woman; I mean roles... who plays what roles?\"\n\n\"Most of the time, we're all siblings, although you're the older-sister-who-mothers-us. Sometime though, Harry is the father, you're the mother, Carol and I are sisters.\"\n\n\"So that's how you see us. How long have you had incestuous fantasies?\"\n\n\"About my own parents? Oh God, icky beyond belief, never... about someone playing those roles, either literally or figuratively, or the roles of the siblings I never had?\" She slid her arms around Margo's waist, drew her close and whispered in her ear, \"Ever since I first started fantasizing, Big Mama. And hearing about that little family scene y'all played out for Carol about drove me up the wall. Not the characters, per se, although those could be fun to play with, but that you actually went anywhere near that set of taboos. I think that was when I realized there was nowhere I could dream of going, fantasy-wise, that y'all wouldn't be willing to go with me.\"\n\nMargo reached out and directed the water spray from the shower into the corner, as far up the tiled wall as it could go. Then she carefully guided Kelly and herself down into the tub where they sat together as if in a summer rainstorm.\n\n\"Come here, baby... let Mama hold you.\"\n\nKelly curled up in Margo's arms as best she could. Margo gently nudged Kelly's head towards her tits. \n\nKelly looked up at her through the falling rain and her eyes asking the question. \n\n\"Go ahead, little one, Mama wants you to.\"\n\nKelly put her lips around Margo's nipple and began to nurse, gently, sweetly, at Margo's breast as if she was indeed drawing nourishment from her.",
        "\"That's it, baby, oh, Mama likes it when her little girl treats her tits that way. You just take all the time you want nursing on me, baby. I've got all the time in the world for my little girl.\"\n\nA deep-throated whimper came from Kelly and Margo knew her guess about some of the origins of Kelly's fantasies had been proven correct.\n\n\"Oh my sweet baby... there's nothing in the world for me to do but be with you, take care of you. I'll be here for you as long as you want me.\" The sucking intensified and Margo could see tears mixed with the rivulets of water on Kelly's face. \"There's nothing in the world more important to me than you, baby. There are some other people, your Daddy, your sister, probably your Aunt Nicki too in time, that are as important, but none of them are more important than you... and nothing outside of our family comes anywhere close.\"\n\n\"N-n-not work?\" sobbed Kelly.\n\n\"No sweetie... not work. Nothing outside this family is anywhere near as important to me as you.\" \n\nMargo was astounded... from a conversation on fantasies she had suddenly been granted a look at a deep and old wound in Kelly's psyche, a wound that she was still learning to deal with, a wound that had brought her into their lives. That she had been the delivery driver that brought them their Chinese that night might well have been mere chance, but after that initial meeting, and the attraction that Carol felt for her, Margo could now see and understand that it was their sense of family, of their loved ones before all others and against all comers, that had brought this treasure of a person so fully into their lives. She was sure that Kelly's parents had loved her and that Kelly had known it. But she'd never felt that unconditional, 'you-are-the-most-important-person-in-our-world' kind of love from them, although Margo had no doubt they felt that way about their daughter.\n\n\"Shhh, baby, it's okay, Mama's here and you're here and you're safe in the arms of your family... we love you and you'll always have a home with us.\"\n\nKelly's shaking arms clutched at her as if she were in fear of losing herself in some great tempest. Margo stroked her hair while turning the water off with her foot.\n\n\"We're always going to love you; we're always going to be on your side, my lovely girl. Mama and Daddy, your sisters and brother, we're yours and you're ours, now and forever after.\" She held the young woman as the water ran from their bodies, stroking her skin and telling her daughter how much she loved her as Kelly slowly calmed down.\n\nWhen at last Kelly had stopped shaking and her tears had dried, Margo kissed her and said, \"Let's get you and me dry and then we'll go lie down together and talk in the living room.\"\n\nKelly let the tit fall from her mouth. \"Yes Mama.\"\n\nAs Margo dried her little girl off, she thought once again how strange the course of her life had become. Now she had a family, a family who could be whatever she wanted or needed it to be for her. A family that could be whatever any member of it needed. As she finished drying off Kelly, the beautiful woman's eyes lit up as she said, \"Now can I dry you?\"\n\n\"Sure you can, sweetie.\" Margo stood and let her wife, her sister, her daughter dry her, reveling in the care and tenderness the young woman showed with every stroke of the towel. When she was finished, the two of them crept through the bedroom and into the living room of the suite. Margo pulled out the hide-a-bed from the sofa, sheets still there from Tattie's night on it.\n\nThe two of them looked at each other with mischievous glee in their eyes, scooted under the covers, pulled them up over their heads and faced each other, giggling.\n\nAfter she had brought her child-like mirth under control, Margo gazed into her partner's eyes. \n\n\"So, what do you want to do now, my love?\"\n\nThe eyes that stared back at her in the dim light that filtered through the sheet were once again the eyes of the Kelly she was used to. The curtain that had been drawn aside offering a deeper glimpse into her was closed.\n\n\"Well Mama,\" she said, as her body slithered across the sheets to press against Margo, \"I was kind of curious to see where that whole 'nursing' thing might lead. You have a nipple for me, Mama?\"\n\n\"For you, my love, always,\" Margo replied as the first scents of their arousal began to make themselves known over the smell of shampoo and soap. \"Mama always has a tit for her little girl.\"\n\nAs Kelly snaked her arm down Margo's side, past her knee and up between her legs, she broke suction on the tit and said, \"Hmm, seems like Mama might have something else for her little girl as well.\" She ran her finger through the damp mat of Margo's pubic hair and found her wet for another reason. \"Mama, does your little girl excite you?\"\n\nMargo felt Kelly's need to be the aggressor, and slipped into the fantasy with her. \"Kelly,\" she said, \"a tit is one thing... but this... you need to stop that right this instant!\"\n\nThe predatory gleam in Kelly's eyes let her know she was spot on in her read of the situation.\n\n\"Oh no, Mama, I don't think so... you thought you could get your little kinks fulfilled, naked with the daughter, nurse the daughter, feel like she's still your little girl, all innocent and sweet while you get off by rubbing yourself on her, having her bite you.\" In a flash she had rolled Margo onto her back and was squatting atop her, hands holding Margo's wrists to the bed. \"I don't think so... that game was cute the first couple of times, but I want more and you're going to give it to me.\"\n\n\"Sweetie, no... we can't... I mean, what we've done already is wrong,\" Margo replied, into her role, tears leaking from the corners of her eyes.\n\n\"You knowing it was wrong didn't stop you from doing it, did it?\" Kelly hissed. \"Didn't stop you from feeling me up all these years, did it? You've been molesting me for years, grinding your cunt against my leg, having me bite you on your tits... what, you think I wasn't going to figure that out eventually? So now, Mama, it's time you either give me what I want, all I want, or I tell Daddy everything.\"\n\n\"If you tell your father he'll leave me!\"\n\n\"You goddamn bet he will... and take Carol and me with him. And if you don't think I'll be bouncing on that thick slab of dick before the first week is out, you're dreaming. It'll happen so fast and so naturally that he'll be fucking me and screaming my name before he can realize what's going on.\" The young woman looked at her mother with desire and anger and contempt and love. \"I'll be crying in the night, nightmares of the abuse you put me through, I won't be able to stand sleeping alone. 'Daddy, can I please sleep with you?' and then it'll be comfort the only way I've known, sucking on his nipples.\" She looked down at her cowering, horrified mother in triumph. \"You know as well as I do that from that point, he's lost. With the mouth you've trained and the body I inherited from you, in no time he'll be balls-deep in this fourteen-year-old and wondering why he waited so long. And once he gets a taste for it, and I tell him how much I love it and want it never to stop... hell, the two of us will have Carol in the bed with us not long after. Think about that, Mama... you resisted your urges with her for all this time, and it'll turn out you didn't have to.\"\n\nMargo sobbed beneath her, one part of her brain reveling in the fantasy they were playing out.\n\n\"Then, if you're very lucky, some day I'll give you a call. And you'll want back into our little 'family affair', so you'll come to the mall where I'll be sure to have a lot of my friends along and you'll spend an afternoon 'clothes shopping' with us all. Of course, what you'll really be doing is servicing us all like the whore you'll have become. And after all that, when you've got your tongue as deep in my ass as it'll go, I'll get on the cell and convince Daddy to let you back into our lives...\n\n\"Or you can give me what I want now... and avoid all that trouble,\" Kelly said, easing her body down to lie atop Margo, whispering seductively in her ear. \"Come on, Mama... I don't want to be angry with you... I don't want you to leave... I just want you to finish what you've started a thousand times.\" She began to rub her cunt against her mother's thigh, teasing her clit on Margo's soft skin.\n\nThe broken woman beneath her was breathing in great heaving breaths as she fought to control her tears and her terror, her physical desires fueled by the soft body-to-body caress of her daughter's skin. \"But how... do I know... you won't... seduce your father... anyway?\"\n\n\"Oh, make no mistake, Mama, that's going to happen, and big sister Carol too... you started us down this road... your only choice is whether you're going to be here for the ride.\" The young girl was rubbing herself on her mother faster, and her eyes were beginning to appear a little glassy. \"How does it feel to be me, Mama? How does it feel to have someone using your leg to get themselves off? How does it feel to be used?\"\n\n\"I... I don't like it... very much... I'm sorry... I'm so sorry,\" she replied as the tears began again. \n\n\"Don't be sorry, quit fighting me ... quit using me... start loving me, let me love you.\"\n\nThe woman beneath her couldn't face the future Kelly had described to her and couldn't deny the dark truth behind her own desires any longer. With a great sigh and a flood of tears she relaxed, letting go of her resistance and accepting the new role her daughter had taken for her own, as well as the new role she had cast her mother in.\n\nHer daughter felt her resignation. She got up off her mother, swung herself around and over and brought her wet and fragrant slit down onto her mother's mouth. \"There Mama, nurse on that...\" as she herself parted her mother's pubic hair, seeking her own satisfaction \"and I'll suck on this.\" Giving her mother's clitoris a loving caress with her tongue, bathing the entire area, she continued, \"Jesus, I've wanted this for so many years.\"\n\nAs Margo brought her tears under control and massaged her daughter's ass with both hands, she paused in the fulfillment of her long-buried desires. \"Kelly, sweetie, how can you have wanted this for years? You're only fourteen.\"\n\n\"Mama, are you kidding? Fourteen years of the two of us naked, being held against your beautiful body while you fondled and groped me? I think it's safe to say I'm a little precocious, sexually.\"\n\nKelly laughed and Margo found herself able to laugh with her at last as they returned to their lovemaking. Margo's hands settling on the small of her daughter's back and along her sides, gliding across the skin with a whisper of friction as she was at last able to touch her little girl the way she'd always longed to.\n\nAs for Kelly, her hands went everywhere they could reach, exploring her mother's body in a feverish fury, like a child she was trying to grasp everything at once. But even if her hands were on a high-speed race over her mother's skin, her mouth had found a steady and firm rhythm, one her mother responded to with both her hips, thrusting slightly up from the bed in time with her daughter's welcome kisses, and with her mouth as she tasted the sweetness of her little Kelly's cunt. Their bodies moved in time with each other, a dance of mothers and daughters, of lovers, of young and frenetic and old and calm, of positions of authority reversed. As Margo brought her little girl to the edge of orgasm and drove her past, her position was restored. \n\nAs Kelly's orgasm began to slide into another, Margo brought a hand around to massage her daughter's clit with her palm as she probed in and out of her cunt with her fingers, freeing her mouth for speech.\n\n\"That's it... darling... Mama... oh yes... yes Kelly... right... yes there... oh yes... that's my... oh that's my GOOD girl... oh baby... you are Mama's good girl... yes... good... girl...\"\n\nAnd then, other than the low moan coming from both their throats as they joined each other in climaxes, one after another, there was nothing but the wet sounds of pleasure as the two women rode each other until they were forced to stop to rest and breathe.\n\nIt was a tired and shaky little girl who reversed her position and crawled into her mother's arms for comfort and cuddling. As their breathing returned towards normal, Margo noticed that her daughter was crying, very softly, and turned to face her, licking the tears, and other fluids, from her face. Kelly tried to draw her arms and legs tight to her body, to curl up in a defensive ball, but Margo stopped her and stretched them back out, then said, \"Put your arms around me, Kelly, do as Mama says. Put your arms around me, and put your leg between mine, yes, like that.\" She returned to cleaning her daughter's face with her tongue, realizing once again how blessed she was to have such a beautiful child. \n\nAt last, all she was doing was catching new tears as they flowed, and she stopped. \"Kelly, baby, what's wrong? Why is Mama's little girl crying?\"\n\n\"M-M-Margo... I'm... sorry... I didn't... mean to make... you cry... I should... have stopped... but I didn't... I didn't want to... I'm so sorry...\" Kelly said between sobs as her tears intensified once again.\n\n\"Shush, shhhh, precious one... it's alright...\" she said as she cradled her wife in her arms. \"Have you ever taken any drama courses?\" The tearful woman nodded. \"You know when they tell you to use what you have?\" Kelly nodded again. \"Well, what I had was sadness that someone I love so much had so much anger in her, anger that sprang from pain... and from that sadness came my tears, tears I channeled into playing my role. You didn't make me cry, sweetheart. I cried for you freely. I love you. Your feelings about your parents and a lot of other things have gotten all mixed together with your sexuality, and don't get me wrong, I'm glad in a way that they did because I'm convinced that's part of why you fit so well with us. But just like every one of us, you've got issues that you'll spend a lifetime working through... now that you know you didn't make me cry, how do you feel after our little fantasy?\"\n\nMargo smiled as the voice of a child, about fourteen, was heard for the first time that afternoon. \n\n\"Better... are you sure that when I looked at you, you knew it wasn't you...\"\n\n\"Yes my love, I knew that what I was seeing, on your face and in your eyes, wasn't for me... and it wasn't for your real mother... it was for a tangled nest of feelings and fears and desires. \n\n\"Believe me, Kelly, I enjoyed where we went together, although not the reason why we went there. And with my mood as mercurial as it was, going there was no problem; all I needed was a hint, which you so ably provided. I love you, my darling. I love you so much.\"\n\nAs Kelly prepared to return the endearment, she heard a very faint whisper.\n\n\"See, that's what I meant about roles switching depending on who has the greater need.\"\n\nFor a second, embarrassment and shame threatened to overwhelm her, and then Kelly realized she was at home, in the arms of her family, and there was nothing at all for her to be ashamed of. \n\n\"Come out, you two...\" As Carol and Nicki came around the door and into the living room she grinned at them. \"Dare I ask how long you two have been there?\"\n\nCarol walked to the hide-a-bed and crawled in on the other side of Kelly. \"Since y'all got out of the shower. Seems we both woke up about the same time, while y'all were in there, and after y'all went to the living room, we were gonna come in and talk, but when I got to the door, 'Mama' was offering her breast... didn't want to interrupt,\" she said, stroking Kelly's thigh, \"but couldn't bring myself to not listen.\"\n\nNicki stood, uncertainty screaming in her body language, at the foot of the hide-a-bed. \"And then I got to the door and she stopped me.\"\n\n\"Yeah, she wanted to go back to the bed, let y'all have your privacy, but I wouldn't let go of her arm,\" Carol said, grinning as moved the hair away from Kelly's neck and moved to kiss her there.\n\nMargo looked at her sister-in-law. \"Come here, Nicki, quit standing there like the beggar at the feast.\" She welcomed the woman in on her side of the bed, scooting up to sit against the back and seating Nicki between her legs, holding her in her arms. \"I have no doubt,\" she said, nuzzling Nicki's ear, \"that I have a date to get to know you better. But for right now, I think all we have time for,\" she said, her hands moving over Nicki's breasts, feeling the nipples stiffen, \"is a little cuddle time before we go visit your brother this evening.\"\n\nNicki felt her last questions of acceptance answered and was able to relax into Margo's arms. \n\n\"Sister, you keep up that playing with my tits and my brother's visit will be delayed slightly.\"\n\n\"Don't you mean 'sister-in-law'?\" Carol asked as she snuggled with her wife.\n\n\"No, too many syllables... 'sister' will do just fine.\"\n\n\"And don't be thinking you can get out of it if Nicki wants to have a go at you, Big Mama,\" Kelly said, grinning evilly. \"Carol and I can hold you down for her... won't be the first time that's happened today.\"\n\n * * * * *\n\nAt supper that night, Tori Stallings watched her husband from across the dining room table. She was used to his silences during dinner during the week as that was his time to shake off the hold his day at work had on him and bring himself fully 'home'. But he'd seen a patient this afternoon, highly irregular for a Saturday, so she expected him to be disengaging himself from the patient's problem. Instead his gaze was turned not inward, but on her.\n\n\"Hal, is there something wrong, something you want to talk about?\"\n\nHal Stallings smiled as he looked at the beautiful, rubenesque woman across the table from him. She had spent the afternoon in her studio and after her shower had put on one of the simple cotton lounging outfits she loved so well. Loose and flowing, the blouse and pants were free of decoration, other than the body beneath them. Her wet hair had dripped onto her shoulders and streaks of translucency ran down her front, exposing her large brown nipples. He'd noticed a somewhat lesser translucent effect above her pubic hair as she'd come to the table. He'd grown to love her more every day since they'd married and her smile could still bring tears to his eyes from the transcendental beauty it brought to her already lovely face.\n\n\"No, nothing's wrong, but yes, there is something I'd like to talk to you about, darling.\n\n\"You remember that last night in Miami Beach, when we were both drunk and were sitting naked on the balcony of our room?\"\n\nTori felt a welcome tingle in her cunt. \"Oh yes, yes I do,\" she said, her hands snaking around her amply curved body to hug herself. \"That second honeymoon was one of the best ideas you've ever had... aside from asking me to marry you, it may be have been your best idea.\"\n\n\"You remember what we were talking about?\" he asked, smiling as he watched her nipples harden. \n\n\"Uh, yes... you'd put on your analyst's hat for awhile and gotten me talking about my fantasies... you didn't try to analyze them or me, you just got me to talking about them.\"\n\n\"Uh huh... and you had quite a few you'd kept hidden from me out of fear that I'd think you were a freak and if I remember correctly, my zaftig love, you were very happily surprised by my reaction.\"\n\n\"Oh yes I was, Hal, yes I was.\" Her hands, unbidden, had moved on her body, one caressing her breast, the other slipping down between her legs to gently tease herself around the edges of her pussy through the loose cotton lounge pants. \"From your reaction it seemed you have some of the same dark little kinks I do.\"\n\n\"I've never been sure, my love, if I share them as my own or if I just find them interesting... I know I hadn't really considered any of them before talking with you that night... but no matter how, they're part of my fantasy landscape now.\"",
        "\"From the fucking you gave me that night, I don't doubt it,\" she said, her fingers deftly unbuttoning her top. \"So what brings up this trip down memory lane, not that I'm objecting in the least?\"\n\n\"A patient and her... lovers... look to be able to guide us in finding people to help make some of those fantasies, perhaps all of them, come true,\" he said as he got up from his chair, slipping out of his loafers. He walked around behind his wife, shedding clothing with almost every step and kissed her softly on the neck. \"We could even be talking about a long-term situation, if everything went well.\" \n\nHe heard her ripping the lounge pants, the loose-weave cotton splitting with a zipper-like sound as she murmured, \"Well fuck me...\"\n\nHe stepped around her, sweeping the dinner dishes off onto the floor. Over the sounds of breaking china and splattering food he replied, \"That was my general idea.\"\n\nAs she climbed up on the table to sit facing him the last intelligible words she was to say for awhile were \"Good thing Carmelita's gone home for the evening... I knew there was a reason we don't use the fine dinnerware...\"\n\n * * * * *\n\nThe four women who visited Harry that night seemed much more at ease than they had been the last time he'd seen them. Even slightly groggy, just waking up from one of his many daily naps, Harry could see that his loved ones were coming down from the high stress levels that had been a constant undercurrent since the attack.\n\n\"Harry my love,\" Margo said after gentle hugs and kisses were given, \"your sister has made quite an impression on the family.\"\n\n\"Made quite an impression on Carol's 'juicy-sweet',\" Kelly said, grinning.\n\nCarol grabbed her arm and whispered, \"Oh, I know you found it such a chore, servicing her, Princess. You hated every minute of it... perhaps we'll tie you back up this evening, let you do nothing but watch while Madam and I play with Mistress Nicki.\"\n\nKelly's bravado fell away and she haltingly slipped into the kneeling position. \"I'm sorry, Mistress. I spoke out of turn.\"\n\n\"Yes you did,\" Margo said, her voice calm and cold. \"Nicki, would you like to see to her punishment?\"\n\n\"Uh, no ma'am, I'm not... uh, no.\" Nicki's ease with her sexuality and these women had disappeared when they entered her brother's room.\n\n\"Relax, Nicki... I told you this would happen... just didn't figure on it happening so soon,\" Harry said.\n\n\"Harry, you know our little girls,\" Margo said, smiling. \"I'm rather surprised they didn't take her down like a pair of cheetahs on a gazelle.\"\n\n\"The idea had crossed our minds,\" Carol replied, \"but we're trying to whip Kelly's submissive side into some sort of shape.\"\n\nMargo looked at her husband and noticed something. \"Harry, have you had your sponge bath today?\"\n\n\"Yep, very frightening nurse gave it to me just before I drifted off after supper... why?\"\n\n\"Nicki, Princess, we're going to be standing outside for a bit. Baby Girl, take care of that... and be sure not to let him move around much, if at all.\" And she led the other two outside, closing the door behind them.\n\nCarol went to the bathroom, getting a towel and returned to the bed, looking about for something.\n\n\"What? What are you doing? What are you looking for?\"\n\n\"You're being dense again, Harry.\" She pointed at the erection, visible under the sheets. \"God, is there any lotion anywhere in this room?\"\n\n\"I think there's some in the drawer there.\"\n\nCarol looked. \"God, Vaseline Intensive Care? I think not.\"\n\nShe went to the door and poked her head out. \"Margo, give me the lubricant you keep in your bag. Damn hospital isn't set up for hand-jobs for the patients, all they've got is stuff I wouldn't use on my worst enemy... okay, maybe them.\"\n\nMargo smiling handed over the tube of lubricant. \"Haven't had to use this since we were in the bar at the Omni. Maybe I should bring the lotion issue with administration.\"\n\n\"Oh, I'm sure it would go over very well with them,\" Nicki said, nervously. \"Next thing you know, you'll have patients expecting such service from the nursing staff.\"\n\n\"Have you seen Nurse Fletcher?\" Kelly asked. \"I'd be worried if she got anywhere near Harry's dick... I have plans for it...\" she kissed Margo's neck, \"we all do.\"\n\nInside the room Carol had flipped back the sheet and raised his gown, being extra careful not to disturb any of the tubes or wires. \"Thank God they haven't catheterized you... that would make things problematical.\" She arranged the towel and started to warm a squirt of lube in her hands. \"Here we are again, sir,\" she said, her eyes a little moist. \"Seems this is where I came in... although you're a lot more fucked up this time than that.\"\n\n\"Yeah, yeah I am, physically at least. Mentally and emotionally honey? I'm so much better than I was,\" he said, \"but you're still an angel... that hasn't changed.\"\n\n\"Now I'm going to need you to lie real still, like Margo said. I don't want this to get interrupted because you moved and pulled something loose that the hospital considers vitally important. Try not to tense up at all, my love, try to relax into the orgasm as you build towards it.\"\n\nShe spread the warmed lubricant over his cock and Harry felt 'good' for the first time since the attack. As she worked her hands up and down his shaft, Harry smiled and said, \"You ever think about how far we've come since the first time you did this?\"\n\n\"All the time, my love... even with all the bad things that have happened... Angie, Benjie, losing Jessica... it's been such a wonderful, miraculous time.\"\n\nHarry smiled at her use of the word 'miraculous', thinking back to his conversation with Tattie.\n\nOutside in the hall, things weren't going so well.\n\n\"Ma'am, I don't care if you are the patient's wife, I don't care if you are a doctor, I don't care if you're the Lord God Almighty, his vital signs are elevated and I need to go in and check him.\"\n\n\"No, Nurse Fletcher, I don't really think you do. While this may seem a little irregular to you, please have no doubts that if you try to go past us, I will cold-cock you in a heart-beat.\"\n\n\"I'm going to go get security.\" \n\n\"Why don't you go get Dr. Lowry instead? I believe he's still around, I saw him as we came in.\"\n\n\"I will, Dr. Sapperstein. Don't you move.\"\n\n\"Not planning to... Nurse Ratched.\"\n\nIt was obvious from the way the severe and stern nurse stalked away that she'd been compared to that character before and didn't like it at all.\n\nBack in the room, Harry was finding it harder and harder to remain relaxed, but he dutifully continued to attempt to remain so, as the skilled hands of his beloved brought him closer and closer to a climax.\n\n\"Harry, love, I feel you tensing up again... think of it as a wave, honey. You're tensing up because you're trying to stay on top of it. Just let the crest flow over you and be buoyed up by the body of the wave, relax into it... that's good... that's better.\"\n\n\"Carol?\"\n\n\"Yes my love?\"\n\n\"How's everyone... doing... really?\"\n\n\"Harry, is that really what you need to be thinking about right now?\"\n\n\"Darling... as lovely... as you are... and as skilled... it's all... I can think of.\"\n\nShe leaned over and kissed him tenderly, then stroked the side of his face with her cheek.\n\n\"Alright... Margo's seeing a therapist and it's a very good thing. The hours between when she found you and when you got out of surgery took a terrible toll on her... one I'm pretty sure we haven't seen the fullness of yet. We'll help her as much as we can... she'll come through it, but it could be rough.\"\n\nHer hands slid over his cock, teasing him towards release.\n\n\"Kelly... Kelly is so turned around by so much in such a short amount of time that she's not sure which way is up, but she's figuring it out and happily being a bad little slave girl. Oh my love, you should have seen her this afternoon, I was restraining her and Nicki was tickling her, viciously, and she was struggling with me and struggling with her laughter and with her tears and with her excitement. I think she orgasmed five or six times, although I'm not sure if it was out of true passion or self-defense. Afterwards Nicki and I made love while Kelly was tied up on the bed next to us, forced to just watch.\n\n\"You're tensing up again... be patient, you won't be an invalid forever and then I'm sure we can stage a repeat performance while Margo gives you someplace warm and loving to put this thing.\"\n\nShe slid one hand down towards his ass, not getting too close, but close enough to bring a strong twitch to his cock.\n\n\"Nicki is finding her place... and quite wonderfully some of her places are with Margo, Kelly and me... she's a good woman, Harry... it'll be good to have her home. She'll need a lot of work, learning to relax and have a life, live a life... but I think all of us will be a good influence on her in that regard.\n\n\"I want to thank you for accepting Tattie so readily into our little family... it's been so good to see her and she seems to be thriving on having the bunch of us to look after. Talked to her briefly on the phone today... Peter left her and she couldn't be more pleased. I worry about her though... she's awfully lonely.\"\n\nWhile one hand played with his balls, the other continued to glide up and down his shaft, slowly and skillfully easing him towards his climax.\n\n\"Eddy and Tamara are so in love they make all of our romantic moments seem tame. I'm so happy that's working out as well as it is... Tamara's had to grow some, to take care of the parts of Eddy he can't take care of himself... Eddy's growing... healing....\"\n\nShe looked up and saw the tears and the smile on Harry's face. \"And I can see how much that means to you, my dearest.\n\nOutside in the hall, Dr. Lowry came down the hall with Nurse Fletcher hot on his heels.\n\n\"Alright Margo, I stopped by the nurses station and checked Harry's vitals. What the hell's going on in there and why won't you let Nurse Ra- Nurse Fletcher in to check on him?\"\n\n\"Are his elevated vitals putting him at any risk?\"\n\n\"Not that I can see, but if he starts thrashing around-\"\n\n\"He's not thrashing around... I trust Carol to make sure of that.\"\n\n\"Carol, what's Carol doing in there?\"\n\n\"Nurse Ratched, will you excuse us?\"\n\n\"What! I don't think so.\"\n\n\"Interestingly enough, Nurse, I do think so. DOCTOR Lowry and DOCTOR Wohler need to have a private consultation concerning this patient.\n\nShe turned back to Dr. Lowry. \"Also, there will be a private nurse in here this evening, to cover for Nurse... Fletcher... whenever she's on duty so that she is not responsible for my husband in any way. \n\n\"You may leave now, Nurse. What we're about to discuss is well and truly none of your business.\"\n\nWith a look of pure venom, Nurse Fletcher stomped off down the hall.\n\n\"Mike, this is going to sound a little odd. Carol, Harry's and my pet, is giving my husband a hand job, that's why his vitals are elevated. I instructed her to make sure he doesn't move, and believe me; she's very good at following instructions. \n\n\"There, are you satisfied, Mike?\"\n\nHe smiled. \"No problem whatsoever. I recommend a private nurse by the name of Adelaide Corken... I've worked with her before and found her excellent.\" He took out a pad and wrote a name and phone number on it. \"Now I'm going to leave you to your guard duties and go try to smooth some ruffled Fletcher feathers.\"\n\n\"I don't envy you... sorry Mike.\"\n\n\"I don't envy me either... but it is awfully fun to see that pompous bitch put in her place, from time to time.\"\n\nMeanwhile, in the room, oblivious to the storm outside; \"Karen and Patricia... well, Karen was very, very shaken by the attack. I think she thought once you got Angie out of your system, and especially after Angie paid us that little visit, that she was going to be able to stop worrying about you. This attack hit her hard, Harry... real hard. You know that she loves you so much... if she were two hairsbreadth's less gay, she wouldn't take 'no' for an answer from you?\"\n\n\"I know... and if she was that two hairsbreadth's less gay, she wouldn't hear it... wouldn't have heard it years ago... but that would've deprived me of all of you in my life... and her of Patricia.\"\n\n\"This is true, and the more I get to know Patricia, the more I love her. You should've seen her, Harry... Karen says when they got the call she started praying for all of us and when they arrived she spoke with everyone and went straight to the chapel and continued praying... I'm not sure she's stopped yet. She's good people, Harry, damn good people.\"\n\n\"What about you, Baby Girl?\"\n\n\"I'm doing well, my love. I'm going to have to deal with that night, but for the time being, I'm doing well. You're going to be okay, all the people I love are going to be okay... I cry sometimes thinking how lucky I am... and OH, you're cumming, Harry... my, that has been building up awhile, my love... hold on, let me get that... how'd that get way over there? That was an impressive...\n\n\"Harry, honey, why are you crying?\"\n\n\"My love... I just... I love you.\"\n\n\"I love you too... my husband.\""
    ],
    "authorname": "Fillmore",
    "tags": [],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/oil-of-roses-ch-27"
}