{
    "title": "Mira Ch. 11",
    "pages": [
        "Liam insisted on a long walk. By the time he took Mira home, the sun was already setting. \"Mira, with all the upheaval and distress that has been plaguing our people, a celebration of any kind would be well received.\"\n\n\"But so soon?\" Mira tried not to sound upset, but knew that she was failing miserably.\n\n\"You'll see.\" Liam refused to be put off. She had agreed. Nothing could possibly break his good mood. \"I'll speak with my sisters about helping you,\" he added, knowing she had no real family. \"And I'm sure if you tell the other girls,\" he said, nodding to the curious faces who were watching as he left her on the doorstep of the round house the sacrifices shared, \"you'll find plenty of other willing hands.\"\n\nThere was some giggling as the girls realized a secret was being kept. \n\nLiam kissed Mira sweetly on the cheek and disappeared into the night. Mira found it strange that she felt more awake as the sun set than she felt with it up. She couldn't seem to get her body to go back to living in the sunlight. All I wanted when I was in his caves was to see outside. Now I have it and it doesn't feel right any longer. I wonder how long it will take for me to adjust.\n\nMore girls gathered to see what was going on now that Mira had returned. She found that she was somewhat of a celebrity. Most of the girls in the current generation of sacrifices knew her before she went into his caves. No one ever expected to see her back alive. When it became clear that he sent her back to train the new generation properly, they all began following her around waiting for her to be ready to start teaching. The elders insisted that the girls leave her alone for the time being. But not being allowed to ask her questions didn't preclude watching and waiting. They were all curious about what they would face and excited that someone survived. Mira gave them hope.\n\n\"What was Liam talking about Mira?\" They may not be able to ask about Rillan Tiernay, but no one said anything about Liam.\n\nMira hesitated. Something about actually saying it out loud made her stomach turn a bit. She cleared her throat. \"I'm getting married.\"\n\nA squeal went up through the room and the girls began murmuring excitedly. Mira felt as though she was in the middle of a bad dream. \n\n* * * *\n\nRillan read the note three times; then read it again. He had never been summoned to a meeting with the elders before. Whatever their problem is, it must be complex. There was no hint of the issue to be discussed. Rillan considered, with a grim kind of acceptance and relief that this could mean the end of this era of his life. This may be why a new girl hasn't been sent yet.\n\nRillan spent most of the next day considering the possibilities that the note and the meeting presented. For the first time in a long while he was at a loss for the right answer, and there was something very nice about that. \n\nApproaching the cave entrance Rillan could see the druids standing about nervously long before they could see him. Although he never met her, he easily picked out the one who must be Lilith. He had read enough of her notes to know that the woman must be ancient by now. Over the years her handwriting had grown in size and became more steady with each name she wrote. The white haired woman in the plain brown skirt and soft white chemise was the only one not fidgeting. \n\nRillan walked into the lantern light without hesitation, causing all of the elders to take a step back. He knew that they weren't expecting what they saw. Perhaps I should have come to them as the demon, he thought sardonically. Rillan held out the note he had received. \"My curiosity at this meeting is without bounds.\"\n\n\"Lord Tiernay,\" one of the men squeaked out. \n\nGrinning at the man, Rillan exposed his fangs, amused when the man flinched. \"It's unlikely that I would be anyone else.\"\n\n\"Yes, I suppose\u2014\"\n\n\"Enough,\" Lilith said with the exasperation of a woman who obviously wanted to carry on with business. \"Lord Tiernay, we currently are faced with a situation we are unsure of. It seems that one of our own has turned to the empire for assistance in removing the Circle from power. He approaches with an army. Our options are to turn you over and surrender or to find a way to fight them. Unfortunately you are our only line of defense. In order to make the decision as to what we should do next we need to know if you are capable of fighting a small army.\"\n\nFor a moment Rillan was taken aback. \"Of all the reasons I considered which could cause you to call a meeting with me, I must say that I never expected this.\" He contemplated the situation. \"I suppose that my ability to fight this army depends on how much time I have, how many there actually are, and how good they are.\"\n\n\"We have little information save that they are coming.\"\n\nRillan nodded. \"I would prefer to die fighting, if given the option.\"\n\n\"Understandable. However we have lives to consider,\" Lilith said. Rillan was impressed with the way she held herself and the bravery with which she spoke to him. \"Is there any possibility that you'll attack them and only succeed in angering them so that when they get here we have no protector, and they'll be interested in revenge?\"\n\n\"I can't answer that with the little information I have been given. If I only knew numbers then I would be better able to give you a response.\"\n\n\"Well we can tell you that the Senate has refused to send the Empire troops. We know that house Novanus and a few loyalist created an army from their house guard. That is what's coming. But we have no numbers and no way of knowing their skill.\"\n\nAt that Rillan smiled wide enough to make the men all shift nervously. \"That's it? The Novanus house guard?\" Rillan scoffed. \"I can handle the house guard. Leave it to me.\"\n\n\"I need certainty,\" Lilith said, leveling a hard look on Rillan that he found to be slightly intimidating. \n\nEither way I would gladly take orders from this woman, he thought. \"I know the Novanus house guard and can't imagine a lesser family in Noviodunum to have better. If that is all they send then there is no army coming. Even so, I would be lying to promise you certainty. You should know that there is no such thing.\"\n\n\"Well said,\" Lilith nodded. \"Do you need anything from us before you go?\"\nRillan's eyes swept over the old men and women who were present. \"I need to feed.\" As he spoke his eyes momentarily shifted, and the onlookers could almost feel the loathing in his words.\n\nLilith nodded. We'll send a girl come morning. With a wave of her hand the elders began backing away and leaving. Finally Lilith stood alone in front of Rillan. Waiting, Rillan couldn't help wonder what could possibly be left to discuss. \n\n\"She is doing well,\" Lilith said, gently. She smiled as she saw realization flash in Rillan's eyes and discomfort shift his stance. He only nodded back, unsure why she felt the need to tell him anything about Mira. \"Well,\" Lilith amended. \"I guess she's doing as well as can be expected. She seems lonely and out of place. But she is trying.\"\n\nConcern furrowed Rillan's brow. \"Why should she be lonely. She's back where she belongs.\"\n\n\"Why did you return her to us?\"\n\n\"I sent a note,\" he replied angrily.\n\nLilith smiled knowingly. She had suspected what his real motivations were, regardless of what he had written. But a woman doesn't live as long as she had without being capable of discerning when someone was lying. \"I read your note. It just seems strange that you would cope with the girls you've been sent for so long and now change your tactics.\"\n\nRillan sneered. \"I suppose it makes as much sense as the Circle calling a meeting with me for the first time in centuries.\"\n\nLilith chuckled and nodded. \"I guess then it would be fairly safe to say that things are changing.\" She sighed. \"I wonder that it took as long as it has. The fates are forever in flux. They almost seemed to have forgotten us.\"\n\n\"Change isn't always a good thing,\" Rillan replied softly.\n\n\"True. But it is a necessary thing.\" Lilith moved to leave as if she was done with the conversation. \"And one last thing,\" she said over her shoulder as she was leaving. \"A martyr is only counted as such if he saved someone through his sacrifice. I wonder what you call a man who makes the sacrifice when no one needs it to be made?\"\n\nBefore Rillan could wrap his brain around what she had said in order to respond, Lilith had disappeared into the darkness. She had accomplished several feats at once. Rillan had to give her a great deal of credit. He hadn't talked to anyone in a very long time who could stand up to him, confuse him, and impress him all at once. Let alone do all three things simultaneously. \"The woman must be related to Mira,\" he growled, but smiled as he returned to his cave. She had given him a great deal to think about. \n\n* * * *\n\nMira sat unhappily at the breakfast table. She hadn't even finished eating and her head was already swimming. Liam's sisters had arrived first thing and announced that Liam sent them to \"help\". Apparently that means take over, Mira thought. \"Listen, Helen, I do appreciate the help,\" Mira said in between sips on her tea. \"But it's not as if this has to happen tomorrow.\"\n\nThe girls all giggled. \"Not tomorrow. No. But Liam wants to have the ceremony within the month. That's still not much time.\" Helen sat closer to Mira. Her proclamation had the rest of the girls in the room talking excitedly. \"He's been in love with you for so long. You really don't know how much this means to him. He'll make you happy. You'll see.\"\n\n\"Everyone keeps saying that,\" Mira whispered despondently.\n\nHelen was taken aback. Liam had told her to be prepared for what the vampire had done to Mira. Even so, she hadn't expected the girl to be this bad. It only strengthened her resolve to help. \"Don't worry,\" she said, gently petting Mira's hair. \"I'll take care of everything. Who knows? Perhaps the marriage could be within a couple weeks.\" She looked around at all the listeners encouragingly. \"We certainly have plenty of volunteers,\" she suggested. With that a squeal of agreement filled the room.\n\nMira flinched. It was getting almost painful to be awake. Between the sun streaming in the window and the girls squealing she was developing a vicious headache. Mira reached up absently and started rubbing the join between her neck and shoulder. She didn't even realize that it was precisely where Rillan had bitten her so many times. She always studiously kept that portion of her neck covered. The scars were horrible. Not that she really minded.\n\nThe hush that fell over the room managed to break Mira from her internal monologue long enough to notice that Lilith had entered the room. Mira was glad and scared to see the woman. As grateful as she was for the calm in the ridiculousness that was the morning, Mira could guess what Lilith was here for. She left instructions for a new sacrifice to be chosen, prepared, and sent to Rillan over a week ago. Mira hadn't been able to bring herself to do it. Now that the rumors about a secret meeting between the elders and Rillan had been confirmed, Mira expected that he would have reminded them that he needed a new sacrifice. Mira stood up respectfully as Lilith approached. \n\nThe old woman smiled sympathetically at Mira. \"I rather fancy a walk in the morning air. Come with me Mira.\" Without waiting for any kind of response Lilith led the way out of the round house and away from town, toward the wooded trails. \"There's some privacy this way,\" she responded to Mira's unspoken confusion.\n\n\"Can I do something to be of service,\" Mira asked.\n\n\"You have a strange strength and sadness to your tone, Mira. It's been a great deal of time since a girl as young as you was able to speak to me without a waver in her voice. But I suppose after facing a terror such as Lord Tiernay, your elders would no longer be as intimidating.\"\n\nMira felt as though she was being baited for some reason. \"Rillan isn't nearly as frightening as we have all been led to believe. He's just lonely,\" she replied with conviction and annoyance. \"Calling him a terror, does him a disservice.\" Realizing how she had spoken to Lilith, Mira cleared her throat and added, \"With respect Milady.\"\n\nLilith smiled. \"There are so many ways to see, Mira. Eyes are only one of those. I am surprised to find that one as young as you would develop the other visions so readily. There is a great destiny for you I think.\"\n\n\"Yes,\" Mira said with tears in her eyes. \"Marriage to Liam.\"\n\n\"It is a strange woman who can talk about one many with such conviction and yet allow her voice to crack so distinctly in reference to her engagement.\" Mira looked away from Lilith. \"I sometimes believe the fates only keep us around for their own amusement,\" Lilith said gently and brushed Mira's hair from her shoulders. \"You need to send a new sacrifice Mira.\"\n\n\"I knew that was why you came.\"\n\nLilith sighed, \"Choose a girl and begin preparing the next.\"\n\n\"I shouldn't worry too much for that. If I begin teaching the girls as they should be, then we should need fewer sacrifices.\"\n\n\"You truly believe that,\" Lilith said with the tone of a mother trying to teach a child a lesson. \"Ah, well, I suppose he does too.\"\n\nMira turned toward Lilith in confusion. \n\nLilith shook her head. \"There have always been sacrifices. Even with the lessons were as thorough as you intend to make them now. The sacrifices tend to go in cycles. We've had a great many girls die recently in a relatively short period of time. There are a great many more variables that play into it than the type of lessons that the girls are given.\" Lilith stepped up close to Mira. Lifting her chin she forced Mira to look her directly in the eyes. \"I find that in my vast experience over the years, the difference in the sacrifices was within the girls themselves, not what they were told before they met him.\" Lilith released Mira from her grip. \"I think you'll see what I mean as you look amongst the sacrifices for who you will send. It needs to be done tonight. Come, we'll go back to the round house. I'll tell your friends that the planning for your wedding can continue on the 'morrow. You have work to do today.\"\n\n\"A day isn't enough time,\" Mira said, panicked. \"I can't explain it all in one afternoon.\"\n\nLilith was already walking toward the round house. \"You'll have to find a way. He needs to be fed before he leaves for his next assignment. You of all people should know how he goes about it. It may take some time. And we are drastically short on that.\"\n\nIt was an order, not a request. Mira knew from the tone that she had no choice in the matter. Reluctantly she followed Lilith to the round house and stood by as the announcement was made that wedding plans would need be continued on a different date. The fear that followed the announcement about the next sacrifice to be chose disgusted Mira. He deserves better than that. Tears in her eyes, she resolved to find someone who could handle it. Lilith is wrong. I can teach them. It will be better. They'll live longer. Maybe he'll be happy.\n\n\n\nMira started by asking if there were any volunteers. It made sense to her to think that the braver the girl might be, the better off she would be. Only three girls came forward. Well that makes things a little easier. I suppose it narrows the possibilities enough to make choosing a girl for this evening feasible. \n\nTaking the girls who had volunteered out to the garden so that they could all be alone, Mira found herself trying to come up with a way to pick amongst them. Her mind swam trying to think of all the things about herself that made the situation with Rillan bearable. But she honestly didn't understand what made her different from any of the others.\n\nThe girls stood watching her and waiting. It never occurred to Mira that she may be frightening them with her contemplative silence. The girls saw Mira mumbling to herself and pacing. In the morning sunlight, next to the beauty of the garden flowers, Mira's deterioration was all the more apparent. She was gaunt and pale, though still beautiful in a haunting way. None of the sacrifices wanted to know exactly what had changed the Mira they knew before into what they saw now. \n\nFinally Mira turned toward them, seeing bravery fading from her eyes she decided that the best way to go about it would be to allow them to choose themselves. \"I think that the best thing to do will be to give you all the crash course and then make the final decision as to who will go, at the end of the day.\"\n\nThe girls all nodded and the lessons began. Mira started by explaining to them how they had to go about looking for Rillan and why. She somehow thought that if they knew why he behaved the way he did then they would be able to handle. As sunset approached, Mira's voice was hoarse and she had lost count of the number of times the emphatic nods of understanding had turned to horror as Mira related her experiences in the vampire's caves.\n\n\"Alright then, I'm sorry it has to be this way. There is no more time. I need to know if any of you have changed your minds.\"\n\nThe smallest of the three girls began trembling and crying, however she didn't ask to be dismissed. Mira looked into the eyes of the other two. All she saw was fear. They may not have been crying, but their bravery was gone as well as the other girl's. Mira felt a strange mix of disappointment and happiness. She was afraid for the girls. At the same time she was pleased to find that she wasn't as easily replaced as she had believed she would be. Angry at herself for even thinking that, glared at the three girls. \n\n\"I'll be honest with you all. I don't really want to choose amongst you. I don't want to feel responsible personally for sending anyone to their death. I've tried to tell myself that we are all dying. Still, I'm not the fates and I don't relish that kind of power, to decide when. So if any of you believes you can handle it better than the others, I would like to know now.\" They didn't say anything. They merely stood together, staring doe-eyed at Mira and holding each other's hands.\n\n\"I'm sorry, but Lilith is waiting. I only hope that all I've told you today will aide you.\" Mira decided on the girl in the middle. She had consistently been reassuring the other two all day. When she was chosen the girl nodded understanding and the other two were dismissed to prepare for the ceremony. \n\n\"What's your name,\" Mira asked. It was the first time she had really looked at the girl all day. She was tall and thin, very pretty. She wore her hair in long, dark brown, plates down the back of her head. She had dark blue eyes, similar to Rillan's and fair porcelain skin. A twinge of jealousy shot through Mira, and she quickly pushed it to the back of her mind. \n\n\"Aris,\" her voice cracked. She cleared her throat as if to pretend that fear wasn't the cause for the tremor.\n\n\"Come, it's time to get dressed,\" Mira said and led the way back to the round house.\n\nTrembling in the warm light of the setting sun, Aris stared into the icy darkness of the cave, her white shift blowing slightly in the breeze. Her mind raced endlessly, trying to remind her of why she chose this, attempting to dull the fear in the pit of her stomach, and reminding her of the importance of what she was about to do.\n\nMira watched from the gate as Aris took her first reluctant steps toward the darkness that Mira saw as so tempting and welcoming. She stared into the shadows for some hint of Rillan, knowing that even if he were there, watching, she wouldn't be able to see him.\n\n\"Rillan Tiernay,\" Lilith intoned over the crowd, \"was created to protect and serve the circle. Our guardian. Each generation a group of girls is chosen as companions in his darkness. This is the price of his loyalty.\"",
        "Mira didn't hear Lilith's speech. Not that it mattered. She knew the speech by heart. It was the same for each of the girls who entered the vampire's cave. Mira's mind was more concerned with the parts of the story that were left out of the flowery farewell and the fact that this time it was intended for Aris. Somehow she felt slighted that the speech was not for her.\n\nMira looked up from her thoughts to find that the high priestess had stopped speaking. Everyone was waiting for Aris to finish the ceremony. They were patient and stood quietly. Mira didn't know how long they waited for Aris to realize it was her turn. Now as she looked around, she was more afraid of what was to happen to the girl than she thought she would be. The lessons were all too short; so matter of fact. There wasn't enough time to train her properly. She's going to die like the others, only this time it will be my fault. It's my duty. I should be going. I belong to him, not her. Mira couldn't stop her mind from churning. Tears fogged her vision. She realized suddenly that she felt as if she was losing a lover. \n\nMira stepped shakily forward, gripping the gate, praying that Aris would turn and run. The moon, high in the sky now, cast a blood red sheen over the clearing and an eerie light beyond the gate. Aris passed through the tall, rusted iron gateway, and it creaked, swinging shut behind her. The clanking gate lock sent a jolt though Mira. The last of her heart seemed to have been locked on the other side. She looked into the darkness beyond the mouth of the cave trying to see if he was watching, but she couldn't see anything. The little light that touched the hungry cave mouth was swallowed into the black, offering no hint of what lie within. \n\nMira turned around to see if the others were still watching. No one was there. The gate had been locked and she was standing alone, watching Aris. All that was left for her was to enter the cave and find him. Mira's eyes traveled the twisted metal archway that she studied so many times in the past. Now as she stood facing the closed gate she realized that she was truly on the wrong side."
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "druid",
        "vampyre"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-11"
}