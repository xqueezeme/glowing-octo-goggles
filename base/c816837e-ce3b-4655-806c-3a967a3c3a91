{
    "title": "Dry, No Lube Ch. 03: Disrupted",
    "pages": [
        "Well.\n\nThis one took awhile to get finished, for which I apologize; if you're reading this, I hope you've read its two predecessors. When this one begins, the intrepid Pixy Pfeiffer has just put herself in the middle of a deafening series of explosions. Let's see what she'll get up to now...\n\n* * *\n\nPixy shrank back from the rear bulkhead, her face twisted in annoyance. \"For fuck's sake,\" she muttered to herself. Every time. Every goddamn time the circuit ship's interphaser went, there was that same little high-pitched whine at the upper edge of her new-and-improved hearing, right there in that sweet spot where her new cochleas were more responsive than her old ones.\n\n<br >The problem with cloning, she thought savagely. It seemed like a panacea, being able to grow your own spare parts, until you realized that when you spend thirty-some years eroding your hearing, rounding off the uppers and lowers and getting your brain nice and used to your comfortably worn original equipment, it takes awhile to get used to the new one they just plucked out of the vat, still with the same auditory acuity she'd been born with. Complete with the ability to hear the upper pitches she'd forgotten during adolescence.\n\nIt didn't help that the pilot was edgy with the interphaser. Seemed to be afraid of going fast.\n\nServes me right, she reminded herself sourly, lying on the guest bunk. Nobody had forced her to plop herself in the middle of a 10-kiloton-equivalent explosion with no more hearing protection than a pair of headphones offered. Of course, when death by your choice of Flasbard main battle tank or Flasbard dismounted rocket launcher was the alternative... well, there really was no alternative.\n\nPixy Pfeiffer was one of those officers who intended to do whatever it took to survive the War. Even if \"whatever it took\" killed her.\n\nThe berth was clean enough, even functional, but circuit ships were not renowned for their comfort. Pixy was just happy she was a full lieutenant, and thus rated a space to herself; last time she'd been aboard one of these pieces of shit, as a sublieutenant, she'd had to share with a short, smelly Linder. She didn't mind Linders, usually, but Pixy could be a sarcastic roommate and Linders were not renowned for their ability to take a joke. Weeks, that trip had taken, chasing the old USS Jezail around the Third Quadrant, and that fucking Linder sub trying to get her to put out the entire time. \"Fucking stop it!\" she'd said at last, aiming a savage snap-kick at the little asshole's noseplate; she'd gone spinning to the deck in a graceless tangle of limbs, but then they'd found the ship just two days later and so Pixy had been spared the awkwardness of rooming with someone she'd just kicked the piss out of.\n\nShe sighed, shutting her eyes, conscious of the empty space in the bunk beside her; she hadn't expected to miss Janelle so much.\n\nAt last report her ship, the Pulver, was making a garbage run out on the Perimeter, between Angerac IV and the scrubby little settlements along the Utari Nebula; even during the height of the War, human colonization of the Territories hadn't stopped. There was no end, she thought gloomily, to the degree to which humans would be able to rationalize finding new places to plunder. The word was that the Utari colonies were rich in a gum used in high-strength adhesives, which just meant that whenever she did find Pulver, the old ship would smell like a pig's asshole.\n\nOnce more, she tried to avoid thinking about the state the ship's books would be in when she was finally able to take a look. Supply was her department as Second Officer, but she'd been Acting First Officer for months now and she had no doubt the accounts were completely fucked. Word was that a new First had reported aboard while she was at the Coding Course, though, so finally she could look forward to doing her actual job now, rather than everyone else's.\n\nAw, fuck. Who was she fooling? She'd still be running the fucking ship. Nobody knew that vessel the way she did; between forty months aboard, her time as First, the time she'd taken over during the 447 battle, and her deft control of the ship's drug ring, she had her finger in every one of the ship's many pies.\n\nShe wondered idly how Captain Reye had been able to manage without her.\n\nThe faceless robot buttfuckers who ran the circuit ship had estimated there was a \"high likelihood\" they'd reach the vicinity of the Pulver's run within two weeks. That had been eight days ago, standard calendar. Pixy had been mindlessly bored after the fourth hour of Day One, her mind blasting into an immediate understanding of why people developed such crippling addictions aboard circuit ships. Pixy herself was very carefully rationing her supply of drag, the premium shit she'd brought from the ship, now dwindling into a small brownish pile in the wooden box she kept at the base of her locksack.\n\nShe spent most of her time in the grubby wardroom, where there was at least a viewport large enough to take in a respectable slice of starshine; the lack of a window was her biggest complaint here. She'd sit there for hours with her tabslate and the duvet she'd stolen from the robot working in the service closet, studying, making sure she understood the coding course she'd just graduated from.\n\nShe needed that course, she admitted to herself. Six months she'd been acting First Officer, or nearly that; it had amazed her how much supply info had gone leaching out of her head in that time. Then Fleet had changed all the coding procedures, and Sublieutenant Amisuul hadn't been able to keep up; it had been a welcome relief, the month on Lentilli Prime at the course. And the new cochleas had been nice, too, finally.\n\nShe leaned back on the mock-velour lounge cushion and sighed, stretching. She'd driven herself crazy in the little officers' gym yesterday, punishing her muscles to keep from going batshit crazy. And to keep her back flexible; always, nagging at the root of her brain since the Battle, the need to stay strong back there, to counteract the wound. The wardroom was empty today, the other officers probably moping in their quarters: the little duo of commanders tended not to hang out with the lieutenants anyway, but there was usually her and Potrek, then the sublieutenants Corso, Edwardes, and R'hoss, and finally a doubtful-looking junior lieutenant named Danska. Or Daskal? Disco? Something like that; he was a mousy-looking fellow, anyway, and kind of old for a Junior.\n\nShe looked lazily through the little galley off the wardroom, straight through to where the gym clanked and seethed. The robots usually kept all the hatches open on this level during the Standard Day, to improve ventilation, though all that really did was make sure there'd constantly be a vague odor of crotch sweat mixed with the scented leavings from the last inconsiderate bastard who'd used the nuclear oven to make popcorn or heat fish. On the worst days, Pixy usually countered that with a brief little snort of drag to calm her down, the drug lifting her into a semipermanent pinkish haze.\n\nNot too much, though. She well knew what too much of that shit could do.\n\nShe was sitting with her back to the wall opposite the viewport, letting the coding mnemonics do their lazy work in her fuzzy brain, when slowly she became aware that the autowave had stopped with that distant, jarring ratcheting noise it always seemed to have. That meant the guy in the gym had finished with his workout. That he'd be coming through soon on his way to his quarters.\n\n<br >That she'd therefore have a view she could enjoy as he passed from the little galley.\n\nHe was a subcommander, and probably a newish one, with his rank badges still shiny. When they'd met, after the ship picked her up at Lentilli, she'd noticed he wore the black working uniform of Fleet Combat; vaguely, she remembered him saying he was some sort of engineer? Gunner? Something like that. He'd been quartered one deck higher than her, with the two or three other commanders looking through interstellar space for their ships, and as the people had come and gone from the circuit ship she'd soon picked up on his routine.\n\nThe commander always spent some time after dinner in the gym, when he was pretty sure nobody else would be there. He cranked along for twenty minutes or so on the hoverjag stepper before finishing up with a punishing autowave routine. Then he toweled off and came through the wardroom on the way to his quarters. Came through dripping, the fans doing nothing useful; they never did aboard starships, not after a solid workout.\n\nSpace travel encouraged claustrophobic interactions and constant monotonous encounters with the same people, leading to a reliably casual approach toward clothing. Fleet tended to attract adventurous people anyway, and although they might not have started out as exhibitionists per se, a few weeks aboard a cramped warship smelling the same crewmates soon broke down all sorts of barriers. So it wasn't really all that surprising when the athletic subcommander, on her first day aboard the circuit ship, appeared after his workout wearing nothing but a pair of workout briefs.\n\nNot surprising. But certainly worthy of attention.\n\nThe Federal military was packed with fit, sexy people; a combination of post-space evolution, DNA modification, and a relatively active lifestyle had turned most homo sapiens into physical specimens that would have casually outperformed their ancestors, confined to Sol III and its easy lifestyle, without even understanding how far the human race had come. But even with all that taken into account, the subcommander in the workout brief was a fucking hunk of prime, grade-A, genetically-enhanced porkmeat.\n\nSo Pixy sat up as soon as she heard the autowave clink to a halt, turning her body on the lounge seat so that she could watch his approach; with nothing to do as the buttfuckers flung the ship along its endless galactic circuit, she'd long since figured out the best seat from which to watch the man move. He came out today with the sweat gleaming on his body, oil-like, matting even the minimal hair his barber had left atop his head. To say he was fit did the word a disservice.\n\nHe was perfect.\n\nSmooth muscles under dark mahogany skin, the flare of his nose, the piercing black pits he used for eyes, all over a wide and expressive mouth; as it always did, Pixy's breath hitched at the sight of him. His body tapered in that perfectly symmetrical way, all flowing limbs and glimmering hairless flesh. As usual, his sweat had made the briefs cling to his body like wet tissue paper, and Pixy instinctively checked to see which way his cock was hanging that day.\n\nMmm. Left. Her supply-officer mind was keeping a running tally to pass the time; he only went left 32% of the time. Special day!\n\nHe was just as nice going as coming, a hard compact ass driving his legs with purpose toward the disinfection suite, and Pixy always enjoyed that view as well. But she miscalculated that day, the grin already twitching at the corner of her mouth as she dropped her eyes down his glorious body... but today, it was different.\n\nToday, he stopped.\n\nShe was already staring hard at his hips under the briefs when she realized he'd halted in mid-stride so that he could cock his gorgeous head and look quizzically down at her with those luscious eyes. Slowly, Pixy hauled her own eyes back up toward his face, the drag in her system keeping her calm even as her heartrate picked up; she was not used to being caught looking, but in an instant she made her decision. Fuck. He was a beautiful man and he plainly wanted to be looked at; what the hell did she have to be ashamed of? She smiled up at him, hearing the dreamy note in her own voice as she finally met his gaze. \"Yes, commander?\"\n\nHe smiled back, more a smirk really, the sweat like tears running down his face. Pixy fought back the urge to lick him. \"It's just that I see you here every day, lieutenant. I thought I should say hello.\"\n\nHello? Pixy thought fast, or as fast as the drag would allow. He wasn't stopping to say hello. \"Thought you should stand there and be looked at.\" Her own playfulness amused her; drag had a strong dissociative effect in some users. Pixy felt like she was watching herself. She paused. \"That's what you really mean, sir.\"\n\nHe nodded easily, genially, his thick neck rippling. \"Of course that's what I mean,\" he confessed readily, and at once Pixy knew he was hers for the asking; this was what attractive people did on circuits. They fucked. She'd gotten nothing since that last night at the coding course, the strip club before graduation, when that dancer had made her cum on a pair of nimble little fingers. She saw the black eyes roam her body, and she made herself stay still and be admired. \"Whenever you get your next promotion,\" he began in a pleasantly rumbly baritone, \"you'll be taking dick on the Senior Deck aboard these fucking dumpster-ships. Come see what it's like.\"\n\n\"Certainly, commander.\" It poured out as a sweet, thick drawl, her long-suppressed Aries accent quick on her tongue now, as it often was when she was about to get laid. She stood gracefully, tucking her tabslate away in her left cargo pocket, and inclined her head toward the exit. \"Lead me.\"\n\n'This way.\" The voice was calm, efficient; it was the voice of a serving officer passing a formal announcement, not the quaver of a sexually excited male animal. No, this guy was no amateur. He was used to getting whatever he wanted, and the recklessness of a drag-induced stupor aboard an anodyne circuit vessel with a balky interphaser was pushing Pixy Pfeiffer right onto his cock.\n\nShe whistled randomly as she trailed him down the short corridor at the top of the ship; there were only three senior officers' berths aboard, so it wasn't a long trip, and that sweaty muscled ass towed her along with a magnetic force of its own. Pixy felt the euphoria grow, a sense of absolute confidence, of fierce elemental joy, and when the subcommander paused at his doorway to work the locktag she sidled up behind him, pressing her working uniform up against the flowing muscles of his back, inhaling the stench from his hair, his armpits, his groin, her own body responding with a sudden familiar tension in her pussy. He punched the keys casually, in no hurry at all, even when Pixy closed her eyes and pushed the workout briefs straight down his smooth legs to lie in a soggy heap on the deck.\n\nHe stood straight and tall, his body a wall in front of her as she reached around to grasp his penis; even through the haze of the drag, she remembered to use her left hand, to account for how he was hanging. She felt hot skin and coiled hair and the leathery pendulum of his nutsack, tasted his salty sweat on her lips as she kissed his spine, and as the hatch grated open he stood there still, waiting, showing the control she didn't know she was looking for.\n\nBut he knew.\n\nHe brushed her hand from his penis like a man bats at a fly. Pixy heard the excitement in her own gasp when his skin left her mouth as he stepped out of the briefs and into his quarters. He didn't even bother looking at her when he spoke. \"I'm going to piss. You'll be on my bunk when I'm done, lieutenant.\"\n\nThe response was immediate, conditioned through the haze of narcotics and lust. \"Aye aye, sir,\" and all at once there was nothing she wanted to do more than please this man. She bounded into the room as he drifted, unconcerned, into his latrine, clawing at her staytab with her dick-scented left hand, cursing the clothes for their sluggishness as they peeled themselves from her impatient body.\n\nAh, she noted dully as the trousers crawled down her legs, commanders get a bigger bed than lieutenants do. No shock there; it's how Fleet worked, but she did wonder whether the mattress was any thicker. She smiled to herself when she realized she was about to find out.\n\nAt last, just as the heard the toilet churn, her boots unstrapped themselves and released her feet to take her to the bunk, made up with perfect Fleet precision by an officer who could only have gone to one of the Academies. Pixy had not; her bunk was always a disgraceful mess, but she reasoned that anyone who disapproved of a messy bunk had no business being in her quarters. It gave her a certain grim satisfaction, like a snowshoer making the first divots in an overnight snowfall, when she planted her knees on the hermetically stretched duvet and leaned forward to the sound of his bare feet slapping on the deck behind her.\n\nPixy ignored the twinge in her lower back as she arched herself on hands and knees, displaying her wet twitchy vagina for this man, her brain already numbed with excitement and anticipation; it occurred to her that she was grinning at the pillow beneath her, a most un-Pixy-like reaction. Well, she shrugged, mentally, it had been a long and boring trip... And then he was looming alongside her. She restrained herself from her usual glance at her man. This was not a hasty, sleazy assignation as part of a logistics transaction, a stolen naked moment with some other ship's supply lieutenant; this was different.\n\nA dark, hard hand found her shoulder, unexpectedly light, and Pixy trembled. \"So pale,\" muttered that baritone, the hand moving, his stink everywhere in the small space; the blowers were already kicking on in the walls, but the lowest-bidder air purifiers on a ship like this were not going to be able to do a goddamn thing about the pheromones now packing the room. She stilled herself, the fingers drifting along her naked body. \"You're a fine one.\" A man like this did not need a reply, so Pixy didn't bother giving one; she hardly trusted her voice right then, anyway, the hand tracing over her taut ass now.\n\nThough she did give a strangled squeak when his finger very unexpectedly, very thrillingly, plunged straight into her pussy.\n\n\"That's it.\" She could hear the dry amusement, brittle in his voice as he fluttered inside her, and the man had read her perfectly. His finger knew precisely where to go and what to do. \"Squirm.\" No, she screamed at herself, no; this was all wrong, too soon, she never let herself get off first, but it was no use; drag always made her horny anyway, and she couldn't stop her legs from shaking like a sewing machine. \"My, you're quite a responsive little whore.\"\n\n\"Please,\" she whined, barely able to think. Already. His smell was her world. Her mind was shouting at her to stop this, to turn toward him, to please him, but his finger simply felt too good.\n\n\"Please what?\" God, the mockery; the man was so full of himself!\n\n\"I don't fucking know,\" she grunted, feeling a tickle at her thigh where the fluids were running freely down her leg, escaping his corking fingers. She couldn't stop herself from driving her body back against that hand, and she was never like that. \"I don't.\"\n\n\"Good thing I do,\" he chuckled, sending his stubby fingers on one more trip around her vagina before, with a suddenness as startling as their arrival, he pulled his hand back out of her and shoved her hard onto her side, sprawling across that virgin bedspread. At last she saw him, standing with the sweat drying on his skin, that magnificent body naked to her overheated gaze. Everything about his shining body was perfection, the cock half-hard, taunting her from above that rugged scrotum she'd felt in her hand. He hitched his knee onto his bunk. \"Prepare me.\"\n\nYes please, and Pixy scrambled onto her back; now she was in her element, feeling her little tits do that ever-so-slight sideways thing they did, her nipples hard and dark in the corner of her vision, but then there were two smelly thighs bracketing her body and her mouth was watering as the cock between them swung toward her face, and she knew exactly what he expected from her.",
        "And, in case she forgot, he was already reminding her.\n\nStrong, confident fingers found the sides of her face, gripping her head, lifting it from the pillow, and Pixy gasped across the surface of that jumpy penis as she dropped her jaw and strained forward. He pulled her onto him and she ignored the protest at the top of her spine, the position totally unnatural but deeply exciting. He tasted rich, gamy, wild as he began to harden against her tongue, and suddenly Pixy needed to do something with her hands; no, not just something. She needed to feel this man's body, his muscles. Blindly her fingers lunged toward him, finding his legs, shooting straight up to the ass she'd seen as she dragged his briefs down, and she squeezed hard as she stared up along his abs, searching for his eyes, already starting to work her throat.\n\nThe stench was overpowering, racing right into her nose and into her primitive cavewoman brain: the smell of a powerful male. Her vagina, she knew, was already a sloppy mess, and she pulled herself further down his cock, swallowing desperately, the drool flowing in thick gleaming waterfalls down her chin. Those pitted black eyes just glared down at hers, the relentless pressure of his hands crushing her head just a dull afterthought now that she was sucking his cock.\n\nHe relaxed, though, once she proved she could take him all the way down, even in such an awkward position; she read satisfaction in his face once his pubic hair found her sharp little nose, and after she was able to hold herself there for about ten seconds or so without passing out he finally let her head go, resting his hands insolently on his hips as he towered over her. \"Good bitch,\" he nodded distantly, so she held herself there, daring herself to maintain her composure even as the tears began to tickle the sides of her face and she heard the faint sound of herself, gagging.\n\nAnd then she jerked her head violently back, releasing his ass only to clamp eager fingers on his dick; it took both hands, too, to lift the long, ridged shaft toward his belly so that she could drift lower, teasing, licking as she learned the shape and texture of his nutsack.\n\nBig.\n\nThat was the overriding impression she got when she lifted each meaty ball with her tongue, experimenting. He tasted musty, in the cracks and crevices where his scrotum met his shaft, and especially behind: the workout was only part of it, for hygiene opportunities aboard circuit ships were not what they were in the broader Fleet. Pixy didn't care; she'd been told to prepare him, and she would, cleaning every centimeter of warm, eager male flesh until the subcommander decided it was time to fuck her. His penis jumped in her hands while her tongue darted along the shadows between his legs, and she could feel every part of him vibrate when he sighed; she'd found his anus. \"Very good, bitch,\" he laughed, and not a pleasant laugh either.\n\nPixy was on fire by the time the man eased himself back away from her face, hairy thighs brushing along her own eager tits, and she let her head fall back while the sudden ache in her neck subsided. She watched through lidded eyes, her breath deepening through the constant tinnitus of her new ears, while the man positioned himself, seeing the harsh planes and ridges of his muscles, the cruel smirk on his full lips, the strong fingers grasping a long, purpled cock still gleaming with her spit. Almost clinically, like a researcher wondering about a hypothesis, the man put his other hand out to twist harshly at Pixy's waiting nipple, and she felt her mouth go wide in a silent, startled scream. He kept glaring down at her while she writhed, the pain exquisite, and then when he finally let go it was like cold, clear water to a man in a desert.\n\n\"You're a fun toy.\" She was panting now as he lifted her legs. \"I'm surprised it took me this long to play with you, lieutenant.\"\n\nShe arched an eyebrow. \"Fuck me.\" It was time. His flavor was still acrid in her mouth, and the itch was growing, growing, and holy lord was it time; she'd gone through the entire course without getting properly laid, not even once. \"Fuck me now.\"\n\nHe pushed down on his cock, dipping it toward her overheated cunt, his eyes glinting with the conceited power he had over her, and when he let his head graze against her long inner lips she moaned despite herself. \"What's the magic word?\" he murmured, his penis a pencil writing along her slit.\n\nGoddamn arrogant asshole. But of course she'd say it; he was holding all the cards here, and they both knew her body needed him. She found his face with her purple eyes, feeling the tears still running there, and inhaled a big wad of snot as she shivered to the touch of his dick. \"Please.\"\n\n\"Gladly,\" he said after a wolfish pause, and then she was gasping, the moment of entry always so sudden even though she knew it was coming. His cock slid into her slowly, and not because the commander was aiming to tease; he was just that thick, spearing her like she was a zebra kebab; there was triumph in his dark eyes, and sure, excitement, and more than a little contempt. But mostly she just saw pride.\n\nHe owned her in that moment. It was the pride of possession, and Pixy Pfeiffer hated that she enjoyed it so much. He was perched above her, those sturdy exercise-swollen arms bracketing her, his weight pinning her in place while he thrust, invading her body, and Pixy felt her head roll back on his pillow as her body arched and good god, it felt good to be so full of cock.\n\nHe paused when he'd bottomed out, letting her feel how deep he was, even flexing himself inside her so she could feel the pressure of his head against her cervix. \"A fun toy indeed,\" he whispered again, his face just inches away now, and Pixy didn't even want to imagine what she looked like; she just wanted to take his cum, and her eyes, the flush on her chest, the desperate twitching of her pussy told him that more clearly than her gasping mouth could.\n\nHer feet rose high along his thighs, opening herself all the way; he clamped his hands onto her shoulders, curled his lips in a cruel sneer, and she shuddered into another silent screech as his ass rose and, with shocking suddenness, fell. All around her face was nothing but noise, the rhythm of the mattress, the blubbering gasp as he breathed, the wet slurping sound his penis made in her vagina, the slapping of their sweaty flesh; that, plus the smells of their bodies mating and the endless rhythm of his cock driving into her body, combined to submerge Pixy into a trembling, low-groaned wave of pinkish, hazy pleasure as he overwhelmed her.\n\n\"Jesus H Buddha,\" he spat into her face, mocking her, \"did you cum already, you dumb slut?\" and all the while he kept nailing her to the bunk while Pixy, as confused as she'd ever been by a too-sudden orgasm, just gripped harder with her thighs and tried to hold on while the commander thrust into her. Goddamn; it had been so sudden!\n\n\"Fuck,\" she whined hopelessly, distantly, but she was starting to recover already; she never came this early, and the shock of it had forced her awake. \"I want it from behind,\" she managed.\n\nThe commander laughed as he smacked her breast. \"Why should I care what you want?\" he demanded, still with that same fluid motion as their bodies took their pleasure, but Pixy just summoned her strength and shoved at his chest.\n\n\"Take me like a dog, motherfucker,\" she snarled, already twisting her legs under her, moving, wanting a better response from the man inside her and growing annoyed that he wasn't cooperating. She sank her fingernails into his back and slapped his face with the other hand. \"Come on. Get up.\" He rolled his eyes, the fucking prick, but Pixy didn't have time for his arrogance. She didn't feel like being crushed; she filled her lungs gratefully as she got herself onto her hands and knees, backing into him, her ass wagging for his penis. \"Do it!\"\n\n\"Bitch,\" he hissed, but he sank his cock into her anyway, the both of them gasping. \"I already did my cardio, lieutenant; you do the work.\" And so Pixy writhed, her muscles taut, humping back against that splendid body behind her, making him fill her again and again. For his part, the man just stood with his hands resting lightly on her ass, an immovable object for her to back her needy body against, and Pixy was more than happy to do just that. For, this time, she knew what she was doing to him.\n\nHe'd be staring down at the best ass aboard this ship; granted, that wasn't saying much. But Pixy Pfeiffer knew her own worth and was proud of how she looked. He'd be seeing a set of carefully maintained back muscles, churning as they forced her body back into him; he'd wonder about the scar, but fuck that. If the excellence of her greedy pussy couldn't get his mind off a scar, Pixy reasoned, she might as well just go become a space-nun. His mouth would be dropping, she figured, at the sight of his own strong, rigid cock winking in and out of view as she ran her wet pussy along its length, tirelessly, in that fast rhythm she could tell he liked.\n\nAnd if she came again, along with him? No harm done.\n\nIn fact, Pixy needed this man to feel like she was worthy of him, but that last orgasm had felt great; why not double-dip? She snaked her hand back along her body, ignoring where he was now reaching confidently underneath to play with her tautly quivering tits, and found her clitoris warm with friction and ready to be pinched.\n\nShe squeezed.\n\nHe probably thought she was moaning because of his cockhead, battering her cunt; nope. That one pinch was like the air being let out of a balloon, explosively, uncontrollably, leaving her warm and pink once again with her senses mounting, the second orgasm drowning her. \"Fuck yeah,\" she bit out, her own fingers busily playing while his swinging ballsack battered them on its way in and out; god, the intensity of it! She was straining back now with every propulsive heave of her legs, twisting, feeling his grip tighten on her nipple, both of them spitting out unintelligible words, when at last he grasped her body with punishing force, and she at last slung her head around with her violet eyes staring. \"Yeah, baby. Cum in that pussy!\"\n\nHis response was a grunt, a steely clawing hand hauling her back, and then he arched tightly forward to stab her as deeply as he could; Pixy's body sang when she felt his dick, twitching and shuddering madly inside her, for she knew what it meant. There was nothing as clich\u00e9d as her feeling his cum pulse into her body; there was just a sudden, hot sensation of fullness, delicious and breathtaking as she heard his exultant whoop. \"Take it,\" he hissed, and she was certain she'd be bruised where his fingers clutched at her flesh.\n\nThey stayed a moment or two more, in tableau, both of them breathing hard; sweat and cum were staining the sheets beneath them, the 'fresher already trying to drag the linens off to clean them. The whole space stank of perspiring skin and that gamy, bleachy-starch odor of sex. \"Fuck,\" the subcommander sighed, pushing her unceremoniously off his dick and watching as she collapsed to the mattress, wild-eyed. And there she stayed, gulping air, staring up at him as he loomed above her with their fluids all over his penis.\n\nGod, she thought. This man had a magnificent body.\n\nToo bad he was such an arrogant jerk.\n\n* * *\n\nHe didn't kick her out of his quarters afterward, which was how Pixy knew she'd performed well. Men like him didn't waste their time on aftercare for substandard poon. So she snuggled into him willingly enough, still pretty sure she didn't like him but absolutely certain she liked his dick.\n\n\"A coding course, huh?\" He scratched complacently at his pubic hair. \"I remember my days in commo, too.\"\n\n\"Commo?\" Pixy frowned; fuck. It had been years since she'd been a communications officer. That was a junior lieutenant's job. \"No. I'm supply. The Second Officer, acting First.\" It was amazing, she thought, and hardly for the first time, just how quickly passion could cool. Two rutting animals in heat could turn into two spiteful strangers within seconds after ejaculation, and that's what seemed to be happening now. Pixy began thinking about how soon she could leave.\n\nThe man raised a skeptical eyebrow. \"Your captain must be a useless dumbass, sending a supply geek to a coding course.\"\n\nPixy bristled; she liked Captain Reye, so far. \"Watch your mouth.\" Her high was winding down; the world was swimming back into sharp focus. She was rapidly deciding the man was an asshole, which was the sort of thing that made her regret his semen in her body. \"Coding. Not the secret-squirrel bullshit for beams or radios. Supply codes. Like, ordering the right supplies. Differentiating between, say, adhesive bandages and wrap bandages. Or between consoles and condoms.\"\n\nHe visibly, and with evident difficulty, suppressed a chuckle. \"You need a course for that?\"\n\nPixy sniffed. Definitely a dickhead. She made up her mind there'd be no anal for this guy. \"There's a new system now. Look, not all of us can be lofty fucking subcommanders aboard Combat ships. Somebody needs to order the fuel.\"\n\n\"Okay! Okay.\" He raised a calm, placatory hand, then let if flop lazily onto Pixy's arched, naked butt. A squeeze calmed her down. \"I'm just teasing. When are you due to make subcommander, anyway? You're not on the list yet, obviously.\"\n\n\"No,\" she scowled. There was a new list due out soon, that was probably already out, but she'd been whizzing uselessly around on the circuit ship for weeks. \"I doubt I'm on it, but I might be. All I needed was this last course. The credits.\" He raised both eyebrows this time.\n\n\"No shit,\" he blurted. She watched as his eyes roved along her body, calculating this time. \"You might be on the list? No way are you older than thirty. That's pretty early for subcommander.\"\n\nDespite his arrogance, Pixy felt herself flush; she'd just turned thirty-two. \"I've got almost twelve years in. Most people get promoted around sixteen; I'm not that far below the zone.\" She relaxed; his hand on her ass felt good, the fingers now burrowing idly into the crack. \"I've got merit points,\" she admitted. It wasn't something she liked to talk about. \"Medals.\"\n\nHe laughed, deep and rich, reminding her why she'd been attracted to him. \"Medals.\" He sounded snide. \"Like, for ordering the right quantities? Proper stowage? That kind of thing?\" Yup. No ass for him. She glared back at him, deciding how badly to wound his ego. Yes, he was Combat and she was \"only\" Service, but he didn't look like he'd seen much action.\n\n\"I've got a Silver Cross,\" she told him softly. The fingers stopped burrowing, the whole hand flexing instead. She glowed a moment; like most people, she always said awards and medals didn't matter, but like most people she was lying about that.\n\n\"Do you.\"\n\n\"Yes. Oh, wait. Almost forgot.\" She shrugged, her neck aching slightly; she'd strained herself when she'd twisted around to stare at him as he drove into her. \"I've got two of those.\"\n\nHe recovered quickly, at least; there were only a handful of officers with a bar to their Silver Crosses. \"Oh. Is that all?\" She could tell he was controlling his surprise carefully; he hadn't realized he'd just fucked a hero.\n\n\"Just about.\" She was enjoying this now. \"The Army gave me their Combat Cross, too. Some random shit I did out by the Flasbard homeworld.\" He was looking at her more speculatively now, judging, evaluating, and she felt his hand drift up along the top of her ass; she stiffened slightly when his fingers reached the base of her spine, the jagged scar there. She forced a smile. \"Ouch.\"\n\n\"I was wondering about that,\" he admitted. She shivered when his fingers traced along the ridged flesh, the unexpected deftness in his touch. Only Janelle had touched her there, in just that way. \"Looks like quite a wound.\" It came out as a slow, husky murmur. Pixy glanced idly down, her eye attracted by the twitching movement of his sticky cock once more growing hard. She had to stop herself from rolling her eyes.\n\nDude was getting off on what a badass he thought she was.\n\nWell, she decided, he could go fuck himself. Quite suddenly she remembered getting that scar, the fear and pain, and poor Okonfwe lying in three big bloody pieces on the deck, like a smashed doll. This guy annoyed her, and Pixy Pfeiffer was not a woman who liked to be annoyed. She smirked over at him, then curled her legs slowly underneath her so that her ass rose high and sleek in the pittance of starlight coming in through his little viewport, still so much better than the portless cabin she'd been allotted. She watched as his throat tightened, those dark narrowed eyes of his fixed on her smooth space-pale flesh. She gathered her legs underneath her and raised herself up onto her knees, ignoring the achy scar when she arched her back; she liked displaying herself, especially for an appreciative partner.\n\nAnd just one look told her how much she was appreciated; his scrotum was already tightening, the thick stubby shaft above it firming with impressive rapidity given his age and the workout she'd already given him. She made certain he could see her eyes, almond-shaped and purple, wander down his hairy torso to look with great satisfaction at his penis. \"Quite a wound,\" she agreed, her voice dusky-quiet as her hand reached slowly down between his brutal thighs to cup his balls. The man's skin was warm, funky with their fluids. \"Ever been injured yourself, commander?\" She let her mouth fall open as she fondled him, enjoying the power now, her fingernails busy in his moist crotch.\n\n\"No.\" It came out as a drawl, the confident tones of a man used to getting what he wanted. His hand lay hot on her thigh. \"Can't say I have.\" His strong mouth grinned up at her, and kept on grinning until Pixy clamped her fingers tight against his nutsack, squeezing hard, with just enough twist to make the grin freeze suddenly. She waited until his eyes went wide, a gasp starting in his throat, and then she leaned quite deliberately down and stared into his eyes.\n\n\"Give me a few moments, you arrogant fucking asshole,\" she advised him softly. \"I can make that happen.\" One more squeeze, hard enough to make him grunt into her face, and then Pixy released his balls and got casually to her feet. She heard him panting behind her as she sauntered nude to his doorway, where she bent carefully at the waist to retrieve her clothes. \"Bye, now.\" She kicked the hatch and stepped naked out into the corridor, opting for dramatic effect over prudence; she was gambling that nobody else was likely to be haunting the senior officers' corridor at precisely that moment. Not with three berths.\n\nAnd, like most of Pixy's gambles, this one paid off.\n\n* * *\n\nThree days, she reflected, and still the subcommander hadn't said a word to her.\n\nIt amused her a bit. She had neither the time nor the inclination to hole up in her quarters to avoid him; she missed the starlight through the viewport, and besides, what had she done to be ashamed of? They'd given each other a fun, if messy, evening's entertainment; if he wanted to be a sulky little bitch about it now, well, let him. The commanders didn't usually hang out with the junior officers, anyway.\n\nThe voyage was definitely wearing on her. The robots were very deliberate in not allowing their passengers to know where the ship was in space, so there truly was nothing to do but wait. It was funny, Pixy reflected: mankind had conquered all of space within sight of Sol III. So why were voyages now no better-informed than they'd been when the Vikings had sailed?\n\nPotrek, the other full lieutenant aboard, was stellar navigator aboard a dreadnought, and even he was flummoxed. He'd sit for hours on the little stool next to the galley, staring out the wardroom viewport, apparently hoping that somewhere among the infinity of stars in that visible patch of deep space, he'd recognize one familiar pattern out of the uncounted millions of patterns out there. He sighed. \"Fuck this.\"",
        "Pixy did not look up from her manual. \"Nothing familiar?\"\n\n\"That's not it.\" Potrek shook his head with the familiarity of a man who does that a lot. \"Everything's familiar. Constellations repeat to an alarming degree.\" He glanced again at her uniform. \"You sure you're qualified as a bridge officer?\"\n\nShe stuck her tongue out at him, still without looking. \"Fuck you, sweetie.\" She always used star plots.\n\n\"I wouldn't say no,\" Potrek shrugged, getting a thin smile in return. \"Once you see enough stars randomly distributed,\" he went on, \"the patterns sort of make themselves. Then you can add in the back-constallations, for when you're on the far side... I mean, the same patterns recur again and again.\"\n\nPixy nodded. \"Like a fractal.\"\n\nPotrek's head jerked back as if she'd slapped him. \"Bite your tongue. Do you even know what a fractal is?\"\n\n\"No.\" Pixy admitted it with no shame. She'd been faking it in conversations with smarter people for many years now. Every now and then, one of them was bound to notice. No biggie. \"So, no idea where we are.\"\n\nHe shrugged. \"As near as I can tell,\" he mused, \"we're near the Utari worlds.\"\n\nHer head snapped up. \"Utari.\" She had to fight to keep the excitement out of her voice. \"No shit?\"\n\n\"None at all,\" Potrek agreed. \"Waste disposal has been working just fine lately.\"\n\n\"Ha ha motherfucking ha.\" She thought about it. \"Still no idea how fast we're going, though? It can't be more than .79.\"\n\n\"About that,\" Potrek nodded. \"I think, anyway. Why? Is Utari where you're going?\"\n\n\"Maybe.\" She had no idea. No clue at all how the galactic geography looked around here. No inkling where the Pulver might be. \"Hopefully.\" And then came one of those events that proves the universe has an excellent sense of timing.\n\nThe hatch hissed open, showing the gawky figure of a young Tygon with a bad hairstyle. Both lieutenants frowned, as did the other officer present, the mousy little Junior with the funny name. The Tygon, whose name Pixy hadn't bothered learning, was the civilian contractor who worked for the robot buttfuckers as an alternative to joining the Service. Which made him the only lifeform permanently aboard.\n\nPixy had trouble imagining a worse fate.\n\nThe youngster consulted his tabslate. \"Which one of you is Lieutenant Pfeiffer?\"\n\n\"Pfeiffer,\" Pixy snapped back. \"The P is silent.\"\n\n\"Whatever.\" The Tygon shrugged. \"They tell me you're up next.\"\n\nPixy blinked, trying to avoid the little flutter of excitement in her belly. Finally. \"Who's 'they,' and what's 'up next?'\" she barked anyway. There were appearances to be maintained.\n\nThe Tygon looked at her as though she were simple. \"The robots,\" he said slowly and loudly. \"Your ship is the next stop.\"\n\nExcellent. \"When?\"\n\n\"Soon.\" He rattled a form sheet from the back of his tabslate. \"Here. Fill this out. They'll transmit it to your ship at 2200 hours.\"\n\nPixy glanced at her watch, a monstrous device about a centimeter thick. Two hours. She took the form and glanced at it. \"What the fuck?\" she demanded. \"I only get fifteen words?\"\n\n\"Take it up with management.\" The Tygon shrugged, a gesture he clearly did often. \"It's a tight shot. Low-beam, compressed data. They can't send much.\" He met her gaze with supercilious defiance in his golden eyes; she realized, too late, that he was drunk out of his mind. \"I usually just tell people to pick the single most important thing they need to say, and go with it.\" He glanced around the room. \"2200, lieutenant.\"\n\n\"I heard you the first time.\"\n\nThe Tygon nodded, then produced a second sheet. \"Junior Lieutenant Donskoi? That you?\" Pixy watched as the mousy man in the corner just looked up and nodded. \"Okay. It's your stop too.\" He handed over the sheet. \"Same shit I just told her.\"\n\n\"Sure.\"\n\n\"Be ready, you two. The robots don't like dropping out of lightspace any longer than they have to.\"\n\n\"Fuck the robots,\" Pixy muttered, but he was out of her awareness long before he was out of the wardroom.\n\n\"Well.\" Potrek sniffed; he'd been aboard longer than she had, and sounded resigned. \"Congratulations.\"\n\n\"Right.\" Pixy was staring over at the mousy officer by the galley, trying to hide her surprise. \"Hey. You're going where I'm going?\"\n\nHe looked over at her, his eyes measuring her dully. \"Sure.\"\n\nShe blinked. He was a Junior Lieutenant, two grades lower than her. Granted, this was the wardroom and they were all just passengers, but still. \"What was that?\"\n\nHe got the point, at least. \"Sure, ma'am.\"\n\n\"Ah.\" She nodded, wondering with great rapidity whether she'd said or done anything humiliating while he was around. \"You've got orders for the USS Pulver?\" But of course he must; GP ships didn't usually travel in company, not on garbage runs. That meant some other officer was leaving soon, or already had. Please, let it be that cunt van Kleck... \"Well. I'm Pixy Pfeiffer, the Second Officer. A pleasure.\" It wasn't, though; weaselly little fucker should have introduced himself days ago, she thought irrationally. \"You are?\"\n\n\"Donskoi. Ma'am.\" He licked his lips, and in an instant Pixy knew him. Or knew the type, anyway; a scrounger. A scavenger. A kid who knew where all the bodies were buried. She nodded.\n\n\"You're prior service.\" It wasn't a question, so Donskoi didn't bother nodding. \"Supply guy, right?\"\n\nDonskoi cocked his head, then decided it was safe to answer. \"Sure.\"\n\nShe nodded. \"I like prior-service guys. We'll talk later, Mr Donskoi. You've got packing to do.\"\n\n\"Sure, ma'am.\" He arched an eyebrow, deciding whether she was dismissing him from the room or merely from her mind, and decided it was the second one. So he kicked his feet up, fished his tabslate back out of his cargo pocket, and calmly went back to whatever it was he'd been doing.\n\nPixy looked at the fifteen-word form, frowning as she wondered what she ought to include. She had a satchelful of priority mail for the crew, and because she was nosy she'd read most of it; there were some important bits of news in there, as well as a series of rumors and dispatches she'd received while on her course. Her brows knit, she stooped to her own tabslate and tried a few messages.\n\nPfeiffer is returning. Federal government is declaring war on the Cathos Vremein, effective immediately.\n\nPfeiffer is returning. President of Tygon Conference was assassinated last week. Temporary government in turmoil.\n\nPfeiffer is returning. Sceviour's new arm successfully recloned; medical readiness orders to follow by midbeam.\n\nPfeiffer is returning. Warrant Officer Filbric's fourth wife has had a new child. Mazel Tov.\n\nPfeiffer is returning. Bringing along new officer. Federals imminently at war with the Cathos Vremein. \n\nPfeiffer is returning. Emergency safety recall on all Mark XV interphase torpedoes. Possible unstable detonators.\n\nA moment later, she nodded briskly as she decided; the most critical message she could think of:\n\nPfeiffer is returning. Sublieutenant Amisuul better be moved out of my quarters before I arrive.\n\nShe copied it onto the form, then dropped it into the message-traffic slot beside the oven.\n\n* * *\n\n0100 saw her on the bridge, frumping cross-legged on the deck among the robots, reaching up to the console to push the throttles morosely forward only to watch as one of the machines pulled it silently back to its previous setting, every time, smoothly and efficiently. \"You're an asshole,\" she told the robot.\n\n\"I protest, human woman,\" it replied.\n\n\"Go fuck a butt,\" she muttered, getting disgustedly to her feet. The 4B4 robots were the gold standard for reliability and reaction time, but did they really need to look like that?\n\n\"If you wish, human woman.\"\n\n\"No.\" Pixy gave the thing a metallic slap, which made her feel not even a little bit better. \"Not mine. Fuck someone else's.\" She scanned the thing up and down; it really was extraordinary, with the arm servos and the Central Connector. They really, really did look like they were getting some. Well, giving would be more accurate.\n\nThe facelessness made it even worse.\n\nShe stalked toward the lift, feeling as she always did that she ought to say goodbye or something. People spent their lives alongside robots; they were a part of everyone's lives, but you needed to be careful about anthropomorphizing the damn things. As a girl, she'd had the usual robau-pair to help raise her while her parents worked; an older model, from back then they'd still been trying to make them look human. The only time her father had ever really gotten mad at her had been when she named the robot.\n\nIt bothered her a little, now, that she couldn't remember the name. Dad's punishments had always worked pretty well, considering.\n\nShe stalked toward her little berth, wondering how soon she should pack. The jaded little Tygon had come back around midnight, bearing in his scaly green claws an information sheet. \"Ever ridden the circuit before?\"\n\n\"Not this far,\" she'd admitted; she'd never had a ship leave her more than three or four light-years behind. \"Any idea when we get there?\"\n\nHe'd blinked at her. \"Shit, man,\" he'd whined. \"I barely know my own name anymore, y'know?\" The info sheet had been a bit more intelligible, advising her that at some future point she'd be summoned to the docking ring, where one of Pulver's shuttles would hopefully await her. She was to be packed and ready whenever that happened, which meant she had to be packed and ready... well, now. So she'd be living out of her duffel case. Indefinitely. But \"probably not for very long,\" according to the Tygon.\n\nGee. Thanks.\n\nShe flung herself onto the bunk, sighing, reminded of life as a junior lieutenant, and then as a sub, or even as a cadet before all that: hurry up and wait. Nobody telling her anything. The awesome weight of Fleet tradition and practice crushing her, reminding her in no uncertain terms that she was powerless to do anything but be that one tiny, necessary cog, manning a Service ship, moving the Wars along.\n\nSmall wonder she'd risen so quickly once she'd finally made sublieutenant, once she'd gotten a few scattered opportunities to take the kobel by the horns and show what she could do. Pixy Pfeiffer was not a woman who shied away from responsibility. She soon earned a reputation as a reliable, competent officer who got things done quickly and efficiently, if not always legally or ethically. But in a Fleet that prized mission accomplishment over everything else, she was valued.\n\nThe first clue she'd had that people were talking about her was when she'd been offered the job as Second Officer aboard the Pulver, a fairly impressive post for such a new lieutenant; for all that Pulver was just another GP Service Fleet vessel, she was assigned to the Outer Command, where time pressures were immense. At the same meeting where that job had come to her, there'd been an extremely unusual offhand comment from the commander who headed the Outer Personnel Office.\n\n\"Oh! Hey!\" she'd said as Pixy was about to get up and leave. \"I almost forgot. Something else came through... that is, I was told to mention it.\" She was fluffing through a series of form sheets until she found one, heavily highlighted. \"I'm sure you won't want it.\"\n\n\"Ma'am?\" Pixy had sunk back into her seat, still dazed; she'd been expecting a Third Officer's billet, like she'd had on an acting basis on her last ship. Weapons and morale, meaning weapons and whoring. Fuck that.\n\nThe commander had shrugged with elaborately staged unconcern. \"It's a billet as an assistant fourth officer,\" she rapped out airily. \"Well, more like a fourth-in-waiting; the incumbent is going back to school soon.\" Fourth Officer. Commo.\n\nPixy frowned. The fuck? \"Ma'am... I mean, you're just now cutting me orders as a Second Officer. Why would I want to be a Fourth?\"\n\n\"Right?\" The commander smirked, as if they were sharing a joke. \"It's just that it's aboard a higher-priority vessel, the Indomitable.\"\n\n\"The what?\" Pixy had blurted, very confused. \"That's the flagship for the whole Outer Command, ma'am.\"\n\n\"I know, right?\" Shrugs all around; either the commander was a good little actor, or this really had taken her by surprise. \"And a Combat ship. You're Service.\" She rolled her eyes. \"Probably a fuckup, lieutenant, but I was told to mention it.\"\n\nTold by whom? Pixy had been too junior, then, to ask, but she'd wondered every day since. At the time, the thought of serving aboard a Combat vessel had seemed to define insanity; asshole officers, serious sailors, no drugs, and the everpresent risk that the Antareans would swing by some dark day and blow your ship inside-out. No way; there was a reason she'd chosen Service in the first place, though her scores had been good enough to get her nearly any branch she'd wanted.\n\nAnd, for awhile, the choice had been a great one. Lots of fun, stimulating crewmates, easy leadership, decent chow, good extra money; it had been a lovely war, right up until Captain Crick had taken over the Pulver. Then it had just been work, work work, and stress, and then at last the horror show that Fleet had dryly labeled Detached Engagement #447, where Pixy had surprised herself by acting gallantly, even heroically.\n\nThere'd been murmurs since then, knowing glances, eyes flickering down at her chest. In her early years they'd done that to catch a glimpse of a misbehaving nipple; now, they just wanted to see the Silver Cross And Bar.\n\nTimes changed.\n\nShe sighed again into her pillow, the circuit ship droning on around her, and she gave a whimper as the fucking interphaser went once more, tickling at the bitter end of her new cochleas. Fucking shitbag robot pilot, flying by algorithm instead of by feel. Sleep came late, but at least it came.\n\n* * *\n\nThe smell rolled through the hatch along with the gravity, pungent and sharp after so long away, and yet as familiar as her sister's hug. Pixy couldn't stop herself from closing her eyes and smiling, just for a moment, while trying hard to preserve her dignity after the fucking catastrophe Junior Lieutenant van Kleck had made of the docking.\n\nWait. It was Sublieutenant van Kleck, now; Pixy had the woman's promotion orders in her mailbag.\n\nPixy had not been pleased to see her. The woman had made herself an insufferable shitty mess since the day she'd come aboard. She had one of those \"I'm an engineer and you are not\" personalities that clashed hard with Pixy's own way of looking at the world; people uncomfortable with ambiguity, she'd noticed, tended to antagonize her. And van Kleck had certainly done that; as acting First, it had been Pixy's duty to welcome her aboard, place her in the right job, figure out where she'd go at general quarters, and generally see to her professional development.\n\nBut van Kleck had pissed her off. So Pixy had simply tortured her.\n\nVan Kleck woke up within her first week to find herself assigned as Fifth Officer, a job for which she was totally unqualified with duties in which she was absolutely uninterested. She also discovered she'd picked up every possible additional duty aboard the ship, from Mess Deck Officer-in-Charge to Sanitation Officer, each with its own compliance regulations and specialized testing and certification exams. Then, when she'd tried to go over Pixy's head to get assigned to the Engine Room (where, strictly speaking, she probably belonged), van Kleck had had the temerity to suggest that Pixy was favoring the Engine Room's actual Chief Engineer, Sublieutenant Klonmyre, just because Klonmyre was Pixy's bedwarmer.\n\nVan Kleck was right, of course. But that was when Pixy had assigned her all the additional duties, in an attempt to keep the annoying fiver out of her hair. She wondered just what had gone down in her absence.\n\n\"You need to study the middle chapters of the Piloting Manual, Ms van Kleck,\" she'd said sweetly as the engineer had struggled to hold the shuttle on course during the transit. \"The ones about rule-of-thumb compensation and the Ullmer Principle applied to low-grade solar winds.\" Engineers, she'd noticed in the past, often made poor shuttle pilots. They didn't like the unpredictability.\n\n\"Umm.\" It was the very first thing Pixy had said to van Kleck since she'd left the circuit ship. \"Welcome back, ma'am.\"\n\n\"Thank you.\" Pixy wondered whether she'd talked Captain Reye into letting her into the Engine Room; with a new First due anytime, he hadn't made her appointment as Acting Fifth permanent. The thought had been troubling Pixy for some time; replacing the solid Klonmyre with the stellar test scores of van Kleck was exactly the sort of thing that looked good on paper, that a new First would probably do out of hand.\n\nFor all she knew, van Kleck was Chief Engineer already. But she'd be damned if she asked the woman, least of all while she was nervously trying to hold course. Pixy sighed instead. \"Just try not to collide with the ship, Ms van Kleck. I'm sure the captain would appreciate it.\"\n\n\"Aye aye, ma'am,\" she replied crisply enough. \"Oh, and I'm to relay a request that you report to the First Officer as soon as we dock, ma'am.\"\n\nPixy let the silence stretch painfully thin, let van Kleck know she resented an instruction so basic, that obviously she'd report to the First fucking Officer, that that was what people did when they came aboard. At last, as van Kleck looked nervously over her shoulder, Pixy nodded curtly. \"Noted.\"\n\n\"Ma'am.\" Van Kleck was transparently curious about Donskoi, dozing with his hat pulled low over his eyes; Pixy had watched her size him up at once, take in the campaign badges left over from Donskoi's service as an enlisted sailor, mentally note the fact that the new guy was not an engineer, and immediately dismiss him as a competitor. Some officers were like that, always judging their peers, wondering how they could get ahead of them. Pixy had little patience for that. She knew, automatically, that everyone else was shittier than she was; why bother worrying about it?\n\nPixy was thirsting for information, but van Kleck was frustrating her. It would have been so much better if Amisuul, or even diBiase, had come to pick her up; those were friends, of sorts, the kinds of men whose brain she felt she could safely pick during the transit. How bad were things aboard the ship without her? Was the new First an asshole? Who was Donskoi replacing?\n\n<br >A sudden harsh alarm stirred her; Pixy glanced automatically over at van Kleck in the pilot's seat, certain she'd have no idea what the alarm was. She wasn't disappointed. \"Gravity,\" Pixy growled. \"That's the particle alarm.\"\n\n\"I know that, ma'am.\" The fiver had found her zen again, verbally, but she still hesitated over the controls.\n\n\"Gravity,\" Pixy repeated, tempted to reach out and do it herself. \"You need to dampen the Lerbal Effect. Now.\" Just behind them, the circuit ship was preparing to go lightspace as van Kleck stumbled toward the safe point. Even without getting sucked along with the robot ship, the shuttle was in for a rocky ride without the damping. \"Turn off the fucking gravity!\" Pixy barked suddenly, and the stupid bitch finally worked the levers.\n\nPixy ignored the flutter of nausea that always accompanied zero-gravity for her, feeling the harness against her shoulders as she rose out of her seat. A crashing noise from behind the flight deck told of an unprepared Donskoi, but when Pixy glanced casually around to check on him she wasn't surprised to see him looking back with the casual inscrutability she'd already noticed in him. He bobbed up near the ceiling.\n\nThe stern monitors were already showing the circuit ship glimmering, getting ready for the move; the Lerbal wave would be propagating any moment now, and Pixy popped her harness and kicked lightly at the deck to waft her backward out of the seat; she was hovering not far from Donskoi, watching, as the wave struck.",
        "Van Kleck was far too competent to gasp at the sudden turbulence, but not quite competent enough to know how to ride it out; Pixy bit back the criticism she normally would have sent flying into the fiver's ear, knowing from brutal experience that Lerbal waves were notoriously difficult to fly through. They were dangerously unpredictable, requiring a certain finesse on the levers that Pixy knew van Kleck would never possess. And, much though she wanted to, Pixy couldn't fault the woman for that.\n\nThe shuttle rattled hard all around them, vibrating intensely as van Kleck, still strapped into her seat, fought to maintain her course. Pixy merely floated calmly as everything around her shook, feeling the wave pass through her body as an electrically crackling tingle; Fleet's doctors insisted that exposure to Lerbal waves didn't cause morliosis or cancer or anything like that, but it wouldn't be the first lie they'd told.\n\nShe was staring down at the attitude globe, on the verge of chiding van Kleck about her course, when the shuttle began once more to respond to her tentative fingers; the woman was not an instinctive pilot, but that mutated fifth brain lobe of hers allowed her to calculate the corrections she needed on the fly, with no trouble. So Pixy just watched out the forward port as the stars wheeled slowly around to the right attitude, bringing with them a sight that gave her an unexpected pang: the USS Pulver, dangling in space like a charm on a necklace.\n\nShe'd expected the usual discoloration: meteorite pitting, solar radiation, all of the assorted vagaries of space taking their vengeance on the electrocoat. But her eyes went instantly to a long, jagged rent in the ship's hide, back near the starboard quarter. \"The fuck?\" she barked, pointing. Van Kleck stirred beside her, and deep down Pixy knew she shouldn't distract the younger officer, that fifth lobe undoubtedly alive with worried calculations: she'd never been a strong pilot. But fuck that. \"What happened back there?\"\n\n\"It's, ahh...\" Van Kleck's neck muscles worked in a nervous swallow. \"We had a collision, ma'am.\"\n\n\"Yes, Ms van Kleck, I can see that. Looks like a fucking killer, too; the pelding's all shorn away, down at the lower edge.\" Jesus. It was like the ship hadn't decelerated at all before the hit. The shuttle wavered as van Kleck tried to focus, glancing frantically sideways, and Pixy knew the score immediately. \"Ah. I see. The collision was your fault.\" It wasn't a question. \"I'll take over then, Ms van Kleck; I want to dock, not crash.\" That wasn't a question either, and van Kleck took her hands gratefully off the control bars as though they'd shocked her.\n\nPixy accelerated at once; she did not believe in slow approaches, and her confidence in her own abilities was absolute. Her eyes and mind took in the approach vector, accounting for yaw and slide, fingers on the familiar switches; this was second nature to her, and she was already wondering how many penises she'd need to gratify to get another bale of pelding. When she'd left, they hadn't had enough for a repair like this. \"I should make her suck the dicks,\" she muttered spitefully.\n\n\"What?\" Van Kleck was startled; she believed in order, regulations, and standards. In a world like that, supply officers didn't operate via their genitals.\n\n\"Nothing,\" snapped Pixy. \"Shut up. I'm sure you're a good engineer, Ms van Kleck, but you can't fly to save your ass. Watch and learn.\"\n\n\"Aye aye, ma'am.\" If she felt miserable at the criticism, at least van Kleck had the grace not to show it. \"I look forward to your mentorship.\"\n\n\"Fuck off, Ms van Kleck.\"\n\n\"Ma'am.\"\n\n* * *\n\nA growing cloud of displeasure hovered over Pixy as she stalked the corridors toward the First Office... her old office. Crewmen stopped and stared as she came near, almost all of them breaking into smiles and snapping sharp salutes. \"Pulver!\" they'd call, and Pixy would respond with the dull greeting, \"Rising.\"\n\n\"Good to have you back, ma'am.\" She heard that more than once, but the short journey just made her more and more irritated. She'd hoped, after seeing the splintered pelding outside, that the ship would be a mess. Instead, it looked tidier than it had in years. It even smelled like cleanser and deconstructant, rather than shit and solvent. She had to bite her tongue when she encountered her own chief, Koster.\n\n\"Nice seeing you, Ms Pfeiffer,\" he said casually, looking with open curiosity at the trailing Donskoi.\n\nWhat, she was about to joke, did y'all clean the ship just for me? She stopped herself in the nick of time, too afraid that Koster's blunt answer would be something along the lines of no, the new First keeps the ship this way all the time. \"How are things, Chief?\" she asked instead, her tones freighted with meaning.\n\nKoster shrugged. \"Fine. We had to bust McChang again, down from warrant officer to petty officer. The usual.\"\n\n\"Fuck.\" McChang was bad at self-control. \"This is, what, five times?\"\n\n\"Something like that,\" Koster tossed out. \"I'm not sure he keeps track anymore. He doesn't even bother attaching the rank markings these days.\"\n\nPixy had already started walking again. \"Who was it this time?\"\n\n\"Some FNG. Woman. She lodged the complaint two days ago, and the First Officer already had it typed up by breakfast this morning. She's from Tygon, and you know how he gets when he's around Tygon women.\" They hove up outside the First Office. \"Talk later, ma'am.\"\n\n\"You know it. Oh!\" She remembered the conversation she and the new officer had had aboard the circuit ship, while they waited for van Kleck and her tardy shuttle. \"Chief, this is Lieutenant Donskoi. If all goes well, he may be helping us with some of our hypothetical activities. Mr Donskoi, Joop Koster.\"\n\n\"Sir.\" Koster nodded briefly at the junior lieutenant, eyeing him without that everlasting enlisted skepticism for young officers. The old chief even smiled, that faint smile he usually used for equals. \"We'll talk.\"\n\n\"Sure.\" Donskoi's inscrutably flat tone left Pixy wondering just what was going on between them. She shook her head.\n\n\"We're off to see the new First. Is he an asshole?\" Chief was a friend, sort of. She could speak freely with him.\n\n\"He's an officer, ma'am,\" and that was all the explanation she needed. Pixy's lips drew into a line, then she strode off into the usual scrum of sailors milling around in the corridors, talking over her shoulder to the new officer.\n\n\"Mr Donskoi, I'll assign you quarters just as soon as...\" Oh. Wait. She was no longer the First Officer. \"I mean, you'll get quarters assigned just as soon as your orders get accepted. Then I'm sure the captain will want to meet you, probably at dinner.\"\n\n\"Sure, ma'am.\"\n\n\"Right. Just follow me.\"\n\n* * *\n\n<br >The interview with the new First didn't really begin until the hatch snicked closed behind the retreating Donskoi, and both Pixy and the guy behind her desk knew it. No, she reminded herself savagely, not her desk. It had been Densborg's desk. She'd only been keeping the seat warm. But god, she'd done a good job. And it wasn't until now, as she stared thoughtfully across at Lieutenant Matteo Falgada, that she realized how badly she wanted the job back.\n\nHe had those dark good looks he'd had several years before, when they'd met during a supply deal over, if she recalled correctly, a set of training holos and a bucket of spare parts. The payoff, as it so often was, had been his cock in her mouth; she'd remembered that dick at once in her mind's eye, the moment she'd seen his name on the hatch, a short thick ugly thing that, memorably, had tasted sharply of soap.\n\nPixy remembered almost all the cocks.\n\nShe'd caught his eye first thing, as she had back then, daring him to have forgotten her. She'd always given excellent oral service, and she often met appreciative former colleagues, at briefings or seminars or on training courses, whose eyes took on a faraway look when they shook her hand; she knew what that look meant. And she didn't see it in Falgada. He stirred once the hatch locked itself. \"Want a drink, Pixy?\"\n\n\"No.\" Technically, she supposed, she should call him \"sir,\" but she found she wasn't inclined to do that. He had that entitled air you often saw in graduates of one of the Core Academies, her first name (and Donskoi's, for that matter) rolling from between his fleshy lips like he'd been born with servants. And like he'd called them by their first names, too. \"I'm good.\"\n\n\"That's what I hear,\" he chuckled. \"I was amazed at the condition of the ship when I took over. I'd read about that 447 engagement, and I was expecting a rusty piece of shit held together with epoxy and spit. Instead?\" He waved his hands at a stack of reports. \"Everything up to date and as it should be.\"\n\nPixy nodded, silent; she never understood pleasantries like this. She'd done the job. He didn't need to praise her for it. \"Yeah? And?\"\n\n\"And? Nothing, Pixy, nothing.\" He tipped his head back against the viewport; why he'd set the desk on the hull side of the room made no sense to Pixy. She'd had it the other way, so she could stargaze as she worked. \"It's nice when supply officers are able to do such a worthy job as first officers, is all.\" His leg was shaking rhythmically beneath the desk. \"I came from supply myself, you know.\"\n\n\"No shit. Sir.\" This was fucking ridiculous. He had to remember her; had to. It had only been about three years ago. He waved a genial hand.\n\n\"Please, don't call me sir. Not when we're alone, anyway; we're both lieutenants.\"\n\nShe stared at him. He was so relaxed, so casual; he had that look about him, the slant in his eye, that said he was from the Hearth, maybe even Old Earth. \"You, uh, from the Core?\"\n\nHe nodded. \"My dad was a Fleet officer, so I sort of grew up near Fleet Central. You know how it is; you always come back to Central!\" He laughed, a deep rumbling laugh, and Pixy got a strange feeling in her stomach; he'd laughed in just that same way after he'd cum in her mouth. How could he not remember? Pixy didn't quite recall every supply guy she'd ever traded fluids with, but whenever she met them she had no trouble remembering.\n\n\"I guess.\" Pixy had been serving for twelve years, and she'd only been to Central once. It seemed impolite to mention it, though. \"It seems like I'm almost always in space!\" She fretted, feeling the intense pressure of the small talk, this whole thing feeling like a charade. Why could he not simply give her some orders, accept her report, salute, and move on? If they were going to be friends, why could it not just sort of happen, organically, like it had with Densborg? And Okonfwe? And even Amisuul, in a way. Falgada just nodded again.\n\n\"When's the last time you were there, Pixy?\"\n\n\"Oh, fuck.\" She'd gone there to pick up her first commission out of drydock, over ten years ago now. \"It's been awhile,\" she admitted.\n\n\"So, you haven't heard.\" He was toying with some of the shit on his desk, unbending a paperclip into a long, kinked silver wire. A smile was tugging at the side of his mouth again. \"You've got a nickname, Ms Pixy Pfeiffer.\"\n\nHoly motherfucker. Could he not just be a professional? She pasted a smile to her lips and cocked her head; prettily, she hoped. At some point, she told herself, he'd remember; he'd have to. She'd catch his eye a certain way, or she'd make some sort of facial expression, or something, and he'd remember. It would come rushing back, the memory of the sight of her licking his balls. She found herself both dreading it and hoping for it; how bad did she have to be, that a man just flat-out forgot how she'd sucked him?\n\nBut man, would it make things awkward!\n\n\"I hadn't heard,\" she said, rallying. \"Something about my perfect teeth? Or no, wait: my eyes.\" Practically nobody had purple eyes anymore; sure as fuck, he'd have to remember hers, staring up at him as she wrapped her lips around his cock.\n\n\"No,\" he chuckled, \"though they're definitely unusual. No, your nickname has more to do with this habit you have, this unfortunate tendency of yours, to put yourself in the middle of massive explosions that you've caused.\"\n\nThe smile froze on her face. Jesus H Buddha. What was wrong with him? He'd plainly never been under fire before, or he wouldn't be making jokes. Twice she'd been force-fed a big, dripping bowl of shit soup, and twice she'd had to cope by ordering FPFs, the Final Protective Fires reserved for vessels about to be overrun or destroyed, when the enemy pressure was so intense there was nothing else to do but blow off every piece of ordnance you had, frying everything around you. \"It's very unfortunate, yes,\" she managed. \"That's one word for it.\"\n\n\"Wanna hear what they call you?\" He didn't wait for her to tell him Fuck no, instead saying the words with a certain dry glee. \"They call you 'Fire in the Hole Pfeiffer.' Apparently people tried out something more accurate, like 'Zero Range' or 'Point Blank' or whatever, but this one alliterates with your last name.\" He was laughing hard. \"Perfect, no? They shorten it to Firehole.\"\n\nPixy sat back in the hard chair. She'd never been so appalled. She paused, trying to collect her thoughts, and when she finally trusted herself to speak she hoped she didn't sound too icy. \"Who'd you hear that shit from?\" she snapped.\n\nFalgada raised an innocent pair of eyebrows. \"What? You're not bothered, are you?\" He blinked, unable to imagine a world where she'd be offended. \"Shit, Pixy, people spend their whole careers trying to get a cool nickname. And usually, it's about their hair color, or their last name, some kind of facial features or something.\"\n\n\"Goddamn it,\" she hissed, no longer able to contain herself, \"when a woman gets a nickname like Firehole, it's obviously about her cunt.\"\n\n\"No!\" Falgada's eyes went wide; then, as she'd known they would, they flickered down into her lap. Of course. No man could ever hear any kind of vagina synonym and not look at the nearest one. She pursed her lips, spreading her legs defiantly wider. Fuck him. He shook it off. \"No. That's not what people mean. I mean, umm, it's not like you have red hair...\" He looked up at her thick dark hair, his forehead wrinkling a tad. \"Do you?\"\n\n\"Sir,\" Pixy sighed, bringing his eyes back to hers, \"I've got a hell of a lot of backlogged shit to catch up on. I'm going to go, unless there was something else to discuss other than my pubic hair.\"\n\n\"Oh! No, Pixy, of course not. Carry on.\" But he was looking speculatively back down at her pussy anyway, the lech. Well. No big deal; this was a GP service ship, on active missions. They'd undoubtedly see each other naked before long. Pixy made a mental note to start growing out her bush, so that when the time came he could stop fucking wondering. She stood up. \"No, don't worry. It'll take time for the nickname to spread all the way out here. Oh, and again, please call me Teo when we're alone.\" Pixy set her teeth; it was how he'd introduced himself to her before, when they'd met the first time.\n\nHow could he not remember? How had she possibly been that bad? The hatch closed behind her, sounding like failure.\n\n* * *\n\nShe booted hard at the hatch to her quarters, fully expecting the yelp she heard in reply; there'd been no way Amisuul would have been cleared out already. Good, she thought with a black sense of reptilian joy; she had stress she needed to take out on somebody, and she'd been looking forward to using Rocky Amisuul that way. \"I'm sorry, ma'am!\" he was already blurting before she even got a chance to open her mouth. \"Teo didn't pass the word until last night.\"\n\n\"Bullshit. I sent my message two days ago.\" He was probably right, though; the vagaries of trans-space low beam broadcast could play havoc with the signal's perception of time, and she had no reason to doubt the First would have sat on the message for a few hours. He didn't seem like the most efficient officer ever. \"And what the fuck, Mr Amisuul? He's the First Officer, not your bedwarmer. It's Mr Falgada to you, not Teo.\"\n\n\"He... he likes everyone to use first names.\" The Tygon looked miserably at Pixy, his golden eyes worried; everyone knew how she felt about first names. Only in the wardroom, while food was on the table: never at any other time. \"I'm sorry, ma'am.\" Even during sex she didn't like her first name used, as he knew firsthand.\n\nBut only that once.\n\nShe frowned and looked around for any dents or scratches on the walls. \"If there's even the smallest amount of damage to the permanent fittings in here, Mr Amisuul, I'm going to rip your balls off.\"\n\n\"Tygons don't have balls.\"\n\n\"Are you still here?\" she glared, and he began dutifully shoveling stuff into his locksacks. As soon as she was sure he wasn't looking, Pixy threw a worried glance around all the various nooks and crannies in her quarters; she'd been living here over three years, and knew every nick and scrape. Amisuul's uniforms were marching out of the 'fresher and into their cases. \"What's that shit over there on the carpet? The stain?\"\n\nThe Tygon blinked. \"Wha?\"\n\n\"By the door.\" She bent to look more closely. \"Is that cum?\"\n\nHe was throwing his toiletries into a carryall, looking pointedly at the deck. \"That was there when I moved in, Pix -- uh, ma'am.\"\n\n\"No. It wasn't.\" She'd been leery about letting Amisuul have her quarters while she got her ears soldered back together, but in the end she'd gone against her better judgement and made the offer; he was an okay guy, and he'd been useful on the guns during that disastrous trip to the Flasbard moon. And before that, at the Battle; plus, he was already on the list to move up from sublieutenant.\n\nHe almost deserved some nice quarters like hers, hullside, with its private latrine. His own space, one level down with the other junior officers, was a stinking closet.\n\nAlmost.\n\n<br >\"Don't you lie to me.\" She was using the low, vengeful hiss she dished out just before she put the boot in. \"I know where to find you once I run a spectro on whatever that stain is. So.\" She glared hard, letting him see fury in her violet eyes. \"Again. Is that cum, Sublieutenant Amisuul?\"\n\nThe Tygon licked his lips; Pixy could almost hear the hamster wheel spinning in his little reptile brain, trying to figure out which answer she wanted. He should have known by now that it didn't matter; Pixy Pfeiffer was in the mood to deliver a kicking, and if he didn't see the signs already, it was his own problem. She knocked her heel back, casually, the hatch sliding shut. \"Looks like it's only been there a couple days, too,\" she added, low-voiced, deciding where she should strike him first; with Tygons, it was usually most satisfying to start at the temple. It often made them urinate involuntarily. \"Still sticky.\"\n\n\"It's bump, ma'am. Freebased. You know, when it explodes a little bit out of the end of the stackpipe?\" He was shrugging, as if it didn't matter, and he was still shrugging when the spin-kick snapped his head back. \"Ow.\"\n\n\"First off,\" Pixy declared, her lips peeling off her teeth in a nasty grimace, \"you're lying. I know what your cum looks like. Second off,\" she added, along with another kick; this one was a hard jabbing heel straight to his belly, \"if you are freebasing bump, you need to be more careful with it. And third off?\" She swept his feet out from under him, Amisuul slapping to the ground with an expression of pained futility. \"It's still a stain on my motherfucking deck.\" The boot went in with a muffled crunch. \"Clean it. Now.\"\n\n\"Blerghh,\" was the reply, or something vaguely like it. She stood, her legs tingling with the effort, as the Tygon glared up at her. \"Want me to lick it?\"\n\nIn fact, that's precisely what she'd been thinking about. She let him stew awhile, panting, before inclining her head. \"No. No, you may get a robot to clean it. But,\" she added, with one more swiftly whipping kick to the ribs, \"it was a good idea.\" She bent at the waist to flick a bit of his saliva from her toe. \"I'll be back in ten minutes, Mr Amisuul, and you need to be out. Vamoose. Gone. Comprehend?\"",
        "\"Ma'am.\" He wasn't surly, at least; Amisuul had to have known what he was likely to be in for. He did stay down, though, while Pixy stepped over him and marched toward the door.\n\n\"Oh, and Mr Amisuul? You should be grateful.\" The hatch grated open. \"My punishment just now revealed a shocking deficiency in your combatives training. Work on your defenses, sailor.\"\n\n\"Ma'am.\" He was wiping snot onto the back of his sleeve as Pixy left. Doing so made her fume, but the objective was to get him to clear his shit out, and he wasn't going to do that any quicker with her there. Pixy sighed.\n\nIt was going to be a long day.\n\n* * *\n\n\"So.\" The captain was finishing his last bite of tiramisu. \"The Cathos Vremein. What did they do?\"\n\n\"Sir?\" It was one of those full-scale professional dinners Zonn Reye liked to host in the wardroom once a month or so, with everyone wearing medals. Pixy had left most of hers off, out of spite.\n\n\"You're saying we've declared war on them?\" Reye cocked an eyebrow. \"What gives?\"\n\n\"And, more to the point,\" Falgada added loudly, \"who the fuck are the Cathos Vremein?\"\n\n\"Primitive humanoids living out on the Oberon Arm,\" van Kleck piped up annoyingly. \"Provisional representation in the Federation for fifty-seven months now.\"\n\n<br >\"They're pissants,\" Pixy translated, to general chuckles. \"They say they've destroyed the USS Jeremiad.\"\n\nThe chuckles grew. \"No shit?\" Klonmyre arched an eyebrow. \"Have they also figured out how to nullify the Sparsen Effect?\" More laughter.\n\n\"Good one, Janelle,\" Amisuul giggled.\n\n\"Right?\" Pixy shrugged. \"Jeremiad cost, what, four trillion shekels? More? All the latest defensive armament?\"\n\n\"Fastest ship ever constructed,\" the captain mused. \"I think she was on her way to be flagship of the Fifteenth Armada, last I heard.\"\n\n\"I think so.\" Pixy took another swig of wine. It was tangy, from the Horsehead Nebula. \"Anyway. The Cathos Vremein just announced one day that they'd blown it away. Just like that.\"\n\n\"No way.\" Falgada leaned back in his chair. \"With what? Rubber band guns?\"\n\n\"Yeah,\" Pixy nodded, \"our instructors didn't believe it, either.\" The word had spread about a week before graduation, with no official confirmation. \"Apparently, neither did the Federal Executive. They demanded proof from the Cathos Vremein: wreckage, survivors, whatever. You know, like when the Flasbards destroyed the Arcturus.\"\n\n\"Motherfuckers.\" Amisuul had known the Arcuturus' purser.\n\n\"So the Executive told the Vremein they'd kick them out of the Federation if they didn't tell the whole story and account for the crew, and guess what the response was?\" Pixy nodded for Reye to pour more wine. \"They said, 'We'd provide wreckage, if there was any.' So?\" She shrugged. \"War.\"\n\nThe pause that followed, filled with noises of chewing and happy digestion, stretched a few extra seconds before van Kleck cleared her throat. \"Is any of this true?\"\n\n\"How the fuck would I know?\" Pixy shrugged. \"It's a big universe. Who knows what goes on? But the declaration of war is true enough; I saw a copy of the bulletin myself, on the circuit ship.\" She chuckled. \"Not that you guys would have heard for another eight weeks or so, way the hell out here.\"\n\n\"No shit,\" Amisuul coughed out. \"Just wait until you see the wonders of the Angerac Colony. You're going to love it.\"\n\n* * *\n\nThey lay afterward in a puddle, Pixy delighted to find he'd managed to pull out before he'd cum. Her metering implant guarded her against unpleasant inconveniences like menstruation and sexually transmitted disorders, including pregnancy, but still. It was impolite to inseminate a woman without asking, especially when she was a full lieutenant and the man was only a junior. Well, a second lieutenant; he was Army.\n\nBut a junior officer with a momentously long penis, she considered, eyeing it lazily; she wondered, through the usual post-sex haze, just how it had felt so good inside her. Pixy was a small woman with a generously wide pussy, so usually she preferred girth over length, but the junior lieutenant in charge of supply at the colony on Angerac had certainly known how to use what he had. \"Thanks,\" she said at last, her fingers tracing through the gummy remains she'd left on his pubes. He cocked an eyebrow.\n\n\"For what?\" He chuckled. \"I'm getting the better end of this deal, and we both know it. You're giving up four thousand feet of Type 2 conduit. Four thousand feet! And for what?\" He shrugged. \"A couple of rifles, some stim, and a little dick? I made out like a bandit.\"\n\n\"Well, not a little dick,\" she giggled. Pixy wasn't usually like this with transactions, but he was a nice guy. \"That's the point. Men your size usually hurt me. You?\" She smiled. \"You were good, kid.\"\n\n\"Thanks.\" He was running sure fingers up and down her back, soothing her, his nails gliding through her sweat. Angerac IX was a hot planet, even without the sex. \"I didn't think it'd be polite to put you in the hospital,\" he teased.\n\n\"Mmm.\" She'd cum hard when she'd felt his tip kiss her cervix, and the orgasm had gotten even better when she'd felt him back off right away. She'd been able to tell he was doing it intentionally, that he was interested in how she felt, and she'd gone well over the edge and kept on falling. \"Thanks, though. You didn't have to. This is just supply-sex, after all. It's not usually this good.\"\n\nHe smiled vaguely, and she could tell he wasn't listening; the moment had come, as it always did, the moment when the man saw the scar. His fingers were touching it tentatively. \"That's quite a scar, ma'am.\"\n\n\"It's Pixy,\" she allowed, unusually. Already, her mind was wondering whether she could get Captain Reye to sign off on more conduit, so that she could come back. \"While we're in here, at least.\" He didn't answer, though, so she sighed. They never paid attention once they found the scar. \"Go ahead,\" she told him softly. \"Ask.\"\n\n\"It's just... well, I don't mean to be rude.\"\n\n\"I know,\" she replied, remembering his control while he was inside her. She shivered. \"Just ask.\"\n\n\"Well,\" he ventured after another pause, \"I don't care about the scar. It clearly doesn't hold you back,\" he added, with a throaty laugh; she flushed. She'd been very demonstrative and extremely flexible for him. \"I'm just curious about why it's there. You don't see too many scars like that, with the way they do surgery these days.\" He was still stroking, gently; it felt good, and she'd already decided she'd let him fuck her in the ass if he wanted. She considered, never really sure how to answer that.\n\n\"True. When they do the surgeries in infirmaries.\" She didn't want to tell him he'd just fucked a woman who'd nearly been cut in half, then patched up right on site so that she wouldn't need to leave the bridge during the 447 engagement. Because, even through the blinding pain as the doc reconnected her spinal cord, even though she was lying the entire time in Okonfwe's blood, even though she was still spitting out helm orders, cranking her neck high to stare at the cracked plot-repeater, she'd known that nobody could possibly fight the ship as well as she could. She'd known with a cold certainty that if she allowed herself to be taken from the bridge, they'd all die.\n\nAnd she knew she didn't want to discuss these things with an earnest young supply officer on a dusty, shit-stinking colony planet. She smiled instead. \"I slipped on a bar of soap in the shower,\" she told him gently, leaning over to kiss his lips. \"But that's not what you want to talk about, is it?\"\n\nHe hadn't left her with a sore pussy, though the same could not be said for her ass. But she didn't mind, even though she couldn't sit on the shuttle ride back up to the Pulver. Instead, she just made the pilot keep the gravity off the whole time.\n\n* * *\n\nThe summons came after lunch, as Pixy was headed to the commo station to figure out whether there were any other ships around that could trade anything useful for her excess antenna bases. She was just leaving some work for Ana the Tygon Whore to finish up, when a knock at the hatchway announced the arrival of the captain's steward. \"Ms Pfeiffer,\" he greeted her, with that grave nod that always seemed to be holding something back. The man had been in Fleet longer than almost anyone on the ship.\n\n\"Gouper,\" she nodded back, her head cocked. It was almost never good news when the captain's steward came to get you. \"What's up?\"\n\n\"Skipper needs to see you, ma'am.\" Pixy reflected, looking at the man's soft pale skin, that he probably hadn't stepped off the Pulver in four years? Five? How old was the ship, anyway? Rumor had it that Gouper had been one of the ship's original members. \"It sounded pretty important.\"\n\n\"It doesn't need to sound important,\" she replied harshly. \"He's the captain. When he wants to see me, I go. Does he want me to bring anything?\"\n\n\"No ma'am.\" He shrugged. \"He's in his quarters.\"\n\n\"Thank you, Gouper.\" Well. That was unusual, but not unprecedented. They usually had their meetings in his plant-choked office, rather than his plant-choked quarters. But, again, not unprecedented; there could be a million reasons. Pixy had served with captains for whom he's in his quarters was actually code for bring some lube and leave your inhibitions at the hatch, but Zonn Reye was not that kind of man. \"Carry on.\"\n\nShe strode down the corridor, making mental lists as always: have Denman track down more transit crates. Could Chief Koster handle the commo stuff if the captain needed her too long? The supply guy on Utari VII had cum in her eye after she'd asked him to refrain; did that offense merit an anonymous mid-beam message to his wife? Ana and McChang needed to inventory the Class IV loft before the end of the week. Was Kluwer experienced enough to take charge of the mail run next time the shuttle was available? Provided she could find a pilot, obviously.\n\nThe senior officers' quarters, where Pixy and Falgada lived, were in a prime part of the ship, one deck above the other officers' spaces. But the captain lived in majestic solitude at the stern, underneath the ship in the traditional armored nacelle, where he could keep a constant eye on the engines. It also meant that when the ship went transparent for the night, it wasn't the ceiling that showed an expanse of stars; it was the floor. Pixy had always found the effect disorienting. When she became a captain (when? If, more like), she told herself she'd just take over some other space, topside, and fit it out as her quarters.\n\n<br >Someday.\n\nShe knocked respectfully. \"Yes?\" came the familiar voice, sounding a long way from the hatch. Her cochleas were adapting nicely; it was amazing how much better she could hear now.\n\n\"It's Pfeiffer, sir.\"\n\n\"Of course. Come on in.\" The tag snicked, she pushed the hatch open, and with a deep breath she clacked down the stairs. Fuck, she told herself. He's already gone transparent.\n\nIt felt like she was stepping straight out into the void. And she'd never been good at spacewalks.\n\nWell, other than the plants everywhere. She felt the humidity at once, so different from the rest of the ship, with a rich and wild smell of growth and a sudden sharp increase in the amount of oxygen; her lungs felt it, even if her nose didn't. Damp leaves closed in around her as she descended, listening. \"Where you at, sir?\"\n\n\"Forward. On the couch.\" Pixy felt her eyebrow arch. Interesting. Maybe she should have brought her lube, after all. Reye had never before given off that kind of vibe, but hell, he wasn't that bad-looking. And he wasn't an asshole, either. She heard herself draw a sharp breath as she reached the bottom of the metal stairs and hesitated over that next step, onto the armored graphene of the outer hull, with the a distant nebula intense between her boots. Then she shook her head; this was ridiculous. She was Pixy fucking Pfeiffer, holder of three valor awards, and all she was doing was getting to the bottom of a set of fucking steps.\n\n\"Come on over, Ms Pfeiffer.\" Reye was in his normal blue working uniform, rather than some sort of bathrobe or wrapped towel or ball gag, so Pixy relaxed as she stepped across the stars and approached. He had his usual unreadable look on his face, with the addition now of a very, very sardonic smirk. \"Join me.\"\n\n\"Pulver, sir,\" she replied, snapping off a brisk salute, and he nodded. He loved that fucking motto of his.\n\n\"Rising. Take a seat.\" He appeared to mean the couch, so Pixy sank into the far end. \"Sorry to drag you down here, but it'll make sense in a few minutes.\" He eyed her curiously, then nodded. \"Whisky?\"\n\nShe felt her mouth drop open, then clamped it shut. \"Why?\"\n\nHis smirk grew. \"Because I'm being polite. There's something to celebrate.\"\n\nWell. She'd had a drink with Captain Reye before, but not like this. On the man's own couch. She cleared her throat. \"Um. I'll have a triple-malt, sir, if you've got it.\"\n\n\"Of course.\" He raised his voice toward the intertube next to his head. \"Two glasses, Gouper, and that Low Country shit I bought last time we were Solar.\" He didn't bother listening for a response, instead settling back and looking down at the stars. Gouper himself disappeared, ninja-silent, leaving Pixy to wonder whether Gouper was the type of steward that did more than just serve drinks. Wise captains didn't take bedwarmers, but many of them paid their own stewards. Most people assumed they knew what those captains were paying for.\n\nPixy felt she had to say something. Reye was not a small-talker, but she disliked suspense. \"What're we celebrating, sir? Is Fleet finally recalling the buzz-lift modules?\"\n\n\"Huh?\" He appeared to have been thinking of something else. \"Oh. No. Well, not that I know of.\" He fidgeted, apparently debating about something, then nodded. \"Ms Pfeiffer, I'm not sure if I ever told you this before you left for your course, but you were a fucking great First Officer.\" He raised his eyes at last, making strong contact with her across the couch. \"Did you know you were that good?\"\n\nPixy Pfeiffer was a pragmatic woman, so the answer was yes. \"I did my best, sir. And Mr Densborg had set, I think, a conspicuously low bar for First Officer duty performance.\" She glanced down, at the stars, trying to decide whether she'd been fair to Densborg. \"With respect to him, sir.\"\n\n\"Yes.\" Densborg had been gone before Reye had arrived, but even though Reye's background was in Transport rather than Service, the Fleet was small where rumors were concerned. \"Well. You were a great First, Mr Pfeiffer. If I didn't thank you enough during the refit and that Flasbard... operation, well, thank you.\"\n\nPixy felt her lip curl. That Flasbard... operation had cost Pixy her hearing, and she figured the stress had lost decades off her life. \"My job, sir.\" She knew she was flushing, and hoped desperately that Captain Reye would get off this fucking topic. She hated these kinds of discussions. Why was she here?\n\nHe seemed to agree, sitting awkwardly until the metal stairs rattled to the approach of Limahl Gouper with a small tray containing a pair of glasses. Real glass, Pixy thought dully, looking at how the light reflected off the amber liquid within; special occasion? \"Sir.\"\n\n\"Thanks, Gouper.\" The tiresome ritual, fussing with the glasses and the tray, the nods, the sniffing, the sipping, and then Gouper fading away as silently as the stairs would allow, back into the ship. \"So.\" Reye put his glass down on the little side table. \"You heard that a large data packet came over the low-beam this afternoon.\"\n\n\"The whole ship heard.\" The daily low-beam broadcast was a significant event, bringing orders and mail and even the occasional accurate news bulletin. When data packets came along with the broadcast, it was usually a sign of something exciting, or at least new. \"Eyes-only, too, for the captain.\" Most of them weren't labeled that way.\n\n\"Any guesses what it was?\" He was teasing, which he always did gravely and quietly.\n\n\"New Fleet menu for lunch service?\" He smiled, just a twitch at the corner of his mouth. \"Nah, sir, I've got no idea.\" The Low Country was smoky and tingly on her tongue.\n\nReye was looking at her over the rim of his glass. \"Huh.\" He shrugged. \"Well, for starters, there was a change of orders. No more Angerac garbage runs.\" Pixy suppressed a stab of sudden, unexpected regret for that long Army dick she wouldn't get a second chance with. \"I'll let everybody know later. But there was something else.\"\n\nPixy was Fleet enough to know when to keep her mouth shut, so she simply waited quietly. Plainly, the captain was building up to something.\n\nHe frowned. \"So. Obviously, when they assigned Mr Falgada here as First, it was because he's getting ready to make the promotion list for subcommander. He's fairly senior in his grade.\"\n\nUh-oh. This sounded ominous. \"I get it, sir.\"\n\n\"It wasn't because you were bad at the job, or anything.\"\n\n\"Of course not.\" Pixy set her own glass down. This sounded like something that required focus. \"I know how Fleet works, sir. Senior officer gets the gig; that's as it should be.\"\n\n\"Right.\"\n\n\"It's just business, sir.\"\n\n\"Right.\" Reye was rubbing at his jaw now, just slightly nervous; he was usually good at concealing that. Pixy realized she'd been right to stop talking. He sighed. \"It's both good and bad that you realize that, Ms Pfeiffer, because today's data packet put me in a little bit of an awkward position.\" He glanced over her shoulder for a moment at whatever nebula they were passing. \"You're, what, two year-groups behind Mr Falgada? Seniority-wise?\"\n\nPixy frowned. \"I think so, sir. I don't pay much attention to that.\" This was an obvious lie; every Fleet officer knew precisely where they were in the pecking order. She was actually 2.78 year-groups behind Falgada, as these things were determined; the vagaries of keeping a current calendar among so many competing galaxies was an endless problem with no good solution. She licked her lips; the triple-malt was still there, sharp with hints of peat.\n\n\"So.\" Captain Reye took a breath. \"Here goes. The data packet contained the new promotion lists. The one for subcommander had your name on it, which is why you're sharing a drink with me in my quarters. L'chaim, Pixy.\" He raised his glass with a precise nod, and Pixy knew she was blushing scarlet.\n\nShe hated that.\n\n\"Thank you, sir.\" It was a big day, a huge one, when a lieutenant got selected for promotion to the commander ranks. Plenty of lieutenants never did. \"I wasn't expecting it.\"\n\n\"But you're very intelligent, Ms Pfeiffer. So you'll understand the nature of my dilemma when I tell you that Mr Falgada wasn't on it. No surprise in that; he's not due for another year. But still...\"\n\n\"Yes sir.\" She got it. At once. Her name on that list meant she was immediately senior to Matteo Falgada, and would be for the rest of their lives, regardless of year-groups, unless he leap-frogged her for commander, or captain, or flank-admiral or something. Which was very unlikely. It's how Fleet worked. Vaguely she was aware that she was something special, that almost nobody got promoted to the Senior Officer ranks this far below the zone, but she wasn't in the habit of dwelling on shit like that. It got in the way of her work.\n\n\"Right.\" Reye hesitated. \"So first off, congratulations!\" He made sure the exclamation point was obvious in his voice, the irony plain. \"Second off, since I'm a subcommander and you're almost a subcommander, let's do some professional development here. Tell me what you'd do.\"\n\n\"Well.\" Pixy sighed, already thinking about the problem; she was good at putting aside her emotions and getting to the heart of things like this. \"Falgada and I should switch jobs. Leading to untold disruption, bad blood, and stress, all in the name of making the command chart look clean and tidy.\"",
        "\"Exactly.\" Reye was looking straight at her now. \"Or.\"\n\n\"Or we could just maintain the status quo, which has the downside of NOT telling Falgada that my name is on the list and his is not.\" She raised her eyes to his. \"Which he'll find out whenever I get promoted, leading to untold disruption, bad blood, and stress. For you, sir, not me.\"\n\n\"Go on.\"\n\n\"...And which also has the downside of locking me into more time in the Second Officer's billet, where I'm expected to inventory supplies of electrostatic toilet cleaner and subject myself to the degrading sexual experiments of other supply officers. Both of which,\" she added succinctly, \"are beneath the dignity of an officer on the subcommander's list.\" Her head was buzzing now, the implications blooming in her brain.\n\n\"Agreed.\" He leaned back on the couch. \"It's a public list, Ms Pfeiffer,\" he pointed out quietly. \"I can keep it under wraps here on the ship, but Mr Falgada is known to be aboard, as are you. The two of you certainly have mutual acquaintances.\"\n\n\"Certainly.\" The fraternity of supply officers was small, and in some cases literally inbred.\n\n\"So he'll find out.\" Reye sighed. \"Your ideas have failed to solve my dilemma, Ms Pfeiffer.\"\n\n<br >\"Well, sir, it's your dilemma,\" she snapped. \"Got any better ideas?\"\n\nThe captain smiled. \"You just don't want to be supply officer anymore. Admit it.\"\n\n<br >\"Hell fuck no, I don't want to be supply officer,\" she nodded. \"But who does? It's got to get done, sir, and I can do it.\"\n\n\"You can,\" Reye muttered. \"You can do it well, too. That's the problem with you, Ms Pfeiffer; you do too many things well.\"\n\nShe laughed, a short and brutal snort. \"And you haven't even seen me in bed, sir.\"\n\nHe nodded. \"This is true.\" He took another sip of his Low Country. \"So, as it turns out, I might have an idea after all. At least until Fleet gets around to reassigning you, promoting you, or both.\" Pixy's heart lurched; she hadn't thought about this. Her name on that list meant she'd be leaving the USS Pulver. She'd changed ships before, obviously, and many times; still, it was always a pain in the ass. And, she reflected, staring up at the pitted hull above the nacelle, she'd sort of grown to like the place.\n\nShake it off, Pixy, you maudlin fucking bitch. \"Sir?\"\n\nHe brooded a moment, puckering his lips, then tossed back the last of his triple-malt and nodded. \"Once upon a time,\" he began, and Pixy couldn't restrain a giggle. \"What?\"\n\n\"Shit, sir. What is this? Story time with Uncle Zonn?\"\n\nHe arched an eyebrow. \"However you need to think of it, Ms Pfeiffer, but you're still just a lieutenant. Your mouth.\"\n\n\"My mouth, sir. Yes.\"\n\n\"Yes.\" He frowned. \"So, older fleets, like the sailing fleets on Sol III, they sometimes had an officer position that functioned as sort of a captain-in-waiting, a deputy. This position acted as a chief of staff, and gave professional development and helpful advice to the officers. Then, when the captain wasn't around, this officer stood in for him.\"\n\nPixy shook her head. \"Sir, how is this not the First Officer's job description?\"\n\n\"Because,\" Reye went on slowly, \"the First Officer's job is practical. Hands-on. The First runs the ship, as you know. Makes decisions about the other officers. Gives them tasks and direction. This other officer... well, sometimes they used to do that too, but you wouldn't.\" He shrugged. \"Won't, rather. A few of the bigger line combat ships still have them, if there's an admiral aboard.\"\n\n\"What's it called, sir? What comes before First?\" She pondered. \"Zero-th Officer?\"\n\n\"They called it an Executive Officer, or XO.\"\n\n\"Eww.\" Pixy felt her nose crinkle as she scowled. \"That's what the Army calls their deputy commanders.\"\n\n\"It is.\" He shrugged again. \"So what?\" Well. Pixy clamped her mouth shut, realizing she had no good answer to that. \"Exactly. You'll be less a senior lieutenant and more an apprentice captain. A lot of it will be administrative bullshit, frankly, which I don't often have time for.\"\n\n<br >\"Gee, sir, I'm honored.\"\n\n\"Mouth, Ms Pfeiffer.\"\n\n\"Sir.\"\n\n\"Right. You'll handle legal issues, awards, promotions, stuff like that. You and I will work together, so that one of us will be awake while the other isn't; you can approve course changes on your own authority, receive orders, acknowledge signals. So, obviously you'll have to step on Mr Falgada's turf just a little bit, which he won't be happy about. You will, for example, be in charge if I'm gone, which would ordinarily be his duty. But he'll understand; you're on the subcommander list, and he isn't. You can't possibly be expected to take orders from him.\"\n\n\"I would hope not,\" she muttered.\n\n\"But he won't report to you. You won't really be his boss, and you certainly won't evaluate him. He'll run the ship, Ms Pfeiffer, as much as you did when you were First.\" He stared hard at Pixy. \"Comprehend?\"\n\n\"Sure, sir.\" She drained her own glass, feeling the drink sear her esophagus all the way down, forcing her face into a nonchalant neutrality. \"Seems like I'll see a lot less filth under my fingernails. Might need to find a book to read with all my spare time.\"\n\nHe looked at her in silence until she lowered her head, and then sighed. \"I don't know how long this will last, Ms Pfeiffer; you'll obviously be reassigned soon, but who knows how long that'll take? Meanwhile, we'll make the most of this. Keep all this to yourself for, let's say, two days? Until I can get all this written down, and then I'll get you and Mr Falgada in my office to sort it all out and make sure everyone knows the score. You take that time and figure out who you'll recommend to replace you in supply.\"\n\n\"Sir?\" Pixy blinked. \"I'd assumed Mr Amisuul would take over as Second.\"\n\n\"Oh, he will. And there'll be other officer moves I'll want your input on, and soon. But there's nothing chiseled in marble that says the Second must be the supply officer. And, between you and me... I've seen Mr Amisuul doing your job for the past few months. I'm not sure Mr Amisuul's talents lie in supply and logistics.\"\n\n\"Oh, he sucks at it,\" Pixy agreed, nodding sympathetically. \"No, he'd be a disaster. But how's this: assign the new guy.\"\n\n\"Mr Donskoi?\" Reye seemed surprised. \"He's just a junior.\"\n\n\"I can use my extensive free time to school him in the ways of supply. He seems to have the knack, sir, and besides, he's prior service. He knows Fleet bullshit.\" She leaned back and crossed her legs, finally comfortable. \"That's the play, captain. Falgada as First. Amisuul as Second by seniority, but continuing his duties in weapons and morale. He needs the experience; I've told him that already, so it'll look weird if he knows I'm in favor of moving him to a different gig. Third...\" She looked narrowly at Reye.\n\n\"Yes. Third.\" The captain frowned. \"So we've got a Third Officer opening, a Fourth, a Fifth, and the engine room. Ms Klonmyre, Ms van Kleck, Mr Donskoi. A Chief Warrant Officer can take Fifth; Mr Donskoi Fourth, as supply.\"\n\n\"With me helping out.\" Pixy's mind was on the conversation she and Donskoi had shared aboard the circuit ship, and on her drug profits. \"Clipper can be the Chief of Commo, as Fifth. He knows what the fuck, sir. Then,\" she went straight on, rolling over him before he could add anything, \"van Kleck as Third. With her present duties in safety and fire control.\" She nodded as if it was a done deal, but one look at Reye's face told her she'd gone too far. He nodded at her, though.\n\n\"You're the right woman for this, Ms Pfeiffer,\" he said quietly. \"I missed your decisiveness. I'm not sure that can be taught, but you need to try. With the other officers. Because when you leave?\" He arched an eyebrow. \"Well. I won't endorse any movement orders for you unless you leave me with just one person who can make a decision.\n\n\"But not this one.\" He'd seen Pixy open her mouth, and he was capable of going straight on, too. Rolling over her. \"This one is my decision, Ms Pfeiffer, and Sublieutenant van Kleck gets the engine room.\" He watched her closely; the whole ship knew how she cared about Klonmyre. \"It's her turn, Lieutenant. Klonmyre needs to expand her horizons a bit.\"\n\n\"She'll be pissed,\" Pixy bit out. \"She loves that engine room.\"\n\n\"She'll deal with her disappointment,\" Reye replied evenly. \"You're right. She loves it too much. It weakens her for other duties, and career-wise? She'll need experience on other posts. And this'll be Third Officer; that's a pretty good spot for a midgrade sublieutenant, in terms of resume.\"\n\nPixy blinked once, then nodded. \"Very well, sir. I'll tell her.\"\n\n\"You will. In, let's say, two days?\"\n\n* * *\n\nA cold, cold morning on the archerball court; Pixy Pfeiffer, fifteen years old and and already at her full height of just 158 centimeters, waiting with the others. They were bundled up, in gloves and mufflers against the weak winter light from Aries Prime, but not Pixy. She stood apart, stubborn in nothing but her workout clothes and a pair of her brother's old bow-boots, the slots worn from years of use; he'd been a formidable archerballer. Pixy felt ready, loose, all her senses tuned up. The coach materialized as she always did, and then said what she'd always said, for this was a dream that had woken Pixy up many, many times.\n\nIt did this time, too. And she never did manage to remember what the coach had said.\n\nShe stirred, Klonmyre's hair in her nostrils, still jarring her because it was losing the engine-room smell it had always had. The younger woman's body felt good in Pixy's arms. \"I missed you,\" she admitted. The night still blazed with stars beyond the ship's transparent hull. She thought Klonmyre was still awake. \"You okay?\"\n\n\"I'm okay.\" The little engineer twisted slightly, Pixy automatically moving her leg to make them both more comfortable. A long sigh filled the pause that followed. \"Just okay, though.\"\n\n\"I know.\" Pixy had hated being Third Officer aboard the old Jezail; all the work of the Second, but none of the respect. More work than the First, but none of the authority. And poor Klonmyre wasn't even a line officer. \"The captain was right though, Janelle. This'll set you way apart from other engineers, having line time on your resume.\"\n\n\"Don't push it, Pixy.\"\n\n\"Okay.\" Pixy wasn't worried. She knew Klonmyre could do the job, and so did Klonmyre. She squeezed one of her little boobs. \"You'll be fine.\"\n\nThe bedwarmer sighed. \"I'm not sure I should tell you what happened today.\"\n\n\"Fuck.\" Pixy nestled more comfortably against Klonmyre's naked skin. God, but she'd missed her! \"You have to, now.\"\n\n\"Okay.\" The engineer shrugged, captive in Pixy's arms. \"Lieutenant Falgada wants me to be his bedwarmer.\"\n\nPixy felt herself go cold, calm, alert. She got that way before combat. She'd felt that way just now, in her dream. Whether this was an immediate fight against Klonmyre or a later one against Falgada, she didn't yet know. Klonmyre went still in Pixy's arms while the thoughts raced in her brain, and the conclusion was obvious.\n\n\"When do you want to start?\" she asked quietly, and the first response from Klonmyre was a long sigh that deflated her compact little body. Pixy waited. \"What?\"\n\nA flat reply, dulled; Klonmyre's voice when she was disappointed could be devastating. \"You don't want to fight for me?\"\n\nYes. \"In the long run?\" Fights called for resolve, for brutal honesty. \"Why? I'm going to be a subcommander when the next set of promotions comes out. They might already be out, in the Core; there's no way to know. But my days aboard this ship are numbered, Janelle.\" She wondered suddenly, whether to hold her harder or looser. Whether it would make any difference. Pixy knew her spit was still glimmering along the sides of Klonmyre's pussy, inhaled the rank smell of her orgasm on the dampened sheets around them. But there was a distance now, suddenly, unexpectedly. \"He'll be here three years, at least.\"\n\n\"I know.\" Poor Klonmyre. Pixy, a woman not given to maudlin expressions of empathy, nonetheless had a hard time keeping her thoughts from wandering to the husband Klonmyre had met at the Academy, the man who hadn't spent more than three or four weeks with her in the past two years they'd been warming each other's beds. \"I know.\" She sounded so miserable; Pixy realized, with a shock, that there was a great deal she still didn't know about the engineer. Was she nervous about taking cock? Same-sex bedwarming could have a lulling effect, but being the First Officer's bedwarmer was a promotion, after all.\n\nOr could Klonmyre possibly be in love with Pixy?\n\nThat was always a risk with bedwarmers. It was a long, time-honored tradition in Fleet, and usually it worked well. There was supposed to be sex, yes, away from the transactional nature of supply-sex for barter; officers expected companionship, friendship, even intimacy... but love was a bad idea. Pixy could recall a score of beds she'd warmed, either on a trial basis or more permanently, but she'd never once fallen in love.\n\n\"It's what happens, sweetie,\" Pixy sighed, hearing a roughness in her own voice. The breast in her palm still felt so sweet, so perfect; Pixy knew this was probably the last time she'd cup it, the tang of her cum in Pixy's mouth the last time she'd taste it. The wall was already up. \"It's Fleet. You've been great for me, and I want to leave knowing you've found a good setup.\" She pinched fondly at Klonmyre's nipple. \"This is not a bad thing.\" For a moment she wondered whether she should tell of her own supply-suck with Falgada, then decided it would be a bad idea. The decision was easy, but listless; there'd be no fight, after all. \"Go to him.\"\n\nKlonmyre's head shifted on her pillow. \"Is that an order, ma'am?\" and Pixy listened hard for the tone, trying not to miss it. She nodded to herself. Good. Janelle Klonmyre had recovered.\n\n\"It is.\" Her rolling fingers kept up the pressure on her tit, confident once more, the relief audible in her voice. \"But only after tonight, Janelle.\"\n\n\"Mmm,\" and their thighs were moving slickly again, and Pixy decided she might just get one more taste of Klonmyre's sweet ginger pussy, after all.\n\nShe'd need to have a word with Amisuul tomorrow, though, about a temp. That was Pixy's Plan B for temporary bedwarming purposes, since he ran the ship's prostitution pool. As odious as it was to pay for bedwarming, and with an enlisted sailor, there wasn't much choice out here. She'd probably be better off with an empty space in her bunk, she reflected as her lips found Klonmyre's earlobe, but then once you got used to a warm naked body up against you...\n\n* * *\n\n\"So.\" Captain Reye had waited, far more patiently than Pixy would have, for Falgada to shut off his stim-stick. \"Our orders.\"\n\n\"About time.\" Falgada sat back and crossed his legs. He seemed to do everything with that same calm near-insolence. \"This run is getting stale.\"\n\nPixy said nothing. Plainly, there was no need to open her mouth; she wondered why Falgada hadn't sensed the same. In her mind, though, she was in despair. The run wasn't yet stale for her, nor was the memory of that Army cock on Angerac IX. But then, the captain had already told her the mission, so it's not like there was any suspense here for her. Reye let the silence reestablish itself before he went carefully on. \"The XO here,\" he told the gathered officers, nodding at Pixy, \"brought back with her a copy of the Federation's declaration of war against the Cathos Vremein.\"\n\nAll eyes swiveled, predictably, toward Chief della Sera. He rolled his eyes, quite unintimidated by it all. \"What?\" He sniffed. \"I was born there; it's not like the war is my fault.\" He frowned and sat back with his arms crossed. \"Get on with it, Captain.\"\n\n\"Yes.\" The tech at the coding table saw Reye's nod and fired up the wheezing machine, the space above the wardroom table filling with the fuzzy 3-d graphics that had come along with their orders. \"So, it seems the Federation's not exactly prepared for this. They need a barrier survey of the Vremein frontier.\"\n\n\"And guess who's the closest ship,\" Falgada sneered. Once more, Captain Reye let the silence descend.\n\n\"I'm guessing the Deane, currently doing the titanium-ore run in the Fourth Quadrant.\" He waited while everyone looked at the visual plot and saw that he was right. \"But yes, Mr Falgada; we're pretty close, too. So. That's the new mission.\"\n\n\"Survey?\" Amisuul was blinking around the table. \"Does anyone here know how to do that shit, sir?\"\n\n\"Fleet's sending out a mapping ship already, from the Core,\" Reye replied evenly, \"but until then? We're a GP ship, Mr Amisuul. That's 'general purpose.' That includes things we're not necessarily fully outfitted to do.\"\n\n\"Dry,\" Pixy murmured. \"No lube.\" Everyone nodded; they knew the score. You did what Fleet told you, whether you were likely to be able to complete the mission or not.\n\nReye smiled without joy. He glanced at the chrono. \"We're doing this with immediate effect, too; Ms Pfeiffer and I have been working out ways that we could possibly get this run completed, but no.\"\n\n\"Contrary drift makes that impossible,\" Pixy observed, flicking a finger at the relevant solar-wind table. Nods appeared soberly around the table. \"The delay would put us outside Fleet's timeline. So we're going to change course at 1900 hours and go ahead with our mission.\"\n\n\"Cargo?\" Falgada was thinking, at least. \"We also ought to plus up our weapons.\"\n\nPixy looked at Captain Reye, who nodded slightly at her. \"We'll jettison most of the chalk, plus the consignment of stellar toilets.\" She shut her mind fiercely down, the supply-officer side of her brain upset at what an enormous loss they'd take on those damn commodes, the local Fleet economy being what it was, but it couldn't be helped. \"Hang onto the rest. We're trying to set up a resupply rendezvous to swap out our Mark XV interphasers and hopefully discharge the rest of the cargo. Your responsibility, Mr Donskoi.\"\n\n\"Sure.\"\n\n\"Plus, Fleet's trying to get us a systemic surveyor or at least a terraforming manager to oversee the process. But no guarantees.\" She took a deep breath. \"So I'm going to be making myself smart about barrier mapping.\"\n\n\"In which I have every confidence.\" Reye nodded briskly. \"Take a look at the relevant annexes and brief your people,\" he finished quietly. \"Transit time will be almost seventy hours at .88 lightspace, more like four days at .72 or .73; I'll decide once I see the fuel figures, after Ms Pfeiffer jettisons the cargo.\"\n\n\"We'll need thrust in reserve,\" Falgada nodded.\n\n\"Obviously.\" Zonn Reye was good at that, at being sarcastic without sounding demeaning. \"That's why we won't just go .99 and haul ass.\" He glanced at van Kleck. \"Engine status report by 0930, broken down by stresses expected at .70 and then at .88. Make sure you account for that fucked-up mount on Number Three Engine.\"\n\n\"I repaired that, sir. It was a simple fix.\" Van Kleck sounded blas\u00e9; Klonmyre, in the Third Officer's chair, rolled her eyes. \"I'm not sure why it went unresolved that long, to be honest.\" Pixy gave van Kleck a pointed stare, but of course the five-lober was oblivious; she never cared as much about humans as she did about their creations. \"Five weeks of subpar performance should have been rectified by my predecessor --\"\n\n\"Fuck off,\" Klonmyre snarled.\n\n\"Yeah. Thanks, Ms van Kleck.\" Captain Reye didn't like the engineer, either, and in any case he was too good a leader to sit around a conference table and watch while two of his officers savaged each other.\n\n\"Aye aye, sir.\" Van Kleck waited complacently, like a robot on standby or a ruminant expecting a fart.\n\n\"So. You've all got your jobs. I owe you information as to when I can set up a hasty rendezvous for ammo and, hopefully, a qualified surveyor. You people, get your shit done ASAP.\" He glared around the table beneath his skinny eyebrows. \"Comprehend?\""
    ],
    "authorname": "Voboy",
    "tags": [
        "military",
        "prostitution",
        "space war"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dry-no-lube-ch-03-disrupted"
}