{
    "title": "Toys are Us Ch. 02",
    "pages": [
        "It was the third Tuesday of the month and Brenda was antsy and restless. The second toy of twelve was due today and she was as nervous as a new bride. The first toy, a large rubber dildo, had awakened her mind and body to all sorts of pleasures and feelings. She was doing her housework in the nude, a new thing since the toy had arrived.\n\nShe had her housedress laying on a chair near the door for when the UPS man arrived. The thought of being naked under it when she answered the door made her blush deeply. The thought of answering the door naked flashed like fire through her mind. \n\nShe took a deep breath and tried to get her mind off the new toy and sex in general, but her mind wasn't cooperating. Her mind kept going back to that first toy and her weekend alone. She had had her first orgasm that weekend Ron was gone and several dozen since then. She had even had several with Ron.\n\nHer mind turned to the Monday night that Ron had returned. It had been interesting, to say the least. He had been loving and attentive. He always was when he was gone for a few days. She hadn't expected him until the next day but he had called from the airport. He had grabbed a cab while she started supper.\n\nShe had rushed to meet him at the door and they had kissed long and hard. His hands had been all over her back and even dipped down to caress and squeeze her butt. She had been whimpering and moaning as their tongues dueled fiercely. Her hands were all over his back also, which was unusual. Normally she just held on to him but tonight her hands wanted to roam.\n\nRon raised his head and looked into her eyes. \"God, I've missed you. I hate not being here with you, especially at night. Hotels are the loneliest places.\"\n\nBrenda nodded and smiled shyly. \"I've missed you to.\" She whispered softly.\n\nRon hugged her again and then stepped back. His eyes ran up and down her thin housedress. \"Are you naked under that dress?\"\n\nBrenda blushed and nodded. \"My breasts, especially my nipples have been very sensitive and tender. My bra actually hurts when I have it on to long.\" The truth was, she hadn't had one on since she had returned home from dropping him off at the airport.\n\n\"What about your panties?\" Ron asked in a teasing voice.\n\nBrenda felt herself blushing again even deeper as she whispered, \"I think of you and I get them wet. Anyway, if I'm not wearing a bra then why should I wear panties?\"\n\nThere was a hissing sound from the direction of the stove. Brenda turned and almost ran over to it. Her spaghetti was trying to boil over. She cut the heat down and waited until it settled down to open the lid and stir it. She gave a little jerk of surprise as Ron's hands slid around her waist and then up to cup her breasts.\n\nShe gave a shivering shake and felt her pussy get wetter than it had been from their kiss. His hands were lightly stroking her breasts through the thin cloth and her nipples were hard and tingling. She rolled her shoulders back, pressing her breasts tighter against his hands. They had always been sensitive but now she was set on a hair trigger. She moaned as his hands rubbed her nipples.\n\n\"They are sensitive aren't they?\" Ron whispered. \n\nBrenda nodded and whimpered softly. Her playing with them all weekend had made them super sensitive, and now with a different set of hands on them she was afraid she'd come right there in the kitchen. She squeezed her thighs and shifted her hips, feeling the wetness getting even more slippery.\n\nRon gave her breasts a little squeeze and she pulled back. \"Careful dear they're tender, remember.\" She whispered with a hissing breath. Ron went back to caressing them lightly. \n\n\"Much better dear.\" Brenda told him.\n\nHe leaned in to nuzzle and kiss her neck. Brenda shivered again, her hands coming up to cover his. She guided his hands in a light caressing circle over the whole of her breasts and then barely brushed his palms over the hard bumps of her nipples. As she did, she moved back against him and rubbed her ass over the hard bulge in the front of his dress pants.\n\n\"What's gotten into you dear?\" Ron whispered in her ear as he kissed and nibbled it.\n\n\"I don't know for sure but I suddenly want you and want you bad.\" Brenda whispered back, a breathy catch in her voice. \n\nThe memory of that big toy dick in her pussy made her moan softly. The way it had rubbed her and made her feel so full was a building itch and ache in her lower belly.\n\n\"Take me to bed,\" Brenda heard herself whisper and then didn't believe she had said it. \"I've been waiting all weekend for you.\" She added as she moved his hands down across her stomach and placed one on either side of her sex.\n\n\"Is my little girl horny?\" Ron asked teasing her.\n\nBrenda nodded and then arched her back as one of his hands brushed over her mound and the other pushed the cloth of her dress against her sex and between her thighs. She would have to wash the dress her mind flashed and then she moaned as his fingers brushed her clit and she didn't think of the dress again.\n\nHer hands were on her breasts as his hands played with her sex. She wanted the dress out of the way, to feel his hands directly on her skin. She hurriedly undid the buttons down the front with shaky fingers. She hadn't felt this way under Ron's hands since very early in their marriage. A flight of butterflies was doing loops and swirls in her belly.\n\nA few moments later she shrugged her shoulders and slipped the top of the dress off. Ron's lips left her ear and returned to her neck and shoulder as the dress dropped around her hips. When Ron moved his hands back up to cup her breasts the dress fell to the floor to pool around her feet. His hands on her bare skin made her moan loudly and the thought of standing naked in the kitchen with Ron sent a chill up her spine.\n\nHer hands fumbled with the knobs on the stove turning off all the burners. When she had everything off, she turned around and kissed Ron with more passion than she had ever felt before for him. He kissed her back with a growing hunger of his own as his hands caressed and stroked her back and ass.\n\nThe next thing she knew, Ron had her up in his arms and was headed for the bedroom. Her heart was beating faster and she was on fire with need. Ron laid her on the bed and kissed her hard and deep, his tongue going wild in her mouth. She wondered for a second what that would feel like on the other end of her body and then she moaned loudly.\n\nRon broke the kiss, stood up, and started to undress quickly. Brenda's hands found her breasts and gently teased and caressed them. Ron's eyes hungrily followed her hands. When he took his pants off, Brenda's eyes were on his hard manhood where it stood upright against his lower belly. \n\nRight now it looked bigger than she remember it being, not as big as the toy but closer than her mind had told her it was. She whimpered softly as her fingers lightly pinched her nipples. That was something she had found by accident, that and pulling on them gently. Both shot flashes of pure pleasure straight to her pussy.\n\nAs Ron got on the bed, Brenda had to force her hands to stay where they were; she wanted to grab his dick so much. She wanted to know if it felt like the toy. She wanted to know what it felt like and tasted like in her mouth. She wanted to tease it and herself so very much but she couldn't do any of it without shocking Ron.\n\nRon moved over on top of her and plunged his dick into her pussy in one lunge. She gasped loudly and arched her hips up as he made a second stroke. His pelvic bone brushed across her clit as his dick rammed home. Brenda yelled loudly as she came and came hard, her hips hunching up against Ron as wave after wave washed through her.\n\nA few seconds later, Ron made a loud grunting groaning sound and came deep inside her. This just pushed Brenda even farther into her orgasm as the fiery heat bathed her insides. Ron was pressed tightly to her and she was pushing back, as her legs wrapped over his and pulled.\n\n*****\n\nAs they both slowly came back to earth, Ron started to get up as usual but Brenda's arms and legs held him in place. He relaxed with a sigh and nuzzled her shoulder and neck. Brenda made soft murmuring sounds of happiness and hugged him tightly.\n\n\"I love you so much,\" Brenda whispered softly.\n\n\"I love you to,\" Ron responded between soft sweet kisses on her neck. \n\nBrenda sighed. \"I love what you're doing. It feels so good, so much better than you leaving me after we....\" Shocked at what she was saying she left the sentence hanging.\n\nRon pushed up and rested his weight on his elbows. \"I always though that that was what you wanted. That I was to heavy to stay on top of you.\"\n\n\"We could roll onto our sides. I'd just like for you to hold me afterwards, to know that you enjoyed it as much as I did.\"\n\nRon did just that. With a couple of false starts they ended up on their sides cuddling. Ron's dick had slipped free but it didn't seem to matter. \n\nOnce they were settled, Ron whispered, \"I always enjoy making love to you, you know that.\"\n\n\"Yes, I do dear but sometimes I need reassuring.\"\n\nRon nodded and held her tightly. \"You sure seemed to enjoy it tonight. I haven't felt you react like that since our honeymoon. You've seemed different since I came home but I can't put my finger on it.\"\n\nBrenda giggled as she thought about the big toy and then said, \"I've missed you and thinking about you made me horny as hell. Like I said, I've wanted you since you left.\" Brenda paused as she sensed an opportunity to open things up a little.\n\n\"Uh.... Dear.... Uh.... I have a confession to make.\" She began but wasn't sure where to go from there.\n\nRon kissed her forehead and chuckled. \"Don't tell me you had an affair with the post man.\"\n\nBrenda laughed and hit him on the shoulder. \"No! It was the milkman, if you must know.\"\n\n\"Dear, we don't have milk delivery.\"\n\n\"Oh! Oh, yeah.\" Brenda replied with a giggle. \"Actually, I did something I hadn't done since I was a child. Something my mother beat me for. Something I was told was wrong but it can't be wrong, it feels to good to be wrong.\" Brenda was close to tears now as she talked about something she never had before put into words.\n\nRon watched his wife closely as he wondered just what the hell she was talking about. \"What did your mom beat you for? She was a mean old woman at times but--.\"\n\n\"For touching myself!\" Brenda blurted out.\n\n\"Oh!\" Ron said as the light dawned. \"There's nothing wrong with that, it's a natural thing.\"\n\n\"Mother didn't think so, she said I was going to hell for it.\"\n\nRon laughed and pulled his wife tightly to him. \"If that was so, I'd be on fire right now or have very hairy palms.\"\n\nBrenda looked up at Ron with a questioning look on her face. Ron kissed her deeply as he stroked her back lightly. Brenda surrendered to the kiss and moaned softly as Ron's hands explored her ass and then one of them moved down between her legs. \n\nHis fingers explored the wet mess around her opening and then dipped inside her. She gasped loudly and lifted her top leg up over his hip, allowing him easier access. His fingers made a soft squishing sound as they moved in and out. Brenda shivered and pushed back against his fingers.\n\n\"Did you do this to yourself?\" Ron asked softly. Brenda nodded and then gasped as a third finger joined the first two. \n\n\"We need to get a shower in a bit and then after supper, I want you to show me what you did.\" Ron whispered as he continued to finger fuck his wife. \n\nBrenda moaned softly at the thought of Ron watching her and a louder one as his fingers moved more forcefully. An orgasm was building and Brenda moved up Ron's body a little ways. She was now partially on top of him and she could feel his dick swelling and getting firmer under her hip. She rubbed her hip against him as she pushed back against his fingers.\n\nRon hadn't touched her like this since their honeymoon and Brenda wondered why that was. Ron's thumb brushed over her anus and she gasped loudly, all questions lost as her orgasm washed through her body. The memory of her own three fingers in her pussy just pushed her higher.\n\n*****\n\nBrenda sighed deeply and snuggled against Ron's chest. He had one arm around her waist and his other hand rested wet and sticky on her ass cheek. She giggled and moved her hips from side to side, feeling his hot hard manhood under her hip. She was very happy and content, she realized.\n\nRon kissed her hair and smacked her lightly on the ass. \"Okay, it's shower time for us, my messy little wife.\"\n\nBrenda giggled and replied, \"It's all your fault I'm so messy.\"\n\n\"Uh huh.\" Ron said with a chuckle as he smacked her ass again. \n\nBrenda wiggled at the tingling of her ass cheek and kissed her husband gently. Ron kissed her back and ran his hands over her back and especially her ass. Brenda murmured softly in the pleasure his hands brought to her skin. This was so much better than the quick love making from before his trip, especially the cuddling part.\n\nRon's hand smacked her ass again. Brenda broke the kiss and grinned at him. \"You better quit that, I'm beginning to like it.\" She said jokingly.\n\n\"Oh, is that so?\" He said as he popped her a little harder. \n\nBrenda gave a little yelp, more startled than hurt and got to her knees. \"Well, maybe not.\" She said as she back toward the edge of the bed. Her head was even with Ron's dick as she paused to study it closely for the first time in their married life.\n\nThe big toy was bigger in length by several inches and a little thicker but other than that they looked very much alike. The toy had larger, more exaggerated veins but she could see some on Ron's dick. The circumcised head was what fascinated her. It looked like a mushroom with a rounded notch at the bottom and it was exactly like the toy.\n\n\"Uh, did you find something interesting?\" Ron asked.\n\n\"Well.... Uh.... Yes.... I realized that I had never really looked at you closely. We always go straight to sex. I've never even touched you there.\"\n\n\"I'm sure you did on our honeymoon, or at least I think you did.\" Ron said with a slightly confused look on his face.\n\n\"That was five years ago dear and I don't remember touching you. Although I may have in the heat of the moment.\" Brenda replied and then blushed. A vision of her grabbing it and sucking it into her mouth crossed her mind. She could feel the heat rising from her breasts to her face.\n\n\"It's kind of messy right now.\" Ron muttered still confused or was it nervousness and excitement she heard in his voice.\n\n\"Then let's go wash it off in the shower.\" Brenda heard herself saying as she got off the bed. She was almost holding her breath waiting to see what Ron would say.\n\nRon moved to the side of the bed and looked at her for a second. \"Me being gone and you playing with yourself seems to have changed you. You seem more curious, more outgoing and to tell the truth, I like it.\"\n\nBrenda let her breath out slowly and then kissed Ron passionately. Ron was taken by surprise for a moment and then kissed her back with equal passion. After a few minutes, he ended up on his back with his warm squirming wife on top. Her hands were in his hair and his hands were again roaming her back and ass.\n\nWith her legs spread wide by Ron's thighs, Brenda's wet slippery slit was pressed to his shaft. His dick felt so hot where it touched her. She couldn't moved to well with her feet off the floor but by wiggling from side to side she could feel the head brushing against her clit. \n\nShe moaned loudly and broke the kiss. Things were going to fast, she needed to do this slowly. To fast on her part and she'd give Ron things to worry about. Why she knew this or how, was beyond her but she had to go with her instincts. She slowly got up off Ron and held out her hands.\n\n\"Come on, let's get that shower.\" She whispered softly.\n\nRon looked up at her and then took her hands as he sat up and then stood up. \"I love you.\" He whispered as he hugged her tightly. His mind was on the feel of his wife on top of him. That was something they needed to check out in the near future, he thought as his wife kissed him softly.\n\n*****\n\nAs Ron adjusted the water temperature, Brenda got them a couple of towels. When she opened the door and slipped into the shower with him, he wondered why they had never done this before. He had thought about it but had never mentioned it to Brenda. Why was that? Fear that she wouldn't go for it? More than likely, that was it.\n\nBrenda seemed nervous and giggled as Ron started to soap her body up with his hands. The way his slick hands were moving over her body made her shiver. He had started at her shoulders and worked down her arms only to move back up her arms on the underside. As they reached her body, she raised her arms over her head and relaxed back against the shower wall.\n\nRon's hands went down her sides and then back up to cup and soap her breasts. The slippery feeling was very much like that first time in the tub, the thought of which made her shiver again. After a moment or two she moaned softly and closed her eyes as she pushed her chest out, pressing her breast tighter to Ron's hands.\n\nHis hands moved down over her sides and belly to her hips and then skipped down to her thighs and legs. When Ron's hands slipped between her thighs and moved upward, Brenda took a step to the side with each foot. Ron's hands moved on up to her upper thigh, one hand brushing her pussy as it moved between her legs. \n\nRon soaped up the other thigh and then used both hands to wash her sex. Brenda was up on her toes by the time he moved on down her legs to her feet. Her breathing was fast and ragged. When he finished her feet he stood up and kissed her.\n\nThe kiss took Brenda by surprise as she had her eyes closed but a second later she was wrapped around Ron as close and tight as she could get. The slip and slide of her body on his felt wonderful. His hard hot manhood rubbed deliciously back and forth over her belly, sending little sparks to her pussy. \n\nRon broke the kiss and whispered, \"Turn around so I can get your back.\"\n\nBrenda turned around and placed her hands on the wall. His hands felt very good as they caressed and massaged her back. As they went lower to her hips and then her ass, she bent over and rested her head on her forearms. Ron's hands were now on her ass, which made her shiver, especially when a finger or two dipped between the cheeks.\n\nWhen Ron used one hand to cup her sex from the rear, she gasped and came up on her toes. Her legs were already wide apart but she moved her feet and spread them even farther. That allowed Ron easier access to her pussy, which he took good advantage of by moving his hand back and forth.\n\nAs one of his hands worked from the back, the other came around to caress her mound from the front. Ever so often he would dip a finger or two into her pussy from the back as his fingers in the front brushed her clit. Brenda was whimpering and moaning softly, her legs shaking, by the time he stood up.\n\nHim entering her from the rear made her gasp and then she was coming her brains out. He felt so much deeper from this direction and so different. The smack of his hips on her ass as he fucked her, just drover her higher and higher. She was so lost in her own orgasm she almost missed his, but the hot jets so deep inside blew her away.\n\n*****\n\nBrenda smiled and then sighed happily at the memories. That evening and night were deeply etched in her mind, even more so than her wedding night, it was just to bad it hadn't lasted. Ron had gotten her to bed after the shower and had been gone to work when she woke up the next morning. \n\nTheir lovemaking was more often now and much more satisfying but still missionary only. Ron cuddled afterwards but still got up to clean up and came back to go to sleep on his side of the bed. It didn't matter as much now as Brenda had learned to move her hips and get her own orgasm by the time he did, most of the time.",
        "He never had asked for her to masturbate for him and she hadn't brought the subject back up. Slow and easy was what she told herself. It would take time and patience. The only problem was that they had slipped back into the old rut over the next few days. This bugged and frustrated her to no end.\n\nThe ringing of the doorbell made Brenda jump. She hurried to the living room and grabbed her dress. For a moment she just stood there holding it and looking at the front door. The urge to just open the door was strong but her fears made her put the dress on and button it up. \n\nShe had four or five buttons to go when the bell rang again. Her hand went to the doorknob and turned it. She could feel herself blushing as she opened it. The UPS man's smile sent shivers up her spine as she opened the screen door and took the package. She could feel his eyes on her as she signed the sheet. \n\n\"Have a good day.\" He said as he turned and headed down the steps. \n\n\"I certainly will.\" She replied as she closed the screen and watched him walk across the yard. He was wearing shorts in the heat and his darkly tanned legs looked outstanding. They were strong and muscular, as were his arms. The rest of him wasn't bad either, she thought as she closed the door.\n\nHis muscular shoulders and back had strained the sweat stained shirt and his ass had looked tight and powerful under those shorts. Her mind was trying to attach the big toy to him, to find a way of getting him inside the house, to get him out of those shorts and shirt.\n\nShe leaned back against the cool door and blew out a deep breath as she fought to get her mind off of the fantasy it was trying to build. This was something new and she was shocked by her own thoughts. She shifted her hips and felt the wetness between her legs. Her mind and body were conspiring against her.\n\nWhen her hand slipped inside the top of her dress and caressed her breast, she gasped. Her dress was unbuttoned far lower than she had ever worn it in public. Without her bra she realized that the UPS man had gotten a good look at her naked breast. This made her moan softly and then she took a hissing breath as her fingers pinched and pulled at her hard nipple.\n\nThe package fell from her hand as it moved to rub her sex through the dress. A vision of his eyes on her breast made her moan again and her fingertip brushing her swollen clit turned the moan into a loud groan. She could come so easily right this second, she thought as her lower hand bunched the dress up trying to get to her bare pussy.\n\nLeaning against the cool door brought back memories of the shower and she shivered hard as she took a step to the side with each foot. The dress hem was high enough for her hand to slip underneath. Her fingers explored the slippery folds of her pussy and teased her clit. Brenda felt her hips jerk as she remembered Ron's fingers.\n\nWith a force of will, she dropped the dress, picked up the package, and headed for the bedroom. She dropped the package on the counter as she passed, her mind on the big toy hidden in her lingerie drawer. The dress fell to the floor of the bedroom as she opened her dresser drawer and retrieved the big toy in its shipping box.\n\nShe had a new toy, her mind flashed suddenly at the sight of the shipping box. Tossing the big toy on the bed she almost ran to the kitchen. The box was eight inches by six and three inches thick. She wondered briefly what would fill that kind of space. A minute or so with a knife had the wrapping off and the box ready to open.\n\nWith trembling fingers she opened the flap end of the box and shook the bubble wrapped toy out on the counter. Using the knife again she cut the tape holding the wrap together. As it unfolded she was confused by it's shape, it looked a lot like a cactus with an arm.\n\nThe main part was like the big toy but smaller, maybe six inches long and a little over an inch wide. Forking off and then running parallel with that was another prong about four inches long and about half as big around as the first. Brenda wondered what the little side finger was for and then blushed as a vision of it sliding into her ass as the main part went into her pussy.\n\nBrenda moaned softly as she clenched her thighs and ass cheeks together. She clenched and relaxed like that several times, feeling the wetness and the movement of her lower lips against each other. Her clit was trapped each time she did and a tingle radiated outward. She could feel her inner muscles tightening up, along with the tightening of her anus. \n\nWith a shiver and a whimper, she picked up the toy and examined it. It was made of a firm rubbery material and had a plastic cap on the base. There was a tiny switch on the end of the cap. She flicked it back and forth with her fingernail but nothing happened. \n\nBatteries crossed her mind and she tried to unscrew the end. It came off easily. The compartment looked like it would hold a couple of the small batteries like she used in the wall clock. There were several spares in the kitchen draw, she remembered.\n\nHer fingers were fumbling and shaky as she loaded two of the batteries in the compartment and screwed on the cap. She flicked the little switch and nothing happened. She shook the thing and than made a whinny irritated sound as she remembered the batteries had to go in a certain way.\n\nBrenda quickly swapped them around and was spooked as the toy started vibrating as she screwed on the cap. She fumbled the switch off and finished tightening the top. She flicked the switch and felt of the main prong; it was vibrating mildly. The little prong on the other hand was vibrating wildly. \n\nShe clicked the little switch off and glanced at the clock. It was a close to two PM, so she had four hours before Ron got home. She had supper to make, so make that two hours. Her legs shook as she turned and walked toward the bedroom. Her mind was on the little toy and what it would feel like if she got up the nerve to put it somewhere nothing else had ever been.\n\nHer mind was trying to talk her out of even trying the new toy but her body wasn't listening as she climbed up on the bed. She laid the new toy on her stomach and shook the big toy out of its box. She hadn't had it out since Ron came home and the sight of it made her whimper as she thought of the orgasms that it had given her that weekend.\n\nShe licked her lips and then licked the head of the toy dick. In her mind it was Ron's dick. She used her tongue to explore the head, the flare under it, and the notch in that flare. She moaned loudly as she thought of doing that to Ron. She wondered what it would feel like to him and if he would enjoy it.\n\nThe only problem was how to explain what she was doing and how she had thought of it to Ron. He would probably think she was some kind of a perverted person and then he would wonder who had taught her such nasty things. \n\nIf she told him that her girl friend Rose, had put the idea in her head, he might believe her but more than likely he would forbid her to see Rose ever again. As it was, he considered Rose a tramp at best, but he did tolerated her for Brenda's sake.\n\nBrenda realized suddenly that she had the whole head of the toy dick in her mouth and she was sucking on it. She whimpered softly and with a force of will pulled it out, dropping it next to her. Her hands went to her belly and landed on the new toy. She jerked her hands away like it was hot. This whole toy thing was getting out of control.\n\nShe jumped up off the bed, re-boxed the big toy, and went to find the box for the new one. In a few minutes she had both of them stored away in her lingerie drawer. Her mind was made up to sneak them over to Rose's house and give them to her. With her mind made up, she went to take a shower.\n\n*****\n\nThe first and third week of the month, Rose worked at the hospital, so it was late Friday afternoon before Brenda had a chance to talk to her friend. Ron had come home early and was out cutting the yard. On the phone, Brenda invited Rose over, saying that she had a problem and needed to talk about it.\n\n\"Well, go ahead and spill it, I need a shower before Davy gets home. I'm way behind on my fucking and I'm planning on starting early and finishing late.\" Rose told her.\n\n\"I can't talk about it over the phone. It's private, so come over here while Ron's still outside.\" Brenda pleaded.\n\n\"Whoa, this sound like it's going to be juicy. Who'd you give it up to, who's the lucky guy?\"\n\n\"Rose, be serious, it's nothing like that.\"\n\n\"Yeah, right! I'll be right over.\" Rose said and then hung up.\n\n*****\n\nRose came in the front door without even knocking and made a beeline for the kitchen. \"Okay, spill it.\" She said as she sat down at the counter.\n\nBrenda slid a Wal-Mart sack down to her and said, \"You need to take these with you and get rid of them for me.\"\n\nRose looked at her funny and then opened the sack. A moment later she laughed and shook her head. \"Oh wow, you won the contest. You lucky bitch you!\"\n\n\"You can have them and all the rest when they arrive.\"\n\n\"Oh no, these are yours, you need them a lot more than I do. Maybe they'll teach you something about sex and pleasure.\" \n\nBrenda shook her head sharply. \"No I don't. Those damn things are evil and are going to get me in a lot of trouble. I know all I need to know, thank you very much.\"\n\nWith a laugh Rose whispered, \"Oh hell yes, you've done tried them out and found out what real sex is about besides that shitty missionary crap you're used to.\"\n\nWhen Brenda blushed deeply, Rose laughed again, as she knew she had hit it right on the head. \"You go girl!\"\n\n\"I only tried the first one and that was bad enough. As it is, I'm thinking about things that would wreck my marriage if Ron found out about them. I don't even want to know about that second one, just looking at it makes me think of even wilder things.\"\n\n\"The wilder the better, I always say. You keep them, they're yours, and you won them fair and square. It's like it was meant to be.\" Rose told her.\n\n\"Ron wouldn't understand, believe me.\" \n\nRose laughed and pushed the toys back toward Brenda. \"No, you believe me. If there's one thing I know its men. Ron's a man and the only thing that should be on his mind is fucking your sweet little ass off. You give him the right hints and make some accidental moves and he'll go nuts. I'll bet a dollar to that bag of toys that things have already improved.\"\n\nBrenda blushing again, made Rose laugh. \"Yeah, I'm right. You even figured out what the big \"O\" was all about, right\" Brenda's blush got even deeper.\n\n\"You go, you bad girl, get you some! Get you a lot, you're way behind in the game of love and lust.\"\n\n\"But what would I tell Ron?\"\n\n\"Tell Ron about what?\" Ron asked from the door of the washroom.\n\nBrenda whirled around, her eyes and mouth wide open, in shear terror.\n\nRose grabbed the sack with the toys in it and tossed it to Ron. \n\n\"No!\" Brenda yelled as he caught it.\n\n\"Yes.\" Rose said softly.\n\nRon looked at the sack and then at the two women. \"Would someone like to tell me what's going on?\"\n\n\"Those are the first two toys from that contest.\" Rose said with a big grin.\n\nRon looked confused and asked, \"So?\"\n\n\"That's for you two to have fun figuring out.\" Rose said standing up. \n\nRon still looked confused and Brenda was alternating between fear and anger, as Rose walked to the front door. \n\nAt the door she paused and said to Ron, \"Just remember, I entered Brenda in that contest for the good of both of you. From what I'd heard, your sex lives sucked and not in a good way. I thought maybe it would help and jump start you two.\" She paused to grin and then added, \"If you have any questions, feel free to call and ask.\"\n\n\"What the hell are you talking about?\" Ron asked loudly. With a laugh Rose waved and went out the door.\n\nRon looked over at his wife and shook his head. \"That woman is nuts, what the hell do a couple of kids toys have to do with our sex lives....\" He paused and looked at Brenda sharply. \"What the hell does she know about our sex lives?\"\n\n\"Well, uh, well....\" Brenda stammered. \"We talk some, she talks mostly, but ever so often I did answer a question or two.\"\n\n\"Uh huh!\" Ron said as he tossed the sack on the counter.\n\nBrenda's eyes followed the sack and she had the urge to grab it and run. But she had nowhere to run and even if she did, she'd have to explain when she got back. She changed tactics quickly as fear of losing Ron overpowered her natural shyness and general fear.\n\n\"These aren't kids toys.\" She whispered as she pulled the sack over in front of her. \n\nRon looked confused and asked, \"Then what kind of toys are they?\"\n\n\"Sex toys.\" was her almost inaudible response. \n\nRon looked at her sharply as his mouth dropped open. Then his eyes drifted to the sack and then back to his wife. \"So this is why you've changed? I believed that story about your mom beating you for playing with yourself.\"\n\n\"That was true dear and I only played with one of the toys. I opened the second one but didn't use it. I tried to give them both to Rose but she said I, uh, we needed them more.\" Brenda said in a pleading rush.\n\nRon looked at his wife with a mixture of expressions flying across his face. Anger came first and then fear, followed by uncertainty and fear again. Then anger reappeared and then he sighed and looked away. He took his time getting a stool at the counter pulled out and himself seated on it. \n\nHis eyes went to the sack and he opened his mouth to speak and then shut it. Brenda was waiting for him to start yelling at her. She was surprised when he asked softly, \"Does my making love to you satisfy you? I mean completely satisfy you?\"\n\nBrenda thought how best to answer the question and then sighed as she decided the truth was best. \"It didn't at one point but what I learned from that first toy and from playing with myself has help it a lot. I've learned what an orgasm is really like and how to get one with you. I love that we cuddle afterwards now and I loved that shower we took together. Most of all I love you.\" She said slowly.\n\nRon looked at his wife for nearly a minute and then asked, \"What did Rose say was wrong with our lovemaking?\"\n\nAgain the truth was what she used as she replied, \"That our sex life was to bland and that there was a lot more to sex than just the missionary position. She's very active with her husband and figured everyone should be just as active in their marriage. She said the toys would spice things up and they did until I got scared.\"\n\n\"What scared you?\"\n\n\"I worried about some of the things I had started thinking about. About how you might react to them and what you would think of me for even having those thoughts much less putting them into action. I was afraid of hurting you or worse, losing your love for me.\" Brenda confessed.\n\nRon's hand moved to cover his wife's. \"I could never stop loving you.\" He told her.\n\n\"Are you sure? I've had some very raunchy fantasies as of late.\" \n\n\"Do they all involve me?\" Ron asked softly and a little shyly.\n\nBrenda lied and whispered, \"Yes, all of them.\"\n\n\"Then how could I be mad about that? I know you love me and I know that we don't do a lot of things sexually that other couples do but....\" Ron paused and then didn't go on.\n\n\"But what, dear?\" Brenda prompted.\n\nRon looked at her and then smiled. \"We were both young and virgins when we got married. We didn't know much about anything and sex was high on that list. Since then I've learned things from buddies and just listening in on conversations. Things that I wanted to try with you but had no idea how to open a dialog without you thinking I had been with someone else.\"\n\nBrenda giggled and then said, \"That's the way I was feeling. I would figure something out or have this idea and then I'd wonder what you would think of it. Then I'd wonder how I would explain how I learned it to you.\"\n\nRon laughed and picked up the sack. He stood up and pulled his wife to her feet. As he led her toward the bedroom, he said, \"I think I'll be calling in sick on Monday and maybe the next day. We have a lot to explore, if I don't miss my guess.\"\n\n\"No dear, you're right on with it. I have a dozen or so things on my mind right now that will take most of that time to figure out.\" Brenda said with a big grin and a silent thank you to Rose."
    ],
    "authorname": "TxRad",
    "tags": [
        "toys",
        "oral"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/toys-are-us-ch-02"
}