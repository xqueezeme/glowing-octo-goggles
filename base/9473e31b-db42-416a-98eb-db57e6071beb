{
    "title": "Quite an Uplifting Speech",
    "pages": [
        "One\n\nIt felt strange but good to be back in the office after so long. I missed the buzz of the workplace, the banter with the guys and the evenings in the pub after work. As a result, I was one of the first to take up the offer of getting back in. A fair few had joined me as things began to get back to normal - or as near as they could. \n\nThe 'New Normal' seemed to be the universal term for it. Whether or not it would be any different remained to be seen.\n\nQuite a few people I knew loved the idea of working from home and had become used to it. No nasty commutes at the mercy of Transport for London and the rail franchises that provide the unreliable services into the capital. And no telling looks if you were back from lunch late or sloped off home or to the pub a few minutes early. \n\nSome were still reluctant to come back after so long and I couldn't blame them. We had been through a lot in the last year and a fair few had fallen foul of the disease that swept over us in a tidal wave. Most of them had recovered fully. One or two still felt the long-term effects and sadly, three that we knew of in the eight regional offices across the globe would never again have to worry about commuting to work. None of them had been in the 'at-risk' category - a salutary reminder that the fell disease could strike at random and bring devastation in its wake.\n\nWe had been back for two weeks and it was a big day. A rallying speech by Madeleine Colton, our CEO, to welcome us back, remember our fallen colleagues and look to a brighter future. It would be a stripped-down version of her usual addresses -- only around sixty of us would be there in person, in one of the smaller conference rooms in our huge Canary Wharf offices. Over four hundred of us had attended the previous company meeting, prior to the pandemic, at a plush Park Lane hotel with hundreds more watching down the line in our other locations. \n\nThis time it would be a little less ostentatious, with smaller gatherings in each office and many dialling in from home.\n\nAs ever, when waiting for one of Madeleine's events, time dragged. She was a skilled orator and everyone looked forward to her inspirational words. This time, we needed them more than ever. We needed to hear her calm, measured and warm Yorkshire accent reassure us that the future was rosy after the dark days we had endured.\n\nI glanced at my watch -- one-thirty. Still ninety minutes until we assembled on the floor below. As colleagues chatted aimlessly around me, I recalled the previous meeting over a year ago. At the time, we all thought it would only be a short gap until the next one. How wrong we were.\n\nIt was February 2020. Most of continental Europe was locking down. Everyone could see it coming. At least everyone except for those that were elected to govern the country. While they delayed and dallied, things got worse by the minute and nothing was done to stop it. As with the rest of us, Madeleine knew all too well what was about to unfold and decided we should go out with a bang before everything ground to a halt.\n\nThe 'Park Lane Bash,' as it became known, was a blow-out by any standards. Even for a company known for its excess in celebrating success, it was extravagant. There was a fin de si\u00e8cle feeling about the whole thing. A last waltz. The end of an era. We knew that all too soon, things were going to be very different.\n\nWe just didn't know how different.\n\nMadeleine and some of the heads of department tried to keep our spirits up before the real partying began with speeches about how we would get through it individually and as a whole. After the formal part of the evening, the food was amazing and the banter at the dinner table laced with gallows humour as we tried to make light of the oncoming storm. It was a company directive that people from the same departments and divisions were kept apart and it was nice to converse with colleagues we barely knew over fine food and wine. Over the years, some strong friendships had been made as a result.\n\nThis time, six of my seven dining companions were great fun and the table rang with laughter and good humour. The seventh person was an exception -- a taciturn woman of around forty years old, the Deputy Director of our newest office in Mumbai, India. They had only been on board for a few months and she was in London for the director's meeting that preceded the event. She was certainly a very elegant and attractive lady, but Indira Chandra seemed to look down her long, aquiline nose at the rest of us as though we were a bunch of unruly children. She may well have been right, but given the circumstances, maybe a little leeway was required.\n\nOnce the dinner was finished and the covers band struck up, she disappeared for long periods, which was at odds with the usual company culture of mixing and fraternising. I wasn't a great one for dancing myself but was prepared to put up with it for one night as a relatively new girl in a neighbouring department had caught my eye.\n\nWhen I saw her boogying energetically with Shaun Price, I knew I was out of luck. The look on her face said it all and once Shaun had his claws into someone, no-one else had a look-in. I had a few stumbling hops with girls I knew and as the evening drew to a close, reluctantly had to admit that I would not be taking anyone back to my room at another hotel a couple of blocks away. The late booking of the shindig meant we were scattered over a few nearby hotels and some lucky people would only have a short elevator ride to their homes for the night.\n\nHaving been blown out for the third or fourth time, I headed back to the dinner table to refresh myself with some of the generous allocation of wine that remained. The enigmatic Ms. Chandra sat all by herself, tapping at her phone. I had barely spoken to her all night thanks to her reticence and aloofness. Having partaken of a fair amount of said wine, I wondered if maybe she would grace the dancefloor with me. \n\nAs I poured myself a cheeky glass of Merlot, she never even looked up from her phone. That clinched it for me. She obviously had no interest in making any effort to mix, so I decided to press the issue and force her into either accepting my invitation or be seen as the party-pooper by her refusal.\n\nIn the interests of the spirit of the company's ethics, I would try and break her layer of permafrost and ask her to dance. The hour was getting late and there could only be about three songs left, so it would be a short ordeal one way or the other.\n\nIt didn't need an expert in body-language to read her expression of disdain as I spoke her name with my hand outstretched and nodded to the dancefloor. For a moment, I thought she was going to refuse, but maybe she too remembered the company ethic and rose from her seat, reluctance oozing from every pore.\n\nHer fingers barely brushed mine as I led her to the floor. I tried to coax her into the throng, but she stayed resolutely on the edge, close to the table we had occupied. It was as awkward as I expected as I set up my usual, graceless sway and she studiously ignored me, never making eye contact. I felt it was only the proximity of the table behind her that stopped her from backing away from me.\n\nBut I was surprised at the grace with which she danced. Her arms and upper body moved in elegant, sinuous curves. Almost like a Bollywood dancer, her arrogant, aloof expression only added to the allure. She seemed to flow with the music and I found her quite mesmeric. Her sheer silver cocktail dress contrasted with her caf\u00e9 au lait skin in a very appealing way. Once warmed to her task, her silky, waist-length black hair shone under the lights and glitterballs and I suddenly began to see Ms. Indira Chandra in a very different light - even if it was pretty obvious that the feeling was not reciprocated. \n\nAs the first song ended, I fully expected her to return to her seat. Then the band leader announced their last up-tempo song of the night before the inevitable last, slow smooch, and to my surprise she stayed on the dance floor.\n\nThe same pattern followed as the band tore it up and did a very passable version of Chic's 'Le Freak.' Ms. Chandra lost herself in the funky beat as the guitarist channelled his inner Nile Rodgers, and though the bass player was no Bernard Edwards, he tried valiantly and carried the groove. I could barely take my eyes from her as she moved in perfect time to the music, in a world of her own. \n\nLittle by little, the band took it down before moving seamlessly into a slow burn for the final song of the night. Now, I really did expect her to turn tail towards the empty dinner table, but she moved towards me and with only the briefest of looks, took me in her arms, her head turned away from me.\n\nUtterly stunned, I put my arms around her slim shoulders. If I was hopeless at energetic dancing, I was a complete disaster area when it came to the more intimate stuff. I never knew quite where to put my hands or what was the correct etiquette. However, I knew that at least two long-lasting relationships in the office had begun over these last dances, and briefly wondered if this may give me the chance to cement Anglo-Indian relations.\n\nI knew before the first chorus that I was in trouble. That close, her musky perfume and the smell of her soft, silky hair acted as something of an aphrodisiac. Add to that the sleek, shiny fabric of her dress beneath my wandering hands and her warm breath against my neck and I realised I was fighting a losing battle. Then there was the soft press of her breasts against my chest and, despite my clumsiness, her still sinuous movements. As we slowly gyrated together, I couldn't but wonder what she would feel like in a more intimate clinch.\n\nThen the inevitable happened, and for me that has never been a good thing. I am what some people would call 'well-endowed' and in certain circumstances, it can become very apparent very quickly I am somewhat aroused. This was no exception, and as Ms. Chandra was a tall woman, I knew it would not be long before she felt the press of something long and hard against her taut stomach. I tried to will it down, screaming inwardly for it to desist, but to no avail.\n\nI find my size a blessing and a curse. It has scared off a few girls over the years and also attracted a fair few more. I was glad I couldn't see her face, nor she mine, as I knew I must be blushing at my indiscretion. For a moment, she danced on as if oblivious or too polite to notice. I was appalled but didn't want to break the clinch as it would have been so obvious as to why. To make matters worse, she was from a different culture. I usually had no idea how an English girl in a situation like this would react until I was either slapped or kissed. All I could do was pray I hadn't crossed an unwritten line. And to cap it all, the woman was the bloody Deputy Director of one of the overseas offices. It had disaster written all over it.\n\nThen she reacted.\n\nHer body stiffened in my grasp and she stepped away slightly, opening a gap between us at hip level, though still maintaining her grip on my shoulders. We swayed on unsteadily for a few more bars of music, then it became too much for her and she broke away from me, her nostrils flared.\n\nI fully expected a hard slap across the face but she merely glared at me for a long moment, then spoke in a soft voice that barely carried across the music. \"James, isn't it?\" Her expression oozed contempt.\n\nI nodded, wanting the ground to swallow me up.\n\n\"Well, James. All I can say is, you are a very rude man.\" And with that she turned tail and walked the few steps back to the table. She snatched her bag from the back of a chair and I took what I expected to be my final sight of those tight buttocks encased in that gorgeous, sleek fabric. \n\nIt was approaching one o'clock on Saturday morning. It was a very long time until work resumed on Monday and I was going to have all of that time to consider whether I would still have a job by then.\n\nThe music phased out into white noise as she opened her bag and pulled out a room card. As she turned back to me, I expected a final, well-deserved volley, but she merely shook the card out from the cardboard envelope, which she then threw down on the table with a dismissive flick of her hand.\n\nAs the band played on, she gave me a hard stare, then glanced back at the envelope. Everything then went into slow motion as her head swung around once more, long hair swirling around her shoulders. I swallowed hard as she raised one eyebrow and looked towards the elevators. Then she walked slowly towards them, absently tapping her key-card on her other hand. She pressed the call button, never looking back. It took a few seconds for the doors to open and she stepped inside. Just as they closed behind her, she turned and held up both hands to me, fingers splayed. \n\nTo emphasise her gesture, she mouthed two words. \"Ten minutes.\"\n\nIn a daze, I crossed to the table and picked up the envelope. Written on it were the words, 'Ms. Chandra. 714.'\n\nRoom 714. Ten minutes. Had I just got that lucky?\n\nBehind me, the band milked it for all they were worth, repeating the chorus ad infinitum as couples smooched and in some cases snogged. I poured myself another glass of wine and hid an almost full bottle under my chair. She had been drinking red and I hoped we may need it later. I quickly dialled up the company website on my phone and found the 'News' section. I scrolled down to a few months earlier when the opening of the Mumbai office was announced. Sure enough, there she was, her hair wound up around her head in an elaborate swirl, wearing a beautiful dark green saree. \n\nShe looked amazing and her smile was radiant as she gazed out of the small screen, soft brown eyes alive with life. I then realised I had not seen her smile all through the meal or afterwards. I hoped I would get to see more of it very soon as she looked stunning. The brief bio gave her age as thirty-nine. Given the article was over nine months old, she was probably forty now, but having seen her close-up, there was no way she looked her age. \n\nHad a hot looking woman, some fourteen years my senior, really just come on to me?\n\nThe band finally ground to a halt to a smattering of applause and I picked up the wine bottle and headed for the elevators. No way did I want to get caught up in the rush. We were in the hotel basement and no doubt people would soon head upstairs and start to disperse to other hotels in the area. I didn't want questions to be asked or suspicions raised.\n\nI called the elevator and tried to calm my racing heart and hoped Ms. Indira Chandra was not setting me up for a fall. As the doors opened and the disembodied voice vouchsafed we were on floor seven, I saw a sign that pointed off to the right, to rooms 701-725. I followed the corridor around a few convoluted bends and took a deep breath as I approached room 714, wishing I had taken the opportunity to visit the ablutions in case I had spinach stuck to my teeth or red wine dribbles on my dress shirt.\n\nI tapped softly on the door and stood back a few feet so as not to appear too intimidating. I had rehearsed my opening line on the way up.\n\nAfter what seemed like an eternity, the door opened and she regarded me with an amused expression on her face. \"James, what a nice surprise. Have you come to apologise?\"\n\nI inclined my head; glad I had the perfect opening for my intended line. \"Indeed Ms. Chandra. I would like to apologise profusely and sincerely for my rudeness on the dance floor.\" I held up the wine bottle. \"Maybe a peace offering?\"\n\n\"Maybe. Please come in so we can discuss the matter in private.\" She stepped back from the door and I took a few steps forward into her room and pushed the door closed behind me.\n\nThose soft brown eyes smouldered into mine as she regarded me, hands on her hips, wide nostrils flared as they had been down in the ballroom. I gave her the wine, which she put on a small table next to the door.\n\nIt was her turn to take a deep breath. \"I will accept your apology, James. You see, the thing is, I just fucking love rudeness. Quite honestly, the ruder the better.\" She took a step forward. \"And don't get me started on how that fucking cock of yours felt against my belly.\" \n\nAnother step and she pushed me hard in the chest. I stumbled backwards and the door crashed against my back. \n\n\"I want that cock in my mouth. In my dirty little cunt. In my tight ass. In short, I want you, James. However rude you are, you are no match for me. You started this -- I'll decide when it's finished, do I make myself clear?\"\n\nGod, that dirty talk in her clipped Indian accent was such a turn-on. I just hoped I could live up to her expectations. \"Perfectly clear, Ms. Chandra.\"\n\n\"Good. How big is that thing, James?\"\n\n\"Just under ten inches.\"\n\nMy revelation was met with a non-committal shrug. \"Fuck it, I've still never got to fuck one in double figures. Never mind, it's usually ten centimetres, so nearly ten inches will have to do.\"\n\nThen she pinned me to the door and the best weekend of my life so far began.\n\nThe first time was purely a rabbit-fuck. No finesse, no foreplay - unless her dragging me backwards across the room by my bow-tie is considered to be foreplay. Her panties had been dispensed with before I arrived, so once my trousers hit the floor, it was up with that lovely silver dress and away we went. Seeing my erection glide in between her beautiful, coffee-coloured outer lips was such a turn on. Long legs clamped around my buttocks and I was urged on in English and Hindi until we both shuddered to a climax within seconds of each other.\n\nWe lay in a tangled heap, panting for breath and she purred. \"I told you I like rude, didn't I?\"\n\nI kissed her on the nose. \"You certainly did.\"\n\nHer grin was pure wickedness. \"Then how's this for rude? How's this as a taste of things to come?\"\n\nWith that, she held herself open so I got my first real view of the wonderful contrast between her darker skin and her pink inner lips. Two fingers slipped inside then withdrew, slathered in my mess. She held them to her lips and sucked them clean before going back for a second load. This time, she scooped out a lot more and let it slowly dribble into her open mouth from her fingertips as I watched on, feeling this was going to be a very special night indeed.\n\nThe woman was utterly feral and by the time we finally succumbed to sleep as dawn broke, I had heard much more dirty talk from her, a lot of it in Hindi. She was the first woman to take me all the way in her mouth with ease. At one stage, as she lay on the edge of the bed with her head back, long hair trailing on the floor, she proudly pointed to the spot on her throat I had reached. It made me want to gag just looking at it, but it felt bloody marvellous. \n\nAround nine o'clock next morning, I woke to a fabulous sensation down below and when I pulled the single sheet from around my waist, she grinned up at me around my morning glory, her hair tangled around her face. She looked about eighteen and I thanked God I had asked her to dance and had my little indiscretion.\n\nI stroked her face. \"Erm, look Indira, there's a slight problem.\" \n\nIf it was possible to frown around someone's erect cock, then she managed it. I assumed the muffled words she tried to form were, \"What problem?\"\n\nI held up my wristwatch. \"I need to check out of my hotel by ten. I'm afraid that the company paid for a very expensive changing room for me last night. It's ok, it's only two hundred yards away. I'll be back before you know it.\"\n\nShe pulled me out of her mouth with a pop and slapped my wet erection down on my tummy, a sulky look on her face. \"Hurry back then. I've got a lot more plans for you before I leave tomorrow.\"\n\nI took her spare room card and was back within twenty minutes. When I returned, she was propped up on her pillows, legs wide apart, a huge black vibrator throbbing away between her legs. She looked up at me and shrugged. \"Your fault -- I got bored.\"",
        "She didn't stay bored for long and it was well after midday before we ventured outside and went to an amazing Southern Indian curry place she frequented when in town. It was vegetarian, and it was only then I recalled her having the veggie option the night before at dinner. \n\nThe food was sensational, the best vegetarian I'd ever had, and I mentioned it. She regarded me over her dhosa. \"I'm a good girl. I don't smoke, I only drink in moderation, and I never eat meat.\"\n\n\"Apart from at breakfast.\"\n\n\"I didn't technically eat it, but I gave it a lovely suck.\"\n\nI had to agree. \"You certainly did, Ms. Chandra.\"\n\nAs the meal came to a conclusion, I couldn't wait to race her back to the hotel, but when I suggested that it seemed she had other ideas.\n\n\"Hey -- I'm forty, you know. Need a little breather! How about a bottle of wine somewhere? Then maybe some dinner at the hotel later to refuel for a long, hard session. And at some stage, I will need to find a pharmacy as I'm afraid there is a bit of an emergency connected with our nocturnal activities.\"\n\nMy heart sank. Surely she didn't need a morning-after pill. \"Shit, if you'd said, I have condoms.\"\n\n\"Good, because you'll need them later where you're going. I never do ass without them. But I also need lube. I can do normal size ok up the back way, but that fucking thing? No way without something to oil the wheels.\" She took a final bite of food. \"Because, Mr. Big-dick, I haven't even started with you yet. I've been a sweet girl so far. Tonight, I get really rude and nasty!\"\n\nI felt like getting rude and nasty right away, but the lady wanted wine, so I found a nice little wine bar I had been to before in Shepherd Market and we settled in with a bottle of Merlot.\n\nSo far she had seemed reticent to talk about herself so I decided on a little gentle probing and asked what brought her to London.\n\n\"Oh, just meetings. The usual boring stuff. How the new office is going, what plans we have made for what is coming. Contingency plans, possible furloughs. You know - the boring shit we execs get wrapped up in. Nothing very exciting.\"\n\nFrom the look on her face, I guessed that wasn't half the story. When she gazed off over my shoulder in a thousand-yard stare, her eyes glazed over, I took her hand. \"Hey, everything ok?\"\n\n\"Yeah, fine.\"\n\nI wasn't convinced and I said so. There was a long silence, then it all came out in a rush.\n\n\"Sorry, sorry. It's just... oh fuck, James. It's why I was so shitty last night. Usually, I'm a party animal, but I got some bad news yesterday.\" She took a sip of wine and brushed away a tear. \"I was supposed to start a new job here in London soon, but it was decided at the board meeting to put it on hold with all the uncertainty at the moment. I was so looking forward to coming to work here. I was in New York for three years before I went back to Mumbai and let's just say I made a mistake going back. I jumped at the chance of the London job and now it's been taken from me. Not to put too fine a point on it, I am fucked off royally and I could cry my fucking eyes out, which is what I did most of yesterday. At least it was until I fucked my brains out, then I felt a bit better.\"\n\nI squeezed her hand. \"Oh shit, so sorry to hear that, Indira. Don't worry, it will only be temporary. Hang on in there and this will be over before we know it.\"\n\nShe sniffed back a tear. \"Thanks but don't try and bullshit me, James. Madeleine says hopefully just a few months.\" She closed her eyes. \"Yeah, like you fucking believe that Indira, eh?\" Her smile was a little lop-sided. \"Best think of something to cheer me up, hey?\"\n\nMy heart ached for her as I tapped at my phone for a moment and held it up, my task a success. \"Found you a chemist, if nothing else.\"\n\nAnd was I glad I found her that chemist? In the end, we skipped dinner and had another bottle of wine before we hightailed it back to room 714. I had never done anal before and she was a seasoned expert. I loved the way she slathered the lube liberally over my erection and her puckered hole. I helped her by slipping a finger inside and it whetted my appetite for the real thing. We took it gently as she got use to my size and the last few inches felt incredible as those beautiful firm buttocks pressed back against my hips. She was so tight I could barely move in her, and it was blissful to lie there buried in that hot, sticky, dark orifice as I squeezed her gorgeous breasts as she slid her vibe up the front way. \n\nShe craned her neck to kiss me and her words came out as little grunts. \"God, I fucking love d.p.! Been a long time!\"\n\nHer orgasm shook her body as I slowly upped the ante and her hand was a blur as she hammered home her vibrator, my left hand wrapped around her, fingering her fat little clit. Her mouth opened in a perfect 'O' and she let go of her vibe and buried her head deep into a pillow, her cries muffled, her slim body trembling in my arms.\n\nShe lay still for a moment then pulled off me, grinning. \"Think my first poo tomorrow may be uncomfortable! Right you -- on your back. I think I have a fitting reward for that very fine ass fuck and I'm going to show you just what a naughty girl I can be.\"\n\nIt was fifteen minutes of sheer, unadulterated bliss as her talented mouth got to work on me. Every time I got close, she took me down a little, teasing and nibbling before going feral again. After a few minutes, she picked up the tube she had availed herself of in the chemist and slathered it on her long forefinger.\n\n\"Not quite your size, but I'll still be gentle.\"\n\nIt was mind-blowing to feel her sticky finger wriggle up inside me as her mouth closed over me once more. Five more times she took me to the brink, tongue lapping, finger probing and finally I could take no more. She sensed it too and pulled me out, rubbing the head against her cheek, her tongue still flickering on the shaft. \n\nHer cries as I came were almost as loud as mine as a spurt of cum shot across her lovely face, followed quickly by a second. My final ejaculation was into her open mouth and despite having come so hard just moments before, her left hand went back down and her fingers went in deep. She held her wet fingers to my mouth and as she sucked me clean, I did the same to her.\n\nWith my cock still in her mouth, she held her phone up and took a selfie. Then she took me by the hand and walked over to the bedroom mirror, cum dripping from her chin. She then proceeded to give me a demonstration at her prowess in cum-swapping as she lapped and licked at her reflection in the mirror, her face to the glass, slurping and dribbling my jizz before she ensured every drop was swallowed. She promised me one day I would get to see her do it with another woman, not just her reflection.\n\nOnce more, by the time we fell asleep, I was utterly drained and in awe of this incredible woman who was simply the most complete, generous and giving lover I had ever known.\n\nShe was also the dirtiest, nastiest and foul-mouthed lover I'd ever had. To me, that all added up to sheer perfection.\n\nNext morning, we made tender love, a complete antithesis to the mayhem of the previous two nights. When it was time to go, we stood at the room door and she held her phone up to me. It was the selfie from the night before. Glazed lips made a perfect circle around the head of my cock, and the two parallel streaks of cum on her face ran from the corner of her mouth, across her prominent cheek bone. \n\n\"I wish I could let you have a copy. It will go in my private collection. Only special people go in there, James.\"\n\n\"I'm proud to be in there, Indira. And don't worry, that vision is now engraved on my soul.\"\n\nShe hugged me with such intensity, I could barely breathe. \"I'll contact you when I'm back and I'll wear my green saree, I promise.\" \n\nI had told her in the wine bar I had seen her promo pic on the website and thought the saree looked amazing.\n\n\"Can't wait.\" I helped her down to the waiting taxi and we hugged once more as the driver saw to her luggage. She got in the back and wound the window down.\n\n\"See you soon, yeah?\n\nAs the taxi whisked her away, we both knew that was a lie.\n\nI was halfway home on the bus when I burst out laughing. She may have cleaned all my mess from her face the previous night, but she forgot the mirror.\n\nTwo\n\nOnce home, my euphoria didn't last long as reality crashed back in and things got worse with each passing day. \n\nBack at the office, we began to make plans to work from home and in the last week before the first full lockdown, our evenings in the pub were tempered by the knowledge that there would not be many more.\n\nDespite knowing it was coming, we sat in stunned silence at 6 o'clock on Friday, 20th March 2020, as the announcement was made. Pubs and restaurants would close later that evening. We had a few hours left but no-one felt like going for it. After that, London became a ghost town and unfortunately, the chance of a repeat performance of my weekend of debauchery with Indira was reduced to zero. I never heard another peep from her and wondered if she really would have contacted me had the pandemic not precluded her from travelling.\n\nAs a single guy, my nocturnal activities returned to solo flights and it wasn't until the middle of the year when some restrictions were lifted, I was able to hook up again with a few friends with benefits for some no-strings fun. I managed to 'bubble up' with a girl in my neighbourhood named Laura. We'd had a brief fling a year or two before and it worked for us both and it felt nice to be back in the saddle. She was no Indira, but then again few women were. She hadn't exactly spoiled it for the rest, but she was a very hard act to follow.\n\nMy little reverie over, I glanced at my watch. Still an hour and a quarter until Madeleine's speech. I opened a couple of spreadsheets and pretended to be interested in them, but probably wasn't fooling anyone.\n\nThen I felt my phone vibrate in my pocket. They were not banned in the office, but we had to be discrete and ringtones were certainly frowned upon. I slipped it from my pocket and groaned silently as I saw the number was withheld.\n\nI walked out into the corridor and answered it with an air of reluctance. It would probably be a cold-caller, but even after all this time, if there was the remotest chance it was Indira Chandra, I wasn't prepared to risk missing her.\n\nAs always with an unknown number, I merely mumbled a disinterested 'hello.' The caller asked if she was speaking to Mr. James Mitchell and my heart almost stopped as I replied in the affirmative. One thing was certain - it wasn't Indira, but I knew that voice very well indeed and I was utterly stunned to hear it. She didn't have to say the next three words - I was already in no doubt as to who had called me.\n\n\"Madeleine Colton here.\"\n\nI barely knew how to respond. In real life, I had only ever seen her from a distance or in conference rooms. I couldn't believe that she knew anyone as far down the food chain as me. I tried to calm my nerves, my mind racing faster than my heart, wondering what the hell she wanted.\n\nAll things considered, I managed to construct a fairly coherent sentence. \"Oh, erm, hi Ms. Colton. A little unexpected if I may say so. How can I help you?\"\n\nHer warm Yorkshire accent was laced with barely concealed amusement. \"Don't sound so alarmed, Mr. Mitchell. I would be grateful if you could pop up to the Top Floor at two o'clock please? Just something I'd like to discuss with you if you don't mind.\"\n\nNow I was utterly flabbergasted. \"Erm, yes, ok. How do I-\"\n\nShe cut me off. \"You can only get up here using the elevator on the right of the bank of three. Don't worry, I'll be watching. Just step inside and you'll be whisked up here in no time. See you at two, Mr. Mitchell.\"\n\nThe line went dead and I went back to my desk in a state of shock, wondering if the story of me and Indira had finally reached her and I was about to be thrown out on my ear.\n\nI tried to recall how many times I had seen her. Maybe six or seven? And most of those were from the back of a room full of dozens or hundreds of people hanging on her every word. But I had also seen her on television and in newspapers countless times. On news bulletins, chat shows, reality programmes and morning tv. Her smile and soft accent made her compelling viewing and she could have recited her supermarket shopping list and still had people eating out of her hand.\n\nShe was in her early fifties but could have passed for late thirties. Her private life remained private but it was in the common domain that she had seen off two husbands along the way. Starting with the company aged eighteen, straight from school and with few qualifications, she took a business degree in her own time, got a first with honours and never looked back. Within five years she was running a section; within ten, a vice-president.\n\nWhen the company foundered in the late nineties, she became CEO and dragged it, kicking and screaming into the new Millennium. Now it was regularly on the FTSE 100 list and she was one of the richest women in the United Kingdom. She was not in the same wealth bracket as Bezos, Branson or Zuckerberg, but no-one in the company would have traded her for any of those three.\n\nThe list of letters after her name was longer than most alphabets, but the most important and impressive three letters were the first on that list. \n\nCBE\n\nThat meant that she was a Commander of the Most Excellent Order of the British Empire. There were few higher civil accolades, one being a Damehood, and if rumours were true it would not be long before we could call our CEO Dame Madeleine. Someone once worked out that she had more honorary degrees than our entire department of fifteen had real ones.\n\nThat was Madeleine Colton in a nutshell - and I just been summoned to her penthouse on the top floor.\n\nHell, it wasn't just the top floor. It was The Top Floor, in capital letters. That is always how it was referred to -- those three words always capitalised whether spoken or written.\n\nAnd in five minutes, I would take the elevator on the right of the bank of three and be welcomed into her inner sanctum.\n\nAt least I hoped I would be welcomed.\n\nAt five minutes to two, I walked out onto the mezzanine floor that overlooked the vast atrium and the reception area. It was a stunning sight, with waterfalls and living walls, sculptures and huge murals. I had missed it so much when working from home and it never failed to inspire me and make me proud to work for the company. \n\nExcept that day, I barely gave it a second look as I headed for the elevators at the end of the curved walkway. A few colleagues milled around waiting and I didn't want any awkward questions, so I leaned on the rail for a moment, looking down at the ground floor, still much quieter than before the pandemic, but getting back to normal.\n\nWhen all was clear, I summoned the car on the right and stepped inside with a confidence I didn't feel. There were no words of welcome, just a lurch in my stomach as the plexiglass car took off and I gazed at the rapidly retreating atrium as I was whisked into the stratosphere.\n\nI took a trembling breath as the door opened and found myself in a small, round vestibule with porthole windows on each side and an open door in front of me. \n\nAnd leaning on the door frame was the tall, elegant figure of Madeleine Colton, an enigmatic smile on her lips. I just had time to take in that she was wearing a dressing gown when she spoke.\n\n\"Good afternoon, Mr. Mitchell. Thank you for your prompt arrival. I do trust I have not dragged you away from any important work?\"\n\nHer soft, lilting voice immediately put me at ease. \"No, not at all Ms. Colton. Just counting down the minutes until your speech.\"\n\nShe narrowed her eyes and gave me a mock frown. \"Should you really be admitting that to your CEO, Mr. Mitchell?\"\n\nRealising she was toying with me, I decided to play along. \"Ah, sorry -- you are correct. I've just analysed some important data our CEO required for her address this afternoon. I have it with me.\"\n\nHer laugh was genuine. \"Nice try, Mr. Mitchell. Nice try. Oh well, at least you have a cover story for being up here! And don't look so worried. I am not about to fire you. I leave all that vulgar stuff to the lower floors. Now come inside, young man and find out why you are really here.\"\n\nCover story? Why I was really there? I followed her through the door with my head spinning. I was only five paces into the room when I stopped dead in my tracks. It was like nowhere I had ever been before. Semi-circular, with the straight wall to my right lined with racks of trophies and photos of Madeleine with the great and good of politics, industry and media. In pride of place in the centre was a huge picture of her receiving her CBE from Her Majesty the Queen at Buckingham Palace.\n\nThe curved wall afforded breath-taking views of South London away over Madeleine's shoulder, and to my left, the Thames as it snaked its way to the sea, winding around the southern edge of the Isle of Dogs before it passed the City Airport and Greenwich. To the south, the Crystal Palace transmitter was visible, a few hundred yards from my flat, and in the far distance, the Dartford Crossing was just discernible through the haze.\n\nAs I gazed in wonder, Madeleine cleared her throat. \"Erm, Mr. Mitchell -- impressive as it is, I didn't invite you up here to gawp at the view.\"\n\nI turned back to her and she leaned against the rear of a huge, carved wooden desk that housed flat screens and computer gear. I thought back to the tiny spare room I had worked in for over a year. I wouldn't have been able to fit that desk in my living room, never mind the spare room.\n\nAs I attempted to apologise, she cut me off and went on. \"Right, now I have your attention, time is of the essence and it is time to find out why I summoned you. It may seem a little strange to you, Mr. Mitchell, but despite my advanced years and my experience in these matters, I still get a little... stressed when I am about to give one of my speeches. Today is no different and in fact, given the length of time since I last spoke to a live audience, I am feeling more than a little apprehensive. That brings me neatly to why you are here.\"\n\nNow I was completely non-plussed. I tried to interject. \"I... I don't understand, Ms. Colton.\"\n\n\"Cast your mind back to the last meeting we had before lockdown, Mr. Mitchell. The one now referred to as 'The Park Lane Bash,' I believe?\" She didn't wait for any confirmation from me. \"Now a little bird tells me that at the end of said meeting, you entered into what can only be described as a 'meaningful relationship' with a senior member of staff from one of our overseas offices. Is that correct?\"\n\nOh shit. This was it. I was finally about to be reprimanded or worse for my weekend with Indira. I just hoped she wasn't in trouble too.\n\nI thought honesty was the only option. \"Yes. Ms. Chandra from the Mumbai office. I apologise if I overstepped any lines, Ms. Colton.\"\n\nShe held up a hand. \"I am not here to judge, Mr. Mitchell. It was, from what I gather, a rather steamy, prolonged and somewhat debauched tryst between two consenting adults. In fact, on her way to the airport in the taxi, Ms. Chandra eulogised to me about her two nights of bliss with a certain Mr. James Mitchell.\" Her hand slipped into her dressing gown pocket and she went on. \"You know how we executive types like pithy summaries. We like things distilled into as few words as possible so we don't waste time on the minutiae and just get the bigger picture.\"\n\nAs her hand withdrew from the pocket, there was a glint of blue cellophane between her fingers. \"So I pressed Ms. Chandra for an executive summary of you and I liked what I heard. The words she uttered to me are the reason you are here now. You are to be my stress relief ahead of my big keynote speech.\" A glance at her watch. \"In less than an hour from now. Would you like to hear those words, Mr. Mitchell?\"",
        "I could barely think straight but nodded my head. \"Yes, Ms. Colton.\"\n\n\"Ok, Ms. Chandra's words were, and I quote, 'Big cock, great fuck.'\" As her hand opened, I now saw that the blue cellophane square was a condom in its wrapper. \"So get over here, get this on and prove to me that you do indeed have a big cock and are a good fuck.\"\n\nAs I stood, rooted to the spot, unable to process what was going on, she pulled the cord of her dressing gown and it fell open, revealing a very tempting cleavage, a taut, flat stomach and a well-trimmed, black triangle of hair. It was clear that all she wore under that dressing gown were suspenders and stockings. \n\n\"Not bad for fifty-one, eh?\" A pat on her stomach. \"All needs a bit of work at my age, but I still pass muster, do I not, Mr. Mitchell.\"\n\n\"You do indeed, Ms. Colton. You are an extremely attractive and fit lady. It's just a bit of a shock to me, that's all.\"\n\n\"Forget I'm your CEO. If I came up to you in a pub or wine-bar and said I fancied the arse off you and wanted you to take me home and ravish me all night, how would you react?\"\n\nI didn't have to think. \"I'd take you home in a heartbeat.\"\n\nHer laugh broke the tension. \"Well I'm at home right now, daft lad. So get over here, get this Johnny on your big cock and give this extremely attractive and fit lady a right good seeing to. Come on, time's wasting here young man and I need de-stressing before my big moment.\"\n\nI took a few stumbling steps forward then stopped in sheer panic. She rolled her eyes heavenwards. \"Good God, does a girl have to do all the fucking work around here?\"\n\nAnd with that, she threw off her gown and knelt in front of me and began to tug on my belt. She gave an exasperated sigh. \"A belt -- a bloody belt. Who wears belts these days?\" \n\nWith the offending article unbuckled and my top button undone, she deftly unzipped me. A sharp yank on my waistband and my trousers were down around my ankles, taking my boxer shorts down with them at the same time. I did a double take as I felt my Chief Executive Officer's hot breath on my semi-erection.\n\nMy lack of erectness earned me a dismissive slap. \"Nice size, but not exactly fit for purpose like that, now is it?\" She held up the condom. \"Here, hold this and don't lose it or there'll be hell to pay. And one word of warning, dear boy -- don't touch my bloody hair -- Polly's been at it all morning and there's no time to get it right again.\"\n\nThat was a shame as I would have loved to have put my hands in her soft, short dark hair. It was always the same in any photo or tv appearance. Soft, teased peaks that framed her face in a halo, feathered into her neck at the back. Longer bangs hung down in front of her ears and there always seemed to be a stray lock that fell towards her right eye, which she frequently flicked back. It was flecked with subtle highlights and as with everything with Madeleine, it was understated, but so utterly right.\n\nHowever, I was rapidly discovering that not everything in Madeleine's world was understated. I let out a little groan as her mouth closed over the head of my cock and teeth nibbled and a long tongue flickered on my frenulum. Pale green eyes shone with lust and I shivered at the feel of her moist lips as they worked on me. \n\nI took a shuddering breath and gasped her name. \"Oh, Ms. Colton!\"\n\nShe took me from her mouth with a frown. \"I think we can do without the formalities, don't you? I'm sucking your bloody dick, James. Please, do call me Madeleine.\" The licking and sucking went on for maybe thirty seconds more, before an appreciative look at her handiwork. \"Well, young man, I seem to have done the trick. Bloody hell, I can't even get my hand around the damned thing. Oh, Indira Chandra, thank you darling, this really is a thing of beauty. Now James, I hope you haven't lost that piece of latex I gave you a moment ago.\"\n\nI handed it back to her. \"Kept it safe, Madeleine.\"\n\n\"Good lad.\" She tore the packet open with her teeth and expertly rolled it down over my now very erect cock. \"I normally like to feel it dripping from my chin onto my tits, but that's probably not a good look for a keynote speech is it, so needs must, eh?\"\n\nI held a hand down towards her and helped her up. \n\n\"Quite the gentleman!\" With that, she spun around, put her hands flat on her desk and bent over, legs splayed, showing off a pair of buttocks that any eighteen-year-old would be proud of. \n\nShe looked back at me over her shoulder. \"Come on then - I'm due on soon. Get that fucking thing inside me James, there's a good lad.\"\n\nI had to pinch myself it was all so surreal. Half an hour earlier, Madeleine Colton was an untouchable woman on a pedestal, so high above me, I could barely see her for the clouds. Now, I had her bent over her carved desk, her shapely bottom thrust towards me, demanding I service her. \n\nTo make matters worse, I wasn't sure if I could maintain my erection through sheer terror and I was on a very tight deadline.\n\nMadeleine must have sensed my discomfort and gave me a reassuring smile. \"Hey, don't fret it, James. I'm just a horny old Yorkshire lass in need of a good lay. Not that I'm laying down of course. You won't have to work too hard - I've been fiddling on and off down there all day, so I'm not far off being on a hair trigger. Your job is to pull that trigger for me, so be a good lad and do as your boss tells you.\"\n\nAs I had seen so many times in her media appearances, she just seemed to have a knack of saying the right thing. I shuffled forward awkwardly, trying not to trip on my trousers. Madeleine reached a hand back and held herself open for me as her right leg stretched upwards and outwards to lie along the length of her desk. The sight was utterly irresistible.\n\nThere was a moment of resistance, then I slid in halfway and she groaned and slapped her hands on the thick wood of the desk. I gripped her hips as she nodded her approval. I was tempted to go like a bull in a china shop she was so wet, but as was customary with my first time with a new lover - Indira an honourable exception - I held myself in check, allowing her to get used to my size. Strong muscles squeezed down on me and I slowly sank ever deeper into her slick wetness until my hips met her buttocks and was rewarded with a long, drawn out, satisfied sigh.\n\nEyes screwed tightly shut, she pushed back against me and I moved in and out slowly. Each time, she met my gentle but insistent thrusts with a grinding motion, her forehead now resting against the desktop. My hands slid up from her hips to her flanks as our movements became more urgent and her counterthrusts slapped her buttocks against my thighs. \n\nHer face was contorted as she spoke again. \"Tits. Squeeze. Oh fuck, James that is so fucking good. Come on, lad. Harder. Harder. Squeeze them fucking nipples till they pop.\"\n\nGetting so primal seemed to bring out her native accent more. As her words became more and more salacious and her Yorkshire burr more prominent, her fists drummed on the desktop and her voice rose an octave from her normally deep, rich tone. Her breath became ragged and the huge desk rocked under our onslaught. We slipped into a steady rhythm as her words urged me on. For five or so minutes, I lost myself in this strange new world I suddenly inhabited. I couldn't correlate the gutter language coming from her mouth with the urbane, easy manner of her speeches, but it sounded twice as good. I wondered how many other people in the company had been lucky enough to experience this other side of Madeleine Colton. \n\nWhen she went silent for a moment, her body tense in my grasp, I knew I couldn't last much longer, praying she was also close. No way did I want to leave her high and dry. Then her voice came back to me in a low whisper. The words sounded like they were being ripped from her one by one.\n\n\"Can't scream. Can't fucking scream.\" A finger waved around her head, presumably indicating the room we were in, each word coinciding with another thrust. \"Soundproofed, but... can't... fucking... scream. Got... a... fucking... speech... to... give.\"\n\nAs she achieved orgasm, a long, keening moan was torn from her and it was too much for me. I released into her as those muscles clamped hard down on me again, one fist hammering on the hard wood as her climax ripped through her.\n\n\"Don't stop, James. Gently, but keep going. Oh my fucking Lord, did I ever need that?\"\n\nI kept going, my now flaccid cock trying to keep the momentum, but I had to admit I was done and it was all I could do not to drag her to the floor and hold her in my arms until they ached. I couldn't believe a woman of her age could be so responsive, so utterly wanton and still so beautiful. I took a surreptitious glance over my shoulder at her wall of photographs, still in a state of shock that I had just made the central subject of them come hard over her own desk.\n\nSeeing me shake my head in disbelief, her voice sounded small and cracked. \"Look at them all, James. Household names to a man and woman, but none of the buggers made me feel like you did then.\" She straightened up, grinning. \"Well, maybe her in the middle - Her Majesty. That were pretty damned good but in a different way!\"\n\nMy efforts were rewarded with a huge hug. \"And you were pretty fucking good too, Jimmy lad! As they say up my way, 'Just what t'doctor ordered!'\"\n\nHer head rested on my shoulder for a moment and I put an arm around her. \"The lady in those photos was pretty fucking good too. She is hot as hell and most women half her age couldn't even come close.\" I held her tightly to me. \"That was an honour and a privilege, Ms. Madeleine Colton, CBE.\"\n\nA wistful look crossed her face. \"Sometimes I wish I had a simpler life. Just spend my days doing this instead of what comes next.\" There was a long pause and I felt as though something went unsaid. \"Bathroom's over there. Best clean up before you head back down.\"\n\nI leaned in to give her one last kiss, but a hand on my chest stopped me. \"Back off James. I'm just managing to hold on to a fraying thread of my professional persona here. Please don't make this harder than it is, eh?\"\n\nShe took a step back and pointed down at my trousers, still bunched around my ankles. \"Careful - trip hazard!\" Once again, she diffused the tension with a smile.\n\nLaughing, I reached down and regained my modesty. I was about to say something when she put her finger to her lips. \"Not a word, James. Not a fucking word, yeah? I don't fucking well trust myself. I haven't got the willpower. Bathroom - now!\"\n\nI nodded my understanding and beat a retreat still not fully comprehending what had just taken place. It had been scary, exhilarating and utterly weird, but I felt such a huge thrill that Madeleine Colton had not only come so hard, but was as genuinely moved by the experience as I was. \n\nWhen I emerged from the bathroom, her dressing gown was back in place. \"As I said, just what the Doctor ordered, Mr. Mitchell. Indira was right on both counts. You've made a happy lady very old. Or something like that!\"\n\n\"If I may be so forward, Ms. Colton, I doubt that you will ever be old, but I am sure you will always be happy.\"\n\n\"You are a fine young man, James. When Indira told me about you, I had my sights on you way back then.\" She hung her head. \"Just took a fucking eternity to get there. Bastard fucking virus.\"\n\nI put my hand on her chin and tilted her head towards me. \"But we got there Madeleine, and I am utterly proud and elated that we did.\"\n\nA long, deep breath shook her body. \"Fucking hell, what did we just do, James? I can count on your discretion, can't I?\"\n\nI took her face in my hands and cradled it gently. \"Madeleine, there is a photograph over there of a beautiful woman shaking hands with the Queen. I have just made love to that woman in a penthouse in Canary Wharf with a view to die for. She is fifty one years old and utterly sensational. I swear on everything I hold dear that I will take this to my grave and not tell a soul.\"\n\nTears welled up in her eyes. \"Thank you, James. I am about to give what I think is quite an uplifting speech, but you have lifted me higher than you could possibly know. I have known Indira for a long time -- and she is a very naughty lady but has impeccable tastes.\" She sounded quite wistful. \"Aye, it took a while, but we got there. Now, you probably think your work is done here, but it is really only just beginning. Hold out your right hand please.\"\n\nAfter the last thirty minutes I was ready for anything but didn't expect to find what looked like a small electronic key fob nestling on my upturned palm. There was a single button on the small disk. I looked at it with a puzzled expression.\n\n\"James, are you familiar with the name Deanna Kirschner?\"\n\nI felt I could say anything to her at that point. \"Only that she is the Director of Operations in North America and hot as hell.\"\n\n\"The very same lady. And I have no doubt that if she were to walk into this room right now and offered to do to you what we just did, you would pin her to my desk and go postal on her. Am I correct?\"\n\nIn answer, I grinned and snapped my head towards the door behind us as if in anticipation. I felt a gentle slap on my thigh. \"Don't get too cocky, Mr. Mitchell. Deanna is at home in New Jersey - mores the pity - otherwise you would be in for a rare treat. But since she's on the other side of the Atlantic, I'm afraid you will have to deputise for her during my speech.\"\n\nI held up the key fob again. \"I'm sure a CEO of your experience can change PowerPoint slides.\"\n\nI winced as I received another, sharper slap and one of her laser-like looks seared into me. \"Don't be a smart-arse, James. We've been getting along very nicely so far. Don't spoil it, young man. Put that button in your trouser pocket and let me finish.\"\n\nFirmly put back in my box, I remembered that this was, after all, my CEO. I did as I was bid, apologised and waited for her to go on.\n\n\"So, me and Deanna. Well, a few years ago, the lovely Ms. Kirschner laid down a little challenge to me as I was about to make a very important address to our peers in the industry. In short, she bet that I couldn't make said speech in my usual urbane and charming way if she was in control. The wager was ten thousand dollars. She tried fucking hard, but I won. We've done it dozens of times since and the money has always gone to the person making the speech and then to a charity of her choice. We are both immovable objects and have never beaten one another. This afternoon, you will be in control. You haven't a cat in hell's chance of winning if Deanna cannot, but the show must go on. She will be watching and rooting for you.\"\n\nI had to stop her. \"Madeleine, this has been a blast, but I have no idea what you want of me now. You're due on in thirty minutes. Sorry, but what the hell do you want me to do?\"\n\nMy CEO smiled and reached behind her onto her desk and held up a pair of frilly, lacy black panties. \"Nice, eh? Sexy. Foxy. Plain fucking horny. The choice of words is yours. Now, hold out your other mucky little paw.\"\n\nBewildered once more, I held out my left hand. She dangled the panties over my upturned palm by the thin cords so that the gusset just touched my skin. I shivered at the feel of them.\n\nHer green eyes bored into mine. \"Press the button, James.\"\n\nI still didn't get it. \"Sorry?\"\n\nMy ignorance was met by a roll of her eyes. \"All cock and no brain. Press the fucking button on the fucking thing in your fucking pocket, you fucking Muppet. You do know what a Muppet is, don't you?\"\n\n\"Erm, yeah. Fozzie was always my favourite.\" I pressed the button and jumped as a fierce vibration jolted across my palm. I looked at Madeleine as realisation dawned. \"Really?\"\n\nHer lips pursed. \"Yeah, really. The Madeleine Colton versus Deanna Kirschner vibrating panties challenge. Now in its third great year. Let me demonstrate properly.\"\n\nI watched on in awed silence as she slipped on the panties and stood up straight in front of me. She took hold of my left hand and held it to the soft, warm mound between her legs. The fabric of the panties felt sensational against her still damp skin.\n\n\"Button.\"\n\nI pressed it with my right thumb and she gasped as a jolt like an electric shock shot through her nether regions and across my palm.\n\nNostrils flared, she blew out air and stared at me once more. \"The penny drops. You are Deanna's surrogate. Whenever I change a slide during my presentation, give me a buzz. When I drop in a few fairly obvious keywords, give me a buzz. Give me a few random ones to keep me on my toes as well. There's a big bonus coming your way at the end of the month, any road up. So I'll make it a fucking massive one if you give me everything you've got, coz Deanna's going to be watching from afar and she'll know exactly when I've been zapped, even if thousands of other buggers haven't a fucking clue.\"\n\nShe walked back around her desk that only moments before had rocked beneath our joint endeavours. \"Now get yourself back downstairs and leave me to get ready, otherwise I'll be all over you like a bloody rash and I'll be late. Did I say I've got quite an uplifting speech to give?\"\n\n\"No, Ms. Colton, my apologies - I wouldn't have intruded had I known.\" Smiling, I walked back towards the door. I heard a distant, muffled squeal as I pressed the button just before I called the elevator. As I rode back down, just as I had hoped all those months before that I could do Indira Chandra justice, I now prayed I could live up to the expectations of Madeleine Colton, my CEO and Commander of the Most Excellent Order of the British Empire.\n\nThree\n\nI made sure I was first into the conference room. First in, last out. I needed to be tucked away discretely in the back corner where the devil had work for my idle hands. Mercifully, no-one I knew sat near me. As three o'clock approached, the hubbub of the room died down to be replaced by a hushed, anticipatory silence. A small dais and podium awaited Madeleine's arrival, with a large screen on each side. Three remote cameras on tripods faced the scene and behind me, a technician sat at a control desk to relay her every word and gesture to all corners of the world as she held us in the palm of her hand.\n\nThen I thought of what I had so recently held in the palm of my hand and fingered the remote control. I wondered if I had the courage to use it when the time came. After all, some of the gestures she made would be determined by my input.\n\nThat time wasn't long in coming. A door opened behind the dais and Madeleine Colton stepped up to the podium. Flashy power-dressing was not her style and she wore a simple, elegant red dress with a wide, black belt. It came to mid-thigh level and if anyone in the room wondered if she wore suspenders beneath that dress, only two people knew for certain.\n\nI got my first cue in her second line and of course, I missed it. \"Good afternoon, everyone. It gives me a real buzz to be back with you all today.\" When the real buzz she expected was not forthcoming, she tried again. \"Yes, a real buzz. It's great to be back.\"\n\nThis time I was ready and felt like someone interrupting a question on a TV quiz show as I pressed the button a split-second after her cue. She gave a little shiver. \"Got me all a-tingle it has!\" \n\nI made sure the tingle went from head to toe as I warmed to my task, safe in the knowledge that the thing actually worked and that I did indeed have the courage to use it. As the first slide after the company logo appeared, I gave her a little jolt and a few more random reminders during her opening statements. \n\nIt was on the third slide-change that something struck me - that lock of hair that fell across her brow every now and again. The way she flicked it back wasn't an affectation -- it was a distraction technique. Two more slides, two more flicks of the hair and I was convinced. I wondered if Deanna had any similar little foibles and looked forward to seeing her make an address sometime soon, knowing what I now knew.",
        "The next few minutes passed by in a similar vein and I dutifully pressed the button when the slides changed and watched intently for any reaction. When I didn't get one for a couple of slides I gave a longer press at the next change and was pleased to see the hair-flick replaced with a little cough into her hand as she glanced at the screen behind her.\n\nWhen she got to the serious stuff and remembered our fallen colleagues, I laid off. It only seemed right, although I could imagine dear old Angelo Visconti, once of the Rome office, looking down on proceedings with a knowing smile on his craggy face.\n\nAs she was in serious mode, Madeleine then announced the retirement of our Finance Director, Frank Watson. It came as a shock to us, but apparently it had been on the cards for a while. Handsome tribute was paid to his work in getting us through the dark days and leaving a plan in place that would ensure stability and growth over the months to come as the world ground back up through the gears. It had been hoped to introduce Frank's successor at the conference, but the still chaotic travel situation meant that flights had been delayed, so the unveiling would have to wait for a short while.\n\nAs Madeleine handed over to Frank to say his farewells, she took a step back and sat on a chair in the shadows behind one of the screens.\n\nIt was a perfect opportunity to give my thumb a really good workout. Anyone not paying attention to Frank - such as me - would have noted that Madeleine seemed fidgety and uncomfortable as she wriggled in her seat, looked around distractedly and sucked in her bottom lip. Her hair got a lot of attention and her hand covered her mouth on more than one occasion.\n\nI had no idea if she knew Morse Code and wasn't sure if I could remember it properly from my brief dalliance in the Sea Cadets, but I had a lot of fun in sending a little message in a series of long and short bursts. Whether the meaning got through or not, the vibrations certainly had an effect and her walk back to the podium as Frank took his well-earned applause lacked her usual poise.\n\nOver the next section, I mixed it up a little, during what most people thought of as 'the boring bit in the middle'. The 'how we did last year' section, followed by projections for the rest of the post-pandemic year. Madeleine used Frank's figures and occasionally brought him back in to explain some of the finer points.\n\nI kept her guessing over this period and at one stage kept her in denial for a good five minutes. I even ignored her when she said 'buzzword' twice in a few sentences before giving her a prolonged blast as she went on about Quarter Four figures. Those were punctuated by a few more flicks of her hair, discrete coughs and an apology at the conclusion about the unexpected tickle in her throat. That earned her a ten second onslaught that made her stop and take a sip of water.\n\nAfter a few more minutes of levity and a few more brief jolts from my new toy, she became serious again as the finale approached. \"So, dear friends and colleagues. It looks like we are finally about to emerge from this tunnel we have found ourselves trapped in for so long. Sometimes it seemed that there was no light at the end of it -- not even an on-coming train. That was because we had to dig our way out of that tunnel - often with our bare hands. But we are at the end of that tunnel now and better days lie ahead. All we need now is to build a final, short ladder and emerge again into the sunlight.\"\n\nAs she guided us towards the sun with her words, I tapped out little staccato patterns and was delighted to see her speech punctuated with nods of her head and a few little taps on her lectern as she shuffled her feet uncomfortably.\n\nIn conclusion, she held her hands out to those of us present and the many watching the feed around the world. \"I can feel the positivity, the buzz and the vibes.\" My thumb pressed hard and I held it there as her voice rose. \"So I invite you all to come with me on a new chapter in our lives.\" \n\nThat little message needed no decoding at all. Her orgasm was getting ever closer and it was confirmed as she leaned on her lectern, eyes wide and shining. \"Yes, come with me. The future is looking very bright indeed!\"\n\nAs applause rang out, mixed with a few cheers, I imagined my thumb going white. I didn't have to imagine Madeleine's knuckles whitening as I could see them clearly as her hands gripped the edges of the lectern, her face radiant, her short hair swirling as she nodded appreciatively at the response she had garnered. That bang of hair hung down across her brow once more and I hoped my little onslaught had something to do with it.\n\nJust when my thumb felt as though it would pop out of the socket, she gave a huge, racking sigh and shivered. \"Ooh, it gives me goosebumps to think about what we can achieve when we all come together!\"\n\nAs the applause ratcheted up another level, I kept going as she practically bounced on the spot. At last she held up a hand with a huge grin on her face, and I was certain her slightly breathless words were directed at one person in particular. The man at the back with the button in his pocket. \n\n\"Ok, ok -- enough already, don't overdo it! Thank you for listening, but I'm sure you are all dying to get to the champagne next door. It's been too long since we did this, so let's enjoy it and let our hair down a little.\"\n\nAs I let the disc fall back into my pocket, she gave another little shiver. \"After the last few months, I think we all bloody well deserve it!\"\n\nThe assembled throng began to move but Madeleine held her hands up once more. \"Sorry, just one more thing before you go wild. I don't usually single out any one individual for praise, but I had a few problems with my last minute preparations for this afternoon and a colleague of ours helped me out. So I'd just like to thank James Mitchell for his assistance. He rose to the challenge, pressed a few buttons and got me up and running again.\" She gazed around the room. \"So thanks for that little bit of alchemy James, wherever you are!\"\n\nI reddened and froze as a mild smattering of applause rang out and gave one last squeeze on the button. The woman next to me stood with a big smile on her face. \"Good to see Madeleine back and on form, eh? She seemed really pumped!\"\n\nI nodded. \"Yeah -- quite an uplifting speech, wasn't it?\"\n\nThe guy next to her agreed. \"Great speech, remarkable lady!\"\n\nAs the crowd filed out past her podium, she had a word for everyone. I made sure I was at the back of the queue down the central aisle and as we shuffled forward, I pressed the button every few feet. As the woman who had spoken to me gushed to Madeleine about her inspirational words, I held back as she was the last person left in the room. \n\nMadeleine thanked her and followed her to the door, closing it behind her. She returned to her podium and bent down to look at the floor. \"Just checking for leakage.\" She straightened up and looked at me. \"How did I do?\"\n\n\"As someone said earlier, quite an uplifting speech.\"\n\nHer hand slid across my groin. \"Hmm, seems it was. Certainly got my juices flowing. Oh, and button please.\"\n\nI scowled and held it towards her. \"Can't I keep it?\"\n\nShe snatched it from me and kept her voice low. \"I think you ran the fucking battery down. When I switch my phone on again, it's going to go off like the New Year fireworks. I can see Deanna tapping away as we speak. Oh, and just apropos of nothing - when Frank was up front, you didn't by any chance send me a little coded message, did you?\"\n\nI shook my head innocently. \"No, just a few random taps to keep you interested.\"\n\n\"Yeah, right.\" Her expression told me it was anything but right as she un-muted her phone. Sure enough a call came in immediately and her face lit up as she took it. \"Hi, Deanna. Yes, went well didn't it? Glad you enjoyed it. Can you just hold a second please?\"\n\nHer thumb covered the mic and she touched me on the arm. \"Great work, James. Thanks for your valuable input. Big bonus coming your way. Got to take this, so go and enjoy yourself.\"\n\nI made for the door and stopped dead in my tracks as I heard my name once more. I turned to face a sardonic gaze. \"That message. If I'm not mistaken, it was along the lines of, 'I want to fuck you until you scream.' I was a Girl Guide, James. I never thought Morse Code could be useful... until today. Six o'clock. Same place. I'll scream my fucking lungs out for you.\" \n\nThe phone went back to her ear. \"Sorry Dee, just arranging a bonus meeting for a member of staff.\" A dismissive wave of her hand told me I was done - at least until six o'clock.\n\nI usually go at champagne as if they are about to introduce prohibition. On this occasion, I limited myself. Whatever Madeleine Colton had in store for me next, I needed to have all my faculties intact. I was barely aware of any of the excited chatter and as soon as I could, I made my excuses and went back to my desk. As I did, Madeleine was schmoozing the room and I shivered as I recalled the things we had done in the last ninety minutes.\n\nThen I thought about what may happen after six o'clock and shivered even more.\n\nFor the third time that day, time dragged. At five-thirty Shaun Price and Lee Frazer stuck their heads around the door. They were already clearly a little the worse for wear. Lee pointed at me. \"There he is -- the little creep's still working!\"\n\nShaun shook his head. \"Bit of praise from Madeleine and he's suddenly teacher's pet. Come on Mitch, you bitched about the pubs being closed for months. Got news pal, it's Friday, they're open again and there's a pint of Pride with your name on it down at the Cat and Canary. So get your skates on.\"\n\nI looked up. \"Sorry, lads, not tonight. Busy weekend coming up, so I'll give it a miss for once.\"\n\nLee looked at me in disgust. \"You've forgotten how to enjoy yourself, Mitch. Come on, Shaun -- I'll have his pint for him. See you Monday, you boring bugger!\"\n\nI smiled as they left. I hadn't forgotten how to enjoy myself. I was just beginning to remember.\n\nFour\n\nShe was in the same position as earlier, leaning on the door frame, but this time there was a glass of red wine in her hand. She stood back and waved me in. \"I'll even give you time to admire the view this time!\"\n\nI took the proffered wine glass and held it up to her. \"Only one view I'm interested in seeing. Thank you for having me back.\"\n\nWe touched glasses and drank. I was no wine expert but this was clearly top-drawer stuff. Taking me by the arm, she walked me towards the window. \"We have unfinished business, James. You whetted my appetite and now I intend to sate it at my leisure.\" Before I could respond, she pointed out across south and east London. \"Quite the view, eh?\"\n\n\"It certainly is.\" I pointed to the Crystal Palace transmitter. \"My flat is just around the corner from there. You could fit it three times over into this room alone.\"\n\nHer sigh was heartfelt. \"At least you have a home. I have here and a few more places like it around the world, but I've not seen them for a while. Not sure I know where home is these days. Probably my little farmhouse up in the Yorkshire Dales, but I don't get up there much either.\"\n\nI looked at her in astonishment and she smiled ruefully. \"Believe it or not, it can get a bit lonely up here in this rarefied atmosphere. Especially once this shit storm started blowing. I know we've all been clobbered by it, but it really has torn me up not being able to do the things I took for granted, like this afternoon.\" She paused for a moment. \"Sorry, I'm sounding off again like earlier, eh? I love it really, but sometimes... ah well, that's not your concern.\"\n\nHer face suddenly brightened. \"Oh, by the way, Deanna was most impressed. Apparently New York were in raptures about how animated I was.\" She nudged me. \"Wonder why that was, eh?\"\n\nI bowed. \"Glad to have been of assistance, Ma'am.\" I looked around the room. \"Can't say I'd feel lonely in a place like this. I mean, that wall of photos... it's just amazing.\"\n\nHer arm wound around my waist as she turned to look at it. \"Not bad for a Yorkshire lass, is it? My little vanity wall. It's nice, but it's all just icing on the cake. I live for the day-to-day. The interactions with real people, not bloody endless Zoom sessions or awards. Like being in the same room as everyone this afternoon. That's where I come alive, James, and I've missed it loads.\"\n\nThen she put her head on my shoulder and gave me a coquettish little smile. \"There's somewhere else I come alive. The view is much better too. Want to come and see for yourself?\"\n\nShe took me by the hand and led me towards a door in the middle of her vanity wall. It opened onto a room only slightly smaller than the one we were in. It was dominated by a bed so large it should have its own post code. There was a huge television screen built into the base board and various things strewn across the black sheets, but I couldn't make them out in the semi-darkness.\n\nAs I stared at it, Madeleine steered me away. \"Soon, Tiger, soon!\"\n\nThe room was dark as most of the blinds were drawn against the strong evening sun as it slanted in from the south west. We crossed to the one window that was left unshaded, near the head of the bed, and I gasped as I saw the city laid out in front of me as though I were looking at my own private Google Earth. The rest of the Isle of Dogs lay below us and the Thames glinted in the sun as it wound its way past Limehouse and Bermondsey, towards Tower Bridge and beyond.\n\nMadeleine gave a rueful little laugh. \"This place does have its advantages, I suppose.\" She gripped my arm. \"It's all coming back to life, James. That big, dirty, magnificent old town is coming back to life. We're out of that tunnel I spoke about earlier.\" Her slim body trembled a little. \"Been strange watching it these last few months -- all lit up but nowhere to go. Good to see it back, eh?\"\n\nThen, as she had done earlier, she sank to her knees and put her wine glass on the floor. \"And good to see you back, James. We have all the time we need, so let's take it nice and slow, eh? So while you enjoy the view, let me just get reacquainted with that little bad boy I accidentally found in your trousers this lunchtime.\"\n\nShe grinned up at me as she unzipped me once more. \"Oh, and you can mess my hair up if you like. In fact you can mess up any part of me. I've got nothing planned this weekend. Have you?\"\n\nThis time, I kicked off my shoes and stepped out of my trousers when she tugged them down around my ankles and I was fully erect by the time she took me in her hand. I put my hand in that soft, velvety hair and let out a long, satisfied sigh as she took me in her mouth once more. I took a sip of expensive wine, gazed at the incredible view and my heart sang as this beautiful, enigmatic woman almost twice my age did amazing things to me with her hands and mouth.\n\nAs her trademark lock of hair fell down towards her eye, I flicked it back up for her and gave her a little smile. \"I know why that's there now!\"\n\n\"Always been there. It just took on another lease of life when Dee and I started our little games!\"\n\nShe purred as she worked, occasionally taking sips of wine and I sucked in breath at the sting of it as she let it dribble down my shaft, before licking it off. I longed to reciprocate and she seemed to sense it, as her fingers dug under the hem of her red dress and held them up to me, glistening in the single shaft of sunlight. I sucked on them greedily, relishing her musky taste and couldn't wait for her thighs to close around me as I lapped at her.\n\nThen as she licked and sucked, she yelled out as if in anguish and her whole body shook. It went on for long seconds and she broke away from her work and leaned back gasping. She looked up at me, her green eyes blazing. \"Those fucking electric panties. Do they never fucking well stop?\"\n\nI almost spilled my wine in shock. For safety, I put it on a window ledge and held my hands up to her. \"Not me. I gave you the button back downstairs, remember.\" I had done some research on her little toy back at my desk and now knew what such things were capable of. \"Maybe Deanna - using a phone app?\"\n\n\"No, these are purely short distance. Wouldn't trust her with the Bluetooth variety. How the hell did it just go off like that on its own?\" \n\nThen she put her hand to her forehead as it dawned on her. \"Oh, of course. It was that new bloody Finance Director. Very rude lady. What's her name again?\"\n\nMy heart leapt as I heard a sultry voice from behind me. \"Indira Chandra perchance? Is she the naughty new Finance Director you had in mind?\"\n\nI turned to see a figure in the shadows at the end of the bed. She stepped forward into the light and her hair was piled up on her head in an elaborate swirl, and it shone in that single shaft that now lit up her smiling, radiant face. She wore a deep green saree and my heart almost stopped as she walked slowly towards us.\n\n\"Good evening James. I told you I'd see you the next time I was in London, and I'm a woman of my word. It just took a little longer than expected.\" She threw the remote control onto the bed and I now realised that the objects I had seen earlier were sex toys of all shapes and sizes. She ran a hand down the sleeve of her saree. \"I even remembered this for you.\"\n\nI caught my breath. \"Ms. Chandra, you look amazing. It's been too long. Believe me, it's great to see you again.\"\n\nShe nodded. \"You too, James. I missed that big cock of yours. But at last, tonight you get to see me share your cum properly!\" \n\nOh, how I had missed that clipped, slightly staccato accent so much, especially when she talked dirty.\n\nA hand reached up in a sinuous movement and pulled a clip from her hair. It tumbled down around her face and shoulders in a silky black cascade as she shook her head from side to side.\n\nA quiet, husky whisper came from down below. \"Oh, fuck me sideways. How much have I missed that? Fucking gets me every time.\"\n\nI stroked Madeleine's hair. \"Me too!\"\n\nIndira knelt next to Madeleine and put an arm around her. \"Please can I claim my finder's fee now, boss-lady?\"\n\n\"Be my guest. I think there's enough for both of us.\"\n\nI was glad I had dispensed with my glass as two tongues began a slow ascent up my shaft, wriggling, licking, teasing in perfect harmony before closing over the head in a long, greedy kiss that left me reeling with the sheer beauty of the most erotic sight I had ever witnessed. They went on for an age, lips and tongues working on each other and my erection. Their saliva dribbled down my length and they sucked it back up before letting it run down me once more. It was the most blissful five minutes I could imagine and surpassed anything I had done with Indira the previous year, stellar as that was.\n\nAt last, they both stood and Madeleine moved away. Indira took me in her arms and I shivered once more at the feel of the soft silk of her saree beneath my fingers. Those full lips met mine and she pressed my erection hard against her tummy.\n\nShe turned to Madeleine. \"Imagine he has trousers on and the band are playing something soppy. Then you've pretty much got the idea of how we got here!\" She then walked me back three paces and put her hand on my chest. As she had done back in room 714 so long ago, she pushed hard. This time, there was no door behind me to break my fall and I tumbled onto the bed with her following soon after and we fell into a crumpled heap as she giggled like a schoolgirl.\n\nMadeleine placed a chair next to the bed and picked up something I couldn't identify in the half-light. She smiled down at us. \"Well, children -- I have already come twice today thanks to Mr. Mitchell here, so I will leave you a little time to get reacquainted before I re-join the action. James, between us, Ms. Chandra and I are going to suck you dry this evening and leave you a drained husk. Then we are going to do it again tomorrow and we are going to make your Park Lane weekend of debauchery look like a teddy-bears picnic.\"",
        "As she tapped the thing on her other hand, I now saw what it was - a very long, very shiny, double-ended black strap-on. The fingers of Indira's left hand traced very pleasant patterns on my erection as our CEO went on, her own fingers mimicking the Indian woman's actions on the phallus.\n\n\"And while we wait for you to rest and recover, we will put on such a show for you, young James. You will never watch porn again without thinking that they were not as good as Madeleine and Indira. We too are making up for lost time, so I assure you, it will be quite compelling viewing!\"\n\nHer head inclined towards the headboard of the bed above me. \"Oh, and it will be all the more fun when you are trussed up like an oven-ready chicken and we cavort inches from your face. Oh the sounds and the smells, James!\"\n\nI glanced up and now saw that the headboard was festooned with straps, handcuffs and restraints of all kinds and my heart skipped a beat.\n\nMadeleine then hoisted up the skirt of her dress around her waist and sat down on the chair. \"But before that, you two can put a show on for me. After all, I love watching my staff work hard, especially when it involves inter-office and inter-racial relations. So if you'd be so kind, Indira -- I'll start with that nice long pink one behind you.\"\n\nIndira reached out and picked up the pink vibrator Madeleine had requested and held it to my mouth. \"Lubricate it for the lady please!\"\n\nI sucked on it for a moment before Indira threw it to Madeleine who caught it deftly. She inserted the tip and her outer lips parted as it slid effortlessly inside. \n\nA long forefinger pointed in our direction. \"Right, get to work you two. One of you has a bonus to earn and the other a finder's fee to collect. Leave nothing out there kids; give it your all as you fuck and suck. Let's hear plenty of moaning and groaning and don't forget that dirty talk you specialise in, Indi-babes. Oh, and at the end, let's see that cum really fly. I want her well and truly coated, Mr. Mitchell. Face, tits, pussy, everywhere. I want to lick it all off that lovely soft brown skin and feed it back to her. So come on, what are you waiting for? Entertain me!\"\n\nAs Indira went down on me like a woman possessed, Madeleine turned the knob at the end of her vibrator and slid it all the way home. She sighed deeply. \"Bloody hell -- I've done it again!\"\n\nIndira raised her head. \"Done what?\"\n\nMadeleine's eyes burned with lust and desire as the thing buzzed inside her. \"Well Ms. Chandra - judging by the aroused state of my new Finance Director and Mr. Mitchell there, for the second time today it would seem that I have made quite an uplifting speech!\""
    ],
    "authorname": "BarracudaSwordfish",
    "tags": [
        "british",
        "indian",
        "workplace",
        "older woman",
        "younger man",
        "pandemic",
        "covid",
        "young/old",
        "vibrating panties",
        "interracial"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/quite-an-uplifting-speech"
}