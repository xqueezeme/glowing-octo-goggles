{
    "title": "My Secret Service Ch. 06",
    "pages": [
        "I jumped in the shower when I got home, washing the remnants of my night away.\n\nI started a pot of coffee, but when I sat down on the couch to wait for it to brew, my long night caught up with me and soon I was asleep under a warm blanket in my living room.\n\nI don't know how long I had been napping, when a knock at the backdoor rousted me.\n\nIt was Jen. She was wearing a pair of black yoga pants that framed her ass spectacularly, and a T-shirt that was at least a size too small for her breasts. It was about as sexual as an outfit good enough to wear the grocery store could look.\n\n\"I've been calling you for two hours,\" she said. \"Why didn't you answer? Is Missy here?\"\n\n\"What? No. I was taking a nap,\" I replied.\n\nJen glanced over the still-hot pot of coffee on the counter. I took the hint and offered her a cup.\n\nWe took our coffee to the living room and curled up on opposite end of my couch. With Jen's legs tucked up around her, I could see the tight material stretch across her crotch. I gripped my cup of coffee tightly and resisted the urge to dive between her legs.\n\n\"Did you fuck her?\" she asked.\n\n\"What? No 'thanks for coming last night,'\" I said, \"you are just going to jump into it?\"\n\n\"You are avoiding the question.\"\n\n\"I was a perfect gentleman,\" I lied. \"I walked her to her car, just like you asked. We had a lovely chat on the way and in the parking garage. That's all.\"\n\nJen looked amused. I couldn't tell if it was because she knew I was lying or if she knew something I didn't, or even if she was just relieved I hadn't fucked her husband's secretary.\n\n\"So no making out, pushed up her car? You didn't grab her ass or try to touch those big ol' titties?\"\n\n\"No. And I don't think she wanted me to,\" I lied, again. \"But I'm not great a picking up on subtle hints from women, either. You know that.\"\n\n\"That's too bad,\" Jen said. \"I'm sure you took notice of those tits in that dress last night. How could you not?\"\n\n\"They are something. I thought it was less a dress and more a marvel of modern engineering.\"\n\nI noticed Jen had let one of her hands fall into her lap as we talked. It was dangerously close to her crotch, and for a minute I had this vision of her putting her hands inside her yoga pants and touching herself while thinking of Missy. My dick started to stir, covered only by the thin running shorts I'd thrown on after my shower. I tried to sit so my half-hard dick wasn't completely obvious.\n\n\"It's OK if you fuck her, you know. I won't be mad.\"\n\n\"What about Jim?\" I asked. \"I assume he wouldn't like that too much.\"\n\n\"He did tell her that clients were off limits when he hired her,\" Jen said. \"I know that more than a few of his clients have done everything but beg her to go out on a date.\"\n\n\"Do you ever worry that Jim might be interested in her?\" I asked.\n\n\"I've never worried about him sleeping with someone else,\" she said. \"He gets all the pussy he wants at home. But I can't blame him for looking. Can you imagine having those titties rubbed in your face? I mean, wow.\"\n\nI was struck by another vision, this time of Missy and Jen rolling around in bed together, just as Missy wanted. My dick didn't stay at half mast any longer, tenting my shorts even as I tried to contain it.\n\nNeither Jen or I said anything for a moment, lost in our own thoughts, until Jen set her empty cup on an end table.\n\n\"So, will you eat my pussy, even if it isn't full of my husband's cum? All this talk has got me worked up.\"\n\nI was struck by the similarity to the question Missy had asked not 12 hours before. I nodded my consent.\n\n\"Get on the floor,\" she said.\n\nI did as I was told, my dick pushing against the material of my shorts.\n\n\"I see I'm not the only one turned on,\" Jen said, as she squatted over my face. \"I bet you can't wait to jerk that hard cock, can you?\"\n\n\"I have other things to attend to first,\" I said as she started to rub her still clothed crotch across my face.\n\n\"You are damn right you do.\"\n\nI could smell her arousal through her yoga pants and feel the warmth of her sex. \n\nShe pushed down onto my face, grinding her pussy on my face. I let her do all the work. If Jen wanted to fuck my face, even with her pants still on, I was happy to let her.\n\nI'm not sure if it was her making her pants damp from the inside, or me wetting them from the outside when I tried to push my tongue through the fabric, but soon she was soaked. Jen abruptly stood, pulling off her shirt to reveal the same black bra that she'd worn that night in the hot tub.\n\nI tried to be subservient to her, but I couldn't wait. I got to my knees, pulled her pants and panties \u2014 a tiny black lace g-string \u2014 past her knees and pushed her back onto the couch.\n\nI grabbed her calves and pushed them over her legs up over her head, framing her exposed snatch, wet and open, between her thighs.\n\nI literally dove into her crotch, burying my face in her pussy. Creampie or no, I loved eating her out.\n\nJen moaned as my tongue flicked across her clit. But I wasn't ready to push her toward orgasm just yet.\n\nI trailed my tongue down her slit, letting in slip inside her pussy before I zeroed in on her ass.\n\nI pushed against her rosebud, licking and probing her backdoor as he gasped and writhed beneath me. \n\n\"Ooooh. Yeah. That's it,\" Jen moaned. \"Eat that ass.\"\n\nI kept work her tight hole, licking and kissing and sucking, until my tongue began to slip inside her. Jen was moaning and cooing and enjoying every minute of it. \n\nUntil her phone started ringing. \n\n\"That's Jim,\" she said, pushing me away and rolling toward her phone, which was laying on the end table.. \"I better get it.\"\n\nI sat on the floor, not 18 inches from her sex, as she lay on her stomach and talked to her husband.\n\n\"How was your round?\" she asked. \"Are you headed home?\"\n\nAs she listened, she pulled her knees toward her belly and sat up. \n\n\"No, I just left,\" she said. \"I've got some shopping to do, and there's a sale at the lingerie store at the mall that I want to check out. I won't be home for a few hours.\"\n\nShe finished the call and looked back at me, still on the floor.\n\n\"We gotta hurry up. Jim is leaving the golf course and will be home in 20 minutes. I need to be gone by then.\"\n\nWe wiggled around until I was on the couch below her. I think we were both wishing she'd taken her shoes and pants completely off, but there was no time for that now. \n\nShe settled back onto my face and I immediately locked my lips around her clit, sucking gently. I slipped two fingers into her pussy.\n\n\"That's it. Make me cum.\" she gasped. \"Make me cum. Make me cum. Make me ... oh, shit. Oh, shit. I'm cummmmmmmmming.\"\n\nJen ground her sex onto my face as her orgasm rocked her body. Her hands grabbed my head and pulled me tight against her pussy, so tightly I thought I might lose consciousness. \n\nIt was awesome.\n\nShe didn't enjoy it very long before jumping up and trying to pull herself together.\n\n\"I gotta go,\" she said. \"Thanks for the orgasm. Even if I have to go home and change my pants.\"\n\n\"It was my pleasure,\" I replied.\n\n\"You should pursue Missy if you are interested,\" she said. \"And don't worry about Jim. I'll run interference if he finds out.\"\n\nShe breezed out my back door toward her house. I don't think she'd been gone more than 5 minutes, when I got a text from Jim: \"Almost home. Wanna come over?\"\n\nSure, I replied.\n\n\"Come on. I'm going to jump in the shower.\"\n\nI changed my shorts, which were sticky with precum from my session with his wife, but not before slipping on a pair of pink lace thong panties. My cock was still sticky, and my new underwear clung to them as I pulled them up. I loved the sensation.\n\nJim was just coming down the stairs, wrapped only in a towel, as I let myself in. \n\n\"Let's go downstairs to the media room,\" he said, and I followed.\n\nJim dropped his towel, and sat naked on a oversized loveseat in front of a massive screen. He reached for a remote and ESPN came up on the screen.\n\nI didn't need to be asked. I dropped my shorts and shirt, leaving only my pretty pink panties on my body.\n\n\"Nice,\" Jim said, spreading his legs, an erection growing between them. \n\nI dropped to my knees and licked his growing shaft. \n\n\"Jen is gone shopping for a few hours, so we can take our time today,\" he said. \n\nI responded by taking his cock head into my mouth and flicking my tongue along the underside, while gently sucking.\n\n\"That's good,\" Jim said, his hand cupping the back of my head.\n\nI let his cock slip farther into my mouth, enjoying the sensation as his dick pushed against the back of my throat. I started to work his dick in and out, as the taste of his precum started to build, replacing the remnants of his wife's pussy in my mouth. \n\nIt wasn't long before Jim pushed me away.\n\n\"I need a break,\" he said. \"I don't want to come yet.\"\n\nI spent a few minutes kissing his balls, with the occasional lick up his shaft.\n\n\"So, did my secretary let you into her panties last night?\" he asked.\n\nI continued to lick at his dick.\n\n\"No,\" I lied, just as I had to his wife. \"I walked her to her car, went home, and jerked off.\"\n\n\"You can fuck her if you want,\" Jim said, as I went back to taking his cock into my mouth. \"You can grab that big round ass and suck those giant titties, oooooohhhh, whatever you, or she, wants.\"\n\nI took him as deep into my throat as I could before letting all but the tip slip from my lips and then making the trip back down again.\n\nJim groaned his approval. \n\n\"Do you not find her attractive?\" he asked. \"You've not given up on women, have you?\"\n\nI shook my head, while trying to keep my cocksucking rhythm.\n\n\"Which is it?\" Jim asked.\n\nI popped off his dick.\n\n\"I haven't given up on women,\" I said. \"But I'm not sure she'd be interested in me.\"\n\n\"Give it a shot,\" he said. \"On one condition: If you get to see those titties up close and personal, you have to tell me all about it.\"\n\nI was already back on his dick, sucking away, so I just said 'uh-huh\" around his shaft.\n\n\"It's funny,\" Jim said. \"I've really wanted to fuck her. But I do love the way she shows off those boobs.\"\n\nI kept up my ministrations on his dick. \n\n\"To tell you the truth, I've had this fantasy about her, on her knees, as I jerked off all over her face and titties,\" he said. \"God, I'd love to see my cum all over them.\"\n\nJim's cock had swollen in my mouth, and I thought he might be close to an orgasm. But he pushed me away once more.\n\nBut I'd had enough playing around. I need his cum in my mouth.\n\nI pushed his dick into my mouth and sucked, working him quickly. Jim couldn't contain himself. He grabbed the back of my head, and pushed me deep onto his dick.\n\n\"You want my cum?\" He said. \"You want it? You want it? Ohhhh, shit, take it, take it. Swallow my dick.\"\n\nHis cock exploded in my mouth, filling it with his ejaculate. I swallowed hard, trying to keep up.\n\nI held on to his softening shaft, until he pushed me away. \n\n\"My, aren't we a little needy today?\" Jim said with a grin.\n\n\"I want what I want,\" I replied.\n\nWe settled onto the oversized couches and each zoned out while the TV played above us. Jim, I assumed, was basking in the glow of the orgasm I'd given him, while I was trying to figure out just what the hell was going on.\n\nWhy did Jim and Jen both want me to fuck Missy, but not tell the other? If I did tell one of them the truth, which one should it be? Or both?\n\nAnd, What did Missy want from me? I was doing all I could to juggle Jim and Jen's sexual needs, was I a fool to try and take on a third partner? Or was last night a one-time thing for her?\n\nI got my answer soon enough.\n\nMy phone vibrated with a text message. It was from Missy.\n\nI opened it casually, so as not to draw interest from Jim.\n\nIt was a photo, tightly cropped to only show a woman's crotch. Missy's crotch. The panties that covered her sex were pulled tight across the lips of her pussy, giving a teasing hint to what lay beneath.\n\n\"Be here at 8. Bring dinner. I've got our desert.\""
    ],
    "authorname": "HConway",
    "tags": [
        "oral sex",
        "bisexual male",
        "male oral",
        "panties",
        "bi",
        "bisexual",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-secret-service-ch-06"
}