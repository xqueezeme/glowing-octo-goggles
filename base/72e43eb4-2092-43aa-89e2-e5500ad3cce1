{
    "title": "Seven Days Ch. 09",
    "pages": [
        "Victoria was so tired, she could barely keep her eyes open. The trip from that hotel in the middle of nowhere where she had left her heart behind was a blur. She had slept most of the time while Antonio drove back. She slightly remembered him singing along to some rap song, but then she was out again. \n\nShe did however wake up right as Antonio was pulling up to some lavish hotel, and she vaguely remembered telling him to keep on driving until they reached something she could afford. A Motel 6 or something like that. But Antonio just laughed, insisting that Nic would kill him if he dropped her off at such a place, plus she didn't have her purse with her. And now that she had physically seen Nic kill a man, maybe Antonio had a point. The valet who took their car gave her a once-over. She was sure she looked ridiculous. She was half out of it, and was wearing a silly t-shirt with no bra. But luckily they had stopped by her apartment, and she had quickly gathered some extra clothes with her eyes half shut. \n\nWhen they walked through the hotel room doors, she thanked Antonio and tried to march straight to bed, but he grabbed her hand.\n\n\"Wait a second, princess. I need to talk to you.\"\n\n\"Oh, Antonio, please, please, can it wait until tomorrow. I don't even know what I'm saying right now, I'm so tired.\"\n\n\"I know, but Nic said I need to get what's in your head now, while it's still fresh. Then you can go to sleep, okay? Now did those guys say anything, anything at all?\"\n\nVictoria plopped down on the couch and rested her head in her hands, covering her eyes. She really didn't want to think about anything from earlier that day. The whole ride back she had been trying to block it out of her mind. \n\nShe started relaying the details to Antonio as she remembered them. Once she was done, she walked to the bedroom and dropped onto the bed. \n\nAntonio sat down on the couch. He was about to turn the TV on when he heard Victoria yell something. He hopped up and walked to the bedroom door.\n\n\"What was that princess?\" \n\n\"T-Tell Nic I'll pay him back for everything and mmph frog nop tim,\" she said, with her face buried into the pillow. Antonio laughed when the rest of her train of thought turned even more unintelligible and then he heard a snore.\n\n\"He'd rather have you back than the money, Vicky,\" Antonio whispered before he left the room.\n\n*******************\n\nNic didn't sleep after Victoria left the hotel. And instead of staying the night, he woke Jimmy, Raymond and Damon up, telling them he wanted to head back into town immediately. They all agreed, realizing that there was a real chance that Victoria still wasn't out of danger.\n\nAfter they dropped Damon off at his car, the rest headed back over to Nic's place, and then Jimmy went home, praying Isabelle wouldn't kill him. \n\nNic had asked Antonio to check in with him every hour, and so far Victoria was still asleep.\n\n\"Hey Nic, I\u2014I don't know what the hell all this means, but Vicky--Victoria told me that the kidnappers thought she was a banker's wife. And that they had a photo of her working at Calamity's and they were talking to someone else on the phone...and well, it seems as though that person set them up. At least that's what one of the guys said.\"\n\n\"They didn't give a name?\" Nic questioned.\n\n\"No, she said they never said any names, other than the three stooges.\"\n\n\"Did she remember anything else?\"\n\n\"Only that they seemed really confused. And when they found out that she was with you, they got scared and realized they had been double-crossed.\"\n\nNone of it made sense to Nic. Why the fuck would Sonny go through so much fucking trouble? He might not have had all the pieces together, but he knew without a doubt that Sonny's ass was dead.\n\n\"Oh! She did mention that whoever it was they were talking to on the phone got really pissed that they had taken the tape off her mouth. They apparently weren't supposed to talk to her.\"\n\n\"Alright. Well, watch over her and continue to give me reports.\"\n\n\"Will do,\" Antonio said, and then hung up.\n\nNic leaned back at his desk and closed his eyes. He had so many questions swirling around in his head. Who gave Sonny information on where his mother lived? That's information he never even told Amber, and she was married to him for three years. Jimmy was the only other person, and he trusted Jimmy with his life. Jimmy would never double-cross him. Who else could be involved? \n\nAnd he quietly chastised himself for losing control. He had planned to kill all but one of them, but when that fucker had the gun up against Victoria's head, he knew he was going to kill him on general principles. But now all they had were three dead bodies and were back to square one. Nic knew he couldn't move in on Sonny until he could pinpoint evidence on the prick. There had to be some link. Something...\n\nNic pulled out a bottle of vodka to slow down the many thoughts that were racing through his head. He poured a shot and downed it, then poured another. But as Nic was staring at the colorless liquid in the shot glass, it came to him with the strongest of clarity. Clarity that shook him to his very core, causing him to drop the bottle and the glass. \n\nHe knew who set this up. \n\nMotherfucker!!\n\nNic knew Jimmy was already at home, and probably asleep in bed by now, but he needed to talk to him and explain his theory. He quickly dialed Jimmy's number. When he picked up Nic said, \"I know who it is. Bring all the stuff that you and Damon took off the bodies.\"\n\n*****************\n\nAntonio walked into the bedroom to check on Victoria for the tenth time that night. Actually it was morning by then. She was still passed out and still snoring. 'God, she is so beautiful,' Antonio thought. Honestly, he never believed that she and Nic belonged together. They just seemed so different. He remembered the first night he met her at the party. She was so fucking sexy in that red dress, and she seemed so nervous. As she was talking to him that night while he was passing out hors d'oeuvres, he couldn't stop staring at her lips. She had the most perfect, plump set of lips he had ever seen. And she had this cute innocence about her, like she didn't know she was getting the attention of every straight man in the room that night. And maybe she really didn't. He could definitely see why Nic was so attracted to her...physically she was a walking wet dream, but her personality didn't really fit her body. She seemed awkward and uncomfortable around people. Like she didn't know what to do with her hands, or even what to say. And secretly that's what turned him on. And apparently Nic too.\n\nAntonio sighed and walked back out of the room. He sat down on the couch again, and was about to take his shoes off when Jimmy called. 'Jesus man, she's okay,' Antonio thought.\n\n\"Hey Jimmy, she's--\"\n\n\"Change of plans. Nic needs us to come to his place right now,\" Jimmy said, then hung up.\n\nA chill immediately ran up Antonio's spine. Nic wanted him to leave Victoria, who could be in danger, to come to his house at four in the morning? It didn't make sense, but for some reason it scared the shit out of him. Should he tell Victoria, or should he just leave?\n\nAntonio decided to just leave. He grabbed his jacket and walked out the door. When he pulled up he noticed Eddie's car out front as well. This must be an urgent meeting of the minds.\n\nWhen he entered, he noticed Eddie sitting in the hallway typing on his cell phone. He looked up and greeted him.\n\n\"Well, looks like they found the culprit,\" Eddie announced, sliding his glasses back up the bridge of his nose. \n\n\"Oh! Who is it?\" Antonio asked.\n\n\"Don't know, apparently they have him in the basement. Wonder if it was Sonny after all,\" Eddie said nonchalantly.\n\nAntonio sat down. \"Well at least she's okay now.\"\n\n\"Who?\" Eddie said, staring at the screen of his phone.\n\nAntonio glanced at him and rolled his eyes. \"Victoria, of course.\"\n\n\"Oh. Yeah, good thing you guys got there in time,\" Eddie said, yawning.\n\nAntonio rolled his eyes again. Eddie had no personality whatsoever. Antonio had tried talking to him on several occasions, but Eddie just always had a distant look in his eyes. Like he really didn't care about anything but business. Something Jimmy had warned him about beforehand, but Antonio being the talkative guy that he was, tried to break the ice, but it never broke or even thawed.\n\nFinally Jimmy came up from the basement and stared at both of them for a second, before he said for them to follow him.\n\nAntonio really didn't want to go down there. He didn't want to see whatever it was they were about to do to this poor bastard. Of course the guy deserved it, but Antonio couldn't stomach it. Seeing brains splatter against a wall from earlier that day was enough for him. \n\nWhen they finally reached the bottom stairs, they turned to the right and entered into a small room. One Antonio had never been in. It was dark and smelled like bleach. They both looked around to see who the prick could be, but they found no one. Where was the mystery man?\n\n\"Hello gentlemen,\" Nic said from behind them. Antonio jumped, and turned to look at him. Nic looked so calm and collected, dressed in all black...including black gloves. What the hell was going on? Antonio gulped and looked around the room again. He saw Raymond standing over in a corner with protective goggles and a blow torch, turning it from bright orange to burning blue. What the fuck?!! Antonio thought he was going to hyperventilate.\n\nNic walked in front of them and stared. After a few seconds, he spoke. \"As I was sitting in my office a few hours ago, something came to me. Very clearly. I was careless when it came to my mother. I was cocky and too trusting that nothing would ever happen to her again. You see, whoever went after Victoria, knew where my mother lived. And that's not information I give out to anyone. Only myself and Jimmy know. Or knew. And Jimmy, you didn't try to kill my girlfriend, right?\"\n\n\"Fuck no.\"\n\n\"Of course not. And Jimmy, if someone tried to kill Isabelle or your girls, what would you do if you caught them?\"\n\n\"I'd skin the motherfucker,\" Jimmy said with a straight face.\n\n\"As would I,\" Nic said, as he turned back around and started walking around the small cramped room. \"I wracked my brain trying to find out who else would have known where my mother lived. That's information I even kept from my ex-wife. Who would know?\" Nic said as he circled the two men.\n\n\"Then, it came to me. The one tiny loophole that I had been overlooking, because I never actually received them. Do you know what that was, Antonio?\" Nic asked, turning to look at him.\n\nAntonio's breathing quickened. He was going to be sick. 'Please, God, what is he getting at,' Antonio thought. \"No,\" Antonio whispered.\n\n\"Bills. My mother's bills that had her residence on them. Bills that were entrusted to my accountant,\" Nic said, turning his attention to Eddie.\n\nNic watched as Eddie's eyes widened. \n\n\"Ni-Nic, I-I, I don't know what you're talking about,\" Eddie stuttered out, turning to leave but running straight into Jimmy, who was behind him. He glanced back and forth between both men, while Antonio slid back against the wall, grabbing his heart. He had thought he was dead. That they were going to kill him for whatever reason. But it was Eddie!\n\nNic continued to stare at Eddie. \"Antonio said that Victoria mentioned the guys thought her husband was a banker. Makes sense...I'm sure you quoted them a bunch of phony facts and numbers that seemed legit since you used to be the head accountant at one of the largest bank corporations. You would know enough to make three strangers believe you. And you also knew that hiring them to shoot at her would cause me to send her away, because that's what I had done with my mother. But you knew I wouldn't keep her away for long, so you thought of another way to get rid of her. But you weren't betting on the fact that they would disobey you and remove her gag. That they would contact me.\"\n\n\"I swear t--to you Nic, I\u2014I swear, I had nothing to do with any of this. I mean, anyone could have known where your mother lived,\" Eddie begged, now visibly sweating for all of them to see.\n\n\"Really?\" Nic stated flatly.\n\nA cell phone started ringing, causing Eddie and Antonio to jump in the small space.\n\n\"I think that's your phone ringing, Eddie. Go ahead and answer it,\" Nic said, staring the smaller man down.\n\n\"Uh, no, it can wait,\" Eddie whispered.\n\n\"Answer it,\" Nic demanded, narrowing his eyes.\n\nEddie nervously reached into his pocket. His hands shook as he clumsily flipped open the cell phone. \"Hello,\" he croaked out.\n\n\"Hiya, Eddie,\" they all heard Jimmy say from behind him. Antonio watched as Eddie seemed to crumble right before his eyes. \n\n\"Recognize that number?\" Nic asked.\n\nEddie didn't say anything. He just stared down at the floor and mumbled to himself.\n\n\"Jimmy got that phone off the dead Irish guy. Funny how the last number just so happened to be yours. How could such a smart man make such a costly mistake?\" Nic asked, turning his back and walking away.\n\n\"Nic I...oh God,\" Eddie muttered. \"I ju--just wanted you to be th--the best, you know. Like yo--you've always b\u2014been. With no distractions. She was ca--causing problems. I was, shit, I was just trying to help. We\u2014we were a great team...I was just trying to help.\"\n\nNic turned back around. \"Help? By killing the woman I love?\"\n\n\"By, um, clearing your mind,\" Eddie whispered.\n\nNic quickly walked back over to Eddie and punched him square in the face, breaking his glasses...and perhaps his nose. \"Did that clear your mind, you fucking coward?!\" Nic yelled, as Eddie grabbed his face, and writhed in pain on the floor. \n\nNic pushed his hair back. \"Raymond, hand me the knives.\"\n\nRaymond walked over to Nic and handed him two knives, one big, one small. Antonio thought he was going to be sick. \n\n\"Antonio you might want to step out of the room for this next part,\" Nic warned without taking his eyes off Eddie, who was still lying on the ground. \n\nNic sure as hell didn't have to tell Antonio twice. He jetted for the door, but before he closed it, he looked back at the unbelievable scene unfolding in front of him.\n\n\"Any last words, Eddie?\" Antonio heard Jimmy ask.\n\nEddie's entire body was shaking. \"Yes. Please make it quick,\" he whispered.\n\n\"Not a chance in hell,\" Nic said, as he approached Eddie, with the two shiny, sharp knives in front of him.\n\nThat was enough. Antonio slammed the door and tore up the steps as he heard Eddie's scream pierce through the quiet house. \n\nAntonio walked outside and sat on the steps. No, he couldn't do this. This was not the life he wanted to live. No matter how much money and glamour could come with it, it's not what he wanted. He didn't know if it was even possible to leave the business, but he had to talk to Nic. He wiped his sweaty brow and closed his eyes as the cool night air hit his face.\n\n****************\n\nThe next morning, Victoria woke up to the sounds of knocking. She quickly hopped out of bed, threw on a robe and ran to the door. She looked through the peephole at a man in a black suit with a tray. She cautiously opened the door a few inches.\n\n\"Yes?\" she asked.\n\n\"Good morning, Mrs. Andretti. Your husband wanted to make sure you ate something as soon as you woke up,\" the man said, pushing the door open and moving around Victoria to set the tray on the table. He turned around and smiled at her.\n\n\"He's not my\u2014I'm sorry, I don't really have any cash on me. You know, for tips,\" Victoria admitted.\n\nThe man continued to smile as he walked to the door. \"No worries at all, Mrs. Andretti. Your husband has paid quiet handsomely to ensure that I, and only I, deliver all things to your room. Your room will be cleaned once a day by Janice, and I will accompany her inside and stay until all is done. I will see you again at lunch, and please don't hesitate to call me for anything, no matter how big or small. You can dial the number on my card which is on the tray, or dial the front desk and ask for Ellington, which is my name,\" the man said \"Good day.\"\n\nVictoria closed the door and leaned against it. 'Damn Nic,' she thought with a smile. Before she could walk away from the door, she heard knocking again.\n\n\"Yes, Elling--,\" she started to say as she opened the door, but quieted when she realized who it was.\n\n\"Miss Davis, how are you?\" Detective Marsh asked, although Victoria could tell he really couldn't care less if she were fine or not. He pushed past her and walked into the living room.\n\n\"I'm fine, thank you. How did you get up here?\" Victoria asked. \n\nMarsh flashed his badge to her. \"It's amazing what this little badge can do. Nice room. What do they call this, the penthouse, right?\" he said, walking around.\n\n\"I guess,\" Victoria answered, pulling her robe tightly shut.\n\n\"Yeah, I'm thinking that's what it's called. I wouldn't know. I'm just a lowly detective making an honest living. Hell, I'd have to fork over my kid's college tuition to stay in a room so fancy. Quite a step up from your old neighborhood.\"\n\nVictoria walked toward the kitchen. \"Would you like something to drink?\" she asked, trying to be nice in hopes that he would leave soon.\n\n\"Sure. Coffee, black. Thanks. So, how is it that you know my good friend, Nic?\"\n\n\"We dated. We recently broke up, end of story,\" Victoria stated matter-of-factly, as she poured him some coffee from her breakfast tray.\n\n\"Is that right,\" Marsh said, grinning and walking toward her.\n\n\"Yep.\"\n\n\"Why did you break up?\"\n\n\"That's really none of your business,\" Victoria said, handing him his cup.\n\n\"I can question you here in your comfortable hotel room or downtown under some harsh florescent lights if you don't play nice, Victoria,\" Marsh warned. \"And remember, it's not nice to lie to a detective.\"\n\nVictoria was scared. She had never even been given a ticket before, and here she was about to lie to a cop.\n\n\"He's married to his work. I've been an afterthought for the most part. So it wasn't a hard decision.\"\n\n\"And what work might that be?\"\n\nFuck! Perhaps she shouldn't have brought up anything dealing with his job.\n\n\"His restaurants and club.\"\n\n\"Hmm...are those the only businesses that you know of?\"\n\nVictoria tried not to swallow. \"Yes.\"\n\n\"And you wouldn't be lying to me, correct? Because that would not work well in your favor.\"\n\n\"No.\"\n\n\"What about--\"\n\n\"Excuse me, Detective Marsh, but I thought you were investigating a shooting at Calamity's. What does any of this have to do with Nic?\" Victoria asked.\n\n\"Nic might be related.\"\n\n\"You think he's a suspect? That he would level his own girlfriend's work place with an Uzi, then show back up to the scene of the crime to comfort me?\"\n\n\"I didn't say he was a suspect, I said he could somehow be related. And how do you know it was an Uzi?\"\n\n\"I don't, I just guessed. It was a lot of shots at once like I stated in the report that day. And I highly doubt Nic has anything to do with it. But truthfully, I don't know much about him anyway, so if you have questions about the shooting at Calamity's, I'll answer, but more on Nic, I won't be able to help you,\" Victoria said, praying that he couldn't see through her bullshit.\n\nMarsh just continued to stare at her, and then slowly sipped his coffee. \n\nVictoria wanted him to leave so bad. She didn't like this guy one bit. He seemed like he was just waiting to catch her in something. The less she said, definitely the better.\n\n\"Where did you go?\"\n\n\"What?\" Victoria asked.\n\n\"You left town...even though I asked you not to. Where did you go?\"\n\n\"I, um, I was scared after the shooting, and decided to take a vacation to Nic's mom's house.\"\n\n\"And where does she live?\"\n\nNot a chance. \"Okay, this is going to sound silly, but I was on some pretty heavy medications, and I don't really remember going or coming. It's a small town, and I'd probably never remember the name of it.\"",
        "\"Try,\" Marsh said, staring her down.\n\nVictoria sighed. Why wouldn't he just leave?! \"Hmm, nope, not coming to me. I'm sorry. But if I think of it, I'll call you.\"\n\nMarsh made a clicking noise from the side of his mouth, as he walked closer to her. \"So when you say you were Nic's girlfriend, does that mean he paid you?\"\n\nVictoria almost choked. \"What?\" she asked, setting her cup down.\n\nMarsh continued to stare at her. \"Basically, did he pay to fuck you? A lot of men like him have these mistresses that they set up. I know he was with you while he was still married. He was paying for you to stay at his condo, and I'm assuming the tradeoff was sex, am I right?\" Marsh asked, taking another sip.\n\nVictoria glanced down at her cup of coffee. An asshole like Marsh wouldn't understand that she and Nic's relationship was so much more than that. That she loved him and he loved her. A man like that couldn't possibly understand that Nic wanted more than just sex from someone like her. No matter where she came from. But she figured in this case, the more Marsh thought he was right, the better. Let him think falsely. So Victoria held her tongue.\n\n\"Yes,\" Victoria whispered.\n\n\"Thought so. And how did you two meet?\"\n\n\"He financed my father's restaurant.\"\n\n\"And are there any documents to prove this?\"\n\n\"I don't know, it was between the two of them. I just worked there.\"\n\nMarsh walked around the counter and stood in front of her. He placed his cup down and slowly raked his eyes over her body until he reached her eyes. Victoria was disgusted at his open gaze. She pulled the short robe tighter to her body.\n\n\"And how much did he pay to keep you?\" he asked, leaning so close to her, she could smell the warm coffee on his breath.\n\nIt hurt every time. Every time someone equated her worth to money. Her body as something that could be bought. And she knew Marsh had said it to hurt her. But she wasn't going to let him get away with it.\n\nShe placed her hands on her hips. \"More than you can afford,\" she shot back at him.\n\nMarsh grinned and stepped back. \"Touche,\" he said, taking another sip from his coffee and turning around.\n\n\"Well, Miss Davis, if you have any more 'useful' information regarding the shooting...or Nic Andretti, do let me know,\" he said, walking to the door. He opened the door, but stopped before he exited. \"Or information on Jimmy Vitelli, Raymond White, Eddie Larkin, and the new guy, Antonio DiCaro, who I believe, according to hotel security, checked you into this hotel. Nic sure is a generous ex-boyfriend to let you use his card. Good day.\"\n\nVictoria tried to shut the door, before he stopped it. \"Tell your boyfri\u2014excuse me, your financier that he will make a mistake, and I'll be there when he does.\"\n\nVictoria tried to look bored as she rolled her eyes. She finally shut the door and leaned against it. Shit, he probably saw right through all of her lies. Especially since he knew Antonio checked her in with Nic's card. Victoria felt sick to her stomach. She needed to lie back down. But before she could reach the room, she heard her cell phone ringing.\n\nShe didn't recognize the number, but she recognized the city. \"Hello?\"\n\n\"Vicky?\"\n\n\"Mama?\" Victoria asked, not believing who it was. She hadn't heard from her parents in...well, since that day.\n\n\"Oh my God, child, are you alright?\" her mother said, worry in her voice.\n\n\"Yes, mama. I'm fine.\"\n\n\"Thank God. I didn't know what had happened. A cop stopped by the apartment asking questions about you and that man.\"\n\n\"What? What did you tell him?\" Victoria asked, sitting down on the couch. She prayed her mother and father didn't say anything that Marsh could use against her.\n\n\"I didn't know what to tell him. I said that after you and your father got into an argument and he, well, he made you leave and you were living with that man for all I know.\"\n\n\"Mama, is that exactly what you said? Nothing else?\"\n\n\"Yes, I believe that was it. I mean, I didn't know what to say, I hadn't heard from you in months. I just told him that your daddy didn't approve of who you was with, and that we hadn't seen you. Was that okay?\" Olivia asked.\n\n\"Yeah, that was good. Thank you.\"\n\n\"He said something about a shooting, and since we didn't know what he was talking about, he wouldn't tell us. What shooting?\"\n\nVictoria leaned her head back against the couch. \"Well, I worked at this place named Calamity's and there was a shooting. They're just investigating the place and everyone who was a witness.\"\n\n\"Oh. But you're okay, right?\"\n\n\"I'm fine, mama.\"\n\n\"Good.\"\n\nNeither knew what to say. Both were remembering that last day Victoria spent with her parents.\n\n\"So...how's daddy?\" Victoria asked. She wondered if she really even cared, but she asked anyway.\n\n\"Same,\" her mom sighed into the phone. She didn't offer anything more, and Victoria didn't ask further.\n\nVictoria heard her mom clear her throat. \"I got your number from that cop, I hope that's alright. I just hadn't heard from you and didn't know if you were okay, considering this whole situation you were in. I hope you don't mind.\"\n\n\"No, I don't mind,\" Victoria said. She waited, as she heard her mother go silent and then sniff.\n\n\"I\u2014I miss you, Vicky. So much,\" she heard her mother whisper. \"Maybe...I could stop by and see you?\"\n\nA warm feeling flooded through Victoria's body. She really had missed her mother, no matter how awful they parted. She and her mother were always on the same team, and they both knew how difficult her father could be. Victoria remembered so many times wishing her mother would just leave him. That one day she would tell Victoria to pack and they would head out into the world on some adventure that would take them to some exotic location where her father wasn't allowed. She had wished so bad, but it never happened. Instead the further her father was involved in his failed businesses, the more he dragged her mother down with him...and her mother's spirit.\n\nBut for the most part, Victoria stayed out of her parents' relationship. She kept her mouth shut, did her homework and reported to her father for work. And the day she graduated from high school, when most kids receive a party, money, car or college-bound gifts\u2014the next morning Victoria received her first double shift. The first of many to come, but she did it without complaint. She had thought about just getting on a bus and never looking back, but it was her mother's sad face that kept her from leaving.  \n\n\"Um, sure. You can come over,\" Victoria said, wiping away a tear as she gave her mother the address to the hotel. She quickly showered and changed into a cute shirt and jeans. She pulled her curls back into a ponytail and sat at the counter, waiting for her mother to arrive. \n\nAs she sat waiting, she hoped she looked presentable. The last thing her mother really knew about her was that she had slept with a stranger to pay off a debt. Not exactly something she ever wanted her mother to know...even if she had done it for her.\n\nThe phone ringing caused her to drift from her train of thought. She hopped up and sprinted to the counter to answer it.\n\n\"Mrs. Andretti, there's a Mrs. Olivia Davis here to see you. She gave us the name Victoria Davis, but when she described you, I thought I would check with you first,\" Ellington said.\n\n\"Yes! Yes, that's my mother. I'll be down to get her.\"\n\n\"No need, ma'am. I'll personally see her upstairs for you.\"\n\n\"Oh. Well, thank you.\" Victoria would never get used to people treating her like she actually mattered. She walked to the door and waited. In a few minutes, she heard a knock and immediately pulled open the door.\n\n\"Mrs. Andretti, your mo--,\" Ellington tried to get out before Victoria moved past him to hug her mother. She didn't know why she felt so emotional about their reunion, but she did.\n\n\"Hey mama,\" Victoria said, smothering her mom. Olivia hugged her back and the two walked into the hotel room.\n\n\"Oh, thank you Ellington,\" Victoria said before closing the door.\n\nInside, Victoria offered her mother something to drink and the two settled down on the couch. Olivia picked some imaginary lint from her blouse and Victoria tried to think of something to say.\n\n\"I've never been in a hotel this beautiful before,\" Olivia said finally, looking around.\n\n\"Yeah, it's really nice. I still don't know what I'm doing here.\"\n\nVictoria stared at her mother. She looked really tired and Victoria knew why. It took a lot of energy to deal with her father on a daily basis. \n\n\"So, that man said your name was Victoria Andretti. Anything I should know about?\" her mother asked, glancing at her fingers and then raising an eyebrow.\n\n\"Oh, no. We're not married. I think Nic...I don't know why he did that, maybe for less questions.\"\n\n\"I'm confused, Vicky. I thought, well, that whole debt deal you had with him, and now he has people calling you Mrs. Andretti? What's going on?\"\n\nVictoria walked over to the couch and sat down. \"Mama, it's all so confusing. But I'm going to be honest with you about everything that's happened, so you can understand, and see if I made the right decision.\"\n\nOlivia nodded, sat down beside Victoria and placed her purse on the floor. She looked over at her only daughter. \"Okay, lay it on me.\"\n\nVictoria told her mother the whole story. She left nothing out as she told her about how at one point she couldn't stand him, but somehow fell in love with him. She told her about their trip to Bali, the shooting, kidnapping and end result. Her mother would every now and then raise her hand to her mouth or chest, but remained quiet.\n\n\"So, that's how I ended up here,\" Victoria finally said, standing to pour them something to drink.\n\nOlivia shook her head. \"Well, he sounds like an interesting man, Vicky. Dangerous...but interesting. But you two aren't together anymore, so what will you do now?\"\n\n\"I don't know. Do you think I made the right decision?\"\n\nHer mother sat her glass down on the table. \"Now that I can't tell you. All I can say is that if you are waitin' for that man to change...it might not happen. I've been waitin' for your daddy to change for years, and you know that's been a losing battle. But I don't know this Nic, so I can't judge him.\"\n\n\"Mama, that didn't help at all.\"\n\nOlivia laughed. \"I'm sorry, but I'm just saying what I know.\"\n\nThe two retired to the table once Ellington brought up their lunch. A fancy feast of things neither one of them had ever heard of.\n\nAt first they ate in silence, but then Olivia spoke.\n\n\"Vicky...I'm sorry.\"\n\nVictoria looked up from her plate. \"For what, mama?\"\n\n\"For everything that happened that day. I'm so sorry.\"\n\nVictoria felt a heavy sadness cloud over her. Remembering her mother's face that day as she said nothing and let her dad kick her out. Her lack of response hurt Victoria more than her father's heated words. \n\n\"Mama...why didn't you say anything? Why did you let him do that? I don't understand...I just--,\" Victoria couldn't finish her sentence. She stared down at her plate. Suddenly, she had lost her appetite, but she continued to take small bites. Anything to keep from looking at her mother.\n\nSeveral seconds went by before she heard her mother answer. \"I guess I was just so sick and tired of arguing with him. It was making me sick, and I decided to be weak instead of strong. I can't believe I let him put you out on the street. If I had it to do over again, I would have told HIM to leave, and I hope you believe me. I'm so sorry, Vicky,\" Olivia stated, dabbing the corners of her eyes with her cloth napkin.\n\nVictoria knew she wasn't ready to forgive just yet, but one day she would have to let it go. Despite everything that had happened, her mother was very important to her. But today she just couldn't let it go, so instead she changed the subject.\n\n\"Why didn't you ever leave him? If you say he wouldn't change, then why stay?\" Victoria asked. She picked over her food while she waited for her mother to answer.\n\n\"I guess I held onto the hopes that he would change. At some point, I waited and waited, but he never did.\"\n\n\"So...why are you still waiting?\"\n\n\"I'm not.\"\n\nVictoria dropped her fork and looked up. \"What?\"\n\n\"I left him this morning. I took my bags to Roberta's place, and that's where I'll be staying until I figure out what to do next.\"\n\n\"What?\" Victoria repeated, jumping up from the table and hugging her mother.\n\n\"See, we both can be strong by ourselves,\" Olivia said smiling and holding her daughter.\n\n***************\n\nNic sat staring at the empty wall in his room. He had taken a shower, but had yet to put anything on, other than the towel that was wrapped around his waist. After they had gotten rid of Eddie, he had barely gotten any sleep. He thought figuring out who had caused Victoria harm would have made him feel better...but it didn't. He thought that torturing that son of a bitch would have made him feel good...it hadn't. Because even after all of this, sure she was safe, but she wasn't with him. She had asked that he stay away from her. But there was no way in hell that was even possible for him now.\n\nHe sat staring at the wall, but looking beyond it, as images of Victoria's face flooded his eyes. Her beautiful smile and long, wild curly hair. He had memorized every contour of her face and body. His favorite expression of hers was right after she came, she would slowly open her eyes to look at him. If he could freeze that look, he'd carry it with him always. That look caused his heart to flutter.\n\nBut Nic knew what she wanted. Normal. Something that his lifestyle was not. Nic sat thinking long and hard about his next move. As the wheels in his head started turning, he hopped up to get dressed. He knew exactly what the next step was.\n\n****************\n\nLater that night, Victoria was sitting on the couch, devouring an entire bag of Doritos while watching Jeopardy. She felt she could officially say she had the strangest life in the world. One minute she was living with her parents in a shitty apartment working overtime, the next she was under ball and chain of a mob boss. One second she's in Bali, the next she's cleaning brains out of her hair. And now she was in her pajamas watching a game show.\n\nTruthfully, she was trying to do anything to take her mind away from Nic. But calling Marianna earlier that night didn't help. Although she was so happy to hear her voice, once their conversation had ended, the loneliness set in even more. But speaking with Marianna made her feel closer to Nic in a way, especially since Marianna kept persuading her to get back together with him.\n\nGod, she wanted to. She had barely been away from him for two days, and she missed him like crazy. Maybe she had overreacted. Maybe she should have given him a chance. He did find her and save her life. That in itself should prove his love to her. \n\nBut a part of her didn't want to go through the pain and suffering that Marianna had gone through. Or the constant waiting that Isabelle had to deal with. Victoria didn't want to live in hiding or be overly cautious and wary of every person who entered her life. Even someone just asking for the time. She didn't want to be scared all day, every day.\n\nVictoria stared down into the empty bag right as she heard a knock at the door. Ellington, no doubt, coming to bring her dinner. But this time she would look through the peephole first, just in case it was Marsh.\n\n\"Yes?\"\n\n\"Message for you, Mrs. Andretti,\" Ellington said. \n\nVictoria opened the door to find Ellington holding a silver tray with a rose and a card on it in one hand, and in his other hand a large silver bag.\n\nVictoria grabbed the note, rose and bag. \"Thank you,\" she said, shutting the door as she read the card. 'Don't think. Put on the dress. A car is waiting for you downstairs.'\n\nVictoria's heart trembled. But what about the other night and\u2014don't think! She was going to see Nic. She smelled the rose and exhaled. This man made her crazy.\n\nShe quickly ran to the bathroom to shower, put on the dress and a little makeup and then went out of the door all in less than twenty minutes. She decided that she would listen to his message and not think about what she was doing. Sure her mind kept trying to tell her to run...run far away. But...her heart told her something much different.\n\nAs Victoria rode the elevator down, she giggled to herself to think of Raymond opening her car door as he always did, and him driving her like he had done in the past to whatever location Nic wanted. It had been a while, but she tingled all over just thinking about it.\n\nOnce she reached the front of the lobby, she pushed open the hotel doors and froze. An instant tingle coursed its way through her body. Nic was leaning against a fire red Lamborghini. She had not been expecting that. Usually when he said a car is waiting, it was someone else ready to drive her to him. But even from a few feet away, he was staring at her with this intensity that she had never seen in another human being. Like he was claiming her with just his eyes alone. \n\n\"Hello Victoria,\" Nic said, as she approached. Her beautiful smooth milk chocolate skin seemed to glow and the simple, short black dress he had provided for her hugged her delicious curves even better than he had imagined. She was stunning, resembling the first night he had met her, when she had been wearing a similar albeit, cheaper dress.\n\n\"Hi Nic,\" Victoria whispered back. He was penetrating her soul with those piercing blue eyes of his. Any guard she had tried to build up in the short ride down the elevator had now crumbled. 'Talk about tall, dark and handsome...his picture should be the epitome of that phrase,' Victoria thought. \n\n\"You're mesmerizing...as always,\" Nic said, drinking in her striking face and sexy body. \n\n\"Thank you,\" she answered, but then started to feel self-conscious, because Nic continued to stare at her. She quickly glanced down at her dress and smoothed it out. She glanced back up at him, and he still wasn't saying anything, just gazing.\n\nNic finally shook himself out of his trance and opened the passenger door for her. This woman...drove him crazy. \"May I escort you to dinner?\" he asked, when his brain was up and running again.\n\nShe nodded to him, then quickly spoke up, \"Yes.\" She got in and he gently closed the door. \n\nWhen Nic got in the car, Victoria's nostrils filled with his masculine scent\u2014a scent that made her pussy quiver. Just being this close to him, started flooding her brain with past memories of their hot encounters. He glanced over towards her and gave a small smile before he pulled the car onto the street. \n\nNeither one said a word while he drove them to their destination, but Victoria couldn't help but stare at his profile. Even though it was dark in the car, the neon blue lights of his dashboard gave her a faint light. It was about the tenth time her mind had screamed, 'He's gorgeous'. She started to get wet, just thinking about his strong body covering hers. She finally turned away and stared out of the window, to keep from embarrassing herself. \n\nThe further they drove, the more the streets began to look familiar, and before long she recognized exactly where they were. She couldn't help but smile.\n\nAfter a few more minutes, they pulled up in front of his condo. When they got out, Victoria greeted Sam. He held the door for her and smiled brightly back at her. \"Long time no see, Miss Victoria,\" he said.\n\nNic grabbed her hand and led her to the elevator. They both stared at one another on the ride up, but neither spoke a word. Almost 48 hours ago, she had a gun to her head and he had shot someone right in front of her. But now...it's as if that had never happened. The magnetic pull they had towards each other clouded out everything else.\n\nOnce inside the condo, Nic removed his coat and walked to the kitchen. Victoria closed her eyes and breathed in the familiar place. So much had happened here, and it felt just a little strange to be back. But perhaps this time, strange in a good way.",
        "Nic walked back over to her and handed her a glass of champagne. \"I owe you an Italian dinner, and I never go back on my word,\" Nic said, taking a sip from his own glass.\n\nOh, yes, she remembered that morning. The morning he had promised her so many things and left her broken hearted.\n\n\"Yes, I think you do,\" Victoria smiled, and took a sip. \"Want me to help with anything?\"\n\n\"Nope. Just sit your pretty little ass down.\"\n\nNic rolled up his sleeves, washed his hands and started removing several things from the refrigerator. He cleared a space on the island in the kitchen. Victoria sat on the bar stool opposite of him, and observed. For someone who didn't cook often, he seemed to know exactly what he was doing.\n\n\"Nic?\"\n\n\"Yes?\"\n\n\"What am I doing here?\" Victoria asked, leaning her elbows on the counter. \n\nNic was silent for a few moments before he spoke. \"I want to give you something that I've never given anyone else.\"\n\n\"Your cooking?\"\n\nNic smiled, \"No. While I'm preparing our meal, I'm going to give you an opportunity to ask me anything you want. And I'll be completely honest.\"\n\nVictoria immediately perked up. There was so much she wanted to know about him. \"Nothing's off limits?\"\n\nNic exhaled. \"Nope. You can ask me anything.\"\n\nVictoria thought hard about what her first question would be. She didn't want to scare him off, so she asked a simple one first.\n\n\"Okay. I'll start off easy. What's your middle name?\"\n\n\"Sebastiano...or just Sebastian,\" he stated as he chopped a tomato and added it to some spectacular chicken dish he was in the process of making.\n\n\"Nicolas Sebastiano Andretti...ooh, I love that.\" She stared at him and noticed a small smile in the corner of his mouth, even though he wasn't looking at her. But now on to more burning questions. \n\n\"Did you sleep with that Kim girl the night you took her out?\"\n\nNic looked up at her. \"No, and I can't believe you even remembered her name.\"\n\n\"Well, it was a pretty devastating night for me. I remembered everything about it.\"\n\nNic grabbed some spices from a cabinet but didn't say anything.\n\n\"Why don't you call me Vicky, like most people?\"\n\n\"Because Vicky is plain, and you're anything but,\" he stated matter-of-factly, as he placed the dish into the oven. He poured another glass of champagne and leaned against the counter. \"Next question.\"\n\nVictoria smiled. And to think, her whole life she had always thought herself plain.\n\n\"Hmm, what was your dad like?\"\n\nNic glanced down at his glass. \"He was a quiet man. But that was mainly due to the fact that English was only his second language. Mostly every time he spoke to us, it was in Italian,\" Nic said, trying to figure out what to say about him. \"He wasn't the most involved father, but that taught us to be independent. My mom was the only one who could really make him smile. That's about it in a nutshell.\"\n\n\"You look a lot like him,\" Victoria said, taking in that bit of information. It was the first time Nic had even mentioned his father. Everything so far that she had learned about his family had been from Marianna. \n\n\"Yeah, I know,\" Nic said as he sipped his drink. \n\nVictoria knew that this next question might hurt, but she really wanted to know. She wanted to know all she could about Nic, and not secondhand from someone else.\n\n\"What was your brother Bobby like?\"\n\nEven though he probably tried to hide it, Victoria saw Nic tense up at the question. He glanced down at his glass then back up to her.\n\n\"Victoria, I'm sorry. I know I said nothing is off limits, but can we hold off on that question?\"\n\nVictoria nodded. \"Yes, of course. I'm sorry.\"\n\nThe next question, Victoria wrote down. She had learned a few things from Nic. 'How many people have you killed?' was scribbled on a piece of paper and she slid it towards him.\n\nNic just looked at her. \"Do you really want to know that?\"\n\nVictoria looked down at the paper and then back up to Nic. \"No, I guess I don't,\" she whispered, as she tore the piece of paper up.\n\n\"Okay, new question. When's the last time you cried?\"\n\nNic chuckled, \"This wasn't the brightest idea. Hmm, can I get back to you on that one also?\"\n\nVictoria rolled her eyes. \"Yes.\" So much for the Q&A.\n\nWhen dinner was finally ready, Nic prepared both of their plates, while Victoria set the table. It was a beautiful candlelight dinner and the food was amazing. Nic really could cook...or at least he could cook Italian food. Marianna would be proud.\n\n\"This was delicious, Nic. Thank you,\" Victoria said, drinking the last bit of her champagne. \n\n\"Am I forgiven?\"\n\n\"I was never mad at you Nic, I was just scared. Nothing like that had ever happened to me, and I didn't know how to react to it. I still don't,\" Victoria said.\n\n\"Then, what can I do to make it better?\" Nic asked.\n\n\"You can start by telling me what you're thinking,\" Victoria answered.\n\n\"That's it?\"\n\n\"Yep, just tell me what you're thinking without guarding yourself. Even if it makes you look vulnerable, I want to know.\"\n\n\"Alright. Stand up,\" he said, as he walked over to his entertainment system.\n\nVictoria did as she was told, eyeing him cautiously as he flipped through a group of CD's. When he found the one he was looking for, he placed it in the CD player, and the smooth, romantic sounds of an old rhythm and blues song drifted through the air.\n\n\"Oh, this is a beautiful song, I've heard this before in a movie. Oh, What a Night, right? What's the group?\"\n\n\"The Dells.\"\n\n\"I didn't know you listened to oldies.\"\n\n\"I listen to a little of everything. Come here,\" Nic whispered.\n\n\"You come here,\" Victoria teased.\n\nNic smiled and slowly walked over to her, grabbing her hand and gently pulling her to the living room floor. Victoria admired his long, lean yet muscular frame underneath his dress shirt and dark jeans. He turned around to face her and flashed the most beautiful smile. Her knees literally felt weak.\n\nHe pulled her close to his body and started moving slowly with the music. \n\n\"Close your eyes,\" Nic softly uttered. Victoria glanced up at him for a moment, then obeyed.\n\n\"The night my parents met, this was the song they danced to. My dad had told my mom that night, in broken English, that he was going to marry her,\" Nic said.\n\nVictoria kept her eyes closed as she thought about Nic's father and Marianna dancing. What a beautiful couple they made.\n\n\"He also whispered to her during the song what he thought their lives would be like. I'd like to try that.\"\n\nVictoria continued to sway to the music and listen to Nic's deep soothing voice.\n\n\"For whatever reason, our bodies crossed paths, and in those special moments, I lost my heart to you. And I'm sure I'll never get it back. But as long as I can hold you close...\" Nic stated, tilting her head up toward him, as she slowly opened her eyes, \"...then you can keep it. I love you more than words can express Victoria Davis, and non posso vivere senza voi.\"\n\nVictoria knew her eyes were glassy, but she couldn't help it. Everything he had said to her caused goose bumps to caress her skin. And when he leaned down to kiss her, she thought she would melt. The room was slowly spinning and she couldn't tell if the song had stopped or not.\n\n\"Wha\u2014what did that mean? The last part,\" Victoria asked.\n\n\"I can't live without you,\" Nic answered, before delivering her another soul shattering kiss. He picked her up and she wrapped her legs around his waist. He lowered his kisses to her neck as she pushed her fingers through his smooth jet black hair.\n\n\"I can't live without you either, Nic. I love you,\" she whispered back, loving the feel of his soft lips nipping at her sensitive skin. She closed her eyes and threw her head back, to give him full access.\n\nNic started carrying her towards the bedroom, placing his free arm out to the side to guide him, while he continued to lick and kiss Victoria. When he finally reached the opening to his room, he gently deposited her onto the bed. He pulled the tiny black dress over her head, and peeled off her undergarments. He had to admire her body. It was damn near perfection, and he was going to spend all night worshipping it.\n\nHe quickly discarded his clothes and lovingly gripped her ankle. He kissed the bottom of her foot, and then planted small kisses all the way down her leg until he reached her sweet spot.\n\nVictoria arched her back, in anticipation for what was to follow. After a few torturous moments, she felt his warm, wet tongue enter her pussy and move in a small circular motion, causing little jolts of electricity to ignite in her head. She gently pulled his smooth hair and moaned. \"Damn, Nic...ohh.\"\n\nBut Nic didn't want her to come just yet. He started slowly crawling up her silky toned body until he reached her face. He captured her bottom lip between his teeth and lightly bit the soft flesh. He then kissed her swollen lips again as he entered her sex. Home, sweet home. Only her pussy could grip his cock, like it was made just for him.\n\nVictoria stared up at him, as his powerful thrusts shook her. She raked her fingers down his back until she reached his ass. She squeezed it as he ground deeper and deeper into her dripping wet pussy.\n\nNic kissed her again, resting his body further down onto hers, feeling her full round breasts meld into his chest. Their hips connected and rocked back and forth in a rhythm that only their bodies knew. A dance that their bodies had memorized with each other.\n\nVictoria licked and kissed his collarbone, tasting the slight salty mixture of his sweat. She closed her eyes again, feeling that familiar itch in her lower section, that only he could scratch. He always seemed to reach places within her that she didn't know existed. Her toes hurt as they flexed and her legs began to shake. It was coming. Her breath was shortened and she could feel herself panting.\n\n\"You going to come for me, baby?\" she heard him whisper in her ear. She nodded her head, when she felt his teeth bear down on her neck.\n\n\"Oww,\" Victoria moaned.\n\n\"I asked you a question, and you didn't answer it,\" he growled.\n\n\"Yes, Nic, I'm about to c--come,\" Victoria said, as her pussy tightened around him and her eyes rolled back. \"Aahh, Nic...oh, baby,\" was all she could manage as wave after wave of delight washed over her body.\n\n\"That's it sweetheart,\" Nic said, as he began to pick up the pace. It had been too damn long since he had felt her body respond to him. He could feel himself losing control, as he continued to force his full length into her tight pussy. He could feel her body clamping around his member, forcefully massaging it. \"Oh, Victoria...shit\". Nic pushed deep and released a flood of his come into her. After a few moments, he stilled himself, as his lower half produced minor spasms until he was completely spent.\n\nNeither one could move a muscle, nor did they want to. But Nic soon realized that he was probably crushing her. He tried to roll off of her, but she held onto him.\n\n\"No, don't move yet,\" she whimpered.\n\nNic looked down into her eyes. They were misted over and her mouth was slightly parted, as if she wanted to say something else.\n\n\"I'm not going anywhere, baby,\" Nic assured her, as he kept their bodies connected.\n\nShe raised up and kissed him. And when she laid her head back down on the bed, she stared up at him. \"I love you.\"\n\n\"I love you more,\" Nic whispered as he felt his dick stirring again. Yes, they were both going to be sore from this reunion.\n\nLater that night, after two more sessions of lovemaking, Nic and Victoria lay in bed, still entangled in each other's arms and legs. \n\nAt first, Victoria couldn't tell if Nic had fallen asleep, but every few minutes she'd feel his lips against her forehead, and she knew that he wasn't. She always felt so safe in his arms. Strong arms that held her as though she were some precious gem. Perhaps it was because in this moment she felt safe, or satisfied, but whatever the reason, a calm came over Victoria, and she could no longer deny it. She had sacrificed things all her life, and mostly she didn't have a choice. But now she would make sacrifices for something she truly wanted more than anything else...and it was clearly her choice.\n\n\"Nic, I can handle it,\" Victoria said, as she kissed the tips of his fingers\n\n\"Handle what, baby?\" Nic asked, his sleepy voice betraying him.\n\n\"This. Your job, your lifestyle, everything. I mean, I can't promise that it won't be hard for me, but I will try. I love you and I don't want to be apart from you. And I promise I won't give up on you again,\" Victoria admitted, lifting her head to gauge his reaction.\n\nNic stared down at her. He didn't say anything, but he kissed her. Victoria knew this would be a long road to travel, but for her there really was no other option. She had to be with him. She shifted her body, so that she was straddling him, with her head resting on his chest. She loved the feel of his chest softly rising and falling with each breath.\n\n\"Victoria?\" Nic asked.\n\n\"Hmm?\" she replied, not bothering to lift her head.\n\n\"Did you still want to know about my brother, Bobby?\" Nic asked.\n\nBut this question however, did cause Victoria to raise her head. She hesitated a moment before she said \"If you don't want to talk about it, we don't have to.\"\n\nNic exhaled, \"No, I probably should. Bobby was...well, nothing like me. All-round nice guy. He had an interesting sense of humor and usually made friends with everyone. But God, could he talk. Never shut up.\"\n\nVictoria laughed, as she rested her head back onto his chest.\n\n\"And he never got punished by my mom. She never could, because as soon as she would get mad at him, he'd flash this big smile or puppy dog look, and she was done. Had mom completely wrapped around his finger. Hmm, let me think what else I could tell you,\" Nic said more to himself, than Victoria. \"I guess something else that was interesting about him was that he hated fighting and violence. Didn't even like violent movies, but he never turned his nose up at my father and I, like my other siblings did.\"\n\nVictoria laced her fingers through Nic's larger ones, as she continued to listen. It was extremely rare when Nic shared something, and she always felt so special when he did. She almost didn't want to move, so she wouldn't break whatever connection they had at the moment.\n\nNic cleared his throat. \"I think one of the reasons he was like that, was because of an incident that happened when we were kids. We had gotten my father's handgun and like idiots, were playing with it, even though we had been warned a hundred times. Jimmy was over at our house that day, and said he could tell it wasn't loaded. So Bobby started swinging it around and then pointed it at my mom's favorite vase and shot. That son of a bitch was so loud, I swear I heard it ringing in my ears for days. Bobby dropped the gun and never picked another one up. It scared the shit out of him. But oh, did my father wear our asses out for that,\" Nic laughed.\n\n\"Oh my God, he should have,\" Victoria laughed, thinking about the three of them looking devilish in the photo she had observed at Marianna's house. \n\nBoth were quiet as several minutes passed. Victoria wasn't sure if Nic was done talking. She waited a few minutes longer before she said anything.\n\n\"You know, your brother...his personality kinda reminds me of Antonio, don't you think?\"\n\nNic thought about it. Over the years, he had tried not to think about Bobby, but now remembering a few of his brother's traits...yes, he and Antonio were similar. \"Yeah, I guess he does. Always knew I liked that little prick for some reason.\"\n\nVictoria giggled again. \"He's a good guy. You just make him nervous all the time.\"\n\n\"Good,\" Nic whispered, then laughed when Victoria swatted at his arm.\n\n\"He would give anything to be like you. He thinks you're the coolest guy in the world. But don't tell him I told you this,\" Victoria said.\n\n\"I wouldn't dream of it.\" Nic thought about how Antonio could help him with his newest project. He needed to set that plan into motion as soon as possible.\n\nNic seemed to be deep in thought when Victoria interrupted him. \"Nic?\"\n\n\"Yes?\"\n\n\"Want to tell me about the last time you cried?\" Victoria felt Nic's body tense up beneath her. Maybe she was prying too much. He would tell her more things in time. He didn't have to give her his whole life story tonight while lying in bed. \"Nevermind, I'm sorry. I'm being way too nosey.\"\n\nShe felt his muscles relax, and she hugged him tighter. At least he wasn't mad at her for asking. He would tell her when he was ready. She was about to tell him that she was ready for round four, when he spoke.\n\n\"About ten years ago, was the last time I cried. It was the day I had to identify my brother's...remains.\"\n\nVictoria looked up at Nic, trying her best not to look so shocked. She shifted herself so that her face was hovering over his. She lowered her lips to his and kissed him. \"Baby, you don't have to tell me if you're not ready.\" She saw him nod his head, but he didn't say anything, which was definitely out of character for Nic. He hated when people did that.\n\nHe opened his mouth, but nothing came out. Then finally after a few seconds, he said \"I'm fine. I just haven't talked about this in a long...ever, actually. I've never said a word to anyone, not even Jimmy.\"\n\nMore silence. Victoria waited, looking into his eyes. He was avoiding eye contact with her, but she knew this was probably one of the most difficult things he'd done.\n\n\"That day I thought I could take it. I wanted so badly to believe it wasn't my baby brother, you know. I always thought I could protect him. But when the police called my father and I into the morgue to identify his hea...fuck.\"\n\nVictoria felt his breath quicken and he turned his head away from her. She slowly turned his head back toward her. Although the room was dark, she could see the slight moisture in the corners of his eyes. \"Ssh, you don't have to say any more. I love you,\" she whispered, kissing him again and again.\n\nIt was so long ago, Nic thought it couldn't possibly affect him the same way, but he was wrong. All of those feelings that he had been avoiding for ten years came crashing down on him. And what made it even harder on him was that he still looked at Bobby as a seven year old who wore a Superman cape for almost a year straight. He had worn it to school, to the dinner table, to bed...for a solid year, he wouldn't part with it. It had come with a Halloween costume of Nic's, that he soon regretted giving to his little brother. Or Nic would remember him as the annoying twelve year old who followed him around everywhere he went. At the time it had been frustrating, but he later learned it was because Bobby thought of him as his idol or hero. It took his mother telling him that for Nic to understand. That happened one day when Bobby interrupted a make-out session Nic was having with some neighborhood girl, because he wanted to play baseball. When Nic complained to his mom about Bobby's ever present nature, he left out the make-out session, but got an explanation as to why Bobby was following his every move.\n\n\"He's your younger brother and he loves you. Even though you two are only a year apart, he would love nothing more than to be just like you. And you should be proud of that, Nic. Not annoyed. You're your brother's keeper, you know,\" his mom had told him years ago. Why the hell couldn't he have kept him safe? \n\n\"Nic, it's not your fault what happened to him,\" Victoria whispered, bringing him out of the past. He looked up at her concerned, yet loving face.\n\n\"I should have been able to protect him better than that.\"\n\n\"Don't think about it,\" Victoria said, laying small kisses all over his face.\n\nNo, he wouldn't think about it anymore. He grabbed Victoria and rolled her onto her back. He was ready to feel her wrapped around him for the...well, he had lost count.",
        "****************\n\nThe next morning, Victoria pried her eyes open when she smelled the sinful aroma of French toast. She freshened up in the bathroom, grabbed her black dress and put it on, then walked into the kitchen.\n\n\"Good morning, beautiful,\" Nic said, placing her breakfast on the counter, as she entered.\n\n\"Good morning. And do you ever get any sleep?\" Victoria asked, as she stood on her tip toes to deliver him a kiss.\n\n\"Sometimes,\" Nic admitted.\n\nVictoria looked at her food. \"This whole domestic side of you is still such a surprise. I'm trying to get used to it.\" She placed a forkful in her mouth, and wanted to moan with how good it was, when she noticed he wasn't eating. \"Are you not eating?\"\n\n\"No, I don't like French toast.\"\n\n\"Then why did you make it?\"\n\n\"Because I know you like it. I'm not really big on sugary foods first thing in the morning,\" he stated, as he opened the morning paper. Victoria watched him as she ate. He looked as though he had a lot on his mind.\n\n\"Are you okay?\" she asked.\n\n\"Yes,\" Nic answered, but didn't offer any more. \n\nShe nodded as she stuffed more food into her mouth. When she was done, she turned to look at him, and he was observing her. \"That...was so good.\"\n\n\"Glad you liked,\" he said, although she could tell his mind was still elsewhere.\n\nVictoria stood up and stretched. \"Hey, I didn't even check, but are all the clothes you bought for me still here?\"\n\n\"Of course.\"\n\n\"Okay. I have to get dressed and go into Calamity's and see if I even still have a job.\"\n\nThat brought Nic's mind back into focus. \"What?\"\n\nVictoria started to walk to the back of the condo. \"I need to go back to work soon. I have rent. My roommate probably thinks I've moved out...if she's even there. I swear that girl spends so much time away,\" Victoria yelled over her shoulder as she entered the bathroom.\n\nShe quickly showered and then walked to the bedroom and into the closet, with a small light blue towel wrapped around her body. She began shuffling through the clothes. She looked behind her and noticed Nic leaning against the door frame watching her. Oh, she could be playful. She slowly pulled the towel from her body and dropped it to the floor. She stood there completely naked, with her backside to his open stare.\n\n\"Hmm, what to wear,\" she said to herself, smiling, knowing he was looking. After a few seconds, she felt his arms snake around her and he buried his face into the side of her neck. She tilted her head back and moaned as he lightly bit his favorite area.\n\nNic slid his hands to her breasts and began to squeeze and roll her tight chocolate nipples between his fingers. And the further she stuck her tits out for his pleasure, the more her fleshy, perfect ass pushed into his crotch. Damn, he was already hard.\n\nVictoria parted her mouth to moan when she felt his hand grasp her neck and tighten. \"Nic,\" she whispered, as she felt his other hand slowly travel down her stomach and stop at the entrance to her essence. His fingers lightly grazed her sensitive folds as he rubbed her clit.\n\nVictoria couldn't think, she didn't know where to put her arms, so she placed one up and behind her to grip his hair and the other she placed over top of his hand that was exploring her soaking pussy.\n\n\"You want it?\" Nic teased close to her ear, squeezing her neck harder as he slowly inserted two fingers inside her. Such sweet torture.\n\n\"Nic...,\" was all she could manage.\n\n\"Tell me. Do you want it?\" he growled.\n\n\"Yes, baby.\"\n\n\"What do you want?\"\n\n\"I\u2014I want you to make me come,\" she whispered, right before he inserted a third finger and began pumping in and out at a faster pace.\n\n\"Ooh, God, ooohh,\" Victoria muttered, as her body jerked. But Nic's arms kept her from moving too far, as he continued to lovingly assault her pussy. He wasn't reducing his speed, and he was quickly driving her crazy with his unrelenting attack. She just couldn't take it. And no more sounds could escape her throat as his hand tightened again.\n\nHer back was pressed tightly to his front, and she loved the feel of being totally naked when he was fully dressed. It made her feel...freaky, and she loved it. She felt herself gasping for air right as her lower region exploded and she saw stars. Her legs felt wobbly and the butterflies in her pussy that traveled to her stomach and up her spine made her entire body feel as though it were on fire. Victoria could feel the sticky, wet feeling between her legs, as Nic released her neck and removed all but one finger. One finger that continued to tease her delicate and overly sensitive clit.\n\n\"Oh, damn,\" Victoria whispered to herself. When he finally removed the last finger, Victoria turned around and kissed him. She felt his tongue rolling around in her mouth, and still she wanted more.\n\nWhen they pulled apart, Nic watched in awe as she grabbed the hand he had made her come with, and began sucking off her own juices. One by one she sucked and licked each of the three fingers which were covered in come.\n\n\"Mmm,\" she moaned, and then raised up on her tip toes to kiss him again. Nic was so hard, it hurt. He wanted to fuck her crazy. Screw gentleness.\n\nVictoria watched in anticipation as he quickly removed his shirt and pulled down his pants and underwear. She squealed when he picked her up and roughly held her against one of the closet walls. He braced his arms underneath her legs and held them far apart. Victoria could tell by the look in his eyes, that this was purely lust and about his release only. She braced herself as he swiftly entered her to the hilt. She gasped from the sharp pain of his entire thick member penetrating her so forcefully. \n\nThe wall had no give, so she was forced to take this pounding, and that really turned him on. The look of pain and pleasure written on her face.\n\nHe could feel his cheeks clenching as he pounded into her over and over again, never yielding. He was so close.\n\n\"Do you want me? My come?\" Nic asked, breaking her out of her daze.\n\n\"Yes,\" she whispered, wrapping her arms around his neck and resting her head on his shoulder while his body pumped ferociously in and out of her.\n\nHer simple answer was all he needed to push him over the edge. He felt that wonderful, well-known feeling as his dick jerked and began squirting his pearly seed deep into Victoria. He groaned as it seemed to last forever and he felt his knees giving. When he was sure he didn't have a drop left, he slowly pulled out of her and let her rest her feet on the ground.\n\n\"Nic, that was--,\" she started, but he cut her off by kissing her. Her swollen lips tasted so good. Every part of her tasted so good.\n\nWhen they finally parted, Victoria grabbed her towel and tried to take a second quick shower, but Nic joined her and 'quick' turned into almost an hour long escapade. They were definitely making up for any lost time together.\n\nThey both finally made it back into the closet to look for clothes. When Victoria was dressed, she turned to look as Nic was watching her again. He had yet to put on a shirt, and only had on a pair of jeans with no shoes. And damn, if he didn't look like an ad for...something sexy. 'Down girl,' Victoria thought, as she was about to walk past him.\n\nHe held out his arm, blocking her exit. \"Yeah, about Calamity's...we need to talk about that,\" he said.\n\n\"Why, what's wrong?\" Victoria asked.\n\n\"I don't want you working there anymore. One, it's not safe.\"\n\n\"I thought that's why you got rid of those guys...so now it should be safe, right?\"\n\nNic stuck his hands in his pockets. \"You're right. It should be. So, the real gripe I have is I don't like you working at a place like that in an outfit like that.\"\n\nVictoria shook her head. \"Nic, you've seen me in skimpier things. Hell, half of them are in this closet.\"\n\n\"Yes, but that's different.\"\n\n\"How so?\"\n\n\"Because I'm with you when you wear them. Men know that you belong to me...they don't know that at your workplace.\"\n\nVictoria scoffed, \"Belong to you?\"\n\n\"Yes,\" he answered matter-of-factly.\n\n\"Hmm, didn't realize I was like a dog. Or cattle,\" Victoria said, rolling her eyes.\n\nNic walked over to her, and stood so close that his body was lightly grazing hers. He stared down into her face, while she tried to resist his charms, by placing her hands on her hips.\n\n\"I thought this was my pussy,\" he said, as he traced his fingers up her thigh and under her skirt. Victoria didn't answer for fear that her voice would betray her due to the instant connection she felt with his fingers. Instead, she continued to stare at him.\n\n\"And my heart,\" he whispered, as his fingers trailed from under her skirt, up to her breast and over her heart. \"At least I thought they were.\"\n\nVictoria opened her mouth to speak, but she couldn't think of shit to say. Damn, he was right.\n\nWhen she eventually found her voice, she said, \"Fair enough. But Nic, that's my job and those outfits aren't THAT bad, you know.\"\n\n\"Maybe not on less shapely girls, but on you...men see tits and ass.\"\n\n\"Okay, you're exaggerating. No they don't,\" Victoria laughed.\n\n\"Yes, they do,\" Nic said, not finding the humor at all.\n\nVictoria backed away from him and walked out of the closet. She went down the hall, and grabbed her purse from the table. Before she could make it to the door, Nic grabbed her arm.\n\n\"Wait, I'm not done talking about this,\" he said, pulling her towards him.\n\n\"Nic, there's nothing more to discuss. I understand your concerns, but it's my job until I can find one that's better.\"\n\n\"You do realize that you don't have to work. You know I'll take care of you,\" Nic whispered to her.\n\nVictoria pulled away. \"You see Nic, that's\u2014that's exactly what people think. I\u2014I,\" Victoria tried, but couldn't finish. This whole thing could be so frustrating.\n\nBoth of them stood there staring at each other.\n\n\"I forgot to tell you last night, but Detective Marsh came to see me while I was at the hotel,\" Victoria mentioned, breaking the silence.\n\nSon of a bitch. Nic exhaled to keep his temper in check. \"What did he want?\"\n\n\"He just asked me questions about our relationship and if I knew of anything illegal that you've done. Of course I played dumb, but he, well, he insulted me. He thinks that I'm just your girlfriend who you pay to sleep with. And I let him think it so he wouldn't ask more questions, but I\u2014I don't like that people think that about me. And I realize that it started out that way, but I don't want people to continue to think that way,\" she said, quickly wiping a small tear in the corner of her eye.\n\nMarsh was an absolute dick, and Nic wanted nothing more than to punch him in his smug face. He could see the embarrassment on her face of dealing with people thinking this way. Marsh, her father, Sonny, Amber...hell probably more people than he realized because they never said it to his face. They just looked down on her. And she had never said a word about it until now. And this was all because of the way he had treated her. He had no one to blame but himself.\n\n\"Well, job or not, people are going to think what they want, but at least I feel better about myself if I don't sit around your condo all day waiting for you to come and...well, you know.\"\n\nNic knew he would have to lose this battle to win the war. It was his fault and he'd have to deal with it. Plus, he had some other matters to attend to. He slowly nodded and turned to walk toward the bedroom.\n\nVictoria wasn't sure if she should follow him, or just walk out of the door. She chose to leave, because she at least needed to see if she still had a job. Once she paid the cab driver, she turned and flinched when she walked by the sidewalk where she had ducked down from the glass. She stared up at the new shiny window. You wouldn't have even known there was a shooting over a week ago. When she walked in, she noticed Tracy flirting with a new bartender that she didn't recognize. She headed over to them.\n\n\"Hey Tracy,\" Victoria said, before Tracy pounced on her. \n\n\"Oh my God,\" she said in her thick southern accent, as she hugged Victoria. \"How are you? Where have you been? Do you still work here?\" Tracy shot out question after question.\n\n\"I'm fine. And I don't know if I still work here or not. Is Greg around?\"\n\n\"Yes, sweety, he's in the office.\"\n\n\"Thanks,\" Victoria said, as she made her way towards the back of the restaurant. She knocked on the door.\n\n\"What?\" she heard him answer.\n\nShe pushed open the door and saw him sitting behind the desk counting money. He froze when he saw her and then smiled.\n\n\"Well, well, look what the cat dragged in. How are you?\"\n\n\"I'm good. You?\"\n\n\"Can't complain.\"\n\n\"So, I know I've been gone a little while, but I was kinda wondering if I was still employed here?\"\n\n\"Do you want to be?\"\n\n\"Yes.\"\n\n\"Then you are,\" Greg said, looking back down at the money. \"I can put you back on the schedule starting tomorrow...cool?\"\n\n\"Oh, gosh, thank you Greg,\" Victoria said. Then she stared at him skeptically. \"You don't even want to know where I've been?\"\n\n\"No, it's all your business. Well, that and the fact that some guy called me the day after the shooting to say you would be gone for a certain amount of time, but he wouldn't tell me how long or where. He was just a little scary on the phone. Boyfriend?\"\n\nVictoria placed her hand over her face and nodded, \"Sorry about that.\"\n\n\"I figured. All the good ones are taken,\" Greg smiled at her. Victoria smiled back, and as the uncomfortable moment passed them by, Greg cleared his throat.\n\n\"So, anyhow, you're on at five tomorrow. See you then,\" he said as he continued to count.\n\n\"Thanks Greg,\" Victoria said, walking out of the office and closing the door.\n\n***************\n\n\"You sure Nic,\" Jimmy asked. \"You know, there's no going back after this.\"\n\nNic nodded, \"Yes, I'm sure.\"\n\n\"Well, I'm happy for you. I never thought I'd see this day. And over a woman at that,\" Jimmy smirked. \n\nNic was finally setting his plans in motion. He couldn't delay it any further. He knew he was taking a huge gamble, but damn if she wasn't worth it. He loved her and he hoped what he was doing would truly show her exactly how he felt about her.\n\n\"So, just those we have deals with now, right? Anyone else will just eventually get the message, right?\"\n\n\"Right.\"\n\n\"And you sure you want to give me what you did? I mean, I thank you, but it's too much Nic. I wouldn't feel right.\"\n\n\"It's yours. Tell Isabelle it's a small compensation for keeping you away all these years.\"\n\nJimmy smiled, as he pulled out his cell phone and began making the first of many calls. \n\nNic walked back into his office, to find Reuben still busy making and printing documents. He never thought lawyers could be trustworthy, but over the years, Reuben had proven that he could be. But a slight sting hit Nic's nerves. He had thought Eddie trustworthy as well. Even more reason to continue with his plans. He still didn't have all the pieces in position, but if everything turned out like he envisioned it would...then he would be one happy man. A man who probably didn't deserve it, but that was between him and his maker.\n\nNic had already spoken with Jimmy and Raymond, only one left and that was Antonio. \n\nWhen Raymond brought Antonio into Nic's office, Antonio looked nervous as always. He quickly glanced back and forth between Nic and Reuben.\n\n\"Hi, Nic. You wanted to see me?\"\n\n\"Yes, Antonio. Have a seat,\" Nic said, while he signed documents.\n\nAntonio felt so anxious. He never wanted to say or do the wrong thing around Nic, which of course he always did. But at least Nic looked calm and relaxed. He wasn't sure who the guy was beside him, but he just hoped that the whacking had stopped with Eddie.\n\n\"Antonio, this is my lawyer, Reuben. He's present today to make sure everything goes smoothly,\" Nic stated, shuffling a group of papers.\n\n\"If this is about the other night, I feel like I should stop you, before we go any further. I really need to tell you--,\" Antonio started.\n\n\"Now...is not really the time to bring up anything from the other night,\" Nic warned, narrowing his eyes.\n\n\"I understand. But basically Nic, I just want to tell you that I don't think I'm the right guy that you're looking for. I mean, I thank you for the opportunity you have given me, and maybe in a few months when I'm back at Best Buy I'll be kicking my own ass, but I just can't do this anymore. And I know you called me in here today, but truthfully, I was going to ask to speak to you about all of this. I'm sorry if I've let you down in any way,\" Antonio finished. He had been practicing that speech all morning and made sure to look Nic directly in the face while delivering the news.\n\nNic leaned back in his chair. \"You have done everything that I have asked you to do. I have no complaints.\"\n\nAntonio exhaled. \"Thank you, Nic.\"\n\n\"What is it that you want to do, Antonio?\"\n\nAntonio smiled. He knew exactly what he wanted to do. \"I really, really want to own my own club. I mean, that would be the best. And who knows, maybe in time open up one on the west coast too. Those cool exclusive kind that only let in hot people and celebrities. I have so many plans for it.\" \n\nJesus, this kid did remind him of his brother. Nic nodded, \"I thought so. Sign this.\"\n\nAntonio stared down at the document. \"What's this?\" he said, picking up the pen.\n\n\"It's a document that states I'm turning over fifty percent ownership of my club to you.\"\n\nAntonio thought his eyes were going to pop out of the sockets. He couldn't have heard that right. There was no way. \"Wait, I'm sorry Nic. What did you say?\"\n\n\"I'm leaving, Antonio. For good. Jimmy is in the process of giving my clients alternative, trustworthy sources, so I'm out. And there's not really any going back at this point. I'm cutting all ties with the business and pretty soon this city as well. I called you in here today to let you know of my plans. I'm turning over ownership of both of my restaurants to Jimmy. And I spoke to Raymond. He doesn't really want full responsibility, so you two will be co-owners. He preferred to just stay on as head of security for my--well you and Raymond's club if you accept.\"\n\nAntonio couldn't believe it. Him?! An owner of a club...which was like a dream come true. \"Hell yes!! I mean, yes, of course. Are you sure? I mean, this is me we're talking about. You sure Raymond is cool with this?\"\n\n\"If you haven't noticed, Raymond doesn't really like being around people...or talking to them, or dealing with them, so he's just fine as head of security, while you're in charge of operations. So yes, I'm sure. Don't fuck it up,\" Nic said.\n\n\"No, sir! Of course not. I just...oh, man. I can't believe this,\" Antonio said, running his hands through his hair. His momma is going to be so proud. Her boy, finally making it in the world.\n\n\"We've had our problems in the past, but you're a pretty good guy and you deserve it. Invest well and it will pay off big time. Reuben will have you sign all the documents.\"\n\nAntonio stood up and leaned over the desk to shake Nic's hand. \"Thank you so much, Nic. I can't even tell you how wonderful this is. I mean, shit, thank you. I swear I'll name my first born after you...even if it's a girl. Really, thank you.\"\n\n\"You're welcome, Bobby,\" Nic said, as he started looking over more documents.\n\nAntonio wasn't sure who the hell Bobby was, but Nic looked extremely busy. So he hopped up and walked toward the door, but then turned around. \"Hey Nic...where will you go? What will you do?\"\n\nNic gave a small smile, but didn't answer.\n\n*************\n\n\"Honey, I'm home,\" she heard Nic say as he entered the condo. She jumped up from the couch and ran to give him a big kiss, knocking him back against the wall.\n\nThe past couple of days with Nic had been absolute bliss for Victoria. He still conducted private calls, but he had been spending almost every day with her. And they had come to a compromise with the Calamity's situation. She would continue to work there, but her hours had to be cut back and she had to move in with him. At first she protested, but he had said it was for her own safety, and with her hours cut back...she wouldn't have enough for rent anyway. Victoria soon realized that she had painted herself into a corner. Sometimes she would forget exactly how smart and manipulative her man could be. ",
        "So, the few belongings that she actually owned were neatly packed away in his condo. She had wondered why he didn't want her to move into his house, but he said he had his reasons. At first, it stung...but she had to trust that his reasons weren't anything to do with him not thinking highly of her. She trusted him. And since he practically lived there with her, it helped to ease the sting. \n\n\"If I get to come home to this every night, then I'm sold,\" Nic mumbled in between her kisses.\n\n\"I'm sorry, I just missed you,\" Victoria said.\n\n\"Missed me? I've only been gone for a few hours.\"\n\n\"You've been gone since eight this morning, and it's now six.\"\n\nNic stared at her, before a slow smile crept across his face. She was crazy about him, that's for sure. And he loved it. At least he wasn't in this alone.\n\nVictoria's eyes widened, \"I mean...well, it seemed like a really long time.\" She tried to back track realizing how insane she probably sounded. But she had missed him.\n\n\"I love you too, baby,\" he said, patting her on the ass as he walked into the kitchen and sat a bag on the counter. \"Don't peek in there.\"\n\nVictoria was curious, but she didn't want to ruin his surprise.\n\nWhen he emerged from the back room, he was in his navy blue workout pants and a soft looking dark gray shirt. His hair was wet and slicked back, and he looked absolutely adorable.\n\n\"Do me a favor. Go sit out on the terrace and look sexy,\" he said.\n\nVictoria was wondering what the hell was going on, but she said nothing. Instead she walked out onto the terrace and sat down at the table. It was a warm night, so she only had on a pair of short cotton shorts and a white tank top. She wasn't wearing a bra, but she figured he would appreciate that. She stared out at the sky. The stars looked as though they had been spray painted onto a black canvas. \n\n\"Beautiful, isn't it?\" she heard him say from behind her. She turned and he was staring at her. He had a fancy plate in one hand, two champagne bottles in the other hand and a champagne bottle underneath his arm.\n\nNic sat the tray of chocolate covered strawberries on the table, and then quickly poured a glass of champagne for both of them.\n\n\"Nic, this looks...amazing, what's going on?\"\n\n\"We're celebrating,\" he said, handing her a glass.\n\n\"Celebrating what?\"\n\nNic sat down and took a sip. \"New beginnings.\" He picked up a chocolate covered strawberry and brought it to her lips. She stared right at him and took a seductive bite, and then closed her eyes and whimpered. \n\n\"That's good,\" she said, opening her eyes. \n\nThe woman can bite a strawberry and send blood pumping through his dick, Nic thought. He leaned over to kiss and lick her lips, tasting chocolate and champagne. \"Very good,\" Nic said, licking his own lips.\n\n\"So, what new beginnings are we celebrating, Mr. Andretti?\" she asked.\n\nNic leaned back in his chair. \"A beautiful virtuous woman once told an unmoving arrogant prick that there is always a place for decency and at the end of the day, money isn't everything and it never was. Well this prick finally listened. I'm out, baby.\"\n\nVictoria continued to stare at Nic. \"I don't understand. What do you mean?\"\n\n\"I'm out of this business. For good. Nothing else illegal.\"\n\n\"What?\" Victoria whispered. \"You're\u2014you're...\" She couldn't even finish the sentence. \"Oh my God!\" she screamed as she hopped up and straddled his lap.\n\n\"I'm so happy! Are you serious?\" Victoria kept asking him over and over, in between kisses. \n\n\"I'm serious, baby,\" Nic said, as he gently pulled her back to look into her eyes. Beautiful brown pools that were quickly watering up. God, he loved her so much, and now it was time to show her exactly how much.\n\n\"I love you and I have one more thing to tell you,\" Nic said, lifting her up from his lap.\n\nVictoria quickly wiped her eyes. There was nothing else he could possibly tell her that could match the feeling of elation that she felt at the moment. She sat back down in her chair and waited for the other news.\n\nNic stood up and pulled something from behind his back. It was a book. When he handed it to her, she knew exactly which one. Her book of 100 Greatest Love Poems. \n\nHe walked around behind her and kissed the top of her head. \"I added something else to it...it's at the bottom of the other poem I wrote in the back,\" he whispered in her ear.\n\nVictoria smiled and opened the book to the last page. She quickly skimmed over the beautiful Italian cursive of the first poem he recited for her. But when she reached the bottom, she only saw a few words scribbled on the page. She leaned closer to read them: 'I Love You. Turn Around, Beautiful'. \n\nVictoria crinkled her brow as she turned around. \"Nic, it just says--,\" she started, then froze. Her hand went to her mouth in utter shock. She came face to face with Nic kneeling behind her, with a familiar looking blue box tied with a white ribbon, in his hand.\n\n\"Victoria?\"\n\n\"Yes,\" she quickly replied.\n\nNic raised an eyebrow and smiled. \"Is that a yes because I said your name, or yes because you know what I'm about to ask?\"\n\n\"Both,\" Victoria whispered, visibly shaking at this point.\n\n\"Marry me?\"\n\n\"Yes! Absolutely,\" she shrieked, as she leaned over to kiss him. Her legs were complete jello as she slid over top of him, straddling his knee. She couldn't even breathe, but she knew it was a combination of shock and joy, which she could possibly die from.\n\nWho would have even thought this possible? The first time they had met, she had been scared to death. And when he had walked briskly into the his office and sat down in front of her, he was probably the most handsome man she had ever seen. Next to his actor friend, Mr. Big Time, who she had crushed on for years in various films\u2014a fact that she still hadn't told Nic. \n\nBut it had been Nic's eyes during their first meeting that caused her to shiver. They looked so cold and empty. But to look into them now, instead of a blue glacier storm, they resembled something more peaceful. Like a cool, calm crystal lake. She felt as though she could stare into them forever.\n\nHe pulled the bow off of the light blue box and opened it. The most jaw-dropping, gorgeous diamond ring was staring back at her. He slid it onto her finger and kissed her again. She was almost afraid to close her eyes for fear that she'd lose the small platinum trinket, which she was sure cost more than her car.\n\n\"Do you like, baby?\" Nic asked.\n\nShe didn't know what else to say. At this moment, words were so underrated. There wasn't even a phrase she could utter to explain the feelings she felt. Nothing. So instead of trying to inarticulately tell him that she loved him, she pressed her lips to his mouth and kissed him deeply.\n\nAs their lips continued to lock, Victoria thought about everything that had happened. She was engaged? To Nic Andretti? Life...could be full of impossible, yet incredible surprises.\n\n***************\n\nThe next day, Victoria couldn't stop smiling, even as they cuddled on the sofa watching some mystery romance movie on Lifetime. She was practically in his lap with her head leaning back against his solid chest. His arms were tightly wrapped around her, while her fingers mindlessly stroked the top of them, loving the feel of the smooth delicate hair that lightly covered his masculine limbs.\n\nEvery few seconds, she would stare down at her diamond ring. It was the most beautiful thing she'd ever owned, and definitely the most expensive. She had debated on asking him how much it cost, which was tacky, but she couldn't help it. But she decided against it, telling herself that it would make her even more self-conscious than she already was.\n\nTelling Marianna earlier that morning had been fun. She screamed through the phone into Victoria's ear, almost causing a slight ringing, and then proceeded to babble on about babies this and babies that. Jimmy and Isabelle had called her together on speaker phone to congratulate her on \"slaying the beast\". They were so cute and funny over the phone. They finished each other's sentences...and when Jimmy said something Isabelle didn't agree with, she would argue back with him, and eventually he'd just laugh and say she was right.\n\nWhen she called to tell Antonio, she could tell he was in complete shock. The last news he had heard was that she had broken up with Nic. Victoria could also tell there was just a hint of disappointment in his voice, but he still congratulated her and wished them the best. He told her about the new things he has lined up for the club and how grateful he was to Nic. He already moved his mom out of the place she was in, and into a small house with a washer and dryer. That's all his mom cared about, and he joked that she probably slept in the laundry room the first night.\n\n\"I know who did it,\" Nic whispered to her, bringing her thoughts back to the movie.\n\n\"No way! We've only been watching it for fifteen minutes. You can't already know who the killer is. I doubt we've even seen everyone.\"\n\n\"Trust me, I know.\"\n\nVictoria turned her head toward him to give him a kiss when her cell phone started ringing. She leaned over the table and plucked if from her purse. The screen read private, but she was pretty sure she knew who it was.\n\n\"Hello?\"\n\n\"Hello, Victoria. It's Paul,\" he said.\n\n\"Hi, how are you?\"\n\nNic could hear that it was a man's voice on the other end. He hated this new feeling of jealousy that was overcoming him. Actually, it wasn't new. He had felt it the second day they were together, when Sonny had wanted to bet her for a night. That slight tinge from the green-eyed monster had reared its head even then. But Nic knew for a fact that Victoria didn't really hang around other women, so he wondered who this guy was. His mother, Jimmy and Antonio were the only people he knew that had that number, and they...nevermind, he knew exactly who it was. Paul Marcone. He also had her number, since he had called her while she was staying with his mother.\n\n\"I'm fine, now that I know you're safe,\" Paul said.\n\n\"Oh, thank you,\" Victoria said, before Nic snatched the phone out of her hand and pressed speaker. She twisted around to grab it back from him when he put a finger to his mouth. Victoria sighed.\n\n\"I would have liked to have called much sooner, but under the circumstances, I felt it was best to keep away. I hope you understand.\"\n\n\"Oh, of course. Even you just calling now means a lot.\"\n\nSilence.\n\n\"So is everything okay now? I'm assuming that the guys responsible were handled?\" Paul asked.\n\n\"Um,\" Victoria said, as she watched Nic shake his head. \"Um, I don't really know about all of that stuff, Paul. They don't tell me those things.\" Victoria hated lying to Paul. She knew for a fact that the three guys who had kidnapped her were dead. She saw that with her own two eyes. But for whatever reason, Nic didn't want Paul to know about any of that.\n\n\"Of course. And that's probably the best thing. I'm just glad you're back home and safe.\"\n\n\"Thank you. So am I. How's Sonny? I know you were worried about him.\"\n\n\"Sonny, well, he's Sonny. He's fine. He actually spent the past few weeks vacationing with some girl in Amsterdam. But he refused to tell me until last night because he knew I would have disapproved.\"\n\nVictoria looked at Nic when he pinched her arm. He mouthed, 'Ask if he's still there?' Victoria narrowed her eyes at him mouthed back 'No.'\n\n\"Well, that sounds like Sonny. I'm sure he had fun though.\"\n\n\"Yes, but it was irresponsible. Especially with everything that was going on,\" Paul said, then he chuckled. \"You know, I used to think that because Nic and Sonny grew up together, that maybe some of Nic's more honorable characteristics would rub off on my son. But over the years, they became more enemies than friends.\"\n\n\"Well, all of it is silly to me, and perhaps both of them should grow up,\" Victoria said, looking at Nic and sticking her tongue out.\n\n\"That's exactly what my wife would have said,\" Paul laughed, then sighed. \"Well I'll let you go. But I just wanted to make sure that you were safe. And if you ever need anything, you know you can come to me.\"\n\n\"Thank you, Paul. And likewise. Good bye,\" Victoria said, then clicked the cell phone shut.\n\n\"If you ever need anything?\" Nic repeated, glaring at her. \"What, is he supposed to be your genie in a bottle now?\"\n\nVictoria could tell by the clipped tone Nic was using, that he was pissed.\n\n\"That's not what he meant. It's just he knows for a while I was having a hard time. And he doesn't know that you and I are together. He was just trying to be nice.\"\n\n\"Nice, huh?\" Nic said as he scratched his slight five o'clock shadow. \"How nice?\"\n\n\"Don't even go there. You weren't there when he just handed me seventy thousand dollars, knowing it was going to his competition and that he would probably never get it back, but he did it anyway. And he didn't want anything in return.\"\n\nNic turned away from her as his face burned with shame. Was she throwing their past relationship back in his face? \"You mean like I did,\" Nic said, moving away from her and standing up to stretch.\n\n\"No, that's not what I meant. I wasn't comparing you two. There's no comparison. I look at Paul more like...like a father figure. And you...well, I definitely don't see you as my father,\" Victoria laughed, but then quieted and cleared her throat when she noticed that Nic wasn't cracking a smile.\n\nShe stood up, walked over to him and placed her arms around his waist. \"I don't need anything from Paul, Nic. He's just a really nice older man who holds you in very high regard, you know.\"\n\nNic knew that she was right, but he still couldn't help feeling possessive over her.\n\n\"Well, just know from now on if you need something, you come to me, capisce?\"\n\nVictoria laughed. \"Si, capisce!\"\n\n*************\n\n\"I can't believe that's where you want to go for your honeymoon. You're going to pass over Paris, Venice, Rio de Janeiro and other spectacular places for an aquarium?\" Nic said, shaking his head still in disbelief. He stared over at his wife's beautiful face. His wife...he loved that. They had been married approximately twenty minutes. Twenty amazing minutes.\n\nVictoria had shocked him in not wanting a big wedding. Actually, she hadn't wanted a wedding at all, insisting he was all she needed. And she also commented that there wouldn't be many people, if any, to invite on her side, other than her mother. Her outlook on it had been a welcome change. He and Amber's wedding had been small, but very expensive, mostly due to Amber. And half of the people who were there, Nic wasn't friends with, so he had spent most of the reception talking to Jimmy and Raymond. Yes, he preferred Victoria's low key approach. They had gotten up early that morning and gone to City Hall. The whole process lasted less than ten minutes, but they couldn't stop touching and kissing each other.\n\nVictoria smiled, and nodded her head. \"Yep. You've been to all those other places right?\"\n\n\"Yes.\"\n\n\"I want to experience something new with you. Somewhere you haven't already been and something you haven't already done. Since you and I have been together, we've visited some amazing places, dined in the finest restaurants...but I want to do this, well more my style if you don't mind.\"\n\nHe looked over at her, while she was piling a fork full of pancakes in her mouth.\n\n\"Izz good, huh?\" she smiled at him, chewing around her food. He had to chuckle.\n\n\"It sure is. Because there's nothing better than pouring sugar on top of carbs and shoving it into my mouth,\" Nic joked, biting into his pancakes.\n\nVictoria lovingly rolled her eyes.\n\n\"I can't believe this. I'm essentially spending what is supposed to be my wedding reception at The International House of Pancakes and you want to spend our honeymoon observing fish.\"\n\n\"Have you ever been to the Aquarium?\"\n\n\"No.\"\n\n\"Neither have I, but I've always wanted to go. Hey, you asked me what I wanted.\"\n\n\"Which I now regret,\" Nic said, then dodged a packet of sugar that she threw at him. \"But I still love you, Mrs. Andretti.\"\n\nVictoria smiled. She would NEVER get tired of hearing that.\n\n**************\n\nA few days later, they set out for their honeymoon. Victoria was so excited. She loved the thought of experiencing something new with Nic that he'd never done. \n\nBut when they pulled into the Aquarium entrance, her heart sank.\n\n\"Oh, shit,\" Victoria said, as she stared at the empty parking lot. \"It must be closed today. I swear, I checked it online and it's supposed to be open all year long.\"\n\n\"Hmm,\" Nic muttered, as they parked.\n\n\"Nic, we might as well turn around. I'm sorry.\"\n\n\"Well, we're already here, we can at least check and see if they will be open tomorrow.\"\n\nNic escorted Victoria to the ticket booth. Standing there was a man dressed in one of the park's uniforms and a big smile.\n\n\"Hello Mr. and Mrs. Andretti. Welcome to the Aquarium.\"\n\nVictoria's mouth dropped and felt like it hit the pavement. Did he really close down the park for them? She looked up at Nic who pretended to be surprised, like he didn't know.\n\n\"Hi,\" Nic said, shaking the man's hand.\n\n\"Right this way, sir,\" the man said, leading them inside the large building. All of the lights were on, but there wasn't another soul in sight. No lines to view the exhibits, no screaming, crying kids, or cameras flashing every few seconds. Just them and the beautiful marine animals. \n\nVictoria couldn't stop shaking her head. She still couldn't believe it. \"Oh my God, Nic...this is, it's amazing,\" Victoria whispered as they moved from tank to tank. She had never had the time nor money to spare to visit this Aquarium. She was mesmerized by the fish, which came in all different sizes and colors. Some were absolutely terrifying like the eels and tiger sharks...others were adorable and she would 'ooh and ahh' over them, like the penguins and seals. \n\nNic walked closely behind her, again more interested in her than what they were viewing, but Victoria was quite alright with that. Every now and then his hands would grope her, but he tried to be good and somewhat pay attention.\n\nOne brightly colored fish kept following her as she walked back and forth in front of the tank. It was the cutest thing and she kept laughing at it.\n\n\"Nic, I think he likes me just as much as you do,\" she giggled.\n\n\"Hey, come here and close your eyes,\" Nic said to her, pulling her away from the stalker fish. Victoria complied and when he told her to open them, she screamed and jumped back into his chest. Staring right at her was probably the ugliest fish known to man. It was giant grouper. He was twice the size of her and had the biggest mouth that was sure to cause her nightmares.\n\nNic laughed and wrapped his arms around her. \"Don't worry baby, I'll protect you,\" Nic whispered into her ear.\n\nAs they continued on their tour, they walked past a tank full of jellyfish. Victoria observed their electric, neon colors and how smoothly they flowed through the water.\n\n\"Now these, I like,\" Nic said, staring at them.\n\n\"Hmm, beautiful and dangerous...just like my husband,\" Victoria retorted sarcastically. Nic chuckled as he grabbed her hand and led her to another tank.\n\nWhen they reached the final room, Nic opened the doors and Victoria gasped. \n\nIt was a large room, and the tank was from floor to ceiling and covered two walls. The tank was filled with brightly colored coral reefs and fish. And located directly in the middle of the room was a small table, beautifully decorated, with two silver covers.\n\n\"Nic, I--,\" Victoria was speechless. Again.\n\n\"I figured a little of your style and mine mixed together, and we couldn't go wrong with this honeymoon.\"\n\nVictoria looked at the bright blue water from the tanks and then to their table. This was all way more than she would have ever expected. ",
        "Once they sat down and Nic removed the covers from their food, Victoria could finally speak.\n\n\"Nic, thank you. This has been so incredible. Something I will never forget.\"\n\n\"I'm glad you like it, baby. I enjoyed it too.\"\n\nThey ate and talked for hours, enjoying every moment they were there. In the car on the way back to his condo, Victoria fell asleep. He sat in his parking place staring at her sleeping form for several minutes before he begrudgingly woke her up so they could go inside. \n\nInside the condo, Victoria stood in the bathroom brushing her teeth and flossing. Nic stood behind her, just observing. She felt a little self-conscious, but as his wife, this is something she would normally be doing in front of him. She smiled at him in the reflection of the mirror, to ease her embarrassment. But he didn't smile back. He just continued to stare at her.\n\nVictoria grabbed her birth control from the sink and popped one of the tiny pills out. She lifted her hand to her mouth about to swallow, when Nic's hand stopped her, causing her to drop it down the drain.\n\n\"Nic, I--,\" she started, before he turned her around and began kissing her. Oh, his kisses were always so sweet and powerful. She felt him pull the pack out of her hand and she heard clanking noise as he dropped it into the trash. Victoria's eyes widened, but then closed as his tongue caused her to moan.\n\nWhen he finally pulled away from her, Victoria's eyes were still closed and her lips still puckered up. She slowly opened them to stare into his. \"Are you sure?\" she asked.\n\nShe could read the look in Nic's face. Yes, he was sure. And instead of replying, he kissed her again, and then led her out of the bathroom and to their bedroom for an unforgettable end to an already magical honeymoon.\n\n**************\n\nNic shook his real estate agent's hand. He had finally done it. After three separate cleaning crews and he and Jimmy carefully inspecting every inch for any leftover evidence, he sold his house. Fully furnished, because he didn't want to drag anything from his old life into his new one. He wanted a fresh start...in a new place. He only kept clothes, a few books, drawings and other personal keepsakes.\n\nGetting rid of everything, including his old occupation was more refreshing than he thought it would be. He never thought he would have ever traveled down this road, and especially not for a woman. He had resigned to believe that he would never have marriage like some people did. The kind of marriage where you damn near ran red lights because you couldn't wait to get home to your wife. Or every time you saw something or heard something interesting, you thought of your spouse first because you knew they would like it. Victoria was indeed his entire world. And if that made him look weak to some people...fuck them.\n\nThey may not have had the fairytale meeting that some people share, but his love for her was no fairytale. It was as real as anything he'd ever felt in his life and only kept growing stronger with each passing day.\n\n**************\n\n\"Hey Vicky,\" Olivia said in her usual tired tone.\n\n\"Hey mama, how are you?\"\n\n\"I'm okay. Am I disrupting you from anything?\"\n\n\"No, you're not. I'm just packing our clothes,\" Victoria said, as she kicked another box out of her way. Nic had told her about selling his home and buying a new one in California. He had said it while they were lying in bed, so matter-of-factly. That was Nic, though. There hadn't really been any discussion about it, and she wanted to be mad, but she couldn't. She really wanted to go. So instead of blessing him out, she went down on him. So much for feminism.\n\n\"So when do you officially leave?\"\n\n\"In two days,\" Victoria said, still not really believing how quickly this all happened. Her mother got quiet.\n\n\"What's wrong, mama?\"\n\nOlivia exhaled. \"Well...James is sick.\"\n\nVictoria immediately stopped tossing items into the boxes. \"What?\"\n\n\"Yeah, apparently the doctors have told him he has stomach cancer. But he's as stubborn as ever and is refusing treatment.\"\n\nVictoria had a flood of emotions running through her, but she couldn't pinpoint exactly what she felt. Her father was sick and possibly dying?\n\n\"Do...do you think I should go see him? I'm not sure if he would even want to see me,\" Victoria said, sitting down on the closet floor.\n\n\"I'm sure he does. Even if he's still mad after all this time, he would still want to see you.\"\n\n\"Does he know about me being married?\"\n\n\"If he does, not from me. I don't really speak to him all that much. Legally we still married, but that's about it. But I did go visit him earlier this morning.\"\n\n\"Okay. Thank you for telling me.\"\n\nVictoria hung up with her mother. It had been several months since she had last seen her father. After he had kicked her out and called her several awful names, she had thought that she would never forgive him. And she still hadn't. But God forbid that he should die without her having a chance to reconcile with him.\n\nShe grabbed her purse and left the loft.\n\n***************\n\nVictoria hated hospitals. She couldn't remember the last time she had actually been in one. The weird smell and everything was eerily bright and white, even though people were sick and dying. It made her feel nauseated.\n\nShe had signed in at the front desk and walked back to see her father. His door was closed, but she gently knocked.\n\n\"What?\" she heard her father ask in a pissed off manner.\n\nVictoria took a deep breath and walked in anyway. She noticed her father sitting up in the bed watching sports on TV. He turned and glanced at her and then focused back on the game.\n\n\"Hey daddy,\" Victoria said, trying to let it not bother her that he ignored her entrance. But he still didn't answer. \n\n\"Mama told me you were sick. How are you feeling right now?\"\n\nStill no answer. Victoria squeezed her hands closed and walked closer to the bed. \"Are you going to ignore me?\"\n\nFinally he turned to look at her. \"What do you want?\" he snarled.\n\n\"I just wanted to see you, since you haven't been feeling well.\"\n\n\"Well maybe I don't want to see you. I still have nothing to say to you.\"\n\nThat stung. A lot. She glanced up at the TV and focused on the players running up and down a basketball court. She wasn't going to let her father get away with treating her like shit this time. She looked back at him.\n\n\"Funny how you hardly ever said a word to me when I was doing things the right way. No appreciation, nothing. But the moment I do one thing wrong in your eyes, you are so quick to cut me off.\"\n\n\"You and your mother were just ungrateful and you both looked down on me.\"\n\nOh, this man was delusional. \"Daddy you had a hundred get rich quick schemes that you would constantly make me and mama help you with. We both sacrificed so much to help you, and you never seemed to give a damn about us.\"\n\nJames cut his eyes toward Victoria. \"You were just a spoiled child.\"\n\nVictoria almost laughed incredulously. \"Are you kidding?! You never spoiled me a day in my life. I didn't even know what the hell that meant until I met Nic. And in case you're wondering, this is a wedding band,\" Victoria said, holding out the ring for her father to see. \n\n\"We got married and will be moving to California in two days. Look daddy, I came here to see if you were alright. Not to get into an argument with you. There are things you've done that upset me, and there are things I've done that upset you. But there's no reason why you and I can't at least talk about it.\"\n\n\"I meant every word I said to you!\" her father barked, raising his voice. \"You are no daughter of mine! You think just because he puts a ring on your finger that you can erase that fact that you was nothing more than a gold digging whore with no self-respect? It won't. Now get the hell out of my room!\"\n\nVictoria stared at her father. He looked even older than she last remembered. She picked up her purse and walked towards the door, but then turned back around. \"You know, I'm done trying to understand you. Trying to figure you out. You are just a mean old bitter man. I tried to love you over the years, but you made it damn near impossible. And at the end of the day, I look around and I have a family that loves me. What do you have?\" she said, then walked out.\n\n**************\n\nNic could tell that the plane ride was making Victoria anxious. She was so excited, she could hardly contain herself. She had told him that she was more than ready for this new chapter in their lives. \n\nNic had already flown out to see the house that he bought earlier that month, but Victoria had yet to see it. He hoped she would like it. It was located in a cute, quiet gated suburb with its own private park. The moment he saw the house, he knew that this was the one she would have picked out. \n\nWhen they finally pulled up to the house, he noticed Victoria's eyes widen. \"This is our house?\" she whispered. Our house. He would have to remember to play that over and over again in his head, because her saying it gave him a warm feeling. He watched as she eagerly hopped out of the car and ran to the door. Nic laughed to himself as he pulled the key from the ignition of the rental car and got out.\n\nHe followed behind Victoria as she walked in and out of every room at least three times. The first time she was shaking her head in disbelief. The second time she was learning where each room was and by the third time, she was mentally placing different things in different areas.\n\nThe house really was a nice place for a family. And Victoria really appreciated the pool. Back home, it stayed a little too chilly to really enjoy a pool, but here...the weather was perfect, and she was sure they would be taking full advantage of it.\n\nThey didn't really have any furniture, something Nic said he was leaving up to Victoria. She was extremely nervous about that venture because there was definitely a difference in decorating a small one bedroom in a rusty old apartment, and a five bedroom house with lots of space. But she was up for the challenge.\n\nThe few items that they had actually packed would be arriving the next day, along with the cable company so he could use his computer on a secure network. Not that security really mattered anymore, when it came to his business prospects. Something he could finally breathe about.\n\nThat night they had takeout while sitting on the floor in the dining room. At that moment life couldn't get much better. Nic was happy. Truly happy for the first time in a long time...but he started feeling uncomfortable. When they went to sleep on the soft carpeted floor in the master bedroom, Nic couldn't fall asleep. He could hear Victoria lightly snoring, but this dark feeling looming over him...the same one he had felt in Bali, was bothering him. And although he wasn't superstitious, he knew not to ignore that nagging feeling.\n\n**************\n\nOver the course of a week, they finally got several things up and running and Victoria had been picking out little household appliances here and there. She still wasn't quite ready to take on the task of fully decorating.\n\nNic had driven her to the site where his new office would be. She could tell he was excited although he tried to play Mr. Cool about it. He was finally going to be an architect, something he had wanted to do since college. But they still had a little while to wait before all of the plans were finalized.\n\nWhen Nic wasn't there, Victoria spent most of her time on her cell phone answering calls from her mom, Marianna and Isabelle. Those three checked up on her so much, that she highly doubted another kidnapping plot would ever happen. \n\nBut it was on a random Tuesday when her whole life changed. Oh, boy did it change. She had been feeling a little off, so she did what most women did in that situation. Visit the local drugstore.\n\nVictoria just couldn't believe it. She could, but she couldn't all at the same time. Pregnant?! She sat there on the bathroom counter for what felt like an hour, but in actuality had only been five minutes. Pregnant. It's definitely something that she and Nic wanted eventually, she just wasn't expecting it to happen so soon. Really soon, since they had only been married for a little over a month. She knew Nic would be happy about it, because he's the one who tossed out her birth control, but she still didn't expect it to happen SO soon. She didn't know what she felt. A part of her was ecstatic. But the other part was scared shitless.\n\nShe hopped off the counter and wrapped the device in a huge wad of tissue and placed it in the trash. Eventually a big smile spread across her face. They were going to have a baby. \n\nThe next day a quick but suspenseful trip to an OB/GYN in the area confirmed what Victoria had suspected. But she wanted to break the news to Nic in a memorable and...sexy way. \n\n**************\n\nNic was worn out. He had been on the phone all day with different contractors and business investors for his company. He would be so glad when the little details were out of the way, and he could get it up and running. \n\nWhen he unlocked the front door, the inside of the house was much darker than normal. He noticed there were several candles lit, giving the room a warm glow. And the heavenly smell of cooking must have connected to his senses, because his stomach grumbled as if on cue.\n\nHe quietly closed the door and walked toward the bright light coming from the kitchen. And just like that...his hunger was forgotten, as he could feel his manhood rising. Victoria stood with her back to him, giving him the perfect view of her supple, round rear in a pair of light pink lacey panties that showcased the lower part of her ass cheeks. And a garter belt clipped the sexy thigh high stockings in place, which led down to \"fuck me\" heels. And that was just the back of Victoria. Goddamn.\n\nNic loosened his tie and sat his keys on the counter. The small jingle caused her to turn around and face him. Her tits sat perfectly in the light pink lace bra. God bless Minka. He had to remember to give her an extra tip. His wife was fucking hot!\n\n\"Hey baby,\" Victoria said, smiling at him. She loved the pure animalistic expression on his face. Well, for those games, he'd have to wait.\n\n\"Like what you see?\" Victoria asked, slowly spinning around, with a spoon in her hand as she licked the white chocolate from her fingers. The contrast was not lost on him, as his mouth parted.\n\n\"Oh, yeah,\" Nic whispered. \n\n\"Well, tonight...we'll call underwear night,\" she said, as she cleaned off her hands and walked toward. She immediately kneeled, and Nic closed his eyes on instinct. But instead of doing what he...well, hoped, she unbuckled his belt, yanked his pants down and stood back up. Then she removed his tie, jacket and unbuttoned his dress shirt.\n\nNic stepped out of the pants puddle by his ankles. Once everything else was removed, including socks and shoes, he stood there in his black boxer briefs.\n\nVictoria grabbed his hand and led him into the living room and over to the couch, the only piece of furniture they had in the room. \n\nNic couldn't help but stare at her ass as she swayed her hips back and forth in front of him. \n\n\"Okay, you sit down right here,\" Victoria said, patting the sofa. When Nic sat down, she straddled his lap.\n\n\"I have something I want to give you,\" she whispered.\n\n\"Is it this?\" Nic said, reaching down to stroke his fingers between her legs. \"Because if it is, I'll be the happiest man in the world.\"\n\nVictoria giggled and pulled his hand away. \"No.\"\n\nNic couldn't stop touching her. He wanted to plaster his lips all over her body, along with his hands and other body parts. He buried his face into her neck, and pulled down one of her bra straps.\n\n\"Wait, wait, Nic,\" she said, trying to stop his roaming hands over her breasts, but he wasn't making it easy. He felt so damn good, and he lightly pinched her nipples through the lacey barrier.\n\n\"Nic, uh, stop. I want to give you something first,\" Victoria said, pushing him back. He finally leaned back and sighed.\n\nVictoria reached under one of the sofa pillows and pulled out a thin rectangular shaped gift, wrapped in bright yellow paper. She could barely contain her smile as she gave it to him.\n\n\"What the hell?\" Nic muttered as he looked at it, then back at her.\n\n\"Open,\" she said, still beaming from ear to ear.\n\nNic stared at his wife, then started to remove the paper from the gift. He could feel it was hard, and more than likely a book. Once the last shred of bright yellow was removed, Nic flipped the book over.\n\n\"Goodnight Moon,\" he said, then looked up at Victoria with quizzical eyes.\n\nVictoria smiled, \"That was the first book my mom read to me as a baby.\"\n\nNic looked down at it. \"Yeah, my mom too, but--,\" then Victoria felt his body jump underneath her. His head snapped to her face and his eyes were wide. He quickly looked down at her stomach and then back up to her face.\n\n\"Are you--\"\n\n\"Yes,\" Victoria whispered, her eyes searching his back and forth for any disappointment. Luckily, she didn't see any.\n\n\"Are you sure, I mean ha\u2014have you actually been to th\u2014the doctor,\" Nic rushed out. Victoria laughed. That was the first time she had ever heard him stutter over his words. Normally he was never taken off guard either.\n\n\"Yes. She confirmed it. Are you happy?\" Victoria asked, biting her bottom lip.\n\n\"Am I happy?\" Nic asked incredulously. Of course he was! He could barely think straight. They were going to have a baby. A little tiny person who they would have to take care of. Holy shit!\n\n\"Have you told anyone else?\"\n\n\"No. Just you. I wanted you to be the first,\" Victoria said, leaning toward him for a kiss. But in that moment, Nic's lust took over. He pushed her back and gently moved them from the sofa to the cushioned carpeted floor. \n\nThe way he felt at the moment, he didn't have time to waste removing anymore clothing. He rolled over on his back and pulled her with him until she rested on top. He pulled down the top of her bra, until her full heaving tits rested over the top. He leaned up and gently licked and nipped at the hard buds. Victoria pushed his underwear down, as his dick finally sprung free. He moved her thin, almost see-through panties to the side and slowly lowered her down onto his waiting member. Both of them sighed in unison.\n\nEven though they had already made love early that morning before he left, he just couldn't get enough of her. And now hearing that she was pregnant with his child, just caused a jolt of horniness to travel down through his body, settling in lower region.\n\nVictoria leaned her head back as she rocked her hips smoothly over his, loving the feel of his thick cock sliding in and out of her stretched pussy. His large warm hands grabbed her tits and massaged them, causing her body to respond by rocking faster.\n\n\"Mmm, damn Nic.\"\n\nOh, her body was gripping his dick so tightly, he knew he wasn't going to last as long as he normally did. But truthfully he had been worked up from the moment he saw her standing in the kitchen. His dick had started hurting, he was getting so hard.\n\nVictoria leaned down to kiss him as she felt the scalp tingling sensation and she started to orgasm.\n\n\"Oh, Nic...Nic, ugh,\" she mumbled as her body shook, and her eyes rolled back.\n\nNic held his wife's back tighter, squeezing her soft breasts against his chest, while he pushed deep inside her and came.\n\nAfter a few moments, Victoria finally spoke. \"Damn, that was...it was...,\" she said, searching for the right word.\n\n\"Astounding, mind-blowing, incredible and a million other adjectives that my brain is too tired to think of.\"\n\n\"Exactly,\" Victoria huffed out, a little out of breath from their workout.\n\n\"I'm going to be a father,\" Nic said, more to himself than her. He still couldn't believe it. He had wanted it...the night he threw out her pills, but fuck that wasn't that long ago. He had to thank his father for his good little swimmers he thought with a smirk.",
        "\"Everything is going to change for us. Or at least that's what people say,\" Victoria said.\n\n\"I'm ready for it,\" Nic said, praying that he really was and that the dark cloud he was feeling would go away for good.\n\n**************\n\nVictoria stared at the computer screen. She knew that Nic and Marianna might be against it, but she really did want to take some online classes...and who knows, maybe go back to work. And it wasn't that she didn't appreciate a break from her ten straight years of working, but it still felt awkward to not have to report somewhere at a certain time. She knew taking care of a family could be a full-time job in itself, but it never hurt anyone to still take a few business classes. \n\nBesides, a small part of her did miss putting in an honest days work. She was sure she was crazy, because many of the women she knew would probably think her life was a dream. And it was...she had to admit. Nic was all that she could have imagined and more as a husband. He still carried the same edge as a business man that frightened and turned her on, but he also was more loving and caring than ever. And he smiled. Not the huge cheesy grins, but he did manage genuine smiles for her every morning and every night. Yes, she did have a wonderful life. But she was confident that her husband would be understanding and would accept any decision she made regarding furthering her education. \n\nVictoria turned off the computer and walked into the kitchen to wash off some dishes she had purchased the day before, when out of the corner of her eye she saw something and screamed. She quickly covered her mouth and ducked down behind the counter. Then she heard a small tap, and she looked over the counter top to find Detective Marsh staring at her, tapping his keys on the sliding glass doors leading out to their patio.\n\nVictoria immediately righted herself and walked over to the door. She slid it open only enough to speak to him.\n\n\"Detective Marsh, what are you doing in my back yard?\"\n\n\"Oh, is this the back yard...I had no idea,\" he said in his smug voice. \"Nic home?\"\n\n\"No.\"\n\n\"I'll wait for him.\"\n\n\"Well, have fun out there,\" Victoria said, closing the door, right as Marsh stuck his hand through and pushed it back open.\n\n\"I'll wait inside, if you don't mind,\" he said, pushing his body through the door. Marsh looked around and then pulled a piece of paper out of his back pocket. \"Do you know what this is?\" he said, waving it in Victoria's face.\n\n\"No.\"\n\n\"It's a search warrant for this house.\"\n\nVictoria didn't know what to do. There was nothing that she knew of that Nic shouldn't have in their house. She decided to call Nic to warn him about Marsh.\n\nShe turned to leave the kitchen when she heard Marsh speak.\n\n\"I wouldn't go warning him if I were you...your phones are tapped and that wouldn't look good for you.\"\n\nWas he bluffing? Victoria turned back around. \"I was going to the bathroom, if you don't mind. And why are our phones tapped.\"\n\n\"Sure you were,\" Marsh stated flatly. \"And that's classified.\"\n\nVictoria placed her hands on her hips. \"But maybe I should call him. Because if you're going to search our house, he needs to be here,\" Victoria said.\n\n\"Nah, I'm not going to check your house. Nic's too smart to keep anything here, am I right?\"\n\n\"I don't know what you're talking about.\"\n\n\"Sure you don't. Like you don't know that Nic had ties to a criminal underground. Or that he sold weapons illegally, along with other unauthorized technology. And that he killed people.\"\n\n\"That's not stuff that my husband would have been involved in,\" Victoria said. She really didn't know what else to say, but she knew Marsh was smart. He was probably keeping a mental record of everything she said to use against her.\n\nMarsh continued to stare at her. His eyes raked over her body again in that dirty, lustful gaze that she hated. Like he was imagining what she looked like underneath her clothes. Luckily she had on more than a robe like the last time she was with him, but just barely. She had opted for a pair of shorts and a tank top due to the heat and cleaning their massive house.\n\n\"Every time I see you, you seem to do better and better. One moment you're working at Calamity's Bar and Grill, the next he has you staying at some swanky hotel, and now you're here in this large house with a pool and everything. You must be doing something right,\" he said, grinning at her. \n\nVictoria narrowed her eyes at him. She couldn't stand this cocky asshole! She knew what he was insinuating and she refused to bite.\n\nInstead, she walked over the sink and started loading their dishwasher with the new dishes. She heard Marsh move around the counter and stand closer to her. Victoria just decided the best thing to do would be to ignore him until Nic came home, which would hopefully be soon.\n\nVictoria saw him shuffle through the baby magazines that she had left on the counter. Fuck.\n\n\"So...he finally put a bun in the oven. How far along are you?\"\n\n\"None of your business,\" Victoria replied, not bothering to look at him.\n\n\"You know,\" he started, standing awfully close to her, \"Nic and I aren't so different. I mean, granted I'm an upstanding, law-abiding citizen, and he's a criminal who sold illegal material to the scum of the earth...but I like to think we have similar taste, you know?\"\n\nVictoria decided to just ignore him. She rinsed out more dishes then loaded them into the dishwasher.\n\n\"Who knows, maybe you and I would have gotten together under different circumstances.\"\n\nVictoria rolled her eyes, but tensed when she felt him lean closer to her.\n\n\"I mean, who knows, it could have been my kid you're carrying,\" Marsh whispered as he twirled one of her curls through his finger.\n\nVictoria quickly swung around to glare at him, slinging soapy water from a cup that splattered onto his dress shirt.\n\n\"Shit!\" he said, as he scooted backwards and wiped the water from his clothing. \n\n\"You make one more comment to me like that, and so help me I'll tell my husband and he will kick your pathetic ass!\" Victoria warned, pointing her finger at him.\n\nMarsh chuckled as he grabbed a paper towel and blotted at the water stain seeping into his shirt and tie. \"That wasn't very nice, Victoria.\"\n\n\"Fuck you.\"\n\n***************\n\nNic was pulling into their neighborhood, when he noticed a rental car parked awkwardly on their street. He had been involved in his old lifestyle too long to look at things like that as coincidence. He pulled up beside the car, and noticed it was empty. He got out and peeked inside. He saw a blue file sitting on the seat and at the bottom of the file written in ink was Nicolas Andretti IV.\n\nGoddamn that asshole. What the fuck did Marsh want?!\n\nNic got back into his car and pulled into his driveway. He got out and entered the house, trying to calm his temper. He walked into the kitchen to find Marsh staring at Victoria. When Marsh finally noticed him, he took a noticeable step back from Victoria.\n\n\"Nic!\" Victoria yelled, as she ran over to hug him. He returned her hug tightly while keeping his eyes on Marsh. After a few seconds of a stare down, Nic looked at his wife and kissed her. \"Hey, baby.\"\n\nHe then turned to Marsh. \"What the fuck do you want?\"\n\n\"That's no way to greet an old friend,\" Marsh smiled back.\n\n\"Since you're not a friend of mine, get the fuck out of my house. You have no jurisdiction here,\" Nic said, holding onto Victoria.\n\nVictoria was confused. She looked back and forth between Nic and Marsh. \"But he said he had a search warrant,\" Victoria stated.\n\n\"He lied,\" Nic stated cooly, never removing his eyes from Marsh. \"Now get the fuck off my property before I forget you're a cop.\"\n\nMarsh stared at Nic, but decided not to call his bluff. He didn't want to push his luck since technically he was there on his forced vacation. \n\nHe walked towards the door, but turned to look at Nic. \"You may think just because they have some snot nosed kid from the FBI on your case, who doesn't know his asshole from a hole in the wall, that I've given up. I haven't...and I won't.\"\n\nAs soon as Marsh's foot crossed the threshold, Nic slammed the door. "
    ],
    "authorname": "soular",
    "tags": [
        "interracial novella",
        "interracial drama",
        "drama",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/seven-days-ch-09"
}