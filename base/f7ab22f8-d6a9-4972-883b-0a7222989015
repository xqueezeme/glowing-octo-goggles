{
    "title": "Flow",
    "pages": [
        "A note to the readers.\n\nThis is my first submission, and the first time I have attempted to write a piece of erotica. The build up takes a while, but in my opinion is important. I find it more erotic knowing there is a background and a story leading up to the sexual side of things, but that's just who I am. Comments and criticisms, if given, will be greatly appreciated, if only so I can improve on my writing or think of new ideas to write about.\n\nThe story is a collection of events in both the participants' lives leading up to their eventual coupling (and the male protagonist's first time), and a story about who they are as people as well as erotica. At least this is my hope, since I don't have experience in these matters and have nothing but my vivid imagination to rely on. Either way, I had fun writing it.\n\nThank you for reading. Hope you enjoy.\n\n.....\n\n\"Oh, did I tell you? Amelia's moving,\" His grandmother said in an off-hand way. He knew her too well, however, and heard that particular tone buried underneath the nonchalance that was designed to provoke him into at least responding in some way.   \n\nIt worked, not that it seemed there was much other choice. The news was a surprise. Then again, he had been away for a while for work. \"She is? When?\"\n\n\"Oh. I'm not sure. She mentioned it the other day. I'm surprised she didn't tell you. They're getting a divorce.\"\n\nHis eyes widened, but he kept his expression from his grandmother's eyes. Without even thinking about it, he glanced toward the front door. Moving? Suddenly the world seemed a little darker and heavier.\n\n\"Why don't you go over there and talk to her about it?\" His grandmother urged him.\n\n\"...\"\n\n\"You silly boy. It's clear she means a lot to you. If I was in your position, I'd be over there right now.\"\n\n\"... I wonder why she didn't tell me.\"\n\n\"She's been busy. I'm sure she would have told you soon enough. Are you going there, or not?\"\n\nHe thought about it for a moment or so, then shook his head. \"Nah. If she's busy, then... Well. I'll give her a call later or something.\"\n\nHis grandmother clicked her tongue and shook her head. \"I don't know... You stupid kids these days...\"\n\n.....\n\nHe met Amelia for the first time when he was about ten years old. Amelia and her husband moved across the road, and his grandmother, an old woman even then, with the mind of someone who had come from close knit communities, insisted they both go over and introduce themselves.\n\nSo, feeling silly about the whole thing, he traipsed across the street after his grandmother and waited while she knocked on the freshly repainted door. When Amelia Lewis opened the door, he found himself staring, though at the time he had no idea why.\n\nAmelia Lewis was gorgeous. Dark hair that fell just past her shoulders in thick waves, large green eyes and somewhat dark lips. It was her smile that got to him most of all though, warm as it was.\n\n\"Alright, love?\" His grandmother said to her. \"We've just come from across the road to introduce ourselves. I'm Anya.\" Then she looked at him and nudged him forward. \"Introduce yourself, go on!\"\n\nHe remembered Amelia looked straight at him and smiled. She was in her mid twenties or so, and suddenly it was beginning to make sense how one of his older cousins always seemed so focused on women. He didn't even notice her body at the time. Just her face.\n\n\"You're being rude,\" His grandmother said to him.\n\n\"Sorry. I'm Grain.\"\n\n\"Grain?\" Amelia said in a low voice.\n\n\"Honestly. His name's Ivan. But everyone calls him Grain. I have no idea why, to this day,\" His grandmother told her.\n\n\"Oh, I see. Nice to meet you two. Nice to meet you, Grain,\" Amelia said holding out a hand.\n\nGrain took it reluctantly, shook once, and let go.\n\n\"Why don't you both come in?\" She asked. \"I can make you a cup of tea if you like. As long as you don't mind the mess.\"\n\n\"Oh. Are you sure? We don't want to be any bother,\" His grandmother told her.\n\n\"It's fine! Honestly. It'd be great to spend a bit of time with someone for a bit. Terry's been at work a lot lately, and I'm just getting tired of having to deal with all this stuff all the time. It'd be lovely to sit and chat for a bit.\"\n\nGrain didn't remember much about that visit, except, as he had expected, his grandmother was talking to Amelia and he was left to his own devices. At some point Amelia's mother arrived and sat with them, and it was at this point he left the room to wander about the house a bit. He didn't get very far. In the other room, next to the one the adults sat in, he found several full bookshelves put against the wall. He sat down and tilting his head, began to read the titles one by one. His enduring memory of that time was the sound of the door opening and Amelia walking in, one eyebrow raised until her eyes settled on him.\n\n\"Hey, there you are. I was wondering where you'd gone to. Everything okay?\"\n\nHe nodded.\n\n\"You don't say much, do you?\"\n\nHe smiled at that. \"Grandma talks a lot.\"\n\nAmelia giggled. \"Yeah. It's lovely though. I love listening. She's really nice.\"\n\n\"She's alright, I suppose.\"\n\nShe smiled and sat down beside him. \"I guess your parents are at work or something?\"\n\nHis smile disappeared and he looked away toward the books.\n\n\"Grain?\"\n\n\"My parents are dead.\"\n\nThere was a heavy silence as Amelia took a deep breath, unsure of how to proceed. Finally, berating herself for doing so, she settled for the generic, \"I'm really sorry to hear that.\"\n\nHe shrugged.\n\n\"That must be really hard for you.\"\n\n\"You have a lot of books.\"\n\nGrateful for the change in topic, she nodded in agreement. \"I love reading. All of these are mine. Terry isn't a huge reader really.\"\n\n\"I like reading.\"\n\n\"Yeah? What kind of books do you like?\"\n\n\"Anything really,\" Grain said quietly. Then he moved toward one of the shelves and pointed to a few of the books. \"I've read those ones.\" Pointing to another shelf, \"And those.\"\n\nAmelia stared at the shelves he had pointed towards. They were mostly fantasy novels written for teenagers. \"Really?\"\n\nAnd there was that familiar dubious tone that Grain had become accustomed to. \"I preferred Eddings though. And I like Douglas Adams a lot, even though I don't think I get some of it. I'll read it again when I'm older.\"\n\nThey discussed books for another half hour after that, with Amelia's disbelief disappearing rapidly and her becoming impressed with his quiet intelligence. The conversation ended when Anya decided it was time for them to leave, but not before Amelia quickly told him he was welcome to borrow any books at any time.\n\n.....\n\nGrain stared out of his bedroom window toward Amelia's front door. He had no desire to go over there. At first he didn't want to believe his grandmother, but it was looking as though there was truth in it. It had been two days since his grandmother had told him and he had not seen Terry's car anywhere near the house. His grandmother had said he was staying with a friend while Amelia prepared all her things for moving.\n\nIt wasn't so much a surprise that the divorce was happening, but it still had that sharpness to it when he thought of it. Even when things were expected, it didn't necessarily lessen their impact. The thought of Amelia not being across the road was hard for him to get to grips with. So instead, as he did with a lot of things, he simply didn't think about it. It wasn't real. It wouldn't be real until she was actually gone.\n\nAnd once she was gone, he would have no idea what to do.\n\n.....\n\nIt wasn't until he was thirteen when she asked him exactly how he got the name Grain.\n\n\"I don't really remember.\"\n\n\"You don't?\" She pushed a plate across the counter towards him. On it was a tuna sandwich, one he had been looking forward to all day. Her sandwiches were a slice of heaven.\n\n\"Nope.\" He took a bite of the sandwich and gulped it down quickly.\n\n\"Oi, careful. Chew!\" She said in her feigned stern voice. She was terrible at actually being stern. \"So how come you don't remember?\"\n\n\"I was in primary school. I think someone said the word grain and I said something back. And for some stupid reason a lot of the kids had trouble saying Ivan. So Grain became the alternative.\"\n\n\"Really?\"\n\n\"Something like that. It was years ago, Mrs. Lewis.\"\n\nShe scowled. \"I wish you wouldn't call me that.\"\n\nHe shrugged. \"It's respectful. Grandma says it is anyway. And she's psychic or something. She can always tell when I'm not doing something I should be.\"\n\n\"She's not here right now, Mr. Black,\" Amelia said, briefly sticking her tongue out at him.\n\nHe shook his head. \"This is Grandma we're talking about. I ain't risking anything.\"\n\n\"Ain't? Am not. Or I'm not. That's the correct way.\"\n\nHe simply glanced at her and took another bite.\n\n\"When is she getting back?\" She asked suddenly.\n\n\"Tomorrow night.\"\n\n\"You'll be glad to see her then.\"\n\n\"Yeah. I've missed her a lot. Hard to believe it's only been a week.\"\n\n\"Well she's the only other person in the house, so I guess that's to be expected. Have you got anything to eat for later?\"\n\n\"I'm not sure. I might have run out of food by now. I might just order in.\"\n\n\"Why don't you eat here? I'll get us some pizza. It's Friday night.\"\n\n\"What about Mr. Lewis?\"\n\nHe was too young to understand that subtle change that came over her face. She sighed and said, \"He's working all night.\"\n\n\"Again?\"\n\n\"Yep. So it's just you and me.\"\n\n\"Poor you,\" Grain said, smiling. \"Stuck with a thirteen year old boy.\"\n\nShe stuck her tongue out at him.\n\n\"Seriously though. Thanks for all the food and stuff. And for letting me come here to hang out. It's always good.\" Grain's voice always became quieter when he was saying something serious. Amelia had to struggle to hear sometimes.\n\nThis time she was simply surprised at the sudden gratitude, only just realising she enjoyed his company just as much as he did, if not more. \"Don't be silly, Grain. It's a pleasure.\"\n\nHe simply nodded. He never really made eye contact when his voice was like that. She often felt like pointing this out to him but was never quite sure how he would react. It seemed better to just leave it.\n\n.....\n\nPretending things were happening never lasted long. Giving the idea of going over to see her some serious thought left him even more afraid of going there. He couldn't quite tell what the source of the fear was yet. He was standing in front of the bathroom mirror, staring at the stubble that needed shaving. Grain had short dark hair, not quite black but too dark to be really considered brown. Amelia had often said she could see several tones in it. His eyes were brown, his skin pale and his body lean. He was a couple of inches shy of average height for a male, something which he had never given much thought once he realised he was more or less the same height as Amelia. He flexed his arm, taking note of the fact that he was at least filling out a little bit.\n\nSighing, he decided to leave the shaving for now and put on his shoes to walk over to see Amelia. While he put on his shoes, he tried to puzzle out the one emotion that seemed to be dominant above all others. That strange, singular fear which left him almost feeling paralysed at times, ever since his grandmother had told him about Amelia's leaving. It wasn't until he opened the door and was about to cross the road when he realised the reason for it was simple. Change. Things were going to change. More than that, he had no idea where she was going. No idea whether he'd see her again. Why would she bother keeping in touch with him? Even if they were close in some respects.\n\nThere had been moments of course. Moments where he was forced to stop and think about what was going on in front of him. Moments that it seemed only he and Amelia shared; moments wrapped up in a blanket of time that buffered them against the rest of the world. Grain really had no idea when it was he had developed this crush he had, had no idea when it had turned into something else and became a simple fact in his mind, that his emotions largely became focused on her at some point. He had feelings for her, definitely, but he never tried to probe how deep they were. He was only twenty-two and as far as he was concerned, he wasn't sure he understood the concept of love, simply because he couldn't have the conviction to just fall into his feelings and let go.\n\nWhat did it matter, when she was leaving now anyway? He was happy for her. He couldn't deny that. He figured out a few years ago that she was unhappy. Now she had finally taken a step forward. And for all he knew, she was leaving him behind too.\n\n.....\n\n\"Did I hear right? Your grandmother said you're going to move for a year or so,\" Amelia said after several moments of silence. She'd been waiting for the right moment to ask, unsure of whether she really wanted to hear him say it. She hated to admit it but she had come to rely on the idea of him being across the street more than she thought she should.\n\n\"Only for the year,\" Grain said, watching her carefully. Things had changed. She wasn't the same person he had met for the first time six years before. She seemed sadder now.\n\n\"Where to?\"\n\n\"I'm going to live with my cousins, while I do the first year of my A-Levels in the same college as them. Grandma says I should try living in the country for a bit. I think she just wants the house to herself for a bit.\"\n\n\"A whole year...\"\n\n\"I'll be around during the breaks, I think.\"\n\n\"You should be where ever you can do your work. It's going to be an important year for you.\"\n\nGrain raised an eyebrow. \"You have met my cousins, right? Working anywhere near them is an impossibility. Still, I'll have a room to myself.\"\n\nAmelia laughed lightly. \"I remember them. Very laddish.\"\n\n\"An understatement. I'm expecting at least one of them to end up being treated for sex addiction.\"\n\n\"Oh, they didn't seem that bad!\"\n\n\"That's because you don't hear what they say when it's just the boys.\"\n\n\"Oh? Give me an example?\" Amelia asked in a playful voice.\n\nGrain shook his head vehemently. \"Nope.\"\n\n\"Spoilsport.\"\n\nHe looked at her again. She was looking off into space toward the dining room table. There was cutlery on there along with a couple of plates. She walked over to it and picked a single plate up and was about to go to one of the cupboards to put it away, before she stopped and looked at him.\n\nHe tilted his head slightly as a question.\n\n\"Have you eaten yet, Grain?\"\n\n\"No. But, I'll be going out with a couple of friends later. They want to say goodbye now.\"\n\n\"Oh? But... there's the whole summer yet.\"\n\n\"They'll be away. And I don't really feel like doing much with a lot of others. I won't see them for the rest of the summer once they're gone.\"\n\n\"Ah,\" Amelia looked away again. The disappointment in her voice was noticeable.\n\nHe was nearly sixteen now and with his hormones in full swing, he could finally appreciate how beautiful Amelia Lewis really was. Her dark, wavy hair was now halfway down her back. He noticed her body more than he was prepared to admit to himself. She wasn't model thin in the least, but instead a collection of gorgeous curves. She was about his height with wide hips and round buttocks, and breasts that were more than a handful, along with a waist that while it was a proportionally normal width, somehow accentuated the curves below and above it. She had the slight appearance of plumpness to her, nothing overly noticeable, but more the kind of thickness that only came to be noticed when someone looked at her long enough.\n\nWhile her body was appealing to say the least, he was worried because her eyes seemed dimmer now, and her smile didn't quite widen as it used to in the memories of his younger days. It hurt him to see she was not happy. He never said anything to her about it, but instead watched as she went to work part time, came home to find the house empty, spent a lot of her evenings alone and occasionally he had even been there when she had had whispered arguments with her husband over the phone. But she never mentioned any of her problems, or her issues in her marriage. Of course she wouldn't. He was only young and he was sure she had plenty of friends in her circle to speak to. It didn't stop him occasionally from hoping she would open up to him, even if a little.\n\n\"Grain?\"\n\n\"Hmm?\" Her voice broke him out of his thoughts.\n\n\"You'll be sixteen pretty soon, won't you?\"\n\n\"Yeah. Another couple of weeks.\"\n\n\"Do you want anything specific for it?\"\n\n\"Uh, nope. That's fine. You don't have to do that.\"\n\n\"You sure?\"\n\n\"Mrs. Lewis, honestly.\"\n\n\"I wish you wouldn't call me that. Makes me feel old. I'm not even thirty yet.\"\n\n\"You're not old,\" He said automatically.\n\nShe smiled. \"You're supposed to say that.\"\n\nHe shrugged in that small way he did. In his pocket his hand was busy pressing buttons with an agonisingly careful manner. With the phone out of sight, he was having to rely on his memory of where each button led to which menu. After a few more seconds, he had success. His phone began to ring.\n\n\"Oh. Okay if I take this? I think it's my friend.\"\n\nShe frowned at him. \"Of course it is. Go ahead. I'm just going to put away some stuff in the kitchen.\" She walked out, leaving him alone.\n\nAs soon as she left, he cancelled the ring tone, and rang his friend. After a few moments, she picked up. \"Joanne? Listen, about tonight, I'm really sorry, but I can't make it... No, everything's fine. It's just that something came up... I know you're leaving tomorrow.... I promise I'll make it up to you. I'll be around during the winter break.... Yeah, I promise I'll see you then. Will you let Arun know for me?... Thanks.... Yeah.... Take care. Bye.\"\n\nHe waited for a while, listening to the sounds of Amelia moving things about in the kitchen. Finally she came back, holding a carton of juice and offered it to him. He took it gladly.\n\n\"Mrs. Lewis, looks like I've had a change of plan.\"\n\n\"Oh?\"\n\n\"Turns out my friends can't make it. So, I'm at a loose end.\"\n\nShe suppressed a smile. \"Oh. That must be really disappointing for you.\"\n\n\"It happens. I can always see them later in the year.\"\n\n\"Well, would you like to have to dinner here later?\"\n\nHe nodded with a smile. \"I'll just go and tell Grandma. I'll be back in a few.\"\n\nAnd while he walked over to his grandmother's house, he wondered if it was possible that she enjoyed his company that much. Or perhaps she just didn't want to be alone. It was beginning to seem obvious to him that though Amelia Lewis was an adult age-wise, she was more a person with her own insecurities and elaborate ways of coping with them. Maybe, he thought to himself, adults weren't so confident and as sure as they made themselves out to be, that maybe they were still like teenagers, but with bigger problems and more experience with dealing with those problems.\n\nMaybe he could find a way of getting through to her and telling her that he could see she was unhappy, that she needed a way of dealing with it or finding some solution to it all.\n\n.....\n\nHe remembered when he was seventeen, and living with his cousins after having decided to stay another year at the same college, and his grandmother called him to pass on the message that Amelia had decided to throw a small gathering for her thirtieth birthday. He and his grandmother were both invited to the small affair and he found himself gladly sitting on the train going home for the weekend.\n\nThe gathering itself was smaller than could be considered a party, at least in his view, but he enjoyed most of it. Amelia's friends were all reasonably amiable though he did not attempt to socialise as much as he could have, even after Amelia introduced him as a friend to her group. Terrence Lewis was also there. It was a rare sighting for Grain. He wasn't sure how he felt about him. Terrence was not a bad person as far as he could tell, and this was while he was attempting to be unbiased, but the person he was made Grain wonder at times how he and Amelia could have ended up together. They seemed unsuited. He had minimal interaction with him until he decided he had had enough of the gathering altogether, and as it always seemed to happen whenever he was at their house, he found himself in front of the bookshelves looking at the books.",
        "It was perhaps an hour later when he came back out to find his grandmother had gone, and so had most of the guests. Amelia looked at him in surprise, but her eyes seemed heavy and she smiled immediately.\n\n\"Grain! Hey. I thought you'd gone home.\"\n\nHe shook his head. \"Sorry. I was just looking at some of the books.\"\n\n\"Big reader, huh?\" One of the male guests asked. Grain put him at mid twenties at best.\n\n\"Bigger than me, I'm sure,\" Terence said. \"He's been borrowing books for the last seven years, haven't you, Grain?\"\n\n\"More or less,\" Grain answered. He looked at Amelia. \"I'm going to get going. I dropped some books off. They're on the floor next to the shelves. I wasn't sure where they went.\"\n\n\"Oh, don't worry about that,\" Amelia said, raising her glass of wine. It then occurred to Grain, that Amelia was slightly intoxicated. \"Are you sure you have to go?\"\n\nHe nodded. \"See you all some other time. Thanks for having me over.\"\n\nThere was a chorus of goodbyes as he left. Sometime later that night he was in his room, sitting on his large windowsill and reading when he saw the door to Amelia's house open and the guests coming out to leave. His window was open and he could just about hear that most of them were drunk and saying their goodbyes with promises to meet again soon. Once they left, Amelia and Terry looked at each other and kissed. Grain stared. There was a girl at the college at the moment who seemed very interested in him. Yet, he found himself indifferent to her, possibly because the girl was boring. Watching Amelia kiss sparked a curious string of thoughts where he wondered if he would ever be able to do that with anyone. The few girls he did not mind spending time with, were strictly close friends. That wasn't to say he hadn't thought about being more to them. He was a male after all and with that came the overwhelming rush of lust for female company, but something always stopped him even voicing those kinds of desires. They seemed empty somehow.\n\nThe Lewises broke off their kiss and went inside, holding hands. Perhaps to carry on in the bedroom. Perhaps things were getting better in their marriage. Or maybe it was just because Terry happened to be there for once. Grain glanced at his clock. It was one in the morning and he still did not feel tired. He decided to carry on reading.\n\nHalf an hour later and he saw Amelia open the door and stride out in anger, slamming her front door behind her. He half expected to see Terry opening the door behind her, but nothing happened. Amelia stood on the pavement for a moment or so, and looked up to see Grain watching. There was a slow moment where she at least acknowledged him by raising her hand briefly, but then she turned and walked down the road toward the local park. He watched her go. Bearing in mind she may have been drunk and it was late, he put his book down and with worry, quickly put a pair of shoes on and quietly walked down and left the house.\n\nTerry still had not come out, and probably wasn't going to. The lights were off. Grain struggled for a moment, wondering if he should knock on her door to tell Terry it was not a good idea for Amelia to be out by herself. It was altogether possible Terry didn't know. Or perhaps he did and he didn't care, which seemed worse. It was likely that he was the cause of her walking out. Grain sighed and decided to head for the park.\n\nThe park itself was mostly grass, except for one path that led up a hill to a beautiful view and a couple of benches. He went straight up it and found Amelia sitting by herself, staring into space. He approached her but didn't sit down.\n\nShe looked at him. \"Hi.\"\n\n\"So... is this one of those things where you're depressed about your age despite the fact that actually you're in a pretty good time of your life?\" It was meant to be some sort of stupid opening line.\n\nShe simply smiled. \"Am I?\"\n\n\"You're not depressed about your birthday, are you?\"\n\n\"Turning thirty? Nah...\"\n\n\"Ah. So it's something else.\"\n\n\"Do I seem depressed?\"\n\n\"Yes.\"\n\n\"Ah. Perhaps... Hmm.\"\n\n\"What?\"\n\n\"Nothing.\" She looked down at the grass in front of her. She seemed to be swaying slightly.\n\nWorking up the courage for a few seconds beforehand, he asked her, \"Do you want to talk about it?\"\n\nPerhaps because she wasn't quite sober, he was surprised to hear her say, \"I'm just really... frustrated with things.\"\n\n\"Things at home? With Terry?\"\n\nShe glanced at him, and nodded. \"Just... I don't know. It doesn't matter.\"\n\n\"It matters.\"\n\n\"... He and I have been together a long time.\"\n\n\"Yeah? You said you met in school.\"\n\n\"Hmm. We got together in school. Fifteen years now.\"\n\nWatching her carefully, not quite understanding why he did so, Grain asked, \"And now you want to split up with him?\"\n\nThere were several beats of silence while Grain suddenly became increasingly paranoid that he had overstepped his bounds. Amelia simply sat and thought about his question, before looking up at him and saying, \"I don't think this is a good idea. To talk about this. Not between us.\" She seemed very irritated all of a sudden.\n\nGrain felt a sudden drop in his chest. The thought of having made her feel worse tore at him a little. \"Sorry. Will you at least talk about it to someone? Like, maybe your friends? I think you need to.\"\n\n\"That's rich coming from someone who barely talks about his feelings, or his parents or... you know.. whatever.\"\n\nGrain felt like she had just slapped him sharply across the face. The sting in his chest was even worse. He didn't care that she looked up at him, her face obviously full of regret at her words. He had never expected her to be even capable of saying anything like that. It didn't hurt so much that she pointed out his reluctance to open up at times, but rather the fact she had brought his parents into it. It was a sore subject and both of them knew it. Several times in the last few years, if the subject of parents came up, he always skirted over it, a clear sign that he wanted to discuss anything except them.\n\nWithout even another word, he turned around and began walking down the hill. Amelia sighed quickly, closed her eyes and said to herself, \"You bitch.\" Then she got up and went after him as fast as she could.\n\n\"Grain.\" He didn't stop. \"Grain! Please!\" She pleaded. He slowed a little momentarily but kept going. \"Ivan! Please stop!\"\n\nThis time he did. She caught up to him and stood in front of him, wanting to be sure he wouldn't just walk off again. He avoided making eye contact. She breathed deeply, wondering what it was she could say to resolve this quickly.\n\n\"Grain, I'm so--\"\n\n\"I know I don't say a lot about stuff like that,\" Grain said suddenly. \"I know I'm younger. I know I'm not as experienced or as mature. I know I'm closed off. But I'm not so young that I don't understand that these days you're hurting all the time. Or that you've been with him so long, you're terrified of the idea of leaving him and going it alone. That you can't see that being possible.\" He spoke in a rushed tone, surprising himself with his candour and his sudden insights. \"You're not alone. You have people around you that care about you and would do what they could to help. You have people who will listen. If you let them. If you let yourself express it.\"\n\nThey both stood silent. She tried to make eye contact but he went on avoiding it. In a low voice full of feeling, she said, \"Sometimes I forget you're still only seventeen. Everything you said about me being scared is more or less spot on. That's more than anyone else has noticed.\"\n\nHe didn't respond. He wasn't sure how to.\n\n\"Grain, I'm so very sorry for saying what I did.\"\n\n\"It's okay. I get it. You're a little drunk, you're frustrated and angry and hurting.\"\n\n\"That's no excuse.\"\n\n\"Whatever. It doesn't matter. You're forgiven.\"\n\n\"... Thank you.\"\n\nThere was another long silence. Grain felt torn between leaving and staying. Still stinging from her words he felt the need to go but being here in the night with her in the state she was, meant he wanted to be sure she was safe. He looked up at the night sky and noted the moon was out, bright and pale.\n\n\"What made you ask that?\"\n\n\"Hmm?\" He looked at her.\n\n\"What made you ask if I wanted to leave him?\"\n\nHe thought about it for a moment. \"Because you said you'd been with him a long time. It seemed... I don't know. It made me wonder if that's why you thought that. Because you wanted to split up.\"\n\n\"Oh.\"\n\n\"Maybe we should go back.\"\n\n\"Do you really want to?\"\n\n\"Don't you?\"\n\n\"I don't know. I like it out here.\"\n\nGrain looked around him. They were standing halfway up the hill. He could barely see anything in the distance except for light from the lampposts of the nearby street and the dark, long grass which undulated in the strong breeze. Amelia moved off the path and sat down on the grass. She looked at him. He sat down where he was, on the path, a few feet from her. He kept his eyes on the moon the whole time while she looked down again at the grass, trying to find the right words to use.\n\nIt was easily several minutes later when she spoke again in a low voice. \"I can't really speak to my friends about it. They're all people we both know, more or less. People from our school days. The ones who matter anyway. And my parents wouldn't understand, I don't think.\"\n\n\"You're sure of that?\" He asked when she was quiet for a few seconds.\n\n\"Yes.\"\n\n\"Must be lonely.\"\n\n\"It is.\" She pulled out a blade of grass and tore it into a few pieces. \"You are really mature, you know? Never think that counts against you.\"\n\n\"It's hard not to when it sets you apart from others around you.\"\n\n\"You think immature people grow out of it after a certain age?\" There was a playful tone in her question.\n\nHe looked at her with a raised eyebrow.\n\n\"It doesn't work like that. Not really,\" She responded. \"I was really surprised.\"\n\n\"By?\"\n\n\"Everything you said. I've always known you were observant but I always thought maybe I hid it really well. No one else has ever said anything like you have.\"\n\n\"You do hide it well. I just... I don't know. I could see it. You're not happy,\" Grain mumbled.\n\n\"... Sometimes I wonder if they have noticed but they're just waiting for me to mention it.\"\n\n\"Maybe. But if they were really your friends, they wouldn't wait.\"\n\n\"No. I suppose not.\" She tore another blade of grass from the ground. \"I feel really lost at times.\"\n\nGrain had no idea what to say to that. Instead he asked, \"Do you think it would be better if you split up with him?\"\n\n\"I don't know.\"\n\n\"It seems obvious to me.\"\n\n\"Really?\"\n\nThat question sounded like more of a challenge and made him think about what he wanted to say. \"Well... you're not happy with him.\"\n\nShe looked up at him, making him glance up and look down again at the ground. \"Grain... please look at me.\"\n\n\"What?\"\n\n\"Please look at me. I really would like it if you did. You avoid it so much.\"\n\nHe bit the inside of his lower lip briefly, raised his head and made eye contact. She was staring at him intently and it made him uncomfortable at first. Then slowly he grew used to it, taking in the vision of her in the moonlight. Her hair reflected the light, almost giving the impression of a soft glow, and her skin looked creamy and appealing.\n\n\"Tell me something, Grain.\"\n\nIt was mesmerising the way her lips shaped the words.\n\n\"Do you really think it's that simple?\" She asked.\n\nHe was about to answer that yes it was, it really was, but something stopped him. Looking at her, his thoughts raced. His parents had died young. He was only nine when they did. There was no question in his mind that they loved each other immensely, even while they argued or his mother was distant and having one of her bouts of depression. Right up until the day she had attempted to kill herself, leaving his father distraught and panicking, putting her in the car to drive her to the hospital. Only for them both to get killed along the way.\n\nThere had been that connection there between them that he would never quite remember the way he wanted to, even if the concept of it was vivid. It was simply intangible, and yet it'd kept them drawn to each other.\n\nTo his surprise, he realised Amelia was nervous. It was in her eyes and the way she sat. In some ways perhaps, she was asking a lot more than just a question about her marriage. She was asking him to see something more. Maybe even help her make a decision, or give her some sort of permission. The Amelia who sat in front of him now was just completely vulnerable. He knew his answer to her question suddenly.\n\n\u515aNo. It isn't. You've both experienced more than half your lives together. You're a part of each other. It's not simple at all,\" He said carefully. \"And I guess something you have to decide for yourself,\" He added almost as an afterthought.\n\nThere was a brief touch of a smile on her lips and then she nodded lightly. He looked away at this point, beginning to feel very, very out of his depth. A moment later and she was standing in front of him, offering her hand to help him up. He took it and stood up, giving his jeans a quick wipe with his hands to shake off any imaginary stones or dirt or grass. He was about to walk when he realised she still stood where she was, and that she had her eyes on him.\n\n\"Thanks,\" Amelia said.\n\n\"... For?\"\n\nShe shrugged. \"For being my friend.\"\n\nHe nodded.\n\n\"Can I hug you?\"\n\nHis eyes widened in surprise.\n\nShe misinterpreted it. \"The thought of me hugging you scares you that much?\"\n\nHe shook his head. \"No. Just surprised. It just occurred to me that. Well that we never have actually...\"\n\n\"You always seem so aversive to touching. I understand if you don't want to.\" She took a step closer. Now she was less than two feet away from him.\n\nMaybe she was more drunk than he realised. All of a sudden, a hug seemed to be more than just a simple act of putting their arms around each other. Part of him marvelled at the fact that the idea of hugging her seemed so appealing and woke up the urge in him to move closer and simply wrap his arms around her and stay like that for as long as he could. It was nearly overwhelming. That was why he didn't do it.\n\n\"I'd rather not,\" He said quietly, hoping he wouldn't offend her.\n\nIf he did, she showed no sign of it. \"That's fine. Come on. Let's go home.\"\n\nHe walked her home that night, watched her enter her house and did not go into his own for several moments to be sure she was going to stay inside. Once inside, he did not sleep all night, but instead stared at his ceiling thinking about and imagining scenarios in which Amelia would hug or touch him in ways which were not quite, but had the potential to be become something sexual. He could not allow himself to move into that realm of imagining. Not yet.\n\n.....\n\nHe knocked on her door lightly and waited. She opened the door quickly and smiled when she saw him. Behind her, he could see several cardboard boxes laying about on the floor.\n\n\"Grain!\" She came forward and took his hand to squeeze it. Her version of a hug for him.\n\n\"Hey. Uh... looks like you're busy. I can come back later.\"\n\n\"No! No. Come on. Come in.\" He followed her in as she kept talking. \"I came to see you a few days ago but your grandmother said you were out. And these last few days... I'm sorry. I've just been so busy.\"\n\n\"It's fine. She told me you were moving.\"\n\n\"Yeah.\" She turned around to look at him once they were in the living room. \"I wanted to tell you myself. Things are moving fast though.\"\n\n\"And a divorce?\"\n\nShe nodded and took a deep breath. Grain could see the impact of the reality of that idea had not worn off yet. \"Actually. We kind of started proceedings a few months ago. This whole time I've been looking for a place. Last few weeks, Terry's been living with a friend while I get everything sorted. It should be finalised very soon.\"\n\nShe looked the happiest he had seen her in years. It made his heart soar to see it. \"How do you feel about that?\" He asked.\n\nShe smiled. \"Good. Grain, I'm finally... finally doing something. All it did was take me something stupid like nine years.\" She laughed suddenly.\n\nHe smiled in return and shrugged. \"Better than not doing something for the rest of your life. Everything has its time, right?\"\n\n\"Yeah... Here's hoping it'll work out.\"\n\n\"It will.\"\n\nShe grinned at him. She was wearing a simple t shirt and a pair of jeans that were loose on her legs, though not around her hips. He tried not to look, but could not help but glance at her hip area a couple of times before decided he needed to focus his attention on something else. He settled on looking at one of the boxes next to the wall. It was full of books.\n\n\"I was careful about whether I had any of your books here. There was only one,\" Amelia told him. She was watching him carefully. He seemed anxious about something but as usual, she found it hard to instigate any conversation about it.\n\n\"Catch-22?\" Grain asked.\n\n\"Yes.\"\n\n\"Did you like it?\"\n\n\"Very much.\"\n\n\"There's a sequel to it. Set thirty years or so later.\"\n\n\"Do you have it?\"\n\n\"Yes. But it's not as good, in my opinion. Or maybe I just don't understand it in the way I'm meant to.\"\n\n\"Can I borrow it?\"\n\nHe looked at her. \"Yeah... Of course. Just...\" He trailed off.\n\nShe waited for a few seconds before coming out with it. \"Grain, what's wrong? You seem a little down.\"\n\n\"No. I'm okay. I'm really happy for you.\"\n\n\"Thanks. But, seriously. What is it? Please tell me.\"\n\n\"I'm just a little sad at the fact you're moving. Well, actually really sad. I guess it's the thought of not coming over a lot or whatever. And I don't even know where you're moving to yet.\" He really wanted to ask whether it meant their friendship would diminish.\n\nIt seemed as though she read between the lines however. \"Grain, only a fifteen minute walk away. That's all.\"\n\n\"Really?\"\n\n\"Really! God, have you been worried all this time?\" She took a few steps closer to him. \"You're my friend, Grain. We're not going to lose contact or anything. In fact, I fully expect you to visit as much as you want. Promise me you will.\"\n\n\"Yeah. Of course, I promise,\" Grain said with a relieved tone. \"I guess I got paranoid. I don't know. I just thought maybe...\"\n\nSeeing the sheer relief all over his face, realising just how much he had been worrying about it, she took his hands. \"You mean a lot to me. Okay? I'm not going to just disappear out of your life.\"\n\nHe nodded.\n\n\"I wish you'd come sooner and asked me. I can't believe you've been worrying about something so silly. Mind you, it's not as if I made the effort to come over to see you. I've missed you these past few weeks you've been away at work.\"\n\n\"You've been busy. It's understandable.\"\n\n\"Even so... Is the job over now?\"\n\n\"Yeah. I'm back here for good, I think.\"\n\nShe smiled warmly. \"I'm glad to hear that.\" She let go off his hands and looked around. \"Actually, I was hoping you could help me move some of this stuff this weekend. I thought about hiring a van but since it's just practically down the road, I was hoping we could use your grandmother's car.\"\n\n\"That should be fine. She won't mind at all.\"\n\n\"That's great. It's going to be good. It's going to be good,\" She said, more to herself.\n\n\"It'll be fine.\"\n\nShe nodded. \"Right. Will you help me with some of the packing?\"\n\n\"Sure.\"\n\nThere were a few moments of silence and she cleared her throat. \"Grain?\"\n\n\"Hmm?\"\n\n\"Listen, I'm sorry I didn't talk to you about this. Or tell you earlier, like a few weeks ago or whatever.\"\n\n\"Mrs. Lewis, I wouldn't have expected you to anyway, I don't think.\"\n\n\"You should,\" Amelia said seriously. She was staring into his eyes, thinking to herself about all the times he had simply been there to give her company. And all the recent times in which she found herself thinking of him often.",
        "He said nothing, wondering what she meant exactly.\n\n\"Another thing, Grain. I'll be Amelia Taylor again in a few weeks. If you're not going to start calling me Amelia now, you better start when the divorce is final.\"\n\nHe raised an eyebrow in response, smiling at that feigned stern tone she put on for him sometimes.\n\nHis expression made her laugh. \"I mean it!\" She said loudly.\n\n\"Yeah, yeah... we'll see,\" He mumbled before turning around and starting to pack, listening to her laughter and feeling for the first time in several days that things were going to be just fine.\n\n.....\n\n\"Okay. That's the fourth time your phone's gone off. Why don't you just read them?\"\n\n\"I will. After the film,\" Grain told her, still staring at the TV. It was his second year of university and he was back home for a break, watching a film at Amelia's. She looked beautiful in just a pair of three quarter length jeans and a loose t-shirt. She was sitting on the two seater sofa, her back against the arm and her legs folded up next to him, so she was facing him more than the TV. In her right hand, she held a glass of wine.\n\n\"But I want to know what she's saying!\"\n\n\"She?\"\n\n\"It IS her, isn't it? I don't know of any boys who would text this often.\"\n\n\"I haven't looked at my phone, so I have no idea.\"\n\n\"So look!\" She pleaded.\n\n\"Mrs. Lewis, I promise after the film, I will even let you read them out to me.\"\n\nAmelia narrowed her eyes at him. \"You lie.\"\n\nHe flashed a smile and pointed at the TV screen. \"It's nearly finished.\"\n\nShe sighed. \"Fine, fine. Pardon me for being excited about the fact you have this potential first girlfriend who's obviously into you. I just do not understand your behaviour.\"\n\n\"We're watching a film together,\" Grain told her. \"I'd like to at least finish doing that before I do anything else.\"\n\n\"You'll let me read them, after?\"\n\n\"You have my word.\"\n\nBut Amelia didn't wait that long. Fifteen minutes before the end of the film, she said, \"Can I read them now?\"\n\n\"It's nearly finished!\"\n\n\"Grain, with all due respect, you're twenty years old and your priorities are messed up. There is potentially a girl who wants to jump you, right now trying to communicate with you and you're sitting here with an old woman, watching a film both of us have seen before. And you're ignoring her texts.\"\n\nHe laughed suddenly. \"Jump me? No, no. It's not like that with me and Clarice.\"\n\n\"But you do like her.\"\n\nGrain shrugged deeply. \"I don't know!\"\n\n\"She was one of the first things you mentioned tonight when we were having dinner! It's the first time I've heard you even talk about girls. I think it's obvious.\"\n\n\"I've spoken about girls before!\"\n\n\"Mila Kunis doesn't count. Neither does Leelee Sobieski. Or that porn model you like so much.\"\n\n\"She doesn't do porn. I don't think. Just... sometimes... racy pictures.\"\n\n\"Whatever. The point is this; it's different this time!\" He was about to answer that, but she interrupted with, \"You know it is. Don't dare deny it.\"\n\n\"I don't see why it's so important.\"\n\nShe shrugged. \"Because I think you need someone to bring you out of your shell. And... I mean it's a potential relationship. Doesn't that excite you?\"\n\nGrain, who by now had lost interest in the film, looked at her. He wasn't sure what he felt about the prospect of it. \"I don't know.\"\n\nShe pursed her lips momentarily and said, \"Really?\"\n\nHe shrugged his usual small shrug.\n\n\"Why not?\"\n\nBecause everyone else seemed to pale in comparison to Amelia. It was at this point in his life he knew he had feelings he could never act on, but with the simple act of denial, this was no problem. His feelings just did not exist. \"How can I know why I don't know something?\"\n\n\"We'll make this easy then. Tell me about her. Talk to me about her.\"\n\n\"And that will achieve what, exactly?\"\n\n\"Just tell me about her, go on,\" She urged him, though a part of her was beginning to feel this conversation was perhaps taking a turn she would not quite be comfortable with.\n\n\"We met during one of our seminars. She's very pretty. We're good friends. We hang out a lot together. That's it.\"\n\n\"Really? No. That's not just it. I know you. You wouldn't notice someone unless they stood out from others in some way.\"\n\nHe knew exactly why he had become good friends with Clarice. It was one of those things he rarely spoke about. He could not deny, however, that he had been wanting to tell Amelia about it, ever since the night of her birthday, three years before. In some sense, he almost felt she deserved to know, because she was easily one of his closest friends, though he would never tell her that.\n\n\"Grain? What are you thinking?\"\n\n\"She's an orphan. Like me.\"\n\nThe expression on Amelia's face became serious. \"Oh.\" She took a gulp of wine and nodded. \"Okay, I guess then... we'll not talk about this?\"\n\nNow the serious expression had uncertainty all over it. Inwardly, he smiled at her honest question.\n\n\"Sorry, Grain, I didn't know. Oh, I feel awkward now.\"\n\n\"Why?\"\n\n\"Because I know how much you don't like talking about your parents. And I've been pushing you about this. I just wanted to know more about her.\"\n\n\"It's okay,\" Grain said. Then he took a deep breath. \"She helped me through some issues I had.\"\n\n\"Yeah? That's good.\"\n\n\"Yes. Uh. I mean, her parents died in a different way and she barely remembers her father, but it kind of helped to talk about it with someone else who knew what it was like. Even if the circumstances were different.\"\n\nAmazed that he was still talking about it, she decided the best thing to do would be to stay quiet and listen, in case she inadvertently made him feel uncomfortable again.\n\n\"Actually, there is something I've been meaning to say since I got here. I wanted to say sorry about all the times I kind of got weird about my parents. I know I could be a little abrasive when the subject came up.\"\n\n\"Grain... It's fine. Honestly. You were never anything but polite. Abrasive doesn't even come into it.\"\n\n\"If you're sure. I always felt kind of... well, inside. You know?\"\n\n\"If you did, it never showed. I just figured if you ever wanted to talk, you would. I know I brought it up a few times. I was just worried.\" She sat up properly.\n\n\"About?\"\n\n\"It's just... Wait, are you okay with me talking about this?\"\n\nHe nodded.\n\n\"Right. Look, I just worried because I thought it was unhealthy to keep it in,\" She stopped when he saw him raise his eyebrow at her. She rolled her eyes. \"Okay, kettle, pot, black. I know. I'm not exactly a good follower of talking stuff out but I do try now, don't I?\"\n\n\"Yeah.\"\n\n\"I guess it had to be the right time for you too. And the right person,\" She added quietly.\n\nHe frowned. She seemed a little sad all of a sudden. As a joke he asked, \"You're not jealous, are you?\"\n\nHowever, she gave him a serious look and said \"Would it be strange if I said I was, a little?\"\n\nThat was so unexpected he didn't know how to answer and he looked at his hands resting on his lap. A moment or two later he turned his body toward her a little. The film was more or less at an end, and he couldn't help but glance at it once or twice, before looking at her.\n\n\"I kind of always blamed myself for my mother dying,\" He said in his low voice.\n\n\"What? Why?\"\n\nHe broke off eye contact and was quiet for a few seconds. Then he answered, \"Because my mother always had problems with her mood. Serious bouts of depression. She was kind of stable, but when I was born, she had post-natal depression. Very bad post-natal depression. And I think in some ways it kind of just triggered off those bouts again and she never really shook it off. The night she died, I was nine. She tried to kill herself when I was out. My father came home and found her unconscious. He panicked. He didn't even think to phone an ambulance. He just rushed to get her in the car and drove as fast as he could. On the way, he- the car, it was in a serious accident. They both died.\"\n\nAmelia leaned forward very slightly, looking as though she was going to cry. She reached out with one hand and took his hand, loosely curling her fingers around his. \"Oh, Grain... But you do realise that it wasn't, don't you?\"\n\n\"Oh, I know. I mean. Logically I knew, you know? But emotionally... I don't know. I just kind of always thought if I hadn't been born, then she never would've had that trigger.\"\n\n\"You don't know that.\"\n\nHe smiled and nodded in agreement. \"Clarice kind of helped me see that. Or at least, she just kind of helped me let go of it.\" He took his hands from her fingers, finding the touch too intense.\n\nShe glanced at his hand while it moved away, feeling a moment of emotion she couldn't quite identify. \"All these years, you've had that on your mind?\"\n\n\"Sort of. I guess. I found out about what happened and her post-natal depression during the funeral. Grandma was talking to one of my aunts and they didn't realise I was there. Then I guess the next few months after that I kind of started looking at it that way. I just couldn't talk about it to anyone. I don't know why. After a while I guess it seemed easier not to.\"\n\n\"Gets easier to just deny.\"\n\n\"Right.\"\n\n\"... Thanks for telling me. I'm glad you can talk to me about it.\"\n\n\"Yeah. Well. Like you said, had to be the right time.\"\n\n\"And the right person. If Clarice could have this impact on you... I mean she's obviously a very good friend.\"\n\n\"She is. But that's just it. I think she is interested, but I can't look past seeing her a friend. I just can't.\"\n\nShe thought about that for a moment. \"Can I say something here? It might not be something you want to hear.\"\n\n\"Go on.\"\n\n\"I always thought that maybe, the last few years, the fact you've never quite gone for a relationship, that maybe it was because of your parents dying when you were young. That it's just given you this fear.\"\n\nHe was very focused on his hands by the end of that, having already guessed what she was going to say as she was saying it. He nodded. \"It's plausible, I suppose.\"\n\n\"You know, if she's this good for you as a friend, then imagine what it could be like if she was your girlfriend,\" Amelia said. \"But I guess if you're not interested, then you're not interested. You can't force it.\"\n\n\"No. I guess I can't.\"\n\n\"I hope you get to that point soon. Being with someone, I mean. If anything, I bet getting laid would break that shell of yours.\"\n\nA short laugh emitted from Grain as he looked at her in the face.\n\n\"You laugh, but it does work for a lot of people. Trust me.\"\n\nHe nodded, \"I'm sure it does.\"\n\n\"Well. A time for everything. You're a gorgeous person, outside and inside. It won't be long, I'm sure of it.\" He gave her that dismissive look of disbelief coupled with humour that always made her narrow her eyes at him and stick her tongue out for good measure. \"Now. Are you going to let me read the texts?\"\n\n\"No. You didn't wait until the film was finished.\"\n\n\"Grain! You can't do that.\"\n\nBut he was already reaching for his phone and handed it to her.\n\nShe unlocked it, and pressed the button to read the new messages for that evening. \"Oh. First two are from someone wanting to know about work to be done. Typical student. Third one is something about a party-\"\n\n\"-Oh yeah, I already told him I wasn't interested-\"\n\n\"-Ah, okay, and.... Ah! Oh. Grain!\"\n\n\"What?\"\n\n\"It's Clarice. And if I'm correct, she's basically asking you out.\"\n\n\"Really?\"\n\nShe nodded. Strangely enough, given her previous enthusiasm for the idea, he expected her to be more excited about it, but now it was almost as if she was treating it as matter of fact. She looked at him, a slight smile on her lips. \"What shall I reply?\"\n\nHe didn't answer. He put his hand out to take the phone back. She gave it to him with a roll of her eyes. Grain glanced at the message, feeling a rush to the head, his body feeling hotter and his heart race, but instead of replying, he locked the phone and put it back in his pocket. Not here and not now. Not with her sitting there.\n\n\"Grain!\"\n\n\"I'll think about it.\"\n\n\"Hmm. Fine then.\"\n\nHe flashed a grin and looked away toward the TV again, all the while his thoughts on her; Amelia.\n\n.....\n\nIt took several trips to move everything to her new flat, but she was fully moved in after a couple of weeks. The flat was cosy, warm and had big windows that let in lots of light. There was a bathroom, a bedroom, a kitchen and a living room. It didn't take long for Grain to see Amelia stamp her personality on the place, most noticeably with the piles of books she had, which seemed even more numerous now that she had less space. He suggested perhaps giving some of them away to the local library, but she vehemently shook her head and said she could not think of even parting with any of them. He understood.\n\nFrom that point on, there was a sense of routine that settled into their lives. Amelia would get home fairly early most days, and Grain, who had taken up a temporary job as a waiter for a cafe owned by one of his aunts, would usually work afternoon shifts and then stop by at Amelia's flat on his way home, when he knew she would be home.\n\nSooner than both of them had expected, Amelia's divorce became final. Grain remembered that day well. Amelia spent the day feeling relieved and yet saddened by the end of that part of her life. Whichever way she saw it, she had spent a huge portion of her life with the one man and it felt like she had lost a part of herself, at least initially. With a little time, she felt better and carried on with her current life, this time with a conviction and motivation that Grain had not seen in her before. Terry Lewis had decided in anger several weeks before that he wanted nothing more to do with her, and Amelia had hoped he would change his mind and that things would be amiable between them, but after several weeks, she found herself letting go of that idea more easily than she expected.\n\nSeveral months after she moved into the flat, Grain went through his usual routine. On his way home from work, he decided to stop over at Amelia's for a while, rapping on the door with his usual knock so she would know it was him. He wasn't sure when he actually felt things were different today. Perhaps when she opened the door with that warm smile on her face, still dressed in her work clothes, a white blouse and a tight pencil skirt; one of his favourite outfits on her. Or perhaps it was when he went in and realised that despite the failing light outside, her flat was dimly lit, though the TV was on and so was the radio in the kitchen.\n\n\"Have you eaten, Grain?\"\n\n\"A little bit. I'm not very hungry.\"\n\n\"Well we can maybe order something later. It's Friday night, and I am feeling good.\"\n\n\"TGIF, hmm?\"\n\n\"Definitely. You working tomorrow?\"\n\n\"No. Day off.\"\n\n\"I took the next week off.\"\n\n\"Really? Why?\" Grain asked in surprise. She always went to and came back from work with enthusiasm.\n\n\"Felt like it.\"\n\n\"Are you okay?\"\n\nShe looked at him and walking up to him, said, \"I'm fine.\"\n\nFeeling nervous at the proximity, he glanced around her living room. On the side table next to the sofa was a book next to the lamp. She had been reading.\n\n\"It's a great book so far,\" Amelia said.\n\n\"New one?\"\n\n\"No, an old one that I found. I realised I hadn't read it.\"\n\n\"Rare for you.\"\n\n\"Do you want to watch a film? Unless you haven't got any time for one or...?\"\n\nHe looked at her and suddenly realised what was different. She was nervous. She was doing very well with hiding it, it was just the tiny uncertain movement of her eyebrows that gave it away. He chose not to ask about it. If she felt it was right to, she would eventually talk about it.\n\nHe nodded. \"I've got time. I didn't have any plans or anything, and Grandma said something about going over to my aunt's this weekend.\"\n\nShe nodded once and said, \"Good. I think I should just get changed. Well, showered and changed. You'll be okay by yourself for a bit?\"\n\n\"Of course,\" Grain said, moving to the sofa and picking up the book.\n\n\"Do you need to shower or anything?\"\n\n\"No. I showered at work before I came. Aunt Nadya has this weird thing about me having to look my best when going home. Maybe she thinks I'll die or something and doesn't want me to be caught out looking disgusting for the ambulance or the public.\"\n\nShe giggled and walked out of the room. \"I'll be back in a few!\"\n\nRight after she showered, she looked in the mirror at herself, wondering what it was she going to wear. Despite having thought about it all day, her mind was indecisive about all the details of how she was going to go through with her plans. There was a tiny moment of guilt that she dismissed easily. She wanted this. She knew she did. The last several months, perhaps far more than that, she knew how much she enjoyed being around him, more than she thought was right. That didn't matter any more. It was her life and it was up to her what she wanted to do. And what she wanted to do now, was act on her feelings and... see what happened.\n\nNo more planning. Just flow.\n\nLooking herself up and down, she fervently hoped he would find nothing wrong with her appearance, though deep down she knew she was thinking about silly little things that didn't matter really. She looked great. Sighing, she dried off her body a little more and walked into her bedroom, noting that he was probably watching the TV, or maybe he had already began reading through the book out of curiosity. She hoped it was that. The book was about a young man and an older woman. She smiled to herself, thinking of how stupid it seemed all of a sudden; the idea of putting that book there to make him think about the situation. Surely if he felt the same, he would need nothing like that to put the idea into his head.\n\nAnd she was nearly certain that he did. Over the years, all she had seen was tenderness and caring from him. That and more, and his growing up into a handsome man who even now did what he could for her, and looked after her when she needed it, was there for her whenever, and ultimately was the one human being in this world she now could not imagine not having in her life.\n\nOn the bed was a choice of two dresses. An old dark blue one that she kept for wearing around the house occasionally, which sort of clung to her curves in places and moved with her body. The other was a new dress she had bought recently. Just for him. She hadn't tried it on yet. As quickly as she could but with composure, she put on the new dress and looked in her full length mirror. It looked beautiful on her. It hugged her figure, showed off a reasonable amount of cleavage and went down to her knees. She looked at the blue cotton dress on the bed. That was more her. Not this new one. And she had worn the blue one around him before, and unless it was her imagination, she was sure he would often glance at her when she wore it. She changed again, and then looked at the door leading to the living room.\n\nJust flow.\n\nWhen she came back, he was sitting on the floor with his back to the sofa and staring at the TV. He looked up at her in surprise and made sure not to keep staring. That blue dress happened to be his favourite. She slumped down on the sofa, on the opposite side.\n\n\"Are you okay on the floor?\"\n\n\"Yep.\"\n\n\"So what's on TV?\"\n\nHe looked at her, or more accurately, found himself glancing at her legs. They were bare up to her mid-thigh as she had them folded nearly underneath her. \"Not sure. A film just started. Something horror. Whatever it is, so far it's just making me want to watch The Island Of Dr. Moreau.\"\n\n\"Oh that was a horrible film!\"\n\n\"No it wasn't! Well. Actually it was. Or maybe it depends.\"\n\n\"On?\"\n\n\"Which version you saw.\"\n\n\"There was more than one of that travesty?\"\n\nGrain laughed. \"Do you remember the actor in the version you saw?\"",
        "\"God, no. And I'm glad. This film cannot be good if it's making you want to watch that.\"\n\n\"We could always turn it off if it's really bad.\"\n\n\"Agreed. We'll give it half an hour?\"\n\n\"Fine by me.\"\n\nThe film lasted perhaps twenty minutes before they both changed the channel, but there was nothing on TV that interested either of them. So the TV went off, and Amelia put some music on instead, also getting a bottle of wine and a couple of glasses in the process. Thinking of food, they began to talk about the last few weeks, and how she felt like a new person in some sense. Eventually the conversation took a turn when Amelia suddenly asked him a question she had been wanting to all night.\n\n\"Grain? What happened with Clarice?\"\n\n\"What do you mean?\"\n\n\"Well. Why did you never go out with her?\"\n\n\"I wasn't interested.\"\n\n\"That's it?\"\n\n\"That's it.\"\n\n\"Oh. Was it awkward between you two when you went back after she asked you out?\"\n\n\"No, not really. I think she understood that I was just a friend. I think she believed it was a bit of a long shot anyway. She wanted to try it. I didn't.\"\n\n\"Simple as that, hmm?\"\n\n\"That simple.\"\n\n\"Was there a reason why you weren't interested?\"\n\n\"What do you mean?\"\n\n\"I mean, was there some specific reason or was it just general?\"\n\n\"Does it matter?\" There was a subtle defensiveness in his tone, the last thing she wanted to hear, and it was intriguing.\n\n\"No, not at all. I'm just curious.\"\n\n\"Well. I guess there was a specific reason, but it doesn't matter now.\"\n\n\"Oh? What was it?\"\n\n\"Nothing important.\"\n\n\"Grain... you can't do that. Now I'm even more curious. And you know I won't relent.\"\n\nHe sighed and shook his head, and in a mock depressed voice, said, \"Venusians!\"\n\nShe smiled and lightly smacked his shoulder with her hand. \"Go on!\"\n\n\"I guess I was interested in someone else,\" He said, looking at her over his shoulder.\n\nThere was a slight change in atmosphere all of a sudden. She nodded. \"I see.\"\n\nHe looked back at the floor. \"That was then.\"\n\n\"No more?\" She asked.\n\nHe shrugged. \"I love this song,\" He said as an old, slow piece of jazz piano came on.\n\n\"... You know, I think I figured out something the other day.\"\n\n\"What?\"\n\n\"Why you never called me by my first name while I was married.\"\n\nSuddenly feeling nervous, Grain gulped and tilted his head to the side while looking at her. He raised an eyebrow and as an attempt to diffuse this line of thought, he asked, \"There was a reason why I never did that? Other than being afraid of Grandma's death grip?\"\n\nShe smiled and nodded. \"It was about boundaries, wasn't it? As long as you stuck to my surname and title, there was always a formality to it. Less personal.\"\n\n\"Are you asking me, or telling me?\"\n\n\"Both.\"\n\n\"Hmm. And why would I want to keep it formal? We're not formal at all, are we? We're good friends.\"\n\n\"We're very good friends.\"\n\n\"Then?\"\n\nShe stuck her tongue out at him in response. Then the song changed and the nerves hit her. And the need to dance. It was the one song she had been waiting for.\n\n\"I feel like dancing,\" Amelia said in a low voice. \"Dance with me?\"\n\n\"What? Now?\"\n\n\"Yes. Now,\" She said standing up and reaching for him.\n\nHe shook his head. \"I don't dance.\"\n\n\"Yes you do. I've seen you. You're good.\"\n\n\"I was drunk at the time.\"\n\n\"So pretend you're drunk now! Come on, get up.\"\n\nAnother mock sigh, and he stood up. Though he looked nonchalant, his heart was beginning to race. It got worse when she moved right up to him and put her arms around his neck, ensuring there was no way he could escape now.\n\n\"It is customary, I believe, for the man to put his arms around the woman,\" Amelia said, putting on a posh accent.\n\n\"Around the waist, or lower?\" Grain asked, hardly believing he did so.\n\nShe gasped. \"Mr. Black!\"\n\n\"I'm sorry, I was just joking,\" Grain said quickly.\n\n\"Oh no, I'm just glad you asked. You can put them wherever you want.\" There was a tone of challenge in her voice.\n\nSince when did they flirt so easily? It wasn't as if it was something new. There had been subtle moments of flirting over the last several weeks, but it was never as open as this. Perhaps it was the wine. Or maybe she really was serious. Grain stammered for a moment, narrowed his eyes at her amused look and then put his hands around her waist. Now they were very close together. He could smell her, and it only served to make his head rush. Doing his best to keep his shallow breathing quiet, they began to sway in time to the music. And eventually she settled her head on his shoulder, her lips just a hair's breadth away from his neck. He could feel her breathing. He was also sure she must have been aware of the artery in his neck pulsing wildly.\n\nThis was too close for comfort. It was all he had wanted for so long and now it was happening and he needed it to stop. But he didn't. He swayed, savouring every sensation that her body close to his produced in him, and the feel of her. He wasn't sure how it happened, but she got even closer, and suddenly they were touching and the blood was rushing down there and...\n\nTo his horror, he was responding down below. And there was no way she could not feel that against her body. He was about to break away in embarrassment when all of a sudden she spoke.\n\n\"It's okay,\" She whispered, but even then it was loud. Her voice was wavering slightly.\n\n\"What?\"\n\n\"I know. I can feel it. Grain, it's fine. I... like it. I love that I can do that to you.\"\n\n\"Oh.\" Though disbelieving at first, the need to break away disappeared, but the nerves surged back even worse. \"Are you sure? I mean, I'm sorry, I can just move--\"\n\n\"Grain, did I ever tell you, how much I loved it when you first called me by my first name?\"\n\nThough they did not disappear, it felt as if his nervousness went through some sort of shift. Then he knew. She wanted this; as much as he did. It seemed incredible.\n\n\"It felt so very right,\" She whispered.\n\nHe was suddenly aware of the tips of her hairs brushing against the arm he had around her waist. Her hair was loosely tied at the nape, and there were locks of it framing one side of her face, the side facing him was free and uncovered. He could see her neck, exposed to him, her creamy, pale skin inviting.\n\nShe kissed his neck lightly. It was tentative at first, but then stronger. He closed his eyes, almost unbelieving. She rubbed her cheek against his lightly and stood like that for a few moments. He opened his eyes and waited. Was he supposed to make a move? Before he knew it, he was butterfly kissing the curve of her jaw, where it met with her neck. And then along her jawline, only to stop in surprise momentarily when she tilted her head back and moaned. Realising it was a good thing, he kissed a trail to her chin, and she moved her head down to look at him.\n\nHe had never seen her eyes so close up before. He wanted to tell her how beautiful they were. She smiled.\n\n\"Grain... Are you okay with this?\"\n\nNot trusting himself to speak, he nodded.\n\n\"I've wanted this for a long time,\" She said quietly.\n\nHe nodded again, feeling awkward, wishing he could just speak. But his thoughts were racing too fast. It didn't matter. She bit her lip and moved forward, closing her grip around his neck and kissed him deeply on the lips. He kissed back, just as deeply, enjoying the softness of her dark lips. His hands lowered, apparently of their own accord, down to her buttocks and he cupped both of them, squeezing slightly. They rose again and he massaged her lower back while he began to kiss her jaw again, down to her neck and trailing little licks and kisses to the hollow at the middle of the clavicle. There, he stopped, wondering if he should go lower.\n\nShe giggled suddenly.\n\nHe looked up in surprise. \"What?\" His voice was slightly high and raspy. He cleared his throat.\n\nShe looked at him and gave him a quick kiss on the lips. \"Stop thinking.\"\n\n\"What?\"\n\n\"Stop thinking... You're thinking too much.\"\n\nIt was true. \"I just... I don't really know what I'm doing.\" It seemed easier to admit than he thought it would be.\n\n\"It's okay. You're doing fine. Flow. Let your body do the talking.\" With that, she pushed him down onto the sofa and stood while he stared.\n\nSlowly, she took the hem of her dress and very deliberately raised it up, moving forward as she did so, to put one leg on side of his body. Suddenly he could see along the inside of her thigh, right to the lace underwear she was wearing. She smiled at the look on his face. She moved forward and straddled him, slowly spreading her legs a little so she could push down on his erection. The contact was electric. Feeling the warmth and the pressure there, he stared with fascination at her legs, her waist and then her breasts.\n\nWhen he looked up at her face, she smiled. She stroked his face and ran her fingers through his hair and he closed his eyes, pushing against her hand with his cheek when it came down again.\n\n\"Grain... Are you sure you're okay with this?\"\n\nHe opened his eyes and nodded. \"Aren't you?\"\n\nShe leaned forward, pressing her breasts against him and her head against the side of his, wrapping her arms around so she could run her fingers through his hair again. Her mouth was next to his ear and she kissed it, nibbling the lobe for a moment. His hands immediately ran up her thighs, stroking them. The close contact to her body, something he had wanted for so long, seemed so vivid, he wondered for a moment if it was really happening.\n\n\"I want this more than anything right now,\" Amelia whispered.\n\nShe sat up again and for a while she simply ran her hands along his neck and his face, and he found his hands were massaging her thighs. He could've stayed like that forever.\n\nShe put her arms on his shoulders and leaned down to kiss him again, along his neck and lightly bit his shoulders, and his clavicle. It occurred to him, it had probably been a long time since she was intimate with someone, but that thought rapidly disappeared into a world of feeling and surprise at how pleasurable he found the biting. She sat up and took the bottom of his t shirt and pulled it over his head. Running the tip of her tongue down from his clavicle, she went toward his nipple, circling it and then sucking it lightly.\n\nHe gasped suddenly. \"That's... good!\"\n\nShe sucked harder and came up again, lightly giggling. Quickly, licking his lips, she kissed him again. \"I love kissing you.\"\n\n\"I'm not exactly aversive to it either...\"\n\nShe smiled and leaned forward, touching forehead to forehead. It seemed so surreal to Grain on one level that this was happening, but when she touched her forehead to his, suddenly it was natural. Nothing could have felt more real at that point, just from that simple touch. He let his body flow.\n\nHe reached out to her shoulders and slowly pulled the straps of her dress over her shoulders. She moved back and let the straps fall past, taking the top of her dress with them. She now sat in front of him topless. Her breasts were bigger than he had thought. They looked soft and round, sagged slightly and were tipped with large nipples that neither pointed up or down, but a little outwards. They were perfect, somewhat more than a handful and very inviting.\n\nHe looked at her and saw she was actually nervous. It seemed completely ridiculous. Did she have no idea how stunning she was? He wanted to tell her all kinds of thoughts that the sight of her triggered in him, all the things he wanted to do to make her feel good.\n\nInstead he uttered the word, \"Wow.\"\n\nShe emitted a short laugh which made her upper body shake and her breasts sway slightly. She took his hands and placed them on her breasts. They were soft to the touch, and he squeezed.\n\n\"Mmm... Go on...\"\n\nHe rubbed them, cupping them and being sure to rub his palms over her erect nipples. Lifting one breast slightly in his hand, he leaned forward, while she did the same, and he licked the underside slowly upwards, flicking her nipple with the tip of his tongue. Then he took it in his mouth, running his tongue around it and over it before he sucked lightly. Taking her moaning as a cue, he sucked harder, massaging her other breast, lightly pinching her nipple. Getting lost in it, he took as much flesh as he could into his mouth and heard her gasp suddenly. He let go off it and kissed the underside of both breasts, up between them and onto the other nipple.\n\nShe was rocking now, her mound rubbing over his erect penis, and he stopped momentarily, realising the sensation was nearly more than he could handle. She raised her body up and he kissed a ways below her naval, just under the curve of her belly. There was a sudden twitch from her, her abdomen sucking in slightly.\n\n\"Do that again,\" She whispered, her breathing shallow.\n\nHe licked the same spot and suckled on it. Again her abdomen twitched but this time she pressed forward a little. He put one hand on her buttock and the other on her waist, nibbling and kissing the same spot while she held herself there for a few seconds, until he began to kiss lower, as she raised her body as far as she could.\n\nThen she sat back down on his lap and to his surprise, ran one hand down his chest and past his naval to settle on his hard erection. He gasped as she cupped it in her palm, rubbed it and squeezed it.\n\n\"Amelia... uh... that...\"\n\nShe eased the pressure.\n\n\"Might come. Too soon,\" Grain moaned.\n\nShe leaned forward, still rubbing him there and gave him a deep kiss, dragging the inside of her bottom lip along his bottom lip. She moved back, kissing his chest and down to his naval, moving her body further back and finally off the sofa. Suddenly she was on his knees in front of him.\n\nShe grinned at the disbelieving look on his face and reached to undo the buttons of his jeans. Once that was done, she pulled them off. He raised his hips to allow them to slide off, raised his legs and she pushed the jeans away. His bulge was obvious against the thin material of his boxer shorts. There was a small wet patch from precum. She touched his penis, rubbing lightly through the fabric, her thumb briefly touching the wet patch.\n\nGrain gulped. There was no way to describe how much space in his head the sensation took up. It was the first time anyone else had touched him there. She pulled off his boxers, with a little help from him, and freed his cock from the restraint. It twitched with each heartbeat and otherwise stood up, curving toward him a little. It was about average length, if a little thicker than usual.\n\n\"Mmm...\" Amelia seemed to say, though he could not be sure since he was far too distracted by the fact she wrapped her hand around the shaft and began to slowly stroke it, increasing the pressure every time she got to the tip.\n\n\u515aThat feels so good...\"\n\nShe smiled and moved forward, kissing the tip of his cock. With the very tip of her tongue, holding the shaft, she licked upwards underneath the head. He could've sworn his cock jumped at the contact. She licked the underside of the head a few more times, before moving forward to lick around it, and then taking it into her mouth. The feeling of her hot, wet mouth, and the sliding of her soft lips over the head made him squirm. He could not tear his eyes away as she slowly, deliberately took the head of his cock in and out of her mouth, flicking the underside every time it left the heat of her mouth. He did not think it could feel any better until she started sucking with more pressure, never quite going down the shaft, but focusing on the sensitive, smooth head and licking hard with the full flat of her tongue.\n\nIt wasn't long at all before he felt he was going to come. In a quick, short breath, he whispered, \"It's coming soon...\"\n\nShe sucked hard one more time, before letting his cock leave her mouth, and she kissed the underside of the head, sucked it a little and began to move her hand up and down around the head, gripping firm but gentle.\n\nGrain moaned, unable to take his eyes of the look on her face as she stroked his cock firmly and slowing down until she stopped. There was a look in her eyes that he hadn't seen before. Amelia was very wet by now and her breathing a little shallow. She wondered for a moment whether she could go all the way. She wanted him now, at that very moment. Letting go of his cock, she stood up with that strangely serious, intent look and turned away from him. Grain stared, mesmerised by her look, his cock twitching with each pulse. He watched as she slowly took the sides of her panties in her hands and slowly pushed them over her wide, round buttocks. She pushed them all the way down, bending over slowly as she did so.\n\nGrain's eyes immediately went to look between her legs. Her labia were in view, puffy and glistening. He wanted to kiss them, pull at them with his lips, lick between them. He did not move though. Caught in a trance, he watched as she straightened up again and stepped out of her underwear, slowly pushing it to one side with her foot.\n\nTurning to look at him, she moved forward until she was nearly touching him. \"Grain,\" She said in a nervous voice. \"I understand if you won't want to do this, since it's your first time. I can't wait any longer. We have the rest of the night to do whatever, I know. But. I want you. Now.\"\n\nGrain opened his mouth and shut it. Until now, it hadn't even occurred to him that this was a possibility. He had not even dared to hope tonight could lead up to this. Part of him had wanted this for longer than he could figure out. Part of him felt fear at how it could change things. There had never been anyone else though, he knew, that could ever make him this comfortable. This willing to be intimate. He didn't trust himself to speak. Instead, he nodded at her and held out one hand tentatively.   \n\nShe smiled and took it, spreading her legs as she moved forward, prepared to straddle him. Then slowly, she lowered herself on him. Grain had no idea what to expect in terms of feeling and even now he knew he couldn't describe the sheer wall of sensation that hit him, not just down below, but an amalgamation of all the bits of her touching him; her hands on his shoulders, her legs rubbing against the side of his, even the look she gave him.\n\nKeeping her eyes on his, she began to rock, slowly grinding her pussy on his cock. Grain couldn't help but thrust upward in rhythm with her, his breathing becoming more ragged. His hands gripped her buttocks and squeezed tightly, helping her move on him as she slowly increased speed. Soon she was moaning loudly in time with each grind, her pussy squeezing his cock. Her back was arched slightly, causing her breasts to jut out toward him. They shook with each movement, the flesh rippling invitingly. He moved forward and with one hand took one breast into his mouth and sucked the nipple with increasing vigour, eliciting more moans from her.\n\nHe was lost in her, barely conscious of what he was doing, having finally let go. She wrapped her arms around his head, pushing his head into her breasts and her grinding was now reaching fever pitch. Her eyes were closed and her head tilted back as he listened to her breathing become shallower and felt his cock getting ready to burst. He gripped one of her buttocks and put his other arm around her back. The moment was upon them.\n\nWith a long, loud cry of pleasure, her grinding suddenly slowed and she let out a exclamation with each pulse of her orgasm, pushing against him with an intensity that surprised him, her muscles tightening and her mind blanking completely as the rapture took over. He came instantly. He felt as though he was shooting from somewhere in his torso, waves of feeling flowing down and through his cock. He shot a few times, feeling hot inside her and mixing with her juices. He was breathing hard into her chest, his head still buried in it, pounding with blood and echoes of the orgasm. She stopped grinding and her breathing deepened as she lowered her mouth to his ear.",
        "\"Oh, Grain... Grain. Oh. That was. Ohhh...\" She trailed off to let her breathing calm. She kissed him a few times, lightly and quickly on his lips and around his face. Then she looked straight into his eyes, taking in the expression in them.\n\nGrain simply stared back, a small smile on his face. He tucked a few strands of her hair that had come loose, behind her ear and stroked her cheek. He wanted to stay like this, looking at the glow in her body, feeling her joined to him. She kissed him a few more times.\n\nAfter a moment of smiling at him, she put her mouth to his ear again and said, \"Bedroom. Now. Please?\"\n\nShe didn't have to ask him again. He nodded and helped her up, amazed that there was more to come, knowing he wanted nothing else right now. His cock was almost numb and limp again. He was aware of her smell filling the air, something new to him, as she took his hand in hers and pulled him behind her, making her way to her bedroom.\n\nHe was fascinated with the slope of her shoulders and the way her hair trailed over her back as they both entered her room into the soft glow of her lamps. The black dress she had tried on earlier was still on the bed. She simply picked it up and threw it on the floor. She turned around and kissed him again, standing at her bed. He kissed her gently, his hands running over her hips.\n\nWhen he broke off the kiss, something occurred to him. \"Amelia, what about... uh. Protection?\"\n\nShe smiled. \"Only thought of it now?\"\n\nGrain raised an eyebrow. \"I have to admit, I did get sort of very caught up in what was going on earlier...\"\n\n\"Don't worry about it. It's not an issue.\"\n\n\"But--\"\n\n\"Trust me,\" Amelia said, moving in for another kiss. \"If it was, I would have made sure.\"\n\n\"... Okay.\"\n\nShe kissed him again. Grain realised that perhaps the act of kissing was just as intimate to her as everything else they had done. He kissed back hungrily, pulling at her bottom lip and letting her tongue dart in and out of his mouth. He was already beginning to harden again but focused on her instead. His hands went round to her back and he stroked up and down lightly. She broke off the kiss and nuzzled his neck.\n\nThis act alone set his thoughts racing. At this point, he decided he wanted to make her feel good, completely focus on her. Grain kissed her neck, nibbling along it. She moaned happily and he took this as a sign to lightly bite all the way down her shoulder. Then he moved back and slowly pushed her onto the bed so she was sitting down on the bed, her legs on either side of his. He leaned over and kissed her lips, then her chin and her neck. He trailed kisses down to her shoulders, kissing each alternatively, his hands on her sides, massaging them lightly. Her hands slowly ran up his thighs and she took hold of his shaft. He broke off kissing her clavicle and shook his head, moving her hand away from his cock.\n\n\"Not now,\" He whispered as he lowered his body down so he was kneeling before her. \"First, I'm going to... I want to do this. Okay?\" He said, hoping she'd understand.\n\nTo his surprise, her eyes were full of emotion as she silently nodded. He frowned, wondering why she looked somehow both happy and sad.\n\n\"It was rare for... him to think to do this,\" Amelia said quietly.\n\nGrain was surprised. He could think of nothing more but wanting to do this. Give her all the attention he could, to do everything he could do to make sure she was enjoying it.\n\nHe ached a little down there, but he ignored it as he kissed above her breasts, his hands on her thighs. She put her hands on his upper back, her breathing hitching a little as he kissed around her heavy breasts. He trailed kisses between them and underneath them, scraping his teeth along the underside of each lightly and briefly. Using one thumb, he lightly rubbed one nipple while he took the other in his mouth and sucked lightly, one hand moving up her thigh, the thumb rubbing back and forth and in circles just on the inside. For a while, he licked, lightly nibbled and sucked at her nipple, cupping her other breast in his hand and squeezing. His sucked with more vigour until he was pulling at her nipples with his lips and remembering the earlier gasps, taking in as much of her breast into his mouth as he could. She moaned and arched her back, pushing her breasts toward him.\n\n\"Mmmm... yes...\" Her whisper came out. Grain sucked, letting her breast fall out of his mouth at the height of each pull. She giggled and moaned again.\n\nHe held her sides and putting his lips around her nipple, flicked it rapidly with his tongue, for as long as he could before he did the same to the other breast. Everything about her turned him on more as he moved lower down. Her legs widened a little as he kissed her belly and nuzzled it, stroking the top of her thighs. Suddenly he felt the urge to kiss her back, kiss her anywhere else he could. He stood up and pulled her to her feet, feeling amused at the sudden puzzled look on her face.\n\n\"Grain....\"\n\n\"Turn around.\"\n\n\"Stop teasing me...\" She said as she turned around. \"I thought you were...\" She trailed off.\n\nGrain smiled. He kissed her shoulder and ran his hand over her buttock. He kissed between the shoulder blades and then down her spine. His hand cupped one of her breasts from behind and slowly pinched the nipple, pressing hard between his forefinger and thumb. She moaned as she pulled on it. He kissed across her lower back. Then lower down, each buttock, sucking lightly and stroking the side of her thighs, he kissed down the back of both, the back of her knees and the top of her calves. She widened her stance, perhaps without even realising it, and he could see she was a little wet. Briefly, he lightly ran a finger between her pussy lips, once, twice and then a few more times. She twitched and gasped, taken by surprise. He licked his finger, tasting her for the first time and marvelling at the strangeness of it. It was like nothing else he could remember tasting.\n\nAmelia stood and waited with her eyes closed. The thought of him kissing everywhere on her body excited her. It was an act of worship. She opened her eyes as he turned her around again and slowly pushed her down to the bed, making her move further up on it. He was kneeling again, kissing the inside of her knees. Then to her delight, he lifted her legs so she rocked back and supported her upper half on her elbows, her breasts moving to the side a little and her legs widening in his arms. He slowly licked along the inside of her thighs, deliberately taking his time, trying to keep his eyes on hers. She could not look away. Her pussy was already aching in anticipation and her breathing was shallow. Nearer the top of her thighs, he licked upwards and gave her little sucking kisses that deepened the closer he got to the top. Until finally, he was licking along the groove where her leg joined her torso.\n\nHe kissed around the inside of the top of her thighs, taking care not to touch her pussy yet. She moaned and squeezed her legs together, almost as if to push him toward where she really wanted to feel his wet tongue, but he simply resisted the push using every bit of his willpower and kissed above her pussy. Then, slowly, he put one of her legs over his shoulder and pushed the other leg further outward, exposing her pussy completely. He looked up at her. Her eyes were full of lust and something else entirely. She was breathing shallow and he was momentarily in a trance at the rising and falling of her breasts.\n\nHe had no idea what he was doing, but rather felt he should do whatever he could, and go from there, to watch her reactions and see if he could learn from them. He looked down at her pussy, taking care to take in the detail. For a few moments he knew he was not sure what he was seeing, even though in theory he knew where everything was supposed to be. Then, hoping for the best, he lowered his tongue into folds of her labia and gave her one long deep lick upwards. His tongue made contact with a tiny nub and she moaned suddenly, not taking her eyes away from him. That was her clit, he noted, and moved away from it. Realising in effect, he could not quite see what he was doing, he did everything by feel, trying to learn and memorise everything he could. He began to lick along the labia, slowly at first and then with quick rapid flicks every so often, punctuated with attempts to pull them slightly with his lips. It was hard though, as they were wet and he could not get a grip.\n\nAmelia was loving every moment. She let her moans express everything she was feeling as he began to lick her pussy, sometimes slowly and sometimes with surprising speed, his nose occasionally rubbing near and on her clit. He pushed his tongue inside her pussy and did his best to swirl it around before returning to her labia and then finally moving up to her clit. She let out an exclamation of pleasure as he sucked on her clit lightly, running his tongue around it and over it, flicking it and then sucking hard. He remembered once, someone telling him, the best thing to do was to write letters on the clit with his tongue, but he was so far gone in the sensation, he did not know how he could even focus enough to do anything coherent like writing on her hot, throbbing nub. Instead he licked it every way he could, sucked with varying pressure and occasionally returned to licking along her pussy any time she seemed to be close to losing control. She was lost in him and had fully lain back onto the bed, one of her hands rubbing and pinching her nipple and the other hand on the back of his head, pushing him closer.\n\nHe entered her with one finger and began to thrust in and out with it, finally focusing solely on her clitoris, increasing in speed and pressure until her entire body seemed to stiffen and her hips bucked and she let out a long moan that took over his hearing entirely. She moaned loudly over and over as his tongue on her clit was relentless in its licking, and her body jerked spasmodically, her leg coming to his head as she completely left herself in her cries. Her clitoris twitched, the muscles around it contracting, and Grain was rewarded with a tiny rush of her juices which he lapped up. Her spasms calmed, her moans quietened a little but did not go away completely for a few more moments as she arched her back, her eyes closed and her breathing rapid, her heart pounding and her legs finally relaxing around his head. He had stopped licking, completely entranced in watching her orgasm. She had a light layer of sweat on her body and he realised he too felt hot.\n\nHis cock ached for her, but he ignored it, watching her slowly sit up, bit by bit with the help of her arms. She smiled at him. He had never seen her smile so warmly at him before. She lowered her legs on either side of him and he straightened up again to meet her in a kiss. She licked his mouth, tasting herself, and bit her lip.\n\n\"I love you, Grain.\"\n\nIt was completely unexpected. Her eyes looked vulnerable and yet there was this confidence in them that he could plainly see. She was waiting for him to say something. Grain found no trouble at all in responding.\n\n\"I love you too.\"\n\nShe smiled. She brought her forehead to his, as she had done a lifetime ago. \"I don't need anything else. I just want you. If that scares you... I...\"\n\nGrain simply nodded, making her move her head too. He understood. She had known him for so long, knowing that he avoided relationships, avoided intimacy. But he had never understood until now, that it wasn't so much that he was avoiding it all, but rather it all seemed pointless unless it was her. Always and only her.\n\n\"Amelia. It's you. Always has been. I'm not scared.\"\n\n\"Oh, Grain...\" She kissed him again. She kissed him a few more times.\n\nGrain was then aware of the ache in him, but strangely enough it had subsided a little. He wanted to stay like this for as long as he could.\n\nThey weren't sure how long it was until she pulled him onto the bed and spread her legs, pulling him between her. He entered her slowly, dipping low to kiss her breasts and her face as slowly he began to thrust in and out. She wrapped her legs around his body, pushing in rhythm with his thrusts, feeling full with his hard cock. She stroked his neck as he increased speed, letting his body lower onto her, feeling her nipples against his chest as he pushed in as far as he could. Soon he was thrusting hard and fast, as much as the position could allow, the feel of her around his cock almost unbearable. He came suddenly, with a lengthened grunt, his head in her neck and her legs squeezing him tightly as she gasped. His mind wild with feeling, Grain let his body relax on her, as he finally subsided. As she always did, and always would, she kissed him.\n\nSometime later, they lay in bed, side by side staring at the ceiling, her head on his arm and her hand in his. He was thinking again.\n\n\"Amelia?\"\n\n\"Hmm?\"\n\n\"What happens now?\"\n\nThere was a beat of silence. \"Well. I guess I could screw your brains out again in a bit.\"\n\nGrain laughed. \"I meant... you know.\"\n\n\"I know.\"\n\nGrain wanted to speak, but he hesitated. His thoughts seemed silly but he needed some sort of reassurance. She sensed his hesitation, and lifted her head to look at him.\n\n\"Grain, what is it?\"\n\n\"It seems stupid.\"\n\n\"Tell me.\" Amelia shifted her entire body to the side so she could look at him more comfortably.\n\nGrain sighed. \"I've never been in a relationship. I don't know... what's expected. I don't know how things are supposed to be.\"\n\nAmelia laid her head on his arm again, smiling at him. \"Is that it?\"\n\nGrain rolled his eyes. \"I knew it was stupid.\"\n\n\"No, it isn't. You've never experienced it, so how can you expect to know if there's a way of doing something like this one way or another? But I wouldn't worry at all.\"\n\n\"No?\"\n\n\"Grain... the way things are. Before this happened even, you coming over, being here, spending time with me. All of that. That's it. What else do I need? The only thing that's different now, is that we know how we feel about each other and we can act on it. You let your body do the talking, right?\"\n\n\"Hmm. Yes.\"\n\n\"It's the same thing. We'll figure it out as we go along. I don't really know how it goes either.\"\n\n\"But you were with--\"\n\n\"I know. But that was him. This is you. This is different. This is better.\"\n\nHe couldn't help but smile. There was a long silence. He felt better all of a sudden. The fear seemed stupid once he thought about it properly in light of her words. He just had to flow with her. In some ways he always had been. What could have been more comfortable than that? He tightened his embrace of her, and let out a contented sigh.\n\n\"I could still do with the whole screwing your brains out again though,\" Amelia said quietly.\n\nGrain smiled. And pulled her body onto his. And kissed her. And the night flowed."
    ],
    "authorname": "clarkcrow",
    "tags": [
        "older woman",
        "neighbour",
        "first time",
        "romance",
        "close friend",
        "divorced",
        "dark haired",
        "curvy",
        "young man"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/flow-6"
}