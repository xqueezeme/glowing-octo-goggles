{
    "title": "The Chronicles: Three Sisters 17",
    "pages": [
        "THE THREE SISTERS Chapter 17\n\nThe winter was mild, which was a mixed blessing. No one froze to death, but the snow was soft and deep - and there was plenty of it. That made getting about difficult, which created difficulties for the hunters.\n\nYevna did a remarkable job, assisted primarily by Nameless, while Libot worked with Seva. There were dozens of hunting parties, but those two pairs were the most successful. People in Nareven knew who was most responsible for providing meat for the spit.\n\nOne elderly woman passed away, but it wasn't due to excessive cold, or shortage of food. Guen Nadesti and two other old women came through the winter just fine.\n\nMy daughters and I were kept busy, as people brought us their concerns and complaints and their sometimes petty quarrels. It was something I'd experienced as Headman in Asphodels, when Meonwe was still alive: even the most social and most tolerant of people can get tired of sharing limited space with their family.\n\nWith all of the snow, some folk just didn't get outside often enough. Harsh words were spoken, blows were exchanged, and sometimes blood was shed.\n\nOn the brighter side, I no longer had to deal with the Lowlanders.\n\nWhenever Prosquetel saw me, he simply narrowed his eyes, and moved away. Iduallon would lift his nose a little higher, and make a display of ignoring me. The Duchess I rarely saw at all. That didn't bother me in the least.\n\nYoung Gerimir came to see me two days after our confrontation.\n\n- \"I'm sorry.\" he said. \"I didn't know.\"\n\n- \"I know you didn't.\"\n\n- \"Perhaps I should have.\"\n\n- \"I don't bear you any ill-will for it.\"\n\n- \"I don't how to explain what they were thinking.\" he continued. \"They're obsessed with liberating Hvad, and with defeating the Izumyrians ... but that still doesn't excuse what they were planning.\"\n\n- \"I like you, Gerimir. So does my daughter, and she's a good judge of character. Just be careful not to quarrel with her in public - her sister may not take it well.\"\n\n- \"I would be more worried about how Guenna would take it.\"\n\n- \"And so you should be.\" I said.\n\nHe was a pleasant young fellow, who never shirked hard work. Gerimir was an honourable man, trapped in a situation that forced him to stand with immoral people. He apologized to me a second time.\n\n- \"Tell me one thing.\" I asked him. \"What are your intentions toward my daughter?\"\n\nHe was momentarily flustered, but he answered me honestly: \"I ... I asked her to marry me - she said 'No'.\"\n\nArmed with that knowledge, I ambushed Guenna.\n\n- \"I had an interesting conversation with young Gerimir.\" I said.\n\n- \"He told you that he'd asked me to marry him.\" she replied.\n\n- \"Damn! You knew? Already?\"\n\nGuenna enjoyed a good laugh at my expense.\n\n- \"He came to tell me right away. And to apologize.\"\n\n- \"That boy apologizes too much.\" I grumbled. \"Is that why you don't want to marry him?\"\n\n- \"No, Papa - that's not why. He's sworn to serve the Duchess, and to see Hvad freed from the Izumyrians.\"\n\n- \"That might take some time.\"\n\n- \"Exactly. I do like Gerimir - but I told him that I wouldn't be content to be the third of his priorities, after the Duchess and his war. Besides, I'm still young, and I haven't met all that many eligible young men. I'm not going to fall in love with the first decent fellow I meet.\"\n\n- \"That ... sounds like a wise decision.\" I said.\n\n- \"I'm glad you approve.\" said Guenna.\n\n***\n\nThere was quite a bit of good news before the spring.\n\n- \"I'm pregnant.\" said Tanguiste.\n\n-\" Are you sure?\" said Guenna.\n\n- \"Of course I'm sure.\"\n\n- \"How did this happen?\" I asked her. I knew instantly that I'd phrased it incorrectly, judging by the big smile on my daughter's face.\n\n- \"The same way it usually happens, Papa.\" she said. \"I would have thought that you knew about such things.\"\n\n- \"No - I mean ... when? Are you sure this is wise?\"\n\n- \"I felt it when we first came into the Vale.\" said Tanguiste. \"I just knew that we were going to be alright.\"\n\nWe all congratulated her, of course. I might have been the only one to see the wistful look on Mother Nadesti's face. I'd killed her sons before they had sired children. She had no grandchildren at all.\n\nBut it was considered excellent news by most everyone in the Vale. Almost all of them knew Tanguiste by now, and they saw this as a very good omen.\n\n***\n\nTan was only the first woman to announce her pregnancy. Soon after, there was another, and another ... the third was Seva, the red-headed archer.\n\n- \"Is the father who I think it is?\" I asked Guenna.\n\n- \"Iduallon? Yes.\"\n\nSeva was quite pleased with herself. She strutted about just a little more self-importantly for the next few weeks.\n\nUntil another young woman in Nareven announced that she too was pregnant - and that Iduallon was also the father of her child.\n\n- \"Buildin' himself a proper little army to reconquer Hvad.\" said Hedyn.\n\nSeva didn't see the humour in the situation. She put an arrow into Iduallon, but in her anger, she rushed the shot. She struck him four inches above the heart, just wide of his neck.\n\n- \"He'll survive.\" said Vingoldas.\n\n- \"You can't have everything.\" said Hedyn.\n\nIduallon didn't ask for justice in the matter, which was a relief. And I wasn't all that surprised - mildly disappointed, perhaps, but not surprised - when Seva and the Lowlander reconciled shortly afterwards.\n\n- \"What do you mean, reconciled?\" I asked Giedra, who'd been the one to tell me.\n\n- \"They're humping behind the woodpile. I saw them on the way over here.\"\n\n***\n\n- \"Veran?\"\n\n- \"Yes?\" I laid down my tools. Even now, Sulcen didn't often initiate conversation. When she did, I stopped whatever I was doing and listened.\n\n- \"I believe that I'm with child.\"\n\nI was stunned. And, like an idiot, I didn't say anything. I couldn't; my mouth may have moved, but no sounds came out.\n\nHow could this be? I was too old to be a father - not too old to father a child, though. But I'd always thought that Sulcen couldn't ... that she had ...\n\nHer first husband was worse than an animal. In addition to breaking her nose and flogging her, he'd beaten Sulcen so badly that she'd miscarried twice.\n\nShe wasn't old, by any means; Sulcen was only in her late twenties. But I'd believed - and she'd never corrected me - that she couldn't have children, because of the injuries she'd suffered.\n\nI didn't know what to say, so I didn't say anything. Instead I took one step closer to her, and held out my arms.\n\nSulcen hesitated for a moment, but then she stepped within the circle of my arms, and laid her head on my shoulder.\n\n- \"Are you ... happy?\" she whispered.\n\n- \"I'm shocked, Sulcen.\" I said. \"I didn't know ... that it was possible. I never expected this.\"\n\n\"Am I happy? I have ... mixed feelings.\"\n\nI could feel her tense up, in my arms.\n\n\"Let me explain: I am happy. You and I, having a child? It's wonderful. It's just that ...\"\n\n- \"You're afraid for me.\"\n\n- \"Yes.\"\n\nSulcen's arms went around me, and she held me tighter.\n\n- \"I'm afraid, too.\" she said. \"I'm afraid that I may miscarry again. And ... even if I don't ... will the babe be healthy? And then - even if it is ... can I be a good mother?\"\n\n- \"Sweetheart ... set your mind at rest. You'll be a wonderful mother. You're patient, and kind, and gentle ...\"\n\n- \"I don't know the first thing about it.\"\n\n- \"No one does. If parents had any idea what was coming, there wouldn't be any children.\"\n\n- \"You don't mean that.\" she said, followed by a big sniff. \"Look at how your girls turned out. That's hardly an accident.\"\n\n- \"I had no idea what I was doing. It was mostly luck.\"\n\n- \"I don't believe you.\"\n\n- \"I am a very fortunate man.\" I said, holding her a little tighter, so that she knew I was talking about more than my daughters. Then I leaned over, and whispered in her ear.\n\n\"I love you, Sulcen. You make me happy in so many ways.\"\n\nThat caused even more tears, as my wife clutched at my arms, before grabbing my hair and one ear, to pull my head down so that she could kiss me.\n\n***\n\nSulcen hadn't said anything to her mother.\n\n- \"You have to tell her.\" I said.\n\n- \"I want you to come with me.\" she said.\n\n- \"I will. But you have to tell her alone. I'll join you right after that.\"\n\nI ended up waiting outside for a long time. By the time they called me in, mother and daughter had shed enough tears to flood the entire house.\n\nGuen Nadesti hadn't kept many secrets from me. I knew that she had many regrets - first and foremost, sending her daughter to a man who'd mistreated her so cruelly. That had to be the reason behind many of the tears they were crying now.\n\nShe also had to be just as afraid as we were, about Sulcen's past miscarriages. But it was possible was that her daughter might safely deliver a healthy child, a grandchild.\n\nI don't know quite what passed between mother and daughter. Sulcen stood up when I came in, and wrapped her arms around me. She smeared tears and snot all over my shirt, as she pressed herself against my chest.\n\n- \"I am a very fortunate woman.\" she said.\n\n***\n\nMy daughters were silent, afraid, and ecstatic - in that order.\n\nYevna simply hugged us both. She didn't seem to know what to say. Dengelle cried, and embraced Sulcen, before turning and doing the same to me.\n\nTanguiste was worried. She knew Sulcen's history as well as anyone. The two of them had a sort of private conference in the corner of the room while I accepted congratulations from Vingoldas and a surprisingly tearful Nameless.\n\n- \"Woohoo!\" shouted Guenna. She was absolutely delighted. \"I'm going to be a sister again!\"\n\n***\n\nIduallon was injured again, little more than a month after Seva had nearly killed him. He made a pass at Giedra. In his typical subtle fashion, I believe that he grabbed her breast.\n\nGiedra broke his wrist. Then she broke his nose.\n\n***\n\nSpring came early, and the snows melted much earlier than we'd expected. The Vale was still wet, and muddy, but people could go outside and move about.\n\nA few weeks after that, several new folk found their way to Nareven. They brought news.\n\n- \"The Izumyrians withdrew.\" one man told us. \"Before the winter, this was.\"\n\n- \"Pulled out o' the Uplands - completely.\" said another.\n\n- \"Any idea why?\" I asked.\n\n- \"Seems they have their hands full, with the Lowlanders. There's talk of uprisings, scattered here n' there.\"\n\n- \"That's good news for us, then.\" said Tanguiste.\n\n- \"Unless they decide to come back and hunt down the Duchess.\" said Guenna.\n\n- \"Surely they can't do that if they're busy with these uprisings.\"\n\n- \"There are thousands of Izumyrians, Tan. Small risings may annoy them, but they can easily spare the men for another push into the Uplands. They may even decide that the best way to end these little rebellions once and for all is to eliminate Lady Temara.\"\n\n- \"So it's not good news?\"\n\n- \"I don't know.\"\n\nGuenna and I went to take a second look at the passes into the Vale from the way we'd come, and a first look at the approaches from above the lake - the route that Bacho and Kestutis had taken when they'd come to raid.\n\nThe terrain was very favourable for defenders. Two dozen determined fighters could hold up twice their number of Izumyrians.\n\n- \"But if they send 200? Or 500?\" I said.\n\nWe both knew that we didn't have enough warriors to guard all of the possible approaches to the Vale. Even if we had - Upland fighters weren't like Izumyrian soldiers. They couldn't be asked to stay in one place, defending a pass, for six months. Not while their families were elsewhere.\n\n- \"Don't say anything, Papa. Let me think this over. Maybe there's a solution.\"\n\nI couldn't see it. The only way for us to be safe was to retreat further into the Uplands, behind the most inhospitable mountains, or deeper into the forests.\n\nIf we did that, though, we would have to split up, into smaller groups, because there was no way to feed so many people in those remote areas.\n\n- \"We can't wait too long to make a decision, Guen. Your sister ... and Sulcen. If we don't move now, we won't be able to move at all.\"\n\n- \"I know. Just give me a little time.\"\n\n- \"Alright.\" Guenna had become extremely good at finding solutions. She deserved at least a chance to come up with something for our present dilemma.\n\nIf I'd known what was coming, I might not have agreed so quickly.\n\n***\n\nTanguiste delivered a healthy baby girl. They named her Moruith, which I thought was very appropriate.\n\nSeva gave birth to a girl as well.\n\nThat was when Gerimir came to see me.\n\n- \"I'm not here on my own, Veran.\" he said. \"The Duchess asked me to speak to you on her behalf.\"\n\n- \"Oh? In that case, you can skip the flowery phrases, if you like. What is it she wants to say to me?\"\n\nGerimir couldn't seem to help himself. He hemmed and hawed, and had trouble coming to his point. Finally, though, he was able to meet my eye.\n\n- \"We're leaving, Veran. The Duchess, too.\"\n\nWhen you don't know what to say, sometimes the best thing is to say nothing. I did feel a tremendous sense of relief, though. It would be a great pleasure to see the last of Iduallon, and Prosquetel as well. I doubted that I would miss the imperious Lady Temara, either.\n\n- \"What about the babe?\"\n\n- \"We'll take him with us. People have to see the heir.\"\n\n- \"Is that ... wise? Will he be safe?\"\n\nGerimir shook his head. \"Probably not. But it's no more dangerous than staying here. And this way, you and your people won't be a target anymore, once the Izumyrians learn that the Duchess is back in Hvad. I mean, back in the Lowlands.\"\n\n- \"There's that.\" I agreed. \"Well, I can't say that I'll miss any of your companions, but you've worked hard - I'll be sorry to see you go.\"\n\n- \"Thank you, Veran. I appreciate everything you've done for us.\"\n\n- \"I suspect that you would have done the same for us.\" I put just a little more emphasis on the word 'you', because we both knew that the Duchess wouldn't have lifted her little finger to save Uplanders, had our roles been reversed.\n\nAt this point, Gerimir had said what he'd come to say, but he was still standing before me. Once again, he seemed nervous.\n\n\"There's more?\" I asked.\n\n- \"Uhm ... well, I also wanted to let you know that some of your folk will be leaving with us.\"\n\n- \"Seva?\" I guessed. \"And Odma?\"\n\n- \"Yes. And some others.\"\n\n- \"Which others?\"\n\n- \"Me, Papa.\" said my daughter.\n\nGuenna was standing a few yards behind me.\n\n- \"No.\" was all I could manage to say.\n\n- \"I'm going with them.\"\n\n- \"You're leaving? Why?\"\n\n- \"We can discuss this later.\" she said.\n\n- \"We can discuss this now.\" I replied, far too loudly. \"Why on earth would you want to leave?\"\n\n- \"Can we at least talk about it in private?\" asked Guenna.\n\nShe had a point, there.\n\nShe led away from the houses, and then up the slope of a hill where there was less mud. Guenna found a relatively dry spot, and sat down. She invited me to sit beside her, but I remained standing, a little lower on the hill.\n\n- \"Why? Tell me why.\"\n\nGuenna took a deep breath, and let it out slowly.\n\n- \"Because you gave me the choice, Papa. You told me that I could marry whoever I wanted to. Does that not include the right to go where I wish?\"\n\n- \"Those people were going to kill me, Guen. They're arrogant, ungrateful, and treacherous. I keep trying to see the difference between them and the Izumyrians, but I can't.\"\n\n- \"Gerimir isn't like that.\"\n\n- \"One man. One out of four. And he's certainly not the leader. Far from it. If anything, he's the low man on the ladder.\"\n\n- \"I know.\"\n\n- \"I don't understand! Why would you want to go with them?\"\n\n- \"Several reasons.\" said Guenna.\n\nI knew that tone. If I grew heated, and raised my voice, she would simply stop talking. If I became agitated, or if I began trying to argue, she would likewise simply stop, until I grew calmer. She was my little girl, but she could be damned stubborn.\n\n- \"I'm listening.\"\n\n- \"Why don't you sit down? Here - beside me.\"\n\n- \"I prefer to stand. Don't want to get my ass wet.\"\n\n- \"As you wish.\" she said.\n\n- \"Reasons?\"\n\n- \"We both know that the Izumyrians will keep hunting the Duchess. If I take her back into the Lowlands, that should keep the Izumyrians from coming after you here. I want to protect my family.\"\n\n\"But I suspect that if the Izumyrians completely win their war, they won't leave us alone. They'll come into the Uplands. They'll seek to put a yoke on us. I know we can make the land fight for us ... but there are so many of them ...\"\n\n\"I want to link up with Hvadi who are fighting back. If I can help to organize them ... maybe there's a chance we can drive out the invaders.\"\n\n- \"That's a tall order.\"\n\n- \"I know it. I also know that I don't have Yevna's skills, or Tan's. But I have my own abilities, Papa. I'm good at planning, and strategy.\"\n\nI couldn't deny it. She was gifted at those things, though I couldn't for the life of me understand how that had come to be.\n\n- \"I want to do this.\" she said. \"I know that it's a way to protect the people I love, and that it's the best hope we have of beating the Izumyrians. But the truth of it is ... I want to go. To test myself. To find out if I can do it.\"\n\n\"Tan has Vingoldas, and now Moruith. Yevna has Dengelle, and Nameless, and hunting. I think that Libot is in love with her, but she doesn't seem to even know that he exists.\"\n\n\"You have Sulcen, and a baby on the way, and all the hopes of people in the Vale on your shoulders.\"\n\n\"But can you picture my future here? What do you see me doing, two years from now? Or in five years?\"\n\nI should have known that she would do this to me. How could I argue with that?\n\n- \"I just ... I don't like the idea of you going with those people, Guen. I don't trust them, and neither should you.\"\n\n- \"I won't be alone.\" she said.\n\n- \"You mean Seva? Or Odma?\"\n\n- \"No. Giedra will be coming with me.\"\n\n- \"Giedra?\"\n\n- \"And Rion, and Eliv. And quite a few more.\"\n\n***\n\nYevna was furious with her sister. Tanguiste accepted Guen's decision with more grace. Sulcen said nothing at all.\n\n- \"You haven't said a word.\" I pointed out. \"Does that mean that you have no opinion on the subject?\"\n\n- \"No.\" she said.\n\n- \"So you agree with me that this is a bad idea?\"\n\n- \"No.\"\n\n- \"Should I hold out hope that you'll say more than one word about it?\"\n\nThe ghost of a smile flickered across her lips. Sulcen had been about to say 'No' once more, but then she decided to have mercy on me.\n\n- \"You taught her to think for herself. You can hardly blame her for doing just that.\"\n\nI was beginning to grow tired of being out-argued and out-manoeuvred by the female members of my family.\n\nI was also annoyed with myself for not having known that this was in the air. There had to have been quite a few secretive conversations, and I'd been completely oblivious.\n\n- \"So you're leaving.\" I said to Giedra.\n\n- \"That's the rumour.\"\n\n- \"Why?\"\n\n- \"Because you're already married, and I don't want to have to kill Sulcen so that I can have you all to myself.\"\n\n- \"Seriously, Giedra. You broke Iduallon's wrist, and his nose. Why would you go anywhere with him?\"\n\n- \"I'm not going with him, Veran. I'm going to war.\" she said.\n\n- \"That's it?\"\n\n- \"Look around, old man.\" Giedra waved her arm. \"See any guslars here? How do you expect me to become the most famous woman of the age when I'm stuck in this Vale, and nobody outside it knows about me?\"\n\n\"How can I become the next Payl unless I follow her example, and go to the Lowlands? I'll have Guenna to plan my battles for me, so that I can be at my best. Don't worry - I'll take good care of her.\"\n\nI could only shake my head. Giedra was ... unique.",
        "It was only later that I thought to compare my youngest to Giedra. Maybe Guenna was unique as well. Maybe she too felt trapped, here in the Vale.\n\nThere was an over-abundance of young women, but precious few males of marriageable age - and those who remained were not especially impressive.\n\nI suppose I'd known that Guenna was not thinking solely of a husband. Like Giedra, and like her own ancestor, Payl, my daughter wanted to make her own way, to be valued for what she could do, rather than who she was married to.\n\nTanguiste and Yevna both had that. Tanguiste had a loving husband and a child, but she was also admired and loved by nearly everyone in the Vale. No one was better at organizing folk, and seeing that people's needs were met. She was probably more deserving of the title of Headman than I was.\n\nYevna might not have been so widely loved, but she was respected. She had a small circle of close friends, and people who depended on her - none more so than Dengelle.\n\nPerhaps that was it. Tan and Yevna would always be needed in the Vale. But if the Izumyrian threat receded, would we need Guenna's strategies and planning? Would she feel that her contributions were important?\n\nI found myself climbing the hill, to sit in roughly the same spot where Guenna had - it was a little drier now. Below me lay most of the Vale. It seemed so crowded, so busy; I'd never heard of a settlement in the Uplands with so many people.\n\nThey appeared to be thriving, too. They might continue to do so, too, as long as the Izumyrians didn't return.\n\nI saw her coming from a long way off. My little girl, climbing the slope to come and join me. She'd never be as beautiful as Tan, or as skilled as Yevna. A father can admit these things to himself, in private.\n\nBut Guen had courage, and intelligence. I was as proud of her as I was of her sisters.\n\n- \"May I?\" she asked.\n\n- \"Ground's still a bit damp.\"\n\n- \"That's alright.\" She sat down beside me.\n\nWe both watched people down below.\n\n\"How are you feeling?\" she asked.\n\n- \"Sulcen said that I have to let you make your own decisions. I'm coming around to agree with her. Slowly, though.\"\n\n- \"Look at this way, Papa: think of yourself as the bow, and me as the arrow. At some point, you have to let loose the string, and then the arrow flies where it will.\"\n\n- \"They usually fly in the general direction that I'm aiming.\" I said. \"And I certainly wasn't aiming to have you join the Lowlanders.\"\n\n- \"I'm going with them, but what I do afterwards will be my decision.\"\n\nWe sat in silence for a moment, as I resisted the urge to smile. A bow and arrow analogy, from the worst archer in the family?\n\n\"\"Are you still angry?\" she asked.\n\n- \"I was never angry, Guen. Shocked, at first. Disappointed, I suppose. Mostly just unhappy that you would want to go with those people. I don't like them.\"\n\n- \"Nor do I - except for Gerimir. Don't worry - I'm not going to take their orders, and I certainly won't be their servant.\"\n\n\"I'll consider their opinions, but Giedra and I will be making our own decisions. There's no Borna there - regardless of the baby's name. And no Ljudevit, either. Maybe they're out there already, fighting the Izumyrians.\"\n\n- \"I'll be worrying about you every day.\"\n\n- \"You'd be worrying about all of us, if the Izumyrians were threatening.\"\n\nShe was right about that.\n\n- \"You're too damned smart.\" I complained.\n\n- \"And whose fault is that?\"\n\n- \"Yours. I'm just the bow, remember?\"\n\nMy daughter reached out, and put her arm around my shoulder.\n\n***\n\n- \"Are you thinking of leaving too?\" I asked Nameless.\n\nShe frowned. \"Why would I do that?\"\n\n- \"I don't know. I just ... wondered.\"\n\nNameless shook her head. \"I can fight, Veran. I'm good at it. That doesn't mean that I like to fight. It's something I do when I have to.\"\n\n\"I'm not interested in fame, or glory, like Giedra. I can understand why Guenna wants to go - why she needs to, in a way. But I'm not searching for my future, anymore. I've found my family, and they're here, in this Vale.\"\n\n\"I'm not going anywhere. As long as you and Yevna want me, anyway.\"\n\nI was deeply moved. I took Nameless in my arms, and embraced her. It occurred to me that I was becoming more and more sentimental every day.\n\n- \"You'll always have a place with us.\" I told her. \"I couldn't love you more if you were my own daughter.\"\n\n***\n\nWhen the Lowlanders left, thirty of our fighters went with them. Seva and Odma, of course, Giedra and her two friends. And my daughter. Only 14 were young men; the remainder were women.\n\nIt wasn't an army, by any stretch of the imagination. But it was a tight little force, encumbered only by a little child, not yet a year old.\n\nGerimir came to thank me one last time, and shook the hand of every member of my family. The Duchess, Iduallon and Prosquetel never looked back.\n\nGiedra embraced me, squeezing most of the air from my lungs. Eliv surprised me by briefly pressing their cheek to mine. Rion did the same.\n\nGuenna had said her goodbyes the night before. Yevna had forgiven her. When I told Yevna about Guen's bow and arrow analogy, Yevna laughed until her stomach hurt.\n\nAs she left the Vale, my youngest turned back twice. The first time, she waved. I believe that she made eye contact with her sisters, with Sulcen and Nameless, and even with Vingoldas and Guen Nadesti. And me, of course.\n\nThe second time, she raised her hand, to shield her eyes from the rising sun. Then she turned and marched out of the Vale with the others.\n\n***\n\nWe remained on our guard. Just because the Duchess was gone didn't mean that the Izumyrians wouldn't come looking for her. And if they did come ... well, we'd learned what to expect from the southerners.\n\nWe had scouts watching the passes, and everyone knew what to do if the alarm was raised. It would be into the hills for us - and we would go as far as necessary to remain alive. If the Izumyrians destroyed our houses, then so be it. We would rebuild. Again.\n\nI had a more pressing worry, in any case. If the riders came now, I wasn't sure if Sulcen could be moved.\n\nThen she went into labour.\n\nHer mother was there, with Tanguiste to assist her. Tan had helped deliver three children, before she'd had Moruith. But it was difficult for Sulcen, as I'd feared. I could hear her cries. She was suffering.\n\nShe was in good hands - the best in the Vale. There was nothing for me to do but wait. Vingoldas and Hedyn came to stand with me. They had little to say - just as I'd had, when our roles were reversed - but their presence was a comfort.\n\nTanguiste came outside, partway through Sulcen's ordeal, to reassure me.\n\n- \"She's doing well.\"\n\n- \"Is that what you call it?\" I had only old memories of Meonwe giving birth to three girls and a boy. It hadn't seemed so difficult ... or so frightening.\n\n- \"She's bearing up well.\" said Tanguiste. \"Be patient.\"\n\nI thought that I was patient. That was one of my best qualities. But there's no such thing when your wife is giving birth, and you can hear her cries of pain. I paced so hard that I wore a muddy track in the grass beside the house, and then wore that into a muddy trench.\n\nHours later, I heard a cry that didn't sound like Sulcen.\n\n- \"Papa.\" called Tanguiste. She was at the door to the house, waving me in. My heart leapt into my throat. I had a sudden, terrible premonition ...\n\nI surged into the house, tracking in huge clumps of mud, stuck to my boots.\n\n- \"Easy -\" said my daughter.\n\nSulcen's eyes were closed. I knelt beside her, and reached for her hand.\n\n- \"Sulcen?\"\n\nHer eyes opened. She smiled - weakly, wearily ... but it was a smile.\n\nMother Nadesti spoke.\n\n- \"It's a boy, Veran. You have a son.\"\n\n***\n\nSulcen was willing to name the boy Branhucar, after my father.\n\n- \"That's sweet of you.\" I said. \"But that's my father's name. What about ... Dengel?\"\n\n- \"No.\" said Mother Nadesti. \"This boy deserves his own name.\" I understood how she felt; giving children the names of people who were important to us saddles them with tremendous expectations. The Duchess' son, for example - that lad had enormous boots to fill. He would find it difficult to live up to his name.\n\nIt also creates expectations in us. If it had been a girl, I would not have wanted to name her Meonwe, just as I didn't want this boy to be called Iarn.\n\n- \"Branimir.\" said Sulcen.\n\nThat was an interesting choice. 'Bran', as in the first half of my father's name, meant 'defender'. And 'mir', in Hvadi, means 'peace'.\n\n- \"Defender of the peace.\" I said. \"It's a good choice.\"\n\n***\n\nWe spent months worrying that the Izumyrians would return. We were prepared for such an eventuality, but we dreaded it.\n\nThey didn't come.\n\n***\n\nMother Nadesti groaned as she bent her knees to sit down. Some days, I knew all too well how she felt. I had aches and pains nearly all of the time, now, and they were slower to go away.\n\n- \"Sore?\"\n\n- \"You have no idea.\" she said.\n\n- \"I do, though. When I get up in the morning, everything cracks and pops.\"\n\n- \"That just means that you're still alive.\"\n\n- \"How did we ever make it from the Hill to the Vale?\" I laughed.\n\n- \"You carried me most of the way, if I recall correctly.\"\n\nWe sat in companionable silence for a while. I was remembering the incredible efforts we'd made to get away from the Izumyrians - and the people who'd died to allow us to do that.\n\nBut I was also feeling my age.\n\n- \"I'm not sure if I could do that again.\" I said.\n\n- \"Thank goodness we don't have to.\"\n\n- \"But what if they come back? What if we did  have to do that again?\"\n\n- \"Sufficient unto the day, Veran.\" said Guen Nadesti.\n\n- \"I know ...\" I hadn't been planning to say what was on my mind, but I let it out anyway. \"I'm feeling old, though.\"\n\n- \"You're feeling old?\" she said. \"How d'you think I feel?\"\n\n- \"Like a new Grandmother?\"\n\nShe laughed.\n\n- \"Well, that was something I wasn't expecting.\" she said. \"And ...\"\n\n- \"And?\"\n\n- \"I do want to see him grow up. And I want ... to be there, to help Sulcen.\"\n\n- \"You will be. You're as tough as the Three Sisters.\" I said. \"And you know there's no debt there. She forgave you a long time ago.\"\n\n- \"I know.\" said Guen. \"That doesn't mean that I've forgiven myself, though.\"\n\nWe'd had some pretty serious conversations in the past, but this was new ground for us. There was nothing at stake, any more. Mother Nadesti wasn't trying to decide if she should let my daughters and me stay on the Hill, or whether she could trust me. Nor was she forcing me to marry her daughter.\n\nI like to think that we understood each other reasonably well. We had shared tragedies, and caused each other tremendous suffering. By now, though, the experiences we'd shared had created a bond between us that outweighed our past conflicts.\n\nWe could let our defences down, and admit truths to each other.\n\n- \"She loves you, Guen. So do I. And my daughters.\"\n\n- \"Thank you, Veran. I know that. I know that I made a mess of much of my life - and that others paid for it - but I'm beginning to believe that I've done better, these past years.\"\n\n- \"We wouldn't be sitting here, otherwise.\"\n\n- \"That deserves a little sushen. Do we have any?\"\n\n- \"Of course.\" I got up, and poured us both a cup. Then I tucked the bottle under my arm, and brought it with me.\n\n- \"Thank you.\" she said. \"Your health.\"\n\n- \"And yours.\"\n\nWe tipped back the sweet honey liquor, and smiled simultaneously.\n\n- \"You were a great headman. I wish I'd seen it, then. Ah! I did see it. Everyone knew that you were straight as an arrow. I just didn't ... and now you're a great headman once more.\"\n\n- \"I'm too old, Guen.\"\n\n- \"Sheepshit. If anything, you're wiser. More patient. And you have me to turn to, when you need advice.\" She grinned.\n\n- \"We do need you. You know that.\"\n\n- \"Ha! You'll get along fine when I'm gone. But ... I'll try to last a few more years ...\"\n\n***\n\nGuen Nadesti lived to see Branimir's ninth birthday.\n\nTanguiste and Vingoldas had three more children.\n\nYevna had none.\n\nAs for Guenna ... her story is continued in the third novel about Hvad and the Uplands. The title of that Chronicle will be Notomol.\n\nThanks again to my editors, Iriad Alianath and Lastman416.\n\n \n\n*****\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-17"
}