{
    "title": "A Visit to the North Ch. 10",
    "pages": [
        "This is a closing of the mystery story of Annabelle's life changes. Having met and been with Seth the story turns to the future. But Thomas' suggestion might prove impossible.\n\nThe characters are all fictional. Please read the earlier parts. Please leave your comments. \n\n*****\n\nPart Ten\n\nFriday afternoon Liz and Julie arrive back in Montreal. They were anxious for the meeting but felt there was at least some hope. They're travel had allowed them to discuss the possible recovery. \n\nDonna had asked to meet everyone so that the arrangements for the gathering could be agreed to and understood. Donna felt she needed to control the party mood and not allowing Marie to feel any pressure. Douglas had made the food and drink arrangements and the waite staff were all young women from the nearby University. They were offered an incentive if they would wear a simple maids outfit. The staff would be witnessing a gather of strong women and several submissives and each was instructed to stay clear of any activities of a personal nature. Michel and Pia had been informed of Thomas's thoughts on the abduction at the Tuesday evening dinner and were prepared to simply ask Marie about the December disappearance at an appropriate time. \n\nDonna had the financial alternative arranged; the sum had been transferred into Canadian dollars. Her instinct led her to trust Thomas but she didn't agree with Michel's plan. She felt sure a payment would be required.\n\nLiz and Julie were staying the St. James so they met Michel and Pia at the Ritz prior to the gathering. On the cab ride to Donna's they expressed their surprised that Donna had found someone such as Thomas. \n\nLiz was completely in disbelief, \"Michel, can we trust this BSD? Why or how did Donna decide to bring this Thomas into this? I mean what if he's a part of this abduction?\"\n\nShe was shocked that Donna felt comfortable discussing the plight of Barb's husband with this man. It was only after Liz understood his suggestion they started warmed to the idea. \n\n\"It still may lead nowhere girls. We've got no assurance he's been taken by this Ms. Doumergue. We have to be realistic.\" Julie offered. \"And there's a real possibility that he isn't a male at this point.\"\n\n\"Where did you hear Thomas was well endowed Liz?\" Michel asked.\n\nThey couldn't waste time, their cab had arrived at Donna's hillside home. Once inside Donna asked them to finish their preparations.\n\nJulie had agreed to be the 'sub' for Liz, but hadn't agreed to the restraints that Michel took as her right. Pia quietly suggested to Julie that she might just relax and enjoy the event. \n\n\"Julie, have you ever been made to wear an anal plug? If not you might be surprised by the benefits dear. Would you like to borrow one of ours, maybe a small one like this?\" \n\nShe produced a 30mm diameter penile shaped plug of shiny metal. Julie had been penetrated by many toys and smirked.\n\nPia said, \"Just consider it Julie,\" and she placed it in her hand. \n\nPia was dressing herself when Liz entered and asked further about the device. \n\n\"I think we shouldn't be over the top in our dress but clearly sub to Michel and Liz,\" Julie said. \"I don't need your toy as a inducement Pia.\" \n\nPia showed her the outfit she intended to wear and Julie agreed to dress likewise. Then she retired to the bathe. When dressed Julie look beautiful and several simple adjustments to her makeup and outfit were sufficient for Michel to pass a compliment. \n\n\"You look perfect my dear. And are you wear the plug?\" \n\nJulie looked down to her heels and said, \"Yes Mistress, I cleaned myself and placed the plug. Should I show Elizabeth?\" \n\nMichel smiled and Liz came near. She lifted the subs skirt and felt her cleft and the protruding ring. \n\n\"Very good girl. I will fuck you a bit later! And I like the black bra with the shear white blouse. But you will not call me Elizabeth, only Mistress is acceptable\".\n\n- - - -\n\nDonna had arranged to have most of the guests come earlier than Marie and Rachel. When the two appeared the party and discussions were underway and Michel & Pia were already comfortable. Liz and Julie were a bit behind the learning curve and tried to mimic the others as best as possible. They had a brief conversation with Thomas. He suggested that he would introduce the pair to Marie when appropriate. \n\nMarie was the last to arrive and once settled began to mill about exchanging small talk with the other dommes. Rachel was escorted on a white leather leash and though not all of the subs were restrained Rachel was clearly well practiced. She would descend to her knees when Mastress stopped to talk with any of the other guests. \n\nJulie wasn't prepared when Liz decided to move toward Marie. She thought Liz would await Thomas' introduction.\n\nLiz slipped passed several women, Julie atop her very high heels tottering. She paused slightly to allow Julie to come alongside and then step to greet Marie.\n\n\"May I present myself Ms. Doumergue? I am Mistress Elizabeth from the States.\"\n\nMarie looked Liz over carefully, \"You quite new to leading your sexy woman aren't you? I could offer several suggestions.\"\n\nJulie smiled though she was looking down to Marie's shoes and Liz had to turned and stared her to be still.\n\n\"Well I can't hide that fact Ms. Doumergue, but she is very good at other things.\"\n\nMarie paused her, \"I meant no disrespect Mistress Elizabeth. It's clear your charge isn't accustom to such tall heels.\" She looked down as did Liz, \"Too tall for this small party I think.\"\n\nThomas had excused himself to handle an important call so he and Marie or Mastress hadn't cross paths yet. He came in to the room quickly, noticed the four women and approached Marie and kissed her right cheek.\n\n\"I see you have already met my girls from the south. Liz you look wonderful.\"\n\nTurning back to Marie he said, \"I've missed you Mastress. Rachel looks perfect down on her knees.\" \n\nThis caused Rachel to frown and Mastress to break her smile. \n\n\"You haven't called me that in years dear boy, but I'll allow the error this once.\"\n\nOn the other side of the large room the women seemed to be studying the each other and their subs so Michel's' overt focus on Marie and Rachel appeared well considered and nearly normal. \n\nPia was surprised by her attraction to Marie or Mastress. She now realized that her submissive nature had been buried so deeply. She couldn't stop her arousal caused by witnessing the clear super domme move about the room and press Rachel. She was in awe of how Rachel was attired, a strapless corset in black with feather details across the tummy and twelve suspender clasps holding her elegant silk stockings taut. Her thong was narrow and the material simply parted her vulva. Pia noted the glistening on Rachel's upper thighs. \n\nMichel was also in a bit of reserve. She couldn't bring herself to cross the room and initiate a discussion. Mastress didn't appear to be watching the pair as Michel moved to talk with the others. She seen Thomas enter from the upper hall and go to Marie and kissed her cheek. \n\nMarie was about to ask him something when he crossed the room. Michel saw him coming and prepared her mind for the next step.\n\nThomas drew Michel near and immediately kissed her. \n\nMastress watched carefully as Rachel stood and moved between Julie and Mastress. She whispered to her domme.\n\n\"Thomas maybe up to something.\"\n\nMastress whispered to Rachel, \"Who may she be? That woman seems very anxious.\"\n\nJust than Thomas turned to look over his shoulder and looked directly at her. This caused Mastress consternation. He then turned back to Michel and took her hand.\n\nAs he escorted Michel with Pia just behind her he said, \"I think it's time. Waiting may lead Mastress to leaving.\" \n\nThey both moved toward Mastress, Pia following close behind. He quickly introduced Michel and Pia to Mastress as Michel watched Rachel bent to kiss Michel's hand. \n\n\"Pia is lovely Michel. Your French is good but the accent sounds American?\" \n\nMichel's intent was to not waste a moment and her hand was shaking slightly. Pia placed her own hand atop Michel's to calm her Mistress.\n\nMichel turned to her and smiled and then stepped closer to Mastress, taking Mastress' right hand in hers.\n\n\"Ms. Doumergue, we are here from Washington in search of a lost friend. He seems to have been abducted just before Christmas.\"\n\nMichel felt Mastress' hand withdraw slightly but she continued holding fast.\n\n\"He was near Chinatown here in this City. We've nearly given up hope after these five months of finding him but still seek at least the truth.\" \n\nMichel turned her head down as she finished speaking and now touching Mastress' arm turned to Thomas. \n\nHe spoke quietly, \"We're all interested in the truth dear Marie. We'd like to know you've not had reason to be involved.\"\n\nMastress was paused by the final statement. \n\n\"Thomas, can we speak a moment? Rachel please stay. Excuse us Michel.\" They moved a few steps away. \n\n\"So somehow you and Donna have me in a etau, Qui?\" She meant that she was trapped.\n\nThomas stayed quiet, allowing Mastress a moment to think the question through. She wondered only a moment, realizing the alignment was against the Sisterhood. Better to ask for some consideration? Or simply ask to forgiveness? Her policy in the past was to protect the Estate and the Sisterhood from any interference or criminal investigation. \n\n\"There is the issue of compensation Thomas. What might be acceptable?\"\n\nHe turned slightly and looked to Michel, \"A small token would be, say one hundred thousand?\" as he nodded slightly to Donna and Michel.\n\nThomas watched her thinking it through and offered, \"How many do you have at this time dear?\"\n\nMastress looked into his eyes, \"Only the one, she is from New York.\"\n\nThomas turned and quietly said, \"Accept the sum and the women will keep your dealings private. Otherwise there may be serious trouble\", Mastress cut him off.\n\n\"You can be of help at this time Thomas. The older woman is not married to my girl. Who or what is she to this woman Pia?\"\n\nHe turned slightly and moved closer, \"Evidently your girls wife is Pia, quite lovely as she is prepared. Michel is not quite her Mistress. I mean she is but theirs in a recent relationship. How many months have you had the 'girl'?\"\n\n\"It's of no import dear Thomas. Let's get this settled. I don't like being compromised as you are very aware.\"\n\nShe continued, \"Help me resolve this without them going any further. You know we have a girl, not a man 'friend' and she is from New York. So they must accept the conditions and we'll aid Annabelle's re-integration. Can I depend on your council?\"\n\nHe smiled and kissed Mastress, \"Certainly, and Annabelle is a beautiful name for a good looking girl, or a hound?\"\n\n\"She is a real beauty that we've all enjoyed. She quite a sexual creature Thomas. Capable of great pleasure. We'll miss her surely. She is very well trained; you might have wanted to be with her Thomas.\" \n\nMastress looked to Rachel who was only two steps away and caught enough to understand. She was very aware of the next steps. \n\nMastress turned and stepped assertively back to Michel and Pia, \"I have a bit of news but we need to settle an important condition. Thomas will be the intermediary and will provide a release early tomorrow in Old Town.\" \n\nShe turned away without another word and collected Rachel's leash and left immediately.\n\nPia collapsed as the words settled in her mind, but Thomas was able to catch the woman. Michel bent to her knees and kissed her.\n\n\"We're so happy Pia,\" but she was not conscious. \"Thank you Thomas!\"\n\n- - - - - \n\nI was awakened by Catherine early Sunday morning before the dawn. \n\n\"Prepare yourself carefully dear as I've packed a few of your things and a makeup case.\" \n\nI looked at her quizzically.\n\n\"Get moving Anna. I need you to focus. A car will be here in fifty minutes. Go now to toilette, please!\"\n\nMastress was waiting for me in the Keep. She was at the window. I walked to her and she turned. \n\n\"You look beautiful Annabelle. I needed to prepare you in too short a time. As of now you are Annabelle Renard of Montreal, age thirty-five. Your passport will be delivered to the Hotel Ritz sometime before Wednesday. You have a group of friends staying there and they are one choice you could make. Let them help you get re-established, either in New York or Washington.\"\n\nI looked at her with a small tear forming in my eye, \"Are you simply allowing me to leave?\"\n\n\"There is an account with $100,000 dollars to help you and two credit cards in your name that I will pay for the next year.\" \n\nThis wasn't the plan! I had spent months becoming this new person, a woman, a sexual being who lived to be with both women and men. She was pushing me away after teaching me to suck a man's penis, to take his phallus deep into my body? I wasn't capable of just leaving!\n\n\"I must sit down, and Mastress I need you to further explain why, why you've decided to simply 'release' me.\"\n\nShe did sit beside me and our legs touched as she told me of the evening she had at Donna's. She didn't explain my wife's position only that she was aided by \"several lovely women\".\n\nShe was close and seemed to want to kiss me, \"You have to decide now Annabelle. I cannot risk destroying the forty-five girls who were here before you.\"\n\nI reached to turn her face toward mine but she moved my hand and continued, \"Alternately you could simply move on independently. You're a beautiful woman with these assets and the freedom of cash. If you need some time to consider the alternatives you can use the Hotel St. James. No one there will recognize you and you could stay there a couple of days, you need to get your bearings dear. What you cannot do is stay with us beyond this morning.\" \n\nMastress reached to the table and retrieved a small ring box. \"This is for you to never forget that I will be with you forever Annabelle.\"\n\nMastress slipped the one carat solitary ring on to my fourth digit of my right hand. \"I'll hope you may find your heart soon, and if you again meet the wife of the past you remember that I helped you become what I feel you wanted all those years ago.\"\n\nShe took my head and musing my hair she kissed me deeply, \"I do love you. I've loved all of the women who have been here with us Annabelle.\"\n\nShe stood and turned to look over the City, \"I have to take this step to protect all of the girls we've helped. Sofia and Emily wouldn't care to be exposed to an investigation.\" \n\nI listened carefully and emotion started to take control, but I stayed focused awaiting Mastress to conclude. \n\n\"We need you to understand there will be no future contact with the Sisterhood and there will be no investigation. Just you leaving for your next step.\" \n\nMastress looked back to me and again turned to the window. \n\nI stood quietly and moved to her side, thinking of all kinds of questions but foremost who had arranged this shift in Mastress' plan. \n\nI sounded a bit emotional when I said, \"But Mastress, the placement was settled, why do I now just leave?\" \n\nShe didn't look at me but offered, \"Your wife has somehow decided to pull you back to her. There are many changes you have been through but she as well as been changed and can't return to her near past, just as you can't. There is no winner in this outcome nor any easy decisions. Catherine and Rachel will finalize your travel. Please forgive me for working toward these changes only to have them be unsettled so near the completion.\" \n\nShe came to me and reached to hug me. I thought, could I do this? Move away from this place, from her, from the others? I looked over my shoulder to just walk away, but turned and accepted her hugs.\n\n\"Please forgive us Annabelle and be safe and happy. You deserve the best.\"\n\n- - - - -\n\nOnce in the car I asked the driver to simply drive around the City. I sat looking out the window at the place that would from today forward, I would say was home. The people noted the beautiful German limousine, watching it at traffic lights. I didn't realize they were actually looking at me. I was taking it in but not registering the details. I felt lost. I lowered the vanity mirror and reviewed my makeup but really just looked to see just how I was changed. Did they reshape my nose? My chin seems a bit smaller and of course my neck was smooth. I looked into my eyes, inside they had changed me the most. \n\nThe good looking driver wasn't aware that I had checked out his package as he helped me enter the rear door. I'd swung my skirt widely and he had to have seen my panty. I didn't want him per se, but I was aware he could fill me and I could play with him.\n\nAfter ninety minutes I thought clearly again, \"Take me to the St. James in Old Montreal please.\"\n\nI had made a decision; I would spend the night alone. I needed to see what I was as well as who I was before I allowed any others to carry me somewhere, a place I hadn't decided I wanted to go. \n\nI checked in using one of my cards as Annabelle Renard. The comfortable south room allowed me to look toward the river, just water moving eastward. I tried to cry for my lost situation but just couldn't. I liked what Mastress had made of me. \n\nI emptied my four large cases to review what Catherine had packed. The lingerie, dresses and skirts, stocking and socks, twelve pairs of shoes including sneakers and flats. I had clothes to get me through about a week and sufficient makeup. She'd remembered a toothbrush and makeup removed. I turned the room temperature to 27c degrees and removed all of my clothes, laying them on the bed.\n\nAs the room warmed I felt more comfortable and I used the full-length mirror in the bathe to study my body. My breasts and waist were just shocking, still. Naked and smooth my body looked wonderful. My little clit was perfect when this small, and without the testes the sac had shrunk tightly. I could easily tuck it away and forget the 65mm clitty. I returned to the edge of the bed and pulled my thong into place, settling the clit just so. Back in the bathe at the mirror I enjoyed this look the most, but felt a bit too natural so a got my heels, the medium ones. The mirror confirmed my minds eye: I was a very sexy female. I started to think about my clit and it started to swell. I decided to review the possibility of it's size and stimulated it to its full 20cm and 12cm girth. I did so now to confirm my earlier shower 'studies' at the Estate and voila! The rigid organ was too much. I couldn't enjoy the look. I loved being more of a girl and the turgent organ drew too much attention. I sat to consider the view a moment and allow the size to reduce. I realized this marked the conclusion of my gender variance. \n\nI turned to see my profile, that of a girl. I gasped in amazement when I noticed my breasts, rising as I stood, prominent above my rib cage. I would try to remain as my mind felt, a girl with a very large clit. No, a woman of thirty-five years, I'd lost four years! And the nearly six month of training with Mastress and the Sisterhood.\n\nMastress had been clear; the resilient quality of the skin on my neck and face had the doctor reporting my estimated age of no more then thirty-six, a nice trick! I returned to the mirror and looked carefully for any sign of cellulite or scars from the surgeries. My breasts were healed and there was no redness at the insertion. Catherine had done the same weeks ago. She had said the diet at the Estate and the amount of good clean water we drank helped, as did the Basti. I couldn't find any dimpling on neither my thighs nor my sweet bottom. \n\nI cupped my breasts, nearly a full C, and 90-66-95, almost 178cm tall. The nipples became taut with my self-stimulation. I wondered if my feet were too large, they seemed OK for my height at size 39. The blonde very long hair was so beautiful but I realized I'd need to manage the extensions every two weeks. Or maybe I could visit the salon in the morning and have just my own hair back. It won't even reach my upper shoulder so I'd have to deal with the short length for months. I decided to wait to remove the extensions since naked I loved it touching my back. ",
        "I was convincing as a woman nearing middle age and I wouldn't have to face the menopause nor had I had to contend with the other growing pains and self destructive behavior and body awareness issues. I showered slowly then stepped out and began to towel myself. I noticed the reflection in the mirror. It was me, hair wet on my head but naked and smooth. I could have been mistaken for a middle-aged model and my adjusted voice was perfectly fluty. I moved to the bed and then napped in the cozy robe the Hotel provided.\n\nIn early evening I thought I should venture beyond my room, maybe the Bar? Spending some minutes to get my hair just right then I focused on dressing for a first public visit as Annabelle. Catherine had sent me with several pairs of panty hose, which I elected to use with a simple soft brown wool skirt and a white blouse. I selected a medium heel and a hair clip made the outfit a bit more casual but I'd need a sweater. I left the room and used the elevator to the lobby. \n\nTurning left I entered the Bar without thinking. I was a single woman drinking at a Hotel bar! Was I trying to get picked up? I stopped and started to turn back to the elevator when I saw out of the corner of my eye Julie and Liz at a table near a large window. They of course couldn't recognize me so I turn back to the bar. I decided to sit at the bar to watch for a while. I could view them in the mirror behind the stack of bottles. The two were clearly upset, for they would occasionally hug one another. When they'd finished their drink and were leaving they passed close without restricting their discussion for lack of worry it would mean anything to the patrons of the Bar. \n\n\"She's somewhere in the City, she has no identification, so she can't leave town.\" \n\nLiz interrupted, \"I'm worried about her but we just need to be patient Julie. We'll see what tomorrow brings, OK? Let's meet Pia and Michel and go to dinner.\"\n\nI was surprised by the clear gender terms and their concern. I thought I was on my own for they couldn't see me as a woman! But they didn't seem phased by my gender change. I was truly shocked, and I was surprised, how could they just move along? Weird, and who were Pia and Michel, and where was Barbara? \n\nI considered following them but just then the barkeep said, \"The gentleman has asked if he might buy you a drink.\" \n\nShe pointed to the opposite side of the bar where a handsome man sat and waved slightly. I looked back to the barkeep, looked toward the elevator Lobby but surprised myself by saying yes.\n\nLater that evening I found myself in his room with his beautiful normal sized cock in my mouth. I left quickly after the sex and returned to my floor via the stairway while he was peeing. I found I was an adventuresome woman and alert since I'd not left my bag nor removed my clothes. I just wanted to taste his sweet cock and seed. He didn't know I was staying at the Hotel so I figured I'd just be a bit more cautious, and reserved, tomorrow.\n\nAwaking late Monday morning I decided to spend the day in my room alone. Catherine had sent me off with a nice fleshy phallus. I was still in bed and wearing a simple satin negligee and reached for the toy. Moisture from my mouth was sufficient for the size and it easily entered my upturned butt. I discovered at the Estate that I enjoyed sucking a cock nearly as much as getting fucked but right now I really needed to be driven. I rolled to a sitting position and while holding the balls of the toy fucked me slowly. The peak was delicious and this time I oozed a small amount of seed. \n\nAfterward I laid in bed and read the papers. After an hour I flipped the TV on but I wasn't interested in the movies so I watched CNN. The third story was about all the noise a transwoman from the United States was stirring due to a discussion of her new book on transgender self-identity and gender awareness. Given my new view and life the point was worthy but I couldn't follow up on the show since I didn't have a computer nor a smartphone. I realized I needed to address this and called down to ask the front desk for the nearest Wireless store and decided to go there before lunch. \n\nThe neighborhood around the St. James was very familiar and the walk to the store was pleasant. Moving on the street as a woman was thrilling but I was new to this and it would get old, especially in some of my high heels. With the reflection from the store windows I could note the attention my simple walk caused. Both men and women occasionally turn to watch me.\n\nAt the telephone store the staff was a bit off focus. The young associate couldn't keep his eyes on my face so the manager stepped to help me. I was happy he accepted my credit card as sufficient ID for the iPhone purchase. The plan was initiated and I left stopping for a simple lunch at a deli that had seats for the area office workers to sit for a quick lunch. While sitting away from the window I was surprised to see the girls walk by at a stroll but heading east. Barbara was with them but she'd changed her hair color and style and she was dressed very provocatively for a middle-aged manager. Her dress wasn't office wear, more stylish and sexy and she looked quite becoming. But there was a fourth woman with them. She looked a bit older and was elegantly dressed and her manner seemed lordly. \n\nThis time I slip quietly behind them and saw them enter a Department store that specialized in women's wear. I thought I could just browse the store while they did their shopping. After a bit I found a nice hat and decided to purchase it. This almost caused me to lose them, but I saw they'd simply moved to the Lingerie Department. Clearly this unknown woman was in charge of the others. She seemed to direct Barbara, and I saw Liz modeling an outfit for her while Barbara stood by quietly. She even handled the payments as the others moved toward the exit and the street.\n\nThey found another boutique and I realized I could return to street to amble along and await their next stop. They were in the shop for over an hour and I'd exhausted the various boutiques and electronic stores nearby. When they finally exited the boutique with many bags I watched as Liz hailed a cab. The older woman and Barbara got in but Liz and Julie said their goodbyes. Then they turn toward the St. James. I gambled to avoid a chance encounter and found the Hotel via a side street. I was sitting reading a newspaper in the Lobby when they entered the elevator. They got off on the same floor as the gentleman whom I'd had a brief encounter with the evening before.\n\nThe stupidity of my sexual drive now might affect my re-introduction to Liz and Julie. I had nearly decided to approach them while at the St. James to gauge the possible reception by Barbara. Returning to my room I considered the options and decided to dress and visit the girls directly. I call the Front Desk and ask for their room number, using an excuse related to an evening encounter the day before. Luckily the young man who I spoke with recognized me by name and, though a bit eager provided the suite.  \n\nMaybe I should call their room? No, I wanted to see the reaction on their faces. It could sink me, but I needed to know. I quickly cleanse my self and showered without washing my hair. I used moisturizer and a dap of Chanel no.5, Barbara's favorite scent. I considered the selection of dresses. I selected soft white lingerie and an elegant dress with some discreet jewelry and shoes. The ivory A-line dress with beige sheer pantyhose looked and felt right, as did the 120mm nude colored pumps. A quick touchup of my afternoon makeup was necessary, fixing the lip stain and I changed my bag. The makeup and cards moved to a small beaded gold bag with a strap. \n\nThe elevator was busy due to new arrivals checking in and I waited for a few minutes. I had enough time to consider that I might run into my man friend. I hoped to simply move to their doorway and knock. I gather my nerves as the elevator opened and I was alone. The ride was brief and I encountered no one on either floor. The suite was at the end of the hall. \n\nI stood near the door for over a minute, thinking but also listening. Their voices seemed to indicate that they were preparing for the evening. I knocked and stepped back to allow my heart some space. Julie opened the door casually speaking, \"It's the extra towels dear, I'll handle it.\"\n\nWhen she saw not a maid or hotel worker she smiled lightly, \"Yes, can I help you?\"\n\nI couldn't speak, and just stood there, nervously rotating my left heel. I was, without a doubt, feeling severe trepidation. \n\n\"I'm, I was, I mean, Julie. This is so hard, I'm Annabelle.\"\n\nShe screamed so loud it hurt my ears. \n\n\"Liz, Come in, LIZ! My goo, Annabelle is a beautiful, Liz she's, come meet Annabelle. You really are very pretty! It's a shame Pia and Michel couldn't be here. They have worried about you since we were told of the release. We'll call them, they've been dying to meet you.\"\n\nIn a flash Julie pulled me inside, and wrapped her arms about me and then Liz came through the narrow hall. \n\n\"Oh my God Annabelle, we finally meet you, my God you are so beautiful.\"\n\n\"I've got to call Pia!\"\n\nI tried to slow them down, \"Please wait before you call anyone Julie. And who is Pia?\" \n\nI said turning to Liz, \"I'm uncertain I can force myself on you. Where is Barbara? Thank you for says so, but I'm so unsettled.\"\n\nLiz realized the confusion I was experiencing. \n\n\"First Annabelle you are not putting us out at all. And Barbara and Pia are the same. She has a new nickname. She has kept us all focused on finding you. We didn't think we would ever see you again, yes I realize there are some 'features' that are new and special. We should sit and let you catch a breath. Then we'll discuss the where and how regarding Barbara and Michel.\n\nThough they seemed to accept me as a woman, I felt very strange as one amongst my old female friends. They were staring at me, reaching to touching my hands, arms, my hair, kissing me. I was home, maybe, but unsure if I truly belonged. But how would Barbara feel? \n\n\"Yes let's sit please, it's been a difficult day. Where is Barbara staying? Who is this Michel? Is there some water?\"\n\nJulie brought me a glass and Liz answered, \"Their staying at the Ritz. We can be there is five minutes, but when you're ready for that. Michel is, she is Pia's Mistress dear Annabelle. Your Barbara has been through a small metamorphous as well.\" \n\n\"She's discovered herself a few months ago. She is a true submissive and a lesbian as well!\"\n\nI heard the words but couldn't process the thought, \"What do you mean, a lesbian?\"\n\nJulie hugged me and spoke about the new relationship.\n\nThen why has Barbara gone to all this trouble to, \" I need to think but couldn't. \n\n\"Is this Michel violent?\" I asked.\n\nJulie said, \"Michel's fine and no not aggressive, and she has been superior in aiding us with the search, well, so have several others. Much has changed since December Annabelle. We'll wait for Barbara to go through the details. But I've got to know,\" touching my right breast, \"their real? Your figure has us both thinking of a diet.\" \n\nI smiled, \"Yes my breasts were modified and are very real. I've been eating so well and the training has kept me burning more fat away, but the Basti cleansing is a real find. I feel great and full of energy.\"\n\n\"And your gender focus is still women, or both? I realize that may be too personal.\" \n\nLiz was getting to the important definitions for us. I wanted to avoid the question but I wasn't going to. \n\n\"You'll need to settle these questions for us all, and we can ally with you if necessary.\"\n\nI looked into her eyes, \"I've become aware of my bisexual nature,\" I touched her arm, \"but I still love women's bodies. There have been a few men, and I do love, I really love being penetrated, by girls and boys. And I guess I've developed some dominant traits but also I can be very submissive. Yes the question is personal and I'm happy I can speak with you two about it without anxiety or regret.\"\n\n\"We'll need all night to discuss these events Annabelle. But can we go to the Ritz? Maybe it would be better to just arrive. We were due for cocktails at 5pm anyway.\"\n\n\"Is it near 5 now? Yes I think that's a good plan Liz. I'm staying here so I'll stop and get my coat.\" \n\nWe met in the Lobby for the ride to the Ritz. \n\n\"Liz I'm really nervous about this Michel. How or why, did I cause this?\"\n\n\"In an round about way, yes. Barb was despondent when you were taken.\" \n\nShe covered the early tragic part of the investigation, the film and the Police. \n\n\"But with a little knowledge she started a different approach to finding you and, well because she was a bit lost herself by then and while pursuing this alternative lifestyle lead she met and pretty quickly fell in love with Michel.\"\n\nJulie added, \"She was surprised by the ease of the relationship, and the security. Just as we were, but we'd sensed her submissive character even while with you these past nine years. Her life changed in mid-January, just as yours did in December.\"\n\nLiz interjected, \"We were there for support as we are now for you, but it was her decision.\"\n\n\"I'm sorry to say but I'm a bit uncertain what may lie ahead for you two.\" Liz was opening the door as Julie spoke this sad statement.\n\nAt the Ritz we quickly moved inside. I removed my coat and asked Julie if I looked OK.\n\n\"Are you kidding Annabelle? We're both jealous of 'how you look'. Disregarding the fact of your gender shift, either of us would kill to have that butt and those legs!\"\n\nLiz hugged me and ran her hand across my butt, \"Yes I'd kill for that butt.\" \n\nWe were outside the suite a moment later. \n\nLiz said after knocking, \"Just remember that Barbara found you, still loves you and will need sometime to adjust to your beauty. Shit I'm completely unsettled by you girl.\"\n\nAt the door she said, \"So be patient as well as sincere Annabelle.\" Then, \"It's us Pia.\"\n\nI heard a new voice, \"Just a moment,\" Ahh there . . Oh, Please come in girls. Pia is still showering, I think.\" \n\nMichel was near and I smiled, she did as well. She move passed the girls and hugged me lightly and then kissed my left cheek.\n\nTurning to Liz she said, \"This is the best way, right Liz? I'm Michel Shaller, it's so great you're here with us, safe with us. Please come in and sit down Annabelle. Pia, err, Barbara will be here in a moment. Liz, please check on her.\"\n\nI just stood in the Living Room, like a deer in the headlights. Julie helped me to a chair but in a moment Barbara appeared. But without Liz, she moved while fixing the clasp of a bracelet on her left wrist so she hadn't seen nor heard any commotion. \n\n\"I'm sorry for not answering the bell Mistress.\" She came into the front room and halted. \n\n\"Oh! Oh my god, oh, \" and she fainted. Julie was coming back from the loop around the suite and was near enough to prevent her hitting the floor.\n\n\"I'm alright, now my, we're all, I need another minute.\" She stayed on the floor a moment. \"I'm so lucky you were there Julie,\" turning to Michel at her right she reached for her hand. \n\n\"Annabelle I'm so happy you're safe and we're together. Please come here and kiss your wife.\"\n\n\"I was worried this might be too sudden Barbara.\" I was looking to Michel, almost for a release. \n\n\"I think I'll go now,\" I stood and moved toward the door, but Barbara was quickly up to stop me.\n\n\"Oh no you don't, you're still my husband, and I need you.\" \n\nPia grabbed my right arm, and swung me into her arms, and kissed me as I stalled and allowed her to hold me tightly. While she kissed me deeply, her hands roamed and exploded my body. The hands moved across my back, feeling the brassiere back strap, moved to my waist and the pantyhose elastic, then further to my cleft. Her other hand dropped to my front mound, but went further, to the hem and lifting it probed for my penis. \n\n\"My god you're intact! Girls she has a cock too. Annabelle, you're still mine, and so sexy. Can we see it?\"\n\nI was so happy I nearly fainted. She could still love me. The girl I had become and the friend that I was sure I had lost. Julie and Liz came to our side and hugged us as one. Then I looked toward Pia and nodded at Michel. She was crying softly and had turned slightly away from the scene. \n\nPia touched my lips to shhh me quiet. She turned and walked to Michel. \n\n\"Mistress, please, I'd like to introduce my husband Annabelle. She wouldn't have come back if not for your love and support. But Mistress, girls, can I have some time alone with Annabelle? We need a few minutes to understand where we've been.\"\n\nLiz responded quickly, \"Certainly, we'll head to the Lobby. Please call my cell if you need anything Pia. Come on Julie, please Michel, let's leave them alone.\" \n\nThey moved toward the door and quietly closed it.\n\nThe room was very still, Barbara, or Pia stood near and her eyes were tearing. \n\n\"I can't explain myself Annabelle, but I never abandoned my hope I'd find you. I needed you, and in that state I was more distressed and emotionally more open than I knew. Michel was a god sent. I don't know how I might have found the will to accomplish what we did to recover you without her.\"\n\nMoving to her I lightly held her by her loose arms. \n\n\"Don't fear dear, I'm the one with regrets, and I nearly was lost. What might have happened in even seven days is something I don't want to consider now that we're together. Can you forgive me somehow?\"\n\nShe looked at me strangely. \n\n\"You? Why do you seek my forgiveness? I feel I abandoned our vows and marriage at the drop of a hat. You dear man, I mean woman, did nothing to cause these events.\"\n\n\"But I should have resisted, somehow, I wasn't strong enough.\"\n\n\"Maybe you don't understand. You didn't speak with Thomas. He assured us that you were gone, as a man at least. The Sisters or whatever they are, had planned and taken you with no intent of releasing you.\"\n\n\"I know some of what you say, what you've come to understand, but still.\"\n\n\"Don't you put this on your heart dear. You were their target.\"\n\nShe may not have understood how Rachel had truly selected me, from my roving fingers on the Web. I stopped that thought: leave this as it is. Let Barbara, or Pia, unload her feelings of guilt, at least for now.\n\nWe hugged for several minutes and kissed. \"You're so much softer Annabelle, your lips, your skin, even your touch. You're also less strong. I noticed how your arms are much thinner, without big muscles. Step back so I can see all of you.\"\n\nShe said nothing as I stepped back a bit. I felt weird and nervous, so I started to move. Catherine had instructed me in movement, to resemble a model, subtle shifts and poses. I even twirled. \n\n\"Wow, you are a girl Annabelle! Your simplest motion arouses me! I have a beautiful 'wife'? I could get used to looking at you babe. Come closer. Umm, your scent is No. 5 too?\"\n\nI was enjoying modeling for her and almost missed the question, \"I don't know. It was just the parfum I had in my bags.\"\n\nI had move to her side and she was looking into my eyes. \n\n\"You're quite good with your makeup Annabelle, and you look stunning. Your skin doesn't look like a forty year old, eh woman.\" \n\nShe turned to hold me at the elbows, \"So how do we two girls carry on? Do we stay together as a couple? Michel will assert herself. I'm as much hers now. Can you see living with me, the submissive,\" she chuckled. \n\n\"I really am a sub, maybe even to you Annabelle.\" \n\nShe turned with a sly smile, \"Could you domme me dear?\" \n\nI liked the idea of Pia, but how could I deal with another? Michel was in her life now, my relationship was possibly equal but time would tell.\n\n\"Do you feel you could share your body with me? Could I see what my husband Annabelle looks like? The figure you present is delicious dear. I'm more than a little jealous, though I have lost 5kg. Come on don't be shy dear, I won't bite, I promise.\"",
        "I turned to allow her to run the zip down and stepped out of the dress. I turned toward Pia. \n\n\"And the chemise?\" I slipped it off my shoulders letting it fall to the floor. \n\n\"Come, I'll release the bra hooks.\" She paused as I turned back to present myself. \n\n\"Their beautiful Annabelle\". She came close and her hands rose to my breasts, then she hugged me, kissing me. Her touch stimulated my nipples which quickly stiffened. \n\n\"Wow, you're getting aroused. That's what I needed to know. You still find me attractive. Feel my panty, I'm wet as well.\" \n\n\"Am I really the cause of this?\" I asked removing my moist fingers from her slit. \n\n\"Of course, and drop your thong, I want to see your, what do you call it now?\" \n\n\"My clit, or clitty,\" I rolled the pantyhose down to my thighs and pushed the skimpy fabric that had concealed my small cock. But her looking and touch had done what I tried to avoid; as a girl I didn't want to become hard. Yet my clitty was swelling. She dropped to her knees. \n\n\"I want your clitty Annabelle.\" She began to suck me gently, and it rose tall and filled her mouth. She reached around for my testes. \n\n\"Oh my, they've taken them. Well children would prove difficult at my age. That's the end of the pill for me!\" She returned to my member in her warm mouth and slowed her pace, I felt I was going to peak.\n\n\"Pia, I'm going to, I'm about to,\" \n\n\"Cum in my mouth my girl\" \n\nHer statement seemed a bit off but also was reassuring. She'd never taken my seed this way. I orgasmed strongly but barely filled her tongue. She was good to keep the seed in her mouth, but then she stood and kissed me deeply. \n\n\"Our first snowball Annabelle. A little one. From now onward we'll share each OK?\"\n\n- - - - -\n\nThe others were in the Lounge and drinking some Chardonnay as we approached hand in hand. The conversation went elsewhere and they made room for us at the table. \n\n\"So Pia how are you now?\" Liz asked and laughed.\n\n\"Is it so obvious? Is it my flush that was the giveaway, or the smiles?\"\n\nJulie giggled, \"I need some time alone with my husband, my ass!\" she mocked. \"Anything unusual to report dear Pia?\"\n\n\"Alright you jerks. Mistress, this is my husband Annabelle. May we sit with you just this once? Annabelle, please come and kiss my Mistress.\"\n\nMichel smiled lightly but turned to me, \"Annabelle you will come to my side this moment and show me your respect.\" \n\nI knew much would happen during the next several days to settle the relationship that Pia clearly wanted. \n\n\"Would it please you if your sub was to kneel and kiss you?\" I walked over to her side of the table and did so. \n\nMichel kissed Pia and as she did she moved her left hand to her dress hem. Michel exposed her upper thighs and I saw her hose welt, then higher I saw that she worn no panty, her pussy was exposed but concealed from the others at the table. \n\n\"You may now show your respect dear Annabelle.\"\n\nI slowly moved to kiss her naked mound, running down the lips softly I pressed her thighs apart slightly and projected my tongue tip into her warmth. \n\n\"I think Annabelle will find me a good Mistress my dear Pia.\" \n\nThe waiter arrived with two additional glasses. We settled close and I found comfort with the four beauties. They asked simple questions at first, about my hair, figure, and my earrings. Then Pia described our recent encounter and sharing. \n\nJulie suggested names for my small penis but Pia, reserved this for Michel. \n\n\"I will need some time to adjust to having two submissives, and the house in Georgetown will require some minor revisions. Annabelle will have to take some 'ugly' pills. You're just so beautiful dear girl. We'll allow the order of things to develop though. No pressure or statements can change how we'll learn to live and love each other.\" \n\nShe raised my hand to her lips and kissed it. \n\nI spoke about my nearly five-month transition so they could comprehend what had allowed me to be in my present state. They had different questions regarding the changes to my body, the training, the memory lose, and the Estate, all except Michel. She simply watched me and followed the discussion. Eventually Liz ordered a bottle of Veuve Clicquot. The Champagne arrived and was served.\n\n\"Pia and Annabelle,\" Liz started a toast, \"You're still my best friends, stay together, try and adjust to each other and love Michel. Hear hear!\"\n\nMichel stood to speak, \"Annabelle, we're all women here and we'd like to initiate you into the group, we're Lesbians, submissives and sexual friends. We'd love you to be with us. Can you love us and me as you did, or do Pia? She has committed to me her love and I want you to share what we have, together. We're so happy you've returned in this beautiful form.\" \n\nShe moved to my side and kissed me, her tongue deep within my mouth, her hands touching the sides of my breasts. \n\nI spoke briefly, \"I'm very happy with my new self as well, with having become a person, a woman. Thank you for everything each of you has done to allow me to sit here with you. You can't know what this feels like but I assure you I love you all.\"\n\nJulie suggested we move to the restaurant. \n\n\"Michel we should take Annabelle to dinner. Maybe she could spend the night here with Pia and you? Let's help her feel a little normal tonight.\" \n\nShe kissed Michel's cheek and mine. We enjoyed the rest of the wine and went to dinner. But Michel had affected me. Strange though, I thought I could dominate her rather then the other way. I cleared my mind and focused on Pia. \n\nThe dinner discussions focused on the problems the girls had with the investigation and when we would head south. Pia suggested that she'd like to stop in New York prior to Washington. I wasn't at home yet but the women would try hard to help me adjust. This would take some time but I was looking forward to time with Pia, and with Michel. \n\nI needed to find my way as well. \n\nThis was a new life. \n\nThis was my life.\n\nThe End\n\nSome people \"might by force of will, cause their face to approach those of they're ideal. Some imagine that this is an ability they share with most other people\"\n\nfrom Talking Heads \"Seen and Not Seen\" 1980\n\n*****"
    ],
    "authorname": "MadQuill",
    "tags": [
        "lesbians",
        "transitioning",
        "sex toys"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-visit-to-the-north-ch-10"
}