{
    "title": "Complex Family Ch. 13",
    "pages": [
        "As the title suggests this is the end for this series. Thank you all for your support and feedback. I hope you all enjoyed reading this as much as I did writing it. Also a final thank you to Alexandra and luvtaread for their assistance in editing it was most appreciated. \n\nEpilogue\n\nTen years later Brandon had a lot to celebrate about. All his children were off to great starts, all successful in their chosen careers. Leah, Kara, and Anna had all found wonderful husbands, and Ethan and Jake, wives that were both intelligent and beautiful. The holidays got even better as the family swelled with spouses and grandchildren.\n\nHowever, it was not the family that was the cause of today's celebration. Today was the day that one of their own celebrated her dream. In the span of those ten years Mel's guidance and Brandon's programming had taken Phoenix Software to the top of the corporate world.\n\nSo, thirty years after arriving home from the island, Mel had finally reached her lifelong goal. She was at last the owner, president, and CEO of a major multinational corporation. She was the toast of big bash that Katy and the company had thrown her. \n\nThe company end was led by Mel's right hand woman, chief vice president, and prot\u00e9g\u00e9 Rachel; who had come a long way since being their first employee and secretary. After all she was now extended family. Her little brother and Kara had met at company party and fell instantly and deeply in love; they were now married and had three kids.\n\nSometime during the party Brandon stepped out for air and as he stood admiring the sky, taking in the early spring air, and reflecting he heard a voice behind him.\n\n\"There you are hiding from the spotlight, as usual.\" Mel said as she strolled out to join him. \n\n\"Yeah well you know me and crowds,\" Brandon said with a smile. \"Besides Mel, this is your night you should be enjoying it.\" Then after a beat he said, \"You look stunning by the way.\" \n\nMel smiled back and said, \"Why thank you dear I'm glad you like the dress, I wore it for you.\" \n\nBrandon stared at her and laughed saying, \"No you didn't Mel! You wore the dress to show off, this is your victory party you are queen of the ball, the empress of the evening.\"\n\n\"Then I wore it for my king, my emperor.\" She said with the utmost sincerity. He had been joking but she was clearly not.\n\n\"Mel,\" he said taken aback, \"but I'm not your anything, I am your friend, your really, really good friend, but nothing more.\"\n\n\"Oh so humble you are Brandon, but you and I both know this was your doing. Before you say it was not, trust me I would know, this was your doing. You gave me the greatest gift anyone could ever receive and it was given long before you started this company even before you gave me Leah. You gave me yourself and your love and through that all the best things of my life were possible.\"\n\n\"Mel...\" Brandon tired to interrupt shocked at what he was hearing. \n\nShe glared at him and said, \"Thirty years with three lovers and three daughters later and you still have not learned that we ladies are always right, so stop arguing and just please listen.\" He nodded and she continued, \"You improved my life in so many ways, you strengthened my bond with Katy, you gave us our kids even under my rather demanding terms, you selflessly helped guide them with no demand for recognition, you saved my career twice, and finally you gave me the keys to my biggest dream. \n\n\"Most of all you gave me back the most important thing in the world, my sense of self. It was you that not only finally let me be myself, but encouraged it. All of this you have given to me selflessly and never have I returned your gift, or at least I have not been able to express it until now.\" She looked deep into his eyes and after a deep kiss said, \"I love you Brandon, I love you so much it hurts sometimes. Thank you for always being there when I needed you.\" \n\nBrandon was shocked by what Mel had but said, \"I love you too, I always have in a way. Mind you, not as much as I love Ashley, but I've always felt love for both you and Katy.\"\n\n\"And we love you too baby,\" Katy's tear filled voice said. He looked around to see both Ashley and Katy standing together crying. \n\nAshley smiled and said, \"It's about time Mel, but I'll tell you what I told your wife, don't go getting any ideas about stealing him from me because he is mine, got it!\" Mel smiled.\n\n\"Of course, just as long as I can borrow him every so often.\"\n\n\"Oh and me too,\" Katy said excitedly.\n\n\"Of course, after all you really cannot harness a phoenix can we girls?\" Ashley said and the other two shook their heads in agreement, \"Fitting choice for a name darling.\" \n\nBrandon was shocked and asked, \"Wait what? I chose that name because that is what this family does rise from disasters to get better. I mean this family was born after the biggest sea disaster in history.\" \n\nAshley smiled and said, \"As I told on our honeymoon darling you are the rock. If we are like a phoenix it is only because you are one. We are the support structure that helped you sure, but you are the one who raises us up every time.\" \n\nBrandon went to protest but Katy said, \"Who helped me on the ship? Who saved our wedding? Who fought the waves to save us? Who kept us alive for two months? Who got us to safety? All you baby.\" \n\nMel then added, \"Who came up with the plan to save Ashley from her grandfather? Who helped save my marriage? Who gave us our babies? Who saved Leah from Frank? Who helped save me from myself? Who came to our daughter's aid after the accident? Again all you.\"\n\n\"We all owe you so much, but me especially.\" Ashley said, \"You've given me everything I could never have dreamed of before me met. That day I came to see you all those years ago I could never have imagined how much you would transform my life in everyway. You gave me my dreams and then some darling. My career, my kids, even a repaired relationship with my family, all of it thanks to you my wondrous husband. Face it Brandon you are what makes this family so great, our phoenix, rare, but incredible \" \n\nAshley said and Brandon looked at them all and said, \"Well lades I am flattered, but it is you three that saved me. You say I'm a phoenix, that I am rare, well only because I had you three backing me up the whole time. You three make quite the team, a smart sexy redhead, a gorgeous fun loving blonde, and caring stunning brunette who continues to be the woman of my dreams. You say I gave you a lot, well my life has been heaven on earth since I met you three. The time on the island is still some of the best in my life. So thank you for everything ladies, I consider what I have given you to be a pittance to what you gave me.\" \n\nThey all thanked him in their own ways before Mel said, \"Oh and speaking of the island. I've got one more surprise for you guys. You know that dream house we have been designing together all these years for if we ever made it? Well I bought our island and I'm having the house built on it. It should be ready by the summer.\"\n\nBrandon saw grins all around as they all remembered their time on the island and the fun they had there. As he walked back to the party with his three companions he imagined that like him they were making plans on what to do there. \n\nHe was shaken out of his thoughts by Ashley and Mel and looking up, he saw his five children standing there smiling at him. As the children greeted their parents Brandon's mind again shifted to the island and things to come.\n\nThey would go back to where his charmed life had begun. Many things would be different than when they left, but one thing he knew would be the same was the bond between himself and his ladies. That, along with the fruits of that bond, he would enjoy until the day he died. As that was still a long way off he looked forward to living out his days in the peaceful chaos that surrounded his life at all times. He was used to the chaos, because after thirty years of the complex relationship that made up his family, he liked it and would not have it any other way. "
    ],
    "authorname": "PaulStevens",
    "tags": [
        "party",
        "celebration",
        "phoenix",
        "love",
        "friendship",
        "finale",
        "reflection",
        "family"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/complex-family-ch-13"
}