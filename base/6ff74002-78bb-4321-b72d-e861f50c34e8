{
    "title": "My Crazy Girlfriend Pt. 04 - Sorority",
    "pages": [
        "Liv and I had taken a whole week to get back into the swing of things after our wild trip to her parent's house. She had shown off her ring to all her friends and left out the illicit details about what had preceded the ring. Liv had however, begged me to brag to all my guy friends about 'all the pussy I was getting.' It's just not my thing. Everything I'd ever wanted was wearing my life's savings on her finger. She didn't need to know about the other stuff either.\n\nThe first week back wasn't great. It was four days between arriving and moving in that I even saw her. Our professors slammed us with new material as soon as classes started back and it was a frantic mess just trying to get lined out. Finally, I put all the books and math away and trekked over to the sorority house to see her. \n\nI knocked on her door and waited outside. I normally don't mind the sorority house but ever since we got back, something seemed different. It made me anxious. \"Hey Lacie,\" I said to the brunette that walked into the room two doors down. She waved. \n\n\"Coming!\" I heard from behind the door. \"Hang on! Coming!\"\n\nThe door opened finally, \"Hey!\" She squealed grabbing me around the waist. She gave me a soft kiss. \"Come in!\" \n\nI followed her into the room which was awash in engineering work. Books, papers, the smell of weed, all scattered across the floor and her neatly made bed. Her hair was a crows nest- a frayed mess of copper that poured out across her bare shoulders and back, clearly not having been brushed in days.\n\nShe closed the door behind us and wrapped me up in her arms again. Looking up at me with her big brown eyes and sweet smile. \"I've missed you; I've been buried in equations for days.\"\n\n\"You're telling me, I think I've done nothing but study and math since we got back.\"\n\nShe turned around and leaned back into me wiggling her hips. \"Want to do something else?\"\n\nI ran my hands over her flat stomach and pulled her into me and she giggled. \"What did you have in mind?\"\n\nShe bit her lip and hummed thoughtfully, \"Something fun, stress relieving...\" She looked back at me, \"Messy...\"\n\n\"I am so glad to hear you say that.\" I said leaning in and kissing her neck. She made a soft noise and rocked her hips against me.\n\nI kissed up the side of her neck to her ear and tickled it with my tongue. She made approving sounds and pulled my hand from her stomach to her breast. I filled my palm with the warm soft flesh barely covered by her tank top and she whimpered and jerked. She pushed her butt into me trying to stroke me through her jeans. \n\nShe giggled, gasping as I pulled on her nipple gently, \"You're so hard.\"\n\n\"I haven't had any release at all in like four days or something.\" \n\nShe turned around and kissed me, her hand rubbing the seat of my jeans as her pink lips embraced mine. \"I want to feel bad for you but I'm just excited that you're going to cum like a fountain.\"\n\nI grabbed the hem of her top and tugged, peeling it off her slender, pale torso. It stretched off her stomach and up over her ribs popping her b-cups free. She lifted her hands and I pulled it over her head, threading all her thick red hair through it. \n\nOnce free of the top her hair was even messier than when I had arrived, the wild mess hung into her face, over her shoulders and tried to hide her little pink nipples that stood up at the feeling. She raked her fingers through her mane and pulled it all back over her shoulders. As she did I leaned over and took one of her nipples in my mouth.\n\nShe moaned with surprise half laughing as she panted and groaned at the feeling of me sucking and tonguing. \"Fuck...\"\n\nShe pulled my head up and held a finger to my face. \"No more foreplay until we're both undressed.\"\n\n\"But-\"\n\n\"Nuh-uh, we're both a little touch starved and at this rate it'll take forever.\" I tried to look at her insistent face, and not the perfect breasts just under it.\n\n\"But I like playing with you when you're in panties too.\" I pouted.\n\nHer shoulders sagged, \"Fine, but I want you stripped mister. I want to be able to hold throbbing flesh.\"\n\n\"Deal.\" I said fumbling to get my pants undone. I struggled with the button, and then the zipper got stuck. Liv laughed at me as I finally got it to pull down and tug the pants off. I sat on the very edge of her bed careful not to sit on any work and tugged one leg off then the other. I stood back up and felt my boxers pulled tight on my tip.\n\nI carefully pulled my boxers around my erection and dropped them. I looked up from undressing and Liv was waiting for me. Her girlish figure was completely exposed, her porcelain stomach with a shallow crease down the middle and slim legs that seemed to extend up forever, her hips wrapped in the most basic plain white panties. Her red hair was a blaze at the top that seemed to want to invade every part of the sight. \n\n\"Damn you're something else,\" I said looking her over and tracing my fingers across her ass and a knuckled under her jaw. She blushed and kissed me. I let my hand fall across her butt and hold it firmly. She pushed into my hand and made a sound in her throat. She grabbed my shaft and stroked it slowly with soft, but cold hands.\n\nI turned her around and leaned her against the wall, kissing her passionately. She met my intensity, her tongue desperately feeling mine. I dragged my fingertips over her stomach lightly until I felt the cotton and let my finger reach across the folds which met me hot and slick. Her pussy had soaked through her panties already, strokes of my finger were pulling away loose, thick fluid. \n\nShe struggled to focus on stroking me and eventually was holding my neck and shoulder for support as I steadily felt and fingered the lips of her pussy that coated my fingers.\n\nShe yanked away from the kiss and moaned into my shoulder. Her hips were rocking as she tried to fuck my fingers. Her breath caught and her knees struggled to keep her upright and I could feel droplets falling from my fingertip. \n\n\"You're so wet.\" I said, relishing the feeling of her lips and the hood of her clit sliding under my finger.\n\nHer lip trembled and she panted unsteadily for breath, \"I'v needed you... I think I'm close already.\" She pulled my wrist from between her legs and took each finger into her mouth and sucked it clean. I reached down to resume, but her hand held my wrist. \n\n\"No, I want to edge while I suck your cock.\"\n\n\"Just a little closer,\" I whispered. She let my hand back between her legs and I kissed her, feeling her struggle to keep composure as my finger teased her wet pussy making her delicate frame squirm and her voice punch into our kiss. \n\nShe started to shake, and she turned her head and cried grabbing my neck. I yanked my finger away and she gasped and smiled, \"That was really close.\"\n\nShe rotated off the wall and leaned me against it, pulling hair from her face and twisting before sinking to her knees. She kept her legs apart and her back arched. Liv knows all of my buttons so well and made sure I could see straight down her back to her ass just under all that hair.\n\nShe leaned up under my cock and let it drag across her face before kissing the underneath and sides of the shaft lovingly. She giggled excitedly and licked precum from my tip letting it string off her tongue before enveloping me in her mouth and stroking. She pushed me into the wall with her hands gripping my hips and fucked me with her cute face. \n\nShe slid her lips away and stroked me with her hand looking up, \"Fuck I've needed this so badly.\" \n\nI laughed, \"You missed pleasuring me?\"\n\n\"Mm, I love how you groan and grab my head and get weak for me serving your cock with my tongue.\" She made a noise and took me back in her mouth. She bobbed rhythmically and eagerly. I put my hand in her hair gripping her for balance as my cock sent raging sensations in response to her mouth. \n\nI put my hand on her chin and she slowly dragged her mouth away. She looked up quizzically, stroking me with her hand. \n\n\"I can't hold on anymore.\" I said trying to keep my breath. She laughed and I helped her to her feet.\n\n\"Can I get naked now?\" She asked hooking thumbs into her panties.\n\n\"Please.\" I said tugging on the elastic. She moved her hips from side to side and slid the panties down her legs. Several thick, clear, strings clung to her as the fabric slid down and the inside of the underwear had streaks of cream. \n\n\"Where do you want to be?\" \n\nShe looked around and leaned over collecting papers from the bed. In a sign of true love, I slapped her ass as hard as I could. She squalled and looked back at me with a heated expression. I hit her again and the squall had a groan of approval under it. I ran a finger along the side of her pussy and licked it off my finger when she looked back again. \n\nShe dropped the stack of papers off the bed and climbed up, posturing on all fours, legs spread open. I climbed on the bed behind her, and she looked back. She loves watching me penetrate. I put my tip into her folds and pushed. Her pussy gave and I sank into her, the tight walls gripping me as I slid in inch by inch. \n\nHer torso clenched and she covered her mouth moaning loudly sinking to her elbows. I started sawing in and out and she looked back, gritting her teeth. \"Fuck me hard. I want it rough, ok? Don't stop when I cum just keep going.\"\n\nI started fucking faster and she groaned. Her pussy was making wet sounds as I drove into her and she couldn't control her volume even with her hand over her mouth. I grabbed her hair in my fist and yanked, and she cried and pulled forward against my grip. \n\nShe was groaning through gritted teeth, her hand balled into a fist gripping the sheets as I pounded her. I pushed her head into the mattress and hammered. She buried her face in the sheets and screamed her body quivering uncontrollably. Her pussy clenched around me and liquid dripped onto the bed between our legs. \n\nShe lifted her face off the sheets and cried into her hand. I had fucked her through the climax, and she was heaving for breath, \"Oh fuck... fuuck...\" The little redhead seemed helpless and overwhelmed but reached back pulling her ass open so I could fuck her as deep as possible. I leaned on her face with my hand and slammed my cock into her over and over. She cried and swore, my palm drawn sweat from her face as she wailed. \n\nI patted her butt and she looked back, her face pink from fucking. \"Lay flat and put your legs together.\" She smiled and shifted so she was laying prone on the bed. Not one to let me off easy she made sure her hips were tilted up to make her ass and pussy look inviting. \n\nI plunged back in and she yelled into the room, \"FUCK!\" \n\nNeither of us stopped to worry if we'd been heard. Her pussy was so tight like this I had to fuck a little slower and her voice came out rough and hoarse. I pulled her head around as I stroked her guts and she struggled to kiss me through her frantic moans. \n\n\"I'm gonna cum again... fuck I'm gonna cum...\" She heaved to me through the kiss.\n\n\"I'm about to.\" I panted back. \n\nI felt her body tense and pushed her face into the sheets again. She screamed and struggled under me, I could feel her pussy pulsing and her legs shook as her second orgasm ripped through her. \n\nI broke at almost the same time, groaning out loud and my stomach cramping as my cock started pumping cum into her in long thick bursts. I struggled to breathe and keep stroking until my cock was empty. Liv had been right, cum started squeezing out of her before my climax subsided and it fell out of her in a thick stream when I pulled out. \n\nShe covered her mouth and laughed, \"Holy shit,\" \n\n\"What?\" I asked.\n\n\"Fuck man, there's so much.\" She flexed and her pussy squeezed more gobs of cum onto the bed. She rolled over on her back. Cum from the bed smeared across her legs and squeezed out from between them as she did. I sat next to her and ran a hand over her naked body.\n\n\"You said you wanted messy.\"\n\n\"Mmm I did.\" She said cooing with satisfaction and wiping red hair from her face. \n\n\"Want me to move so you can clean up?\"\n\n\"Not yet, I like to enjoy being full of cum for a bit.\"\n\n\"I like to think I keep you pretty full.\" I said touching her nose. \n\n\"You just want to admire your work.\" She scoffed. \n\n\"Come on, giant loads of cum are my one shot at porn here.\" \n\n\"There's no way I'd let you do porn, you are mine!\" She said sitting up, \"But if it'll make you happy.\" She swung her legs off the bed and stood in front of me bending over. She pulled her ass apart so I could see her used, now sloppy pussy. It and the thighs and cheeks around it were smeared with how wet she'd been, and her lips had thick smears of cum where it'd been pushed out. I saw her flex and a thick stream of white started to leak out onto the floor.\n\nWatching the messy display my cock was back at half-mast and I kissed her butt. \"This is why we shouldn't go this long again.\"\n\nShe laughed, causing cum to string out; \"Because you're intimidating my IUD?\"\n\nI spanked her and chuckled, \"You can have my baby if you want.\" I said and kissed her ass again. \n\nLiv looked up suddenly but too late. A girl had opened the door and walked in staring at Liv in the compromising position. Liv squeezed her legs together and covered her chest reflexively, cum squeezed down her leg and dripped onto the floor. \n\nThe girl surveyed the scene, clearly noticing everything and her face flushed. \"Oh, sorry! Sorry!\" She said averting her eyes and looking away, \"I'll come back!\" \n\nShe hurried back to the door, Liv yelling after her, \"Just give me five minutes! Sorry!\" \n\nLiv, embarrassed began wiping herself off with a towel before handing it to me and collecting her clothes and hurriedly putting them back on. I dried myself off and tried to wipe up the floor before dressing myself. \n\nOnce dressed she raked her fingers through her hair and went out to the common area and called her roommate back, \"Amy come back, I'm sorry!\"\n\nI was left alone for several minutes and finally heard two voices coming back in. The girl who had interrupted us was Liv's roommate Amy. I had been told that Amy was half South American and half East Asian but could never remember from where. I'd only met her a few times. \n\nAmy was extremely gorgeous. She had thick black hair that sort of tumbled in big waves and loops across her shoulders and she had the olive complexion and silk-smooth skin that came with her heraldry. Her eyes made crescents when she smiled and damn if she didn't have the perfect sorority girl body: A dainty build with C's and sultry hips that swing when she walks. I've always thought she was extremely hot but given recent events I'd never tell Liv that.\n\nThey came in as Liv tried to explain away the illicit moment she had walked in on. \"It's just been almost a week since either of us had any time to ourselves and we got a little carried away.\" I heard Liv say.\n\n\"It's totally fine,\" Amy replied with her lower, full voice. \"If college isn't for doing gross things with your boyfriend then I don't know why anyone would go.\" She walked in and stopped, \"Sorry, fianc\u00e9!\" \n\nAmy walked in and we made eye contact, I looked away suddenly feeling very ashamed. She laughed at me, \"Don't worry about it, at least when I walk in on you two, you're not fighting over accidentally finishing in her.\" \n\nLiv laughed, \"I don't mean to overshare, but it wasn't accidental.\" \n\nAmy smirked and raised an eyebrow looking at me. \"Good for you. Any post nut clarity?\"\n\nI scratched my head awkwardly, \"No, we've been doing it our whole relationship. But can we change the topic?\"\n\nShe rolled her eyes and flipped hair over her shoulder, \"Whatever, I couldn't get a guy to nut in me to save my life. And when they do, they spend weeks texting me about it. Like, dude, pills work man relax.\"\n\nLiv looked at me and then back to Amy, putting her hands in her back pocket. \"You just have to find the right one. He's wonderful to me; in and out of bed.\"\n\nI touched her leg, \"Do you want to get something to eat?\" \n\n\"Yes!\" Liv blurted, \"I'm starving.\" \n\n\"Chinese?\" I added.\n\n\"Let's do it.\" She said grabbing her purse. She looked at Amy, \"Want to come with us?\"\n\nAmy pushed her black framed glasses up her nose, \"No, I should study.\"\n\n\"Your loss.\" She shrugged and looked at me, \"That #13 Lo Mein is calling my name.\"\n\n\"That could be a song,\" I said as we left. \n\nLiv and I had a blast catching up. We commiserated for nearly two hours over the nearly abusive amount of work that had been dumped on us before reviewing game trailers thinking up weekend activities. \n\nWe got back after dark and Amy was diligently studying at her desk. She had changed out of her jeans and chambray blouse into a t-shirt and athletic shorts and had her legs crossed in her chair. She greeted us when we came in and Liv and I spent the rest of the night going over the last of what she had due in the morning.\n\nCome bedtime I got up to leave, but Liv tugged at my shirt, \"Stay here tonight. You can use the shower here and everything. Just lock the door first.\" I gave it a lot of thought. I don't sleep well sharing a twin bed and really who does? But it was a decent walk back to my own room and Liv's was much nicer than the dorm. \n\n\"Alright. But if I'm staying, I'm going to shower now.\"\n\n\"Yes!\" She said doing an arm pump. \"I'll go after you. We don't need to alarm Amy any more than we already have.\"\n\nI always forget how much nicer the Sorority House showers are than dorm ones, so I always take a little extra time in it. Liv's shower of course took forever, and I laid on her bed in my shirt and boxers waiting. \n\nLiv came prancing back into the room in her sky-blue robe and cuddled up next to me, her hair in cold, wet, strings. Shortly thereafter we bedded down under the covers and I passed out. I should have known that sleep wouldn't last. It rarely does when I stay the night with her. \n\nI slowly rose out of sleep. It must have been very early morning because I felt a raging nocturnal erection- a common cause of Liv not wanting to sleep- and could feel her rubbing on it. I was aching at the feeling of her cheeks rocking up and down on me and reached under the covers to feel her butt. My fingers found bare skin and I groped it as sleep quickly faded. \n\nThe mattress shook as she rolled over feeling my tented boxers and I let my eyes drift open. Liv does not wear glasses and Liv hadn't worn a t-shirt to bed. I had been feeling the ass of her roommate Amy who was laying where Liv had been when I fell asleep. My first thought was, 'not this again.' I knew that look earlier was trouble. \n\nShe smiled brightly when she saw me wake up and put a finger to her lips. \"Shhh.\"\n\n\"What are you doing?\" I hissed.\n\n\"Liv couldn't sleep, and she has a big day tomorrow, so when I couldn't sleep either she offered to um... trade beds.\" She looked over at her bed, and so did I. Liv was wrapped up in Amy's big comforter, knocked out like a kitten in the afternoon. \"She said you'd done this before and promised you'd help me... get to sleep.\" She whispered choosing her words carefully. \n\n\"Liv told you that?\" I asked, trying to focus on the sweet smile and glasses, rather than what the fingers attached to them were doing.\n\nAmy giggled, \"Mmhmm, she said just a little while in bed with you and I'd fall right off to sleep.\" She ran her finger over the underside of my shaft, and it flexed against her hand. \n\nI looked over at Liv whose back was to us, but Amy pulled my face back to her, \"Nuh uh, she's already asleep.\" She leaned in and kissed me. Her full lips embraced mine and her tongue spiraled in my mouth playfully. She held my face gently, inching closer until my tip was resting on her stomach. \n\nShe pulled out of the kiss and I glanced back at Liv who hadn't moved. I looked at Amy, \"I've only done this once actually, and Liv was pretty consistently egging me on the whole time.\"",
        "Amy laughed in her throat and pulled me into another kiss, reaching into my boxers and stroking my bare shaft as she did. We kissed intimately as she pumped me for several more moments and pulled away. \"I'm not homewrecking...\" She paused looking at me, \"But it is more fun to pretend I am... now come on, rock me to sleep.\"\n\nShe pushed me onto my back and sat up, tugging the tight shirt off her body and exposing her breasts. They were paler than the rest of her with bikini tan lines and little brown nipples. They swayed as she tossed the shirt onto the foot of the bed.\n\nShe kicked the blanket away from us and swung her leg over me. Straddled, she leaned over, hanging her tits in my face teasingly, \"Let me be your little Asian secret.\" She whispered. I sat up and took a nipple in my mouth. She was surprised and gasped. Her hips started to rock as I sucked and nibbled it. She panted and made sounds as I played with one breast then the other.\n\nI reached my hand between her legs so her clit was rubbing my finger tip as she squirmed uncontrollably while I sucked her breasts. She moaned softly, \"Oh my god... fuck... hnnn...\" She grabbed my hair and gripped it until my mouth pulled back. \n\nI put my hand on her side and rolled her onto her back, letting my fingers trace down between her breasts, over her smooth bronze skin and into her red thong where I rubbed her bare lips and clit which were iced with thick, viscous, fluid. She moaned and panted, her body losing control as I played with her pussy. She pulled my face into a noisy kiss that got louder when I slid my finger into her. \n\n\"Can I tell you a secret?\" I whispered. She nodded, covering her mouth.\n\n\"Of all of Liv's friends she could have swapped beds with, you're the one I wondered about the most.\" \n\nShe smiled through a moan \"I may use you until morning.\" She panted and grabbed my wrist. \"Roll over I want to ride you.\"\n\nI wagged a finger at her, \"Not a chance, you woke me up and now I want to have fun.\"\n\nShe giggled as I pulled the thin red lace down her long, firm legs and off her ankles, \"Does Liv know you're a philanderer?\"\n\nShe opened her legs, heels on the bed and exposed her sticky, brown, cunt. \"I'm not...\" I gave her clit a teasing lick with the point of my tongue, \"I mean, I wasn't...\" I stammered pressing my tongue against her pussy desperate for another taste. She moaned and grabbed the sheets lifting her hips to push against my mouth. \n\nI felt precum drip off my tip as I started to eat and lap at the pussy of the luscious, dark haired girl who rolled her firm body crying and whimpering as I eagerly gnawed with lips and tongue at the tart glaze across her folds. \n\n\"Mmmm fuck...\" She moaned grabbing her breast and squeezing it. \n\nI pushed a finger into her pussy and she bit her lip and moaned as lowly as she could. I flicked my tongue up and down the hood of her clit quickly and she gripped my hair with one hand and the pillow with the other gritting her teeth.\n\n\"Oh fuuck...\" Her flat stomach flexed and tossed her hips against my face, her eyes were squeezed shut and she draped her legs over my shoulders. I fingered her steadily, curling my finger into her slick pussy and dragged my flat tongue across her pussy.\n\nSuddenly she groaned and clenched her legs around my head, \"Oh shit I'm gonna cum...\"\n\nShe groaned again, throwing her head back and gripping my head with her legs which shook. Her hips bucked against my mouth, smearing it with everything my finger had pulled out as her hands yanked on my hair. \n\nHer legs leg go and dropped onto the bed and she panted for breath, raking hair from her face. \"Holy shit,\"\n\n\"Feeling sleepy yet?\" I asked smirking. \n\nShe chuckled, \"Not on your life, you haven't rocked me yet.\" \n\nShe sat up and put her hands on my face kissing me. She tried her best to clean all of herself off my lips with her own before pulling away and smiling. \"Now lay down.\" \n\nI did, laying on my back and she threw a tan leg over me and straddled, letting her pussy graze gently along my shaft. She let her pussy rest on me and dragged it up and down across me letting the wet folds stroke under the tip. Her big dark eyes watched me react to the sensations as I drank in the sight of her tight body and full breasts. \n\n\"Mmm, it's been so long since I've felt bare cock.\" She stroked me with her hips and made sounds in her throat. She chuckled as she watched me. I was trying not to make noise as she taunted my cock with her hips. \n\nI grabbed her ass and squeezed it, she whimpered. She lifted off me and flared her hips. She reached back and grabbed my slick cock angling it at her opening and eased back. I felt my tip push through her, and she covered her mouth to mute a hard moan. Her whole body reacted as my cock slid in. I watched her stomach and legs flex and her chest rise and fall. Her face twisted into pleasured discomfort and her mouth hung open. \n\nHer hips met mine and she started to rock, stroking my hips quickly and moaning as softly as she could. Her head hung and she put a hand on my chest as she stroked me with her body, her tits shaking and swaying above me as she did. \n\nShe fucked aggressively, the strokes of her hips bringing wet smacks from her pussy. She was grunting, groaning, and crying, trying to keep the sounds in her chest as her little brown body thrashed on top of me.\n\n\"Spank me,\" She panted.\n\nI smacked her ass trying to keep the sound quiet.\n\n\"Harder!\" She snapped.\n\n\"What if Liv wakes up?\" I gasped back.\n\n\"I don't fucking care, just hit me... fuck!\" She groaned. \n\nI slapped her harder and she cried with approval, losing control of her volume. \n\n\"Hit me again,\" She barked through her strained voice. I did, even harder and she yelled through gritted teeth, \"Fuck yes, put handprints on my fucking ass.\"\n\nHer face was flushed and sweating as she fucked me, bordering on being out of control. Her hair had been whipped into a frayed, black, mess, and her breasts had started to sparkle in the ambient light. \n\nShe bent over and grabbed my shoulders with both hands digging her nails deeply into my neck and howled through her teeth, her whole body quaking on top of me. I held the back of her neck and her ass as she shuddered through the climax and she sat up, heaving for breath.\n\n\"Oh fuck...\" She whispered, \"Two in one night...\" She started laughing. \"Mmmm I'm going to wear my pussy out on you tonight.\" She leaned over and started kissing me, still fighting for breath as her full lips met mine. She started to fuck again, whimpering into the kiss. She didn't rock for very long before I was grabbing her ass and hair started to groan.\n\nAs she fucked me closer and closer to bursting, she taunted me in her sultry voice, \"Mmm you're not going to beg for a condom are you? Or for me to let you out? I want to compare notes tomorrow about how it feels to have the same guy using our bodies and flooding them with cum.\"\n\nShe moaned into my face, \"Mmm fuck... you feel so good when you're close.\" \n\nI started to jerk and groan under her feeling my body lose control and she smiled through the contractions of her face in pleasure. \"Fuck I want to feel it.\" She panted.\n\nI groaned much louder than I wanted to, grabbing her hair and shoulder thrashing under her as my cock erupted shooting thick ropes of hot cum into her. She stroked with her hips milking my orgasm as cum jetted into her in long successive bursts until I went soft.\n\nI let her go and she panted and giggled, \"Mmmmm... now I'm warm inside.\" She laughed touching her flat stomach where she could feel it, \"I think I could doze off pretty easily now.\" \n\nShe leaned over and kissed me gently for several minutes. My cock fell out of her and she slowly started to leak cum. I kissed her back, holding her ass until she leaned away, her soft breasts raising off my chest. \n\n\"I think it's my bedtime, now that I've thoroughly used you.\" She eased herself off the bed, obviously much more careful not to leak all over the bed and floor than Liv usually was. \"I might need another round tomorrow. Maybe when Liv is trying to study.\" \n\n\"That's totally up to her.\" I said in a lazy fog.\n\n\"I wasn't going to get permission.\" She chirped. Amy winked at me and then shuffled off to the bathroom.\n\nI intended to argue with her but passed out before she came back out. \n\nI woke up the next morning to Liv shaking me awake, \"Hey slut, get up.\"\n\nI mumbled and rolled over fighting the prompts to wake up. \"Hey get up, we have to get ready for class, idiot.\"\n\nI gave a loud grunt of exhaustion and rolled onto my back opening my eyes. She was sitting on the bed next to me and smiling, the light filtering through her red hair. She gave me a playful smirk.\n\n\"Didn't sleep well?\" She asked knowingly poking my shoulder. \n\n\"If at all,\" I replied, Liv giggled.\n\n\"She rode you like a carnival ride, didn't she?\" Liv asked, her face pink.\n\n\"If I don't tell you she will I assume.\" I replied looking up at her brightly grinning face.\n\n\"Oh, she already did. She hasn't had consecutive orgasms in a week much less one night. But I want to hear it from you.\" \n\n\"As though you weren't awake listening the whole time?\" I said smirking back at her.\n\nHer face turned down, \"Actually I slept through it all. Which is surprising because she isn't conservative in bed at all.\" \n\n\"Yeah, she was not interested in being quiet.\" I looked her over, \"Gotta say I expected more time between our trip to your family's place and the next girl you threw at me.\" \n\nShe shrugged her slender shoulders, \"I hadn't planned on doing anything anytime soon but when she complained about not being satisfied, I couldn't resist the thought of her going absolutely wild on you.\" \n\n\"Well, she did that.\" I confirmed.\n\n\"I can't wait to hear about it but if we don't go now you won't get to eat before class.\"\n\n\"Well, you may want to catch up with her because I'm pretty sure she's going to try and do it again.\"\n\nShe chuckled deviously and leaned over to kiss me, \"You should know my friends are your friends. They don't need my permission to play with you.\" She said before her lips touched mine and we kissed for several, warm, moments. She pulled up and swatted my chest. \"Now get up, the day is wasting away!\" \n\nShe sat up from the bed and went to the bathroom to do her hair. I sighed and pulled the blanket away and collected my clothes. I dressed in what I'd come over in and peeked into the bathroom. \n\n\"I'm going to my dorm to change; I'll see you later tonight maybe?\" \n\nShe looked over at me, running a brush through her hair, \"Yeah, probably. It's Friday, right?\"\n\n\"Uhhh...\" I stammered.\n\n\"It is. I'll see you tonight.\" I gave her a kiss and hurried off to my own room. \n\nBack at my own room I changed quickly and headed off to class. During class I did my best not to be distracted by the fact that I hadn't slept through the night, or by thoughts of the busty girl who had turned me into a twin bed rodeo. \n\nI sat through class, barely able to keep track of the lecture. My brain was spinning with Liv stoking my lust for her roommate, how much she seems to love me with other girls. Then I thought about her being turned on by me with other girls and before I knew it class ended, and I had to sit at a desk for a few minutes to calm down. I'm so dumb, how I ended up in engineering is beyond me. \n\nThe day went by like this from start to finish. When I went with Liv to her family's place, I hadn't been left with a lot of time on my own to think or fantasize and so by the day's end I was twisted up tighter than a sailor's knot. I texted Liv about the plan for the night and told her I wanted to shower and change. She said the plan was just to hang and I could just shower at the house.\n\nSounded good to me. I made my way there and let myself in. I hurried down the hall to Liv's room- I always feel uncomfortable, like I'm invading, when I go to the sorority house and so it's always a little relieving when I get to her door.\n\nLiv was sitting cross-legged on the bed when I let myself in and hopped up to greet me. She gave me a long kiss and then pulled me into the room. \"Mmm hi.\" \n\n\"Hey,\" I said back, \"Lemme just rinse off really quick and we can make a plan.\"\n\n\"There's already a plan but go ahead and shower and we'll catch you up.\" She said putting copper hair behind her ears. \n\n\"Great, I'll be quick.\" I said hurrying into the bathroom. I closed the door and took my shirt off tossing it on the granite counter before taking off shoes, socks, and undoing my belt and shorts. My boxers came off last and I had just stepped out of them when the door opened and Liv peeked her head in, \"Are you naked?\"\n\n\"I am now.\" I said confused.\n\n\"Good!\" She said bursting into the bathroom and grabbing my hand. My previously school day fianc\u00e9e was now as naked as the day she was born. Her slim, pale, body, tight butt and small breasts bouncing as she dragged me out of the bedroom. \n\nShe pulled me back into the room where I immediately understood what was happening. Amy was laying on Liv's bed, her lean, young, figure, reclined with one knee bent and every inch of her body bare and exposed. \n\nLiv let my hand go and hurried to the bed, \"Come play with us!\" She said excitedly before jumping onto the bed. I walked over looking at the tan and pale naked girl sharing a twin. Amy was laying on her stomach and she laughed looking up at me with big brown eyes. She let them float down to my hardening shaft and smiled. \n\n\"He's my new favorite stress management.\" Amy cooed \n\n\"Was this your plan?\" I asked Liv as Amy tickled my shaft with her fingertips until it stood straight up. \n\n\"We didn't like our original plan, so we... improvised.\" She said moving red hair from her face. \"Besides, like you aren't going to love this.\" \n\nLiv had sat up and she leaned over between Amy's legs who parted them and flared her hips. Amy gasped and giggled as Liv started to lick her from behind. \"Holy shit... mmmm fuck...\" She panted.\n\n\"Watching my beautiful girlfriend play with another girl? What's not to love?\" I said watching Amy's face tighten with pleasure, fighting laughs as her roommate ran a soft pink tongue over her pussy.\n\n\"Ah ha... fuck... Liv...\" She moaned and giggled. My pale girlfriend's face was buried between her legs, one hand gripping her ass. Amy looked back at her and then up at me, \"Think she can taste your leftovers from last night?\"\n\nLiv lifted her head and licked her lips, \"No wonder you love doing this, it's so fun.\" Liv ran a finger through Amy's slick pussy and giggled at her moans and squirms. \n\n\"Your girlfriend is quite the carpet muncher.\" Amy panted before licking my shaft.\n\nLiv looked up, \"There's no carpet here.\" She giggled and slid her finger in. Amy moaned and grabbed the blanket. She raised up on her hands and knees and took me in her mouth eagerly. \n\nShe rocked her head back and forth sucking gently and letting her tongue slide along my shaft as she did. I could feel her moaning around my shaft. Liv had climbed to her knees and draped herself over Amy's backside, hungrily tonguing her pussy and fingering it. \n\nI gently fucked her moaning mouth and she held still while I slid my shaft back and forth. I felt her tongue and her throat pulling on me as sounds filled her chest. I put my hands on her head and my fingers in her black hair. \n\nHer moans got louder, and she struggled to keep her full lips closed around me as Liv quietly ate her roommates pussy from behind. Liv leaned up and looked at me across Amy's ass and back with a wet smile. \n\n\"Hey,\" She said playfully.\n\n\"Yeah?\" I said breathlessly as Amy bobbed on my cock.\n\nSuddenly Amy opened her mouth and hung her head moaning loudly and her shoulders shaking. \"Oh fuck! Mmm holy shit...\" She swore.\n\nI looked at Liv who gave me an evil look, \"I'm in more of her holes than you are.\"\n\n\"Ah- ah ha... mmmnn fuck oh fuck...\" Amy groaned as Liv flexed her wrist. \"She's fingering my asshole, fuck... your girlfriend is fingering my asshole...\" Amy panted and grabbed my cock with her hand trying to focus on stroking it as Liv overwhelmed her by fingering her ass. \n\nI watched Amy struggle for control while Liv's fingers played in her asshole. Liv relented and pulled her hand away, leaning over to kiss the small of Amy's back before coming over to me. She climbed one knee on the bed and gave me a long hot kiss. I could taste the tartness of Amy's pussy all across her mouth and she seemed to relish sharing it with me. \n\nShe parted the kiss holding my neck and panting, \"Thanks for letting me share her for a bit.\"\n\nI smiled into the kiss, \"She's your roommate,\" I replied.\n\n\"Mmm but she's your plaything.\" Liv said back, running her finger over my tip which was slick with precum. \n\nAmy sat up and gave us a look, \"What are you two whispering about?\"\n\nLiv smiled at me and leaned away, \"Just about how I can't wait to watch you make him groan and squirm and forcefully empty his cock wherever you want.\" \n\n\"Mmmm\" Amy cooed, \"I can't wait for that either.\"\n\nShe laid on her back, head on Liv's pillow and spread her legs, her brown pussy glossy with where Liv had teased her until she was messy. She waved me down, and I climbed onto the bed looking at her perfect, tan figure. The way her flat stomach teased her hips and trim legs down to her cute toes. Her breasts sat soft and round on her chest and the wet lips of her pussy were coated.\n\nI leaned over and she wrapped her arms around my neck. I put the tip of my cock against her wet folds and pushed, slowly sliding into her. Her pussy gripped me as I slid in, I could feel her walls already pulsing as I reached my cock into her inch by inch.\n\nShe moaned, one hand grabbing her breast, the other grabbing the end of the mattress. I started to rock my hips jamming my cock into her. Her stomach flexed with pleasure and she moaned louder, her eyes squeezing closed and her ankles locking behind me. \n\nLiv leaned in to egg me on, watching intently as I hammered Amy's tight pussy. \"Fuck her until she screams, fill that bitch with cum.\" She said loudly.\n\nI leaned over to Amy who held my neck, looking at me through weak eyes, \"Want more handprints on your ass?\" She smiled.\n\n\"Fuck yes,\" She panted. \n\nI slid my cock out of her and she rolled over and climbed onto her hands and knees. Her legs were spread, and her ass was stuck out. She was looking back at me like a animal eager for breeding. I slid my cock back in and started pounding. She groaned and yelled, her tan body flexing and sweating as I hammered her pussy.\n\n\"Hit me!\" She barked. I slapped her ass hard with a loud pop and I felt her pussy squeeze. \"Again!\" I spanked her again and she groaned, \"Fuck yes!\" She screamed.\n\nI grabbed her hair and yanked back, she yelled and pulled against my grip. I aggressively kept her head pulled back as I plowed her. Her ass slapped against me and her pussy made audible smacking sounds. I shoved her face down into the blanket, hammering her pussy with my hand gripping her ass as I did. \n\nBlack eye liner was running down her cheeks from her watering eyes and my grip left red marks on her butt cheeks. I spanked her adding to the red spot. She wailed and cried gripping the blanket with both hands, her sleek, tan, body glistening with sweat.\n\n\"Fuck! Fuck yes, fuck me hard, fucking shit you're so rough. I'm gonna fucking cum!\" \n\nShe buried her face into the mattress and moaned into it. I yanked hard on her hair and held her face up, keeping a tight fist so she couldn't pull away. She shrieked into the room her whole-body convulsing, her pussy clamped on my cock and her legs shaking.\n\nShe collapsed onto the bed, still twitching, panting, desperately for breath. I pulled my cock out of her puffy, used pussy. Liv was watching, pink in the face and she gave me a whimpering, moaning kiss. She pulled away stroking my slick cock.",
        "\"You have to cum in her, keep fucking her, you still have to cum.\" She whimpered almost pleading. She kissed my neck and whimpered, \"Wear yourself out in my slutty roommate.\"\n\nA breathless Amy looked back at us, laying prone on her stomach and propped up on her elbows. \"Mmm he can wear himself out wherever he wants.\" She wagged her hips.\n\n\"Does that mean...\" I panted.\n\nLiv laughed in my ear, \"Mmmm fuck her little asshole.\"\n\nAmy scooted down the bed and looked at Liv, patting the space in front of her. \"Lay down roomie, I owe you.\" \n\nLiv climbed onto the bed and leaned back against the headboard, spreading her pale legs exposing a pussy that had dripped and smeared across her thighs and trailed a thin string of clear fluid onto the sheets.\n\nAmy scooted back up, so her head was in Liv's lap and started licking, using her hands to hold her ass open. Liv moaned loudly covering her mouth, her shoulders rocked forward as her stomach clenched, shaking her small breasts. \n\nI watched my ginger fianc\u00e9e have her pussy delicately licked by her gorgeous roommate as I ran my tip across Amy's slick folds before putting it against her brown asshole and pushing. Amy groaned and grabbed the bed with one hand. \n\nHer asshole was very tight, and I worked it in slowly, just a few centimeters at a time, letting her own lubricant guide me in until I was slowly gliding deeper. She moaned and grabbed Liv's leg, digging her nails into the tight, pale, flesh. \n\nI started moving in and out slowly, Amy trying to keep eating my leaking girlfriend as I fucked her ass gently. Liv's body rolled against Amy's tongue her skinny body losing control as the hot, soft, flesh tickled her. \n\n\"Your man has fucked all my holes.\" Amy whimpered helplessly as my cock stroked in and out of her ass. \"Oh fuck... he's had his cock in me every way possible.\" She leaned down and resumed eating Liv who moaned into her hand and held Amy's head, grabbing her hair.\n\nAmy's asshole gripped me tightly as I slid in and out forcing moans from her chest. I held her ass cheek in my hand. She hung her head and groaned, digging her nails into Liv as I started to pump faster. \n\n\"Agh, oh fuck...FUCK!\" She screamed and panted before plunging her tongue against Liv's dripping pussy. She licked and lapped at Liv who pushed her palm against her mouth and moaned, sliding down the headboard to push her pussy into Amy's lips. Both of their young bodies were shaking and sweating.\n\nLiv suddenly screamed into her hand and started to quake. Her hand ripped away from her mouth and reached back grabbing the headboard letting her moan violently into the room. Her flat stomach clenched, her legs shook, and her face flushed red as orgasm thrashed her.\n\nThe firm grip of Amy's ass was making my cock swell and I was losing focus trying to stay steady. Amy noticed and spread her legs wider reaching back to hold her ass open. As she cried, her slutty body taking the force of my cock, she taunted Liv. \"He's gonna cum in my asshole, ahhh mmnnn fuck, he's gonna cum in me.\"\n\nI kept pounding until a groan roared from my chest and I felt my cock spasm in her gut. Hot cum blasted out in jet after jet, until it flooded her, and I could feel the heat on my slowly softening cock. I slid out and cum came out with me. Her asshole was puckered and coated with slick cum that pearled and oozed out dropping onto the bed.\n\nI panted, cum still stringing out of my limp member onto the bed fighting for breath. Amy climbed onto her hands and started kissing Liv's red, heaving neck. \"Your man kept looking at my ass, every time he came over. Now he's fucked it and filled it with cum. He sucked on my tits and let me ride him all night last night.\" She dragged her tongue across Liv's neck and nibbled her ear. \"He's just a cheating stud, he'll fuck anyone. You're just his back up.\" \n\nLiv whimpered as Amy mocked her and kissed her, finally pulling Amy into a soft, erotic kiss. I watched their tongues play and their lips tug for several moments. Amy leaned away as Liv put a hand on her breast and giggled, \"Do I need birth control for my ass, it's filled to the brim.\"\n\nLiv smiled back, \"Let me know when you need a refill.\"\n\nAmy smirked, \"I know where to find him.\" \n\nAmy raised to her knees and climbed off the bed looking at me, \"thanks for all the...\" She paused and stretched, \"Mmm screams,\" She winked at me, \"Playboy.\" And then walked into the bathroom. I watched, trying not to admire the massive red mark on her ass. \n\nLiv slung herself forward, catching my neck and pulling me onto the bed, our heads at the foot. She was looking me over with her brown eyes, bright copper hair hanging in her face. I moved it behind her ear, and she pulled herself against my chest.\n\n\"You are not my back up. This is always because it's what you want.\"\n\nI felt her start laughing. \"What?\" \n\nShe kept laughing and looked up at me, \"I love the idea of being the back up.\"\n\n\"Why?\" I asked louder than I intended. \n\n\"It means you always come back to me when you're done.\" She moved up and kissed me holding my face. \"I'm happy you enjoyed her ass so much after spending so long trying to secretly check it out.\"\n\n\"I did n-\" I started to say, but she put a finger to my lips. \n\n\"Shhh, its ok. It's how I know what to shop for.\" She said cuddling closer. \"You're so fun.\"\n\n\"If you give me a minute, I can show you how fun I am.\"\n\n\"Ok but you have to wash Amy's ass off first.\"\n\n\"Well obviously.\"\n\n\"And when you're done, we can discuss a really important topic.\"\n\nI raised an eyebrow, \"Uh oh, what topic is that?\"\n\n\"Who's cuter: Vicky or Lacie?\" She gave me a nasty grin."
    ],
    "authorname": "DragonLairReads",
    "tags": [
        "cuckquean",
        "reverse cuckold",
        "anal",
        "redhead",
        "asian",
        "cheating",
        "threesome",
        "creampie",
        "sorority",
        "pussy licking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-crazy-girlfriend-pt-04-sorority"
}