{
    "title": "The Burdens of Others",
    "pages": [
        "I feel compelled to start with a warning. If you've read my stuff before, you've probably noticed the frequent apologies for long wait times between chapters due to medical school. I haven't actually used much of that experience in my writing up until this story. It is also based on my time volunteering in a field hospital (though not one as extreme as this one). As such please be aware that this story will touch on some pretty tragic and traumatic topics that will not be comfortable for all readers. The setting and the events that take place are extreme outside of the erotic content. \n\nThat being said, I hope you enjoy it if you choose to continue reading. \n\n****************** \n\n\"They carried the sky. The whole atmosphere, they carried it, the humidity, the monsoons, the stink of fungus and decay, all of it, they carried gravity.\" \n\n\u2015 Tim O'Brien, The Things They Carried \n\n***** \n\nThe floodlights around the hospital lit most of the pebbled rise at its back, making the ascent easier, at least initially. Above the line of glare, Ed could make out a single black figure silhouetted against the night sky. He scrambled up, bottle in hand, to the top of the rise. Diyaa turned towards him, the ever present rifle resting across his chest. In the dark Ed couldn't see the disapproving look as the whisky sloshed in the bottle but he knew it was there. \n\nDiyaa nodded down the slope and it took Ed a moment to make out the woman sitting by herself, slumped against an outcrop. He took a step towards her before Diyaa stopped him with a hand. \n\n\"This time is no good.\" A week of hearing his accent had made the man more comprehensible, but only just. \"Doctor to go home.\" \n\n\"Yeah,\" Ed said. Diyaa removed his hand and Ed made his way down, stumbling on the rocky terrain. \n\nHe settled next to the woman. Arms folded against the chill, he turned his face up to the impossible sky above them. Moonless, the sky revealed too many stars to make them out individually until the bright pinpricks amassed into an explosion of light splattered across the night. \n\nBut the wonder was dimmed, the dark figure at his side pulling him into the palpable sadness around her. He opened his mouth and closed it. Why had he come here? What could he say? You did everything you could. It's not your fault. Some trite shit that had never worked for him. Don't be so hard on yourself. What could he really do for her? What made him think he could be of any comfort? He'd known her a week after all. If Diyaa hadn't said something he could have assumed this was normal for her after a day like she'd had. \n\nHis breath slipped out, wordless and silent into the cold. Here the chill was more than just the fall in temperature, it was the absence of the heat that permeated the day. That lack left the same void with every sunset, with only the frigid sky to fill it. \n\nThe back of her hand touched his arm and he looked to see it open and expectant. He pressed the neck of the bottle into her hand and let her pull it towards her. The lid whisked in the threads and the liquid lapped against the glass as she tipped it into her mouth. Even with only the stars to light the night he could see the glint of at least one other empty bottle at her feet. \n\n\"We have leave starting when we get back,\" he began, tone hushed but the sound felt intrusive in the quiet. \"My friend's loaning me an apartment on the beach.\" He turned towards the shadow next to him, the bottle in hand glinting as she lifted it again. \"You could come with me.\" \n\nDesert nights had a particular stillness to them. The expanse just beyond the capacities of human sight loomed large and bleak with possibilities most wouldn't want to consider. But it was the possibility next to him he hadn't thought through, that he didn't really know this woman, and she might not want him there. \n\nHe sat for a while, until it was clear she didn't mean to break the silence with anything more than the sound of her burning through the bottle he'd brought. Muscles tensed to begin the act of standing when the back of her hand came back to his arm, the tinkling sounds of liquid on glass confirmed she was offering back the bottle. \n\n\"Yeah.\" Oriel's voice was a rasp in the dry air, her tone brought lower by the weight of the day and so many days like it. \"Sounds good.\" \n\n*** \n\nA week before, Ed had arrived with the rest of his team on his first observation trip to Jordan. It had been a tough few weeks, working their way in and out of the various refugee camps they'd been assigned. This was the last, and arguably the worst. Technically in the no-man's-land between Syria and Jordan, tens of thousands of asylum seekers were held in limbo by bureaucrats and safety checks deep in northern deserts. \n\nThe field hospital appeared on the horizon long before they reached it. The two large tents were no more than beige humps surrounded by layers of spidery fencing that became more formidable as their convoy approached. Beyond it several satellite tents became clear. Their camouflaged colors were unintentional, covered as they were by layers of the same dust that swirled around their vehicles. \n\n\"We have one week scheduled here, which I had to wrangle from the boys upstairs.\" The head of the UN team spoke to them as they bumped along the dirt road for hours. \"We have to be efficient and quiet about it. The Jordanians aren't happy we are here and ISIS has hit this place twice in the last year. Be efficient and be quick, there's a lot of ground to cover.\" \n\nThe guards led them first to the largest tent where beds lined the walls; a few cots lengthwise down the middle creating corridors of patients the nurses moved up and down with hasty precision. The air hung heavily, undisturbed by the creeping winds of the desert, and warmed as it was by the blazing sun through the tarps. The smell of field hospitals lacked the sharp, acrid smell of western hospitals, but beneath the sweat and illness Ed could still make out the powdery, rubber smell of latex. \n\nHis boss stopped one of the nurses and spoke in better Arabic than Ed could dream of achieving, and was directed through the flaps at the far end of the tent. Their boots trampled over the sheets of plywood connecting the main tent to a smaller one. His boss reached for the flap when a scream pierced the air from inside the tent. \n\n\"Any of you assholes with medical training?\" the doctor shouted, upon seeing them rush towards her. This tent resembled an operation theater the same way a child's drawing looked like a house. The intention was clear, but the ramshackle floors, stacked supplies and dirty equipment were only the beginning. Five men lay in various positions, moaning, screaming, or deathly still. Two had made it up on cots, two more were on tarps on the floor. The man on the operating table bucked against the small nurse, who had to fling herself over him to hold him down. The doctor's bloody hands flew through sutures as the man screamed and blood spurted as he jerked away from her. \n\n\"Dr. Evans?\" Ed's supervisor began. \n\n\"Yeah, listen,\" she cut him off, \"I've got a car full of people who decided to play chicken with a border patrol and spent most of their valuable time arguing to get them here, so unless you are helping, you are leaving.\" She must have been seven feet tall to make all of them feel that small. \"You,\" she pointed a bloody, gloved finger at Ed's friend Joe, \"Come here and hold him down before he breaks more bones.\" \n\nJoe leapt to obey without a glance back at their supervisor. Ed took it as a sign when the man didn't protest. \"I've got medic training from the Marines,\" Ed volunteered. \n\nDr. Evans whooped, \"Now he decides to tell us!\" She jerked her chin towards the man's leg. \"Think you can set that?\" Her slippery fingers tore open another suturing kit and she set about trying to close the bleeding vessels in the man's destroyed upper arm. Joe was staring at her wide-eyed as he held the man down as best he could. \n\nEd took a look at the leg, slipping into the too-small latex gloves, familiar smoothness closing on his fingers in a vice grip. \"Not as well as you could but I can give it a whirl.\" Ed attempted something close to confidence in long-unused skills. \n\n\"Don't get cute, cowboy,\" she said, eyes fixed on her work as her fingers flew through the stitches. \n\nEd pressed slightly to get a feel for the break and the man screamed, bucking against Joe and disturbing Dr. Evans as she worked. She didn't spare him a glance. Ed took the man's foot and held it steady before pulling it down and into alignment. The man passed out instantly. Dr. Evans finished her stitches and shouted something in Arabic to the nurse, who came over to bandage the man's wounds. \n\nShe moved down towards the injured man's feet, stripping and replacing her gloves as she went. A quick glance and a nod was all the feedback Ed got for the best job he thought he'd ever done. \"Splint it soldier, when you're done we got more.\" \n\nFor six hours he followed her from person to person, stumbling through the Arabic and trying to remember training he'd left behind six years ago. Standing next to her over a girl with a shattered orbit and four broken fingers, Ed realized he was looking down at the top of Dr. Evans' black hair. Impossible. Her arm brushed against his and he couldn't help but realize how slim she was, and yet she had just performed a hip reduction on a man who was almost as big as he was. When he missed her instructions she turned and fixed him with warm brown eyes fringed with thick lashes. \n\n\"Soldier, I know you expected to be cruising around taking notes today but you gotta focus here if this girl's going to be able to see out of that eye tomorrow.\" \n\nEd nodded, trying to ignore the gentle slope of her cheek as it ran into the line of her chin and down her neck, disappearing beneath the large scrubs she wore. \n\nBy the time everyone was seen to, Ed felt like he'd been through Basic again. He collapsed into a plastic stacking chair that groaned under his weight. Her bloody canvas sneakers stepped into his line of sight and he felt like the angle was right this time when he looked up to her face. \n\n\"Thanks, soldier. You do good work, unlike these good for nothing\u2014\" her sentence devolved into Arabic too fast for him to follow as she redirected her attention towards one of the guards. The older man shrugged his shoulders and made a rude gesture. The doctor laughed. \"I kid,\" she said turning back to Ed. \"Diyaa is good people, just doing his job. Heaven forbid the University springs for a second doctor instead of a robust security team.\" She crouched down next to his chair, energy seemingly unsapped by the day. \"Then again, it'd look bad if a doctor died instead of a few hundred patients, y'know?\" \n\n\"Um, yeah\" Ed replied dully. Something about her was eminently distracting and he was struggling to keep up. \n\n\"Anyway, Soldier, where's your supervisor? I need a word.\" \n\n\"Ed,\" he said, by way of introduction. \n\n\"Oriel,\" she replied, not missing a beat. \"Supervisor?\" \n\n\"Um, yeah Henry Jennings. We were supposed to\u2014\" He stopped as the topic of discussion came through the flaps bringing a cloud of dust with him. \n\n\"Good, You're done Razavi? We are way behind schedule.\" \n\n\"Mr. Jennings?\" Oriel spoke up, somehow silencing a man Ed had never seen interrupted. \"I'm gonna need your man here for the duration of your stay.\" \n\n\"Now Dr. Evans, I know you are short staffed but I need every available\u2014\" \n\n\"I'm just going to stop you right there. I know you've got a lot of ground to cover and I know better than most how much there is to report on out here, but short staffed isn't close to the situation we've got here. I have been the only doctor here for three months, there is no one else coming until the Jordanians increase their military presence, and I am really fucking tired. Do me a solid and take the other eight guys you've got to write the reports and leave me the only person with medical training between here and Amman.\" Jennings mouth was still open when she finished and he was looking at her with a mixture of incredulity and respect. \"Please,\" she added. \n\nJennings put up a good fight. They don't let just anyone run teams in the most dangerous parts of the world but even Ed could see Jennings was outmatched. He waved goodbye to his team as they pulled out towards their quarters with the Jordanian military and turned to receive instructions from the woman grinning at him from the entrance to the hospital. \n\nBunking arrangements were swift, and decidedly worse than what he would have gotten had he stayed with the rest of them. \n\n\"It's not much\u2014\" she gestured at the sad little cot positioned on the larger side of her tent \"\u2014but if it makes you feel any better, you won't be sleeping much.\" Her equally abysmal bed was just through the zip-up barrier that divided the tent in two. \"I'd set up the other doctor's tent for you but we recommissioned it for a women's unit.\" \n\nEd nodded and turned to see her disappearing through the flap. \"C'mon soldier!\" he heard her call from outside and he dumped his pack in his haste to follow her. \n\nShe came to him that night. He hadn't even considered the possibility when he'd finally collapsed in his cot worn out from the day. She climbed on top of him as his eyes opened to her blurry form silhouetted against the glow of the flood lights outside. \n\n\"Mind if I cut in?\" she said, dropping her face close to his and smiling. She smelled of toothpaste and soap. She kissed him before he could answer, but he was quite familiar with that desperate passion that can only connect two people who find themselves at the ends of the world together. It was an old friend from his time in Afghanistan, where the same clawing need for companionship had informed so many ill-fated relationships in those heightened moments. But as he brought his fingers into her thick hair, he felt something else. \n\nShe ground down on him, naked underneath the oversized shirt she wore. Her hands finding his waist band and slipping under the elastic before he had time to react. His hand flew to hers just as her fingers curled around his erection, grasping her impossibly delicate wrist and pulling her touch from him. When she leaned away from her kiss in surprise he pulled her palm up to his mouth, placing a kiss on her wrist just above where his fingers held her still. \n\n\"This isn't the way I usually do things,\" he said softly, not wanting to scare her off too quickly. He should let it go this time, allow her to stay where she was and use him as she saw fit, even if it wasn't to his taste. He tightened his grip ever so slightly. \n\n\"Well, soldier, we don't have endless time for foreplay, so what do you say we get to it my way?\" \n\n\"Sometimes taking a bit more time can be infinitely rewarding.\" He took her captured hand back to place a kiss at the base of her thumb before he took the muscle between his teeth and bit down ever so slightly until her breath caught. \"You might like my way.\" \n\nIn the dark he could only guess at what lay behind the silence that followed. Something about her strength, her force of personality, told him he should have kept it vanilla; let her steamroll over him here and in the hospital. It was only temporary anyway. \n\nAnd then she leaned over, her wrist still clasped in his hand. \"Show me.\" \n\nShe yelped when he leveraged himself out of the cot, taking her with him. Her legs held his waist as he dropped back down, and when her back met the soft lining of his sleeping bag his body caged hers beneath him. He never released her wrist as he reached over to his pants, sliding the canvas belt out from the loops with a soft sound menaced only by the clinking of the metal buckle. He held it up so she could see it. \"If I do anything you don't want me to, say red.\" He waited for her nod. \"Yellow means slow down.\" He took the belt and looped one end around her wrist, then the other. \n\n\"Just make sure these are slip knots.\" Her voice seemed softer, the tone less commanding despite the content. \"You never know when we might have to get back to work.\" Her leg ran against his, her inability to wait for him clear when she wrapped both legs around his waist and tried to pull him closer. He reached down and swatted her thigh. A gasp of surprise coupled with her grip falling away made him smile. \n\n\"I can have you out of this in under five seconds if you want me to.\" He secured the end of the belt to the exposed metal rod at the top of the cot, leaving her hands resting against it just over her head. She squirmed a little but didn't try to force him against her again. \"What are the words?\" \n\n\"Are you seriously giving me a pop quiz?\" she jerked her hands and raised her head. \"Time is precious, soldier, and so far your way is not proving its worth.\" \n\nHe landed another smack on the inside of her thigh and she jumped but didn't respond. His fingers slid up her spread legs. \"I asked you a question.\" \n\nShe gave him an annoyed sigh that quickly tensed to a whimper as his fingers found her wet slit. \"Red to stop.\" Her voice was strained as he circled her clit. \"Yellow to slow down.\" \n\n\"Good girl.\" \n\nHis finger penetrated her and her hips came to meet his hand. He watched her face as he explored her flesh further. He saw her grit her teeth in the hazy light of the tent and decided she'd proved she could wait, if only a little. He shifted lower, his legs finding their way to the cold floor of the tent, and buried his face between her thighs. \n\nHer legs wrapped around him even as he pinned her hips in place. It was still a battle, despite her position. He felt her wrestle with the blinds even as he tasted her arousal, feeling the push and pull of her legs as she struggled with him for control. Ed reached up, curving both hands under her knees and pulling her legs up and out. He leveraged his weight up so he could hold her, bent in half and helpless while his tongue found her slippery clit again. Her smell reminded him of deep snow despite the heat beneath his lips. \n\nHer sounds grew, the muscles beneath his fingers tensing and shuddering as he kept up his end of the bargain. Her orgasm hit hard. He felt the groan, made deep within her chest, vibrate against his mouth. He grinned at her as he repositioned himself above her, her legs still hooked over his arms, pushed wide and up. \n\n\"Soldier,\" she breathed before he brought his finger across her clit, too hard to be comfortable in her state, but not enough to cause real pain. \n\n\"Condoms.\" \n\n\"In my bra.\" \n\nHe released her legs and slid the large t-shirt up her body exposing her lithe torso and serviceable sports bra. Foil crackled as he ran his hands over her hidden breasts. Another time perhaps. The familiar smell of latex told a different story this time and Ed reestablished the hold on her legs. \n\n\"Holy shit,\" she ground through a groan as he stretched her channel. \n\n\"Tell me if it hurts.\" \n\nHer answer was a wordless, violent shake of her head as he pressed his advantage until their hips met. The cot creaked underneath them and he started slow, moving in and out deliberately, getting to know the feel of her body. \n\n\"Fuck, come on,\" she growled. \n\nHe snapped his hips forward and she gasped. \"Don't be rude.\" He pushed his pubic bone against her clit and began to move in small, grinding circles against her, watching her face as she struggled to keep from insisting again. It was important, he'd tell himself later, to move things along. It wasn't giving into her so much as practically the best choice for that moment to start riding her with force, pushing her towards another orgasm. This time he felt her come, gripping his cock as she chanted 'yes' over and over. Her body body bowed and tensed with the release of energy so wholly different than everything he'd seen from her that day. It lacked the frenetic quality of the way she darted from one task to the next. This was one complete thought, mind and body consumed with a singular intention he had provided. ",
        "She was asleep in his sleeping bag by the time he returned from disposing of the condom in the cracked bucket in the tent's corner. He smiled, and settled into hers, where he would dream of winter landscapes far away. \n\n* \n\nThe next day he was fumbling through some stitches when she appeared next to him. The hum of her nearness increased his clumsiness until she took up the task for him. \n\n\"I need your advice on some inventory, Soldier,\" she said as she finished. \n\n\"The name's Ed,\" he insisted just short of petulantly. \n\nShe just gave him a look. He followed her to the tent where supplies were stored, noting her guards taking up posts at a safe distance. Rickety shelves dug into the dust covered ground; the tarp underneath them both long since buried. She led him back behind piles of empty cardboard boxes where a large wooden crate sat. She hopped up on it, legs dangling off the side. \n\n\"What help did you need?\" Ed said, deciding against leaning on the shelving. \n\n\"Oh, you know,\" A mischievous grin spread across her lips, drawing his gaze and causing all manner of untoward thoughts. \"Stress relief.\" \n\nEd grinned back. He moved between her spread legs and met her expectant lips with his own. Her hair felt thick and heavy in his fingers as he formed a fist at the base of her skull and pulled her head back and away from his kiss. Her gasp slid into a groan as he worked his way down her neck. He could feel her desire to say something, to move things along. It was in the clenching of her fingers on his shoulders, the tension in her shoulders as he continued holding her still. \n\nKeeping his grip on her hair he pulled her down from the crate and turned her around, placing her hands flat on the top of the crate so she was bent over at the waist, releasing her only when she kept the position without fidgeting. \n\n\"Ed.\" She gasped as he pushed her scrubs down. \n\n\"Now you know my name.\" he pushed his hand between her legs to find her wet and waiting for him. \n\n\"I'll call you anything you want, soldie\u2014\" he cut her off with one deep thrust. She groaned as he set his own pace, driving her up on her toes with the force of his hips against her perfect ass. He sank his fingers into her soft flesh and she tried to wriggle back towards him. It was a contest of wills but he won it, this time. He brought his hand to her clit, gently at first and then harder until she came, her pussy contracting along his dick in a way that made him groan and he followed close behind. \n\nThat afternoon three women came in from the camp and she disappeared with them into another tent. He tended to two men with bronchitis and a large family who were new to the camp, still bearing the wounds of their flight from Syria. The nurse took him on rounds to some of the patients who weren't being taken back to the refugee camp that night, but between her strong use of dialect and his less than stellar Arabic, it took longer than he would have liked. \n\nThe nurse gestured to a girl wrapped in a head scarf, swollen belly prominent under her sheet. \"Amira,\" the nurse said, handing him a chart he could only just make out. Handwritten Arabic raced across the page in great lines and swoops. The numerals caught his eye and he interpreted the number of weeks and the size of the girl's stomach as indicating twins. \n\n\"Ahlan wa sahlan,\" Ed began, grinding through his memorized greeting. \"My name is Ed, how are you?\" \n\n\"As salam aleykum,\" the girl said back with a smile. \"My name is Amira,\" her English surprised him, the look on her face fully satisfied by his shock. \"Welcome to the hospital, Ed.\" \n\nHe started and then smiled, eyes darting over to the nurse who also looked smug at his surprise. The nurse left him there, saying something to Amira about how she'd start all the foreigners on her bed next time. \n\n\"Amira, you speak wonderful English,\" he said, taking a seat in the cracked plastic chair next to her bed. \n\n\"Thank you. My father taught me mostly, but Doctor Evans has been keeping me educated these past few months.\" \n\nEd glanced down at the pages in his hand but quickly realized he would never get the story from there. His training did not include how to take patient histories from pregnant refugee teenagers, and he wouldn't begin tackling that process now. \n\n\"Well, it seems I might also be of assistance in that capacity,\" he said, tossing the pages to the foot of the bed. \"What's the hardest part for you?\" \n\nAmira smiled, her pale face losing some of weight she carried when he didn't ask her to retell her story. \"The irregular verbs,\" she said with a laugh. \"And the spelling, definitely the spelling.\" \n\n\"Even we don't know how to spell,\" he smiled back, \"So I wouldn't worry about that. But I do know a trick or two about remembering some of the worst ones.\" \n\nHe spent nearly an hour by her bed, his first genuinely calm moment of the past few months. The girl had an incredible capacity for conversation and it was soothing. He liked her instantly and effortlessly, but the nurse claimed him to help with another infection he had limited capacity to treat, and then again later to bring out the food packets his team had left for the patients to eat. \n\nHe rolled into his bed before the sunset, exhausted from the night before and yet thoroughly pleased with having actually physically helped, impromptu English lesson and all. He didn't envy the team out surveying the landscape and writing reports that would never really make a difference. \n\nThe sound of the tent's zipper woke him up sometime long after dark. \n\n\"Oriel?\" he spoke into the dark of the tent. \"Everything okay?\" Her form was silhouetted by the glare of the floodlights muted through the walls of the tent. \n\n\"Yeah.\" She didn't sound alright. \"The last doctor left a case of whiskey behind, and I can't finish it by myself.\" \n\nHe groaned as he sat up. \"Seems like I might be able to help with that.\" \n\nThey sat outside the tent, wrapped up in the same blanket against the chill of the desert night. \n\n\"I fucking hate the desert,\" she said, taking a sip from the bottle and passing it to him. \"One minute the sun is cooking your head like you've stepped into an oven and the next the night is trying to freeze you from the inside out. Who the fuck thought this up? Who thought this was a reasonable climate to throw in the mix?\" \n\nEd chuckled as he took a long pull of the fiery liquid. \"You aren't helping yourself in those scrubs, you know.\" \n\nHer lip curled. \"It's laundry day.\" \n\n\"Yeah? How long has it been laundry day?\" \n\n\"Well I brought enough clean clothes for a week, so...\" She took the bottle back and took a longer swig. \n\n\"No one here to help you with that?\" \n\n\"There's no one here to help with just about anything.\" Her tone had shifted ever so slightly and Ed took the hint. For a few minutes they sat in silence. \n\n\"I have a funny laundry story,\" he said. She passed him the bottle with a noncommittal sound of encouragement. He didn't say anything. A moment passed while he drank and passed the bottle back. \n\n\"Well?\" she said finally. \n\n\"Well, what?\" his voice all innocence. \n\n\"Your laundry story.\" \n\n\"Oh, you missed it.\" \n\n\"What?\" She looked at him completely confused now, the somber look was gone. \n\nHe grinned. \"You were sulking and forgot to laugh at my funny, topically-relevant story to distract you from your pity party. Shame really, it's a great story.\" \n\nShe stared at him for a beat, no doubt searching her memory for the missing piece of their conversation before realizing it didn't exist. Her lips split into a grin to mirror his own. She laughed, her usually low voice going up an octave and escaping her lips in small bursts that brought him a smile. \"That part with the polar bear is a bit much. People believe that?\" \n\n\"Well\u2014\" Ed cleared his throat guiltily. \"I may have embellished that part. You looked like a tough nut to crack so I had to go above and beyond. But the part with the cross dressing quarterback is totally true.\" \n\nShe punched him playfully in the shoulder. \"Mission accomplished, soldier\" \n\n\"Ed,\" he said again. \n\nShe shook her head. \"I don't buy it.\" \n\n\"What's that supposed to mean?\" \n\n\"You just don't look like an Ed.\" She gave him an appraising look. \"Also Ed Razavi rings wrong, even if your parents were trying to blend in.\" \n\n\"Well ferreted, Doc,\" he said with a chuckle. \"Seyyed Razavi, at your service. Ed started as a joke in grade school and just kind of stuck around.\" \n\n\"So where's the name from?\" \n\n\"Same place my parents came from; Iran.\" \n\nShe smiled back at him. \"I didn't know they made Persians your size.\" \n\nHe puffed out his chest. \"This here is American born and bred, lady.\" \n\nShe rolled her eyes \"You Americans, always with the big talk.\" He laughed and she smiled, accepting the bottle back. \n\n\"So I've gotta go with Canadian, given your snarky attitude,\" he said. \n\nShe gave him a nod. \n\n\"And I'll say Quebec given that you've made no effort to disguise your name.\" \n\nShe laughed. Ed decided he liked the sound. \"You are right, monsieur, ten points to America.\" \n\n\"Well if we are awarding points I'll give you twenty for being the first to figure out 'Ed' isn't short for 'Edward' or something. But-\" He made a regretful sound of sucking air through his teeth. \"I gotta take ten for not guessing the exact location of my heritage. So that'll put us in a dead heat.\" \n\n\"I bet ten points I come first.\" She turned toward him, the bottle finished, forgotten, or otherwise lost. \n\n\"No way I'm taking that bet.\" \n\nHer mouth was sweet and warm from the alcohol, her body's heat met his hands through her thin scrubs. He drew her to standing to make their way back into the tent. Once inside she ignored the cold and shucked her clothing fast before trying to help him with his. He grabbed her hands though and pulled them behind her back. \n\n\"You've got to learn to keep your hands to yourself,\" He kissed her and she squirmed. He took both wrists in one hand and ran the other down her body. \n\n\"You take too long,\" she purred, rubbing herself against him. \n\n\"Only when you're moving so fast.\" He kissed her harder, swallowing whatever response she had for him. \n\nShe struggled against his controlling grip but when he pulled back from the kiss he saw nothing in her face to slow him down. His fingertips moved slowly over her skin, down the pebbled nipple and across her flat stomach. He kept watch on her face, waiting till she tried to dictate terms again. \n\nHe didn't wait long. \"Seyyed, c'mon...\" she groaned, frustrated. His fingers closed over her nipple, digging deep into the tight bud. She gasped in pain and surprise. He released it and closed his palm over her breast, soothing the ache with the heat of his hand. For a moment she looked livid, and then aroused. She moved towards him for a kiss but he denied her the satisfaction, dipping his head and bringing his lips to her throat. He could feel her humming beneath his hand as he started down her body again. Her legs spread as he drew his fingers down the dip between her hip and mound, and found her upper thighs cooling with the moisture there. \n\nShe groaned when he ignored her core again. \"We don't have time\u2014\" she started again, until his teeth bit into her shoulder, his hand meeting her wet slit with a harsh slap. She gasped and wriggled. He cupped her heat and felt her juices flow as he massaged the skin he'd struck. \n\n\"There is always time,\" he said after kissing the indentations left by his teeth. And he set about proving it to her. \n\n* \n\nThe week slipped by, every grueling moment in the hospital an eternity, every stolen press of their bodies a blessing. She came alive in his hands, allowing him the balm of control more and more each time. This went beyond the desperation he'd felt that first night, past the connection only found at the extremes of the human experience. There were moments when he held her still, and she calmed in his hold, that could only be born of two people finding a rare balance that set them both to right. \n\nShe was everywhere during the day, the sheer force of her energy unbelievable. He saw the cracks though, trained as he was to catch them in his teammates, and before in his comrades in arms. They would sit together with Amira sometimes and he watched her relax, ever so slightly. But she tackled Amira's situation with the same vigor she did her other patients', and he could see there was no real moment of calm for her. \n\nThe day before his team returned a scream woke them both, the dark sky attesting to the hour. They'd pressed the two cots together to sleep, embracing as much as the bars that held the supporting fabric would allow them to in the precious few hours they slept. Oriel was dressed and gone before he had one leg in his pants. He arrived in the main tent to see Oriel and the nurse bracing Amira in their hands, supporting her as she attempted to walk towards the procedure tent. Ed raced over, scooping up the girl and carrying her the rest of the way. \n\n\"Get out,\" Oriel said as he lay Amira down on the operation table. \n\n\"Let me help,\" he pleaded, not taking his eyes from the girl he'd come to know. \n\n\"You can't help. Bana and Riham have delivered more children than anyone I know. I'll be here. You have to leave.\" Oriel was setting up an IV when Amira screamed and curled around her obscenely large stomach. \"Trust me, Seyyed, if I need help I'll call you.\" \n\nHe nodded then, taking one last glance at Amira's pained face, and left to tend to the others. \n\nThey'd lost at least twelve patients since he'd arrived and had to send back dozens more to their squalid living conditions, largely untreated, for lack of supplies. He balled his fists around nothing, listening to the muted sounds of the other women punctuated by Amira's screams. He looked around the tent, the empty IV hangers, the dusty floors and dense smell of unwashed skin. The filtered light covered the worst of the mess but it would never hide the smells. \n\nHe moved down the rows of bed, most patients quiet in the dark despite knowing they were not sleeping. Beds two, three and five and fifteen through eighteen would need wound cleaning. The woman with pneumonia had two more days of oxygen left but if she didn't start responding to the antibiotics soon they'd have to pull the therapy to save for someone with a better chance. There was an old man dying slowly in bed ten. Oriel had told him it was probably metastatic pancreatic cancer by the way he curled forward, but with no imaging it was just morphine pills until he didn't need them anymore. Amira screamed again and Ed remembered that first day when he'd felt good about himself, glad to have helped instead of just observed and hated himself more in that moment than he could ever remember being. \n\nAmira's screams followed him everywhere that day. The other patients and nurses were on edge. Ed tried as best he could to stay focused, but he was constantly distracted, his eyes going to the back flap that would lead him to the procedure room. He memorized the way the sand clung to the top of every bend and fold of the tarp, the way the ties moved with the breeze outside, undisturbed by human hands. Minutes crawled by between the pained calls from the other tent. And when they finally came the anxiety charged through him, something akin to panic but too far removed from action to satisfy the impetus to do something. \n\nLate afternoon the scream didn't come, the sobbing and crying quieted and the entire hospital came to a halt. Ed sat there, eyes fixed on the far wall, imagining in vivid detail the way Oriel would look as she came through the flaps. The man below him, the same one whose leg he's set the first day, turned his head in the same direction. For a moment everything was completely still. \n\nThe seconds ticked by: no call came, no baby's wail, no Oriel to say it was over and okay. \n\nEd turned back to the man next to him. The wound in his shoulder was infected and Ed had to clean the tube draining it. It was painful, there was no way it couldn't be, but the man lay silent as Ed took up the task again. The quiet permeated the space. No one came out. \n\nEd was reorganizing the supply closet, bringing their dwindling store of bandages and gloves into one row, when Bana found him. \n\n\"Is she okay?\" Ed asked, forcing her to shake her head, even though he could see it before he asked. \n\n\"We need help,\" Bana said, her Arabic slow and clear so he could understand. \"I can't lift her.\" \n\nHe followed the small woman back into the makeshift delivery room. The smell hit him first. The sight was worse. Oriel sat on the ground, her head leaning back against one of the cabinets in the corner, still in the sterile coverings usually reserved for surgery. In front of her, the operating table and the body on it had been covered entirely by an old sheet. The blood had seeped through in great blossoming clouds, and collected on the floor in oozing puddles. Beside her were two tiny lumps beneath their own cloth. \n\nHe went to Oriel first, crouching down to eye level but found the woman's eyes focused far past his face. \"Oriel,\" he said softly, reaching out and touching her knee. Still nothing. He turned to the Bana and Riham leaning on each other, backs to the others. \n\n\"We have to bury her.\" Oriel's voice drew his eyes back. \"Diyaa and his crew are digging the grave now.\" \n\n\"What about her family?\" he asked, finding the speed with which this was happening unsettling. \n\n\"They're dead, she's been alone, that's how she ended up...\" Oriel waved her hand at the morbid scene. Her tone troubled him, but he was no stranger to coping mechanisms. Oriel rose to her feet and Ed got his first look at how covered in blood she was. \"I need to shower and I'll be back to help.\" \n\nA hand on her shoulder stopped her. \"Let me do this, okay?\" She cast a look over the room one last time and gave him a short nod before she disappeared out the door. \n\nEd set to work with all the unspent energy of the day. He poured the anxiety and dread into cleaning, every moment of irritation and fear into restoring the room where Amira had died. He discarded the empty blood transfusion bags, the swabs and the abandoned wound dressings. He scrubbed the rubber intubation balloon of the bloody handprints of the person who had squeezed it over and over to try to force breath into the girl who would never take another one. With it went the scalpel, the clamps and the other material they'd used to try and stem the bleeding and then to save the lives of the babies. Everything he touched told him what he had been spared when she had forced him to leave. \n\nOriel had harbored a secret hope that Amira would be granted asylum as an orphan, one she'd only hinted to him after she found him sitting with her patient day after day. He had thought he could help, call up some contacts, get a journalist on her story, anything to grind the gears of bureaucracy faster. \n\nAnd now that was gone, and so he would clean so they didn't have to. He would wash her body, enshroud her, and carry it alone so they could be spared that burden. He would carry the children who had never cried out, and place them with their mother, a child herself, so that they wouldn't have to hold the forms of those who had never lived as they were laid to rest. \n\nOriel didn't reappear for the prayers. Riham and Bana were joined by the rest of the nursing staff as night fell. Those patients well enough to walk came as well. Diyaa and his men, save one who was off following their charge wherever she might be, helped to cover the body. And then it was done. There were no more tasks to be completed, nothing more required to see to her. The small group slipped away in pairs and threes, and Seyyed was left alone in the gathering evening until he turned, intent on finding the whiskey and then Oriel. ",
        "*** \n\nThree days later she was sitting on a low slung plastic chair on a beach in Tel Aviv. Her feet troubled the sand beneath them as the stubby chair legs dug further into the shore with her movement. Night had fallen and the promenade behind them buzzed with life and noise, the sound of skateboards racing through the crowd coupled with loud calls of anger in amusement that followed the grinding sound. But instead they sat, entombed in their own wall of silence created by their refusal to hear those around them. \n\nThe waitress approached. \n\n\"Bottle of tequila\" Oriel ordered without asking him. Ed arched an eyebrow at her. \n\n\"Em\u2014What kind of tequila you want?\" There was something in the girl's accent and attitude that made it clear she thought her English was fantastic. \n\n\"The cheapest one,\" Oriel said bluntly. The girl strode away, long legs kicking up sand in her wake. \n\nOriel looked at Ed as he swiveled away from the girl's retreating back. \"It's most cost efficient this way.\" \n\n\"I didn't say anything.\" \n\n\"And I have a second bottle in my bag, so when we finish one, we can carry on as merry as we please.\" There was a tiny hint at her normal tone in those last few words, a break from the dullness she'd been employing these last few days. She slid down in her chair, black hair flowing over the back as her neck came to rest on the red plastic back. Her eyes went up to the sky and Ed's followed them there. Humidity coupled with the bright lights of the city hid most of the stars from view, the misty moon hanging low over the water. \n\nEd took a breath and mustered his courage. \"Do you want to talk about it?\" \n\nShe didn't turn to look at him, her eyes fixed on the hazy sky above them. \"Ask me again when we get to the second bottle.\" \n\n* \n\nEd woke up to the sound of retching from the bathroom. His head pounded when he tried to move, the humid heat in the room making the task that much harder. The next sound got him to his feet. He leaned against the cool door frame, taking in her crouched body, her hair bunched and fisted behind her head to keep it away from her face. She spat into the bowl. \n\nHe flicked on the hot water heater and moved into the bathroom, taking up the task of holding her long black hair back. If his head hurt, hers must have been ten times worse. The room with the toilet in it was too small for both of them to sit, so he leaned against the wall, bending to rub her back as she heaved again. \n\nLater he joined her in the shower, washing off the sand they'd been too drunk to do away with when they got home. Oriel stood under the burning spray, filling her mouth over and over again until the taste of alcohol and vomit faded. \n\nEd took the opportunity to work shampoo through her hair, rubbing her scalp and pulling on the ends to draw her head back. She eased into him, back flush against his front, warm water sliding around the points of contact. He ran his hands over her skin, suds following his touch. It was the only real response he'd gotten from her in days so he continued until she was rubbing against him. He touched her gently, coaxing her further. \n\nWhen she grabbed his hand and tried to move it down to her core he let her. When she turned to kiss him, he let her lead the way. Anything to feel her move again. But she pushed him away, out of the spray of the rapidly cooling water. \n\n\"Don't do that,\" she snapped at him. \n\n\"Do what?\" he asked, not willing to approach her yet. \n\n\"Don't treat me like I'll break, like I'm different than I was last week.\" She moved towards him, shoulders forward, accusatory finger towards his chest. \"Don't you dare.\" \n\nAll it took was her finger meeting the dip between the muscles of his chest for him to react. Her wrist was in his fist, twisted up behind her. He pressed her front against the cold stone of the shower stall, a harsh intake from her telling him how unpleasant it was. The motion immediately calmed him. Her stillness in his grip was a different quality than the trudging daze she'd been in since he packed her up in their transport. \n\nBut then she squirmed, bringing her free hand to the wall to try and push herself off. He answered her with three hard smacks to her wet ass. She yelped, but didn't stop. He gave her five more before her hand dropped, her body loosening. The water was rapidly losing any heat so he reached over to turn it off. She took the opportunity to twist from the wall, though not from his grip, a grip he used to pull her to him, pressing her back to his chest. \n\nShe struggled when he wrapped his arms around her middle, hoisting her against him as he moved back to the bedroom. When he tossed her face down he followed almost immediately to keep her in place. Once her wrists were back in his grip, his thighs holding her legs against the bed, he leaned to whisper in her ear. \n\n\"Red to stop,\" he said softly \n\n\"I fucking know,\" she growled. \"Don't stop.\" \n\nHe shifted off her so her could spank again. \"Don't order me around.\" \n\n\"Don't be a pussy,\" came the muffled reply. He stretched her arms further, watching as her shoulder blades shifted to accommodate the strain. He parted her thighs with his knees before slipping his hand down and under, pinching her clit hard despite how slippery he found it. Her body arched in pain, her legs spreading wider. \n\n\"Name calling,\" he said, still holding firm, enjoying the panting sounds she made, \"is uncalled for.\" He released her clit and she slumped. He massaged it, feeling her hips push back to increase the pressure. He smacked her ass again. \"Stay still.\" She didn't. Each blow to her ass and thighs was a little harder. It took nearly twenty before she gave in. \n\nHe stroked down her back, her breath moving the ribs beneath his fingertips. He enjoyed the quiet with palms full of her spanked skin, still warmer than his. His thumb brushed over her slit, finding her fluids and drawing them back to her puckered hole. She groaned as he eased the thick digit inside, and louder as he began to saw it back and forth, the vice grip of her ass no match for his slippery finger. Two fingers dove into her pussy and she bucked against his hand. He stretched her further, moving his legs over hers to keep her still while he watched her body engulf his fingers over and over again. The play of tension and stillness in her body hung tight with potential, a silent violin string. So he played her, and the sounds she made were beautiful. \n\nHe shifted her arms down so that he held her wrists in the small of her back. He used it as leverage to pull her back and impale her in the same move. She yelped at their bodies' impact. He waited for a moment, to see if she'd stop him. She didn't. It felt like a challenge; one he accepted. A small voice whispered that he should go easy, that she was hurting. But he knew she needed the pain. And his need, the one to take back all those helpless moments by exerting complete control fed the violence of his movements. \n\nHe fucked her hard, pulling her back against his thrusts. She began to twist in his hold despite the way her pussy gripped him, the sound of her oncoming orgasm clear. He reached around her body, slowing only enough to allow him to grasp her breast, the hard nipple at its peak his target. She shrieked when he crushed the nub, her pussy clamping down as she came. He gave her no quarter, holding on while he picked up his pace, dragging the tortured flesh back and forth with his movements. Her body shook as he pushed her higher, his eyes locked on back as her muscles tensed beneath her sweat damp skin. \n\nWhen her body relaxed, he released her hands and nipple, hearing the answering groan as her body landed softly on the bed. He took her slowly now, one hand teasing her clit as the other traced the faint outlines left by his hand on her ass. When she began to tense again, her body dancing under his touch he delivered three direct smacks to her clit, emptying himself into her as she screamed in climax. \n\nFor a moment he stayed there, up to the hilt in her, enjoying the peace that came after, the calm he felt beneath his hands as she sank further into the bed. \n\nDespite the humid night, he gathered her body into his, fitting her back to his chest as he stroked her skin, tending to her tormented nipple. And for a few moments she was there with him, deep breaths and pressed flesh in tandem in their quiet. It was strange how subtle the change was when it came, but how definitely he felt it when she left that calm without him. \n\nShe moved away, reaching for an abandoned towel to clean herself from their combined mess. Her hand caught the neck of a half empty bottle he hadn't seen nor helped with. He was up, grasping the wrist crooked to bring the liquor to her lips. \n\n\"Stop, Oriel.\" He'd seen enough sorrows drowned, and those burdened with them dragged down behind them. He faced her, cupping her cheek with the unoccupied hand. \n\nHer dark eyes, those impossibly thick lashes, flicked up to his face. For a moment he watched her war with herself before some barrier broke and tears gathered. \n\n\"I wanted her to die.\" The voice was not hers, its desolation as menacing as those desert nights. \"For a moment, I stood there as every last resort failed, and I hoped they would all die.\" \n\nAmira, her smile and laugh, the precision of her accent and constant help she offered during his time at the hospital, all flashed through his memory as he tried to comprehend her confession. In their wake horror came, and quickly guilt, and finally understanding. \n\nHer eyes were locked on his; she'd seen every flicker after the impact of her words. She knew, she must know, how he'd wanted to recoil from her. \n\n\"Oriel,\" he tried to keep his voice calm. \"It was a moment, and understandable.\" He forced the word out. \"They should have never left you there that long. It's human-\" \n\nShe shoved his chest, the bottle falling with a thud on the towel at their feet. \"Don't you fucking say that to me!\" she screamed, pushing him even when his grip never left her had. \"I loved her. I should have saved her. And when she died, when her babies wouldn't breathe, I felt relief, release! Just one moment, just one second where there was no one to take care of. But she needed me!\" \n\nHe controlled the worst of her blows but he allowed most of them, her fists meeting his chest with all the rage she carried, every minute of self-loathing she suffered. When the tears came, he pulled her closer, folded her into his arms and carried her back to the bed. \n\n\"You're good, Oriel. You're good,\" he repeated into her ear as she sobbed. She wouldn't believe it, not yet. Some part of him didn't believe it either. His own past allowed him the capacity to comprehend and analyze, to understand her desire to be left alone, to be free from the ever present grind of her responsibility to save those she could do so little for. Her traumas would claim the piece of her soul they were due, as his had, and the fight to reclaim it was a long one. He pressed his lips against her wet hair, aware of her cool, wintery scent beneath the florals left by the shampoo. Her body folded in his lap and he felt the push and pull of tension and release as she cried. \n\n\"You're good,\" he said again and again, rocking them both to her sobs. \n\n***** \n\n\"They shared the weight of memory. They took up what others could no longer bear. Often, they carried each other, the wounded or weak.\" \n\n\u2015 Tim O'Brien, The Things They Carried"
    ],
    "authorname": "AmoryParks",
    "tags": [
        "bdsm",
        "bondage",
        "binding",
        "dominance",
        "submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-burdens-of-others"
}