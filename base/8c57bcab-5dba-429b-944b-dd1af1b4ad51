{
    "title": "The Twelve Zenati Pt. 32",
    "pages": [
        "Author's note: Hello everyone. I am sorry for my tardiness with chapter I have been in hospital again but am on the mend once more although my writing is considerably slow for which I apologise. Again, I am grateful to MsSensualiT for her continued help to be my second sets of eyes. I hope those of you who enjoy this series continue to do so. ~ellie. \n\nMarcella felt Noah slide from the bed sometime later. She didn't open her eyes or make any movement that would show she was awake and aware of his movements. She burrowed slightly deeper under the single sheet covering her nakedness until she heard the shower and the tell-tale change in the rhythm of the water that told her he was under the water. She quickly gathered her clothes and dressed. She hoped to make it back to the room she had been given in the main house where she could shower alone and get away from the man her muddled her mind and made her lose focus on what she was doing here. She had to concentrate on what she had to do to ensure the safety of the people she cared about, including him.\n\nThe door opened, easily swinging on silent hinges as she made to leave the pool house before Noah got out of the shower. Neither of them had slept more than to doze fitfully before he rose. Her scrambled brained was so concentrated on the sound of the shower and Noah within it that she barely noticed the man who stepped into the doorway before she almost ran into him.\n\n\"Can I help you with something Miss Gambaro?\" the man asked.\n\n\"Oh! No, thank you, I was just going back to my room to shower,\" she stumbled over her words. \"Although if there's coffee available, that would be welcomed, too,\" she added and stepped through the door closing it quietly behind her. She was determined to make it to her room despite the giant blocking her way, and before Noah came after her and the arguments started again. \"You could also tell the man still inside here that I don't want to fight with him this morning, please.\n\n\"I'll be sure to get that message to him,\" the man said with a slight smirk. \"There will be coffee available in the kitchen on your way to your room, Miss Gambaro. Enjoy your shower.\"\n\nMarcella hurried toward the house, and she noticed a second man wearing the same black pants and white shirt strangely threaded with gold was following her. Were they watchers? Had the Farnese put watchers on her, so she didn't run straight back to Konrad? More likely, Noah had done it to ensure she didn't try to leave without him again. It was going to be yet another day of fighting with him. She knew she didn't want to keep going down that road, and for her, the only option was escaping him and these people to gain her independence again. \n\nShe could and would protect them, only they didn't want that. They had thrown her protection back at her, and tried to turn the tables to protect her. She didn't need their protection! They needed hers! They had always needed her to step in and protect them, whether they knew it or not.\n\nFor now, she would be happy with some coffee and a peaceful shower to sort out her plans. She needed to get to Perth. That was the priority, so playing along with Xavier and Noah to get there seemed the best option. She just had to decide what to do once she got there and had the means to pick up the pieces of her shattered life to become independent again. \n\nShe could come back here to look after Jessa and the boys. Not that Jessa would want that, and the Farnese would only call Noah again. Olivia didn't need her anymore; that much was obvious. Maybe it was time to take her mother in hand and get her the help she needed. It was too late to help her Aunt, and that fact wrenched at her gut, but her mother was still redeemable, wasn't she? She could fight for her mother if these people didn't want her protection. These people, she growled, picturing Noah as he had been the night before, ranting and raving at her as if she was a naughty child in need of scolding.\n\nMarcella was still stoking her anger at Noah continually interfering in her life as she walked into the kitchen and found Olivia and Vivienne in there waiting for her. Her hands went to her hair, trying to smooth down the foreign blonde locks and backed out without saying anything at all. Fuck, she wasn't ready to face them, fight with them, not Olivia and Vivienne. She only wanted to help them, not be supported by them. She didn't need their help! If she could make it to her room, she could shower, change and prepare herself for the confrontations she would have to face with her sister and Vivienne. \n\n\"Marcella, wait!\" Olivia's voice rang out behind her, but she just turned and ran up to her room, hearing a curse and heavy footsteps behind her as someone hurried after her. Closing and locking the bedroom door behind her, Marcella let out a long breath. She needed a shower and some space to think. They could all just wait to yell at her again. It didn't make any difference at this point; she had limited choices about what she could and would do. She ignored the knocking on her door, cursing at being trapped in this place despite knowing she was at the mercy of their goodwill to get back to Perth. She headed into the bathroom.\n\nThe shower's hot steamy water was a balm to her body. Now that she was calmer and in her own space, she could think about more than escaping Noah and the others. The mild pain of her bruised body now took her attention. She was marked from her night with Noah, and she could remember every delicious moment of how he had claimed her body as his. The smaller, softer voice within her mind purred at the sensations and the memory of claiming him in return in a moment of weakness. Still, it was quietened as her fighting warrior side growled her disapproval. \n\nIf only she could give in to that feeling, but she knew it was never in her destiny to be loved like that. She was broken and incapable of the sort of love he wanted and deserved. He needed a woman who could open her heart fully to him, and that wasn't her. The thought saddened her as her quieter voice spread warmth and reassurance through her that she could be that woman if she wanted to be. Then she had a momentary vision of him looking into another woman's eyes the way he looked into hers, which made her feel sick. She pressed her hand to her belly as the warrior voice inside her mind growled out her reminder that she was strong and could overcome anything thrown her way.\n\nHer dual personality borne from a lifetime of suffering went to war within her mind, refusing to come together for the greater good as they had before when she escaped her family home and the dark influence of the Tables. Letting her legs relax beneath her, Marcella slid down the wall and sat beneath the shower spray with her head down and eyes closed. Her head hadn't been this full of inner voices since she had chosen emancipation and education over a life of subjugation. Marcie had made that decision and saved herself, but Marcie was gone now, ripped apart again. Now there were just her broken halves.\n\nWhen she had gone to Darwin, Marcie had embraced her warrior side while staying in control. She was there to save her sister, after all. Since meeting Noah and the rest of the Zenati, including Vivienne, she had become a basket case again, her inner voices fighting for dominion. Marcie grew to like the voices of her conscience, which were never drowned out or subdued by her circumstances and who she needed to be at any given time. She knew both the warrior and the submissive well. Still, she tried to focus on that third tiny voice of reason which brought the two together, her sense of self that was Marcie. Only Marcie's fragile blend of egos drowned in despair at her current circumstances and knowing there were few options available to her. \n\nThe warrior Marcella raged at her wanting to tackle the world alone. She needed no one and nothing. She could save them all and be home in time for dinner if she would just let go of the others who crowded her brain and another tiny voice asked, \"At what cost?\" It was the warrior within her that had brought her to this. Perhaps it was time for her to rest and let someone else drive the agenda while she calmed down and took stock of the consequences of her actions. \n\n\"I can rest for a day, maybe at least until we get to Perth. Fighting here will accomplish nothing but delay our return to life as it should be,\" Marcella agreed with her conscience as if talking to a completely different person. All the while, the soft voice within her mind spoke gentle reassurances to her as she took control of their life. The warrior would always be there when they needed her. It wasn't as if she was defenceless without all that self-confidence and bravado. She could protect herself in other ways, and she drew a deep breath lifting her head and letting the spray of the shower wash over her face. Taking one last shuddering breath and allowing a small smile to escape her lips, Chella stood up and turned the water off.\n\nShe couldn't bear to put the same clothes on again from last night, and bring up those lingering feelings of the warrior within her fighting the man who loved them. She wrapped a towel around her body, planning to find someone who could ask Olivia if she could borrow something of hers. She didn't want to impose any further on their hosts' hospitality by asking for more than she had already been given by requesting more clothes. She smiled, opening the drawers to find a brush, and the usual supplies had also been gifted to her by her hosts'. They were good people, and she needed to thank them properly when she left.\n\nShe took her time brushing her teeth and styling her hair. Her face looked pale without any makeup but not unhealthy, and she shrugged. There was nothing she could do about it right then. Maybe Olivia would let her borrow some makeup as well. It was not worth worrying or fighting about something so trivial. On the other hand, she had to do something about her clothes. When Marcella opened the door to her room, she found Vivienne standing there with Olivia, and she blinked in surprise.\n\n\"Oh! I was just coming to find you,\" Marcella said in surprise.\n\n\"Hi,\" Vivienne said. \"I packed a bag for you when we went to the gathering, hoping you would come there once you had done what you needed to do,\" she held up the small valise as if in explanation. \"I brought it here with us because I didn't know if you would have anything with you when we heard you were with the Farnese. I always prefer my own things, and I thought...\" Vivienne's voice trailed off.\n\n\"Thank you so much. That's exactly what I needed!\" Marcella said delightedly, opening the door a little wider to allow the two women to enter. She took the valise from Vivienne and began to rifle through it. \"I can't believe you did this for me when I've been the worst friend. I'm sorry I didn't call you back, how are you feeling? Is the morning sickness bad?\" Marcella asked with genuine concern in her voice.\n\n\"I've learned some of the tricks to stave off the worst of it now. Peppermint tea seems to work best in the mornings and allows me to at least keep down a piece of toast with vegemite,\" Vivienne said, unconsciously putting a hand to her belly as if to soothe it. \"Besides, you had other things happening at the time, and I was selfish wanting you to put it all on hold for me.\"\n\n\"Vivienne, that's what friends do for each other, and I am sorry I wasn't there for you. Or you, Olivia. Konrad told me you were a free woman now and probably married already. Did I miss the wedding?\" Marcella asked with a note of sadness, touching her voice as she grasped her sister's hand.\n\n\"Marcie?\" Olivia asked, carefully stepping warily to close the distance between them as if trying not to spook a feral animal. \"What happened to you?\" She asked quietly. \n\n\"Nothing. I was treated well by everyone. You know I wouldn't say that if it weren't true. I am here now, and soon we will be back in Perth to check if what they say about Papa and Uncle is true and see Mama. Everything will work out, Olivia. It's all fine now that Jessa has her children back, and you have Genesis. You're both safe, which means I can go back to my life now too,\" she gave the two women a smile that didn't reach her eyes. \"I'll just change in the bathroom. Thank you again for being so thoughtful, Vivienne.\"\n\n\"What was that about?\" Vivienne asked Olivia in a whisper.\n\n\"He broke her,\" Olivia said sadly. \"All we can do is hope she snaps out of it again like last time.\"\n\n\"Who broke her?\" Vivienne asked. \"Konrad?\"\n\n\"Him and Noah,\" Olivia shook her head sadly and watched the door her sister had gone through to change. \"Maybe Jessa as well, all of us probably now that I think about it. I don't know,\" she sighed. \"That wasn't Marcie or not the Marcie, you know. It wasn't Marcella, the warrior princess we have seen for the last few months, either. That was Chella. The woman Apollo created and came to collect when he came to Darwin for her birthday,\" Olivia said. \"He still wanted Marcie when she got better, but he preferred her when she was Chella and always tried to get her back to that personality.\"\n\nAll of the pieces of those turbulent years during the last investigation and her father's punishment for sending Marcella to the Battaglia a second time flooded her mind. They made more sense now that she was older and infinitely wiser. She remembered the countless appointments with trauma specialists who tried to put the pieces of her sister back together again after the last time she had been splintered into pieces to deal with her life. Olivia had to attend some parallel sessions; but was not poked and prodded as much as her then meek and mild sister had been subjected to at the time, as she struggled to recover from the trauma. \n\n\"You've seen this before?\" Vivienne asked. Her doctor persona falling into place. \n\n\"Vivienne, don't let them put her in the hospital again, please,\" Olivia whispered. \"She will come out of it and be fine, I promise. Just don't let them shut her away again. Promise me, please. We won't get her back at all if they do that.\" \n\n\"Okay,\" Vivienne nodded, seeing the panic in Olivia's eyes. \"Tell me everything you know as quickly as you can. Nothing about personality disorders had been in the reports she had looked at, and she wondered how and why that was the case when Olivia obviously had seen it in her sister before. Olivia babbled with only enough time for a few relevant questions from Vivienne until Marcella emerged from the bathroom.\n\n\"It's wonderful to be back in my own clothes again. Thank you for packing my favourite Balenciaga heels,\" Marcella said, ignoring the wide-eyed looks she was receiving. She sat on the bed to put her shoes on and fix up the straps. \"They cost me a fortune but are worth every penny.\" She stood and repacked the valise. \"I expect they will want to leave as soon as possible this morning, so I may as well be ready.\" She gave them that slight smile that didn't reach her eyes. \"Oh wow, you packed my wallet and phone? The ones I left at the hospital?\"\n\n\"It's a different phone. Noah used yours to try and find you,\" Vivienne admitted. \"Marcie, are you sure everything is okay?\" Vivienne asked.\n\n\"Of course, why wouldn't it be?\" She tilted her head with the question. \"I'm starving. Do you think I will have time for some breakfast before we go? I spent so much time in the shower. Everyone is probably ready to go by now.\"\n\n\"I don't think anyone would mind having breakfast before we leave,\" Vivienne agreed, looking at Olivia with worried eyes now as they followed Marcella from the room.\n\n*****\n\nNoah was pissed that Marcella left the pool house while he showered. He had felt her resolve to go off alone falter in his arms the night before and had thought maybe they would not have to battle through another day. That just maybe, she could trust him to fight with her rather than against her and be by her side this time. The message from the Farnese watcher had only flamed his anger higher as he made his way to the house. He was stopped from stalking upstairs to her by his brothers, who needed to go through details of the plans they had made the night before and the possible connections Genesis had made to Konrad.\n\n\"The circle members are heading to Perth today. Most aren't happy about leaving their homes because of the trouble with the Suebi, but they will come,\" Massimo said. \"Including Marcus this time. The only missing piece will Turo Pellegrini, who is in exile with his family, the bastard.\"\n\n\"It will be a short meeting, and they will probably all fly out again today because they have their own issues to deal with in their respective homes,\" Xavier chimed in. \"And Phil invited Solomane Pelligrini. He thinks it's important to maintain the link to all tables and mend those bridges fast.\"\n\n\"Okay, whatever,\" Genesis chimed in. \"That's your thing. Ours is still protecting Marcella from Konrad and discovering his bases of power. To be as mobile as he is, there must be more than one base, possibly more than one in each state. Thanks to Gideons' quick thinking and my networks, we discovered the one Marcella had been staying in and made it untenable for him. I have a good lead on another which Gideon and I will continue to investigate while you have your little friendship circle and sing Kum-ba-yah or whatever the fuck you do to get them all on the same page. Once we discover his nests and start taking them out, we will have him backed into a corner,\" his voice was gruff as he spoke, expecting no opposition to the demands and chiding remarks.\n\n\"You done?\" Xavier asked and raised an eyebrow at him.\n\n\"I've been fighting this battle for too long since finding Olivia, and I am ready to move on, sue me,\" he shrugged. \"Are we done here? Talking and rehashing what we already know isn't getting us any closer to the goal.\"\n\n\"I'm done,\" Noah said and got to his feet, needing to see Marcella. He needed to know that she hadn't found a way out of the house and away from him again. He left the room without another word.\n\nHe followed the sound of feminine voices to the kitchen where Marcella sat with Vivienne, Olivia, Connie and Jellybean, the little girl Marcella had taken under her wing when she arrived, eating breakfast. He felt relief wash over him as he gazed at her. There was something different about her this morning, a serenity that seemed to smooth out all the spikey edges her aggression and fight gave her. He quite liked those spikey edges, and he suddenly felt unsure about the woman sitting in front of him. She would never look at him so passively. He narrowed his eyes and stepped into the room.\n\n\"Good morning,\" he said, accepting the offer of coffee from the cook. Olivia turned troubled eyes on him but said nothing, and he looked to Vivienne, who also seemed pensive. \"What's wrong?\" he asked.\n\n\"Nothing. Why would anything be wrong?\" Marcella asked, tilting her head to his question and using a sweet, almost foreign tone when she spoke.\n\n\"Nothing at all,\" Vivienne agreed and got to her feet. \"I take it your meeting is done then? I need Gideon. His voice seems to soothe this little one, unlike poor Connie's little one with Massimo's voice.\"\n\n\"Yeah. He should be right behind me,\" Noah stopped speaking as Vivienne hurried from the room in search of Gideon. \n\n\"Tell Genesis too,\" Olivia called after Vivienne. When Noah raised an eyebrow at her, she added, \"That I'm here with Chella.\"\n\nNoah startled at the name. He didn't think she liked being called that. The only person who had called her that was Apollo, and she had bristled when he had said it. He took a seat across the table from Marcella and sipped his coffee.\n\n\"You woke early. I was surprised you were gone when I got out of the shower,\" Noah said as a statement rather than a question.",
        "\"I desperately needed a shower and came back to the house. Hope that's okay?\" she asked sweetly. Too sweetly for Noah's liking, but he let it go. He had threatened her in multiple ways last night about leaving him again. Maybe she took it literally though he doubted it. \"Viv brought me a bag of my clothes and things from Darwin, so I am feeling much better today.\"\n\n\"That was good of Vivienne. I was so eager to get here I hadn't thought of anything like that,\" Noah admitted, mentally reminding himself to thank Vivienne for doing that when he saw her next.\n\n\"That's what friends do, even when the other friend has been a dreadful one,\" Marcella sighed. \"I'm lucky to have her and Liv.\" She nudged her sister, playfully. \"Anyway, I'm all packed, and as soon as I eat this, I will be ready to go. Just in case you wanted to leave straight away.\"\n\n\"I think we can spare time for you to finish eating,\" he chuckled but inside, he was cringing. Where had her fire and fighting spirit gone? This wasn't his Kitten. This woman was something or someone else entirely. \"I will go check what time we are planning to leave,\" he said in a subdued voice, still trying to puzzle out the change in Marcella. He already knew the schedule, but he wanted to catch up with Vivienne and find out what the fuck was going on with Marcella this morning.\n\nAs soon as he left the kitchen, he saw Vivienne and Gideon in the hallway. Vivienne was in tears as Gideon tried to make sense of why she was so upset. Noah pointed to a sitting room off to the right and followed them in, sitting close as Vivienne took a deep breath and stifled her tears.\n\n\"I'm sorry. Do you think it's too early for hormones to be kicking in?\" she asked and fanned her flushed face.\n\n\"You're doing fine,\" Gideon kept his arms around her. \"Start from the beginning again for me. I'm not sure I understood what you were saying.\"\n\n\"Okay, our friend Marcie, who we all got to know in Darwin. The Marcie, who is compassionate, loyal to a fault and fights for what is right, is gone. She splintered. She broke apart. I don't know how else to describe it for you. From what Olivia said the last time she was broken like this, there were two distinct personalities. First, Marcella, the Warrior princess who I think probably took over after we forced her into the hospital, and the Battaglia came the same night. That Marcella has been running the show since then. Still, whatever happened last night,\" she flicked her eyes up to Noah and swallowed before continuing.\n\n\"Did you need me? Olivia thought you might need me for something important,\" Genesis asked as he came into the room as if drawn by his brother's emotions. Gideon held up a hand and turned back to Vivienne. \"Go on. He'll catch up.\"\n\n\"Well, whatever happened between the two of you last night was probably just the last crack in her shell, but it allowed the other side of her personality to take over. This version prefers to be called Chella and is the woman Apollo was looking for when he arrived in Darwin. She's polite, sweet and, for lack of a better word, docile. She seems to be the ultimate people pleaser. Unlike the warrior Marcella who fought against every restraint, the world tried to put on her. Unlike Marcie, who held both sides of her nature in balance within her to be the fiercely independent but very likeable woman we knew.\"\n\n\"We need to get her help,\" Gideon said softly.\n\n\"Olivia made me promise not to let you put her in the hospital or lock her away again. She promised me that Marcie would eventually come out of it, and we might lose her forever if we put her in hospital. Marcie came out of it the last time Olivia saw it happen,\" Vivienne rushed on. \"Please, don't do something she can't come back from,\" Vivienne pleaded as she looked at the three men.\n\n\"I think she did come out of it for a time when I spent that week with her, especially when Olivia came to see her,\" Noah nodded. \"We can get her back, Vivienne. I know we can. No hospitals, I agree,\" Noah said softly and looked at his brothers for their agreement.\n\n\"We'll see,\" Genesis said, frowning. \"I'll talk to Olivia about what she knows. There are bigger things in motion now rather than just looking after Marcie. I know how you feel, brother, but having a people pleaser rather than a warrior on our side right now will ease more than one worry for us.\"\n\n\"And if it was Olivia?\" Noah growled.\n\n\"The world would have burned the moment the Suebi and Konrad took her,\" Genesis admitted sadly. \"But I am not the man you are, brother. You have done well to keep your head so far, and now is not the time to lose it. Let's end this game of Konrad's, and then, we will do what needs to be done to show Olivia and Marcella what it is like to be loved completely and by a whole family.\" With that, he turned and left the room in search of the woman who made his world complete.\n\n\"He's right,\" Gideon said gently. \"I'll agree, no hospitals for now, but there are other ways to help her, and we will find them.\" He patted his brother reassuringly. \"I'll go and meet Chella. Then we can talk more later. He led Vivienne from the room, leaving Noah alone to think about what he had learned about the woman he loved. \n\n\"It was never going to be an easy road for those two unless they could let their adversities bring them together. Marcie will see that Noah will love her through everything that comes their way, and maybe then she could trust enough to become whole again.\" Noah heard Gideon's receding voice as he spoke to Vivienne and let out a long slow breath. \n\nHe'd pushed her last night. He knew now that he had probably pushed her too hard. Not once had he considered she wouldn't be able to handle anything he did during their night together. There was one point where he believed he had broken through her hard outer shell. Was that when this new personality had come forth and taken over from the warrior? No, she had continued to fight, if not in the same 'all or nothing' way, all night long, so what had happened between then and now? \n\nHad she come to terms with the fact that fighting him now would gain her nothing? He would keep her safe, even at the risk of her hating him. He had told her that. He had told her that there was no escape from him, and all her choices about what happened next were gone. Had he been too harsh? Had closing the door on her cage caused this change? Had he been the one who had done this to her in the first place back in Darwin by rejecting her advances that very first time, she had invited him into her apartment after dinner. Thoughts continued to swirl in his mind as he sat there until his phone buzzed in his pocket, and he answered it with a frown.\n\n\"Zanto? What's up?\" Noah said in a voice resigned to his fate of loving someone who could never fully love him in return.\n\n\"Is she dead?\" Zanto's fearful voice came through the phone.\n\n\"Who, Marcella? No!\" Noah almost shouted in surprise at the question. \"Why would you ask that?\"\n\n\"I can't feel the pull anymore. That inner pull to find her and keep her safe is gone,\" Zanto seemed ready to panic.\n\n\"She's fine, Zan, honestly. She's in the kitchen eating breakfast as we speak. Safe and secure with us here to watch over her. Maybe that's why you can't feel the pull. She is finally safe.\"\n\n\"Maybe,\" Zanto frowned. \"And you, you're okay?\"\n\n\"All good. We're flying to Perth today and should be home the day after, if not tonight,\" Noah reassured his cousin, though he wondered at the loss of connection between the two. \"You didn't feel any connection with her when she first arrived in Darwin either, did you? The feelings only came out once she fled from the hospital?\"\n\n\"Yeah, it was weird,\" Zanto agreed. \"I can't explain it. It was when I found the surveillance footage, and you went to help her.\" \n\n\"Maybe it was just a glitch while she was in so much danger, and now that she is safe, your free again to find your true curse breaker. Gosh knows keeping Marcella safe would be impossible for one man alone when she is in fighting mode,\" Noah suggested.\n\n\"But it felt so real, and now it's gone. I still care but don't feel the overwhelming need to get to her or you anymore,\" Zanto said, disturbed by the absence of that feeling.\n\n\"We'll be home in a day or two, and we can all talk then,\" Noah said, not wanting to put a voice to the suspicion that Marcella had a personality disorder which he may have exacerbated last night during their fight. I'll call you when we land,\" Noah said. \n\n\"Alright, look after her,\" Zanto agreed half-heartedly and ended the call.\n\n\"I swear, Noah, if you didn't have bad luck, you would have no luck at all,\" Xavier chuckled, entering the room. \"This isn't your fault. Look at everything that has ever happened to that girl. All we can do now is help her pick up the pieces and heal in her own way. Olivia is right. Forcing her back into a hospital is not the way to go, and you know that. You also know that she loves you; she would not have fought so hard to keep you from danger if she didn't. Hold onto that, my brother. Put a stranglehold on it if you must to get through this next obstacle and get one step closer to the future you want.\"\n\n\"Word travels fast, huh?\" Noah groaned.\n\n\"Yup, though it's pretty hard not to notice the complete transformation overnight,\" he nodded. \"Look, man, I need your head on straight for the circle meeting. I don't always make the meetings they have, and I am not the most comfortable in this circle for reasons of my own, so I need a solid wingman. You got me?\" he asked, looking earnestly at Noah.\n\n\"I got you. You can rely on me,\" Noah nodded. He rolled his eyes at himself and chuckled that everyone looked with disdain at Marcella being the very thing he was and what his father always warned him about, a fucking people pleaser. He sighed, and Xavier mistook the sound for something more. \n\n\"I know you do, and I truly believe you are one of the strongest men I know. She will recover, and she will come to realise that you, my brother, are the best of us,\" Xavier said softly and pulled him from the couch. \"Come on. We're leaving once everyone is done with breakfast, so you better grab something if you're hungry.\n\n*****\n\n\"Val, may I speak to you for a moment, please?\" Marcella asked. \n\n\"Sure,\" he said, not hiding his surprise but stopping his pre-flight external checks and walking towards where she had stepped away from the boarding platform. \"What can I do for you?\"\n\n\"I never got the chance to thank you for helping me the day I fell onto the road. I wasn't very gracious at the time. Still, I wanted you to know I do appreciate you trying to help me then,\" Marcella said contritely.\n\n\"Oh, sure. I wasn't going to leave you lying in the road, Marcella,\" he said, bewildered by the gratitude.\n\n\"Call me Chella, please,\" she smiled softly and stepped closer to embrace him in a soft but short hug. \n\n\"Have a good flight, Chella,\" he said, looking over her shoulder at Noah's blank expression. \"I better get back to my checks.\" He stepped away from her and went about his work.\n\nMarcella turned and started up the stairs of the boarding platform with a small smile on her face. She felt better having thanked the man who all but saved her when Apollo had come for her. In her own way, she missed Apollo and the agreement they had made before Marcie had convinced her to blend with the warrior and become stronger. She wouldn't be making that mistake again now that she was in control. She was turning over a new leaf and showing the world a different side to her nature, a less prickly, more loveable side. She was tired of being alone, and these people wanted to be her family. A real family not like the one she grew up in. A family that she deserved. That meant repairing all the damage Marcella had done to those around her with her thoughtlessness. She took a seat near the window and smiled as Noah sat beside her.\n\n\"You don't have to babysit me anymore. I won't run again,\" Marcella said softly so those around her wouldn't hear.\n\n\"Where would you run to while locked in this tin can?\" he chuckled. \"I want to sit with you and be with you, Marcella. I thought I made that clear last night.\" He scooped her hand from her lap and held it in his, his thumb playing with the ring he had given her in what seemed another life, glad that she had kept it while with Konrad.\n\n\"Do you want it back?\" Marcella asked as she looked at the ring as it spun around her finger. \"We don't have to pretend while we hide in plain sight anymore.\"\n\n\"No, I was just thinking how glad I was that you hadn't taken it off,\" he said, turning to look into her eyes. She was still the woman he loved or at least part of her, and he wouldn't walk away from her or stop trying to help her become whole again. The more he thought about Marcella's warrior version he had been dealing with, the more he craved the woman he had first met in Darwin. He wondered how he had never seen the change in her as dramatic until it was pointed out and highlighted by the docile version who sat with him now. \n\n\"Do you think I will be able to go shopping with Vivienne and Olivia while you are in your meetings with the Gambaro's today?\" she asked, changing the subject. \"I feel a bit naked without makeup, and I could use more than that small bag of clothes. \n\n\"We will only be in Perth for a day, two at the most. All of your belongings are still at home in Darwin for you,\" he said, leaning back in his seat, ready to argue with her for her right to shop or do whatever she wanted to while in Perth.\n\n\"Oh, okay, but could I at least visit my apartment?\" she asked, no argument to her tone, just a compromise.\n\n\"We may have time for that, but you won't go without me,\" Noah said a little more harshly than he had meant to say it, still expecting her to fight him.\n\n\"Okay,\" she said and settled back into her chair, closing her eyes. It was about a two-and-a-half-hour flight, and she fully intended on catching up on the sleep she missed last night for the duration. Things needed to be said between herself and Noah, but she had no wish to have an audience of people who had watched her curiously all morning so far.\n\n\"Tired?\" he asked.\n\n\"That shouldn't surprise you, seeing as you were the one to keep me awake all night,\" she let a genuine grin light her face. \n\n\"I couldn't help it after not knowing what happened to you. I needed you, to feel you, to love you,\" Noah said, leaning over, so his words were a hot growl in her ear.\n\n\"I'm sorry, but I didn't have a lot of choice at the time,\" she said, meaning it. The sound and feel of him so close made her body shiver with memory and anticipation of the next time he would show her how much he needed her. \"I'm not going anywhere now,\" she said as if giving an open invitation despite not being the only ones on this plane and turned her face to his brushing her lips over his.\n\nThis woman wouldn't run. He could feel the sincerity of her words, but this wasn't the woman he knew. It was only part of her. He took her invitation and, lifted a hand to her jawline to kiss her, and brought her forward another inch to deepen the kiss and claim this part of her, wishing he could claim all of her so easily.\n\n\"Sleep, it will be a long day,\" he encouraged and sat holding her hand until after take-off and the climb high into the sky before levelling out. \n\nMarcella drifted off to sleep, content that the man who had sacrificed so much for her still wanted and needed her in his life. Was it love? She didn't know, but whatever it was, it felt good, and she had been lonely for such a long time.\n\n\"Ah, there you are, Chella,\" Apollo said, making her spin around. \n\n\"What are you doing here? You can't be here! They took you away!\" Marcella stepped back.\n\n\"What are you talking about, Chella? I made you. You are my pretty little girl. You can't escape me. I gave you the time to end Marcella and her need to fight the inevitable. I gave you the best therapists to help you win that war. Our contract is due, Chella, you belong to me, by Table Law,\" he said menacingly. \"You need to kill Marcella and be done with her for good. She only hurts the people you care for. We agreed it was for the best. You are the one who told the stories and looked after your mother and sisters. Marcella got you locked up time and time again. She is the problem. You are the solution,\" Apollo urged her, pointing to the corner where a blonde version of herself lay bound in ropes and chains. The fight seeming to have left her.\n\n\"No! she doesn't have to die! She can't hurt anyone now. I'm in charge, and I will stay in control this time!\" Chella shook her head. \"She doesn't have to die.\"\n\n\"Of course, she has to die. She is too strong. Even now, she is calculating a way to get free and retake control. You know you can't beat her alone. She had to step aside for you to gain control because you are weak and useless alone. She must die, Chella, and then you will be free. Free to come to me and live the life you were meant for,\" Apollo lectured.\n\nHer head dropped down, and she twisted the ring on her finger. She could never return to Apollo. She loved someone else. Someone who would not force her to kill Marcella. Someone who had as much compassion in his deeds as he did retribution for those who needed it. The thought gave her a little strength. Not enough to fight Apollo's claims, but enough to drop the knife that had appeared in her hand. \n\n\"No! I won't do it!\" she screamed and then gasped as Apollo appeared directly in front of her.\n\n\"You are mine, and you will do as I say,\" he growled and rammed the knife into her shoulder, making her scream and shake almost violently as he twisted it back and forth. \"You will kill her and then come to me as you were always meant to do.\" \n\n\"Marcie, are you with me?\" Noah's panicked voice asked as Marcella blinked her eyes open.\n\n\"Yes,\" Marcella choked down a sob that had been caught in her throat as the last vision of her dream faded.\n\n\"That must have been some dream,\" Noah said. \"Can you tell me about it?\"\n\n\"Apollo came back to claim me,\" she whispered. \"To demand, I honour our childhood contract.\" She tried to explain skirting around the issue of her insanity and the need to keep the harmful side of her personality subdued. It was this side of her personality, who endured the worst of her punishments and even revelled in them at times, that was promised to Apollo in a contract she had been too young to understand. \n\n\"He's not coming back for you. We made sure of that. The contract is null and void now,\" Noah reassured her, hoping that was the case. He knew they had fought its validity when the Battaglia had pushed it. Especially in light of the fact that Apollo had almost killed her. He would need to ask Xavier to confirm that for him before making any more promises to Marcella about it. Not that he would let anyone take her from him again.\n\nMarcella leaned into Noah, taking the comfort he offered her. She felt him stiffen at first but then relax and pull her closer. Damn Marcella for making this man wary of any affection she showed him. She lifted the armrest between them and crawled into his lap, snuggling into his warmth before closing her eyes again and dozing lightly, not wanting to fall into a deep sleep again. When she woke, Noah gently placed her back in her seat and buckled her lap belt in preparation for landing.\n\n******\n\nThe journey from the airport was mercifully short. Holding Marcella in his arms for over an hour as she snuggled into his body was stretching Noah's control to the limit. Genesis and Xavier might think him a strong man, but he was about to lose his mind if he couldn't take this new version of Marcella the way he had always fantasised he would. He was only human, and this woman had captivated him so completely that he was sure he was going insane right along with her and her changing personalities.",
        "He was pleased that they would have time to settle into the hotel and freshen up before lunch followed by the meeting they had come for when they landed. He tried not to let his urgency to be alone with Marcella show as they were given rooms keys without the usual check-in hold-ups. Noah held Marcella's hand as they rode the elevators with his brothers and their loves. He said nothing and tried to look relaxed as the others chatted around them about the hotel's grandeur and how lucky they were to be getting a room close to the top of the building, expecting a magnificent view.\n\nGenesis, who had stayed in this hotel before, admitted that he had called Isadore the day before and made some requests if they were going to be stuck in the hotel while Noah and Xavier met with their circle. He had been specific - a room on the highest floor possible, west-facing, a large room with floor to ceiling picture windows to capture the sunset. It took far too long for Noah's frazzled nerves to reach his room and tell his brothers he would meet them downstairs in the conference room for lunch before he could open the door to his room and usher Marcella inside. As expected, she immediately went to the window to admire the view.\n\n\"This is amazing!\" Marcella whispered, taking in the view that stretched out to the bay.\n\nShe turned to Noah beaming, the window lighting her up perfectly and making him groan as she dropped her head slightly and walked back to him as if he had chastised her with his groan.\n\nNoah had remained standing near the door, fighting his inner desires to smile back and enjoy her enthusiasm. As she returned to him, he stepped forward to sit on a velvet chaise positioned near the foot of the enormous bed. The room was large, with a lounge setting that the chaise was part of and a coffee table with the television cabinetry and wardrobes lining the far wall. While not quite a suite, it would be more than comfortable for one night's stay in the city.\n\n\"Step forward,\" Noah ordered softly, seeing her hesitate before him, seeming not to know whether to stand, sit or kneel. \"I want to see you.\"\n\n\"You're looking at me like you don't know me,\" Marcella frowned, but placed her hands behind her neck and widened her stance into the display pose she had been taught so long ago. \"Am I to your satisfaction, sir?\" she continued, half annoyed and half curious by his demeanour. Perhaps he didn't like the minor differences between herself and the Marcella he had battled with for domination the night before. Surely, he knew he won that battle. Even before Chella gained control, Marcella had given in to him last night.\n\nNoah continued to study her, noting the perfect pose and posture. Chella was a well-trained submissive, and he felt his cock twitch at the thought of what he could do to and with her as Chella. Noah pushed his conscience down as he reasoned that he had tamed her other personalities; why couldn't he indulge in this one as well? She was his for the taking, and he had wanted this for so long. He also wanted her fighting spitting kitten side, but to have her purr without forcing her to recognise his domination just this once was too much to ignore.\n\n\"Did I say you could speak?\" He asked softly but forcefully.\n\nHe watched as Marcella froze. Even if she hadn't recognised the various clues and signals that Noah thought he'd given out, she was realising now that he was about to show her who exactly was in control. Just as he had told her the night before, she was all out of options now. They would be doing things his way, starting right now.\n\n\"Did I?\" He repeated his question. He watched her critically as she shook her head, lowering it along with her arms and shoulders. \"Stand straight. I didn't ask you to move,\" he ordered, taking her in as he hadn't the opportunity to before. Her curves matched her height perfectly. Her green eyes seemed warm in the sunny room before they fell to the floor. \n\nNoah remained silent for only a minute or two, but it seemed much longer to Marcella, who struggled not to lift her head and return that searching gaze of his. This was the man she wanted, the dominant and controlling Noah who would set boundaries and give her no leeway now that she had returned to him willingly and without compromises. \n\nInside, Noah's heart raced, his cock hardening fast inside his jeans. He focused on remaining cool and calm as he had since leaving the jet. He could see her begin to tire as she stood still in front of him, not moving a muscle since his command was delivered. \n\n\"Undress,\" he said softly. Her eyes looked up at him finally, and he tried to read them, but saw what he thought was only a little doubt cross her face. \"Undress for me,\" he repeated a little louder but with a gentle inflexion. \n\nMarcella slowly undid the button at the top of the zip in the back of her dress. She then manoeuvred her arms like a contortionist to lower the zipper, and slip the dress from her shoulders to puddle around her heels. She took a moment to silently thank Vivienne for supplying her own clothes, including the matching bra and panties she was left wearing now. Bending slowly, she picked up the dress and folded it carefully before placing it on the chair beside her.\n\n\"Go on,\" Noah encouraged, enjoying the power he felt and this striptease more than he had before. His need for her was almost blinding him to her vulnerability in this version of herself. They had both reached the point of no return, he acknowledged as he gazed at the woman he loved. Then considered their circumstances as she reached behind her back to unhook the lacey scrap of material serving as her bra. A pang of guilt rose, but it was drowned by the heavy fog of lust and desire he felt for this woman and the fantasy playing out before him.\n\nMarcella placed her bra on the chair with her dress after folding it and ran her hands over and around her breasts before standing before him again. She could see the heat of desire in his eyes now. He had hidden it well until now, but she could feel the scalding heat of his gaze burning into her, and it made her hesitate as her hands trailed down her sides to the panties she still wore.\n\nAll Noah could think of was that somehow, he has this gorgeous woman in front of him, naked apart from her panties, and she wasn't fighting him or trying to top him for once. Unable to help himself, he stood and began a slow inspection of her as he circumnavigated her body. His cock was hard, and it took a lot of self-control not to pick her up right then, wrap her legs around his hips and plough into her.\n\n\"I said undress,\" Noah chastised and resumed his seat once more.\n\nShe peeled her panties off, sliding them down her legs and stepping out of them. Before she could place them with her other clothes, Noah was there reaching out his hand for them as he circled and inspected her again. She stood perfectly still, realising he was not as confident with her as he had been with Marcella and their battles. She tilted her head and chewed her lip, contemplating this. Everything she knew about Table men, including Noah, was that they are Dominant Alpha types. They want their women submissive. However, Noah seemed reticent to push her harder than some softly spoken instructions, which he repeated without any punishment for making him do that. \n\nNoah's heart beat wildly as his need grew to overpower his reluctance to take advantage of Marcella in this guise. He breathed deeply, taking in her scent, the sweet smell of her exposed flesh. He longed to touch her, but he resisted, truly using all his self-control now. There was no detail about her that he didn't take in through his inspection.\n\nHe listened to her breathing deepen, watching her breasts heave, noting that there was a slight tremble in her legs. He moved his head in close to her shoulders and lifted a hand to hold her hair against his face, breathing in deeply, knowing she could hear him. He moved to stand before her and look directly into her eyes. He smiled as he saw his heat mirrored back at him from her green depths in a deep wanton desire that he planned to inflame further. Reaching around her, he trailed a finger, slowly from the nape of her neck down her spine. Her back arched in response, her hips rolling forward against his making her moan softly at the feel of his hardness. \n\nMarcella was beside herself. She could feel his hand in the small of her back, encouraging her to press her hips more firmly against his as his other hand ran down her side. There was something arousing about being naked with him while he remained fully clothed. Her nipples were stiff, and her breasts felt full as they brushed his shirt. She knew he would feel her hard nubs and the heat radiating out from them as she tried to hold back her need to feel him skin on skin as they had been only hours ago before the sun had risen. \n\nNoah stepped back to look at her once more. She looked flushed with the heat and desire he could feel from her body. The sweet look that had been present all morning on her face had been replaced with a deep sense of longing. \n\nSeeing her exposed like this, naked standing before him against the background of the city through the expansive windows, was beyond his imaginings. His eyes took in everything. The way her hair dropped over her shoulders, the fullness of her breasts, the stiffness of her nipples, the curves of her hips and her pale skin, a stark contrast to his darker sun-browned skin all fed his desire for her. Her pussy was slightly reddened between legs that were smooth, skin shining after a recent shave. Yes, she was definitely aroused even though she was exposed and vulnerable to his desires.\n\nNoah picked Marcella up and, for a brief moment, allowed her legs to wrap around his hips as he walked the few steps to the bed and placed her face down without removing the bedding first. His brain was too clouded by lust for such niceties now. He stroked her back like he would pet a kitten as he sat beside her, leaning over to her ear, wanting an answer to the question he had asked what seemed a million times the night before.\n\n\"You are mine,\" Noah breathed deeply into her ear. \"Tell me, who do you belong to?\"\n\n\"You,\" she said softly without hesitation, which stunned him for a moment.\n\n\"No-one else?\" He pushed her, remembering her dream about Apollo and their contract.\n\n\"No-one,\" she whispered in reply.\n\n\"Not even Apollo?\" he couldn't help the growl with which he delivered those words.\n\n\"No-one!\" she said louder. \n\n\"Who do you belong with?\" he asked again, taking a breath.\n\n\"You, no-one else,\" she responded immediately.\n\n\"And who am I?\" he asked, narrowing his eyes. Trained submissives were taught to play this game, but he needed to know she knew who she was dealing with now and how serious he was about keeping her with him for now and always.\n\n\"You're...\" she hesitated. \"You're Sir.\"\n\nNoah raised his hand above Marcella's ass. He smiled as she tensed up when she saw what he planned from the corner of her eye. She anticipated this punishment and slightly arched, raising her ass as if begging for it until he crooned in her ears again.\n\n\"Incorrect,\" his hand fell on her ass, leaving a pink handprint. \"I don't want you to call me Sir. Who am I?\" He repeated.\n\n\"You're my Master,\" she said softly into the pillows.\n\nHer muscles tensed again with barely a move from Noah, making him smile inwardly. He was beginning to realise just how much he knew about this woman\u2014this beautiful creature to whom he had lost his heart and life over the last few months. His hand fell again, deepening the shade of pink on her ass and making his cock jump in appreciation.\n\n\"Incorrect. I don't want to be your Master. I will never be that,\" he growls. \"You are a beautiful, smart and independent woman. Once the world is safe for you again, we will be equals in all things. I will not seek to confine you in any way beyond our current crisis.\"\n\n\"I don't know what you want me to say!\" Marcella whined and squirmed below him. She couldn't think of a nickname she had given him, well, not a nice one anyway. Her mind was spinning out of control at failing this first test with him. Her eyes fell onto the shining ring on her left hand, and she felt tears form in her eyes.\n\n\"Who am I?\" Noah asked again. He pressed his hand on her lower back to still her and breathed deeply to draw on his self-control. \"Think, Marcella, you know me, you know us, together.\"\n\n\"You are the man who loves me and wants to marry me,\" she said quietly, still looking at the ring on her finger and remembering all the conversations they had regarding her keeping it after their deception was over.\n\n\"Correct!\" Noah said, a broad smile lighting his face for a moment before he concentrated back on the woman he held captive. He could see her muscles relax, her hips appearing to spread out as her ass relaxed the contracted muscles. He could see that she didn't think he would spank her now, and she was fighting to hide her disappointment of the fact by pressing her face into the mattress below her. He slapped her quickly and firmly. His hand cracking against the right cheek of her ass.\n\nHe had judged it perfectly. Just the right amount of force to cause a loud crack but lifting his hand off so quickly that there would only be a stinging pain. Short-lived but powerful; no deep pain. The truth was he was a Master and knew precisely what he was doing when inflicting erotic pain and pleasure on his partners. He had no intention of genuinely hurting Marcella even if she begged him as Chella. \n\nMarcella could feel him close the distance between them again and the hot breath against the side of her face moved as if to speak in her ear again. He remained silent, though, as she clenched her hands in the bed covers, wondering what other confusing demands he would have of her. He'd caught her unaware with the single slap to her ass. She could feel its heat and sting, knowing he had left a darker hand print on her so she would consider her responses about who he was in her life. She belonged to him, but he didn't want a slave or submissive. He wanted her, all of her. She peered inside her mind looking at the bound and gagged warrior woman, but the voice of her conscience spoke up, surprising her.\n\n\"It's not her he wants, Chella. He wants both of you together. That is who he loves. Not her, not you, but the beautiful blend of the two,\" she tried to find the elusive third within her mind. If she didn't find her soon and gag the bitch, she would wear her down again and make her blend with the warrior. Noah would love her just as she was. She could be everything he wanted and needed. She knew she could. She was pleasing to men, she knew what they wanted and liked, and it wasn't the warrior that was for sure, no matter what shape she came in. Her mind raced as she scrambled in vain to find that voice, \"Marcie!\" She screamed silently, panic making her race wildly, looking deeper inside herself.\n\nNoah leaned back and looked at Marcella. It was as if her entire body appeared to be reacting to something. Her legs and arms had become tense, and her toes curled. She seemed to have stopped breathing but then let it all out in a rush. He could see she was now breathing hard as if her mind screamed for oxygen, and she couldn't get enough in her panic. He immediately pulled her into his arms.\n\n\"Marcella, what happened?\" He looked into her unfocused eyes, willing her to speak to him. Had he pushed her too far again? Could he have fractured her fragile psyche into more pieces? He could feel her relaxing in his arms as he continued to croon and pet her. He lowered his forehead to rest against hers, making her look into his eyes. Brushing her hair aside and continuing to stroke her back as he waited patiently until he was sure she was coming back to him. He hoped that it would be Marcie looking back at him when they focused once more.\n\n\"Nothing happened, is something wrong?\" she asked quietly. \"I was enjoying your touches. Why did you stop?\"\n\nWith a quiet sigh, he placed her back on the bed as she had been. Noah positioned her head so he could see her face and maintain eye contact as he sat beside her. He needed to read what was going on in her mind and her expressive face and eyes were all he had to go on. He ran a finger down her spine, spreading out his hand over the pink marks on her ass, enjoying the arch of her back as she pressed up into his hand there, and she let out a small needy moan.\n\n\"Shh, stay still and quiet for me, Kitten,\" he crooned and saw a slight nod of her head in response to his words.\n\nHe drew his finger back up her spine, pressing in harder. The look on her face expressed the pleasure she was feeling, her mind fighting against her body's natural response. Noah let his fingers linger on her neck, circling around it. Her eyes closed, and he felt her arms and hands tense again. Concerned, Noah continued cautiously with the massage he had planned after her denial of her panic attack. He passed his hand over her right shoulder and down her side to rest on her hip. Then he pressed gently, stretching her skin across her ass, adding slightly to her discomfort there. He breathed in deeply, closing his eyes momentarily as he experienced the foreign pleasure of having her quiet and compliant before him.\n\nNoah continued, drawing his hand down further down her leg, before running back upwards over her inner thigh. Her legs were still relatively close together, but he didn't make any effort to part them. He passed over her pussy with the slightest of touches as he ran his fingers up her spine. He felt her hips twist as she pressed into the bed. He lowered his head down and kissed her back. He left a few short, gentle kisses before twisting her hips to turn her over to face upwards.\n\nMarcella's nipples were hard, her breasts swollen with arousal. She arched her back, trying to tempt him into touching them, but he resisted the temptation she offered him. She almost whimpered as his hand moved lower to rest over her belly. He slid his fingers across her stomach a few times, lowering towards her pussy with each pass, making her give voice to her whimper when he stopped his hand just about her mound. Resisting the urge to move her body again to tempt him and show what she wanted, she gazed up into his heated eyes as he slipped a finger downwards, between her lips and over her clit, delving lower, seeking her wet core. \n\nNoah glided his finger through her wetness, easily parting her lips as he pressed in. There was no resistance as he felt her legs and thighs relax outwards to let him in as he delved deeply into her. He curled his finger inwards, finding the little spongy area inside her, pressing upwards. His thumb was resting over her clit. He held his hand still, applying pressure, knowing that she would be fighting the need to move against his fingers. She began to rotate her hips in small movements making him give her a stern look again as a warning.\n\n\"I am in control today. You don't move or make a sound!\" He growled at her wanting to see her reaction to his strict inner Dom. He began to rotate his thumb and press his fingers against the ridged G-spot within her. Her eyes closed as she pushed her head back into the mattress and bit her lower lip. He knew that he could make her cum in seconds if he wanted, he could feel the muscles in her legs trembling, and he imagined titillating currents ran from her pussy along her nerve endings to push her closer to the edge of ecstasy.\n\nThis woman was so very different from the woman he knew as Marcella. He had to work hard to get the warrior guise of Marcella this close to orgasm. In contrast, the woman before him seemed to rise to the heights of her climax with only a little titillation. He wondered how she would react if he took her close to the edge and pulled her back, keeping her from the climax she sought. He looked for what he believed were her tells, along with her trembling legs. Her breathing, her little noises, even though he'd told her to be silent. Her lip biting, the movement of her head. Her skin tone, flushing. He needed to know if the signals that she was about to orgasm were the same if he wanted to succeed in taking complete control, even if it was only for this one time.",
        "Marcella shifted her ass, trying to feel more pressure from his fingers. She knew she shouldn't move, but she was so close it was almost painful to find her climax just out of reach. She fought herself, knowing she shouldn't move and show him she could be the obedient woman he wanted and needed. Still, the growls from the warrior were getting louder, and she worried the warrior would break her bonds in frustration and need and take her over again.\n\nNoah's fingers continued their rhythm, pressing hard into her but circling gently around her clit. She was so wet, he was finding it challenging to resist stopping to taste her, which would be his usual approach by this point. She tensed, and he knew she was almost there. Her hand moved onto her breast, and he immediately withdrew his fingers, cutting off her impending orgasm.\n\n\"That was naughty, Kitten,\" he chastised as she gasped, widening her eyes and flinging her hands from her body, knowing he had caught her doing something she shouldn't. Marcella's brief fire, which he knew so well, lit her eyes before it was doused under the large wide repentant eyes of this new version of the woman he loved.\n\nHe had known that at some point, she wouldn't be able to resist helping to reach her climax, no matter how hard she tried to obey his commands. It was at that moment of climax, just before the first release, that you become unaware of your own actions. And that action was exactly what he had hoped from her. He knew now that his Marcella was still reachable. She was locked in there but close enough to the surface to find in that moment of denial. Still, he wasn't cruel, and he intended to let her orgasm now. It was enough to know the whole of her was within his reach.\n\nNoah was aware that time was running short, so to press his point with her, he undid his belt buckle and slid his belt through his jeans' loops. He lifted her hands up and slid his belt around them, pulling her wrists tightly together. The tail of the belt passed through twice, forming a knot. Then he placed her hands above her head onto the pillow.\n\n\"No touching!\" Noah growled.\n\nLooking straight into her eyes, Noah stroked his hand down her body again. He thrust two fingers into her without warning this time. He knew it wouldn't take long to get her back to where she had been. He wanted her to have that internal fight within herself as her mind battled her body between self-control and the desire for release. He settled into a rhythm again, slowly building the pace. He stroked around her breasts and teased her nipples with his other hand to show her that he understood her needs.\n\nMarcella felt her body immediately begin to respond. Her eyes closed once more, and her chest heaved as her breathing deepened. Her whole body was outstretched, elongated on the bed from her hands above her head to her legs extending downwards as her hips push up to meet his internal touches. She tried to stifle the sounds escaping her mouth, but it was all too much for her now. Biting her lip, she momentarily opened her eyes to look for Noah's reaction. Surprisingly he smiled down at her, lowering his head to kiss her lips which she savoured hungrily.\n\n\"I feel you getting close again. You want to come, don't you, Kitten,\" he crooned and saw the enthusiastic head nod. \n\nPushing her head back and stretching her arms tightly above her to touch the headboard and show her obedience, she kept her gaze locked to his. His fingers continue to press into her, and he rotated his thumb on her clit. She felt the tingling tendrils of pleasure running through her as her pussy tightened around his fingers.\n\nIt killed Noah to watch this fucking amazing woman writhing in pleasure under his hands and not bury himself inside her. His whole body sung with his own need, and the temperature in the room was soaring as he held her climax just out of reach for a few minutes more.\n\nHer head stretched back as she arched impossibly higher. Her breasts were standing firm, her nipples were erect, rising and falling with her heavy breathing. She was struggling to maintain control. Her entire body was quivering, and her body glowed with the sheen of perspiration. She began to fail to stifle the sounds of her desperation for release. \n\nNoah felt her tighten all over, her lips closed, her eyes ablaze, screaming for satisfaction. The anger of her warrior side shone through her eyes again before they changed once more to plead with him as he held her frozen in time for a few more seconds; her whole body began to tremble violently when he lowered his mouth close to her ear to whisper.\n\n\"Come, my Kitten. You can let go now,\" he said and barely completed the words when she exploded, her body jerking and spasming as the climax took her over.\n\nHer head pushed back abruptly as the first wave of her orgasm flooded through her body. She stiffened then crumpled. Her body tensed and weakened with each successive wave of the wildfire that travelled through her body, reaching every nerve ending. Eventually, she slumped, her body like that of a rag doll. She could feel Noah undo the loop of his belt and slip it out through the buckle, releasing her wrists. She lay still, feeling unable to move now that she was free of the restraint. \n\n\"Rest while I shower,\" Noah instructed. People will be looking for us if we don't appear for lunch soon.\"\n\nThe last thing Marcella felt like was having to attend a stuffy lunch, but more than that, Noah hadn't come yet, and she knew why he was in need of a shower. Guilt nagged at her submissive heart and tainted the bliss she was floating on.\n\n\"I'm okay. I can shower with you,\" Marcella said, making as if to sit up and follow him, but he growled.\n\n\"You need to learn to do as I ask. How else will I ever learn to trust you again? Now rest until I am done,\" he commanded and entered the bathroom, leaving her alone with the voices in her mind who cast doubt on her every decision."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "multiple personality",
        "dominant",
        "submissive",
        "hotel room",
        "family"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-32"
}