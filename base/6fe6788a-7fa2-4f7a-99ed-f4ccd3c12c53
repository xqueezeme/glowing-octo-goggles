{
    "title": "Divine Poker Ch. 03",
    "pages": [
        "I've enjoyed writing this story. I realized as I was writing A Divine Gift that the power was just too open ended to make for a good story. It was sort of the Superman problem. A nice lesson for an author. So this is sort of revisiting the same world with a powered down and more limited protagonist. Hopefully you guys enjoy it as much as I've enjoyed writing it.\n\n\n\n---\n\nKennedy and I hit it off very quickly. Turns out we had a lot in common. We'd come from relatively sheltered backgrounds but neither of us had succumbed to the \"wild oats sewing\" that was so prevalent in Las Vegas.\n\n\"I just needed to get away, you know.\"\n\nI nodded, her husband had been a real piece of work but he'd made her sign a pre-nup that had ended up protecting her more than him as it turns out. Kennedy's family wasn't rich but they were pretty well off. And her ex-husband's embarrassment over the way he was caught got her to trade a non-disclosure agreement in exchange for a pretty healthy alimony check.\n\n\"Don't tell anyone though. I've already broken the NDA just by telling you,\" she said, leaning forward conspiratorially.\n\nI made a zip and lock motion on my mouth and said, \"Your secret is safe with me, ma'am.\"\n\nShe giggled then her soft brown eyes tracked behind me, suddenly distracted. I knew the look. I glanced over my shoulder and instantly saw the objection that stole her attention. It was a blonde waitress who was absolutely stacked. \"She'd look good with her legs wrapped around you,\" Kennedy said.\n\nIt had taken some getting used to but Kennedy had a very odd sexuality brought out in her by God's quirky rules. She got off on dating someone and watching them with other women. Plus she liked girls herself. In truth, while I'd kissed Kennedy and we'd had intimate moments including sleeping together our first night. I'd yet to actually have sex with her. She seemed more turned on by the idea of me rejecting her in favor of other women. Okay, I say it had taken some getting used to but, honestly, I still wasn't used to it yet. It was weird. Hot... but weird.\n\nKennedy raised her hand and the waitress walked over, \"Hi, I'm Harper, how can I help you?\" she asked in a happy, perky voice. Something about it struck me as affected but this was no place to bore into her psyche.\n\n\"I just want a diet soda... what about you, honey?\" Kennedy said, batting her eyes at me and stroking my hand.\n\n\"Two, I guess. Too early to start drinking,\" I said.\n\n\"We have screwdrivers and mimosas,\" Harper said helpfully.\n\n\"That's fine. Thank you though,\" I said. She looked slightly deflated, probably anticipating a small tip, but walked away without further incident.\n\n\"Wouldn't you like to just bury your face in those big ol' tits of hers?\" Kennedy asked.\n\nI looked her dead in the eye and said, \"I'd rather titty fuck her. I don't think yours are big enough for that.\"\n\nKennedy rolled her eyes and moaned, squirming in her seat in frustration. One of the things I'd learned is that she really seemed to like it when I compared her unfavorably to other women. She drew the line at outright insults and she was very defensive about her intelligence. But mentioning a girl's bigger tits or tighter pussy got her really turned on. Still, I was finding it to be a slightly frustrating situation. She seemed like a really cool girl that I enjoyed hanging out with but her lack of interest in actual intimacy had me feeling weirdly rejected. I know... I know... It sounds ridiculous but trust me, when you like a girl, you want to have physical intimacy with her and even if she's actively throwing other girls at you, it still feels a bit like rejection. Like she's friend zoning you. A feeling made all the worse and more confusing by her insistence in calling me her boyfriend.\n\nWe got our drinks and made small talk. Kennedy told me about her ex and all the difficulties she had with him. He seemed like a real piece of work. Abusive and manipulative and, apparently, disloyal and dumb.\n\n\"It just pisses me off, you know. I mean... come to me and tell me, right? I'm your wife. Talk to me!\" she said. She paused for a moment, lips wrapping seductively around her straw as she took a sip of her drink. She looked up at me through long eyelashes, teasing me with her every glance and gesture. \"I mean... I've never done anything like that before. But it was hot, you know. I'm sure if he'd asked me, I'd have been up for it.\"\n\nI took my own sip, thinking about her words, \"You've never been with a girl before?\"\n\nShe blushed and looked away for a moment, \"I mean... I've thought about it... I guess... I never did it before because it just didn't do much for me. But thinking about him bringing her home and fucking her is just so damn hot.\"\n\n\"Too bad it went the other way,\" I said. Kennedy looked at me and a cute, crooked smile formed across her lips.\n\n\"I wouldn't say it's bad at all. I'd rather find out my asshole husband was also a liar sooner rather than later,\" she reached across the table and stroked my hand. \"Besides, I'd rather have an open, honest relationship with a man like you. I think you get me, Phillip.\"\n\nIt seemed like whatever had happened to her fundamentally changed the way she was looking at men, sex, relationships... everything. When she talked about her ex, you could hear the difference. I looked at her and decided if she wanted an honest relationship then I needed to be honest with her too.\n\n\"Kennedy, can I tell you two things?\"\n\n\"Sure.\"\n\n\"First, I like you. And I'm glad you want to be my girlfriend,\" I said.\n\n\"Me too,\" she said, staring at me with a weirdly adoring look. It was, frankly, unnerving.\n\n\"And don't get me wrong... your little... you know... kink... is hot.\"\n\n\"You like that don't you, stud,\" she said leaning forward. \"You like that your girlfriend gets off watching you fuck little blonde sluts?\"\n\nMy eyes darted up to Harper who was two tables away but she apparently didn't hear us. I looked back at Kennedy and said, \"Yes... but I think a boyfriend and girlfriend should share some sort of physical intimacy, don't you?\"\n\nKennedy looked at me then looked away. When she turned back, she looked almost scared. \"Phillip, I don't know if I'm ready for that.\"\n\nI was taken aback. Of all the reasons to give me, that wasn't the one I expected. \"Truthfully, Kennedy, I'm not either. I know this is going to sound weird but I'm a pretty traditional guy.\"\n\nShe laughed but then stopped when she saw the look on my face. \"Nothing about the last 48 hours has seemed very traditional to me. You some kind of bible thumper?\"\n\nNow I chuckled, \"No... definitely not. My parents were, I guess... or are. I've had my eyes opened to a lot of worldly delights... especially since meeting Jaime and now you. You'd probably call me a lapsed Catholic... if I was Catholic.\"\n\n\"So you want me to be... what?\"\n\n\"My girlfriend. I like you. I want to get to know you... and... well... I want to get to KNOW you if you know what I mean.\" Kennedy looked at me and blushed, averting her gaze again. She bit her lip then looked back at me, seeming to make up her mind about something. I watched as she pushed her plate over to my side of the table then sexily slid out of her side and onto mine. She snuggled up next to me, pressing her warm, smooth legs against mine as she nuzzled under my arm, guiding it over her shoulder.\n\n\"Better?\" she said, purring into my ear.\n\n\"Yes,\" I said, my eyes unable to tear themselves away from the wide expanse of cleavage that her tight, black v-neck was revealing. She looked up, seeing where my eyes were and smiled.\n\n\"See something you like?\" she asked. Her finger reached up and pulled the v-neck down slightly, revealing the lacy white bra underneath. I could see her nipples poking through.\n\n\"Very much,\" I said. Then I considered her kink that I'd apparently given her somehow and whispered, \"A woman's got to keep her man happy or he might stray.\"\n\nShe let out a little squeak of a whimper before whispering back, \"What if I want my man to stray? Doesn't that mean I should hold out on him? Keep him horny and frustrated?\"\n\n\"Sure.. if you want him to be unhappy and constantly annoyed with you. But then he wouldn't be your boyfriend very long would he? You don't want him to leave you for another woman, do you?\"\n\nShe shook her head, biting her lip sexily as she did. \"No... I want him to always come back to me,\" she said in a high pitched, innocent voice.\n\n\"Then you better keep him happy,\" I said, looking down at her. She nodded, still biting her lip. Again, she seemed to pause as she considered something then she glanced around for just a moment before sliding her hand onto my lap. Her fingers traced my hard cock through my shorts, stroking it gently. It surged under the touch of her fingers and my breath caught. Kennedy looked up at me and our lips in a gentle, soft kiss.\n\n\"I'm sorry... I'll do everything I can to keep you happy,\" she said softly.\n\n\"I don't want it to be a chore, Kennedy. I just think we're better off being friends and not boyfriend and girlfriend if you don't find me attractive.\"\n\nShe sniffed a little but kept stroking my cock, \"I do find you attractive Phillip. Very attractive. It wouldn't be hot to me for you to cheat on me if I didn't also find you attractive.\"\n\n\"You're so weird,\" I said and gasped as she gripped my cock.\n\nHer giggle arrived in my ear and moments later her hot, warm breath was whispering again, \"I know. I wasn't like this before I met you. But, God, something about you just does it for me you big stud.\"\n\nHer words reminded me of the other thing I wanted to tell her though it was pretty hard to concentrate at the moment. \"About that, Kennedy. I just... well... I'm worried that I did this to you,\" I said.\n\nShe laughed in my ear before gently licking the lobe with her moist tongue. Yup. Very hard to concentrate. \"Why are you worried about that? I'm happy you did. I was miserable a couple days ago. Whatever you did to make me obsessed with watching you pound little blonde sluts like Jaime you can do anytime.\"\n\nIt was getting hard not to moan out as her stroking of my cock became more insistent. \"Well... it's just... I think it's more than that. The poker game...,\"\n\n\"Stop worrying,\" she said, interrupting me, \"Go with it. I'm happy, Phillip. And very wet,\" she said. Her tongue tickled at my ear, sending shivers down my spine that ended surging into my cock. \"Do you want to fuck your girlfriend?\"\n\n\"Very much,\" I said.\n\n\"Even though my tits aren't big like that slut?\"\n\nI nodded as she continued to stroke my shaft.\n\n\"And my pussy isn't as tight as Jaime's?\"\n\n\"No,\" I choked out. \"Hers is so much tighter.\"\n\n\"And you even fucked that slut's ass and I'd be way too scared to let you do that to me,\" she said. She squeezed my cock tightly, reminding me about just how tight Jaime's perfect little ass had been around my cock. \"So what can I offer you?,\" she asked. The tone change was marked. The sexy, flirtiness that had been there before had been replaced by a genuine earnestness.\n\n\"Affection, intimacy, companionship?\" I said.\n\nShe paused her stroking to look at me, \"That's not sex,\" she said. Her tone was neutral, searching.\n\n\"Intimacy is,\" I said.\n\n\"So you don't want to... you know... fuck me? You want to just... make love to me?\" the words came out haltingly, as if the very idea of them left her confused and dismayed. It was like watching a robot short circuit right in front of my eyes.\n\nI couldn't think of any words to say so I just did what seemed natural. I leaned forward and kissed her. My lips gently played along hers for a moment and I wasn't sure whether she was even going to reciprocate. Then I felt her mouth open slightly. My tongue slid along her lips and then felt hers. It was like electricity. She sighed softly into the kiss and her body melted into mine as we made out not like two lust fueled teenagers but rather as intimate lovers.\n\nThe waitress, long forgotten, came back with our drinks. I saw her watching us quietly for a moment. She had an almost longing look to her. She opted not to say anything and simply walked away, leaving us to enjoy our private intimacy in a very public location. Kennedy finally placed her hands on my chest and pushed me gently away. I took some pride in the fact that she was breathing quite heavily as she tried to replenish her oxygen levels. Frankly, the heavy breathing was pretty pleasant to look at as well.\n\n\"That was... wow...,\" she said.\n\n\"That's how a boyfriend should kiss a girlfriend.\"\n\n\"Yeah?... Yeah...,\" she said, still struggling for words. I smiled, taking a sip of my drink and looking around at the casino. Kennedy followed my gaze as we looked out across the sea of people. For all the glam and glitz of Vegas, if you lived there long enough, you started to become inured to it. The loud, fat lady with a glittering cowboy hat didn't grab your attention anymore. Your eyes skipped right past the 70 year old man wearing a leisure suit and showing off more chest hair than Magnum PI. Even the gorgeous 22 year old red head on the old man's arm didn't hold your attention for much longer.\n\nNo, what stood out was the almost ordinary. The casual. The thing you missed seeing from your hometown. That's why my gaze fell on the couple sitting only a few tables away. I couldn't tell much about the man. He looked to be about my height with well coiffed hair that looked like it was encased in hair spray. He was built about my size though his taste in clothes clearly trended towards the preppy with a purple polo shirt and khakis.\n\nIt was his girlfriend... or wife... or sister? That caught my eye, however. Beautiful long blonde hair framed her face. She had high cheekbones that made me think of conquering Vikings. She was dressed much more casually than the man and looked like she was either coming from or heading to a workout. The two were in some sort of rather animated discussion at the moment but I was unable to make out much of the conversation. As I watched, the conversation seemed to grow more animated until finally the man's voice elevated to the point where I could hear him say, \"Piper... I just don't know what you want from me. Tell me what you want.\"\n\nHe took her hands in his and raised them up, cupping them with his own. I couldn't hear the blonde's response but her lips were easy to read. \"I don't know.\"\n\nHe stood up and started to walk away from her and towards our table. Most of the eyes in the dining area were turned to the couple now. He looked nervously before saying, \"Call me when you figure it out Piper. I love you. I'll do anything you want.\" I couldn't help glancing around and noting the varied reactions. Several guys of varying ages were shaking their heads. One little old lady clutched her hands to her chest and seemed to melt at the lovestruck words. Another girl wearing a leather jacket and a giant nose ring rolled her eyes and laughed with her friends.\n\nPiper simply stared at him, not able to say anything. She looked around at the eyes watching her personal life unfold in such a public way and couldn't think of anything to say. She just looked at him creating a horrible, awkward silence. He stood watching for almost a minute before finally turning and walking away.\n\n\"What was that all about?\" Kennedy asked me.\n\nI shrugged, \"No idea. Seemed like a bad breakup though.\"\n\n\"That means she's single now,\" Kennedy said, eyes twinkling.\n\n\"Keep it in your pants,\" I said and Kennedy stuck her tongue out at me in response. \"She just broke up. I don't like being a rebound.\"\n\n\"Why not? She probably needs a good lay and you already have a girlfriend. A rebound girl sounds perfect to me,\" she whispered in my ear. She also stroked my cock. She already knew how to get me in the mood. Her idea did have merit. I wasn't looking to date this girl. Simply to have a little fun.\n\nI screwed up my courage and slid out of the booth. Kennedy started to follow and I turned back, \"Nope. You just get to watch today.\"\n\nShe bit her lip and nodded. She wasn't the only one who's learned someone's buttons. I walked away, knowing that Kennedy was squirming in her seat as she watched me approach the young lady. As I got closer, I realized she was younger than I thought. She was probably 19 or 20. Definitely still in college. \"Do you mind if I sit here?\" I asked.\n\n\"Kinda,\" she said, \"In case you're the only person that didn't notice my boyfriend just left me.\"\n\n\"Did he? It seemed like you didn't really give him a reason to stay,\" I said cautiously.\n\nHer eyes snapped to mine and there was a fire there. \"Is that what you think?\"\n\n\"I don't really think anything. That's why I came over. To see if I could help.\"\n\n\"And how can you help,\" she asked, looking at me intently as she sipped on the mug in her hand.\n\nI'm not sure what made me say it but suddenly I found myself holding the pack of cards that had been in my pocket, twirling them between my fingers. \"I can be a very good listener. Tell you what, we'll play a hand of poker. If I win, you let me listen to your story. If you win, you can decide if I stay or go. Okay?\"\n\n\"No date attached or something? Really shooting high with this one aren't you?\" she said, her mouth curling into a snarky smile of disdain.\n\n\"Maybe I'm just confident in my powers of listening?\"\n\nShe rolled her eyes but didn't turn me away. She watched me for a minute and I gave her my best smile. \"Aren't you here with that girl over there?\" she asked, finally.\n\n\"I am. That's my friend Kennedy. She wanted me to come over and talk to you,\" I said.\n\n\"Really?\" Piper asked full of skepticism.\n\n\"Truly. Give her a little wave. You won't see any animosity or anger on her part,\" I said confidently. Piper raised her hand, wiggling her fingers in a tentative wave. I didn't bother to look behind me. I could imagine how Kennedy responded. \"Satisfied?\"\n\n\"I guess. She's really just a friend?\"\n\n\"More of a 'it's complicated' situation,\" I said as I rifled through the cards, shuffling them quickly. I liked the rhythmic sounds of the shuffle and bridge. Piper seemed to accept my non-explanation and watched as the cards rose and fell in my hands. I'd made tens of thousands of shuffles with these kinds of cards and could probably do it blindfolded in my sleep while underwater. \"Five card draw?\" I asked.\n\n\"Are you a pro?\" she asked, suddenly very skeptical.\n\n\"I'm trying to be. I'm not there yet though,\" I replied with a smile. Hopefully a disarming smile.\n\n\"How about we just play texas hold'em?\" she asked. Without betting, hold'em was a completely luck based game. Not that five card draw had all that much skill involved but at least it was a little.\n\nI shrugged, \"Suit yourself,\" I said. Either God wanted me to win this or he didn't. That part was out of my hands. I finished dealing and offered her the cut.\n\nShe grabbed the cards in her long fingers and said, \"Can I deal? I'd hate to get hustled by a card shark.\"\n\n\"Sure,\" I said. Boy she was cautious. Either that or a real control freak. I looked at her and watched as she dealt the cards carefully. She was clearly not practiced at it and nearly flipped over my second card. It wouldn't have mattered much since we weren't betting but it still made me grind my teeth a little bit. I slid my cards up and looked at them, a Jack and a deuce. Not the worst hold 'em hand but pretty bad.\n\n\"I guess we could just show them, huh?\" she asked.\n\nI shrugged again, \"Sure. Takes away the excitement though.\"\n\n\"Nahh... the winning and losing is the fun,\" she replied, smirking at me and giving me a little wink.\n\nI showed my cards and she laughed before revealing first one, then a second Ace. If you haven't played Texas Hold'em, this is what we would call a \"bad beat\" just waiting to happen. The odds were definitely not in my favor. She looked at me and smiled, \"Want to raise the stakes?\"",
        "\"Not particularly,\" I said, trying to calculate the odds in my head. They weren't good. Somewhere around 10%.\n\n\"Suit yourself you big chicken,\" she said before flipping over three cards. Now a 7, 6, and 5 stared up at us from the shiny formica table. I groaned inwardly, telling myself that this was entirely luck and I'd simply lost a coin flip. My real disappointment arose from having misread the signs. I thought this girl needed some divine help and God would back me up here. I guess this was one of those deific jokes the old man was playing. \"How about now?\"\n\n\"I'm like a 2% chance to win,\" I said. I needed two perfect cards to come as the last two.\n\n\"I'll let you buy me dinner if you win,\" she said with a winning smile. She was clearly enjoying getting the upper hand on a wannabe poker pro. Even if she'd taken every ounce of skill out of it. \"And if I win... you buy me a drink?\"\n\n\"So either way I'm buying you something? That hardly seems like a fair bet.\"\n\n\"Fine... if I win, I'll buy you a drink,\" she said.\n\n\"How is that remotely fair. If I win, you buy ME dinner. And If I lose, I'll buy YOU a drink,\" I said.\n\nShe looked at me, squinting her eyes. I could tell that I'd ignited a little competitive fire in her. \"Fine... fine... it's only 2%, right?\" she said.\n\n\"I think it's less actually... like 11% of 13% so like 1.5% or so,\" she looked at me, suddenly slightly worried before finally nodding and flipping over another card. For the first time in the last three minutes, I finally got my hopes up. A deuce hit the table. Now a pair of twos obviously doesn't beat a pair of Aces, but at least I had outs now. Any Jack. Any 2 and I win. 5 outs out of the remaining 44 cards. 11%.\n\n\"Are you hustling me?\" she asked suddenly.\n\n\"You cut and dealt. How would I be hustling you?\"\n\n\"I don't know. You could have shuffled them in some sneaky way.\"\n\n\"To guarantee that no matter where you cut, I'd win?\" I asked. The incredulity in my tone was apparent.\n\nPiper started to flip over the last card before looking at me. \"You still need help, right? Any Ace comes and I win, right?\"\n\n\"Really any card except the three remaining Jacks or the two remaining twos.\"\n\n\"Want to make it more interesting?\"\n\n\"Piper,\" I said, using her name for the first time, \"I\"m Phillip. Take it from somebody who gambles... a lot... this is a bad bet for me. Not as bad as it was but still very bad. You'd have to give me really good odds here for me to make another bet.\"\n\n\"That's not how poker works though,\" she said in protest. \"I can bet whatever I want and you either call or fold.\"\n\n\"Yeah. When neither one of us can see the cards. Then you have bluffing. This isn't poker. This is just two people betting on some event. I need odds to keep raising the stakes.\"\n\nShe looked at me quietly then said, \"Fine. If I win, you buy me dinner. What do I have to offer to get that accepted.\"\n\nI thought about it. It sounded like I was going to be at the very least taking this girl to dinner. What did I want if I won? I realized that, if I won, I was likely to get everything I wanted anyways. That's how these little poker games played out. So while I talked a good game about needing good odds, really I just needed her to keep her ask modest because my potential winning was always going to be a huge payday. Nevertheless, I made a big show of contemplating the question. \"If I win... let's see... If I win, you let Kennedy watch.\"\n\nHer eyes narrowed, \"Watch what?\"\n\nI shrugged, refusing to answer. I let the implication just hang in the air for a moment before gesturing, \"You going to deal that last card?\"\n\nShe looked at me, trying to puzzle me out before she flipped the last card. Neither of us looked down. We simply stared at each other, daring the other one to break eye contact first. It was because of that, that I saw it. Her eyes twinkled for a moment. Just a brief flash of light that you'd never notice if you weren't staring right at her. I knew I'd won. I looked down and, sure enough, there was a Jack staring up at me. My two pair, Jacks and deuces beat her pocket Aces.\n\n\"So I guess you owe me a dinner,\" I said, smiling at her. She looked down and realized suddenly she'd actually lost.\n\n\"How?\" was all she managed.\n\n\"You lost. Now I have a nice dinner to look forward to.\"\n\nShe looked at me, and suddenly her bluster was gone.\n\n\"But first, I believe I get to listen to your story, right?\" I said.\n\nPiper nodded meekly before asking, \"What do you want to know?\"\n\n\"What was going on with your boyfriend?\" I prompted her.\n\n\"I... well... it's hard to explain. We've been dating for four years. He and I met at an eating disorder clinic,\" she said.\n\n\"You?\" I replied, my shock pretty apparent. She wasn't an olympic athlete or anything but she was still one of the fittest women I'd seen in a long time.\n\n\"We've been good for each other in that regard. My mom warned me about being codependent with someone like that, you know?\" she said. I nodded as she continued, \"Our problems weren't like that.\"\n\n\"What were the problems?\"\n\n\"Well... until a week ago, I thought it was him. He just wouldn't ever take responsibility for things. He's so happy go lucky and relaxed. I know he loves me. Or he thinks he does at least. But he's just not much of a take charge kind of guy, you know?\"\n\nI could see the twinkle in her eye as she watched me. I listened to the words, parsing them for hidden meaning. \"Go on,\" I said, gesturing for her to continue.\n\nShe shifted her balance in her seat and gave me a tight little smile before continuing. \"It was a lot of little things. I mean, we're both in so much better shape now. And he didn't want to do anything. Sometimes I felt like he even found me more attractive 70 pounds ago, you know?\"\n\n\"I can't imagine finding you more attractive than you are right now,\" I said. It wasn't the smoothest line ever but Piper seemed to appreciate it. She blushed and tucked her long blonde hair behind her ear.\n\n\"Thank you,\" she said, avoiding my eye contact now. \"Anyway, should I continue?\"\n\n\"Yes, please?\" I said.\n\n\"About a couple months ago, Eugene came home late. Then he started working later and later. At first, I thought he was just busy at work but when I asked him about it, something about the explanation never rang true to me. He forgot that we share a credit card and when I saw a hotel charge on there from in-town, I knew what was happening.\"\n\n\"What did you do?\" I asked.\n\n\"I followed him one night. He met this girl. She looked a lot like how I used to look. Not nearly as fat though. Just a little bit thick. She was cute, really,\" she said, looking at me. I couldn't help but flick my eyes up and down Piper's trim, athletic body. She was truly gorgeous but I could see how she'd be very attractive even with a little more weight. \"She had bigger tits too. I used to. I kind of miss them.\"\n\n\"You truly are beautiful. I'm not just saying that.\"\n\n\"I know. That's the thing. I went down this spiral. I realized that I wasn't really addicted to eating. I just have an addictive personality. All I'd done was shifted my unhealthy eating to obsessive exercising. But seeing my boyfriend banging a girl not nearly as fit as me sent me down a whole different spiral. I started drinking. A lot. And then I got into online poker. And I played... again... a lot,\" she paused to look at me. Probably looking to see how much I was judging her. Frankly, it wasn't exactly a shocking story to hear in Sin city. She continued, \"I confronted Gene and he begged for forgiveness. He did all the things a guy is supposed to do. Bought me flowers. Bought me presents. He was super attentive. He noticed how much poker I was playing and offered to fly me out here for a romantic weekend.\"\n\nShe was silent for a moment. Her sneakered foot was bouncing nervously on the floor, shaking the table gently. I tried to give her the time to articulate things in her own words. I was genuinely curious about the fight that had precipitated all of this. It seemed like she'd agreed to forgive him. So what had happened?\n\n\"But I started noticing all the looks I was getting from guys. Hungry looks. And I liked them. Gene didn't give me those hungry looks. He had these dopey puppy dog eyes and as wishy washy as he'd been before the affair, he was even more so afterwards. I couldn't get him to decide on a place to eat. Let alone take charge of anything else. It was like living with my little brother all over or something.\"\n\n\"That sounds rough,\" I said.\n\nShe nodded, \"I just keep seeing all these guys who do want me, you know? And then there's Gene. And there's a lot about him I do love. Truly. He's so wonderful and attentive and he genuinely wants me to be happy. But part of me just wants to get back at him, you know? Plus he's just so... weak.\"\n\nAnd there it was. I nodded, starting to finally understand. I may not have sussed out all the contours of her new kink but I could see the broad outline. \"So you want him to be strong.\"\n\nShe shrugged, \"I want to be with a strong man,\" she said, changing the words in a not particularly subtle way.\n\nI pushed the menu on the table to the side and leaned forward, \"I decided not to wait for you to buy me dinner. You're going to pay for the room service.\"\n\nShe blinked before whispering, \"I am?\"\n\nI nodded, \"Yup. C'mon,\" I said, grabbing her hand. She gave only the briefest bit of resistance as I pulled her along with me. Now, seeing her out of the booth, I finally got my first full look at her. She really was gorgeous. Her whole body was fit and toned, Her long legs were smooth and practically glowed. She was wearing a short pair of yoga shorts and cute little tennis shoes. She was almost the polar opposite of what you typically see in Vegas. I looked over my shoulder and gestured for Kennedy to follow. She threw some bills down on the table, grabbed her purse and scampered after us.\n\n\"She's coming?\" Piper asked.\n\n\"She gets to watch, remember?\" I said.\n\nPiper gave an understanding, \"Oh,\" as I tugged her hand, pulling her behind me. The three of us made it to the elevator and, as the door closed, I placed my hands on the small of Piper's back. She didn't pull away, instead leaning a little closer before glancing my way and giving me a playful smile. She caught sight of Kennedy standing a respectful couple of feet away and she got a nervous look on her face for a moment.\n\n\"Don't worry about her,\" I said. Piper's eyes obediently snapped back to mine and, for just a moment, we held that gaze. I leaned forward, softly kissing her lips for the first time. She was a little tentative at first but she quickly increased her passion, all thoughts of Kennedy momentarily forgotten. She moaned lustily into my mouth as my hands roamed across her body, cupping her tight bubble butt with one hand as I teased my fingers along her spine with the other. She ground her hips into me as we continued to make out, encouraging my growing erection with her hips.\n\nWe finally broke our kiss and she looked at me, beaming with a broad and dazzling smile. \"Is this for real?\" she asked.\n\nI nodded, \"Absolutely.\"\n\nA sneaky look crossed her face and her hand reached down to cup my engorged cock through my pants. \"No... is THIS for real?\"\n\nI smiled, \"Want to find out?\"\n\nShe nodded meekly and flushed bright red.\n\n\"She's adorable, isn't she Kennedy?\"\n\n\"Yes, dear,\" Kennedy responded with a happy, chirpy tone.\n\n\"You think she's good in bed?\"\n\n\"Probably,\" Kennedy replied, playing along with the game.\n\n\"Better than you?\" I said. Piper's eyes went wide, surprised at my audacity.\n\nI simply smiled as Kennedy responded with a quiet gasp of arousal before whispering throatily, \"Almost certainly, baby.\"\n\nPiper's face showed confusion and shock but the door to the elevator opened before she could formulate a question. We walked down the dimly lit hallway, sexual tension thick in the air. \"Open the door for us, babe,\" I said as we approached Kennedy's room.\n\nKennedy mumbled a quiet, \"Okay,\" as I spun Piper to face me and pinned her to the wall, kissing her forcefully. Her body pressed against me as she moaned into my mouth, grinding herself against me. As our tongues were dancing together and our hips were trying to merge into one right there in the hallway, another couple went by, staring at us and our lewd display. They didn't stare long, however. This was Vegas afterall.\n\nNevertheless, when we finally broke our kiss, Piper whispered, \"I feel like such a slut.\"\n\n\"Is that bad?\" I asked, smiling at her from just an inch away.\n\nShe shook her head left to right slowly, \"No. Not at all,\" before wrapping her legs around me as I pinned her to the wall. I grabbed her thighs, pulling her past Kennedy as we stumbled into the dark room. \"God, this is so fucking hot. This is so what I needed,\" Piper murmured into my ear as I made my way to the freshly made bed. I tossed her down and immediately descended upon her, kissing her as she wrapped her arms and legs around me eagerly. \"Can I... Can I see your cock?\" she asked in a halting, uncertain tone.\n\n\"You sure?\" I teased.\n\nShe nodded and I stood back from her. She followed, kneeling on the floor and reaching up with trembling, almost reverent fingers, to unbuckle my belt. When my pants came off, she pulled down my boxers causing my cock to spring forward. She gasped, astounded at the size and I made a small, silent prayer of thanks to God for this other gift he'd given me. \"It's so big,\" she said as she cupped my balls and gripped the base of my cock. \"It's like twice the size of Gene's,\" she said. \"He's gonna be so jealous.\" She got an almost wicked look on her face, \"Can I... I mean... would it be okay... can I take a picture of it to send to him.\"\n\nI paused. Random dick picks running around on the internet weren't exactly problem free propositions. Nevertheless, I didn't see the harm in it if she kept my face out of it. We were in a random hotel room after all. \"You want him to know you're getting revenge?\"\n\n\"I want him to know I'm getting properly fucked,\" she said with surprising fervor. \"I'm not gonna put up with him being such a pussy anymore.\"\n\nKennedy laughed softly and I simply nodded my acquiescence. Piper grabbed her phone and held it up. She then moved my cock up so it rested on her face. She smiled up at the camera as she took a couple pictures before leaning back and flipping through them to find the best one. Her face was about half obscured by the slab of meat in front of it but she was still plenty recognizable.\n\nI watched as she typed, \"Found a real man. With a real cock.\"\n\n\"You're so naughty,\" I said with a laugh.\n\n\"Maybe I need a spanking,\" she said as she stood up and turned around. She leaned forward, bending at the waist and giving a great view of her fantastic ass before hooking her fingers in her yoga shorts and pulling them down slowly. The tiny g-string underneath came down along with it and I could see that perfect white ass and pink pussy beneath it.\n\nHer phone buzzed and I looked over her shoulder at the response from Gene that had come through.\n\nGene: \"Sweetie? Is that you?\"\n\nShe quickly typed out a response back, \"Me and my new lover's cock.\"\n\nI smacked her ass, \"You really are naughty,\" I said. \"So mean to your sweet little boyfriend.\"\n\nShe moaned at the contact and wiggled her ass back at me encouraging more. \"I am. You better show me who the real boss is, Sir.\"\n\nI was getting a better sense of the game she was playing. She didn't want her wimp boyfriend. She wanted a man to take her. And she wanted her boyfriend to know about it. I could oblige. I smacked her ass a couple more times before her phone buzzed again. \"Honey... I'm so sorry. Don't do this, please...\"\n\nI reached over and grabbed her phone before she could respond. She gasped but when she saw me snapping a picture of her ass, emblazoned prominently with my bright red handprint, she moaned and her eyes rolled. I typed into her phone, \"Don't worry Gene. I'm punishing her for her sins.\"\n\nI tossed the phone back down so Piper could read the reply. Again, another gasp and moan which simply confirmed that I'd figured out her new kink. \"I can't believe I'm doing this,\" she said.\n\n\"Doing what?\" I asked, taunting her. I grabbed my cock and slid it up and down her wet slit.\n\n\"Cheating on my boyfriend... with a guy I just met,\" she said. I slid the tip into her and she groaned at the sensation of being spread wide. \"Maybe I really am a slut,\" she said. Her phone buzzed again.\n\nGene: What are you doing now?\n\nShe quickly typed out a reply.\n\nPiper: He just has the tip in and it's already better than you.\n\nGene: Oh God\n\nPiper: Is this turning you on?\n\nGene: No...\n\nPiper: Send me a pick of your cock to prove it.\n\nI slid my cock further into her, slowly giving her half of it. \"Oh God. I'm so fucking full.\"\n\n\"That's only half, slut,\" I said.\n\nShe whimpered, \"Half??\"\n\nHer phone buzzed again and there was a picture of a very obviously erect cock. It wasn't actually that small. Probably only a little smaller than mine used to be. But it was nothing compared to what I had now. With shaky fingers, she managed to get out another text.\n\nPiper: I guess it does turn you on. Hearing about me getting fucked by a real man.\n\nGene: Does it feel good?\n\nPiper: Better than anything I've ever felt.\n\nGene: Oh God\n\nI slammed my cock into her, burying it to the hilt. \"Oh God... please... oh god,\" she said, unconsciously echoing her boyfriend's words. \"Please... please,\" she begged as I slowly pulled back out.\n\n\"What do you want?\"\n\n\"To be fucked,\" she said.\n\nI grabbed her phone from her hand and switched it to record. I held it up, showing my cock sliding in and out of her. Agonizingly slowly. \"Tell Eugene what you want, slut.\"\n\n\"I want to be fucked. By a real man. Not \"made love to\" by a wimp. I want to be pounded by a real cock. Please... fucking pound me and use me and do whatever dirty thing you want to me. Use my holes however you want. Please... please... please.\"\n\n\"I'm not going to give that to you until Eugene gives you permission,\" I said.\n\nKennedy gasped from behind me and I glanced over. Her fingers were buried in her unbuttoned shorts. Piper simply whimpered, before sobbing out a plea to her boyfriend. \"Please Gene. He's giving me what you can't... Oh God... P... p... please. Tell me it's okay to fuck him. I need it... fuck me... fuck... yes... Please, I need this worse than anything ever... It's so good... Oh God... I can't stop now. Don't be mean, Gene. Don't be... oh fuck... don't be cruel. Let me have this. Tell me it's okay to fuck this godlike cock... Aagghhh... I promise I'll tell you all about it tonight. But I need this Gene. Pleeeeaaase,\" she said. Her voice sounded so pitiful as she made her perverted, lusty plea. My cock twitched inside of her, causing her to gasp as she stuttered through the soliloquy.\n\nI hit share on the video and sent it to Gene, then tossed the phone down beside her. She looked at it, eyes glued to the display as I continued my erotic torture. \"What do you think, Kennedy? Does her boyfriend love her enough to let her have what she needs?\"\n\nKennedy gasped behind me, \"I hope so.\"\n\n\"Me too... it'd be a shame to have to pull out and cover the slut's face with cum and leave her unfucked.\"\n\n\"Oh God... Ohh... please... I need it. I really need it. I don't know what I'd do if I can't get your cock slamming into me,\" she whined.\n\nThe display on her screen continued to glow, lighting up the room. The three dots continued to pulse as Gene kept typing and deleting and then typing again. Finally, after a good minute of deliberation, two letters appeared.\n\nGene: OK\n\nI didn't waste anytime and started slamming into Piper's cunt hard and fast. \"YEsssss,\" she screamed out as I hammered into her, my fingers gripping her thin waist as I took control of her unresisting body. I shoved her up onto the bed, jamming my cock in with long, hard strokes that caused her to groan and whimper with each thrust.",
        "\"You want this cum, slut?\" I asked after pounding her for several minutes.\n\n\"Yesss... yess... fill me up. Make me drip with your cum,\" she said.\n\n\"She really is very tight,\" I told Kennedy. The pitiful whimper behind me told me all I needed to know. \"Much tighter than you. And look at this ass. I bet it would grip my cock even more. You ever let Gene fuck your ass, slut?\"\n\n\"N... n... no,\" she said.\n\n\"Ask him if it's okay if you give up your anal virginity to a stranger,\" I said.\n\n\"Oh god,\" she gasped but she took the phone in her hand. It took her several tries to type but finally she managed.\n\nPiper: He wants to fuck my ass. I know I've never let you. But I want to let him. Is it okay if this stranger fucks my ass, Gene?\n\nGene: He's ready to go again?\n\nPiper: LOL... No, baby. Real men can fuck for more than two minutes.\n\nGene: You really want this, Piper?\n\nPiper: Yesssss... tell me you do too. Please? Isn't it hot?\n\nGene: ok... yes.\n\nPiper: Yes I can get my ass fucked or yes it's hot?\"\n\nThis time the pause was very long before finally a reply popped up.\n\nGene: Both... oh god... both, baby.\n\nI grabbed the bottle of lube on the nightstand and squirted it into my hand and her ass. She bent forward, arching her back and sticking her ass up as high as possible. \"I can't believe I'm doing this,\" she said again.\n\n\"Doing what?\" I asked, again teasing her with the words. I liked hearing her admit her depravity.\n\n\"Giving... giving my ass up... to a guy I just met.\"\n\nI pressed my cock head against her ass and watched as it instantly began to give way. \"What kind of girl would do that?\"\n\n\"Aaaggghh... a... a... s... slut,\" she whispered as my cock invaded her most intimate hole.\n\n\"An obedient, slut?\"\n\n\"Oh yes... that's what I am... for a real man... an obedient slut!\" she screamed.\n\n\"Rub your clit for me. You want to cum while I fuck your ass, slut?\"\n\n\"Ohhhhhh.... Yesss.. Please,\" she said.\n\n\"Don't you think Gene would like to hear that?\" I asked. I knew what her answer would be.\n\n\"Yessss,\" she rasped out.\n\n\"Then call him,\" I said.\n\n\"Really?\" she gasped as her finger found her clit. She sighed at the touch.\n\n\"Sure... Gene should know what a slutty girl you are, don't you think?\"\n\n\"Oh yesss,\" she hissed.\n\n\"Siri, call... oh my fucking god that's big... Gene,\" she said, her exclamation caused by a particularly hard thrust I gave her.\n\n\"Now, now,\" came Siri's canned admonition.\n\n\"Oh for fuck's sake,\" Piper gasped, \"Siri... call Gene,\" she managed through gritted teeth.\n\nThe phone took only a second to connect and her boyfriend picked up after a single ring, \"Piper?\"\n\n\"Shut up Eugene... Just listen while a real man makes me cum while he fucks my ass,\" Piper managed, her panting obvious to the man on the other end of the line.\n\n\"Tell him what's happening, slut,\" I said.\n\n\"Oh god... He's in my ass. And it's so good. And so degrading. And so perfect. He wants me to cum. Please Gene. Tell me it's okay to cum while he fucks my ass. I want to be a good cock loving slut for his perfect cock. Can I cum? Please Gene. Can I?\" she begged. I kept slamming into her wordessly but, at this point, she was delirious from pleasure.\n\n\"Please baby... you can cum,\" Gene said in an almost pleading voice. That was all that Piper needed. Suddenly she collapsed down, spasming in a screaming orgasm. Her legs twitched and flailed on either side of me and her ass clamped down hard on my cock, threatening to break it off at the root. I shoved her down hard, giving her two final thrusts of my own before my orgasm roared out from me.\n\nI pulled out, spraying cum all over her back and hair. It felt like a gallon and it made a massive mess all over her still shaking body... and the bed... and a little on the wall. I was dimly aware of Kennedy also cumming behind me and I was pretty sure Gene's groan was his own climax. \"Okay Gene. You've heard how good it was for your slut girlfriend. Now you know why I'm keeping her for the day. Don't worry, she'll be back tonight to tell you all about it. Bye now,\" I said as I hit 'End' on the phone. \"Okay, slut, you ready for round 2?\" I asked.\n\nPiper just looked up at me in awe as she nodded.\n\nI did end up using Piper for most of the day but. The more I fucked her, the more submissive she became until, by the end of the night, she was eating Kennedy's pussy while Kennedy straddled the blonde's face and held her legs wide for me to fuck her wet cunt. I dumped four loads into her over the course of the afternoon and plastered her face twice. When she left on wobbly legs, Kennedy closed the door behind her before running at me and tackling me to the bed. She gave me a giant kiss, silencing any protests or questions I might have had.\n\n\"That was so fucking hot. Even better than with Jaime,\" she said as she continued to shower me with kisses. Her hands caressed my skin, tracing the lines of my muscles as if memorizing the creases.\n\n\"So now that you've had your fun with your new toy... Do you have anything left for your girlfriend?\"\n\n\"Definitely,\" I said as she playfully pushed me forward onto the bed. Despite the day's exertions, my divinely gifted cock seemed always ready for more.\n\n\"It's no wonder these little sluts can't get enough of this cock. It really is perfect, you know.\"\n\n\"I'm glad you... and they... like it,\" I said as she straddled me for the very first time.\n\n\"You sure you want this?\" she said, teasing me just a little.\n\n\"Very much, Kennedy. And I want you to have it,\" I said. I leaned up and held her in my arms, giving her a kiss before nuzzling her plump breasts. As I did, she sank down on top of me emitting the most appreciative, sigh I'd ever heard.\n\n\"Oh, God... finally,\" she said as I filled her up fully. She rode me gently, luxuriating in the feel of finally being full. \"Am I as good as they are, Phillip?\"\n\n\"So good,\" I said.\n\nShe smacked my chest hard, \"Nooo... Play the game, Phillip,\" she said imploringly.\n\nI sneered at her, trying to display some contempt, \"I didn't say you were as good as they were, baby. They're sooo much better than you,\" I said. She moaned, throwing her head back as I continued, \"They're cunts are tight and they have much firmer, perkier tits. Plus they let me fuck their ass and they deepthroat my cock. Really you can't compete.\"\n\nSuddenly she started shaking her hips against me and quivering, \"You deserve them, Phillip. Your perfect cock should have perfect pussy,\" she whined. I could tell that, despite only fucking me for a few minutes, she was already close to coming.\n\nI reached up, grabbing a tit in each hand. \"As long as you keep bringing me fresh pussy for us to fuck, I'll occasionally let you ride this. Okay sweetie?\"\n\n\"Yesss,\" she said, exploding all over me as she collapsed on top. Her body continued to twitch and spasm as I felt her cunt clench and release repeatedly around my shaft. \"God that's so good,\" she murmured into my ear.\n\n\"I'm glad you liked it.\"\n\n\"Can I ask you a question?\" she said softly, almost as if she was afraid of the answer.\n\n\"Of course, babe. I told you, I want to get to know you and for you to get to know me. Ask away,\" I said, feeling particularly open and ready to share.\n\n\"I swear I saw a light flash in Piper's eyes earlier. When you were playing poker. Didn't I?\"\n\nHuh... I was not ready for THAT question."
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "poker",
        "anal",
        "slut",
        "cheating",
        "cuckold",
        "big cock",
        "cuckquean",
        "religion"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/divine-poker-ch-03"
}