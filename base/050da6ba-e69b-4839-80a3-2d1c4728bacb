{
    "title": "The Monster Hunter Ch. 41-50",
    "pages": [
        "Angel's worst fears were coming true, and she needed to get away from her brother before she did something stupid.\n\nShe almost ran upstairs, locking herself in her bedroom and falling on the bed. She knew Michael had killed people during his time as a Marine, but he was under orders to protect the Embassy. Sometimes people NEEDED killing, and it wasn't his fault, any more than the kill on her FBI record was her fault. You followed your training, and you moved on.\n\nWhat Michael had just confessed to, without a hint of regret or remorse, was the cold-blooded execution of an Afghan official. Recovering the bribe money didn't bother her as much as she thought it would. Sure, it was a criminal act, but why should his family profit from his activities? He hadn't been stupid about it, spending wildly and attracting attention. Over a decade or so, he'd use his low cost of living and security work to buildup a fortune that would let him retire and live in comfort. She lived with him and had no clue he had a stash of cash hidden away. Michael was smart and logical, able to take the long view, and had enough patience to get away with it.\n\nStill...\n\nMichael snuck into his home and slaughtered the man like a pig. Yes, the guy was a scumbag who abused children. His death didn't bother her.\n\nIt was the way Michael described killing him that shocked her.\n\nHe LIKED it.\n\nShe thought back to what the FBI's criminal profilers had developed. Everything they said matched up well with what they said as she checked them off in her head. White male, between twenty-five and fifty-five now that they were considering abuse victims. A victim of a child abuser or parent of one. Frustrated with the system because the abuser got away with it or got a weak punishment. Background in law enforcement, military, maybe even a lawyer. Upper-middle-class, intelligent, and motivated. He may have support in research or transportation, but he does the murders alone. The killer enjoys not just killing but making his victims suffer for their sins. He sees himself as God's dispenser of justice, regretting nothing, with the zealous drive of a true believer.\n\nThe cold realization set in that he might have done this before, and that was why he showed no hesitation in killing the chief. He spent years in his overseas postings. It would have been far easier to evade detection in those war-torn countries.\n\nShe took her phone from the bedside table and went to her contacts, pulling up Mark's number. She knew deep down the right thing was to turn her brother in before more people died; her finger hit the button to call him. \"Angel?\"\n\n\"Hey, partner. How are things at the office?\"\n\n\"Still messed up, and your desk is still too empty. We miss you around here.\"\n\n\"I'm sorry. I wouldn't be in the office now even if I got reinstated, though. I need to be here with Michael until he can take care of himself.\" She updated him on his injuries and recovery; with Michael hurt and not knowing his SecuriTech friends, she'd talked with Mark about it while she'd waited for more news.\n\nThe more she talked, the more she realized she couldn't do it. Michael was her only family, and he'd done so much for her. She'd sworn to him that she wouldn't reveal anything about the money, but that was before she found out he'd killed to get it. Angel ended the call, tossing the phone onto the bed as she realized their bond outweighs her professional duty.\n\nAnd she'd just implicated herself in his crimes. She failed to report the suspicious money. She arranged for Amber's affidavit for the time around the Charleston killing. She hadn't disclosed her connection to one, then two, of the Monster Hunter's victims. And now, Angel had listened to her brother confess to murder and didn't have the guts to turn him in. If Michael got caught, she'd spend decades in prison as an accessory to multiple murders and a dozen other crimes.\n\nWith that realization, Angel Johnson, FBI Special Agent Angel Johnson's life changed forever. The Monster Hunter's fate was now her own, and she mentally switched sides. She had to make sure the Monster Hunter never got caught.\n\nHe'd done so well so far, but if he kept going? Nobody got away with it forever.\n\nHer head hurt, and she went to her medicine cabinet for a couple of Tylenol before falling into a restless sleep.\n\nShe woke up hungry a few hours later. Heading downstairs, she saw Michael on his bed, the news on in the background while he typed on his tablet. His phone, a travel mug of water, and some cookies were all within reach. He looked up at her, clearly nervous about what would happen next. He went with the safe call. \"The barbecue leftovers are in the fridge,\" he told her. \"Amber had to go to work, and she'll be back late tonight.\"\n\n\"Do you need anything?\"\n\n\"Not now. Amber helped me use the bathroom and clean up before she left.\" Angel went into the kitchen and fixed a plate, coming out a few minutes later and sitting on a chair in his view. While she ate, she asked him to tell her the story of what happened in Kazakhstan. Grateful to have something else to talk about for a while, Michael told her about everything that happened since leaving the airport. \"If the guy with the RPG hadn't missed the armored car, we'd all be dead right now.\"\n\n\"How do you miss from a window across the square?\"\n\n\"RPG's aren't precision tools. They have manual sights, and you have to adjust for range. When you shoot downhill, you don't aim as high because gravity is helping you. The rocket went over the car and hit the steps maybe five yards behind me. Most of the force went into the steps, but I was the last one in line and didn't make it to safety.\"\n\n\"It was that close?\"\n\n\"Yeah. Curtis showed me a picture of my vest; it stopped three pieces of shrapnel that would have killed me.\"\n\nAngel got quiet, slowly finishing her food as she prepared for the very uncomfortable conversation she was about to have. The ribs, brisket, cornbread, and Coke felt more like a Last Supper than a tasty meal. She finished her plate, getting up to return it to the kitchen and clean up.\n\nMichael knew she had questions, and he'd already made his decision to come clean. They'd never lied to each other before, and he wasn't going to start now. If that meant she arrested him, fine. He would get away with it in court just like he did in the field. He would never plead guilty, and the FBI would never be able to pin all the murders on him; there wasn't the evidence to do so.\n\nThe people of America understood him and what he was doing, and no jury would convict him. Confessing to Angel was a risk, but he knew deep down she could never betray him.\n\n\"I want to know it all.\" Angel sat back in her chair and waited. She looked at the television, and he turned it off.\n\n\"It all started with Coach Nate Stedman,\" Michael began. \"Seeing one of my abusers on the soccer field, living his idyllic suburban life, filled me with rage. Telling the police solved nothing; there was no evidence, and I was only a child when the abuse occurred. When they forced me to apologize, I buried my rage and vowed I would get my justice.\" He described how he started researching his family, then hanging out in his neighborhood and dating his daughter to get closer. \"I got lucky. Finding the stash of child porn in his office was enough to bring him down, and I couldn't wait to confront him in court. The police arrested him, and then he made bail and committed suicide the next morning. All of that work went for nothing. He got to end his life on his terms, and the case ended with it. He never had to answer for what he did to me.\"\n\n\"He got exposed and took the coward's way out,\" Angel replied.\n\n\"I felt cheated, Sis. All I wanted was to watch just ONE person who hurt me look in my eyes and know they would suffer for it. It didn't work, and high school was ending. When I left for college, I kept up my search. I figured if they hurt me and got away with it, they might have hurt someone else. I started monitoring the law enforcement websites, looking at thousands of mug shots of sex offenders. I was right; there were more out there.\"\n\n\"Burroughs in 2011 was the first victim the task force knows about.\"\n\n\"They are missing four from my time in college.\" He told her about the men and how he'd tracked them down and killed them. The first he shot in the chest, but he died too quickly. The second he held underwater in his bathtub until he drowned, but that was over too fast. The third and fourth he abducted, stuffed into barrels, and waited for them to asphyxiate. \"I didn't see them die, but I heard everything. I heard them saying how sorry they were. I heard them begging for mercy that I would never give them. I heard them praying to God for salvation, and I heard them draw their last breaths. I took them to the local landfills with other trash, and I watched them get the burial they deserved.\"\n\nAngel was trying to take it all in. \"Did it help?\"\n\nMichael shook his head, no. \"How do you make them suffer for ten minutes and have it make up for a lifetime of your suffering? And not just mine, all of the OTHER lives they had ruined? No, the balance of their life was not righted by this. Then I went into the Marine Corps and the DSS. I saw firsthand what it meant to terrorize a population. Let the Americans give you candy? We'll send a suicide bomber to kill the kids surrounding the infidels. Give information to the Americans? We'll kill your family as you watch, then you, and tell your village that this is the fate of all who help. It was during this time that I realized I'd been going about things all wrong.\"\n\n\"What do you mean?\"\n\n\"I was the one living in fear of them, and I needed to make them live in fear of me. I needed the child molesters and traffickers to understand I was out there looking for them. When I found out their names, then justice would come and right quickly. They would be looking over their shoulder until one day I was there, and they would suffer terribly at my hand. It was more than just getting vengeance; it was a warning to the others. I studied historical torture techniques, knowing that I needed to make each death more horrible than the last. The media would eat those details up, and that would help scare the others.\"\n\n\"You're the Monster Hunter. My brother is the serial killer I've been looking for, and you did all this under my nose.\"\n\nMichael at least had the decency to look sorry about that. \"I thought about asking you for help when you started working in law enforcement, but I couldn't do it. I knew my life would never be the same, and I didn't want you to end up on death row or spending your life in prison. My path in life was to do it on my own and never tell you a thing.\"\n\nAngel shook her head, but it wasn't in disgust. \"I had my suspicions, and when two of the victims were my abusers, they only got stronger.\" A thought came to her. \"How many of the men who abused us have you put in the ground?\"\n\n\"Nine,\" Michael said. \"Not everyone suffered in such a public way. I couldn't do that because it would make the connection to us too obvious. Your team figured out Burroughs, and that led to your breakdown and so much else. I'm so sorry his death was able to hurt you so long after he was gone.\"\n\n\"And how many total?\"\n\n\"Twenty-three and counting.\"\n\n\"Jesus.\" Angel's mind was reeling; the Task Force didn't know half of his victims.\n\n\"I am sorry about what I did to you, Angel. I took advantage of your trust in me because I needed what you had access to, and I couldn't ask for it.\" Angel's face dropped. \"I put a camera in your office so I could capture your FBI password. I would copy files off your laptop to help with my searches because your database was far more complete than the public one.\n\nAngel recoiled at the invasion of privacy and breach of trust at the hands of her loving brother and started to cry. \"How could you?\"\n\nMichael couldn't lie to her. \"I justified it because I needed the information, and I had to protect you from the truth.\"\n\nAngel stood up, trying to decide what to do next. \"The whole time I was on the Monster Hunter task force, you saw everything we were doing. The laptop isn't mine, Michael! It belongs to the Bureau! What if they traced the data breaches to me? Did you even consider the danger you put me in?\"\n\nMichael wished he could get up, but he couldn't. \"I'm sorry, Angel. I regret abusing your trust more than anything else I've done in my life.\"\n\nAngel stood there, not knowing how to respond to any of this. Finally, her face changed to one of resigned determination covered with tears. \"You may stay until you've healed sufficiently, Mr. Johnson. After that, I want you out of my home and my life.\" She ran back upstairs before he could say anything else.\n\nCh. 42\n\nAngel fled to her room and locked the door behind her. She was uncontrollably sobbing as she fell onto her bed, struggling to grasp what just happened. Her life, her family, her job? Everything was spinning out of control.\n\nThe worst thing was that she had been cruel in her treatment of her brother, the ONE person in her life who always had her back. She'd lashed out at him in her anger, and the look of utter devastation in his eyes as she called him \"Mister Johnson\" and ordered him out of her life? It broke her heart to see that, and she ran away before she did even more. She lay curled up in the fetal position, hugging her knees to her chest as she rocked slightly back and forth.\n\nIt was the same position she'd been in many times back in that place, feeling alone and scared and helpless. Their owner would beat them if they talked to each other or made noise, a lesson she learned painfully that first week of captivity. \"You see this light?\" He pointed to a red light over the door. \"If you make too much noise, the light comes on. If you don't shut your worthless mouth and stop crying, I'll come down here and give you something to cry about.\" Angel soon learned the penalty of trying to talk or sing or cry. She was alone until she heard Michael's whispered voice. At first, she didn't know where it was coming from, but she found the cold air return grate on the wall behind the bed. The two could whisper to each other, and Michael helped her adapt and survive.\n\nNow? She'd cut him out of her home and her life, and for what? Yes, he'd invaded her privacy by putting the camera in his ceiling and accessing her laptop. What was he supposed to do? She was a law enforcement officer on the Monster Hunter Task Force; it wasn't like he could ask for permission.\n\nAngel rolled onto her back and compared their \"careers.\" Both of them dedicated their lives to stopping the same people. In six years in law enforcement, Angel had arrested five human traffickers, three serial child abusers, and one murderer, plus the one trafficker she killed while making the raid. Of her arrests, only two got more than ten years in prison; two men had charges dropped, one was found not guilty at trial, and the rest accepted plea deals for reduced sentences. Of the five currently in prison, two had been released and reoffended. The time on the Task Force hadn't helped her arrest record. Her team farmed off leads to local FBI or law enforcement as they focused on finding the killer. Angel was proud of her arrest record, but the problems were only getting worse. Organized crime, both domestic and foreign, were making too much money peddling flesh to be stopped.\n\nShe thought about Michael's approach. In secret, her brother had been tracking down and dealing with child molesters and human traffickers for half his life. Michael confessed to personally removing twenty-three of these predators from the face of the earth.\n\nNine of those were men who had abused her without remorse. How many nights did she spend with her mind reliving the experiences?\n\nHow many times did she wish for them to be dead?\n\nThe thought made her stomach roll, and she ran for the bathroom and didn't quite reach the toilet in time. Some escaped from the hand she held over her mouth before she got the seat up. She emptied her stomach, then wiped up the mess, and headed into the shower.\n\nAngel leaned against the wall as the hot water ran down over her face and body. \"Think logically,\" she whispered to herself. \"You can't change what he has done. The past is the past; you only get to change your future.\" It was a lesson her therapist had taught her as she recovered from her abuse. Face the past, accept it, then look forward and pick the path you want to follow.\n\nOne path was simple. Angel was on administrative leave, but she was still a sworn FBI Agent. A suspect had just confessed to multiple murders in her presence. Her FBI oath included the words \"that I will well and faithfully discharge the duties of the office I am about to enter.\" She should arrest him herself, call in the Task Force, and let the criminal justice system handle the rest. Michael would spend the rest of his life in prison; she would be charged as an accessory after the fact, losing her job, her freedom, and her family forever.\n\nMichael would never forgive her, and Angel didn't dare to do it.\n\nThe next option was to cut off all ties to her brother and hide the evidence of her involvement. It was possible that if he didn't give her up that she could emerge from this. She hadn't given Michael permission to go into her computer; he used hidden cameras to get what he needed. She'd thrown away evidence; although the blood-spatter evidence at one scene said size 11 shoes, the footprint at another was Size 10 Red Wings. She'd taken Michael's Red Wing boots and tossed them when she first realized they might be suspects. Then there was the money; she'd failed to report it and used some of it to buy clothes and do home repairs. Nothing but the computer held any evidence against her as long as Michael didn't say anything.\n\nAngel let the spray rinse the tears from her face. It wouldn't work; the only way she stayed out of prison was if Michael kept those things private. What incentive did he have to protect her after being written out of her life?\n\nHe didn't. The hard truth was that Angel loved him, and Michael loved her. She wouldn't be alive right now without him. He was her brother in all but blood, and she couldn't cut him out of her life no matter what he did.\n\nAngel turned off the shower and started drying her hair as she thought about the next step. If she didn't arrest him and didn't cut him out of her life, she had to reduce the risk of him getting caught and involving her. Michael had plenty of money and a serious girlfriend now; he didn't need to stay with his kid sister anymore. If he moved out, the separation would mean her condo wouldn't be part of any search warrant.\n\nOf course, none of this would matter if Michael got caught. She'd told him directly that it was just a matter of time before the Monster Hunter screwed up and the Task Force got him.\n\nAngel brushed her teeth as she continued thinking through the situation. Michael wasn't saying he would stop; in fact, Michael told her that he'd killed \"twenty-three and counting,\" and he liked it. There was no remorse for what he'd done except where it affected her.\n\nWell, anything he did from this point on could affect her. She knew how little information the Task Force had; if he stopped now, chances are he'd never get caught, and she'd never get dragged down with him.\n\nAngel rinsed her mouth and looked in the mirror as her path became clear. She had to distance herself from Michael and convince him to stop the killings. It was the only way they could both have a happy life.\n\nAngel steeled herself, then went out to get dressed. She had to find a way to heal the rift in her family before it was too late.\n\nThere wasn't much time. Amber would return in a few hours, and her chance to talk openly would be gone.",
        "Ch. 43\n\nMichael was frozen in place, shocked by what Angel had just done to him. She called him 'Mister Johnson' and ordered him out of her home and her life.\n\nAngel didn't stick around to say anything more; she took off like a shot, running up the stairs and into her bedroom. He heard her door slam shut. In his mind, it was a gavel slamming down as the judge proclaimed his sentence.\n\nBanished.\n\nDisowned.\n\nNo longer welcome.\n\nHis head was spinning with how quickly his life had fallen apart. Michael closed his eyes and went through his confession and her reaction again and again, trying to figure out what he could do to fix this. Ten minutes later, he concluded that he was fucked. Angel didn't throw him out, but she wanted him out of her life as soon as possible. What would he do next?\n\nCould he crash with Amber and her roommate?\n\nGet a hotel room or apartment?\n\nOr maybe he should blow his brains out and end his tortured life before he hurt her even more?\n\n\"FUCK!\" He swept everything from his bed, the phone, tablet, and remote clattering across the wood floor. \"Oh fuck.\" The angry outburst had consequences beyond the spidered screen of his iPhone lying face up under the television. He'd ripped open his stitches, and he could feel the blood seeping out as he gritted his teeth against the stabbing pain. He let his head fall to the pillow as he waited for the worst of the pain to pass.\n\nHe deserved the pain.\n\nThere was nothing he could do now to change what he had done.\n\nThere was no use in calling for help about his wounds, either. Michael knew her temper was not one of an Angel, and Amber wouldn't be back for hours. If he screamed for help, she'd call an ambulance for him. If he had any chance to salvage his only family, he'd have to do it on his own.\n\nDoing so would not be simple with the heavily bandaged wounds on his butt and left leg. \"Suck it up, Marine,\" he said to himself as he rolled onto his right side. When he had help available and needed to use the bathroom, one of the girls would support his legs as he slid over until his hip was at the edge of the bed. They could keep his left leg straight and supported as Michael pushed to a sitting position. Once both feet were on the ground, they could help him to his feet without bending his left leg. Once standing up, he'd use crutches to keep the weight off the injured leg. It took him several minutes to make his way up and over to the bathroom, but it was better than a bedpan.\n\nDoing it alone was much harder. Michael tossed the blanket aside, revealing his nude form underneath. It took him a full minute to shift his way sideways, an inch or two at a time, until he was laying along the edge. He could somewhat support the weight of his left leg with his right, but now he'd have to commit. He moved his arms and twisted his upper body so he could push himself upright, then moved his legs over the edge.\n\n\"SHIT, that hurts,\" he said after his heels hit the ground. Any muscle movement in his legs or butt set off stabbing pains as the shrapnel injuries tugged at stitches and pulled apart healing tissue. Michael tried not to move, riding the wave of pain until it broke on the beach. \"And that was the easy part.\"\n\nWithout someone to help him stand and his crutches out of reach on the floor, he'd have to spin around and push himself to his feet. He let out a scream as he did it, the pain bringing tears to his eyes as he stood upright on one leg.\n\nAnd that was when he realized his plan to go upstairs on his crutches had a fatal flaw. The crutches were on the floor in front of the couch six feet away. Even if he walked there, how the hell would he pick them up? He looked around and considered his next move. While standing there waiting for the pain to subside, he thought about how to save his relationship with his sister. He'd hurt her badly, and it would take spectacular groveling to get her to listen now. He moved his left leg forward six inches, shifted his weight, stepped his right foot forward, and almost went down from the pain.\n\nIt took him ten minutes to travel the twenty feet or so from the bed to the stairs. He couldn't take a straight path, as he needed to use furniture or the wall to aid his motion. By the time he reached the first step, his body was in constant agony, and his bandages soaked in blood. Hey, it was only thirteen steps, he told himself. Michael leaned forward and pushed up with his arms as his right leg did a little hop up to the next step. He would grit his teeth against the pain, wait until he was ready, then do it again. He could hear the shower turn off upstairs and held out the hope that it had relaxed her.\n\nWith three steps to go, everything went to shit. Michael didn't get his foot high enough, but his weight was already forward, and it wasn't coming back. His right foot slipped on the carpet, then didn't find purchase on the next step either. His right leg wasn't going to stop him. Michael was falling onto his face and had to let go of the handrail to break his fall as his body slammed down onto the stairway with a loud thump.\n\nGravity always wins in the end, and Michael slid down four more steps before he was able to stop himself. He screamed in agony as his left leg bent and twisted, ripping apart the recently-repaired wounds. \"DAMMIT! FUCK! FUCKING STAIRS!\"\n\nHe heard the door open, then the sound of running feet as Angel ran from her room to the top of the stairs. \"Michael? JESUS, MICHAEL! WHAT ARE YOU DOING OUT OF BED!\"\n\nHe looked up at his sister in time to see the towel fall from around her. Her mouth was open as she looked down at his naked body, bleeding and twisted, stuck halfway up the stairs.\n\nIn the military, falling on your face would get you a good ribbing from your buddies unless you had a good line when you sat up. Michael couldn't think of a funny way out of this. \"Ow?\"\n\n\"Don't move,\" she told him as she moved down the stairs until she was even with his legs. Angel helped move his injured leg straight again. \"No point in trying to stand up in the middle, Michael. Roll onto your right side, and I'll control the leg as you slide back down.\"\n\nThe two worked to ease his body down the stairs until his feet were on the living room carpet again. Angel got under his left arm and threw it across her shoulders, helping him stand up. He was shaky and pale with tears streaking his face, and blood was starting to trail down his leg. \"Stay here,\" she told him after she retrieved his crutches for him. \"I've got to take you to the emergency room because you've ripped all your stitches apart. What part of 'rest and only move with help' did you not listen to?\"\n\nShe ran upstairs, quickly pulling on clothes and grabbing her purse plus his bathrobe. Michael didn't care about the pain; Angel's talk and touch, even if it was to tell him he was a fucking idiot, was an improvement. He could take anything he said as long as she didn't write him out. She helped him get the robe on, then walked ahead as he moved through the kitchen to the garage.\n\nShe got him into the back of her SUV, and they left for the drive to the nearest emergency room. \"What were you THINKING, Michael?\"\n\n\"I had to apologize and try to make it right, Angel. I love you, and that will never change. I got so caught up in what I was doing that I didn't stop to think how much it would hurt you if you found out.\"\n\nShe couldn't believe it. \"My brother is a serial killer, and you didn't stop to think it would hurt me? How is that even POSSIBLE?\"\n\nMichael knew that only the truth would have a chance. \"When we were back there, I hated the people who hurt us. I couldn't believe God would let them go free and have their lives while we got hell an hour at a time. I killed the ones who abused me, and that was good. Taking out the ones that hurt you was far more satisfying because I'd finally made good on my vow to protect you from them.\" Angel didn't say anything to that. \"I didn't tell you because I didn't want you to suffer the weight of their deaths on your conscience. You're a better person than me, and you always have been. There's something wrong with me, something they broke long ago in that room. I've accepted that I can't get it back because it freed me to do this. I'm a killer, Angel. No regrets, no remorse. I take them out like I take out the kitchen trash.\"\n\n\"And you'll keep killing?\"\n\n\"The Monster Hunter idea is bigger than any one person now, Angel. He's a celebrity, with a Facebook page, a fan club, and a YouTube channel. In one poll I saw, over half of the American people thought he was right. Twenty-three predators dead. Multiple trafficking and prostitution rings shut down using the information I left behind. Three of the five on my list are off the street, and all I did was point a finger and tell them what to do. Thulsa Doom was right; you can't buy that kind of power! Imagine what I can do after it becomes five of five? They'll be running to the cops to confess!\"\n\nAngel shook her head as she made a turn at a light. \"You have to stop, Michael. You'll make a mistake, they'll catch you, and I go down with you. Walk away from it! STOP! You don't need the money, and you can make a life for yourself with Amber! We can have our happily ever afters, raising families and getting together on holidays. The ONLY way this ends well is if you can leave it in the past. Make a clean break, find your new path, and go forward from there. Stop now, and I won't say anything to anyone. Today will be the last time we ever speak about it.\"\n\nMichael understood her plea, but she didn't understand him. It was such a RUSH! No drug in the world, no adrenaline-fueled adventure, no near-death experience could compare to how it made him feel. He was Judge, Jury, and Executioner. He held the very power of God in his hands as he took VENGEANCE! \"And if I don't stop?\"\n\nAngel wiped the tear from her face. \"Then I'll arrest you myself, Michael. I'll watch as they lock you up, then put you down like a rabid dog.\" She pulled in front of the emergency room doors and went inside to get help as Michael tried to decide his next move.\n\nCh. 44\n\nAmber helped the manager close up the furniture showroom at nine PM, then clocked out in the employee break room and grabbed her things. \"Walk me out?\"\n\n\"Sure,\" William said. He was the other salesman working her shift tonight, another college student making extra money. He loved the job, as he wanted to work in interior design after graduation. They walked out the side door to the employee parking area backed by low fencing and dense woods. It creeped Amber out as she walked through the empty lot, a single security light casting long shadows. After her near-miss at the bar, she was vigilant about threats around her. \"Are you all right, Amber? You look distracted.\"\n\n\"I'm just anxious to get back to my boyfriend,\" she told him. That was part of her problem, but the only part she wanted to discuss. She didn't know for sure yet, but she'd stop at the drugstore so she could find out. Amber hadn't told many people about her relationship with Michael, but William was gay, discreet, and always gave good advice. He was the first to notice she was in love. \"He needs to rest and heal, and Angel can't take care of him alone.\"\n\n\"Take care of yourself, too,\" William replied. \"You've fallen hard for this guy, and love is messing with your head. It's all right to take a breath and make sure of your feelings. You've never even lived on your own. It's better to take it slow and enjoy some freedom before you commit to him.\"\n\nThey'd talked about this while the store was empty; William was worried about the age difference between them. After all, she was a 21-year-old college student, and he'd been out of school for a decade. They weren't at the same places in life. They reached her car. \"Michael's a good guy, and right now, he can't even turn over in bed or go to the bathroom without assistance. I think that any virtue I have left is mostly safe with him,\" she said with a giggle. \"Thanks.\"\n\nShe got into her Ford Taurus and started it up, waving to William as she pulled out. Amber had a short drive to the closest drugstore; going in, she went to the aisle and bought what she needed, paying at the pharmacy in the back. She took the box into the bathroom nearby, and three minutes later, the plus sign told her what she feared.\n\nHer period was a week late for a reason.\n\nDammit! She tossed the used test into the garbage, washing her hands as tears started to fall down her face. Single motherhood wasn't in her life plan right now, and how would Michael react to the news? Would it bring them closer or drive them apart? Would Michael insist she get rid of it?\n\nWhat would her parents think? She hadn't even told them she HAD a boyfriend, much less that he was thirty years old. What would they say if they found out she was pregnant and alone? Would they insist on abortion so she wouldn't ruin her life?\n\nAmber knew she couldn't do that. Something had changed in her, even before the positive test. When she reached seven days after her period should have started and nothing, she knew she was a Mom. As shocking as it was, she already loved her child.\n\nShe walked out, her left hand unconsciously resting on her flat-for-now stomach. The pharmacy tech saw her face and knew instantly what the answer was. The woman didn't have a ring on, and you only buy that test late at night if you're worried. She almost ran out from behind the desk to talk to her. \"Are you all right?\"\n\n\"I'm in shock,\" Amber said. \"I'll be fine. Thanks.\" She kept the bag with the two remaining tests and bought a Coke before leaving. Sitting in her car, she fished her phone out of her purse and checked messages while she tried to stop crying. She didn't have any from Michael since shortly after she left, but she had one from Angel.\n\n\"CALL ME YOUR BOYFRIEND WAS AN IDIOT\"\n\nAmber laughed at that, wondering what he had done. Michael could be a cold professional when needed, but at other times, he was a goofball. She touched the number to call. \"What did he do this time,\" Amber asked when Angel answered.\n\n\"We got in a big fight, and I stormed off to my room. Michael decided he had to come up to apologize NOW instead of waiting until I'd showered and calmed down.\"\n\n\"He's not supposed to get out of bed without help! He can barely stand up!\"\n\n\"Yeah, but he's one stubborn fucking Marine. He made it three steps from the top of the stairs before he slipped and fell. Now he's torn out most of his stitches and set his recovery back a week.\"\n\n\"Oh, no!\" Amber couldn't believe it. Angel was right; her boyfriend was an idiot. \"What was he going to do, tell you to calm down? Was he doubling down on stupid?\"\n\n\"It wasn't just him. I said some things in the heat of the moment that hurt him, and he was worried.\" Angel didn't say what the fight was about, and Amber wasn't about to get between the siblings. \"I don't know what he planned to say, and it doesn't matter now. Don't go home because we're at the hospital.\" She told him the name so she could set her phone for the right place. \"They've taken him back to the operating room to repair the internal stitches and clean it out again. He won't be going home tonight, so you should stay home tonight and drive down in the morning.\"\n\nAmber's stomach dropped; the last thing she wanted was to spend tonight alone after what she just learned. \"No, I'll still come down. I want to see him when he's out of surgery, and I need to talk to someone tonight.\"\n\n\"Fine. I'm in the surgical waiting room. Maybe you can bring me some food because I'm starving. My stupid brother made me miss dinner.\"\n\n\"I'll pick up some Thai food on the way. I'll see you in an hour and a half.\" Amber hung up and set her phone for directions, then headed for the freeway. She got some pad thai, chicken satay, and cream cheese wontons from their favorite takeout place and brought it to the cafeteria, where Angel was waiting alone. \"Hey,\" she said as Angel looked up at her. \"How is he doing?\"\n\n\"He's out of surgery, now FEED ME!\" They attacked the takeout food as Angel filled her in on the events of the day. \"They had to open up three of the wounds and re-stitch him, but healing had just started, so it isn't as much of a setback. The nurse said I could see him briefly after he wakes up, but then we have to return in the morning during visiting hours. I asked if they could put him in a full-body cast to keep him from moving, but they said no. I'm still pissed at what he did, Amber. I told the nurse I'd break his right leg and use a garden hose for a catheter if he pulled this again.\"\n\n\"Oh, don't do THAT,\" Amber replied with a giggle. \"I like that part.\"\n\nAngel rolled her eyes. \"I'm glad you're staying. I'm still furious with him, but I don't want him to hurt himself over it.\"\n\n\"What was the fight about?\"\n\nAngel thought about what she could say. \"Michael looked at some things in my office that were private. I was pretty mad; I told him I couldn't believe my brother would look through my stuff without asking first. I told Michael he could stay until he healed up, but then I wanted him out. That's when I ran upstairs.\" She wiped away a tear. \"I told him he was no brother of mine if he could do that to me.\"\n\n\"Shit. No wonder Michael wanted to apologize so bad.\" The siblings were close, far closer than Amber was to her much older brothers, from her father's first wife. Both of them worked in Pittsburgh and rarely called. Amber only wished her family had blood bonds as strong as the adoptive ones she saw with these two.\n\n\"I just might have overreacted.\" Angel finished cleaning up from dinner, and they returned to the surgical waiting room just in time. The recovery room nurse led the pair back to where Michael lay alone on his stomach.\n\nHe looked at them and smiled. \"I'm sorry,\" he said, still a little groggy from the anesthesia.\n\n\"I'm sorry I snapped at you,\" Angel replied.\n\nAmber leaned over, holding his hand and kissing him softly. \"You were a naughty boy, and now you are back in the hospital instead of home with me.\"\n\n\"Three more lousy steps and I would have been fine,\" he complained.\n\n\"Ten more minutes and I would have come down,\" Angel replied. \"You know my anger burns hot, but not long. You didn't have to bleed all over my carpet to talk to me.\" Amber stepped back, and Angel leaned in to kiss his cheek. \"I told her you looked in my office, nothing else,\" she whispered.\n\nThere wasn't much more time to talk before they had to leave. When the pair arrived home, Angel had one thing in mind. \"I need wine and the hot tub,\" she said as she peeled off her clothes in the living room. \"Grab the wine from the fridge?\"\n\nAmber opened a bottle of white zin and grabbed a glass and a bottle of water. She stripped off her clothes and joined Angel in the hot tub, groaning in pleasure as she sank into the warm bubbles. Angel poured a tall glass and looked over, confused. \"No wine for you?\"\n\nAmber took a drink of water. \"I need to talk to someone before I tell Michael,\" she replied. Amber told Angel about the pregnancy test and her fears of how her family and Michael would react. Angel listened without interrupting, finally pulling the crying girl into her arms as she broke down crying.\n\nAngel turned off the hot tub and helped her out. \"You're pregnant, so you shouldn't spend too much time in here,\" she told her. \"Michael loves you, and he will love your child without condition. You have no idea just how much he needs you in his life right now.\"\n\nAfter she settled Amber into Michael's bed, Angel sat in the dining room with her bottle of wine, thinking about how this all might play out. Fatherhood changed people, and maybe it would give Michael the push to give up his past and start anew.\n\nCh. 45\n\nMichael smiled as the two ladies left the recovery room after their short visit. He'd had the chance to apologize to Angel, and he was sure she hadn't meant it when she said she wanted him out of her life. \"I probably should move out,\" Michael mumbled to himself. He thought about his options. Michael didn't want to live too far away, but both of them were changing now. He finally had a steady girlfriend, and Daniel was serious about Angel.",
        "He knew that changes would have to come. Amber graduated in seven months, and she wasn't going to stay in rural Pennsylvania. She was bilingual in French, thanks to growing up in Quebec. With a degree in International Relations and a minor in Russian, she'd be a valuable asset to any multi-national corporation. Her dream job would be in Europe or Russia.\n\nThey hadn't talked about a future together in detail, but Michael was already planning. His job with SecuriTech didn't tie him to any specific location; the training was in South Carolina, but the contracts he took could be anywhere. Michael liked to take three to five assignments a year, each lasting from two weeks to three months with training included. He stayed with his sister because it was convenient, he could see her in between motorcycle trips, and he didn't want to pay for an empty apartment.\n\nHe could get a place to share with Amber, and if that was in Europe, he could live with that.\n\nMichael knew that he might have to move out eventually. Daniel's shore duty at the Naval Academy ran another eighteen months, and then he'd go back to sea. If the two married, he was sure Angel would put in a transfer to follow him. There was nothing to hold him to the DC area if Angel moved.\n\nHe had a lot to talk about with both of them. If Angel insisted on him leaving right away, he'd get a month-to-month lease on an apartment near Amber's college so they could live together until graduation.\n\nThe hospital moved him from post-op to a room, and he spent a sleepless night thinking about the events of the past twelve hours. The confession hadn't gone as he had hoped; he thought Angel would understand what he was doing. He never expected her to assist him because of her job, but he thought she would appreciate him for punishing those who hurt her.\n\nIf he'd never put the camera in her room? If he hadn't accessed her FBI computer without her knowledge? Those mistakes broke the trust, not the serial killer part. She said as much when she offered to put it all in the past if he'd stop now.\n\nAnd that was the decision he had to make. The flip side was that if the Monster Hunter made another appearance, Angel would turn him in. She would have to; her only chance to avoid jail would be to throw him under the bus.\n\nCould he do it? Could he give up the power and the rush that came with taking these predators out? Could he stand back and watch them continue to harm other children, knowing that he could have stopped it?\n\nIt would not be easy, but losing Angel and his freedom would be worse. He would have to stop because protecting Angel was his highest duty.\n\nThere was only one decision to make, and Michael made it. The Monster Hunter was officially retired.\n\nThe choice removed a heavy burden from his shoulders and freed him to make a life for himself. Amber was his first serious girlfriend; until now, women could only hamper his vow for vengeance. It was easy enough for him to find release in a willing one-night-stand and move on without guilt. Amber had found her way inside his walls, and he couldn't walk away now.\n\nAmber would never understand him or forgive him if he got caught. She didn't understand how being a victim changed you, and an arrest and trial would ruin her life.\n\nHe heard the television say something about the Monster Hunter, and he turned the volume up on the female anchor. \"Massachusetts State Police divers have recovered the body of Brian Michael Kavanaugh of Boston, Massachusetts from the Charles River in Cambridge. Kavanaugh was one of only two remaining convicted child molesters the Monster Killer promised to target if they did not turn themselves in and make a full confession. Cellphone video from stopped motorists showed the 55-year-old man standing on the bridge structure before his leap.\"\n\nMichael had to concentrate on making out the voice among the traffic and other background noise. \"It's not fair! I've done my time, and I've met ALL the terms of my parole! I paid my debt to society. I followed the rules, and all I wanted to do was live out my life in peace. The real criminal is the Monster Killer! You people make me sick. You're rooting for a sadistic vigilante to kill me painfully, and I'm not going to play along. I'll see the Monster Hunter in HELL!\" Michael heard screaming, and someone yelled, \"He jumped! He ***** did it!\"\n\n\"Police recovered Kavanaugh's body an hour later. With his suicide, only Henry James McKnight of Chattanooga, Tennessee, remains alive and out of prison. Mr. McKnight, whose demands for protection have been rejected by Chattanooga police, remains in seclusion as the deadline approaches. In other news...\"\n\nMichael smiled and turned the television off. The Monster Hunter had struck again, this time while under anesthesia in a surgical suite.\n\nThe surgeon checked in on rounds after breakfast and warned him of the damage he could do if he didn't stay in bed. \"It won't happen again, Doc,\" Michael promised. The nurses finished cleaning him up and changing his dressings a few minutes before Amber arrived. \"Hey, baby,\" he said with a smile as she walked into the room. \"Is Angel coming?\"\n\n\"She'll be here a little later. I told her I needed some time alone with you first.\" She sat in a chair near his head, holding his hand as she asked him how he was feeling. \"I can't wait to get you back home so I can stay with you again. I have to head back to school soon, but I'll come back late tomorrow.\"\n\n\"I'll miss you.\"\n\n\"I will too.\"\n\nMichael could tell she had something to say but couldn't work up the courage. \"What is it, Amber? Are you worried about Angel and me after the fight? Is it my job?\"\n\nShe put her head down on her hands, then looked up into his eyes. \"My period didn't come, Michael. I took a test last night and another this morning. I'm pregnant.\"\n\nShe was watching his reaction closely, hoping for the best. His eyes went wide, and then he looked at her with concern. \"Are you all right? The baby?\"\n\n\"I've got an appointment with my OB in two weeks, but I'm fine. I haven't had any other symptoms yet.\"\n\nMichael pulled her hand to his lips and kissed it. \"I'm going to be a Daddy?\" She nodded, tears filling her eyes. \"Who knows about this?\"\n\n\"I told Angel last night, but I was afraid to tell anyone else until I knew how you reacted to the news.\" She smiled and continued. \"I'm worried about my parents. They don't even know you exist.\"\n\nMichael raised an eyebrow. \"You don't talk often, or you didn't want to tell them?\"\n\n\"I kinda told them because I said a former Federal Agent stopped me from drinking the drugged wine. I didn't tell them I went on a date with the guy who did it.\"\n\n\"That wasn't your fault, Amber. I'm so glad I spotted them before they could take advantage of you. I'm sure your parents will appreciate that.\"\n\n\"They don't like to hear about me going to bars or dating when school costs so much. Plus, I didn't want to put you through the wringer of my family until I knew I had you hooked good.\"\n\nMichael laughed at that. \"You don't have to worry about me shaking the hook.\" He closed his eyes and smiled. \"You better tell your folks about me soon, my love. If they ask, I was off at training and then my deployment. Send them a photo or two, and it's all right to tell them I got hurt.\"\n\nAmber nodded. \"I can tell them I planned to bring you home over Christmas after you got back from Kazakhstan.\" They talked for a few more minutes before Angel knocked on the door. \"Come in, Angel! He's cool with it.\"\n\nAngel was smiling wide as she congratulated the pair. She took a photo on Amber's phone that she could send to her parents, but she let them talk until Amber had to leave. \"I love you, Michael,\" she said after she kissed him goodbye.\n\n\"I love you, and I love our baby. It's all going to work out fine.\"\n\nAngel waited until the door closed before she took the chair by his head. \"I knew you'd be shocked but happy.\"\n\n\"I never thought I'd have a family,\" he told his sister. \"I need to move my plans up; I don't want her to go through this as a single woman.\"\n\n\"You're going to ask her?\"\n\n\"I've already ordered the ring. She's bringing me home over Christmas, so I'll do it there.\"\n\nAngel was happy to hear it because it answered her other question. \"You're going to stop?\"\n\nMichael nodded. \"I made my decision after you left last night. I couldn't risk you or her, and now I can't risk my child. The Monster Hunter will fade away, never to be heard from again.\"\n\nCh. 46\n\nMichael had one more day in the hospital, so Angel was alone again. She missed her work and her friends there, but she still didn't have a hearing date set.\n\nAngel passed the time by deep cleaning her kitchen, and it was almost eleven now. She had the long cleaning gloves on and was scrubbing crust out of the back of her oven when her cellphone rang. She got up off her knees, pulling the gloves off and leaving them in the sink, and picked up the call. \"Hey, Mark.\"\n\n\"Hi, Angel. I know it's short notice, but I'm on the job in Bethesda right now and thought you might like to get lunch.\" Bethesda was not far away, and Angel leaped at the chance to get out of the house and see her partner again. \"I'll see you at Lilit Caf\u00e9 at noon.\"\n\nAngel hung up and finished the oven, then took a quick shower and dressed comfortably before driving to meet him. She got a table near the window and waved him over. He bent down and gave her a quick hug before sitting across from her. \"How is Michael doing?\"\n\n\"He should get released from the hospital tomorrow, and this time, maybe he'll stay in bed.\" She'd told Mark that Michael fell when trying to go to the bathroom alone, nothing about the argument. Angel had rented a carpet cleaner to get the blood off the stairs and living room floor.\n\n\"Marines are known to be stubborn,\" Mark said with a laugh. \"How are you holding up?\"\n\n\"I'm nervous,\" Angel admitted. \"They haven't scheduled a hearing, and my lawyer hasn't heard anything. What is the mood at the office?\"\n\n\"That's what I wanted to tell you about, Angel.\" He had that look he got when he had to deliver bad news. \"Most of us are behind you and want you back.\"\n\n\"Most?\"\n\n\"The Purges have created a lot of ill will. Dozens of respected agents in the building got suspended or reprimanded because of participation in that board, and everyone knows your complaint is behind it. They won't be so welcoming to your return, but they won't openly harass you either.\"\n\n\"But shunning and passive-aggressive bullshit is fine.\"\n\nHe nodded. \"I'm starting to see some of it already as your partner. Our boss stops it when he sees it, but it's still there, even in the Task Force.\"\n\nAngel took a bite and processed what he was saying. \"So, I can expect to take some low-level shit when I return.\"\n\n\"Hard to tell how much. I doubt the boys will do anything to your face, but you'll be the topic of a lot of conversation.\"\n\n\"Wonderful. What about Ken?\"\n\n\"That's the other part. Ken came back to work this morning. Walked in like he owned the place.\"\n\n\"What?\"\n\n\"Human Resources couldn't find any evidence to tie him to the meme, and the IT guys couldn't tie him to the username that posted it. He flatly denied any involvement in the meme or the board, and he passed a polygraph. They had no choice but to reinstate him after that.\"\n\n\"He fucking ruined me, Mark!\"\n\nHer outburst got a few of the other patrons looking their way, so Angel sat back and gathered herself. Mark leaned over and put his hand over hers. \"You know it, I know it, but he beat the polygraph and is back on the task force. His lawyer has warned the brass against retaliation against him now that he's cleared of wrongdoing, so Ken stays on the Task Force as a lead investigator. If you come back to us, he'll be in the office with you every day. That fucking smirk of his makes me want to smack it off his face.\"\n\n\"Don't. Not for me.\" Angel had already concluded that remaining an FBI agent while hiding her brother's activities as the Monster Hunter was a bad idea. A realistic fear of continued harassment might be her out. \"Thank you for telling me, Mark. It helps me decide my next move.\"\n\n\"I'll stay on the Task Force if you decide to come back, and I'll be your partner and help you through this shit. If you don't want the fight, I'll understand.\"\n\n\"What if I don't come back?\"\n\nMark fiddled with his glass. \"I'll ask to transfer off the task force before I do something stupid. Honestly? I like working for Dan, and I love working with you, but the job itself is a loser. Carla told me that if we catch the guy, she'd never want to prosecute the case. A public trial where people are rooting for the defendant to get away with it? No way.\"\n\n\"Yeah, I didn't want the assignment, but I didn't have a choice. I'd rather be back with Human Trafficking.\" Putting those guys away felt a lot better than this.\n\nMark had to run, so he finished his sandwich and left. Angel called Carter Pederson and got an appointment at two at his downtown office. He stood as she walked in. \"Agent Johnson, this is a surprise. My assistant didn't say what you needed.\"\n\n\"I need to know if a deal is possible,\" Angel replied. She laid it all out; her worries about the FBI taking so much time, Ken's return to the office, the warnings about resentment over her complaint, and her reluctance to go through it again. \"Within the FBI, I'll never escape this. It won't matter if I leave the Task Force or transfer to another Field Office. I'll always be the one who complained to HR and got people fired over a cartoon.\"\n\n\"You had nothing to do with their actions, Angel.\"\n\n\"And we both know that won't matter. The FBI leadership doesn't want me back, but they're having a tough time justifying it with my employment application. They are petrified of me going public and creating a big scandal about this. Offer a settlement that gets me enough to go back to school and get my law degree. In return, their problem goes away, and I agree not to pursue a lawsuit. The whole thing gets tied up with a confidentiality agreement, so I can't talk about it, and they can't block me from future employment.\"\n\nCarter sat back at his desk, thinking of the implications. \"There's more to it than the money. You have benefits, a vested Federal retirement, and more.\"\n\n\"See what you can do. If nothing else, I can pay for my health care out of the settlement.\"\n\n\"I think I can do better than that. I would rather negotiate your return because I think the FBI is better with you in it, but you're the one who has to make that decision.\"\n\n\"I've made my decision, Carter. Negotiate an exit package for me.\"\n\nHe stood up and extended his hand. \"I'll put an offer together and meet with the FBI soon. I'll let you know.\"\n\n\"Thank you, Carter. You've been a big help to me, and I appreciate it.\"\n\n\"You'll see my bill for that help; if you're going to be a lawyer, you'll understand how important that is. Downtown offices aren't cheap.\"\n\n\"Call me when you know more.\" Angel walked out, feeling a little lighter in her step now that the looming hearing no longer held sway over her life. In truth, anything Carter could get for her was a bonus since she knew she'd have to resign as an agent anyway. It was too dangerous to be an active agent while protecting Michael's secrets.\n\nAngel texted Daniel that she was heading his way and let herself into his apartment with the key he'd given her. Her lover had another hour of work to go, so she busied herself making dinner for them. \"Damn, something smells good,\" he said when he walked through the door.\n\n\"Hey, baby,\" Angel said as she kissed him. \"It's almost ready, so go change out of that uniform and get that cute ass back out here.\"\n\nHe was back in a few minutes, wearing sweatpants and a Navy T-shirt. Angel had the garlic bread on the table and was plating her homemade lasagna. \"Pour the wine?\"\n\n\"Thank you for making dinner, Angel. I wasn't looking forward to Freezer Surprise.\" As a single man, he rarely cooked, and he froze the leftovers. Freezer Surprise was reaching in and grabbing a container without knowing what it was. Sometimes you won, and sometimes you lost. He opened the bottle of Merlot and poured them each a glass.\n\nAngel raised hers with one hand and reached for his hand with the other. \"To new beginnings,\" she said.\n\n\"New beginnings,\" Daniel replied as he clinked his glass to hers. They each took a sip, and Daniel complimented her cooking after tasting it. \"Not that I don't appreciate the meal, Angel, but is something going on?\"\n\n\"I'm not going back to the FBI,\" she said. Over the meal, she told him everything she'd learned from Mark, then related her meeting with her lawyer. \"It's better for everyone. By the time I finish my law degree and find a job in a US Attorney's office, the whole FBI thing will have calmed down again. I can fight my battle in the courtroom instead.\"\n\n\"Wow.\" Daniel hadn't interrupted her talk with questions, though so many were going through his head. \"For what it's worth, I think you're right. Your reputation is everything, and right now, yours is shit through no fault of your own.\"\n\n\"I'm going to miss being an agent.\"\n\n\"You'll be a better prosecutor because of it, love. I have every confidence in you.\" He got up and cleared their plates as Angel finished off her wine. \"Now for dessert.\"\n\n\"I didn't make anything,\" Angel protested.\n\n\"Oh, my dessert is always ready,\" he said with a grin as he pulled his shirt off. Angel squealed as he picked her up and carried her to the couch, setting her on her back. He kissed her as he stripped her down, finally leaving her moaning in just her stockings and garter.\n\nShe leaned back and spread her legs for him as his lips kissed their way up her inner thighs to his target. \"Daniel... oh fuck, right there, baby.\" Angel closed her eyes as his tongue started to circle her swollen clit before sliding between her labia and down. He teased her, never touching her with more than the tip of his tongue. His fingers spread her sex like a buffet but never gave her the penetration she desired. \"Please, Daniel. I need more!\"\n\nHe looked up at her, panting and needy, and smiled. \"You'll cum when I want you to, and not a second before.\" He spanked her wet pussy with his fingers, causing her to shriek, then went back to his slow tease. Every time she got close, he'd back off until it passed, and then he'd start again.\n\nThirty minutes later, Angel was promising to do anything he wanted if he'd just let her cum. \"Anything?\" He let a slippery finger trail down and started to circle her dark star with it.\n\n\"Oh, god, even that, just let me cum!\" Angel moved his head back where she needed it. Daniel smiled and went back to work, using his fingers and mouth to build her to another peak. When she was ready to explode, he sucked hard on her clit and bit down while pushing his index finger into her ass. \"FUUUCKK! DANIELLLLLL!\" She bucked like a bronco, taking his head along for the ride as she held his face tight to her. Angel squirted three times, the spray hitting him in the face as she moved. The titanic orgasm washed over her body like a tsunami, tossing her limbs around and leaving her limp. He retrieved her stocking-clad left leg off the arm of the couch, putting her legs back together, and rocked back on his knees. Angel was catching her breath, slowly returning from the intense experience he'd just given her.\n\n\"You hosed me down,\" Daniel said with a grin as he wiped at his face.\n\n\"Jesus, Daniel. They should call you Das Tongue.\" She looked over at him and laughed. \"You look like a glazed donut!\"\n\n\"You aren't any better,\" he said. \"Come on, let's shower and prepare your ass for later.\" He saw the fear in her eyes as she pulled back from him. \"Angel? If you don't want to, I won't hold you to what you said while I had your brain fogged up with lust. I'd never hurt you or force you.\"",
        "Angel started to cry, so Daniel picked her up and carried her to his bathroom. He finished stripping her, then stood her in the shower. She was still crying as they were drying off, so he tucked her into bed and crawled in to hold her. \"I'm sorry, love.\"\n\n\"It's not you, Daniel. You've been wonderful with me; the best lover I've ever had, and I love you.\"\n\n\"I shouldn't have done the butthole play. I should have known it was a trigger.\"\n\n\"The idea of something that size going in there IS scary, but I know you'll take your time, and you won't hurt me. I trust you, and you couldn't have known. It's what you said.\"\n\n\"Prepare your ass?\"\n\nShe nodded. \"It's what my captor would tell me before my 'appointments.' Some of the men liked to use all three holes. If he didn't prepare me to take them, they might tear me up. He didn't care about my pain, but getting hurt meant bringing in a doctor and recovery time. He didn't like to lose money.\"\n\nDaniel's heart was breaking for her. He'd known her past was a minefield, and he'd ruined their night now. \"I'm sorry. I'll never ask for that again.\"\n\nAngel pushed herself up until she was looking down at him. \"No. It's another thing I need to reclaim in my life. I'll give it to you, but I'm not ready now.\"\n\n\"I'll wait.\"\n\nAngel snuggled up to him, her hand idly stroking his cock back to full hardness. \"That's not all I can't give to you, Daniel. You need to know this before our relationship goes any farther than it has.\"\n\n\"Nothing will change how I feel about you, Angel.\"\n\nShe told him about Michael and Amber finding out they were expecting a child together. \"The abuse I went through before puberty? It left permanent damage,\" Angel said with her head buried on his shoulder. \"My doctors told me I might never be able to have children. I could be your wife, but I can't give you a family.\" Daniel held her in her arms as the pain and frustration came out.\n\nIt didn't change a thing in his head. He wanted the woman in his arms as his wife, and they would find a way to have children when she was ready.\n\nCh. 47\n\nWith both sides eager to make the situation go away quietly, Carter took just over a week to negotiate a settlement with the FBI brass. The final deal cost the Government two years salary as severance pay plus a hundred thousand dollars to settle the sexual harassment claim, with six months of paid health benefits. In exchange, Angel would resign from the Bureau, forego any further harassment claims, and signed a strict non-disclosure agreement. The official story was that she had 'resigned for personal reasons' and intended to go to Law School. The resignation meant that she could resume a law enforcement career if she wished, but only at the state or local government level. Angel even had her previous supervisors and the Assistant US Attorney write glowing letters of recommendation for law school admission. The signing party for Angel's settlement was set for Friday morning at ten at the FBI building's Human Resources office.\n\nAngel started studying for the Law School Aptitude Test while taking care of Michael as he healed up. She was going to apply to law schools in the spring and start school next fall. She and Daniel had been talking about his future, trying to figure out how best to match their plans. It wouldn't be easy; his Navy career path was demanding.\n\nThe Naval Academy teaching post was his post-Department Head shore tour, made possible by his Master's degree in Mechanical Engineering. He'd already screened for Executive Officer and would be attending Prospective Executive Officer School in Groton, Connecticut, next fall. After that, he would get orders to a submarine for a two-year tour. The problem was that although he could request a billet, the 'needs of the Navy' prevailed. He could end up at any submarine base; in addition to Groton, there were submarine bases in Norfolk, Virginia, and Kings Bay, Georgia. On the West Coast, there was Bangor, Washington, and San Diego, California. There was even the possibility of Pearl Harbor, Hawaii, or Guam. Angel knew that a part of her law school search would be the availability of distance learning. She could only guarantee one year at a DC-area school if she followed him to his next duty stations.\n\nIn the nine days since Michael got out of the hospital, he'd healed enough to move around using a cane. Amber had practically moved in, leaving only to go to classes and work. It was funny watching the two compete for who could let the other do as little as possible, though Michael's wounds beat out Amber's early pregnancy. The pair was still sleeping in her living room, as the stairs were still out of the question.\n\nAmber skyped her first Well Baby appointment to Michael. She got her pregnancy confirmed, and an ultrasound showed everything was progressing normally. She was young and in good health, so the next appointment was a month later. The doctor gave her advice on nutrition and pre-natal care. Angel smiled as she saw Michael talking to their baby as she set the table for dinner. She finished and joined them in the living room as they waited for Daniel to get there. \"Are you going home for Thanksgiving, Amber?\"\n\n\"I already did; Thanksgiving is the second Monday of October in Canada,\" she said. Her father met and married a Montreal resident after his first wife died, and his sons were in college. Amber's mother was fifteen years younger than her sixty-two-year-old father, and Amber was born a year after they married. Because of this, Amber had dual citizenship.\n\n\"Do your parents visit your brothers on Thanksgiving, Amber?\"\n\n\"No. My brothers sometimes host, but they are spending it with their other families this year.\"\n\nAngel got an idea and looked over at her brother. \"You should invite her parents down for Thanksgiving,\" she told him.\n\nMichael looked at the bed and rolled his eyes. \"I'm still bedridden, so it's not a great time for entertaining,\" he said.\n\n\"It's the perfect time when you think about it. I'm off work, and Amber's already here, so we can get things ready. They can't complain about Amber staying with you while you're injured, and she's staying in your room upstairs. We can move your bed to your room for her parents to use and get a single bed for you. Amber can stay with me in my room while they are here. Besides, look at you. You're a hero, a wounded warrior.\"\n\n\"Hurt while protecting an oil company executive,\" Michael said as he rolled his eyes.\n\nAngel rolled hers right back at him. \"The longer you wait to charm her parents, the bigger a blow it will be when Amber tells them she's pregnant.\"\n\n\"She's right,\" Amber said. \"You can't travel, but could we get them tickets here?\"\n\nMichael was smart enough to know the right answer when given. \"I'd love to have them visit us.\"\n\n\"Great! That will give us six people, which will be perfect,\" Angel said as she heard Daniel's motorcycle pull in. She'd already invited her boyfriend to Thanksgiving.\n\n\"I'll call them after dinner,\" Amber said.\n\nThe four sat at the table with Michael's seat boosted by a thick pillow to help his leg stay straight. The conversation turned to Angel's upcoming settlement. Michael wasn't happy that she was out of the FBI, but that little bastard Ken was still there. \"I should have taken out his knees,\" he complained.\n\n\"He played the system well,\" Angel replied. \"I can't believe he was able to beat the polygraph.\"\n\n\"People beat that all the time,\" Michael replied. \"I can't believe they dropped the investigation on him based on that.\"\n\n\"No evidence,\" Angel said as she put her empty wine glass down.\n\n\"Then get some,\" Daniel said as he leaned forward.\n\n\"How? Go up to him and ask him to admit he posted the meme of me?\"\n\n\"Yes.\" The other three looked at him. \"Friday, you're at the building, and you are officially out of the FBI. Your friends will be there to see you off, but what will Ken and his cronies do?\"\n\nMichael picked it up first. \"They won. They'll dance on her grave.\"\n\n\"Exactly.\"\n\n\"Ken knows me, so I can't do it. I doubt Ken will brag about sexual harassment to a woman, no matter how hot she is,\" Michael said.\n\n\"Find out where Ken and his buddies are going after work. I'll leave early from work, head down there, and get his confession on tape.\" Angel looked at him, wide-eyed. \"Guys like this WANT to brag about it. They can't wait to tell about how they got one over on the system and ruined the woman's life. A Naval Officer facing a sexual-harassment claim makes a damn good drinking partner. Set me up with a wire, and I'll get your confession.\"\n\n\"I've got a camera upstairs that you can hide in your uniform. It's so small you can't see it,\" Angel said.\n\n\"Perfect.\"\n\nThe rest of the night went by fast. Angel and Daniel enjoyed the hot tub until he had to head home, while Amber and Michael relaxed and watched a movie in the living room. Amber's parents were thrilled to visit and asked a lot of questions about her new boyfriend. Michael bought them tickets to Baltimore-Washington International Airport, arriving Tuesday and leaving Saturday.\n\nAngel drove to her lawyer's office on Friday morning, and they walked the few blocks to the FBI Field Office. Nancy Gottleib from Human Resources met them at the Security checkpoint and issued them visitor badges before taking them to her office. Carter Lewis from Legal was waiting there with a woman from Personnel and a stack of papers.\n\nAfter weeks of uncertainty, ending her FBI career took ten minutes. She signed the papers, Carter Lewis handed Carter Pederson her the severance check, and they all shook hands. The two seemed happy to be rid of her as they walked her to the door. When it opened, Dan Robinson and Mark Prentice were there. \"We'll take them out of the building, Ma'am,\" Supervisory Special Agent Robinson said.\n\n\"Thank you.\"\n\nAngel was no longer an employee, so she hugged them both. \"Thank you for seeing me out.\"\n\n\"I'm not happy about losing you, Angel, but the Justice Department is going to get one hell of a prosecutor in a few years.\" They exited the elevator on the first floor to find dozens of agents waiting for them. Carter left her to it as she said her final goodbyes to well-wishers from the Task Force, her old office in Human Trafficking, and others she knew from the building. With the gag order in place, she thanked them for coming and talked about how excited she was about law school. A dozen of them left the building to take her to lunch at a local caf\u00e9, and Dan presented her with a plaque commemorating her service. It was fun, but soon they had to return to work, and she was alone again.\n\nShe returned to her lawyer's office, settling up her bill and taking a copy of all the paperwork. \"Thank you for doing this, Carter,\" she told him.\n\n\"It's been a pleasure, Angel. I wish I could have kept your job.\"\n\n\"It's the best outcome for us all.\" With that, she returned to her car and drove back home.\n\nMark texted Angel and Daniel just before she arrived. \"Free State Atlantic Bar 501B G St 5pm\"\n\n\"I'm on it,\" Daniel texted back. \"Leaving work now.\"\n\nDaniel was sitting at the end of the bar in his service dress blue uniform when four G-men walked in. He'd looked up Ken's photograph, but the man in person was even smarmier than that. \"He's here. He looks like a Todd,\" he texted.\n\n\"Todds are three levels up from him,\" Angel replied. Daniel plugged in the camera and started the video recording.\n\nThe group set up around some tables nearby while Daniel sipped his beer. The group was in a good mood, and one of the agents stood by him as he ordered another round. \"What are you in town for, Commander?\"\n\n\"Answering a sexual harassment complaint,\" Daniel said before he took a drink. \"The bitch didn't mind flashing her thong at me but freaked out when I grabbed her ass. What the fuck did she expect would happen?\"\n\n\"There's a lot of whiny women around who don't know their place,\" he said as he took the pitchers. \"Why don't you join us? We just got rid of one.\"\n\n\"Why not?\"\n\nFrank led him to the table and introduced him to Brian, Ken, and Todd. \"You'll never guess why the Commander is drinking here tonight.\"\n\nDaniel laid his story on thick. He told them about how the young administrative assistant dressed and flirted around the office and her complaint when he ran his hand over her bared ass. \"Ten years in the Navy, and now I'm fighting for my career because some whore files a complaint.\"\n\n\"Fucking bitch,\" Ken said. \"We had this agent who couldn't cut it in a man's world. She broke down crying one day in the office and had to leave by ambulance. I couldn't believe it. Breaking down in the office like a two-year-old who dropped her ice cream? You're a fucking Special Agent, toughen the fuck up.\"\n\n\"We got her to quit by posting this on a private FBI agent site,\" Brian said. He pulled out a phone and showed him the meme of Angel as a child getting raped. \"Everyone knew her complaint was behind the politically correct purge. She was a dyke, like most of these agents.\"\n\n\"Didn't you get in trouble for that shit?\"\n\nKen laughed. \"Human Resources did a purge, but they couldn't touch us. We all use burner phones for that site, and nothing traces back to us by name.\"\n\n\"You guys get an untraceable phone to talk shit about people?\"\n\n\"Fucking Human Resources was out for blood when the meme came out. The guys who didn't use the phones got caught, and two of them got fired. We're too smart for them. They even gave me a polygraph, but I learned how to beat one of those back at the Academy. After that, I was back to work, and the bitch was drummed out of the FBI this morning. To Angel! You fucking crybaby!\" He raised his beer to the group.\n\n\"To Angel!\"\n\nThe five all pounded their beers, and Daniel decided he had enough. He thanked them and grabbed his cover, putting it on as he walked outside. Daniel turned right and walked a block before he sat on a bench. He pulled the phone out, stopped recording, and sent it by group text to Angel, Mark Prentice, and Dan Robinson. \"Take out the trash,\" he wrote after the video file finished uploading.\n\n\"Good job! Now get that cute ass home so I can give you your reward,\" Angel texted him.\n\n\"Yes, Ma'am.\" He walked towards the parking garage with a spring in his step.\n\nCh. 48\n\nThe end of Ken and his cronies was quick and spectacular. When Mark and Dan received the text with the undercover video, Dan called an emergency meeting at work with the brass. When asked why, he merely said that 'agent misconduct with significant consequences,' and that was enough. Present was the heads of the FBI's Office of Professional Responsibility, Human Resources and Legal, and the Assistant Director In Charge of the Washington Field Office, and the Assistant US Attorney. They met in the ADIC's office on the top floor, and the ADIC wasn't happy. \"What's this about, Dan?\"\n\n\"If I may?\" Dan had downloaded the video file to a flash drive and plugged that into the computer feeding the large video monitor on his wall. \"This video was taken just after five this evening at a local bar.\"\n\nThe file came up, and Dan hit play. \"The man taking the video is Lieutenant Commander Daniel Donahue, a mechanical engineering instructor at the Naval Academy. He's former Special Agent Angel Johnson's boyfriend, but that is his only connection to the Bureau. This video was unsolicited; I didn't know about their sting operation until I got the file texted to me.\"\n\n\"He's not a cooperating witness?\"\n\n\"No, sir, he's a private citizen operating on his own. I spoke with former Agent Johnson briefly; she said it was Commander Donahue's idea. He thought Special Agent Ken Markhart would be like Colonel Nathan R. Jessup in 'A Few Good Men.' Like him, he'd WANT to brag about how he was smarter than everyone else and would dance on the grave of Agent Johnson after she got forced out. It turns out he was right.\" They watched as the four men came into the bar, and Agent Robinson identified the Special Agents involved. The group watched as Daniel joined the group and got introduced. They were shocked as the men confessed their involvement in the plot, bragging about their use of burner phones and even showing him the meme on one of their phones. When the video ended, the room exploded in angry discussions.\n\n\"Enough,\" the ADIC said. \"Where do we sit legally? Can we use this video?\"\n\nThe Assistant US Attorney nodded her assent. \"Washington, DC is a one-party consent territory along with 38 other states. The video was in a public place with no expectation of privacy. We're also in the clear from a warrant standpoint as the FBI did not request the surveillance, nor was the person involved acting as a confidential informant under our control. Legally, it's no different than getting information sent to us from store surveillance cameras or a tip line. We can use it.\"\n\n\"What kind of charges are we looking at?\"\n\n\"Each of them perjured themselves in sworn statements during our investigations of the meme,\" the AUSA replied. \"That meme is known to be child pornography, edited or not. The photograph was unreleased evidence of an official investigation. I might be able to prove suborning perjury.\"\n\nThe ADIC looked at his Office of Professional Responsibility head. \"This one is all yours. Get search and arrest warrants for all four of them and execute them TONIGHT. I want our tech guys going through those burner phones by morning.\"\n\n\"Understood, sir.\"\n\n\"Dan, where is the original video?\"\n\n\"Commander Prentice has it in his possession, sir.\"\n\n\"Good. Send one of your men to retrieve it as evidence and take his formal statement. Are there copies of that anywhere?\"\n\n\"The Commander texted it to three people; myself, Special Agent Prentice, and former Special Agent Johnson. I downloaded it onto the flash drive on my office computer, but other than that, it has not been distributed.\"\n\nThe ADIC stood up, and everyone else followed. \"Keep it that way.\" Dan removed the flash drive, and the OPR head took it from him. \"They will lawyer up, but the timing works out perfectly. Let these guys sit in jail until arraignment Monday. Get to work; I need to inform the Director personally.\"\n\nThe group filed out of the office, and Dan pulled the OPR representative aside. \"I've got a favor to ask,\" he said. \"When you serve the warrants on Special Agent Markhart, I want to lead the team.\"\n\n\"Why?\"\n\n\"He was in my command, and his actions harmed an innocent agent in my command. I need everyone to know that I protect my own.\"\n\nHe considered it for a moment, then compromised. \"My men will make the arrest, but you can read him his rights and be one of his escorts for his booking.\"\n\n\"Thank you.\" As they walked to the elevator, they talked about how they could get him without the burner phone getting destroyed. \"I have an idea, but I'll need to bring one of my agents in.\"\n\nThe OPR team got the warrants from a Federal judge and set three AM for a coordinated raid on the four homes. The team assembled a block from Special Agent Ken Markhart's Georgetown apartment. Dan was there along with one trusted member of his team, Special Agent Mary Campbell. He knew she would never warn the others as she was Angel's friend, and she couldn't wait to see Ken go down.\n\nThe plan was simple; a four-man team entered the hallway from both ends while Mary went to the door. She started banging on it. \"KEN! Wake the hell up! It's Mary Campbell. KEN!\" She kept knocking on his door until she heard him yell back.\n\n\"It's three in the fucking morning, Mary!\"\n\n\"Then answer your phone, and the boss won't send me to fetch you!\"\n\nShe heard the chain slide and deadbolt unlatch, and he opened the door to find Mary in her work clothes with her badge hanging around her neck. Ken was wearing designer boxers and a T-shirt. \"Give me a moment. I have to get dressed.\"",
        "He turned his back to let her in, and she walked in then ducked into the kitchen as the others followed right behind. \"FBI! YOU'RE UNDER ARREST!\" The agents ordered him to his knees and handcuffed him.\n\n\"What the hell is this about, boss?\" Ken was shocked to see Dan Robinson with the group.\n\n\"You're under arrest for perjury, possession of child pornography, and distribution of child pornography.\" Dan read him his Miranda rights. \"Do you understand these rights as I have described them?\"\n\n\"Yes. I want my lawyer.\"\n\nMary exited the room before the others, taking a cellphone photo of Ken's perp walk. \"He's going down,\" she texted Angel as she attached the picture.\n\nAs promised, Angel had rewarded Daniel for his efforts that night. It took two blowjobs and three hot rounds of sex before Das D couldn't answer the bell again. That was just after two in the morning. Angel took him down for a massage and a soak in the hot tub, then back up for a shower, still unable to get a rise out of him. Any thoughts of Round 4 ended when he passed out in bed.\n\nAngel got up to brush her teeth when her phone dinged. It was Mary, and the photo made her smile. \"Thank you for everything,\" she texted back. She slid under the sheets and tucked into Daniel's side, smiling as she fell asleep.\n\nIn the end, one of the agents flipped for a deal that had him plead guilty to one count of felony perjury and a sentence of probation in exchange for his testimony against the other. The plea deal ended his career but made the cases against the others ironclad. Faced with the video, his testimony, and the physical evidence from the search warrants, the other three pled guilty within weeks. Two of the men got two years in prison on the perjury and possession charges. The AUSA wanted Ken as the ringleader, and he was facing thirty years if he went to trial. He eventually agreed to a plea deal giving him twelve years in prison.\n\nAngel's lawyer hadn't been quiet during all this. He filed a lawsuit against Ken Markhart on her behalf for sexual harassment and intentional infliction of emotional distress. It was settled just before Christmas for another three hundred and fifty thousand dollars minus the 20% fee. Angel accepted the settlement check in her lawyer's office and left the whole mess behind her as she walked out into Daniel's arms.\n\nCh. 49\n\n\"Are you ready for this, baby?\"\n\n\"What's the worst that can happen, Michael? They will love you as much as I do.\" Amber was nervously waiting in the driver's seat as they waited outside the airport for her parents to come out.\n\n\"I can think of a lot of options for the worst thing,\" he said as he tapped on the dashboard of the SUV. \"I thank God your father can't bring firearms on the aircraft. That means only clubs or knives when he finds out I knocked you up.\"\n\n\"I'm sure a highly trained protection agent can defend himself against a sixty-two-year-old healthcare executive,\" she replied. Her eyes lit up. \"Wait! I see them!\" She got out of the car and waved. \"MOM! DAD! OVER HERE!\"\n\nMichael got out of the car and spotted the tall, elegant woman waving back. Her husband trailed behind carrying two bags, and Michael limped a few steps onto the sidewalk to meet them with the aid of a cane. Amber was still holding her mother's hand when they came up. \"Mom, Dad, this is my man, Michael Johnson. Michael, these are my parents, Henry and Lois Burgos.\"\n\n\"It's a pleasure to meet you. Amber's told me so much about you,\" Michael said as he shook Henry's hand. He wasn't lying; Amber had done her best to prepare him to meet her family.\n\nHe reached for Lois with his hand, only for her to come forward and hug him around the neck. \"Thank you for saving my baby from those evil men at the bar,\" she told him before she kissed his cheek.\n\n\"You raised an amazing daughter,\" Michael responded. He helped her father load the luggage in the back as the ladies got in the front seats.\n\nLois turned to look at him as Amber pulled away from the curb. \"How are you healing up, Michael?\"\n\n\"It's getting better every day, Ma'am.\"\n\n\"Lois, please. It must have been bad if Amber had to nurse you these past two weeks.\"\n\n\"It's a good thing she did, Lois. I'm not very patient as a patient. I tried to get up before I was ready and ended up in the hospital again. Between Amber and my sister, they've been watching my every move.\"\n\n\"He's got another week with the cane and physical therapy every other day now,\" Amber added. \"His therapist gave me exercises to do with him three times a day so he can recover his strength and range of motion. The shrapnel really did a number on his ass.\" Amber giggled. \"Literally.\"\n\nMichael could tell already that his challenge would be winning over her Dad, and he wasn't holding back. \"Amber told us what happened in Kazakhstan. You're in a dangerous line of work, aren't you, Michael? What happens the next time?\"\n\n\"Sir, I've been in dangerous jobs since I left college. The Marine Corps with Embassy Protection details, the Diplomatic Security Service with personnel protection, and now with SecuriTech. I do it because I'm good at it, and I can make a difference. People are still alive because I did my job right, sir.\"\n\n\"You got blown up by an RPG!\"\n\n\"I'll heal up, and I'll work again. The good news is that I can make a decent living without having to be gone all the time, and I can be more selective about the jobs I take. I want to spend time with your daughter and my sister, the two most important people in my life.\"\n\nDad changed tactics. \"Isn't she a little young for you to be chasing around?\"\n\n\"I wasn't worried about her age because she's responsible and mature already. I was worried that I was too old for her to be interested in.\"\n\n\"He treats me well, and he loves me, Daddy. Isn't that the kind of person you wanted me to find?\"\n\n\"And I don't remember any hesitation when you found out I was fifteen years younger than you,\" Lois added.\n\n\"That's different, we were older, and I fell in love with you at first sight.\"\n\n\"Exactly,\" Amber said.\n\nHer father knew he wasn't winning this one, so he started talking to Michael about his job and plans. \"You're living with your sister?\"\n\n\"I have been since college. Since our parents died, we never felt the need to live on our own. I share the costs, and she gives me a garage and a room to keep my stuff between tours. I spent more time overseas than at home in the last decade, and I don't have to live in any specific area because of how my job works.\" He explained how SecuriTech worked, with contracts for various locations and durations, with pay rates set accordingly. \"I usually function as the Team Leader, coordinating anywhere between three and twenty other security professionals.\"\n\nLois was impressed by what Michael said; he was no rent-a-cop. \"What happens now that you are injured?\"\n\n\"The company insurance pays me while I'm rehabilitating. When the doctors clear me to return to work, I will.\"\n\nHer father switched topics. \"Amber, have you moved in with him?\"\n\n\"No, Daddy. I still have my apartment by my school. I've been staying with Michael and Amber because he needs my help.\" Michael didn't say anything more since they weren't even engaged yet. \"Once I graduate and find a job, we'll figure out what comes next.\"\n\nAmber was telling them about her school and work, and soon enough, they were pulling into the driveway in front of Angel's condo. Angel walked out to welcome them to her home and took care of getting them settled while Michael did his exercises.\n\nIt didn't take long before her parents were comfortable with Michael and Angel. The next night, Daniel joined the men in the garage to talk about motorcycles while the ladies had a private hot tub night. Amber spent most of it sitting on the edge of the tub with her feet in the water. Her mom noticed things; she was drinking juice instead of wine, wouldn't stay in the tub more than ten minutes, and would put her hand over her lower belly without thinking about it. Lois took a sip of wine after making sure the patio door was closed. \"Amber, how far along are you?\"\n\nAmber's eyes got wide. \"Mom!\"\n\n\"Please, you should know you can't hide anything from me. Now answer the question.\"\n\n\"Seven weeks. We haven't told anyone except Angel and Daniel, but everything is going well, according to my doctor.\" She reached her hand out towards her mother. \"I didn't want to say anything until I was farther along. We didn't exactly plan for this to happen.\"\n\n\"What does Michael think?\"\n\nAmber blushed. \"He's thrilled, thank God. He's so good to me, Mom. He'll be a great Dad to our baby.\"\n\n\"I can see that, baby. Things don't always happen the way we plan, but I see the way he looks at you, and I'm happy for you. Dad won't be so happy.\"\n\n\"I know. I didn't want to tell Daddy over the phone or ruin Thanksgiving dinner, and now you know. We'll tell him before you leave.\" Amber slid into the tub and hugged her mother.\n\n\"Michael and I will make sure she's taken care of,\" Angel said. \"She's family now.\"\n\n\"Thank you,\" Lois said as she stroked Amber's hair.\n\nThe next morning, Angel had help in the kitchen making the turkey dinner with all the trimmings, and when it was time for the prayer, Michael had everyone hold hands. \"Lord, this day is a special one, set aside to recognize Your providence in the lives of our forefathers. It is a day of reflection where we look back on the previous year and see Your hand as it guided, protected, and blessed us all. We have much to be thankful for; your hand saved my life, and you brought new people into our lives to share our futures. We ask you to bless this food and our time together in Jesus' name, Amen.\"\n\n\"Amen.\" People started reaching for the food before Michael stopped them. \"One more thing,\" he said as he slid off his chair and slowly lowered himself onto one knee facing Amber. \"Of all the things in my life I am thankful for, I am glad that I met you. I love you, Amber, and I want to spend the rest of my life with you.\" He held up a two-carat diamond solitaire ring he'd retrieved from a pocket. \"Amber, will you marry me?\"\n\n\"YES!\" She and her mom were crying happy tears as Michael slid the ring onto her finger, then she pulled him into a kiss. Daniel helped him back to his feet as Amber went around to show her parents the ring.\n\n\"Congratulations, baby,\" her Dad told her in the group hug. She didn't know that Michael's parents knew it was coming; he'd asked her father for her hand while the girls were in the hot tub. It took a few minutes for things to settle down before they could eat.\n\nIt was the best Thanksgiving ever.\n\nBlack Friday almost lived up to its name when Amber and Michael told her father that she was pregnant. Henry was worried that they were rushing into marriage because of the baby. Michael quickly dispelled that notion. \"I ordered the ring before she knew she was pregnant, and I originally planned to ask her over Christmas break. The news moved up my schedule, but it didn't change the way I feel about Amber or what I want for our future.\"\n\n\"Is that why you asked us here?\"\n\nMichael nodded. \"In part. I didn't want you to learn the news without seeing how much we love each other. It's not the order I wanted things to happen in, but I did want all these things to happen.\"\n\nHe looked at the two, then at his wife, who wasn't even shocked. \"You knew about this.\"\n\n\"Of course I did. I figured it out during hot tub night because of how she was behaving. A college student wouldn't drink fruit juice instead of wine if she weren't pregnant. They're going to be wonderful parents to our grandchild.\" She wiped away a tear. \"That's why Amber wants to get married after Christmas while her brothers and her family are in town. She wants to get married before it becomes noticeable.\"\n\n\"That's not much time,\" Henry said.\n\n\"Oh, shush. Amber, Angel, and I are taking care of the planning. Your job is to write the check and walk her down the aisle.\" Michael smiled, getting a preview of what his wife and his life would be like in a few decades.\n\nHe liked it.\n\nCh. 50\n\nThings fell into a routine after Amber's parents flew home. Amber and Angel would study for hours every day, Michael worked out for hours each day getting back into shape, and Daniel was busy with his teaching duties.\n\nThere were a few changes. Amber notified her roommates she wasn't returning to the apartment for the spring semester and moved in with Michael. Daniel kept his apartment in Annapolis but was spending every weekend and a couple more nights a week at Angel's place. The weather wasn't always good for riding, but the four got out when they could.\n\nDaniel and Angel were in Philadelphia for the Army-Navy Game the second Saturday of December when Michael got a call from his boss. \"How are you feeling, Michael?\"\n\n\"I'm about fifty percent, Len. I'm working out every day and getting stronger. I should be back at full strength early next year.\"\n\n\"Could you get cleared for work even with restrictions? I'm completely tapped out on people, Michael, and I need your help. I wouldn't ask if I had another choice, but I need a babysitter for a job.\"\n\nIn their line, babysitter usually meant a static protection detail, where the target stayed in one location. It wasn't near as complicated a job as a bodyguard for a client that was out in public. \"I can sit and shoot if needed. What's the situation?\"\n\n\"We've got a client who has a valid death threat against him. We've got four men on the job, working 12-hour shifts, one inside and one outside his home. The client is completely isolated, so the inside guy watches him while the outside guy watches for threats. One of the men on the night shift, his wife went into labor three weeks early, and he's gone. I've got the three guys juggling the schedule, you know...\"\n\n\"But it isn't sustainable.\" With three guys, each would be working eighteen hours a day. \"How long do you need me?\"\n\n\"A week or so, then one of our bigger contracts ends, and I'll have a replacement for you.\"\n\nMichael thought about it. \"I'd need my doctor's permission, and if I go back to work, the disability payments end.\" The SecuriTech insurance considered his injuries work-related and paid his salary as long as he couldn't return to work.\n\n\"See the doctor today, and I'll put you back on payroll and pay hazard rate for your time.\" That was another five hundred a week. \"I'll send the jet to pick you up as soon as I hear the Doc gives you clearance. I'm begging you, Michael. I'm desperate here.\"\n\nMichael owed Len more than this, and he mentally agreed. Now he just had to convince Amber and his doctor. \"Who's the client and where?\"\n\n\"Henry McKnight, he's holed up in a rural home outside of Chattanooga.\"\n\nMichael was shocked. \"Jesus, Len. You're protecting one of the Monster Hunter's targets?\"\n\n\"For fifteen thousand dollars a week, I'll protect the devil himself. This job is much easier than watching a client under threat from the mob or a gang, Michael. There's only one guy to worry about, and he wants him dead in a particular way. Two guys are plenty for this job, and you can call the cops if there is suspicious activity.\"\n\n\"I'm sure they'll be breaking the speed limit to save THIS asshole,\" Michael replied. \"Fuck it, you took the contract, and it's not like I have to like the guy. I'll call you as soon as I know.\"\n\n\"Thanks, Michael. I owe you.\"\n\nAmber wasn't thrilled but knew he needed to get back to work soon. He promised he'd behave himself and keep up with his exercises while he was gone.\n\nMichael had the number for his doctor's service, and twenty minutes later, the surgeon called him back. He'd had a post-op visit the day before, so he didn't need to be seen again. After explaining what he needed, the doctor emailed him a return-to-work authorization with restrictions. Michael forwarded it to Len and called him back. \"I can't have prolonged sitting, deep squats, or running, but other than that, I'm good,\" he told his boss.\n\n\"Pack your bags, Michael. I dispatched the jet as soon as you hung up. The gear you need is already on scene.\"\n\nMichael only needed a few minutes to pack for a week. Since he was flying private aviation, he donned his shoulder holster for his Glock 19, with the pistol under his left armpit and three extra magazines plus a knife under his right. Michael dressed comfortably for the trip; jeans, boots, a light blue long-sleeve dress shirt, and a light jacket. Amber drove him to the airport, and they kissed for a long time before he walked away.\n\nMichael settled into the leather seat as the copilot closed up the aircraft. He sent a text to Angel while waiting for them to start taxiing. \"On a job for a week, protection detail for McKnight in Chatanooga. Have fun at the game.\"\n\nThe response didn't take long. \"The FBI will be watching him too. We talked about this, Michael. You don't need to do this job.\"\n\n\"I know, but Len needed my help, and I'm bored. I'll keep him safe, and I won't exert myself. I promise I'll be the perfect babysitter.\"\n\nHe smiled as he thought about what Angel must be thinking. Not only was the fox guarding the henhouse, but he was getting a lot of money for the job. \"Fine. Remember what I said.\"\n\n\"Noted. Beat Army!\" Any more responses would have to wait. Michael put his phone on airplane mode for the takeoff.\n\nThe flight took about ninety minutes, and a driver was waiting to take him to the house. After getting the call at nine in the morning on Saturday, he arrived just before five at the client's home. The police department had a squad parked at the end of the driveway to keep the press and the crazies away; Michael showed his SecuriTech identification and was allowed them past.\n\n\"Thanks for coming, Michael,\" Terry said as he got out. Terry was one of the three men left on the job. \"Leave the bag there, and I'll give you a quick tour outside while it's still nice and light.\"\n\nThe property had two acres along a dirt road. The other homes were all on 1-acre lots, and there was state forest land running along the back property lines. Trees and shrubs shielded the property from his neighbors. \"Pretty tough to set a perimeter,\" Michael said as they walked along the back.\n\n\"Yeah, it's between ten and twenty yards from cover to the house. We've added to the security with a surveillance package.\" He pointed to the wifi-enabled cameras attached under the roof eaves. \"Infrared plus motion detection, all connected to the computer inside. We've added alarms at all the entry points.\"\n\n\"Communications?\"\n\n\"Radios with earpieces. It's a pretty sweet gig, as long as the weather doesn't suck. We've been doing two in, two out.\" We got back out front, and he continued his patrols while I went inside and turned over with Reggie. He was thrilled Michael was here, as now the two would be able to head to the hotel and get a decent night's sleep.\n\nTonya arrived just before six, bringing takeout barbecue with her. She usually worked celebrity protection details, so this job had to suck in comparison. The five-ten African-American was a former Secret Service agent and respected in the company. \"Thank God you're here,\" she said as she came in and set the bags down. \"Those two guys whine like little bitches when they miss their beauty sleep.\"\n\n\"All the sleep in the world won't fix your ugly ass, Tonya,\" Reggie joked.\n\n\"Bitch, please. I take dumps better looking than you.\" Reggie wisely turned back to the security cameras.\n\n\"I've had a turnover on both stations, so which do you want to start with?\"\n\n\"I ate on the way here, so I'll take outside first. Take Henry his food; it's in the bag on the left. Anything leftover put in the fridge.\" She handed him a hotel room card. \"Room 428, the company has it for the next two weeks.\" He watched her as she walked back to the door. \"It's good to see you back on the job, Michael. I saw the video from Kazakhstan. You were damn lucky to survive.\"",
        "\"My ass doesn't feel lucky, but thanks.\" She left, and Michael turned to Reggie. \"Where's our client?\"\n\n\"End of the hall on the right.\"\n\n\"Back in a minute.\" Michael grabbed Henry's bag and walked to the end of the hall, knocking on the door.\n\n\"Who is it?\"\n\n\"Michael Johnson. I'm the replacement nightshift guy.\"\n\n\"Slide your identification under the door.\" Michael took it out of his wallet and did so, and a few seconds later, the door unlocked with a half-dozen clicks and thunks. Henry McKnight was almost seventy years old, with a weathered face and receding gray hair. He handed him back his identification and took the bag. \"Thanks.\"\n\nIn the short time that the door was open, Michael took his measure of the man. He'd turned his bedroom into a bunker. He'd boarded over the windows with plywood, added a half-dozen locks to the door, and moved his computer and television inside. Michael listened as all the locks reset, then returned to the kitchen table where the security computer was. \"Is he always in there?\"\n\n\"I've never seen him leave the room,\" Reggie said. \"Any questions?\"\n\n\"Nope. See you in the morning.\" Michael told him. He attached his custom-fit earpiece to the radio tube and flipped through the screens, watching Reggie and Terry get in a car and head to the hotel. \"Tonya, radio check.\"\n\n\"Check sat.\"\n\n\"Roger that.\" Michael went back to watching the screens as he ate the pulled pork sandwich and potato wedges she'd brought. He wanted the Monster Hunter to get this guy, but he had to do it in a way that suspicion didn't fall onto him or his company.\n\nIt wasn't going to be easy.\n\nMichael completed four days of the protection detail assignment, mulling over ideas for how he could accomplish his goals.\n\nHenry McKnight was the only man on the Monster Hunter's list of five men still alive and free. That couldn't continue, or people might think he'd stopped. No, Henry had to either die or confess, and he needed to do it soon.\n\nIt had to happen indirectly, though. Michael's assignment to the detail would raise eyebrows with the FBI if McKnight ended up as a Monster Hunter victim. Even if he ignored Angel's warnings to stop, it was too dangerous to abduct and torture this man as he deserved. It couldn't happen while he was around at all. It needed to happen in a way that didn't lead back to him.\n\nThe protection was costing a lot of money, and Michael had no idea how long he could pay for it. SecuriTech was neutral on this; he paid for protection, and the company provided it. If Henry died an hour after they packed up and left, that wasn't their problem. If he reduced the detail from four to two people, he could hold out even longer.\n\nThe solution came to him as he delivered dinner to him the fourth night. Henry was deteriorating by the day; losing weight, not sleeping well, and his paranoia was getting stronger. It didn't help when he watched the news showing him hiding behind security or when Vegas was taking odds on his fate. The oddsmakers had him lasting three more weeks.\n\nIf Michael could shatter his sense of security in his home, he'd break.\n\nThe next morning, he got six hours of sleep, then got up and walked down the road to the old mall. There was a thrift store there, and he bought an electronic voice recorder with a 24-hour recording limit for five dollars, paying cash. Michael played with it as he walked to Wal-Mart to pick up a few things. It was pretty basic; recording with one button, playback with another, and volume controls.\n\nHe set the microphone sensitivity as low as possible, started it recording, and put it inside the extra blankets and sheets in his closet. When he returned the next morning, he backed up to see if it had recorded anything. Even at a loud volume, the sounds were barely noticeable. He continued recording nothing while he slept, getting a total of almost 20 hours of nothing before he paused it again.\n\nHe ate his breakfast while he composed the message on the computer. Part of the text he typed, the rest he copied from a website. When it was the way he wanted, he used the program's Text-to-Talk feature to read it into the voice recorder. When he finished, Michael hit stop and verified the file length before backspacing to erase the file. After making sure nothing got saved to his computer and clearing his browser history, he closed it down.\n\nTaking out his bag of supplies from the Wal-Mart run earlier, he retrieved a pair of vinyl gloves and put them on. He wiped the gloves with hand sanitizer, then used a Kleenex soaked in the gel to clean the voice recorder. After wiping it dry with another Kleenex, he withdrew a ziplock back from the box and put the voice recorder inside. He then cleaned off the small tube of epoxy paste, putting it inside the ziplock along with a disposable Tyvek painting suit, a facemask, and two extra pairs of gloves. He stuffed the bag in his jacket pocket and walked downstairs to meet Tonya.\n\nThey stopped for Chinese takeout and sub sandwiches on the way out, paying for it all with a company credit card. \"Ready for you last night?\"\n\n\"Ready to get back home,\" Michael replied. \"My fiance' misses me.\"\n\n\"When are you getting married?\"\n\n\"December 26<sup>th</sup>, at her parent's home in Montreal.\"\n\n\"That's fast. Is there a shotgun involved?\" Michael just looked out the window. \"Doesn't matter. When you find that special one, you have to grab her and hold on, Michael. Our life isn't an easy one when you have a family.\"\n\n\"It's not an easy one when you don't.\" They talked about what he knew about the wedding plans, which wasn't much, on the way to work. Michael had the first outside shift, and he verified his plan in the daylight as he walked around.\n\nOn his last outside shift of the night, Michael stopped in a blind spot of the cameras and took out the bag. He donned gloves first, then pulled the Tyvek suit over his clothes, finishing with the mask and hood. The home had a crawlspace, and latticework was covering it. Michael had loosened one end of the panel earlier. Moving it aside, he quietly crawled under the home until he was directly below the master bedroom.\n\nHe calculated the time delay on the player would put this at ten that night when Henry watched the news. He picked out a spot between the joists near the chair he sat on and pulled the insulation back. Michael removed the voice recorder from the bag and hit play, then attacked the recorder flush to the subfloor using the epoxy. He moved the insulation back, pocketed the bag, and backed out again.\n\nAs soon as the lattice was back in place, he stripped off the Tyvek and placed the suit, mask, and epoxy back inside along with the gloves. He checked his watch to see the whole evolution had taken him four minutes. Continuing his patrol, he waited for his relief to arrive. When they did, he said his goodbyes, and Tonya drove him to the airport. \"Good luck, Michael. It was good working with you again,\" Tonya told him as he got out.\n\n\"Same to you.\" He walked into the terminal, tossing the bag of supplies into a trash can on the way to catch his flight.\n\nThat night, Henry was eating popcorn and watching the news when a computer-generated voice said his name. \"Henry. Henry McKnight. You've been a bad boy.\" Henry looked around, trying to figure out where the sound was coming from. It seemed to be everywhere, yet nowhere. \"I warned you, Henry. I gave you thirty days to confess, and you defied the Monster Hunter. I'm not mad; I'm looking forward to seeing you soon.\" By now, Henry was in a panic, racing around his room and not finding anything. \"I've got your torture ready. Have you ever heard of the Judas Cradle?\"\n\nHenry was starting to cry now. The disembodied voice continued. \"I'll tie your legs together, and then I'll tie your arms to the ceiling. I have a pyramid-shaped seat for you to sit on; since you liked fucking your victims in the ass, guess where the point goes? You can't take your weight off it, and every move forces it deeper inside until it tears you apart. You'll suffer for DAYS, Henry, and I'll enjoy every scream you make. I'm coming for you. I'm coming soon.\"\n\nThe recording ended, and Henry completely lost it. \"He's not going to get me. He's not going to get me.\" Retrieving his pistol from his bedside table, he put the barrel in his mouth and pulled the trigger.\n\nMichael was relaxing in bed with Amber when Angel knocked on the door after midnight. \"Michael, are you guys awake?\"\n\n\"Come in.\" She opened the door to the smell of sex in the room. \"You guys haven't come out in hours.\"\n\nMichael rolled his eyes. \"Everything I need now is in my bed. What's going on?\"\n\n\"Henry McKnight. He committed suicide; they're reporting it on the news.\"\n\nMichael took a moment to process it. \"That's one less out there, I guess.\"\n\n\"I know. I almost wish the Monster Hunter would release a NEW list since the last one worked so well. Anyway, sorry I disturbed you, but since you just left that place, I thought you should know.\" Angel closed the door and left them to think.\n\nMichael turned off the light and pulled Amber close, kissing her hair as she tucked her face on his shoulder. She was his life now, and he'd do anything to protect her.\n\nOr not do anything.\n\nThe Monster Hunter was dead, but his legend lives on.\n\n \n"
    ],
    "authorname": "partwolf",
    "tags": [
        "fbi",
        "love",
        "mystery",
        "revenge"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-monster-hunter-ch-41-50"
}