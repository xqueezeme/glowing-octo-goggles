{
    "title": "Every Christmas Needs a Virgin",
    "pages": [
        "I've always thought it a cruel joke that, at the time of day when your temper is most uncertain and you really, really need the boost only caffeine and sugar can provide, you have to stand in the kind of line that makes a glacier look like Usain Bolt. Shifting my weight from foot to foot and trying not to breathe the same air as the sneezer two people back, I looked around the caf\u00e9, wondering just where the hell Blake was. The fragrances of coffee, chocolate and pastries teased at my senses, enticing me even though I didn't even like coffee, and made the wait seem even longer. \n\nI had almost reached the counter when Blake burst in, full of apologies and charm. As he kissed my cheek, his freezing nose against my skin made me giggle and almost forget my annoyance with his tardiness.\n\n\"Sorry I'm late,\" he said, unbuttoning his coat in the warmth of the shop and turning to the barista as we stepped up to the counter. \"One large coffee, cream, sugar, foam, and one large hot chocolate with whipped cream and an almond shot for the lady.\" He dug into his pocket and whipped out his wallet before I could open my purse. \"It's on me,\" he said, smiling and handing her his credit card. \n\nKnowing that smile all too well, I tensed, realizing he was about to ask me to do something I probably wouldn't want to do. The barista shouted our order to the guy in the back, handed Blake a number to place on our table, and pointedly looked at the next customer in line. Turning, we spotted two people rising from a table in the back. Blake made a dash for it, narrowly beating two men already encumbered with mugs of coffee, and dropped into one of the chairs a bare second after its previous occupant stood up. Smiling in triumph, he beckoned me over as the men attempted to assassinate him with their eyes. \n\nFirst rule of the coffee shop: Travel light. Second rule: Show no mercy. \n\nFive minutes later, we were warming our hands on the hot mugs and bringing each other up to date on our lives. As usual, my old friend's update was far funnier and more dramatic than my tale of dating drudgery, and I leaned back in my chair, sipping my drink and enjoying the entertainment.\n\n\"So I told him that despite what he might have heard, I was not a whore and he could just put his clothes right back on and get out of my house!\" He ran his hands through his hair. \"He wasn't even nominally hot!\"\n\n\"Where do you find these guys?\" I asked, amused and curious.\n\n\"Everywhere,\" he sighed. \"I'm a jerk magnet.\"\n\n\"You're something, that's for sure.\"\n\n\"I really would like to meet a nice guy,\" he mused. \"Smart and funny, employed, not too tall, dark hair and eyes, knows when to be a gentleman, knows when not to be a gentleman.\"\n\n\"The whole package, then.\"\n\n\"A nice package would be good too,\" he replied, a dreamy look in his eyes. \"A nice, plump dick that he knows just what to do with...\"\n\nThe two older women at the next table glared at us, and I realized the room had quietened enough that pretty much everyone could hear us. Leaning forward, I put a finger on Blake's lips and grinned, rolling my eyes towards the women. Undeterred, he nipped at my finger and I yanked it away from his face.\n\n\"Let them listen,\" he said at a slightly lower volume. \"All I'm saying is the same thing they would say if they weren't 187 years old.\"\n\nI laughed. \"Quit being such a bitch. This is a respectable establishment!\"\n\nThe women rose to leave, pulling their coats around them in a huffy sort of way. Blake ignored them.\n\n\"Enough about my pitiful excuse for a life,\" he said. \"There's something I want to talk to you about.\"\n\nHere it comes, I thought. \n\nHe cleared his throat, suddenly nervous. \"It's like this. I have this friend, Sean Sullivan. He's about 10 years older than us, and he has a nephew.\"\n\nI nodded. \"And?\"\n\n\"He needs a friend.\"\n\nI sat back in my seat. \"Sean, or his nephew?\"\n\n\"His nephew, of course. Sean has plenty of friends.\"\n\n\"OK. What does that have to do with me?\"\n\nBlake sighed and started running a finger around the rim of the cup. \"It's not easy to explain. The nephew -- his name is Declan, and he's a real sweetheart -- well, he's had a difficult life.\"\n\n\"Difficult, how?\" I asked, feeling a hard-luck story coming on. I'm a sucker for those, and Blake knows it.\n\n\"His father's kind of crazy -- the conspiracy theory kind of nuts, not clinical psychosis or religious fanaticism, as far as I know -- and he raised Dec basically by himself after his wife left him. He home-schooled Declan and taught him survival skills and all that...\"\n\n\"How old is this kid?\" I interrupted.\n\n\"He's not a kid. He just turned 21.\"\n\n\"Oh.\" I sat back. \"All righty, then.\"\n\n\"I know this sounds like the plot of \"Son of Unabomber\" or something, but it's real. Sean's brother was a lot older and he got involved with this weird crowd back in the '90s after Waco and Oklahoma City. They all decided to live off the grid, but it didn't work out because they kept fighting, and -- like that.\"\n\nStill mystified, I gestured for him to keep talking.\n\n\"Long story short, Sean's brother died about year ago and that's when Sean learned about Declan.\"\n\n\"He didn't know he had a nephew?\"\n\n\"The brother cut all ties years ago, and his ex made a clean break when she left -- no communication with anyone in the family. Dec was just a kid when she legged it. But, no, Sean didn't know about any of this. No one knew.\"\n\n\"Then how did Declan find the family? Or did they find him?\"\n\nBlake leaned forward, steepling his fingers as he spoke. \"That's the weird thing. It was pure luck.\"\n\n\"How so?\"\n\n\"After his father died, Declan decided to sell the house and land and try college. He's very smart -- probably genius level. He contacted a real estate agent and they got to talking about why he was selling, and the agent asked Declan what he knew about his family, which was basically next to nothing. Well, it turned out that the agent he listed the house with is a friend of Sean's -- and it also turns out there's a distinct family resemblance. Besides the last name, I mean.\"\n\n\"So the agent put two and two together?\"\n\n\"Yeah. Anyway, long story short...\"\n\n\"It's no longer short, darling.\"\n\nHe grimaced. \"Bite me. Some stories take a while.\"\n\n\"Especially yours.\"\n\nBlake shot me a look. \"You're only making it longer.\"\n\n\"That's right, blame the victim.\" I shifted on my chair. The caf\u00e9's hot chocolate tasted divine, but the devil himself must have designed the punitive wooden seats. \"Go on.\"\n\n\"So, long story longer, they had a family reunion. Sean liked the kid enough that he invited him to move in with them while he figured things out and went to community college. That's when they found out about his social skills.\"\n\n\"Social skills?\" I asked, puzzled at this unexpected twist. \"What social skills?\"\n\n\"Exactly. He really didn't have any, because dad apparently never saw any need to teach him any. So Sean and Patty, and me to an extent, have spent the last year teaching a 20-year-old man how to live in civilization. Everything: table manners, how to manage a bank account, how to live with other people and not get on their nerves, how to have an enjoyable conversation.\"\n\n\"Very Jungle Book, or maybe Greystoke, the Legend of Tarzan.\"\n\n\"Honestly, more like Young Frankenstein, some days.\"\n\n\"I take it we're getting to the part where I come in.\"\n\nBlake's blue eyes glinted. \"You're very perceptive. And smart.\"\n\n\"Quit buttering me up and get on with it.\"\n\n\"Well, the other piece of the puzzle is that Dec's father never saw fit to invite kids Dec's age over, so he doesn't seem to know how to relate to people his own age.\"\n\n\"That's terrible! Kids need friends.\"\n\n\"Yeah, well, everyone but Declan's father knows that. The long and short of it is, Dec doesn't have any friends. He needs one. Sean and Patty tried inviting over families with kids near Dec's age, but he always gravitated to the parents. So we were brainstorming, and your name came up, and I was wondering if you'd be willing to meet with him.\"\n\n\"Why me?\"\n\nBlake smiled, but I saw no sign of the charming shark he could sometimes be.\n\n\"Why not? You're extremely intelligent and you're interesting. You're old enough for him to be comfortable with, and hopefully not to immediately think of how to get you naked. But you're young enough for him to maybe want to impress you.\"\n\n\"Since when is thirty no longer fuckable?\" It was kind of a sore spot with me since my last birthday. \n\n\"I didn't say you weren't fuckable.\" He sighed, a trifle dramatically, and I gave him a look. \"God knows I'd fuck you if you weren't so female.\" He nodded towards my ample chest, and I did a mini shimmy suitable for caf\u00e9s and the judgmental old ladies who frequent them. He rolled his eyes. \"But to an inexperienced twenty-one year old, you might as well be ninety-four, and a nun.\"\n\n\"Speaking of social skills, you might consider acquiring some yourself.\" \n\nHe grinned. \"Don't be silly. I'm that pearl beyond price for you: your one friend who will say exactly what's on his mind and never bullshit you when it matters. You need me.\"\n\nShrugging, I conceded the point. Everyone needs a friend who's utterly honest, even if they exasperate the hell out of you most days.\n\n\"Does the kid know about me?\"\n\n\"Declan,\" and Blake stressed the name, \"doesn't know a thing about this conversation. I didn't know how you'd react, and Sean didn't want to get his hopes up.\"\n\nReflecting on it all, I nodded. It sounded kind of crazy, but I know better than most that truth is stranger than fiction. If Declan needed a friend, I'd at least give it a try.\n\n\"I'm in.\"\n\nBlake nodded. \"I'll tell Sean.\" He pulled out his phone and stabbed at it with two fingers, presumably sending a text. \n\nI rifled through my purse for my own phone, needing to check my work messages. I'd been out of touch for at least an hour. Finding it, I typed in the security code and seven new emails popped up. Only one concerned a case of mine, though, and it could wait until I got back. I devoted Friday afternoons, usually slow, to catching up on paperwork and occasionally fantasizing about some of the cute cops and lawyers I saw during the week. \n\n\"Sean wants to know if you want to come by tonight for dinner and maybe some card or board games.\" Noting my sudden smile, he snorted lightly. \"I'll tell him yes. Does six thirty work for you?\"\n\n\"Sure.\" As he typed, I watched his bent head, noting the new silver hairs sparkling among the brown. At this rate, he'd be totally gray by thirty-five, I thought. \n\n\"Why are you looking at me like you're Dian Fossey and I'm a lesser primate?\" he asked, not looking up.\n\n\"Oh, you're definitely not a lesser primate,\" I assured him. \"You're a full-on silverback gorilla!\"\n\n\"Yeah, well, this gorilla needs a big ripe banana and he's not finding one here,\" Blake snapped, rising from his chair and reaching for his coat. \"Let's get going. I'll send you Sean's address.\"\n\nI arrived at six thirty-five, parking on the street and shivering in the unseasonably cold wind. Normally, it doesn't snow in this part of the world until late December, but here it was, a full month till Christmas, and it felt like a blizzard could start any minute. Clutching the bottle of wine I'd picked up on the way, I trotted to the front door and rang the bell.\n\nA short, round woman opened the door wide to let me in. \"You must be Angela. Come in before we both freeze!\"\n\nGiggling, I darted in as she shut the door behind me and handed her the wine. \"You're my kind of guest, chica! Here, let me take your coat.\"\n\nShe seemed to have about four arms, holding the wine, hanging up my coat, pointing out the bathroom and gesturing me towards the kitchen all at once. I liked her right away, feeling welcome and easy with her.\n\n\"Sean! Dec! Blake! Angela's here!\"\n\nFootsteps thudded from the back of the house and two dark heads popped into view at the door to the kitchen. I could see why the real estate agent had recognized Declan as Sean's kin. Not only did he share his uncle's height and broad-shouldered frame, they had the same cheekbones and dimples when they smiled, which they both did quite a bit. Absently, I noted the Declan's blue eyes were set farther apart than his uncle's brown ones, and his mouth and jawline differed as well, but really, they could have been father and son. \n\nI bit my lip. Both were exactly my type.\n\nBlake ducked between them and waved. \n\n\"Come on in,\" he said. \"Let me introduce you.\"\n\n\"Oh, Blake,\" Patty laughed, \"just like you to try to take over. Angela and I are already friends.\"\n\n\"You know each other?\"\n\nPatty shrugged. \"We do now. I learned everything I needed to know about her when she gave me a nice bottle of wine before she even unzipped her coat.\" She looked over at me and winked. I winked back, relaxing and looking forward to the rest of the evening. \"Anyway, Sean and Declan, this is Angela.\"\n\nThe two men looked at each other, then back at Patty.\n\n\"We know, Tia Patty,\" Declan said in a pleasant baritone voice. He stepped forward, hand outstretched for mine. \"It's nice to meet you, Angela.\"\n\n\"It's my pleasure.\" He had a nice grip, friendly and firm without edging into bone-crusher territory, and I regretted having to let go of it. Mentally, I gave high marks to whoever had taught him so well, then leaned forward to shake Sean's hand too. It felt as warm and friendly as Declan's.\n\n\"Great to finally meetcha,\" he said. \"I've heard about you over the years, you know. Weird that we've never met till now, but better late than never, eh?\"\n\n\"Absolutely. Thanks so much for inviting me.\"\n\n\"Let's get into the kitchen and open this bottle.\" Patty shooed us all forward and we obeyed her like trained chickens, happily following the fragrances of peppers and garlic and fresh bread. \n\nSettling in the large eating area so we could talk to Patty as she finished cooking dinner, I admired the playful room, painted in vibrant shades of orange, blue and white. The art prints on the walls provided even more color, while the black table and chairs anchored the whole thing. From somewhere, Spanish guitar music played, and I smiled. \n\n\"It's loud, just like me,\" Patty said with a laugh after I complimented her design. \n\n\"It's warm and friendly, just like you,\" I replied. Patty looked pleased. \"Very cheerful. It makes me happy, this space.\"\n\nPatty's eyes met mine. \"It's my Mexican heritage. Being in this room, creating good things to eat, sharing some chisme with my friends, it makes me feel connected with my mother and abuelas and tias.\"\n\n\"That's important. We all need connections. Life's lonely without them.\"\n\nPatty's gaze shifted for a moment to Declan, then returned to me. \"Very true,\" she said thoughtfully. \"Sean, pour Angela a glass of wine, will you please?\"\n\nOver our wine, my hosts genially interrogated me, asking about my job and family. I had expected as much, and answered casually that I worked as a court-appointed advocate for children, that I enjoyed my work even though serious abuse cases could drain me, and that yes, I had thought about law school but hadn't taken the plunge because of the time and expense. All three asked about the finer points of my job and why I did it, and honestly, if Blake hadn't told me Declan was practically feral a year before, I never would have guessed.\n\nAs we spoke, I watched Declan look at his uncle and aunt, then at me, mental wheels spinning at 150 miles an hour, almost visibly learning. His smiles when our eyes met seemed genuine, though, and I realized Blake hadn't conveyed Declan's charisma. I had come over expecting to find a charity case. Instead, I found a delightful young man, keen to talk to me and learn all about me.\n\n\"Dinner's almost ready,\" Patty announced. \"Dishes are by the sink.\" We all rose and trooped over, eager to try the spicy-smelling soup and fresh bread. Declan somehow wound up behind me and fetched me a bowl, presenting it with a flourish.\n\n\"For you, my lady.\" He bowed, making me laugh. Behind us, Blake watched this performance, an unreadable expression on his face. \n\n\"Gracias, kind sir.\" \n\n\"Tu hables espa\u00f1ol?\" Declan and Patty asked together, and I laughed again.\n\n\"Poquito. Only a little. Some of the kids I help have Spanish as their first language, and it's easier for all of us if I can speak directly to them. I still have to use an interpreter for the technical stuff, though.\"\n\n\"Tambien hablo espa\u00f1ol,\" Declan said. \"My dad was big on languages. I learned Spanish and Chinese, and was starting Arabic when he died.\" Tears filled his eyes and he suddenly looked very young. I put a hand on his arm. Startled, he looked down at it, then back into my eyes, and I took my hand away.\n\n\"I'm sorry for your loss.\"\n\nHe gazed back at the floor. \"Thank you.\"\n\n\"It all smells delicious,\" Blake announced, stepping around us. \"Patty, you make the best soup. I can't wait to dig in. Angela, you're going to love it.\"\n\n\"It does smell heavenly,\" I agreed, appreciating his attempt to bridge the awkward moment.\n\nA minute or two later, we all sat at the table and held hands as Patty said a quick grace. Declan had managed to sit next to me, and again, his hand felt warm and welcoming. He gave my hand a little squeeze before releasing it, and an unexpected flutter in my belly -- and tingle lower down -- made me cross my legs.\n\nAngela, I told myself sternly, stop it. You can't have him. You're here to be his friend, not his lover. \n\nThanks to Declan, I never lacked for food, drinks or conversation throughout the simple meal. \n\n\"You're an excellent host,\" I told him as he delivered my second bowl of soup. \n\nHe beamed. \"It's easy to be nice to you.\" \n\nPatty's eyes shone as she watched her nephew outdo himself, and I couldn't blame her. Clearly the force behind Declan's transformation, she had earned the right to feel proud of him. As we finished the meal, he gathered our bowls and plates and took them away.\n\n\"How was your Thanksgiving?\" Patty asked me.\n\n\"Oh, pretty quiet. I'm an only child, so it was just me and my parents.\"\n\n\"How'd your mother ruin it this year?\" Blake asked, eyes twinkling. \n\n\"You'll never let that go, will you?\"\n\n\"Let what go?\" Declan said. \n\n\"When we were in college, Angela invited me to join her family for Thanksgiving, and I accepted, figuring for some reason that her mom had to be a great cook.\"\n\n\"And?\" Sean prompted him.\n\n\"It was by far the worst meal I'd ever had in my life. The potatoes had hard little indigestible lumps in them, the turkey was practically raw inside, the rolls were stale, and I still don't know how she managed to screw up green bean casserole, but she did.\"\n\nWe all chuckled, and I felt my face get hot.\n\n\"At least it was traditional,\" I said. \n\n\"Oh, yes -- a traditional Thanksgiving dinner followed by a traditional visit to the urgent care facility for food poisoning! I lost five pounds that day.\"\n\n\"Yuk,\" Declan said, giggling and turning to me. \"Was it really that bad?\"\n\n\"My mother was a terrible cook, and I'm not a whole lot better,\" I admitted. \"That's why a dinner like this one is such a treat for me -- and why I always bring the wine.\" I saluted Patty, who bowed her head graciously. \n\n\"My mom was a good cook,\" Declan said in a small voice, and the table quieted instantly. \n\n\"Was she?\" I asked pleasantly. \"What were your favorite things she made?\"\n\nHe stared at the ceiling. \"She made really good meatloaf. We had that every Monday. But my absolute favorite was her spaghetti. Her grandmother was Italian and gave her the secret recipe. All dad's friends would come over on spaghetti night. That was the best!\"\n\nSean and Patty both regarded him kindly. \"You never mentioned that before,\" Sean said.",
        "\"After she left, dad told me to forget about her. I tried, but I never could. I still dream about her sometimes.\"\n\n\"That's natural,\" I remarked. \"No woman is as important as your mom, especially when you're little.\" \n\n\"I wish I remembered more about her.\" He stood and wandered to the kitchen counter, fiddling with something.\n\n\"I'm sorry we never met her,\" Patty called to him.\n\n\"Me too,\" and he returned with a platter of cinnamon-sugar cookies, the recipe of Patty's great-grandmother.\n\nThe consumption and praise of the dessert took up the next couple of minutes, and Declan regained his equilibrium under his aunt's watchful eye. \n\n\"So how is it that you're single?\" Patty asked as I bit into my fourth cookie. Declan's ears seemed to flap as he waited for my reply, and I barely avoided choking as I hastily chewed and swallowed my bite.\n\n\"Haven't met the right man,\" I replied with a shrug. \"I prefer being alone to being with the wrong person.\"\n\nSean nodded approvingly. \"I wish more people felt like that. Couples get married all the time just so they won't be alone, then they get divorced and wind up alone anyway.\"\n\n\"Are you a minister?\" I asked. \n\nEveryone in the room laughed for nearly a minute at that. \"No, I'm a builder,\" Sean finally answered, chortling and wiping his eyes, \"but I see a lot of couples buy houses hoping that will solve their relationship problems. It doesn't.\"\n\n\"Why would people think a house will solve a relationship problem?\" Declan asked. \n\n\"Because it gives them the illusion of stability. Once you own a home, your life is all settled -- or so people think.\"\n\n\"Why do they think that? Anything can happen,\" and we all heard the tinge of grief in his voice. I wondered whether it was for his mother or his father. Possibly both, I reflected.\n\nPatty regarded him with sympathy. \"Most people don't like to face the hard things. And a lot of times, they don't have to, not for a long time. You got a couple of very tough lessons very young, so your perspective is very different from most people's.\"\n\nShe turned to me. \"Would you agree that's true, Angela?\"\n\n\"That most people prefer not to face things? Absolutely. We see it all the time in family court. Even juries in child abuse cases sometimes acquit because they just don't want to believe a parent could harm a child.\"\n\n\"That's crazy,\" Declan said, his young face serious. \"People should base their opinions on facts, not feelings.\"\n\n\"True enough,\" I replied, stifling an urge to laugh at his naivet\u00e9. \"Good luck getting them to do that, though. Humans are emotional creatures. We base way more of our judgments and decisions on emotions than we want to admit. It's how we're wired.\"\n\n\"Do you do that?\" he asked me.\n\n\"Sure. I once bought a car because I liked the saleswoman. I chose my home because the staircase has a beautiful carved banister that reminds me of my grandmother's house when I was little. I've dated men because they look a certain way. The list goes on.\"\n\nDeclan opened his mouth to speak, but Blake beat him to the punch. \"What a great dinner! Patty, thank you so much.\"\n\n\"You're always welcome at our table,\" she told him. \"Both of you.\" Her smile broadened to include me, and I returned it. \"Now, let's head to the other room. Angela, do you like cards or games better?\"\n\n\"Either one. I love games, period!\"\n\n\"How about Cranium?\" Declan suggested. \"Or Cards Against Humanity?\"\n\n\"I was thinking Trivial Pursuit,\" Sean said.\n\nWe headed into the other room, and I stopped, transfixed. \"This,\" I told Patty,\" is amazing!\"\n\nIt was. The entire room seemed to sparkle with holiday decorations. Icicle ornaments lurking in the branches of an enormous Christmas tree picked up the colored lights and threw them to the room. Glittering boxes covered the floor around the tree, and simple metallic ornaments hung from the ceiling. I'd never seen anything like it.\n\n\"When it comes to Christmas, Patty lets her inner gay man loose,\" Blake said, enjoying my reaction.\n\n\"It's the only holiday I decorate for,\" Patty said. \"So I totally overdo it.\"\n\n\"Excuse me?\" Sean cut in. \"Who spent two hours on a ladder, hanging all those ornaments from the ceiling?\" \n\nThrowing an arm around his waist, Patty laughed. \"I had the artistic vision. You just executed it.\" \n\n\"A spectacular team effort.\" I picked out a corner spot on the overstuffed sectional and set my glass down on the table in front of it. Declan plopped down next to me.\n\n\"Is it OK if I sit next to you again? I know we sat together at dinner, but I'm enjoying talking to you.\"\n\nI flicked a glance at Patty, who nodded.\n\n\"Fine with me. You're good company.\"\n\nI patted his thigh in what I hoped was an appropriately aunt-like way and he beamed at me.\n\n\"I wish...\" he began, and stopped.\n\n\"You wish what?\"\n\n\"I wish I had waited a year to start college.\"\n\n\"Why's that?\"\n\n\"I didn't know very much about how to make friends when I started, and I got off on the wrong foot. Now everyone thinks I'm weird and I don't know how to fix that.\"\n\n\"You don't seem weird to me.\"\n\nHe looked down at his hands. \"You're easy to talk to. Plus, Tia Patty has been working hard all year to teach me how to get along with people. I feel like I could do better now, but it's too late.\"\n\n\"That'll be easy enough to fix when you transfer to a four-year college,\" Sean broke in. \"Fresh start, and new opportunities to get it right. You'll do great.\"\n\n\"That doesn't help me now,\" Declan said mournfully. \"I'm a friendless wonder.\"\n\n\"I'm your friend,\" Blake replied.\n\n\"Me too,\" I added. \"Even if we're too old for you.\"\n\nHe looked at me. \"I don't think you're too old for me,\" he said softly, then whirled back to the table as Patty set up the board for the game.\n\nTwo hours and a lot of laughs later, I stood up and stretched. \"I've had a marvelous time, but I need to get home. I'm working out at the pool in the morning and I need some sleep.\"\n\n\"You're a swimmer?\" Patty asked.\n\nI nodded. \"That, and water walking and running. It's too cold to exercise outside right now.\"\n\n\"I wish I could swim,\" Dec said. \"Dad never let me go to the pool.\"\n\n\"Why don't you join me? I can give you a lesson.\"\n\nHis eyes shone. \"Would you really? I'd love that!\" He stood up and I had to resist an impulse to embrace him. \n\n\"The only thing is, you'll need a suit. I'm guessing you don't have one?\"\n\nDisappointed, he shook his head.\n\n\"I have a pair of trunks that are too tight for me anymore, but they'd fit you,\" Sean said. \"They're yours if you want them.\"\n\n\"Perfect. Thanks, Uncle Sean!\"\n\nSean looked from his nephew's shining face to me and smiled, clearly considering Operation Friend a major success. Blake also glanced at the two of us, but kept his thoughts to himself.\n\n\"I'll meet you there tomorrow at 9,\" I said, digging my phone out of my purse, unlocking it and handing it to him. \"Go ahead and put in your cell number and I'll text you the address.\"\n\n \"I can't wait! Thank you.\"\n\nHe eagerly punched in his number and returned the phone to me as we all walked towards the front door. Patty gave me a big hug, then handed me my coat.\n\n\"So glad you came tonight,\" she said as Declan helped me into my things. \"I meant what I said earlier -- you're welcome here anytime.\"\n\nSean lumbered up and hugged me as well. \"Great to meet you, Angie! Come back soon.\"\n\nUncertain of himself, Declan hung back. I opened my arms. \"Your turn.\"\n\nStepping forward, he put his arms around me and pressed me to him. \"Wonderful meeting you,\" he whispered. \n\nTo my surprise, I stood on my tiptoes and kissed his cheek. \"Likewise. Now, get some sleep. You're learning to swim tomorrow!\"\n\nOutside the house, Blake walked me to my car.\n\n\"I was wrong,\" he announced. \n\n\"About what?\"\n\n\"That you're too old for him to want to get you naked. I'd say he has a big, fat crush on you.\"\n\n\"You perv. That's crazy. Nine years is a big gap at this point in his life.\"\n\nHe pursed his lips, thinking. \"For most kids, yes. But... I saw the way he was looking at you. Be careful, Angela. He's vulnerable. Let him down easy.\"\n\n\"I promise not to break his heart,\" I said lightly. \n\nBlake grasped my shoulder and turned me to look at him. \"I mean it. He's a nice kid. He deserves to find a nice girl -- someday. Don't mess that up for him.\"\n\n\"I like him too,\" I replied, dropping all traces of humor. \"He's a nice kid, and after the life he's had, he needs a good friend. That's all I intend to be.\"\n\nI met his gaze, and after a long moment, he nodded. \"OK. I'm glad you came out tonight. The change in him was wonderful to see. Aside from wanting you, he obviously liked you, too. And I thought he did great with the manners.\"\n\n\"Definitely. If you hadn't told me about his past, I never would have known. He was poised and charming -- quite a catch for a lucky girl one of these days.\"\n\nWe hugged briefly, and I drove home, thinking about Declan and telling myself to keep my distance.\n\n**\n\nThe next morning, I spent way too long picking out a swimsuit, especially for a woman committed to keeping her relationship with her student platonic. Nevertheless, I do have my pride and I like to look good. As a dedicated swimmer, I have at least four suits at any given time, mostly for the different types of exercise I do, but also one to impress anyone interesting who might show up. I dithered about it for a good five minutes, then grabbed my newest one-piece suit, put it on and checked my look in the mirror. \n\nA lot of women seem to figure life's over at 30, but I was a late bloomer, and I work hard to keep my body the way I like it. Genetics has given me a nice pair of c-cups and my workouts keep my waist reasonably trim. My curvy hips and substantial butt give me fits sometimes, but I have come to think of it this way: if too much abundance is my main problem, then I have a good life. \n\nStriking a pose, I noted my mop of chestnut-brown curls looked no messier than usual and didn't appear to need washing. Although I usually get a pimple or two just before my period, due in two days, my fair skin looked clear and my green eyes nice and bright. The reds, pinks and blues in the suit's paisley print suited me perfectly. All in all, I thought I'd do. I put on a sweater and yoga pants over my suit, grabbed my coat and gym bag, and headed for the natatorium. \n\nEven though I arrived five minutes early, Declan already awaited me just inside the door. \n\n\"Angela!\"\n\nHe rose and wrapped his arms around me in an unexpected hug, which I returned with enthusiasm. He was just as attractive in the bright sunshine as he had been last night, and my heart skipped a beat when he gave me a piercing sort of glance, as if trying to see my soul. \n\nI picked up my bag and turned towards the door. \"Let's get started. Are you ready for your lesson?\"\n\nHe reached over me to open the door. \"Can't wait, teacher! I'm excited about this. I've always wanted to learn how to swim.\"\n\nWe stopped at the desk to sign him in as a guest, then turned down the hall. \"The men's locker room is down there.\" I pointed at the door where a large man in a too-small suit had just emerged. \"Meet you by the pool in five.\" \n\nI shucked off my clothes, tied back my hair and stepped into my flip-flops in record time, but my hands trembled as I tried to close the lock. Telling myself not to be stupid, I somehow got it locked, then marched out to the pool. Only a lesson, I told myself, opening the glass door to the competition pool. Only a lesson. He's just a kid. He's not for you. Then I caught sight of him, and all of my internal dialogue stopped, just like my feet and my heart. \n\nHe stood there waiting, and beamed as he spotted me. \"Angela!\" he cried, waving one tautly muscled arm to get my attention. \"Over here!\"\n\nMy feet stuttered back into use, and I moved toward him. The morning sun lit him perfectly, capturing his lean strength. I looked down to avoid staring at his face, and instead found myself entranced by his long, straight, lightly furred legs. My eyes traveled up to Sean's faded green and blue trunks, noting how well they fit Declan. Suddenly realizing I was staring at his crotch, I wrenched my gaze upwards, past his narrow waistline, hairless chest and sculpted shoulders. I homed in on his face, willing myself not to come across as some kind of sex-crazed cougar. \n\nHe grinned. \"You look great! Which lane are we in? This one?\" He pointed to the first lane at the shallow end.\n\n\"No, that's reserved for water walkers. The second one's open, and it's shallow enough that I can stand while I put you through your paces. Let's go there.\"\n\nEager to get started, he jumped into the shallow lane and ducked under the rope into the second lane, emerging wet and adorable, like an oversized otter. My legs wobbled and I jumped in behind him, hoping the shock of the cool water would restore my good sense.\n\n\"Let's get started. Why don't you show me anything you know about swimming?\"\n\nObligingly, he pushed off from the side, and did what looked like a parody of a basic freestyle, keeping his face out of the pool, kicking and slapping the water like it had stolen his girlfriend and expending enough energy in 10 short meters to render him breathless. Assessing him as he moved, I realized I had my work cut out for me: he was horrible.\n\nHe splashed towards me, but managed to stop just before impact. \"How was I?\"\n\nI bit my lip. \"We have some work to do.\"\n\n\"I bet. This is the second time in my life I've ever been in a pool. I tried swimming in the lake near our house a few times, but dad caught me and gave me the whipping of my life. I never did it again.\"\n\n\"Why in the world would your father do that? I thought survivalists were all about having fundamental skills to, uh, survive.\"\n\n\"Because of my mom. When she was young, she was a really good swimmer. Like, nationally ranked. In fact, the first time my dad ever saw her was at a public appearance she did after an event. You know, local girl makes good.\"\n\nI waved a hand to encourage him. \"And?\" \n\n\"When she left, she went back to a guy she'd known, another swimmer. After that, dad never wanted to hear that word again. So, no swimming for me. Too much like mom.\" \n\n\"Well, I'm not your dad. I totally support you learning to swim, and I promise not to spank you if you make a few mistakes.\"\n\nHe blushed. \"Uh, OK. What do we do first?\"\n\n\"First, we set some ground rules. One, if I'm going to teach you, I'm going to have to touch you now and then to demonstrate how your stroke should feel and correct your form. Are you OK with that?\"\n\nHis blush deepened, his eyes appearing very blue next to his red skin. \"I'm fine with that. I'm not used to being touched, but I bet I could get used to it in a hurry.\" \n\n\"You may have to, depending on how bad you are,\" I teased. \"Second, it's easy to get overwhelmed in a strange environment. If you feel yourself getting anxious or something, tap me on the shoulder and we'll stop.\" I demonstrated on him, giving his firm shoulder a light slap. \"Got it?\" He nodded.\n\n\"Third, I've never taught a novice to swim. If I don't explain things so that you understand, ask me. It's obvious you're not stupid, and I won't think less of you if you ask. Actually, I'll respect you more.\"\n\nHe nodded again, and just as I had last night, I got a sense of wheels and cogs turning at a very high speed inside that dark, sleek head. \n\n\"OK. Let's start with getting used to putting your face in the water as you exhale.\"\n\nWithin three minutes, he was blowing bubbles like a pro and we moved on to face-down floating.\n\nCompletely immersed in my teaching role by now, I lightly held his fingers as I explained. \"Five seconds, then lift your head and stand. I'll count it out loud for you. It'll feel strange the first time, so don't panic. Grab my hands if you need to. I'm right here.\"\n\nWithout speaking, he leaned forward and put his face in the water. His legs drifted up as I counted, and he stood a second after the count ended. \n\nWater poured off his face. \"How was that?\"\n\n\"Excellent. What a good student you are!\"\n\n\"I have a good teacher.\"\n\nSomehow, we had wound up standing a little too close, and I was once again aware of him as a man rather than as a student. I stepped back. \"Now let's try it on your back.\"\n\nHe looked a little panicked. \"Can we do the facedown version a few more times? I want to make sure I really get it down.\"\n\nI shrugged. \"Sure.\" \n\nWe went through it several more times, and he lasted a little longer each time. I felt a surge of hope. Declan seemed to have a knack for learning new things. \n\n\"Now can we try it on your back?\"\n\n\"Yep. I've got it down now, I think.\"\n\n\"All righty. This time, just lean back and let your feet drift up again. Easy-peasy.\"\n\nEyes closed, he did as I directed, and I slid a hand under his shoulder to keep him on the surface. His lips curved up and he looked utterly content as he floated. There's a theory that we humans all love the water because it reminds us of our months in the womb. I can't speak to that, but I can say that I never feel so alive and beautiful as I do when I get in the pool and feel gravity slip away as the water buoys me.\n\n\"This is just perfect,\" he said, as if reading my thoughts. \"I had no idea.\" His blue eyes opened slowly and he turned his head to look up at me. \"No wonder you love it here.\"\n\n\"Yes.\"\n\n\"I love it too. I could spend all day like this, floating and talking to you.\"\n\nI snorted. \"You don't get to talk much when you're swimming.\"\n\n\"I know. I bet I'm going to love that too, though. But this, what's happening right now, this is special.\" His eyes closed once more, and his arms slowly drifted away from his body as if he wanted to hug the universe and everything in it. \n\nWatching Declan, I couldn't imagine how his mother had left him. I had known him less than a day, and already he had found his way into my heart. How could the woman who had carried him for nine months and seen that little face enchanted by the world have chosen to abandon him?\n\nI sighed and removed my hand, breaking the spell. \"All right, mister. Time for your next skill -- kicking.\"\n\nWe headed to the wall, and within a few minutes, I had him doing a nice rhythmic flutter kick. \n\n\"You are, without a doubt, the easiest person in the world to teach,\" I told him. \"You pick up things like that,\" and I snapped my fingers. \n\n\"I owe it all to my teacher.\"\n\nI gave him a shove. \"Was it your aunt or your uncle who taught you to flirt so well?\"\n\nDroplets of water on his skin sparkled and flashed as he chuckled. \n\n\"Innate talent, of course. You don't think this level of mastery can be taught, do you?\"\n\nI laughed at his mock arrogance and splashed him. \"Not at all -- or your amazing humility.\"\n\nHe splashed me back and suddenly we were both ten years old and having a water fight. Shrieking as he tried to dunk me, I wrapped one arm around his neck and tried to pull him down into the drink. He pivoted and fought back and one hand slipped across my breasts before grabbing my waist. Instinctively, I wrapped my legs around his own waist and did my best to knock him off balance. His strong arms pulled my legs apart as he sought to escape, and a shock coursed through me as the arch of my foot slid along what felt like the erection of the year. Our eyes locked, and my mouth hung wide open with astonishment. Our horseplay stopped abruptly. \n\n\"Sorry,\" he muttered. \"Oh God, I'm sorry. I didn't mean...\"\n\n\"It's all right. You couldn't help it.\"\n\n\"No, but -- you're not mad?\"\n\nI shook my head. \"Why would I be mad? An erection is one of the nicest compliments a man can give a woman, as long as he doesn't try to force it on her.\"\n\nHe inhaled sharply. \"I would never force you!\"\n\nI patted his arm and leaned in to give him a half-hug. \"I know. You're not that sort.\"",
        "Still pale, he stared into my eyes as he placed his arm around my shoulder. \"You're sure you're not mad? Because I don't want anything to make you not like me.\"\n\nSo young, I thought. So earnest. So very lovable. \"Don't worry about that. I like you very much. You're a lovely young man.\"\n\n\"As long as you don't think of me as a child.\"\n\n\"Declan, you're taller and stronger than I am. You're clearly not a little boy.\"\n\n\"Doesn't stop everyone from treating me like one.\"\n\n\"Well, we're all older than you. And you came to your uncle and aunt needing their help with some basic skills. Both those things tend to make people look at what you can't do and haven't experienced, rather than what you can do, and have.\"\n\nHe pulled me closer. \"I'm not a child.\"\n\n\"I know. You're a grown man.\"\n\nFor a few seconds, neither of us said a word. The, his blue eyes huge, he leaned into me. \"Is it OK if I say I want to kiss you?\"\n\n\"It's OK, but it's not a very good idea. I'm supposed to be your friend, no more.\" But I didn't back away.\n\n\"I want you to be my friend, but I still want to kiss you.\"\n\n\"That makes two of us.\"\n\n\"I've never kissed a girl. I don't know what to do.\"\n\nThrowing caution and morals to the wind, I pushed myself up till our faces were level. \"It's easy.\" I pressed my lips to his and gave him a brief, soft kiss. \"See?\"\n\nThe tender smile he gave me reached all the way into my core. I shivered. \n\n\"That felt wonderful. Can I try?\"\n\nIn for a penny... \"I'd like that.\"\n\nCarefully gathering me into his arms, he tilted his head slightly and moved in. This time, he put a little pucker into it, then let his lips relax, as if he were trying to determine the most effective way to kiss me. I kissed back, matching his movements, and my body began to hum with electricity. He opened his lips, and I gently pushed my tongue into his sweet mouth. He stiffened, clearly not expecting this, then relaxed as he discovered the fun of it all. After several seconds of this, he pulled away.\n\n\"I feel like our mouths were made for each other,\" he breathed. \"So soft. So sexy.\" He bent towards me again, and this time, we both stayed relaxed as the slow, easy kisses flowed between us. One hand drifted to my breast, and I moaned as the heel of his hand moved along the curve at its underside.\n\n\"Are you making out or swimming?\" a voice above us demanded, and we broke apart, disoriented. We looked up into the exasperated gaze of an older man I knew slightly from morning swims. \"Oh. It's you. Sorry to nag, hon, but the pool's full and if you're not using the lane, I want to.\"\n\n\"Of course. We were just about to leave.\"\n\n\"Really? From that little moan, I'd have said you were just about to come.\" He winked at me and waddled over to the bench to get his gear. I stared at him in disbelief. In two years of casual acquaintance, he had never said anything remotely like that. \n\n\"You sure have some interesting friends,\" Declan observed, hoisting himself out of the pool and stretching out a hand to help me up. I joined him on the deck as the man returned. \n\nHe held out a pudgy hand to me. \"I'm Mack.\"\n\n\"Angela.\"\n\n\"Nice to finally know your name.\" He winked again. \"And you, young man. Who're you?\"\n\n\"Uh, Declan. Sir.\"\n\nThey shook hands. \"Lemma tell ya, something, Dec. Angie's a good one. Smart and classy. Treat her right, do as she says, and don't let her go.\"\n\n\"Yes, sir. That's my plan.\"\n\nMack eyed me. \"He's a nice kid. Top shelf. Teach him well, and you'll have the perfect servant for the rest of your life.\"\n\nAs we both gaped at him, he jumped in and paddled away.\n\nDeclan stood in one smooth motion, then helped me up, mouth quirking. \"Perfect servant, at your service.\"\n\n\"I can't believe he said all that.\"\n\nDeclan chortled. \"He's hilarious. I'll have to take out a membership here, just for the entertainment.\"\n\nHe held the door for me and we stood dripping in the corridor. \n\n\"I need a shower,\" I decided. \"Let's meet in the lobby in fifteen or twenty.\"\n\n\"Me too. Sounds good.\"\n\nTwo of my favorite features of the shower room are the private stalls and the detachable shower heads. The young moms like using them to clean off their waterlogged kids, the older adults appreciate being able to direct the hot water at places that no longer bend or open easily, and I think we all appreciate not being on display. I turned on the water, shucked off my suit and grabbed the shower head. The water pressure here varies but it always feels awfully good to aim the streams of warm water at my crotch and see how far the pulsing stimulation on my clitoris can take me towards orgasm. Already aroused from my contact with Declan, I thought about the feel of his body against mine -- and found today's water pressure more than enough to take me to the edge and push me over, especially once my fingers got into the act. If Mack could only hear me moan now, I thought with amusement.\n\nBelatedly emerging from the locker room, I found Declan on a bench in the lobby, scrolling though websites on his phone. I sat down beside him. \"Whatcha looking at?\"\n\n\"Oh, just stuff. I still can't believe all the things people post on the internet. My dad would have had a stroke.\"\n\n\"Why?\"\n\n\"Well, you know he was an off-the-grid kinda guy, right?\"\n\n\"Mm-hmm.\"\n\n\"He believed the government was already in everybody's business and it was stupid to make it easier for them. Any time we went to the store, he paid with cash, no matter what we bought. He didn't use shopper reward cards -- said that was just another way for Big Brother to track us. He refused to do anything online if he could help it. No banking, no shopping, no email, no smartphones, and no social media. He thought social media was a plot to enslave us all.\"\n\nStaring at the ceiling, I considered this. \"Well, there's something to that. I spend way too much time on social media. It's addictive. And people are always getting hacked or getting their data stolen. Maybe we really are just opening ourselves up to anyone who wants to harm us.\"\n\n\"You'd make a good conspiracy theorist.\" We both laughed. \"Dad did have a lot of good points, but if I've learned anything in the last year, it's that you have to live in the real world.\"\n\n\"So how do you see yourself doing that?\"\n\nHe held up his phone. \"I have one of these, and an email account, and I'm on Twitter. That's about it.\"\n\n\"Very smart. I can tell you'll be my teacher one of these days.\"\n\nHe looked pleased at that. \"So you see us as having a future?\"\n\n\"As friends, definitely.\"\n\n\"Nothing more?\" He spoke lightly, but I felt his body tense.\n\n\"I don't know,\" I admitted. \"I loved our kisses in the pool, but Blake explicitly told me to leave you alone, and I told him I would. I had the feeling your family felt the same way. I don't want to betray that trust.\"\n\nHe put an arm around my shoulders, and without thinking about it, I snuggled in.\n\n\"Here's the thing -- it's true that I don't have any friends, and I am a young guy with plenty of hormones. So it would be very easy to throw myself at the first girl who smiled at me.\" He paused. \"And maybe that's what's happening here. But I don't think so. It feels natural as breathing to talk to you and be with you. I do feel kind of fluttery in the middle when you smile at me, but it's more than that.\" Sighing, he squeezed my shoulder. \"But what do I know? I'm just a socially inept virgin.\"\n\n\"I really don't think you qualify as socially inept anymore, assuming you ever did.\"\n\n\"Oh, I did,\" he assured me. \"I didn't know what to say to anyone, so I always said the wrong thing.\"\n\n\"I'll take your word for it. You're brighter than most, so that's going to intimidate some folks, but look at how well you've done with me. And Mack, for that matter. You impressed him in less than 10 words.\"\n\n\"He saw how I was looking at you, that's all.\"\n\n\"Maybe, but you still said the right things.\" The clock caught my eye as my stomach rumbled. \"I'm starved. How about brunch?\"\n\n\"What's brunch?\"\n\nI bit my lip. His upbringing had left him with some strange gaps. \"Combination of breakfast and lunch. It's delicious. You'll love it.\"\n\nHe stood up. \"Two of my favorite meals! Lead me to it.\"\n\nLeaving his car at the pool, I drove us to Natalie's, my favorite brunch spot ever. It took roughly 30 seconds for Declan to assess the buffet and embrace the flavor orgy. His plate piled high with pastries, bacon, fruit and even a small quiche, he joined me at our table and licked his lips. \n\n\"Looks fabulous. Bon appetit!\" I forked up some eggs with herbs and a piquant English cheddar, making sure to savor my mouthful. Natalie's didn't come cheap, but nobody else in town could touch her quality and I figured this was a morning to splurge.\n\nHis eyes closed as he chewed his first bite of spinach and parmesan quiche. \"This might be the best thing I've ever put in my mouth.\"\n\n\"Really? May I try a bite?\"\n\nHe cut off a bite and leaned forward, bring his fork gently to my mouth. I closed my lips around it and pulled back as he watched, rapt.\n\n\"Delicious!\"\n\n\"You're incredibly sexy,\" he said in a low voice. \"I could feed you all day.\"\n\nI gave him a wicked grin. \"We don't have that sort of relationship, mister.\"\n\n\"Tell me what I need to do to make that sort of relationship happen.\"\n\n\"I'll send you an application.\"\n\nThe rest of the meal passed in a pleasant haze of flavor and flirtation as we tried new foods and occasionally fed each other. I found myself not thinking about our age difference, instead concentrating on our common ground. He knew a great deal about classic science fiction -- \"my dad loved Robert Heinlein and Isaac Asimov. He said they were two of the smartest men ever\" -- and, unexpectedly, my favorite, Diana Gabaldon.\n\n\"Dad loved her books, mostly for the survivalist parts. He always said most modern people wouldn't last a week if all their technology and conveniences were taken away. He was always making me do without, just to make sure I could hack it.\"\n\n\"What do you mean, do without?\"\n\n\"Like, he'd go to the fuse box and flip the handle and say, 'no power for the next four days. Figure it out.' Then I'd have to figure out how to get by. It wasn't too bad in the summer, but in the winter, it could get pretty cold in my room. We had a wood stove, but the heat from didn't vent to my room. I'd wind up either using my zero-degree sleeping bag, or dossing down in the living room with the stove.\"\n\n\"Sounds nippy. How'd you do your homework without a computer?\"\n\n\"Dad home-schooled me. No homework -- at least, no traditional homework. We did a lot of hiking, and he taught me about all the plants we'd see, and when we got back home, I'd study them to see how we could use them.\"\n\n\"Use them?\"\n\n\"Yeah -- were they edible, or poisonous? Could you make medicine from them? Like that.\"\n\nI nodded my comprehension, and he continued. \"Sometimes he'd give me math or science problems to work out while I chopped wood for the stove. He was always giving me challenges to make me think. He said critical thinking and problem solving were dying skills in America, and he wanted to be sure I developed them.\"\n\n\"He loved you.\"\n\nHe thought about that. \"Yeah. He did. He wasn't big on saying it, or hugging me, but he wanted the best for me -- as he saw it.\" \n\nOver our desserts, we kicked around the differences between theory and reality when it came to politics and human behavior. His grasp of human nature surprised me, and I told him so.\n\n\"I've been in therapy ever since I moved in with Tia Patty and Uncle Sean. I was bound to pick up a few truths here and there.\"\n\n\"You know, sometimes you sound as if you're forty, not twenty.\"\n\n\"Twenty-one,\" he corrected. \n\n\"Twenty-one,\" I conceded. My gut clenched and I decided a bathroom break was in order. \"'Scuse me. Be right back.\"\n\nSeeing a small red stain on my panties, I rolled my eyes and groped in my purse for a tampon. Of course I'd get my period two days early in the middle of the best time I'd had in months. The tampon slid in easily, probably due to both period and arousal. I dabbed at the blood, but to no avail. Best to get home, change and throw my knickers in the wash.\n\nAt the table, I signaled for our bill. \"Sorry to end this, but it's time for me to go,\" I told Declan. He looked disappointed, then sat up straight as the waitress handed me the check.\n\n\"What do I owe?\"\n\nI placed my credit card in the plastic holder and put it near the edge of the table. \"Not a thing. It's on me.\"\n\n\"I thought the man was supposed to pay -- or at least cover his share.\" Easing his wallet out of his back pocket, he opened it and looked at me expectantly.\n\n\"You're my guest. I pay.\" \n\nSighing, he closed his wallet as the waitress swept by and grabbed my card. \"I'll never get the hang of all this.\"\n\n\"Our society does have a lot of weird rules. One day, you might understand them all.\"\n\n\"Or not.\"\n\n\"True enough.\" \n\nThe waitress dropped the card and receipt in front of me. \"Here you go. Thanks for visiting!\"\n\nBack in my car, he drummed his fingers on his thigh as I drove us back to the pool to pick up his car. \"This has been the best morning. Thank you.\"\n\n\"It has been pretty special.\"\n\n\"Would you ever want to see me again?\"\n\nI was surprised he had to ask. \"Of course. I'd like that very much.\"\n\n\"Cool.\" He fell silent, watching the wintry scenery pass before picking up his phone to check an incoming message. \"Tia Patty just texted me and asked if you'd like to join for dinner again Monday.\"\n\nThinking for a second, I couldn't remember any plans for that evening. \"Tell her I'd be delighted.\"\n\nHe typed and waited for a reply. \"Is six OK?\"\n\n\"Sure. I'm off at five. Plenty of time to go home and change.\"\n\n\"Cool.\" He fiddled with the phone again, and stared out the window as I turned in at the parking lot. \"I wish we could spend the rest of the day together.\"\n\n\"That would be nice, but it's impossible.\" I winced as a strong cramp shot through my abdomen. \"I have some things to do.\" \n\n\"You OK?\"\n\nI shrugged. \"Cramps.\"\n\n\"From what?\"\n\n\"From my period. I just got it.\"\n\n\"Oh.\" He looked at me, out of his depth. \"Do they hurt much?\"\n\n\"Enough to make me want to go lie down with a hot water bottle and a novel for the rest of the day.\"\n\n\"Sounds like a smart plan.\"\n\n\"You're not squicked out by my period?\"\n\nHe looked surprised. \"Why would I be? It's just a biological process. Nothing to get fussed about -- although I'm just as glad I don't have to have them.\" He paused as I pulled up next to his car. \"I'm sorry you don't feel well.\"\n\n\"Thanks.\"\n\nHe unbuckled his seat belt. \"Would it be OK if I kissed you goodbye?\"\n\nI smiled at him. \"I'd like that.\"\n\nHe leaned over, touching my cheek with a cool finger. \"You're beautiful.\" Eyes closed, he moved in, and his mouth tasted of chocolate and almond. I'm not sure how long that kiss lasted, but I had forgotten about my cramps and pretty much everything else in my life by the end of it.\n\n\"See you Monday,\" I said as he opened his door. \n\nHe turned back, and his sweet expression made me want to melt. \"Can't wait!\"\n\n**\n\nAs the next weeks passed, we developed a routine: dinner and games three nights a week at the Sullivan home, and Saturday mornings at the pool for a private lesson, sometimes followed by a brief hike at a local park, then food. On game nights, Patty had the best handwriting, so she usually kept score, and she had a graceful and funny way of getting us through any awkward pauses. Not that we had too many of those anymore. \n\nI found myself liking the entire family more and more, and Declan... Somehow, he managed to make me forget the age difference whenever we got together. At the house, we talked of everything under the sun, bickering and bantering as the mood dictated, enjoying the chemistry sparking between us. At the pool, his swimming improved steadily, and I looked forward to the horseplay and kissing that ended each lesson. He kept his hands above my waist, as did I to keep my promise, but the kissing became downright combustible, to Mack's great satisfaction.\n\n\"Kid, you're doing great!\" he told Declan the Saturday before Christmas. \"I've never seen her look so happy -- and the water here has never been so warm. You two make an ironworks look cold.\"\n\nI blushed as Declan grinned. \"Thanks, Mack. I'm working hard to become the perfect servant.\"\n\nThe older man cackled. \"Good for you, kid. Study hard and maybe you'll graduate cum louder.\"\n\nI groaned. \"That was terrible.\"\n\n\"I'm a dirty old man who loves bad puns. Sue me.\" He jumped in, and Dec and I scrambled out of the pool.\n\nIn the lobby, face still pink from his hot shower, Dec gave me a kiss on the cheek. \"You're really coming for Christmas? Promise?\"\n\nI hugged him. \"I'm really coming for Christmas. Promise.\"\n\nPatty had invited me the previous evening after I'd confessed I didn't have holiday plans. \n\n\"My parents jetted off to Europe to celebrate their 35th anniversary, so I'm alone this year,\" I had told them.\n\n\"Nonsense,\" Patty had replied. \"Come spend it with us. You're practically family at this point anyway.\"\n\n\"I've known you a month,\" I'd countered, nonetheless touched by the offer. \n\n\"You're a cherished old friend we haven't known very long. Come over, hang out, and let me do the cooking.\" Mischief lurked in her eyes as she alluded to the night I had tried to prepare dinner. We had wound up ordering pizza; luckily, no one had needed to go to urgent care. \n\nI'd rolled my eyes. \"Just for that, you're on. What time do you want me here?\"\n\n\"We eat around five or six, depending on what I forget and have to send Sean to the store to buy. How about four?\"\n\n\"Sounds great! Shall I supply the wine?\"\n\nShe had laughed. \"You can bring anything you want.\"\n\n\"As long as I didn't cook it?\"\n\n\"Exactly!\"\n\nDeclan nuzzled my cheek, bringing me back to the present \"It'll be neat to celebrate with you.\"\n\nI kissed him lightly. \"Likewise. I just don't know what to do about presents.\"\n\n\"Don't worry about that,\" he assured me. \"No one expects presents, and my family isn't big on a gift grab anyway. We all gave each other just one or two presents last year. It was nice.\"\n\n\"I don't like showing up empty handed.\"\n\n\"You're bringing wine. That's plenty.\"\n\nWe strolled out of the natatorium. The weather had warmed up to spring-like temperatures.\n\n\"What glorious weather!\"\n\n\"Enjoy it while you have it,\" Declan advised. \"That front's coming through this afternoon; it'll be freezing again by tonight.\"\n\nIgnoring him, I dropped my bag to stretch and luxuriate in the sun.\n\n\"Do that again?\"\n\n\"Do what again?\"\n\n\"Stretch. I love how you stick out your chest when you do that.\"\n\nI stuck out my tongue at him. \"Perv!\" Nevertheless, I stretched one more time, making sure to stick out my chest, and added what I hoped was a sexy wiggle. He wrapped his arms around me and we kissed yet again, a slow, sensual buss that made me wish I hadn't made that promise to Blake.\n\n\"Get a room!\" a teenager shouted from a passing pickup truck, and we moved apart, giggling. He draped one arm around my shoulders as we walked to our cars.\n\n\"Would you like that?\" he asked.\n\n\"Would I like what?\"\n\n\"To get a room. To be together.\"\n\nI decided to tell the truth. \"I'd love to do that. I'd love to be your first. But I swore I wouldn't.\"\n\n\"But you made that promise before you even met me,\" he protested. \"You can't tell me it still counts.\"\n\n\"Actually, I think it does. Blake worries about you. He loves you. He wants the best for you, just like Patty and Sean. He and I are old friends and I'm not going back on my word until he -- or your aunt and uncle -- say it's OK.\"\n\n\"I'm not a kid. What you and I do is between a man and a woman who care about each other. Blake and Uncle Sean and Aunt Patty aren't part of what's happening between you and me. They don't get a vote.\"",
        "Stepping back from him, I met his gaze, temper rising. \"I made a promise. I don't break my promises.\"\n\nAn artery began pulsing in Declan's temple. \"He had no right to ask you to do that.\"\n\n\"That doesn't change the fact that I made a promise and I'm going to see it through.\"\n\n\"Great. You do that.\"\n\nHe got into his car, slammed the door and drove off, leaving me to watch helplessly as he sped away. \n\nI took a deep breath and slid into my car's front seat. I had things to do, and buy.\n\n**\n\nChristmas Day shone clear and bright -- a cloudless blue sky and temperatures in the low 40s. The pool being closed, I opted to spend an hour hiking at my favorite wooded park after tidying up my place.\n\nWishing I had a dog to keep me company, I set out, driving the twenty minutes to a nature sanctuary with a three-mile path that wound around a large pond. The parking lot was empty, and I felt a little self-conscious, knowing I'd be all alone. I patted my cell phone to reassure myself, and started on the path. Soon I had forgotten my fears. As I walked, I breathed deeply and felt twice as alive as usual in the crisp, clean air, scented faintly with pine needles.\n\nAbout twenty minutes into my walk, I heard footsteps come up behind me and whirled to see who it was. When I did, I couldn't decide whether to feel annoyed or elated.\n\n\"Angela,\" Declan panted. \"I was hoping you'd be here.\"\n\n\"Why?\" We had texted once or twice since our argument, but our easy closeness had evaporated.\n\n\"Because I've missed you. And we didn't know if you were still coming later on.\"\n\n\"Of course I'm coming. I told Patty I'll be there, so I'll be there.\"\n\nHis young face was serious. \"Because when you make a promise, you keep it.\"\n\n\"Yes.\" I resumed walking and he fell into step beside me. \"How'd you know I'd be here?\"\n\n \"Lucky guess. You've mentioned this park a few times, so I came looking for you here first. I saw your car in the parking lot.\" He paused. \"Look -- I'm sorry I snapped at you the other day. I was being selfish.\"\n\n\"Yes.\" I kept my eyes on the path, not looking at him.\n\n\"I talked to Tia Patty and Uncle Sean about it later that day.\"\n\nThat stopped me in my tracks. \"You what?\"\n\n\"I told them about our fight. They asked why I was moping, so I told them.\"\n\n\"Well, that's just great. So much for everything that happens between us staying between us, and them not getting a vote.\"\n\n\"They love me,\" he said. \"They wanted to help, and I needed it.\"\n\nHead spinning, I started walking again.\n\n\"Don't you want to know what they said?\"\n\n\"Not really. But I'm guessing that won't stop you from telling me.\"\n\n\"You are in a mood, aren't you?\"\n\nStopping once more, I pivoted on one foot to face him. \"You know, there's a reason I'm still single at 30. And that reason is that I'm terrible at relationships. I mean, I'm good as long as there's affection and sex and fun things to do, but when the arguments start, I shut down.\"\n\nDiverted from the conversation he had planned for us, he stared at me as if I were a new species. \"You shut down? Why?\"\n\n\"Because I don't know how to fight! And ... and to be honest, arguing scares me.\"\n\nHe stepped a little closer, but made no move to touch me. \"Everyone argues. Why does it scare you so much?\"\n\nI shut my eyes. \"Because.\"\n\nHis voice was gentle. \"Because why?\"\n\n\"Because fighting's the end.\"\n\n\"The end of what?\"\n\n\"The end of love. And I can't bear it.\"\n\n\"What do you mean, the end of love? You said your parents are away celebrating their anniversary. Surely arguments didn't end their love.\"\n\nI opened one eye. His skin had reddened in the cold, and his blue eyes nearly matched the winter sky.\n\n\"I lied. They're in Europe, yes, but they're traveling separately. He's probably found a mistress for the duration, and knowing her, she's got a lover too. They're miserable together, but too stubborn to admit their mistake and get divorced. Neither one of them wants to let the other go and possibly be happy with someone else. So they stay together -- dismal and angry, but at least they're not alone.\"\n\nHe rocked back on his heels. \"Wow. This is big. Why haven't you ever said anything?\"\n\n\"I didn't know how.\"\n\nHe reached for my mittened hand and I let him take it. \"You wanna keep walking?\"\n\n\"Yeah.\" Moving away from this place seemed like a smart idea, and we set out again.\n\n\"So stubbornness runs in your family?\" \n\nI felt the beginnings of a smile, but didn't give in to it. \"Yep. Afraid so.\"\n\n\"It runs in my family too.\"\n\n\"Oh?\"\n\n\"Why do you think I'm here? I'm too stubborn to let this end without knowing why.\"\n\nWe kept walking, making our way down a gentle slope to the lake. A few hardy geese pointed their beaks in our direction, but the overall impression was one of quiet. I filled my lungs with the fresh air, hoping to cleanse myself. Beside me, Declan said nothing.\n\n\"I'm sorry too,\" I finally said. \"I've been a jerk.\"\n\n\"Yep,\" Declan agreed. \"You have.\"\n\nHe put an arm around me and I leaned into him.\n\n\"What did you uncle and aunt tell you?\"\n\nI felt rather than heard him chuckle. \"They said all couples fight. I told them we weren't a couple, and they told me not to bullshit them, anyone with one working eye could see that we were.\"\n\n\"They said that?\"\n\n\"Oh, yeah. Well, that was how Uncle Sean phrased it.\"\n\n\"What'd you say?\"\n\n\"I said we'd kissed but you had promised Blake not to get involved with me in anything but a platonic way. That's when Tia Patty got involved.\"\n\n \"What did she say?\"\n\n\"She said Blake was a good man but also an idiot -- or something like that -- and that as far as she was concerned, we shouldn't worry about that promise.\" He withdrew his arm and unzipped his jacket, reaching inside for an envelope. He handed it to me. \"She sent you that. Open it.\"\n\nI took off one mitten, slid my thumb under the flap and fished out the card. \"Dear Angela,\" it said in her tidy handwriting, \"consider yourself released from any promises you made to Blake about Declan. He was just trying to protect someone he saw as a vulnerable child. I know you will treat our Dec well. I love you both and wish you happiness. Patty.\"\n\nTears filled my eyes and I started to shake. Declan drew me to him and kissed my hat, and I gave a little hiccup of laughter. He still needed polish, but his heart was in the right place. I lifted my face and he kissed me again, this time where it would do me some good.\n\n\"I'm freezing,\" he said. \"Can we go?\"\n\nI wiped my eyes. \"Absolutely.\" I grabbed his hand and we made it back to our cars in record time.\n\n\"My place?\" I asked. \n\n\"Please. Tia Patty's cooking up a storm at our house. I'm afraid to step in the kitchen!\"\n\n\"Follow me.\"\n\n**\n\nAt my house, we hurried inside to get out of the cold, stopping in my warm kitchen to take off our winter gear. Underneath it all, he wore a simple white shirt and jeans, one of my favorite outfits for a man. As for me, I had on insulated running tights and a tight, fluorescent jersey over an equally loud running bra. His eyes twinkled. \n\n\"Very sexy,\" he commented. \n\n\"Sure, if you like your women extremely visible.\" \n\nClosing the distance between, he took me in his arms. \"I definitely don't want to lose sight of you.\"\n\n\"Wish granted!\" I felt a hard lump against my pelvis and rocked back. \"Wow, you really do like this look!\"\n\n\"It's more about the skin-tight clothes. And thinking about what we might do.\"\n\n\"What would you like to do?\"\n\n\"I think you know.\"\n\n\"Tell me anyway.\" As I rubbed against him, my inner electric current switched on, and my pussy suddenly buzzed with energy.\n\n\"I want us to be together.\"\n\n\"We're together right now,\" I pointed out.\n\nHe pulled me to him and the hard lump seemed a little larger. And firmer. \"I want us to be together as a man and a woman. As lovers.\" He kissed me, applying the skills he had picked up over the last few weeks, and my knees quivered. \n\n\"Why didn't you say so?\"\n\nHe laughed. \"I've been trying to, but you haven't been listening.\"\n\n\"I'm all ears now. Let's go upstairs.\" Grabbing his hand, I practically pulled him up the stairs in my eagerness to get him to my bedroom. At the doorway, I gave him a little shove. \"I need to use the bathroom. Won't be a minute. Go make yourself comfortable.\"\n\nIn my bathroom, I pulled off all my clothes, peed (taking care to clean myself carefully afterward), and reached for a pale pink bag containing two of my purchases from Saturday. A red lace thong and a short white silk robe lay within, and I wasted no time putting them on. Merry Christmas, Declan, I thought. I sure hope you like red and white. \n\nI brushed out my curls and swirled some water through my mouth. Giving the woman in the mirror an approving nod, I twirled on one foot and hurried down the hall to my bedroom.\n\nShirt unbuttoned and shoeless, he sat on my bed, waiting for me. He gulped as he took in my outfit. \"You look incredible.\"\n\nI sat next to him and tugged at his shirt. \"You look pretty incredible yourself. I love the shirt -- and what's under it.\"\n\nHe blushed as I slid my hand under the white cotton. \"You really like it?\"\n\nI leaned into him and pushed the fabric aside so I could kiss one pebbly nipple. He gasped. \"I love it. It's a great look for you.\"\n\nAs I kissed his chest, he held perfectly still, with the air of someone who doesn't dare move. \"It's OK, Dec. I'm not going anywhere. Relax.\"\n\nHe smiled sheepishly. \"I love being here with you like this -- but I'm still not sure what to do.\"\n\n\"Fortunately for you, I do.\" I gave him a little push toward the edge of the bed. \"Let's start by getting you out of those jeans. They'll just get in the way.\"\n\nHe stood and the jeans hit the floor, followed by the shirt. \"Should I take off my underwear too?\" I noted a wet spot near the tip of his bulge -- Declan was not only ready to go, he looked possibly ready to come, too. I wanted him to remember this day with satisfaction, not embarrassment. \n\nI shook my head. \"Not yet. Let's make out for a while, like we do at the pool.\"\n\nA look of relief passed over his face. \"Sounds good. I love kissing you.\"\n\nI pulled back the covers. \"Let's get under here. Cozier.\"\n\nUnderneath the sheet, we groped for each other and quickly found ourselves mashed together. Our kisses started slowly, giving and receiving the pleasure only a pair of soft lips can offer, then turned more passionate. Our tongues danced together and always, I felt that hard rod pressed against my belly, making its own promise to me. \n\nUnlike our explorations in the water, we could allow our hands to roam freely here, and he found my bottom in record time, squeezing it gently and running his hands all over it, again and again. I moaned and squirmed in his arms, soaking up the affection, wanting to feel every little thing he did. \n\nPanting, we stopped to get some air. \n\n\"I've been waiting to get my hands on this ass since the night I met you. God, it's just as round and warm and amazing as I fantasized.\"\n\n\"You've been fantasizing about my ass?\"\n\n\"Constantly.\"\n\nHe ran one finger up the crease, and I shivered. \n\n\"Still nervous?\" I asked after a pleasurable few minutes that resulted in the removal of my thong and his boxer briefs. His cock felt hot, the skin like thick silk stretched over polished wood, and he shuddered when I ran a fingernail down it. \n\n\"A little. I want you, and I know you want me. I'm worried I won't get it right when we... I want to make you come, and I've been reading how I might do it, but now that we're here,\" he waved a hand helplessly, \"I don't know if I'll be able to do it.\"\n\nI turned on to my side and reached over to massage his chest. \n\n\"You want my advice?\"\n\n\"Please.\"\n\n\"We're been doing a lot of talking. Well, sex is a conversation, too. Instead of our mouths talking, our bodies talk, just like they've been doing for the last few minutes. When you touch me and I jump and pull back, you know that's not a move to repeat. When you touch me and I purr like a panther, you know to keep doing that. And vice versa. It's all one long conversation.\"\n\nHe smiled. \n\n\"Spoken like a true teacher -- which means a lesson's coming on. Is it going to have the same rules as my first swimming lesson?\"\n\nI blinked, trying to recall what I had said. \"What do you mean?\"\n\n\"You said we had three rules.\" He rolled onto his back and ran a couple of fingers through my curls. \"You said, 'First, if I'm going to teach you, I have to touch you. Second, it's easy to get overwhelmed in a strange environment, so let me know if you need help. Third, if you don't understand something, ask me. I won't think less of you -- I'll think more.' Or words to that effect.\"\n\n\"I can't believe you remember that.\"\n\n\"You'd be surprised what I remember about you.\"\n\nI kissed him. \"Those sound like good rules for today. What do you think?\"\n\n\"I just hope I get to do more than kick and float.\"\n\n\"Mmm. A good orgasm can make you as if you're floating. But agreed on the kicking. Violence has no place in my bed.\"\n\n\"Good.\" He looked at me expectantly. \"Are you going to touch me now?\"\n\nI smacked him lightly on the chest. \"Beast. I've been touching you for the last twenty minutes.\"\n\n\"But you've touched my pride and joy only twice.\"\n\nI reached down to rectify the situation. \"You're awfully demanding all of a sudden.\" I let my fingers travel all the way to the root of his cock, then fondled and gently squeezed his balls. With a groan, he flopped back on the mattress.\n\n\"Also, since when is my bedroom a strange environment?\" My fingers continued their expedition up and down his erection, stopping to rub that little depression just below the head.\n\n\"It's. Strange. To. Me,\" he said, his voice sounding strangled as he wriggled and thrust in my hand.\n\n\"How's this?\" and I increased the pressure. He moaned again.\n\n\"Overwhelming. I definitely need your help.\"\n\nReturning my mouth to his, I slid one leg up his thighs and continued stroking him. His grip on me tightened, and after a few seconds, he pulled his mouth away.\n\n\"Gonna come!\"\n\nI felt his cock jerk in my hand and hurried to point it into his belly. No sense showering us both -- yet. His eyes squinched shut and his back arched as he spurted again and again.\n\n\"You're so sexy,\" I whispered in his ear. \"So fucking sexy. And you're all mine.\"\n\n\"Ah!\" With a final cry, he relaxed and curled into me, seeking my mouth again. We lay together for a couple of minutes as he alternated kissing me and catching his breath. When his breathing evened out, I reached over to the nightstand and fetched a washcloth from the top drawer. \n\n\"You think of everything,\" he said, taking the cloth from me and wiping himself clean. \n\n\"I have done this once or twice.\"\n\n\"You have no idea how grateful I am.\" He reached across me to drop the cloth on the nightstand, and stayed to kiss me deeply. \"Can I tell you a secret?\"\n\n\"I love secrets.\"\n\n\"That first day in pool, when I said I needed more time to learn how to keep my face in the water?\"\n\n\"Un-huh.\"\n\n\"I didn't. I had a huge hard-on. I needed time to get it back down.\"\n\nI tittered. \"Really?\" \n\n\"Yeah. I was mortified. But you looked so sexy in your suit and you were so close to me, I couldn't help it.\" \n\n\"That is so sweet -- and so hot.\" My pussy tingled, remembering how much I had wanted him that day. \"So tell me -- did you get off in the shower afterwards?\"\n\nDeclan nodded vigorously. \"Took me about 30 seconds.\"\n\n\"Can I tell you a secret?\"\n\nHis eyes brightened. \"Of course.\"\n\n\"I did the same. I used the shower head, but I probably could have gotten off without it.\" \n\n\"That may be the nicest thing anyone has ever said to me.\" He kissed me again, a little more forcefully, and moved his hand down my body. \"I think it might be your turn now?\"\n\nMuscles deep in my abdomen rippled as he fluttered his fingers on my slit. \"So wet. Is that for me?\"\n\nI lay back and stretched, opening my thighs to his caresses. \"Mmm. All because of you.\" \n\nHe stared at my naked body in awe, one hand moving up to make slow figure eights all over my torso. Somewhere, he had learned to spread his fingers as he rubbed me; his warm hands felt enormous, and I purred. \n\n\"Guess I should keep doing that.\"\n\n\"Don't stop,\" I told him. His hands continued making slow figure eights, adding a third loop that passed over my thighs and mound. I shifted, my body demanding more. His lips met mine in a slow, sensuous, wet kiss, then he moved his head down, kissing me everywhere, occasionally fumbling as all new lovers do. Always the quick study, he seemed to note my every quiver and sigh and add it to some internal database. \n\nHe found the sensitive spot on my neck, the one connected directly to my sex, and lavished it with licks and kisses, enjoying my moans of pleasure. At my breasts, he fondled one as he kissed the other, never pinching, never hurrying, listening to what my body told him. At this point, I gave up trying to instruct him; our bodies now seemed tuned to the same frequency.\n\nHis hands and mouth moved down my belly, feeling the hollows under my ribcage and between my hipbones, making sure no spot would feel neglected. Reaching my mound, he parted my lips, running his warm, wet tongue between them.\n\n\"For a virgin, you're doing extremely good work.\"\n\nHe raised his head, eyes gleaming. \"I did tell you I read a lot, right? I'm just trying out all the things I ever thought sounded hot.\"\n\nOne finger curled into me as he returned to licking me. I jumped as he found my clit, then reached down to hold his head in place. Taking the hint, he flicked his tongue back and forth as he eased his fingers in and out of me, stretching and preparing me. My heart raced as all my nerve endings sent out urgent messages of pleasure, and I moaned loudly, arching my back, then trying to grind his face with my pussy.\n\nChanging tactics, he closed his lips around my clit and sucked, very gently. Too gently.\n\n\"Harder.\"\n\nThe pressure increased, and I gasped. \"Too much. Back off.\"\n\nI felt him smile as the pressure decreased, then hit the sweet spot. My hips bucked, and he stayed right in place, this time humming. Then the universe contracted and I saw stars burst into fragments as waves of bliss exploded in me. Through it all, Declan never broke contact, not until the spasms subsided and I asked him to come up and kiss me. \n\nHe crawled up my body and pressed against me, holding me as I recovered. \n\n\"Was that OK?\" he finally asked, needing reassurance.\n\n\"More than OK. Exceptional.\"\n\n\"Good.\"\n\nFeeling my strength return, I wriggled against him, noting his cock had revived too. \"Ready for more?\"\n\n\"Oh, yes.\" We lay there for a moment. \n\n\"Do you want me on top, or do you want to try topping me?\"\n\n\"I'd love to see and feel you on top,\" he told me, rolling onto his back. \"Those are my favorite pictures online.\"\n\n\"So you've been looking at pictures?\" I teased, straddling him, then positioning his cock properly.\n\n\"I am a man.\" He sighed with pleasure as the tip of his erection slid against my folds. \"I do like to look at pretty ladies. Especially the one I'm with right now.\"\n\n\"Well said.\" I began moving on him, easing him into me. In truth, I was so wet I could have sat down hard on him and he would have slipped right in. But I wanted to give him the whole experience. \n\nDoing his best to thrust upward, he grabbed my thighs and pulled me down. \"I may never look at another pretty lady now, though. God, Angela, you look just like an angel up there. Or maybe a goddess.\" \n\nBoobs bouncing, I bore down on him and started rocking rhythmically, reveling in the friction of our bodies as we moved together. He closed his eyes. \n\n\"Does it feel like you expected?\"\n\n\"It feels better than anything I've ever imagined. Please don't stop.\"",
        "I didn't. After a while, I changed my angle, leaning forward so my clit could get the benefit of his pubic bone and hair. Finding my face near his, I kissed him, working my pussy all over his cock. He grabbed my ass and kneaded it, bringing a new dimension to my sensations down there. I felt my muscles tighten.\n\n\"I'm very close,\" I murmured, and he held me tight, thrusting into my hungry pussy.\n\n\"Come all over me,\" he begged.\n\n\"Are you close?\"\n\n\"Yes, But I want to feel you come first. I've been wanting this so long. Please.\"\n\nOne final grind against him, and everything inside focused on that one singular point, then radiated outward. I fell against him and he gripped my waist as if he would never let go. His cock jerked, and then we were both riding the waves, giving and receiving the greatest gift in our turns.\n\nA long time later, I opened my eyes to find him staring at me. I smiled, and he reached up to stroke an errant curl out of my face.\n\n\"So beautiful.\" His voice sounded awed. I felt grand. Seeing my silk robe crumpled on the pillow next us, I picked it and ran the fabric over his face, making him shiver before he buried his face in my hair.\n\n\"Did you like your Christmas present?\" I asked. He raised his head, considering. \n\n\"Which one was my Christmas present? The robe? The thong? Or the greatest experience of my life so far?\"\n\nI giggled. \"None of the above.\"\n\nHe frowned. \"Then what was it?\"\n\n\"Me.\"\n\nHis face cleared. \"Of course. That other stuff was just the gift wrap.\"\n\n\"Exactly.\"\n\nHe nuzzled my cheek. \"This was the absolute best Christmas present I ever hope to get.\"\n\n\"Good answer. Teacher is pleased.\"\n\n\"How about you? Every Christmas needs a virgin. Did you like yours?\"\n\nI ran a hand down his chest, savoring the warmth of his body. \"Best virgin ever.\" My hand curved around his waist and I leaned in to kiss him one last time.\n\nHe pulled me to him, covering my face with little kisses, and I shrieked with glee. "
    ],
    "authorname": "vanmyers86",
    "tags": [
        "first time",
        "romance",
        "survivalist",
        "swim",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/every-christmas-needs-a-virgin"
}