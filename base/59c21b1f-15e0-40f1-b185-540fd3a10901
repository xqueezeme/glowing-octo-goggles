{
    "title": "The Ballad of Jaimie and Vera Ch. 03",
    "pages": [
        "After the 'Establishing Shot', Vera and I hit the road. We rented an RV and set out cross country. Vera called it \"Jaimie Bradley's Sexual Awakening Tour 2013: Coming to a city near you!\" The plan was to go around and find people I could have sex with, have them sign a release, film it, and put out a DVD. Or start a website. That part of the plan was fuzzy, but we knew that the footage was an important part, and it was certainly the part we were looking forward to the most. \n\nSo we hit the road. Over the next six months, we rambled from city to city, hitting lots of college towns and a ton of hotels in between. In all, we recorded about 55 encounters. What follows are our favorites. \n\nHal, the virgin. #53 \n\nThis scene actually happened very late in the trip, but we both agreed it should be the first one we released, or showed, or whatever we were gonna do with it. \n\nWe were in Ann Arbor, Michigan (Go Wolverines!!), crashing a frat party. Vera was using a little minicam she had hidden in her purse. She'd thought that sometimes the pick up, long before the sex began, was worth filming. Even if all we did was trash it later, at least we'd have it. I trusted her opinion. As with most of our encounters, we didn't try to seek out anything in particular. We let whatever might come our way happen and made the best of it. So far, that had produced more than a few gems. \n\nWe milled around for a while, eventually finding our way to a bar set up in the basement. When I pushed my way through to a seat, a gawky guy next to me looked back, saw that I was with someone, and moved out of our way with a polite smile. Vera got her Rum and Coke, and I got an Appletini. \n\n\"You know, despite having the most impressive package in this place and a set of balls to put anyone to shame, you drink like a little girl!\" \n\n\"You don't know it's the best,\" I scoffed, sipping my drink. \"You're just buttering me up. I see through you.\" \n\n\"Oh. OH, you think you have me all figured out, don't you?\" She handed me her drink and purse, and stepped to the side into a little space in the crowd and started dancing. It was disjointed and it didn't quite line up with the music, but her moves were fluid. It was kind of hot to watch her go, and a crowd opened up around her while she burned through some routine she'd clearly mastered. I stare open mouthed, in amazement. After a minute or two, she petered out. The crowd around her roared with approval. \n\n\"I had no idea you had any dancing talent at all,\" I said, or rather shouted over the noise. \"I concede the point!\" \n\n\"God damn right you do,\" she said, snatching her drink back and taking a long swig. \n\nSuddenly, the gawky guy from before came up from behind Vera and tapped her on the shoulder. Once I got a better look at him, I saw he was less a guy and more of a late teen. \n\n\"Um, excuse me,\" he started, voice cracking. \"Was that from Napoleon Dynamite?\" \n\nVera threw her head back and laughed. \"Guilty!\" \n\n\"It was still impressive,\" I said. \n\n\"It was spot on,\" the kid exclaimed. He started to say more, but two larger guys shouldered past him rudely. At first, they were going to pass right through our little conversation, but then they both came to a stop and grinned at us. \n\n\"Well well well, Who do we have here?\" The first guys voice is so deep, I feel it in my chest. \n\n\"I'm sorry, but I was-\" \n\n\"Fuck off, nerd,\" the second one said, giving the kid a shove. He disappeared from view into the crowd. Vera looked at me, and I nodded. \n\n\"We were talking to him!\" Vera yelled. \n\n\"C'mon, seriously? That dweeb?\" Vera threw her drink in his face without a second thought, and stormed off. I shook my head at them and followed. \n\nWe had to wander around the party for a little while before we found him again. He'd found a loud and crowded corner to hide in. Once he spotted us, he pretended he hadn't made eye contact and tried to look away, but Vera walked right up to him. \n\n\"I'm sorry about those guys. They had no right to do that.\" \n\n\"No, they kinda do. I'm rushing this frat. I pretty much have no claim to talk to anyone tonight.\" \n\n\"That is the dumbest thing I have ever heard.\" \n\n\"I don't really want to be here,\" he said. \"I'm only rushing because my Dad was Theta Lambda too.\" \n\n\"Will he be pissed if you don't make it?\" \n\n\"I'm a legacy. I'll make it no matter what.\" \n\n\"Well,\" I said, speaking up for the first time. \"If you're gonna make it no matter what, then why are you taking it?\" \n\nHe looked at me like I was stupid. \"Those two were both twice my size. What else was I gonna do?\" \n\n\"You could leave.\" \n\n\"And go where?\" \n\n\"Our hotel room?\" \n\nThat stopped him down. \n\n\"My name is Jaimie. This is my friend Vera. Would you like to get out of here?\" \n\nHe just blinked at me for a minute. Then he looked at Vera. Then back at me. \n\n\"If this is more hazing, it's not cool...\" \n\n\"This is totally on the level,\" Vera said. \n\n\"...ok.\" \n\nVera turned to head out. I nodded my head at her and he followed, and then I brought up the rear. Vera gave the two larger guys from earlier the double bird on the way out. It was too loud to hear what they said back, but I'm sure it wasn't pleasant. \n\n\"I'm Hal, by the way.\" \n\n\"Pleased to meet you,\" I said, stepping up to walk beside him once we get out onto the sidewalk. \n\n\"Are we going far?\" \n\n\"No, we can walk there. We're at the Ramada over by rt 110?\" Hal just nodded. \"It's actually better that we can walk, because we need to talk to you a bit.\" \n\n\"O...k?\" \n\n\"First of all, I need to ask you if you'll sign this,\" Vera said, pulling out our release form and a pen from her purse. \n\n\"What is this for?\" \n\n\"We're going to film this.\" \n\n\"I'm going to be in porn?!\" \n\n\"Yes, although there's no guarantee that we'll use any of the footage in the end. Once we get that squared away, we'll contact you later about payment. Is that ok?\" \n\n\"Are you kidding me? Of course!\" \n\nNow Hal was maybe 5'8\", and if he weighed 140 lbs wet, I'd be shocked. He had horn-rimmed glasses, shaggy black hair, and the least amount of muscle definition of any guy I've ever considered taking to bed. \n\n\"I do have one question though.\" \n\n\"Just one?\" Vera laughed. \"I'd have a ton, but go ahead.\" \n\n\"Why me? Those two guys were way bigger than me.\" \n\n\"What can we say? We like underdogs.\" \n\nHal nodded. He scribbled his signature everywhere we had highlighted, and Vera grinned broadly as she shoved his form into her purse. The hotel we were at was only a few miles, so we were there pretty quick. Hal was sweating quite a bit, and wasn't that hot. \n\nWe got inside the room, and Vera looked to me for direction. I was a little unsure of how to handle this one, so we both puttered about for a few seconds, waiting to see what Hal did. Once the door shut behind him, Hal stops dead in his tracks and stared at us wide eyed. \n\n\"Hal?\" I said. \"Is everything ok?\" \n\n\"Yeah...I\" We both stop down to look at him. \"I. Um.\" \n\n\"Hal, is this your first time?\" \n\n\"Um. Yes?\" \n\nVera subtly made a fist and pumped it. She loves breaking in virgins. \n\n\"Ok,\" I said. \"Well, it's guys choice. You can do whatever you want with either one of us, or both of us. I should say, however, that if this is your first time, you should start with Vera.\" She turned and looks at me. \"What, I can't be the cameraman?\" \n\nHal turned and looked at Vera. She stared at me for another minute before shaking it off and nodding. She kicked off her boots, unbuttoned and dropped her jeans, and flung off her shirt with a queried look at me. Hal just stared in amazement, and I can totally relate. She had (and still has) a fantastic body. Even though we'd been on the road, she still made time to jog, or something, every day. I brought the camera out in the open instead of tucked into the spot in her purse where the hole was. \n\nVera walked across the small room to stand right in front of Hal. She smirked one more time over her shoulder at me, and then turned to give Hal her full attention. She closed her eyes, rolled up onto her toes, and leaned forward. Hal seemed like he could barely believe this was happening, but he didn't skip a beat in leaning down a hair to kiss her. It was tender. Just the lips. \n\nWithout looking, she reached out to grab his wrists, and placed his palms on her tits. He whimpered a little in the middle of their kiss, but once they were in place, his hands went to work. They were nearly the perfect size to hold her breasts. \n\nAfter a minute or so, she leaned back, although she held his hands in place. Once she was certain he wouldn't let go, she moved her hands down to undo his belt. Hal's hands did stop as he stared wide eyed at what she was doing. She bite the side of her lip, and her hips squirmed a little. The fact that he couldn't keep his focus was a huge turn on for Vera. Once his belt was undone, she dropped down to her knees, undid his button, dropped his zipper, and pulled out his cock. Hal was pretty average, but it had a nice thickness to it. Vera tilted her head back just slightly to stare up at him while she took his semi-rigid cock into her mouth. \n\nHal inhaled sharply, making a kind of whining sound. His hands sorta floated in the air, as he clearly has no idea where they were supposed to be or what he should have been doing with them. Vera kept his dick in her mouth for a while, leaning her head from side to side. When she finally backed off, it was considerably harder but not much larger or longer. She gently wrapped her lips around his head, and with great slowness, proceeded to take his entire cock into her mouth and back out again. 10 seconds in, 10 seconds out, and then she backed off completely. \n\n\"Hal, if this is your first time, you're gonna cum soon. Don't worry about that,\" she said, smirking up at him. \"But we also don't want it to be just from a blowjob, so...\" She got up, and dragged him to the bed by his cock. Just as she climbed up onto it she let go, and he took the moment to strip off the rest of his clothes. She flipped over onto her back, and as soon as he was free, Hal climbed up on top of her. \n\nWhen he finally got face to face with her, it was really beautiful. She ran a finger along his cheek with just the tiniest hint of a smile on her face. Hal looked down for a second and grunted, but Vera only stared at him. When he finally entered her, her eyebrows went up and her mouth opened wide. There was no more kissing. Just two faces three inches apart, staring. \n\nVera's prediction was pretty accurate. It only took a minute, at most, before Hal's momentum was completely lost, and his wiggling on top of her slowed to a stop. For her part, Vera handled it like a champ. Once he was done, she leaned up and kissed him again, this time slipping in a little tongue. Hal crawled off of her after a while and flopped down onto the edge of the bed. I let him have a minute to reflect. Vera started fingering herself softly. \n\n\"Hal,\" I said, \"we're really hoping you'll be able to join us again, so we're gonna mess around for a while. You can just watch us, or you can direct us, and whenever you're ready, you can join us.\" \n\nI sat the camera on the tripod facing the bed, and got down in between Vera's legs. I immediately started licking up the cum that was flowing out of her pussy, and Hal gawked next to me. \n\n\"That's fucking hot,\" he said. \n\n\"Just wait,\" I said, winking at him before turning my attention back to Vera's pretty pink pussy. Some of her own juice was mixed in there, adding that unmistakable, if indescribable, flavor I'd come to love. \n\n\"Can I, you know, do you next?\" \n\n\"You can...\" I said, smirking. \"Although maybe you should wait just a second more.\" I turned back to Vera's pussy again and attacked her clit. \n\n\"Fuuuuuuuuuuuuuuuuuck! Fuckin Fuckin Fuckin Fuck!\" Her hands feebly pushed down on my head, and her legs kept trying to come up over my shoulders, but I swatted them away. She wanted me to spend more time on her pussy. She didn't want to cum too soon, but I wanted her to cum very, very badly. \n\n\"Fuck!! FUCK!! FUCK!!\" It didn't take long before her hands stopped pushing and started grabbing hair. When I heard her voice drop, I lightened up. I wanted this orgasm to be gentler than her usual thrashing. It was really musical when she came, sing-song-y and beautiful, although no less profane. \n\n\"Just do it,\" Vera said while looking at my pants, happily writhing around on the bed in the moments after. \n\nI sat up, smirking at her, and pulled off my t-shirt. Hal made an \"awwww\" sound, and his eyes were glued to my chest as I reached back and popped off my bra. I let my biceps and elbows push my tits up and together, and Hal was dumbstruck and fascinated all at once. I beckoned him forward with one finger, and as he crawled over the bed towards me, I laid down on my back. \n\nHal settled in next to me and immediately latched onto my right tit. His eyes closed as his tongue began massaging the nipple, like a hand forming clay. Pressing but not pushing, shaping without redefining, and stroking. Good lord, the boys tongue could stroke. After a minute, Vera settled in on my other side, one of my tits in each mouth. \n\n\"Damnit, that feels good...\" \n\nMy hands slid along their necks... fingers lacing into their hair... nails along their spines... Veras hand slid across my stomach and grabbed Hal's wrist. He let his hand be guided over my abs and down between my legs. My cock was down in my left pant leg, and after a little bit of searching, she laid his hand down on it. At first, it just laid there on top of my cock, unaware. The suspense was driving my crazy, and although I wasn't hard before he got there, I was hard pretty soon after. \n\nStill no reaction from Hal. \n\nVera, her hand still over his, started sliding his palm up and down over my jeans. The friction made my cock jump a little, and finally, Hal reacted. \n\n\"What the what?!\" he said as he jumped backwards and off the bed. Vera didn't move, she just kept slurping away at my tit. I'd stopped lactating almost as soon as we got on the road, a fact which Vera had been extremely disappointed about. She'd really come to enjoy sucking on my tits though, and my nipples had gotten much more sensitive since the surgery, so it was win win. \n\n\"It's not a flashlight in my pants, Hal. I'm just happy to see you...\" Vera coughed a little, fighting not to laugh. \n\n\"Those are real!\" He squeaked, pointing at my tits. \"I swear those are real!\" \n\n\"They most certainly are,\" Vera purred. \n\n\"You're a girl!\" \n\n\"She most certainly is.\" Vera was slurring her s's again. Damnit, she knew what that did to me. I reached both hands down to unsnap my jeans, arched my back up so I could slide them down, and my cock sprung out. Slowly, I laid myself back down. My cock was sticking nearly straight up, and Hal just stared at it. \n\n\"I've never seen... Usually, shemales... huh.\" \n\n\"mmm,\" Vera took one last slurp, and sat up a little. \"Since she started off female, she thinks term dickgirl is probably more appropriate, although I prefer futa.\" \n\n\"Foo-ta?\" I'd never heard the word before. \n\n\"Look it up some time. I think you'll enjoy it.\" With that, Vera dropped back down to my tit, although she had one hand on my shaft and was lightly stroking it up and down. I looked over at Hal, and he was still just staring distractedly. His dick, however, was at full attention. \n\n\"Hal...\" He kept staring until I repeat myself. \"Hal! You don't have to do anything with it if you don't want to.\" \n\n\"No, I...\" Man, he just kept STARING at it! I love this reaction. I'd gotten it before, but this was one of the most satisfying renditions. \n\n\"Here,\" I said, scooting over to the edge of the bed. \"Come over here.\" Hal got up and came around to stand in front of me, but his eyes were glued to my cock the entire time. I tucked my legs up over me and pulled back my balls. He stared equally wide-eyed at my pussy... \n\n\"Holy Fucking Shit! How is that even possible?!\" \n\n\"Remember. You don't have to do anything you don't want.\" Hal seemed pretty intent when he finally stepped up. Of all the people we fucked, Hal was the most hesitant about it, but once he got there, between my legs, his hesitations subsided. I couldn't believe he was hard and ready to go again... well maybe I can. Vera and I are pretty fucking hot together. \n\nHal gripped his cock as he stepped up, and pushed the head up and down between my lips. In no time at all, he was fully lubricated and pressing in against my poor overlooked pussy. It'd been a little while since I'd been fucked there, so it was pretty tight when he started pushing. I didn't have to fake the deep breaths, the gritted teeth, or the grunts. His dick felt great, but all he could stare at was mine, and with just the slightest hint of awe now. \n\n\"Do you want to touch it?\" I licked my lips, hoping. Hal didn't respond, but one of his hands moved from my thigh down to my cock. It spasmed at his touch, which made me clamp down on his dick involuntarily. We both whimpered a little. \n\nSuddenly, Vera crawled over me to start sucking on my tit. I watched the skin stretch around my nipple as she pulled it up and into her mouth, but only for a moment. Then her hand grabbed my head and turned it so that I could see that one of her tits was hanging right above me. One of her perfect little tits... 69 tit sucking. I'm surprised we never thought of this before. \n\nI reached up and grabbed her tit, squeezing it and forcing the nipple down into my mouth. My tongue flicked rapidly back and forth, and then my lips closed around it. Gently sucking, pulling it down. Her other tit, perfect and pink, dangled beautifully just out of the corner of my eye. \n\nHal began stroking my cock slowly, which started a whole chain reaction. I grunted and bit down gently on Vera's tit. She gasped, dropping my nipple out of her mouth for the first time in what felt like forever. She lightly spanked my sideboob before picking it back up again. My feet curled around Hal's back, interlocking at the ankles. Once my legs had that leverage, I really started to tighten down on his dick. He started to cry out a little with each thrust. He didn't stop stroking my cock though, which makes the feedback loop get just a little bit stronger. \n\nIt was good that Hal had already blown a load in Vera, because he lasted much longer this time. After a few minutes of that, I was dangerously close to cumming, but I was holding it back for now. I had an idea. \n\n\"Slide down,\" I said. Vera wasted no time crawling further down. I felt her hand take over for Hal's. His amatuer touch had a certain exhilarating appeal, but Vera was a pro. She worked the top half in and out of her mouth, while she stroked the bottom half lovingly. \n\nI returned to her clit. Vera's clit is her easy button. It's ultra sensitive, and if you work it just right, she'll orgasm extremely quickly. She, of course, is not a fan of that, but she rarely stops down during sex to say so. The angle was in my favor. My dick is so long, she had to start further back to get to the front of it. I started slow, keeping constant swirling pressure. I have this routine down so well, I probably do it in my sleep. Switch directions, always keeping contact. Up and down, but pressing firmly and dragging the clit with me as I go. Slowly, my arms reached up around her waist. I could reach one hand across her back to my other elbow, which was good, but for now I just held her closely. \n\nHal, meanwhile, was picking up steam. His cock felt so thick inside me, and it was wonderful to be able to stretch those muscles around him. So wonderful and full. I had to let go of my balls to get my hands around Vera's waist. They fell to rest on and around Hal's dick. Each time he pushed in, he bumped them with his lower abs. Vera got a little further in on my dick. Felt like she was getting most of it in there now, and her hand was marking the spot her lips could reach. Nearly there. I felt myself getting ready to cum, so I acted. ",
        "I triple timed my tongue on her clit, wiggling my head back and forth full tilt. My arms tightened a little on her waist as she tries to lift herself off of me, but she doesn't stop. \n\nA few more seconds of Vera's squirming... I'm so close! C'mon, c'mon!! A shiver through her middle, and she started cumming. I wrapped my arms tight around her waist, and for the first time in years, I bit down on her clit. She started to jerk around, trying to dislodge me, but I had her tightly. Her deep grunting was muffled by my cock in her mouth, but it was loud and long. Or at least it would have been. \n\nWhen I felt my orgasm getting close, I wrapped one hand around the other elbow, and my free hand pressed down against the base of her skull. Her cumgrunt was cut short as I pulled off the hardest crunch of my life and my cock hits the back of her throat with a strangled glalp. \n\nIt's a wild ride, trying to keep her clit between my teeth. I was basically hanging from her torso at that point, with my feet tight around Hal. Her thighs had closed down hard around my head, but I could still hear her gagging as I came directly down her throat. My legs locked down on Hal too. My pussy viced on his cock. Somewhere very far away, Hal was crying out. It was magnificent... \n\nVera never stopped fighting my hand. As soon as I was done and the will to fight was gone, she threw herself free and gasped for air. \n\n\"Oh my god, are you ok?!\" Hal exclaimed. \"Your face was almost purple!!\" \n\n\"No, I'm just fine,\" I say, although he sooo wasn't talking to me. I laughed a little more as Vera hacked away next to me. Hal collapsed on a chair across the room. After a minute or so, Vera sat up and smiled at me. \n\n\"Yes, Hal. I'm fine. Thank you for asking.\" I giggled a little. \"Jaimie here just gets a little feisty sometimes.\" \n\n\"Me?!\" \n\n\"Oh yes. It's not her fault. She's got so many hormones raging in there, she's lucky to be sane. I mean, come on,\" she said, gesturing to me. \"Look at that body! You don't get to look like that without paying a cost. Truth be told, she's the sweetest person I've ever met, but sometimes she's like a wolverine on angel dust.\" I started wincing. \"Oh yes. That's right, Jaimie. This is gonna hurt.\" \n\n\"What?! No! That wasn't that bad!\" I exclaimed, but her smile only grew wider. I rolled up onto my elbows \n\n\"What are you gonna do?\" Hal's voice was cracking again. \n\n\"What are we gonna do,\" she corrected, never breaking eye contact with me, smile never lessening. \"I bought a few provisions just in case this sort of thing happened again.\" \n\n\"What do you mean, again?\" Hal asked, still flopped over in the chair. \n\n\"Long story.\" She got up and walked over to her suitcase. \n\nI sat all the way up trying to peek, but I heard it first. I know that jangle. It's her strapon. I bit my lip and grinned at Hal. \"Worth it,\" I mouthed to him. He stared back at me incredulously. \n\nVera took her time assembling her getup. It's quite a thing. The straps all fit her like a glove, so she doesn't have that problem where she can push but can't pull it back out again. She's also got two little vibrators she inserts, one in her pussy and one in her ass, and the controls clip on to one of the leg straps. I'd seen it before, and been on the receiving end before, but when she turned around, my jaw dropped. Somewhere along the way, she found a two dick attachment for it, one above the other, and they're both at least as big as me. \n\n\"Yeah. That's right,\" She said, grinning malevolently. Her eyes were wild as she looks around the room.. \"On that table. Hal, grab the camera.\" \n\nI had brought this on myself. I totally had it coming. I did, but FUCK those things were big... Fair is fair though, so I got up. Vera pulled out and put on a pair of black heels. I drooled a little, thinking about what heels do to her calves and ass as I climbed up onto the table. \n\n\"On your back. Hal, get up on the other end.\" \n\n\"I'm not really ready to go again..\" He said tentatively. \n\n\"I'm counting on that.\" \n\nI laid down, and just above me at the other end, Hal was kneeling. Vera grabbed my thighs and roughly dragged me out to the very edge of the table. \n\n\"I want you to put your balls in her mouth, and if she stops tonguing them for even a second, tell me.\" \n\n\"Sorry about this,\" Hal's upside down head told me before scooting forward and dropping his sack into my mouth. I sucked down just a little to get them far enough into my mouth to get my lips around both of them. Once they were in place, I started running my tongue up and down the very center, sometimes pushing up between them and splitting them into my cheeks. Hal squirmed above me. \n\nVera spent a minute lubing up her dicks. Hal's camerawork was better than expected. It's great to hear him breathing hard in the recording, even though he was still soft and his dick was just draped over my chin. \n\n\"What do I do if she stops tonguing me?\" \n\n\"Lets see how long she can go first,\" she said. She'd finally gotten her strapon all ready to go. She clicked on one, and then the other vibrator, and paused for a moment with her eyes closed as they hummed to life. It only lasted for a moment though, and soon enough she was squaring away. She lifted my thighs up so they were at a 90\u00ba angle from the table, and lined up the anal dildo. I felt that press against me and whimpered a little. \n\n\"Quit your bitchin. Haven't even gotten started yet.\" With a quick thrust, the anal dildo is in. A second later, I feel the pussy dildo, the bigger one, push up against me, but she didn't hardly wait for that one. Good fucking God...That thing was twice as thick as Hal. I couldn't stop a groan from escaping, but I was more than a little worried about what Vera had planned for punishment if I let up, so I kept working on his balls. I pushed one off into my cheek andjust focused on the right one for a while. \n\nHoly fucking shit, those dildo's felt good, but they were fucking BIG. Vera didn't spend long letting me get used to the size before pushing the whole nut deep inside me. My hands flailed out and found the edge of the table. \n\n\"She's white knuckling it already,\" Hal said. \n\n\"Well she's got a long way to go,\" Vera replied, and she quickly ramped up the speed. Fucking hell! My dick had been pretty soft at the start but it was getting harder, and she was going so fast it started thumping up and down against my stomach. Sometimes, I forget how heavy it is... I started to get lost in the cacophony of tainted pleasure... \n\n\"She stopped!\" Hal exclaimed. \n\n\"Abuse one of her tits.\" I whined around his balls, and my tongue started up again, but it didn't stop him. He grabbed my nipple between two of his knuckles and lifted the whole thing up. It's a lot of fucking weight. The stretching was exquisite...but then SMACK!! His other hand came down open on my extended boob. \n\n\"Seems a shame to stretch these things out,\" he said. \"They're a goddamn miracle.\" \n\n\"Oh don't worry about them. &lt;grunt&gt; She pampers the hell out of them. &lt;grunt&gt; She's found this &lt;grunt&gt; moisturizing cream for women who just gave birth &lt;grunt&gt; to help things tighten back up. &lt;grunt&gt; She uses it daily.\" Vera's strapon was gloriously debasing my pussy and ass, and my cock was hard enough that it didn't thump anymore, it smacked. \"Jaimie, you need to tell me when you're gonna cum, you got it?\" \n\nA quick \"MmmHmm!\" was all I could manage around his balls. The short fuzz of his pubic hair was starting to grate on my tongue. Hal grabbed my other tit by the nipple, and picked the whole thing up. Oh god, he was really stretching it! Fuck, it's fucking heavy!! I had to arch my back up off the table... Fuck fuck fuck. I groaned around his balls, and started licking again, but he kept me hanging by the tit. Fuck, they're both so big... I can feel tears running down my temples... \n\n\"Oh my god, give me the camera,\" Vera said. Hal passed it to her, and Vera zoomed in on the dildo going in and out of my asshole. \"I don't even know what thats called, when the edges of the asshole get all red and swollen, and every time you pull out, it kinda comes out too. I don't know what it's called, but it's fucking hot.\" It feels sooooo fucking good... \n\nSMACK! \n\n\"Did she stop licking again?\" \n\n\"...no?\" \n\n\"I like you, Hal.\" \n\nI spit Hal's balls out of my mouth and gasped for air. It'd been hard to breath down there. \n\n\"Are you about to cum?\" \n\n\"Yeah!\" I said, exasperated. \n\n\"I want you to kiss your dick. Hal, help her up.\" I started to sit up, and Hal cradled my head. \"Do not wrap your lips around any more than is necessary, but you're going to swallow every drop.\" \n\nI nodded. It's not hard to get my lips right up to my dick, but staying there takes some serious ab muscles. Vera continued to pound my aching holes. She should have added more lube a good 5 minutes ago...They're both so fucking big... \n\nSuddenly, it started to come. I got my mouth down to just the tip. Hal helped hold me in place, and my mouth was filled with my own spunk. Glob after glob after glob, in waves and ropes and spurts. I swallowed the first mouthful, but I knew I wasn't done. So salty today... I ached to go further down, to wrap my lips around more and bath it in saliva, but Vera's twisted grin made me think it wouldn't be worth disobeying. A second mouthful swallowed. Hal was whistling from behind me, holding the camera off to the side to get a good shot of me drinking down my own cum. Not quite a third full mouthful before I finished. Hal helped me lay back down, but Vera hadn't slowed a hair. \n\n\"Hal, if you're ready, shove your dick down in there.\" \n\n\"Wait, whuuummmmmmmmmmmm!!\" Hal was ready, and without any hesitation, he straddled my head and shoved his cock down into my mouth. He didn't quite reach the back of my throat, but he was thick enough to give my mouth some trouble. His balls sat on my nose, and my own saliva dripped all over my face. After a few seconds of sitting all the way down, he started fucking my mouth. I don't have the angle to help him, so I just tried to keep my lips tight and my teeth clear. \n\nMy dick had gone back to thumping against my stomach as Vera got a second wind. She wasn't moving quite as fast as she had before I came, but she was more than making up for it in power. Each time she plowed me, the whole table shook more than a little. They're both so fucking big... Christ! I had something in every hole I could take something in, and it was fucking amazing... \n\nFinally, after a few more minutes of that, Vera began to wind down. \n\n\"What's wrong?\" he said. \n\n\"Nothing, I just finally orgasmed. It takes a lot longer with just these two vibrators, but they get the job done.\" She really seemed out of breath. I couldn't believe she had the stamina to keep going like that! It'd been almost 10 minutes! Thank god though. My ass was on fire, and my pussy just ached. Hal has moved so that he was hovering over me, and he was reverse cowgirling my face. \n\n\"Should I keep going?\" \n\n\"Oh, by all means. Go until you cum.\" \n\nMy legs dangled off the table, exhausted. My cock was draped over my leg, little bits of late cum sprayed all over my stomach. My hands clung to the edge of the table again, but they were tired too. My tongue was on fire, exhausted from use and sore from his balls. \n\nHal fucked away from another few minutes. When he finally came, it was a small load. It didn't quite choke me to take, but I was so tired. Hal groaned and really bore down on my jaw. Once he was done, he finally got up. I laid there on the table for a few minutes, breathing deeply and easily for the first time in 20 minutes. Everything was on fire. Exquisite. \n\nVera came over and knelt next to the table. \n\n\"Hey, are you ok?\" \n\nI nodded weakly. Smiled even more weakly. \n\n\"I got a little carried away. I'm sorry.\" \n\n\"It's alright,\" I croaked. My mouth was so dry... \"I'm sorry too. Are you alright?\" \n\n\"Oh, I'm fine. C'mon,\" she said, lifting one of my arms. \"Lets get you over to the bed. Hal, you're welcome to stay for a while, but we're done.\" \n\nShe helped me off the table and onto my feet. Ooooo, man, she tore me apart. I hear the door close, and Hal was gone. \n\n\"And that is how you break in a virgin,\" she said, laughing. We got to the bed, and Vera helped me under the covers. \n\n\"We've gotta stop this fuckfighting thing...\" I said as Vera turned on the TV. \n\n\"Hey, you started it.\" \n\n\"Lifetime movie of the week?\" \n\n\"Absolutely...\""
    ],
    "authorname": "AwkwardMD",
    "tags": [
        "threesome",
        "mff",
        "futa",
        "dickgirl",
        "anal",
        "virgin",
        "first time"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-ballad-of-jaimie-and-vera-ch-03"
}