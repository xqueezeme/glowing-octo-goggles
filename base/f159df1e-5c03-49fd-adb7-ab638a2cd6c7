{
    "title": "There and Back Again Ch. 065-066",
    "pages": [
        "Chapter Sixty-Five: Explanation \n\nBy morning, I had porridge going and we actually had some fresh fruit to serve with it, thanks to Aedan picking up some supplies at the Tower; I was quiet, but that had become normal, and no one seemed bothered. Aedan was a little upset that I had taken his watch, but when I told him about my broodmother dream, he was sympathetic. How Grey Wardens survive thirty years without going mad from sleep deprivation is nothing short of miraculous. \n\nWe packed up and headed to the dock for the Circle Tower; Kester rowed us over four at a time, which took a while. Once we were all assembled, we sent Dariel and Morrigan straight to the Tower's boat with all of our gear, and the rest of us went inside. Dariel seemed close to wetting himself. Keep the apostates as far from the Circle as possible, thanks. \n\nWe got a lot of interesting looks from people prowling the halls, and I guessed the gossip of our arrival must have spread, because there were more mages and templars wandering through the foyer than I thought would have been usual. Shale drew a great deal of attention, as did Sten and Gorim, for their obvious physical differences from the elven and human crowd; even Tomas was stared at, and I noticed that all of the 'residents' looked exceptionally pale. The windows in the Tower were all high and tiny; the mages never saw direct sunlight. Tomas' dark complexion was as exotic to them as a giant, grey Qunari. I smiled. \n\nGreagoir, Wynne, and Irving finally appeared, and Wynne's face was like a thunderhead; behind them, shuffling along, was a tall, extremely emaciated, grey-skinned mage with greasy blond hair in a loose ponytail. He looked like he hadn't eaten in months, or bathed for that matter; as he got closer, I saw that the whites of his eyes were bloodshot, and he was squinting owlishly as he walked. His shuffling gait looked unbalanced and uncomfortable, and I guessed that he was weak from months of incarceration. \n\n\"Anders?\" I covered my mouth with my hand, trying to hide the horror on my face. \n\nThis is Anders? What in the hell did Greagoir do, throw him in there and forget about him? I couldn't reconcile my memory of the healer from Awakenings, or even DA2, with this gaunt, weak creature, until he looked up when I said his name, and I caught his eye. Ah, there you are. \n\nI smiled, trying not to look as though his condition made me feel ill; Greagoir gave him a bit of a push so he came to stand by me. \n\n\"This woman has taken responsibility for your actions, mage. May the Maker have mercy on both of you if I hear that you have betrayed her faith in you, because I certainly won't.\" Greagoir turned away, signalling to the templars around him; they began to herd the curious mages out of the foyer, and soon we were alone. Even Irving left, with one last concerned look. \n\nTomas approached Anders, his expression concerned. \"Anders? I'm Tomas.\" \n\nWhen the mage barely even acknowledged him, Tomas tried again. \"Anders, will you be safe to travel? We are leaving by boat as soon as possible, and I need to know if you can make it.\" \n\nWhen he looked up, his eyes flashed, but his voice sounded lifeless. \"Why don't you ask my templar jailor? It is her decision, after all. Oh, I should mention, I'll be due for another dose of magebane soon.\" \n\nI blanched, and realised that no one had explained to him what was going on. I looked at Wynne, desperate; she shook her head, and motioned towards the exit. I realised she was right; talking about it the details here was not going to solve the problem. But something needed to be said. \n\n\"Anders, my name is Sierra. I am not your jailor, and you will not be given any more magebane. We are leaving this place, and you will never have to come back. No one will hurt you or abuse you in any way, not as long as I draw breath. We can talk about this more once we are away from this disgusting Tower. The question is, can you walk that far, or do we need to carry you?\" \n\nHe looked at me, skepticism clearly visible in his expression. \"Well, I've never seen them actually use the 'good templar' part of the good templar, bad templar routine. Usually it's bad templar, worse templar.\" \n\nI snorted, relieved that somewhere under all the filth and abuse was the Anders I knew. \"Oh good, another comedian. Come on. Please. Just tell me if you can make it to the boat?\" \n\n\"I'll make it.\" \n\nI motioned towards the door, but stayed at his side; in this state, he looked like he was about to fall over at each step. And he smelled completely rank; I couldn't believe that Wynne hadn't at least gotten him a bath before we left. I glared in her direction, but her unhappy expression when she looked at Anders was motherly, not angry. I decided to give her the benefit of the doubt until I knew exactly what had happened. \n\nIt was a slow process, but we made it out the door, and across the small spit of land to the dock where the boat waited for us. Aedan and Alistair had to assist Anders climbing the gangplank, but he patently refused to be carried, and I couldn't blame him. The light seemed to bother him, so we hurried into a shaded area of the deck where he could be more comfortable. The captain approached us and spoke with Aedan, briefly; he then left to begin the process of casting off. \n\n\"Anders? What would you like first - food, a bath, or rest?\" He looked at me, obviously not trusting me. I couldn't blame him. \"Listen. We will tell you the whole story later, but Greagoir's full of crap. I may have templar skills, but I am not a templar. I'm not even Andrastian. I have no intention of being your jailor or watching over you. Did they even tell you you've been conscripted into the Grey Wardens?\" \n\nHe jerked at that, and seemed to think about it for a minute. \"A Grey Warden? Me?\" He looked away, then finally smiled. It was a small smile, obviously an expression he hadn't used in a while, but it was there. \"As in, outside of the Chantry's jurisdiction? I'm free?\" \n\n\"Yes-\" \n\nTomas spoke up, interrupting me. \"In some ways, yes. Free from the Chantry, free to use your magic for the good of Ferelden, free from persecution. Grey Wardens do not discriminate against mages; in fact, we value mage recruits highly. But you are still a Grey Warden recruit, and you were conscripted, not a volunteer. There are expectations of you that we will explain later. I will not lie to you - Joining the Grey Wardens requires great sacrifice, and it changes you forever. There is no going back.\" \n\nAnders nodded, looking sort of dazed. I cleared my throat. \"My question remains. Bath, food, or bed?\" \n\n\"I think...all three of those, in that exact order, if you don't mind.\" \n\n\"Deal. I'm guessing there's not an actual bathtub on this crate, but I'll go find out. If not, Aedan, could you find Anders a cabin of his own, and I'll bring some water?\" \n\nAedan nodded at me. It seemed everyone was happy for me to take charge of this situation, no one quite sure where to start. I figured if I could just make it seem like everything was normal, we'd get where we needed eventually. \n\nThere was a crew member standing nearby, and Aedan and I approached him together. \"Can you help us?\" \n\n\"Probably, my Lady. I am Piers, the Bosun for this ship. I can help you get settled into cabins, show you around, whatever you require. I am at your disposal.\" \n\n\"Is there somewhere for someone to have a bath? Like, a real one?\" I asked. \n\nHe explained that there was no tub, but each cabin had a basin and towels for cleaning, and he told me where to go to get hot water. Aedan then had him escort them all to cabins, and I took off to get the water. It didn't take long to find a large cauldron of water in the back of the galley boiling, and I grabbed two large buckets of hot water and headed back to where the guest quarters were. \n\nThis was more like a cruise ship than a cargo boat; I could barely feel the movement as we pulled away from the dock. To my amazement, there were about a dozen cabins available for us. There were two cabins with open doors when I arrived; one was empty, but I spied my pack sitting on a chair, and the other held a very exhausted looking Anders. The cabins were tiny, as I would have expected, but at least they had doors, unlike where he'd spent the last several months. \n\nI put the buckets down, and he didn't even acknowledge me; hurrying back to my room, I dug through my pack until I found some soap and shampoo, and brought them to him. \n\n\"Listen, I'm going to go change out of this armour, and then head to the galley and find some food. I figure we might as well use the Tower's supplies since we're on their boat. Why don't you clean up, and join me there whenever you're ready? I'm sure that bosun guy can point you in the right direction. Do you need help to get cleaned up, though? I can coerce one of the guys to help, I'm sure, if you need. Do you have clean clothes to wear? Do you require healing?\" \n\nHe gestured to a pile of cloth, and I recognised Alistair's spare tunic on top. \"I'll manage on my own for cleaning, and as for healing - my magebane is wearing off. I'll be fine. So, you're just going to leave me in here, alone?\" \n\n\"Um, that was my plan...oh crap, I didn't even think - you've just been in solitary for months. Would you prefer I stay? Or I can go get Wynne...\" \n\n\"No, no. I'm just surprised. You're not quite the templar Greagoir told me to expect.\" \n\n\"Like I said, I'm not a templar at all. That was just the show we needed to put on so that Greagoir would release you.\" \n\n\"Why?\" He looked so vulnerable, and I wanted to hug him. And then I remembered how bad he smelled. \n\n\"After your bath, nosey-pants. I promise we will tell you everything. Come find me in the galley. And, Anders?\" He nodded. \"You can close the door. Lock it, even, if you like.\" \n\nHe actually grinned, and I left the room smiling. \n\nWhen Anders found me, Leli and I were up to our elbows in food. The boat was amazingly well-stocked, and while apparently there was no cook, that gave us free rein in the kitchen. I made a salad, with actual fresh vegetables, and there were potatoes and salted beef. Leli made some sort of meatloaf thing, so I started baking cookies. It was harder than I was used to - digital stoves have definite advantages - and we didn't have any chocolate chips, but the result wasn't bad, even by my estimation. \n\nAnders was clean, his hair damp and tied back tightly, his skin slightly pink from scrubbing. The clothes he'd borrowed from Alistair were long enough - I guessed the two men were similar in height - but the warrior had obviously a much different build than the gaunt mage. He had the pants held up by a thin rope, and looked like he was swimming in the tunic. Despite that, he somehow looked graceful and elegant, and I smiled. \n\nAnders sat at a table, watching us with amusement; Leli was alternating between singing bawdy drinking songs and telling tales of past seductions, trying - successfully - to make me blush. When he came in, I grabbed a plate and put some cheese and fresh fruit on it for him to munch while we cooked. He looked positively shocked at the quantities of food we were piling onto the counter. \n\n\"Exactly how many of us are there?\" he finally asked. \n\nLeliana and I locked gazes, doing a head count. \"Aedan, Alistair, Tomas, Wynne, Morrigan, Sten, Zevran, Dariel, Gorim, and the three of us? Plus Shale, but she doesn't eat. And Prince, who does. So fourteen all told, but twelve for lunch, plus one under the table.\" He looked confused, and I giggled. \"Prince is a mabari.\" \n\n\"I hate dogs,\" he whined. \n\n\"I know. You're a cat person.\" \n\nHe turned a skeptical eye on me. \"So you're supposed to be some sort of mind-reader? Maybe I'm just not a pet person.\" \n\n\"Call it a talent.\" Leliana giggled, and I smirked at her. \n\n\"You still haven't explained why there's enough food for double our numbers? Or are you cooking for the crew as well?\" \n\nLeliana and I locked gazes again, and she sighed. \"I'll grab some more beef.\" \n\n\"I've got the potatoes! In answer to your question, there are thirteen of us eating, but three of those are Wardens, one is a Qunari, and one is someone who I'm guessing has been starved for months. Don't worry, all the food will be eaten.\" \n\n\"If this is what you always eat like, you must spend a fortune on food.\" \n\n\"You have no idea. But when we're on the road, things are a lot leaner, so we've learned to make the best of it when we're somewhere we can indulge.\" \n\n\"So...I'm to be a Grey Warden?\" \n\n\"Yes. I'm sorry. It's not as good as true freedom, but it's a lot better than the Circle.\" \n\n\"I think it will work. It's a good cause, at least. There are worse things I could be doing.\" \n\n\"Like starving in a dungeon?\" \n\n\"And not bathing. Yes, just like that.\" I smiled, and he returned it; it looked a bit ghastly, with how thin he was, but I was grateful to see it anyway. \"So when do I get to hear the whole story?\" \n\n\"Once everyone is here. Which reminds me, where is everyone?\" \n\nLeliana replied, \"Maybe they all fell overboard?\" \n\n\"Now that would be a shame. Wait, I know.\" I whistled, one loud, piercing note, and then waited. In two minutes, Prince came bounding into the galley, and I patted his head. I held up a piece of beef barely smaller than his head. \"Prince, if you can go find everyone and get them here in the next ten minutes, you can have this, plus your supper.\" \n\nHe barked, wagged his tail, licked my hand, and ran off. I laughed. \n\n\"Maker, I love that dog.\" \n\nAnders, suddenly looking wary, asked, \"I thought you weren't Andrastian?\" \n\n\"Oh, I'm not. It's just that I'm picking up habits from my Andrastian friends. I wasn't religious before I came here, either, but I used to say 'oh my God' all the time, anyway. It seems to me that when people are swearing by Andraste's panties, or her flaming sword, or whatever, that they're not exactly trying to be pious.\" \n\nHe relaxed again and actually laughed. \"That's the truth. I just...you're really not what I thought you'd be.\" \n\n\"Considering you thought I would be a stuffy, mean, Chant-spewing zealot, that's not saying much.\" \n\n\"You've got a point.\" \n\nJust then, Aedan and Zev arrived, and shortly we had a wave of people show up. The galley, fortunately, had been designed with multiple passengers in mind, and there was enough seating for everyone. \n\n\"Where's Shale?\" I asked. \n\nAedan chuckled. \"Standing on deck. The Captain was worried if she moved too far to one side, she'd overbalance the boat. I doubt that's true - she's not that heavy, if she was, she would collapse the floor when she walked - but she seemed concerned, and decided to stand right by the mast. Just in case.\" \n\nI sighed. \"We're going to owe her some more shiny stones in appreciation, aren't we?\" Everyone just laughed. \n\nWe all quieted down as we ate, and I gave Prince his extra beef surreptitiously when Aedan wasn't looking. Leliana took a large platter of food out to the Bosun to distribute to the crew, and he was apparently quite moved by the gesture. True to my prediction to Anders, the food disappeared in a surprisingly short time, and I snickered when I noticed Anders watching with big eyes. \n\nAfter we ate, Tomas looked to Anders. \"You feel up for a discussion, or do you need to rest?\" \n\n\"I'm good here. Fairly desperate to understand what's going on, though.\" \n\nTomas nodded, and excused everyone from the galley except Aedan, Alistair, Wynne, and I. We all gathered around one table; I was between Anders and Aedan, with Wynne directly across from me. \n\nChecking to make sure we were alone, I glared at Wynne. \"What the hell, Wynne? You said you'd take care of him, last night.\" \n\n\"Yes, well, that lasted until we were out of sight of the camp; Greagoir said that he might be recruited the next day, but he wasn't taking the chance of letting Anders loose in the Tower overnight. Irving and I argued with him, but there was no changing his mind. I never dreamed what we'd find when he sent two templars down to the dungeon this morning to bring him up.\" \n\nShe turned to Anders, and he stiffened slightly. \"I am very sorry, Anders. Greagoir failed you. Of course, he was as surprised as I when you came up, but I still hold him responsible for not checking to see that you were cared for appropriately. I initially opposed your conscription, but I begin to see that Sierra may be right - you need to be out of the Circle.\" \n\nAnders' puzzled eyes turned to me. \"Have we met, or something? Because I get the impression you came for me specifically, and went out of your way to do so, but I can't imagine why if you don't even know me.\" \n\nWynne excused herself, and I leaned against Aedan before explaining. I told him about Earth, and the game, me being in Ferelden, and his conscription after the Blight was over. He seemed to take it all in, but I knew we'd need a private discussion at some point as well. I was relieved to see him get along well with both Aedan and Tomas; by the end of it, he was poking fun at them, and they were chuckling. He reminded me of Alistair, and by the glower he was receiving from the templar, it seemed I wasn't the only one who noticed. \n\nAfter lunch, Anders slowly limped back to his cabin, and I went up on deck to talk to Shale. She had moved around a bit without tipping the boat, but she had trouble on stairs at the best of times, and seemed content on deck. She was fascinated by the water, and I thought it would be interesting to see how she'd react to the ocean. \n\nI found Tomas on deck as well, and he asked me to do some sparring with him - without weapons or armour. It was mostly a good way to keep limber without cutting each other accidentally when the boat rocked. We both got to toss each other around a bit, but it felt more like yoga than anything, practicing moves side-by-side. Eventually Zev and Aedan joined us; it must have looked strange, as we had a bit of an audience before the bosun chased them all away. \n\nI went to my own room after, and decided to have a quick nap; I had just climbed onto the bed when I heard shouting. I ran out into the hallway, to see Aedan standing there, eyes wide as we both looked around. It happened again, and we realised the sound was coming from Anders' cabin. I darted over to the door and tried the handle, only to discover it was locked. I started knocking instead. \n\n\"Anders?\" No response. \"Anders? Can you hear me? Open the door.\" \n\nA muffled grunt came through, and then the door unlocked and swung open. Anders stood there sheepishly. \n\n\"Um, sorry about that.\" \n\n\"Bad dreams?\" He nodded, and Aedan and I looked at him sympathetically. \"We understand. Can I do anything for you?\" \n\n\"I wouldn't...I wouldn't mind some company, until my heart slows down again.\" \n\n\"Male company? Female company? Both?\" I was teasing, and from the gleam in his eye he knew it. \n\n\"No offense, Aedan, but I would have to be crazy to turn down the presence of such a beautiful woman, especially if she's offering.\" \n\nI heard a growl, and looked down the corridor to see Alistair, face red, lips pulled back in a snarl. I wanted to grin, but that would be too unkind. Aedan, looking amused, pushed me through Anders' door and closed it behind us, and I heard his footsteps recede in Alistair's direction. I sighed. \n\n\"I really stepped in it, didn't I?\" Anders looked uncomfortable. \n\n\"No, not really. He did.\" \n\n\"Oh, poor man. Nothing quite like a jealous former lover. Dare I ask what he did?\" \n\n\"I'd rather not talk about it.\" My playful mood was completely gone. \n\nAnders reached out and touched my shoulder gently. \"I'm sorry. I was only teasing, not trying to...\" \n\n\"I know. Me too. It's okay.\" I gathered my willpower and forced a smile onto my face. \"That's enough about idiot almost-former-templars. Want to talk about your dream?\" ",
        "Anders gestured, and then climbed up to sit cross-legged on the bed as I sank into the only chair. \"I really don't. He's a templar, too?\" \n\n\"Not really. He was an initiate, but was recruited before he took his vows. Honestly, he'd have been a terrible templar. Not that he isn't talented, but he doesn't have the mindset.\" \n\n\"That's sort of reassuring, I suppose. So how did you come to be a templar? I wouldn't have thought they'd teach those sorts of skills in a world without magic.\" \n\n\"Apparently it's all about inherent resistance to magic. I have lots of that. No training, though, so I'm terrible at most of the common skills. I couldn't smite to save my life.\" \n\n\"Which implies there are uncommon skills?\" \n\n\"I can drain your mana. Like, entirely. More like lock it off where you can't use it, I suppose. And when I do, I can put up shields on my friends. There's more, but I don't know how to control it, so I don't do that much. It comes in handy when we run into darkspawn mages, though.\" \n\nHis eyes were big. \"That's...horrifying. I knew templars were bad, but...\" \n\n\"Hey! It's not like I chose it. And I'd never do it to someone who wasn't, you know, trying to kill me.\" \n\n\"I'll keep that in mind,\" he drawled, wryly, and I giggled. \n\n\"Besides, most of the templars aren't strong enough to do what I can. Alistair and perhaps a handful of others across all of Thedas. I think you're safe.\" \n\n\"You've been teaching them?\" His voice was somewhat high pitched, his expression panicked, and I sighed. \n\n\"It was the cost of getting you out. But like I said, most aren't capable. Even Greagoir couldn't manage the shield.\" \n\n\"I'll bet he was thrilled about that.\" \n\n\"Yeah, not so much.\" We shared a grin, and then fell silent for a few minutes. I studied his face, so different when clean, but still far too thin. I wondered if we should fatten him up prior to his Joining. He finally interrupted my musing, clearing his throat, and I realised I'd been staring. \n\nI flushed. \"Sorry. It's sort of surreal, meeting people for the first time when you already know them. You'd think I'd be used to it by now.\" \n\n\"So you know things about me?\" \n\n\"Not a lot of detail, no. Bits and pieces.\" Did Anders ever talk in much detail about his time at the Circle? Not for the first time, I cursed myself for not playing DA2 more often. \"Let me think. I know your real name isn't Anders, but I don't know what your real one is. I know you were born in the Anderfels, and that your father was glad when the templars came for you. I have no idea how you ended up in Ferelden. There was a stray cat at the tower that you used to take care of. Mr. Wiggums, or something silly like that. I know you had a reputation, for, uh, let's call it...open-mindedness, and that Karl was your first, uh, companion. And that you don't believe in love, because if you care too much for someone, it gives the templars something to control you with, something to take away. \n\n\"I know you've escaped six times, but that each time they found you. You have never hurt anyone while escaping. Irving felt you could be trusted, at least not to turn to blood magic or make a deal with a demon. And you hate cramped, dark spaces. But I think that's all.\" \n\n\"That's rather a lot, actually. I was going to escape again?\" \n\n\"Did you ever doubt it?\" He laughed, and I grinned. \"Six escape attempts? One day you're going to have to tell me how you got out.\" \n\n\"Not a chance - you'll turn around and tell that busybody Greagoir.\" \n\n\"Not bloody likely.\" I scowled. \"If I see that bastard again, I'll probably push him into the lake in full armour.\" \n\n\"You weren't so reluctant to share things with him before.\" His expression was hesitant; not angry, but not trusting. I sighed. I could see it from his perspective, even if I knew I held no special regard for templars. \n\n\"I did the minimum required to get his agreement to let you out, Anders. Truly. And part of that agreement was that he would get you out last night, and you would be taken care of. He told us you were fine, healthy. Wynne went back to the tower for the express purpose of seeing you last night and explaining what was happening, and then he reneged. I owe him nothing. And for what he's done to you, I hope he burns in hell. I actually thought he just might be one of the good ones, for a while. I'm sorry to have been wrong.\" \n\n\"There are no good ones.\" \n\n\"There are, actually. Cullen, once he's recovered, for one, and a few others I can think of. And many of those I wouldn't count as 'good' I don't really blame - they've been lied to and frightened by the Chantry and brainwashed for so long, they don't know any better. But Greagoir should have.\" \n\n\"So what's going to happen to me now?\" \n\n\"Well, we're heading to Redcliffe, where you will become a Grey Warden, along with at least one other. Then all of us will travel to Orzammar to get the dwarves to pledge aid against the Blight. But, of course, they won't be able to help without sending us into the Deep Roads. Once that's done, it's back to Redcliffe, call a Landsmeet, and then defeat the Blight. My being here has changed a lot of things, so I'm not taking anything for granted though.\" \n\n\"What have you changed?\" \n\n\"I can't tell you all of it. Like I've said to everyone here, I know secrets about almost everyone, and it's not my place to spill those. But how much do you know about what's been happening with the Blight?\" \n\n\"Only a little. One of my jailors was a little nicer than the rest. He'd give me bigger rations, more water, that sort of thing. He told me a bit about Ostagar, and about Uldred's rebellion, but not a lot.\" \n\nI explained Loghain's betrayal at Ostagar, and the subsequent events. \"One major change is that Tomas wasn't supposed to survive. Apparently I saved him with one of those shield things, and then sort of...exploded some darkspawn. So more of the army survived as well, though that's only made the civil war worse. Loghain has declared himself regent, and the Bannorn aren't willing to just accept that. We've run into a couple of skirmishes between Gwaren forces and the 'rebels'. Another big change is that, because I know what's happening, lots of things have taken less time than they would otherwise. It was supposed to take over a year to rally the allies, but I think we'll be able to do that in half the time. Give or take.\" \n\n\"Is that good?\" \n\n\"Well, it's less time for the Blight to spread, and for darkspawn numbers to grow, but whether we can force the final battle to happen earlier is anyone's guess. At least it might buy us more time to prepare. And maybe find some more Grey Warden recruits? I'm not sure.\" \n\nHe thought about that for a bit before changing the subject. \"You said you know me after the Blight is ended. The way you've been talking around the subject, I'm guessing some of those secrets you don't want to spill involve me.\" \n\n\"They do. But I don't...think I will tell you. Some of the things that could have happened will hopefully be very different, now, and I plan to make sure that's the case for other things in future too. Telling you all of the things that could have happened, could have gone wrong...it won't help anyone. And it will only hurt you.\" \n\nHe examined my face for a moment. \"I do something really horrifically bad, don't I?\" he whispered. \n\nI tried to keep my expression neutral. \"Not on purpose. And I will not allow it to happen.\" \n\n\"I don't make a deal with a demon or something stupid, do I?\" I shook my head. Vengeance isn't a demon. Not exactly... \"Thank the Maker for small mercies. Does everyone else know what I will do?\" \n\n\"No. No one. All they know about you is that you're a healer, that you're well-meaning, and that it would be a really big waste to leave you stuck in the dungeon of the tower for another six months, only to recruit you in the end anyway.\" \n\n\"Thanks, I think.\" \n\nChapter Sixty-Six: Healing Process \n\nI headed back out after a few more minutes of idle chatter, happy with how things were going with Anders. He wasn't quite as angry or bitter as he was in DA2, but he was different than he seemed in Awakenings, too, even though he'd just come from the dungeon. Not that I expected him to suddenly love templars and be a devout Andrastian, but it was nice that he wasn't too bitter. \n\nWhen I thought about it, I was lucky with all of my companions. Shale had considerably mellowed towards me, Morrigan kept most of the nasty comments to herself, Aedan wasn't bitter at being conscripted, Alistair wasn't resentful about having lost Duncan or having to take the throne...the level of bitterness was much, much better than it could have been. I was relieved. \n\nI went looking for Wynne, finding her reading in a cabin of her own; when I knocked, she looked up expectantly and smiled. \n\n\"What can I do for you, dear?\" \n\nI was embarrassed, but clearly something had to be done about my...girl issues. \"Um, I need help with something.\" I was blushing, and she gave me a curious look. \n\n\"What's wrong?\" \n\n\"I'm just embarrassed. My, uh, monthly came. Last night.\" \n\n\"And that has you embarrassed because...?\" \n\n\"Well, mine have always been sort of...enthusiastic. I didn't know it was coming and it soaked through my clothes and blankets. Alistair saw. It was mortifying.\" \n\n\"I'm surprised this hasn't come up before now, then.\" \n\n\"My body at home was on medication that prevented them. I hadn't had a monthly in five years. They recently stopped the medication.\" \n\n\"Ah, that would make it awkward then.\" \n\n\"Yeah. So Morrigan gave me some potion to temporarily stop my bleeding, but she said I should talk to you about them being so heavy.\" \n\nShe shot me a sharp look. \"Don't use those potions often, do you hear me?\" \n\n\"I know, I know. They cause birth defects. Pregnancy isn't exactly something I'm concerned about at the moment.\" \n\nShe relaxed. \"At least she told you. So you were hoping I could decrease your bleeding?\" \n\n\"I would be forever grateful if you could.\" \n\n\"Let me just...\" I felt her aura flare, and she directed some sort of magic at my belly. \n\n\"Is that some sort of...diagnostic tool?\" \n\nShe nodded as the magic winked out. \"Ironically...we should probably talk to Anders. As much as I don't approve of him, he was the finest spirit healer in the tower, by far.\" \n\n\"I can't talk about this to Anders!\" \n\n\"Oh, youth.\" Her lips twitched, trying to suppress a laugh. \"He's a healer. He won't be embarrassed.\" \n\n\"I will!\" \n\n\"What about if I tell him? All you have to do is lay there.\" \n\n\"I...\" Oh, who am I kidding, I'll go through a lot worse than that to have better periods. \"Fine. But what exactly is it that's wrong with me?\" \n\nShe looked surprised. \"Well, your womb is...I don't know how to explain it to someone who's not a healer. There's some unusual blood flow, and the lining gets too thick. Anders will be able to redirect the flow so that doesn't happen. It often takes a couple of attempts to fix it, just so you know. And it can be...uncomfortable.\" \n\nI nodded, not exactly thrilled, but willing if it meant I wouldn't have to deal with the same problem again. \n\n\"There's one other thing I want to talk to you about.\" \n\n\"Oh?\" I looked at the healer, who had a suspiciously neutral expression on her face. \"What's that?\" \n\n\"Actually, it's more something to show you.\" She turned and lifted a brown leather tube off the small bedside table in her cabin. \"Don't open it now. Open it later tonight. Before bed.\" \n\n\"A gift?\" I raised my eyebrows in surprise. \n\n\"Of sorts. Now, scoot, young lady. Let's go find Anders.\" \n\nI dropped the tube off in my cabin, tucking it inside my pack for safekeeping, then followed Wynne back to Anders' cabin. She pulled him aside and whispered into his ear for a few minutes. I was red-faced and horrified, and he smiled softly at me, trying to put me at ease. \n\n\"Can you lay down for a second? It shouldn't take long.\" \n\nI nodded, and awkwardly crawled onto his bed. Wynne stayed, and I soon felt both auras flare, as the same evaluation scan Wynne had done to me before started. I closed my eyes and tried to pretend I wasn't there, imagining myself on a beach somewhere tropical, anything to keep my mind off the embarrassing problem I was having. At least there's no nakedness or stirrups or awkward physical examination involved. I purposefully didn't listen as they discussed what they were feeling, and then Wynne's aura faded. Anders' aura was similar to Wynne's but somehow deeper, or bigger; his flared higher and I felt warmth spread through my belly. \n\nSuddenly the warmth became heat and then burning, and I gasped, biting my lip to keep from screaming. I felt like he was burning my insides with a laser, and the target slowly moved throughout my abdomen. The pain got worse and worse, and I finally couldn't help the cry that escaped, before eventually passing out. The blackness was a relief. \n\nWhen I woke, it was much darker outside, if the lack of light streaming in through the window was any indication, and I had been moved. Disoriented, I looked around to realise I was on the bed in my own cabin. Sitting in a chair at my side was Anders, his expression anxious; across the room, leaning against the wall, was Alistair. Aedan sat on the bed at my side, holding my hand. \n\nI struggled to sit up, and Anders sprang up to assist me. They told me I'd passed out, which I knew; drawn by my cry, Alistair and Aedan had come running, and they decided to bring me back to my own room to recover. \n\nI could tell Alistair was furious at Anders; his mouth was pressed into a thin line, and his scowl could have melted plastic. Anders seemed amused by it, and I struggled not to laugh when his lips twitched every time Alistair sighed. \n\nAnders asked my permission to examine me to ensure the healing was done, which I granted; I watched as he ran another diagnostic scan. He then asked Aedan and Alistair to leave. Aedan got up without a word, squeezed my hand, and left. Alistair's scowl deepened. \n\n\"Why should we have to leave?\" \n\nAnders sighed. \"Look, some things are more...sensitive, than others, to heal. This could be embarrassing for her. It's bad enough with a healer in the room; infinitely worse with someone else.\" \n\n\"Do I have to get naked or something?\" I asked, suddenly nervous. \n\n\"No.\" He leaned over and whispered, softly enough that Alistair couldn't hear. \"This time it won't be painful. It will probably be the opposite. It's not uncommon for, uh, reactions to happen.\" I raised my eyebrows, and he chuckled. \"Don't worry. You'll like it, and I'll never tell.\" \n\nI whispered back. \"And now I know why you became a spirit healer.\" His laugh was infectious, and as embarrassed as I was, I couldn't help but join him. Alistair looked unamused and irritated, and it made me laugh harder. \n\n\"It's okay, Alistair. You can go.\" I gestured towards the door. \n\n\"I'm not leaving you alone with him.\" \n\nI sighed, giggling mood gone. \"You know what? Fine. Go ahead and watch.\" \n\nI laid back again, gave Anders a decisive nod, and closed my eyes. I heard Alistair close the door to my cabin. I felt the usual magic aura, and then suddenly gasped as the warmth started flooding my belly again. This time, though, it didn't feel like a laser; it felt like hands, stroking with just the right pressure, moving down, and down further. And then I was overtaken by pleasure, body writhing as the warmth pooled in my core. I tried to fight it, one part of my brain horrified as I groaned and bucked against the invisible fingers, but I had no control over it. I lay, shuddering, and the warmth finally receded, leaving me panting and my head spinning. \n\nWhen I finally opened my eyes, Alistair was huddled on the floor, head in hands, trembling, and Anders was looking at me, apologetic and anxious. I gave Anders a reassuring smile and sat up, feeling better, though extremely...frustrated. \n\n\"Did it work?\" \n\n\"Yes. It should be more normal, now.\" He looked over at Alistair, looked back at me, shrugged, squeezed my shoulder, and took his leave. \n\nI sighed and approached Alistair. \"Hey.\" \n\nHe didn't look up, just grunted in response. \n\n\"I'm sorry. I didn't know it would be quite like...that. I'd have insisted you leave.\" \n\n\"And leave that bastard alone in here with you like that? No.\" \n\n\"Alistair, he was healing me. Fixing that embarrassing girl problem I'd rather not deal with. He wasn't doing anything wrong.\" \n\n\"Right.\" \n\n\"I trust Anders. I know you don't, but try to think of Zevran. You don't have to trust him, but I'd like to think, despite everything, that maybe you still trust me? Besides, frankly, the first healing hurt like hell. If this is the alternative, I'll take it. And better him than Wynne, because that would just be creepy.\" \n\nHe stood up quite suddenly, and I took a step back in surprise. He reached out and cupped my face gently. \"I trust you with my life. I let him heal you, didn't I? I wanted to punch him in the face, but I didn't. But I didn't promise not to hate every man who looks at you with lust on his face, and I can't promise that I'll get better about that. That said...\" \n\nHe leaned in and kissed my forehead softly, then released my face and turned away. \"Leliana told me I should let you go. I have no intention of doing that. But she also said I'm hurting you, and that I will not do. So this is the last time I will bring it up. I picked one more song, but I'm done after that. I will keep it to myself, my love and my desire and my jealousy; I won't torment you with it anymore. But know this. I love you, and I always will. I don't expect your forgiveness. But if you ever need anything, I will be there.\" \n\nHe leaned over and placed my phone on the bed, then without looking back, walked away. I sat on the edge of the bed, dumbfounded. I decided to delay listening to the song, and instead rifled through my pack, pulling out the tube from Wynne. The smell of parchment and leather teased my nose when I popped the end off the tube, and a thick roll of parchment slid out onto my bed. I carefully unrolled it - parchment, while thicker than paper, is far more fragile - catching just a glimpse of an eye as it sprang back into the roll. I tried again and finally flattened the papers out. \n\nThe top page was a picture, drawn by hand, of Aedan and I, sitting together, laughing. There were shadows on our faces, making it look like firelight; Aedan had his arm casually around my shoulders, his head thrown back in a laugh. I was more restrained, but my eyes were scrunched with laughter, and I hid my mouth behind a hand like I tend to when giggling. I had what must have been a smear of dirt on my forehead, and my hair was coming undone from a braid or pony tail, curling crazily around my face. The detail was incredible; you'd have thought it was a photograph rendered into sepia tones with photo-editing software. \n\nI set that page aside to see another drawing, this time of Leliana, Wynne, and me around a table talking. The third was Aedan, Zevran, and me; the fourth Duncan and me. There was one of me sparring with Sten, one of Leli braiding my hair, one of me grinding herbs with Morrigan for potions. Each picture was perfect, capturing the mood of each subject, as well as the subtle details that make each person unique. \n\nAnd the theme was obvious - each picture was of me, with one of more of our companions. Until I flipped through a few more, and my eyes grew round. The bottom half of the stack of parchment was pictures of me alone. Sitting, eating, watching the fire, star-gazing. There was one of me sitting cross-legged on the floor of Soldier's Peak drawn from behind, shoulders stiff, head turned so that I'd just be able to see the observer out of the corner of my eye. I knew whose point of view the picture must have represented; I could recall sitting in a circle, discussing next steps, and feeling Alistair's gaze on my back. ",
        "The last few were the worst. Or best, I suppose, depending on your viewpoint. There was one of me asleep, hair mussed, mouth slightly open, head turned as though being cradled by someone. The expression on my face was peaceful, but somehow sensual; I could almost sense the artist's urge to kiss me. The next was less finished than the others. Again it was me, crouched down in front of a body of water, shoulders slumped, arms reaching out for a bundle floating in the water. I recognised it - it was me washing blood out of my clothes and blankets in the lake the night before. The only one who'd been awake at the time was Alistair; he must've followed me quietly to check on me when I'd asked him to leave me alone, and then spent the rest of the night drawing instead of sleeping. \n\nThe last one was a close-up of my face, pale and drawn, with dark circles under my eyes and tear tracks running down my cheeks. The expression on my face was fragile, lost, betrayed...I almost cried again, feeling the emotions strike at me, the sheer rawness of the pain portrayed was horrifying. \n\nI could come to only one conclusion: Alistair had a previously unknown hobby. And he'd been watching me - far more closely, and for longer, than I could have predicted. \n\nThe thought was sobering. He obviously understood how I felt; the emotion in his drawings were deep and mesmerizing. And from how often that last page had been handled, I could tell he'd been torturing himself with it frequently. I was surprised to realise how much I didn't know about Alistair. This Alistair, the real one - my Alistair, my heart kept insisting, though I'd given up on the concept, I thought - had depths and facets I'd never imagined when playing the game. It shouldn't have been so shocking, but it was. \n\nI rolled up the parchments and put them away, then picked up the phone, turning it on. He'd apparently done more than choose a song; he'd left the photos app open, and I glanced through the pictures and videos in my camera roll. Most of them had been taken the first day I returned with phone in hand; there were dozens of pictures of my companions, in all manner of goofy poses, and videos of people doing stupid things. I smiled as I watched Zev and Aedan horse around; there were even a couple of pictures of Morrigan looking content, smiling. \n\nAnd then I came upon a video I hadn't even realised someone had taken. It was Alistair and I, walking together. We were holding hands, and he was looking down into my eyes; he stopped me to lean down and kiss me, then press his forehead against mine. I looked radiant, and his smile was so loving it made my heart bleed. I was tempted to delete it, just so I could salvage whatever little shredded bits of my heart that remained, but I couldn't press the button. I close the app and flopped back on the bed, letting the tears come. \n\nCurling my legs up beside me, fetal position, I fumbled with the phone to access my music. 3 Doors Down played while I cried. \n\n<p align=\"center\">I'm here without you, baby \nBut you're still on my lonely mind \nI think about you, baby \nAnd I dream about you all the time \nI'm here without you, baby \nBut you're still with me in my dreams \nAnd tonight it's only you and me \nEverything I know, and anywhere I go \nIt gets hard but it won't take away my love \nAnd when the last one falls \nWhen it's all said and done \nIt gets hard but it won't take away my love</p>\n\nIt was perfect and sad, and goodbye. I knew he wouldn't push me, that he'd decided to leave me alone, and with sudden, perfect clarity, I knew I didn't want him to. Leliana had been right. If I'd wanted him to go away, I shouldn't have sent him back songs, shouldn't have responded at all. I had been angry, but I hadn't wanted him to give up. \n\nI almost got up to go to him, only to remember that look, the one I couldn't get past. That disgusted expression that screamed 'you're a monster'. No matter what I learned about him, no matter what he said, that mental image staggered me every time I thought about it. It was like being stabbed in the heart every single time. \n\nI curled up into a little ball, and cried. I'd done a lot of crying over the past several days, but this was possibly the most bittersweet of them all. Because I'd finally been able to admit that I wanted him back, I wanted to make it work...but I couldn't. \n\nI cried myself to sleep, missing dinner, and slept fitfully all night. I woke early, not rested but at least awake, when I felt a bump and the cessation of the vague movement that had been present since we'd left the tower. We'd arrived at Redcliffe. \n\nI got up and packed my things, leaving them by the door so they wouldn't be in anyone's way. I handed to leather tube containing Alistair's drawings back to Wynne without a word. Up on deck I saw Shale and exchanged silent nods, and got a quick hug from Zevran who was sitting in the bow watching the water in the dim pre-dawn light. No one else seemed to be up, so I went to the kitchen, starving from having missed a meal, and munched while I put out a plate of fruit, bread, and cheese for everyone to pick off of. \n\nTomas joined me, and we had a brief discussion about what we would do once we disembarked. He planned to conscript Jowan, given the improved chances of surviving the Joining, and send the three mages with Aedan to gather darkspawn blood. I begged him to at least make it a choice for Jowan; not only did it seem fair, but I thought that the irresponsible mage, for once, needed to take responsibility for his choices. If he was going to ever grow up, he needed to choose in an informed manner. Tomas finally agreed to at least warn him that it could be dangerous, and offer him the choice. \n\nOne by one the rest started filtering into the kitchen, ending our conversation; I threw Prince a piece of salted beef, and added a slice to a plate I handed to Alistair, without comment. I had to hide my appetite - we couldn't have anyone guessing I was a Grey Warden - nor was I keen for everyone to know I'd had some sort of intense healing to increase my food requirements, but I'd been able to snack enough while cutting up the fruit to just eat one large plate and blame not having supper the night before. \n\nTomas took Dariel aside and they had a quick, whispered conversation; Dariel shook his head, and I gathered that meant he had decided not to become a Warden. It was too bad; we could have used another healer. \n\nOnce everyone was fed, we collected our things and disembarked, thanking the bosun and the Captain for their service. I guessed by their broad smiles that Aedan had left them with a purse full of sovereigns. No one was at the docks in Redcliffe to greet us, being so early and our arrival unexpected, but the Castle was waking as we approached, and there were knights training and servants scurrying about in the courtyard and main foyer. \n\nWe found Eamon, Teagan, Theron, and Isolde having breakfast in the main hall, and they all jumped up when we arrived. They welcomed us back to Redcliffe, though the dirty looks Isolde shot at Alistair when she thought no one was looking made it plain hers was fake. It got my back up, and I had to remind myself that it wasn't my place to defend him, even if she was a bitch. \n\nTomas had a quick, whispered conversation with Eamon. Guessing what that was about, I turned away, and was suddenly scooped into a hug by Teagan. I laughed as he set me back on my feet, kissing my hand, before turning and doing the same to Leliana, Wynne, and even Morrigan. We all giggled like simpering idiots, and I knew the scamp had done it on purpose. Damn, you know you have to be charming to get Morrigan to giggle! He held on to my hand rather too long when he spied Alistair glowering at us, and smirked at me cheekily, one eyebrow raised in question. I just shook my head. \n\nA servant was sent to fetch Solona and Jowan, and others took our gear to our rooms. Once again we borrowed the Redcliffe library for a meeting space. I was standing in the hallway outside the library, chatting with Anders and ignoring Alistair's dirty looks at the blond mage, when he suddenly stopped, mid-sentence, his pasty complexion getting even paler, his mouth dropping open. \n\nI turned to see what he was looking at, and saw Solona standing there with Jowan, exactly the same expression on her face. It didn't take a genius to figure out that they knew each other. Jowan just looked uncomfortable and sad. \n\n\"Solona?\" Anders turned accusing eyes on me. \"You conscripted her? You didn't tell me it was her.\" \n\n\"I volunteered, Anders. And why would she have known that I knew you?\" Solona answered for me. \n\nHe looked down at me again, and I shook my head. \"No, I didn't know. And no, she doesn't know about my, um, talent for foresight.\" \n\nAnders looked back to her, and the expression on his face changed. It went from anger and shock to some sort of warm, painful longing. He stepped past me, walking towards her slowly, almost looking drunk. She watched him come, expression unreadable. When he got close, he reached out and took her hands, intertwining his own fingers with her. She allowed it, but it was clear she didn't squeeze back. \n\n\"Solona.\" His voice was a caress, exactly how I'd pictured it from the romance options in DA2. \"Love?\" \n\nShe pulled her hands away like she'd been burned. \"Love, Anders? Now, you would speak to me of love?\" She marched around him, and into the library. I winced on his behalf, seeing the stricken expression on his face. I reached out to pat his shoulder, and encourage him to follow us into the library. \n\nRealising it was Grey Warden business, the rest of our companions had scattered; Jowan went to follow them, but Tomas gestured for him to enter, leaving me in the library with Tomas, Aedan, Alistair, and the three possible recruits. We all sat, Anders watching Solona as hungrily as Prince watched a slab of meat, and the beautiful mage ignoring him entirely. Tomas cleared his throat. \n\n\"We came back, because we are now able to move forward with the Joining. Solona and Anders, you are recruits. From here on in, you will comport yourselves as Grey Wardens. You are no longer volunteers, and you cannot choose to leave. Jowan, I bring you a choice. Arl Eamon has decided to send you back to the Circle, where you will be made Tranquil.\" \n\n\"I figured as much.\" To his credit, he didn't rail against his fate. \"I deserve nothing more, after all I've done.\" \n\n\"I bring you another choice. I can, instead, conscript you to the Grey Wardens. We do not discriminate against blood mages as the Chantry does; you would be outside their purview. However, I will also warn you, as I have done for Solona: becoming a Grey Warden is dangerous, and changes you forever. Fate may choose for you to make your sacrifice now, instead of later.\" \n\nThe mage sat thoughtfully for a few moments. \"I am honoured by the offer.\" He was oddly formal, without whining. Solemn, even. I was impressed. \"I accept. I would like the chance to make amends for what I've done, and that will be difficult as a Tranquil. If I die, death will be my atonement.\" \n\nTomas nodded. \"Then this is what we must do. Aedan, you must ready your charges for battle: get them fed and equipped as best you can from the armoury here and the blacksmith in the village. Tomorrow at first light, the four of you will head east, towards Lothering, until you find darkspawn. You will each gather a vial of darkspawn blood from your own kills. When you return, we will see to the Joining.\" Tomas gave a coin purse to Aedan to buy what he needed; it was the same one Aedan had given to Tomas after Denerim. \n\nThe predictable questions about what they required darkspawn blood for ensued, and Tomas dodged them, as always. I could see, though, that they all had a good idea; honestly, it wasn't exactly rocket science. Aedan rounded the three mages up, introduced them all to Prince, and headed up to the armoury to find what they needed. The rest of us were to have a couple of days of rest while we waited for the recruits to return. I wondered what would happen between Solona and Anders while they were gone."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-65-66"
}