{
    "title": "The Twelve Zenati Pt. 09",
    "pages": [
        "Authors note: Hello everyone. I hope you have been enjoying this series of the Tables. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n***\n\n\"Look, I wish that I could let you off easy, Gideon,\" Leighton said with mock sincerity. \"But Lydia would know, and I have to live with her while you get to fly away with my favourite sister, best friend and the nicest woman I know.\"\n\n\"You don't think that Lydia will be more concerned about that statement than anything you might or might not have said to me?\" Gideon chuckled.\n\n\"He hasn't done it yet, has he?\" Rick asked, walking into the room, frowning at his brother.\n\n\"I'm not even sure what he's trying to do or say at this point. I just want to see Vivienne,\" Gideon said, letting a little of his frustration cloud his voice as Rick sighed at Leighton.\n\n\"Okay, well let's see what I can do to expedite things. Leighton and I both know that you're not the moron you pretend to be, but I'll give you the benefit of the doubt and call you a moron because you managed to fuck things up with Vivienne once already. Now here's the thing. As her brothers, we have to let you know that, even though we have agreed that you are the aforementioned moron and you're bound to fuck up again, if you ever fuck up again so badly that she runs home without taking the time to pack then we will have to take issue with that,\" Rick said in a business-like tone.\n\n\"I see,\" Gideon nodded. \"Do you need a pinkie promise or something that I won't fuck up again?\"\n\n\"I was thinking more of a blood oath, but I guess a big girl like you would be more used to pinkie promises,\" Leighton agreed. \"Just don't fuck up again, okay? I don't want to have to ask Rick to go and kick your ass.\"\n\n\"I guess it stands to reason you'd send the scary little brother after me. Just don't forget that I have one of those myself, and mine is scarier than yours,\" Gideon chuckled. \"Tell you what, if I ever fuck up this badly again you can let me know when Rick's on his way, and I'll organise a cage for him and Gen.\"\n\n\"Shit,\" Rick shook his head. \"You're on your own this time, Leigh. I'm not taking on Genesis Zenati in a cage fight.\"\n\n\"Don't worry. I am prepared to pinkie swear that I will do my best not to make another major fuck up, ever again. Small fuck ups are inevitable though,\" Gideon said sincerely. He knew he had blown it even inviting his mother to the city for dinner to introduce her. He should have listened to his brothers but she had never interfered like this in his life before, and he couldn't believe that she had done it even now.\n\n\"And, maybe try not to make the minor ones either,\" Leighton suggested. \"It's not that hard to keep the girl you love happy. Just always have an apology handy for any occasion and use it, even if you're not sure you're in trouble.\"\n\n\"And for fuck's sake, when you see her tonight, don't put your foot in your mouth by staring or saying something stupid,\" Rick advised.\n\n\"Saying something stupid at the worst possible time is sort of what I'm good at,\" Gideon lamented and sagged in his chair.\n\n\"This time, count to ten before speaking or doing something stupid,\" Leighton chuckled. \"Poor bastard. I almost feel sorry for you. You have no idea what you're walking into by insisting on coming here today.\" He turned toward the door which had just swung open, despite his asking for a few minutes of privacy.\n\n\"Leighton, seriously man, I think Lydia has finally lost her mind. Do you know what she did today?\" Teddy asked as he ambled into the living room of the large house.\n\n\"It's his fault. Send the bill to the Zenati,\" Leighton grumbled good-naturedly but gave his brother a look to silence him from saying anything else.\n\n\"What did I do now?\" Gideon complained. \"Shit, I can't catch a break with his family. Just give me what I came for and I'll be going.\"\n\n\"It's not mine to give you,\" Leighton shrugged. \n\n\"What did he come for?\" Teddy asked Rick.\n\n\"Vivienne,\" Rick grinned.\n\n\"Our Vivienne?\" Ted asked, not understanding what was going on. He loved his sister, and he knew Vivienne was great, but she was shy and awkward with everyone aside from her siblings. Even then, not everyone made her feel comfortable enough to be herself. \"What did she do?\" he asked, bristling protectively and thinking that she must have done something while in Darwin that required her to return and apologise or fix the mistake, with an escort no less.\n\n\"Ran away when Gideon proposed,\" Rick smirked, enjoying the look of shock on his brother's face.\n\n\"Seriously?\" Teddy breathed, unsure if Rick was joking with him. \"Our Vivienne?\"\n\n\"Why do you find that so hard to believe? You found someone who could love you, and that's far more improbable,\" Rick chuckled. \"Your wife's a saint. You know that, right?\"\n\n\"Oh, I know,\" he nodded but froze as Vivienne appeared in the doorway looking amazing. He had to blink to be sure that he was seeing her properly.\n\n\"Viv!\" Gideon croaked, his throat feeling constricted as he came to his feet. Her hair was loose, and he couldn't remember if he had ever seen it that way before. He was sure that he hadn't known how long it was or just how softly it curled about her face and neck when it wasn't being pulled back severely into a tight dancer's bun or chignon. Her eyes seemed bigger and brighter, as did the lips that curved into a small, soft smile. \n\n\"Gideon.\" She returned his greeting and stepped toward him. She'd wanted to see him since she had heard him arrive, but Lydia had held her back, forcing her to take her time and make him wait while Leighton spoke with him and possibly threatened him while explaining that hurting his little sister again was not an option. She was conscious of the way her brothers watched her enter the room and grimaced. \n\n\"Do you think you could give us a minute before we go outside?\" Vivienne asked and turned an imploring gaze on Leighton, who nodded and herded his brothers toward the door. She looked at the man for whom she wanted to throw all her logic away. They'd spoken several times last night, including her call from Olivia. They'd made all their accusations and faced the recriminations and then made their apologies. She wanted the fairy tale he offered her. She wanted the happily ever after that came with marrying a man who came from a family where there had never been a divorce nor even a hint of scandal between couples. She wanted him, even though she knew she could never be enough, never be the type of woman he should be with, and knowing in advance that he would, in time, regret being so hasty in his decision to propose. Still, she had decided to take a chance on the love-at-first-sight curse that she had learned afflicted the men of the Zenati table.\n\nSmoothing her hands down the sides of the simple but figure-hugging dress, she looked at the door until it closed firmly behind her brothers, then turned back to Gideon who had moved to stand directly behind her. She gasped as she came face to face with him. The look in his eyes was hot and intense as he reached up to cup her face with both hands and kiss her. What started as a gentle brushing of lips quickly deepened until her lips parted under his insistence and their tongues met in a tangle of heat and urgency, savouring each other. Her arms wrapped around his neck as his hands went to her hips, pulling her tighter against his body. After long minutes he broke the kiss and pulled her closer so his lips skimmed her jaw to nuzzle breathlessly at her ear.\n\n\"I missed you, and I need you to come home with me, right now,\" he urged. \n\n\"Lydia went to so much trouble for dinner,\" she whispered, hearing her own voice thick with the same heat and need she felt from him. She had never experienced this kind of pull and need before and it both frightened and thrilled her. \n\n\"Fine, then let's go eat. Just promise me that you will eat fast,\" he grumbled, and taking her hand, started toward the door. \n\n\"Gideon, wait!\" Vivienne dug her heels in, making him stop and turn toward her curiously and slowly raise one eyebrow. \"Ask me again,\" she blurted, not quite believing the words had come out of her mouth when she summoned them. \"Ask me properly this time,\" she amended and flicked her eyes up at him before flushing deeply and lowering them again.\n\n\"I planned to ask as soon as we got on the jet, but here and now is even better. Unless you'd like me to do this in front of your family?\" He knew what she wanted him to ask and giving her the option of humiliating him in front of her family, as further payback for the horrible mistake that had been inviting his mother to town to meet her seemed harsh penance. One he was prepared to pay if it meant she said yes. \n\n\"I don't need grand gestures, just sincere words,\" she sighed. \"I need to look into your eyes and see that you mean it this time, before I go anywhere else with you, even to eat.\"\n\n\"Vivienne,\" he breathed, knowing that this would always be his burden to bear. \"I have meant it sincerely every time I have asked, and if you thought otherwise for even a moment, I apologise. You are the one who is too good for me, so I wrapped it in humour, like I do most things that scare me. Not that I was ever scared of commitment. It was the possibility that you would reject me that scared me.\" He led her to a couch and made her sit with him. \n\n\"When I walked into that hospital room and saw you for the first time, it was as if all my breath had been knocked from me. I felt no symptoms of the curse that I knew of. All I knew was that you were gorgeous and I wanted to get to know you,\" Gideon smiled and kissed her then. \"Imagine my surprise when I realised that you had no idea how beautiful you were, or how men turned to look at you as you went by in the white coat and baggy, comfortable, doctor clothes hiding all these luscious curves!\" His eyes swept over her figure, and he reached out to take her chin and lift her face to look into his eyes. \n\nVivienne blinked as she looked into the dark eyes of Gideon. Her breath caught once again at the intensity she saw there and her blushing face heated further. She wanted to believe it was all true with every ounce of her being. She searched his face as he continued to talk.\n\n\"I felt it that first time, the attraction and bond between us, but it wasn't until the following day that the curse went to work, and I practically had a heart attack in your hotel room when you told me you were leaving and I saw the packed bags. That moment, all those crushing feelings I had confirmed that you are my soul mate, my one, true love, the woman I will love until my dying breath, my curse breaker. I thought I was going to die when you left this time, so I decided that if you would ever give me the chance to see you again, I would have this with me.\" \n\nVivienne gasped and watched as he pulled a small box from his pocket and slid from the couch to one knee in front of her, showing just how serious and sincere he was about what he was asking. Her eyes widened, and her hand went to her throat as if she was having trouble breathing or swallowing or both. She looked into his face again and, concentrating on his words, drew a slow, steadying breath.\n\n\"Vivienne Elouise Papillo, will you do me the honour of becoming my wife, so that we can live happily ever after, until death do us part?\" he asked and flipped open the lid of the box before holding it up to her.\n\n\"Yes,\" she breathed quietly and said nothing else as her eyes fell on the ring in the box. It was a black diamond solitaire. At least she thought it was a black diamond. The setting was gold, but the band had an inner circle of what she thought might be onyx. Small white diamonds surrounded the black, softening it a little. It was exquisitely beautiful, if not traditional. Although she was discovering that the Zenati family had some odd traditions.\n\n\"Yes? Just like that? Wait, don't answer that! I heard a yes, and that's all that matters,\" Gideon grinned widely as he took the ring from the box and slipped it on her finger. \"It's tradition in my family to give black diamonds. I hope you are not too disappointed,\" he said, reading her face. \"This was Madrina's ring. She gave it to me when we visited. I have been carrying it around since then because I knew you were the one,\" he chuckled, unable to stop the wide smile that adorned his face.\n\n\"It's so beautiful, how could I possibly be disappointed?\" she whispered, holding her hand up so that it caught the light. \"Thank you.\" She smiled and leaned forward to kiss him softly. Gideon rose slowly to lean over her, deepening the kiss until she was lying back on the couch below him. She could feel his body poised over hers most deliciously.\n\n\"Can we go home now? There are some devilish things I would like to do to you that don't include you wearing this dress,\" he grinned and ran a fingertip around the square-cut neckline. He groaned as she stiffened below him and shook her head. He leaned back, rising from the couch and pulling her up into his arms. He held her tightly and sighed, grazing his lips over hers again. \"I will eat this dinner but then we are leaving, or I am kidnapping you,\" he grumbled the threat. He would much rather be on the plane with her in his arms than endure the congratulations and pats on the back that would no doubt come with this dinner, but if this was his penance for his mistake, he would pay it. He owed her that much. Especially if it meant that she was his unequivocally now, or would be soon. As soon as he could get her to a church to say I do. He wondered briefly if he could convince her to elope, tonight.\n\n\"There's something else I have to know first.\" She took another deep breath, hardly believing she was doing this. \"Are you one hundred per cent positive that I am the one, the happily-ever-after, soul mate, lifelong commitment you want to make?\" she asked, hating that her words had become twisted and hadn't come out as eloquently as she had practised in her head.\n\n\"I am surer of this than anything else in my life,\" he said adamantly. \n\n\"Okay then,\" she breathed nervously. \"Marry me, right here and now in my home before taking me back with you to your home. No one has to know except us and our siblings. We can have a proper wedding once all the stuff with the Suebi has settled down but... I want this before I go back with you.\" He looked at her for a long time, as if going over something in his head that made his jaw clamp shut. She worried that she had been right and he hadn't been truly serious about wanting to marry her immediately.\n\n\"Hell yeah! Where's the priest?\" he exclaimed once he had counted to ten and back again several times, trying to work out the best answer to her request without putting his foot in his mouth. In the end, he didn't care. He wanted everything she was offering him. More than wanted it, this was a dream come true. She was right. They could have a proper wedding with all the trimmings when they got back home, if she wanted. If this was what she needed to feel more secure in their relationship and his feelings for her before they returned to Darwin, then he was more than happy to oblige. In fact, now that she had opened this door, there was no way that he was returning home a bachelor. \n\n\"In the back garden,\" she said, still unsure of him and if he was taking her seriously. \n\n\"You have rings and witnesses there, too?\" he asked, staring in wonder at her as she nodded.\n\n\"Okay, tell me how to get there, and I will meet you at the end of the aisle,\" he grinned and kissed her again enthusiastically. \n\n\"Wait!\" she stopped him again.\n\n\"Vivienne, I would have married you a week ago if I thought you would have said yes. Let's do this thing before you change your mind because, believe me, I won't, not ever,\" Gideon said fervently. \"It's not what I had planned, but in some ways it's even better, because you're the one instigating it and now I know you want this as much as I do. That's huge! It's far more than I ever expected coming here.\"\n\n\"You don't want to know why I want to do it before I go back with you?\" she asked.\n\n\"Sure I do, but I am more interested in the doing right now rather than the why,\" he chuckled. \"You wouldn't be suggesting this if you didn't love me in some way, and that's enough of a why for me. I love you, with all of your worries and insecurities that you aren't the type of woman you think I would be interested in. I love you because, even though you're smart, you're dumb enough to think that I would ever let you run away from me or leave me without a fight. I love that you are so nervous about whatever is waiting for us out there, but trust me, as long as I have you, I am an exceedingly happy man.\"\n\n\"I don't want to sleep with you before we are married,\" she blurted and clasped a hand over her mouth. \"You make it very hard to say no to you, and I couldn't go back with you if we weren't...\" Her voice trailed off as Gideon frowned at her, trying to make sense of the words.\n\n\"You were saving yourself for marriage?\" he asked, incredulously.\n\n\"Not on purpose in the beginning, but guys, especially guys like you, have never been interested in me that way, not that I ever dated much. I studied and did other things rather than socialising,\" she rambled on, hating how embarrassed she felt about the situation but wanting to warn him that his ideas about the things he wanted to do with her that didn't include her dress would be things she had little experience with. \n\n\"This day just gets better and better,\" he said as he shook his head. \"Someone is going to wake me from this dream soon, and I am going to die of a broken heart because it's not real.\" He swept her into his arms and kissed her. \"Let's get married so that I can have my wicked way with you and show you the delightful and pleasurable benefits to being my wife.\"\n\n\"You're not disappointed?\" she whispered, thinking that he would want someone who knew what they were doing in that regard.\n\n\"Ecstatic might be a better word for what I am feeling. Can we find the priest now?\" he complained at her stalling tactics.\n\n\"Okay. I have one more thing to show you, and then we can exchange vows,\" she said.\n\n\"There's more?\" He gripped his heart as if he couldn't take any more.\n\n\"Just one more thing,\" she said quietly hoping that the extra guests had already arrived. \"But you need to get it from Leighton. I'll meet you at the end of the aisle in about fifteen minutes.\" She kissed him then and left the room, having said everything she needed to say until the ceremony. She was doing what she always advised others to do, be brave and trust in her heart.\n\n*****\n\nMarcella's mouth was set in a thin line as she stepped from the car that had been sent to collect them from the airport. She couldn't work out what Vivienne was thinking by eloping with Gideon. After Gideon's mother had treated her so badly, and she had run home to lick her wounds, Marcella had thought that it would take her days, if not weeks, to recover from the confrontation. She had not for one moment expected to be woken up by her friend babbling like a crazy woman that she had decided to marry the man today! Not just accept the proposal, but marry the man, before coming back to Darwin. She worried that there was more going on here than she knew, and she needed to see her friend and discover what that was. Vivienne had assured her that this was her decision, not Gideon's. She had laughingly told her that he knew nothing about it and she was planning a surprise wedding for him. Still, Marcella wasn't convinced. There had to be more to it. Maybe she was pregnant, even though she had denied sleeping with him yet when they had spent the day together.\n\n\"What's wrong?\" Noah asked, not for the first time since they had left Darwin. \n\n\"You don't think it's odd, this wedding? I mean they barely know each other,\" she asked, trying to keep the tension she felt from her voice.",
        "\"Things like this tend to happen fast in my family. I imagine that once Olivia is healed properly then she and Gen will tie the knot,\" he shrugged. \"Once we find the one for us, we know, and we don't waver from that, ever,\" he said with certainty. \"I can't remember there ever being a divorce in our family.\"\n\n\"That's not unusual among any of the tables. Marriage is like a life sentence for us. You get less for murder,\" she said without batting an eye, thinking about her mother who lived with their oppressive, dominating father because you just didn't divorce in the Gambaro family. It was like a cardinal sin or something.\n\n\"You think marriage is a bad thing?\" he asked, frowning.\n\n\"It rarely works out, and then people who can't divorce for one reason or another are stuck together, making each other and their children unhappy for the rest of their lives. Doesn't sound like something any woman should aspire to, or man for that matter,\" she shrugged.\n\n\"That's a pretty cynical outlook. I know a lot of happily-married couples,\" he said reasonably. \"I'm sure that Gideon and Vivienne are going to be one of them. Maybe you should get to know more of our family before making up your mind about it. The Zenati believe in things like love at first sight and having a soul mate. If you can make yourself wait to find that one perfect person for you then there is never any need for divorce or watching people make each other unhappy for the rest of their lives.\" \n\n\"You think Viv and Gideon are soul mates?\" she asked curiously. \"They have known each other less than a month!\"\n\n\"I know they are soul mates, which is why I have no qualms about them getting married so soon,\" he said as if it was only natural. He looked over to where Genesis fussed over Olivia as he placed her in the wheelchair that he had insisted on for her, and smiled. His brothers were both completely caught up in the women they loved, and he felt a small pang of jealousy. He wondered if he would ever find his curse breaker and sighed softly, half wishing the feisty woman he stood beside was his .\n\n\"What's wrong?\" Marcella frowned at him. \"Having second thoughts about that statement?\"\n\n\"Not at all. I have other real issues to worry about right now. Don't worry about Viv and Gideon. I promise, they will be deliriously happy together,\" he said with certainty.\n\n\"What other issues?\" Marcella frowned and gave him a long stare as it seemed he wasn't going to answer her. She followed his gaze and found Olivia and Genesis and turned back to him. \"Tell me,\" she pushed.\n\n\"We had to make certain allowances and promises to be able to bring Olivia here,\" he admitted. \"The federal Police still need to speak with her and interview her properly about Remington and his men. They were not happy that she was leaving town, if only for a few hours,\" he admitted. \"They have given us a lot of leeway for her recovery, but this trip shows that she is well enough to deal with the interview and questioning.\"\n\n\"She's a suspect?\" Marcella gasped, wondering why the thought hadn't occurred to her until now. Of course, she was. She had been in the process of marrying the sick bastard before someone started shooting up the church. \"Shit, criminal law is not my speciality, but I can represent her,\" she said, thinking about what would need to happen for her sister now.\n\n\"It is my speciality, and I've been representing her so far. There is no need for that to change. I have been keeping them at arm's length, and I also made the arrangements with them for her travel today. You can assist if you like, but I don't believe you are the best person to take over the case,\" He tried to phrase it in a non-confrontational way, but he could see her back stiffen as if she was getting ready to fight him. \"You said yourself that you are not a criminal lawyer, and I have been acting on her behalf for weeks now and ensuring that she had the time to heal before they interviewed her.\"\n\n\"Thank you,\" Marcella said quietly after a few minutes of silence, during which she castigated herself for not even thinking of the implications and consequences of her sister's almost-marriage to Remington Royce. She had treated her sister as a kidnap victim, one who might want to press charges, not as one of the guilty Suebi who had targeted and attacked the Mothers of the Tables. She opened and closed her mouth a few times to speak, but she had no words to say beyond the simple thank you that weren't self-recriminating, and she would hardly give him that satisfaction. Then the thought came to her. \"So, I couldn't have taken her back to Perth yet, even if I wanted to,\" she sighed. \n\n\"No, but Genesis never would have told you that in front of Olivia. We haven't prepared her for the interview yet, but this wedding means that we have to step up the schedule. Genesis won't have any choice but to tell her when we return. You can help us if you like, but you need to reign in that temper where she is concerned. You won't be helping her or us if you get emotional.\" Noah warned seriously.\n\n\"She's my sister!\" Marcella bit out in a hiss. \n\n\"Exactly! Which is why you need to consider whether your presence, while people are interrogating her, is in her best interests,\" Noah said, trying to keep his voice low and his own volatility in check when it came too Marcella, especially after their argument last night. \"You haven't shown any rationality where she is concerned in the past twenty-four hours.\" \n\n\"Rationality!\" Marcella blinked at him, her voice rising before Noah coughed and indicated Genesis and Olivia who now stood beside them, which silenced the fiery tirade he assumed she was about to let loose. \n\nNoah sighed again and considered the woman as she moved away from him toward the house. Marcella may be a good corporate and family lawyer, but her emotions here were far too close to the surface where her sister was concerned to be of any benefit as a co-counsel. He knew that she wouldn't be able to hold back if she saw her sister fall into any traps, or if it appeared they were railroading her. Like it or not, she was part of the Suebi tribe for over six months, and that had consequences. They would be going with impaired mental judgement based on the drugging, brainwashing and obvious physical abuse she had suffered.\n\nMarcella stopped short in her stiff march toward the Papillo home as Leighton and Lydia exited the house to greet them in a flurry of hugs and back-slapping. Lydia guided the girls to the large staircase in the huge house, while Leighton took Genesis and Noah to the library. Reluctant as always to hand over care of Olivia to anyone else, Genesis fussed, giving the nurse they had brought with them detailed instructions, and promising Olivia that he would be close by if she needed him.\n\n\"I won't let anything happen to her,\" Marcella reassured him as Genesis stood to leave and hesitated again. \"Gideon needs you right now, more than Olivia does,\" she instructed and pushed him gently toward the library door before standing beside Olivia's chair and taking her hand. When Genesis relented, Marcella turned to smile at Olivia, who was allowing the hand-holding to continue. \n\n\"This is so exciting,\" Olivia grinned. \"Vivienne is so brave, don't you think?\"\n\n\"Brave?\" Marcella questioned, thinking that Vivienne had gone insane rather than acting out of any sort of courage to seize the day.\n\n\"She's listening to her heart, not her head. She's not protecting herself and just surviving any more; she's... being brave and believing in him, despite how scared she is of being hurt,\" Olivia explained. \"She doesn't think she is good enough for Gideon, but he does and that's what matters,\" she said simply. She had been considering it on the plane as she had listened to the conversations around her. Genesis and Noah had no doubt what-so-ever that Vivienne and Gideon were meant to be together, just as she was meant to be with Genesis. \n\nIt had been a revelation to her that, outside of the mental and physical scars left by Remy, Genesis loved her and was planning a future for them both. While she had just been looking at the here and now, he had been thinking long-term into the future for them both, and the feeling warmed her like nothing else. She could actually feel the warmth around her heart, as if he had cocooned it to protect it from any further damage. She worried that he didn't realise just what a self-centred brat Olivia had been, and could be again, and she vowed to try hard to keep that side of her nature contained in the face of his love and generosity.\n\n\"You are so right, Olivia,\" Lydia stepped forward. \"It's a huge thing for Vivienne to trust her heart and not her head. She's usually so logical that it stops her from doing so many of the things she wants to do. Gideon seems to have got past that barrier though, and I am beyond happy, even though I will miss her greatly. I guess it's all to do with the curse. It has to affect her as much as him. I'm just not sure how,\" Lydia mused.\n\n\"What curse?\" Marcella frowned.\n\n\"I guess we have a few minutes while we wait for Rick to come and help Olivia up the stairs, so I will give you the short version,\" Lydia laughed lightly and told them the story that she had told Vivienne last night and had confirmed by the Mother of the Zenati Table.\n\n\"You don't honestly believe that, do you?\" Marcella scoffed.\n\n\"Stranger things have happened in our families. Just look at what the Oracles can do. Look at what Ricco Vitali did with his early warning to alert us all, the number of lives he saved, all based on his abilities. Sometimes there are things we just can't explain, but trust me, those Zenati men are devoted to the women they love. Whether it is a curse or a blessing is up to the couple, I expect, but there are many people in this world besides them who believe in love at first sight,\" Lydia smiled indulgently.\n\n\"You're one of them, I expect?\" Marcella asked sardonically.\n\n\"I have a romantic heart, and unlike most people, I am in love and married to two wonderful men. I know that love works in mysterious ways. Try not to be so cynical, Marcella. Vivienne adores you, and your opinion means a lot to her. Be happy for her today. Don't darken her happy day with your own doubts,\" Lydia advised.\n\n\"Do you think I could be Genesis' curse breaker?\" Olivia asked, loving the story she had just been told and wanting to be caught up in the fantasy of predestined soul-mates. \"I mean, he hasn't left my side in weeks, and he is so attentive to my every need,\" she sighed, smiling. If she truly were his curse breaker she didn't have to worry about her inner brat, he would love her anyway. If the curse story was real, she reminded herself as she felt the small naughty piece of Olivia that she still had tucked away in the back of her mind rattle in her chains.\n\n\"It's just a story,\" Marcella whispered but not unkindly. \"He genuinely cares about you though; any idiot can see that.\" She knew it was true even though it had taken her time to understand and accept it for what it was.\n\n\"Even I can see that, and I only saw you together for a few minutes,\" Lydia laughed happily as Rick arrived and scooped Olivia into his arms, carrying her up the stairs, as Leighton followed behind him a minute later with the wheelchair. \"I'm going to see if the bride is almost finished what she was doing. I know she is dying to see the two of you.\"\n\nIt was only a few minutes later and a flushed and bubbling Vivienne burst into the room and hugged her friends. She showed off the ring Gideon had given her excitedly and, for the first time in her life, let her nervous anxiety show in front of her friends, so that they could help soothe it.\n\n\"Come and help me dress. Lydia has pulled off miracles today, and I don't want to keep anyone waiting any longer,\" Vivienne gushed. She didn't want to keep Gideon waiting any longer, not that she thought he would change his mind, but she had been in a state of high anxiety all day. Her nervous energy filled her completely, and she felt like she might burst if she didn't complete the bond she felt with him soon. She felt an urgency to get married now, and she didn't stop to question it, but rather let it carry her through the preparations.\n\n\"Lead the way,\" Marcella laughed. Her smile was wide as she took in the happiness that radiated from her friend. It was hard not to get caught up in it, and she felt her misgivings give way to pleasure that Vivienne was so happy. She just hoped this whole love at first sight thing was more of a blessing than a curse for her friend and that her sister wasn't equally as caught up in the story. It wasn't that she disliked the men. The Zenati were all good and kind men as far as she could tell. It was just that they all rode the crazy train, with their mother acting as conductor. She frowned at the thought of their mother and hoped beyond hope that she wouldn't continue to be such a bitch to Vivienne. She hoped the woman wouldn't be here today, but decided not to give Vivienne the painful reminder of that humiliating lunch by asking the question out loud.\n\n*****\n\nGideon, in the suit his brothers had brought with them from his apartment, finally entered the outdoor chapel that had been set up in the vast landscaped grounds at the rear of the house and froze in shock. Not only had his brothers come but most of his Table were there and were checking the setup of networked cameras and monitors. He blinked in confusion. \n\n\"You only get married once,\" Noah informed him. \"Welcome to eloping, next generation Zenati style,\" he chuckled.\n\n\"Xavier and Dom came?\" Gideon asked incredulously, knowing how busy the two men were with all that was going on within the family. \n\n\"Where else would we be?\" Dominic asked from behind him, making him turn. \"This is important stuff, not everyone is lucky enough to find their curse breaker and then have the bride kidnap the groom to elope,\" he chuckled. \n\n\"She's amazing, isn't she?\" Gideon said with a little awe in his voice and a wide smile.\n\n\"She has to be some kind of special to put up with you,\" Xavier chuckled, giving him a firm hug. \"Zanto said they're ready to go whenever you are, so get your ass up there and act like a nervous groom instead of a smug jerk.\"\n\nGideon couldn't help the smug expression on his face as he took his place at the end of the aisle. Only one niggling thought bothered him, and he turned to his brothers. \"Will Mama be watching?\" He indicated the cameras. \n\n\"Papa is pretty pissed at her and Sera, but I assume that he will let them watch as part of the punishment. It will kill them not to be here,\" Noah said a touch sadly, knowing that what had happened at the lunch wasn't exactly Sera's fault, even if their mother deserved to see Gideon get married without her approval or attendance. \"She should have been the one to organise the wedding, after all.\"\n\nGideon grunted and turned back to survey the aisle that he knew Vivienne would walk down soon. He wasn't nervous at all. He was eager for the ceremony and even more eager for the wedding night after what she had told him. Never, in any of his fantasies, had he expected her to be a virgin. It equally thrilled and terrified him that he would be her one and only and that he would need to make tonight perfect for her. He wanted to make sure that the pain and discomfort she would feel the first time would be negated by the pleasure he would share with her. It was such a foreign concept at their age. His mind boggled that she had remained a virgin for so long. She was clearly gorgeous and amazing. Were the men she knew total morons not to have tried to go there with her?\n\nHe had been trying to work out how he could make a quickie here before they left, or on the plane ride home, romantic enough for her first time when the music started and he looked down the aisle. All thoughts of doing anything but worshipping the woman walking towards him, slowly and tenderly that night, fleeing his mind. He felt his throat constrict as he gulped, not in nervousness but in need, want and desire. He doubted that they would be leaving this house tonight and resigned himself to heading home tomorrow, after he had claimed her completely and knew every inch of her body as well as he knew his own.\n\nWhen she reached the end of the aisle, he caught her hand in his and squeezed it, unable to help the wide grin plastered on his face as she turned to look at him in return, her eyes dancing and a small answering smile curving her lips. The ceremony went by in a blur until the priest spoke directly to him.\n\n\"I understand that this is a surprise wedding for you, Gideon, but if you would like to say anything to your bride, now is the time.\" The priest placed a hand over the bible in his hand and looked at him expectantly. Gideon cleared his throat and looked into Vivienne's eyes.\n\n\"Well, today was a bit of a surprise, so I don't have anything prepared, but I'll give it a whirl,\" Gideon chuckled and took Vivienne's hand, looking into her eyes. \"Vivienne, I vow to never forget that this is a once-in-a-lifetime love. I know that no matter what challenges life holds, we will meet them together, and if life carries us apart for even one day, we will always find our way back together,\" he grinned, \"I will love you fiercely and make it my mission in life to keep you safe and happy, now and forever.\" Gideon let out a breath and dragged his eyes from Vivienne to the priest, indicating that he was done.\n\n\"And Vivienne, would you like to say anything to Gideon?\" the priest asked, turning to her.\n\n\"Gideon,\" she said in a broken, nervous voice and swallowed, going on with a strong sound after a moment. \"I had trouble finding the right words to tell not only you but everyone here how I feel,\" said Vivienne. \"You are so much larger than life to me and have taught me so much already, not just about you but about how you see me, and I realised that love isn't just a feeling. It's so much more, it's words and actions and something intangible almost, so... here goes.\" She licked her lips nervously. \n\nGideon squeezed the hand he was gripping in support, and when she looked up at him, he smiled reassuringly back, encouraging her to speak from the heart. Nothing she could say to him now would outweigh their earlier conversation. This was just gravy, a bonus to remind him just how lucky he was.\n\n\"I vow to embrace your love of life and live it with you, to hold you with tenderness as well as cling to you as my rock. I vow to have the patience with you that you have always shown me. I will try to speak when words are needed and share the silence when they are not and know that, while we may not always agree on everything, it will not change the love and warmth I feel for the home you have made in my heart.\" \n\n\"Wow,\" Gideon breathed and then grinned at her again. \"Can I kiss her now? It seems like it might be required after that!\" he asked the priest, making the small gathering chuckle. \"You have to admit that deserves more than the goofy look I am giving her right now.\"\n\n\"Not quite yet. There's the matter of the rings.\" The priest couldn't help his own chuckle.\n\n\"All right, let's do it,\" Gideon said enthusiastically. \"So we can get to the kissing part.\" He winked at Vivienne. \"You look amazing, by the way,\" he murmured to her, as Noah prodded his back sharply and made him grunt.\n\n\"Shut up or you'll blow it, and she'll realise she is marrying a moron and change her mind,\" Noah smirked in a stage whisper, winking at Vivienne. \"He's like a big, excitable puppy at this point. Be careful he doesn't lick your face instead of kissing you if the priest makes him wait much longer.\"\n\nWith everyone stifling smiles, the priest launched into the final part of the ceremony and Vivienne giggled through the exchanging of the rings, as Gideon practically bounced with happiness. However, when the priest finally said the words, \"You may now kiss the bride,\" Gideon seemed to slow down visibly. He stepped forward slowly, raising her veil to expose her face and then gently cupped her cheek, sliding his hand around to the back of her neck, pulling her into a tender kiss that seemed to eclipse the fact that they were being watched by so many sets of eyes. Vivienne became completely lost in the moment and wrapped her arms around him, almost clinging to him.",
        "\"You are mine now, no backsies, not ever!\" Gideon murmured in her ear as he pulled her against his body, holding her tightly, and let out a large breath. \n\n\"No backsies, not ever,\" Vivienne agreed with a giggle. After a few minutes of being wrapped in his arms she whispered. \"We should probably go eat that dinner now.\"\n\n\"Only if you promise to eat really fast,\" he grumbled and released her, keeping an arm around her waist as they walked down the aisle and allowed people to hug and congratulate them.\n\n*****\n\nOlivia sat beside Genesis at the long banquet table, watching as Gideon and Vivienne kissed between eating and drinking, while people went to congratulate them. She was quiet and contemplative as she examined her own feelings. There were no resentful feelings that someone else was in the limelight. She wasn't jealous that Vivienne had found love with a wonderful man who seemed to adore her. She just felt happy for them, both of them. She couldn't remember a time when she felt truly happy for someone else, without the jealousy and resentment of wanting what others had marring the pleasure she felt. She looked down at the hand splayed over her thigh and smiled. What did she have to be resentful or jealous of when she had someone who looked at her the way Genesis did, she acknowledged.\n\n\"Everything okay?\" Genesis asked quietly as he looked down at her.\n\n\"More than okay,\" she answered, giving him a small smile and leaning into him. He was so different from any other man she had known. True, he was dominant and demanding, but it was tempered with genuine affection and that softer side was something new and interesting to her. He actually cared about how she was feeling, not because he needed something from her right then, but because he wanted to know if he could make her evening better.\n\n\"Good.\" He bent to brush his lips over hers. For all his dominance and the painful pleasure he gave Olivia in the privacy of their room, he enjoyed these tender moments in front of their friends and family equally. He had been unsure of how she would react to being here and if she would fatigue too quickly to enjoy it after weeks of being cooped up in the hospital and then the clinic, but she seemed to thrive on the change. Her cheeks glowed a healthy pink, and her eyes sparkled within the sea-green depths. She was so beautiful that, when she looked at him the way she was now, his heart contracted painfully again. He would need to take Gideon's lead and make this girl irrevocably his, sooner rather than later. Particularly given Marcella's outburst last night. He wanted to head off any more of those kinds of threats.\n\nBeside him, Genesis saw Noah making small talk with Marcella. It was unfortunate, he thought, that the three of them had not found their curse breakers together. He had to admit, though, Marcella didn't seem the type of woman to believe in such things or be affected by them as Vivienne and Olivia so obviously had been. He had never been a believer either, until Olivia crashed into his life, and he knew he would fight to keep her in his life, even if that meant fighting her family. He knew he had to win Marcella over, despite Olivia's words last night, but he wasn't sure how he would do that. She seemed to judge them all after the scene with his mother, not that he blamed her. Still, if Vivienne, who had borne the brunt of that attack could overcome it, then surely Marcella could. \n\n\"You ready for the best man's speech?\" Genesis nudged Noah, grateful that he didn't have to do it.\n\n\"I thought this was an elopement and we wouldn't have to do all that traditional stuff,\" Noah groaned. \"You're the walking lexicon. Why can't you do it?\" he asked plaintively.\n\n\"You're the best man, dumbass, and Papa would expect you to welcome her to the family, at the very least,\" Genesis pointed out. \"There's no time like the present, brother. People have almost finished eating,\" Genesis pointed out.\n\n\"Great,\" Noah rolled his eyes and stood, walking to where Gideon sat and asking if this was what he wanted, particularly in light of the fact that there was no master of ceremonies to make all the traditional calls. \"Sorry, man, but unless you are willing to take on Papa when you get back I have to do a speech. Are you up for this?\"\n\n\"Shit! Yeah, if you must but keep it simple and short. I don't want to be stuck here any longer than we have to be.\" Gideon waggled his eyebrows and leaned over and kissed a blushing Vivienne again. Noah then went to stand beside Leighton, out of respect, knowing that he would need to say something in response, so that the speeches could be done with. Murmuring his intentions, he picked up his wine glass and tapped the edge delicately, until silence fell over the small group.\n\n\"This afternoon's events have been a surprise to all of us, not the least of whom was the groom, who I can assure you is beyond happy with the result,\" he chuckled as he began. \"For those who don't know me personally, I am Noah Zenati, and the lucky bloke up there with his arm around the lovely Vivienne is my older brother, Gideon.\" He paused, taking a moment to look around the room and collect his thoughts. \"I feel like I should thank you all for coming, or any number of the things that would normally be said during this speech, but it feels strange being that this is not my home nor my party, so I will leave that to our generous hosts.\" He nodded at Leighton and Lydia. \"Instead, I will apologise that the dark knights of Zenati legend have ridden again to cross your borders and steal away the loveliest maiden of your land so we can welcome her to our family and our hearts. Don't misunderstand, it is only the invasion I apologise for, not stealing the lovely Vivienne, for without her our world would remain in darkness, or at least Gideon's would, and he would share that darkness with the rest of us, no doubt,\" he chuckled. \n\n\"Since the first time he saw you, Vivienne, he was sure you were the one for him. He lit up with happiness whenever you were around, like a teenager with his first crush and, like most men in our family when they meet the woman of their dreams, he pursued you like a caveman. Yet, despite that, you found a way to love him in return, and I am in awe of you,\" Noah grinned at his brother.\n\n\"I am, too,\" Gideon grinned and kissed her shoulder as he held her in front of him, unperturbed by his brother's soft dig. \n\n\"My whole family,\" he indicated the rest of the Zenati in the room and nodded to the cameras, \"are honoured to have you so willing join our family, and grateful. Honestly, Genesis and I were starting to despair that any woman would be crazy enough to see through the bad jokes and bravado to the big heart inside the man. Thank you, from the bottom of our hearts for taking on the role of caring for him. Trust us when we tell you that it's a lot of work keeping him out of trouble, but I am sure you're up to the task,\" he nodded at her and grinned at his brother. \"I remember this one time...\" \n\n\"Less remembering and more wrapping this up,\" Gideon grumbled good-naturedly. \"Trouble was your nickname when we were kids, not mine,\" he added.\n\n\"Vivienne, I am sure you will be missed when we dark knights carry you back to the home of the Zenati, where you will belong forever more. You are one of us now, not just because of the ring or the vows you exchanged with Gideon, but because you have made your mark on all of our hearts as well as his.\" He lifted his hand, \"If you will all join me in toasting the bride and her very lucky groom.\" He drank and went to sit back down.\n\n\"You got off lightly this time, big brother. If you have another wedding at home that I can prepare for, you will be roasting,\" Noah chuckled in Gideon's ear as he passed.\n\n\"Who knew you could be such a romantic with the nerdy dark knight theme?\" Gideon shot back with a chuckle. \"Thanks, brother,\" he added sincerely.\n\n\"Your nickname was trouble?\" Marcella couldn't help the smile that those words conjured when she looked at the seemingly laid back, in control man she knew.\n\n\"Not really, my Madrina used to call us all sorts of things. Gideon was mostly Cheeky, and I was sometimes Trouble, and Genesis was Mischief mostly. Not really nicknames, more accusations,\" he chuckled.\n\n\"That was a nice speech. I worried that you'd try to roast him and that would have made Vivienne uncomfortable,\" she said quietly. \n\n\"Don't get too comfortable about that yet. Her brother is about to speak,\" Noah looked at the now-standing Leighton, who seemed to be formulating what to say.\n\n\"I have no words for how I am feeling, and I am trying to remember that I am not losing my sister and my best friend but gaining another moronic brother, as if Teddy didn't already fill that quota in my life,\" he chuckled as Teddy let out an expletive as he choked on his wine. \"I will miss you, as will we all, but know you will always have a place here with us, anytime you want or need it, to recharge under the full moon and waterfalls,\" he smiled softly. \"I guess you can come too, Gideon, if you must,\" he grumbled, but there was affection in his voice. \n\n\"Gee, thanks,\" Gideon grumbled back.\n\n\"I couldn't give you away to anyone that loved you less than completely, and I believe that Gideon does. I wish only the best of everything for the both of you,\" Leighton said, sounding a little choked up. \"You are one lucky bastard, Gideon, don't ever forget that.\" He raised his glass, \"To the bride and groom.\"\n\n\"That was short and sweet,\" Noah commented.\n\n\"They're very close, Vivienne and Leighton. Probably closer than Leighton and Rick, even,\" Marcella commented, looking at the man whose eyes shone with unshed tears. She found herself wondering, for the first time in her life, what it might have been like to have such a close family bond as these families obviously did. Maybe if she had been closer than a distant cousin to her Table, she might have felt those bonds more keenly, but her oppressive father always made her reticent to forge any bonds with her cousins or Aunts and Uncles, aside of her mother's sister who had housed her while she put herself through university. Even then, it was not the type of bond she could see these people shared. She looked at Olivia, who sat closely with Genesis and wondered if, in time, they could be close, or at least not as estranged as they were now. She felt sad that she had such misgivings about this wedding. She was still sure that the Zenati were all crazy people, but perhaps the brothers weren't as bad as she thought. She hoped so, for Olivia and Vivienne's sake. \n\n*****\n\nGenesis watched his brother with a smile. He knew that, even though Vivienne had engineered this surprise wedding herself, they still had a lot to overcome to make their relationship work. He also knew that Gideon would do whatever it took. It was their way. They fought hard for the one they loved. His mind fleetingly went to his father, and he felt for the man whose married life had been a constant battle against the woman he loved. Even now, because of her need to prove that her husband loved her, not because of a curse but because she owned his heart, they had to watch this wedding on a monitor rather than be here with them. Yet, if asked, Armando would wax lyrical about his beautiful wife being the love of his life.\n\nHe knew that he and Olivia had turned a substantial corner in the last few days, and he smiled gently as she looked up at him. He'd manipulated, lied and pushed her to accept him in her life and as her lover, but he had seen no other way at the time. He wondered if, in time, she would resent him for that or if, like now, she would try to see his reasons for doing everything he had done to bring her back from the caged, dark world that Remington Royce had trapped her in.\n\n\"Thank goodness it's not that horrible fruitcake most wedding cakes are made of,\" Olivia said happily when a piece of the newly-cut wedding cake was placed in front of her.\n\n\"I like traditions, but you're right about the cake,\" he agreed. He looked at the plate in front of him. The centre was a swirl of vanilla and chocolate mud cake, as if the baker couldn't make up her mind as to which would be best for a wedding that was as far from family tradition as it could get. \n\n\"You like traditions?\" Olivia asked. \"I guess I should have expected that,\" she sighed.\n\n\"Why the sigh?\" Genesis frowned at her.\n\n\"My father was pretty strict about the traditions and laws of the Twelve Tables. I guess that's why Marcie is the way she is and part of the reason I left. Neither one of us wanted to be sold off like a cow at the market to a table man like Jessa,\" Olivia said, speaking of her older sister who she hadn't even asked about since admitting to Marcella that she knew who she was and refused to leave Genesis.\n\n\"Jessa is happy, did you know that? You have nieces and a nephew. You could call her if you liked and talk to her,\" he said gently, unsure that this was the place for this conversation.\n\n\"You know Jessa?\" Olivia blinked at him in surprise.\n\n\"I have spoken to her and her husband, Rinaldo, but I don't know them personally,\" he admitted. \"I contacted them, as I did Marcella, when you were found alive. She is about to have another baby and couldn't travel, or she would have come as well, I think,\" he explained.\n\n\"Did you speak to my parents?\" she asked, nervously.\n\n\"Your father, yes.\" His voice became hard. \"I won't make that mistake again.\" Seeing the brief look of pained emotion cloud her eyes, he reassured her. \"I will take you to see them if that is what you want. You only have to ask, no matter how I feel about your father.\"\n\n\"No,\" she shook her head. \"I knew when I left that I was breaking all his rules.\" She held off from adding that the spoilt, selfish princess that she had been had never believed her father would turn his back on her completely, until the generous allowance he had always provided failed to appear in her account a few weeks after she had left and then her credit cards had been cancelled. She knew that, to him, she was dead and buried and there would be no reconciliation with her father. She doubted that her mother would want to see her either, not that her father would let her even if she wanted to.\n\nShe looked past Genesis to Marcie. Her sister had always been so much stronger than her. She was strong and fought for the things she wanted in that oppressive household, unlike Olivia. She had lied and manipulated her parents and blamed her older sisters if she was ever discovered breaking the rules. She'd been so horrible, so mean, so uncaring, and yet the sister who had borne the brunt of their father's wrath to protect her little sister was the one person who had come to help her when Genesis had called. Guilt, a new emotion for Olivia, replaced the resentment she most often felt for her older sisters. She was still treating Marcella badly after all the time away, and Marcella was still letting her and trying to help protect her in her own way, the only way she knew how, by fighting for her as she had been doing with Genesis last night. She didn't regret choosing Genesis over Marcella. She felt somehow bonded to him now, as if a small part of him had seeped into her soul and wrapped her in the knowledge that he would always be there for her. \n\n\"I'm sorry, I shouldn't have brought it up,\" Genesis said softly, tilting her face up to his. \"Whatever you want to do where your family is concerned is fine with me, but I won't let you leave me, not without a fight. You are mine, little one, and I intend to keep you, care for you and make you happy, until death us do part,\" he smiled softly and kissed her then. \n\n\"Was that a proposal?\" she asked, startled, breaking the kiss and leaning back to look at him.\n\n\"No, let's just call that fair warning. When I propose, you will have no doubt of my intentions, and it will involve as many traditions as I can manage to fill your world with. We still have a long way to go before that can happen, however, including getting you healthy and out of this chair,\" he chuckled.\n\n\"I can get out of this chair,\" she laughed. \"You are the one who put me in it and insisted that I stay.\"\n\n\"Is the brace becoming uncomfortable?\" he asked, reaching a hand around her waist.\n\n\"No, seriously, it's more comfortable than some of my regular underwear,\" she giggled, thinking of some of the underwire bras that she owned.\n\n\"Good.\" He leaned forward and kissed her again. \"I don't like seeing you in pain, unless it is specifically for my pleasure and involves far fewer people in the vicinity and much less clothing,\" he plucked at the material of her dress, his voice husky and firing her need for everything he promised her with his words and the heated look in his eyes. The moment was broken by the clinking of metal on glass again.\n\n\"My wife and I... that sounds awesome doesn't it?\" Gideon asked, pulling Vivienne up beside him. \"My wife and I would like to thank you all for coming to celebrate with us, especially my brothers and family, who made this day complete for me. We know many of you have a long way to travel home tonight, so we know that you won't mind if we leave you to party without us. Thank you so much, Lydia. You are a queen among women, and I am so glad to call you family now. I know this day was all you, and I love you for that. Leighton, you are one lucky man, just not as lucky as me,\" he chuckled.\n\n\"Can't argue that,\" Leighton said magnanimously, but winked at Lydia and placed an arm around her. \"It's true that all of this was my beautiful and talented wife, but Rick and I have our own surprise for you both. He will show you where it is. Look after her, Gideon,\" he said with the hint of threat in his voice.\n\n\"Trust me, I intend to,\" he chortled in return and took his wife's hand to follow Rick from the room. They made slow progress, as everyone came forward to hug them and wish them well again.\n\nGenesis and Olivia joined the line of people closest to the door and waited for Gideon and Vivienne to make their way to them. More than anything, he wanted Olivia to know she was part of this family, not some outsider here as his date or escort but, even without him beside her, the two newly married people valued her, as did Noah and Marcella.\n\n\"Little Pixie, you look sweet enough to give me a sugar high.\" Gideon picked her up into a big bear hug as Vivienne appeared at his shoulder laughing. \n\n\"Put her down, Gideon,\" Vivienne admonished. \"Her ribs are injured, remember?\"\n\n\"I wasn't squishing her,\" he complained. \"Married only a few hours and henpecked already,\" he grumbled at Genesis.\n\n\"Would you have it any other way?\" Genesis asked, patting him on the back consolingly.\n\n\"Hell, no!\" He was adamant. \"Oh, by the way, have you met my wife?\" he asked casually, emphasising the word 'wife'.\n\n\"The new Mrs Zenati,\" Genesis said, taking her hand and pulling her closer to kiss her cheek. \"The pleasure is all mine, especially as you are also my sister now,\" he chuckled.\n\n\"Sisters,\" Olivia whispered quietly, making the links Vivienne had hinted at when she had told her to be brave.\n\n\"Sisters,\" Vivienne agreed quietly and pulled Olivia into a hug. \"I'll be back to see you as soon as possible, okay? I am not leaving you alone with these Zenati men,\" she teased. \n\n\"They're not so bad once you get to know them,\" Olivia teased with a tinkling laugh, knowing that Genesis was straining to hear their every word.\n\n\"Yeah, I guess. Not so bad at all.\" Vivienne released Olivia and stepped back to take Gideon's arm. They continued toward the main door, eventually disappearing through it with Rick. Once they had gone, Genesis guided Olivia to where Noah stood with Dominic, and waved Xavier over. \n\n\"I had better get Olivia back under the watchful eye of the Feds before they issue a warrant for us,\" he joked. ",
        "\"Or insist on interviewing her tomorrow.\" Dominic seemed to consider the small woman in the wheelchair who looked so fragile and vulnerable. \n\n\"We have three planes here. Gideon came across in his own jet, so we can take that back with just a few of us, and the rest can come once they have packed up. \n\n\"We'll make sure Gideon and Vivienne get back, if you take his jet,\" Leighton said. I don't imagine that will be tomorrow. Maybe the day after,\" he grinned. \"We sent them somewhere special for tonight, instead of a proper honeymoon, which would have to be delayed no doubt with the recent crisis being so widespread.\"\n\n\"True. Thanks, Leighton, we appreciate your hospitality,\" Genesis said.\n\n\"Vivienne's special. You're getting the best of us, and she would expect it of me,\" Leighton said with a crooked smile. \"If you want to leave immediately, I'll have someone take you out to the airfield.\" \n\n\"Thanks,\" Genesis nodded.\n\n\"Will we flip for who gets to pilot Gideon's jet?\" Xavier asked.\n\n\"You can do it. If there is even a tiny scratch on that jet, Gideon would kill either of us. If you do it, he'll have to think twice,\" Noah chuckled.\n\n\"Actually, Gen, can you co-pilot? I'd like to talk to Noah on the way back, and the girls can stretch out in the back and sleep if they want,\" Dominic suggested.\n\n\"I guess,\" Genesis said a little reluctantly. \n\n\"Emma will look after her like a princess, I promise,\" Dominic reassured him with a laugh. \"You have nothing to worry about, trust me.\" He tapped the side of his head. \"Not tonight, anyway,\" he smirked.\n\n*****\n\nA golf buggy which has been strung with tin cans, making Vivienne laugh delightedly, had been waiting for them outside the front door, and after a few simple instructions on how to drive, Rick told Gideon to follow him and got into a second buggy with a watchman. It was a short ride to the edge of the estate, but it may as well have been another world, Gideon admitted, taking in the large cave-like structure. A small waterfall fell through a hole in the rock ceiling of the cave to a dark pool that rippled and lapped around the edges, and the moonlight made the white water glow almost incandescently. The cave was huge, and a yurt of sorts had been set up and glowed from the inside with golden candlelight. \n\n\"Moonlight and waterfalls,\" Gideon whispered, remembering Leighton's speech.\n\n\"It's my most favourite place in the world,\" Vivienne informed him.\n\n\"Mine is anywhere you are,\" he said sincerely, and hearing Rick's buggy leave without waiting for them to thank him, Gideon pulled his wife to him and kissed her tenderly. \"My wife,\" he murmured, still amazed by all she had done when he had believed that he was coming here to fight to win her back. \n\n\"My husband,\" she smiled. \n\nUnable to hold back his desire any longer, he picked her up and carried her into the circular canvas tent, noting how spacious it was before zeroing in on the large bed with the wrought iron bedframe. He placed her on her feet, feeling indecisive for the first time that day, and trying to sort out his muddled thoughts. This would be her first time. It needed to be special, not rushed and greedy. He needed to slow himself down. He took a deep breath and as he had been advised, started counting slowly to ten before saying or doing anything moronic to ruin the moment or the night for her.\n\nVivienne looked at him curiously. She was already nervous about the wedding night, and she couldn't work out why he had gone so quiet and still. She couldn't work out why his hands weren't on her, all over her, as they had been most of the night. Now that they were here with the privacy they needed, had he changed his mind? She hadn't really given him time to think and consider her proposal or the surprise wedding. Had she pushed him too far? Was he such an alpha-male that he couldn't deal with her taking the lead so strongly today?\n\n\"I just wanted you to know. I lost it when you left the way you did. I know Mama was out of line and it wasn't your fault, but the thought of you refusing to see me again...\" Gideon turned his head away, and she instinctively grabbed him. \"I really lost it. They gave me a sedative to stop me from flying here to kidnap you. I would have today, if you hadn't agreed to see me,\" he gave her a rueful smile. \"I would have kidnapped you and forced you to listen to me and take me seriously. I would have lost it again,\" he repeated.\n\nHe caught her body to his, and she wrapped her arms around him, pressing her breasts into his chest. Not knowing what to say to his confession, she reached up and pulled his mouth down to hers. The touch of his cool lips brushing against hers caused a thrill of excitement to rush through her. His kiss was soft, gentle, and then became more urgent as she opened her mouth to accept his tongue. Even though this wasn't their first kiss, she almost felt as if it was. This would be a night of firsts for both of them in their relationship. Her heart pounded so hard it hurt as she kissed him back fervently. \n\n\"Oh, God,\" he groaned, pulling away, \"Then you did all this for me? I feel almost unworthy of it. You are the most amazing, confusing, wonderous woman I have ever met.\"\n\n\"I feel the same way about you,\" Vivienne whispered as she smiled into his chest. \"It was only once I was here and you were there that I realised that you were what I wanted, too. That was difficult for me. No one has ever wanted me the way you say you do. It is unbelievable to someone like me that it could be true, but I am choosing to trust in you and what I feel here.\" She placed a hand over her heart.\n\n\"Thank God,\" Gideon groaned and kissed her again, deepening and lengthening it all the more, showing just how much he wanted her. \"I was scared of doing or saying the wrong thing for you right now. Your first time should be special, slow and tender, but what I feel is more ferocious than that, I want you so badly right now that it hurts, and I'm not sure once we start if I'll be able to control what I feel and the things I want to do to you and your heavenly body.\"\n\n\"I'm yours now, all yours, only yours. I'm not afraid or even concerned, because I know you, and even your ferocity couldn't hurt me, not truly,\" Vivienne said to soothe him, and his hands reached around to cup her ass, digging in slightly, enjoying the feeling of the firm flesh below the layers of material.\n\nIt seemed absurd to him then that he was the mature, more experienced person. Yet he felt awkward and unsure, while she seemed confident about what she wanted. He drew another breath and, trusting in her, he let her take the lead, relinquishing the burden of taking her virginity and allowing her to give it to him, if only for a little while, as he sorted out his emotions. \n\nHer smooth hand felt small in his as she led him closer to the bed. It was a soft feminine space that had been created inside the yurt, all satin and lace in fresh blue, green and white. It had been created for her by her brothers, he reminded himself. The light fragrance of roses hung in the air and he smiled at such a traditional choice of flowers for a wedding, when nothing else about their wedding had been traditional at all. Not even the dress she wore. \n\nThe smile that crossed his face warmed her trembling limbs and hid her excited nervousness. She smiled in return, not trusting her voice. Of course, she wanted this every bit as much as he did. She wanted him more than anyone she had ever known, but now she felt somehow unstable when finally faced with having sex for the first time with the man she had chosen to marry. The bravado she usually wore like a shield seemed to desert her, and even though she remained fully clothed, she felt naked under his heated gaze. She suddenly worried about her inexperience, her body and if he would still look at her in the same way once she was stripped of her clothes. God, this was a mistake. He couldn't want her the same way that she wanted him. She didn't know how she had managed to convince herself that this could work.\n\nGideon saw the panic of insecurity rise in her eyes, and he reached out to gently push a stray strand of hair behind her ear and grazed her bottom lip with his thumb before bringing his mouth to hers again. It was a slow kiss, deepening as his desire built even further. He knew he needed to go slow with her, take her gently. He hoped to God he could. \n\nA hot rush travelled through Vivienne's body as she responded to his kiss and felt him toying with the buttons on the back of her dress. One button at a time popped open under his long fingers, and the cool air wrapped itself around her shoulders as he slid the bodice of the dress down to expose to his gaze the strapless bra that she wore. She gasped as she felt him nuzzle into her neck and trace her collarbone with his lips.\n\n\"So fucking sexy,\" he groaned, trailing his fingers over the delicate white lace strapless bra. \"Are you wearing panties that match?\"\n\n\"Yes,\" she moaned as he brushed his fingers across her lace-covered nipples. They surged under his caress and sent piercing streaks of arousal to her pussy. His caress was like a hot spark through the fabric, and his touch excited her like she hadn't believed possible from her past experiences. She didn't know how she would withstand his hands on the naked skin of her breast as she felt him reach behind her for the clasp. She felt the pressure of the material release, and without the slow unveiling she had expected, he pulled it away quickly and her breasts spilled out, ripe and firm, as the lace garment fell to the floor.\n\n\"God, you're beautiful.\" His voice sounded more than husky, scratchy even, as if it was raw with the heat and lust he felt for her.\n\nVivienne felt a blush creep up her neck. No man had ever seen her bare breasts. She had petted a little, even touched a cock or two, but she had always kept her body strictly off limits, thinking it looked too large and out of proportion, and too oddly shaped to keep the interest of any man who saw it. The urge to cover her chest with her arms was strong, but she resisted. Instead she decided to take the words he had uttered and bolster her flagging self-confidence to ask for what she wanted now.\n\n\"Touch me please, Gideon,\" she groaned. She'd hoped her voice would sound strong and self-assured. Unfortunately, she couldn't pull it off, and it shook with pure anxiety.\n\n\"You couldn't stop me now if you tried,\" he groaned, cupping her breast and leaning down to swipe his tongue across one hard nipple.\n\n\"Oh Gideon,\" she whimpered, as he teased the hard, little bud with his lips and rolled the other stiff nipple between two fingers. Her legs felt like they might collapse under her and she backed onto the bed. She watched him lean over her, an intense look on his face, and take her thus-far neglected breast into his warm mouth. He licked and sucked, alternating between the two stiff peaks, until she trembled and gasped on the edge of something she'd never experienced before. She felt feverish with excitement. Her mouth was dry, but her body was more alive than it had ever been before. Without him having touched her pussy, it was wet, yet felt as if it was on fire and throbbing with need. Shivers of anticipation shot up her spine, and she sucked her breath in raggedly as he dragged his insistent tongue down, letting it trail over her belly and to her navel. He pushed down on the bottom half of her dress, and she lifted her hips off the bed to help him remove it. Gideon took his time exploring her body, trailing his fingers and mouth over her belly and thighs, before running them teasingly over the lace of her panties, making her moan loudly.\n\n\"Take off your panties. I want to see all of you.\" His voice was thick with longing.\n\nThe panties were moist, evidence of her excitement, and she was certain that he could smell her arousal as she hooked her thumbs inside the waistband of the lacy white panties and wriggled out of them. She felt exposed, vulnerable, but also incredibly excited by the expression on his face, as he watched her offer her body to him. His expression showed eagerness, pleasure, even greed, she thought. There was no sign of the trepidation she had expected to see there.\n\nWithout taking his gaze from her, he stripped quickly, throwing his jacket at a nearby chair and yanking his shirt over his head without undoing all the buttons. He toed his shoes off and pulled the socks off before opening the zipper of his pants and finally shoving them down his legs with his underwear. He kicked them off and stood before her.\n\nVivienne couldn't stop the gasp that escaped her lips. Gideon's body was well-toned and tanned, with a broad chest and slightly tapering waist. Short hairs nestled between his nipples and ran in a thin wisp down the centre of his stomach to his navel. But it was his cock that held her attention. It stood, swollen and erect, thrusting out from his dark pubic hair. Her breath caught in her throat. This was a man's cock that she was looking at, and in her virgin mind, it appeared impossibly thick and long, with distended veins running along the shaft. Her pussy throbbed at the sight of it, but her stomach churned in repressed fear. None of the cocks she had seen, either professionally or personally, had ever looked quite so imposing, but then she had never had to worry about one penetrating her ill-equipped body before. Could she take it? Would it fit? Oh God, she would have to stop him... Would he let her stop him now?\n\nHis hands moved slowly and tenderly over her body, pushing the anxiety from her mind as they wandered over her contours, through the soft, fine pubic hair and cupped her pussy gently. She groaned softly as his fingers caressed the lips, wet with her arousal, and then slid between their moistness into the entrance of her pussy. Gideon buried his face against her neck and whispered;\n\n\"Christ, you're gorgeous, Vivienne. Why have you waited so long to have sex? I can't believe no other guy hasn't been on his knees begging to have you. Why did you wait for me?\" Gideon asked in an awestruck voice.\n\nShe moved her pelvis in time with his probing fingers. They were curious and insistent and were creating marvellous sensations in her pussy. \"I haven't actually waited.\" She gasped as a stab of pleasure rippled through her. \"It's just that I haven't been interested in the guys who were interested in me.\" She groaned again and spread her legs wider. \"Oh God, Gideon, that feels so...\" Her voice faded as he took immediate advantage of her pleasure, dipping his finger deeper inside her wetness. Her hips jerked suddenly at the unfamiliar sensation of being penetrated.\n\n\"Easy,\" he soothed as he let his thumb circle and caress the hood of her swollen clit. \"We want you to be really wet before we try anything,\" he murmured soothingly into the spot just below her ear and repeated, \"Really wet. Just relax and enjoy it, beautiful.\"\n\nGideon felt the heavy beating of her heart. Its rhythm matched his own, but the throbbing in his cock was wilder than he could remember. It took every ounce of his willpower to restrain himself and not plough into her immediately. The scent of her virginal pussy was driving him wild, and it looked so good. All soft and pink, swollen and slick with her excitement. It was the most welcoming sight Gideon had seen in a long time. Unable to restrain his need to taste her properly, he kissed down her body again so that he could let his tongue slide through her glistening labia and taste her delicious essence as his lips sought out her fleshy clit.\n\n\"Oh, Gideon! Oh, shit!\" Vivienne moaned, squirming under his mouth. Her nails dug into his scalp to hold him there. She didn't want him to ever stop. His tongue was creating sensations in her that she had never experienced before. Masturbation had always been good for her. She knew how to use her fingers expertly to bring herself to climax, but this was different. It was warmer, wetter and more teasing, with an intense build up that made her want to thrash around and cry out in pleasure and frustration. She rocked her pelvis against his mouth, her inhibitions fading into the background of the sensations he gave her. She moved with him, demanding more as he licked and explored her. \n\nA squeal of pure pleasure tore from her lips as her spasms started deep inside. She trembled and gasped at the sensations that raced through her body to her pussy and exploded in a wave of pleasure that radiated back throughout her body again. As the waves of sensation crossed each other, she swore she would pass out. She held on to the here and now, enjoying the wild ride, and when she opened her eyes at last, she found him smiling at her, the edges of his mouth glistening with her juices. \n\n\"Oh Gideon, that was... wow! I mean amazing. I had no idea! Is that how it feels for you? I mean would it work the same way if I did it?\" she asked, boldly reaching out to caress the rigid cock pressed into her side, eager at the thought of giving him the same pleasure he had just given her. It was hot and hard in her hands, and a small trickle of precum dribbled from the darkly coloured tip. Moving to a better position, she bent her head and tentatively stroked the velvety shaft against the side of her soft cheek, before dragging the tip of her tongue over the crown. Very gently, she drew it into her mouth and sucked slowly, lovingly, savouring his meaty thickness. She was surprised by her own enjoyment of this. She'd never even contemplated it before. It was well-known however, that men, and she had plenty of brothers who talked without filters, considered getting their cocks sucked as one of the true pleasures of life.\n\n\"Fuck, I'm hanging on by a thread here, Vivienne, and I won't be able to hold out if you do that much longer,\" he grunted as he watched her latch her soft lips onto his throbbing hardness. She moaned, overcome with the sensation of having him in her mouth and the taste of his excitement. \n\n\"Then don't. I came, so come for me, Gideon. I want you,\" she said after lifting her lips from his cock and looking up at him through hooded lids that only served to stoke the fire of his desire to even higher levels. \n\n\"No,\" he groaned and pulled her from his cock, pushing her back onto the bed. \"The first time I come tonight will not be in your mouth,\" he grimaced.\n\nA rush of adrenaline shot through Vivienne as he moved between her thighs. She felt the heat coming off him as he nudged himself against the moist outer lips of her pussy. She spread her legs, and he rubbed the head of his cock over her slickness. He hesitated for a second as he struggled to get himself under control then, leaning forward and supporting himself with his arms, he pressed ahead, pushing himself into her. His attention was focused on the warm, wet feeling of her lips surrounding his cock. They opened slowly to him, and he slowly pushed himself into the velvety depths of her. He hadn't been sure if he had been expecting the barrier of a hymen, given the fact that she admitted that she masturbated, but there was only a small amount of resistance to overcome as he continued to push into her with slow, gentle thrusts. \n\n\"Oh, Gideon!\" Vivienne's voice was tremulous and shaky as he filled her and stretched her beyond what she had known.\n\nHearing her tremulous moan, he thrust forward sharply and groaned as he slid all the way up inside her. She winced and bit the inside of her cheek to stop herself from crying out. Her breathing was fast and shallow as her pussy opened and stretched to take all of him. Despite the soreness and feeling of being overfull, it was a wondrous moment for her, finally knowing what it felt like to have a cock buried inside her. Her husband's cock, she reminded herself as she became accustomed to the amazing fullness.",
        "\"Tight... fuck... You're so incredibly tight,\" Gideon gasped at the snugness of her, barely holding onto his self-control. Now that he was in deeper, surrounded by her wetness, he was careful not to move, to let her get used to the feel of him inside her. It almost killed him not to plunge repeatedly into her pussy. His cock felt harder than it ever had and her cries of pleasure, knowing no one had ever made her feel like this, made him feel more virile, more potent than he ever had.\n\n\"I'm okay. You don't have to hold back,\" Vivienne breathed into his neck as she clung to him. She wrapped her legs around his hips and raked her nails down his back as he sunk deeper into her. The eyes looking down at her were tinged with concern and fire, but she wanted his desire, his passion, to feel beautiful in his arms. She wanted him to make love to her, but she also wanted him to fuck her. She wanted to experience everything she had heard her brothers talking about over so many years, all at once, even though she knew it was unfair to expect so much from Gideon. \n\nHe moved his hips slowly, sliding his cock back and forth inside her, letting her get used to the rhythm. Vivienne moved with him, intuitively pushing her pelvis upwards as he slid into her. Each time he buried himself in her pussy, her clit was trapped against the upper side of his shaft. She moaned loudly at the exquisite sensations and ground her pussy up against him even harder, pumping back faster, until the sounds of their bodies slapping against each other and the squelching sound of their passionate fucking sent a wave of need and pure lust through him.\n\n\"Oh yes, Gideon,\" she gasped, licking his neck and biting at his shoulders. \"Don't hold back. Please, I need you to fuck me.\" She gasped again, unbelieving that she had said the words that chased around her brain out loud.\n\nHer words caused the blood to rush through his veins and pound in his head. He stared into her desire-filled gaze but, when his eyes locked with hers, a deeper connection hit him with more force than he had ever known with a woman. This woman was his, his wife, his forever.\n\n\"Fuck, Vivienne...\" Her name tore from his lips as he plundered her body. His tongue drove into her mouth, sweeping inside, tasting, commanding, and taking what he needed. He could no longer restrain himself and he let himself go, fucking her the way he'd wanted to ever since she'd appeared in his life. With a growl of pure lust, he pumped his hips, plunging into her over and over. He couldn't get deep enough.\n\n\"Yes, fuck me, fuck me,\" she moaned over and over again as he drove into her. Her body arched and undulated under his fevered lovemaking. The muscles of her pussy clenched and spasmed around its first cock as a great bubble of pleasure rose up from her toes, engulfed her and burst into shards of explosive release that had her shuddering and sobbing.\n\n\"Oh yeah, come, baby,\" he groaned. \"More, baby, come again for me.\" He pinched her nipples, and she cried out again. \n\nHer face and torso were flushed, her breath raspy, as she writhed beneath him and clawed at him while her body peaked again. She cried out once more, and he lost it. A roar exploded from him as his body crested and he toppled over the edge. His cock throbbed and pulsed, spilling his anguish and a steady stream of cum into her. He collapsed on her gasping, trying to regain his breath.\n\n\"Don't move, please, Gideon,\" she said, her face still flushed with her excitement. She stroked his hair lovingly. \"I like the way you feel inside me...\"\n\n\"I take it you're okay then?\" He laughed softly, enjoying the little ebbing ripples from her tight walls against his cock. He smiled and kissed her lips softly.\n\n\"Better than okay,\" she answered, a look of wonder crossing her face. \"If I knew it was this good, I would have accepted the propositions you kept making earlier.\"\n\n\"Are you sore at all?\" He questioned with concern.\n\n\"Not that I can feel. All I feel now is exhausted bliss,\" she grinned. \"Thank you, husband.\"\n\n\"No, thank you, wife. You are amazing in every way possible. Now get some sleep, before I am tempted to do that all over again,\" he chuckled.\n\n\"I didn't think men could, I mean...\" her voice trailed off.\n\n\"I guess it depends on the man and the situation. For me, there is nothing sexier than my wife lying naked beside me in satisfied bliss. It's all I can do to keep my hands off your beautiful, sexy, delicious body.\" He leaned forward to kiss her shoulder, his hand moving to her breast to fondle the nipple. \n\n\"Keep that up, and I will demand a repeat performance,\" she teased him, her face flushing at his words.\n\n\"No,\" he said simply as he changed position and pulled her into the warmth of his body as he gazed down at her. \"You need at least a little sleep first, and we have a lifetime to repeat any part of that you like and explore even more together.\" \n\nShe smiled without saying a word and snuggled up against him. She loved him, truly madly deeply and it was an absolute wonder to her that they had come from that first disastrous dinner where they fought to this bed in a such a small space of time. She sighed once in pleasure at holding him and being held, then slipped into contented oblivion.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "wedding",
        "family",
        "surprise",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-09"
}