{
    "title": "Pierced by Cupid's Arrow",
    "pages": [
        "For Valentine's Day, I had planned something really special for Vinnie. It was something I'd always wanted to try, and I knew he'd like it, too. I told him to come to my place after work, and I'd have dinner ready for him. It was a bit of a fib. Yes, I was going to make him a nice steak dinner, but not until after I had my nasty way with him. A full stomach added to a full work day did not equal a hot filthy fuck session. That equation would always end in a food coma. Fine for a regular weeknight, but not for V-day!\n\nHe would be walking in at any minute. I always left the door unlocked when I was expecting him, so he could let himself in. I stood before my full-length mirror for another moment, running my fingers through my long, dark hair, to where it fell across my ample breasts. I ran my hands down the pink cami, loving the contrast of the black lace at the neckline and hem, my erect nipples poking glaringly behind the silky material, then turned to check out my ass in the matching short ruffled skirt, which covered the first couple of inches of my thighs. Just long enough to conceal my surprise.\n\nLooking over my shoulder at my reflection, I lifted the skirt and couldn't suppress a lewd grin when I checked out the straps that ran down below my ass cheeks, across the backs of my thighs, wondering how quickly things would click into place when Vinnie took a gander at what I was wearing beneath the lingerie. The harness looked so erotic, given its intended purpose.\n\nFor the hundred and twenty-ninth time since I got it, I opened my bottom drawer and pulled out my lover's surprise gift. Okay, so if we're being honest here, I bought it for my own enjoyment just as much as his - well, maybe I was motivated a little more by my own pleasure... but I knew that he would love it, too.\n\nI had read many erotic stories about women fucking their men with strap-ons, and there was one model mentioned that piqued my interest. So, after some research, I splurged on the mother of all man-fucking sex toys, if the online reviews were to be believed. Of course, they're meant to be used on women, too, though I prefer male ass, myself! I ordered the feeldoe (the blue \"slim\" model, since he's a beginner), which is designed with a bulb that stimulates your g-spot and holds the toy in place while you're giving it to your partner. It also vibrates, and has a ridged area to rub against the wearer's clit for added stimulation. I got the harness for better control until I gained some experience.\n\nThe day it arrived, I felt like a kid on Christmas. I stripped down, removing everything except my bra, and nearly cut my hands up trying to rip open the package. My pussy was already soaked as I stood before my mirror and slipped the toy inside of myself. Hands on my hips, I studied my profile, eyes wandering over my breasts in their baby blue lace cups, to my wide hips and the curve of my ass as I waggled my matching blue \"erection,\" giggling. If Smurfette was a tranny...\n\nThe longer I regarded my augmented anatomy, the more aroused I became. \"Fuck, that's hot,\" I had muttered, reaching down to take my cock in my hand, wrapping my fist around the base and slowly drawing it outward, a gesture I had long fantasized about performing. I felt the bulb press against my g-spot. That would feel amazing while I was plunging my dick in and out of my man's ass. I bet I'd even feel it if he sucked my cock. I hoped he would let me find out.\n\nI had practiced walking around with my dick bobbing at my groin. I had even masturbated with it. What a rush it was to jerk off like a \"real\" man, while I strummed on my clit.\n\nBack to Valentine's Day. As I held the silicone cock in my hands, I felt moisture starting to trickle between my thighs. I became wet when I was admiring my outfit in the mirror, but the thought of finally fucking a man's willing ass, after all these years of fantasy, had me absolutely soaked. Still grinning, almost giddy with excitement, I tucked my little friend back inside the drawer and went to the kitchen to pour two glasses of wine. As I set the bottle back on the counter, I heard the front door open. A few moments later, my boyfriend's tall, broad frame filled the kitchen doorway.\n\nHis face split in a grin as he took in my attire, but then when his eyes reached mine, he appeared confused. \"I was all ready to tell you how great dinner smells, but it doesn't look like you're cooking..?\"\n\nI approached him with the wine, hips swaying, giving him my sexiest smile. When I stood before him, he straightened from where he had been leaning against the door frame and pulled flowers from behind his back. I gasped - what girl isn't ecstatic to get a gorgeous bouquet? - and I traded him both wine glasses for the flowers, an arrangement of fragrant red roses and pink lilies.\n\n\"Thank you, baby,\" I gushed, giving him a brief but firm kiss after I had inhaled the lovely perfume of the flowers. He watched me move around the room, pulling a vase out of a high cabinet, filling it, and taking a minute to snip the stems and arrange the flowers inside. I set the vase on the table, then retrieved my glass from him. \"They're beautiful, Vin.\"\n\n\"You're beautiful, Mia,\" he said softly, smiling down at me. He kissed me slowly, tenderly, and I felt heat blush across my skin. We had been sleeping together regularly for the past few months, and things still felt new and exciting, his touch still sent shivers of desire rocketing through me. \n\nAfter our first steamy sexual encounter, part of me had worried that it would be awkward between us since things had progressed so quickly to sex. But I felt so comfortable around him, and he with me, and our relationship progressed very naturally. Whether we took our time making love or fucked like animals, it was amazing. Best of all, he was more than willing to try anything once. To date, I had managed to work my way up to sucking him off while fucking him slowly with a slender vibrator. The first time I had tried it, he had nearly gagged me when he came, losing control of his senses and bucking up into my face as his semen filled my mouth and I struggled to swallow. He cried out loudly as he exploded, howling like I'd never heard from him before. \n\nWhen he finally settled down and I released his softening dick, he lifted his head from the pillow and stared down at me apologetically, chest heaving. He started to tell me he was sorry for getting rough with my face, but I quickly scaled him, surely with a predatory gleam in my eye, and shut him up by pressing my mouth to his, sharing with him some of his cum as my tongue swept across his own. Hearing an orgasm nearly as loud as one of my own, but in a deep, masculine voice, had me needing to get off in the worst way. I had pulled my lips away from his and straddled his head, telling him to lick my clit. It didn't take long for me to soak his face with my own cum.\n\nI wondered how intense his orgasm would be when I fucked him?\n\nI took a sip of my wine as I looked up into his dark eyes, running the fingers of my free hand through his hair. \"I know you're probably ravenous after working all day, but I thought it might be nice to start with dessert.\" I knew that sounded cliche, but some strawberries and whipped cream would shut his stomach up without making him full, and boost his blood sugar. Just what was needed for the activities I had planned. We'd work up a nice appetite for dinner.\n\n\"Whatever makes you happy. I'm yours for the night.\"\n\n\"Happy Valentine's Day to me!\" I kissed his neck, his jaw, licked his ear before bringing my mouth to his, tongues probing, the pleasure shooting to my core. God damn, could this man kiss. His hand caressed my back and slid down over my ass, gripping me through the ruffled material and pulling me close. I was glad he didn't slide his hand beneath because I didn't want him to feel the harness, I wanted him to see it. I wanted to watch the look of recognition spread across his face when he lifted the skirt to reveal what I had in store. \n\nAfter a few intense minutes, I pulled back, breathless, thirsty, horny, and swallowed the rest of my wine. I raised my eyebrows at him, indicating he should do the same. He emptied his glass, and I took it and set both on the counter.\n\n\"Have a seat, babe,\" I told him as I went into the fridge for the whipped cream. I had made it fresh before I got changed earlier. I grabbed the bowl of berries off the counter and set both items on the table before him, then sat in his lap.\n\nMy left arm draped around his back, I reached out to take a strawberry and dip it into the cream. He opened his mouth as I brought it up to his lips, but at the last second I dabbed the tip onto his nose, then lapped up the whipped cream off his skin. \"Yummy,\" I smiled, feeding him the fruit. \n\nWhile he chewed, I took one for myself. I brought it to my lips and snaked my tongue out to lick at the whipped cream. I gazed hotly into his eyes as my tongue swirled over the red berry, pulling every sweet white bit of cream into my mouth, then I took a bite. Smiling, I fed him the rest of the piece. We chatted idly for a couple of minutes while he ate, and I started to unbutton his shirt, asking how his day had gone. He must have stopped home to shower because he had changed out of his work clothes.\n\nWhile I listened to his deep, sexy voice, I pushed his shirt off of his shoulders, running my hands over his muscular biceps. In response, he ran a hand over my thigh, fingers roaming closer to my skirt with every gentle sweep of his hand. \n\nI dipped my finger into the bowl of whipped cream and smeared some across one of his nipples, then sucked my finger clean, watching his eyes, which were staring hotly at my mouth. I lowered my face so that I could lap at his skin. I dragged the flat of my tongue over the dollop of cream, then teased his nipple lightly with the tip of my tongue. He sighed. I kissed him, lightly teasing his tongue with my own, then sat back. His eyes seemed to darken as they bored into mine. I knew that look. He wanted to bury his face in my cunt. \n\n\"Bend over for me,\" he murmured, voice thick with lust. I leaned forward over the table, ass thrust towards him, and watched him over my shoulder. This was it. He was going to discover my dirty little secret, and my stomach flip-flopped as I waited eagerly for his response.\n\nHe stood behind me, hands reaching around to my front and sliding up under my cami, running across my sides and my stomach for a few teasing moments before cupping my full breasts. I gathered my hair and pulled it to one side, exposing my neck, and he accepted the invitation, his hot breath and soft lips sending chills from my neck down my shoulders and making my pussy gush. I became so focused on his kisses that I gasped when he suddenly pinched my nipples. He ran his hands over the rest of my torso again, a little more pressure this time, then rolled my nipples between his fingers, tugging gently.\n\nMy moans grew louder when I felt his cock pressing against my ass. I felt like I was going to cum without his hands even going near my pussy, which was making a sticky mess of my inner thighs. His hands slid down my back as he moved to kneel behind me, and I kept my eyes glued to his face.\n\nHis fingers and palms caressed the backs of my thighs, slowly making their way up to my ass, and I saw his brows furrow when he felt the straps below my ass cheeks. His eyes flickered up to meet my gaze for a moment, questioning, and I gave a little nod. He pulled up my skirt and studied my ass.\n\n\"What...\" he murmured softly, grabbing my hips to turn me to face him. I complied, looking down at my lover, biting my lower lip, suddenly uncertain. What if he didn't like it?\n\nHe peered under the front of my skirt, an unreadable, blank expression on his handsome face, and the seconds ticked by, agonizingly slow. Fuck, I thought, he thinks I'm a freak. He's going to leave!\n\nSuddenly, he looked up at me with that lop-sided grin of his, and I was relieved.\n\n\"Really, babe? You want to fuck me?\"\n\nEyes wide, drawing my lip back between my teeth, I nodded slowly. Please say yes, please say yes, I thought. \n\nI watched eagerly as he stood, grabbed my ass, and pulled me in close, rubbing his erection against me lewdly, as though to show me that the idea of getting ass-fucked by a woman - by me - turned him on as much as it aroused me.\n\n\"I want you to fuck me, Mia.\"\n\nI shivered at those magical words.\n\n\"Since I met you, you've done things to me that no one ever has before. And I've found myself wondering what it would be like to do this, to see your sexy ass strap one on, have you use it on me.\" He paused, blushing. \"I found some videos online of this woman who looks a little like you, and she really knows how to use her dick.\"\n\nI could tell he had stopped himself before completing the thought, and had an idea of what he had been about to say. Reaching between us, I gave his bulge a squeeze. \"Do you like to jack off watching her fuck, Vin?\"\n\nHis flushed cheeks and shy smile told me all I needed to know. My pussy was dripping as I pictured his eyes fixed on the computer screen, stroking his cock, sliding a finger into his own ass as the male ass in the video submitted to some dominant female cockwork.\n\nI smiled up at him, excited. \"Want to see my cock, babe?\" I took his hand and eagerly led him to my bedroom. He stood close to me as I retrieved the dildo from my dresser. \"What do you think?\" I asked, holding it up for him to take a look. He seemed relieved to see that it wasn't huge and thick. \n\nHe touched the bulb at the end of the shaft. \"Is that for you?\"\n\n\"Yeah, they call that the 'pony.' The 'horse' is for you, babe,\" I snickered, stroking the shaft. \"I'll be able to feel it when I fuck you. Sweet deal, right?\" I held it at my crotch, the shaft jutting at an arousing angle. I thrust my hips gently. \"What do you think?\"\n\nHis eyes were glued to my dildo. He swallowed. Before I could repeat my question, his mouth was closing over mine and he was guiding me to the foot of the bed. His hands were everywhere, my hair, my back, my ass, pulling, grabbing, clutching at every inch of me. He pushed me back onto the mattress, his body heavy against mine, and I loved the crush of his weight pressing down on me. His pelvis pressed into me, grinding against my pussy, making me squirm beneath his body, my clit aching for something to rub against. \n\nThen, he was fumbling with my harness, hot mouth finding my erect nipples through the silky fabric of my top. My back arched, mouth open in a wordless scream. So close, so fucking close. All this agonizing, tantalizing build-up would have me cumming faster than a 16 year old boy. Fortunately, my dick would still be hard no matter how many times I came.\n\n\"Help me get this fucking thing off,\" he panted, rising off of me. \"I want to lick you. I need to make you cum, baby.\" \n\nQuickly, I removed the harness, lifting my ass to slip it out of the way. Impatient, he pulled one of my legs free and spread my thighs wide apart, climbing between them, the straps still wrapped around my left ankle. He lapped at the juices coating my inner thighs.\n\n\"Ohhh, yeahhh,\" I purred, feeling his tongue slide between my pussy lips. \"Eat me, baby, get me off. Finger fuck me, lick my clit, that's it, baby, that's it.\" I felt two fingers slide inside of me, curling into my g spot, and I gasped. His tongue flickered over my clit in a dizzying pattern. I tightened my grip on his hair. \"Oh, God, I'm gonna cum,\" I groaned, pulling his face deeper into me. I felt my wetness dripping down my ass crack.\n\nA thick finger slipped into my asshole, he sucked hard on that electrified, erect nubbin between my legs, and I hissed at him, \"Fuck me, fuck me with your fingers, fuck me with your fucking tongue, fuck!\" I was carried up and over the crest of an incredible orgasm, soaring, screaming his name, which he probably couldn't hear due to the thighs clamped tightly over his ears.\n\nSlowly I regained my senses, relaxing my tight hold on his scalp and the unforgiving, vise-like grip of my thighs that had him pinned to my crotch. I gave his hair a gentle tug. \"Come up here, sweety, give me a kiss.\" I ran my hands along the solid muscles of his neck and shoulders and caressed his back while he eagerly shared the flavors of my arousal with me.\n\n\"I love the way you eat my pussy, Vin. You're so fucking good at it, you make me absolutely wild. Sometimes I wonder that I don't accidentally snap your neck, you poor thing,\" I smiled, massaging his neck and the sides of his skull. \"I also wonder something else, baby.\"\n\nHe looked into my eyes expectantly. I pressed my palms against his chest and he rolled onto his side. Sitting up, I retrieved my dildo and he propped himself up on an elbow to watch me slowly plunge the horse end - his end - into my still wet pussy, pull it out, then slide the shorter bulb end home, seating the toy properly, giving it a little squeeze with my pelvic floor muscles.\n\nI took a fortifying breath. \"I can tell how much you love to lick me, to make me cum with your mouth. And I was wondering if you'd... would you like to suck my dick, baby? I would just love to see that, see your mouth pleasure me in a new, exciting way. Would that be exciting for you, too?\"\n\nI rose to my knees, my little ruffled skirt bunching over the shaft of my cock. He licked his lips, eyes locked on the incongruous sight of the blue phallus peeking from beneath my feminine clothing. His gaze traveled up my body and came to rest on my face, eyes burning into mine.\n\n\"Come here.\" His voice was hoarse. I crawled across the bed to kneel before his face. With a trembling hand, I held my cock steady at the base, my lips parted, breathing heavily through my mouth. Waiting. He looked up into my eyes for a moment, and my heart thudded in my chest, seeing the lust in his gaze. He wanted this as much as I did.\n\nFor once, I was speechless. Slowly, his face inched forward, and he nuzzled my fist with the bridge of his nose the way I often nuzzled his scrotum before I began licking his cock. \"Oh, fuck,\" I breathed as he ran his tongue up the underside of the smooth silicone shaft, his dark brown eyes meeting mine, sending a shiver down my spine. \"I can almost feel your tongue. You have never looked hotter.\" I was surprised at the deep pitch of my voice, thick with the overwhelming amount of lust that I felt, from the power of having a man suck my cock.\n\nSuddenly, I smiled. \"You look like such a slut, baby. Do I look this fucking hot when I'm sucking you off?\"\n\nHis lips curled up wickedly in response, and I gasped as he wrapped them around the feeldoe and took it into his mouth until his lips touched my fingers, then withdrew, the suction of his mouth tugging the dildo and moving it inside of me.\n\n\"Do that again,\" I whispered, all humor vanished from my expression. He wrapped his left hand over my right, the hand that was fisting my dick, and went to work giving me my first blowjob. I looked on in wide-eyed fascination, tenderly running the fingers of my free hand through his hair. A moan escaped my throat as the dildo bumped my g-spot repeatedly, my cries more drawn out after he pulled his face back, mouth releasing the shaft, and stroked upwards, making the ridges of the \"saddle\" press against my clit.\n\nUnintentionally, my fingers grasped his hair and jerked his head back, much in the same way my own snapped back, gazing up at the cieling as the sudden added pleasure surged through my pussy. \"Stop, baby, stop,\" I pleaded, looking down into his eyes. \"I want to come with you, while I'm inside you. Not like this.\" He looked up at me silently. \"Lay down on your back, baby,\" I urged. I removed my skirt and slipped my harness back on, this time over the feeldoe. Once he was comfortable on the pillows, I straddled his hips, lowering my face to his for a kiss. I reached over to retrieve the small bottle of lubricant I had conveniently left on my bedside table. There was a hint of wine on his tongue, but mostly I tasted my own cum, since he had sucked it off of my dildo. It was a pleasant combination.",
        "I pulled my lips away from his, showering his forehead and the rest of his face with light kisses. \"I love that you trust me enough to do this, Vinnie. To make love to you this way.\" That was how it felt, that first time. In subsequent weeks, I would fuck him. But that night, it was much, much more.\n\nHe smiled up at me, and his words brought a strange, almost painful tightening in my chest for the briefest of moments, because I hadn't heard them from him before. \"I love you, Mia.\" \n\n\"I love you too, baby,\" I murmured. \"I'm gonna show you just how much.\" Now, just as he had always done for me before he fucked me, I concentrated on his pleasure. I spent long moments licking and kissing his neck, nibbling his ears, kissing across his shoulders and collarbone, sucking gently at his small, erect nipples. I brushed my lips across his soft tummy, paused to tease his belly button with my tongue, and finally began removing his pants to free his tortured cock. He lifted his hips to help me lower his boxers and jeans, and I tossed them to the floor. I pulled off his socks, kissing one of his big toes before my mouth made its way back north.\n\nHis cock looked painfully erect, seemed to be crying out for mercy, so I ceased my teasingly slow progress and wrapped my lips around the head, swirling my tongue over it before sucking gently.\n\n\"Oh, God, you have no idea how much I needed that,\" he moaned. I licked and sucked him slowly, a new appreciation for the eroticism of the act. As I had so many times before, I redirected my attentions to another highly sensitive erogenous zone.\n\nI could hear his rapid breathing, feel the anticipation, the sexual tension thick in the air. A long, low moan escaped his throat as I dragged my tongue over and around his tight pucker. Would this ever cease to excite me? If my cock were flesh and blood, it would be just as hard as the artificial substitute hanging beneath me. With a moan of my own, I speared his crinkled opening with my stiffened tongue, probing as deeply as I could. His hips shifted, lifting him slightly for a moment, as though he were trying to force my tongue deeper inside of him. I rimmed him thoroughly, then squeezed a generous amount of lube onto his skin, watched it drool lazily toward his asshole, where I smeared a finger through the slick substance then gently pressed inside.\n\nHe panted, he grunted his pleasure while I stretched him, fucked him slowly with a slippery, stiff finger, then slid in a second, enjoying it nearly as much as he seemed to be. Can a whimper be manly? His were, and I wanted to fuck him so badly, if only to hear more. I watched his cock twitching, bouncing of its own volition, taking on a life of its own as I stimulated his rectum, now with three fingers. \n\nI knew he would cum for me as I fucked him.\n\n\"Feels good, baby?\" I asked, fully aware of the answer.\n\nHe groaned, neck arching, the back of his head pressing into the pillows for a few beautiful seconds before he looked me in the eye, gaze unfocused. \"Fuck me, Mia. I want to feel you fuck me with your cock.\"\n\nThat was all I needed to hear. Continuing to thrust my fingers in and out of his body, I popped open the lube and drizzled it up the length of my pretty blue cock, snapped the cap closed and tossed it aside so I could stroke the silky liquid across my shaft. Hands grasping the backs of his thighs, I positioned myself at his entrance, which was glistening with the lubricant, open and beckoning.\n\n\"Are you ready, baby?\" I asked in a ragged whisper. He nodded, reaching down to palm his balls, and he ran his hand up over his cock as I pressed forward. I gasped as the first couple of inches slipped inside, surprised at the relative ease, thanks to my manual stimulation.\n\n\"Holy fuck,\" I muttered, staring in amazement at his asshole stretched around the dildo - around my cock. I looked up at him, saw him stroking his own cock slowly, his face a visage of concentration. \"Oh, Vin, this is incredible. Are you okay, baby?\"\n\n\"Go slow, honey, go slow. Feels incredible,\" he assured me, letting his head fall back on the pillows.\n\nInch by inch, I pressed inside of him, every so often pulling out slightly, gasping at the intense pleasure of the silicone stimulating my most intimate areas, before advancing further, until the front my thighs pressed against his skin. \"Oh my God, babe, it's in. The whole thing, you sexy man! Baby, tell me how it feels.\"\n\n\"It feels so big inside of me. So full, and so deep. Indescribable.\" \n\n\"Stop stroking, baby, please. I want to watch you cum without touching your cock. I want to make you cum when I fuck you. Please, baby.\" I leaned forward, and he let go of his dick so he could pull my face to his. I moaned into his mouth as the reality of what I was about to do hit home.\n\nStraightening my back, I pulled my camisole off over my head and threw it to the floor. With a fluid stroke, as I had practiced watching myself in the mirror, I pulled my cock nearly all of the way out of my lover and curled my hips forward, burying the full rigid length in his tight virgin depths, and I shuddered as he grunted. How did anyone use the vibrating feature on this sinful contraption? Surely that would be sensory overload!\n\n\"Holy fuck, when you pull out, I feel like I'm almost going to cum.\"\n\nI smiled. \"Feels good on this end, too.\"\n\nAfter a couple of thrusts, I felt a fire building deep within me, and I started to get the urge to pee. \"Oh damn, baby, is this what it feels like to fuck? I feel like I'm going to piss myself! Fuck, look at my cock, babe. I'm fucking you!\" I panted. \"Ohhh, God, I'm fucking you,\" I groaned, my gaze torn from the place where my cock disappeared inside of him as I shook my head from side to side, overwhelmed, no longer able to maintain a steady rhythm as I pistoned in and out once more with an irregular, jerking motion.\n\n\"How do you keep going when it feels this good? I can't seem to fuck you properly,\" I breathed. I felt his strong hands grab my ass, pulling me into him until we were skin to skin, driving my cock deep, and a growl was torn fiercely from his throat. His gaze locked with mine. Scorching.\n\n\"Don't think about it. Just fuck me harder.\"\n\nMy lips pulled back from my teeth with a snarl - a noise that both shocked and aroused me. The animal inside of me took control and I stroked hard and fast, the way I needed to be fucked when I could feel an orgasm approaching.\n\n\"Cum for me, cum for me,\" I chanted through gritted teeth. With a sound akin to a roar, Vinnie erupted, the first rope of cum propelled with such force that it hit the side of his face. And that was the end of me. Back arching, I shuddered, plunging into him one final time, a primal howl ripped from deep within me, a hot flood gushing between my legs as I lost complete control of myself.\n\nChest heaving, I slowly pulled out, then crawled over my boyfriend's trembling, semen-covered form. The feeling of the sticky cum smearing across our sweaty bodies was decidedly nasty and intensely erotic.\n\n\"I think I squirted, babe,\" I murmured. With a slow swipe of my hot tongue, I licked the cum off of his face and gave him a deep, passionate kiss.\n\n\"Happy Valentine's Day,\" I murmured, lips brushing over his.\n\n\"I love you, baby,\" he smiled, tangling his fingers in my hair and crushing his mouth to mine.\n\nI knew we would, without a doubt, be doing that again.\n\n~~~~~~~~~~~~~~~~~~~~\n\nThis is my Valentine's Day Contest submission, so PLEASE vote! Thank you!\n\nIf you'd rather send a private message than leave public feedback, don't forget to give me your email so I can thank you :)\n\nhoney28"
    ],
    "authorname": "honey28",
    "tags": [
        "strap-on dildo",
        "anal",
        "oral",
        "rim",
        "taste",
        "cum"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/pierced-by-cupids-arrow"
}