{
    "title": "The Case of the \u2018Flexible\u2019 Schedule Ch. 02",
    "pages": [
        "Part 2 -- My afternoon with Audrey\n\nMy was she right, that was something that I definitely didn't want to miss.\n\nAudrey turned on the shower hot and the bathroom filled immediately with steam. We hopped in and she quickly washed away the deposit I had made on her face, hair and chest. This was the first time I had seen her body in full light and it was an amazing spectacle indeed.\n\nI pulled her close and held her kissing her passionately on the mouth. My hands ran down her back and cupped her ass, pulling our bodies tightly together. Her large breasts swelled against my chest and some life started to spring back in my loins.\n\nWhile keeping our mouths pressed tightly together I moved my body back from hers, slid one of my hands around and moved it between her legs. She parted them and I slipped two of my fingers inside of her.\n\n\"My god,\" she said into my mouth, \"I don't know what's wetter, me or this shower.\"\n\nAudrey lifted her leg up and put her foot on the rim of the bathtub allowing me better access and took my rapidly stiffening cock in her hand and tugged in synch with my efforts. When she had me back at full mast she stopped jerking my cock and firmly pulled me towards her. \n\nMy hand instinctively slid from between her legs as she led me to the entrance of her pussy. She's much shorter than I, by close to a foot, and I had to bend at the knees to get an angle on getting inside of her. Because of her wetness I slid easily inside of her, but because of that same wetness and the weird angle every time I started getting a good pace going I would slip out of her.\n\n\"Damn it,\" I said, \"I can't seem to stay inside of you like this. Maybe you should turn around and bend over.\"\n\n\"Or,\" Audrey said leaning against the shower wall for support, \"we could do this.\" She took her leg in her hand, stretched it up and placed it on my shoulder spreading herself wide open and creating a perfect angle for me to enter her.\n\n\"This would be the part I didn't want to miss I take it?\"\n\n\"One of them,\" she said grinning wickedly.\n\nIt was sexy as hell and quite an amazing thing to experience. I repositioned myself and entered her again, sinking myself entirely inside of her with a single thrust. The position was an awesome one as not only was the angle perfect for me to fuck her but it left my hands free to play with her ass, tits, legs or clit as I so desired.\n\nI fucked her with long, slow thrusts as the hot water beat down on our bodies. My hands were all over her body, caressing, squeezing, rubbing. My mouth kissed the inside of the ankle that she had positioned on my shoulder. There was no hurry, no rush just the pleasure of two people fucking and being fucked.\n\nAfter a long while Audrey said her leg was getting tired and asked if she could switch legs. I backed away and she pulled her leg from my shoulder. She was half-turned from me and she bent at the waist to touch her toes and stretch her muscles. Bad idea.\n\nI was on her like a dog on a bone, my hands grasping her hips and my cock pointing right up her. I crashed into her with all my force and she gasped in surprise and pleasure.\n\n\"My you have a big cock,\" she said looking back at me over her shoulder, the full force of the water falling on her muscular back.\n\nI said nothing; I simply began to fuck her as hard as I've ever fucked anyone in my life. I pulled her hips to meet my thrusts, the slapping sound of our bodies meeting echoing loudly in the enclosure. Audrey reached her arms out and put her hands on the wall to steady herself as I pounded into her again and again.\n\nShe came with a scream and I kept on fucking her until she screamed a second time. It was all I could do to keep from passing out with the exertion, the heat from the shower amplifying my exhaustion. I backed away from her and took gasping breaths to try and get my breathing under control.\n\n\"Too bad you aren't right behind me every time I do that stretch,\" Audrey said straightening up and turning to face me.\n\n\"Probably a good thing, your teammates might get a little upset if I whipped it out and started going to town on you right in the middle of your practices.\"\n\nAudrey laughed. \"Nonsense, in fact they'd probably try and get you to 'help' them stretch too after that performance. Hell a couple of the girls I was at the restaurant with tonight were upset that I got to you first. If you hadn't zeroed in on my so early you could have had your choice of which of us you wanted to spend the evening with.\"\n\n\"Really?\"\n\n\"Really. I don't know what it is about gymnasts, our little outfits or all the time we spend with equipment between our legs or the interesting positions we are always finding ourselves in but we can tend to be a bit...\"\n\n\"Raunchy?\"\n\n\"Horny I was going to say but I guess raunchy fits as well. Some of the stories that have passed around about the sexual exploits of gymnasts would make a sailor blush.\"\n\n\"Well just call my 'Captain' then,\" I said, \"Cuz you're going to have some stories of your own to tell after this weekend.\"\n\nI saw a light flicker in Audrey's eyes then. I thought at the time it was reverence to what had transpired up to that point, I only found out later it was in anticipation of events to yet to come.\n\n\"Well then 'Captain' how about you steer that ship of yours back into my harbor?\"\n\n\"Aye aye ma'am,\" I said and watched as she assumed another position that only a gymnast could manage.\n\nAudrey balanced herself carefully on her left leg and lifted her right one, grasping her ankle to help place it high on the shelf usually reserved for placing ones shampoo. The muscles of her legs strained at the near total split she was performing and glistened in the water.\n\nI moved to her and kissed her hard on the mouth. My left hand I placed on her uplifted leg and traversed the length of it, feeling the soft skin and the impressive musculature of her calves and thighs. My right hand went to her pussy which was spread open and soaking wet.\n\nI pushed three fingers into her opening and felt the velvet walls of her pussy. She was so wide open I had no trouble pushing my fingers totally inside of her and fingering her as deep as I could reach.\n\nAudrey grabbed my throbbing cock and stroked it a couple of times then used it to pull me into her. I removed my hand from between her legs, bent slightly at the knees and aimed my organ at her waiting hole. My aim held true and I slipped between the folds and inside of her.\n\nI reached around her and took her ass in both of my hands, pulling her to meet my thrusts. I fucked her at a medium pace pausing each time my cock went as deep as it could and holding it there feeling her muscles convulse around my shaft. Audrey's mouth went to the crook of my neck and while I fucked her she softly kissed my skin\n\nI began to fuck her with more urgency as I could feel the first telltale tingles of an oncoming orgasm. But the heat and steam in the bathroom was making me lightheaded and short of breath so before I could reach climax I had to stop and catch my breath.\n\n\"You ok?\" Audrey asked.\n\n\"Yeah, just the heat is making me a little light headed is all.\"\n\n\"Well my leg is getting a little tired so why don't we take this to the bedroom and finish there?\"\n\n\"Sure,\" I said disengaging myself from her.\n\nAudrey turned around and shut off the water, reached out and brought back two towels. She handed me one and began drying off her impressive figure. I couldn't take my eyes off her body and she noticed me just standing there.\n\n\"What are you looking at?\" she asked in a mocking tone.\n\n\"Your body... just leaves me speechless.\"\n\nShe smiled. \"Yours isn't hard to look at either. But thank you for the compliment. Its good to know all those hours in the gym are good for something.\"\n\n\"Yeah, my sex drive.\"\n\nShe laughed and it echoed in the tiled bathroom.\n\n\"No we don't seem to be having any problems with that,\" she said then added, \"Come on let's get that sex drive out of neutral.\"\n\nShe grabbed my hand and led me still sopping wet back to the bedroom. The air conditioner had been running at high and the cold air felt wonderful on my overheated body.\n\nAudrey pushed me down on the bed and jumped on top of me, playfully grabbing my wrists and pinning my arms above my head. She began to kiss me as she lowered her body to meet mine. \n\nWith my cock at right angle to her pussy she began to tease me, moving her hips and running her soft lips over the length of my prick. As my hands were pinned I was powerless to do anything about it, not that I really wanted to -- this girl could do whatever she wanted to do to me and I would simply be happy to be along for the ride.\n\nAnd speaking of ride...\n\nAudrey released one of my hands and moved her hand down between her legs, gripped my cock and positioned it just inside of her. Then slowly, excruciatingly slowly, she lowered herself down.\n\nShe leaned down and put her face back against mine, reached up and took my hands in hers, intertwining her fingers with mine. As she began to slowly ride me she kissed me long and deep, drawing each kiss out slowly so it lingered on and on. It was amazingly tender love making and in stark contrast to the way we had attacked each others body up until this point.\n\nWe continued to a long time, her hard body pressed against mine, the soft flesh of her bosoms swelling against me with each breath she took, our hands joined above us. Audrey broke our kiss momentarily and looked me deep in the eye.\n\n\"I want you to cum inside me,\" she said unwaveringly. \n\n\"Are you sure that it's ok?\"\n\n\"Yeah, I'm on birth control. Our coach practically insists on it.\"\n\nI figured if the other girls on the team were half as sexually liberated as Audrey was that was probably a sound policy. \n\n\"It's up to you, but I'm good with it,\" I said.\n\nAudrey unfurled her hands from mine and sat up on her knees. She placed her hands on my chest and used them for leverage as she began to rock her hips up and down, side to side on cock increasing the rhythm by which she was fucking me exponentially with each thrust.\n\nWith my hands now free I moved them back to her feminine parts -- one hand on her breasts and the other delved between her legs to her clit. As she stimulated me I stimulated her and before long she tossed her head back and groaned in climax.\n\nMy own climax wasn't far behind and when I informed her of this she became very focused and redoubled her efforts to get me off. She stared deep into my eyes and bit her bottom lip as she slammed her hips down on me again and again, shoving my cock all the way inside of her.\n\nThen I felt my orgasm rise, as sure as death and taxes that it would.\n\n\"I'm going to cum,\" I informed Audrey.\n\n\"Do it baby, let it go,\" she said and impaled herself on me once more, twice more and then it was happening.\n\nI grabbed her hips and held her down tight against me. Audrey fell forward and jammed her tongue deep into my mouth kissing me with ferocious passion as my cock continued to spasm inside of her emptying every last drop of sperm I had to give deep in her pussy.\n\nMy orgasm seemed to last forever and I enjoyed every moment of it -- cumming deep inside of this sexy gymnast. I wrapped my arms around her and we kissed lazily as our breathing returned to normal.\n\nNeither of us said anything as we lay there coupled, holding each other close. Before I knew it I had drifted off to sleep, my cock still lodged deep inside of her.\n\n***\n\nThe next morning I awoke to the sound of a knock on the door. I groggily opened my eyes and found that I was in bed alone. The knock came again and I leaned up and rubbed the sleep from my eyes.\n\n\"Morning,\" Audrey said emerging from the bathroom in an oversize terrycloth robe, a towel synched up around her hair. \"I hope you don't mind I ordered us some breakfast.\"\n\nShe opened the door and a waiter wheeled in a cart covered with juice, coffee and two covered dishes. He disappeared just as quickly as he came and Audrey pulled the cart over to the side of the bed.\n\n\"How do you take your coffee?\"\n\n\"Two creams, two sugars,\" I said moving to a sitting position propping myself up on a couple of pillows. Audrey added the creams and sugars and handed me a cup of coffee.\n\n\"Sorry, I was hungry and I don't have any cloths to put on to go out.\"\n\n\"No problem,\" I said sipping at the hot liquid. \"I'd just as well not leave the room when I've got you around.\"\n\n\"Oh?\"\n\n\"And as much as I enjoy eating you, that's just not going to give me the strength to keep up with you.\"\n\nAudrey giggled and sipped her coffee.\n\n\"So what do you want to do today,\" I asked.\n\n\"Saturday's after meets I like to spend the afternoon in bed, though I usually don't have anyone to share my bed with.\"\n\n\"Well, I could have the hotel take you home if you want.\"\n\n\"No silly, I just usually spend the afternoon relaxing.\"\n\n\"We can do that,\" I said.\n\n\"Oh, I plan on being on my back but I don't think we'll get in a lot of relaxing. How do you feel today?\"\n\n\"I'm kinda sore... my cock isn't used to such a vigorous workout.\"\n\n\"Well,\" she said stealing a glance down my naked body at my prick, \"we'll just have to work him back into shape.\"\n\n\"Sounds good, but can we eat first? I'm starving.\"\n\nShe had ordered a basic breakfast -- waffles, toast, and some fresh fruit. We hadn't spent a lot of time talking the night before but we struck up an easy conversation and I found Audrey was as delightful sitting up as she was lying down.\n\nWe talked about her gymnastics, her major in college and her hometown. She asked me about my law practice and actually seemed interested when I explained to her the niche in the law community I had notched out for myself.\n\nWe took our time and finished our breakfast then Audrey stood up, pushed the cart over by the door and dropped her robe to the floor. Her naked body was bathed in light streaming through the sheer curtains and I felt the first jolt of life back in my cock.\n\n\"Now how about we get that cock of yours back in shape?\" she said climbing on the bed next to me. She straddled me and playfully pushed me down. She kissed me briefly and then slid up my body until her pussy hovered in front of my face.\n\n\"But I already had breakfast,\" I said to her.\n\n\"Well have more,\" she said and sank down so her pussy was resting on my mouth.\n\nI stuck out my tongue and gently licked the folds of her, tasting the sweet drops of dew that had started to form around her opening. I teased her clit, ran my tongue inside of her, licked her fast then slow then fast again.\n\nAudrey reached down and grabbed handfuls of my hair, pulling me harder against her. She began to move her hips increasing the pressure of each of my licks, forcing my tongue deeper inside of her. She continued to ride my face until she uttered a gasp and she held herself tightly against my face until the waves of pleasure had finished washing over her.\n\n\"You know it's going to be a good day when you have your first orgasm before noon,\" Audrey cracked as she dismounted my face, turned herself around, repositioned her pussy on my mouth and leaned forward to put us in a position of mutual enjoyment.\n\nIt took my cock but a few moments to respond to her touch then she took me into her mouth and gave me a slow, sloppy blowjob while I continued to lick her moist slit. For a long time we lay giving and receiving pleasure in equal proportions, taking turns being passive and aggressive in our servicing of one another.\n\nBut as great as it was to lick her pussy, I wanted to fuck her pussy. When I mentioned as much to her she relented, released my prick and rolled off of me.\n\n\"How do you want me?\"\n\n\"Lay face down,\" I told her and she obeyed.\n\nWith Audrey face down on the bed, legs splayed wide, I moved behind her with hard cock in hand. I searched out her wetness and slid easily inside of her.\n\n\"Ooooo,\" she said as I entered her, \"I'm a little sore too. Take it easy until I get warmed up.\"\n\nI didn't want to take it easy -- I wanted to fuck the shit out of her. Something in this girl stoked the fires of my animal lust deep inside of me to the point where I had little control over myself. But I managed to adhere to her request -- at least for a little while.\n\nBut once I had her stretched back out and breathing hard with each thrust I stopped being polite and started railing her with a ferocity that surprised even me. Again and again and again I slammed my cock deep inside of her, causing the frame of the sturdy hotel bed to pound rhythmically against the wall.\n\nI worried that maybe I was being a little rough on the girl but she never uttered a word of dissention; in fact the only thing she was uttering were moans broken only by the louder moans of her repeated orgasms. Audrey grabbed handfuls of the bed sheets, tearing them away from the corners of the mattress until the only part of the mattress that was covered was the part we were laying on.\n\nI was still going full force on Audrey when the phone rang and interrupted our congress. Normally I wouldn't hesitate to let the phone keep on ringing and concentrate on the task at hand but when the hotel phone rings, I usually answer it. The number of people who know where to reach me when I'm on a business trip is so small that anytime that phone rings its bound to be important.\n\n\"Ah shit,\" I said and reached for the phone on the bedside table. \"Hello?\" I said impatiently into the mouthpiece. I listened for a second and then handed the phone to Audrey. \"It's for you Ms. Franklin.\"\n\nAudrey took the phone from me and pushed aside her hair, still moist from her shower, and put the phone to her ear. She said things like 'Ok' and 'Sure' and 'Thank You' then returned the phone to its cradle.\n\n\"Ms. Franklin? What's that all about?\"\n\nAudrey grinned. \"Well since I was unprepared to wake up somewhere other than my own house this morning I made a phone call and had my friend bring me some stuff.\"\n\n\"Stuff?\" I asked raising my eyebrows. \"What stuff?\"\n\n\"Girly stuff. You know, like makeup and toiletries... and some cloths since the only thing I brought with me is that dress,\" she pointed the dress she had been wearing the previous night now resided, \"that you balled up and tossed into the corner.\"\n\n\"I didn't ball it up,\" I scoffed.\n\n\"Well it's still not suitable to wear out of this hotel room, no matter its current state.\"\n\n\"Who says I'm going to let you leave this hotel room?\" I said trying to maneuver my way back between her legs. Audrey squirmed away and say up looking at me.\n\n\"I've got a little surprise for you tonight.\"\n\n\"I don't like surprises.\"\n\n\"Oh, you'll like this one. I promise. And besides its not till this evening so you've got me all afternoon and when we get back, if you're still up for it that is.\"\n\n\"I'll be up for it.\"\n\nShe glanced down at my cock. \"It's not you I'm worried about being up for it,\" she said and giggled. \"Now would you go to the front desk and get my bag?\"\n\n\"Can I get some cloths on first?\"\n\n\"Yes,\" she giggled, \"I wouldn't want you wandering in public like that. You might not come back.\"\n\n\"Why wouldn't I come back?\"\n\n\"Because some horney housewife might try and grab you and use you all up before I'm done with you, that's why.\"\n\n\"I've had my share of horney housewives,\" I said and my thoughts flashed back to one in particular, Debbie, that had left a lasting impression on me, \"and I don't want anymore of them.\"\n\n\"Well I want some more of you so why don't you run along. The sooner you go, the sooner you get back and can have more of this,\" she said spreading her legs and showing me her delicious pussy.\n\n\"Fine,\" I said relenting. I tossed on a t-shirt and a pair of mesh shorts and made for the door.\n\n\"Oh,\" Audrey said as I headed out the door, \"while you're there why don't you reserve that car of theirs for 7:30?\"",
        "\"Sure,\" I said and set out for the elevator at the end of the hall.\n\n***\n\nWhen I got back to the room with Audrey's bag I found that she had started again without me. Her right hand was between her legs working vigorously while her left hand massaged and caressed her breasts. She didn't even bother to stop when I opened the door, she just gave me a sly smile and spread her legs wider so I could get a view of what she was doing.\n\n\"Don't let me interrupt you,\" I said setting her bag down on the bed.\n\n\"What if I want you to interrupt me?\"\n\n\"That can be arranged. But first take care of this bag, I have to take a piss.\"\n\nI walked into the bathroom and did my business. When I came back out into the room Audrey had removed the bag and was again on the bed with her fingers inside of herself. Now she was lying in the middle of the bed, spread eagle and I instantly went from flaccid enough to piss (you guys know what I mean) to rock hard.\n\nI went over to the bed and began kissing my way up her inner thighs. When reached her pussy, she pulled her glistening fingers out of herself and stuck them in my mouth. I sucked her juices from her fingers in what is still today, in my opinion, one of the most erotic things a woman can do for her lover.\n\nTaking her fingers from my mouth I made my move to get my cock back inside of her. I was almost there when she stopped me by reaching under the sheet behind her and bringing out a tube of something that she then handed to me.\n\n\"What's this?\"\n\n\"I figured a lawyer could read,\" she said sarcastically.\n\n\"I can see it says 'Lubricant' on it, but what's it for? It's not like your pussy is having any trouble in that department.\"\n\n\"It's not for my pussy.\"\n\n\"Oh...\" I said dumbly. Then \"OH,\" when I got her meaning. \"This is what you had your friend bring you?\"\n\n\"No, silly. This is just one of the things that I had her bring me. I figured it might help with today's 'activities.' That is, unless you are no longer interested.\"\n\n\"Oh I'm interested, very interested.\"\n\n\"Good,\" she said, \"Because I am too. Like I told you I don't have a lot of experience with that but everyone keeps telling me I need to just go for it.\"\n\n\"Everyone?\"\n\n\"I told you my teammates are nasty. You think guys are horney, you should spend some time around a college gymnastics team.\"\n\n\"Trust me, I'd like to,\" I said laughing.\n\nAudrey screwed up her face and punched me playfully in the arm. \"You know what I meant.\"\n\n\"Yeah,\" I said and looked at the tube of lubricant. \"So, where do you want to start?\"\n\n\"I was hoping that you would tell me.\"\n\n\"Ok,\" I said, \"But let me tell you a couple of things before we start. First, sometimes it can get a little messy. It won't freak me out and it shouldn't freak you out either, it's just something to be aware of. Second, if at any time you want me to stop just say so. It's going to be a bit uncomfortable at first, that's natural, but if it genuinely hurts then we should stop.\"\n\nAudrey reached her hand around my head and pulled my mouth to hers and kissed me very sensuously. \"Thanks Mike,\" she said when our kiss had ended. \"I'm glad I'm doing this with you and not some drunken college kid who just wants to jam it in my ass.\"\n\nI laughed. \"Trust me, I want to jam it in your ass but I want you to enjoy it too.\" \n\n\"Good. So where do we start?\"\n\n\"How about you get on all fours again like last night and we'll start there?\"\n\nShe resumed the position that I had put her in the night before and I pulled one of the desk chairs up next to the bed so I wouldn't have to be on my knees. I started by kissing up the back of one of her thighs, across her ass and down the other one -- all the while my hand was gently rubbing her clit. I could feel the anxiety in Audrey's body and I continued to kiss her and gently caress her until she finally relaxed.\n\nOnce she relaxed I stopped kissing up and down her legs and placed my face between her splayed ass cheeks. My tongue found her brown button and I spread globs of saliva over it with my tongue. For a few minutes I simply licked around her hole while my hand continued to rub her clit.\n\nThere is a point in ass play where a woman ceases to be self-conscious about someone playing with her backdoor and she starts to enjoy herself, causing her sphincter to visibly relax. Once this happens, once you have it in their mind that this can be enjoyable, then you can start getting them ready to take your cock.\n\nI took the lubricant and dolled out a generous amount on my hand. I started rubbing it over her hole when Audrey pulled away suddenly.\n\n\"You ok?\" I asked.\n\n\"Yeah,\" she giggled, \"that stuff is just cold.\"\n\n\"Gotcha,\" I said and went back to the task of getting her good and lubed up for the coming events.\n\nWhen I had the first amount spread out I took some more lubricant and spread it over my fingers. I started with one finger, the pointer finger of my right hand, placed it at the entrance to her backdoor and pushed. Audrey tensed a little when I first started inside her but she quickly relaxed again and I continued pushing my finger inside of her until it was knuckle deep.\n\nI held it there for a while just letting her get used to the feeling of having something inside of her anus, then I began to slowly move my finger in and out of her. At various intervals I would pause and add more lube, ensuring that everything was sliding around easily.\n\nOnce I had been fingering her for a few minutes I asked Audrey if she was ok and she confirmed that she was in fact ok and was actually starting to enjoy herself.\n\n\"You're going to feel a little pressure,\" I said to her and coupled my pointer finger with my middle finger and began pushing my two fingers inside of her ass.\n\nShe squirmed a little and I halted, giving her time to adjust. Then I continued until she squirmed again and again I paused. I continued pausing each time she squirmed, letting her get used to the feeling of having her ass hole stretched by my fingers, until I had both fingers all the way inside of her.\n\nWorking slowly at first I began to finger fuck her ass with my two fingers, then as she got used to the feeling I picked up the pace a little still being careful not to push her too far. I had been doing this a while (I wasn't exactly looking at a clock) when Audrey's body tensed and I immediately stopped, fearing that I had hurt her.\n\n\"Too much?\"\n\nAudrey was having trouble catching her breath to respond. \"No, I think I just came.\"\n\n\"Really?\"\n\n\"Yeah. I've heard that anal orgasms are different but that was...\"\n\n\"Intense?\"\n\n\"That... and awesome. I can't wait to feel what it's like to have your cock up there.\"\n\n\"Me neither. You think you're ready for it?\"\n\n\"Yeah, I think so. Just please be gentle.\"\n\n\"That goes without saying,\" I said and began to spread lubricant over my cock.\n\n\"I know,\" she said looking back at me over her shoulder, \"but I'm still a little nervous.\"\n\n\"Just relax,\" I said taking position behind her and beginning to guide my cock toward her waiting hole, \"and if it hurts too bad I'll stop.\"\n\nUsing my hands I spread her ass cheeks wide causing her to gape a little and providing me a point of entry. I placed the tip of my cock against her hole and began to put pressure on it. At first nothing happened as her sphincter resisted my intrusion but slowly, as she relaxed, my cock started disappearing inside of her ass.\n\nWhen I had about two inches inside of her I stopped and let her catch her breath and get her bearings.\n\n\"How much of it is inside me?\" she asked.\n\n\"Not much.\"\n\n\"Half way?\"\n\n\"Not even close,\" I said. \"You feeling ok?\"\n\n\"I feel stretched but I'm doing ok, yeah.\"\n\nI began to move in and out of her slightly, pulling back until about an inch of my cock was still inside her and then pushing back in a little deeper each time. I kept adding lube until I was gliding easily in and out of her. Deeper and deeper I went. Halfway. Three quarters. All the way.\n\nWhen my entire cock was up her ass I grabbed her hips and held her against me. Audrey was practically panting as she tried in vain to control her breathing. For a long while I just stayed there, letting her get used to having her ass filled with cock.\n\n\"Still ok?\" I asked.\n\n\"Yeah, you can start fucking me a little if you want.\"\n\nI wanted, and I did.\n\nI went slowly, dragging my cock out to various depths then pushing all the way back inside of her. As the time I was in her ass increased so did my pace -- nothing too fast but I was having trouble not just going wild and fucking her with abandon so I think I did pretty good controlling myself.\n\n\"You ready for the next phase?\" I asked her.\n\n\"What's the next phase?\"\n\n\"We change positions.\"\n\n\"Yeah,\" she said, \"I think you've got me pretty well stretched out.\"\n\n\"Ok,\" I said withdrawing my cock, \"roll over on your back and move up the bed.\"\n\nShe did as she was told and I moved up and into position. I lifted her legs and she got the hint, pulling them back an amazing distance (love those gymnasts) and exposing her gaping ass hole to me. I put my cock back inside of her, sliding easily into her well lubed hole.\n\nI was on my knees before her running my cock in and out of her while my hands were on her calves keeping her legs back and her ass stretched as wide as possible. I was fucking her at a good pace when Audrey's head lulled back and her hands went to her pussy. She pushed two fingers of her right hand inside herself while using her left hand to frig her clit vigorously.\n\n\"Holy shit,\" she screamed, \"I'm cuuuuummmmmiiiiinnnnnngggggg!!!\"\n\nHer body convulsed and her legs shook and I had a hard time resisting the strength of them as they pushed against my grip. I kept on plowing away at her ass until she put her hand on my stomach to stop me.\n\n\"Wow,\" Audrey said looking up at me, \"that was amazing.\"\n\nI smiled back at her.\n\n\"They say anal orgasms are some of the most intense.\"\n\n\"They weren't kidding,\" she said, \"I've never felt anything like that.\"\n\n\"Want another one?\"\n\n\"Absolutely,\" she said removing her hand.\n\nI pushed my legs out from under me and lay down on top of her and she grabbed her ankles to hold herself wide open. I fucked her deep, pushing my entire length into her while my mouth worked aggressively on her breasts and nipples. My pace quickened and I plowed her ass with every bit of strength I could muster. \n\nA few minutes later my efforts were rewarded as Audrey's toes curled, her back arched and she let out another ear piercing scream of pleasure. This time she didn't stop me and I kept on pounding her through that orgasm and through several aftershocks that followed.\n\n\"Oh my,\" Audrey said when I had finally paused. She pushed her hair out of her face and wiped the sweat from her forehead. \"Is it hot in here or is it just me?\"\n\n\"Both,\" I said. \"How do you feel?\"\n\n\"I feel great, but I'm getting a little sore.\"\n\n\"Then we'll stop.\"\n\n\"But I want you to cum.\"\n\n\"You think you'll be ok a few more minutes for me to finish?\"\n\n\"Yeah. We've gone this far and I want to feel what it's like for you to cum in my ass.\"\n\nShe wasn't going to have to ask me twice.\n\nI pushed myself up off of her and pulled her legs in close to her body, placing one on each of my shoulders. As I began thrusting Audrey reached down and put her hands on my lower back, urging me to fuck her deeper and harder.\n\nMy hands ran over her legs, down her shapely calves down to her muscular thighs and back while my lips kissed her inner ankles. Our bodies were meeting with audible slaps each time I crashed into her and my orgasm began to build with urgency.\n\nJust before I reached the point where I could no longer hold back I felt Audrey's fingernails dig into my back and saw her toes curl. As she came, I came, my cock buried to my balls inside of her ass.\n\nFor a long time I held myself deep inside of her, then I pushed her legs aside and collapsed on top of her exhausted. Audrey put her arms around me and held me close while she kissed gently at my cheek and ear.\n\n\"Thank you,\" she whispered softly.\n\n\"What the hell are you thanking me for?\"\n\n\"Because that was the most amazing thing I've ever felt in my life.\"\n\n\"Well,\" I said, \"you're welcome. But I should be thanking you. It's not everyday I get to take a beautiful gymnasts anal virginity.\"\n\n\"Yes, but you managed to make it feel good and you didn't hurt me. So let's call it a mutual appreciation for each others contributions and call it even.\"\n\n\"You're starting to sound like a lawyer,\" I said and turned my head to kiss her on her soft lips.\n\n\"I guess the people you hang around with rub off on you.\"\n\nI laughed.\n\n\"I've done more than 'rub off' on you... more like in you.\"\n\nAudrey giggled and I felt the muscles of her anus contract around my shrinking penis.\n\n\"Shower time,\" I said carefully disengaging myself from her backside.\n\n\"Shower time,\" she echoed. \"But don't expect any amazing gymnastics feats this time. In fact, it'll be an amazing feat if I can stand up and make it to the bathroom.\"\n\nI got up and went into the bathroom and cranked on the water. Gingerly Audrey traversed the space between the bed and the toilet and sat down as I tested the water with my hand.\n\nI heard her say something as I pushed back the shower curtain and stepped inside but in the noise of the water I didn't quite hear what she had said.\n\n\"What did you say?\" I asked loudly so she could hear me.\n\n\"I said, 'I can feel your cum dripping out of my ass.'\"\n\nI paused for a second before answering. Then I said, \"you're shitting me.\"\n\nAudrey pushed back the curtain and joined me in the shower.\n\n\"Actually,\" she said wryly, \"I'm doing just that.\"\n\n***\n\nPart 3 -- A pair of gymnasts stretch me to my limits will follow soon!!! "
    ],
    "authorname": "Mike Franklin",
    "tags": [
        "gymnast",
        "shower",
        "sixty nine",
        "anal sex",
        "anal virgin",
        "masturbation",
        "southern belle"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-case-of-the-flexible-schedule-ch-02"
}