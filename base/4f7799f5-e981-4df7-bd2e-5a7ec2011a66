{
    "title": "The Cotillion",
    "pages": [
        "Author's Note: This is for all those who have told me my stories need a noir bent. Here is proof that I write modern fairy tales. I love my characters too much to do noir. To make it scarier, I edited it myself.\n\nThe Cotillion\n\nThe elevator wasn't moving fast enough. I watched the dull red numbers change from floor to floor, seven, eight... They seemed to be moving slower, almost like the building was getting tired. A four letter word caught in my throat. I would have let it loose if I were alone. There were two others on the slow ride, a rich gray suit and a bicycle courier. I swallowed the word and began tapping my foot, thinking the elevator may get annoyed and move faster. \n\nThe suit got off on nine, slowing me down even more. I moved over to the panel and smacked the close door button a couple of times which seemed to amuse the courier. The button was useless. The elevator doors closed in their own sweet time. After an interminable wait, it began to rise again. \n\n\"Running late?\" The courier asked. I turned, about to snap at him. He was young, probably couldn't drink legally. He was fairly trim but rather sloppy in the hygiene department. It looked he lost his razor a few days ago. \n\n\"Yes,\" I replied, turning back to the console to watch the numbers slowly change. There was no need to bite his head off. \n\n\"Can you push twelve, please?\" The courier asked. \n\n\"We just past it,\" I said and pushed the button. \n\n\"I'm not late,\" The courier said smiling. I turned back quickly to the young man. Young was relative since I just had my twenty-fifth birthday. He stood confidently in his black knee length bike shorts, his windbreaker unzipped open to his stomach, revealing a taut blue t-shirt. It was the nicest thing anyone had done for me in a long time. He was not as shabby as I first thought.\n\n\"Thank you,\" I said as pleasant as I could. It was hard, as late as I was, to muster a smile, but I did. A lot of stress faded away at that moment. Here was a little piece of the world that wasn't out to get me. It would be nice if he was a few years older with a better job. Not that my job was anything to be proud about. My father's death had wounded me in heart and future. It created a legal mountain whose peak wouldn't be reached until my thirty-second birthday. I was rich, I just couldn't touch any of it. \n\n\"No problem,\" The courier replied, then he leaned against the far wall and looked away, seemingly uninterested in more conversation. For a moment, I thought I would have to fend off an advance. I looked down at my blouse and skirt to see if there was a stain. Nothing. Just me. A strange disappointment clouded my mind. I would have preferred a small flirtation. \n\nThe elevator doors opened on fifteen. I sighed and exited, the courier seemingly oblivious to my leaving. \"Good luck,\" the courier said when my back was turned. I turned as the elevator doors closed. He smiled at me in a soft dreamy way. Unthinkingly, I smiled back, the doors acting as a comfortable shield for the brief flirtation. Life was good again.\n\n\"Ella, you're late again,\" Agnus Tremaine spat with hands on her wide hips. Her graying hair, glued in curled clumps atop her head, bounced to emphasize every word. I sighed. I had hoped to escape my step mother's notice. Life was bad again.\n\n\"Accident on sixth street,\" I stated as I moved toward the utility room. My utility room, held in trust. \n\n\"My daughters don't seem to have a problem arriving on time,\" Agnus continued with a grating tone. I hated these times. Seven more years of being under this woman's claws. \n\n\"They seem to be on vacation more than not,\" I returned with my own venom. Agnus had fooled my father into tieing up his assets until I was older. She, of course, became executor and, in turn, my jailer. I suspected she was a slut in bed. I could think of no other reason my father would screw me like he had. I loved him more than anyone, but he was a man and I knew he wrote that will with his dick.\n\n\"Business trips are not vacations,\" Angus defended Drizella and Anastasia. I was sure they got little done in Tahiti with my money. \"I only wish you had their work ethic,\" she continued as if I didn't know the truth. \n\nI ignored her continuing rants and pulled out the bucket and mop. My bucket and my mop. I was required to stay with Tremaine Marketing, Inc until I came into my inheritance. He just failed to say in what capacity. Agnus thought it best I was the night janitor. Seven more years and I can fire her. I began to fill the bucket with hot water. At least Agnus would go home soon. My home. \n\n\"The floors were done poorly last night,\" Agnus continued while pointing out some corners that held dust. There was a rider in the will that stated if I failed to stay with the firm, I would lose it to the next in line. Agnus was next in line. My only saving grace was that she had to answer to a board and the court. My life was miserable, but I still had hope. \n\nI added a potent lemon-scented cleaning fluid to the bucket. At least it overwhelmed the perfume that Agnus liked to swim in. I ignored her other admonishments, knowing they were designed to get me to lose it and quit. That wasn't going to happen. I just had to stay out of trouble and in seven years, I get to fire the bitch. \n\nI turned with my prepared bucket and smiled at Agnus. It was my you'll-get-yours smile. She never understood that smile. I think she thought I had a few screws loose. It always made her back away and lose her train of thought. The only attack I was allowed. I certainly couldn't yell at the CEO. That might be grounds for termination. It was a war and I had to let her win all the early battles. \n\n\"Good evening Mrs. Tremaine, Ella,\" Raj said, his olive-skinned smile leading the way out of the elevator. I smiled back, which irritated Agnus more. She had hired Raj as the night tech thinking I wouldn't be comfortable with an immigrant from India. The opposite occurred. He had become a dear friend and I adopted myself into his family. His wife Kiran and their daughter Aanya were such a lovely family. \n\n\"Mr. Vijaya, do think it is wise spending your time with pleasantries when there is work to be done?\" Agnus asked. Raj lost his smile. His green card held him to his job as surely as the will held me. \n\n\"No, Mrs. Tremaine,\" Raj answered and moved quickly to the control room. I wanted so much to shove the end of my mop into Agnus's mouth to shut her up. I closed my eyes and let the image float away. Seven more years. Raj could stay. Agnus was out. \n\nAgnus followed Raj into the control room. I was sure it was to give him an impossible list of tasks and remind him not to fraternize with the janitorial staff. The hallway seemed to brighten when she left. A devious thought entered my mind and I laughed to myself. The first sign of insanity, but it felt good. I began mopping. Mopping exactly where Agnus would have to walk in order to leave. Images of her falling on her ass were pleasant. I started humming Dancing Queen and used the mop as my partner. My thoughts were very pleasant.\n\nAgnus didn't fall. I apologized for not thinking and starting at that end of the hall. It was humorous watching her walk in her high heels while holding herself along the wall. It was hard to hold my smile in, but I had a lot of practice at it. The corners of my mouth stayed low while my insides jumped with glee. \n\n\"Good night, Agnus,\" I called as she pushed the elevator button. She hated when I called her by her first name at work. I saw the anger in her eyes when she turned. I knew she wasn't going to walk back across the newly mopped floor again. Chalk up another one for Ella. Agnus just grimaced and stepped into the elevator. My body relaxed when the doors closed. The bitch was gone. \n\nI pushed the bucket and mop into the corner. It was usually the last thing I did. I had a system. A series of steps that optimized the time it would take to clean the offices. Mopping first would just slow me up. Optimized work time allowed for optimized free time. I grabbed the large wheeled garbage can, vacuum cleaner and dust rag. Office to office, I quickly dusted, emptied trash, and vacuumed then closed the door. \n\nI had told Agnus it took thirty minutes to clean an office. She said I should be able to do it in twenty. It actually took less than five when I put my mind to it. Chalk up another one for Ella. I was done in under three hours, floors mopped and all the glass cleaned. They were my offices, so it wasn't as hard to do as Agnus thought. She was conniving, but a little on the dumb side. If she really wanted to get on my nerves, she should have me working during the day, with her. \n\nI restored all my supplies and cleaned myself up a bit. I tossed a few dollars at the vending machines for a coke and chips. I went to the control room to see Raj. It was our nightly ritual. Raj worked and I kept him company. It was a somewhat boring existence, yet when shared, it lost its 'boring' status and become tolerable.\n\n\"Almost a record, Ella,\" Raj said, pointing at the clock. \n\n\"If she wouldn't have hung around, I would have broken it,\" I said. I raced myself every night. The quicker I got done, the sooner I could chat with Raj. I watched as he executed another batch process. The screen said he was updating the report server. A restructured database that allowed quick access for decision-makers. The two years I have sat with Raj had schooled me well on the inner workings of my company. I don't think Agnus thought I knew thing one about the goings one. Chalk up another one. \n\n\"Kiran wants you to come over Saturday afternoon,\" Raj said when he was sure the batch was executing. He spun in his chair to look at me. They were using me to try and become more American. I loved them, so I always agreed. \n\n\"I would love too,\" I agreed, \"is Kiran making those potato things again?\" They were to die for. \n\n\"Aloo kikki,\" Raj reminded me. I will never remember the name, \"of course she will.\" Saturday seemed to far off. My social life was shit when I wasn't with the Vijayas. Working nights puts a huge cramp in one's mojo. I sleep when most people were awake and was heading off to work when they are getting frisky. I was sure that was part of Agnus's plan.\n\n\"I have to warn you,\" Raj continued, \"Aanya has a new board game she wishes to play.\" I laughed. Aanya thought of me as a big sister. In truth, I thought of her as my little sister. She was more attuned to American styles than I and schooled me often. I helped her with the things a young girl couldn't talk to her parents about. Usually, boy things. Aanya was in the eighth grade and the drama had begun. The boys were just beginning to think girls weren't as useless as they thought. Girls, on the other hand, were separating the studs from the duds. \n\n\"Sounds like fun,\" I said. I had no plans that even sounded close to a good board game. Raj looked at me funny. I could tell he was thinking. His eyes always became still when his brain was working. \n\n\"I love that you come,\" Raj said, \"it makes Kiran and Aanya very happy, but I worry we are stopping you from things.\" I smiled and decided to torture him. \n\n\"What kind of things?\" I asked. \n\n\"You know...things,\" Raj said, using his hands to emphasize things. \n\n\"You mean like snorkeling?\" I asked with humor.\n\n\"You know what I mean,\" Raj replied, trying to hide his blush. \n\n\"Ahh, you mean wild sex,\" I said, my eyes wide waiting to see if I could deepen the red in his cheeks. \n\n\"Well...\" Raj stuttered, \"I mean you're a pretty girl. You should be out on dates.\" Raj tried hard to clean up my words. I smiled at him. \n\n\"Agnus makes that difficult,\" I said, \"my time is coming.\" Seven more years. Raj turned back to his terminal and began typing again.\n\n\"Kiran worries about you,\" Raj said quietly. I felt my heart throb. Raj was worried about me. I loved him for it. I was in a hole right now and in seven years, I would climb out. \n\n\"You tell Kiran that all I need is aloo kikki,\" I said with a little laughter. That got me a chuckle. I certainly didn't want Raj sad on my account. I thought back to my last boyfriend. It had been before my father had past away. I would be lying to myself if I didn't admit that I missed the intimacy. Sex had its medicinal properties and was a ton of fun as well. Fried potatoes and board games were a poor substitute. \n\nI changed the subject and asked Raj what he was doing. This is how I learned about my company. Raj, who had access to all the information, would instruct me in his tasks and I, in turn, would learn. I knew an awful lot about how the money moved, who moved it and why. I knew each employee, who were the slackers and who drove the business. In seven years, the board wouldn't find a naive girl, they would see a knowledgeable woman owner who knew how things worked. Agnus was digging her own grave. That was my solace. \n\nI stepped into the bathroom before the end of my shift. I looked into the mirror and began to dishevel myself. I pulled a few strands of hair from my ponytail and let them float in a wispy mess. I smudged my glasses with fingerprints and pulled my shirt so it hung poorly, half out of my skirt. I had to look harried before Agnus arrived. There was rarely a need for her to be at work early. Her sole goal was to ascertain my level of misery. I gave her the answer she wanted to see. I girl on her last leg, about to throw away her inheritance. My secret defiance was my shield. Only seven years to go. \n\n*******************************\n\nThe drive home was miserable. Bands of rain ran across the windshield with a ferocity that made that wipers moot. I decide to pull over and let it pass. My first mistake. I ran over something that must have been placed there just for me. The telltale flapping and the steering pulling to the right let me know I had a flat. I went through my entire vocabulary of foul words. Then, I went through the litany again. The rain picked up. I made up some new words. \n\nI waited for the rain to stop. I used the time wisely and pulled the owner's manual from the glove compartment. I had never replaced a tire on this car. I cringed when I saw the instructions. There was a bolt in the trunk, when turned, lowered a temporary tire. It was raining and I would have to retrieve it from under the car. The rain never stopped, but did change to something less than a deluge. I sighed and stepped out into the rain. \n\nThere were a lot of places I could have picked to pull over. I had to pick a spot where recent construction had left mud where rock should have been. The state had decided it would be good week to dig up the culverts along the side of the road and had deposited most of it on the shoulders. My white tennies sunk on contact. I slammed the door with anger as my only umbrella, I squished my way to the trunk. \n\nI promptly squished my way back when I realized I had not undone the trunk hatch. The world was attacking and my mind was becoming traitorous. I gave up trying to walk carefully when I felt the mud ooze into my socks. Shoes ruined. Chalk one up for mother nature. \n\nThe bolt was stubborn. I had no idea which way to turn it as rain pelted my back. Finally, when I felt cold wetness find more private areas, I figured out it was clockwise. I gave up trying to do it quickly. I was soaked. It didn't matter how long it took anymore. I squatted down, my wet skirt fighting the movement, and saw the tire lying in the mud, almost two feet under the car. I tried to reach it, flailing at the edges. I sighed and dropped my knee into the mud. It found the rocks under the mud causing more wonderful words to escape my throat. I cringed as I shifted my knee and created a semi-unpainful spot to anchor it. \n\nOne hand on the trunk, I lowered myself, reached under the car and dragged the now muddy tire toward the back. My blouse was ruined by the time I figured out how to detach the tire from the cable that had held it under the car. I carefully lifted, trying to hold it away from my skirt. I turned and a wave of water, mud and whatever else was on the road covered me as a semi passed. I looked down at my clothes and lost it. I was tired, wet and now covered in mud. Swear words were no longer enough. Tears mixed with rain as I slipped and slid my way to the flat front tire. My throat was spasming as I went back for the jack and tire wrench. \n\nAnother bout of hard rain whipped through and my left foot slipped into the culvert. It came back missing its shoe. I leaned against the car, clutching the tools, trying to stop the horrid feelings coursing through me. I had no more anger to rely on, only hopelessness.\n\n\"You look like you could use some help,\" a male voice called. I looked up, my glasses blinded by rain. I didn't know who it was. I could only sob, covered in mud and show my tools. I didn't want to be helpless, but my mind was surrendering to it all. You can't fight the world. \n\n\"We'll start with the jack,\" the man said, and took it from my hands. He was taller than me, that much I could tell. He moved confidently to the front as another dousing came from the clouds. I followed him, my sock trying to leave itself in the mud. \"Stand away from the side in case it slips,\" he said as he kneeled into the mud trying to find a secure place for the jack. \n\n\"Thank you,\" I said, remembering my manners. \"Thank you,\" I said louder, certain that my first attempt was lost in the rain. He looked back at me and I saw a smile between the droplets running down my lenses. \n\n\"Wrench,\" he said, holding out his hand. I put the wrench in it and he affixed it to the jack. He began raising the car. \"Crappy day for a flat tire,\" he observed. I nodded though he wasn't looking at me as he concentrated on the jack. I wiped my glasses with my wet finger. He had dark hair, soaked through. His shirt and pants were a mess now but looked expensive. The one shoe I could see was brown leather and not something found at Walmart. My savior was some kind of executive, probably on his way to work. I sucked in a breath and forced my helplessness away. \n\n\"That should do it,\" he said rising with the wrench. I took it from his hands, trading it for a smile.\n\n\"Thank you,\" I said again. I couldn't believe I had lost it. An executive doesn't collapse at the first sign of trouble. In seven years, I needed to be a rock of confidence. He smiled back, the rain running off his nose and past his strong chin. \n\n\"You lost your shoe,\" he said, pointing at my sock. \n\n\"It's been one of those days,\" I said, trying to ignore the loss. I moved to the tire and inserted the blade end of the wrench into the slot of the hubcap as the manual had said. It popped off and I pretended it didn't surprise me. He was there to catch it before slid into the culvert. He watched as I went at the first lug nut. I pushed down on the wrench and it didn't want to move. Hesitantly, his hand moved next to mine and we pushed together. The nut relented. He removed his hand and let me finish. \n\nHe stood there in the rain, holding the hubcap and collected lug nuts one at a time. To be honest, his presence gave me strength. His desire not to push the poor woman out of the way and do it himself was nice. He moved from savior to helper without a thought. I was smiling when I finished the last lug nut. \n\n\"I'm Ella,\" I said as I handed him the last nut. The rain was beginning to let up again.\n\n\"Peter,\" he responded.\n\n\"Thank you for stopping,\" I repeated again. I lifted the tire off the car and it bounced in the mud. I longer cared about the mud that splattered on my ankles. \n\n\"You said that already,\" Peter said. I looked up at him. He was smiling at me, almost laughing as I struggled to wheel the flat tire off to the side. He made no move to help, which was strangely helpful. I lifted the dinky donut tire and struggled it onto the bolts. He moved behind me. I suspected he meant to catch me if I started to slide into the culvert. Most helpful. ",
        "He handed the nuts to me, one at a time, and I screwed them on hand tight. The rain was beginning to cooperate and became more of drizzle. He handed the wrench back to me and I cranked the lug nuts tight. I turned to seem him loading the flat tire in the trunk. No communication, just optimized performance that limited the time we needed to be in the rain. I liked Peter.\n\nI moved to the front of the car, inserted the wrench into the jack and began undoing what Peter had done. He met me there and watched as the car came down. \"You handled that well,\" he said. I could hear the humor in his voice. He was having fun with me. I laughed.\n\n\"I am glad you stopped,\" I admitted as the jack slowly folded back to its rest position, \"I was letting it get to me for a moment there.\" I looked up as I detached the wrench. He held out his hand and I put the wrench in it. I grabbed the jack and we carried them back to the trunk and threw them in. He closed the trunk and turned to me.\n\n\"I think you need to rush home, Ella,\" Peter said, with a sly smile. I wasn't sure what he meant. Was he giving me a command. I don't take well to commands. His smile changed when he saw my confusion. He leaned closer.\n\n\"I think you are a bit more beautiful than you intend right now,\" Peter said, his smile growing again. I stepped back as the realization hit me. I looked down and quickly covered my breasts. The rain had made my blouse and bra see-thru. The cold rain had woken my nipples. Traitors. Peter laughed sweetly as he backed toward his car. \"Absolutely beautiful,\" he repeated as he opened the door car. A sleek black Lexus that he seemed to fit into well. Red-faced, I headed back to my car and put my soaking wet muddy body on my clean seats. \n\nI looked in the rearview mirror and saw him there. Peter was waiting to make sure I got back on the road. I smiled. Beautiful he said. He looked pretty good himself. I smiled to the world and waved to Peter as I got back on the road. Beautiful. I liked my breasts being beautiful. Thank God I didn't know him. I wouldn't have been able to ever face him again. That was, by far, the best worst experience I ever had. That smile of his was so honest. He wasn't just trying to make me feel good. He meant it. My breasts just got promoted to my favorite body part. Sorry calves, you just got demoted. \n\n*******************************\n\nI had Kiran nearly in tears she was laughing so hard. My flat tire exploit was funny now that it was history. Lost a skirt, blouse, and one shoe (therefore two) in the incident. It cost me money I could hardly afford to get the tire repaired, not to mention the sleep I lost. At least my breasts were beautiful. That's the part Kiran thought was best. Thankfully, Raj and Aanya were in the other room while I helped Kiran in the kitchen. Raj would be embarrassed for me and not see the compliment I saw. Kiran understood. She had a wonderful sexy side that she usually only let Raj see when the lights were down. She trusted me, so I knew some of her secrets.\n\n\"I told you,\" Kiran said, between gasps, \"you have it going on.\" Another bout of laughter caught her as she imagined me nearly naked on the side of the road. \n\n\"It was kind of nice, \" I agreed, \"embarrassing, but I think he really thought I was hot.\"\n\n\"You need more flat tires,\" Kiran laughed, \"maybe wear a bikini next time.\" I tried to hold back my smile, but I just couldn't. It felt good to be admired, if only for a few minutes. I wasn't an exhibitionist, that I knew. It was just his smile and his words. \"You should have gotten his number,\" Kiran added. \n\n\"No,\" I said, \"I couldn't. I would die of embarrassment if I ever saw him again.\"\n\n\"He said you were beautiful, \" Kiran countered, \"and you said he wasn't hard on the eyes.\" I pushed Kiran's shoulder, lovingly. \n\n\"He's probably married,\" I argued, \"what are you are trying to do? Turn me into a slut.\" Kiran gave me a sly smile.\n\n\"A man tells you, you are beautiful, you can at least see if he is married,\" Kiran raised her eyebrows up and down. Raj had his hands full with this one. I chuckled and held back my response. There was no arguing sex with her. \n\n\"You need to take some risks,\" Kiran continued, \"I did with Raj and never regretted it. He is a good father and keeps the bed very warm.\" Her smile told me exactly what she meant. \n\n\"I think you took the last good man, Kiran,\" I said, half meaning it, \"the rest are married, gay, or after only one thing.\" I wouldn't mind that one thing, but a possible future would be a requirement. \n\n\"You need to stop spending your Saturdays here,\" Kiran said, \"you need to put yourself out there.\" She smiled, \"maybe enter a few wet t-shirt contests.\" We laughed together as we began putting the fried potato patties on the serving tray. I had already forgotten the name of the things. My tongue loved them, it was my brain that refused to cooperate. \n\nAfter a nice dinner, we all sat down for Aanya's board game. It was different from any other game I had ever played. It turned out to be a very enjoyable game. It was called Stone Age and you had to lead your people from a hunter-gather society to an agrarian one. You did this by gathering resources with workers and dice. You then spent the resources to buy huts and special cards. It was easy to learn and engrossing. Raj won the first game and we all agreed to play another. I thought I had the second game in the bag, but Aanya won by two points. She had amassed a good collection of cards. I would have been upset, but the look on her face was wonderful. She was young and needed the victory. It made the game all the better. \n\nAanya complained when her mother told her it was time for bed. I gave her a hug and promised to play her game again next week. I was actually looking forward to it. I think I had a strategy down that would lead me to victory. She kissed her mother and father goodnight. I watched the affection and was slightly jealous. I wanted what they had. I wanted crazy passion with a man followed by a family filled with love. I didn't think that was too much to ask for. \n\nRaj broke out a bottle of wine. He and I were just entering our normal work cycle so we were wide awake. Kiran struggled to stay with us during the weekends. I always left when her yawns exceeded more than one a minute. We talked about American things. TV, thank the gods for the DVR, movies, books and anything that made them feel more like citizens. As the night wore down, the topic usually returned to work. That is when Kiran would begin to yawn. \n\n\"Your mother was especially upset last night,\" Raj said, remembering Agnus's tirade about the trash cans not being washed out. I just emptied them since they all had liners. \n\n\"She is just trying to wear me down,\" I said, \"it will take more than trash cans to get under my skin.\" I took a sip of my wine. They both knew that the company was mine as long as I could hold out until I was thirty-two. \"Why do you stick around Raj,\" I said and quickly qualified, \"I would hate to lose my only friend there, but she treats you like crap.\" Kiran and Raj exchanged a look I didn't recognize. I was missing something. \n\n\"My staying here in America requires I keep this job,\" Raj said, \"I don't have a choice.\"\n\n\"Is India that bad?\" I asked. It didn't seem so horrible. I had even considered visiting there when I came into my inheritance. If Raj and Kiran were examples of the people there, I definitely wanted to make the trip. Kiran's face lost its happiness. I had asked something I shouldn't have. \n\n\"My family would not cherish my return,\" Kiran said, \"they think I am dirty now.\" I saw a sadness in her. I didn't like how it looked. \n\n\"I am not the same caste as Kiran,\" Raj said. Kiran scooted over and leaned on Raj. I had asked something very sensitive. \"she married below her status and it is just not done in her family.\" He paused for a moment before he continued. \"Her family holds with the old ways. She and Aanya would be at risk if we were to return.\" I sucked in my breath. I didn't know there were places in the world where things like that still mattered. \n\n\"I didn't know,\" I said in a way of an apology. \n\n\"How could you,\" Kiran said with a forced smile. I had visions of Kiran and Aanya dragged off to some horrible family tribunal.\n\n\"To America,\" I said, raising my glass \"and your quick path to citizenship.\" Raj smiled and Kiran's smile lost its fakeness. We tapped our glasses together and I quickly changed the subject. The rest of the evening went with less drama and returned to our own brand of humor. I needed them for my sanity and they needed me for a friend. It was a good arrangement. I left when Kiran's yawns exceeded the prescribed parameters. \n\n*******************************\n\nI was early for once. It was nice to avoid Agnus's admonishments. I was surprised to not find her waiting for me with new degrading instructions on her lips. I took it as a gift and moved to my closet and began retrieving my supplies. I didn't see myself cleaning offices for the rest of my life, but it didn't take a lot of thought and allowed my mind to drift. Lately, it drifted to a man named Peter. Every time I saw that smile in my mind it sent champagne bubbles through my blood. \n\n\"What will I wear?\" I heard it from my stepmother's office. It sounded like Drizella. I quietly moved down the hall. It was rare to find one of my step sisters at the office anywhere near closing time. \n\n\"We'll go shopping,\" Angus announced with an excited voice, \"for both of you.\" I heard a duet of agreements and knew that both of my sisters were there. I walked into the office, my curiosity getting the best of me. Sure enough, what constituted my family was gathered in Agnus's office. \n\n\"Shopping?\" I said. I knew it didn't mean me. I liked the tinge of guilt I could generate in them. They may be gold diggers, but they were human as well. I watched their expressions of joy dissipate as their eyes found me. Chalk another one up for Ella. It was going to be a good night. \n\n\"This doesn't concern you,\" Agnus threw back. She was using my inheritance so I felt it did. \n\n\"Sounds like a party,\" I said with an excited grin. I looked to my sisters and they lit up, foolishly thinking I was sharing with them. \n\n\"Charity cotillion,\" Anastasia blurted out. It was so easy to stir her red haired covered brains. I looked back at Agnus who was trying to feign disinterest. \n\n\"I suppose we are making a donation,\" I commented. I made sure the word 'we' was emphasized. Agnus looked flustered. I knew instantly that this was more a society play than a business decision. She had a high opinion of herself and her two daughters. \n\n\"It is beneficial for us to contribute back to the community,\" Agnus lied. She was trying to get her daughters married off to wealthy men. Maybe find another one for herself. More of my money down the drain. Anyone willing to marry those two, wouldn't be rich for long. \n\n\"Everybody who's anybody will be there,\" Anastasia added.\n\n\"What's the charity?\" I asked. I almost threw my dust rag at Agnus when she had to look it up on the invitation. Beneficial for the company my ass. \n\n\"Children's hospital,\" Agnus read. At least my money wasn't being thrown in a ditch. I felt a little better. I decided I would make Agnus uncomfortable anyway. \n\n\"Where's my invitation?\" I asked. It was fun watching her fumble with her mind. She was spending my money after all. She didn't see it that way, but I did. \n\n\"We need executives to represent the company,\" Agnus smiled when the answer came to her, \"janitorial staff would not be how we would want to represent ourselves.\" I smiled back and watched her lean away. She hated my smile. Seven more years. \n\nI left them, curses dying on my lips, and returned to my cleaning. It infuriated me that they were using my company to further their gold-digging plans. I almost swore at my father for leaving me in such a predicament. I sucked it back. He was only human and had little defense against a demon like Agnus. \n\nAgnus and her daughters left shortly after. They were babbling about tomorrow's shopping. Executives my ass. I was in an especially dark mood when I sat down with Raj later that night. Even my glasses seemed to be steamed up. \n\n\"Why don't you go?' Raj asked me after I had explained my mood. \n\n\"Psst,\" I spat, \"me at a formal dance. I couldn't afford to look in the front door. Agnus keeps the purse strings tight about my neck.\" Raj turned back to his terminal and began typing. He turned back around with wide eyes. \n\n\"$5,000 a plate,\" Raj said, \"your sisters better have a good time.\" \n\n\"$5,000?\" I exclaimed. Raj nodded. \"That bitch. I will be lucky if there is anything left when she's done.\"\n\n\"Why don't you go?\" Raj repeated. \n\n\"Where would I get $5,000?\" I asked, waving at the atmosphere, \"I could barely afford to get my tire fixed. Agnus certainly won't give it to me.\" Raj smiled and went back to his terminal. I moved behind him to see why he was so pleased with himself. His fingers were moving quickly as he fired off some program I had never seen. \n\n\"How many tickets do you want?\" Raj asked. His voice was arrogant and full of pride. I saw a series of text prompts followed by commands I did not understand. \n\n\"What are you doing?\" I asked. \n\n\"I am in the organizers database,\" Raj said, \"I can slip in a ticket for you and no one would be any wiser.\" He was exceptionally proud of himself. \n\n\"You hacked the system?\" I asked. The thought scared me. I took a step back as if that would make it less wrong. \n\n\"No one will know,\" Raj said, \"I wrote a program that finds its way into networks.\" I stared at him. I thought I knew him. \"I've never used it before, but it's untraceable.\" He chuckled to himself, \"these people are good. Shark firewall, but I chewed through it in under five seconds.\" \n\n\"Raj!\" I said, \"you could end up in jail.\" He shook his head. \n\n\"They've never seen anything like this,\" Raj praised himself, \"It travels through so many proxies it's untraceable. That's if they figure out I was in at all.\" \n\n\"Why would you write such a thing?\" I had a whole new opinion of him. It was scarier. \n\n\"I toy with all sorts of code,\" Raj explained, \"once I get my citizenship, I am going to need a resume. This will be the cornerstone. I am a master of network security. This proves it. Shark firewalls are the best in the business. The same ones the military uses.\" \n\n\"You're risking too much, Raj,\" I said, \"you'll never get your citizenship if you get caught.\" \n\n\"I'm careful,\" Raj said, but I noticed he ended the code's execution. \n\n\"Thanks, but I prefer you out of prison, \" I said with a smile, happy he turned off his hacking program. Raj smiled back with a bit of hesitancy. I don't think he thought the whole thing through. Writing the code was as far as his mind took him. He had such a brilliant mind. I think Kiran married up, not down. \n\nThe rest of the evening went as the hundred before it. I learned a little more about the company while sharing a nice conversation. The cotillion left my thoughts and hopefully Raj's.\n\n*******************************\n\nMy drive home was dry and without a flat tire. I arrived home to find my sister's already awake. It was odd to see them up before seven. I usually made it a point to be in my room when their alarms began to sing at seven thirty. \n\n\"Do you think he will be there?\" Drizella asked. Anastasia was leaning on the counter in the kitchen sipping on a cup of tea nodding.\n\n\"Of course he'll be there,\" Anastasia replied, \"his family runs the thing.\"\n\n\"Good-looking and loaded,\" Drizella smiled, \"we should research him. Find out what he likes. I sure wouldn't mind walking down the aisle with him.\" My interest was piqued. I almost wanted to call the poor guy and warn him. \n\n\"You'll have to go through me first,\" Anastasia warned, her red hair waving from side to side as she bobbed her head. \"You wouldn't have even known about him if it wasn't for me.\" Drizella looked like she might fight back, but instead, became thoughtful for a moment. \n\n\"We can't go upset with each other,\" Drizella reasoned, \"he'll hate us both. No one wants bickering sisters.\" Anastasia's face softened. \"he has to have rich friends. If we play nice, the winner can set up the other with his friends.\" A smiled grew on Anastasia's face. It was mirrored on Drizella's. I hated when they laughed together. It sounded like a clutch of chickens with breathing problems. I moved in to save my ears.\n\n\"Who are you two after now?\" I said as I entered. Anastasia was startled, which pleased me. Drizella just smiled. It looked like her mother's smile. It displeased me. \n\n\"You wouldn't know him,\" Drizella said with a sweetness coating her bitter undertones. \n\n\"Try me,\" I said. \n\n\"You know the Charmings?\" Anastasia asked, \"the one's throwing the charity cotillion?\" I nodded though I had no idea who they were. High society was lost on me. \n\n\"They have a son,\" Drizella continued, \"he's single, wealthy, and not hard on the eyes.\" Anastasia chuckled. Another chicken chuckle. \n\n\"And you two are going to throw yourselves at him,\" I observed. Inside I was laughing. He would have to be a complete idiot to connect with either of my step sisters. It would almost be worth the $5,000 just to watch. \n\n\"Throw is the wrong word, dear sister,\" Drizella corrected, \"we are not without charm.\"\n\n\"Certainly not,\" Agnus agreed. She came in behind me and made me jump. I hate when she does that. \"and we have to go shopping to make sure he sees those charms.\" \n\n\"I thought this was business related,\" I said, my tone dropped to my disgusted level. \n\n\"Two birds, my dear, two birds,\" Agnus said. She moved to the coffee pot and poured herself one. \"Would you like a cup, Ella?\" She always offered me things she knew I would decline. I was on my way to bed and in no need of caffeine. I choose not to respond.\n\n\"You can't use company funds to marry off your daughters,\" I said. I shouldn't have, but she was spending my inheritance in the most irritating way. Agnus just smiled at me and sipped her coffee. She knew she could. \"How does hounding the son of the benefactors improve Tremaine Marketing's image?\" I was getting angry. I should have just gone to bed. \n\n\"It is all a little above your head, dear,\" Agnus continued. More chicken giggles from her daughters. \"It's best to leave the complexity to those who understand it.\" My face began to heat up. I had to remind myself that she held the purse strings for seven more years. \n\n\"You look like you can use some sleep, dear,\" Agnus continued. She took a sip of her coffee and seemed pleased watching me stew. \"Jealousy doesn't become you,\" Agnus added. It was all I could do to not scream. They were in my house, working at my company, and spending my money. There wasn't a damn thing I could do about it. \n\n\"Seven years, Agnus,\" I said slowly. I was grinding my teeth. \n\n\"That's a really long time, sweetie.\" Agnus's grin was unbearable. I almost let loose of the 'B' word. I knew it would be costly if I did. I took a deep breath and gave her the smile see disliked so much instead. At least it removed hers. I headed off to bed, my mind fuming at my father for leaving me in such a mess. \n\n*******************************\n\nI hardly slept at all that day. It is hard enough to keep your eyes closed when the sun is out. Add in a controlling stepmother that boiled my brain and sleep was the last thing my mind wanted to do. Instead of counting sheep, I thought of many wonderful methods of torture for Agnus. When it was time for work again, I was exhausted, angry, and less than friendly. \n\nI stepped off the elevator on time. Agnus was waiting with a list of todos. I think she saw me near the breaking point. I kept to my smile and half listened to her demands. She became flustered halfway through, seeing that I wasn't going to lose it. We exchanged veiled unpleasantries and headed our separate ways. Without my surrender, the war would rage for another seven years.",
        "\"Bad day?\" Raj asked. I had sat down rather hard and I think I was glowering. \n\n\"I am letting her get to me,\" I sighed, \"I have to watch her trash my future and there is nothing I can do about it. Now she wants to trade some of my future so her daughters can fish for husbands.\" I chuckled when I thought about it. \"It's not like they have a chance anyway.\"\n\n\"They do come off a bit needy,\" Raj agreed. \n\n\"A bit greedy,\" I corrected. Raj laughed then covered his mouth with his hand. He was never one to loudly disparage someone else. Anything above a whisper made him uncomfortable. His stalled laugh did make me feel better. At least someone in the world understood my troubles. \n\n\"I still think you should attend the cotillion,\" Raj said after he brought himself under control, \"you need to get out and meet people and rescue your sister's poor targets.\" This time, I laughed while shaking my head no. \n\n\"Even if we could get away with it, I couldn't short the children's hospital $5,000,\" I responded. The thought of me running around warning men of my sisters approach was amusing. I could see Rag was disappointed in my choice. \"You just want to use your new toy,\" I observed.\n\n\"For good. It must never be used by the dark side,\" Raj joked, \"I can think of nothing more honorable than putting you on the dance floor where you belong.\" I liked how he could make me forget my stepmother. I smiled at his sincere humor. I needed more friends like Raj and Kiran.\n\n*******************************\n\nThe weeks went by and I was confronted with new dresses, hairdos and shoes. My stepsisters seemed to enjoy modeling for me. My money, my house and they didn't stop to think I might resent it. I tried to ignore it all, but a small black pit formed in my stomach and I couldn't seem to fill it with happier things. I could forget my thoughtless family when I went to see Raj and Kiran, but I would eventually return to see my sisters all dolled up, practicing for the cotillion. As the dance neared, it only got worse. For the first time, I was truly happy I worked nights so I wasn't inundated all my waking hours. \n\n\"Two more weeks, Raj,\" I sighed as I sat down to watch him work, \"I will be happy when this dance is over so I don't have to watch my sisters preening anymore.\" \n\n\"I've been thinking, Ella,\" Raj said quietly, \"what if you paid for the charity tickets.\" He knew I didn't have that kind of money. \n\n\"Raj, I'm lucky to pay for the gas to get to work,\" I said. His smile was devious and he leaned closer. \n\n\"What if the company paid,\" Raj whispered, \"it's your money anyway. Or it will be.\" \n\n\"You want me to embezzle?\" I asked with a little shock.\n\n\"You would be stealing your own money,\" Raj justified, \"my program will make it impossible to trace and you would be where you should be.\"\n\n\"There's not enough time,\" I wavered, \"Agnus would see me there anyway and we would find ourselves in prison.\" The idea of attending the function did have a strong appeal. To see my sisters hopelessly flailing at men would be worth the entrance fee.\n\n\"Agnus only sees you as you are,\" Raj continued, \"if you rid yourself of your ponytail and glasses, add some makeup and a new hairstyle, I would have trouble recognizing you.\" I shook my head.\n\n\"There's not enough time,\" I repeated. Raj smiled again. \n\n\"Kiran has a friend who is a seamstress. She does alterations for wealthy women,\" Raj argued, \"you can borrow a dress for the night.\"\n\n\"Kiran is in on this?\" I asked. Raj's smile was growing. \n\n\"She wants to see you all dressed up,\" Raj said, \"she thinks you miss too much of life.\" I couldn't believe Kiran was in on the conspiracy. It made it seem more feasible. \n\n\"I can't see without my glasses,\" I conceded.\n\n\"Contacts.\"\n\n\"I can't afford contacts.\" I admitted. I would have to save up and a week wasn't enough time. \n\n\"Your company can.\" Raj was countering all my objections. \"I can crack Coupon Crave's servers and get you in on a contacts deal as well as limo and hairdresser. I have to fit you in after the fact, but they will never know and I'll make sure you pay everyone.\" I stared at him. My friend was a master criminal and I never knew it. \n\n\"You owe yourself this,\" Raj continued, \"you can't wait till you're thirty-two to start living. You'll get too used to being alone. Kiran and I don't want to see that.\" \n\n\"You sure we can't get caught?\" I asked to reassure myself.\n\n\"It would take someone very skilled just to know they had been hacked,\" Raj replied, \"even more talented to trace it back to the last proxy. No one has seen code like this before. They won't even know what they're looking at.\" \n\n\"It really is my money,\" I said, trying to convince myself. Raj looked pleased with himself. He knew he nearly had me over the edge and ready to say yes. \"I would really enjoy watching Drizella and Anastasia bomb.\" \n\n\"And you might even meet someone,\" Raj added. In my dreams. Raj was already taken and everyone else works days. I questioned whether there was another vampire out there for me. A little flirting may not hurt, though. \n\n\"Kiran will help?\" I had no idea while I kept piling requirements on. Raj just nodded. \"Okay,\" I committed, \"let's do it.\" Excitement replaced the black pit in my stomach. Raj turned to his terminal and went to work. He turned his chair around and handed me a phone. \n\n\"Type in a password, something unique,\" He said.\n\n\"Whose phone is this?\" I asked, turning it over. It was just a slim black smartphone. \n\n\"Yours,\" Raj said, \"present from Kiran and I. It's prepaid so it's not tied to your name.\" He always knew I was going to cave and say yes. I laughed softly. \"Something somewhat long so that it can't be broken into. I have some encryption of my own invention running on it. Without cracking the password, it's contents are useless.\" I thought for a moment, then laughed to myself as I typed in the first memorable thing I could think of. It was fairly long but made me smile and I wouldn't forget it. \n\n\"What name do you want to use?\" Raj asked as I handed the phone back to him. This was going to be completely cloak and dagger. I picked the first thing that came to mind.\n\n\"Cindy,\" I said, \"Cindy Thompson.\" Raj began typing. He worked for over thirty minutes with joy in his eyes. He was impressing himself as much as he was impressing me. He went back to the phone and began working on it, then back to his terminal. Finally, he handed the phone back to me. \n\n\"All set Cindy,\" Raj said as proud as one man could be, \"you have an appointment for tomorrow at the eye doctors, it and all the rest are in the Coupon Crave app on the phone. Your ticket for the charity ball is in the email account I created for you.\" \n\n\"You are incredible,\" I complimented.\n\n\"Just toss the phone away when you're done,\" Raj added, \"it's the only thing that comes close to tying you to the fact you stole your own money.\" I had no choice, I hugged him. It made him uncomfortable, but I needed too. He was smiling when I separated, so no harm done. \n\n*******************************\n\nKiran helped me choose a dress. Had I seen it in a catalog, I would have never picked it out. When it was on my body, I couldn't not choose it. A soft champagne pink fabric that was cut and sewn in such a way, it looked like it came over my shoulders loose and wrapped my breasts, then tied off in the back. Below the faux wrap, a pleated high shirt started and flowed ever more sheer to the floor. It was soft elegance. Kiran's friend, Samantha, altered it to fit snug around my waist and drop into my cleavage. Just enough showing, to tease, but not arouse. I felt beautiful. \n\n\"Now, no stains or anything,\" Mary reminded me, \"and take care to not snag it when you enter or leave the car.\" It made me a little nervous. I knew it was an expensive dress. \n\n\"I'll take good care of it,\" I replied. I could see her apprehension. She was doing this as a favor for Kiran and didn't know me at all. \n\n\"It does look good on you,\" Mary smiled. Kiran agreed. I twirled a couple of more times in front of the mirrors. It was the best I had ever looked. \n\n\"You need to stop in and see Madam Winslet,\" Mary continued, \"she would have the perfect shoes for that dress. She owns a boutique off Harlem.\" \n\n\"Sounds expensive,\" I said. \n\n\"You have to have the right shoes,\" Mary instructed, \"she's a friend of mine. I'll call ahead and make sure she gives you her best price.\"\n\nMary was right. Madam Winslet sold me a pair of pink heels that really completed the dress. I would be paying them off of the next six months, but I did get a 50% discount off the $1,500 list. They became the most expensive piece of clothing I had ever purchased. Most likely, I would wear them only once. \n\n*******************************\n\nI slept in the control room, the night before the cotillion, under Raj's watchful eye. It wasn't comfortable and I was only able to grab a couple of hours, but I needed them for the day ahead. I would add a few more hours in the morning then off to the hairdresser. I had an 11:00 AM appointment. The Limo was supposed to pick me up at five. It would be tight, but the hairdresser was close to home and Kiran was there to carry me through the final stages. \n\nThe hairdressers accepted my phone's Coupon Crave coupon without question. I was a little hesitant when I handed it to them to verify, but Raj had done his job well. \n\n\"My name is Daphne and I will be taking care of you.\" The woman said as she approached. I smiled as the blonde led me to a chair. Her hair billowed out near her shoulders and seemed to frame her face well. I had high hopes for my hair as well. \"Beatrice will join us in a moment to handle the makeup.\" Daphne smiled to set me at ease as I sat down. \"Now what are your looking for, dear?\" \n\n\"I'm not sure,\" I admitted.\n\n\"Something elegant,\" Kiran jumped in, \"she's going to a formal ball.\" \n\n\"That will be fun,\" Daphne stated as she fluffed my hair, \"maybe a high braided bun with a few accents strands running loose. It would look divine with your skin tone.\" She tucked some of my hair up high on my head, \"we'll have to add some highlights to make it pop.\" The last time I had a high maintenance hairdo was when I went to prom. I would have to take her word for it.\n\n\"That sounds nice,\" I said, looking at Kiran for help. \n\n\"Lovely,\" Kiran agreed. I felt better about my decision. \n\n\"My head is yours, Daphne,\" I directed. She removed my glasses and started with a warm wash that felt so good I almost nodded off. My light brown hair was then professionally highlighted with soft dirty blonde streaks that seemed to blend perfectly, almost like they had been there all along. Daphne knew her job. \n\n\"Your first big dance?\" Daphne asked. She was trimming away my split ends and cleaning up hair by my neck. \n\n\"Prom was the last one,\" I answered, trying not to move my head.\n\n\"We'll make you the star of the ball,\" Daphne smiled, \"you'll have men throwing themselves at your feet.\" I tried not to laugh, not wanting to disturb her scissors.\n\n\"I'll just be happy to not trip on my own feet,\" I said with a smile in my eyes. \n\n\"Nonsense,\" she continued, \"you have wonderful bone structure and with a smile like that, they will be fighting for a dance.\" I felt my face blush. I don't know how much I had embezzled for her services, but it wasn't near enough. \n\n\"It's been awhile,\" I joked, \"not sure I remember what to do with a man.\" \n\n\"It's like riding a bike,\" Daphne quipped, \"but a lot more smiling comes with the sweating.\" I couldn't stop the laughter this time. Kiran's face wasn't helping. \"You'll have to be still if you don't want to look like Medusa.\" I settled down, struggling to hold my smile in check as Daphne went back to work. \n\nDaphne pulled my hair into a tight braided bun with a few small trailers that were curled down the side of my face. It felt strange not to have a ponytail hanging behind me. My head felt freer with nothing to resist my neck from turning. \n\n\"Absolutely wonderful,\" a large woman said as she moved toward my chair.\n\n\"This is Beatrice,\" Daphne said, \"she'll take care of your makeup.\" Beatrice walked around the chair looking at my face, her fingers drawing shapes in the air almost like she was finger painting. \n\n\"What color is the dress?\" Beatrice asked. \n\n\"I have it in the car,\" Kiran announced. \n\n\"If you could bring it in, it would help,\" Beatrice added, not looking at Kiran. Kiran ran off quickly. \"We don't want to do anything that would lessen the dress or the hair,\" Beatrice mumbled, \"they should compliment, be friends and laugh together.\" I was a bit worried she might be insane. \"I never try to build beauty, only bring it out. Gently steer the eyes in the proper direction, but never demand their attention.\" \n\n\"She's an artist,\" Daphne commented, \"trust her and you will be pleased.\" I had little choice since I was already way out of my league. Kiran entered with the dress. Beatrice pulled back the plastic and held a small portion of the fabric under my chin. Her head moved wildly from side to side, then up and down. She was looking from every angle. She handed the dress to Kiran and wordlessly shooed her away. \n\nDaphne brought over a large case and set in on the counter. The top opened down the center and it unfolded into numerous trays filled with all sorts of makeup products. Beatrice took one last look at my face, turned and grabbed a jar with acuity. \n\n\"Close your eyes, dear,\" Beatrice instructed. I did and relaxed as the chair lounged back. I heard a stool sliding up next to me. She went to work. She was humming some tune I almost recognized as she lightly applied something to my eyelids. Fingers, cloth, and brushes moved across my face with expertise. For all I knew, I would look like a clown, but she didn't seem to be making any deviations from her intended vision. She paused for a moment when I yawned. It was, after all, my internal clocks middle of the night. The work continued when my mouth settled. \n\nI was almost to dreamland when Beatrice announced she was finished. I opened my eyes and saw three heads staring at me with smiles. Daphne raised my chair back into a sitting position and they all stepped aside. I could barely recognize the face in the mirror. Daphne's hair and Beatrice's face combined to give me sophistication with an air of fun. I smiled. The face in mirror glowed. I had never looked so good in my life. \n\n\"Camera?\" I asked Kiran. She fished her phone out of her purse and captured my new look. It would only last for the night and I wanted proof. \n\n\"You're gorgeous,\" Kiran said as she examined the screen on her phone to make sure the picture came out. I turned to Daphne and Beatrice.\n\n\"Thank you,\" I gushed, \"you're miracle workers.\" \n\n\"It's all in the raw materials, my dear,\" Daphne said, waving the compliment away. \n\n\"We did do good, though,\" Beatrice smiled as she nodded. I suddenly couldn't wait to get home and don the dress. \n\n\"4:15,\" Kiran announced, \"we have to rush.\" I left a sizeable tip. I couldn't really afford it, but I haven't been this pleased with my looks since I figured out my parents were biased when I was five years old. I grabbed my glasses off the counter and headed out the door. \n\nKiran and I hurried to her house. I put in my contacts and stashed my glasses and a change of clothes in Kiran and Raj's guest room. When I came out of the room fully dressed, Raj gave me a wolf whistle. Kiran smiled and didn't even scold him. Aanya was wide-eyed, her expression said it all. I twirled, watching the hem of my skirt billow out. Everything was perfect. I had never been perfect before. Tonight, I would be a princess. \n\nThe doorbell rang. Our timing was perfect. Raj opened the door to two gentlemen in black chauffeur livery. \"Elite Limousine at your service,\" the older of the two bowed. The younger, somewhere in his twenties was staring at me. He got an elbow from his elder. \"I am Jaq, your driver,\" the elder smiled as he spoke, \"and this is my son, Gus. He will be handling the doors.\" \n\n\"Pleased to meet you,\" I said and for the first time since a fifth grade play, I curtsied. It seemed so natural and the dress seemed to flow with it. Aanya giggled and I shared a smile with her. \n\n\"Are...are you ready, Ma'am?\" Gus stuttered. His eyes were still taking me in. He made me feel even more beautiful. I smiled at him and his face went red. Yes, I was more than ready. Kiran giggled. \n\n\"I am ready, Sir,\" I said, moving toward the door. Kiran rushed forward with the small pink hand purse I had found at the store. The color was perfect for my dress and held my phone and some backup makeup. Everything else, I left with Kiran. \n\nGus held the door of the limo for me. He looked gallant doing it and had obviously been given instructions on how to stand. Jaq seemed proud of him. I thanked him as I entered which brought a smile to his face. There was room for ten people in the back of the limo. I was careful to tuck my dress carefully so it would keep its shape as I sat. Gus made sure my dress was completely inside before he closed the door and joined his father in the front seat. \n\n\"We should have you at The Fountains in twenty minutes, Ms. Thompson,\" Gus said and pushed a button which started a divider rising up behind the driver seat. \n\n\"Please,\" I said, startled at being closed in, \"I would rather you didn't close me off.\" \n\n\"Of course, Ma'am,\" Jaq said with a smile and lowered the panel. He started the car and headed down the road. \"It is a fine night for a dance,\" he commented, realizing I preferred conversation. \n\n\"I am so looking forward to it,\" I said with a formality that was born from the dress, \"It has been a long time since I have attended one.\" I didn't tell them it was my high school prom.\n\n\"I think you will make quite the impression,\" Jaq continued, \"Grace and beauty always play well at these affairs.\" I felt my cheeks warm. Grace and beauty. \n\n\"I borrowed the dress,\" I admitted, to embarrassed to accept all the credit. \n\n\"A shame you can't keep it,\" Jaq said, \"you wear it so well.\"\n\n\"I...thank you,\" I said, unused to the compliments. \n\n\"It's really pretty,\" Jaq added. My smile was becoming permanent. Jaq was turning in his seat, I suspect to face me. A stern look from his father had him cease and return to facing front. \n\n\"I don't usually go to these types of things,\" I said, as I realized the ball was becoming a reality. A little apprehension was sneaking in. \n\n\"You will have no trouble fitting in,\" Jaq countered, \"Though I suspect you will be exhausted from all the offers to dance.\" \n\n\"I am afraid I don't know anyone there,\" I admitted. I would know my step family, but I was intent on avoiding them. \n\n\"It's all in the advertising,\" Jaq said, \"just say yes to the first dance request and make sure you're seen on the floor.\" He chuckled almost to himself, \"The single men will go into combat mode to get the next dance. I must admit, I find you brave to attend unescorted.\" I wasn't sure if I wanted to cringe at the thought or bask in the glory of being brave. I looked out the window, now wondering if I had made the right decision. I did it more to have a secret fight with my step mother. A battle she wouldn't even know we were having. \n\n\"Gus and I will be right outside,\" Jaq continued. I think he sensed my apprehension, \"If you need to take a breather, thwart a suitor or leave early, we are at your disposal.\" I smiled at him. I could use a couple of brothers for emotional support. \n\n\"That is good to know,\" I said, \"I might take you up on that breather. Any other pointers?\" \n\n\"Just smile,\" Jaq said. \"It's usually pretty stuffy at these things and you are going to be like a fresh breeze.\" I blushed, happy I chose not to drive alone to the event. I needed my embezzled pseudo brothers. \n\nI spent the rest of the trip learning about Jaq and his son. Gus was learning to take over his father's business and he made sure I knew he was currently unattached. I was flattered with his subtle flirting, knowing that his father would keep it in check. He was a nice guy, but not my kind of guy. I couldn't really define what I was looking for in a man. I only knew what wouldn't work. I wasn't even sure a perfect partner existed for me. Given my current work schedule, he would have to be part vampire.",
        "Gus deftly pulled the limo around the main fountain missing the other vehicles by inches. The building was called 'The Fountains.' Though I had driven past the front gate before, I could never see over the hedge grove that bordered the property. It was luxurious. Three story high roman columns stood sentry along the long stone porch. To each side of the grand entry steps, lay expertly trimmed bushes that were dotted with red flowers. Light shone through the tall windows, driven by elegant chandeliers that I could just make out since the main floor was raised a good ten steps higher than the drive. Finely dressed people, mostly couples were climbing the steps and heading toward the entrance. \n\nJag moved quickly to open my door. He was smiling as I exited, happy that his father's eyes were finally pointed elsewhere. I straightened my dress as I stood and did a quick turn around. \"How do I look?\" I asked Jag.\n\n\"Beautiful, Ms. Thompson,\" Jaq replied, with a tinge of desire. More flirting. For his benefit and because I couldn't stop it, I smiled honestly. I saw his cheeks go red again. It was all the encouragement I needed. \"We will be parked near the walkway,\" Jaq added, pointing off to the side where a brick walking path terminated.\n\n\"Thank you, Jaq,\" I replied. I took a deep breath, straightened my shoulders and started up the stairs. \n\nThere is something about walking into a new experience where past knowledge was useless and perceived scrutiny is high. It raises the heart rate and increases stupidity. My heart went into overdrive as I pulled my phone from my purse. It took three tries to type in the long password that I no longer thought humorous. A well-dressed doorman scanned the invite off the phone and waved me inside with a smile. I almost tripped over the threshold. \n\nI bypassed the coat check table and walked slowly into the ballroom. I was a fish out of water. People were gathered in small groups around the rim of the dance floor. There were small waist high tables scattered about that most of the groups had gravitated to. Waiters and waitresses roamed taking orders and delivering drinks. I had thought myself lonely before. I was desolate now. \n\nStanding in the entryway seemed conspicuous and the last thing I desired was to be seen as obviously lost. I fought off the idea of running back to the limo. I moved slowly into the room, fighting the fear I knew was irrational. I set a goal. Find the bathroom I would eventually need. It let me move with more of a purpose.\n\n\"What a lovely dress.\" The comment came as I passed one of the small occupied tables. I questioned whether it was directed to me and turned my head late in response. \n\n\"Truly lovely,\" A second speaker stated. She was a mature woman oozing sophistication. Her smile seemed honest though her posture was starched proper. Her friend, I suspected the initial speaker, stood a little more cavalier though her jewelry spoke of years of wealth. Both were in conservative, but appealing gowns. \n\n\"Thank you,\" I stammered. My feet stopped oddly out of sync with my turn. I was both happy that someone had spoken and nervous that I may enter into a conversation out of my league. The cavalier women smiled and covered a small chuckle with her hand. \n\n\"Stop it, Betty,\" Ms. Sophistication scolded, \"she is nervous enough.\" She turned to me, gracing me with a warm smile. \"You look like you may need a friend. Would you like to join us for awhile?\" I had never heard kinder words in my life. \n\n\"Yes, very much,\" I said with more enthusiasm than appropriate. Betty's smile became inviting as she made room for me to slide up to the table. I saw they both had glasses of wine untouched in front of them. They may have just arrived.\n\n\"I am Ruth and this, of course, is Betty,\" Ms. Sophistication said, \"and you are?\"\n\n\"Cindy,\" I replied, happy that I had enough sense to not say Ella. \n\n\"I gather this is your first shindig,\" Betty said, ignoring the scowl on Ruth's face. Betty was a straight forward woman who didn't hide her intentions. She moved quickly to the point and wasn't overly concerned with niceties. I liked her. \n\n\"Yes,\" I said, more in my element with Betty, \"this event is a lot nicer than I am used too.\"\n\n\"Well you certainly dressed for attention,\" Betty complimented. Another scowl from Ruth. \"you'll have those boys eating out your hand.\" I suppressed a laugh.\n\n\"I'm not really here to find a man,\" I admitted, \"it is more of a small revolt. I was told I couldn't go and I decided I could.\" \n\n\"Never let them tell you no,\" Betty insisted, jabbing her finger on the table to emphasize the point. \"I like you already.\" \n\n\"But be pleasant when you do it,\" Ruth said softly, trying to counter Betty's aggressiveness. \n\n\"Would you like something to drink?\" A waitress had snuck up behind me.\n\n\"Yes,\" I replied. At $5,000 a ticket, I should drink a few gallons. \"some wine would be nice.\" \n\n\"Red or white?\" The waitress queried. I had no idea how to answer. It depended upon how sweet the wine was. I was always partial to whatever was on sale and had a screw off top. I knew I was thinking too hard when Ruth jumped in.\n\n\"Why not try both,\" Ruth said, nodding to the waitress, \"then you can decide your flavor for the night.\" I didn't even know that was an option. I looked up hopefully at the waitress, but she had already moved on, Ruth's suggestion taken as the order. \n\n\"Thank you,\" I said, smiling at her diplomacy. \n\n\"Excess is always the main theme at these things,\" Ruth instructed, \"never fear to ask for what you want. It is expected.\" \n\n\"Ugh, those Tremaine girls are here,\" Betty said, her eyes pointing to the entrance. I took a quick look at my stepsisters and their mother. I had to admit they looked good. If they kept their mouths shut, they might attract a few men. \"Those two have been hunting for gold the last four events,\" she continued. My face reddened. How much of my money were they using to fund their safaris? \n\n\"Hunting?\" I asked, keeping my back to my sisters. I knew the answer, but I wanted to keep the conversation going. I enjoyed stepsister gossip. \n\n\"Husband hunting, my dear\" Ruth replied quietly, \"they aren't very good at it. Hard to get is not in their repertoire.\" I stifled a laugh. Betty didn't quiet hers. \n\n\"Sorry, Love,\" Betty apologized into Ruth's scowl, this time hiding her smile. I was surprised how she said it. It sounded like she meant it. \"It's their mother that eggs them on,\" Betty continued in a whisper, \"she was somewhat successful in her hunting,\" she shrugged her shoulders, \"like mother like daughters.\" That was an astute observation. My stepmother was very successful. Too successful. Maybe I owed my stepsisters some slack. Like me, it's not their fault they were saddled with Agnus. \n\nA waiter stopped by offering small plates with mixed hors d'oeuvres. Ruth accepted one for the table along with a set of cloth napkins. The waitress followed a moment later with my red and white wine. I sipped the red, cringed at the bitterness I wasn't expecting. The white was a lot sweeter with a nice fruity finish. \n\n\"Looks like the white appeals to you,\" Ruth said, smiling at my taste testing. I must have made quite a face when I tried the red.\n\n\"I guess my palette is uneducated,\" I said, trying to sound suave in my ignorance. \n\n\"Nonsense, \" Betty said, \"your tongue knows what it likes.\" I saw Ruth send a smile Betty's way. I began to notice they shared a lot of special looks. They must be friends from way back. \n\nThe snacks were to die for. All were finger food, the napkin your only plate. I watched Ruth bite into some kind of roll, holding the napkin daintily under her chin. I copied the movement when I bit into a cracker with some kind of seafood concoction. It melted in my mouth. A tangy mix with a hint of sweetness, crab I think, offering a soft texture against the cracker. The real problem with assortments of hors d'oeuvres, there isn't enough of the ones you really like. The seaweed and rice roll was pretty good, but the crab cracker was my favorite.\n\nWhile we were sampling the food, Ruth and Betty were giving me an education about the families present. The Gildersons, old money made prior to the civil war in the slave trade. They gathered as a group after pushing three of the small tables together. The Wilkersons, newer money made by owning many local radio and television stations. They were a rather loud crew and seemed to be laughing more than talking. The list went on as I began to lose track of the names and occupations. Ruth and Betty were an encyclopedia of family knowledge. \n\n\"Excuse me, Miss,\" Betty said, waving down one of the roving waitresses.\n\n\"Yes, Ma'am.\"\n\n\"Those crab crackers, what are they called?\" Betty asked. \n\n\"Crab on a Cracker, Ma'am,\" the waitress replied with a smile that wasn't insulting. \n\n\"Of course,\" Betty smiled back, \"can we get a plate of those and another glass of white wine.\" Betty and Ruth were handling me. It was going to be a better evening than I thought. \"and thank whoever is making the Crab on a Cracker.\" \n\n\"Yes, Ma'am,\" the waitress nodded before she headed off. \n\n\"Thank you,\" I said to Betty. Ruth beamed at Betty with pride. My mouth moved before my brain could stop it, \"are...you two...a couple?\" I wished I could take it back as soon as I said it. I was sure my cheeks were turning red.\n\n\"For thirty years, dear,\" Ruth said with a soft smile. I was so thankful I was right. Some might find the insinuation insulting. Ruth and Betty shared a look that only a couple would understand. I raised my almost empty glass.\n\n\"To thirty more years,\" I toasted. Ruth laughed and didn't scowl when Betty joined her. I was at the perfect no-pressure table. Our glasses clinked and we drank to their years. I was then treated to their history, difficult courtship, family trauma and finally the inevitable acceptance by all. It was a good tale that we were able to share many Crab on a Cracker over. More than once they had me laughing. The third glass of wine didn't hinder the amusements. \n\n\"Those are the Charmings, of the Boston Charmings,\" Ruth said, her eyes leading to the entryway, \"Daniel and Rebecca. They are the ones who sponsored this ball. Lots of old money, railroads and stockyards.\" I looked over at the man and women who entered with strong smiles. Many of the guests turned and greeted them as they entered. They seemed comfortable with each other, every now and again they would find a reason to touch each other, be it hand to hand or hand to shoulder during a chuckle. \"That's their son Peter.\" I nearly spilled my drink. \n\nPeter was my flat-tire Peter. My-breasts-are-beautiful Peter. I felt my face flush as I turned away quickly. I couldn't possible face him. He had seen me practically naked and he knew me as Ella. I tried to suck my breasts into my chest. I downed the rest of my wine and took a deep breath. I wasn't sure I could stay knowing he might see me. Damn he looked good, somehow taller out of the rain. \n\nThankfully, the band started to warm up. The sounds distracted the ladies from my obvious surprise at seeing Peter. The warm up sounded like the band tended toward a brassy swing. I wasn't sure I could hold my own with that kind of dance. That and Peter, I was as uncomfortable as when I first entered. \n\n\"Cindy,\" Ruth said, waiting for my eyes to acknowledge her \"you're looking a bit pale. Are you feeling okay?\"\n\n\"Fine,\" I said, after letting out the breath I was holding. I forced a smile to my lips, trying desperately not to look back at Peter. I was waiting for the shout 'Hey, aren't you the naked tire girl.' \n\n\"We have to find you a first dance,\" Betty said, \"someone polite who will keep his hands to himself.\" Sisters - that's how I saw Betty and Ruth. I never really thought of Anastasia and Drizella as sisters. We never really cared what happened to each other. Betty and Ruth seemed to have adopted me as their own. \n\n\"George would be happy to do it,\" Ruth said, \"and a nicer guy you couldn't meet. He might spend a few minutes describing his stamp collection, but he'll move on if he sees your bored.\" Peter's hair looked softer now that it was dry. I glanced back briefly to verify. His eyes met mine. I snapped my head back. \"What do you think, Cindy, do you want us to fix your first dance?\" George wasn't Peter so it was better than embarrassment. \n\n\"Ahh, sure,\" I agreed, half-heartedly, \"I'm not sure if I can dance well to swing.\"\n\n\"Just smile, Dear,\" Ruth chuckled, \"men just want to think you're pleased with them.\" Ruth headed off, I assume to gather George. \n\n\"Peter Charming is not hard on the eyes,\" Betty said, her eyes alive with humor. She saw right through me. \n\n\"Who?\" I stalled. I couldn't believe Betty was putting things together so quickly. \n\n\"Mr. tall, dark and dreamy,\" Betty said with a laugh, \"the guy who has you all flustered.\" \n\n\"He doesn't know me,\" I said quickly. Too quickly. The ridiculous statement had a desperate tone to it. \n\n\"I could change that,\" Betty said, her smile turning evil mixed with teasing. \n\n\"Please don't,\" I begged. Betty lost her smile, examining my desperate expression. Her eyes softened and her shoulders relaxed. \n\n\"I'm only teasing,\" Betty said, her voice relaxed, \"He's kind of a loner anyway.\" I knew she sensed my apprehension and was letting her kidding drift away. \n\n\"Loner?\" I asked. Her statement surprised me. Loners don't pull off to the side of the road in a rainstorm and help people with their flat tires. \n\n\"He's some kind of computer genius,\" Betty informed me, \"he isn't living off his trust fund like half the people here. Of course, building a personal fortune requires work and work requires time. From what I understand, he is married to it. Not that a lot of women haven't tried to change that.\"\n\n\"What's he doing here?\" I asked. \n\n\"Hard to tell your mother no, I suppose,\" Betty chuckled, \"she is still hopeful for grandchildren to spoil.\" I had to smile. My real mother, had she lived, would have wanted the same. My father would have been satisfied with happy and Agnus would prefer me out of the picture, something I meant to deny her.\n\n\"Here comes George,\" Betty said, pointing with her wine glass. I turned to find a well-dressed man approaching with a large smile. He was escorting Ruth, her arm entwined with his. His nose was speckled with prominent freckles that went well with his neatly cut red hair. More cute than handsome, his smile was welcoming. I found myself trying to copy it. \n\n\"Cindy Thompson, may I introduce George Gilder,\" Ruth said. George's eyes found mine, he held them with confidence.\n\n\"Ruth informs me you need a partner for the first dance,\" George said. His voice was unexpected. Deeper than his face advertised, more like a network anchorman. \"I would be honored if you allowed me.\" Ruth was beaming. I assumed she had a special liking for George. I couldn't say no if I wanted to, and I didn't want to. \n\n\"That would be lovely,\" I replied, trying my best to assume the speech patterns from Downton Abbey. George's smile grew. \n\n\"How's the family, George?\" Betty inquired in her trailer park way. \n\n\"Wonderful, Betty,\" George said and moved himself to the table between us. His eyes traveled from face to face as he talked, seemingly including us all. \"My sister had her baby. A girl she named Wilhelmina after our grandmother. So, I'm an uncle now.\" The conversation went deep into his family that Ruth and Betty seemed to know well. Normally, my mind would have drifted away, but George made it a point to include me and had me laughing at some of the histories. He was a charming guy. \n\n\"I think that's our cue,\" George said as the band started the first song. He held out his hand and I felt more than comfortable taking it. Luckily, it was a slower song, more big band than swing. The sax was nicely melodic. George led me to the floor, taking my right hand in his left and placing his right hand lightly around my waist. \n\n\"I have instructions to show you off,\" George said, \"I am thinking I may just keep you for myself.\" I laughed at the humor in his eyes. \"There's a lot of people wondering who you are.\" \n\n\"I'm nobody really,\" I said, my smile frozen to my lips. He spun me around so I was facing back the way we came. It was easy to follow his lead. \n\n\"Take a look at the girls,\" George said. I knew he meant Ruth and Betty. There was a small crowd around them. \"See, your popularity grows. They're all wondering who the beautiful woman is.\" I looked back at George. He meant beautiful. My face heated up. \"Blushing just makes it prettier,\" he added. His laugh was so forgiving I had to join him. \n\nGeorge was a wonderful dancer. He seemed to know when I might stumble and moved in a way to absorb the errors. He floated me around the floor as he pointed out people, warning me about some and complimenting others. His joke about my stepsisters was most amusing. We danced right by them and my stepmother without an inkling of recognition. Ella wasn't beautiful, but Cindy was. \n\n\"You're a wonderful dancer,\" I said as the song was winding down. \n\n\"All due to my mother,\" George said, \"she insisted I take dance lessons for many years.\" He leaned in close to my ear, \"I think she expected it would get her grandchildren quicker.\" \n\n\"How's that working for you?\" I joked. \n\n\"My tastes don't lean toward women,\" George said, without a hint of it being uncomfortable. \n\n\"Ahh,\" I said, \"and may I say we women are most disappointed.\" I came to fancy dance and the first three people I meet are gay. It was strange and somewhat comforting. No pressure to be anything but friendly. \n\n\"Thank you, Cindy,\" George said honestly. He spun me around, making my gown billow out in a most wonderful way. \"I can see why Ruth likes you.\" The music stopped and so did we. After a brief applause, he escorted me, arm in arm, back to the ladies. The people surrounding them drifted off as we approached. \n\n\"Thank you, George,\" I said, my smiling emphasizing the point, \"I really enjoyed the dance.\"\n\n\"As did I,\" George replied, \"I need to make the rounds, but I would love a repeat sometime later tonight if I may.\" \n\n\"Absolutely,\" I agreed. I felt so pretty with him leading. I wanted to feel like that again. He nodded with his smile and excused himself.\n\n\"George is such a nice guy,\" I said to Ruth and Betty, \"and what a dancer.\"\n\n\"He is perfect for a first dance,\" Ruth said, \"a gentleman who knows how to make a woman look good.\" It wasn't hard to agree to that. I lost my smile when I saw Peter Charming from across the room. His eyes were on mine and he was walking toward the table. I looked away quickly, pretending I didn't notice, as embarrassment rose to the surface. I was sure he recognized me. I turned away, trying to find a place to move off to and avoid the confrontation. I rotated right into a sharply dressed man who begged my forgiveness even though it was I who bumped him. \n\n\"William Douglass,\" the man introduced himself with a smile, \"I understand you are Cindy.\" Word was traveling fast. William had a set of bushy sideburns that reminded me of some of our ex-presidents from way back. Everything was neat and clean, but I had a strong desire to take a razor to those sideburns.\n\n\"Yes,\" I said smiling. anything was better than facing Peter, \"it's very nice to meet you.\"\n\n\"Do you think I might have this dance?\" William asked. It was a question, but the way he worded it I don't think he expected a no. With Peter on his way, it was as good an escape as any. \n\n\"I would be delighted,\" I replied. He held out his arm and I wrapped mine through it. Escorted, I moved to the dance floor and away from the impending embarrassment. \n\nThe tune was a bit livelier than when I danced with George. William kept it sensible, but did teach me a few spinning moves that were fun once I got the hang of it. He didn't have half of George's dancing skill, but he made up for it by ignoring my mistakes and laughing with me while I learned. ",
        "\"I haven't seen you around before,\" William mentioned, his eyes were sparked with interest. \n\n\"This is my first one of these dances,\" I said, \"I must say, I am enjoying myself.\" \n\n\"A lot of people see these things as some kind of requirement,\" William continued, \"it's refreshing to meet someone who is here to have fun.\" \n\n\"What about you, William?\" I asked, trying to get the conversation off me before he delved into my false identity, \"fun or duty?\"\n\n\"I thought it was duty,\" William smiled, \"now it seems to have turned into fun.\" He spun me around again as I digested his veiled compliment. I was feeling pretty good about myself and he was feeding my ego even more. I was having a really good time. \n\n\"Something tells me you always have a good time,\" I bantered back. His confidence and smile defied his pretense of showing up being a duty. We did a couple movements that brought our opposing hips together which we executed rather smoothly. I was proud of myself. \n\n\"Maybe you can test your theory,\" William smiled, \"Allow me to take you out to dinner next week.\" I must have looked prettier than I thought. It was a tempting offer, but Cindy wouldn't exist after tonight. How do you explain something like a name change? Not to mention, I was basically a janitor and he was obviously used to the finer things in life. \n\n\"You move quickly, Sir,\" I joked, not able to find a way to say no nicely. \n\n\"Too much pressure for a first dance?\" William asked with a big smile.\n\n\"A little,\" I shrugged and promptly stumbled on the next step. He steadied me with a kind chuckle.\n\n\"I'll retract it then,\" William said, \"but know that if we find ourselves at another function like this, I will make the offer again.\" I could hear the humor in his voice. He had expected me to decline his first offer. I instantly felt better. \n\n\"Next time,\" I said, \"I might be inclined to accept.\" That seemed to please William and we finished the dance with good feelings. I needed to take a break. Sweating in my gown didn't really appeal to me. I was about to head back to Ruth and Betty when I saw them talking with Peter.\n\n\"William, can you show me the ladies room?\" I asked. At least I could stall for a few minutes and hope Peter would move on.\n\n\"This way,\" William said, once again offering me his arm. He escorted me out of the main room into a hall, its sole purpose was to house the bathrooms. I thanked him kindly for the dance and we went our separate ways though I suspected I would run into him again that night. \n\nThe bathroom was huge. Along one wall, ten marble sinks, each with an individual oval mirror trimmed in some kind of gold leaf pattern. There were two attendants constantly wiping up water and handing out cloth towels. Each stall was as large as my utility room, complete with hangers, hooks, and a dark wood bench. I wasn't sure the need of a bench when the toilet was right there. \n\nAfter struggling for a few moments, I found it easier to just remove my gown and then relieve myself of the night's wine. A heated toilet seat graced my bottom which made me smile. Such opulence. Even the toilet paper felt luxurious. \n\nWhile a washed my hands, one of the attendants came over and straightened my gown and brushed off some lint I had gathered from somewhere. I wasn't totally comfortable with the attention, but I couldn't take it out on her. \n\n\"So, you're Cindy, the one that has everyone talking.\" I recognized the voice immediately. It was Anastasia and she was right behind me. I started washing my hands a second time, giving me an excuse to not look up. Peter outside, my stepsister inside. I shouldn't have come.\n\n\"I'm not sure I know what you mean,\" I said quietly, trying to slightly deepen my voice. I was going to work a few layers of skin off my hands at this rate. \n\n\"New people always generate buzz.\" It was Drizella. Great, both stepsisters. I grabbed a towel and started drying my hands. \n\n\"It is my first ball,\" I admitted then an idea struck, \"Ouch,\" I groaned and squinted my right eye and brought the towel toward it, \"I think something flew in my eye.\" The attendant rushed over to give me a hand as I turned around, my eyes squinting and the towel covering half my face. \"You'll have to excuse me, ladies, it seems I can't see,\" I added for effect. \n\n\"Oh, how terrible,\" Drizella said, \"of course.\" They both exited the bathroom quickly, not wanting to get involved in my problems. I knew them too well. The attendant, a young women with dark hair, smiled with me when they left. She realized what I had done. I handed her the towel and looked back at the mirror. I hadn't messed up the makeup on my eyes, which was good since I had left my purse on the table with Ruth and Betty. I couldn't hide in the bathroom forever, so I left after thanking the attendant who had helped me. \n\nWhen I entered the main ballroom, I saw that my sisters had cornered Peter off to the right. His desperate eyes saw me just as I turned to the left. For once, my sisters would do me a favor as I moved quickly around the outside of the room until I ended up with Ruth and Betty. \n\n\"Poor Peter,\" Ruth said, \"he is being waylaid by the Tremaines.\" I looked back across the room and watched his fake smiles and nodding as my sisters did all the talking. I felt a little pained for him, but not enough to ruin myself by rescuing him. I already had enough close calls and started to think I should call it a night. It had been fun and I enjoyed the dancing. I had never put Peter in the calculations when I thought of coming here. He could easily wreck everything. \n\n\"Are they really that bad?' I asked. Ella already knew the answer, but Cindy wasn't supposed to know. \n\n\"Think of leeches,\" Betty replied, \"then give them barbed hooks and inane chatter.\" I covered my mouth when I laughed. \n\n\"Really, Betty,\" Ruth scowled. It was a wonder these two stayed together for so many years. They were so different. I did start to notice that Ruth's eyes sparkled when she scolded Betty. Maybe, Betty was Ruth's alter ego, saying the things that Ruth always wanted to say but was too polite to engage the words. \n\n\"He was asking after you,\" Betty commented.\n\n\"Who?\" \n\n\"Peter Charming,\" Ruth continued, \"he came by when you were dancing with William. He thanked us for coming as a pretense but then turned the conversation to you.\" I waited for the bomb to drop. I was sure he recognized me from the flat tire and told them I had another name. Ruth misconstrued my apprehension and smiled at me, \"You shouldn't wear such a pretty dress if you don't want attention.\" \n\n\"What did you tell him?\" I asked, realizing he hadn't blown my cover. \n\n\"The little that we know,\" Betty said, \"we've been pretty popular since you've joined our table. A lot of people are trying to figure out who you are. I, for one, prefer the mystery. I think it makes you more attractive.\" \n\nI panicked when I saw Peter had broken away from my sisters. He may not have figured out who I was yet, but if I gave him a closer look he might put two and two together. He was heading toward our table seemly ignoring the rest of the ball.\n\n\"I think I'll mingle,\" I said and quickly turned away from Peter and headed in the opposite direction. I had no idea how to mingle with wealthy people. I didn't have the social experiences necessary to draw upon so I walked aimlessly between the tables smiling, hoping someone would save me. Luckily, It didn't take long. \n\n\"Hello, Cindy is it?\" A man said. Artist type with his brown hair pulled into a short ponytail. He was rather handsome, but I sensed he knew it. \n\n\"Yes,\" I replied, \"and you are?\"\n\n\"Rayburn Funderland,\" he returned, holding out his hand which I gracefully shook. \n\n\"Pleased to meet you, Rayburn,\" I said cheerfully, thankful for his rescue, \"It seems everyone knows my name and I know so few.\"\n\n\"The curse of being new,\" Rayburn said, \"and beautiful.\" His eyes twinkled when he added the last part. He had no fear and, I was sure, a lot of practice praising women. Normally I would back away, but it was either Rayburn or Peter. Rayburn, I understood. The band began a slow song. \"Shall we?\" Rayburn asked, his open hand leading off to the dance floor. I wanted to say no just because he was so confident I would say yes. It was the Peter effect that made me ignore my intuition. \n\n\"I would be delighted,\" I lied and he led me to the floor. I saw Peter out of the corner of my eye, grinning as he slowed once he realized where I was headed. I turned away, pretending I hadn't seen. I knew for sure now, he was hunting me. I couldn't run all night. I would have to plan an exit. If only Peter hadn't stopped to help me with my tire. \n\nRayburn was not a gentleman. George and William had spoiled me into thinking wealth brought with it a certain class. Rayburn was classless. He pulled me tight to his body, I retreated as best I could and spent the next few measures raising his hand from my ass to my waist where it belonged. I began to regret not choosing the shame that Peter would thrust upon me. \n\n\"We move together well,\" Rayburn whispered in my ear. The words slithered with sexual innuendo. I pulled back farther and again corrected his hand. His smile held confidence in my submission. I had lost my smile. \n\n\"You expect too much,\" I said clearly. I grabbed his wrist before his hand could drop back down to my butt. His grip on my other hand tightened. \n\n\"The fight is kind of cute,\" Rayburn said, \"I like tigresses.\" He spun me in a circle and somehow ate up the space I created between us. \n\n\"Enough,\" I said firmly, but quietly. I didn't want to make a scene. I tried to break away from his grip but he tightened up and his confidence increased. I wasn't sure I could get away without making a scene. \n\n\"I think we both know where this is leading,\" Rayburn said, \"why fight it. It'll be the most fun you ever had.\" I began to struggle and he just chuckled, tightening his grip and keeping me off balance with another spin. I got my knee ready. If you're going to make a scene, might as well make it a good one. \n\n\"No, Rayburn,\" I said clearly, knowing others would hear. Rayburn just chuckled and tightened his grip even more. He had been warned. It was the only warning I was going to give. I lined up my knee, aiming at his groin. It would ruin the dance, but I wasn't going to be treated like meat. \n\n\"I'm cutting in, Rayburn.\" Peter moved quickly, grabbing Rayburn's wrist. Rayburn released my hand. The two exchanged a look that wiped the grin off Rayburn's face. Rayburn's other hand released my waist and I let go of his wrist.\n\n\"I don't believe the lady agreed to dance with you,\" Rayburn growled. I thought there might be a fight in the middle of the dance floor. I saw it in Peter's eyes. He wasn't going to let go of Rayburn until Rayburn backed down. Rayburn wasn't going to back down.\n\n\"Thank you for a wonderful dance,\" I said sweetly to Rayburn, loud enough for close ears to hear, \"I apologize for forgetting I had promised this dance to Peter.\" I gave Rayburn an out. He visibly relaxed, his fake honor intact. It was better than a knee to the groin. Of course, now I had to face Peter and all that came with it. \n\n\"Of course, Cindy,\" Rayburn said calmly, \"women sometimes forget their commitments in my presence.\" It was all I could do not to drive my knee forward. He smiled for the crowd and headed off the dance floor. To my surprise, Peter filled the void quickly, hand to hand, hand to waist, respectable distance apart. \n\n\"You picked a bad way to avoid me,\" Peter said, his smile eating past the lies I was trying to form. \n\n\"Avoid you?\" I said, trying to give myself time to think. \n\n\"It's my duty to greet all the guests and thank them for their kind donation,\" Peter smirked, \"you have been most troublesome to try and thank.\" I was sure I was turning ten shades of red. To make matters worse, Peter was a terrible dancer. Stiff as a board. \n\n\"You're a terrible dancer,\" I said, my smile growing. Work on his weakness and maybe he will forget the avoidance. Instead of losing his moral high ground, he laughed. His eyes crinkled, his lips curled and revealed a set of pearly whites that grew my smile all the more. \n\n\"I saved you from the hound and still you try and keep your distance,\" He said, \"I've checked my deodorant twice, made sure I didn't have something in my teeth and ate a few mints. You're going to give me a complex.\" I didn't see any recognition in his eyes. Of course, I was practically naked and he was a man. Maybe he only saw my breasts. I softened my grip on his hand that had been tighter than necessary.\n\n\"You call Rayburn the hound?\" I asked, trying to keep the discussion off me. His eyes were on me, though. They were intelligent eyes mixed with a bit of a whimsical boy. They only saw Cindy. I had been hiding for nothing. \n\n\"I could have warned you,\" Peter said, his feet moving like they weighed 100 pounds each, \"had you not been disappearing every time I approached.\" That's why he was grinning when I accepted Rayburn's offer to dance. He knew I had worked myself into a corner. He just walked up and rescued me - no need to chase me down anymore. \n\n\"I thought all you guys were good dancers,\" I joked. I didn't want to explain my running from him. \n\n\"That's stereotyping,\" Peter countered with humor. He felt no shame in his inability to dance. \"I was reading when these guys were in dance class.\" His eyes were still drinking me in. They shifted across my face and always returned back to my eyes. I moved closer, cutting the respectable distance in half. I liked Peter looking even if he couldn't dance. \n\n\"Do you read a lot?\" I asked. \n\n\"All the time,\" Peter answered, his smile shifted to sly, \"Do you run from your hosts a lot?\" He wasn't letting me change the subject. There was a lot of intelligence behind those eyes. \n\n\"Do you chase down your guests a lot?\" I riposted. His laugh brought mine to the surface. His laughter made the bad dancing enjoyable. I was surprised when he answered. \n\n\"I usually avoid the guests,\" Peter said seriously, \"there is something about you that piqued my interest. I am not sure what it is, but I am going to try and find out.\"\n\n\"I thought you said it was your duty,\" I pointed out. \n\n\"So was going to dance class.\" This time, I started the laughter. \n\n\"There's a wonderful walking path around the grounds,\" Peter said when we caught our breath, \"Would you like to get some air? I assure you I am highly skilled at walking.\" I wanted nothing more at the moment. I was kind of wishing all the people would disappear so we make each other laugh louder. I was so happy that he didn't remember Ella. He didn't even know he already liked my breasts. \n\n\"I'm not sure my shoes are fit for walking,\" I said. My heels would most likely fail on a stone path. At $750, I wasn't sure I wanted to try. Maybe I could go barefoot.\n\n\"The Fountains is prepared for that,\" Peter said with a smile, \"they stock loaner tennis shoes just for these occasions..\" He paused for a moment, \"I assure you they are cleaned well between each use.\" I would have worn them dirty. I nodded in agreement, trying to shrink my smile. It was hopeless. I was going for a walk with tall, dark and dreamy. \n\nWe swung by Ruth and Betty who smiled knowingly as I grabbed by hand purse. It would have been rude to make them watch it if they intended to move on. Peter took my hand and led me out the main door, past my stepmother and stepsisters. I could see the envy on their faces. They forced smiles to nod at Peter. His speed increased as we passed them. I could almost feel his trepidation of possibly confronting them again. The silly warmth of revenge washed over me in a wave. They would never know, but I did. It was more satisfying than I would ever admit out loud. \n\nIt took about ten minutes for The Fountains to outfit me in a pair of pink Converse All-Stars. My gown made changing shoes difficult and I considered traveling back to the bathroom to get it done. Peter discounted the idea and dropped to his knees. His hands were wonderfully tender as he removed my heels and replaced them with the All-Stars. I never had a man dress me before. It felt warmly intimate even if it was only shoes. \n\n\"How's that,\" Peter said, rising to his feet. I took a few steps, assuring myself that everything was set properly for a walk. \n\n\"Perfect,\" I smiled. He held out his hand again. I took it as we headed out the door. \n\nThe walk meandered through the grounds. It was composed of tightly compacted brick in a fishbone pattern that would have easily eaten my heels. What we could see of the foliage in the darkening light was immaculately cared for. There were small ground lights, strategically placed behind foliage, that cast diffused light across the path. Just enough light so you could stay on the trail, but not enough to detract from the privacy. \n\n\"So,\" Peter started as we lost sight of the main doors, \"am I ever going to find out why you were avoiding me?\" I could make out his smile. He was enjoying his teasing. \n\n\"I never admitted I was,\" I countered. His hand squeezed mine. Shamefully, I squeezed his back. Cindy was such a tease. \n\n\"That means no,\" Peter laughed. He wasn't going to let me deny it. He was going to let it slide. \"I interrogated half the room and found out almost nothing about you,\" he admitted, \"Who is Cindy Thompson?\" \n\n\"A girl on a walk with a guy,\" I answered. I didn't want to make up any more lies. The thought that it was Cindy meeting Peter hurt a little. It could go no farther than tonight. \n\n\"Your mystery is beguiling,\" Peter said, \"I suspect there are things you don't want me to know right now.\" He paused for a moment as my mind reeled at his intellect. He was analyzing me, dissecting only the facts and assembling a picture that wasn't far from the truth. \"I will let you have your secrets,\" he turned his head to me and smiled, \"not that I have much of choice.\" \n\n\"You seem to like the mystery,\" I analyzed him, \"why would I give it up?\" \n\n\"I do love puzzles,\" he admitted, \"they are so much fun to solve.\" We walked for a few steps in silence, still hand in hand. \"Let's try a differ...\" A buzzing in his pocket interrupted what he was about to say. I disliked the buzzing. \"I'm sorry,\" he stumbled, letting go of my hand. I began to hate the buzzing. \"It's rude, I know, but there are problems at work.\" He fished his phone out of his pocket. \"It will only take a second.\"\n\n\"Charming,\" Peter cursed into the phone. \n\n\"What do you mean you can't?\" Pause.\n\n\"Well trace the destination. You know what was exposed.\" Pause\n\n\"Let me know what you find.\" Pause.\n\n\"No, I'm not coming in.\" Peter disconnected without saying goodbye. He shrugged his shoulders with an apologetic smile. \"Sorry.\" This time, I held out my hand. He took it. Apology accepted. \n\n\"Sounds serious,\" I said, \"if they want you to come in.\"\n\n\"Actually,\" Peter said, \"I am normally working at this time. The world is a lot quieter at night, makes it easier to develop,\" he chuckled to himself, \"my mother says I'm half vampire.\" I started at his admission. He was on the same clock as I was. \n\n\"What do you do for work?\" I asked. I already knew it had something to do with computers.\n\n\"Ahh,\" Peter laughed, \"a puzzle for you. Revenge is best served quickly before it gets cold.\" I pulled him closer, my laughter merging with his. It was only fair. We walked around a bend that circled an old oak tree. There were a couple of memorial benches surrounded by flowers off in the corner by the stone fence. It was pretty in the dark, I thought it must be phenomenal in the daylight.\n\n\"Favorite movie?\" I asked. If we weren't going to talk about our real life, might as well move to entertainment. \n\n\"That depends on my mood,\" Peter said, \"right now, it would be Forrest Gump.\" \n\n\"You liked all the historical entanglements?\" I asked, trying to keep the conversation on him. ",
        "\"History was only the flavor,\" Peter said, he shifted his hand to encompass more of mine, \"the story is all about how the geek gets the girl.\"\n\n\"But she died,\" I said sadly, remembering holding in tears the first time saw the movie. \n\n\"All that doesn't matter,\" Peter continued, \"everyone wanted Jenny, but who did she marry and whose child did she raise? Who did she finally admit she loved?\" I had always thought she had settled on Forest out of desperation. I had never looked at it from Peter's angle.\n\n\"I always thought Jenny was using Forrest,\" I admitted. \n\n\"She just didn't know she loved him yet,\" Peter smiled. He had an incorruptible view of the movie. He saw love where I saw capitulation. I liked his view better.\n\n\"All this time I thought she was a bitch,\" I laughed. \n\n\"Nope,\" Peter insisted, \"Forest was just smarter. It took time for Jenny to catch up.\" I pulled Peter closer. His view was so much softer than mine. I imagined his view on real life was softer as well. I lost some of my harshness at that moment. Good riddance.\n\nWe spent some time talking about the books we've read and places we've gone. We danced around topics that could give away our pasts. It was a game and Peter was a master. He wanted something for everything he gave. For me, it was becoming inwardly painful. It was no game that Peter liked Cindy. It was no game that Ella liked Peter. I had created an impossible situation. How was I to know I would meet someone like Peter. Cindy would die tonight. Where did that leave Ella?\n\nMy phone buzzed in my purse. I pulled it out, flashing its soft pink cover as I quickly turned it to silent and put it back. I wasn't going to interrupt what little time I had. \n\n\"Even your phone matches,\" Peter observed, as he once again offered his hand. \n\n\"Pink is my color tonight,\" I said, \"I am consistent, if nothing else.\" We rounded a small fountain ringed with little cement ducks. \n\n\"I like consistency,\" Peter said softly, no smile. He meant he liked me. Cindy did something stupid. Something Ella wouldn't do. She leaned forward and tilted her head up. Peter responded. His lips were a curse. A beautifully soft, caring curse. He couldn't dance, but he knew how to kiss. His hand found the back of my neck, cradling it in safety as my world became the two of us. The edge of excitement took over my body, cascading from my lips to my toes. I wrapped my arms around him and pulled him closer. I wanted so much more of him. I didn't want to share him with Cindy anymore. \n\n\"That...that was unexpectedly wonderful,\" Peter stuttered in my arms. \n\n\"You expected it to be bad?\" I joked.\n\n\"I expected to take the rest of the night to work myself up to it,\" Peter said, \"I liked it better this way.\" \n\n\"So you assumed I would just let you kiss me,\" I teased. \n\n\"No,\" Peter laughed, \"I assumed I would work up the courage to try.\" His bravery wasn't in question as his lips took mine again. My hands combing into his hair as we tried to see how close our bodies could get to each other. I could feel how much he desired me. He was delicious. \n\n\"We should get back inside,\" Peter said after we had kissed forever. His face was a permanent smile. I was sure it matched mine. We were really good at kissing. I wondered if we were good at other things. Things that didn't require clothes. \n\nHis phone buzzed again. I began to really hate the thing. He apologized profusely as he answered it. I smiled and nodded as if it didn't matter. Life must have been easier before the birth of the mobile phone. \n\n\"Charming,\" pause. \n\n\"Well get a warrant.\" pause.\n\n\"That senator, what's his name, on the armed services committee,\" pause. \n\n\"Yep, that's him. He'll expedite it,\" pause.\n\n\"Call me when you know more.\" Peter ended the call with another apology to me. \n\n\"Sounds serious,\" I said as I returned my hand to his. He gave it a squeeze. I liked keeping the physical contact. It was a simple pleasure that seemed to affect my whole body.\n\n\"Someone is rattling my cage,\" Peter admitted, \"it's time dependent or I would just turn off my phone. Sorry.\" \n\n\"You have senator's who do your bidding,\" I observed, \"must be important.\"\n\n\"Actually, I do his,\" Peter laughed, \"but if you find me more impressive the other way, I'll claim the power.\" We shared a smile as we continued our stroll back to the dance. Our hands swung together, our words easily finding things to agree on. \n\nMy mind was churning, trying to find a way to tell Peter about Ella. I didn't see a good way. Every way held shame and Peter's loss of faith. I couldn't handle him thinking less of me. I liked how Cindy looked in his eyes. I loved how he kissed Cindy. \n\nI was about to remove my borrowed tennies when a cheer went up in the main hall. \"The dancers must be here,\" Peter said. My confused look made him clarify. \"Professionals. Come on,\" he said, holding out his hand. His excitement made me forget that I would be a few inches shorter without my heels. He led me quickly to a clear spot around the dance floor. \n\nThere were two couples, gymnasts by my calculations, throwing themselves around to a really wild Big Bad Voodoo Daddy song. The two girls spent almost as much time in the air as they did on the floor. Peter was enthralled, his hands clapping in rhythm with the crowd. I joined him as we traded looks, smiles, and a few hip bumps as the pros showed us all how poor of dancers we really were. \n\nHow they did it was a mystery. The four danced to two more wild songs, changing styles, but never tempo. I kept thinking one of the ladies would lose it and go flying into the crowd. It was an amazing feat of stamina as well as skill. The applause was deafening when the dancers finished the final dance. It was the first time I could tell they were breathing hard. \n\nWithout thinking, I put my fingers to my lips and whistled my appreciation. Heads turned, I flushed in embarrassment. The Fountains had never heard a whistle. On the other side, another whistle let loose. George, with a wicked smile, winked at me as he pulled his fingers from his lips. He felt no shame. I loved him like a brother at that moment. Protocol broke down as other whistles broke out and Peter wrapped his arm around me, laughing and pointing at George. I pulled Peter close, my shield against impropriety. \n\nPeter's parents walked out to the center of the dance floor to congratulate the dancers. They made short statements, introducing the dancers and expounding on their exposition. Mrs. Charming then turned, looking directly at me, her smile was endearing. \"It is no secret that my son spent his youth dodging lessons in the finer things of life,\" she paused as the audience laughed, \"Tonight, he will pay the piper and please his mother by accepting a lesson from Mr. and Mrs. Longfellow.\" She indicated one of the pairs of dancers. I hid my smile as Peter vehemently shook his head, trying to wave off his mother with his hand. The crowd thought it a fine thing. \n\n\"I believe you have already selected your partner, Peter,\" Mrs. Charming said, waving us forward. Normally, I would shun the spotlight. This time, I relished it. At least I knew he was a worse dancer than myself. I found his fear was selfishly making me bolder. I took Peter's hand and, to a chorus of laughter and cheers, pulled a hesitant man to the center of the floor. Mrs. Charming seemed especially pleased. \n\n\"If you leave me out here...\" Peter whispered as we came forward. \n\n\"I'll never leave you,\" I said quickly. My heart thumped as the words left my mouth. They were Ella's words. They held more meaning than a dance lesson. I saw Peter's face go from grim to a silly boy grin. I was no longer pulling, he was coming of his own accord. He had felt the double meaning as well. He liked how it sounded. I liked how it sounded. \n\n\"Introduction?\" Mrs. Charming asked Peter, her face almost laughing at his attention to me. \n\n\"Of course,\" Peters said, returning to protocol, \"Mother, this is Cindy Thompson. Cindy this is my mother, Rebecca Charming.\" Rebecca held her hand daintily. I tried to duplicate as best I could. \n\n\"So pleased to meet you, Cindy,\" Rebecca said with more friendliness than I expected. \n\n\"Very nice to meet you, Mrs. Charming.\"\n\n\"Rebecca, please,\" Rebecca said, \"I'm so happy you have convinced Peter to allow me to tease him.\" Her face was lit up. She was enjoying herself. I can only assume that Peter had been more difficult in the past. \n\n\"It will be fun,\" I said, looking up at the smiling Peter. His eyes were boring into me, ignoring the surroundings. I quickly looked back to his mother. Her eyes were traveling between Peter and I at great speed. She seemed to see something that pleased her. I felt like a pawn between mother and son. Luckily, Mrs. Longfellow stepped forward to end the awkward confrontation. Rebecca relieved me of my purse so I had my hands free. \n\n\"Cindy, Peter,\" Mrs. Longfellow started, \"we are just going to do a basic swing step.\" Rebecca stepped back out of the way, her smile still glued on her face. \"face each other. Peter, lightly grasp Cindy's right hand in your left...\" The instructions continued. We both heard and adhered to the lesson, but none of it was reaching long-term memory. It was if they were spoken from a distance, miles away. Peter's eyes and mine were making love with each other. Our feet moved as instructed, our bodies shifted and arms moved, but the eyes remained. \n\n\"I think you have it,\" Mrs. Longfellow announced. There was brief applause and well-meaning jeers from those who knew Peter well. We didn't care. It was all so far away. The music started and we kept dancing as others joined us on the floor. I don't think Peter realized he was actually dancing competently. I wasn't going to break the spell to tell him. It was all so lovely. Almost perfect. I only wished Cindy would leave. Ella wanted Peter to herself. \n\nWhen the music stopped, Peter leaned down and kissed me. Not as one would kiss a friend, but a lingering, don't-ever-leave-me kiss. It was in the middle of the dance floor and completely inappropriate. It was a lovely thing and all mine. I wanted Cindy to die. \n\n\"Would you like a drink?\" Peter asked, ending the kiss before I was ready. People were staring so I assume the kiss went longer than protocol prescribed. \n\n\"Water,\" I answered, my smile letting him know I wanted more of his lips. To hell with protocol.\n\n\"Ruth and Betty deserve some attention,\" Peter said, \"I'll meet you there.\" He followed with a kiss that was all too short. I let him go, holding his hand until the distance forced it away. I stepped off the floor in a euphoria, thinking only of Peter.\n\n\"Your purse, dear,\" Rebecca surprised me, coming up from behind. \n\n\"Thank you,\" I said as I took it. Rebecca's smile was on the edge of comfort. She wasn't trying to disguise it. \n\n\"Peter seems to think a lot of you,\" Rebecca observed. I stopped and turned toward her. \n\n\"And I him,\" I said truthfully.The thought of my false identity flashed back at me. I had to tell him. I couldn't leave and not tell him. \n\n\"I don't think I have ever seen him...smitten,\" Rebecca laughed once she got the word out. I was a little uncomfortable talking with Peter's mother about Peter. I hadn't known him long enough to be allowed that type of comfort level. \n\n\"I am sure he is just being kind,\" I said. \n\n\"No,\" Rebecca continued, \"smitten is the correct word.\" I feared her smile might crack her face. She reached out laid her hand on my arm. \"I am just surprised is all. No one has ever gotten him on a dance floor and you have done it twice in one night.\" \n\n\"Surely...\" I stumbled with a response.\n\n\"Believe me, he is smitten,\" Rebecca said, her eyes glanced over me, \"and I, for one, am not disappointed.\" She smiled then added, \"you have a wonderful night, Cindy.\" I think she sensed my comfort level had been reached. She had the same intelligence in her eyes that Peter had. \n\n\"You too,\" I stammered as Rebecca turned to walk away. I was relieved when she left. I was under enough pressure. I had no idea how to tell Peter about Ella. How would I ever tell his mother? I was screwing things up just by being here.\n\n\"Have fun outside?\" Betty joked as I moved to their table. Her eyes were bouncing with inference to salacious ideas.\n\n\"Betty!\" Ruth warned. Her scowl was forced. She was holding back a smile. \n\n\"We just went for a walk,\" I said, trying to keep everything G-rated, \"we had a wonderful talk. He's a nice guy.\" Betty smirked under Ruth's glare. \n\n\"Peter seems quite taken with you,\" Ruth observed, \"I don't think I have ever seen him on the dance floor before.\" I smiled because I couldn't help myself. To think, I might be his first real dance. I knew I wasn't his first kiss. He kissed too well to be a beginner. \n\n\"It was fun. Did you see that he was actually getting good near the end?\" I asked, trying to stick to facts and get the conversation away from the relationship. \n\n\"Everyone saw,\" Betty replied, \"I think he would have jumped off a bridge if you asked.\" This time, Ruth didn't admonish Betty. She watched me, trying to see my reaction. I couldn't fight it. \n\n\"I like him,\" I admitted. Betty laughed and Ruth's smile went warm. Cindy was digging a hole too deep for Ella to climb out of. I needed to just fess up to Peter and let the chips fall where they may. \n\n\"That's a good thing,\" Ruth said, \"I would hate to see that man's heart crushed.\" I wondered if that is exactly what I was about to do. Ella, the heartbreaker. I pulled out my phone, more to create space between the ladies and myself. I needed to think. Work out the words necessary to convince Peter this all wasn't some malicious hoax. I was sure it would involve a lot of apologies and groveling. \n\nI turned it back on and keyed in my impossibly long password. I smiled as I typed. So very appropriate, even if Peter was unaware. A flood of texts and unanswered phone calls were listed on the main screen. Only Raj had the number. I checked the latest text.\n\nDump the phone. They are tracing it. \n\nThere were more of the same, mixed with apologies about Raj missing something technical. I felt blood rush in strange directions and my heart rate increased. I hadn't thought I might be caught. I was essentially using my own money. There was no way my stepmother could have found out, not this early. Coupon Crave wouldn't care if everyone was paid. Who were they?\n\nI was about to head to the bathroom, maybe throw the phone in the garbage. I turned into Peter, smiling with a two glasses of water in his hands. \"Your water ma'am,\" he said, making sure our hands met as I took it from him. \n\n\"Thank you,\" I replied, trying to hide my nervousness.\n\n\"You're looking rather please yourself,\" Betty commented to Peter. \n\n\"And why not?\" Peter returned, \"I have danced with a beautiful woman and just had the most pleasant phone call.\" His arm wrapped around my waist. It felt so right there. I needed to dump the phone, but I placed it on the table instead. My arm found comfort around his waist. \n\n\"Unknown relative leave you a fortune?\" Betty prompted. I could tell she liked to get the whole story. \n\n\"Better,\" Peter said, \"someone has been hacking my firewalls. Someone really good. It was only a fluke we noticed. We had experimental code running in front of the ticket site for this event to test it out. The same code we are planning to deploy for the military.\" Peter sounded excited, \"Whoever it is hardly left a trace. It's only because we were running exhaustive post-tests that we saw anything at all.\" My heart was beating so fast. I was hoping Peter couldn't feel it. \n\n\"Your happy that you were hacked?\" Ruth asked. \n\n\"Nope,\" Peter smiled, \"I am happy that I may soon know who.\" He looked around the room. \"We couldn't trace the source, but the destination of the purchases was traced to a single phone.\" He was almost giddy. I was sure I was pale as a ghost. \"That phone is here. A team is coming with a handheld sensor to find the phone.\" \n\n\"How exciting,\" Betty commented. She was thrilled. I felt bile rising. \n\n\"Ladies and gentlemen,\" the band announcer spoke. All heads turned toward him. \"grab your special someone and prepare for the midnight dance.\" \n\n\"I..I have to get my heels,\" I said, trying to smile through it all. Peter looked a little concerned. I assumed I sounded off. \"I'll just be a moment,\" I added backing away from the table. He nodded and continued the conversation with Betty and Ruth. I turned and moved quickly. I was near the exit when I realized I left the phone on the table. My heart was trying to climb out my throat. I ran some words through my mind, reasons for going back for the phone. \n\nTwo men rushed past me. Cheap suits and even cheaper cologne. One had some kind of device in his hand, the other following. I watched it unfold in slow motion. I backed away slowly, closer to the exit as I saw my imagined future dash itself against the rocks. The men kept moving closer to Peter, I prayed they would turn. My eyes began to fill when the lead man pointed at my phone. \n\nI couldn't stop the tears. The look on Peter's face went from disbelief to horror. He turned toward me, his whole face a distorted misery. I ran as the band started. There would be no midnight dance for Cindy. No life for Ella. I should have never come. \n\nI ran down the main steps in my now stolen All-Stars. The crime wave continued. I wasn't sure how I got to the bottom safely with my eyes flooded with tears. Jaq had seen me coming and sensed the urgency. The limo was already running with Gus holding the door open. I still couldn't stop the tears. I had destroyed Peter and any chance I had with him. His face, the disappointment, was etched in my mind. He would never look at me again with those lovely eyes. \n\nJaq pulled the limo out smartly and waited until we were on the main road before he spoke. \"Are you alright, Ms. Thompson?\" I tried to answer through the sobs. My throat wouldn't allow anything coherent out. I just nodded and buried my face in the seat. Everything had fallen apart. The dream that was Peter was now a nightmare. I heard the divider slide up. Jaq knew when someone needed privacy. \n\nThe tears were under control by the time I returned to Raj's house. Gus opened the door and peeked inside as I was taking a deep breath. I let it out slowly, closed my eyes and did it again. My heart was slowing. I was wondering if I could be lucky enough to have it stop. \n\n\"You're home Ms. Thompson,\" Gus said quietly. None of the flirtiness he displayed earlier was there. It sounded more like he wanted me out. Of course, Cindy had run her course. Only Ella was left. \n\n\"Thank you, Gus, \" I said as I exited. \n\n\"I'm sorry you had a bad time, Ms. Thompson,\" Gus said as he closed the door. From flirty to pity. A perfect end of the night. I heard the front door open and Raj came out of the house. There was panic in his eyes. Perfect. \n\nRaj handed Gus some bills, a tip. I hadn't thought of that. \"Thank you,\" Raj said as he shooed Gus and Jaq on their way. I felt like I was a lawn ornament. I stood there as Raj said my goodbyes and protected me from more pity comments. Raj didn't acknowledge me until the limo pulled away. \n\n\"I am so sorry,\" Raj said, \"I missed the logs. I should have washed the logs.\" He was shaking his head.\n\n\"Doesn't matter,\" I whispered, \"my shitty life returns. I didn't belong there anyway.\" I turned and walked toward the house. Raj followed with concern on his face. I was selfish and didn't accept his apology. I knew it was my own doing, my choice, but for some reason, I wanted others to suffer with me. \n\n\"Oh no,\" Kiran said when she saw my face. She had waited up as well. The tears returned when she wrapped her arms around me. I let her hold me. I held her back. Someone felt my pain and I let that comfort me. "
    ],
    "authorname": "DreamCloud",
    "tags": [
        "romance",
        "ella",
        "cindy",
        "converse"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-cotillion"
}