{
    "title": "Recipe for Adventure Pt. 04",
    "pages": [
        "All characters are 18 years old or older.\n\n*****\n\nThe dig finally starts and what they find is far more than they ever imagined. \n\nIt's been nearly a week now. The digging machines were almost done. I was so eager to finally be at work and the others felt the same. While we had kept ourselves busy it wasn't what we came here for. Tomorrow we could see what secrets the earth has kept all these centuries. I lay in my tent pretending to be asleep. With such a small group it was necessary to hide my perpetual supply of energy. I checked my watch as I called it and saw the countdown until the digger reached the end of its duties. Two more hours, what the hell was I going to do for that long? I fired up the avatar screen and began personalizing it finally. I had chosen a default avatar but since I had time to burn I figured it was something to do.\n\nI chose a female avatar and began building her from scratch. I began with her body type and filled in the details bit by bit. When I finished I had a cute little cat girl wearing a suit jacket and matching skirt. She had the cat ears, round rose colored glasses and even sported a prehensile tail. The last bit was to choose her voice. I settled on a sensual contralto with just a hint of an Irish accent. It fit the bright red hair and green eyes. I checked the countdown and still had over an hour to wait. I closed my eyes and crossed my arms behind my head. Someone walked into the tent and walked over to me without saying a word. I was about to open my eyes when she straddled my waist. I sniffed the air and spoke to my visitor.\n\n\"Hello Carol,\" I said and she gasped.\n\n\"You are spooky sometimes you know,\" she replied as she kissed my lips. \"I have something for you.\"\n\n\"Really, I was wondering when you'd stop by,\" I purred.\n\n\"Open your eyes,\" she said and I looked up at her. \"Try not to blink.\" She said as she squeezed the bottle of eye drops into my right eye. \"Okay... now for the left one.\" She repeated the process and smiled. \"Happy Birthday...!\"\n\n\"I don't get it,\" I said but she explained what the eye drops did. \"So I can use my eyes to access my avatar now, how cool is that!\"\n\n\"Close your eyes and I'll show you how to use them in a few minutes. Meantime...\" she unzipped me and began stroking slowly and leisurely. \"MMMM didn't take you long to get hard. I can't wait to taste you after so long.\"\n\nCarol got off of me and knelt next to my cot. I felt her tongue tease the head of my cock and I shivered. She swirled her tongue slowly as she continued to stroke me off. She kept adjusting the speed and how much of my erection she took between her lips. In a word she was driving me crazy. I was shaking before too long and all I could do was lie there and take it. \n\n\"Do you like,\" Carol asked after giving me a break from her talented tongue.\n\n\"Uh huh,\" I whimpered.\n\n\"I'm glad,\" she said her hand still stroking me. \"Keep your eyes closed and let me take control for a while.\"\n\nI nodded and felt her above me. I could hear her heart tripping in her chest. She had me in hand and guiding me between her pussy lips. I sniffed the air as she sunk down on me. I groaned as she took me to her depths. I bit back a growl that would have alerted anyone nearby what was going on in the tent. That was another problem with such a small community there were so few secrets. Carol was riding me nice and slow now as she began moving. I sniffed the air again trying to isolate that tantalizing scent.\n\n\"Did you borrow body spray from Tessa?\" I asked as her heartbeat spiked. \"Your heart is racing sweetie. Is something wrong?\"\n\n\"No, I'm fine but uh... I didn't borrow her body spray.\" Carol said her lips right by my ear.\n\n\"Um Carol...\"\n\n\"Happy Birthday,\" Tessa said as she squeezed her pussy muscles around me.\n\nI opened my eyes and saw my cock buried deep in the leggy brunette. She was riding me more urgently now. I could see that she was close to climaxing already. She rammed her hips into me driving my dick as deep as it could go. She was biting her lower lip to keep from screaming. Her face flushed with color as her back arched. Tessa's climax was delightful to see and even better to feel. Carol was watching us intently. I sat up and grabbed Tessa by her hips. I turned us and it took her a few seconds to figure out what I had in mind. I stood up carrying her with me. I took over and began fucking her in slow deep thrusts of my hips into her. She was shaking her head even as her eyes rolled up into her head. Carol stood behind Tessa and whispered in her ear.\n\n\"Go with it,\" she moaned in the other's ear.\n\n\"O... Okay... god damn he's huge,\" Tessa growled softly as I pounded her mercilessly. \"He's gonna break me in half.\"\n\n\"He wants you to feel good. Be a good girl and climax for him. He can hold you like that for a very long time. I should know.\"\n\nTessa clamped a hand over her mouth as my cock pistoned in and out of her. The muffled scream was music to my ears. I had forgotten that it was my birthday but so far I was really enjoying my present. I kept lifting and dropping Tessa until I was on the verge of my own climax. I asked her where she wanted it and she just nodded mutely that she didn't care. I picked up my speed and with one last thrust I fired my load deep into the reporter. This gave a whole new meaning to embedded reporting. I set Tessa down onto the cot and eased out of her. Carol licked me clean and smiled as I tucked myself in and sat next to the quivering brunette.\n\n\"Whose idea was this?\" I asked.\n\n\"Mine,\" Carol said. \"It's the least I could do.\"\n\n\"Did you bring this up to Felicia?\" I asked and they both nodded.\n\n\"Yeah, she's been hanging out with the Ranger the last couple of nights.\"\n\n\"Neow,\" my avatar purred without warning.\n\n\"What was that?\" Tessa asked.\n\n\"My watch,\" I said touching the flashing button on the side of the wrist device.\n\nThe avatar appeared and Carol cried out her eyes going wide. Tessa stared at the holographic figure and made a curious face. The cat girl spread her arms and bright green letters appeared in front of her, mission complete. It was only then that the ever-present sound of the digging machine had fallen silent. I left the tent and saw the machine as it trundled out of the crater it had created. I asked my avatar to scan the area one last time. We should have the clearest shot of the main building that we ever had. It took ten minutes for the signals to be routed to the satellite and take a snap shot of the area. It took another twenty minutes for the data to be routed to my watch. I strode over to the edge of the dig site and peered down. It was hard to see since it was a moonless night and we hadn't set up any flood lights yet. With the machine spewing ground up earth it would have been an issue with any equipment circling the crater. \n\nI walked around the crater and waited for the data to be sent. Carol joined me and Tessa appeared once she had cleaned up and gotten dressed. Her camera man showed up as if on cue and the interview began. Tessa asked me what I was feeling and I just smiled and told her I was eager for dawn so that the real work could begin. My watched chimed and I looked at the image. I zoomed in onto the buried building and my jaw dropped. What the hell? \n\n\"Gideon... someone get Gideon... wake his ass up if you have to...\"\n\n\"Is something wrong,\" Tessa asked and I explained.\n\n\"Not wrong just unexpected,\" I said. \"The roof of the building is unusual, it's gabled.\"\n\n\"So...\" she began and Gideon the Egyptologist appeared.\n\n\"What's up professor,\" Gideon said and smiled at Tessa.\n\n\"Take a look at this. It's the latest satellite scan.\"\n\n\"Whoa, do you think it has shingles or just a solid stone roof?\" Gideon asked.\n\n\"Can you explain why you guys are so excited?\" Tessa asked.\n\n\"Sorry, a gabled roof is unheard of in this region of the world. You might find this in northern Europe but not here and not at the time line. I can't wait to get at this puppy. When do we start?\"\n\n\"Dawn, I guess you could try and get some sleep... or we could brew some coffee and wait for first light.\" I suggested and the entire camp was slowly coming awake.\n\n\"Professor I have scanned the data and found an anomaly,\" my avatar chimed in as I walked to the tent that worked as a cafeteria. \"Show me.\"\n\nThe avatar zoomed into the north eastern quadrant of the desert. There was a dark speck against the desert floor. It took a minute for the A.I. to focus on the figure. I stopped in my tracks when it became clear to what I was looking at it. I grabbed Carol and told her to get Felicia and bring her to me as soon as she could. Carol raced off as I sought out the soldiers on duty. Tessa and her cameraman shadowed me and saw the intensity on my face. I addressed the sergeant on duty and showed him the figure on the scan. He nodded and alerted the other soldiers just as Felicia showed up with the Ranger in tow.\n\n\"What's going on?\" Felicia asked and I showed her.\n\n\"Is that a sniper rifle?\" She asked as she squinted. \"Those look like military fatigues and a spotter's scope.\"\n\nShe and the other members of the security force raced to the armory tent. Felicia exited the tent with some kind of rifle in her grasp. My A.I. told me it was a gauss rifle. She took up a position near the dig site and the sergeant acted as her spotter. As I watched she adjusted the scope and lined up her shot. I warned her to try and wing him if she could. She nodded and took in a deep breath and as she let it out she squeezed the trigger. There was no sound from the weapon at first. A second later there was a sound like thunder as the projectile broke the sound barrier. A moment later the sergeant cried out. She had hit him. They piled into a jeep to recover the enemy sniper. They returned ten minutes later and the man was barely alive. The gauss round had literally torn the man's left arm from his body. There was a tourniquet around the stump of his arm to keep him from bleeding out.\n\nThe camp doctor was ready to treat him and try and keep him alive long enough to find out who sent him and why. The camp was abuzz with activity and talk about the man and suggestions on why he was out there watching us. I waited for the doctor to treat our guest and prayed he survived. I was responsible for everyone's safety and this was a glitch I wasn't prepared to deal with. I knew I could rely on Felicia and the rest of the security force but I was still troubled that something like this had happened. I learned from the doctor that the man would survive and that he belonged to a strange desert cult known as the Followers of the Worm. One of the soldiers told me the cult had been around since before the time of the Prophet and may even predate the time of Noah and the Great Flood. When I asked when the last time they had been active was I was told it had been nearly thirty years.\n\n\"He has the tattoo on his right wrist,\" the soldier said. \"...the sign of the Burrower.\"\n\nI thanked the soldier and walked over to the area above the anomaly that the satellite had picked up. I used my avatar to get me close to the spot. I squatted down and ran my fingers through the earth and found it much different than most of the desert floor in this area. The soil was loose and lightly packed. I let out a loud whistle and called out for Chicago our resident geologist. She walked over and asked me what I needed. I asked her about the soil and what she thought about it. She knelt down and just as I had done ran a bit of the dirt between thumb and forefinger. She cried out and fell back onto her ass. I looked down and there crawling out of the earth was a glowing white worm. It was about six inches long and an inch thick. The bioluminescence it gave off was enough to make it easy to see in the dark. Chicago sent for Xion who was our biologist to examine the critter.\n\n\"I've never heard of anything like this. I'm not an entomologist but I think we should take it and dissect it.\"\n\n\"You think the cult is connected to this little guy?\" I asked.\n\n\"Well, it might be like the cicada and are dormant for decades. Maybe this is the time for them to come out and reproduce?\" Xion offered up his hypothesis.\n\nWhile Xion and I exchanged ideas about the cult and the worms Chicago went to the lab tent and returned with two specimen jars and a pair of tongs. Xion unscrewed the lid of one of the jars and plucked the worm up with his bare hands for a better look. He held it up near his face and peered at the worm's physiology. The worm wasn't content being held and bit Xion deep enough to draw quite a bit of blood. The biologist tossed the worm into the jar before slamming the lid on. \n\n\"Look,\" Chicago gasped as she pointed to the spot where Xion's blood had fallen.\n\nA swarm of the glowing worms erupted from the soil and focused on the area where the blood had fallen. Xion stood up as we all backed away from the feeding frenzy. They were like glowing piranha as they fought for the blood. Had the worms somehow adapted to some sort of blood sacrifice performed by the cult members over the centuries? It made a sick kind of sense. I had the mental image of a goat or cow being staked to this spot and having its throat slit. I shook off the visual and called the captain over now that he was awake. I showed him the worms and asked what he wanted to do.\n\n\"I will contact my superiors,\" he said. \"If they hold some kind of threat we may have to destroy them. I will set a guard to keep everyone away until I receive a reply. Thank you for bringing this to my attention.\" He turned and began barking order in Arabic to his troops.\n\nThere were four guards around the perimeter of the worm bed. I shuddered and then went to have an early breakfast with my team. The sun was rising by the time we were finishing our meal. Finally, we could get some work done. We began prepping the rim of the dig sight with two rope ladders. I sent four students into the hole. Two had already been on digs while the other two had not. This would be a great learning experience for the novices. The first task was to sink pegs and string twine to set up a grid pattern so that we could track any artifacts we found. Once the grid was created the work began. We worked four hour shifts while two members kept a watch on those below. There was no telling that the digging machines hadn't woken up the worms in the first place. I didn't want them migrating to our location without some kind of warning. The thought of students being overwhelmed by a tide of the hideous blood suckers filled me dread.\n\nThe first day of work revealed no items of interest but we were all thrilled to be at work. That night I was called to the medical tent to speak with the man that Felicia had shot. He had started asking for the infidel that had spotted his hiding position. That would be me. I was the infidel in question. He was still weak from his injury but eager to talk. Tessa and her cameraman arrived and only then did the man begin to speak. He glared at me and cursed me and my whore of a female companion. I guessed he had learned that it was me that discovered him and pointed him out to Felicia. I just shrugged and let him continue to rant. He told me that everyone here was doomed. He claimed that the Burrower Beneath would consume us all. I translated for Tessa who didn't understand a word of Arabic. The cultist raved about the worm god and its perpetual hunger. About how he would rise and take revenge for those loyal to him. I bent down and turned his right wrist over so I could see the tattoo. I recognized the design from a passage from the Mal Contentis.\n\n\"You know this sign,\" the man asked seeing my reaction to his tattoo.\n\n\"I've seen it in a book,\" I told him.\n\n\"Then you know what you face. You are doomed you will perish in the belly of the worm!\"\n\nThe man fell silent and I turned to leave when Tessa stared at the man and covered her mouth. I turned back and only then did I realize the cultist was dead. I reached down and closed his eyes. We left and I shook my head. As far as I was concerned he was just another fanatic. I told the guard out front of the tent that the cultist was dead. He left his post to inform the captain. I returned to my tent and using my watch built the work schedule for tomorrow. I decided the arrangement of one experienced and one novice student was working out well. I left security to the experts mainly Felicia and the captain. Tessa and her cameraman were in their tent editing today's footage while I walked around the camp wondering if this was such a good idea.\n\nI reached the dig site and looked down. We were so close and not one of the students had approached me about wanting to leave. I decided to hold a meeting and inform them of everything to make sure they wanted to stay. I called the impromptu meeting and had everyone assemble in the cafeteria tent. Once everyone was present I told them everything that had transpired. Xion told us what he had learned about the worms. We had already made a great discovery even if the things had to be destroyed. They were too terrible to chance them spreading beyond the desert. After the discussion everyone was still on board trusting to Felicia and the others to safeguard them. The rest of the night went without incidence and I look forward to the dawn. The next two days went like clockwork. Everyone worked their shifts and the work went slow but steady. I lost track of how many times I had thanked Terry for what I called his miraculous digging machines. The composition of the soil had changed and Gideon was thrilled to no end. He told us that there were signs of some sort of volcanic activity. Xion was still analyzing the worms and finding them an intriguing adaption to desert survival. He told us that their ability to detect the presence of blood bordered on the preternatural. They possessed a jaw that was divided into three biting edges that were capable of piercing leather as easily as they did flesh.\n\n\"Amazing,\" Xion said for the umpteenth time.\n\n\"Do you have a new pet?\" I asked as I checked up on him.\n\n\"Oh no, I admire them but if they were to reach a civilized area they would decimate the population. I hate to say it, but I agree with the military about burning the little bastards.\"\n\n\"Well, on the bright side we don't have anything to do with that part of the dig area.\" I told him and he was grateful.\n\nThe dig team sat down together and discussed the few odd artifacts that we had discovered so far. The obsidian arrow point showed signs of fairly advanced craftsmanship. The other items showed a skill and quality that was surprising for artifacts that were at least six thousand years old. We estimated we should reach the level of the roof of the temple in the next day or two at most. I returned to my tent and did my six hours of down time whether I liked it or not. I hated having to pretend to sleep and lose valuable time but there was no way around it. I meditated and drifted in that timeless place where dreams come from. I was drawn back by the sound of a cough. I opened my eyes and sat up. One of the soldiers was standing near the entrance to my tent.\n\n\"Can I help you,\" I asked in Arabic.\n\n\"Why did you come here?\" he asked looking at me with a strange expression.\n\n\"I don't understand. Do you mean Egypt or this spot specifically?\"\n\n\"This place, why did you come here?\" he asked and frowned. \"This place is unholy. This place is for the worms not for men.\"\n\n\"I found a treasure map,\" I said and his eyes widened in surprise. \"I know it's silly to be digging for treasure but that's what the scroll said.\"\n\n\"You found the Scroll of Osiris,\" he blurted out. \"You will perish if you seek the image of the sun god.\"\n\n\"You seem to know more about this than I do. What sort of image are we talking about?\"\n\n\"The legend says that the statue can heal immortals if they suffer dire wounds. It is said that this image was used to revive Osiris from the dead. It was fashioned by Isis after her husband was murdered and butchered by Set. It is guarded by shapeless demons of the dark. Set brought it here to keep it from Isis.\"",
        "\"I don't expect to find anything that amazing. I am more interested in the village buried here.\" I told him and he seemed oblivious to any people that dwelt here in ancient times. \"We are here for history not treasure. We will take nothing away from your country. Anything we dig up will go to Cairo and the First Minister will take it into his possession. I just want to learn how they lived and who they were.\"\n\n\"I hope you find what you are looking for.\" He said stroking his chin. \"I hope the demons don't eat you and yours.\"\n\n\"Thank you,\" I said watching him carefully.\n\nThe soldier left and I noticed that he fastened the leather strap over his sidearm as he departed my tent. Well that was too fucking close I thought as I sent a message to Felicia. Instead of replying to my message she appeared in person. She looked alarmed and I told her I was okay. I got to my feet and shared the conversation I had with the soldier. Her hackles were up and she was in protective mode now. I loved that about her. I pulled her close and she snuggled despite her desire to go after the soldier. I asked her about the former Ranger and she smiled.\n\n\"He's a nice guy and all but he's not you,\" she said simply. \"We have things in common and can talk for hours about guns and bad guys. He is a little jealous that I got the chance to fire off that gauss rifle. I heard you talked to him before he died. Did you learn anything?\"\n\n\"Yeah, now that I think about it I did,\" I said as I thought came to mind. \"Neko contact the satellite. I want another scan of the area please.\"\n\n\"Yes Professor,\" Neko purred.\n\n\"She sounds awful sexy,\" Felicia said pressing closer still. \"Did someone inspire her?\"\n\n\"Two someones,\" I admitted as Neko's avatar appeared.\n\n\"Satellite is coming online,\" she said cheerfully. \"Your heart rate and arousal level are elevated.\"\n\n\"MMMMM I bet it is,\" Felicia moaned in my ear. \"I bet Carol likes her to bunches. The cat girl thing is right up her alley. What are you looking for Professor?\"\n\n\"A crater,\" I said. \"I think we are dealing with two separate things.\"\n\n\"Huh, I don't get it,\" the former detective replied.\n\nI had Neko display the image that had revealed the sniper. I had her bring up the anomaly beneath the worm bed. Felicia stared at it and nodded. Once the satellite was up and ready I had it perform a surface scan of a wider area looking for topical details. We had at least thirty minutes before it would be available. I whispered in her ear about a quickie and she giggled as she undid her shorts. I kissed her and I was soon lost in her touch and the pleasure it provided. We were locked deep in an intimate embrace when Neko vibrated my wrist. I laughed as I continued hammering Felicia from behind. She giggled and thrust her hips back pushing us both passed the point of no return. Somehow I managed to grit my teeth as I fired my load deep inside of Felicia. I held her by her hips as she shook from her own climax.\n\n\"That was amazing,\" she said between gasps of breath.\n\n\"I love you,\" I whispered in her ear.\n\n\"I love you too.\"\n\nI slid out of her and she dropped down to lick me clean. I waited for her to finish before I called up the satellite image. Felicia pulled her shorts back on and stared at the hologram of the desert landscape. I pointed out the deformation that was North West of us. When she asked what it was I told her it was a meteorite crater. She looked at me with a puzzled expression. I had Neko overlay the two images and I pointed out the anomaly beneath the worm bed. There appeared to be two meteor strikes in this area. One was still visible on the features of the desert while the other was buried a hundred feet below the surface and there were no signs of an actual impact. I found that odd. Unless it hit the earth so far back that all signs had been erased by erosion and time. \n\n\"That's all very interesting but what can I do?\" Felicia asked.\n\n\"The soldier that visited me has a strange patch on his right wrist.\" I told her.\n\n\"You think he had a tattoo removed,\" she said and I nodded. \"I'll look into it and speak to the captain if I have to.\"\n\nShe kissed me and left. I sat on my cot and stared at the images separately and together. My thoughts turned to an unusual train of thought. What if the anomaly isn't a meteorite? What if it is a buried structure? If that were the case it would mean there had been sentient life on the earth millions of years ago. Many of the tomes I had read mentioned the Great Old Ones who had come to earth long before the rise of man. They never say exactly how long ago but they hint at remote ages or even epochs of time had passed since their arrival. Could a biological entity survive that kind of time? What sort of lifespan are we talking about? The earth had undergone extinction level events since these things had supposedly arrived. Did they have a hand in those events? Were these Old Ones responsible for the eradication of life upon the surface of the Earth? I shook my head and discounted that line of thought. There was no proof of Old Ones and I was just overreacting. \n\nI was about to lie down when the sound of the single gunshot echoed over the campsite. I raced out of the tent and followed the soldiers that were heading to the worm bed. Felicia and Carol were by my side as I reached the circle of people surrounding the worm bed. We pressed forward and peered at the sight of the corpse.\n\n\"Dear god,\" Carol cursed as the worms rose to the surface and engulfed the body.\n\n\"He was a cultist,\" I said when the captain arrived to see what had happened.\n\n\"How do you know that,\" the captain asked.\n\n\"He had a patch on his right wrist where he had a tattoo removed by laser.\"\n\n\"You have keen eyes,\" the captain replied and looked down at the wriggling mass of worms. \"Get the flamethrower.\"\n\n\"He came to visit me earlier tonight,\" I offered. \"He asked me why we were here. I told him and he seemed satisfied.\"\n\nTwo soldiers arrived and we all backed away as they burnt the corpse and the worms to ash. The popping sound as the worms were devoured by the flame reminded me of popcorn. Blast after blast of liquid fire consumed everything in its path. He had offered up his body to the worms only to have them destroyed by his fellow soldiers. I wasn't sure how to feel about that. Did he think he was discovered and figured a noble death was better than that of a military court-martial? He could have simply been keeping the secrets of the cult and if that meant death then so be it. \n\n\"I just don't get it,\" I said as I turned to return to my tent.\n\n\"Pity, I wanted to have a member of this cult to interrogate.\" The captain said frowning and looking at his lieutenant. \"We will make sure there are no more moles in our ranks. I suggest you do the same.\"\n\n\"I'll let my security leader take care of that,\" I replied glancing at Felicia who smiled brilliantly. \"I doubt there are any in our midst though. They were randomly chosen with very few volunteering for this dig. Besides this cult was unknown to me until the sniper was discovered and brought in.\"\n\nThe captain nodded and proceeded to round up his entire squad to inspect and speak with them. The cultist did give me a huge clue though. What was the image of Osiris and how could it heal an immortal? If there was some kind of icon or statue buried nearby it had huge implications upon the origin of the Egyptian people. I let out a flustered noise and walked back to my tent with Carol in tow. Felicia and the Ranger did their job while I cuddled with Carol and closed my eyes until dawn. My mind went over not just the current events but every last thing I could remember about the Burrower Beneath and the other Great Old Ones. Those supposedly prehumen gods were legends of titanic figures that carved a path of destruction across the surface of the young Earth. They are even connected to the sinking of mythic continents like Mu, Lemuria and famed Atlantis. Did the spiral village below have connections to these lost places? I hoped so. It would illuminate a patch of prehistory that desperately needed a light shined upon it. \n\nTwo days had passed without incident and the dig was progressing well. About noon the team hit the layer of volcanic sediment. It was Chicago that recognized the material. She called my attention to it and I climbed down to take a look. She took her trowel and scraped away the loose earth above the pumice and other materials. I tapped the layer with the tip of my finger and it appeared pretty damn sturdy. Chicago drove the tip of her tool into the material and it gave way. She drove the blade deeper and that's when we caught the odor of rotten eggs. She pulled the trowel free and a trickle of yellow smoke drifted up from the crack.\n\n\"Sulfur dioxide, it's the same stuff they put in natural gas to give it that smell,\" she said.\n\n\"Is this place still active?\" I asked and she shrugged.\n\n\"There might still be pockets of activity but we won't know until we actually pierce this layer and see for ourselves. Any suggestions boss man?\"\n\n\"Give me your trowel for a second,\" I said and she handed it over. \"Here goes nothing...\"\n\nI drove the trowel into the material and gave it a good twist. A larger plume of gas erupted and we had to move back. Chicago was about to make a wise crack when I held up my hand. I listened and when I was sure I ordered every up and out of the pit. Chicago shrugged a second time but did as she was told. I guided the other three teams up the rope ladder and was the last one up. By the time I was halfway up the others heard what I had just a minute or so earlier. \n\n\"Look, the layer is cracking,\" Chicago called down. \"Hurry up professor... move it!\"\n\nI reached the top and by that time I could feel the vibration in the ground. I ordered everyone back and away from the edge of the pit. The sound grew louder by the second and the retreat became a full fledge race back to camp. The ground roared as it spit open and geysers of sulfur dioxide rocketed into the air. The stench was overwhelming and the edge of the pit disappeared as the volcanic layer shattered and fell into the crater. I was too scared to curse but that's what I wanted to do. Another fucking set back and there was nothing I could do about it. The cloud of dust and gas slowly dissipated but the damage was already done. \n\nI was the first to brave the edge of the pit. What had once been a gentle slope downward was now an irregular cliff thirty feet high. There in the center of the pit was the temple and surrounding the building were the bodies. It reminded me of images of Pompeii. I counted the bodies and there were fifteen that I could easily see through the light ground fog. The temple and the entire landscape were covered in a layer of yellow dust. The dust was sulfur and now we had a brand new hurdle to overcome. Without respirators or cleaning the pit somehow we could only look at the building. The others joined me and stared out over the new landscape. It was Carol that spotted the cave. She tugged on my sleeve and pointed. I looked over and realized the entrance had been smoothed out by human hands. It was some sort of entrance but to where was anyone's guess.\n\nI was open to any and all suggestions. I told everyone that we were going to have a meeting and discus our new problem. The sulfur presented a clear and present danger to anyone digging in the pit. Those with chemist backgrounds made suggestions but it was clear from the beginning we were out of our depths. Terry made an appearance and told us he had made a few phone calls. A clean up team was on the way. I was about to ask him how we could pay for it but he shook his head. He told everyone that he was happy to help us anyway he can. There was a roar of cheers for Terry and I was one of his loudest supporters. I just wanted to get down there so we could get to the meat of the work. So now we had to wait yet again but hopefully this time it wouldn't take an entire week. The crew would arrive within twenty four hours and until they arrived the pit was off limits to everyone.\n\nI wondered if the universe was trying to teach me patience at this point. I heard a commotion in the back of the tent and a young man stood up and was hopping up and down. I asked him what was going on. He came to the front and stood facing me and said one word, drone. He told me he had brought a remote control drone with a video set up on it. We could fly it over the temple and the bodies for a closer look. Beau became our hero of the hour. He got the suitcase containing the drone and we all watched eagerly as he set it up. We linked the drone's video feed to that of Tessa's editing equipment. It had the largest screen available in the camp. By the time he was ready it was late in the afternoon. We watched as the propellers spun up to speed and the drone took to the air. There was a crowd behind Tessa as Beau guided the drone into the pit. The images came in crystal clear and the devastation was as bad as I expected. The only building not buried by the collapse of the volcanic layer was the temple. If there was a positive aspect to this whole thing it was the ramp like formation of the northern end of the pit. We could easily walk into the pit now to access the bodies and the temple.\n\nThe drone flew over the top of the temple and we could see that the angled roof was in fact tiled. What the tiles were made of was unknown since the entire exterior of the temple was covered in sulfur and volcanic ash. The layer obliterated most of the details and left us with quite the mystery. I was unaware of any kind of past activity but I would be looking into it after the sun went down. This was definitely not turning out to be a normal dig by anyone's stretch of the imagination. The drone's path took it in a downward spiral ending as it hovered in front of a massive thirty foot door. There was obviously some sort of stylized design on the door but the ash completely obfuscated it. We could also see that there were no stairs leading up to the front entrance but instead was a gentle sloping ramp. The more I saw the more I knew we had a jewel at our fingertips. The next course for the drone was a flyby of the petrified bodies surrounding the temple. There were a total of twenty five of them. It was hard to watch seeing them having died in midstride or curled up in a fetal position. Beau pulled the drone back so that it could be recharged. \n\nThe second flight of the drone was near the opening of what we believed was a cave. It was in fact a manmade tunnel. The shape and smoothness of the walls was clear evidence that this was an artificial creation. We couldn't send the drone into the tunnel itself without fear of losing it. So we spent the rest of the time remaining examining the temple. There were hints of details where the layer of volcanic dust was thinner. It was a lovely construction but who had made it? It was definitely not Egyptian and the design of the temple removed it from any known African culture that I was aware of. The drone returned and we had another brainstorming session as we reviewed the footage over and over again. I wasn't the only one that was stumped over the origin of the temple. It appeared as if the corner edifices were columns of some kind. That kind of structure couldn't have been developed by a Stone Age people. The engineering required was simply beyond them but there it was. Everything about the temple made little sense. Again I ached to be down there examining the damn thing with my own hands but we would simply have to wait.\n\nTwo days had passed and since that time we had been banned from approaching the dig site. The cleanup crew had arrived at noon of the first day and they immediately went to work. They wore hazmat suits with respirators and special containers to hold the volatile sulfur. They went down and inspected the area to see what they were dealing with. Once they knew the lay of the land they began cleaning. There were twenty of them and worked in five man teams. Due to the heat they could only function two hours at a time. Each man worked two shifts and with remarkable speed they cleared the area. After only two short days they finished the last portion of the pit and declared it free of contaminants. I thanked them and as they packed up the sun began to set. I walked with my crew down the earthen ramp and soon stood before the temple. The queer yellow pawl was gone from the environment so why did I still feel uneasy? Terry walked up and clapped me on the back.\n\n\"Tomorrow you can set up the scaffolding,\" he said.\n\n\"Scaffolding... you really do think of everything,\" I replied and he smiled.\n\n\"I had it brought in with the cleanup crew. I can't wait to see what's beneath all that soot and crap.\"\n\n\"You aren't the only one,\" I said. \"Okay everybody let's call it a night and get a full night's sleep. We got a big day tomorrow.\"\n\nI ate with my crew and Carol sat next to me telling me how well things were going. I guess my patience finally paid off. Felicia took a seat next to me and appeared to be in a great mood. She leaned close and whispered in my ear.\n\n\"Wanna wash my back?\"\n\n\"You need to ask,\" I said and she smiled brilliantly.\n\n\"I love you,\" she said a little too loud but I didn't care.\n\n\"I love you,\" I replied and Carol blushed knowing that I meant both of them. \"I am so damn lucky.\"\n\nAfter dinner the three of us wandered around the camp enjoying the cool night air. Tomorrow the scaffolding would go up and we would see what we were dealing with. I guess I shouldn't have surprised me that we ended up at the foot of the temple. We walked around the building and I saw a faint glint of light from the roof. The crescent moon hung bright and cloudless in the heavens. Something was catching that faint illumination and glinted darkly. Was it a polished piece of metal or perhaps some kind of pristine piece of ceramic? Tessa appeared with her cameraman for yet another interview. We used the temple as the backdrop and I think it was my best interview to date. The five of us walked to the nearest cluster of mummified bodies. I knelt down and wondered who they were and what they were like. This entire area would soon become a grid of wooden stakes and twine so that the excavation could be done with accuracy. Who knew what treasures we would find?\n\nCarol and Felicia followed me to the solar shower. Part of the water rations was access to a shower once every three days. We decided some much needed love play was required before we took our shower together. We returned to my tent and I was tempted to place a do not disturb sign on the outer flap. It all began with a single kiss. Felicia was hungry for my embrace and Carol wasn't going to sit this one out. The three of us played for nearly an hour nonstop. We ended up on the floor of the tent gasping and panting after our epic exertions. We took our turn in the shower and cleaned up. The longer the elixir worked upon us the hardier and stronger we became. We ate and drank but we didn't really require more than time out in the sun for our nourishment now. Despite the blistering heat we didn't sweat. If anyone noticed they didn't say anything. We dressed, pushed three cots together and lay next to each other until dawn. I missed the simple touch of their hands upon me and I told them so. They felt the same and it strengthened our bond. \n\nThe sound of the C-130 landing tore me away from my meditation. We got up to meet the plane and help offload our supplies. We hopped into the back of a jeep as it drove to the slowing aircraft. It parked and the back ramp lowered. The jeep pulled up and we greeted it. The captain strode forward and checked his uniform and I wondered why until I saw the First Minister stride down the ramp. He was all smiles and greeted me with a handshake and a hug. That spoke volumes to the captain and all the soldiers around us. The minister gestured to the interior of the plane and told me everything I required was inside. We got back into the jeep and drove directly to the dig site. Felicia stayed behind to coordinate the offloading of the cargo. The First Minister praised my work but I told him it was a team effort.",
        "\"I hear that girl of yours took out an enemy sniper,\" he said.\n\n\"She winged him,\" I explained. \"But unfortunately she was using a gauss rifle at the time. It tore the poor guy's left arm right off.\"\n\n\"Is that so Captain?\"\n\n\"Oh yes First Minister,\" the captain said. \"If she had hit him center mass we would have lost the chance to question him. She did very well for a woman that is.\"\n\n\"So there is a cult presence then,\" the minister asked.\n\n\"There was, we have eliminated the one member that infiltrated my men. I have Doctor Donahue for that. It was he that noticed the mark on his wrist.\"\n\n\"Eh, he had a tattoo then?\"\n\n\"No, I happen to see the patch of skin where he had a tattoo removed.\" I said. \"We spoke before he died. He asked me why I was here. He seemed relieved that we were only interested in the buried village.\"\n\n\"I can never understand that sort of mentality.\" The minister said and clapped his hands together as we slowed to drive down the earthen ramp. \"Magnificent... what a sight!\"\n\nThe jeep pulled up to the base of the ramp and stopped. We got out and I was given the honor of giving the First Minister a tour of the site and pointed out the key areas of interest. I told him my attack plan and asked for any suggestions. He shook his head and seemed happy with my prioritizing the temple and the removal of the bodies. Once we freed the mummies from the earth they would be sent to Cairo for X-ray and testing. The minister would oversee those operations. The last place I showed him was the tunnel. The older man stared into the darkness and shivered. \n\n\"How are you going to handle this,\" he asked.\n\n\"I know this sounds strange but we have a small drone,\" I responded. \"We are going to fit it with lights and send it in ahead of us to get our first look for safety reasons mainly.\"\n\n\"Brilliant, you can never go wrong by being careful. Pity about the other parts of the village, that will take some time to dig out but we have all the time in the world. You have made us all proud Donahue. I can't wait to see your reports. Now how about I meet your team again so I can tell them what a fine job they are doing.\"\n\n\"Thank you First Minister,\" I said and we returned to the jeep.\n\nTessa was waiting for the minister's visit and caught his encouraging speech on camera. She asked him a few expected questions concerning his opinion on how well the dig was going and he gave us a sterling report for our efforts so far. That was the crowning piece she needed for the first part of her series on our work here. She and her cameraman returned to their tent for the final editing process. The minister returned to the aircraft just as the last forklift exited and drove towards the pit. Felicia shot me a thumbs up and I couldn't help but smile. The minister gave her a long look and clapped me on the back. He told me how lucky I was. He shook my hand and climbed back aboard the aircraft. He was eager to get back to Cairo and inform the others how well I was doing, the others, being members of the Order. Felicia let out an ear splitting whistle and brought the entire dig team running. We entered the pit and split into two teams. One team was charged with freeing the mummies from the grip of the earth. The other team was going to begin cleaning the ground level of the temple. \n\nFinally the real work had begun. I went between both groups observing and giving advice when necessary. The temple revealed its first secret after only an hour of work. The pillar that Chicago and her partner were working on ended up being crafted of a single piece of basalt. There were a few noticeable characters carved into the surface of the pillar but they were unlike anything I had ever seen. They were a kind of pictographs but the creatures and figures depicted were of a serpentine theme or maybe they were worms. Was there a connection between this temple and the worm bed? I hoped not. That put things on a tangent I felt would lead to my own Antarctica. I didn't want to lose a single member of my team. I walked towards the entrance to the tunnel and Felicia met me there holding two flashlights. I couldn't help but notice she was wearing a sidearm. \n\n\"Just in case,\" I said and she nodded.\n\n\"I'll protect you baby,\" she replied giggling.\n\nWe stood in front of the opening and felt the steady cool breeze that came from below. With a shared nervous laugh we entered the tunnel. We plunged into the cool darkness while the echo of our footsteps preceded us into the stygian blackness. The walls of the tunnel were plain and unadorned. I noticed the steady downward slope of the tunnel and I glanced over at Felicia and she nodded. The grade increased the further we went while the tunnel picked up a gentle curve as well. Felicia noticed the chamber in front of us before I did. I could almost feel her stiffen as her hand went to her weapon. I touched her shoulder to tell her to relax. This tunnel had been unused for thousands of years. We entered the chamber and I felt my jaw drop open.\n\n\"Holy shit,\" I said and my voice echoed over the massive area and the vaulted ceiling.\n\n\"I can't see the top,\" Felicia said as she shined her light upward.\n\n\"Look at the murals,\" I gasped as I played my light across the walls. \"They are in pristine condition even after all these years.\"\n\n\"What the hell am I looking at?\"\n\n\"The history of the people that lived in that village I guess.\" I said as I walked along seeing the progression of the story.\n\n\"Care to tell me why they drew themselves as snake people?\" She asked.\n\n\"I have no clue. Maybe they worship some kind of serpent god and see themselves as his children or chosen ones.\" I guessed.\n\n\"Works for me,\" Felicia said. \"So this dark sky here, you think that's the volcano.\"\n\n\"Looks like it,\" I said.\n\nWe followed the panels of the murals and more of their history unfolded. It showed the villagers moving underground through this tunnel complex. The last panel showed a battle between the snake people and what could only be a giant worm. I looked at the size between the worm and their serpent god, the worm was far larger. Did it mean they began worshipping the worm or were they destroyed by it? Hopefully there were other chambers and more murals. There was one other doorway we could use to continue further downward and deeper into the complex. I looked at Felicia and she nodded. We walked side by side and about fifty feet into the new tunnel everything changed. Our footsteps were now louder and the echo seemed to carry further. We stopped and shined our lights over the floor and walls. The previous tunnel had been carved out of the earth but suddenly the architecture had changed to some kind of dark stone. \n\n\"There on the wall, it's more of those weird symbols like the ones on the temple.\" Felicia said pointing her light at a plaque anchored on the side of the tunnel wall.\n\n\"What the hell,\" I said as we walked over to examine the plaque. \"This is far more advanced than whoever made the temple. I wonder what it means.\"\n\n\"Maybe we'll find someone to translate for us.\" Felicia giggled.\n\n\"Translate... oh my god I'm a freaking idiot, the cube!\" I gasped. \"Shit, I left it in my tent.\"\n\n\"Professor,\" a new voice chimed in. \"I have access to the scans of the cube. I have been working on my own translation. I think I can transcribe this message.\"\n\nThe avatar appeared and Felicia bit back a laugh when she saw the cat girl lean forward and appear to stare at the plaque. She even hemmed and hawed as she worked out the loose translation. It appeared to be some kind of dire warning. It spoke of the Nameless and the Formless that dwelt below and to tread carefully. It sounded much like the words spoken to me by the Widow about the threat on the sister scroll I had found. We continued down the tunnel where it eventually opened up in an unusual chamber. The room was octagonal with six of the walls covered in more of those plaques like we had seen in the tunnel and on the wall opposite the one we had entered was a set of double doors. The right door was warped as if some great force had struck it from the other side. I decided to get a translation of these plaques and then we would return to the surface.\n\n\"Okay Neko let's get to work,\" I said speaking to my avatar. \"What's this one mean?\" I asked pointing to one of the characters.\n\n\"Are you trying to learn this language?\" Felicia asked and I nodded. \"I wish I was good at linguistics like you and Carol.\"\n\n\"How do you know until you try,\" I said and she looked at me with an expression of pleasant shock. \"You can do anything you put your mind to.\"\n\n\"Okay Neko, take it slow and help us out,\" Felicia said moving to stand next to me.\n\n\"Yes Detective,\" Neko replied. \"The first character represents holiness or hallowed ground.\"\n\nIt went on like that and soon we began building an inventory of knowledge about this alien language. We wouldn't have had a chance if it wasn't for the cube. By the time we reached the second wall both of us were working through the characters at a slow but steady speed. After we finished the third wall we needed Neko's help less and less often. Three hours later we were heading back up to the main dig site. What we had learned was both disturbing but also quite exciting. The sun was nearing the horizon by the time we emerged from the tunnel. Three of the mummified bodies had been removed and a good portion of the temple wall at ground level had been cleaned. Felicia thanked me for my confidence in her. I told her I had chosen her as head of security for a very good reason. I trusted her with my life and that of everyone on the dig. I told everyone to take a break and get some food and water in them. \n\nA helicopter was going to take the bodies directly to Cairo for examination. I suspected that when they X-Rayed that first body things here were going to change. That's why I was going to take anyone that wanted to go into the tunnel after the evening meal. I felt we might find ourselves replaced with other archaeologists or the dig shut down altogether. I waited for after the meal to make my offer. Everyone wanted to go and that didn't surprise me at all. Once I saw how eager they were I told them why we were all going in. The entire crew fell silent when I said that one word, nonhuman. \n\n\"Wait, you really believe those bodies belong to some sort of anthropomorphic snakes.\" Xion asked.\n\n\"Yep, I have with a little help translated plaques we found in the tunnels. I believe we are dealing with a nonhuman species. I also believe they are long extinct and we have a chance to see something few people ever get a chance to observe. Do you still want to go?\"\n\nThere was a resounding yes. I told them to gather up any and all flashlights that we had and any other things they might require. Half an hour later we were gathered at the mouth of the tunnel and I led them inside. The gallery chamber as I thought of it got a huge reaction from my crew. We spent a good twenty minutes there as they took photos and saw why I believed as I did. We continued deeper into the complex and I showed them the first plaque I had encountered earlier. One of the students took a quick rubbing of it for his personal collection. The next chamber blew them away. They stared at the series of plaques and the double doors. I grabbed the handle of the left door and pulled. The door swung inward with little effort. Even after thousands of years the craftsmanship stood the test of time. Now we were in unknown territory. I told them to be careful and watch their step. The tunnel had a steeper decline and a noticeable bend. We were definitely spiraling into the earth. The corridor went for about a hundred feet or so when it opened into a well-lit chamber. The light came from the ceiling.\n\n\"Are those diamonds?\" Gideon asked staring at the glowing gems set into the ceiling.\n\n\"What a weird pattern,\" another student remarked.\n\n\"Pattern... oh yeah it is a pattern,\" Carol cried out. \"They are constellations I think. But they aren't any that I recognize.\"\n\n\"Why are those stones dark?\" Chicago asked pointing to a spot near the center of the ceiling.\n\nCarol called up her avatar and scanned the entire ceiling. She looked at the stones from different perspectives as her A.I. processed the image and compared it to the current night sky. The stones were different sizes as well as varying brightness. That was the key to isolating the overall pattern. Carol looked from her avatar to the ceiling and her face darkened. One by one she identified the stars represented above us. I asked her what was wrong. She held up her hand and we waited for her to finish her analysis. Instead of explaining her theory out loud she sent me a private message. I walked off and read it with help from Felicia covering my movements. What I read was alarming but made a strange sort of sense. It complimented the things Felicia and I had gleaned from the plaques from the previous chamber. We passed from the constellation room and down a longer tunnel that spiraled twice before reaching a long straight corridor. Once again the material that formed the walls and floor changed. This metal looked very similar to the alloy the cube was crafted from. I didn't think it was a coincidence.\n\nWe walked down the tunnel and the texture of the walls took on an almost biological quality. I started having flashes of H.R. Giger in my head and began checking the ceiling for anything that might be clinging there. I wasn't the only one that made that connection. Felicia actually voiced her concerns and actually used the A word. That sparked an entire conversation about biomechanics and the likelihood of the existence of a Xenomorph. I stopped in my tracks and the group giggled thinking the talk about monsters had gotten to me. I shook my head and looked around at our surroundings. There was definitely something wrong and only now did I put my finger on it.\n\n\"How long do you think this tunnel has been inactive,\" I asked my team.\n\n\"Twenty thousand years or more,\" Chicago replied and then she saw it too. \"Oh wait, if that is the case and all that sulfur dioxide gas why are these tunnels so pristine. Something or someone has been maintaining them.\"\n\n\"My thought exactly,\" I said and that's when everyone began looking around. \"We'll keep going and maybe something will present itself.\"\n\nThe other thing that became obvious is that the deeper we went the longer the distance between chambers. We had travelled hundreds of feet and only encountered a few rooms. Where were the living quarters? Did they reside deeper still and would we even recognize them when we saw them? We circled further down and when we saw the next chamber Neko informed me we should try and alert Master Terry. When I asked why she told me we were quite near to the anomaly detected by the satellite. Another chill ran through me and I asked for volunteers to go to the surface and inform Terry of our discovery. Half the team offered to return to the surface and I sent all of them. I thought of it as safety in numbers. The rest of us reached the next chamber and my jaw dropped open. The room was at least a hundred feet in diameter and it housed only one thing, a pedestal. On top of the pedestal was a small golden statue. We closed the distance and I gasped when I figured out who the subject of the sculpture was.\n\n\"It's Osiris,\" I gasped.\n\n\"Why is he sitting in a lotus position,\" Chicago asked.\n\n\"Why is there acupuncture needles protruding from it?\" Gideon asked.\n\n\"The pedestal says that this artifact is for healing immortals,\" I said after translating the characters carved into the material. \"Why would an immortal need healing?\"\n\n\"The legend of Osiris talks about his murder by his brother Set. Isis used her magic to restore him. Do you think this is the magic they were talking about?\" Gideon offered.\n\n\"I guess every legend has its source but how the hell did they learn about this? This place has been isolated for twenty thousand years.\"\n\nWe took photos of the pedestal before I took off my backpack and loaded the statue into it. I wasn't going all this way with nothing to show for it. We finished examining the chamber and it went from odd to downright weird. The walls of the room were covered in square and rectangular tiles. Decorating the tiles were hands. The square tiles had a single hand upon it while the rectangular had a pair of hands. The strange part of the tiles was the gestures they were making. My thought after reading so many esoteric books of knowledge was that these hands were arcane in nature. Neko offered to scan the entire chamber to collect the tiles for me. I took off the watch and placed it upon the pedestal and we left the chamber. It took her nearly twenty minutes for her to take in each and every tile. It took far longer for her to isolate and organize them. I put the watch back on and a new excitement filled those remaining. \n\nWe crossed to the far side of the chamber and down yet another tunnel. We were barely out of the sight of the last room when Felicia's A.I. alerted us. We all stopped and fell silent. The avatar warned us that something ahead of us sent out some sort of electric pulse. So there is something alive down here, but what is it? I told the others that if things got risky to run for the surface. I rearranged our group with me leading the way, Carol in the middle and Felicia bringing up the rear. We went slowly and I kept an eye out for any kind of movement. Nothing revealed itself and after another two hundred feet we saw the opening to the next chamber. We approached it more caution than any other chambers so far. The room was round and about fifty feet across. The ceiling was beyond the reach of our flashlights and set into the wall in five foot increments were pill shaped capsules. Each capsule was six feet in height and they were stacked on top of each other who knew how high.\n\n\"Sleeping quarters,\" Chicago said with a shrug.\n\n\"Suspended animation tubes,\" Carol replied.\n\n\"Let's see,\" I said as I approached one. \n\nAs I neared it the tube went from dark and solid to translucent and finally transparent. Inside the tube was the preserved body of a serpent man or woman. Its head was down to his chest and the arms were crossed. Neko was still busy working on the tiles from the previous chamber so Carol scanned the bipedal snake. Her A.I. registered the faintest of heartbeats. It was alive! I suggested we leave sleeping serpents be and everyone else agreed. There was nothing else of interest so we continued to the far side of the chamber. Felicia let out an alarmed hiss and we stopped dead in our tracks. I looked at her and she said there were several more of those pulses from the open doorway. I held up a hand and peered outside. There was nothing in the tunnel but when I looked upwards there was something clinging to the ceiling. I froze and watched as the thing shifted and changed every second or so. It was constantly shifting and I remembered the warning about the Formless. This had to be one of them. I backed up and told everyone else what I had seen.\n\n\"I think we should go back now,\" Corey said.\n\n\"I agree. Felicia will take you back to the surface.\" I said and that caused an argument instantly.\n\n\"We are all going back,\" Felicia said. \"I am not leaving without you.\"\n\n\"I can protect myself but I can't guarantee the safety of everyone. We are almost at the heart of this place and I can feel it. I am only going one or two rooms further then I am leaving.\"\n\n\"You have half an hour,\" Carol growled. \"If you don't come back in that time we are coming back.\"\n\n\"That should be plenty of time,\" I agreed.\n\nWe split up and I watched them head to the surface. I was about to move forward when Neko told me she had finished. I told her to hold onto that data until I needed it. I held my right hand above my head and stepped out into the tunnel. The things clinging to the ceiling instantly reacted like some kind of shadowy vampires confronted with a crucifix. I jogged along the tunnel to the next chamber. This was the largest chamber yet. It appeared to be some kind of temple or chapel. The massive statue in the center of the chamber must represent the serpent god Yig. The father of serpents looked down on his children from a height of thirty feet. There were no pews or furniture of any kind. The walls of the temple were covered in plaques. I scanned the ones closest to the floor and they were a set of commandments. The serpent folk were a dark and aggressive species. They saw themselves as apex predators and anything not serpentine was fair game. I was heading to the next tunnel when I heard voices, human voices. But these were coming from ahead of me. Did some of the cleaners slip in here to rob this place? ",
        "\"It is almost time,\" one voice said in Arabic.\n\n\"The Burrower approaches,\" another invoked in a voice mixed with awe and fear.\n\nI slipped forward and followed the tunnel to the heart of the complex. This bowl shaped chamber could house thousands of serpent folk. There were three other entrances and near one of them were seven hooded figures. Six of the cultists wore black and one of them red. I crouched down as they stared at the entrance opposite to mine. I could feel the bulk of the thing as it approached. As I waited for it to appear I figured there had to be another entrance into this place. The vibration grew stronger and now I could just make out a wet slapping sound as the Burrower grew ever nearer. What did it look like? Was it some massive white worm? Were those blood thirsty things we had burned the children of this thing? I learned quickly enough that they weren't. The dread bulk of the thing had to compress as I entered the chamber. It was hard to judge its size from my position but it was huge all the same. It was like some armored worm that sported four massive tentacles on either side of its body. That was the source of the slapping sound. It would throw them forward, grip the floor and then propel its body forward.\n\nAs I watched the Burrower retracted the tentacles and slithered like a serpent. It reared up like a cobra and I nearly cried out when the front of it split open revealing a maw squirming with tube like structures of various size and thickness. I couldn't take my eyes off the abomination as it lorded over its human minions. I watched as one of the black robed figures walked over to the monster and knelt in front of it. If I ever wanted a size comparison this was it. The man was tiny compared to its subterranean god. The cultist pulled back its hood and sat up straight. What was he doing? The Burrower lowered its mouth and a few of its smallest tubes shot out and struck the back of the man's head. I had to clamp my hand over my mouth to keep from screaming. The man pitched forward from the force of the impact. His body began to contort and he cried out in a series of nonsensical sounds and words.\n\n\"I... oh god... not like this... NOOOOOO...\" he managed before he fell silent.\n\nThe man stood up and stumbled before he was able to stand on his own. The voice that came out of the man wasn't human. It spoke fluent Arabic but the cold disdain could only be the voice of the Burrower. He was using the man like a puppet. It turned to face the cultists and all of them save the red clad figure fell to their knees. Was it religious fervor or blind panic that drove them now? I didn't know. I suspected it was fear. The Burrower told the leader in red that soon it would be free. Carol was right! The chamber with the glowing stones in the ceiling was a kind of time lock. Each of those constellations was a tumbler and only until all of them had been tripped could the Burrower leave this place. If it did it would destroy on a level that this place hadn't seen since the time of the pharaohs of old. It would make the ten plagues seem like a slap on the wrist. What the hell could I do? I had to stop it somehow. I had to slow it down. The alignment of the stars wouldn't last forever. I needed to halt its progress but how. \n\n\"Why are you hiding?\"\n\nI looked up and the Burrower was staring at me through its puppet. I rose up and stood in the doorway. The cultists cried out for my blood but the Burrower silenced them with a single gesture. The thing looked back at me and I held my ground.\n\n\"Who are you?\"\n\n\"I am called the Professor,\" I told it.\n\n\"Why are you here?\"\n\n\"I seek out ancient places to uncover their secrets. I had no idea you were real.\"\n\n\"You aren't like them. I can see that. You are worthy to serve me.\"\n\nThe last two words hit me like a punch to the gut. I had to test something that might be my only option. I raised my right hand and stroked my chin as if pondering its offer. The puppet cried out in alarm when it saw the Elder Sign. There was my answer. The Burrower was susceptible to the power of the ancient device. \n\n\"You are a bold one,\" it growled. \"Perhaps I was hasty offering you my patronage. How fares Great Nodens and his pets?\"\n\nI had heard that name before in the writings I had so diligently consumed. He was one of a race known as the Outer Gods. He was called benign or at least not malevolent towards mankind. I didn't answer the thing's question as I tried to work out an attack plan. The puppet's body convulsed and while I watched one of the larger tubes was extended and sucked up the corpse of the cultist. A deafening fluting noise filled the chamber and the man in red kicked one of the other cultists. That man crawled over to the thing and suffered the same fate as his fellow cultist. The process went faster this time and soon I was locking eyes with the dire being once more.\n\n\"They never last very long,\" it said. \"They are not very durable. I suspect you find me a menace to the poor humans above. You are right. When I reach the surface I will wreak such destruction as your species has never known outside an act of nature. You are wise to hate me. But you don't matter, your entire race are specs of sand beneath me. I will reshape things in my image.\"\n\nI heard the footsteps behind me and tore my gaze from the monster to look over my shoulder. Felicia and Carol had returned early. I suspect they had heard the roar of the Burrower. I glared at them but I understood why they had come back. They looked at the horror before us and Carol actually screamed when she saw it. Felicia drew her weapon and took aim. I touched her hand and shook my head.\n\n\"I need your help,\" I said in English hoping the puppet didn't speak it. \"I need you to go back to the first set of double doors. I need you there as soon as you can. We need to stop this thing. The last conjunction is almost here. Please don't argue... go... GO!\"\n\nCarol and Felicia raced back the way they had come. I turned to face the unholy monstrosity resolved in my plan. It had to work. The thing seemed indifferent to me like the insect I was to it. I drew on the knowledge I had gleaned from the tomes I had read. One simple spell came to mind and I decided to try it. I held up my left hand and made the proper hand gesture and performed the Voorish Sign. It was used to make the invisible visible. I took a step back when I beheld the full unmasked terror of the Burrower. Now I understood and I nearly broke and ran. But I had to give them time to reach the doors.\n\n\"I see now,\" I said as I spoke to the Burrower. \"You are a multidimensional being. That is how you were locked away.\"\n\n\"YES,\" it roared through its puppet and the thunderous piping of its own voice.\n\n\"How long,\" I asked.\n\n\"In your reckoning of things... hundreds of millions of years... the Elder Things were quite cruel and meticulous. But today that changes and nothing can be done to stop me. I will be free!\"\n\n\"The world has changed much since then,\" I said stalling for time. \"Perhaps we can come to an accord.\"\n\n\"You want to bargain, how amusing.\" It chuckled.\n\nNeko appeared and informed me that Carol and Felicia were in place. The Burrower stared at Neko and found her interesting. It asked if she was my familiar, a bound spirit. I shrugged and nodded. I suppose she could be seen in that capacity. I had Neko dance for the Burrower to eat up as much time as possible. It didn't last long. I felt the shift in the air. The thing cast aside its puppet but this time it didn't consume it or request another. The stars were coming into alignment. There was nothing else I could do so I turned and ran. I sprinted the entire distance from the center to where I had told the girls to wait for me. The last tumbler was falling into place and I hoped to god I was right. I saw them waiting for me and they looked relieved. The roar from below cut the sense of security short. I walked over to the damaged door and examined it. I leapt up and bashed the upper corner with a double fist strike. The corner shifted a bit. I jumped up again and struck even harder than before. The fourth time the corner popped back into place. I told Felicia to draw her weapon and fire it when I told her. \n\nI cleared my head and brought the spell into my thoughts. I hoped it would work. It had to work. I took the combat knife from Felicia and we began closing the doors. The Burrower appeared suddenly and silently. How the hell could something that huge move so quietly and so swiftly? Felicia needed no prompting. She took her stance and fired. The thing cried out. But we never knew if it was in pain or simple outrage. The doors slammed shut and we all braced our backs against it. I used the knife and slashed both of my palms. I placed one on either door and began incanting the spell. Carol and Felicia cried out when the monster thrust its bulk against the doors. They opened for a second but Felicia fired a few more rounds from her gauss pistol. When that failed she thrust her hand with the Elder Sign in the gap and the thing roared a second time. The door closed and I continued chanting. I felt the energy being drawn from my body in vast amounts. It took everything I had to remain standing and continue with the spell. The Burrower howled and raged but the ritual had already begun to take effect.\n\n\"Look,\" Carol gasped.\n\n\"It's fusing together,\" Felicia added. \"It's working... it's almost done...\"\n\nI spoke the last syllable of the last word. I staggered back to see my handiwork. I saw the huge Elder Sign emblazed upon what was now a wall. The two doors were now a single piece of metal. The incredible drain took its toll and I lost consciousness. I didn't learn what happened next until hours later. I opened my eyes as the first light of dawn hung in the air.\n\n\"It worked, oh thank god,\" Carol called out weeping with joy.\n\n\"I told you it would,\" Felicia said her own voice cracking. \"Don't move we have to take out the needles.\"\n\n\"Needles, what needles,\" I said feeling a bit tipsy.\n\n\"We used the statue of Osiris,\" Carol said as she plucked one needle after another and returned it to the statue. \"The rising sun did the rest.\"\n\n\"What happened?\"\n\n\"You nearly bled out old boy,\" the First Minister said from off to my left.\n\n\"Yeah, about that,\" I said but he told me to rest and recoup my strength.\n\nThe last needle was removed from between my eyes and they helped me sit up. I felt like I had been out all night drinking. I blinked a few times and looked around. My entire team was there and that was all the reward I wanted. I smiled and fought back the tears. I was helped to my tent where I dressed. I sat on my cot while food and drink was brought. I ate and it was the best food I had ever had in my entire life. I stood up and staggered outside. The kiss of the sun on my skin was the best tonic I could have asked for. I closed my eyes and felt the strength return to my limbs. I stood there for a long time until I heard Carol walk up to me. Her heart was beating so fast. I opened my eyes and she leapt into my arms. I held her as she clung to me crying openly. Felicia was close and watched wiping tears away but refusing to succumb in front of others. Carol eventually relinquished her hold on me and we all smiled. The First Minister approached and I asked the girls for some time to speak with him alone. They agreed but told the older man not to wear me out.\n\n\"You are a very lucky man,\" he began. \"To have not one but two women that loves you so deeply. Tell me what happened and why you went into the tunnel.\"\n\n\"After reading the writing on the side of the temple and seeing the drawings on the walls of the first chamber I just knew. I knew that when the three bodies reached Cairo you would halt our work on this site.\"\n\n\"What did you expect us to find?\" \n\n\"The remains of serpent men to be honest,\" I said and he nodded. \"You mean that is what you discovered?\"\n\n\"Yes, but why would I shut you down,\" he said smiling a little wider now. \"We have been finding their artifacts all over the place for over a century now. What else happened... how were you injured?\"\n\n\"I saw it,\" I said feeling a sudden chill. \"I saw the Burrower. I saw it turn a man into a mouthpiece. It was horrible. I used the Voorish Sign on it and saw all of it. I raced back to the double doors and used my blood to place an Elder Sign to seal it away. I guess I overdid it a little.\"\n\n\"Impressive, very impressive my boy,\" he said shaking his head. \"There are a handful of trained people in the world that could have pulled off that feat and you did it and survived. I think I underestimated your value. So you can quit worrying so much I am not shutting down the dig. In fact I plan on expanding it. We are going to triple the manpower here with you still running things. However, I do need you to come with me for a few days. You need to be brought before the elders and your membership officially sanctioned. When they hear about this you are a shoe in.\"\n\n\"Thank you, I will leave Corey in charge while I'm gone. He has a pretty level head. I will have them wrap up the statue of Osiris for delivery to Cairo right away.\"\n\n\"No need for that my boy,\" he said. \"All things considered I think you should keep it as a kind of good luck charm. Besides, it isn't like we can display it at the museum. I am sorry we can no longer access the tunnels below.\"\n\n\"There is a second entrance,\" I said and watched his eyes widen in surprise. \"The cultists were already there and I suspect if we can find one and convince them we can go back in.\"\n\n\"Aren't you worried about the Burrower,\" he asked and I nodded.\n\n\"But he can't leave for a very long time. The tumblers have all been reset by now. We are safe for the time being.\" I said as I wiped the cold perspiration from my forehead.\n\n\"I want you to celebrate your victory. Take the girls someplace nice and I will catch up once I have been able to settle a date for your entry into the Order.\"\n\nHe left and walked over to the waiting jeep. He waved like some foreign head of state and off he went. I told the girls we were returning to Sardinia for a short vacation. They disappeared to pack and I walked over to the edge of the dig site. Everyone was working and focused as if nothing had happened. I was so thankful that they all survived. The haunted details of Antarctica were on my mind and this time we had beaten the odds. That was all that mattered to me. I pulled Corey to the side and told him I was taking a few days off and that he would be in charge. If anything came up I told him to text me. He was thrilled that I trusted him enough to leave him in charge of the dig. I searched out Terry and thanked him for Neko and told him she saved my life. He smiled and was glad anything he had done helped me out. He also offered anything I needed in the future without hesitation. I think how close Carol came to danger deeply affected him. \n\n\"You are good for her,\" he said after a long silence. \"I think all three of you need each other. Where are you taking them?\"\n\n\"I was thinking Sardinia since it is so close,\" I said.\n\n\"Good but uh... I'll send you someplace close that might suit your needs even better.\" He said smiling.\n\nI packed up and received a text from Terry. The only thing in it was a set of GPS coordinates. I picked up my bag and met the girls by the helicopter. I gave the pilot the coordinates Terry had sent after I had climbed in and buckled up. He nodded and fired up the engines. We flew to Alexandria and refueled there. After that we headed for the enigmatic destination offered by Carol's uncle. We flew over the clear blue waters of the Mediterranean Sea and the island came into view. The three of us gawked as the helicopter landed at the private heliport. We disembarked and were met by the staff of the private island. The maids were gorgeous and their male counterparts were Hollywood handsome. \n\nWe were led to the sea side villa that appeared to be carved out of the living rock. We settled into the Master Suite while the staff unpacked our things. There was an Olympic sized pool as well as a hot tub and sauna. The three of us piled into the hot tub as drinks and snacks were served. We enjoyed the water as well as the view. A few weeks in the desert environment had made the island seem like heaven. We sipped champagne and talked about what happens next. I was eager to see what kind of artifacts we would unearth now that the danger had been eliminated, for now. The Burrower was sealed away for god only knows how long. I shivered despite the bubbling water around me. Felicia and Carol moved closer and snuggled.\n\n\"Monstrous...\" Carol said suddenly.\n\n\"What are you talking about,\" Felicia asked.\n\n\"I was just thinking about the calculations required to build the lock. You know the diamonds on the ceiling. They represented stellar conjunctions that had to be charted to a degree of accuracy that is almost beyond imagination.\"\n\n\"So they were good at math,\" Felicia said.\n\n\"No, the intellect required is far beyond even the A.I.'s capability given thousands of years. Whoever or whatever built it was like gods. All the minutia involved is mind boggling.\" Carol continued.\n\nShe fired up her A.I. and displayed a map of our galaxy. She showed all of the stars involved in the tumbler system that kept the Burrower trapped. We watched as one by one the conjunctions took place. The entire cycle took millions of years to complete. Smiling like the Cheshire Cat Carol showed us a secondary aspect to the chosen stars. Lines of force appeared and converged on a central location in the cluster of stars. Carol told us this is where they came from. This was the home world of these god like builders. I wondered what they were like and felt my curiosity burn brighter than ever. I asked her to transfer her work to my watch so I could look it over at my leisure. \n\nThe next three days went by far too quickly. The girls and I enjoyed each other's company as much as we could. We woke on that last day and dressed for our mutual destinations. I dressed in a handmade suit while they returned to their desert survival gear. One final kiss and we parted company. I headed for one helicopter while they headed for another. I slipped on the ring given to me by the First Minister. I climbed aboard and belted in. I had no idea where I was heading only that it was within range of this aircraft. I watched the girl's chopper take off and head for Cairo. We lifted off a minute later and flew over the crystal clear water of the Mediterranean Sea. We seemed to be following the other helicopter for most of the trip until we dropped altitude and made landing preparations. I recognized the massive luxury craft instantly, it was the Numenor. The chopper set down and the all-female ground crew was waiting to greet me. \n\nI unhooked my harness and climbed out. The ladies took me down to the main deck and the ship's dining hall. There were several dozen men of all ages there. The room was stocked and it appeared that I was the guest of honor. I looked around and while Carol's Uncle Terry wasn't present Nick Shaw was. He was the first to greet me and began the introductions. I guess I shouldn't have been surprised that one of the smartest and wealthiest men on the planet was a member of the Order. I was informed that the Hidden Master and Eternal Master would be present via hologram. While they had the time to spare to induct me into this fraternity there was other pressing matters that required their attention. I understood that and didn't expect anything too grandiose. \n\nThe Grandmaster was here in person and greeted me. He welcomed me with a strong handshake and guided me to the center of the room. We waited for the materialization of the other two members of the triumvirate. The soft hum of machinery preceded the appearance of the two masked figures. I knelt and with the blessing of the Three I was officially made a member of mankind's oldest secret society. The Grandmaster reached down and triggered the device on my ring so that it now showed the triangle of swords and the All Seeing Eye. There were cheers, whistles and a great deal of well wishing. A toast was made and the mingling began. The Grandmaster told me the duties of the Archivist and what was expected of me. Once I had taken the oath the celebration began. ",
        "\"I see that Terry gave you one of our Pathfinder models,\" Nick Shaw said as I reached one of the tables laden with food. \"How is that working out for you?\"\n\n\"I can't complain. It handles the sand and heat very well.\" I told him.\n\n\"Great, if you need anything to help you settle in just ask.\"\n\n\"Actually I have some cut and uncut gems that have come into my possession. Do you have any suggestions?\" I asked.\n\n\"How unique are these stones?\" He asked before popping a piece of shrimp into his mouth.\n\n\"Well, the cut stones are known as the Seven Princes... what?\" I asked seeing his eyes widen in surprise.\n\n\"You are one lucky man,\" he said. \"I have been trying to get my hands on them for a while now. If you want my personal opinion keep them and display them when you get back home.\"\n\n\"I'm not sure the Pickman House is safe enough for that.\" I said and he laughed.\n\n\"Not there,\" he replied. \"The Von Dekker estate is quite secure and protected by a small elite security force. After your dig is over call me and I'll be happy to take you there and help you settle in. I understand this is all quite overwhelming. It was for me too.\"\n\nI shook his hand and worked the room. I collected names and numbers as I went. Neko, my avatar, helped quite a bit as she captured faces and names for me. When I had time I would look them over and research my fellow members and see who I was dealing with. It was the man in the wheelchair that intrigued me as I moved through the banquet hall. No one approached him and he didn't seem too eager to mingle either. I grabbed two flutes of champagne and walked over to him. I handed him a drink and he grinned.\n\n\"So you are the Heir,\" he said in his heavily accented English.\n\n\"You have me at a disadvantage,\" I said and took a sip from my glass.\n\n\"My name is Darius and you are losing points with the others by speaking with me. While I am a member in good standing my brothers don't find my company very appealing except Nikolas that is. He is young like you and can afford to be kind to an old man.\"\n\n\"What have you done to annoy the others?\" I asked and he actually smiled.\n\n\"I play the game far too well for them. They will not mourn my passing as they did Squiggles. I was a student of his and he taught me the art of the game. No, that's not right, he instructed me in game theory and how it applies to real life. He was a matchless teacher and I was his best student. He taught me that people were pieces on the game board and if you need or want anything you move the pieces you need to reach your objective.\"\n\n\"It sounds kind of cold blooded,\" I said. \"I see why they avoid you. If that is true why was Squiggles looked up to so much?\"\n\n\"He was a legend. He was able to manipulate people with such finesse they thanked him after the fact. I will never be as patient or skilled as he was. I suppose that is a good thing. As his heir you have huge shoes to fill.\" He said with a grin and a handshake.\n\nI waited to pocket the thumb drive he had passed me when he shook my hand. We talked for a little bit longer but he appeared tired so I let him be. I watched the others and Darius was right they would look at me differently after I had talked to him. I didn't care I had other things on my mind. I had a dig to finish and two gorgeous women to return to. I walked around the ship and enjoyed the view of the Mediterranean. I cleared my thoughts and let my mind drift. There was something bugging me and I couldn't place my finger on it. Thoughts drifted passed my consciousness and I gave them a moment of attention and let them continue on their way. The wrongness I had felt since speaking with Darius found its root. Squiggles was a master at manipulation. Monstrous was the word that Carol had used to describe the calculations it had taken to build the tumblers in the Burrower's prison. The wrongness grew as I thought about the sudden disappearance of the Widow.\n\n\"She was scared to death of leaving her house. What could possibly make her, no let her leave it all behind? Only one answer fit that particular peg, Squiggles. But he was dead or was he? It was possible he found a body double for his funeral. That meant he was still alive and if he was alive he could have set all of this in motion.\"\n\nMy thoughts began to race now. What sort of adhesive did he use to adhere the second dynasty scroll to the other one? Could he calculate how long it would take for the glue to fail? Those sorts of scrolls would only be of interest to young students like myself. The rest began to fall into place. I find the scroll. I make the two recipes. If he was still alive he nudged the Chancellor and made it look like it was his own idea. Did he leave clues to the scroll? My head hurt the more I thought about it. Did Squiggles know about the Burrower? Of course he did. He had managed to infiltrate the cult and learn it from them. That would have been child's play for him. The flash of memory hit me hard. The cult leader in red, could that have been Squiggles? If it was then he had not just manipulated me but the Burrower as well. That must have been the pinnacle of his career. I wonder if he and his wife had taken the elixir by now. \n\nI wanted at least some proof that Squiggles and the Widow might be alive and together. I approached the First Minister and asked him about Plato's Pyramid and Kadath. He smiled and looked around. He pointed to two chairs in the corner. We grabbed a bottle of wine and some snacks on the way. Once we got settled I asked him where the pyramid had come from. The minister told me that Squiggles had returned with it from some place called Kadath. It wasn't on any map that the older man could find but its value was said to be without equal. I asked him if there was anything else that the late Squire had given him. He thought about it for a long moment and shook his head. He told me there were plenty of artifacts he had collected but they were all safely stored away. So the pyramid was the only thing he actually gave him. But to open the pyramid you needed the Key. I needed to speak with the Chancellor and find out when and where the Key came into her possession. I had a feeling that Squiggles was involved in that one as well.\n\nWhy was he doing all of this? Was it simply to lock the Burrower away or was there even more on his agenda? I wanted to believe that this was all over but in the back of my mind I had serious doubts. But until something else reared its ugly head I was going to have to live my life as if I was in control. It maybe just an illusion but it was the best I had. I would be happy once I was back on the dig site. I looked around and retrieved the thumb drive that Darius had given me. I slid it into the slot on the side of my watch. Neko copied the files and examined them. It took her a little over two minutes to ascertain their meaning. She displayed her analysis and my jaw dropped. The files were vintage video files of Squiggles narrating lessons on the fine of art of manipulating people. There was nearly sixty hours worth of material. I had Neko scan them for viruses and any other nasty surprises, there were none. I pulled the thumb drive out and tossed it overboard. The value of information was how limited the access to it. I ordered Neko to keep those files sealed until I requested them. They could prove useful in the near future.\n\nSmiling I turned and returned to the party in my honor. I told those that were interested about the dig and what we had found beneath the earth. They in exchange told me chilling stories about their own encounters with nonhuman races. My world just got a whole lot bigger."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "mff",
        "threesome",
        "adventure"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/recipe-for-adventure-pt-04"
}