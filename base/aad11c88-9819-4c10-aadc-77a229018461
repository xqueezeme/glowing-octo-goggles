{
    "title": "Not So Lucky in Love...",
    "pages": [
        "Voltaire is quoted as saying, \"It is one of the superstitions of the human mind, to have imagined that virginity could be a virtue.\" For me there was zero concern of virtue. Nope, the only reason that I am still a virgin, is simple, bad luck.\n\nMy name is Joe Archer and I live in Texas, a state where, in case you don't know, football is huge, hell it's as big as religion, so when my parents weren't thumping me over the head with a bible, they were throwing footballs at me non-stop. The Archer dream was for me to become the first professional football playing Baptist preacher.\n\nReligion as it was, always seemed to be, well, how should I say it, bullshit. I never bought into the whole package like my parents and siblings have. My mother not so fondly refers to me as her, Dirty Little Atheist Bastard. She also tells everyone that will listen, that I must have been switched at birth, because after she had caught me watching porn on her ipad, I was also forever known as the Fornicating Pig. Football on the other hand, stuck. I have what one might say is, above average skills for my age and the region that I live in. I practice hard, and have excelled at every level, but it has come at a cost. I play high school ball for a Division 1 team and we have our sights set on being State Champions and some say that we might have a shot. My family has hopes and dreams that I'll get a scholarship to a big school, be a star and be drafted to the NFL. I can honestly say that for once in my life, that I hope their dreams come true. I work as hard as I can to try and make it happen. But the only thing standing in my way or that might stop me is, for the lack of a better word, pussy.\n\nAt 18 years old, being a virgin can be detrimental to your social status All my teammates razz me about it in good fun, but I can hear them talking behind my back. I've tried to deny the facts, but we live in a small town and go to a small enough school, so the flashing neon \"virgin\" light is always flashing over my head. I want to pop my cherry so bad that I'm tempted to bang my sister for Christ sakes.\n\nThe last regular season game for our school was being played on the upcoming Friday night and our OLB, Troy, was going to have an end of season BBQ at his families, home. They were huge boosters of the team and our school, so they supply us with food and beer even though we were all underaged drinkers. Yep, no problem feeding 18-year-old football players booze and letting them fuck like rabbits, as long as, they won the game on Friday night and repented their sins on Sunday morning. So, a plan was developed by my teammates, to help me lose my virginity.\n\n\"Hey Arch, I just talked to Jess and everything is a go for Friday night. Her cousin Savannah is coming over to stay. Jess says that she's a sure thing and she know who you are and thinks you're cute, so she's down to fuck.\"\n\n\"Come on man, what are you, my pimp?\" Jess was Troy's girlfriend and his co-conspirator in trying to get me laid.\n\n\"Don't be like that man. We're trying to help get you laid.\"\n\n\"Savannah, really? Everyone knows that Savannah's a porn star name. She'll probably give me an STD.\"\n\n\"What's fucking wrong with you man?\"\n\n\"I'm just sayin, you couldn't get a Debbie or a Theresa? That name has porn star written all over it and if not, she is at the very least a stripper. \"Gentlemen, please welcome to the stage for your viewing pleasure Savannah or everyone, put your hands together and give this young lady a warm welcome to the center stage of the Pussy Palace\", sounds about right, doesn't it?\"\n\n\"You're a tool. Don't fuck this up with all your insecurities, Jess and I worked our asses off planning this. The fact that she may have a little more experience than some other girls will be beneficial to you.\"\n\n\"Whatever. I'll catch you tomorrow.\" Doing the math, on the probabilities of my finally having sex, weighed heavily in my favor. According to Troy, Savannah was a goer or as he put it \"a sure thing\", she knew who I was, she thought that I was cute, and she liked jocks. It sounded like a touchdown to me. So, there was only one thing left for me to do, buy some condoms.\n\nWalgreens should have been my natural choice, but I was thinking with the wrong head and ended up at the local Mom and Pop drugstore, the one where my parents shopped. Their condom selection, as limited as it was, still had me baffled. I didn't know which one to get, thin, ribbed, lubed, I had no freakin idea, so I pulled out my phone, took a couple of shots and sent them off to Troy. He knew his shit and hopefully, he could give me a second opinion. But just as I put my hand in my pocket, I felt an old boney hand grab my shoulder and the shit hit the fan.\n\n\"Put em back son.\"\n\n\"Put what back?\" To my absolute horror the old man that was holding on to my shirt, yelled up to his wife at the very front of the store.\n\n\"Marge, call the cops. I caught the Archer kid stealing condoms.\" Every head in the whole place turned toward me. Fuck the condoms, I needed some goddamn Depends, because I was 5 seconds away from pissing and shitting in my pants.\n\n\"You what? I didn't steal anything, you made a mistake.\" Whispering to try and reason with the old kook. You know what, the hell with it, I'm 18, I'm allowed to legally purchase condoms in this state, fuck it, I'll wait for the cops. This mess will be cleared up in no time. I was calm as could be.\n\n\"George, the cops are on the way and I called his mother, she's coming too.\"\n\n\"YOU FUCKING DID WHAT??? YOU CRAZY OLD CUNT.\" It just slipped out, but in the form of a scream and loud enough for every single person in the store to hear. I was done for, my parents would never understand this, no more football for me, I'd be living out my days in a monastery instead.\n\nThey sat me in the front of the store, on display, giving every shopper that passed by me, the ability to call me a \"sinner\" and tell their children to \"look away\". Marge or Ethel or whatever the old bitch that just ruined my life, had no problem whatsoever telling anyone new who came into the store, why I was seated there. \"That's the Archer boy, the one that plays football. George caught the dirty little sinner stealing condoms. \"\n\nThe local equivalent of Barney Fife showed up just seconds before my mother, they both were screaming questions at me at the same time, neither was very impressed when I just sat there quietly.\n\n\"Joseph, I swear to the lord, you will burn in hell for stealing the tools of the devil, just so you can fornicate with some dirty little harlot.\" I was counting down the days until I started college and could get the hell out of this town.\n\n\"Mom, calm down, I didn't take anything.\"\n\nBarney piped in with the obligatory, \"You watch your mouth boy.\" So, I felt the need to retort with, \"or what, you gonna shoot me for putting my phone in my pocket?\" This earned me a slap from my mother and the indignity of being frisked in front of the entire store. Of course, nothing was found, George insisted that the package was in my pocket, Barney confirmed that they weren't, but he read my texts, looked at the pictures and relayed to the store owners, my mother and anyone else that showed any interest, exactly what my intentions were for the upcoming Friday evening. So, in short, no condoms, a life time ban from the store, a stern warning from a cop and a religious zealot of a mother that was screaming that I needed to repent my sins. Maybe being a virgin was not so bad.\n\nFriday couldn't come any faster for me, no pun intended. I was really looking forward to the game, nearly as much as I was looking forward to my date with a girl named after many porn stars. In the game, I was in control and knew what to do and I just kept doing it. I went 27 for 33, 261 passing yds, 3 touchdown passes and 67 yds rushing. We won in style. If only I could keep the winning momentum going into tonight.\n\nTroy's folks, out did themselves, lots of great food and ice-cold beer. There were as many adult fans at the party as there were high school kids. Lots of back patting and hand shaking was going around. I was speaking with a scout from the University of Colorado Boulder, when I saw Jess giving me a wave, I excused myself, I rushed over.\n\n\"Hey Joe, I want you to meet my cousin Vanna. Vanna, this is Joe.\" Vanna, aka, porn star Savannah, was exactly what I had hoped for, blond hair, blue eyes, a pretty face, tits and with any luck, a pussy.\n\n\"Wow Joe, what a great game tonight. You looked really, really, good out there, my dad says that you guys will probably win State.\" She stood there looking sexy as fuck and she knew that I was checking her out, head to toe.\n\n\"Thanks.\" I guess I'm a man of few words.\n\n\"Joe, do you feel like getting us a beer and maybe we can talk a little bit.\" Oh, yeah, that was definitely code for \"let's fuck\", if I ever heard it. I sprinted across the yard to the bar to grab us both a couple of tallboys and sprinted back.\n\n\"Here, I got us both two.\" I was charming her right out of her pants.\n\n\"Thank you. Did you feel like taking a walk?\"\n\n\"Sure.\" This was guaranteed, the best night of her life so far, and it had only just begun.\n\nAs we walked toward the barn, I dazzled Savannah with my witty rapport, \"nice night\", oh yeah, \"lots of stars\", she was putty in my hands. We climbed the ladder up into the hay loft and opened the end doors so that we could look out over the party. This may surprise some, but it was Savannah, my porn star looking vixen that made the first move. She turned and kissed me. I was hooked. I had kissed other girls but never with this much passion. Savannah was squirming and moaning, \"oh, oh, oh, oh fuck\" and we had only just started, hell I didn't even put my tongue into her mouth yet. I think this is going to be a great night.\n\n\"Joe, stop. Wait.\" What the fuck, maybe she was so turned on that she couldn't take anymore. Nope, not the case. In my haste I hadn't put my beers down and when I hugged her into my body, the cold amber liquid was pouring down her back and into the crack of her ass. I was quite literally, soaking her and her panties to the bone.\n\n\"Holy shit, I'm so sorry.\" Savannah smiled and didn't appear to be overly angry, so I set the beers down on a bale of hay and picked up where we had left off. After a few minutes of kissing, Savannah stopped me and said that she really wanted a cigarette. Honestly, I thought that that only happened after sex. She must be turned on as fuck, so much so that she's willing burn down a barn by smoking in it.\n\nSavannah finished her smoke, disposed of the butt in one of the beer cans and we were ready to go. My god, she was so sexy, as she started to remove her wet, white cotton blouse. Once it was off, she stood there in her black lacy bra and it was by far, the sexiest things I had ever saw in my life, even better than the girls I'd seen in dirty magazines. My dick was so hard, it was painful. The anticipation of seeing those naked tits was killing me, but to her credit, I wasn't kept waiting for long. In one fluid movement, it was off. Savannah's breasts hung gloriously from her chest, they looked perky and hard, I couldn't stop myself from drooling.\n\nWhen this blonde porn star goddess wannabe, reached out and pulled my hands up to her tits, I was hers for life, she owned me, and she knew it. I was making sounds like a pig looking for food and I was dry humping the air, but it didn't seem to be causing her any concern. Those tits were soft and hard at the same time, something that I just couldn't explain, and I wasn't sure what to do next until she whispered, \"Joe, take your pants off for me.\" So, I did as I was told, quickly I was standing there in my jockeys, jeans around my feet, my boner threatening to snap in half. Savannah, who had been calling all of the plays so far tonight, eased herself down onto her knees in the hay in front of me.\n\nSavannah looked up at me from her knees, her beautiful eyes making direct contact with mine, her lips glistening with shiny gloss, as she reached forward and tugged my Hanes down to my ankles, I knew what was coming, I've seen the movies, I'd read the books, my dick was about to get sucked and it was going to be, SPEC\"FUCKING\"TACULAR.\n\nWell, maybe not so much. Savannah wrapped her soft hand around my cock and that was all she wrote, my spunk flew everywhere, Savannah let out a shocked screech and started cussing, now that I think of it, it wasn't very ladylike at all, but the fact that her left eye was glued shut with my cum may have been a contributing factor. \"Oh my god I'm so sorry\" was all I could say. I didn't know what to do, so thinking that my t-shirt might work like a Hefty towel, I whipped it up over my head and tried to wipe the goop off her face, but all I did in the process was mess up her make-up and push the cum from her left eye into her right, hell I practically blinded the poor girl. Luckily, the idea to wet the t-shirt came to me, so I doused the shirt I beer and wiped my girls face clean. Ever the gentleman, yes indeed.\n\nNow lots of people might think having a \"sure thing\" on her knees in front of you and prematurely ejaculating into eye might ruin the night, but not for this girl, Savannah, the porn star wannabe, told me that \"it's okay, now you'll last longer when we fuck\". I'm making a mental note to start planning the wedding as soon as possible. My goddess, with cum matted hair, eyes red from the semen and the beer that had washed them out, still looked sexy as fuck. When she grabbed my semi hard cock and aimed it at her mouth for the second time tonight, I knew I was headed to heaven.\n\nSavannah place my knob to her lips and sucked me into her wet mouth, and I'll tell you something, it was the best feeling ever. I felt my knees weaken and try to buckle under me, but I fought off the temptation. I was going enjoy this for as long as I could. The sucking, her tongue licking on my shaft, her soft lips holding my cock into her mouth were all new sensations to me and as many times as you see it in a movie or look at it in pictures, nothing and I mean absolutely nothing, compares or prepares you for the real thing. After a solid 45 seconds of Savannah's incredible oral skills, I still hadn't cum again. I was a goddamned hero. So, I leaned back into a pile of hay bales, put my hands on her head and enjoyed the ride. Man, now that I finally got my feet / dick wet, I was doing okay, I wished Tory and the other guys could see me go.\n\nBecause this was my first sexual experience and I had nothing to compare it to, I wasn't sure if things were going according to schedule. How long should this last? What should I do? Should I talk to her? Shout out words of encouragement? Maybe I should tell her what a good job she is doing and slap her on the ass, like when a teammate makes a good play. My decision was to play it cool. Every porno I had ever watched flashed back through my head, until one scene came to mind and I thought that I would try to make it a reality. So, like the male lead in one of many porno movies, I put one hand on Savannah's head, pulling her deeper onto my cock and with the other hand, like a fucking stud, I reached down and grabbed my beer.\n\nI couldn't help but think, what better way was there to spend a Friday night, winning our football game, a hot little thing polishing my knob and a cold beer, I was a fucking champion. What did I do in my life to deserve this? I was a fucking king. A goddamned thoroughbred stallion. I smiled as Savannah made a gurgling noise around my shaft, and I took a huge chug of Lone Star's finest. The beer and the cigarette butt that was in it, were half way down my throat when they were met by the vomit that was on its way up to meet them. \n\nThe sound of my puke splashing down over Savannahs golden hair is not one that I will quickly forget. Not unlike the things you read about or see in movies, someone puking on you, can and will, start a chain reaction, Savannah didn't need to look up to know what had happened, I think the smell and chunks were enough of a dead giveaway. She let fly with her own warm gush of barf and it landed all over my cock and balls. If not for the situation, I would have been inclined to say it had an interesting feeling. But I quickly snapped back into reality when my \"sure thing\" screamed \"OH MY GOD, WHAT IN THE FUCK ARE YOU DOING?\" at the top of her lungs.\n\nTry as I might, I didn't know what to do. It was like everything was going in slow motion. It wasn't until I heard Troy's mother yelling at me \"Oh my god Joe, what the hell did you do?\", that I understood what was going on. What a sight it must have been, Savannah had her tits out, crying and pulling my puke out of her hair, I was standing near her with barf dripping off my hardon and balls, into my underwear and jeans that were a wrapped around my ankles. In retrospect, when looking at Savannah's hair, I can honestly say that I probably wouldn't have had the second helping of the baked beans. \n\nThe barn was becoming alive with sound of voices, panic filled my brain, what should I do? I tried to run, but tripped over my vomit filled pants, so I pulled them up as quickly as I possibly could, yanked up the zipper and...\n\n\"Oh, my fucking god.\" I heard Troy say it before the pain pierced through my soul. My sack was stretched and zipped into about a good 3 inches of my zipper. It wasn't all that long before I was crying just as hard as Savannah was.\n\nTroy's uncle put me in the back of his pick-up truck and drove me to the emergency room. His mom called my mother and she met me at the hospital. What a sight I must been when mom and my sister picked me up, my t-shirt coated in cum, make-up and beer, the front of my pants covered in blood and puke, all the while stinking of vomit. My mother and sister both confirmed to me that I was headed straight to hell and there was no doubt about it at all.\n\nNews travelled quickly around the school, hell I was even getting strange looks at church when my mother forced the whole family into going on Sunday so that we could try to save the \"fornicating little deviant\". I couldn't walk anywhere without hearing the snickers and whispers, I was doomed for life.\n\nIt was Troy's idea that I should seek \"professional\" help. Considering the fact, that I fucked up with the \"sure thing\", my odds were not looking good. So, Troy said that he knew of a little place off highway #10 that had very pretty ladies and for a $100 bill, they were all yours. We agreed that we would make the trek after our first playoff game, to celebrate our win.\n\nWell that win almost didn't happen. My scrotum was so sore that I couldn't scramble to save my own life. I was negative 45 yards rushing, was sacked 6 times, but tossed 3 touchdowns and luckily, we won 21 -17. Sore sack and all. \n\nWith my bag loaded up with 4 coats of New Skin bandaging and some waterproof gauze, we were on our way to The Wild Orchid, a fine establishment where apparently loose women and good time abound, just not for me.\n\nThe idea of having sex in an Asian brothel really didn't offend me too much, in fact I had spent every free minute of the past week watching Asian porn and the thought of a tiny oriental girl wrapped in a Kimono bouncing her hairy black bush up and down on my cock, worked for me. What did offend me or at least my senses, was the look and smell of the place. As soon as Troy pulled the door open, the smell of sewage and cheap perfume hit us like a defensive linebacker blitzing up the middle. We should have walked away at that point, but stupidity reigns supreme.\n\nTroy lead the way, sporting a $100 bill, in one hand and his boner in the other. Suzy, the receptionist, showed us into the lounge area and said that the ladies would be with us shortly. The teammate debate was simple, who got the first pick of the girls, of course I said that it should be me, with it being my first time, Troy said that it should be him, because he drove, and the 2 other guys said that they didn't give a fuck, as long as they got to pop a nut.",
        "As soon as the curtain opened and the debate was over, two much older, heavy set Mexican women entered the room. I'm not saying that they were ugly, but they were, and they were nowhere near what I had in mind when I signed up for this trip. In fact, these women looked tough enough, that I'm sure that they could do some dirty work for one of the Mexican cartels on the side. Roy was the first to speak, \"Sorry ladies, I believe there might be a mistake here, we are here for the Asian ladies\". \n\nThe bigger of the two, called herself Lyng, said in no uncertain terms, \"What chew fuckin tink we are, we har Hasian\". With that deep of a Mexican accent, I was pretty sure that you could safely order a burrito with your blow job. \n\n\"Ok, are there any other ladies that we can talk to?\"\n\n\"No, just hus, now let's go, who's first?\" All three of my so called, teammates pointed in my direction. Really, what the hell did I ever do to them? I had had my dick sucked, but I was legally still a virgin. I needed pussy lips wrapped around my shaft to free me of my burden, so my options were limited. I picked Suki, she was slightly smaller than Lyng, had way less stretch marks, and her face was far less pock marked. Yep, I got the real beauty of the two.\n\nWhen we went into Suki's private cubical, she stripped down for my viewing pleasure and I realized instantly that this was the thing that nightmares were made of. Suki asked me what the fuck I was waiting for and said if we were going to fuck, I'd need to be naked. Now, in all of my visions and dreams of losing my virginity, I was naked and excited, but for some reason tonight, not so much. As my clothes hit the ground, I realized that my dick was still in hiding, it was playing dead like an armadillo. \n\nSuki, not so gently, grabbed my bare dick, gave it a couple of jerks and when nothing happened put it in her mouth. With eyes closed, I dreamed that I was with someone else and in a different place, maybe with Savannah pre-puke. It worked, my cock started to be reborn. When Suki had me fully erect, she wasted no time in moving to what I'm sure was a bedbug riddled cot, she got down on her hands and knees and motioned for me to get behind her. I did so and wondered immediately if I could get a refund. My nose focused on the smell and my eyes started to focus on the very first live pussy I'd seen in my life, and it had a long white string hanging out of it. Suki's voice broke the silence and snapped me out of my trance, \"chew gonna have to fuck my hass, my pussy still broken, hoe k?\"\n\nI wasn't sure what to do, my mouth was dry, she had no condoms, she smelled of shit and death and I was about to lose my cherry to her stinky asshole. I tried, I really did, I grabbed hold of her large zit covered, stretch marked ass and lined up my cock. I spread her cheeks and looked at an asshole that could surely use a bleaching or maybe even a bar of soap, but instead, out came a blast of foul air and a small shit-colored load, of another man's goop.\n\nTo say that I sprinted out of The Wild Orchid, would be an understatement, I screamed like a twelve-year-old girl, grabbed my clothes and ran naked into the parking lot, directly in front of the squad car of my old friend Officer Barney Fife. \n\nGood ole Barney or Officer Davis, as it turned out to be, was very excited to have the opportunity to drive me home. On our adventure, Barney took great pleasure in reciting his favorite passages from the bible and telling me what he would have in store for me if I were his child, apparently being tarred and feathered, wouldn't be good enough for a sinner like me. \n\nBarney sure did look happy about being able to regale my mother with stories of, underage drinking, sodomy and fornication in general. He told her that it was never to late for a good old-fashioned visit to the woodshed, \"You know Mrs. Archer, spare the rod, spoil the child\". \n\nIt was a long night and even longer weekend. The whole family went to church the grand total of 4 times, twice Saturday and twice Sunday, the plan was to beat the evil out of me, by drowning me with the love of Jesus. My mother had no less than 14 fake heart attacks while recounting the stories of my past 2 weekends. Anyone that would listen to her tell the tale, got an earful of the perils of Mrs. Archer's fornicating bastard son. She had bashed my fore head so many times that it was bruised from the countless blows from her bible, I had been grounded for life, the door to my bedroom had been removed so that my parents had full 24 hour access to me and I was only being allowed to attend school, football practices and games. I was told that all of my other free time would be spent at church, repenting my sins.\n\nThe pastor of my parent's church held a special family meeting in which he told of his plans to have me decry sex and declare my faith in the lord all mighty. Jesus fucking Christ, can't you just kill me now? Pastor Morris set-up a schedule for me to follow, it was for a \"Youth Loving Jesus\" camp and it would be held every night that I didn't have football practice, so our first meeting would be Tuesday night starting at 4:15pm sharp. \n\nMonday at school was just as expected, Troy and the boys telling me how good the sex was and how much fun they'd had at the Wild Orchid, except for Roy. He had developed a mysterious itch in the groin area and said that he thought he may have \"caught a bug\" from Lyng. \n\nAt practice, coach had no problem letting me have it in front of the team. He cussed me out about my sub-par game on Friday night, \"Son, I honestly don't give a good goddamn how blue your balls are, the weight of this team and the community rest squarely on your shoulders, do you understand me? As a matter of fact, if you think it'll help you come game time, I'll let you bang my goddamn wife. So, having said that, lets move forward as a team\". My teammates chuckled, but I'm not so sure that coach was joking.\n\nOn Tuesdays, school let out at 3:50pm and I made my way toward the church and my so-called salvation. In the basement there was a blackboard and some chairs set-up for our meeting, at 4:15pm I heard footsteps descending the staircase. The person that arrived looked a couple of years older than me, but not by that much. She wore tight fitting jeans, a gray V-neck sweater and a pair of pink lowcut Converse Allstars. Her long brunette hair was pulled back into a ponytail that swung from shoulder to shoulder as she walked. In the name of Jesus, I hoped that she was a sexual deviant just like me, just so I could hear her sex stories, I would for sure use them to jerk off to later. Nope, she walked right up to the blackboard, grabbed the chalk and wrote Angela Morris. The pastor's daughter, are you fucking kidding me? What a cruel, cruel joke.\n\n\"Good afternoon everyone, I'm Angela and today we will be starting with the basics for the road to redemption.\" What? Welcome everyone? I'm the only asshole in the class. I raised my hand to ask a question but was immediately shot down. \"Sorry, no questions until after class.\" \n\nThe class went according to her schedule, Angela talked about sin and the use of prayer to deliver us from the temptation of masturbation and the health issues that could arise from excessive self-touching. A chuckle got me a stern look and a note was made in her book. Angela produced some hand-outs, that contained hymns, prayers and religious articles about abstinence. While Angela talked, I glanced over the upcoming curriculum and made a mental note for later.\n\nFinally, 5:45pm rolled around and Angela asked if there were any questions before we wrapped up the class at 6:00pm. I put my hand in the air and waved it around like a fucking idiot, yet Angela still looked around as if waiting for some imaginary person to appear. After some time, she pointed in my direction.\n\n\"It says here that we will be discussing why each of the attendees is here, isn't that correct?\"\n\n\"Not in your case Mr. Archer. My...uhm, Pastor Morris, has graciously informed me as to why you are here, I mean, my goodness, everyone in town knows why you are here. The streets are safer because of it.\"\n\n\"What?\"\n\n\"It's a small-town sir. Everyone talks. My job is to guide you down the right path, the path to righteousness.\"\n\n\"And just what experience do you have? How old are you and why haven't I seen you around town before?\"\n\n\"To all of your questions, I have the same answer, none of your business.\"\n\n\"Well Ms. Morris, regardless of what your father told you, I shouldn't be here, everything that happened was an accident and there is nothing but circumstantial evidence.\"\n\n\"Does that circumstantial evidence include you giving as facial to a poor young lady in a barn?\" Holy fuck. It never occurred to me, I did, I gave a facial, just like in a fuckin porno. Savannah had my baby batter all over her face. Fuck yeah. This was actually a very proud moment for me. When I got home, I was smiling about how the class had gone.\n\nWednesday was much of the same, Angela babbling to me about the sins of the flesh and me checking her out her tits and ass, as she scribbled bullshit and rhetoric on the blackboard. Man, she was hot. A firm ass and her tits looked like a pair of nice sized grapefruits under her shirt. Tonight, I was going to rub one out thinking about her for sure.\n\n\"Excuse me, Mr. Archer, I asked you a question.\"\n\n\"What? Pardon, sorry I missed your question.\"\n\n\"I asked you, if you are trying to follow the path of Jesus, then why are you sitting in front of me with an erection?\" My face must have turned 50 shades of red, but I couldn't let her win every battle.\n\n\"Because I'm 18 and that's what happens when guys that 18 are put in a situation where an attractive girl close to their age is talking about sex. We get a hardon.\"\n\n\"We are not talking about sex, we are talking about the evils of sex and how to resist the devil's temptation and I'll have you know that there is a distinct difference.\"\n\n\"I suppose that would depend on which side of the conversation you are listening to. From my side, I hear a hot girl talking about, blow jobs, vaginas, and intercourse, if I didn't get hard, that's when you should be concerned.\" I was a little embarrassed, but I stood my ground.\n\n\"I'm not hot.\" What, is that all she got out of what I said?\n\n\"Like hell you're not. Have you ever looked in a mirror? I promise you, you are the hottest girl in this county, hands down.\" Angela now took the prize for having the reddest face, she was blushing very deeply.\n\n\"I think you should stop right there Mr. Archer, I don't like the direction this is heading.\" I had her on the ropes and tried to push forward.\n\n\"Well Angela, since when is it a sin to compliment other living creature on their beauty? I didn't say anything bad and there were certainly no sexual overtones, I just said that you were beautiful. It was you that brought up sex, and can I ask how you would have known about my erection, had you not been looking at my crotch? Not that I would ever condemn you for doing it, because I'll be the first to admit, I've checked you out and you know why? Because I like looking at pretty things, flowers, puppies, cheerleaders and you.\"\n\n\"Okay, enough, I wasn't looking at your crotch and please call me Ms. Morris.\" She was scrambling and was definitely frustrated with the direction the Youth Loving Jesus course was headed.\n\n\"Really? Didn't you say honesty would be a key factor in my so-called recovery? Lying won't help either of us.\" Ms. Morris looked me squarely in the eyes as if she felt like stabbing me, but said, \"I might have glanced, happy?\"\n\n\"Happy that you glanced, or happy that you admitted it.\" Touchdown. \n\n\"That's it, we're done to for tonight.\" Very unfortunate, because it was just getting good. Angela told me that she would see me on Thursday, but I reminded her about practice and Friday's game. So, I wouldn't be able to attend until the next Tuesday.\n\nFriday night I was pumped, I hadn't been able to relieve myself from any of my pent-up anxiety, because of my mother and father's watchful eyes, so at game time I was like a bull coming out of the chute, bucking, thrashing and kicking. We won large, 45 - 3, the whole team was on fire. \n\nOn my way to the showers, I noticed someone standing in the crowd, it was Angela Morris and holy shit did she look good. I couldn't help but stop and talk. \"Hey Ms. Morris, didn't expect to see you here.\" She looked confused and stammered out, \"I used to come to games all the time. The reason I actually came was that your mother asked me to set-up an extra class after tomorrow mornings service, she thinks that a couple extra hours of gods word might help you.\"\n\n\"I highly doubt it, but I need a roof over my head for a few more months, so I'll be there.\" And I was off. I had 15 minutes after the game to shower and change or my mom would come looking for me. Being 18 and grounded was not cool.\n\nSaturday was the worst kind of torture, the Archer family sat in the front pew of the church, front and center for everyone to see. When Pastor Morris spoke or should I say ranted about the sins of the flesh, he may as well have said my name, everyone in attendance knew exactly who he was talking about. When you use young, athletic, fornicating and atheist in the same sentence, you may as well say Joe Archer. My sister giggled and said, \"you brought the family shame and glory in the same weekend, what do you have planned for an encore?\" She sounded a little like a bitch, but she wasn't wrong.\n\nChurch adjourned and I headed for the dungeon basement of the so-called holy temple. Out of the frying pan and into the fire as my dad likes to say. Angela's arrival echoed throughout the room as her shoes banged loudly on the stairs. When she entered, I did a double take that you sometimes see in a comedy show. She was wearing a tight-fitting, form hugging, black skirt, an olive colored woman's button-down shirt and a pair of satin looking black high heels. What the fuck? There was no way that she didn't know what she was doing to me. Van Halen's, Hot for Teacher was screaming through my head. \"I got it bad, so bad. I'm hot for teacher.\"\n\n\"Welcome Mr. Archer, today's course outline will be just as it appears in your handout, temptation, lust and the sins of giving in to the devil. We will start today off by reflecting on, dare we say, your past indiscretions.\" \n\nAngela had a black book of my life and left no page unturned. She told me where I had gone wrong with every little thing in my life, from the sins of stealing condoms, watching porn, masturbation, premarital sex, sex with prostitutes and excessive drinking while underage. Fuck, I was starting to believe that I really was a godless reprobate.\n\n\"I know we hold questions to the end Ms. Morris, but can I just tell you that not everything in that book you have is correct. First, I was not over drinking, I puked because there was a cigarette butt in my beer. Second, I didn't have sex with a prostitute, even I had enough common sense for that. Third, I believe that watching porn is a very healthy thing, it's a learning tool for people my age and yours. Fourth, yes, I masturbate, who doesn't? Fifth, I didn't steal anything and that was proven, everything got bent out of shape because I was trying to buy condoms so that I could have \"protected\" sex, forgive me for being cautious. Sixth, but certainly not last, we didn't have sex, she let me play with her boobs for a bit and then she was giving me a...she was...oral, she was giving me oral and let me tell you something, up until the point where I puked on her, it was the best night of my fucking short life.\"\n\n\"Um, well, ah, I see. So, Mr. Archer, am I to assume that you think premarital sex should be condoned?\"\n\n\"Condoned? Absolutely. It's great or so I am told. As long as, it's between two people that care for each other or at least respect one another and they consent, who does it hurt? I can't wait for my first time. The things that I want to do, see, touch and taste are driving me fucking crazy. You must remember what that is like, do you remember your first time? Was it great? How long after did you wait until you did it again? You want to help me, then tell me, talk to me about it, like it's a good thing, not like it is against the law and a crime. Tell how good it can be. Explain to me what I'm missing. Because I'll tell you something, in two weeks football will be finished for me, I will be signing with a college shortly after that and I will be moving away from here when school finishes, maybe forever.\" \n\nI could see Angela squirming, she was rubbing her thighs together, almost as if sexually charged. She was biting her bottom lip and looking at the staircase as if looking for an answer, one that didn't come. She shifted and swayed as if wanting to blurt out something. \n\n\"Well Mr. Archer.\"\n\n\"Stop it! You want to talk to me, call me Joe. This isn't a school or even a church, we are in a fucking basement. What are your credentials by the way, do you even have any degrees?\"\n\n\"I'm an unemployed teacher. They closed the school where I worked, and I haven't worked since last June. My father offered me this gig and the church pays for it. I have seen you play before, when you were a freshman and I was a senior. You were good then too. My question is why have you had such a hard time with girls? When I first took this job it thought that your problem was that you were an arrogant spoiled brat.\"\n\n\"I don't know. I guess practicing and playing football every waking hour was part of it, also the fact that my family called me their little atheist bastard in a religious town like this doesn't help, if you know what I mean. Girls stayed away from me and then it just came naturally to me, I avoided being around girls, then when I finally made up my mind to do something about it, the shit hit the fan and here you and I sit, in Purgatory, but I don't think that I'm arrogant and I'm sure as hell not spoiled.\"\n\n\"This church doesn't believe in purgatory, but I get your meaning and yes by the way, I do remember my first time and the other three times that I have \"done it\". Three of the four times were with the same guy. He was a nerd that I met in the telescope club, the first time was soooo bad, it lasted five minutes from start to finish and that included everything, even the time it took us to get undressed. The second time lasted a little longer, maybe ten minutes, I think that he actually moved a bit before he...well, came. Our third time was better, but not by much. After that, it was three years until my next time, that was with a co-worker after a school function. He told everyone about it and all the other teachers called me a slut.\" Ms. Morris let out a sigh of relief, as if a burden had been lifted off her shoulders.\n\n\"Holy shit, it sounds like you're just as unlucky as me.\" This brought a smile to Angela's face and she replied, \"Not quite, I was never taken to the hospital afterward and no one has puked on me yet.\"\n\nI couldn't help myself and said \"careful, strange things happen when I'm around.\"\n\n\"Did you say around or aroused? Because from the look of your pants you are both.\" And pointed at my groin.\n\nI laughed when saying, \"Thanks for pointing out my evil morality once again, but I'm not ashamed, you look stunning and you're the first girl that I have ever talked about sex with, even if it was you only telling me how bad it was for me. No one around here can be honest or even open about it, and the things that I hear from my friends is bullshit for sure.\" I was on a roll and couldn't stop myself. \"Angela, can I kiss you, please, just once? You have my word that I'll never tell a soul. Every single person in this town, including my own family, thinks I'm a liar, so no one would believe me, even if I did tell.\" Even as I said it, I knew how much it sounded like I was begging.",
        "Angela looked towards the stairs again and for a minute, I thought she was leaving, so I was very surprised when she moved toward me. She smelled so fucking incredible, her soft hand felt good on my cheek, but when her cherry red lips touched mine, it was great, even if it was only for a second. \"There, happy?\" she smiled. \"No actually, it was so good, that I don't want it to stop.\" Angela laughed aloud, dropping her hand from my face, she grasped my left hand and leaned in for another soft, but longer kiss. I didn't even have sex on my mind and still I was painfully hard in my pants. I pressed my luck and touched Angela's hair and the side of her face, I pulled her head toward me and we kissed for a third time. I parted my lips and tried to push my tongue into her mouth. It took a few tries, but she finally let me in. I couldn't help but moan out loud, the taste of cinnamon and the feel of her soft tongue, almost ended my day.\n\nAngela was the first to pull away. \"Wow. Okay. So, I think that we should call it a day.\" For the first time in these classes, I didn't agree.\n\n\"If you really want to. But I'm really enjoying todays class. I can't help but feel like I'm being saved. Progress is being made here.\" Angela tilted and shook her head as if to tell me that I was full of shit.\n\n\"Angela, do you feel safe? Because I sure do, and I don't want to stop. Please, please teach me, show things, help me to learn and understand, no one else will.\" Oh yeah, this was begging. No mistake about it.\n\n\"Joe, I'm not the one to teach you, I don't have the experience that you think I do.\"\n\n\"Then let's learn together, please.\" Oh yeah, this was full on begging and I couldn't have cared fucking less. She was a fox and I would have sold my soul to the devil, right there in the basement of her daddy's church, just to see her naked.\n\nI was in shock when Angela looked at me and slowly began to unbutton her shirt, when she pulled her arms out of the sleeves, she folded it and placed it on the table near the blackboard. I was making noises that I had no control over. When Angela turned her back to me and asked me to undo her lacy beige bra, my hands were trembling so much that she must have thought I was trying to rip it off her body. With her back to me, she slid the bra down her arms and placed it beside her shirt. Turning to me, her hands cupped and covered what they could of her ample breasts. After admiring her for a few moments, I leaned in, kiss her and eased her hands down to her sides. The kiss broke and I got my first look at her beautiful tits. Savannah had nice tits and they will always be remembered as the first ones that I ever touched but Angela's boobs were on a completely different level. They had dark pink areolas, with large hard nipples and they were in perfect proportion to the size of her body. When I touched them Angela's body shivered and shook, but I wasn't planning on stopping, not until I had one of those nipples in my mouth and that didn't take me too long. I rotated back and forth between the pair until I was pulled back to my feet.\n\n\"Joe, I think that we have to stop.\" Angela was trying to be rational, but she did not appear to be alarmed with what was happening, so I decided to try a different approached. \"You're right, we've gone too far, you so freakin gorgeous, I don't deserve this, thank you so much for letting me go this far, I'll never ever forget it and you have my word, I'll never mention it to a soul.\" I leaned in and kissed her softly on the cheek. Angela blushed and covered her boobs up just slightly.\n\n\"I'm happy to help. If you ever have any questions Joe, you can always feel free to ask me. I really do what to help you.\" Okay, it just so happens that I do have a question, or should I say, a request in mind.\n\n\"Angela, would it ever be possible for you to show me your vagina? Other than Suki's, I have never looked at a real one and I feel as if I'm missing out. I know that it's a huge favor, but you did say that I should feel free to ask.\" For the third time today, Angela looked over at the staircase. Was she looking for an escape? Again, she bit her lip and surprised me when she undid the delicate zipper that held her black skirt in place, but this time she did not turn away from me as she pushed it down her curvy hips. The lacy panties matched her bra, they were the same color, except the panties were a much darker color in the crotch. Angela hooked her thumbs into the sides of her lacy undergarment and started to pull them down. I was stunned and amazed, but I had enough courage to ask if I could do it for her, she just nodded and let me. I dropped to my knees and grabbed ahold, the material of the panties was like nothing I had ever touched, it clung to her body and made a juicy connection between itself and Angela's hairless pussy. I pulled them down her silky legs and over her feet, rolled them into a tight ball and pushed them into my back pocket. Angela shook her head no and held her hand out to me until I return them to her. Busted.\n\nAngela leaned back on the table. With the exception, of her sexy shoes, she was naked in front of me. When her fingers spread open the juicy folds of her labia, I could feel precum boiling out of my cock, I was fairly sure, that I would be coming soon. Angela parted her legs so that I could get a better look and continued to pose in different positions for me. All I could do was moan. I tried to talk, but I was babbling nonsense.\n\nI hesitated at first, but finally gathered the courage to touch her wetness. It was better than any description, in any magazine that I had ever read. I rubbed my thumb around on her clit and eased a finger into her slick opening. Angela let out soft quiet moans and gently bucked her hips toward me. It was now or never, I remove my digits from her wet pussy and replaced them with my mouth. I was worried about how Angela would react, but I didn't need to, she let out a loud \"Ohhhhh\" and pulled my face deeper into her.\n\nThis was as close as I had ever gotten, I had read the books, I had seen the movies, but now was time for action and I was going to try not to let Angela or myself down. I knew that pressure and focus on the clit was the touchdown spot, so I called for a rush play straight down the center. My tongue dragged its way through her lips and up to her hard and protruding clit. I did all the figure eights and swirls that I had read about, I even brought my right index finger into the game. I didn't need a play by play announcer to let me know how I was doing, Angela's moan and steady face humping let me know that I was doing okay. It didn't take very long until the vise like clamp of her thighs threatened to crush my scull. She pulled my hair and squeezed my head as her whole body shook from the shock waves of what I guessed was an orgasm.\n\n\"Holy fucking fuck Joe, that was incredible. How many times have you done that?\"\n\n\"That was the first.\" She looked at me like I was telling her a lie, so I added, \"I swear.\"\n\nAngela bit her lip once more, it was quickly become her sexual poker tell, and asked if I wanted to have sex with her. She must have hit her head, because that was the dumbest fucking question I had ever heard in my life. I would have let her hammer nails through my balls, just to be inside her for one minute. \n\nWhen I dropped my pants and started to jerk my dick as fast as I could, Angela looked at me as if I was insane. She asked what the hell I was doing, so I told her that I didn't want it to be like it was when she was with nerdy telescope boy, so I figured if I rubbed one out quick and I'd last longer when we had sex. She laughed, thanked me for being so considerate, dropped to her knees and took my rock-hard cock into her mouth. \n\nIt was good. In fact, it was very good, but the skill level of the much-practiced Savannah, was way better, but there was no way I was going to complain. What Angela lacked in talent, she made up for with pure ambition. I tapped her on the head and let her know that I was about to cum. I was expecting her to finish me by hand, but she kept on sucking, apparently, she had seen some movies too. I was afraid that Angela would pull back at the last possible minute and would end up with a facial just like Savannah, ruining my chances to pop my cherry. Not to worry.\n\nWhen I came, my body was making me do involuntary things, I was vibrating, and my ass was thrusting forward all on its own. Angela coughed, choked and spit up some of my cum on the floor. It appeared to be coming out of both her nose and mouth. She couldn't be more apologetic, but I wasn't having it. I wiped her face with my shirt and kissed her. My second shirt filled with cum in the last few weeks.\n\n\"Are you kidding me, that was the best thing that has ever happened to me. Thank you so much.\" \n\nMy cock never lost a drop of blood, it was still like a rock, so Angela had me lay back on the table so that she could climb up and mount me. The sight of that hairless pussy squatting over me, her tits swaying from side to side as she lined my cock up to her wet gash, was enough to make me want to cum again. The moment of truth was upon me, I was only seconds away from losing my cherry, no longer would I be a virgin, I would be a man evermore. \n\nI watched Angela push down onto the head of my cock and I saw it disappearing into her vagina, inch by inch it sunk into her depths. This was for sure, tighter and wetter than when I jerked off. When she bottomed out, we just looked into each-other's eyes. She lifted and lowered herself, just so she could get comfortable. We were locked together. Angela leaned forward, pressing her tits into my chest and rammed her tongue into my mouth. There was no more playing hard to get, we were lovers and we were fucking on a table, in the basement of her daddy's church, while she was supposed to be teaching me about the evils of premarital sex. \n\nI pushed my hips up to meet every one of her down thrusts, it wasn't stylish, but it was effective and felt incredible. We mauled each other like two lions fighting. I licked, kissed and sucked any piece on skin in front of me. We were sweating like we had been sitting in a sauna. The wet clamp like vise of Angela's pussy was driving me wild, her thick juicy slime coated my shaft and balls. I was holding on way longer than nerdy telescope boy, but I knew the end was near. I could barely breathe, and speaking was near impossible. Angela on the other hand, was a riding cowgirl, she was grunting and moaning as I pumped into her. As impossible as speaking was, I asked Angela if she was protected. She shouted out \"NO\" at the top of her lungs. I told her that I had to cum and it was going to happen very, very soon. Angela just looked at me and hissed.\n\nNow, I would have been happy to have my friends know that I had, had sex with the goddess that was riding me like she was on the PBR tour, but I had made a promise, and I intended to keep it. So. I was a little shocked when Angela screamed out at the top of her lungs, \"I DON'T FUCKING CARE, JUST FUCKING CUM IN ME.\"\n\nInvitation accepted. I shot a blast of my fertile baby batter up into the Pastor's daughter's tight, wet, vagina and if I had died right there and then, I wouldn't have cared. \n\nAngela sunk her claws into my shoulders, screamed again before she collapsed onto my chest, mashing her wet, sweaty, tits into me and bit down on my neck. We were lovers. I was no longer a virgin. I felt great.\n\nI was savoring the day. Recounting how I had become a man, I hadn't puked on anyone, my dick was still in one piece, not a spec of blood to be seen and Barney Fife wasn't here to arrest me. Life was good. I'll say it again, this was hands down, the best day of my life\n\nAt least it was up until we heard the screech of a woman and the sound of someone falling down the stairs. Apparently, Angela's sex sounds and screams, were enough to alert everyone within a half mile of the church. I looked up just in time to see my mother's trusty bible smash down across the bridge of my nose. Pastor Morris screamed \"Angela, you sinner whore.\" from the ground where he lay with his broken leg, pushed up behind his back like he was some kind of weird circus contortionist. \n\nWhat I sight we must have been, Angela naked and sweating, laying atop of me, joined together with me at the groin, cum dripping from both of us, my nose gushing blood and all the while, her father screaming obscenities with a broken bone protruding through his pant leg.\n\nIn hind sight, I think that it was the blackboard that sent my mother over the edge, for written on it in bold type was \"The Sins of Fornication, can you resist the Devil's Temptation\". \n\nMom was looking at my lover and I, as Angela raised herself up off of my still hard, cum coated cock, clutched at her heart, screamed and fell backward, in a not so fake heart attack. She was dead before she hit the floor.\n\nI was very torn. I lost my virginity and my mother in the same day. What would Jesus do? I did the only thing that made any sense of this whole mess. I asked the first question that came into my head, \"Angela, would you be interested in being my date to my mom's funeral?\""
    ],
    "authorname": "Frankenstein1962",
    "tags": [
        "virgin"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/not-so-lucky-in-love"
}