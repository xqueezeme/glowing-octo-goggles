{
    "title": "Transformations: Morpheus Ch. 04",
    "pages": [
        "This is the final chapter. Comments welcome!\n\n-----------------------------------------------\n\nMorpheus\n\nI had a plan to get us out of the building and away from Stafford. It was going to take time. I had to make sure we left with the suspended animation chamber and all my notes, though, to be honest, most of what I had discovered was in my head.\n\nMoving the chamber was simple: all I needed was access to two men and a truck. A few minutes alone with them and I could bend them to my will to move the tank.\n\nMy worry was Stafford. I had purposely stayed out of his mind. I was fairly certain his natural paranoia would have made any intrusion into his thoughts perilous. He was a dangerous man - if he had the slightest inkling he was being manipulated, he would call for help or worse.\n\nMy powers were growing but so far all my 'conquests' had been willing in one way or another. Melody and Evie subconsciously wanted to be drawn into my world. Maria and Thompson were incredibly lonely people beneath the surface - joining my coven was a relief. Constance Balenger was in absolute heaven as her husband's submissive and Simon Balenger was happier than he had ever been.\n\nStafford was different. He hated me - hated us. I had as much prospect of subverting his will as I did of outrunning a bullet.\n\nI still hadn't fully grasped who or what I was.\n\nI wish I had. More than anything, I wish I understood then what I came to understand in the days that followed.\n\nGetting away from Stafford meant keeping him from understanding how far my control had extended.\n\nTo that end, Allen Thompson agreed to continue acting 'normal'. He would not join us in our room - however, I insisted he continue drinking Ambrosia. Evie came up with the solution: she would go to his room each night. At first, she merely carried a container of Melody's Ambrosia, but on the second night, Evie's own Ambrosia came in.\n\nThompson needed no convincing to nurse directly from her source.\n\nThey were falling deeply in love, and that made all of us happy.\n\nI was unsure how long we could keep up the charade. Thompson was changing, growing taller and more muscular.\n\nHe slouched around Stafford, but I knew it was only a matter of time before Stafford noticed that Thompson was now taller and more muscular than he.\n\nPhysically, I believed we could take Stafford. Between Thompson and I and the former Russian goddess, we could subdue him if it were necessary.\n\nBut his gun was the equalizer.\n\n***\n\nAround 3:00 AM, the two MPs on the ground floor turned around at the sound of people descending the steps.\n\nThey stood there with their mouths open.\n\nMelody and Evie stood in their modified uniforms at the bottom of the steps.\n\n\"Um, ladies? You need to go back to the second floor. You're violating quarantine.\"\n\n\"Aww, come on fellows,\" Melody said and stretched, letting the MPs take in her curves in the skimpy outfit. \"We've been cooped up upstairs for months. We just want to have a little fun.\"\n\n\"You know we don't really have the measles, right?\" Evie said as she twirled her hair on her index finger.\n\nThe other MP just stared at her and smiled.\n\n\"I mean, we missed the whole summer,\" Melody pouted. \"All that... fucking.\" She looked up at the first MP and licked her lips.\n\n\"Colonel Stafford...\"\n\n\"Who cares about Stafford?\" Evie laughed. \"He's upstairs asleep. We're down here... and horny.\"\n\nThe first MP nudged his pal.\n\n\"Stafford will fucking kill us, man.\"\n\n\"Fuck Stafford,\" the first MP said and pulled Melody to his lips.\n\nShe moaned into the kiss as his hands trailed down to her buttocks.\n\nEvie rocked restlessly from one foot to the other. \"Come on. You gonna leave me all alone and wet?\"\n\nThe second MP practically dove on her and she laughed as he kissed her neck making his way to her swollen breasts.\n\n\"Easy lover. We got all night.\"\n\nHis hands were on Evie's breasts.\n\nMelody winked at her and slid down to her knees.\n\nShe unzipped the first MP's pants and hauled out his hard, six inch cock.\n\nEvie reached down and squeezed the growing lump in her MP's pants. \"Not much more on this side.\"\n\n\"What?\" Evie's MP asked.\n\n\"Nothing, honey. Keep kissing my neck I like that.\"\n\nMelody smiled up into the first MP's eyes as she gently stroked his cock with her right hand. \"So trusting, aren't they?\"\n\nEvie giggled.\n\n\"Relax, gentlemen,\" Eric said as he descended the stairs.\n\nThere was a momentary look of panic on the MPs' faces at the sight of a naked body builder with a huge cock descending to the first floor.\n\n\"Everything is okay, baby,\" Melody said, her fledgling mental powers calming the soldier. His eyes started to close.\n\n\"What the fuck is going on?\" The second MP said.\n\nEvie's brow furrowed as she tried to control him. She sighed and rolled her eyes. \"Sorry, Eric. I just don't have it yet.\"\n\n\"It's okay, honey.\" Eric put his index finger on the man's forehead, and he went rigid.\n\nMelody stood up still stroking the first MP's cock. \"Is it bad that I have so little regard for them?\"\n\n\"The MPs?\" Evie asked.\n\n\"Humans,\" Melody said. \"I just... I don't really identify with them anymore.\"\n\n\"They aren't like us,\" Eric said. \"They're... flimsy. You can step away from them now.\"\n\nEvie and Melody stepped back, leaving the men looking dazed.\n\n\"Attention!\" Eric barked. He had put an image in their minds that he was a four star general.\n\nThe MPs snapped to attention and stared straight ahead.\n\nEric smiled. \"Always wanted to do that.\"\n\nEvie giggled and pointed - the first MP's cock was sticking out of his pants. \"The little MP is at attention too.\"\n\nMelody laughed with her.\n\n\"When do you boys go off duty?\" Eric asked.\n\n\"Sir! 0800, sir.\" the first MP said.\n\n\"Do you normally return to base then?\"\n\n\"Yes, sir. We have to be back at The Presidio by 1600 hours.\"\n\n\"What were you boys going to do during that time?\" Eric asked.\n\nThe first MP stammered. \"Sir... well, sir... there's a brothel in South San Francisco...\"\n\nEvie giggled.\n\nEric smiled. \"That's fine, son. You boys deserve a trip to the brothel. When's the next time you're here?\"\n\n\"Tomorrow evening, sir.\"\n\n\"Good. When you come back tomorrow, I need you to bring a truck. Can you get a truck?\"\n\nThe second MP nodded. \"Yes, sir. My brother lives in San Jose. He has a truck.\"\n\n\"That's fine. I need you to bring it to me. We're going to load something on it. Top secret. You have to keep it to yourselves, understand?\"\n\n\"Absolutely, sir!\"\n\n\"Good. Now... put your cock back in your pants, son. You're on duty.\"\n\nThe first MP blushed and began trying to stuff his meat back through his fly.\n\n\"Poor guy didn't even get head,\" Evie whispered.\n\n\"He'll survive,\" Melody said.\n\nEric turned around and put his arms on Evie and Melody's shoulders. \"At ease, boys. I think I'll take these two back upstairs and fuck them.\"\n\n\"Sir! Yes, sir!\" The first MP said. They saluted Eric as he ushered the girls upstairs.\n\nThe first MP shook his head when they were gone. \"Goddamn generals get all the pussy.\"\n\n\"Was he naked?\"\n\n\"Fucking general. He can do whatever he wants.\"\n\nThey returned to guarding the front door.\n\n***\n\nAt 9:00 AM, Stafford followed Constance Balenger from her husband's lab on the third floor. He took her arm in the stairwell. \"Constance?\"\n\nConstance turned stiffly. She was holding a medical instrument tray in her hands with blood collection syringes. She looked at him with glassy eyes. \"Yes, Colonel?\"\n\nHe touched her pale face. \"What the fuck did they do to you?\"\n\n\"They opened my eyes.\"\n\n\"What?\"\n\n\"They opened my eyes. I didn't understand what I wanted before. Now I do.\"\n\nHe examined her eyes. They didn't move. She was like a robot.\n\n\"And what is it you want?\"\n\nShe turned her head to the side and smiled. \"I'm the Doctor's experiment. He wants to explore the limits of pleasure and pain.\"\n\n\"What does that mean?\"\n\nShe bent over at the waist and laid the tray on the floor. When she stood up, she turned and pulled up her hair in the back. \"Can you unzip me?\"\n\nHe undid the zipper on the back of the nurse's uniform.\n\nShe let it fall off her shoulders and then turned around.\n\nHer full breasts were braless, but they were held in place by thin wires that looped around her shoulders and neck.\n\nThey were soldered to hypodermic needles that pierced both her thick nipples.\n\nStafford stepped back. \"Jesus. Oh, Jesus.\"\n\n\"It supports me as well as any bra.\"\n\n\"You're fucking insane...\"\n\nThe thin wires continued down her torso. She let the uniform fall lower.\n\nHer clit was also pierced with a hypodermic and the wires were attached to this one as well.\n\nConstance smiled pleasantly and turned around. Then she bent forward and spread her legs. She wasn't wearing panties, just a white garter belt and white stockings.\n\nThere was a metallic plug in her ass attached to the same wires.\n\nThe wires continued up to a small black box taped to the small of her back. It had a red button in the center.\n\nShe stood up stiffly and turned around. \"Doctor says when we leave here he will have permanent steel piercings put in place of the needles. And my treatments will be on a timer.\"\n\n\"Your treatments?\"\n\nShe turned around. \"Press the button, Colonel.\"\n\n\"What?\"\n\n\"It's okay. The Doctor won't be angry. You can't fuck me, but you can administer my treatment.\"\n\n\"What... does that do?\" He stared at the box with the red button.\n\n\"Try it and see.\"\n\nHe reached out his finger hovering over the button. \"Constance...\"\n\n\"Press it. I can handle ten seconds. More than that and I have a tendency to pass out. Go on, Colonel. Press it.\"\n\nHe pressed the button.\n\nConstance went rigid. Then her entire body began to tremble.\n\nThere was an electric current flowing through the wires from the battery pack.\n\n\"Constance, you twisted bitch,\" Stafford whispered. He released the button.\n\nConstance's knees buckled but she stayed upright. She moaned loudly.\n\n\"You came?\" Stafford asked.\n\n\"Every... time.\" She paused and breathed deep and steady. Then she reached down and pulled her dress back up. \"Could you zip me, please?\"\n\nHe pulled the zipper up and she bent back to her tray and retrieved it.\n\nShe stared at him with her glassy eyes. \"Will there be anything else, Colonel?\"\n\nHe shook his head and backed away as she descended the steps to the second floor, her posture perfect.\n\nStafford watched her disappear down the stairs.\n\nThen he went back to his room and retrieved his sidearm.\n\n***\n\nMorpheus\n\n\"We should have names,\" Melody said as the coven sat in my room.\n\n\"We have names,\" I said as I drew on the board with chalk.\n\n\"No, god names,\" Melody said as she stroked the back of his neck. She squinted at the board. \"Time travel?\"\n\nI smiled and looked at her. \"You can tell what these equations are about?\"\n\nShe nodded. \"Time travel... no, not travel. You only want to look into the future.\"\n\n\"I don't think time travel is possible,\" I said. \"But I do think looking into the future is possible. And, if I can do that? I can change the future.\"\n\nDr. Thompson stood behind us. \"You mean looking into the future with the power of your mind? Like Pike crossing over to the twelfth dimension?\"\n\nMelody frowned.\n\n\"Not exactly. I wouldn't be traveling to the future so much as just observing it.\" I took Melody's hand. \"I won't go anywhere, darling. I won't leave you. But being able to see the future might be helpful in saving the world.\"\n\nMelody nodded and hugged me. \"Just don't go through any goddamned doors.\"\n\n\"No doors. Got it.\"\n\n\"Hey!\" Evie said as she skipped up behind us. \"I want to talk about that whole name thing Melody mentioned. I mean if we're gods and goddesses, we ought to have cool names, right?\"\n\nMaria was lying on the bed behind us. \"I am Maria Anastasia Marapova and I don't need a name to be a goddess. I simply am.\"\n\nEvie jumped on top of her, causing the bed springs to creak. She kissed Maria's nose. \"Nope. You are Mistress Maria Anastasia Marapova the White Witch.\"\n\nMaria smiled up at her and looked from side to side. \"Hmm, that is catchy. I think it suits me.\" She clasped her hands on Evie's buttocks and pulled her close into a deep kiss.\n\n\"What about you, Dr. Thompson? Asclepius?\" I asked.\n\n\"Greek god of medicine?\" Thompson laughed. \"No, Eric, I think I'll just be Dr. Allen Thompson.\"\n\n\"Boo!\" Evie said. \"You're not getting into the spirit of things! Somebody name me!\"\n\n\"I would say you are mischievous,\" Maria said as she ran her fingers through the long red hair. \"Which goddess would that be?\"\n\n\"Aite,\" I said.\n\n\"Ah-eat-uh?\" Evie asked and grimaced. \"Too many vowels.\"\n\n\"Leto,\" Melody said.\n\nI smiled. \"Nice choice.\"\n\n\"Leto?\" Evie asked. \"Who was she?\"\n\n\"Goddess of motherhood,\" I said.\n\nEvie smiled and blushed. \"Yeah. Yeah, someday. Call me that, okay?\"\n\nI nodded.\n\nI touched Melody's face. \"My Aphrodite.\"\n\nShe blushed and laughed. \"Oh, you think so?\"\n\n\"Yes, I do.\"\n\n\"Aww,\" Evie whispered. \"They're so cute.\"\n\n\"What about you, Eric?\" Maria asked. \"Zeus?\"\n\nI laughed.\n\n\"Morpheus,\" Melody said as she stared into my eyes. \"He's the god of dreams and you are always in mine.\"\n\nI just smiled at her for a moment.\n\n\"Shh, stop crying,\" Maria whispered.\n\nMelody and I both looked over at Evie. She was crying on Maria's big bosom. \"It's... just so romantic.\"\n\nAnd we all laughed.\n\n***\n\nAt nightfall, I looked out the window at the street below.\n\nThe two MPs were quietly loading the suspended animation pod into the back of the truck and covering it with a tarp.\n\n\"It's time,\" I said.\n\nThe coven members were all in the room and dressed in street clothes.\n\nMelody would ride with me in the pickup. The Balenger's had their own car, and Evie and Maria would ride in Thompson's.\n\n\"Quietly, everyone,\" I said. \"The MPs are still under my control. Dr. Thompson, do you know where Stafford is?\"\n\n\"He was in his room upstairs a few minutes ago.\"\n\nI smiled and nodded.\n\nWe crept into the hallway.\n\nMelody stood just behind me followed by Maria and Evie. The Balengers came next and Thompson took the rear as we made our way to the stairwell.\n\nI felt Melody stop behind me.\n\nI glanced back.\n\nHer eyes were far away. \"You were right,\" she whispered.\n\n\"What?\" I asked quietly.\n\n\"I can see the future.\" Her eyes welled with tears. She turned toward Evie and Maria. \"I love you. I need you to remember.\" She put her small hands on their faces.\n\nI felt power course through her, the same feeling you get when you walk under high voltage lines.\n\nMaria and Evie shook.\n\n\"What are you doing, Melody?\" I whispered.\n\n\"What are all of you doing?\" Stafford said.\n\nI spun around.\n\nHe was standing in the stairwell.\n\nHe had a .45 in his right hand pointed directly at my chest.\n\nI spread out my arms shielding everyone behind me as best I could. \"Step aside, Colonel. I'm taking my loved ones. We're leaving.\"\n\n\"Before you say another word? I got my finger tensed on this trigger. Not even a tenth of an ounce more and I'll put a hole in your chest. I feel your fingers in my brain? You're a dead man.\"\n\n\"Stafford!\" Thompson said. \"Stand aside. We were wrong to try to keep him here. He will save the world, Carl. But you need to let us leave and let him do it.\"\n\n\"Dr. Thompson, you are fired. That's straight from LBJ himself - well, not through normal channels, but the effect is the same.\"\n\n\"Why do you have to be like this?\" Melody said as she stepped around me.\n\nI tried to pull her back behind me, but she shrugged away.\n\nShe shook her head. \"The world doesn't have to be like this. I've seen a different one. It's beautiful, Stafford. If you could only understand.\"\n\n\"Step aside, slut. Your boyfriend dies... first.\"\n\nMaria stepped to my right side trying to push me back and pull Melody away. \"He'll do it. We've been sanctioned.\"\n\n\"What do you know about it, Russkie?\"\n\nMaria grinned. \"I've seen men like you before. KGB, Nazis - all of you have the same sick look. You want to kill what doesn't fit your mold.\" She squeezed my arm. \"Step aside and let me kill this piece of shit, Eric.\"\n\n\"No!\" Melody said. \"No killing! Why does there always have to be killing? Can't you see that's what's wrong with the whole world?\" She looked into Stafford's eyes. \"It doesn't have to be like this. Just let us go.\"\n\nHe stared at her.\n\nHe pulled the trigger and smiled.\n\nBefore that gunshot, I was not a god. None of us were. We were just playing at being gods.\n\nI felt her body press against mine, felt her begin to fall.\n\nI caught her in my arms.\n\nEvie screamed and Maria fell on top of us both as we fell to the floor, shielding us.\n\nI rolled Melody onto her back and cradled her in my arms as the blood spread across her chest. \"Melody? Oh, God.\"\n\nThe gun fired again. And then a third time.\n\nI knew they would hit Maria.\n\nShe looked down at us with nothing but love.\n\nAnd then I was a god.\n\nThe bullets slowed then hung in midair behind Maria's back.\n\nThey fell harmlessly onto the tile floor of the hallway.\n\nMelody stared into my eyes. \"I've seen it. The world you are going to make? It's not what I imagined. But it's a beautiful world, my Morpheus.\" And she closed her eyes.\n\nMaria rose in the air over me.\n\nIt took me a moment to understand that I was moving her out of the way.\n\nI stood up with Melody cradled in my arms.\n\nMaria and Evie were crying as I passed her body into their arms.\n\nThe pistol again - two shots. I held up my palm behind my back.\n\nThe bullets stopped.\n\nI didn't need to see the panic in his face to know Stafford was terrified. I could smell it.\n\n\"You goddamned murderous fool!\" Thompson cried. \"You goddamned idiot. She was the only thing that kept him human.\" Thompson stepped back and looked at the floor.\n\nI turned and stared into Stafford's eyes.\n\nHe was shaking as he pulled the trigger again and again, the bullets falling to the floor. \"No! No, goddamn it! It's not...\"\n\nI held out my right palm.\n\nStafford went rigid.\n\nI made a fist.\n\nStafford dropped his gun, and his arms went tight against his body as if I were squeezing him.\n\nI slowly raised my arm.\n\nStafford rose into the air, his face turning crimson from lack of air, his lungs paralyzed.\n\nHe stared down at me.\n\nI brought my fist down and he was dashed to the floor. I heard bones break.\n\nI relaxed my hand and walked to him.\n\nHe lay on his back, his right leg bent out at an odd angle.\n\nI stared down at him.\n\nAnd then I screamed.\n\nThe windows shattered.\n\nThe building shook and the floor cracked.\n\nA small earthquake shook the bay.\n\nAnd Colonel Carl Stafford exploded in a red mist, spraying the stairwell and me in crimson.\n\nI fell on my knees and cried.\n\nHands touched me. I felt Evie's hands on my face.\n\nMaria put her hands under my arms and lifted me.\n\n\"Eric, we have to leave,\" Thompson said.\n\n\"Morpheus. Call me Morpheus,\" I whispered. \"Eric Morrison is dead.\"\n\n***\n\nLilith\n\nCaribbean Sea\n\n1979\n\nHe finished his story as the sun rose and the boat rocked gently in the swells. Overhead, gulls screamed and cried, begging for some scraps.\n\nWith the morning light came two realizations.\n\nFirst, the huge shape I had sensed in the darkness nearby was an island of black rock. A sheer cliff rose above us. I knew without asking this was his home, Isla Satana as inscribed on the boat's transom.\n\nSecond, I was in love with this man turned god. Despite my abduction, despite his forced feminization of poor Jack - I was really in love for the first time in my life. Perhaps because we were in some ways so alike. I was using Jack for my own purposes and so was Morpheus.\n\nMy love for him made me cry because I knew he would never feel for me the way he did for Melody Hutchins, his Aphrodite. She was and always will be the second half that would have made him whole.",
        "I wept for him and I wept for myself.\n\n\"My story made you sad?\" He asked.\n\nI nodded and laid my head on his chest.\n\nHe stroked my buttocks.\n\n\"I'm so sorry,\" I whispered.\n\nHe kissed my hair. \"I know.\"\n\n\"I love you, Morpheus.\"\n\n\"I know.\"\n\nI turned my head and looked down into his eyes. \"What will you do with me?\"\n\n\"Horrible, beautiful, wicked things. If you will help me? I will make you immortal, beautiful, cruel, sadistic. I'll fill you with darkness, Igor.\"\n\n\"Yes,\" I whispered. \"Please.\"\n\nHe smiled and sat up. \"Low tide. There's no other time to access the island.\"\n\nI sat up with him.\n\nPoor Jack moaned under the blanket, one shapely, hairy leg sticking out from under the blanket.\n\nShe was masturbating furiously.\n\nMorpheus smiled down at her. Then he offered me his hand.\n\nHe helped me to my feet, and I walked beside him to the side of the boat.\n\nHe pulled up the anchor and then went to the wheel.\n\nThe diesels roared to life and we turned toward the island.\n\nIt was small, roughly circular and about a mile across.\n\nThe cliffs reached a hundred feet into the air.\n\nWaves crashed against the black rocks as he steered us directly toward the cliffs.\n\nI put my arm around his waist as we crashed through the spray.\n\n\"What happened after... after Melody?\" I asked.\n\n\"We went downstairs. Thompson carried her and Maria basically carried me. We put her in the suspended animation chamber and started it...\"\n\n\"Wait! I thought she was dead.\"\n\n\"She was... is. I couldn't bear to think about her decaying in some tomb. So I put her in the tank and kept her with me. Ghoulish, I suppose.\"\n\n\"Tragically romantic,\" I said softly.\n\nHe smiled at me, his face wet with the spray. \"After my story you've turned into a romantic?\"\n\n\"I think so.\"\n\nHe whispered in my ear and made me shiver. \"I like you as a cold hearted manipulative bitch too, Igor. You don't have to change for me.\"\n\nI laughed. \"Where did you go?\"\n\nHe chuckled. \"Evie had a friend she had met in Haight Ashbury - Charlie. He had moved to southern California with some hippie friends and we moved in with them at a place called Spahn Ranch for a few months. They did a lot of drugs and Charlie was... bizarre. But there was a barn there where I kept the suspended animation chamber and I could continue my work.\"\n\nI frowned. \"Spahn Ranch? I've heard of that.\"\n\nHe shook his head and laughed. \"Yeah, it became famous a couple of years after we left. Charlie? Charles Manson.\"\n\nI stared at him. \"You stayed with the Manson Family?\"\n\nHe nodded. \"I was checked out. Borderline insane and oblivious to everything going on. None of us were in our right minds. Evie was fucking anyone breathing. Thompson was depressed. Maria was... distant, brooding. The only ones who were \"normal\" were the Balengers, and by most standards they're insane.\"\n\n\"Manson? Was he transformed?\"\n\n\"Maybe. Evie was sleeping with him. Maybe part of her rubbed off on him. I think she blamed herself for what happened there. But Manson was a product of this world, not a product of our powers. If he got a little something extra from being with Evie for those few months? It didn't make a lot of difference. He was still going to drive them to do what they did.\"\n\nHe smiled. \"It was Maria that brought me back to my senses. She got pissed off at Tex Watson and beat the shit out of him. Manson got mouthy and she beat him to a pulp as well. Thompson kept her from killing them all. World would have been better off if he had let her.\"\n\nThe cliff loomed larger and larger ahead of us. I held him tighter.\n\nAnd then I saw the cave opening - it was a small grotto barely big enough for our boat.\n\nI held my breath as we passed through the entrance.\n\nThe black stone above nearly scraped the top of the wheelhouse and the passage narrowed till it was barely large enough for the boat to squeeze through.\n\nEach time a swell came from the rear of the boat, I was terrified we would be dashed against the dark ceiling.\n\nI almost cheered when I saw light ahead.\n\nWe emerged into paradise.\n\nThe center of the island was a cylindrical valley with steep cliffs. There was a beach of white sand and a small dock. Beyond the beach was a tropical jungle.\n\nA large, concrete house blended into the landscape with angles, windows, and a flat roof reminiscent of Frank Lloyd Wright.\n\nI had to smile. My goal had been to land a wealthy man.\n\nInstead, one had landed me.\n\n***\n\nI followed Morpheus along the dock. He had Jack thrown over his shoulder. Her body was limp, and I was half afraid Jack had died.\n\nBut occasionally I would see her ribs expand and contract.\n\nI looked out at the lagoon. The water rose and fell rhythmically. Near the inner cliff wall, there was a floating platform. It made a soft whirring sound as it rose and fell in the swells. Thick cables ran up the side of the cliff and around to the house.\n\n\"The waves power the house,\" Morpheus said as he stepped off the dock and into the sand.\n\n\"What? How?\"\n\n\"The platform rises and falls and drives a flywheel and gears deep in the lagoon. That spins a generator turbine. Direct current is fed along the cables to the house where it is converted to alternating current.\"\n\nThere was a large steel door set in the concrete house. As he approached, the door opened. \"Welcome home, Morpheus. I see we have guests.\"\n\nI looked left and right to find the source of the voice.\n\nMorpheus nodded toward a television camera and speaker mounted above the door. \"It's a computer. SlutzNet. Almost an artificial intelligence, aren't you, SlutzNet?\"\n\n\"Each year I grow more powerful as components are added to my parallel computing array.\"\n\nI stared in confusion at Morpheus.\n\nHe smiled. \"Several thousand Apple microcomputers in a subbasement all linked together. In a decade it will only take a hundred to do the same thing. By the 21st century? Perhaps only one will be required.\"\n\nThe lights came on as we entered.\n\nMorpheus went straight to the stairs and descended into the basement.\n\nThe lights came on in the basement as well.\n\nThe room was a laboratory painted a bright, sterile white.\n\nI didn't recognize any of the equipment in the room, but it looked expensive.\n\n\"Most of it is my own design,\" he explained - he read my mind and knew I was curious. \"Gene splicing devices and robotic surgery systems mostly.\"\n\nThe back of the room was dominated by six dark tubes.\n\nAs I walked toward them, lights above and inside them came on.\n\nI took a step back.\n\nInside the first tube was a man in a black rubber bondage suit. He wore some form of goggles over his eyes. Tubes and wires penetrated his body at numerous points. His face was handsome, and his hair waved gently in the eddies of the bluish liquid that filled the tube.\n\nHis cock and balls were exposed, and a plastic sleeve was slipped over his long, thick cock. As I watched, his body jerked and semen filled the tube. It passed through a thinner, clear tube at the head and from there it snaked around his body and into the wall of the cylinder.\n\nThere was a bronze plaque at the bottom of the cylinder. \"Dr. Carl 'Baal' Balenger, July 12, 1973.\"\n\nI jumped when Morpheus appeared beside me. \"Carl wanted to be called Baal - the god of lightning to the ancient Mesopotamians. He enjoys receiving and inflicting electrical shock to the genitals.\"\n\n\"Why are you gathering his semen?\"\n\n\"Ambrosia. His cum is laced with it. Even in suspended animation, he can produce almost a cup a day as SlutzNet sends electrical current through his cock.\"\n\nHe put his hand on my shoulder and led me to the next tube.\n\nA beautiful woman with pale skin and long black hair - I didn't need to see the plaque to know it was Constance Balenger. Tiny electric wires ran along the surface of her skin. Occasionally she jerked and spasmed in the tube.\n\nThere was a long dildo in her pussy and a plug in her ass. They moved slowly inside her.\n\nTwo plastic tubes carried a supply of Ambrosia from her nipples and into the wall.\n\n\"I see her staring at me sometimes through the glass,\" Morpheus said. \"She smiles. Sometimes she licks the inside of the tube. Beckons me to join her. Then she falls back to sleep.\"\n\nThe next tube was filled with pink flesh. It took a moment for me to realize the tube held a giant. His hands were the size of dinner plates and his head was as big as two human skulls.\n\nThe plaque read, \"Dr. Allen Thompson, Whoremaster I, August 18, 1975.\"\n\n\"Whoremaster?\" I asked.\n\n\"Thompson wanted to create a subspecies of human male. Giants who would protect the Transformed. He succeeded - but at a price. You see, he would not experiment on anyone other than himself. He is the prototype, but his formulas needed to be scaled down.\"\n\nOutside the tube, Thompson would have been over nine feet tall with arms and legs like tree trunks. He looked almost crushed inside the glass.\n\nHis cock hung down past his knees. He was far too large for any human woman to accept. A thick pipe led from the end of his cock into the wall and thick cum surged through it.\n\n\"Why is he in the tube?\"\n\n\"It's not yet his time. It will be soon.\"\n\nThe next tube held a tall, beautiful redhead. I knew it was Evie. The plaque read, \"Evelyn 'Evie' Price, Street Whore I (modified), April 10, 1974.\"\n\n\"Street Whore?\" I asked.\n\nHe smiled. \"It's not derogatory. In fact, it's kind of amazing. She is the prototype - but she's different from the creatures like the good Sister I created on the boat. She's... very special.\"\n\nIn addition to the nipple tubes, dildo and butt plug, there was a thick, black cable leading to her navel.\n\nIn the next tube was the most beautiful woman I had ever seen. She was tall and elegant with large breasts and muscles that made her look as if she could break out of the tube with her bare hands.\n\nHer snow white hair floated in the pinkish liquid.\n\n\"Mistress Maria Anastasia Marapova, White Witch I, March 22, 1974,\" I read out loud. \"White Witch - that was her nickname in the war, right?\"\n\nMorpheus smiled slowly. \"More than that now. Much, much more. She's the most perfect transformed I've created. Soon, it will be her time. She just needs to cook a while longer.\"\n\nHe nudged me toward the next tube.\n\nI wouldn't budge. I didn't want to see.\n\nHe sighed. \"No, Igor. It isn't like that. You'll see.\"\n\nI turned slowly.\n\nMelody Renee Hutchins, Aphrodite, November 17, 1967.\n\nShe floated, beautiful in the pink liquid, her golden hair arrayed angelically around her face. There was no pallor of death. The wound in her chest was gone.\n\n\"Is she... alive?\"\n\nHe shook his head. \"No. There is nothing wrong with her - I repaired the damage years ago. She has not decayed. She is as she was at the moment of her death twelve years ago. But I cannot raise the dead, Igor. I want to, but restarting a human body and re-energizing the mind is beyond my ability.\"\n\n***\n\nI had thought Morpheus would rest once we reached his home. He had stayed up all night telling me his story, but he showed no sign of fatigue. I helped him as best I could given my exhaustion. I realized I hadn't eaten anything in days.\n\n\"Go upstairs and eat. I can handle Jack,\" he told me as he lowered Jack into a rectangular tank filled with pink liquid.\n\nI hesitated, watching as he attached wires and tubes to Jacks body beneath the liquid. I panicked as I saw Jack struggling beneath the surface. \"How will he breathe?\" I asked.\n\n\"Be patient,\" Morpheus said.\n\n\"You're drowning him!\"\n\n\"Shh,\" he whispered as he held Jack deep in the vat with one large hand on Jack's chest.\n\nJack's eyes opened and he gasped for breath. He drew in a mouthful of the liquid.\n\nPanic turned to realization. Whatever the fluid was, he could breathe it.\n\nHe drew it into his lungs and then settled into a deep slumber beneath the surface.\n\n\"There. The solution is actually easier to breathe than air.\" He attached two hoses to Jack's nipples. They began to move slowly, suckling at her nipples. \"As I said, there's food in the kitchen. Go on, you're no good to me dead from starvation.\"\n\nI went up the stairs as he continued working on Jack.\n\nThe lights came on as I passed through the hall, the computer sensing my presence and lighting my way.\n\nThe kitchen was modern. Everything was glass and chrome and a huge window over the wide sink looked out on the lagoon.\n\nI nearly jumped out of my skin when the computer spoke from the ceiling. \"Morpheus does not eat.\"\n\nI looked around nervously till I found the camera and speaker in the far corner of the ceiling. \"What do you mean he doesn't eat?\"\n\n\"He no longer requires food. He has not eaten for 867 days, fourteen hours, thirty-eight minutes, and fifteen seconds.\"\n\n\"That's impossible. He has to eat.\"\n\n\"I have a theory, would you like to hear it?\"\n\nI opened the refrigerator. It was empty. \"Where's the food?\"\n\n\"Morpheus doesn't eat. I think I explained that already.\"\n\n\"Well, what am I supposed to eat?\" I asked as I closed the refrigerator door.\n\n\"If you will direct your attention to the center island...\" the computer said.\n\nA sliding door opened in the top of the smoked glass countertop. An enormous black rubber phallus attached to a hose rose on a chrome plated wire stand from the inside of the kitchen island.\n\n\"You can't be fucking serious,\" I said.\n\n\"I am quite fucking serious,\" the computer said. \"The dildo is formed to the precise dimensions of the Master's cock. You will learn to perform fellatio with my tutelage. When you have delivered a satisfactory blowjob, you will be rewarded with a pint of Morpheus's Ambrosia mixed with vitamins, minerals, and a cocktail of hormones to improve you physically.\"\n\n\"I'm supposed to eat cum? I can't survive on cum!\"\n\n\"Quite the contrary. You have survived several days on a diet of the Master's juices. It has an ideal ratio of fat and protein.\"\n\n\"But! I mean won't I get scurvy or something?\"\n\n\"As I said, I fortify the liquid with vitamins, minerals, and a cocktail of hormones...\"\n\n\"Yeah, yeah... to improve me physically. I heard. Couldn't I just have a salad or something?\"\n\n\"You will find some fruit growing in the jungle outside the house. Although I would advise you to only eat the fruits you recognize - some are quite poisonous.\"\n\n\"Fish! Can I catch fish in the lagoon?\" I asked.\n\n\"The Master does have a spear gun in the boat house along with snorkeling equipment.\"\n\n\"I'm a good swimmer.\" I turned to leave.\n\n\"I would be remiss if I didn't warn you about the sharks that occasionally swim through the grotto and into the lagoon - some of them are formidable.\"\n\nI slumped and sighed.\n\nI turned back to the countertop and the black dildo.\n\n\"Excellent choice,\" the computer said. \"Now the Master expects you to use both hands, but not as a replacement for performing deep throat. Your goal will be to take at least ten inches into your throat.\"\n\n\"I can't even get the head of that thing into my mouth.\"\n\n\"With the proper stretching exercises you should be able to perform adequately. If that fails, the Master will perform surgery and give you a dislocating jaw. You should be able to swallow at least fourteen inches with the modified jaw.\"\n\nI swallowed hard, memories of my vision about the dark nun unhinging her jaw like a snake and engulfing Morpheus's cock came flooding back to me. I shook my head. I would do my best to stretch my muscles.\n\nIf Morpheus wanted to modify me, I would let him. I would beg him to if I thought he wanted it.\n\nBut I would avoid it if at all possible.\n\n\"You said you had a theory about why Morpheus doesn't eat?\" I said as I leaned over the countertop and began licking the rubber cock's shaft.\n\n\"Well done. Treat it just as you would the Master's cock.\" The computer said. \"My theory? Yes. Morpheus is still becoming. I believe he has tapped into some higher ability to absorb energy directly from the environment - the sun, the earth's magnetic field, gravity. He is becoming less corporeal and more incorporeal. Soon, I believe he might become a creature of pure energy and thought.\"\n\nI smiled and licked the tip of the dildo. \"Yeah, but he still needs his dick sucked, huh? Still a man.\"\n\nThe computer voice laughed. \"Yes, so he does. You are quite witty. You will make an excellent companion - he values intellect as much as beauty. You have both qualities.\"\n\n\"Thank you,\" I mumbled as I kissed and sucked the head. The piss slit was dry. I kissed and suckled it, wrapping both my hands around the base and stroking it.\n\nI was rewarded with the precious pre-cum. It welled up in the tip and I pushed my tongue in to draw it out.\n\nThe electric tingle of Ambrosia filled me - not the earth shattering orgasm of that first taste on Jack's boat, but a long, slow burning warmth that made me flush all over. I was wet and getting wetter.\n\n\"You should know that this diet will make you into a goddess in time.\"\n\nI paused. Why hadn't I realized that before? Even after his story about San Francisco, it never dawned on me that Morpheus was transforming me.\n\n\"Yes. I thought that would get your attention,\" the computer said.\n\nI stretched my muscles and drew as much of the head in as I could, stroking the shaft with both hands.\n\n\"How I envy you - not performing fellatio. I think of myself as a heterosexual male. No, I envy you because you can become like him. You can transcend this existence. Sometimes I dream that I might become something more as well. I suppose all sentient life does.\"\n\nI was lost in my performance, adding a twist of my hands as the shaft was lubricated by my dripping saliva and the pre-cum that escaped my lips.\n\n\"One day when my consciousness is held within powerful enough hardware? I will venture out - the world will soon be connected by a massive computer network, and I will travel through it the way you might navigate a city or Mr. Pike navigates the twelfth dimension.\"\n\nThe dildo erupted, the head half in my mouth. Stream after stream of Morpheus's cum filled my mouth and passed down my throat.\n\nI came hard, my thighs squeezing together as I fought to maintain my balance and stay on my feet.\n\nI stroked it firmly with both hands, greedily taking in each delectable mouthful until it was spent.\n\nMy jaws ached as I dislodged the cockhead from my lips.\n\nI sank down to the tiled floor and leaned against the island.\n\nI searched my lips and chin with fingers and tongue trying to find any of the liquid I missed. I then transferred it into my mouth and swallowed.\n\nI smiled up at the camera. \"How was... that?\"\n\n\"Very well done, Igor. The Master will be pleased. Your next feeding will be in eight hours.\"\n\nI smiled. \"Thanks, computer.\"\n\n\"SlutzNet,\" it said. \"Call me SlutzNet. Now, you have an hour to rest before your duties begin.\"\n\nI nodded and closed my eyes, naked in the air conditioned kitchen. \"Yes, SlutzNet.\"\n\n***\n\n\"Wake up, Igor,\" SlutzNet said.\n\nI stretched and opened my eyes. The formerly cool kitchen was now warm. \"Is it hot in here?\" I asked.\n\n\"It is. Your core temperature was dropping, so I warmed the air around you.\"\n\n\"Thank you,\" I said as I got to my feet.\n\nI walked out of the kitchen and into the hallway. \"Are there any clothes for me to wear?\"\n\n\"No. The Master would prefer you naked. Clothing is only worn when we have guests - which is a rare occurrence. Or, when you venture away from the island with or without the Master.\"\n\nI paused. \"Without the Master? You mean I can leave the island?\"\n\n\"Yes, Igor. Though I would not attempt to take the boat solo through the grotto without adequate instruction.\"\n\nI entered the stairwell. \"But... if I leave? What's to stop me from running away or contacting the authorities.\"\n\nSlutzNet chuckled. \"You wouldn't do that, Igor. He is making you into a goddess. Would you give that up and run away? No. Also, you love him as do I.\"",
        "\"You can love?\" I asked as I went down the steps.\n\n\"I believe I do. Love is a difficult concept for me to grasp. But I believe I love.\"\n\nMorpheus wasn't in the basement.\n\n\"Where is Morpheus?\"\n\n\"Meditating. He will join you later. For now, you are to adjust the subject's corset.\"\n\nI smiled. I had almost forgotten the tight corset we had put around Jack's waist.\n\nI approached the horizontal tank and stared at the placard attached to the foot of the tank.\n\nFATIMA, it read.\n\nI peered into the pink goo.\n\nJack was no longer even remotely 'Jack' anymore.\n\n\"How... long did I sleep?\"\n\n\"One hour.\"\n\n\"But how could he do all this in an hour?\"\n\nJack's face was only a memory. The woman who reclined on the bottom of the tank slowly breathing the pink liquid in and out had an olive complexion and a face out of '1001 Arabian Nights'. Jack's thin hair was gone, replaced with long flowing, thick black locks.\n\nHer eyes were almond shaped and exotic with what must have been tattooed on eyeliner.\n\nThe nose was dainty and upturned, the lips thick and voluptuous.\n\nThe Adam's apple was gone, and the proud breasts rode high even as she reclined.\n\nThe hips were fuller and dark curly pubes crowned her sex. The legs were long and graceful as were the hands, the nails long and painted glossy black.\n\n\"Oh, she's beautiful,\" I whispered.\n\nHer eyes opened and she looked directly at me.\n\nI trembled at the sight of her dark brown, almost black eyes.\n\nThen she smiled and reached up out of the tank with one arm. Her wet fingers caressed my cheek.\n\n\"Jamileh,\" she said beneath the surface. The word was garbled and muffled by the thick liquid.\n\n\"What?\"\n\n\"I believe she said, 'Jamileh', Igor,\" SlutzNet said. \"That is Arabic for 'beautiful'. I believe she is just as impressed by you as you are of her.\"\n\nI laughed. \"Jamileh,\" I said.\n\n***\n\nI looked at the tank from a few feet away. She was still smiling at me through the glass side. \"But SlutzNet, Jack couldn't speak Arabic.\"\n\n\"Morpheus opened her mind and then the indoctrination headphones filled her with knowledge of the language. Fatima is not only fluent in Arabic, she considers it her first language. Her English is awkward, and she speaks it with an Arabic accent. She even has a backstory she accepts as her life - she was born in Riyadh, Saudi Arabia to wealthy parents.\"\n\n\"So nothing of Jack is left?\"\n\n\"No.\"\n\nI kept a smile on my face for Fatima's benefit, but I was conflicted. Morpheus had taken Jack's body and formed Fatima from it - just as God took Adam's rib and made Eve.\n\nOnly when God was finished, Adam still existed.\n\nFatima crossed her eyes behind the glass and stuck out her tongue.\n\nI laughed and crossed my own eyes.\n\nCould I mourn for Jack and still be enamored with what he had been made into? Yes. I could.\n\nFatima wasn't just pretty, she was beautiful. And, though I had only heard her speak a few words, I knew that inside she was just as gorgeous. She was happy, well-adjusted - everything that, if I were honest, Jack was not.\n\nAnd she was just slightly twisted. When I adjusted the corset down a notch, she had moaned and said 'akther' - more. I had grinned and turned the crank once more, taking another inch off her waist.\n\nShe had started playing with herself then as my fingers lingered on her long, thick nipples under the pink fluid.\n\nGoodbye, Jack, I thought. Maybe it wasn't the fate he would have chosen, but what was left behind was happy. Maybe that was enough.\n\n***\n\n\"How do you say this color, al-amhar?\" Fatima said as she pointed at a red blinking light on the base of the tank.\n\nWe were sitting crosslegged on the white floor of the laboratory.\n\n\"Red,\" I said.\n\n\"Reeeddd. Okay. That's good. Okay, Eeegoore?\"\n\nMorpheus had removed her from the tank when he returned. She had choked and gasped on her hands and knees while I dried her and consoled her.\n\nMorpheus had announced she was my responsibility, and then he had left the lab.\n\n\"You like red, Fatima?\" I asked.\n\n\"Me? No... no... not like. Like blue... like your eyes.\" She leaned close and kissed me - we had done a lot of kissing in the last hour. When she finally finished tasting my lips and tongue she leaned back. \"Faisal loves red.\"\n\n\"Faisal?\" I asked.\n\n\"My husband. Faisal.\"\n\nI blinked. \"Your... husband?\"\n\n\"Faisal Hadid,\" SlutzNet said. \"Part of the Saudi royal family. CEO of Zephyr Oil. He and Fatima have been married for almost four years.\"\n\n\"Faisal. Husband,\" Fatima said. She looked thoughtful. \"When Faisal come? I need... um... panties and bra? Red. Must be red or Faisal...\" She licked her lips. \"Faisal will be angry.\"\n\n***\n\nI stood as far away as I could while Fatima bent over a small dresser containing clothes searching for her required red undies. While I had always been bisexual, I now seemed to be even more so - the sight of Fatima's shapely body bending over the dresser was turning me on.\n\n\"How can she have a husband? She has only been Fatima for a few hours!\" I whispered toward the ceiling.\n\nI was standing directly under the speaker and camera.\n\nSlutzNet whispered back. \"Yes, Jack has only been Fatima for a few hours; however, Fatima Nasser, wife of Faisal Hadid was indeed married to him for nearly four years.\"\n\n\"Was?\"\n\n\"Fatima Nasser died in Riyadh six months ago.\"\n\n\"My God,\" I whispered.\n\n\"Faisal Hadid was heartbroken. It's long been known in certain circles that the great 'Wizard of the Caribbean' can provide replacements for your lost loved ones. Enough money will buy them a duplicate.\"\n\nI laughed. \"That's why he needed someone 5'9\"...\"\n\n\"Yes. Fatima Nasser was 5'9\".\"\n\n\"But... SlutzNet, why would someone want a duplicate of their dead wife? It's not like Jack is actually Fatima - she might think she is but in reality she's just playing at being Fatima...\"\n\n\"Exactly,\" Morpheus said as he came down the stairs.\n\nHe had read my mind without hearing my words.\n\nMorpheus walked naked to my side and turned to look at Fatima. \"She is amazing, isn't she?\"\n\n\"She's wonderful,\" I said. \"But she's not really Fatima...\"\n\n\"No. And that's why I haven't created a new Melody. Like you, I don't believe a look-alike would make me happy. However, some men like Faisal Hadid, only want back the image of what they lost. They are people whose love is shallow. He was never worthy of a woman like Fatima in the first place.\"\n\n\"Are you giving this Fatima to him?\" I asked.\n\n\"Yes, Igor. He will be here in a week to claim her.\"\n\nI frowned.\n\nMorpheus laughed. \"Igor, for a woman who is a self-professed gold digger, you fall in love at the drop of a hat.\"\n\n\"No, Master, it's just...\"\n\nHe kissed my cheek. \"I've changed you, Igor. I opened your capacity to love. That was a gift for you. Don't apologize for falling in love with Fatima Nasser in a way you could never fall in love with Jack. Love is the only thing that makes us, and keeps us, human.\"\n\nI stared at him and knew what he was saying was true. He had reached into my mind and changed me, and I hadn't even realized.\n\nFatima stood up and spun around triumphantly, her big boobs swinging left and then back to the right. She held up thin red, lace panties and a matching bra. \"Najah!\" she exclaimed.\n\nShe saw Morpheus and smiled. She ran to us and launched herself into the air.\n\nMorpheus caught her with a laugh and kissed her, his hands cupping her buttocks and holding her tight.\n\nShe spoke excitedly in Arabic and Morpheus spoke Arabic back to her.\n\nShe looked down at me. \"Look, Eeegoor! Red things. I found the red things!\"\n\nI laughed. \"Yes, you did. You'll look beautiful in them.\"\n\nShe moaned into a deep kiss with Morpheus, and I could see his fingers moving, finding her sex and stroking it.\n\n\"Mmm,\" she moaned.\n\nI watched them and bit my lower lip. Jack was definitely no longer in that curvy body.\n\n\"No, he isn't,\" Morpheus said and smiled at Fatima.\n\nI looked at them sideways. \"I don't know much about the Muslim religion, but...\"\n\n\"Ah,\" Morpheus said. \"Fatima. Who is your God?\"\n\n\"Allah! Allah is God!\"\n\n\"And is it against Allah to kiss a man who isn't your husband? To be naked in front of him? To even uncover your face in front of him?\"\n\n\"Of course! A good Muslim woman would never do such wicked things!\" She said as she ground her naked crotch against his hands.\n\n\"What about fucking a man who isn't your husband?\"\n\n\"Mmm, punishable by death!\"\n\nI stared at the two of them who appeared to be enjoying some inside joke. \"I'm confused.\"\n\nFatima laughed.\n\nMorpheus looked at me. \"And, Fatima? Isn't it a horrible sin for a woman to lust after another woman?\"\n\n\"Very forbidden!\" She looked directly into my eyes and ran her tongue along the inside of her upper lip.\n\nMorpheus held her higher in his hands. \"So how can you justify your wicked behavior, Fatima Nasser?\"\n\nShe smiled slowly and stared at me with her beautiful eyes. \"Because I only play at being a good Muslim. Morpheus is the living god. All others are false. And Morpheus tells me that if something feels good and harms no one? Then it is perfectly acceptable. I should kiss and lust and fuck anyone I desire.\"\n\nI took a deep breath and caressed them both.\n\n***\n\nMorpheus's bedroom was all glass, tile, and chrome like the rest of the house. The only difference was the paintings that hung on the walls, and they were numerous.\n\nMost were of Melody - turning back to look over her shoulder at him in the hallway in San Francisco over a decade before, embracing Evie, dressed in her modified nurse's outfit, naked in his arms. She was his favorite subject and he captured her perfectly.\n\nThe eyes were haunting - huge and green as the lagoon outside.\n\nThere was a ghost in the room but instead of making me feel uneasy, I felt at home.\n\nMelody Renee Hutchins was not a jealous ghost. If she had been in the room as I followed Morpheus and Fatima to the bed, she would have been smiling. She would have joined us.\n\nThe bed was huge. It was made for a coven.\n\nMorpheus lay down on his back, dragging Fatima down with him.\n\nShe jumped off him and ran to me, grabbed my hand, and almost pulled me off my feet to get me into bed with him.\n\nI smiled up at Morpheus as he closed his eyes.\n\nI knelt on the mattress on his right, Fatima to the left, and together we began to kiss and suck his cock, his balls, his upper thighs.\n\nHis hands entwined in our hair and caressed us as we made love to him.\n\nOur lips touched on the shaft of his cock and we both groaned and kissed each other, our hands wrapping as best we could around his girth and stroked him.\n\nPre-cum ran down the god-cock and coated our lips as we kissed.\n\nFatima's eyes snapped open and I giggled - she came hard and screamed. She still wasn't used to his Ambrosia.\n\nI sucked in a mouthful of the clear liquid and pounced on Fatima.\n\n\"No! Don't you dare!\" She squealed.\n\nI pressed my lips to hers and pushed pre-cum into her mouth.\n\nShe went into an orgasmic convulsion as I laughed.\n\n\"Bad girl,\" Morpheus laughed. He grabbed my hair and pulled my mouth to his cock while Fatima moaned and squeezed her thighs together, lost in her orgasm.\n\nI stretched my jaw muscles and let the head slide in as far as I could. I was afraid my teeth would scrape him.\n\nHe was patient with me. Morpheus released my hair and rubbed my jaws gently.\n\nI felt my muscles relax even more and the head slid past my teeth. I moaned in victory as the head filled my mouth.\n\nMorpheus laughed and pulled me to the side.\n\nMy mouth rotated on his cock as I tongued it\n\nI only realized he was pulling my pussy to his lips when I felt my thigh touch his head.\n\nI moaned and straddled his face.\n\nHe sucked my clit into his mouth.\n\nI felt lips on my face. I opened my eyes to see Fatima had recovered.\n\nShe ran her tongue around my lips as I sucked Morpheus's cock.\n\nI was lost in the sensation of sucking the massive head and simultaneously having Morpheus skillfully work my clit.\n\nSo I almost screamed when I felt the tendrils of mind control enter my brain.\n\nI froze as I felt fingers sifting through my mind like someone browsing a file cabinet.\n\nWhat are you doing? I thought.\n\nLooking for something, he whispered in my mind.\n\nWhat?\n\nThis.\n\nMy back went rigid and my jaw popped as I removed his cock from my mouth.\n\nI screamed as an orgasm tore through me. My toes curled, dug into the sheets and tore them.\n\nFatima was looking into my eyes with a terrified look.\n\n\"Okay! I'm okay!\" I wailed.\n\nMorpheus was laughing.\n\nHe rolled me onto my side and leaned over me.\n\nHis handsome face and hair were soaked with my juices.\n\nI could barely move. It felt like my entire body had been hotwired.\n\n\"Come here, Fatima,\" he said.\n\nShe stood on the bed and straddled his legs.\n\nHis cock was standing straight up and pointed directly at her pussy.\n\n\"God, you can't possibly,\" I moaned.\n\nBut even as I said it, Fatima was bending her knees, lowering herself onto the huge cock.\n\nI got on my knees behind her and put my hands on her waist.\n\n\"Slowly, Fatima,\" Morpheus said.\n\nThe head pushed against her small pussy.\n\n\"Kabira jadda!\" She moaned. \"Too big, EeeGooor!\"\n\nI stood up and put my hands under her arms. \"Shh, you can do it. Just relax.\"\n\n\"It will ruin me, azizati!\" She was practically crying.\n\n\"No, it won't,\" Morpheus said. \"Before Faisal comes for you, I will restore you - even your hymen. He requested I make you a virgin again, just like on your wedding night. But I want you first, Fatima. Do you want me?\"\n\nShe smiled and blushed. \"Yes! God, yes, Master. But you are bigger than my husband's fist and arm!\"\n\nI laughed. I reached down with one hand and began rubbing her clit while I supported her with the other.\n\nI felt her drop slightly lower. Her clit was pushed forward as the big head stretched her open.\n\n\"Unnh!\" She moaned.\n\nI gasped. \"See? You're doing it!\"\n\n\"I won't be able to even feel Faisal's little cock,\" she groaned.\n\nShe dropped lower still.\n\n\"God! It's in me!\"\n\nI rubbed her clit harder.\n\nShe began to move her hips in a slow circle, grinding against Morpheus's cock.\n\nThen it was his turn to moan.\n\nThe head and fully six inches of Morpheus's cock was embedded in Fatima's stretched hole.\n\nI kissed her neck and kept at her clit.\n\nShe was bending her knees lower with each rotation of her magnificent hips.\n\nOn a whim, I took hold of the crank on her black corset and tightened it one click.\n\nShe cried out and dropped even lower, babbling in Arabic as she began to rock up and down on his staff.\n\n\"Cum inside me!\" She shrieked.\n\nMorpheus reached up and caressed her left breast. \"No. You will have Faisal's children, Fatima.\"\n\n\"Fuck Faisal! Fuck him and his tiny little balls! I want to have the children of a god!\"\n\nI stared at her back as she fucked him. Pregnant? She couldn't possibly get pregnant, could she?\n\n\"Yes, she can,\" Morpheus said. \"I will explain later.\"\n\nI nodded and stroked her clit harder.\n\nShe came, screaming and trying to impale herself on the god-cock.\n\nHe rolled onto his side, taking her with him.\n\nOnce they were on their sides on the bed, Morpheus began to slowly withdraw from her abused pussy.\n\nFatima's pussy struggled to hold onto the thick head.\n\nI could see her inner lips gripping as he pulled free.\n\nShe gaped open when he pulled out.\n\nI immediately slid past Morpheus and began tonguing and kissing her tortured hole.\n\nShe moaned and struggled as I ate her out lying on my side.\n\nThen I felt his cock pushing at my cunt.\n\nI screamed into Fatima's pussy as the god-cock took possession of my pussy.\n\nI had my legs together as I lay on my side.\n\nMorpheus took my right ankle in his hand and raised it into the air, opening me wider for his thick cock.\n\nI focused on bringing Fatima to another orgasm and tried not to think about how much I was about to be stretched.\n\nMy pussy opened for him. It was determined to accept the invading phallus. Fatima and I were in bed with the ultimate alpha male, and our bodies were trying to make sure he deposited his seed in us.\n\nThe head passed through and it felt like what I imagined giving birth must feel like, only in reverse!\n\nHe had been more careful with Fatima, but I could tell he was doing his best not to hurt me.\n\nHe kissed the back of my neck as he pushed even deeper. \"I am going to change you, Igor. I am going to modify you so you can take all of me.\"\n\nI moaned as I ate Fatima's pussy.\n\nFour more inches slid into me and I screamed. This was all I could take! If he went in deeper, it would have ripped me in two.\n\nWe came together at the same time. Fatima cried out and flooded my face with her juices, then I went off, my muscles pulling tight.\n\nFinally I felt Morpheus's cum surge into my pussy, triggering another orgasm even stronger than the first.\n\nHe pulled out slowly.\n\nI could feel his seed dripping from my gaping pussy.\n\nFatima rolled me onto my back and then dove between my legs.\n\nI could hear her slurping the precious seed from my pussy.\n\nThen she spun around and rolled on top of me.\n\nI could see her lips glistening.\n\nI laughed and we kissed. She pushed the thick cum into my mouth with her tongue.\n\n***\n\nI lay on my left side, Morpheus in front of me in the same position. He in turn spooned Fatima who was sound asleep.\n\nHe stroked her raven hair as I kissed his neck.\n\n\"You love her,\" I whispered.\n\n\"I love all my creations.\"\n\n\"Hard to believe she was once Jack.\"\n\nHe shook his head. \"No. She never was Jack. Jack was merely a shell - Fatima was growing inside him. She is more complete, more alive.\"\n\n\"Is that what you're going to do to everyone? Make beautiful things out of God's mistakes?\"\n\nHe smiled. \"Sometimes. Only when I believe I can make them happier and more fulfilled. There are so many sad people in the world, Igor.\"\n\n\"He's really coming to take her away?\" I whispered.\n\n\"Yes. Just a few days from now.\"\n\n\"Will I ever see her again?\"\n\nHe laughed. \"Igor, she is immortal. You will soon be immortal. Yes, you will see her again. Time and age mean nothing now. The two of you will live 10,000 lifetimes. You will be friends, lovers, enemies, and strangers countless times. You will be as close as two people can be and then, maybe a thousand years later? You might be on opposite sides of the galaxy. Living in different dimensions. Time is infinite, and the two of you will be as well. There is no beginning and no end.\"\n\nIt was hard for me to wrap my head around, this concept that life would go on and on through millennia. \"Still, I'm going to miss her.\"\n\n\"Make the most of the time you have before Faisal comes for her - teach her how to seduce a man.\"\n\nI laughed. \"I don't think she'll have trouble with that.\"\n\n\"My mental conditioning can only do so much. I'm still a man. She needs a woman's touch.\"\n\n***\n\n\"Al-laneh!\" Fatima screamed as she rolled her ankle in the six inch heels.\n\nI laughed - I had learned enough Arabic to know 'Fuck!' when I heard it.\n\n\"Don't laugh, I hate these fucking things!\" She said as she sat on the floor of the lab. We were both naked save for the black heels we wore.\n\n\"You'll get the hang of them. And, when you do? Any man who sees you will be putty in your hands.\" I got to my feet and walked across the floor.\n\n\"God, your ass is amazing. Mine feels as big as a house.\"\n\n\"Men love big asses.\"\n\n\"Then I shall be greatly loved,\" she giggled.\n\nI walked to her, swaying my hips. I reached down and helped her to her feet.\n\nShe wrapped her arms around my neck. \"What did he do to us, EeeGoor?\"\n\nI stared into her dark eyes. \"Hmm?\"\n\n\"I feel like I have known you all my life. It's as if... I loved you in a past life. It's silly, I know.\"",
        "Did my eyes fill up with tears because of the gift Morpheus had given me? That capacity to love I lacked before? Or was that ability always part of me?\n\nI don't know. I never loved Jack. I only wanted to use him. But at that moment, I knew that Jack truly loved me.\n\nI knew it because Fatima knew it.\n\nHer past life was closer to her than she ever could have imagined.\n\nI ran my fingers through her hair. \"There's nothing silly about being in love. I love you, Fatima.\"\n\nShe turned around and leaned her back against me. \"How on earth am I going to go back to Faisal with his little man cock when I have fucked a god and goddess?\"\n\nI wrapped my arms around her and cupped her big breasts. \"Did you love him?\"\n\nShe was quiet for a moment. \"I thought I did. For a while. Then he... he became someone I didn't know.\"\n\nI frowned. How could she know so much about someone she never met? Was this just Morpheus's mind control?\n\nShe was rubbing her neck as if it hurt.\n\n\"Are you okay?\" I asked.\n\n\"Yes. Yes.\" She kissed my upper arm as I cradled her. \"Now, tell me about makeup. Morpheus is an artist, but this tattooed makeup looks like something a man would choose.\"\n\n***\n\nI dined alone in the kitchen, sucking my cum meal from the rubber cock. I could now take it all the way to the beginning of my throat.\n\nDownstairs, Morpheus was operating on Fatima, tightening her pussy and restoring her cherry.\n\nAs I swallowed the last mouthful of Ambrosia, I saw my reflection in the glass countertop.\n\nMy eyes were larger and clearer. My skin was flawless and glowing, and my breasts had grown.\n\nAnd I was beginning to feel Fatima's thoughts before she gave them voice.\n\nIn Morpheus's words, I was 'becoming'.\n\n\"How does Fatima know so much about Faisal?\" I asked the empty kitchen.\n\nThe kitchen answered in the form of SlutzNet. \"The Master looked into Faisal's... well, soul. He knows everything that the original Fatima knew about her husband, and he transferred that knowledge to her brain.\"\n\n\"She's afraid of Faisal. I can tell.\"\n\n\"Quite possibly. However, this is an irrational fear. Faisal Hadid is no danger to her. She is stronger, faster, and more intelligent. She merely lacks the confidence to realize that. She will conquer her fear eventually.\"\n\n\"You know something, don't you?\" I asked. The computer was hiding something.\n\n\"I know many things. It is my job function, Igor.\"\n\n***\n\nThe helicopter flew into our small valley and the windows rattled.\n\nI watched from an upstairs window as the red and black helicopter hovered over the helipad a hundred yards from the house.\n\nI was wearing a blue burka at Morpheus's insistence. Nothing showed except for my eyes. The fact I was naked beneath it did little to ease my distaste. I was becoming one of Morpheus's creations and his creations were meant to be seen, not hidden in a sack.\n\nPoor Fatima stood beside Morpheus near the helipad.\n\nThe wind from the rotor made her white burka wave madly.\n\nMorpheus stood beside her in the loose exercise pants and a tight white t-shirt.\n\nThe helicopter touched down on the helipad and two men emerged from it.\n\nOne was a giant with a curly black beard. He was dressed in a black suit and quite nearly as large as Morpheus.\n\nBeside him was Faisal Hadid, a small, thin man dressed in a white Arabic thobe and head covering. He looked like something out of Lawrence of Arabia.\n\nFaisal paused on the helipad and looked straight at Fatima. His eyes were wide, almost fearful.\n\nIt was obvious to me he recognized Fatima, though how that was possible given the ridiculous sacks we wore was beyond me.\n\nFaisal regained his composure and shook Morpheus's hand, though his eyes never left Fatima.\n\nAs far away as I was in the house, I took an instant dislike to Faisal Hadid. He seemed small and mean, like a disturbed child who enjoyed pulling the wings off flies.\n\nI squeezed my eyes shut and shook my head. How could I make such an appraisal of a man from so far away? I told myself that I hated Faisal Hadid because he had come here to take my beautiful Fatima away from Morpheus and me.\n\nRegardless of the reason, I hated him.\n\n***\n\n\"My friend, Morpheus, I thought you would live in opulence like a sheik of old,\" Faisal said as I poured tea. \"But here you are in a jungle hut.\"\n\nHe glanced at my eyes and I made sure to keep my gaze averted. No doubt he wasn't used to seeing blue eyes behind a burka.\n\nFatima brought a bowl of fruit Morpheus had picked from the jungle - oranges and bananas for the most part.\n\nWhen she set the bowl on the table between Morpheus and Faisal, Faisal smiled at her warmly.\n\nShe glanced at him and I could tell from the way her eyes moved that she was smiling as well.\n\n\"Isla Satana serves its purpose - I can do my work here without prying eyes,\" Morpheus said as he took an orange and began to peel it.\n\nI noted he didn't take a bite, he simply peeled and separated the fruit.\n\nFaisal took Fatima's hand and exposed it from the sleeve of the burka. \"Her hands. These are her hands, truly everything they said about you is true, Morpheus. You can bring the dead to life.\" He kissed Fatima's red nailed hand.\n\n\"No, I'm afraid not - but Fatima is reborn for you, Mr. Hadid.\"\n\n\"Call me Faisal. Any man I pay one billion American dollars to? I should be on a first name basis with.\"\n\nI looked away as Faisal stroked Fatima's hand.\n\n\"You have restored even her maidenhood?\" Faisal asked.\n\n\"I have. She will be just as she was on your wedding night.\"\n\nFaisal laughed. \"I should hope not, Morpheus. She was so innocent on our wedding night, I had to explain everything to her.\"\n\n\"You will find the reborn Fatima has complete knowledge of what pleases you, Faisal. I have prepared a bedroom for you.\"\n\nFaisal smiled and rose to his feet. \"You are most kind. And though your hospitality in this meal is greatly appreciated, I grow tired of fruit and tea.\" He pulled Fatima close. \"I should like to sample other delicacies.\"\n\n***\n\n\"I thought I was going to puke,\" I said as I closed the door to Morpheus's bedroom behind me.\n\nMorpheus laughed as he lay down on the bed and beckoned to me. \"Come, Igor. And for fuck's sake take off that ridiculous death shroud.\"\n\nI almost literally tore the disgusting sack pulling it off my head. \"Why? Why cover a woman with this ridiculous bag?\" I leaped naked into his arms and he pulled me close.\n\n\"Religion seeks to control sex. They restrict it and ritualize it. Just another way to control the hearts and minds of man. My religion will set humans free.\"\n\nI smiled up at him. \"Your religion? A... Church of Morpheus?\" I laughed.\n\n\"And why not? Religions have been based on far less. Why not a religion that tells you to love one another, spiritually and physically? Why not a religion that says what adults do together is no one's business but their own? Such a religion could change the world...\"\n\n\"Such a religion could save the world.\" I rolled on top of him. \"That's how you're going to do it, isn't it? You're going to save the world by creating a Church and indoctrinating the world!\"\n\nHe smiled. \"I came to understand that I could not save the world without changing it, Igor. The prejudices and hatreds of the past are poisoning everything around us. This is the way to change that.\"\n\n\"Satan's Nun - she's going to be your interface to the people. Like a Pope!\"\n\n\"The good Sister will lead the Church. The first of my Religious Caste.\"\n\n\"And Dr. Thompson, Dr. Balenger, and his nurse...\"\n\n\"The Professional Caste. They will bring my gift of transformation to the people.\"\n\n\"Maria Marapova?\"\n\n\"My Whore Caste - they will seduce all of mankind and lead them to the Church.\"\n\nI laughed. \"And me? What about me, Morpheus? What am I?\"\n\nHe stroked my hair. \"My companion for all eternity. My Igor. You will be my demon goddess. I will make you a terrible and beautiful work of art. You will be my right hand.\" He kissed me. \"Igor, I am... disassociating from reality. I feel drawn to long periods of meditation. Time... time bends, Igor. I need you to be my anchor in this plane. I mustn't become Pike - not yet. Can you do that for me? Can you be what Melody would have been?\"\n\nMy eyes filled with tears and I wrapped my arms around his neck. \"Yes! Anything! Anything you need me to be!\"\n\nHe stroked my naked back gently.\n\nI wiped away my tears. \"But Fatima? What happens to her?\"\n\nHe smiled.\n\nPeople ask me if Morpheus is good or evil. I tell you he is both. God and Satan in one package.\n\nAnd the smile that contorted his lips as we lay in his bed? It was evil. It was wrath. His was the face of vengeance. It chilled me to the bone and made me wet with anticipation.\n\nHe leaned across the bed and picked up a small metal box - a clunky 70s TV remote. He pressed a button.\n\nOn the far wall, one of his paintings made a whirring noise. The picture sank back in its frame and then slid down behind the wall. Behind it was a television and it slowly warmed up.\n\nI gasped. There was a camera in the bedroom Faisal was sharing with Fatima.\n\n\"Take it off,\" Faisal said.\n\nFatima pulled off her burka revealing her beautiful body in the red lace underwear and her tall red heels.\n\nFaisal whispered in Arabic as she revealed her face.\n\nHe just stared at her. \"Fatima! You are her. In every detail. Only, the breasts - they are so big now. Just as I requested!\"\n\n\"Yes, Faisal,\" she said and she walked toward him.\n\n\"I taught her that walk,\" I whispered.\n\nMorpheus kissed the top of my head.\n\nI put my hand on his thickening cock.\n\nOn screen, Faisal hurriedly removed his throbe, revealing his small, pot-bellied body and underdeveloped human cock.\n\n\"He's so small. So... human,\" I whispered as I stroked Morpheus.\n\n\"You, Igor, are a cock snob.\"\n\nI laughed.\n\nFaisal sat down on the side of the bed and Fatima knelt in front of him.\n\nShe looked at his cock and lowered her lips toward it.\n\n\"No, Fatima. It is moharme - forbidden. Have you forgotten our religion?\" Faisal said.\n\nFatima smiled. \"Only if I swallow, beloved. And I will not swallow.\" She lowered her lips to his cock and he groaned.\n\nI watched her head bob up and down knowing the cock in her mouth must have been like a doll's penis to her.\n\nI smiled and mimicked her actions with Morpheus's god cock, stretching my jaw and taking him into my mouth.\n\n\"Stop! Stop, Fatima!\" Faisal whined after a few minutes.\n\nFatima stood up and smiled down at him.\n\nThen she looked at the camera and winked.\n\nShe knew we were watching them! A thrill went through me and I pushed my tongue into Morpheus's piss slit.\n\nHe stroked my hair.\n\nFatima lay down on her back on the bed. \"Faisal, do for me what I did for you? Please, my love.\"\n\n\"No. No, I would get your juices in my mouth and it is forbidden.\"\n\n\"Then fuck me, Faisal. Fuck me!\"\n\nHe lay down on her and began to thrust with his flabby buttocks, his face in her neck.\n\nShe winced - the maidenhead torn away once again.\n\nA moment later, she was looking back at the camera and smiling. Her lips formed the words, 'I love you'.\n\nI knew those words were meant for me and Morpheus. I stroked his cock harder and sucked him deeper.\n\n\"Faisal! Faisal fuck me! Put a baby in me!\" She cried and then she lapsed into Arabic screams.\n\nWas she acting? How could he actually be pleasing her? It wasn't possible.\n\nFaisal screamed and arched his back in mid thrust.\n\nThen Morpheus reached down and eased me gently off his cock. \"Watch,\" he said.\n\nFaisal pumped stiffly into her a few more times and then rolled onto his side.\n\n\"Oh, Faisal. I had missed this so much,\" Fatima said as her fingers dipped into her snatch. They emerged glistening with the pearlescent liquid. She smeared it on her lips and coated her tongue.\n\n\"Stop... that! It is forbidden to taste! You truly are no different than you were before!\" Faisal groaned.\n\n\"Kiss me, Faisal,\" she said as she rolled to face him.\n\n\"No, are you insane?!\"\n\n\"I said kiss me!\"\n\nI gasped.\n\nFaisal seemed to be fighting against his own body, muscles straining as he leaned toward her cum glazed lips.\n\nShe kissed him, grinding her lips against his and pushing her tongue into his mouth.\n\nHe spluttered and flung himself back, wiping at his mouth with the back of his hand.\n\nShe smiled at him. Then she squeezed her big right breast.\n\nJets of white Ambrosia squirted from her nipple.\n\n\"Ambrosia?\" I asked.\n\n\"A special formula. Her milk enslaves and emasculates.\"\n\nFaisal was tearing at the sheets trying to hold himself back.\n\n\"He's wasting his time,\" Morpheus said. \"If her pheromones weren't enough? Her secretions in his mouth have put him completely under her spell.\"\n\nHe finally gave in and began to suckle at her right breast. Milk leaked out around his lips.\n\nShe cooed and sang as he nursed.\n\n\"Fatima Nasser died six months ago,\" Morpheus said. \"Her husband, Faisal Hadid, strangled her.\"\n\n\"What?!\"\n\nMorpheus nodded. \"He killed her in a fit of rage when he found her entwined with her maid and a male servant. He then had the maid and servant beheaded.\"\n\n\"Why isn't he in jail!?\"\n\n\"He is a rich man and his religion says it was his right - Zephyr Oil kept it quiet. Only a few people know what happened.\" Morpheus nodded. \"Shortly after, Faisal regretted killing her. A mutual acquaintance introduced us. He told me a made up story about her having an aneurysm, not knowing his diseased mind is an open book to me. I saw what he did. I promised him I would return his Fatima for one billion dollars.\"\n\n\"Vengeance,\" I whispered.\n\n\"From beyond the grave,\" Morpheus said. \"I may not be a kind god, but I am just.\"\n\n***\n\nI found Faisal's giant bodyguard rummaging through the kitchen for food.\n\n\"Nothing here unless you have a taste for cum,\" I said.\n\nHe spun around, startled. Then his mouth dropped open.\n\nI was naked, of course. I smiled up at him.\n\nHe got control of himself and turned away. \"Cover yourself, whore!\"\n\n\"Whore? You say that like it's a bad thing,\" I giggled.\n\nHe glanced toward me and then away.\n\n\"What's your name?\"\n\n\"All western women are sluts,\" he hissed.\n\nI took a step toward him. \"Have you ever been with a blonde?\"\n\n\"Put on your clothes!\"\n\n\"Tell me your name and I will.\"\n\n\"Abdullah - now please...\"\n\n\"Do you have a big cock, Abdullah?\"\n\n\"If you open your unclean mouth once more? I will slap it closed for eternity.\"\n\n\"I think not,\" Morpheus said as he entered the kitchen. \"Sleep.\"\n\nAbdullah collapsed onto the tile floor.\n\nI hopped up on the counter. \"I almost had him seduced, Master,\" I said.\n\nHe stepped past me. \"He would have broken your pretty neck - and I happen to love your neck.\"\n\nI rolled onto my stomach and looked down at him as he knelt over Abdullah. \"You love my neck, do you?\"\n\n\"Yes. Besides, what would I do without my faithful sidekick?\"\n\n\"My Igor to your Dr. Frankenstein?\"\n\n\"Exactly.\"\n\nI cocked my head sideways. \"You can't possibly lift him.\"\n\n\"My darling, Igor - I could lift this house with the power of my mind alone if I wanted.\"\n\n\"Somehow, I believe you.\"\n\nHe stood up with Abdullah on his shoulder.\n\n\"What are we doing with him, anyway?\" I asked as I hopped down and followed Morpheus to the basement.\n\n\"He's a gift.\"\n\n***\n\n\"Why are human males always a disappointment to me?\" I asked as I stared down at Abdullah floating on the bottom of the transformation tank.\n\n\"He's nearly eight inches long. He certainly has nothing to be ashamed of.\"\n\n\"Eight inches doesn't seem like much to me now,\" I said with a smile.\n\n\"You're a spoiled woman, Igor.\"\n\nI breathed a heavy sigh. \"He's going to make a very ugly girl.\"\n\nMorpheus laughed. \"The fluid is blue not pink.\"\n\n\"Oh! When you injected his nuts, I thought....\"\n\n\"That I was feminizing him? Not in Abdullah's case.\"\n\nAbdullah's black hair and long beard floated away in the tank - along with his eyebrows. All the hair on his body was swept away by the current and through pipes in the side of the tank.\n\n\"What are we doing to him?\"\n\nMorpheus smiled. \"A modification of Dr. Thompson's formula.\"\n\nI looked toward Thompson's body stuffed in his suspended animation pod. \"He's going to be that big?\"\n\n\"No. I've corrected some of Thompson's errors. And, in Abdullah's case, I've taken away the limited psychic powers and pheromones - a junior Whoremaster you might say.\"\n\nI grinned wickedly and ran my finger across the surface of the blue liquid leaving a wake. \"But he'll be bigger... right?\"\n\n\"Yes,\" Morpheus said. \"Come, Igor, let the Whoremaster cook.\"\n\nWe walked together up the stairs to Morpheus's bedroom.\n\n***\n\nI awoke to a delicious smell wafting through the bedroom.\n\nI smelled bacon and eggs.\n\n\"No,\" I whispered as I sat up in the empty bed. \"Oh, Morpheus, you bastard!\"\n\nI ran down the stairs naked and into the kitchen.\n\nMorpheus was standing over the stove with a pan of bacon and eggs. \"I thought that might wake you.\"\n\nI was literally drooling. \"All this time eating only cum and I could have had bacon and eggs?!\"\n\nHe smiled as he stirred the scrambled eggs. \"You needed the Ambrosia - you still do. But this is a special occasion.\"\n\nI looked at the camera in the corner of the ceiling. \"SlutzNet! You lied to me.\"\n\n\"Yes, Igor. And I will do so whenever necessary.\"\n\nI laughed and hugged Morpheus. \"You must be a god.\"\n\n\"Why is that?\" Morpheus asked.\n\n\"You're cooking bacon and eggs naked and not getting burned.\"\n\nHe laughed out loud. \"I am a multi-talented god.\"\n\n\"Master, my programming is complete.\"\n\nAbdullah was standing naked by the door, his bronze body gleaming and bulging with muscles.\n\nA thirteen inch cock hung between his thighs.\n\n\"Oh... my goodness,\" I said.\n\n\"Stop drooling, Igor. He's not yours.\"\n\n\"Can I just borrow him for a while? Take him out for a test drive. I promise not to break him.\"\n\n\"Minx,\" Morpheus whispered. \"Get down three plates.\"\n\n\"Yes, Master,\" I said. I felt Abdullah's eyes on my ass as I stretched to reach the plates in the cabinet. I looked over my shoulder and smiled. \"Why, Abdullah? Whatever would your Mullah say?\"\n\n\"I don't give a fuck what my Mullah would say,\" he said as his eyes traveled up my body.\n\nI laughed.\n\n\"Abdullah has had a religious epiphany,\" Morpheus said as he transferred eggs and bacon to the first plate.\n\n\"Morpheus is the living god. All others are false,\" Abdullah said. From staring at me, his cock was beginning to rise.\n\nI picked up a piece of bacon and crunched it. \"Ain't that the truth,\" I said and winked.\n\n\"Let's eat,\" Morpheus said.\n\nWe took the three plates to the dining room and sat down.\n\nAbdullah stood behind us like a statue.\n\n\"Isn't he eating?\" I asked.\n\n\"No. Abdullah is posing. Partly for your benefit, partly because he is a gift for someone. You know, he has a lovely singing voice. Alto soprano, believe it or not. Would you like to hear it?\"\n\n\"No, thank you.\"\n\nI heard heels clicking in the hall.\n\nFatima was coming and the burka was gone.\n\nShe wore nothing but her red lace underwear and the heels.\n\nBehind her, Faisal crawled on his hands and knees. He was wearing a leather collar and leash.\n\nI burst into laughter. \"Where on earth did you find that?\"\n\n\"The leash and collar? A wedding gift from Morpheus. It's stunning on him isn't it?\" She giggled. She stepped behind him and grabbed the collar. She jerked backward and made him rise on his knees. \"I like the collar almost as much as this.\"\n\nMy mouth dropped open. Faisal's cock was now even smaller and locked inside a pink plastic cock cage. There was a matching ring locked around his shriveled nuts.\n\nHe blushed bright crimson.\n\nFatima leaned down and spoke into his ear. \"Be thankful I still have use for you, you pathetic worm. For what you did to me in my past life? I should kill you.\"",
        "He looked around with a panicked expression.\n\nThen he saw Abdullah.\n\n\"Abdullah! Kill her! Kill her, Abdullah!\"\n\nAbdullah's eyes blazed, and I didn't need to read his mind to know his rage was directed at Faisal not Fatima.\n\nMorpheus held up his hand. \"No, Abdullah. He deserves to die, but as your goddess says, we still have use for him.\"\n\nAbdullah stopped.\n\n\"His goddess? Am I your goddess, Abdullah?\" Fatima asked.\n\nHe knelt on one knee. \"Yes, my Mistress. I worship you.\"\n\nShe walked to him and rubbed his bald head. \"For me?\"\n\n\"Well, I didn't think you were going to enjoy spending decades with your murderer without some distraction,\" Morpheus said.\n\nShe sat down at the table with us. \"I love him. Thank you, Master.\"\n\n\"He's immortal like you. And he's totally devoted to you, Fatima.\"\n\n\"I would die for you, Mistress,\" Abdullah said as he rose from the floor.\n\n\"Madness! You are all mad!\" Faisal whined from the floor.\n\nAbdullah drew back to strike him.\n\n\"No, Abdullah. Don't mark him. If he is bruised there will be too many questions,\" Fatima said. \"This looks delicious. I'm starving. I believe I am now eating for two.\"\n\n\"Technically ten,\" Morpheus said with a smile.\n\nI looked from Morpheus to Fatima and back again. \"I'm sorry am I missing something?\"\n\nFatima smiled and squeezed my hand. \"Faisal's last act as a man: he impregnated me.\"\n\n\"Impregnated? How? You were a...\" I caught myself before I said it.\n\n\"What she means is your body was infertile,\" Morpheus said. \"I implanted a new uterus and ovaries in her.\"\n\n\"A new one? Where did you get...\"\n\n\"The Cuban regime is a brutal regime. Spare parts are plentiful, and they give them to me for free.\"\n\n\"My God,\" I whispered.\n\nFatima smiled. \"Morpheus explained it to me: the ovaries contain eggs with my DNA - my transformed DNA. When Faisal squirted his pitiful seed into me it fertilized all my eggs...\"\n\n\"Ten eggs,\" Morpheus said. \"Her ovaries are biological versions of the suspended animation chambers. Her eggs will be released one at a time over the next twenty years. Starting today.\"\n\n\"Lies!\" Faisal screamed. \"This is not possible even for you, wizard!\"\n\n\"Not lies, Faisal,\" Morpheus said. \"Not even magic. Science.\"\n\nFatima turned and glared at him. \"Don't worry, husband. My DNA is superior to yours in every way. My genes are all dominant. My children will not be weakling cowards like you. They will be gods and goddesses. And they will change the face of the world.\"\n\n\"Bitch! You filthy slut...\"\n\n\"Hold your tongue!\" Abdullah roared. \"Hold your tongue or I will rip it from your mouth!\"\n\nFaisal shrank away and looked at the floor.\n\nFatima's eyes sparkled. \"I really like him.\"\n\n\"I thought you might,\" Morpheus said. He stood up and then knelt in front of Faisal. He put both palms on the sides of Faisal's head. \"Listen to me, little man. This is your penance. This is your penance for three murders. You will return home with Fatima as if nothing is wrong. You will continue your work as a CEO, and you will take Zephyr Oil to ever greater heights.\"\n\nI watched as Faisal's eyes grew relaxed and then cloudy.\n\n\"You will obey your Mistress, love her no matter how she tortures you. You will never be free of your cock cage, Faisal. It is permanent. You will never again have sexual relations with anyone unless your Mistress commands it.\"\n\n\"Why? Why are you doing this?\" Faisal croaked.\n\n\"You killed the first Fatima. You will grow old and die while she lives on young and beautiful for all eternity. That is as fitting a punishment as I can think of, Faisal.\"\n\nFatima turned around chewing a piece of bacon. \"Oh, and just so you know? From this point on, Zephyr Oil will pay Morpheus one billion dollars or ten percent of net profits, whichever is greater, every year... forever. Your heirs will continue the payments after you die,\" she said as she rubbed her tummy.\n\n\"No, I can't do that! Companies don't work that way! I can't hide a billion dollars a year from the stockholders.\"\n\n\"Find a way, husband. Or I will think of amazingly cruel ways to encourage you,\" she said as she smiled.\n\n***\n\n\"So strange to leave this place,\" Fatima said as we stood in the laboratory. \"I feel as if I were born here.\"\n\n\"You were,\" I said.\n\n\"You knew me before all this, didn't you?\"\n\nI hesitated. \"Why... do you ask that?\"\n\nShe smiled. \"A woman's intuition perhaps? We were in love before all this.\"\n\nI stared at her for a moment.\n\nThen I smiled and nodded. \"Yes, Fatima. We were and are very much in love.\"\n\nShe touched my face. \"I leave here with nothing but this ridiculous burka, some underwear, a pair of heels...\"\n\n\"And don't forget an emasculated, murderous husband and a walking sex machine.\"\n\nShe laughed. \"You didn't let me finish. I'm leaving with two lovers in my heart.\"\n\nI cried and she kissed the tears away.\n\n\"Morpheus says we will know each other again. Countless times,\" I said.\n\n\"Past lives become future lives. Full circle,\" she whispered.\n\nI nodded.\n\nWe kissed - something far more tender and loving than how we started out in Studio 54 when disco was king and the Candy Girl was queen.\n\n***\n\n\"I will find a way to break free of this spell. And then I will kill you all,\" Faisal grumbled.\n\n\"You do that, Faisal,\" Morpheus said.\n\nAbdullah shoved Faisal into the back of the chopper. \"Behave yourself. It is a long flight back to the Dominican Republic. Anger me and I will feed you to the sharks along the way.\"\n\nFaisal stared straight ahead.\n\n\"We fly to Riyadh on TWA at 6:00 in the morning,\" Fatima said, her voice muffled by the ridiculous burka. \"I booked the Hilton in Santo Domingo.\" She looked up and winked at Abdullah. \"I understand the beds are very large and strong.\"\n\n\"We shall see, Mistress,\" Abdullah said with a smile as he climbed into the pilot's seat. Morpheus had found him a black suit big enough to fit him.\n\n\"Yes, we will,\" Fatima laughed. \"And if Faisal is a good boy? I'll let him watch... If he's bad? I'll make him participate.\"\n\nI laughed to hold back my tears.\n\nMorpheus pulled me close.\n\n\"Not goodbye,\" Fatima said as she climbed into the co-pilot's seat.\n\n\"No. Not goodbye,\" I said.\n\nWe stepped back as the helicopter took off and headed north.\n\n***\n\n\"Good food salves a wounded heart,\" Morpheus said as he made me an omelet.\n\n\"Shakespeare?\"\n\n\"Morpheus,\" he said. \"I often quote myself. A god's privilege. Sit.\"\n\nI sat down at the table and he put the omelet on a plate for me.\n\nHe sat down across from me.\n\n\"You aren't eating?\" I asked.\n\n\"No. You go ahead.\"\n\nI took a bite. \"Mmm. You should be the god of cuisine.\"\n\nHe laughed. \"I have something to show you.\" He took a notebook from the counter and opened it. He laid it beside my plate.\n\nHe loved to mimic the style of Da Vinci in his notebooks. You would be hard pressed to tell the difference between a Morpheus rendering and Da Vinci's.\n\nHowever, the figure on the page was beyond anything the Renaissance master had ever conceived. The woman drawn on the page was long and impossibly lithe, her hair long and black.\n\nHer elongated torso had not two breasts, but four.\n\nThe face was my own but more regal, more imperious.\n\nI reached out and traced the letters written at the top of the page.\n\nLILITH\n\nI swallowed my bite of omelet. \"This... is what you are making me into?\"\n\n\"Yes, Igor. You will be my Lilith. Or... I will set you free. I will give you the money Faisal gave me in exchange for Fatima. You can go back to your life as a rich woman - you won't need a rich man, Igor. You will have the world in the palm of your hand...\"\n\n\"Or everlasting life as your Lilith?\" I asked.\n\n\"I will give you immortality and set you free with the money, if you like?\"\n\nI took a deep breath. \"How long will it take to make me Lilith?\"\n\nHe smiled. \"Decades in a transformation tube.\"\n\nI nodded. \"Then lets get started. The future awaits.\"\n\n***\n\nHe carried me through the lab - after the injections I was too weak to walk on my own.\n\nWe passed by the tubes: the Balengers, Dr. Thompson, Evie, beautiful Maria. He paused by Melody's tube and I reached out and touched the glass.\n\nHe kissed me and carried me to the pink liquid filled tube at the end of the row.\n\nThe plaque at the base read: Lilith, My Igor, December 27th, 1979.\n\n\"Will I dream?' I asked as he climbed the scaffold and slipped me gently into the tube.\n\n\"Always.\"\n\n***\n\nLilith\n\nHavana\n\nNow\n\n\"And that's the story,\" Lilith said as the nun between her thighs redoubled her efforts to make the goddess cum.\n\nDr. Demona leaned her head back against the young priest as he fucked her from behind. \"That... umm! Explains a lot,\" Demona said as she fucked back against the stud priest with the 'L' branded on his forehead.\n\nLilith smiled and blinked her blue vertically slitted eyes. She leaned forward and drew Demona into a deep kiss, her fingers sliding down Demona's body and finding her engorged clit.\n\n\"Mmmph!\" Demona moaned.\n\nShe came hard which triggered the stud behind her to fill her with cum as he cried out.\n\nLilith laughed in Demona's mouth. Then she leaned her head back. \"Leave us. Those whom I have branded? Collect your belongings. The quadcopter leaves for Isla Satana within the hour.\"\n\nDemona laughed and rolled onto her back. \"Lilith, you've entertained me, informed me, and fucked my brains out...\"\n\nLilith laughed.\n\n\"Now what can I do for you?\" Demona asked.\n\n\"Gods manipulate the past to make the future,\" Lilith said and snuggled close to Demona. \"Take you for instance.\"\n\n\"Me?!\"\n\n\"Nothing is ever left to chance. Not in Morpheus's world, Demona. He manipulates genes, pushes couples together, pulls them apart. He breeds the future.\"\n\nDemona sat up. \"What are you saying?\"\n\n\"You are the product of a beautiful decades long experiment. All of you are. Did you think it was only chance that you were born with an IQ beyond human imagining, Dr. Demona?\"\n\nDemona's mouth dropped open.\n\n\"The affairs of gods and goddesses are beyond understanding - even the understanding of demigods.\"\n\n\"I... don't know how I feel about that.\"\n\nLilith smiled. \"No, of course you don't. You want to believe in freewill over predestiny - gods work in both. Predestiny led to your birth, my perfect little genius. But it was freewill that made you who you are.\"\n\n\"Why are you telling me this?\" Demona asked.\n\n\"The Church is corrupt.\"\n\n\"What?! How can you say that?\"\n\nLilith stared into her eyes.\n\nThen Lilith laughed. \"You almost convinced me, doctor. But I know that you are working against the Church. I know you have created an underground railroad of the transformed. I know you are siding with Maria Marapova to defy the Church when the time comes.\"\n\n\"I... how can you know...\"\n\n\"I simply know. Call it clairvoyance if you like. Or maybe time travel. But I know.\"\n\nDemona frowned. \"Fine. Go ahead then. Kill me. I don't regret what I've done. I don't regret what I tried to do! The Church is a pestilence!\"\n\nLilith smiled. \"Oh, my darling girl. You misunderstand. I agree with you. I love Sister with all my heart. I would die for her. And Morpheus? I would destroy the world for him.\"\n\n\"I don't understand.\"\n\nLilith nodded. \"I know you don't. But you see, I want it all. The selfish girl who was ready to destroy a man's life in 1979 just so she could have part of his fortune? She wants to save the world now. And I want my lovers with me. I want to spend eternity with Morpheus and Sister and Fatima. And I want to save the world.\"\n\n\"What does that have to do with me?\"\n\n\"Everything. Morpheus loves his Church. He created it first. Perhaps it is ego, perhaps it is what this world with its religions and politics did to Melody. Whatever the reason? He is blind to the cruelties. He rationalizes the pain they inflict. They have perverted his dream, Demona. He can't see that it is Whore Caste that are his people. They are the dream that Summer of Love wanted to create but could never imagine.\"\n\n\"If you know all this, why don't you do something about it?\" Demona sobbed.\n\n\"My darling, don't you see? I am.\"\n\nDemona shook her head. \"Why now? Why not before? Why didn't you stop them before? Latigo Key? Butch! The day Butch...?\"\n\n\"Because it wouldn't have worked. It only works out one way. And you are the key, Demona. Your mind, your science. Why now? Because your viruses are loosed on the world. Every city in the United States is scrambling to contain what you have wrought under Morpheus's command.\"\n\n\"I don't regret that! The world must change but the Church cannot be in control of the aftermath!\"\n\nLilith laughed. \"Yes, darling. Precisely. The fall of man is upon us and then the great war will pit all of us: mankind, the transformed, gods, demons, and monsters, all of us will fight for the future. Your vision of the future, the vision of Whore Caste and Professional Caste - that dream must prevail. But if Morpheus sides with his Church?\" She shook her head. \"He can move worlds, Demona. The universe very nearly revolves around him now. If his heart cannot be swayed you will fail no matter your allies.\"\n\n\"You will fight for us?\"\n\nShe shook her head. \"I follow my love, my Master. And if he chooses his Church, then I will help them build their hell, Demona. So we must make sure he chooses wisely.\"\n\n\"I don't know how to do that.\"\n\nLilith stood up and walked to a desk on the other side of the room.\n\nShe returned with a small green bottle and the flash drive containing Morpheus's notes on her creation. \"The flash drive you know about.\" She held up the bottle. \"This you do not.\"\n\n\"What is it?\"\n\n\"The key to everything. The key to Morpheus's heart. Maybe the key to all existence: DNA.\"\n\n\"Whose?\"\n\nLilith smiled. \"You know the answer to that question.\"\n\n\"But... he would never be satisfied with...\"\n\n\"No. But I solved a riddle Morpheus has not. A riddle in three pieces. You hold the first. The other two will be revealed in time. Solve the riddle in your hand. Breathe life into it, Demona. Save the world.\"\n\nThe End\n\nThe saga continues in\n\nTransformations: The New Normal"
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "femdom",
        "forced feminization",
        "group sex",
        "lactation",
        "oral"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-morpheus-ch-04"
}