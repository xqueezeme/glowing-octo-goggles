{
    "title": "My Little Ventrue Pt. 03 Ch. 12",
    "pages": [
        "~~Beatrice~~\n\nShe slipped on her boots and stepped out of her alcove, her little cave in a cave.\n\n\"Going out?\" Aaron said.\n\n\"Yeah, just to hang with Julias's childe.\"\n\n\"Right right, making friends with Invictus.\"\n\nShe shrugged and gave the man a little push on the shoulder. \"The Circle is small. Carthians and Invictus are huge. We're not at war with them you know, make some friends.\"\n\nAaron shrugged. He was sitting in a chair by the back wall of the cave, the one covered in bones like some sort of painting sculpture. Reading a book too, as per usual.\n\n\"Books are better friends.\"\n\n\"Ha, fuck no man. Hey, I love a good story, and I love some fucking peace and quiet, but there's something to be said for friendship. And no, I don't mean a facebook friend you fucking cunt.\" Head off that stupid joke before he made it. \"A real friend, someone you can talk with all night.\" Not that Jack necessarily fit the bill, but maybe.\n\n\"You've changed quite a bit the past year haven't you?\"\n\n\"Yeah, glad I'm did. Try it sometime.\" She waved her claws at him, and started out of the cave.\n\nOr at least, that was the plan. But some quiet moans drew her attention. Othello's alcove, with the door hang blanket pulled aside for all to see.\n\nShe hadn't heard anything a moment ago, when inside her room. Weird that she'd only hear the sex now. She looked at his little hole in the wall, then to the tiny tunnel leaving their enormous abode, then back to his room. Julias had said it was perfectly ok for her to watch. So, grinning, she walked over to his place, and leaned against the side of the opening.\n\n\"Hey Triss,\" he said.\n\n\"Heya.\"\n\n\"H-Hello,\" the woman said.\n\n\"Beatrice, I don't think I've ever introduced you to Madison. Madison, Beatrice.\"\n\nThe two women nodded at each other. Which would have been perfectly normal, except for the fact Madison was currently having sex with Othello.\n\nOthello was lying down, and from the angle and position, Beatrice was basically looking straight down at his head, while the rest of him was pointed away from her. Which meant Madison, facing them, was on full display. She was riding him, her knees to the furs underneath them, and she was leaning back, holding onto Othello's legs with her hands to brace herself while she rode him.\n\nBeautiful. A black woman with very dark skin, and short black hair, super short, maybe an inch at most, and super curly. She was average height, with luscious, thick lips, and a little meat on her bones. Not chubby, but with enough softness to give her body glorious curves, and her heavy breasts flattened to her torso as they drifted off the sides of her ribs with their natural size, and her leaning back angle. She had a gentle looking face too, complete with shy smiles and guilty glances.\n\nNo wonder. The girl was riding Othello in a slow, almost dance-like way, and with her leaning back so her body was on display, it was easy to see they were having anal sex \u2014 as Othello always did \u2014 and her smooth pussy was completely in view. The pink of her insides was just visible between her dark lips, and her trickling juices glistened in such an appealing way.\n\nBeatrice didn't hear them earlier cause they were having the most gentle, sensual sex she'd ever seen Othello have. But judging from the liquids the girl was leaking from her exposed snatch over the vamp's pelvis, they'd been at it for a while. And since the sun had just gone down an hour ago, it meant the girl was here during the day. So she was one of Othello's ghouls. Or his only ghoul? She should ask about that.\n\n\"Enjoying yourself?\" Triss said.\n\nMadison, making a little shiver of pleasure, looked up from Othello to her. \"Me?\"\n\n\"Yeah you.\"\n\n\"... I... I am.\" She was rolling her hips back and forth, a position Triss knew all too well. Leaning back like that when facing the man made the cock press up against the front walls, toward the belly. Fucking euphoric feeling, and this Madison girl was milking that pleasure right in front of Triss's eyes.\n\nThe Nosferatu looked down at the lazy Daeva. Bastard wasn't doing a thing, not moving his hips or touching her clit or anything. His hands were netted behind his head, so the man could just relax, and let her do all the work.\n\nBut judging from the woman's expression, her shivering body, and hard nipples, she was enjoying doing all the work.\n\nTriss kicked Othello in the shoulder anyway though. \"Dude, help her out.\"\n\nThe man laughed, but shrugged and reached out to hold onto the woman's hips with one hand, while the other sneaked between her thighs to press his thumb against her swollen clitoris.\n\nLike fireworks. Girl was obviously already close, but she'd been struggling to stay quiet. All bets were off when people were watching, and Othello was massaging her sweet bud. The moans started, and so did the bouncing, angled in just the right way to no doubt push Othello's cock up toward her abdomen, hit the walls of sensitive flesh, get the whole body buzzing and tingling.\n\nShe came in seconds. Her new bouncing lasted only moments before it slowed, and she let her head fall back over her shoulders as the moans grew louder, mixed with mewls, and a little squeak every now and then. Her legs squeezed on Othello's sides as he massaged her clitoris, and her body shook as a little trickle of juices leaked from her pussy onto his body.\n\n\"Fuck...\" Yeap, that was her and Julias right there. Madison didn't have any piercings or tattoos, but other than that the position was one of her favorites, riding, anal, controlling the angle so it hit those spots inside that melted her. \"Now... now sit up dude, get in there, kiss her tits, rub her back, come on.\" Beatrice blinked at herself. The fuck was she doing, giving sex directions. And why was it so fun?\n\nOthello laughed again, so did Madison, and he sat up to put both hands on the small of her back. With her sitting on him and having anal sex, she had to wrap her legs around his waist and hook her feet behind his butt to keep the angle right, and she leaned back a little as she hooked her arms over his shoulders too. And when Othello craned his head down to start kissing her breasts, Madison sighed bliss, and cradled the back of his head with one hand.\n\nNot a good angle for getting off, but a great angle for building up the pressure, getting more juices flowing, and it just looked really awesome. Her with her legs wrapped around him, leaning back, sitting on his lap, Othello leaning down to suckle on those huge tits and making a display of it. Dude was Daeva, he got off on being passionate; and being passionate with an audience must have stroked his ego in ways even Beatrice couldn't appreciate. But she knew it would, and sure enough, Othello was groaning into his meal's huge breasts as he kissed them, teased them, suckled on them hard enough to pull one away from her body a few inches, and then let it drop with gravity to jiggle lightly.\n\nMadison enjoyed it just as much as Othello. Probably why Othello made her his ghoul, if the girl pressed all his buttons just right. Not that ghouls were always picked for sexual compatibility, but it was definitely a plus, especially to a Daeva. The woman squirmed and wriggled, and peeked over Othello's craning head to look at Beatrice, smile at her, and mouth 'thank you' silently.\n\nOk Triss, you're supposed to go meet Jack. Stop playing porn director.\n\n... five more minutes.\n\n\"K, now, turn around, and Madison you get on your back. Othello on your knees, and hold onto her hips. Madison, put your legs over his shoulders.\n\nOthello didn't even hesitate. Awesome. It'd probably lead to awkward conversations in the future, but for now, it was great how the man listened to her without skipping a beat, without her needing to ask, everyone was just going with the flow. Fun. This was fun. Holy fuck she was having legitimate fun with her fellow Circle members.\n\nThey got into position. Madison was on her back on the furs, with her legs hooked on Othello's shoulders. But since Othello was kneeling tall, her ass was a foot off the ground and held up by his hands. It not only highlighted Madison's beautiful body with a great curve to her stomach, and let her large breasts flatten to her chest and ribs in that heavy-and-real way, but it also made her pelvis angle upward, so Othello's cock pushed toward her belly again, hit those spots Triss knew well.\n\nCause apparently she missed her passion as a porn director.\n\n\"K, now... start fucking her, Othello. Slow at first.\"\n\nHe did so, holding the girl's hips and keeping her ass off the rug, so none of the magic of the angle was lost. And since they'd rotated like she asked, now Madison was closer to Triss, and all the Nosferatu had to do to see all the juicy details, was look down at her.\n\nMadison moaned, openly, loudly, and hugged herself under her breasts as she started to shift back and forth across the rug from Othello's deep strokes of his cock. She smiled up at her, full lips a slightly brighter shade of dark compared to her very dark skin, with a hint of pink from her lipstick. Othello really knew how to pick them; girl was gorgeous.\n\n\"You... don't want to joint us?\" Madison said between pants.\n\n\"Sorry, got a boyfriend.\"\n\n\"Mister Mire, right. Shame.\" Madison said. \"Cause... you... you know... the...\" The girl's mouth opened, and her eyes closed as another long moan came out of her.\n\nOthello didn't need any more direction. He started to fuck her a little harder, a little faster, and Madison started to whimper with each stroke. One of her hands reached down for her clitoris again, and she started to massage the bud, the other hand reaching down lower to find her cunt, and slip some fingers into her. All while Othello fucked her ass.\n\nSo much stimulation, the girl didn't last. She managed two more minutes before she came, and both her hands left her pussy to come back to her body, to grip the furs around her as Othello sank his cock into her ass. A small splash of her juices hit the man in his lower abdomen, joined by a rather loud groan from the beautiful ghoul.\n\n\"S-Slow down,\" Madison said. The sound of a girl trying to talk mid orgasm was such a turn on.\n\n\"Don't stop Othello,\" Triss said. Girl was at that perfect spot for a sustained orgasm, whether she realized it or not. And making a girl cum harder when she was asking for a break? Hell, Triss had gone through that just a couple nights ago with Julias. Intense, seeing white spots and the whole body just starts to tremble and shake, toes curl, sparks of pleasure going through the limbs until your cunt's squeezing like a vise. And in Triss's case, squirting like a fountain.\n\nAnd Madison's too. Maybe not a fountain, but the girl was getting soaked nonetheless, and a tiny splash of her juices hit Othello's abdomen again. Othello continued to pump her through her orgasm, until Madison reached up to press against his stomach. Trying to stop him. Fucking god that was hot.\n\n\"W... wait...\" Another mewl, and her shortened breaths were reduced to nothing but pants. She kept pushing against Othello, but her hands were panicky, shaking, and doing nothing to actually stop the man from fucking her. And seeing her struggle to stop him, seeing her press her fingers to his abs, begging for him to cease, as she again leaked juices onto his body?\n\nGood god in heaven Triss needed to get a camera and do this professionally.\n\nEventually Othello slowed down. A couple of his own tiny groans marked his orgasm, and the two vampires traded smirks as the man held the girl's ass to his body until he was balls deep, pouring his cum inside her. Madison was spent, sweating and panting and hands limp on the furs, a mix of pleasure and exhaustion on her face.\n\n\"Not hungry?\" Triss said.\n\n\"Nah.\" Othello reached down, and scooped his ghoul back up into his arms as he sat down on his butt. The girl really was beat, and she set her chin on his shoulder with her arms hanging at her sides. \"Maybe tomorrow I'll drink her. Hey, you want I should wait tomorrow night for you? We can do this again, this was fun.\"\n\n\"Yeah, it was fun.\"\n\n\"And Madison really gets off when Kissed. Girl cums too easily.\"\n\nIf she'd been blushing life, she'd be blushing red. Girl got off easily, and so did Triss, from the same sort of stuff apparently. Certainly not a bad thing, and she was happy to hook up with a Kindred with a sex drive as large as Julias's so she could indulge. The thought of a romantic relationship with one of those Kindred that loses their sex drive? Ugh.\n\n\"Uh, don't wait up. But if I'm around... yeah, sure.\"\n\n\"Great.\" Othello's hands were drifting up and down the woman's back, massaging and caressing in that post-orgasm way that was ever so delightful when Julias did it to her. \"Didn't think you were into this so much. Kinda thought you were uptight.\"\n\n\"Uptight? Dude, just cause I don't bang everyone in sight doesn't mean I'm a prude. The fuck you think Julias and I are doing\u2014\"\n\nOthello put up a hand in surrender, and grinned at her over Madison's shoulder. \"Point taken.\" And, as he smiled at Triss, he put both his hands on Madison's hips, and started to gently shift her up and down. She still had her pelvis pointed toward him, still had his cock buried in her bountiful ass, and as the man's cum leaked out of her, he started to softly fuck her again.\n\nTriss had to give it to the man, he had the sexual stamina to match his sex drive. Surprising given his age of nearly a century. Supposedly, according to her elders, many Kindred stopped caring about sex so much when they approached that age. Course there were exceptions, like Othello and Julias and especially Antoinette. Made it hard to define Kindred so easily.\n\nOthello gave his ghoul a couple of rather seductive, almost endearing kisses on her ears and neck, before he set the quivering, whimpering woman on her back again, on the furs. Triss expected the man to go hard, to pound her, but Othello continued to surprise her as took Madison's arm, gently turned her onto her side, and then curled up behind her.\n\nHe spooned his ghoul, snug and comfortable in the rugs, and resumed gently fucking, hugging, and massaging. On his side with his head propped up on his palm, elbow to the rug, his other arm hugged around the girl's side, up her chest to her breasts, where he pinched and teased her swollen nipples. And he did it all while he slowly ground his hips toward her butt, staying inside her as he tenderly fucked her ass.\n\nPoor girl was still recovering, and she melted into the furs. Nothing but a big puddle of bliss and juices by that point, more moans escaping her as Othello leaned down to kiss her ear a few more times.\n\nOk, enough was enough. Triss managed a tiny, claw-wiggling wave, Othello returned it, and she stepped out of the cave.\n\nFinally, she was outside in the canyon, surrounded by jagged rocks, some dried bushes, and a hell of a climb. Easy for a vampire, but not so easy she could afford not concentrating.\n\nAnd concentrating was fucking hard. If she'd been blushing life, her jeans would have been soaked. She smirked as she considered the memory, telling Othello what to do, how it had all worked very well on the ghoul. She must have been a ghoul, and must have been in the cave before. But Triss had been trying to avoid looking into Othello's room too much, afraid she'd offend Julias; probably why she never noticed the beautiful woman.\n\nOk, Julias may have been fine with her watching all the sex happening in the Circle, but directing it may have been a bit much. She'd make it up to him, take them out for the night, find a nice woman they could trap and Kiss and do things to.\n\nBut for now, time to see Jack.\n\n~~~~~~~~~~~~~~~~~~~~~\n\nHer catacombs. Well, not really, not since joining the Circle. She rarely came here anymore, and every time she did, she almost felt guilty, like she'd moved on and left an ex-boyfriend behind. And to make matters worse, this time she brought a guest.\n\nNot Julias though. She'd feel extra extra guilty about violating her old lair if she'd done that. She brought Jack, Julias's childe. The thought made her snort on a chuckle; her step-childe if she married Julias. Marriage was very, very, very rarely something Kindred engaged in, for obvious reasons, and the image of her in a wedding dress \u2014 white of course \u2014 while Julias waited for her at the end of the isle, pulled more laughter out of her.\n\n\"What's so funny?\"\n\n\"Nothing nothing, just thinking dumb shit. So, metal enough for ya?\"\n\nJack smirked, and shined his light around at the skulls and bones. \"Yeah, I have to admit, this is pretty badass. I wouldn't sleep surrounded by bones or skulls mind you, Kindred or kine.\"\n\n\"Bah, and you say you like metal.\"\n\n\"I do! But I don't moshpit or grow my hair three feet long and helicopter.\"\n\nKid was just a kid. Still, kid had good taste.\n\n\"It goes deeper too, come on.\" She moved along through the tunnels, where skulls and various arm and leg bones were jammed tight along small alcoves. Nothing as grandiose or insane as the catacombs beneath Paris, but still plenty of bones, plenty of death, plenty of artistic value. There were coffins too, and they matched the darkness like pillows matching the blankets.\n\n\"You used to hang out here?\"\n\n\"Yeah. I did the stint in the abandoned tunnels, just the ones closest to topside, like the other Nosferatu hiding. And the Carthians have areas where Nosferatu can hang without kine stumbling in, seeing our fucked up shit. But I always liked it here more. Antisocial as all fuck.\" Once they reached the bottom chamber, she reached out to lightly drag her claws along the skulls, soft enough to avoid scratching the bone. \"You know how it can be when you're young.\"\n\n\"Yeah. I mean, I don't have crocodile teeth and snake eyes to deal with, but I went through rough times when I was embraced.\"\n\n\"Yeah. That news about someone named Pavala seemed odd; Julias told me about it later. Rough shit man, frenzy kill on your first night?\" she said. Jack winced with the name, but Beatrice shrugged and flicked at one of her teeth. Kid likely had people treating the topic with careful tongues, like he was fragile or something. She knew better. Being treated with sympathy got old quickly, and insulting soon after.\n\n\"Yeah. Snapped back to awareness on a fucking roof with a body and... had to figure out something. First fucking night as a vampire, no idea what was going on, no idea why blood was everywhere until I saw the fang marks. God that was... sickening.\" Kid squatted down by one of the lower shelves, and reached out to touch some of the skulls. \"Suppose that was nothing, compared to waking up with a crocodile mouth, or extra eyes on the face, or looking like a corpse.\"\n\nAh, corpse lady, his boss.\n\n\"Yeap. Lot of Nosferatu get pretty suicidal in the first few years. But like your boss has done, you can make the disfigurements a moot point. Who needs sex when you have the Kiss anyway?\" She did. She needed sex. But, especially for older Kindred, the Kiss was everything, and provided all the satisfaction and bliss one could ever need.\n\nHe raised his hand. \"I need sex.\"\n\nThey both laughed. God damn it, why hadn't she hung out with this kid more before? She liked Julias, and if Julias liked Jack enough to sire him, there was a good chance she'd like him too. Or hate him.\n\n\"Get laid much before Antoinette?\"\n\n\"Nope. She was my first.\"\n\nDamn she loved the kid's honesty. Dude said the truth like the idea of lying or twisting it never even dawned on him.\n\n\"First time you have sex is as a vampire. Not only as a vampire, but with the Prince of a huge city, with jugs that require custom-ordered bras to fit them. That is a strange bout of luck.\"\n\n\"Yeah I guess my experience is weird. That said, may have been my first time having sex, but I masturbated like... ten times a week for near a decade before then.\"",
        "Oh god. She fucking lost it, laughed until it filled the whole catacombs, and she had to sit down to keep from falling over. It was how the kid said it, like it was completely normal, like he was just sharing a fact, that had her almost doubled over.\n\n\"And you were friends with Julias before, for how long?\"\n\n\"Several years. He was involved in some of the contracts my firm was negotiating, and I was just an intern at the time. We started talking, and hit it off.\"\n\n\"Little kid like you talking to a big-n-bad-looking guy like Julias? Were you trying to get in with the mafia?\" Cause, no two ways of looking at it, Julias looked like a mobster with his slicked back blond hair and suits.\n\n\"A little? Really I was just curious. He looked like a powerful man, and had this air about him, of... confidence, but also... dunno. Just seemed like someone that, if I asked him a question, a good one, a smart one, I could expect a real answer from him.\"\n\nAh, the Julias effect. She knew it well. Man was good with his words, and unlike Antoinette, he seemed like someone you could talk to despite his obvious power and confidence. A classic leader of a sort. If only the others knew what he was like behind closed doors, sick of his Kindred life, depressed, attaching to kine to feed off their joy by proxy.\n\nAt least until they met each other. She smirked as she thought of the man, her stupid Superman, and what they did for each other, the changes they made for each other.\n\nAnd of course thinking of him made her think about having her hands pinned to her back while the man fucked her hard from behind. Not really the norm for them, but damn it'd been awesome.\n\n\"You don't have any electricity here,\" he said.\n\n\"Nah. Oh, fuck, good point. Let's go back to your place, I gotta recharge my laptop and phone and shit.\"\n\n\"Sure sure, invite yourself over.\"\n\nShe chuckled, got up, and got moving. \"I'll try out some of your bands I haven't heard yet, as payment.\"\n\n~~~~~~~~~~~~~~~~~~~\n\nA quick trip to the Circle to pick up her shit while Jack went home, and then she met him at his place.\n\n\"So,\" she said while plugging in her laptop, the two of them in his living room, \"what bands you think I haven't heard of? I've been into prog metal since before you were born, twerp.\"\n\n\"Yeah but you're a girl.\"\n\n\"... what the fuck, the fuck is that supposed to mean? You little\u2014\" She was ready to get up off his couch and teach the little fucker some manners, but Jack smirked at her, the way Julias did when he managed to catch her off guard. Oh, he was kidding. \"Not all girls listen to pop and shit you know.\" He better have been kidding.\n\n\"Yeah I know, sorry. My sister, god damn she listened to nothing but. If there was any more than fives notes to the melody, and god forbid more than four chords, she'd call it too boring and not catchy enough.\"\n\n\"Sure she's your sister?\"\n\n\"Yeah, looks like me and everything.\" He shrugged and got some blood from the fridge, and for her too. At least Julias had taught him some manners. The absurdity of her worrying about manners made her smirk as she took the drink. \"I could say the same thing about my whole family though. I was the apple that fell far from the tree.\"\n\n\"I get the impression Kindred often are.\" She nodded and took a sip. Cold blood had such a different taste and texture than warm blood, and she doubted she'd ever get used to it like the Invictus did. But it was fun to drink from a glass every once in a while. \"I\u2014\"\n\nJack's phone buzzed, and buzzed again as he took it out of his pocket. \"Julias.\"\n\n\"Better answer it.\"\n\nKid nodded and raised it to his ear. Started drifting around his apartment too; he was one of those types. \"Yello... really? You sure? ... shit, you really think she'll do that? I mean\u2014fuck, right... yeah... I don't know Julias, something else is going on. Like I told you, she said one of those kills wasn't hers. I'll... fine, I'll stay out of the way.\" With a frown almost comical, kid hung up and put the smartphone back in his pocket.\n\n\"Personal news? Or Invictus business?\"\n\nKid let out a long sigh and sat down across from her. No table between them anymore; her fault. \"Julias says more people have been reported missing from Devil's Corner.\"\n\n\"... shit.\"\n\n\"Yeah, they think it's Fiona.\" Jack frowned, grit his teeth hard enough she could hear it, and slowly shook his head. \"No blood or claw marks, but there's no ignoring the amount of disappearances. A few, in a week.\"\n\n\"That isn't good. Fuck that isn't good at all. You think\u2014\"\n\n\"Julias figures Antoinette's going to call a blood hunt on this girl if it really is all her.\"\n\nBeatrice winced and leaned back. A blood hunt meant all the Kindred would be duty-bound to kill whoever was targeted. Course that didn't mean they had to do it, but it was a good bet the Prince would harshly punish any who didn't do as the blood hunt demanded. And a blood hunt was not called lightly; Kindred rarely disagreed with one when it happened.\n\nLucas would have had a blood hunt declared on him, if it'd been possible politically, Garry told her. But when a Prince can point at a single individual, and blatantly declare they are a menace to the Masquerade with evidence to prove it, no one would dare ignore the call.\n\nWhich was a problem if the person wasn't actually to blame.\n\n\"You don't think it's her making the kills?\" she said.\n\n\"Do you?\"\n\n\"I... definitely not, not from the impression I got from her. Seemed nice, reasonable, intelligent. Seemed like she wanted to make the Prince happy, find a place to live here.\" Cause Dolareido was awesome. Shitty, and awesome. \"Guess Azamel was right. There's something else going on.\"\n\n\"I\u2014\" Knock knock. Jack reached up and started tearing out his non-existent hair. \"Might as well hang a sign on the door that says No Appointments Necessary.\" He got up and headed for the door, each step accompanied by Triss's laugh. People were showing up at his place a lot, and no one bothered with the stupid elevator when everyone visiting could bypass it easily.\n\n\"Who is it?\" she said.\n\n\"... fuck, it's Fiona and Damien.\"\n\nWell, fuck indeed.\n\n\"Hmm, ain't no blood hunt call yet. Your call.\"\n\nJack sighed, nodded to no one, and opened the door. \"Hello.\"\n\n\"Hi,\" Fiona said. \"Think we can come in?\"\n\n\"... sure.\" Jack stepped back, and motioned for them to step inside.\n\n\"I\u2014oh, Triss! Hi.\"\n\nThe Nosferatu smirked and nodded to the monster. Hard to imagine the girl going on a killing spree, slaughtering kine like they were going out of style.\n\nDamien came in behind her, and miserable thoughts dripped from him like black ink. The brooding sort no doubt, like Julias; after what happened to him, she couldn't blame him. Cute though, with the weird half-bald head look and shoulder-length dark hair.\n\n\"Damien,\" she said.\n\n\"... Beatrice,\" he said, some worry in his tone. Understandable, two of them barely ever said a thing to each other. First time she'd seen him was when she spied on him from the vents in Tony's old fortress. Third time, he was surrounded by ash, including that of his sire.\n\n\"Right horrible things are happening,\" Fiona said.\n\n\"Tell me about it.\" Jack leaned against the counter as he watched the two newcomers sit on the couches, Fiona next to Triss. \"Avery came by and told me about your run in with the wolves. Glad you two came out alright though.\"\n\n\"Mostly awright.\" Fiona gestured with her chin to Damien. \"Poor Damien got cut up a bit.\"\n\n\"That's of no consequence,\" the Mekhet said. \"The problem now is that the Uratha say Fiona is something called Azlu, and they're hunting her.\"\n\n\"It's nae true!\" Fiona bounced her legs and pounded her tiny fists against her knees. \"I... I'm nae that. Vrall remembers Azlu, and she's nae that.\"\n\nJack nodded, and with a few seconds of silence, came over to sit beside Damien. Uncomfortable, to be sure. \"... there are more disappearances in Devil's Corner.\"\n\n\"More?\" Damien said.\n\n\"Yeah. If things keep going this way, the Prince will call a blood hunt on Fiona.\"\n\n\"I'm being framed!\" Fiona threw her hands up and went sandbag on the couch. Triss struggled to keep from smiling, but the girl was too damn cute.\n\n\"You did kill twelve people before,\" Beatrice said.\n\n\"But nae thirteen! Or any more since the meeting. I'm starving. Vrall is starving. She's stomping around in the dream right now, and... I'm so hungry.\" She leaned onto Triss and set her cheek against the Nosferatu's arm. \"Wish I could just feed on blood like ye.\"\n\n\"We talked to Azamel,\" Triss said. \"She wants to talk to you. Might be able to help you out with the hunger thing.\"\n\n\"You talked to Azamel?\" Damien looked at the two of them like they'd grown extra heads. \"Why?\"\n\n\"Figured she knows what's going on more than we do.\" What, did he think he was alone in helping Fiona? If that was true, he wouldn't have come here. \"Says there are spider things where you like to hunt, girl. Says something's there taking advantage of the situation.\"\n\n\"I knew it, I am being framed.\" She got up and started to stomp around, face scrunched up like a squirrel. \"We need to clear my name! Let's go to the tunnels.\"\n\nJack put up his hands. \"Whoa, Uratha specifically said don't go there. And if I go there, they will be pissed as fuck.\"\n\nTriss nodded. \"Kid's got a point. They come to him to be their ambassador or whatever. He should stay out of this... How about that Natasha girl, Jack? You know she's probably working on this issue same as we are.\"\n\n\"Yeah, probably. Hold on.\" He took out his phone again and called her; actual calling instead of texting. Good to see kids these days still knew how to do that. \"... no answer.\"\n\n\"Phone off?\" Triss said.\n\n\"Natasha? Not a chance.\" Jack got up, started to pace, and folded his arms across his chest before stroking his chin. Kid probably had no idea how much he looked like Julias right there. A few flurry taps of his fingers and he'd sent the woman a text no doubt. And then another, and another. \"Should I contact Jessy?\"\n\nShe shrugged. \"You think Jessy will know where she is?\"\n\n\"Jessy and her have a buddy system. But... I... I don't think we should contact her.\"\n\n\"Why not?\"\n\n\"Cause Jessy is as volatile as these wolves. If there's confusion about Fiona and this Azlu thing, and if Natasha is in anyway involved, she'll only make things worse.\"\n\nYeah, that was very possible. Beatrice could still remember the chaos that had started in the tunnels last time with Jessy and Natasha, when they dealt with Damien, Triss hiding in the vents. \"Maybe Julias?\"\n\n\"He'll be mad we talked to Azamel, and will probably lock me up... and lock you up too.\"\n\n\"Ha, true that.\" Beatrice smirked as they went through their list of options. Not many, but far more than their two buds had. Well, bud. She didn't know what to think of Damien, but Fiona seemed to trust him.\n\nGod damn it was too easy to trust Fiona. Girl next door with just a hint of party vibe.\n\n\"She probably went to investigate the tunnels beneath Devil's Corner.\" Damien sighed and let his head hang as he leaned forward to rest his elbows on his knees. \"... wasn't there a table here before?\"\n\nBeatrice shook her head. \"You're imagining things. So you think Tash went to investigate in the tunnels?\"\n\nThe priest boy nodded. \"I've seen her socializing with two of the Uratha. I'm guessing she saw an opportunity to prevent this matter from escalating. Or at least discover the truth of the matter, as the Prince has no doubt tasked her.\"\n\n\"Where did you see her hanging out with Uratha?\"\n\n\"... in her apartment.\"\n\nThe Nosferatu raised a brow and leaned in to look closer at the man. \"You were at her apartment?\"\n\n\"No.\"\n\n\"Then how do you know?\"\n\nDamien squirmed, and she leaned in harder, like putting weight on a rat. The man did have a certain sneakiness to him, an element of guilt hidden behind a calm face. She knew his type, spy types who could look you in the eye and lie, the sort that cracked when you put them under some pressure.\n\n\"... I've been in this city a long time, Triss. I observe everyone, all the time. It's how I stayed alive, and how I know things.\"\n\nFucking Mekhet.\n\n\"Spying on people?\" she said.\n\n\"We all spy\u2014\"\n\n\"Until Lucas came back, the amount of spying had been steadily decreasing.\" She gnashed her teeth a few times, just enough to make Damien wince and lean back away from her, like she was going to bite him. Tempted. \"Way I hear it from Garry and Jacob, back in the day shit in Dolareido was a nightmare when Lucas was around, people spying on each other constantly, killing each other when someone let their guard down. You really are a relic from that age. Let it go.\"\n\nThat's what bothered her about him, that's what got under her skin. The man was still treating everything like back then, like the days Garry used to warn her about, tell her scary stories about. Much as the Invictus and the Carthians still got into fights and tussles with each other, sometimes broke a few bones or burned a house or two, the killing was pretty much a thing of the past. Things were good now in Dolareido, except for this dick bringing it all back.\n\nShe liked that she could go visit the Carthians again whenever she wanted, Garry's temperament aside. She liked that she could date Julias despite him being in a different covenant, and they didn't have to deal with any Romeo and Juliet bullshit. She liked that the worse she had to worry about was pissing Jacob off. Course none of that was entirely, perfectly true, but true enough.\n\n\"... I am trying to\u2014\"\n\nJack put up his hand with a frown and shook his head. \"Come on Triss, you don't know all the details about him or his circumstance. Believe me, things are different.\"\n\nShe frowned but shrugged and looked at Fiona. Girl was smiling at Damien and then her; probably wanted the two of them to be friends. Fat chance, she never got along with Mekhet. \"Fine, my bad. So, what're we gonna do?\"\n\n\"... I'm worried about Natasha.\" Jack sighed and held out his hands in front of him, palm up, like weighing his thoughts on a scale. \"On one hand, we really should just stay out of the tunnels and let the werewolves do their thing; don't want a repeat of the last time Avery came to Dolareido. On the other hand, they might come topside thinking Fiona is this Azlu, and hunt her up here. And Nathasha might be down in the tunnels needing our help. And if we can prove Fiona isn't this Azlu thing the wolves are hunting, then all the better.\" With each option listed, the hand on the right went further and further down. \"... guess we should go to the tunnels. Fuck me we are so going to die.\"\n\n\"Perhaps today is a good day to die,\" Triss said as she got up.\n\nDamien rose as well, and he blinked at her several times. \"Oglala Lakota, American settlers history?\"\n\nShe blinked at him just as many times. \"Dude, Star Trek.\"\n\nCourse, Jack laughed, little asshole. \"You watch Star Trek?\"\n\n\"Fuck no, but I had TV growing up you know. That shit was everywhere.\" Guess Damien didn't have that luxury. Poor guy.\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nIf there was one way he was going to die, it'd be with a Scooby-Doo gang, going on a really stupid mission.\n\nHe could turn around, go back to Antoinette, slip under the blankets with her and spend the whole night having sex. A smile found him as his mind wandered. He'd be on his back, and Antoinette would be on her side beside him, pressing her breasts into his neck and chin, his mouth, letting him suckle on her beautiful perfect nipples while she stroked his cock. The softness of her bosom against his lips, and her perfect grip teasing the length of his member. Or maybe she'd have the ghouls over? She'd still be lying on her side, letting him kiss and lick her nipples, but instead of her hand, it'd be Ashley on her elbows and knees between his legs, giving him a blowjob in that super enthusiastic way she had. And maybe after a little encouragement, Julee would lean in from his other side, and start kissing on the head of his cock with Ashley. The two would switch between kissing each other, and kissing his glans, all while Antoinette would tease his stomach with her fingernails. And when he eventually came, the two girls would take turns suckling on the tip while the other would kiss and lick his length, and\u2014\n\n\"Jack.\"\n\n\"Wha\u2014yeah?\"\n\nDamien frowned at him. Apparently he'd snapped his fingers in Jack's face at least once, given the position and shape of his hand. \"Pay attention.\"\n\n\"Yeah, sorry.\" But no, none of that, no super awesome sex with his love and her pets. Instead he'd decided to go on a suicide mission, cause he was dumb like that.\n\nHe looked at his companions. The assassin priest who was trying to find a new lease on life. The badass vampire chick with the scary teeth. The young girl with the monster inside her. And him, the little guy. Well, Fiona was smaller than him, but not by much.\n\nThe four of them walked along through the tunnel, disguised under Damien's cloak of night, a step up from Beatrice's. It was enough so he felt comfortable whispering, even as the tunnels grew darker.\n\n\"You hide down under Ronder Street a lot, Fiona?\" he said.\n\nShe shrugged and shook her head. \"I cut through it sometimes, but I don't hang out there. I have a few places where I can tunnel into my lair, and I aft place webbing in those spots.\"\n\nThe dream, tunneling into it, entering it like it was somewhere you could walk, somewhere you could set your feet down and touch it. He couldn't imagine it, couldn't\u2014\n\n\"Aye, he felt the same way,\" she said.\n\n\"Eh?\"\n\n\"It's written on yer face, same way it was Damien when I told him where he was. Had to prove he was in a nightmare.\"\n\nHe shivered and rubbed his arms. \"So not even a dream, but a nightmare! Christ, I can remember the nightmares I had when I was younger, after staying up late to watch a scary movie. Things with hands grabbing you from under the bed.\"\n\nShe smiled, almost crooned, and stepped in closer to him to touch her shoulder to his, similar as their height was. \"Us Eshmaki love to do that.\"\n\n\"... you... you uh... actually do that?\"\n\n\"Me, nae. Well, maybe? I could learn. I'm new to this, and I can tell Vrall isn't, and there's a weird back and forth where she hits me with some memories, shows me how to catch flies in my web. Hiding in the dark, waiting for a body to trip along the webs, and then drag them into the darkness?\" Her turn to shiver, though from what he could see, she was smiling. \"Makes me feel... whole.\"\n\n\"That is a very strange thing to say about... well, all that,\" he said. Beatrice looked over her shoulder at him and smirked at him the same way Fiona did. The two of them had a monstrous side they could both probably bond over, though Triss was a menace to society when she was in a bad mood, and Fiona seemed too nice for that. Hell, Fiona seemed too nice for everything she was describing, like this whole nightmare monster horror thing inside her wasn't real.\n\nIt was, he'd seen it, but to call it a nightmare?\n\n\"I\u2014whoa.\" Triss stopped, and turned on her flashlight. The tunnels ahead had gone black, completely black. But they weren't near Ronder Street yet. Hell they had a good while to go.\n\nAnd worse, there were spiderwebs around. Large ones, a few feet tall or wide, splattered along various parts of the concave walls and ceilings.\n\n\"I didnae make these!\" Fiona jogged over to them and reached out. Just like regular spiderwebs, they stuck to her fingers and wrapped them as she ran her fingers through them; more like purposefully destroyed them. She frowned with each one, stomping her feet as she moved back and forth between walls, swiping off the webs and jumping up to try and reach the spiderwebs above, and failing horribly. \"These are... these are strange.\"\n\n\"Weird how?\" Jack said.",
        "\"I dinnae ken, they're just strange. I can feel a strange... weird... I dinnae ken. It's strange. Sort of reminds me of those werewolves. Feels... sort of like that.\" After she'd accumulated enough webbing on her hands, she rolled it up into a ball and dropped it. How she managed to get it to obey her commands like that and not stick to her anymore, Jack could only guess was because of her spider horror.\n\nDamien looked down at the odd ball of webbing, grimace on his face, sword in his left hand and pistol in his right. \"So, unless an army of huge spiders has been down here, there is indeed some sort of spider creature, something the Uratha are hunting.\"\n\n\"Framed. Totally being framed.\" She stomped around, destroyed a few more webs, and a few more, and started moving further ahead as she did. But the webs were becoming more and more numerous, along with bigger and bigger. Girl had no choice but to give up after a while. \"Arr, I'm hungry.\"\n\nStrange direction for her to brain to go. Strange, and scary. Started giving Jack images of her turning into a giant spider monster right in front of them, ready to devour. But she'd said her horror feasted on punishing abusive people; closest thing they had to that in their group was Triss, and she really wasn't that sort of person. Fiona had no one to feed on.\n\n\"Azamel might be able to help with that,\" he said. \"Maybe we should go talk to her?\"\n\n\"Later. Let's go find this thing. Let's go kill this thing!\" Fiona air boxed a few times, wiping off her lip with her thumb after every two punches. \"Then we can aw be friends. I saw some of them werewolf boys, damn they were cute!\"\n\nJack blinked at her, and looked at Damien and Beatrice. They both shrugged.\n\n\"Natasha,\" Damien said, \"has been getting quite friendly with the two I mentioned. Friendlier than I suspect she realizes.\"\n\n\"Hope she bags one of them.\" Fiona chuckled and came back to stand between the group as they walked along. \"The tiny lass hooking up with one of those huge beasts? Hot.\" She hugged herself and spun around a few times. \"Nothing like fitting in the arms of a man so much bigger than ye. Triss knows! Julias is a big guy.\"\n\n\"You know, I could take offense to this.\" Jack frowned, but it was hard to keep frowning with the silly girl twirling around in front of them. Didn't she realize how dangerous the situation they were in was?\n\nTriss laughed and gave Fiona a shove of the shoulder. \"She does have a point though. Julias holding me in bed, and I can fit into the nook of his arm, snug against his chest. Makes a heart melt.\"\n\nFiona squealed and shook her hands like she'd been electrocuted. Damien shushed her, but she frowned at him and shoved him before turning back to Jack. \"Well ye got a different thing going! Some girls want to have a man's arms wrapped around them. Some girls want to pin their man down and spoil him, getting on top for lots of tit action. Sound familiar?\"\n\n\"... aren't you and I the same age? You can't pull this 'I'm so wise' angle with me.\"\n\n\"Aye, I can. I'm a lass, and we're smarter than wee jimmies.\" She giggled as she got in his face, and giggled all the more when he shoved her. \"Am I wrong?\"\n\n\"I'll have you know sometimes I do do the... what, 'alpha' male thing.\" He quoted the word alpha, and combined it with the most painful sneer he could muster for such an idiotic term. \"I\u2014wait, why are we talking about this?\"\n\n\"Cause Fiona has sex on the mind,\" Triss said, laughing as she shone the light around. \"Maybe these scary life threatening situations really turn her on? Like taking a girl out to see a scary movie, gets the adrenaline going, stimulates. Fine line between fear and arousal.\"\n\n\"Ha, maybe!\" Fiona started walking beside Triss again, so close they were almost touching shoulders, like they were best friends or close sisters or something.\n\nAnd Triss put out her arm to set it on the small woman's shoulders. So buddy buddy. \"Welp, vamps need to blush life in order to get physically stimulated. So be aware of that before you go trying to seduce any Kindred. We can just go nope, and not blush life.\"\n\n\"Ye telling me if I go to Damien 'ere, priest boy in desperate need of a sex life, and\u2014\" Fiona reached out for his hand, grabbed it while Damien raised a brow, and pressed it against her leather jacket, against her breast. \"Ye telling me I cannae get him hard?\"\n\nJack facepalmed. This girl was his age? Simultaneously much more immature than him, and yet sexually confident. Definitely his sister.\n\nDamien rolled his eyes and pulled his hand away. \"Kindred are, ultimately, walking corpses.\"\n\n\"Lot of sexual attraction and activity going around for a bunch of corpses,\" she said.\n\nYeah, that was true. Triss nodded too, no doubt thinking what Jack was already thinking. Old Kindred were boring, but young Kindred were sex obsessed. How Antoinette had remained such a lover of the physical for so long, he could only guess.\n\n\"You know we're in a dangerous situation,\" Jack said. \"Think you can take this seriously for a minute Fiona?\"\n\n\"Fine.\" Frowning until her nose scrunched up, she started walking again, and the four of them fell into a tiny formation with only a few feet between each of them.\n\nMaybe that's who he was in this Scooby-Doo gang: the voice of reason. Or he was just being Ventrue about it and thinking too highly of himself.\n\nA few more minutes of walking and silence, and the four of them came to a stop. Up ahead, in the darkness, someone was sitting against the concrete wall, someone bleeding. The smell of blood had no where to go in the tunnel, and it spiced the air enough for all three vampires to smell it. Triss took a large sniff, and the two men did in follow, as they approached the woman sitting.\n\n\"... Athalia.\" Jack ran over to her, and shined the light up and down her body. Woman was alive, awake, and frowning at him as she struggled to breathe deep. Her right shoulder was hanging out of its socket, but her flesh seemed intact; at least until he looked at her opposite leg. Blood.\n\n\"Fuck. Better you than the creature I guess.\" She shrugged her good shoulder and coughed. \"God... fucking damn it. You, Fiona right? Get over here.\"\n\nFiona squeaked, and jumped over to join her fellow Begotten. \"Who are you?\"\n\n\"Athalia. Look, just pop my shoulder in and carry me out of here. We got to get back to Azamel before that thing finds a way over here.\"\n\nJack and Triss looked at each other with raised brow, but Damien walked over to Athalia, put one hand against her collar, other hand around the wrist of her bad shoulder, and yanked forward. Not a pleasant sound, and neither was the grunt.\n\n\"... thanks.\" She frowned at him, and looked back to Fiona, as if Damien hadn't just popped her arm back into its socket. Woman really didn't like Kindred.\n\n\"What happened?\" Damien said.\n\n\"Ran into that fucking spider monster everyone seems so fucking obsessed with. Natasha and a couple of her wolf friends were down here looking for it when I ran into them. Fucking creature surprised us.\"\n\nStrange to hear a Begotten use the word monster like that, made Jack smirk. Smirk quickly vanished as he processed the words.\n\n\"W-Wait,\" he said. \"Natasha and the two Uratha. What happened?\"\n\n\"I just fucking told you. Fiona, help me up, leg is broken. Been down here for what, twenty-four hours, and I can't get back to my lair from here.\"\n\n\"Oh, ye have a lair? Can I see it? I\u2014\"\n\nJack stepped between the two Begotten, and frowned down at the woman. \"Details. What happened? Where are they? Why are you injured? Explain.\"\n\n\"Like I\u2014\" Athalia went silent as she looked up, and found four people looking down at her, frowning. Even Fiona, comical as it was. \"... fine. The creature had set up a trap; probably to catch some lone werewolves and kill them. Guess it worked. Couple miles down the tunnel from here, the webbing got crazy big and thick, and me, the vamp, and two dogs were talking when the spider thing pulled the trap. Made the tunnel collapse. Barely got out of there, but I can't get any further with this leg.\"\n\n\"The tunnel... collapsed on her?\" Damien said.\n\n\"I don't know. When thousands of pounds of concrete are falling on your head, you bolt. Not like I was going to stay behind for them.\" The woman shrugged her good shoulder and shook her head. \"You going to help me or not?\"\n\nDamien got down on a knee and examined the woman's leg. He lifted it a little, and Athalia's groans of pain confirmed. \"Broken.\"\n\n\"Like I said.\"\n\nIt'd take a young Kindred some time to heal a broken leg; big bones took time. Older Kindred could do it quickly, but Jack certainly couldn't, not without someone pouring gallons of fresh blood down his throat. How fast would a Begotten heal?\n\n\"... Damien, can you set the leg?\" he said. Man seemed knowledgeable of injuries, at least enough to know what to do for a dislocated arm.\n\n\"Her break is severe but simple. I can enough so that she'll heal... assuming Begotten heal better than kine.\"\n\n\"Do it.\"\n\nAthalia glared daggers into the Mekhet, but they closed as a scream tore through her when Damien yanked on her leg. Jack would have to ask him where he learned to do stuff like that sometime.\n\n\"Fiona,\" Jack said, \"can you make her a bandage of some sort? With your webbing? \"\n\n\"Aye, that I can.\" She got down on her knees next to Athalia, and with her palms, started covering her leg in webbing. It just came out of her, out of some invisible hint of her horror showing through, something in her hands they couldn't see.\n\n\"Creating... webbing... like this?\" Athalia said, and she stared as Fiona wrapped her leg up where her femur had been broken. Pain blatant on her face, but it didn't stop her from staring at the girl's work. \"That's not normal.\"\n\n\"It's nae?\"\n\n\"No. You're summoning the horror's physical form in a very subtle, controlled way, with a persistent effect. That takes... that takes skill.\"\n\n\"Cannae take the credit then. Vrall showed me how to do this.\"\n\n\"Vrall?\"\n\n\"My horror.\" Fiona nodded and continued wrapping away, until the top half of Athalia's leg looked like it was legit wearing a real cast. \"She's... arr, she's hungry.\"\n\n\"Then let's go talk to Azamel, and we can show you how to feed without attracting so much attention. Before more shit like this happens, or before some fucking hunters or heroes show up.\"\n\nEvery word this Athalia spoke was angry. Venom dripped from her tongue and teeth. Every time she looked at him, he thought she was going to bite and kill him. Jack eyed her closely as she struggled to stand until Fiona helped her, half convinced the woman was going to attack them with how she glared.\n\nHe understood the risk of hunters. But heroes? What?\n\n\"I cannae leave yet! I have to find this thing. And... and ye said it killed Natasha?\"\n\n\"Didn't say that. That's probably what happened though.\"\n\nFiona frowned at her fellow Begotten, and started walking down the tunnel toward their supposed cave in. \"Come on then, let's go find Tasha.\"\n\nEveryone smirked. It was too damn easy to like her.\n\nAthalia stared at them, somehow summoning even more malice into her gaze. What kind of monster was she, what sort of abilities, what crazy horror could she summon? Summon was the wrong word, more like, embodied, or simply was. Not so easy to like her.\n\nThe woman sighed and started limping along back the way they'd come, hand out to the wall and hopping a foot at a time on her good leg. No doubt it'd be a really rough walk out of the tunnel, especially considering she'd been down here a day. Jack felt a little sad about leaving her to tend to herself, but only a little. Woman was mean.\n\nThe gang didn't have to go far to run into the larger webs. In fact, far as Jack could see, they shouldn't have run into webs so soon, but within fifteen minutes they found the larger webs, strings thick as a finger, some as thick as a wrist, and a lot of them. No one had to say anything, and when Jack looked at the others, the two other Kindred looked around, at each other, then him with knowing. Would they get crushed in a trap too?\n\nFiona stomped her foot, and glared at the webs. She pointed her hands up, and unleashed the monster. Just like before, for a flash moment, long, enormous spider legs that looked almost like swords shot out from the air around her, attached to a blur of mass. The three vampires jumped away as the little monster started to dismantle the webbing around them, each stab of her spider legs severing webbing from the walls, cutting it with the grace of a scalpel.\n\n\"I'm nae stupid,\" she said. \"Nae gonna let the same thing happen to us. And this is personal. This thing used me to hide its tracts, it framed me!\"\n\n\"Azamel did say they were sneaky.\" Triss nodded and came in a little closer. Dangerous getting near the woman as she walked, each step met with a stab outward from one of the huge, phantom limbs. But Fiona kept them from hitting her easily; hell, her precision with them was awe inspiring. And as everyone grew a little more comfortable with Fiona's plan, they all started walking along while the spider monster undid the work of the other spider monster.\n\nWhen did his life become about monsters? He kind of preferred it when it was politics and money and territory. Now he was underground in a tunnel with a monster that seemed only interested in death, and also with a monster that was intent on clearing her name. Next, there'd be gigantic wolf monsters causing chaos and making a bad thing worse.\n\nYou did not just jinx it, Jack.\n\nBeatrice and Jack kept their flashlights out, though as they got deeper into the tunnel, Jack also withdrew his pistol. A machine pistol, since the Invictus had updated the threat level of the city with the arrival of the Uratha. He'd never fired it before outside of a few training sessions, but he was confident; Kindred strength made dealing with recoil manageable. Damien had his sword in one hand, pistol in the other, same make. Triss seemed comfortable with her bare hands, but she was a Nosferatu, and their insane strength justified it.\n\nFiona was the unknown quantity. How would she fight? What could she do? She had the weird spider limbs that stabbed like swords, and the ability to create spiderwebs, but was that it? Did she have other abilities? What happened if she took a bullet in the brain; Kindred would survive that, but would she? Learning on the field was not the Ventrue's preferred method.\n\n\"These webs are... strong.\" Fiona stomped her feet a few times, frustrated, and cut some of the larger webs they came across with a little more impact, a little less subtlety. \"I wonder if I can kick its ass, spider to spider.\"\n\n\"If this thing is as dangerous as Athalia says, as the Uratha think,\" Damien said, \"we should focus on finding Natasha and getting out of here.\"\n\nTriss laughed and shook her head. \"Yeah but do you think it'll go like that? I mean, that's what I'd prefer too, hopefully prove Fiona's innocence in the process, but we're walking into this thing's world, its tunnels now. I'm guessing it's going on the defensive, and it's apparently smart enough to lay traps. Like a fucking spider.\" She laughed some more, then shivered as she tapped a claw against her crocodile teeth. \"Keep cutting those webs though, and...\"\n\nEveryone went silent as they came upon a hanging cocoon. No denying what it was, given the shape and size: a person. Fiona sighed and cut the thread hanging it, and knelt down over the body.\n\n\"It even feeds sort of like I do.\" Her spider limbs struck out to split open the cocoon, and everyone groaned as the body inside showed itself. A corpse, with a withered face, dry of fluids.\n\n\"Looks like a mummy,\" Triss said.\n\n\"The mummification process does include using salt to dry the ins and outs of the dead.\" Damien knelt down beside Fiona, and leaned over the face of the corpse. \"But, this one is... still quite wet on the skin, and the skin doesn't show any serious discoloration. This corpse is fresh, maybe a few hours old.\"\n\nJack took a step back, and pointed his light around along with his pistol. \"I... I guess it got cocky after dealing with Natasha and her two friends. Decided to start feeding. Julias sent me a message saying there were more disappearances. This must be why.\" He left out asking why they thought it was a good idea to come down here. Complaining was only soothing for so long.\n\n\"Let's keep going. But let's be quiet from here on out.\" Damien took a long, unneeded breath, and started marching once again. With the cloak of night to protect them, they were safe... probably. The man was good, very good at hiding, and Jack was confident the Mekhet could keep them hidden.\n\nBut then, Natasha was his equal in that regard he figured. And she'd been discovered. She would have used a flashlight at this point, like them, and the cloak of night wasn't going to cover a beam of light. But if this monster was just a mindless monster, it wouldn't have launched a trap against some light with no source. Maybe it could see through the cloak?\n\nJack ran the possibilities through his head, analyzed them, even as the group walked through the webbing into the awaiting death tunnel. He had to plan this out, know what to do when shit hit the fan as it inevitably would.\n\nBut no plan was coming to mind, just regrets. Should have got Jessy, should have got someone. They were walking into black, just pure shadow, with dozens of feet of rock over their heads that was apparently collapsible by spider trap. One wrong step and they were going to be crushed, or trapped and left to wither over centuries.\n\nA quiet rumbling sound started to fill the tunnel, like a distant train; no way a train was still running down here though. And in the endless dark, it almost seemed like the tunnel was breathing, the small rumbling sound the voice of the dying underpass, insides invaded by some arachnid. The webbing was thicker, and it crossed their paths with vines strong enough to strangle. Another body too, a smaller one, a decoration hung to adorn the spider's new home. And the deeper they went, the more the tunnel grumbled its discontent, until the grumbling sounded like rolling rocks.\n\nThe tearing sound of rubble crumbling and smacking into metal and concrete forced their little gang to creep along as best they could without touching anymore of the webbing. If it was ahead, they had no choice but to keep going; no branches in the tunnel yet, just a single path into the awaiting maw of darkness. He really, really didn't want to. Fuck he didn't want to. More sounds, growls and snarls, and rocks falling and cracking. A lot of rocks, being moved by a lot of hands. Spider legs? They couldn't see anything yet, and as they crept along they had to point their lights down at their feet to do their best at remaining invisible.\n\nBut when they rounded a sharp turn, it all fell apart.\n\nEleven men and women stood before a giant pile of rubble. The wall of debris, broken rock and metal and concrete reached all the way to the ceiling of the tunnel. No getting around it, over it, nothing. The eleven people were huge, utterly huge, seven feet tall on average, with muscles bulging through their shirts, and an unusual amount of hair coming off of them, their necks and arms.\n\nThey had a couple LED lanterns sitting around along the edges of the tunnel, and had cleared the area of the spiderwebs with all grace and care of raging animals.\n\nHe recognized some of them. Clara, Avery, Stephanie, David and his twitching. They were all bigger, like they'd gone halfway to werewolf mode.\n\nThey all turned around, and looked at the gang.\n\n\"... you have got to be shitting me. Get the fuck out here whoever you are.\" Avery took a few steps toward them, and Clara followed after her. The others snarled a few times, but got back to digging. \"Turn off that cloak of night shit before I make you.\"",
        "Damien looked at Jack. Not sure why he was looking to him, but Jack sighed and nodded. They couldn't sneak up on a werewolf, not one as strong as Avery anyway.\n\nThe four of them stepped out around the curve of the tunnel as Damien turned off the cloak, leaving them exposed. Fiona stood beside Beatrice, and glowered at the glaring Uratha, like she'd been personally slighted.\n\n\"... I suppose this is the Azlu,\" Avery said, eying Fiona with the same sort of expression Fiona was giving her.\n\nFiona, tiny before the grown Uratha \u2014 unusually tiny considering all the werewolves looked to have grown a foot in height \u2014 stood her ground, and marched up to Avery. Right up to her, glared at her, and frowned a frown so adorable it was enough to make Avery smile. Too damn easy to like her, even for the werewolf pack's alpha.\n\n\"And if I am?\"\n\n\"I know you're not.\" Avery shrugged, and motioned around them. \"Sorry about the rest of my pack, none of them have ever been near an Azlu before; other hosts sure, but not Azlu. They don't know how it feels, or the scents to smell for. Plus,\" Avery gestured to the tunnel the gang had passed through, \"by the point they're harvesting kills, Azlu no longer look human.\"\n\n\"So...\" Jack walked up to stand beside his friend, and tilted his head to the side to look up at Avery. \"So you made a mistake?\"\n\n\"Yeah, we did.\" Avery nodded, and gestured to her fellow wolves. \"Not that it would have mattered if you and your friends would have listened and stayed out of the way.\"\n\nJack looked back at Damien and Beatrice, and they frowned with the same thoughts. The wolves were ok with killing an innocent when on their warpath. \n\nNot good enough. \n\n\"And?\" Jack said. \"What, you would have killed Fiona, chalked it up to an accident when you realized she wasn't your prey, and continued your hunt?\"\n\nAvery nodded, even as Clara beside her grimaced.\n\n\"Exactly. The hosts need to die, Kindred. I don't expect you to understand, just like I didn't expect that Begotten back there to understand.\" Avery gestured back to the tunnel, talking about Athalia. \"If that means some people get caught in the middle, that's a risk I'm willing to take.\"\n\nWhat a bitch.\n\n\"You can't seriously\u2014\"\n\n\"Look, Jack,\" Clara said, \"you should get out of here. We're trying to find our two missing, we know they're down here. But we can smell the Azlu, and it's going to rip you guys to bits. Leave and get somewhere safe. We won't hunt Fiona.\"\n\nJack sighed as he looked Clara in the eye. At least they knew now that the wolves weren't going to hunt Fiona anymore. Fuck, if they'd just let Avery see her earlier, the whole situation could have been avoided.\n\n\"But Natasha's down here too,\" he said. Maybe he shouldn't have said it, with the hard glares the wolves gave him. They were pushing their luck, not listening, arguing.\n\nAvery shrugged with all the compassion of a brick. \"Yeah well, if\u2014\"\n\nEveryone went silent as they turned to look back the way the gang had come from.\n\nAthalia came running, or stumbling very quickly, each step carving agony into her face with a knife, but not enough to stop her from driving forward toward them. \"It's coming!\"\n\nAnd that was it. That was all anyone needed to hear to react. All the hate and rage and building aggression snapped like a guitar string tuned too tight, complete with the crack that cut skin.\n\nThe three vampires and the two monsters stepped aside as all eleven werewolves marched toward the tunnel, from where Athalia had been running. And as they marched, the beasts in them emerged. Jack's jaw dropped and his body froze as the already unusually enlarged Uratha enlarged once again, getting taller, thicker, muscles threatening to burst through their attire; instead, fur overtook their clothes, and it vanished into their bodies. But no amount of fur could hide the almost grotesque size of their muscles, their power, their weight.\n\nThe pack of werewolves stepped forward, standing upright despite their titanic size. With their mutant wolf heads, Jack couldn't help but picture the werewolves moving on all fours, but they walked upright, and their hands and feet weren't paws, but monstrous appendages with claws, claws that scraped and scratched the metal and concrete underneath them through sheer weight and sharpness.\n\nHoly fuck.\n\nFiona and Damien grimaced as they stared at the passing titans; they'd seen them before, but Jack hadn't, and neither had Beatrice. Jack's mouth was still open, and when he looked her way, hers was too, exposing all her extra teeth and wide snake eyes. No wonder people were afraid of these things, they were just like the beasts of legend, the giant wolf monsters that devoured and destroyed, unstoppable juggernauts. Mindless animals.\n\nOne of them wasn't transformed though. Still in his unusually enlarged human body, but at least still human looking. He came over to them, several huge duffel bags hanging from his also huge shoulders.\n\n\"... I remember you,\" Jack said. Saw him with the rest of the pack when he first met Avery.\n\n\"Surprised. Name's Mason.\" The big guy smirked, and set the bags down. After unzipping them, he started setting aside the contents. Bottles with rags in their tops, and some sort of large gun... with a canister attached to its underside.\n\nThe three Kindred stepped away.\n\n\"Molotovs?\" Beatrice said. \"And... a fucking flamethrower.\"\n\n\"Told you Kindred to stay out of this. Don't blame us if you get set on fire.\" The man shrugged, and pulled out a lighter. \"But you're here now, stuck. Stay back here. Maybe try tearing down this wall while we're busy? Who knows, your friend might still be alive if she was down here with Art and Matt.\"\n\nThe gang was literally stuck between a rock and a hard place.\n\nAthalia reached them at last, though the werewolves each gave her long, hard glares as she limped by, and more than a few snarls and half-roar half-barks. But eventually she got to her fellow Begotten, and she collapsed against the wall again, enough hate painted on her face to kill anyone stupid enough to touch her. Jack was half tempted to ask why she was so angry all the time. Not the time, definitely not the time.\n\nCaught himself before putting his foot in his mouth. What do ya know, growth.\n\n\"Ye saw it?\" Fiona said, getting down on a knee beside Athalia.\n\n\"Yeah, giant spider monster, just like these bastard dogs said.\" She spat on the ground and cradled her bad shoulder with her good hand. \"Must have been down here for months, hiding.\"\n\n\"So... what do we do?\"\n\n\"We get out of here and back to Azamel when we can, before these idiot beasts get us all killed.\"\n\nMason didn't like that. He turned to look at the sitting woman, and offered her a scowel. \"You really have a stick up your ass, you know that? Just shut up, sit down, and wait.\" Another snarl later, Mason walked off to join his fellow wolves.\n\nLeaving the five of them sitting there, in front of a giant wall of rubble, while eleven werewolves disappeared around the tunnel turns.\n\n\"I... guess we get digging?\" Jack said.\n\nTriss, laughing and shrugging, approached the wall of debris and started sliding down rocks. Damien and Jack watched on while Fiona chatted with Athalia about being Begotten, until the Nosferatu stopped and looked at them.\n\n\"... what the fuck, why am I the only one working?\"\n\nJack put up a hand. \"I'm a Ventrue, I'm a talker, not a doer.\"\n\nDamien put up a hand. \"I'm a Mekhet, delicate hands.\"\n\nDidn't expect Damien to make a joke, and Jack found himself laughing despite the scenario, despite everything. Even Triss laughed, and laughed as she walked closer, and put her hands on their shoulders. Then she squeezed, and everyone stopped laughing as she threw the two of them at the rubble.\n\n\"Fine!\" Groaning and whining, Jack gave Athalia his spare flashlight, put his gun away, and got digging. Ventrue were hard to kill, sturdy, good at using the power of the blood to become almost invincible. They weren't good at lifting heavy objects.\n\nFor just a moment, he forgot there was a giant spider monster behind them, and a bunch of werewolves between it and them. But then the sounds started. Shrieking. One time he looked up a video of what it sounds like when a fox cries; a bone-shrilling sound. It was sort of like that, louder, heavier, enough that it almost shook the walls with the curdling screams.\n\nEveryone got digging except Athalia. The only one with the strength to make any real progress was Triss, and she lifted rocks easily a hundred pounds and rolled them away. Tossed a few of the bigger rocks when she managed to get her claws on them, hard enough so they cracked or broke on contact. More than once or twice, Fiona stopped to watch Triss pick up things that were as likely as heavy as Fiona herself, nearly as heavy as Jack, only for Triss to chuck them away ten or twenty feet.\n\n\"What?\" Beatrice said. \"Your Vrall horror thing can't lift heavier? Seemed like it could.\"\n\n\"Maybe, but... picking up rocks like that is... nae exactly how she\u2014how I'd do it. She'd use webbing, from above, likely.\"\n\n\"Yeah?\"\n\n\"Mhmm. She's done things like in her jungle lair.\"\n\n\"Jungle lair?\"\n\n\"Aye! There's this jungle with two moons. It's dark there, the canopy is thick, and there are many dead there, from well before I became Vrall.\"\n\n\"Two moons?\"\n\nJack raised a brow, and looked Triss up and down. She kept asking Fiona questions, and Fiona kept answering them, talking about her dream world, her scary lair, how she met Damien there as Vrallar'trakla of the Eight Blade Arach, whatever that was. She went on about feeding, biting to eat but needing to punish abusive people to get sustenance from it, about how she used to have dreams about being devoured by darkness, by things in the shadows with webs and fangs. Went on about what it was like being devoured in her own nightmare, accepting it, and waking up as this horror, this nightmare incarnate. Her true self.\n\nWith every sentence, Triss nodded along, asked a few more questions, and tossed a few more rocks. Seemed to be how she liked to work, talking like this. Jack could never do that. Jack wanted silence, or music, but Triss seemed to enjoy the conversation. Which of course meant Fiona was excited to talk; just like Mary would have been.\n\nHe smiled. Triss probably would have liked Mary, which was a very very weird thing to imagine. But there it was in front of him, the badass and once quite the surly woman, chatting \u2014 mostly listening \u2014 to Fiona talk, and enjoying it.\n\nJack looked Athalia's way. She had a brow raised as she listened. Probably because they were talking like nothing was wrong despite death coming down the tunnel.\n\n\"Your horror,\" Athalia said, \"came with a name?\"\n\nOr maybe not.\n\n\"Aye. I guess that's nae normal for Begotten is it?\" Fiona stopped putting down rocks long enough to wipe some sweat from her brow and smile at the woman with the web-wrapped leg. \"I\u2014\"\n\nAnother howl ripped through the tunnel, and everyone looked back toward the darkness. Mason had brought his two lanterns with him, but the light wasn't rounding the bend of the tunnel where the wolves went. The Uratha were still out there then, a ways off, doing whatever it was they were doing. Every so often another roar filled the tunnel, distant but loud nonetheless, and Jack shivered as the strange animal sound filled his core.\n\nMaybe that's what Triss was doing, just keeping Fiona's mind off of the terror behind them. Keeping all their minds off the madness happening behind them. Sounded like the sort of thing a Carthian would do; Invictus would just say 'shut up and do it.'\n\n\"Careful,\" Damien said as he climbed a few feet of the sloping hill of rubble. \"The ceiling of this tunnel is a mess. More than the concrete caved in, but much of the earth as well.\"\n\n\"Think Natasha survived?\" Jack said. Dumb question. Foot in mouth again, damn it.\n\nDamien sighed, and made a tiny wince as he started pulling down some of the smaller rocks from the top. \"I have no idea. I hope so.\"\n\n\"... you do seem to care about her.\" He climbed up to join Damien closer to the top of the rubble, just a few extra feet off the ground, so they could start moving more of the higher rubble down to the bottom.\n\n\"Is that strange?\"\n\n\"Yeah, it kind of is, considering what happened.\"\n\nDamien stopped digging long enough to glare at him. \"You still doubt me?\"\n\n\"No, no, you've proved you're not the man I thought you were.\" Jack shrugged and pulled down a rock, a big one, one Damien had to help him with. Perfectly timed to be nicely symbiotic; on purpose of course. \"Just, you two seem to have this weird relationship. The way you glance at each other every so often, makes me think you're old friends who had a falling out, you know? Sort of trying to ignore how much you hurt each other in the past.\"\n\n\"You... may have a point, Jack.\" Another wince from the assassin before he grabbed another rock. \"I owe her an apology, but I can't seem\u2014\"\n\n\"Oh for the love of god!\" Athalia threw up her good arm, eyebrows furrowed and dripping of more of that hate she seemed to carry around in infinite supply. \"You understand the precarious situation we're in? Stop gossiping, stop chatting, stop acting like a bunch of children, and do something!\"\n\nThe four of them stopped digging, and stared at the woman. But, after a while, Triss started laughing, then Fiona, and everyone started digging again. Jack had half expected Beatrice to throw a rock at her, but the Nosferatu was smiling bigger than any of them; mostly because she had a crocodile mouth that could fit an unusually large smile.\n\n\"Let me have a go at something. Everybody get back.\" Fiona put up her hands and motioned for the gang to step away. Once the three Kindred were behind, the little redhead motioned them even further back, until they were maybe fifteen feet away and spread out toward the walls.\n\nThen the legs came out. Fiona pointed her hands at the rock wall, and eight of her enormous spider legs shot out from the air behind her. More than just her legs. Lit by their flashlights, the horror inside the little girl showed itself as it... she stood behind and over Fiona, her immense legs striking out against the rock while she hovered. Jack could see where the legs connected this time, the body they were connected to, and his jaw dropped as he stared at the spider goddess Vrallar'trakla.\n\nGoddess was the better word, now that he could see it. Her. She was wearing a dress of what looked like spider silk, dangling loose like a sash that hugged her curvy figure. Her very curvy figure, with a waist inhumanly tiny, but arms and legs of normal proportion. No feet, instead her legs came to sharp points an extra foot below where her feet should have been. No eyes, but giant horns that pulled back to join more horns that curved back from her skull. Her fingers and thumbs were three giant claws, and her skin was the color of dark steel. \n\nThe Begotten's horror's legs each stabbed at the wall, but also the ceiling above it, and stabbed, and stabbed, each leg sinking into rock and rubble. When they pulled away and stabbed again, webbing was left behind. Two webs began to form, one attaching a multitude of rocks together at the rubble while simultaneously pulling it down every so often, the other web covering the ceiling like a net. With speed and accuracy, Vrall reinforced the rock above them, web growing out and attaching to strong points along the ceiling to keep in the looser points, while she also pulled down the wall of rubble blocking their path.\n\n\"In her lair, she isn't separate from the horror's body,\" Damien said, stepping over a couple times to stand beside Jack. \"Truly terrifying.\"\n\nTruly terrifying indeed, but oddly attractive. Something about the way her human-like body held the silk dress, the way her tiny, ridiculously tiny waist accented the hips and other curves. Jack always was kind of into monster girls \u2014 too much internet \u2014 and he couldn't help but stare at the lovely monster before him. He'd half expected her to have the big abdomen of a spider, but she didn't, her human half was more like some sort of ancient demon woman, who happened to have eight gigantic spider legs jutting out of her back.\n\nThis was the thing he felt from Fiona whenever he was near her, this ancient, deadly goddess creature. Didn't seem like Fiona at all, like it matched her at all, and yet there it was.\n\nWith a hard tug Vrall yanked down a bunch of the wall, and everyone jumped back as the shattering concrete spread out around the tunnel. Athalia sighed and shook her head.\n\n\"You'll bring the whole wall down on us,\" she said. \"Be careful.\"\n\nFiona nodded and resumed, more webbing, more layers, more nets above to try and reinforce what was probably a lost cause. But something was better than nothing, and if Vrall's webs could keep the tunnel from falling down on their heads, Jack was all the happier to let her do the work.\n\nMore roars filled the tunnel behind them, closer this time. He could hear the shattering of a bottle, and an ear-piercing shriek to follow. Molotovs. What would happen if one of those things hit an Uratha? For a Kindred it'd be instant death. Maybe an elder Gangrel or Ventrue could summon the defensive reflex of vitae to deal with it, but even in that circumstance, being lit on fire was usually guaranteed death. For him, or Triss or Damien? No chance, they'd be ash.\n\nMore roars came closer. Jack looked behind him, along with Damien, and the two stared at the curve in the tunnel where the werewolves had disappeared, where Athalia had said the monster was. They could hear it now, not just its shrieks, but the stab of its feet against the ground, each making a weird scraping sound like nails scratching concrete or metal.\n\n\"Um... I think they're coming this way,\" he said.\n\nDamien nodded \"Plan?\"\n\nJack sighed, gulped, and took a deep breath. He'd never get over that reflex, none of them would apparently. With a sigh, he drew his large knife and pistol. Damien did the same, sword and pistol, and the two of them waited for the oncoming chaos.\n\n\"Um... can ye hear something?\" Fiona said, still working at the wall.\n\n\"Can hear a lot of things right now.\" Triss walked over to stand by the boys, off to the side though with her back to the tunnel against the inside of the turn. Maybe she'd try and leap out to attack whatever this thing was that was fighting off eleven titans and fire. Yeah, right.\n\n\"I mean, I think... I think there's something digging from the other side! Maybe it's Natasha, or her two friends?\" Fiona dug faster, more webbing coming out and yanking down the rubble wall as the spider goddess stabbed into the rock faster and faster.\n\nJack stepped back to get closer to Fiona, and peered at the rubble as Fiona peeled off the layers. \"... yeah I can hear it too.\" Scraping, claws maybe? Someone was on the other side for sure at least, someone strong enough to move rocks. Natasha did come down here with two werewolves, and Natasha was a Kindred herself; even Mekhet were far stronger than any normal human, strong enough to move some rocks. It could be her.\n\nMore rocks fell away, and more, until a small opening was created at the top. Fiona focused on that area, a host of webbing netting together against the rock and dragging it down together like a fishing net. And as the roars and tearing sounds from behind grew closer, she worked faster, getting clumsy and yanking down a lot of rocks at once.\n\n\"Ok, that's enough.\" Damien climbed up the rubble and stood before the dip in the pile where there was room enough for him to go through it, just below the ceiling. He didn't though, thank god; man wasn't a total idiot. He did peer through the darkness though, and tapped on the rocks a few times with his sword. \"Hello? Natasha?\"\n\nNo answer.\n\nDamien held out his hand, Triss gave Jack her spare flashlight, and Jack climbed up to join the man before giving it to him. Still no answer, and as Damien shined his light into the black, both Kindred squinted their eyes to see what lay beyond.",
        "Just more rubble and darkness. Then what was making that clawing sound?\n\nA rock jumped from the rubble, a large one, one both Kindred had been leaning against. The giant mass catapulted outward from the pile, knocking both vampires down. Jack tried to stay upright and see what was happening, but all he could feel was the shattering of a few teeth as the rock collided with his jaw. He screamed on the way down, and gasped as the slab of earth cracked and fell apart a foot beyond his head.\n\nToo fucking close.\n\nGroaning, struggling to push himself back to his knees, he rolled over and clutched his mouth in his hand. God, his teeth, his fucking teeth. Some of them were cracked open, and the pain throbbed through his skull like fire. When he was alive, a love of candy had lead to an abscessed tooth, and the pain it had caused him was incapacitating, as if someone had poured acid into his skull.\n\nBut now he was Kindred, and those nerve endings didn't have the same sensitivity if he wasn't blushing life. And yet, he still fell over and clutched his head; felt like a pipe bomb had gone off between his temples. Every drop of vitae he had to spare went into his head to repair the damage, even as his ears picked up the sounds of falling rocks and a crumbling wall. Even as he heard the screeching of something breaking through the hole they'd made.\n\nHe looked left and right. The spare flashlight was broken, only the one Athalia had worked; at least she was pointing it at them and the tunnel at large. But her jaw had dropped, the same way Jack's had before.\n\nShit.\n\nJack looked up, and felt his body petrify. You'd think after a certain point, he'd be saturated on shock, unable to be surprised anymore by the grotesque or strange or unusual. But the spider monster before him proved otherwise as it forced its massive body against the hole, and through it, screaming at him with a mutant face of arachnid and human. Like someone had begun merging or transforming a human into a spider, but stopped halfway through, with a weird mess of multiple eyes and spider fangs sticking out of human mouth trying to fit too many objects.\n\nIts arms clawed at the rock, ripped and tore through it like curved blades carving striations through concrete; it had no hands, just bone blade things coming from overly muscled forearms. Its waist was connected to some sort of enormous spider body, and the colossal creature struggled to force its hairy, long, gross legs through the hole they'd made. Like watching a spider force its way out of a dug hole too small for its body. Not far from the truth.\n\nJack managed a glance to the other side and saw Damien, standing there giving the same look as everyone else. He looked the other way, and sure enough Fiona was doing the same thing. Only Triss managed to react.\n\nShe threw herself at it.\n\nSeeing a normal sized person land onto the spider's huge, hairy abdomen put the creature's size into a new perspective. Might as well have been a mouse trying to fight a house cat.\n\nBut Triss had arms and claws, and she used them to climb the beast's spider body with zero care that her claws were cutting, digging, and ripping it open. Small as she was compared to it, it must have felt like ant bites to the enormous arachnid, and ant bites hurt. The monster spun around again and again, faster, screeching until Jack covered his ears as he stumbled away.\n\n\"Someone get the fucking dogs!\" Triss said as she held onto the creature. Like riding a bull, except the bull was the size of an elephant, and as it crashed around inside what was ultimately a tunnel barely big enough to hold its size when it stood up, its many legs and weapon arms destroyed everything around it.\n\nA staccato cascade of harsh, loud snaps, along with a string of bright flashing lights snapped Jack's attention like lightning. Gunfire. Damien had his sword in his left hand, his gun in his right, and he was holding down the trigger, full auto. The recoil kept controlled by Kindred strength meant the man had little issue hitting his target, and a splattering of red and black liquids washed over the debris around them. Warm, and Jack threw himself back as more of its blood splashed against his face and body.\n\nNot enough room. The thing was too huge, far too fast for its size, and its spider legs sliced into concrete as it thrashed, body hitting the walls again and again and again. It wasn't stopping, even as Damien's bullets peppered its exoskeleton. From the thunk sound Jack managed to catch between the loud pops of the gun, it didn't sound like the bullets were getting deep, despite the host of blood they unleashed. If anything, each bullet made the creature louder and angrier, until Triss's legs were being tossed into the air; only her claw grip sunk into its back where human and spider merged kept her from being tossed.\n\nRock and a hard place wasn't a good enough metaphor. Maybe between two monsters? Two nightmares? Jack managed a stupid, reality-defying smile for a split moment as he held down the trigger of his gun. Monsters and nightmares. Not even a year ago and he thought his sister was stupid for still being afraid to close her eyes when showering, afraid of ghosts or evil little girls standing outside the curtain to get her.\n\nHis bullets went everywhere, many missing and striking the walls as much as the creature, and he cursed as he walked backward from it. Practice went out the window the moment rubber hit the road. But each moment alive was a moment to aim better, and he grit his teeth as he tightened the ring onto the giant spider monster. Not easy to hit a big target when walking backwards along rubble and tracks and when the damn thing refuses to stop trying to kill everything around it.\n\nIt came at him, like a scorpion with its pincers. It wasn't going to pinch him though, it was going to slice him in half with one of those bone arms, and Jack threw himself to the side as the arm came down hard enough to sink half a foot into the tunnel floor. Fool him once, he wasn't getting cleaved like that again.\n\nThere were still sounds coming from behind him, and they were getting closer, more roars, more monster screams that sounded all too similar to the ones in front of him. More howls, and some whines you might hear if you kicked a dog, a really really big dog. He winced with each one, but he kept getting closer to them as he got up, only to throw himself back again as the monster brought its other hand down at him. And the other again, and again. Jack kept jumping back to avoid the claw coming down inches in front of him, but one jump too many meant his heel landed on a bit of rock the wrong way.\n\nThe world pulled out from under him like a rug as he fell onto his back. Everything flipped, and he was staring at the ceiling, more pain cutting through his skull. Biting down on half-regrown teeth was bad enough, but hitting his head against the metal underneath him hard enough to shake his brain in its bed was icing on misery cake. He tried to get up, to reorient himself before the creature brought its hand down to cut him in half, but feedback rippled through his limbs like tingling waves that held them still. He'd hit his head hard.\n\nThe creature was over him, screaming down at him with both hands brought to the air. Blood poured out of its human half, dripping off its waist and down onto the spider hairs of its underbelly, and onto Jack as the creature overstepped. Soon Jack was underneath it, and the world went crazy. The creature turned around again, reacting to more gunfire, and all Jack could see was the hard shadows of the light against the spider's body.\n\nBut he was underneath it, and he'd seen enough movies to know what to do. He yanked out his knife, and jammed it upward.\n\nLike trying to cut through leather. Only his Kindred strength let him push the blade past the spider's exoskeleton, and even then only a couple inches in, enough to unleash a flood of black liquid onto his hands and chest. Sickly warm, and it did not smell like blood.\n\nThe gunfire stopped. Damien cursed and threw his gun aside before taking his sword into both hands. No more bullets probably, and Jack had heard him reload at least twice. The little Ventrue could see the man approach him, and the colossus turned to meet him. The Mehket became a blur of speed, and Jack had to squint his eyes to see the man move outward along the walls to try and catch the rampaging creature from the side.\n\nNo good. It turned to meet Damien's speed, and stabbed outward with one of its spider legs into Damien's oncoming body, its own speed a blur, like a samurai drawing his blade in attack. Momentum, combined with the spider's strike, forced the creature's limb through Damien's stomach. And out his back.\n\nA second of silence hit them all as Damien dropped his sword, and looked down at the enormous limb. It wasn't a tiny sword or bullet hole piercing him, but a spider monster's leg, half a foot thick. And when the spider yanked the limb free, the dried insides of Kindred fell around Damien. Everyone stared at the massive hole in his stomach that shown clear through him, before the man fell over, and the bits and pieces of him that fell out of his insides faded to ash."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "horror",
        "monster",
        "paranormal romance",
        "slow",
        "squirting",
        "vampire",
        "vampire romance",
        "violence",
        "voyeur"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-03-ch-12"
}