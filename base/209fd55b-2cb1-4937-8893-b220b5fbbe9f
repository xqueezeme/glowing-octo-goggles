{
    "title": "The Seven Day Orgasm - Day 04",
    "pages": [
        "NOTE: This story is part four of an ongoing series. Though each chapter stands alone, please check out part one to get the full experience.\n\n###\n\nShe woke with a start. It was morning. Saturday. Her body was covered in sweat, and the echoes of a very erotic dream slowly faded from the corners of her consciousness. Normally she slept in a set of frumpy pajamas, but last night she couldn't help but sleep naked. The process was beginning to sexualize her in ways she never imagined possible.\n\nNext to her, she saw her husband still asleep on his back, also naked. She could just make out the outline of his erection beneath the thin white sheets that covered the bed. A hunger grew inside of her, and though she wanted nothing more than to sit alternately on his face and his cock until she came with wild abandon, she was willing to settle for any contact just to push back her growing carnal need.\n\n###\n\nHe work with a start. It was morning. Saturday. Beneath the thin white sheet of their bed, his wife's head hovered over his midsection, her lips wrapped around his rigid cock.\n\n\"Hello,\" he said, throwing back the sheet. She made eye contact with him but didn't stop her work as she bobbed her head up and down with hunger and intensity.\n\nAfter a minute she came up for air, a thin line of saliva and pre-cum connecting her bottom lip to the tip of his erection.\n\n\"I need to do this,\" she panted.\n\n\"I won't stop you,\" he replied as she dived back in. Her enthusiasm, her passion, her NEED, quickly brought him to the edge.\n\n\"I'm going to cum,\" he told her, his typical warning so that she could switch to jerking him off as he came. This time she did nothing of the sort. As the jets of sperm erupted from his cock she took the entire length of him in her mouth and held it there, her lips pressed against his pubic bone.\n\nShe swallowed noisily, made eye contact with him as he came back down to earth, and slowly pulled her lips back up the length of his member until his head popped out of her mouth.\n\n\"Thank you,\" she admitted bashfully, and got out of bed to take a cold shower.\n\n###\n\nThat night she could barely contain herself. The clock read 8:30. She realized that she was literally counting the minutes. Across the room, he read a novel, seemingly oblivious to her mental state and the proximity to their next encounter.\n\nShe sighed audibly and took a sip of her tea. 8:33. \n\nShe picked up a crossword puzzle and worked on it for what felt like an hour. 8:38.\n\n\"I'm going in the bedroom,\" she announced to him at 8:40. \"I'll see you at nine.\"\n\nOnce in the bedroom she stripped off every stitch of clothing and lay on the bed. She remembered two nights before, lying tied to that same bed after he was done teasing her. He had left her like that for twenty minutes after their session to recuperate, so she resolved to meditate in the same position until he came to her.\n\nShe stretched her arms and legs out to the four corners of the bed and closed her eyes. Taking deep, measured breaths, she felt the tingling arousal creep across her body. Her mind raced with images of her fellating him that morning, masturbating for him, being teased with the brushes, and being edged by the pearl thong.\n\n\"Eager, are we?\" he asked.\n\nShe opened her eyes to see him standing in the doorway. The time on the clock read 9:00.\n\n\"We're not going to have you like that tonight,\" he said. She sat up and swiveled so that she was kneeling on the bed, facing him.\n\n\"How do you want me?\" she asked.\n\n\"Tonight I want you on all fours,\" he replied. \"Ass in the air. Head on the bed. Back arched.\"\n\nShe did as instructed, turning so her back was to him and bending over until the side of her face rested on their comforter. Spreading her legs and arching her back, she put her ass and pussy on display. The thought of how lewdly she was presenting herself to him sent a chill down her spine, and she marinated in the erotic abandon of it.\n\nThe bed creaked as he maneuvered onto it. She could see out of the corner of her eye that he was holding two things. The first was a short yet plump metal butt plug. The other was a Hitachi magic wand vibrator. He took the butt plug in one hand and put it up to her face.\n\n\"Give this the same attention you gave me this morning,\" he instructed.\n\nShe eagerly wrapped her lips around the plug, taking it inside of her mouth.\n\n\"Get it nice and wet,\" he said, and she did, slobbering all over it to get it lubricated.\n\n\"Ok that's enough,\" he said, pulling it out. \"Spread your legs wider and use your hands to spread your ass cheeks.\"\n\nThis kind of raw sexuality on display was never a part of their lives prior to this week. He had never talked to her like that before, and she had never imagined it would so arouse her to be talked to like that. \n\nKeeping her face on the comforter she positioned her legs farther apart and took one of her ass cheeks in each hand, holding them apart.\n\nHe took the butt plug, further lubed it with coconut oil from his night table, and pressed the cool metal to her pink rosebud. She felt the pressure, followed by the inevitable surrender of her muscle as her asshole expanded and the plug began to slip inside. He made sure that it slowly slid in, the metal stretching her as it went.\n\nThey had tried anal before, though not in years, and she had never truly enjoyed it. But in her rampant state, she found the intrusion of the plug to be not just pleasurable but arguably better than she remembered anything feeling in her pussy. She moaned softly as the plug continued it's advance, stretching her further with each passing inch.\n\nShe finally engulfed the thickest part of the plug, and her anus constricted around the thinner portion near the base. He removed his hand, and the plug remained trapped inside of her.\n\n\"You can let go of your ass cheeks now,\" he said as he took out his phone. She did so, and he turned the phone so she could see. The timer was set for thirty minutes, and it began to count backward.\n\n\"Tonight I'm going to work you over with this vibrator,\" he stated, showing her the Hitachi. As he spoke, he turned the thing on its lowest setting, and the room filled with the buzz of the motor. He moved it to her ass and lowered it until it touched the base of the butt plug.\n\nShe felt the vibrations at her core and moaned loudly as the sensation filled her ass, arcs of energy passing through layers of her flesh, humming their way to her untouched clit, which quivered in anticipation. A droplet of lubrication slid from her soaked pussy and came to rest on her vulnerable nub.\n\n\"Here's how it's going to work,\" he began, keeping the Hitachi buzzing against the butt plug as he spoke. \"I'm going to use this vibrator on your clit. When you are about to orgasm, you're going to tell me, and I'll give you a one minute break with the vibrator pressed against this butt plug. After the minute is up, I put it back on your clit and the process begins again. Are we clear?\"\n\n\"Yessss,\" she hissed, lost in the throes of the sensation radiating from her ass.\n\n\"Ok then,\" he concluded. \"Let's begin.\"\n\nHe moved the vibrator from her asshole.\n\nThe clock read 28:37.\n\nAnd then everything around her exploded.\n\nStill on the lowest setting, he pressed the Hitachi against her clit. It was the single most intense sensation she had ever felt. The vibrating pearls from last night were a whisper of a breeze compared to the Hitachi's hurricane. This was an assault of pure pleasure. She cried out, the cry quickly turning to a moan and finally a grunt as the Hitachi mercilessly buzzed against her delicate pearl.\n\n\"Okay, okay, I'm close!\" she cried.\n\nHe kept the vibrator where it was.\n\n\"I said I'm close!\" she begged.\n\nThe sensation shifted as he moved it from her clit to her asshole.\n\nShe looked at the timer and her eyes went wide. 27:31. It had only taken a minute to get to the edge. At that rate...\n\nHer attempt at mathematics drifted from her mind. Even though the Hitachi was no longer on her clit, the pulses of sensation still arced through her body via the butt plug, and though it wasn't enough to keep her at the edge or bring her over, it was enough to keep her mind swimming in pleasure.\n\nSoon, too soon, she felt him remove the vibrator from the butt plug. The clock read 26:30. She wasn't sure she could handle this.\n\nAnd then the world exploded again. This time, she was already in a swirl of pleasure and within seconds she found herself dancing with an impending orgasm.\n\n\"Hold it in,\" he told her. \"You can do it.\"\n\nShe bit her lip and squeezed her eyes shut. She reached out with her hands and grabbed a fistful of the comforter, clenching it in a death grip. Anything to not cum.\n\nThe Hitachi was absolutely overwhelming, and she felt her juices flowing openly from her pussy onto the head of the vibrating invader.\n\n\"I can't hold it, I'm close,\" she whined. And he moved the vibrator back to her ass.\n\n26:00 on the clock. She had only lasted thirty seconds.\n\nShe gasped for breath, and settled in to enjoy the manageable pleasure of the vibrations that buzzed through her ass from the inside out.\n\nAt 25:10, she actually dreaded the transition to her clit that was about to happen. She steeled her nerves, took deep, calming breaths, and released her hands from the comforter to rest them for the ordeal to come.\n\nAgain the vibrator left her ass and returned to her clit. This time she didn't cry out. She arched her back further and pressed into the Hitachi. She again squeezed her eyes shut and clenched the comforter. Instead of biting her lip, she bit down on the comforter. The vibrations assaulted every corner of her consciousness, but she held firm, swimming in maddening pleasure, and did her best to fight off the orgasm.\n\n\"I'm close, I'm close,\" she panted between rapid breaths.\n\n24:15. She lasted fifteen seconds longer than last time. A smile crossed her face and she settled in for the minute of anal play, enjoying how the vibrations buzzed the sphincter muscle that held the plug in place.\n\n\"Enough with the lowest setting,\" he said, knowing that she likely forgot that little detail. \"Let's raise the strength a few notches.\"\n\nHer eyes went wide in realization and a moment later the buzzing grew louder. The gentle relaxation of the anal stimulation morphed into a sensation so pleasurable that it kept her at the edge of orgasm rather than giving her a chance to recover.\n\nWhen he switched back to her clit, she only lasted thirty seconds, and nearly passed out in the process. A tear crept from the corner of her eye.\n\nAnd so he continued to work, mercilessly switching between edging her clit and then having her ride the edge by stimulating her ass. She fought a good fight, manipulating every physical trick she could to keep her orgasm at bay, but over time the Hitachi wore through all of them.\n\nBy the fifteen minute mark, she was lasting ten seconds before reaching the edge.\n\nWith ten minutes remaining, she was a quivering mess, crying out with desperation as she edged.\n\nWhen the clock struck five minutes she was hysterical, mewling and whimpering in pleasure while the vibrator stimulated her ass; growling in feral desperation when he switched to her clit.\n\nAs the clock struck 3:00, he barely brushed the vibrator against her clit before she pleaded he return it to her ass.\n\nThis time on her ass, however, things were different. She rode the edge of orgasm hard, sparks showering through her consciousness, searing pangs of joy arcing in her brain. But she could feel herself tipping. The vibration was so intense that it was starting to make her orgasm.\n\n\"Stop, stop!\" she cried out in terror as the brewing orgasm cascaded around her.\n\nThe vibration disappeared entirely.\n\n\"I can't take anymore,\" she whimpered into the silence as the orgasm retreated. \"I want to cum more than anything.\"\n\n\"It's ok, baby,\" he cooed. \"I'll go easy on you. Lay down.\"\n\nThe sound of the vibration returned and she flinched, though she could tell it was back on the lower setting. She slumped forward on the bed, exhausted, her ass still slightly raised off the mattress but her body otherwise splayed in reckless abandon.\n\nHe pressed the Hitachi against the butt plug and she re-entered her pleasurable trance, though at the lower setting it only kept her reliably near the edge of orgasm.\n\nFinally, mercifully, the timer reached zero. He withdrew the vibrator and turned it off. As he did so, she exhaled deeply and passed out, her arms and legs akimbo.\n\nHe cupped the base of the butt plug to take it out, but she groaned unconsciously in protest at the sensation, so he left it inside of her, took some of the pillows, and went out to the couch.\n\nIt was a good day."
    ],
    "authorname": "Racontica",
    "tags": [
        "anal",
        "butt plug",
        "denial",
        "edging",
        "hitachi",
        "magic wand",
        "orgasm denial",
        "orgasm game",
        "teasing",
        "vibrator"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-seven-day-orgasm-day-04"
}