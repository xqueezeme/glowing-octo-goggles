{
    "title": "Kissing Cathy Ch. 07",
    "pages": [
        "Cathy, Mike and Carl had just had a good BBQ and were relaxing on the back deck after their first threesome together.\n\n\"I have a question for you guys about your sex life but I don't want to seem too nosey,\" Carl said.\n\nCathy giggled. \"After what we just did together and what we know we're going to do for the rest of the week, I don't think you could ask anything that seems nosey. I've asked you some questions about your sex life and I'm going to ask more. So, what would you like to know?\" Cathy said.\n\n\"Okay, that's fair. Well,\" Carl hesitated for a moment then continued, \"Are you guys into anal much?\"\n\n\"Sometimes but usually only after we've been drinking,\" Cathy said. \"Why? Are you into it?\"\n\n\"Well, when I saw you stroking your dildo as though it was your dick, the first thing that popped into my mind wasn't sucking on it.\"\n\n\"Was your first thought that I would want to fuck you in the ass with it?\"\n\n\"Yes.\"\n\nCathy had thought of that, also, and the thought excited her. She would like to pump her strap on in Mike's ass but she wanted him to ask for it first. Now Carl was asking and she liked where this was going. \"Would you like me to? Have you ever had a dildo, or a dick, in your ass before?\" she asked.\n\n\"I've never had anything like that in my ass,\" Carl replied, \"but I've been with some women who stuck their finger inside me and that felt good.\"\n\n\"Are you ready for something bigger and better? Would you like me to bend you over and slide my cock up your ass?\" Cathy asked almost breathlessly.\n\n\"To paraphrase what you said earlier, you can stick your dick in my ass if I can put mine in yours,\" Carl replied smiling.\n\nCathy kept a straight face as she got up and walked into the house leaving Carl bewildered.\n\n\"Oh crap,\" he said to Mike. \"I hope I didn't upset her. And I hope that you're not pissed at me for wanting to do her in the ass.\"\n\n\"She'll let you know if she's upset,\" Mike said. \"And no, I'm not pissed that you want to dick her in the ass. She's a beautiful sensuous woman and we all plan on having lots of wild sex together this week but if you want something out of the ordinary, you may have to ask. Cathy has no problem asking, you shouldn't, either. The worst that can happen is she'll say no. Don't worry, I'm sure she still wants you to fuck her tits.\"\n\n\"Well, I'm glad of that,\" Carl said.\n\nCathy reappeared a few moments later carrying a tray that had three beers, three shot glasses and a bottle of whiskey on it. \"Like I said, we usually only do anal after we've been drinking,\" she said as she set the tray down on the table and sat down again. \"How does shots and beer sound to you guys?\"\n\n\"Fantastic,\" Carl said as his dick began to pulsate with thoughts of what was going to happen.\n\n\"Oh yeah,\" said Mike.\n\nCathy handed out the beer and filled the shot glasses. \"I propose a toast. Mike, you had better listen to the toast before you drink. Here's to those of us who want a nice hard cock up our ass.\"\n\nCathy picked up her glass and held it out towards the guys. Carl was shaking slightly with nervousness and excitement as he picked up his glass and held to towards Cathy. Mike thought for a moment and decided that he wasn't ready for that yet but was looking forward to watching Cathy and Carl take each other's ass. He shook his head. That surprised Carl, he just figured that Mike had already taken Cathy's dick up his ass.\n\n\"Okay,\" said Cathy. \"This one is just for us, Carl. Cheers.\" She clinked her glass against Carl's and they both downed their shot and had a swig of beer.\n\n\"I can't wait to see my dick slide in and out of your sweet ass,\" Cathy said as she refilled the two shot glasses. \"Mike, will you masturbate for me when I take Carl's ass? That would be a double turn on for me.\"\n\nMike smiled. \"Of course I'll be stroking my dick while watching you. And speaking of double turn ons, how would you like it inside you when Carl's cock is in your ass?\"\n\n\"I like that idea,\" Cathy said as she picked up her shot glass and held it out towards the guys. \"Here's to having lots of great orgasms all week.\"\n\n\"I'll drink to that,\" Mike said as he picked up his shot of whiskey and held it towards Cathy.\n\n\"I'll second that,\" Carl said as he lifted his shot. The three of them clinked glasses, downed the contents and had another swig of beer.\n\nCarl felt the alcohol go to his brain. His mood was beginning to relax but his cock still pulsated in his shorts. \"Mike, you've never had Cathy's dick in your ass?\" he blurted.\n\n\"No,\" Mike replied. Now he was a little embarrassed. \"Cathy's dick is new addition to our sex life and that subject hasn't come up. It's crossed my mind, of course, but I'm not sure how I feel about it. But I have had my fingers and my lips wrapped around her cock, though.\" He turned towards Cathy; \"You do like it when I jerk you off and suck your dick, don't you? I love the look on your face as your hard cock slides in and out of my mouth.\" Mike's embarrassment was gone, replaced with sexual excitement.\n\nCathy almost swooned at Mike's words. \"You know I do. That turns me on so much to watch you suck my dick. You give great blow jobs.\" She refilled the shot glasses and said, \"Here's to sucking cock.\" \n\nThe three of them downed their shots, followed by more beer. Mike said to Cathy, \"You do know that I'll only suck your dick, right? Well, unless I could get my own dick in my mouth.\"\n\n\"I'll second that,\" Carl said and the three of them chuckled.\n\n\"Mike, we both know that's not really true, don't we? Just the other day you were telling me about someone else's cock you'd like to suck,\" Cathy said.\n\nCarl's eyes went wide and his jaw dropped as he quickly turned to look at Mike. Mike was silent for a second and then started laughing. \"Oh that's right,\" he said. \"Don't worry, Carl, it's not you. Our friend Jen has a nice big hard dick just like Cathy and the ladies want to watch me suck it. Yeah, guess I have to admit it, I want to give Jen a blow job.\"\n\n\"That is going to be so hot to watch,\" Cathy said. \"Carl, what do you think? Would you like to watch Mike suck Jen's dick?\"\n\n\"I'd rather watch you suck Jen's cock. Would you do that? I'll suck her dick, too, if you will,\" Carl replied.\n\nCathy giggled. \"I don't know. I've never had sex with a woman and I don't think Jen has, either. But, you know, you had better be careful saying you'll suck a dick if I will. You might get a mouthful of something you weren't expecting.\" I'd definitely suck Jen's dick to watch that, she thought.\n\nCarl glanced at Mike and chuckled. \"Yeah, I see what you mean.\"\n\nThe booze continued to flow as they talked about sex. They all knew that Cathy was in charge of this situation and the guys were just waiting for her to get things started. Cathy was enjoying making the guys wait and letting the tension build but she wanted this, too. \"Okay, guys,\" she said as she stood up. \"Let's move this to the bedroom so my big hard dick can get some action.\"\n\nCathy stepped behind Carl and leaned towards him, she purred in his ear as her hands slid down between his legs. \"Are you ready to take my dick in your ass?\" she asked as she rubbed his hard cock through his shorts.\n\n\"Yes\", Carl panted.\n\n\"Yes what?\" Cathy asked. She liked being in charge.\n\n\"Yes, I'm ready to take your dick in my ass,\" Carl replied. He was discovering that he like being dominated by Cathy.\n\n\"I like the sound of that,\" Cathy said as she gave his dick one last squeeze. She turned towards Mike and said, \"Mike, are you ready to masturbate while you watch a live sex show?\"\n\n\"Yes, I want to jerk off while watching you have sex,\" he replied with a smile.\n\nCathy smiled, too. \"Good. Then follow me.\" She walked inside, down the hallway and into the bedroom with the guys right behind her. Carl admired her sweet ass as he walked behind her. He could picture her down on all fours as his dick slid in and out of her.\n\nIn the bedroom Cathy said, \"Okay guys, get in bed and get ready for me. I'll be out in a minute or two.\" She went into the bathroom and closed the door behind her.\n\n\"Well, we both know what that means, don't we?\" Mike said.\n\n\"Yeah,\" Carl said with a grin. \"We get naked, get in bed, stroke our dicks and wait for her.\"\n\nIn moments the guys were naked and lying on opposite sides of the bed. They looked at each other briefly, looked away and then began stroking their cocks.\n\n\"Cathy is one wild woman and you are one lucky guy,\" Carl said. \"When I get a new girlfriend, I'm going to jerk off on her and hope she likes it. That was so hot watching my cum cover her tits.\"\n\n\"Oh yeah,\" said Mike. \"And she always sucks the last drops from my dick, or should I say our dicks, after we cum on her. She is amazing.\"\n\n\"She sure is. She's even gotten us to jerk off in bed together. I never thought that would happen,\" Carl said as he glanced at Mike.\n\n\"Either did I,\" Mike said as he looked back at Carl. \"But it is fun, isn't it?\" Mike instantly wondered why he said that. Must be the alcohol, he thought. But it really is fun.\n\n\"Yeah, it is,\" Carl replied. They were both now openly staring at each other's cock. \"But we're doing it for Cathy, right? And I think I'd do just about anything for her.\"\n\n\"Me, too. And there's something else I think she's going to want from us. She likes me eating her out while I fuck her with her dildo. I know she'd love to have her clit licked when a real dick is in her.\"\n\n\"For some reason, that sounds really hot right now.\"\n\nIn the bathroom, Cathy undressed and got her strap on from the drawer. She smiled knowing that she would soon be seeing it slide into Carl's ass. That thought made her want to rub her clit but then she realized that her dick was going to give her pleasure this time around. She put on the strap on, adjusted the internal dick that rubbed against her clit and started stroking her cock to give herself pleasure. Cathy thought of the guys masturbating in bed together, just a few feet from her and let out a soft moan. It's show time she thought as she put on her bathrobe and cinched the belt tight to cover her hard on. Mike knows what's under this but it will be a big surprise for Carl she thought with a giggle.\n\nCathy opened the bathroom door and walked into the bedroom. Her smile got even bigger as she saw Mike and Carl in bed masturbating. She was pleasantly surprised to see them so close together. She tried to act serious and said, \"I'm glad you guys did what I told you to. It pleases me to watch you two jerk off together. Were you thinking about me?\"\n\n\"Yes,\" both guys said at the same time.\n\n\"Good,\" Cathy replied. \"I'm glad that I make you both so horny that you have to stroke your hard cocks. Now, both of you come stand in front of me.\"\n\nThe guys quickly complied. Cathy looked down at their erections which pointed up to her and grabbed one with each hand. \"You don't mind if my hands take over for you, do you?\" she asked coyly as she began pumping their dicks. It felt so good for her to have a hard dick in each hand. That just made her want more so she knelt down as she continued to stroke their cocks, just inches from her face.\n\n\"I bet you guys were thinking about me sucking your dicks while you were jerking off, weren't you?\" she asked.\n\n\"Yes,\" they both moaned as they looked down at Cathy.\n\nCathy smiled up at them as she pulled on their cocks to get them closer together. \"I'm going to suck both your dicks at once,\" she said as she rubbed the cock heads together. \"This is so hot,\" she said as she opened her mouth wide and leaned forward to suck both dicks. She couldn't get much more than the heads inside her mouth but it still was very exciting to her. Neither of the guys cared that his dick was touching another hard dick, it just felt so good and looked so hot to see Cathy sucking and stroking both of their cocks at once.\n\nCathy almost didn't want to stop, she wanted both guys to cum in her mouth but she knew she could do that later. She had other plans for now. She let go of their cocks and stood up.\n\n\"And now it's time to switch gears,\" she said while untying her belt with a flourish and letting the bathrobe fall to the floor. Her hard cock pointed straight out in front of her. Carl gasped at the sight. He wasn't expecting that, it looked so real and he had to admit to himself that it was even more exciting than Cathy holding a dildo in her hand.\n\n\"Both of you, down on your knees,\" Cathy said trying to act stern. The guys knelt and got a close up view of Cathy's hard cock. \"Mike,\" she said, \"you've watched Carl stroke and suck my dick, now he should get to see how you do it. Jerk me off and suck my dick, Mike.\"\n\nMike grabbed the base of Cathy's cock with his hand and began pumping it as he parted his lips and leaned forward to fill his mouth with her cock. He slurped and moaned as he bobbed his head up and down her hard dick. Cathy looked back and forth between Mike jerking and sucking her cock, which looked and felt so good, and Carl who was staring wide eyed at them while slowly stroking his own hard cock.\n\n\"Oh, Mike,\" Cathy said softly. \"You're such a good cock sucker but now it's Carl's turn. Carl, you do want to suck my dick, don't you?\"\n\nCarl looked up at her and said, \"Yes.\"\n\n\"Yes, what?\" Cathy asked trying to act tough and not giggle.\n\n\"Yes, I want to suck your dick,\" Carl replied smiling.\n\n\"That sounds so hot,\" Cathy said. \"Mike, keep your hand around my cock and feed it to Carl.\"\n\nMike pointed her dick towards Carl's incoming mouth. Cathy moaned at the sight of Mike's hand and Carl's lips around her dick. \"Oh, that is so good,\" she gasped. \"Carl, suck my cock. Mike, jerk me off. Don't stop.\" She screamed with pleasure as an orgasm washed over her. The guys continued to suck and stroke her dick as Cathy's body writhed almost uncontrollably. She had one hand on each of their shoulders to hold herself up as she told them to stop. The guys reluctantly stopped working on Cathy's cock, they both enjoyed pleasing her so much.\n\nCathy took a few seconds to regain her composure and told them to stand up, which they did right away. She put her arms around Mike and kissed him. \"Thank you,\" she said.\n\n\"You're welcome,\" Mike said. \"And thank you, too.\" They smiled lovingly at each other and kissed again.\n\nCathy stepped towards Carl, wrapped her fingers around his hard cock and slowly stroked it and said, \"This is the second time you've sucked my dick. Now I owe you a couple of blowjobs and I want you to know that I'm going to enjoy every minute of sucking your balls dry. But before you cum in my mouth, you're going to cum in my ass, aren't you?\"\n\n\"Yes,\" Carl said. \"I'm going to cum in your ass.\"\n\nCathy stroked Carl's cock a little faster and said, \"But tell me what is going to happen before you get to slide your dick in my ass.\"\n\nCarl gasped and said, \"You are going to fuck me in the ass with your dick first.\" His gaze went from looking Cathy in the eyes to down her body, to her fantastic tits and then down to her hard cock and her hand pumping his dick. \"But if you don't let go of my dick I'm going to be cumming in your hand.\"\n\n\"We can't let that happen, at least not yet,\" Cathy said as she let go of Carl's cock and watched it pulsate. A glob of cum slowly appeared and Cathy gently wiped it off with her finger. \"Open your mouth,\" she whispered. Carl complied and Cathy put her cum covered finger in his mouth and said, \"Suck your cum off my finger but don't swallow.\"\n\nCarl sucked her finger, tasted his sperm and then they kissed passionately.\n\n\"Mmm, that's good,\" said Cathy. \"Now get on the bed, down on all fours and get ready to take my dick in your ass. That is what you want, isn't it?\"\n\n\"Yes,\" Carl said a bit nervously as he did what he was told. \"I want to feel your cock inside me. I want to please you.\"\n\nHe watched Cathy open a dresser drawer and get out a bottle of lube. She poured the lube on her dick and began rubbing it on.\n\nCathy looked at Carl and said, \"You like watching me jerk off, don't you?\"\n\n\"Yes,\" he replied. \"You look so hot when you stroke your dick.\"\n\n\"I'm glad you like it,\" Cathy said as she got on the bed and aimed her cock at his ass. \"And now I'm going to stroke it in and out of your ass.\" She poured some oil on Carl's ass and rubbed it into his rosebud with the head of her dick. \"Put your head down on the bed and keep your ass up high for me.\"\n\nCathy felt so exhilarated as she started to push her cock into Carl's hole. She loved watching the guys suck her dick but there was something even wilder about this, she was about to fuck a guy.\n\nCarl had his face in the sheets as he felt Cathy's cock begin to enter him. He felt a sharp pain and let out a little yelp. \"Stop for a minute so I can open up for you.\"\n\nThe pain quickly subsided and he pushed back on Cathy's cock and she responded by pushing into him. \"Oh my gawd,\" he said as he felt her big dick fill his ass. Cathy stopped again, not knowing if his words meant pain or pleasure until she heard him say, \"No, don't stop. Put more of your dick in me.\"\n\nWatching her dick slide into Carl's ass was the most erotic sight Cathy had ever seen. She pumped her hips slowly, stimulating her clit and her mind. Looking to her side, she saw Mike sitting in a chair and slowly masturbating while watching her fuck Carl. She liked seeing him so turned on that he had to jerk off. And now her dick in Carl's ass turned him on. She hoped that soon he would ask her to fuck him, too.\n\nCathy leaned forward and rubbed her nipples on Carl's back. Then she reached underneath him and wrapped her fingers around his hard cock and began stroking him. \"I can tell you like having my dick in your ass, don't you?\" she asked softly.\n\n\"Oh yes,\" Carl sighed. \"I like your dick in my ass, I like your tits on my back and I like you hand on my dick. But I would like to look at you while you fuck me. Could I roll on my back, please?\"\n\nCathy liked that idea. She wanted to look into his eyes and see his hard cock while she was inside him. She thrust her dick once more into Carl and then slowly withdrew. \"Since you asked so nicely, I will let you,\" she said with a smile.\n\nCarl felt empty when Cathy pulled her cock from his ass. He quickly rolled over on his back so he could feel it inside him again.\n\n\"Put some pillows under you,\" Cathy said. He did. \"Now spread your legs.\" He did. \"Now tell me what you want.\"\n\nCarl gazed at Cathy, a gorgeous woman with a dick that was poised at his ass. \"I want your dick in my ass. I want you to fuck me.\"\n\n\"Good answer,\" Cathy said as she effortlessly slipped her cock back into Carl's ass. They stared at each other and both moaned with pleasure as Cathy slowly pumped her dick in and out of Carl's back door.\n\nCathy's gaze was drawn to Carl's hard cock which pointed up at a 45 degree angle and pulsated each time she thrust into him. She reached for it and began stroking it at the same cadence that her dick pumped his ass.\n\nCarl was overwhelmed by the sight and sensations he was experiencing. He never thought that a dick in his ass would feel so good. He watched Cathy's tits jiggle with each thrust of her dick into him. He knew this was the best hand job he'd ever gotten. \n\n\"You are amazing,\" he was barely able to say. \"I hope this feels as good for you as it does for me.\"\n\n\"Oh, yes. This is fantastic,\" Cathy replied. \"I'll always remember this. Will you?\"\n\n\"Oh, yeah.\"\n\n\"When you get back home next week, will you jerk off when you think about me?\"\n\n\"Yes, a lot.\"\n\n\"Oh, I like that. Tell me what you'll be thinking about.\" Cathy said as she pushed her dick all the way up Carl's ass and held in there for a moment before resuming her slow strokes.\n\nIt was difficult for Carl to speak in the midst of such pleasure but he managed to piece some words together. \"Your dick in my ass while you jerk me off.\"\n",
        "\"That is so hot,\" Cathy cooed. \"And what else?\" as she again thrust her cock all the way home.\n\n\"My dick in your mouth.\" Thrust.\n\n\"And?\" Thrust.\n\n\"Your dick in my mouth.\" Thrust\n\n\"And?\" Thrust.\n\n\"Jerking off on your tits.\" Thrust.\n\n\"That is so hot that you're going to be thinking about jerking off in front of me when you jerk off alone.\" Cathy said as she let go of his dick and went back to pumping Carl's ass with long slow strokes. \"Now I have something else for you to think about next week. I want you to jerk off while you think about jerking off in front of me while I fuck your ass. Grab your dick and stroke it for me.\"\n\nCarl did as he was told and stroked his dick with his hand as Cathy pumped her dick in his ass. \"This is incredible,\" he was barely able to say. He again thought how Cathy brought masturbating to new levels of pleasure.\n\nCathy was totally stimulated. She could control how her clit was being rubbed by changing her pumping motion in Carl's ass. She was watching both Carl and Mike masturbate and knew she was the reason. Oh, how she loved watching them jerk off. She watched her dick slide in and out of Carl's ass. She wondered what it would feel like if she had a real dick. She thought it would be great to fill Mike's mouth with her sperm. Or to cum in Carl's ass. Yes, she thought, I'm going to cum in Carl's ass. She slowly pulled her dick away from Carl until she could see most of it and then thrust it all the way back in his ass. That feels as good as it looks, she thought. Oh yeah, as she thrust again.\n\n\"Carl...\" Thrust.\n\n\"I want you...\" Thrust.\n\n\"To just...\" Thrust.\n\n\"Lay back and...\" Thrust.\n\n\"Enjoy while...\" Thrust.\n\n\"I cum...\" Thrust.\n\n\"In your ass.\" Thrust.\n\nCarl let go of his cock and gripped the sheets with both hands. Cathy's dick felt so good, it took over his entire body. It was as though her dick was connected to his dick, each thrust is his ass sent a wave of pleasure through out his body. It felt like she was massaging his dick from the inside. The pressure in his cock continued to build with each thrust of Cathy's dick in his ass. He looked at the gorgeous woman who was lost in her own pleasure as she fucked him. He was in sensory overload.\n\n\"I think...\" Thrust.\n\n\"I'm going to...\" Thrust.\n\n\"Cum.\"\n\nThe next thrust of Cathy's cock forced his cum from his balls and propelled it up his dick. He moaned as an orgasm engulfed his body and he watched in what seemed to be slow motion as his pearly white cum exploded from his dick and he felt the warm droplets land on his face. He felt Cathy's cock slide out and then all the way back up his ass, forcing another jet of cum to shoot from his dick, landing on his face again. His moan turned into a scream. Another thrust of Cathy's dick in his ass and another rope of cum shot from his cock.\n\nCathy was on the verge of orgasm when she saw Carl's hands free ejaculation. That sent her over the edge. The rush of an orgasm engulfed her body as she screamed and shook uncontrollably, her dick wildly pumping Carl's ass.\n\nCathy's changing strokes, even though they still felt good, interrupted Carl's hands free orgasm. He grabbed his dick and began stroking it to finish himself off. He pointed his cock at Cathy as another stream of cum exploded and landed on her left tit. He kept jerking and aimed at her right tit, another shot on target and his cum dripped from her nipples. His body thrashed and he masturbated furiously, pumping the last of his cum from his balls on to his chest and stomach.\n\nCathy was in mid orgasm when she felt Carl's cum land on her breast. It felt so good. She writhed in pleasure and completed her orgasm with short fast strokes until she could take no more.\n\nCathy and Carl stopped shaking simultaneously and gazed at each other through eyes hazed with post orgasmic bliss. Carl was drawn towards Cathy's tits and the strands of his cum hanging from them. He pushed himself up with his hands and suckled on her nipples.\n\nCathy loved having her tits sucked, especially when they were covered with cum. She looked over at Mike sitting in the chair, looking at her with his fingers wrapped around the base of his hard cock. He squeezed his dick and moved his hand upward, which caused a glob of cum to appear at the head. He smiled at Cathy as he wiped the cum up with his finger, brought it to his mouth and sucked on it.\n\nCathy was filled with bliss as she turned back towards Carl as he lifted his head and kissed her with his cum filled mouth. She accepted his sperm and then licked up the globs of cum on Carl's face and fed them back to him. Carl took the mouth load of cum, they swished it back and forth between their mouths and then he fell back on the bed. He felt satisfied in a new and kinky way.\n\nThere was one more thing that Cathy wanted. She slowly withdrew her cock from Carl's ass and said, \"Just lay back and relax and recover.\" He nodded faintly. Cathy stood up on wobbly knees and looked at him. His hand was still on his softening dick, pools of cum were on his chest and he smiled up at her.\n\nCathy turned to Mike as she unhooked her strap on. \"Are you ready to cum?\" she asked him.\n\n\"Yes,\" Mike replied. \"Where do you want it?\"\n\n\"I need it in my pussy,\" Cathy said as she took off the strap on and dropped it on the floor. She walked to Mike, turned her back to him and lowered herself on to his hard cock. She looked at Carl as she felt Mike's dick fill her. It was a thrill to her to be watched.\n\nMike was just about ready to cum when Cathy sat on his dick. It was exciting to watch her fuck Carl. When he saw Carl cum all over himself and then jerk off on Cathy, he had to stop stroking his dick or he would have cum, too. Now Cathy's velvety hot pussy felt so good around his cock. And he had to admit that fucking Cathy in front of Carl was an added thrill.\n\nCarl couldn't take his eyes off Cathy's pussy as it slid up and down Mike's dick. \"You look good enough to eat,\" he said.\n\nCathy gasped. This was something she wanted so badly but didn't know if the guys would go for it. \"Will you?\" she pleaded. \"Please?\"\n\nCarl could see how much she wanted it as he got off the bed and walked to her. He leaned down so his face was close to hers. \"Would you like me to eat you out while you have a dick in you?\" he asked.\n\n\"Please, yes.\"\n\n\"Yes what?\" Carl asked smiling.\n\n\"Please eat me while Mike fucks me.\"\n\nCarl slowly got to his knees. He sucked one of Cathy's tits then licked his way down her body. He put his hands on her ass cheeks and said, \"hold still for me.\"\n\nAnother fantasy was coming true for Cathy, a tongue and a real cock pleasing her at the same time. She braced her hands on the chairs' armrest to hold herself still, felt Mike's cock pumping in and out of her and looked at Carl's face that was so close to her pussy. Their eyes met as Carl stuck out his tongue and leaned forward to lick her.\n\nCarl stared at Cathy's cock filled cunt. He'd only seen this close up view before in porn but this was so much better. He was there. He could smell her. He wanted to taste her. He wanted her to cum in his mouth. He didn't care that his tongue would also be touching Mike's dick, there was even a certain kinkyness about that. And he knew that sometime later Mike would be doing this while he fucked Cathy. He looked up into Cathy's eyes, stuck out his tongue and leaned forward to lick and suck her.\n\nMike knew he had to hold back his impending orgasm when Carl offered Cathy his tongue, he wanted Cathy to enjoy this as much as possible. But when Carl began licking and Cathy began moaning he knew his orgasm was imminent. He gave Cathy long deep thrusts, heard her squeal as she came and he moaned as his cum began to fill Cathy's pussy.\n\nCathy was in heaven as she felt Mike's dick and Carl's tongue pleasure her. She could barely believe it was happening. She wondered if Mike would eat her while Carl fucked her. Yes, these guys will do anything for me, she thought as she screamed at the intensity of the orgasm that rushed through her. Her body shook, she heard Mike moan and then felt his dick pulsate, shooting the first of many jets of cum deep inside her pussy. She struggled to stay still so Carl could keep his tongue on her clit, prolonging and intensifying her orgasm. Lightening bolts shot through her. Her body went limp but also twitched uncontrollably. The fact that Carl was licking her while she was being filled with Mike's cum made her scream even louder. Finally it all became too intense, she had to push Carl's head away from between her legs, her clit was too sensitive for the moment. She wondered if Carl got a taste of Mike's cum, she hoped he did. She lowered herself onto Mike's lap and squeezed her pussy muscles around his pulsating cock, wanting to drain every last drop from it.\n\nCarl knew that Mike was filling Cathy's pussy with cum but when he heard Cathy's screams of pleasure, he didn't care, he just wanted to please her even more. He licked and sucked her pussy with abandon. When she pushed him away from her pussy he smiled. He knew he has taken her to the limits of her pleasure. He leaned back a little and savored the sight of two satisfied sex organs.\n\nMike loved cumming in Cathy's hot pussy. Waves of pleasure filled his body. He pounded Cathy with short fast strokes, pumping stream after stream of his cum into her. He thought about Carl's mouth so close to his spurting dick and knew he would be doing the same for Cathy later. His head rolled on his shoulders as Cathy squeezed out the last of his cum.\n\nTheir orgasms finally ebbed and they sat still, basking in the glow of their pleasure. Cathy looked at Carl on the floor in front of her, stroking his half hard dick while he stared at her dripping pussy. She loved having an admiring audience.\n\nMike was sated as he relaxed in the chair, his softening dick inside Cathy. \n\n\"Mike, will you do something for me\"? Cathy asked softly.\n\n\"You know I will.\"\n\nCathy slowly stood on wobbly knees. She put one hand between her legs to hold her lips closed and held her other hand out to Mike. \"Lay down on the bed.\"\n\nMike grabbed her hand and was able to stand and take the two steps to the bed. He flopped down on his back. \"Would you like me to eat your cum filled pussy?\" he asked. He knew the answer but he also knew that Cathy wanted to hear the words.\n\n\"Do you want to suck your cum out of me?\" Cathy knew that he did and also knew they both got off on talking dirty to each other.\n\n\"Why don't you get up here and sit on my face and find out,\" Mike replied while licking his lips.\n\n\"I think I will,\" Cathy said as she crawled up the bed towards Mike's face. She had one hand on the headboard and one hand between her legs as she straddled Mike, his lips just inches below her pussy.\n\nCathy took her hand away from her pussy and gently touched Mike's forehead, keeping him from moving. \"Not yet. Give me a minute to recover. I just want to watch your cum drip into your mouth before you suck me off.\"\n\n\"You're such a wonderful tease,\" Mike said.\n\nCathy leaned against the headboard and worked her pussy muscles, trying to force Mike's sperm out of her. Between that, and gravity, very soon a large glob of cum appeared. It kept getting bigger and then slowly became a strand of cum lowering itself towards Mike's mouth. She watched in awe as Mike got his first taste of pussy flavored sperm. The strand seemed to flow endlessly, constantly being replenished by the big load Mike had shot deep inside her.\n\nCarl had moved to the headboard to get a better view. He knelt beside Cathy and admired the beautiful and sensuous woman. \"I'm going to eat you out after I cum in you, too,\" he whispered to her.\n\nCathy turned to him and put one hand on his shoulder. She looked at the cum on his chest and leaned towards it while lowering herself on to Mike's mouth. She felt Mike's tongue and lips do their magic to her pussy while she slurped up Carl's cold cum. Her orgasm was just starting as she lifted her head to kiss Carl. She writhed with pleasure as they swished Carl's cum back and forth between them. She thought of all the times before today that she had cum while having a sperm filled kiss with Mike. But those were different, she had masturbated herself to orgasm while kissing him. Earlier today she had a cum filled kiss with Mike while Carl sucked her dick. Now she was having a cum filled kiss with Carl while Mike was licking her cum filled pussy. She had two nice dicks to please her, to cum in her and on her. Two sets of lips to please her, to lick her clean and kiss her. And she also had her own hard dick to use on both of them. The possibilities were endless she thought as she screamed, completely overwhelmed by the intensity of yet another orgasm.\n\nShe broke her kiss with Carl and lifted her pussy from Mike's face. She moved down the bed until she was face to face with Mike.\n\nMike noticed the remnants of Carl's cum glistening on Cathy's lips. He didn't care, he had a mouth full of his cum and her pussy juice to share with her.\n\nThey kissed, lovingly and slowly. Their tongues moved their commingled juices back and forth. They finally swallowed the excess fluid, broke the kiss and smiled at each other.\n\nThe three of them lay on the bed, staring at the ceiling, enjoying the feeling of total satisfaction and lost in their thoughts of what pleasures the rest of the week would bring."
    ],
    "authorname": "catsguy2",
    "tags": [
        "strap on",
        "strapon",
        "pegging",
        "male masturbation",
        "mfm",
        "mmf",
        "snowball",
        "cream pie",
        "creampie"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/kissing-cathy-ch-07"
}