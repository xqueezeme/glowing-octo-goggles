{
    "title": "Tied to Sam",
    "pages": [
        "Everyone in this story is over the age of 18.\n\nIt takes this couple a little while to summon up their courage and get into the bedroom, but I hope you enjoy reading their story. Please leave a comment if you'd like to, because I enjoy reading them. \n\nWhen I was about seven or eight years old, my neighbour used to come around to my house to play, and he would tie us together around our waists with rope before we set off for the fields \u2013 truth! ... But the rest of this story is pure fiction.\n\n+++\n\n'Yeah, sure, you know I'm good for that,' I say lazily. 'I love a bit of decorating. My fee is dinner, for as many days as it takes us to finish all the rooms you want to do, right?'\n\nSam laughs.\n\n'Yeah sure. Cheap at half the price.'\n\nI look at him. It's been a while since I've really looked at him this closely. Maybe as long as a year. We didn't see each other at Christmas. He was away, visiting his brother Michael in Dublin, so I'd had to do without his company for once. Although that isn't quite true, as I'd been giving him a bit of a wide berth for a while before that. Since he'd started going out with Alyssa last summer. I'd liked her, the couple of times I'd met her, but I wasn't sure she felt the same about me. Maybe she wasn't the sort of girlfriend who appreciated her new boyfriend having a female best friend? Is that too many friends for one sentence? Definitely one too many for Alyssa, anyway. \n\nBack to Sam. He's getting his hair cut in a different way these days. Shorter at the back, but still long and a bit unruly on top. And hasn't shaved for a couple of days at least. And just generally looks older now. Less like the teenager I still remember him as in my mind. \n\nHuh.\n\n'If you're going to be cheeky, you can do it all yourself,' I warn him.\n\n'Don't be like that,' he laughs again, and pushes his plate away. 'I'm stuffed. You?'\n\n'Uh, yeah. That was my plate you just polished off, remember?'\n\nHe doesn't even try to look embarrassed. \n\n'Got anything you need to do this evening?'\n\nI give some consideration to the reading I should do for college, the skirt I said I'd alter for my sister, and the backlog of 'The Bridge' I keep promising myself I'll watch.\n\n'Not a thing.'\n\n'Huh. Want to come and see the latest Tarantino with me, then? It's on up the road.'\n\n'Yeah, ok. What time's it start?'\n\n'We've got time to walk there. Want to?'\n\nThis is typical of him, the way he doesn't ever get into the detail of anything, just makes it irresistibly simple.\n\n+++\n\n'Slow it down, Sam, you know I can't keep up,' I complain, as he strides down the high street.\n\n'Short arse,' is what he says, but he does slacken off a little bit, letting me catch up with him.\n\n'When do you want to paint the flat, then? Only I've got some time this week and early next, and then I'm starting back at the warehouse to earn some money to pour into the gaping black hole of my student debt.'\n\n'Ok. How about we make a start the day after tomorrow, as Alyssa's coming over tomorrow sometime?'\n\n'Course. Do we need to buy the paint or have you already done that?' \n\nI'm pretty sure I know the answer already, and he confirms it by shaking his head.\n\n'Not exactly. I need you to work out how much I need to buy.'\n\nI smile.\n\n'Same old Sam,' and duck away from his hand as he bats it at the side of my head.\n\n'What can I say, Cora? There are just some things I can't do without you.'\n\n'Aw,' I say, mockingly. \n\nAlthough I can't deny it's nice to hear him say it.\n\nI've loved the cinema since I can remember, ever since my dad had first taken me on the weekends he had visiting rights, and then it was one of the things me and Sam had loved to do together as soon as we were old enough to go out on our own. Luckily, we share eclectic tastes and almost nothing is out of bounds. Not even romcoms. In fact, I suspect Sam of liking them more than I do. \n\nTaking our seats, he sighs and stretches out his long legs in front of him.\n\n'Brilliant. I haven't been to the cinema for ages.'\n\nThis surprises me. Maybe Alyssa hates films?\n\n'Haven't you?'\n\n'Nope.'\n\nBack in the day, we'd have fought an energetic battle over whose arm got the lion's share of the armrest between our seats, but I suppose that was when we were just kids, before touching got complicated. I glance across at his profile, quickly, stealing another look at him, trying to work out what feels different about him today.\n\nThe film is beautifully shot and completely violent. I'm enthralled. It's not until half-way through I realise his forearm is touching mine. Huh. Whether it's that, or the over-zealous air conditioning, my skin breaks out in goose bumps and I shudder.\n\n'Cold?' he whispers into my ear.\n\nAnd he's pulling his sweatshirt off, pushing it over to me and watching me until I pull it over my head and down my body. It smells of him.\n\n'Thanks,' I smile at him in the dark.\n\nI've missed this. \n\nHim.\n\n+++\n\nMy phone dings. It's Sam. I pick it up from the dining table where I'm doing a bit of college work.\n\n'Pick you up 8.30 for fun and games in B&Q.'\n\nI smile.\n\n'Course,' I text back.\n\nHe doesn't need to say where. We live in the same block of flights. Grew up here. My mum and sister still live here, of course, where Sam's taken over the lease on his mum's flat since she had to move into the care home earlier in the year. That's why he needs the decorating done. He's got a tenant moving into the second bedroom, to help him with the rent. \n\nI sit back, stretch my arms and squeeze my eyes shut. Alice will be back soon, and I won't get much more of this reading done once that happens, as she'll be prancing about our bedroom telling me all about her latest crush, her friends' latest crushes, and what everyone is saying about everyone else's latest crush. \n\n+++\n\nI'm sitting on the metal fence by his car, swinging my legs and regarding the children's playground in the common space between all the flats. That's where we first met, me and Sam. I was seven. He was eight, nearly nine. We'd just moved in. Mum brought me and my sister down here to play with the other kids. My sister \u2013 Alice \u2013 well, she was straight in there. Not a shy bone in her. But I'd stood with my back pressed into mum's legs until Sam had walked up to me and asked me my name. \n\nI don't remember it, but mum said it was that first day he'd pulled out a length of the rope that was wound around his waist and had proceeded to tie it around mine. She'd been astonished at how I'd let him, and not only that, but how happily I'd skipped off with him. Every time he came to call for me that year, he'd done the same. Tied one end of his rope around my waist. \n\nWeird huh? \n\nWe both get a bit wigged out if our mums try to tease us about it these days, and we never mention it to each other, ever. But it did happen. There's evidence \u2013 photos of us tied together like that, crooked smiles on our faces.\n\n'Hey. Think you can still drive?'\n\nI only just manage to catch the car keys he's chucked in my direction.\n\n'Ha ha!'\n\nI think he's joking, but when he opens the passenger door, I realise with surprise that he isn't.\n\n'Really?'\n\n'Sure. You could probably do with the practice.'\n\n'Hilarious,' I say, but get in anyway, yanking the seat forwards to give me a chance of reaching the pedals.\n\n'Can you remember where to put them?' he's gesturing at the keys.\n\nIt's an old joke, but one that obviously still works for him, as he's chuckling away to himself. \n\nHe taught me to drive. Probably one of the hardest things we went through, as I turned out to be a recalcitrant and stubborn pupil, but he didn't give up on me, and I passed. Second time, admittedly. His running commentary on my driving prowess is relentless from the moment I stick the keys in the ignition, but I rise above it, even if I am a bit nervous. Once we arrive, I even manage a decent job of reversing into a parking space.\n\n'There you go. That wasn't so bad, was it?' he's smiling at me.\n\nI blow my cheeks out.\n\n'You need to keep your hand in, C, that's all.' \n\nAnd I'm surprised when he rubs my forearm. Not teasing me. \n\nHuh.\n\n'Ok, Sam, ok. So, run me through what we're buying here.'\n\n'And there I was, thinking the painter-decorator's daughter was going to have it all worked out for me already.'\n\nI tut at him.\n\n+++\n\nI'm just finishing off the second coat on the bedroom ceiling, my arm aching from a day of painting, when I hear Sam clattering around in the kitchen. I hope that means he's starting on dinner, because I'm starving.\n\n'Cora, dinner in half an hour, alright?'\n\n'Yeah. Sounds good. I've almost finished this ceiling.'\n\nI listen to the sounds coming from the kitchen; Sam humming to himself. He loves cooking. Doesn't follow the recipe, obviously, but seems to have a feel for what's going to work. I'm useless at it. But I am good at decorating, where he's still at apprentice level. We're opposites.\n\nI'm just wrapping the paint roller up in plastic when he's tapping the top of my head.\n\n'Wha \u2013 bloody hell, don't do that, Sam. I didn't know you were there!'\n\n'Sorry. Wanted to know if you wanted a beer or anything?'\n\nI stand up. Catch a weird look crossing his face, but it's gone before I can work out what it was.\n\n'Yeah. I'll have a beer, thanks.'\n\nI watch his back as he walks out of the room. And shrug. What was that look? I shrug again, turn back to push the window wider, thinking it's lucky for us the weather is so warm. It'll dry the paint out nice and quickly. \n\n'Hey, I reckon we'll be able to paint both bedrooms and the living room if this weather holds out, you know.'\n\nHe starts, as if I've surprised him, now.\n\n'What's with you, so jumpy?' I tease.\n\nHe just frowns and hands me a beer. We raise our bottles and take a swig.\n\n'Thanks for doing this, Cora,' he says, all serious.\n\n'Hey, you knew I would?'\n\n'I know. But still \u2013 I appreciate it. This is your summer holiday, after all.'\n\nI roll my eyes at him.\n\n'What's for dinner? It smells great.'\n\n'Sit your skinny bum down, and I'll dish it up.'\n\nWe eat, enjoying the food, the beer, and the light June night.\n\nHe tells me stories from his work that make me laugh, and tells me a little more about his plans to go into business with Sanjeev, a friend we were both at school with. It's something to do with search engines. I haven't a clue, but I let him babble on about it, enjoying his enthusiasm, and that he still wants to tell me all about it. \n\n'Why are you smiling like that?' he asks.\n\n'Uh \u2013 I just like it when you're so full of plans. It's cute.'\n\n'Cute?' he pushes back from the table and down his chair, his thigh glancing against mine under the table. 'You know blokes hate that word, C. It's demeaning.'\n\n'Is it?'\n\nWe've had this discussion before. But it's like a well-worn jumper \u2013 familiar and comforting; a reason to be happy.\n\n'Yeah. Cute is for puppies, kittens, baby chicks and baby humans.'\n\n'Blokes can't be cute?'\n\n'Yeah, sure they can. But if they're cute, they can't be sexy.'\n\n'And blokes want to be sexy?'\n\n'Uh \u2013 duh. Yes.'\n\n'Not cute?'\n\n'No! Cute is not sexy. That's the truth.'\n\nI laugh out loud, he looks so \u2013 what? What is that look on his face? I open my mouth to frame the question, but he's getting up from the table, gathering the plates.\n\n'I'll do the washing up,' I call after his receding back.\n\n'Nope. That's not necessary. I've got this.'\n\nI follow him into the little kitchen. \n\n'Are you sure?'\n\nHe touches my shoulder, his hand lying heavy and warm on me.\n\n'Yeah, I'm sure. Step away from the sink, lady,' he says, doing an impression of a megaphone at me.\n\n'Right. Well \u2013 in that case I think I'll head off now, Sam, do a bit more reading before it gets too late.'\n\n'Oh, ok.'\n\nDoes he look a bit crestfallen?\n\n'What time tomorrow, then, boss?'\n\nHe smiles at that.\n\n'Eight too early?'\n\n'Not if there's bacon sandwiches for breakfast, it isn't.'\n\n'You always did drive a hard bargain with me, Cora.'\n\n'Ha ha, Sam.'\n\nHe follows me to his door, touches my shoulder again, and the way he's standing there, I practically have to push him out of the way to get past him.\n\n+++\n\n'What's up with you?'\n\n'Nothing.'\n\n'Nope. Not buying it. You're hiding something.'\n\nAlice may be my younger sister, but she's somehow always in charge of our conversations. I sigh and turn on my side to look at her. She's lying on her bed, and I'm lying on mine. It's like old times.\n\n'Cora, you've been lying there staring at the ceiling for the last hour. What's up?'\n\n'I don't really know.'\n\n'What does that mean?'\n\nShe's sharp as a tack and tenacious as a cockroach, my baby sister. It's not that I don't love her. I do. But sometimes, I wish she'd cut me some slack. Like now. Because I don't know why I can't think of anything else except the look on Sam's face this evening. I'm genuinely trying to work out what it meant.\n\n'The silent treatment ain't working for me. Come on, spit it out, girl.'\n\nI pull a face at her.\n\n'Ok. So I'll drag it out of you then.'\n\nYep. Tenacious.\n\n'Let me see. You've spent all day in Sam's flat, helping him re-decorate.'\n\nShe turns her head to look at me, and smiles.\n\nI try to keep my face straight. If I can't work out what was happening with Sam today, there is no way I'm ready to talk to Alice about it.\n\n'As I see it, we have options.'\n\nShe holds up her hand, fingers splayed.\n\n'One,' she declares, wiggling a finger at me. \n\n'You finally declared your undying love for him, and not a moment too soon. Two,' waggling two fingers at me now, 'he summoned all his courage and finally got around to declaring his undying love for you. Three; you turned him down, although why is a mystery. Four; he turned you down, which would be totally inexplicable. Five; you got it together over the stepladder and it was fantastic but \u2013,'\n\n'STOP. Alice, please stop.'\n\nMaybe there was something in the tone of my voice, because she actually stops dead and sits up.\n\n'Wait a minute \u2013 have I hit a nerve?'\n\nI reckon she's as surprised as I am. It's not as though she hasn't been through this exact same routine with me before. She's always teased me about Sam. But I've never risen to it. Until now.\n\n'Cora?'\n\nAnd now I sit up.\n\n'I don't know, Alice. I don't know what was going on today. But something was definitely a little bit off with him today.'\n\n'How so?'\n\n'I can't put my finger on it. He just seemed \u2013 odd.'\n\n'Oh my god, you two drive me mad. Are you seriously never going to get it together?'\n\nI tut at her, but she's having none of it.\n\n'Why not? You've been in love with each other ever since I can remember.'\n\n'No, we have not.'\n\n'Uh. Yes, you have. And you're both back to being single, aren't you, so what's the problem?'\n\n'No, Sam's with Alyssa.'\n\n'No, he's not. They broke up a few months ago.'\n\n'What? No. She was round his flat yesterday.'\n\nShe snorts and shakes her head.\n\n'Are you sure? They split up before Easter.'\n\n'Well she was there with him yesterday, so maybe they got back together?'\n\nAlice sighs.\n\n'Shame if they are. It should be you and Sam. It's obvious.'\n\n'I don't think so.'\n\nMemories of the times his body has been in contact with mine today march across my mind just then.\n\n'You know, for the first person in our family to go to university, you're really not that bright.'\n\nI fling my pillow at her.\n\n'Please shut up.'\n\nAnd I pull the other pillow over my head.\n\n+++\n\nHis front door is ajar, the smell of bacon luring me in.\n\n'Yummy!'\n\nHe swings his head to where I'm standing behind him.\n\n'Hey! I didn't hear you come in,' he says, sounding a bit croaky.\n\n'Sorry. Didn't mean to sneak up on you. But your front door was open.'\n\nHe nods, turning back to the cooker. And now I come to look at him more closely, he looks a bit rough too.\n\n'Are you alright? You look a bit peaky?'\n\n'Mm. Didn't sleep brilliantly, and woke up late.' He rubs his hair. 'Actually, if you wouldn't mind taking care of things in here for a minute I'd like to get in the shower?'\n\n'Oh, I see how it is. I have to make my own breakfast, huh,' I smile at him, teasing him.\n\nHe flashes me a smile of his own. But he does look a bit tired.\n\n'Hey, is everything alright? It's not Mary, is it?'\n\n'No. No, mum's fine. It's nothing like that. I probably just need a shower to set me right.'\n\nAnd with that he leaves me to the bacon. I put the pan in the oven on a lower heat, to keep it warm until he's finished, and cut the bread into slices. I know my way around his kitchen. For one thing, it's exactly the same as ours, because all these flats are built to the same layout. And for another, this is where Sam's mum used to teach us to cook. Sam was always the better pupil than me \u2013 for cooking, anyway. \n\nI think about how he's living here on his own now that his mum's gone into residential care. He was a late baby. Mary must have been in her early forties when she had him. It was the final straw for the marriage and Sam's never really known his dad. His two older brothers had left home by the time me, mum and Alice moved into these flats, and I hardly know them. Once Sam had taken to tying us up together, Mary had taken me on as the little sister Sam didn't have, showing us both how to cook and sew and grow things in pots on the windowsills. \n\nShe's had a series of strokes lately. That's why she's had to go into a care home. I haven't seen her for over a year, and I suddenly and rightly feel very guilty about that.\n\n'I thought you'd have already eaten?'\n\nHe's back, wearing different clothes to earlier, his hair wet and dripping down his neck.\n\n'I was waiting for you to get through your beauty routine and pretty yourself up.'\n\nWe both carry the food to the table, sit down to assemble our own sandwiches. He has brown sauce. I have red.\n\n'Bacon is the reason I'll never be able to go vegetarian,' I say, my mouth full.\n\n'I hear you.'\n\n'Is everything ok, Sam? Aside from lack of sleep, I mean?'\n\n'Yeah.'\n\nBut I know him well, and I'm not convinced.\n\n'Are you sure? How is Mary?'\n\n'Mum's ok, actually. Not bad. It's better for her being in the care home than here. And it has nice gardens which she really likes, as you can imagine.'\n\n'I'd like to see her. How often do you go?'\n\n'I was thinking about driving out there tomorrow. Or Sunday. Except Sundays is usually when Sean and his kids go to see her. Do you want to come with me? She'd love to see you. She's always asking after you.'\n\n'I'd love to. Yeah, let's do that, so long as we're making good progress with the decorating.'\n\n'Slave driver.'\n\n'You know it.'\n\n'You want any more of this?' He points to the remaining bacon.\n\nI shake my head and watch him fold it into a slice of bread. He eats twice as much as me. Probably because he's twice the size of me. He shot up when he was thirteen, sending Mary into despair at how quickly he needed new clothes and shoes. That's really when our mums got friendly \u2013 when my mum had taken Mary to one of the clothing swaps she used to organise for our church, and Mary'd been able to find jeans and trainers for Sam she could afford to buy. After that, they'd become fast friends \u2013 the Irish Catholic mammy and the Jamaican matriarch. Funny pair, they were.\n\n'So what is it? You're not yourself, somehow. Is everything ok with Alyssa?'\n\nI've surprised him. We don't really talk to each other about boyfriend/girlfriend stuff. It's been out of bounds, somehow. But I'm curious. And maybe a little high from the bacon. Whatever. The question's out there now, and I wait for him to finish his mouthful.\n\n'Yeah, it's fine. But we broke up, you know.'\n\n'No. I didn't know.'\n\nHe shrugs.\n\n'Sorry to bring it up. I just assumed you were still together.'\n\nI feel bad now. He's chewing on the inside of his mouth \u2013 a sure sign he's not happy.",
        "'S'ok. It was a while back now. Before Easter.'\n\n'Right. But she was here the day before yesterday?'\n\n'Oh, that. Yeah. She came over to pick up some stuff I was planning on chucking out. For her brother, you know?'\n\n'Huh. You're still on speaking terms then?'\n\n'Yeah, course.'\n\n'That's a shame, Sam. I thought she was nice.'\n\nHe smiles a little bit.\n\n'She was nice.'\n\nIt's not an awkward silence, exactly. But it is a silence. \n\nHe breaks it first.\n\n'She wanted more from the relationship than I did, so it didn't seem fair to keep going out with her.'\n\nA wave of warmth washes over me, it feels so odd to hear him talking like that. Like I say, we don't ever discuss this kind of thing with each other. \n\nI look out of the window. It's another clear, dry day.\n\n'What about you, Cora?'\n\n'Me?'\n\nNow I'm really shocked. He's never asked me about boyfriends. Never.\n\n'Yeah, you. Come on, you've been away at college for two years now. Surely you've had guys falling over themselves to get their hands on you?'\n\n'Sam!'\n\nI'm definitely colouring up.\n\n'What? Don't blush like that. I'm only asking.'\n\nI'm sure I'm about to burst into flames. He's not backing down; his blue eyes not giving me anywhere to hide.\n\n'Not really.'\n\nHe looks sceptical.\n\n'Really, I mean \u2013,' I swallow, 'I mean, sort of.'\n\n'What? Sort of? What does that mean?'\n\nNow he's just laughing at me, rubbing his hair again, but looking so amused it's doing nothing for my body temperature.\n\n'C, you're twenty years old. That's too old to be all coy about boyfriends.'\n\nI pull a face at him.\n\n'You have had a boyfriend, haven't you?'\n\nHe's sitting more upright now.\n\n'Kind of. Yes.'\n\n'Kind of?'\n\n'Kind of. That's it. I guess a bit like you and Alyssa, I felt they wanted more out of it than I did.'\n\n'They? More than one, then?'\n\n'You're teasing me,' I complain.\n\n'I am, a little bit. But we've never talked about it, have we? And anyway, mum's always asking me about you. How's Cora and has she got herself a nice young man yet? You know how she is.'\n\nI feel like he's pulling us back from the brink, and I'm grateful for it. Maybe he's embarrassed too. And on reflection, I suppose I started it, with me asking him about Alyssa.\n\n'Well, ok. Two boyfriends. Nice guys. But I just wasn't as into it as they were. There. Now \u2013 how about I make us a cup of tea and we crack on with the walls? I'll do the edging, you can use the roller.'\n\nLike the good man he is, Sam doesn't pursue the awkward conversation any further, but agrees to tea and today's decorating plan.\n\n+++\n\nIt's only just gone five o'clock when he stretches his back and announces we should stop for the day.\n\n'I don't know about you, Cora, but I'm almost broken,' he jokes as he flexes his hands and rolls his neck. 'And we've done loads today.'\n\nWe've pretty much finished the second bedroom, aside from a bit of touching up and the skirting boards, and Sam's been making a start on the ceiling in the living room this afternoon. He's standing in the doorway, watching me as I run the paintbrush inbetween the ceiling and window frame, finishing the second coat off. I look over at him and smile at how his brown hair, his face and arms are all speckled with white paint.\n\n'Nice look you've got going there.'\n\n'I could say the same for you, but I'm too much of a gentleman.'\n\nThat makes me laugh. I wipe my hands over my ancient jeans, pick up the brush and paint can and start down the stepladder. But out of nowhere, I lose my footing, everything tilts, and I'm airborne.\n\n'Whoa. I've got you.'\n\nHe's taking the weight of me, pressing me to his chest, one arm tight around my ribcage, the other righting the stepladder. I look down at the paint can I've managed to hold onto. Amazingly, I haven't spilled any paint, but the brush is on the floor, paint pooling all around it.\n\n'Ouff. I wasn't expecting that.'\n\nI lean against him, feeling weirdly dizzy, my ribs pushing against his arm as I try to catch my breath. He loosens his grip a fraction.\n\n'Are you alright? You were flying there for a second or two.'\n\n'Mmm.'\n\nHis grip tightens on me again, and he holds me there while I let my head spin until it comes to rest.\n\n'Cora?'\n\n'Mmm. I'm ok. A bit dizzy, but I'll be alright.'\n\nHe still isn't letting me go. I can smell the washing detergent he uses, and the shower gel from this morning's shower. He's warm. A bit sweaty from the effort of painting the ceiling, and I can smell that too. Overall, it's a good smell. I've always liked it. I start to feel self-conscious about how long I've been standing pressed up against him like this, his forearm so snug under my breasts. I straighten up, and he moves his arm away.\n\n'Alright now?' he's asking.\n\n'Yes. Better. Sorry about that. I don't know what happened.'\n\n'You just seemed to miss the step.'\n\n'Huh.'\n\n'I think it's a definite sign we've done enough today. Come and sit down while I clean up and cook.'\n\nI start to bend down to pick up the paintbrush, but another headspin puts a stop to that, and he's grabbing my arm to steady me again, pulling me back into his chest.\n\n'Cora, stop! Let me do that. Let's get you a glass of water, come on,' and he's pulling me into the living room, makes me sit on the sofa covered in dustsheets, and brings me a glass of water from the kitchen. \n\nI drink it, while he clears up the mess in the bedroom. When he reappears, he flings a concerned look at me.\n\n'How are you feeling?'\n\n'I'm ok. Honestly. I think I just needed to drink this,' I hold up the glass; it's nearly empty.\n\n'Hm. Maybe you should have a lie down while I cook,' and then he's in the kitchen, pulling stuff out of the cupboards and humming to himself.\n\nI do lie down, enjoying the sounds of Sam cooking.\n\n+++\n\n'Cora. Cora!'\n\nI peel my eyes open. Sam's face is hovering over mine, frowning. I blink. He's touching my face, his palm on my cheek.\n\n'Cora? You were out like a light, there. Are you ok?'\n\nI inhale, blink again.\n\n'Huh. Yeah. I'm ok.'\n\nI stretch a little, watch his hand retreat from my face and drop to his side.\n\n'How long was I out?'\n\n'Half an hour, maybe a bit more. Here, have some more water. I'm worried you're dehydrated.'\n\nI sit up, not very gracefully, and drink from the glass he's offering me.\n\n'Anyway, dinner's ready when you are.'\n\nThe flat is flooded with good food smells. I touch my fingers to my cheek. When was the last time he touched my face? Ever? \n\n'I just need to pee and wash my hands,' I say, pulling myself off his sofa. \n\nHis mouth ticks up on one side.\n\n'Was that too much information?'\n\n'Maybe.'\n\nHe's laid the table and put a big bowl of steaming pasta and another of salad on it by the time I come out of the bathroom.\n\n'This smells so good, Sam.'\n\nHe shrugs, but I can tell he's pleased. We eat in an easy silence. I watch his fingers holding his fork; touch my own to my cheek again.\n\n'You needed that,' he says, pointing at my empty plate.\n\n'I guess I did. I feel tons better. Thanks. Delicious, as always.'\n\nHis mouth ticks up again.\n\n'I feel I'm getting a good deal out of this decorating contract.'\n\n'No way. Look at how much you've done. That bedroom looks great now. I don't think it was that good when we first moved in.'\n\n'When does the new bed arrive?'\n\n'Next week, I hope. And Danny's moving in next month.'\n\nDanny is the lodger. Well, he's also someone we both know from school. He's Sam's age, has just finished his degree and starts a job back here in London in August.\n\n'If we carry on like this, we'd have time to paint your bedroom too. I know it was our stretch target, but I think we should go for it. What do you think?'\n\n'Let's see how we do tomorrow. And anyway, you should have some time off before you start work next week.'\n\n'No, not really. These are the days you've got off work, aren't they, so let's keep at it to get as much done as we can. Once Danny moves in, you won't want the upheaval. And it'd be good to do your bedroom too wouldn't it?'\n\n'It would. But let's see how we get on. I don't want to wear you out.'\n\nI look up at his face but his expression is neutral. He's working his way through a second helping.\n\n'No chance of that. And this is fun \u2013 it's nice to catch up with you.'\n\nNow his eyes flick over my face.\n\n'Yeah. It's good to see you, and spend time together like this,' he says, carefully. \n\nA bit awkwardly.\n\n'I'm sorry I didn't see you at Christmas. Or Easter, come to that. I feel like I hardly know what's going on with you these days.'\n\n'It's been too long,' he agrees, dropping his fork down on the plate, finally full, apparently. \n\nHe leans back and rubs his belly, his t-shirt lifting up, exposing some skin above his jeans.\n\n'I'll wash up,' I stand up.\n\n'No you won't. Washing up's still my responsibility.'\n\nHe's looking up at me \u2013 a rarity, given how tall he is and how short I am. I pluck at the paint specks in his hair, pulling at a particularly large glob of it.\n\n'Ouch!' he's complaining, and grabs at my hand. 'That hurts, stop it. I don't want to lose any more hair than I need to, thanks very much.'\n\n'You're not losing hair, don't be ridiculous.'\n\nI laugh, wondering what's got into me that I'm shoving my hands in his hair. It's thick enough, and showing no signs of receding, or whatever it is Sam's afraid of. He's batting at my hands, so I retreat, still laughing at him.\n\n'That's fine for you to say, you don't have to worry about male pattern baldness.'\n\n'Neither do you, surely? You show no sign of it.'\n\n'Don't I? What about on top? Alyssa said she thought I was thinning out there.'\n\n'Where?'\n\nI bend over the top of his head again, and push the hair around.\n\n'I see nothing of the sort. She was having you on.'\n\nHe tips his head up to look at me, and I think we realise he's getting quite an eyeful of my breasts because we both adjust quickly, me springing away from him altogether, and he dipping his head downwards. I shuffle the plates together on the table, carry them to the kitchen and start rinsing them under the tap until his hand lands on the back of my neck.\n\n'I said I'd do that,' he says, using his most firm and insistent voice, using his hand to push me away from the sink.\n\n'Um, ok.' \n\nI step away, run my hands down my jeans to dry them, wondering if he's always touched me like that and I never noticed until now, or if this is new. It feels new. Or maybe only just I'm noticing it now. \n\nHuh. \n\nIt's confusing. But not unpleasant. Not at all. Which makes it all the more confusing.\n\n'What are you going to do this evening?' he's asking me, swishing the water around the sink. 'More reading for college, or do you want to watch something on telly with me?'\n\n'Let's watch something together,' and I'm gladly running through some options with him while at the back of my brain I'm trying to work out whether it's just me who's enjoying Sam's touch, or if he's enjoying it too.\n\nWe settle on his sofa, pulling the dust sheet off it first, this time. He finds 'The Bridge' and while we wait for it to come up onscreen I automatically slide my bare feet underneath his thigh. It's how we've always sat together, him with his legs stretched out in front of him, one arm along the back of the sofa; me tucked up at the other end, my legs out along the seat. As soon as I've done it, I wonder if I should change position. My feet are right under his thigh. How come that didn't feel as \u2013 intimate \u2013 before now? But he seems ok with it; doesn't bat an eyelid at it, actually. And it keeps my feet warm, which is important. I hate having cold feet.\n\nWe're halfway into the programme when I wriggle my toes, trying to relieve the tension of watching imaginatively macabre criminal behaviour \u2013 Nordic noir, and all that, loving it \u2013 and Sam shifts around a little bit, dropping his hand from the back of the couch to my ankles. It's warm. We both ignore it. But it grows warmer the longer he leaves it there. My mind seesaws between concentrating on the programme and stopping myself from wriggling my toes again. Because I don't \n\nwant him to move his hand. \n\nHuh. \n\nNow I've admitted that to myself, I try to turn my full attention back to the telly. \n\nHe skips straight on to the next one in the series without consulting me, because he knows it's the right thing to do. By the time that's come to an end. I've slid further down the sofa, but my feet are still tucked under Sam, toasty warm, and his hand is still resting on my ankles.\n\n'Another?' he asks.\n\n'Yeah, I'm hooked. Besides, it's not even dark out yet.'\n\nHe smiles. It's late June in London, so of course it's not dark yet. But he puts the TV on pause, gets up and leaves the room. Going to the bathroom, it seems. I stretch and wriggle my toes madly, working out some of my pent-up energy. When he comes back, I'm sitting up, cross-legged. He sits down as before. I briefly consider moving closer to him, maybe letting my head rest on the arm that's stretched out along the back of the sofa again. But I don't.\n\nThe only light in the room is what's spilling out from the hallway light and the telly as we finish watching the third programme.\n\n'Ok, that's enough for tonight,' I yawn.\n\n'Agreed.'\n\n'Same time tomorrow morning, boss?' \n\n'Yeah. And we'll leave here to see mum after lunch. If you still want to come with me, that is?'\n\nHe turns to look at me in the half-light, his face in shadow.\n\n'Great, yes. Of course I do.'\n\nMy heart seems to be climbing up my throat, and for a stupid, panicked, moment, I think he might kiss me. How long are we frozen like that? I can't say, but it feels \u2013 exposed. Exciting.\n\nIt's not until I'm running up the brilliantly-lit stairwell, taking it two steps at a time, back to my flat, that I wonder how it didn't happen. How we didn't kiss.\n\n+++\n\nI fling myself down on my bed.\n\n'How did it go today?' Alice asks from underneath her duvet.\n\n'Good. We've almost finished the bedroom, and made a start on the living room. It's looking great.'\n\nHer head emerges, and she looks cross.\n\n'That's not what I meant, and you know it.'\n\nI roll over, not wanting to entertain another interrogation.\n\n'Cut it out, Alice, I'm not in the mood.'\n\nAnd that was exactly the wrong thing to say, as she's leapt out of her bed and pounced on mine in a flash.\n\n'What happened? You sound depressed.'\n\nI groan loudly, facedown. It makes the mattress vibrate.\n\n'Cora? What happened?'\n\n'Nothing. Something. I have no idea,' I bleat into the bedding.\n\n'Cora, turn over, I can hardly hear you. Come on, girl,' and she's tugging at my shoulder.\n\nI roll back. To be fair, she's looking honestly concerned.\n\n'So? Give!'\n\n'Nothing happened. Not in the way you mean, I'm sure. But \u2013,' I blow air out of my cheeks and, because it's Alice, and because I've always ended up telling her pretty much everything, I ramble through a list of all the things that have seemed different with Sam these last two days. By the time I've almost got through it, Alice is excitedly clapping her hands at me.\n\n'But this is all good, Cora, don't you see?'\n\nI pull a face at her.\n\n'I think he wants to make a move, but he's worried you might not feel the same as him.'\n\n'How do you work that one out?'\n\n'Because, my big, clever sister, it's obvious. Asking you about boyfriends. Trying out a little bit of touching, seeing how you react. It's so obvious! Duh.'\n\nI stare at her, thinking I must have been off school the day they taught this lesson.\n\n'So? I mean \u2013 joking aside \u2013 how do you feel about Sam?'\n\nI shiver. It's scary when Alice gets serious with me like this. I hug my knees to my chest, not trusting myself to reply without breaking out into a silly grin. Which I guess is my answer. \n\nHuh. \n\nThere was I, going along thinking Sam was just Sam. Same old Sam. Except the more I've been looking at him, the more I've seen a different, grown-up version of Sam.\n\n'I don't blame you, sis. He's cute.'\n\nI snort, but not for the reason Alice thinks.\n\n'Maybe tomorrow, if he doesn't make the first move, you should get a length of rope and tie him to your waist, see if that lights his fire.'\n\n'Argh, Alice!' \n\nI whack her over the head with my pillow; so done with her now.\n\n+++\n\nSaturday morning is similar to Friday, except he's making pancakes. He's good, isn't he? He looks like he got a better night's sleep, and is already humming to himself in the kitchen.\n\n'How's you, this morning?' I ask.\n\n'Yeah, good. You?'\n\nHe half-turns his head to catch me in the corner of his eye, a little smile on his lips.\n\n'Great.'\n\n'No more dizzy spells?'\n\n'Uh \u2013 no.'\n\n'Good. I didn't like that, yesterday.'\n\n'Sam, it's nothing to worry about. I'm fine.'\n\n'If you say so. Now take these out to the table,' and he's handing me cutlery and a bottle of syrup.\n\nWe don't talk much as we eat, except to plan out the morning's decorating, lunch, and what time we should aim to set off to see his mum later. And we're both pretty quiet for the rest of the morning and into lunch, the only noises in the flat coming from the radio in the kitchen and the paint rollers against the walls. \n\nIt's warmer today. By lunchtime, we've both worked up quite a sweat. Over more food, we discuss options for painting his bedroom. He seems to blow hot and cold on it, even though I'm pretty sure he wants it redecorated. Maybe it's because, unlike the two rooms we're working on now, he hasn't cleared it all out in preparation already.\n\n'We're leaving the washing up 'til later, C,' he announces, getting up from the table. \n\n'I don't know about you, but I need a shower before we go to see mum,' and with that, he's pulling his t-shirt up over his head, walking towards the bathroom.\n\n'Don't mind me,' I murmur, but by now, I'm freely admitting to myself that I'm enjoying the view. \n\nHmm.\n\nOnce he's no longer in my line of sight I run up to my flat for my own shower and change of clothes.\n\n+++\n\nAs before, we meet at his car. I catch the keys.\n\n'You're driving,' he mutters, folding his legs into the passenger seat.\n\n'Shit,' but I get in anyway.\n\n'You didn't think the run to B&Q was all there was going to be, did you? This journey's long enough for you to be able to put your foot down a bit.'\n\nI roll my eyes.\n\n'Put some music on, then?'\n\nI'm pulling out when it comes through the speakers.\n\n'Paul Weller? You're such a white boy.'\n\n'Shut up,' he replies, but with a smile. 'You can have Stevie Wonder, Beyonce, Stormzy, Eartha Kitt \u2013 if you're going to be tribal about it. Take your pick.'\n\n'Nah, you're alright. Now \u2013 where exactly are we driving to?'\n\nHe outlines the general direction; the A2, A20, M25 and finally the A21 down into Kent. I squint at him, nervous. He promises to provide more detailed directions and with plenty of advance warning. He knows this route well by now.\n\nWe're pretty quiet on the drive too. When I catch glimpses of him from the side, I can see he's chewing at the insides of his mouth, so I know he's worrying about something. I think about that, but not as much as I have to think about being back on the road.\n\nOnce we hit the M25 he's telling me to put my foot down and hit the speed limit, where there's room on the road. It's like when he was teaching me, getting me used to the way cars behave at different speeds and on different kinds of roads. By the time he's guided me into the care home car park, my arms are shaking a bit. \n\n'That's the longest drive I've done for over a year, Sam.'\n\n'Wasn't so bad, was it?'\n\nI laugh, shaking my arms out.\n\n'You were good, actually.'\n\n'Why thank you.'\n\n'Must be you had a good teacher once.'\n\n'Fishing for compliments will get you nowhere, Sam Connolly.'\n\n'Doesn't hurt to try.'\n\nWe get out of the car. It looks nice, this care home. A modern building and beautiful gardens. The first thing I notice in Mary's room is the huge glass door and window looking out onto the garden. They've brought some of the things here that used to be in the flat. An embroidered sampler in a frame, an old horseshoe hung over the door, and the scary, bleeding Christ crucifix that used to terrify me when I was little.",
        "'Cora Jane, look at you! What a pretty dress you're wearing.'\n\nHer speech is harder to understand, and her movements are limited, but she's still the same energetic, funny, stylish Mary. \n\n'Love the hair,' I say, once she lets go of me and I can straighten up over her. 'Do they do it here for you?'\n\nAnd we chatter on like that for the afternoon. Soon after we've arrived, Sam disappears \u2013 to organise some cups of tea, it seems. And then produces a Jamaican ginger cake he must have brought with him. It's Mary's favourite.\n\n'This is your mam's fault, Cora,' she beams at me. 'She introduced me to ginger cake, you know.'\n\nI nod, the taste taking me right back to being a little girl, when we would come home from church on Sundays and have juice and cake together, sitting in our best clothes. Not that me and Sam's families went to the same churches, but we did grow to share the same taste in cake. \n\nSam pushes Mary out of the door and into the garden, and we walk around until we find an empty seat for me and Sam to sit, parking Mary up next to us. It's really warm now, and we are surrounded by the bright greens of an English summer garden, dots of pinks and blues where the plants are flowering.\n\n'It's really pretty here, Mary,' I sigh, and I take her hand in mine.\n\nSam wanders off again.\n\n'So, Cora Jane, tell me, do you have a handsome young fella back at that university?'\n\nI grimace, but I'm taking it lightly.\n\n'No I do not, Mary. I want to get a good degree.'\n\n'Sure you do. You're a good girl, so you are. But there's no harm in having a fella to pay you some attention once in a while?'\n\nShe gives me a look of pure mischief.\n\n'Mary, you are a shocker,' I laugh.\n\n'To be sure. And how are you and Sam getting on these days? He misses you, you know.'\n\nMy cheeks pink up, noticeably enough for Mary's smile to get broader.\n\n'Does he?'\n\n'Course he does! Yes, Cora Jane. He's been hoping to see more of you, now you're back for the summer.'\n\n'Well he's got me hard at work decorating the flat, you know, before Danny moves into the other bedroom.'\n\n'Has he now? That's my Sam. Clever lad.'\n\nWe both giggle at that.\n\n+++\n\nMary gets tired and wants to have a nap before dinner, so we take her back to her room and say our goodbyes. Sam wraps up the ginger cake and leaves it on her table.\n\nThe car is boiling hot when we open the doors. It's been baking in the sun most of the afternoon.\n\n'I'll drive home,' Sam's saying, 'Don't want to wear you out.'\n\nI look at him, thinking it's not the first time he's said that to me these last couple of days, but he's busy racking the seat back to fit his legs in under the steering wheel, so I can't see his face.\n\n'Ok, but be sure you hit the speed limit at least twice on the way home,' I reply smartly and am rewarded with a quick tick of his mouth.\n\n'It seems a good place,' I say, watching the home recede from view.\n\n'Yeah. She's happy enough there, which is the main thing. Costs a bomb, so it's just as well she paid into that healthcare scheme all her working life, otherwise I don't know what we would've done.'\n\n'Right.'\n\n'And even now, Sean and Michael pay towards the cost.'\n\nThose are his two brothers. They are both in good jobs, from what I can recall, although they also have their own families to support.\n\nWe're stopped at a light.\n\n'They won't let me contribute until I'm earning more money,' he admits.\n\nHe sounds \u2013 sad? Frustrated? I touch his arm, lightly.\n\n'You will. And anyway, you supply the cake.'\n\nThe light turns, his arm drops down to shift gear. I turn my head to look out of the window and don't expect it when his hand brushes my thigh, pausing long enough for us both to know it was deliberate.\n\n'Thanks,' he says, quietly.\n\n'You will, Sam. You'll make a success of going into business with Sanjeev, I know you will. You're a hard worker.'\n\nHe doesn't reply, but I sense his spirits lifting a little, and feel glad.\n\nWe're on the M25 when he asks, 'Dinner?'\n\n'Did we do some decorating today?'\n\n'We did.'\n\n'So then \u2013 yes. Dinner is part of the contract.'\n\n'Ok. Good.'\n\n'We can assess how long it'd take us to clear out your bedroom and decorate it, once we get back to the flat. I mean it's only Saturday now, which gives us three more full days before we have to go back to work. And we've got, what, one more coat on the living room walls to finish off? I think it's easily do-able. To paint your bedroom as well, I mean.'\n\nHe seems noncommittal again, so I leave it. \n\n+++\n\nHis flat is warm too, and I open up all the windows, leaning out of the one in the kitchen, waiting for him to finish in the bathroom so I can use it. The traffic had been heavier than when we'd driven out, and the journey had taken close to two hours, so we're both in need of a pee; Sam more in need than me.\n\nI feel, rather than hear, him standing behind me.\n\n'Better?' I ask.\n\n'Much,' he sighs.\n\nIn the bathroom, I rub some of the cool water around my neck.\n\nHe's standing in front of the open fridge.\n\n'What do you want to drink? Hey, you're feeling alright?' \n\nI touch my neck where little drops of water are sitting on my skin.\n\n'Yes. Just a bit too hot, that's all.'\n\n'Have some water first, then,' he's already holding a glass under the tap for me.\n\n'Thanks.'\n\n'And one of these?'\n\nHe holds up a bottle of beer.\n\n'That too, thanks.'\n\nHe twists the caps off two bottles, hands me one.\n\n'What's for dinner?'\n\n'Noodles. And some salad, probably.'\n\n'Nice.'\n\n'If you want ice cream, you'll have to go out for it.'\n\nI click my tongue at him.\n\n'I know. It's terrible service here.'\n\nI tut again and wander out into the living room, casting my eyes over the painting we've done so far.\n\n'I do think we need to do one more coat in here,' I call out to him; hear him grunt in reply.\n\nI walk down the hall into the bedroom we've pretty much finished. Think about whether the skirting boards look like they need painting or not. Not, I decide.\n\n'So how long's it going to take us to clear the stuff from your bedroom? Do want to paint it a shade of blue again, or what?' \n\n'Sam?' I call out again.\n\nNo reply. \n\nWithout thinking I push the door to his room open. It's neither tidy nor a bombsite. The sheets on his bed are pulled back. Some of his clothes are piled up on a chair in the corner, and there are some boxes lined up along one wall, full of stuff he's moved here from the living room while we decorate it. I don't recognise any of the furniture, and I'm just trying to work out how long ago I was last in here, when I hear Sam in the hall, the sound of his front door closing.\n\n'Cora?'\n\n'In here,' I call out, belatedly struck by how I've so rudely barged into his bedroom without asking, and, looking up, catch sight of pictures and photos he's hung on the wall, and \u2013 above that ... \n\nHuh.\n\n'Cora?' \n\nHis voice sounds rather urgent this time, and as I look harder at the wall over the bed, I think I know why.\n\n'Uh \u2013,' my voice sounds weak.\n\n'Oh. Shit,' his voice is right behind me, and heavy with dismay.\n\nWe stand there. \n\nI don't know what to say. \n\nAnd I'm sure he doesn't.\n\n'I'm sorry, Sam. I shouldn't have come in here. I just didn't think.'\n\n'Uh \u2013,'\n\nPoor Sam. I can feel his embarrassment rolling off him like a heatwave. \n\nI gulp in some air for courage, and turn around. His white Irish skin has gone bright red.\n\n'When did you do that?'\n\n'Err \u2013 ah shit. The night before last.'\n\nHe won't meet my eyes, but sighs heavily, rubbing a hand in his hair.\n\n'Cora \u2013,' \n\nBut I shake my head at him, and reach for his hand.\n\n'What were you planning to do?'\n\nI watch as a whole range of emotions play across his face, and I squeeze his hand.\n\n'I don't know. Not exactly, anyway. But I thought maybe if it got to a point where I thought you, \u2013\n\nwhere we \u2013,'\n\nHe stops. I squeeze his hand again.\n\n'Cora, it's just something I've been trying to work up the courage to say to you. Or show you. That's all.'\n\nAnd now he looks at me, his eyes bright.\n\n'No-one's ever said that to me, Sam.'\n\nI turn to look again at the words he's painted on the wall over his bed: \"I'm in love with you Cora\".\n\nI imagine I'm as red in the face as Sam. I certainly feel it.\n\nHe tugs at my hand, just gently; his way of asking me to say something.\n\n'It's going to take me a while to get used to the idea of it, Sam.'\n\nHis fingers flex, then relax.\n\n'It's only this week I've begun to think like that about you. It's been a bit unexpected, to be honest.'\n\nI hear his breathing behind me. I can't stop squeezing his hand.\n\n'I don't want to spoil what we have, Cora, so I've held back saying anything to you. But I wanted to kiss you so much last night \u2013 and I chickened out \u2013,'\n\n'Huh. That explains it, then.'\n\nHe sort of laughs a bit at that. I think he's relieved I haven't stormed out on him.\n\n'What do you mean?'\n\n'I went home last night wondering how it hadn't happened; whether it'd been me or you who'd chickened out, as you put it.'\n\n'Really?'\n\n'Yeah, really.'\n\nHe gives me a bit of a look, and tipping his head to one side; asks, 'What are we going to do now?'\n\n'I don't know about you, but I'm really hungry and, more to the point, still owed a dinner.'\n\nHe definitely laughs at that.\n\n'Ok. You're right. I have an important contract to fulfil.' \n\nHe seems grateful to be given something else to focus on, but doesn't let go of my hand; instead he pulls me along the hall and into the kitchen with him.\n\n'Put some water in that pan, will you, and put it on to boil?' he bosses me.\n\nI do that, then watch him finish chopping up the vegetables. The look on his face as he'd tried to explain himself just now, and the way he concentrates on stirring the vegetables around the wok \u2013 I just want to stare at him, wondering how everything is changing so fast. \n\nI think he's pretending not to notice me.\n\n'Drop the noodles into the water, will you? This meal's a sprint finish,' and he's smiling, humming, shaking the wok over the flame.\n\nI pick up the chopping board to drop the waste into the bin, but see it's not got a bag in it.\n\n'I was putting the rubbish out just now,' he explains. \n\nI shake my head in another apology.\n\n'Bowls?' he points me to the cupboard.\n\nI extract bowls and forks and more beer, and take it all into the living room to the table. The remains of lunch are still there, so I tidy that up, and reverse back to the kitchen with the dirty plates, and set them down next to the sink.\n\n'We forgot about these,' I smile at him, and my heart lifts when he gives me a sweet smile in return.\n\n'I'll wash them up after,' I say, watching him flick the gas burner off.\n\nI follow him over to the table, grabbing the roll of kitchen paper on the way. \n\nHe dishes up. I tear off some of the kitchen paper and flap it at him.\n\n'You'll need to tuck this into your t-shirt, if I know anything about how you eat noodles.'\n\nHe arches an eyebrow at me, but takes it anyway.\n\nWe eat. \n\n'This is good, Sam.'\n\nHe nods, too busy eating to reply.\n\nI drink some beer, looking at him. I find it hard to describe him because to me, he's just Sam. He has Sam's light brown hair, blue eyes, friendly mouth. He's Sam's height, with his long legs and wide shoulders. Nice fingers. I've always liked those. They're long and he has nicely-shaped nails.\n\nHe pauses eating.\n\n'So, how long do you think it's going to take you to get used to the idea?'\n\nHe flicks his eyes up at me, his mouth giving a little tick. Back to being Sam, then. But that's ok. I can give as good as I get.\n\n'I haven't finished eating dinner yet.'\n\n'Yeah?'\n\n'And then there's the washing up to do.'\n\nHe nods his head, resumes eating.\n\n'And we've got more of 'The Bridge' to get through. Not to mention the sad dearth of ice cream. So \u2013 a while longer, I'd say.'\n\nHe just chuckles.\n\nBut we do finish eating, and we wash up.\n\n+++\n\nHe's turned on the TV, sitting in his usual position on the sofa, when I return from the bathroom. I sit down on my side of the sofa, cross my legs in front of me.\n\n'Episode 4, then?' I ask him.\n\nHe picks up the remote.\n\nI lean forwards.\n\n'Sam?'\n\n'Hm?'\n\nHe turns his head.\n\n'Are you going to kiss me tonight?'\n\nHe smiles.\n\n'Only if you'll kiss me back, Cora.'\n\nI lean closer, then stop.\n\nAsk him, 'Are you nervous about it?'\n\n'Only that you might be a terrible kisser.'\n\nI laugh. \n\nAnd then he kisses me. \n\nHuh. \n\nSo, so gently. Maybe a bit tentatively, at first. \n\nBut I do kiss him back, so he gets braver about it and so do I. Because kissing Sam turns out to be \u2013 good. Really good. I shuffle closer to him, tilt my head and open my mouth. His breath is warm on my face. When he puts his hands on my shoulders I open my eyes. He's already looking at me, and I pull back just a little bit, to get used to it \u2013 his look of love.\n\n'Sam,' I say against his lips, and he blinks.\n\nI lean even closer; he's pulling at my shoulders so I swing my hips, kneel up. It's awkward, though. Reluctantly, I move back, our lips part, and his face crinkles in disappointment.\n\n'Terrible?' I ask, holding his eyes with mine.\n\n'Not very good, no. Need more practice, probably.'\n\nHis hands pull at me again, so I climb onto him, him closing his legs together for me to fit myself over his lap. It stretches the skirt of my dress, so I raise it up my legs. He looks down at where my skin's been exposed over my thighs, lays one hand flat against it. A shiver runs up my spine, catches in my throat.\n\n'I've always liked the colour of your skin, C.'\n\nI look at his hand, pale and pink, lying on my darker skin.\n\n'But I didn't know it would feel so good.'\n\nI sigh. It's fascinating to see and hear this new side of Sam. It's sexy. He's sexy. \n\nHuh.\n\nHe flexes his fingers, digging them into my thigh. Shivering again, I bend to his mouth, more firmly now. An intake of breath, his mouth pulls and pushes at mine, his tongue slipping inside, both his hands gripping me harder. I run my hands around the back of his neck. His hair's so short there it feels like soft sandpaper against my fingertips. He shudders; a humming noise bursts out of his mouth. I sit back.\n\n'You seem to like that?'\n\nHis face has gone a bit pink.\n\n'What happens if I kiss you there?' I ask, and as I press my lips to his nape, more muffled noises escape from him.\n\nI inhale, loving his smell \u2013 his skin and sweat, mixed with the scents of whatever he washes himself with. He drops his head forwards onto my shoulder as though he can't do anything other than submit to the feel of my mouth, his hands unmoving, one trapped between us, still on my thigh, the other on the back of my shoulder. I kiss and lick at him, running my tongue along his skin; splay the fingers of one hand higher into his hair, scratching his scalp. His breathing quickens against my shoulder. I like the feeling of it, his hot breath chasing over my skin. It brings me out in goose bumps and I smile into Sam's neck, wondering if he can feel that as well, or if he's too wrapped up in his own sensations. \n\nI don't think I've ever made a man respond like this before. I like it. A lot. \n\nI briefly wonder when I'll have to confess to my lack of experience. Then wonder how many other girls have done this with Sam. And push both thoughts to the back of my mind. \n\nRunning my fingers over the top of his spine, down his neck and into his t-shirt, he bends further, willing me to explore more of him. I tug his hair with one hand, stroke and smooth his downy skin with the other. He groans, a noise I feel through his throat as much as hear. \n\n'Sam,' I whisper.\n\nHe lifts his hips, sliding us down the seat a little way, dropping his hand from my shoulder to my waist, holding me in place then urging me closer. He's hard. I can feel him now, underneath me. I roll my hips over and around him. It feels really good. I'm already slippery in my knickers. I graze my mouth on his skin again, give him a gentle bite. He groans more loudly this time. \n\n'Is this any good? Or still terrible?' I ask.\n\nHe lifts his head, looks into my face, and I see he's past joking. The expression in his eyes grabs at my heart.\n\n'Cora \u2013,' \n\nHis hand is on the back of my head, pushing me to him, his mouth open and hungry for me. Insistent. \n\nWe kiss and kiss. \n\nHe moves his hips, his cock hard between us; his hand on my thigh suddenly coming to life, moving up and underneath my dress. Slowly. But not tentative. Not now. \n\nI tremble as his fingertips touch the edge of my knickers and maybe breathe some noises of my own into Sam's mouth. I've let boyfriends touch me there before. But I never really wanted them to. Not like now. I roll my hips more, pushing myself to him, moaning again when I feel him slide more of his hand onto me. Rotate more, his hand firmly inbetween my legs now, palm up, holding me, curling his fingers into me. It's electric. My hips buck out of my control and I gasp, jerking away from his mouth.\n\n'Sorry \u2013,' he starts to say.\n\n'No. No, don't. It's me.' \n\nI try to catch my breath. His hand relaxes underneath me and he starts to pull it away.\n\n'No, Sam. It's ok. I was just taken by surprise.'\n\nI watch his eyes, fascinated by how big his pupils have become. \n\nI frown, 'The thing is \u2013 I don't have that much experience.'\n\nHe chews at the inside of his mouth. \n\n'Oh?'\n\nI close my eyes, overcome by the idea I'm here with Sam \u2013 my best friend Sam, the boy I grew up with and have until recently thought of as my big brother \u2013 feeling more turned on than ever before in my life. Pressing myself onto his hard cock, and loving it.\n\n'Mmm.'\n\nHe runs his arm around my waist.\n\n'It doesn't matter, Cora. Does it?'\n\nHe waits for me to say something, his hand stroking me. I'm having trouble thinking straight.\n\n'Is this too weird?' He shifts under me. 'I mean, I've been thinking about this for a long time, but it's new for you. Maybe it's too \u2013,'\n\n'No. I mean yes. Yes, it's a bit weird. But no \u2013 that's not it.'\n\nHe squeezes my waist, and looks a bit less worried. I kiss him, lightly.\n\n'I nearly came when you did that to me with your hand, Sam. I wasn't expecting it, that's all.'\n\nHis eyes pop wide open.\n\n'Really?'\n\n'Really.' \n\nI kiss him again. It's getting to be a habit.\n\nHe kisses me back.\n\nI definitely think we're getting the hang of it.\n\nI tickle the back of his neck with my fingers and love it that it makes him laugh in my mouth. And start to pull at his t-shirt, thinking I want to find other places where he might be ticklish. He leans forward, watching me as I tug the shirt up his chest and over his head. I touch the gold cross around his neck, kiss the spot where it sits just below his collarbone; kiss all along his collarbone, to the right, then the left. He sits back, slipping us down to where we were before, fitting his cock inbetween my legs again, both his hands holding on to my bottom now. \n\nI use my hands and mouth to find out where Sam's skin puckers, where his muscles twitch, and what makes his stomach ripple. The more his body responds the more I want to touch him. He's lifting his hips up into me, rhythmically, patiently. We're building up quite a bit of heat between us. It's heady. Full of promise. I raise myself upright again. Sam's dropped his head down onto the back of the sofa, his eyes closed, until he realises I've stopped working on his chest.\n\n'What were you doing to my skin? It felt amazing.'\n\nI smile at him.\n\n'Not sure. Just trying to get to know you.'\n\n'Wow. It was great. No girl's ever \u2013 I mean \u2013 you're the first to touch me like that.'\n\n'Really?'\n\n'Other girls have just seemed to want to get straight to it, if you know what I mean?'\n\nI wrinkle my nose.\n\n'That sounds ... a bit functional?'",
        "He gives out a burst of laughter.\n\n'That's such a Cora Comment!'\n\n'Yeah?'\n\n'Hmm. Anyway, about this experience/inexperience thing.'\n\n'Yes?'\n\nHis hands are restless around my waist.\n\n'When you said you don't have much experience, how much is not very much?'\n\n'Is that a riddle, Sam?'\n\nBut I'm not teasing him. Not really. So I answer him more seriously.\n\n'Um, ok, I'll summarise. Things I've done include lots of kissing, having a guy touch me all over but mostly still in clothes. Or at least \u2013 I'm saying I've never been completely naked with anyone. And I've been inside a guy's underwear. Sometimes,' I finish, wishing I could've said all that without going bright red, or dancing around the subject like a kid. \n\n'Now you have to tell me yours, Sam,' I say, cringing at how he must be thinking I'm little more than a green teenager.\n\n'Ok. But before we get to that \u2013 why haven't you gone any further than that?'\n\nI give him a look.\n\n'Hey, hey. I'm asking because I don't want to take anything for granted. And we haven't ever really talked about things like this, have we, in all the years we've been friends?'\n\n'I don't really know, Sam. Just didn't feel like I wanted to do more at the time.'\n\n'So it's not about the church? Because if it is, I'd respect that.'\n\n'Hey, you're the one still wearing a crucifix, Sam, not me.'\n\n'Fair point,' he concedes.\n\n'No, it's not about the church. I'm not saving myself for my wedding night or anything like that. So? What about you?'\n\n'Well, I'm not saving myself for marriage either. But I am still a virgin.'\n\nI'm really shocked, and show it.\n\n'That surprises you?'\n\n'Yes. I thought \u2013 well, I just thought you would have had lots of girlfriends by now.'\n\n'I have. And I've been in bed with them too.'\n\n'Then why \u2013? How?'\n\n'Ok, well, full confession, Cora. At school, once I started to want girls, I found I only wanted you.'\n\nHe pulls my hands into his, pushing his fingers through mine, to distract me from interrupting him, I think.\n\n'I know \u2013 you didn't have a clue, did you? I didn't say anything to you then because I could see you didn't feel the same about me at all. And I was dead scared of your mum. Even so, I sort of hoped you'd start to feel the same about me one day. That we might've been each other's first.'\n\nHe shrugs. I pinch his fingers in mine.\n\n'Sam. I had no idea.'\n\n'I know. And since you've been away at college I just haven't met anyone I wanted to lose it with. Not even with someone as nice as Alyssa.' \n\nHe gives me a wry smile.\n\n'I was beginning to think there was something wrong with me.'\n\n'Oh Sam.'\n\nWe sit there for a bit, taking it in. Our confessions. \n\nHe pulls our hands together in front of me, then lets them go as he reaches up to my hair, a wicked smile on his face.\n\n'I'm taking my life in my hands, Cora, and I'm touching a black girl's hair. I've been itching to do this for so long.'\n\nHe knows this will make me laugh. It's a thing we used to joke about a lot \u2013 how no man should ever, not ever, try to talk about, or touch, a black girl's hair without her express and prior permission. He's pulling my hair out of the ponytail it's been in all day today. And to be honest, my hair's not proper black girl's hair. I suppose it's from my dad's side of the family, and he's white, so it's just kind of wavy. Sam's pulling it down around my face; fearlessly running his hands through it.\n\nStill thinking about what he's said, the words he's used to say it, I start picking at the buttons down the front of my dress. He drops his hands to push the dress off my shoulders and down my arms as I release it, button by button, pulling it open, his eyes moving between my face and my breasts. I'd felt a bit silly putting on one of my nicest bras after showering this afternoon, and now I'm glad I did. It's just white lace with a little blue trim to it, but it's pretty. He seems rather transfixed by it.  \n\nHmm. I slip my arms out of the sleeves of the dress and it sinks down around my waist.\n\nSam's hands are hot and big around my ribcage. It's his turn to watch me wriggle and shiver, finding out what's ticklish for me. As he thumbs over my nipples through the lace I jump, feeling it inbetween my legs.\n\n'Nice?' he asks, and I nod.\n\nHe does it again, and again.\n\nI kiss him, and kiss him again. And again. \n\nI think we're getting really good at it.\n\nHe reaches around my back, asking me with his eyes, plucking at the hooks once he knows he has permission. Draws each strap gently down my arms. He looks for long enough I begin to wonder if there's something unusual about them, or if he's disappointed. I look down; am taken by surprise when he uses his hands to tip me back a little, and kisses my left breast. Lightly. On the side. Pressing his cheek to it.\n\n'Let's start where the heart is,' he's murmuring.\n\nAnd licks all the way along the underside in to my sternum, presses his mouth there.\n\n'I can feel your heartbeat,' he says, his lips dancing on my skin.\n\nI'm sure he can. I feel like it's about to drum its way out of my body. \n\nHe's not stopping, swinging his head and tongue underneath my right breast, along my side, tracing each rib, then back again. His stubble is rough \u2013 like coarse sandpaper, if you will \u2013 and we both discover that if he brushes his chin or cheek close to a nipple, it makes me gasp. He tortures me by pushing his chin over my nipple in a circle, not stopping until I start to squirm too much for him to hold me still. It's hot and raw, almost sore. He opens his mouth; I hold my breath and watch as he sucks on it, his warm mouth still cooler than my nipple, then releases it. Blows air on it.\n\n'Oh fuck, Sam,' I can't stop myself from saying.\n\nHe's surprised. I feel it in his body. I don't say that word often. Not out loud anyway. I am still a bit churchy, huh.\n\n'Ok?' \n\nI gasp and laugh and shake in his hands. And twist to push my right breast to him.\n\n'And this one?'\n\nHis eyes widen. \n\n'I didn't think you'd be like this, C.'\n\n'Is that good or bad?'\n\nHe grunts.\n\n'Both.'\n\nAnd dutifully treats my right nipple in the same way. Maybe for longer. It feels endless. A beautiful torture. I raise my arms over my head. He opens an eye to look. Abandons kissing my breast and jerks me into his chest.\n\n'Cora, bloody hell, you're amazing, you know that?'\n\nI drop my arms around him, kiss his neck below his ear.\n\n'Will you come with me, Sam?' I ask him quietly, into his ear, nervous of saying the words out loud.\n\n'Because that's what you meant, isn't it? When you said you hadn't wanted to lose it with anyone before? Not just your virginity, but not coming either?'\n\nHe tightens his arms around me like a vice. So tight.\n\n'Yes.'\n\nI suck on his earlobe. \n\nThen push him away to run the palms of my hands down his chest. Pinch his nipples to see how he likes it. He jerks at it, his hips lifting both of us upwards. And laughs, almost giggles, as I touch my fingers along his stomach and down to his jeans \u2013 so cute, but I can't say that to him. He has to help me unbutton the fly. I shift my hips back to give us more room, pulling my bra out of the way, balancing on him as he lifts us higher, pulling his jeans and underwear down his hips, sighing, his cock freed from his boxers.\n\n'Better?' I ask him, looking at the relief on his face.\n\n'Much. It was getting pretty uncomfortable,' he smiles, adjusting himself again.\n\nI haven't really seen one as clearly as this. The head is shiny. It looks sticky.\n\n'How do you touch it?' I ask, suddenly, reaching for his hand.\n\n'Huh?'\n\nHe wasn't expecting that.\n\n'Show me how you touch it,' I say, grinning at the surprise in his lovely blue eyes.\n\nHe blinks, lifts his chin just a little, like he does when he's accepting a challenge.\n\n'First of all, I'm right-handed, Cora,' he grins back, holding up his right hand in my face.\n\nI drop the hand I'd taken hold of.\n\n'Well ok \u2013,' but he cuts me off with a kiss.\n\nAnd uses his hand (the right one) to grab mine and pull it down to him, wrapping it around his cock. It's hot, and really wet around the head. He pulses in my palm. I hold still around him, torn between his kiss and wanting to look at his cock. Both feel so good. I moan. He throbs more heavily in my hand. I moan again, my brain overloading, feeling him respond again. I twitch my hand, break away from his mouth and look down to where we're both holding him.\n\n'You look really sticky,' I say, moving my hand again over his head.\n\n'Bloody hell,' Sam's voice is shaking.\n\nI look up at his face.\n\n'Nice?' I ask, smoothing my fingertips around him.\n\nHe exhales.\n\n'God, C. More than nice.'\n\nHe covers my hand with his again, starts to move it up and down the length of him.\n\n'I don't think this is going to take long. I'm amazed I haven't come already, but if you do this \u2013,' he breaks off, shutting his eyes for a second or two.\n\nI follow his lead as he pulls my hand up and down him, riding him as his hips jerk us both around on the seat. I lean into him, wanting to be closer, lie my head against his neck.\n\n'Are you going to come with me, Sam?'\n\nHe growls deep in his throat. His whole body seems to stop, tense, press down into the sofa. And then he comes. Releases a shout, snatches me hard onto his chest as we both pump at his cock, like he needs me to squeeze it out of him, hot and wet all over my chest and his stomach; his heart frantic.\n\nHe clutches me to him until his breathing starts to quieten. Kisses the side of my face.\n\nOpens his eyes.\n\nI kiss his mouth. Gently. He looks soft; vulnerable.\n\n'Sam,' I kiss the word into him.\n\nHe squeezes the air out of me, hugging me.\n\nSome time passes, I'm not sure how long. But I sense he needs it. \n\nHe rubs my back. We let go of his cock, leaving our hands there together in the slick heat. \n\nWhen I feel him inhaling deep into his chest, I sit upright. His head is way back on the sofa. I raise myself up so I can look into his face. His eyes seem really bright when he looks back at me.\n\n'Ok?' I whisper.\n\nHe nods.\n\nI kiss the corners of his eyes.\n\n'Cora,' he starts, his voice hesitant, 'I'm trying not to say it, because I know it's \u2013,'\n\nI kiss his mouth, watch the struggle in his eyes.\n\n'Say what?' I ask him. 'Say it. Maybe I want to hear it, Sam.'\n\n'I love you. I do.'\n\n'Me too,' I say, simply.\n\nBecause it is simple. I just don't know why I hadn't seen it before.\n\nHe stares at me.\n\n'I love you, Sam. How could I not? You're my best friend. And this \u2013,' I laugh, wriggle my hips on him, 'this was a great idea and I don't know how we didn't get around to it before.'\n\n'Shit, Cora!'\n\nHe presses his mouth to mine, and we laugh together.\n\n'We need to clear up this mess,' he says, looking down between us. 'Is it on your dress?'\n\nI reach over to where the kitchen roll is sitting on the table, and we scoop his come off us both. I run my fingers over him. He's softened a bit, but not completely.\n\n'I thought this would go down,' I say.\n\nHis stomach contracts and he snorts.\n\n'Hmm. Still a bit excited.'\n\n'Really?'\n\nHe's not saying anything. I look up.\n\n'What?'\n\n'I'm just thinking that I've imagined this for years, but it pales in comparison to the reality.'\n\nI kiss him.\n\n'Imagined it with me?'\n\nHe nods.\n\n'Like what?'\n\nThere's that little tip of his chin again.\n\n'Well, doing it here on the sofa was always a favourite fantasy.'\n\n'Hmm?'\n\nHe smiles.\n\n'Sometimes over the table.'\n\nI hug myself.\n\n'Anywhere else?'\n\n'My bedroom, obviously.'\n\nHe hesitates.\n\n'But not the bed that's in there now. More \u2013 the old bunk beds.'\n\n'The bunk beds?'\n\nHe looks a bit self-conscious, but still nods.\n\n'Remember there was that little ladder to the top bunk, until we broke it?'\n\n'Mm.'\n\n'Up against that.'\n\n'Sam, you're setting quite an agenda.'\n\nHe blinks.\n\n'Shame we don't have those bunk beds anymore.'\n\n'Shame,' I agree.\n\n'You know, I thought you might be a bit \u2013 shy, repressed, even \u2013 what with how your mum brought you up and everything.'\n\n'Maybe I am. But I don't feel it with you. It all feels different with you.'\n\n'Hm.'\n\n'I trust you,' I shrug.\n\nHe runs a hand down my arm. It makes my nipples tighten.\n\n'And I didn't think it could feel this good.'\n\nI touch my breast, his eyes on me, his hand joining mine there, making the lightest contact with my skin. Hardly brushing me, really. I squirm.\n\n'Just now, when you were moving your hips around so much, I couldn't stop imagining what it'll feel like when they're moving like that into me.'\n\n'Oh wow, Cora.'\n\n'Mm. So \u2013 about contraception?'\n\nHe winces.\n\n'I don't have anything here, Cora.'\n\n'I thought you were a modern sort of lapsed Catholic?'\n\n'Ha ha. Maybe I am. But that doesn't mean I've got stacks of condoms about the place.'\n\n'Not part of the seduction plan?'\n\n'Hey. Cora. This wasn't \u2013 isn't \u2013 about seducing you.'\n\nHe brushes a strand of hair out of my face.\n\n'No. I know that. But I'm up for a bit more seducing if it all feels as good as this, so we'll need some. No way can I let you get me up the duff before I've got my degree, Sam Connolly. Imagine what mum would do to you.'\n\nHe actually shudders. I know she can be fierce, but it's funny Sam seems so nervous of her.\n\n'She's not that bad.'\n\nHe shakes his head at me.\n\n'She gave me a talk, once, about what she'd do to any bloke who treated you badly. It wasn't pretty.'\n\n'Did she?'\n\n'Yeah. I think she was suspecting me of having impure thoughts about you.'\n\n'When was that?'\n\n'I was about fifteen. An impressionable age, let me tell you. I was waiting for you in your kitchen, the day we went down to the lido that first time. With Danny and his sister, actually.'\n\nI vaguely recall a rare, scorching hot summer's day, the lido too crowded, us eating ice cream and Sam teasing me about my new swimsuit.\n\n'And were you? Having impure thoughts about me?'\n\n'Definitely,' his eyes flashing at me; a different Sam.\n\nI grope around to find my bra, and start to put it back on.\n\n'What are you doing?'\n\n'Getting dressed. We're going shopping.'\n\n'We are?'\n\n'Yes! The big Tesco down at the garage will have condoms.'\n\nHe looks reluctant to move.\n\n'Come on, Sam.'\n\n'I'm sorry to see these getting covered up again so soon,' his fingers touching the top of my breasts.\n\n'Sam! You won't see them again until there are condoms in this flat. The way you made me feel earlier I'd have done anything you wanted, and sod the consequences. So come on. Get dressed.'\n\n'Anything?' he grins, suddenly looking more like my best friend again.\n\nI stand up, trying to pull my dress back into shape, finding another wet stain on the skirt that needs blotting off, thankful it's a busily patterned fabric. He's still not moving, both his arms lying along the back of the sofa, his jeans pulled down his thighs, his naked chest. \n\nHuh. \n\nHe really looks good like that. I bend over him, putting my arms on the sofaback either side of his head for support.\n\n'Are you getting dressed and coming to the shop with me, or am I going to have to tie you to me and pull you there?'\n\n'Hey, we have a pact to never bring that up.'\n\nI laugh at how indignant he looks.\n\n'So get dressed, and I promise not to mention it again. Much.'\n\n+++\n\nWe've both washed and tidied ourselves up. But now we're under the harsh, bright white shop lights, I'm feeling really self-conscious. For that reason, and also because Sam's making me look at the boxes of condoms, reading out the names and asking me which ones I think will be best.\n\n'Not so brave now?' he teases me, pulling me into his side and rubbing my arm with his.\n\nI turn away, catch sight of toothbrushes, and pick one up.\n\n'These,' he's saying, pulling one of the boxes off the shelf.\n\nAnd then I hear her. Alice. Her voice is unmistakable. Chatting up a storm with a couple of other girls.\n\nI turn. See that Sam's heard her too. He grabs the toothbrush from my hand and makes for the cashier.\n\nWhispers, 'Ice cream?' at me and gestures over to the freezer cabinets.\n\nIt takes me a second or two, then I get it. By the time Alice calls out my name, I'm pretending to contemplate the available flavours.\n\n'Hey! What are you doing here?'\n\n'Ice cream,' I point at the freezer, avoiding her eyes because I do not want to see if they're taking in my wrinkled dress and hair that's loose around my shoulders.\n\n'What about you?'\n\n'Lin wanted some chewing gum. We're just off down to Brixton.'\n\nI smile. My little sister is a night owl.\n\n'Are you here with Sam?'\n\nI narrow my eyes. Has she already seen him? Surely she has?\n\n'Uh-huh. He's here somewhere.'\n\n'Oh, hi Sam,' Alice is all chirpy, looking over my shoulder, where he must be standing. \n\nI fervently hope he's found somewhere to put that box where Alice won't see it.\n\n'So, what's the decision?'\n\nI look at her, confused.\n\n'Flavour?' she's gesturing at the freezer.\n\n'Uh \u2013,'\n\n'Vanilla,' Sam says firmly, reaching around me to pull open the door and extract one of the cartons. \n\nHe puts it in my hands.\n\n'Ok? Ready?'\n\nI stumble after him and we pay at the desk.\n\n'See you tomorrow,' I call out to Alice.\n\nAnd then we're out on the street.\n\n'What are the chances?' I complain, and he laughs, grabbing my hand and swinging it between us as we walk.\n\n+++\n\nBack in the flat he pulls the box of condoms and the toothbrush out from his pockets. Hands me the toothbrush, cocking his eyebrow.\n\n'I can't run up to my flat each time I need to brush my teeth, can I? So I thought I'd leave this one here,' I explain.\n\nI smile. \n\nHe smiles.\n\nI put the ice cream in the freezer; straighten up, pushing the door closed and he's right behind me.\n\n'I like your thinking.'\n\nI tilt my head, for the first time thinking about our height difference in terms of how easy \u2013 or not \u2013 it's going to be to kiss him while standing. And then I take in that he's shifting his weight from one foot to the other a little; something he does when he's nervous. \n\n'Have we done anything here in the kitchen, Sam. In your fantasies?' I ask him, gesturing around the tiny space, but he snatches my wrist, a raw sound coming from his throat, grabs at the box and tugs me down the short hallway into his bedroom.\n\nI catch sight of those words he's painted over the bed, and flush with heat.\n\n'Let's start in here,' he's saying to me, fiddling with the tiny buttons on my dress.\n\nI smile at him, push him away and pull it up over my head. The feel of his hands makes me wriggle with anticipation as he smoothes them around my shoulders, down my ribs to my waist, where he stops.\n\n'And you?' I tweak his t-shirt; watch him pull it off, enjoying the view.\n\n'These too,' I tap at his jeans; run a hand through his hair as he bends over to pull them down his legs and catch a glimpse of his mouth curling up in a smile.\n\nHe sits on the bed to get his trainers off. I edge towards him and by the time he's bare-legged and barefoot, I'm standing inbetween his knees. The look in his usually mild eyes is fiery. I glance up again at the wall above the bed, unhook my bra, jump at his touch around my hips as he draws me into him, pressing his face into my belly. \n\nHe pulls away, kisses the underside of my left breast.\n\n'Nervous?'\n\nI nod. I am. Huh. My heart's racing.\n\n'Me too, Cora, feel,' pressing my hand over his heart.\n\nI kiss him. Push at his shoulders and put a knee onto the bed next to him. He shuffles back a bit and I pull my other knee up, plant it the other side of his hips. His hands pull me down onto his lap. I shimmy up against his cock. His eyes go wider.\n\n'Let's just see what feels good, Sam.'\n\n'Mmm.'\n\nHe seems lost.\n\n'Like this,' I whisper, grinding a little harder on him.\n\nAnd then his eyes come back into focus.",
        "'I'm worried about it being painful for you, C. I don't want that.'\n\n'Oh, Sam.'\n\nI stroke his back, all the way down, then up around his chest to his face, rasping over his stubble with my fingers, wanting to take his worries away.\n\n'My mates at college said it can be alright if the guy takes his time for the girl to get used to him, you know? If they take it slowly to begin with?'\n\nHe sighs, a frown puckering his forehead. My mind flashes back to Sam as a boy \u2013 he must have been eleven or twelve \u2013 bringing Alice home the day she broke her wrist in the playground, big tears in his eyes.\n\n'You're a big soft white boy,' but I stroke his skin to take the edge off my words.\n\n'Mm. We'll see about that,' as he snatches me to his chest, falls backwards and rolls us until I'm trapped underneath him.\n\nLooking up at him coiled over me on all fours like this, I feel the difference in our size more than ever before. He dips his head down to kiss the hollow of my neck; rolls back onto his knees to pick me up and slide me further up the bed like I weigh nothing at all, and resumes his exploration of my body with his mouth. It's making all the hairs I own stand up on end.\n\n'I've obsessed over this place for years,' he starts murmuring, almost to himself, as he licks my hip bone.\n\n'And this place,' licking my other hip bone.\n\nI exhale; almost a giggle; starting to overload again on how good it feels to be here with Sam.\n\n'Remember those blue trousers you had that were really low on your hips?' he raises his eyes to mine.\n\nI nod. I'd loved them; worn them to death.\n\n'I could not get enough of looking at you in them. How these hip bones were so exposed.'\n\nI sigh. He's been looking at me this way for years, and I never noticed. \n\nHuh.\n\nHe raises up to kiss me; I think he's enjoying it as much as I do now.\n\n'I'm not a terrible kisser, then?' I ask.\n\n'No. Pretty good, actually,' his mouth ticking upwards.\n\n'Hm. You're not so bad, either.'\n\nHe tips his chin, which should've given me some warning, but I was unprepared for him to roll all the way down my body and kiss my knickers, right where I know I'm embarrassingly wet. He hums and the feeling is suddenly intense, my hips rising up to him. I fling my arms over my head in surrender, hands fumbling against the headboard, holding onto the vertical slats as Sam's tongue presses into me through the white lace. When he stops, I open my eyes to see what's happening and catch him staring at me.\n\n'What?' I'm asking, loosening my grip, but he's up and over me in one fluid move, one hand lightly but deliberately holding my wrists where they are, his eyes huge. He kisses me, his mouth open and hard on mine, his hold on my wrists tightening. When he opens his eyes, I see a mixture of emotions raging in them. I hope my eyes are showing him what I'm feeling. By the time he's broken away from my mouth, we're both panting. \n\n'You like this?' I ask, twitching my wrists in his grip.\n\nHe blinks. Nods, slowly. I swallow, surprised at how I'm feeling about that.\n\nThen I grin, open my mouth to tease him.\n\n'Uh-uh, we have a pact, remember?' he warns me, giving my wrists a hard squeeze.\n\nFlexing my stomach muscles, I bring my legs up and pull him down to me.\n\n'Fuck, Cora. I think you're the girl for me,' and he's laughing into my mouth, pushing his tongue inside me.\n\nI arch my back, wanting to jam my body hard against his. But he's moving again, downwards, licking me, rubbing his stubble into my nipples, making me writhe and gasp. Holding onto the headboard so I don't levitate off the bed altogether. His humming \u2013 it makes me so happy hearing it. It hits me again that this sexy man is Sam. My oldest, best friend Sam \u2013 who starts easing my knickers down, gently but deliberately. I hold my breath; nervous and excited, all at the same time, torn between crossing my legs or just opening out for him.\n\n'Cora, you're so beautiful.'\n\nHis hand slips between my thighs where I know he'll find me so slick. I fret, flexing my fingers around the headboard.\n\n'It's ok, Cora, it's ok,' he repeats over and over as he slides his fingers over me, and into me. \n\nI press my eyes shut, consumed by the burn building from the base of my spine. I've just got used to the idea and reality of him touching me with his hands when the sensation changes. I open my eyes to see his head between my legs, pressing his tongue to me.\n\n'Sam,' I reach down to him and he clutches my hand, gripping it tightly, anchoring me to earth, and I let go. \n\nIt's relentless. An assault of electricity and heat that makes me want to scream. Maybe I do. \n\nWhen I eventually open my eyes, Sam's kneeling back on his heels, looking at me, his hands on his cock. He leans forwards, plants his hands either side of my neck.\n\n'Was I making a lot of noise?' I ask anxiously.\n\nHe smiles at me, shakes his head.\n\n'No, but you were saying my name a lot.'\n\nI grimace, but he kisses it away.\n\n'I can taste me on you.'\n\nHe nods.\n\n'Nice,' he says, flexing his hips down to mine, pulling at my hand.\n\n'Show me how you touch yourself, Cora.'\n\nI flush. Even after all that's happened between us tonight, I'm blushing about that? \n\n'Go on. I think it'll help. If we're really going to do this.'\n\nHe kisses my neck. I move my fingers, flicking and rubbing them over myself, bumping up against him. He's put a condom on, somehow. I moan, touching him, coaxing him to slide around in my slickness, remembering that lubrication is also going to be important; almost laughing at how lazily I'd only half-listened to my girlfriends talking about this. I drop my knees to the bed, and use my hand to help him find me, surprised at the feel of it \u2013 the size of him up against me, the pressure as he pushes. \n\nThe room fills with the sounds of our breathing. \n\nI tilt my head to look up into his face. \n\nHe grunts.\n\n'Lift your hips up a bit, that's it.'\n\nIt's an invasion. I exhale as he goes deeper; concentrate on the pulse throbbing in his throat; my hand still between us, a measure of our progress. I try to relax around him, but it's too unfamiliar; too much of a stretch. I start to fret again. He must sense it, because he kisses my forehead, then my eyelids and down to my mouth. Quiet, gentle kisses, his eyes intent.\n\nHis hips flex again; the invasion advancing. I take my hand out from between us, where our bodies are marrying now. I turn my head away from Sam's, wanting to see what we look like together. \n\nHe raises his chest, giving us both a clearer view, and thrusts the rest of the way into me. It burns a bit. I swallow. I don't want him to think it's hurting me. I swallow again. And feel his lips touching my eyelids, my forehead, my hairline, murmuring to me. Sweet Sam.\n\nI tip myself up to him, a tiny fraction, testing.\n\n'Mm. Stay still for a bit, Cora,' his voice quiet and tense.\n\nHis face is full of concentration.\n\n'Is it uncomfortable?' I ask.\n\n'No. I mean, yes, a bit. Tight. Like nothing I've ever felt. But good.'\n\nHe clears his throat. Relaxes his body down onto mine. \n\nI wrap my arms over his back.\n\n'Here we are,' I say, rubbing my palms over his shoulders and down to his hips.\n\n'Mm.'\n\nIt's a subtle shift, but we both feel it, the urge to move with each other. We begin slowly, starting to feel how we fit together; how it makes us feel. I pull my legs around his. \n\n'Ok?'\n\nHe's looking down at me. I just press him to me with my arms and legs.\n\n'Hold onto me,' he tells me, and pulls us both upright until he's sitting on his heels and I'm sitting on him. \n\n'How do you do that? Haul me around like that?' I ask, adjusting to this new position, to how much deeper he seems to be inside me.\n\n'There's nothing to you, Cora. I could lift and carry you all the way down the fourteen flights of stairs to the ground floor.'\n\n'When did you get to be so strong?'\n\nHe just laughs at me, uses his hands to rock my hips over him. And, umm, that's a whole new feeling. He grunts when I rock myself, grips my bottom in his hands, dips his head to lick my neck. I rub my hands over the short hair at the back of his neck and am rewarded by the low noises coming out of his throat. I love being able to make him feel this good. I whisper his name into his skin. He's beginning to sweat, his hips jacking into me. I follow him, meeting the rhythm he's setting, feeling the heat and friction as he moves in and out of me. \n\n'Hold on,' he gasps, and somehow slides us back down to the bed.\n\nI raise my legs high over his bum, hungry for him to fill me.\n\n'Cora.'\n\nHe shoves his arms underneath me and holds onto my shoulders, moving his hips hard and fast until we're out of breath. Then he drops the pace, pulling out almost all the way, pausing, maddening, before pushing back inside, hard and deep. I arch up.\n\nHe's humming and, when I look up at his face, smiling at my frustration.\n\n'Tease,' I accuse him.\n\nHe doesn't reply but continues his slow, delicious torture. \n\n'I want this to last all night, it feels so good, Cora, but I think that's probably ambitious.'\n\n'Mmm.'\n\nI'm distracted by a new feeling where his cock is dragging inside me. My eyes are wide. He's studying me.\n\n'Where? Here?'\n\nHe moves, watching my reaction.\n\nIt thuds into place like a punch, deep inside. Breathtaking. Like nothing on earth. Sam's found me. Really found me. I think I'm chanting his name, gripping him so tightly, our heat soaring as we move together, Sam's strength forcing us into a new place filled with love and awe. \n\nHe's grunting into my neck with each thrust. I reach up to him, tug and pull at his hair.\n\n'Oh fuck.'\n\nI think he's going to lift us off the bed.\n\n'I love you,' I gasp in his ear.\n\nHe stops, for a second; tensed and deep; a yell that feels wrenched from his gut.\n\n'Oh Sam, oh my god, Sam.' \n\nHis need to dig so deep dragging me in its powerful wake to cramp and pull him tighter inside.\n\nAnd then we're both panting and glorying in it \u2013 the exhilaration is incredible.\n\nHow long do we lie together, fighting to regain our breath, our bodies trembling and shivering?\n\nHe's heavy on me. \n\nI tilt my head towards his. He levers his chest up a little way, props himself up on his forearms.\n\n'I don't know how to describe how good that felt, Cora.'\n\n'Me neither Sam.'\n\nWe smile at each other. \n\nLooking into his face I wonder if he's feeling a bit shy, all of a sudden.'\n\n'I think we did ok, Sam, don't you?'\n\n'Ok?'\n\nHe laughs.\n\n'More than ok,' and he pulls out of me, causing us both to shudder, sits up to take the condom off, tie it up and dump it on the floor. \n\nThen rolls back to grab me under my arms, pulling me until we're both sitting up, me on his lap again.\n\n'You like this position, me sitting on you?'\n\nHe kisses my nose.\n\n'Maybe it's because I don't feel like I'm in danger of overwhelming you.'\n\n'I quite liked being overwhelmed by you, as it turns out.'\n\nHe hugs me.\n\nI catch him glancing up at the wall behind me. I think about how he must've felt, painting those words. And no wonder he's been acting a bit weird sometimes over these last few days.\n\n'You really put yourself under pressure, didn't you, painting that?'\n\nI feel him exhale.\n\n'Didn't come up with much of an actual plan, though, did I?'\n\n'For my seduction?'\n\nThere's his little wry smile.\n\n'Yeah. That. I should've at least put clean sheets on the bed.'\n\n'That's ok. I've always liked your smell.'\n\nHe snorts.\n\n'You're being kind to me, Cora.'\n\n'Isn't that what we're going to do? Be kind to each other, Sam?'\n\nI'm smiling.\n\nHe's smiling.\n\n'I'd like that. Very much.'\n\n'Me too.'\n\nWe kiss. It's different this time. Better. The best yet. As if we both know where we're going now.\n\n+++"
    ],
    "authorname": "Sara2000Z",
    "tags": [
        "friends",
        "virgins",
        "vanilla",
        "handjob",
        "first orgasm",
        "irish boy",
        "mixed race girl",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tied-to-sam"
}