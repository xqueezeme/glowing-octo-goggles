{
    "title": "Good Enough for the Goose...",
    "pages": [
        "A/N: This story is purely fictional although many of the places named are real. No on-screen sex and no actually lawyers were hurt making this story. (sorry!)\n\n*****\n\nThe late spring in Pennsylvania is hard to predict sometimes. This April had been unusually rainy and warm. Typically, I was forced to mow the lawn for the first time in early to mid-May or so, but not this year. At least it isn't snow. This time last year we had a blizzard that dropped six inches on the area. I guess having to mow the lawn early is worth the price of avoiding snow. And with tax season being done it felt great to be outside in the sunlight.\n\nMy house has an interesting feature in that the backyard slopes down significantly leading down to a small stream and woods behind us. When they built the house they leveled the front of the house with the road using backfill. This meant a sharp slope about halfway down the side of the house. So the basement completely covered in the front was revealed in the back. This allowed the installation of a double-wide service door so I could pull the mower and other lawn things in there instead of cluttering up my garage. It was one of my favorite features of the house.\n\nI'd finished with the mower and everything was back in place. I have allergies to grass so I was anxious to get upstairs and take a shower. I was almost to the top of the stairs when I heard my wife's voice. I'd seen her friend's car when I'd mowed the front so I wasn't surprised to hear voices. But then I heard what was being said and it made my hand pause as I reached for the doorknob.\n\nI guess I should have started by introducing myself. My name is Robert Krane. I preferred to go by Bob but in school I got tagged as 'Hogan' after the actor Robert Crane that played the lead on \"Hogan's Heroes\". I didn't mind but the show was off the air before I was born and it doesn't really count as a pop-culture reference anymore. I graduated from University of Pennsylvania with an accounting degree still being called Hogan. I gained my CPA in the minimal required time after leaving school and currently work for a large firm in Philadelphia as a team leader performing audits and such. Not the most exciting position but it paid really well and I got to see the inner workings of a lot of companies. I have a particular gift for forensic analytics, which is building a financial trail to investigate things like fraud and money laundering. I am coming to be seen as an expert and have even been asked to consult with the FBI on two cases.\n\nMy wife, Kelly, was a political science and business dual major planning to get her law degree when we met at the start of our junior year. I was sitting waiting for the first day of class when she walked in. Kelly had a tall, slim figure like a ballerina except with a slightly larger chest. Her long strawberry-blonde hair hung loose around her bare shoulders in a vision of loveliness. She was wearing a pretty sundress with sandals that highlighted her delectable legs, sleek and firm. The mixture of innocence and sexuality was too much. I was in instant lust.\n\nUnfortunately, Kelly didn't sit next to me. Or get assigned to me in a group project. It took me four weeks to approach her and break the ice. I made a silly joke and she laughed. It wasn't a dainty giggle it was a full out laugh. We started talking and I asked her if she wanted to go for coffee after class.\n\n\"I've been waiting for you to ask for four weeks,\" she answered with a smile.\n\nThe last two years of college we were seldom apart. Our parents weren't too pleased but we moved in together for senior year. But they saw how devoted we were to one another and soon enough adjusted to it. I couldn't see how it could get any better.\n\nBut it did.\n\nI graduated and immediately landed a job with one of the larger public accounting firms in Philadelphia. I was making a stupid amount of money for a recently graduated 22 year-old. Kelly was accepted into Penn's law school so we just stayed in our student apartment. My company offered to pay for my MBA so I was taking classes too. I took SEPTA to work every day so a car wasn't needed and cut down on expenses. Three years later, Kelly graduated and I proposed during her celebration dinner in the middle of Morton's Steakhouse in Rittenhouse Square. Six months later we were married.\n\nKelly took a position as a Deputy District Attorney in the Bucks County prosecutor's office which is north of Philly. We decided to buy a house in Doylestown which was the county seat and hosted the courthouse. It also was the end of the regional rail line so I could simply ride the train in to work every day. It was an 80-minute commute one-way but better than trying to drive in on the Schuylkill Expressway (aka The Sure-Kill Expressway) or I-95.\n\nKelly and her mother found the house. It was a great starter home with three bedrooms. One bedroom would be set up as an office with two desks. I would be telecommuting occasionally and Kelly needed her own space for her legal work. The other bedroom would be a guest room and of course the final room was our master bedroom. It was also not too far from her parents' house. Kelly sold me on it as built-in babysitters for when we have kids.\n\nI was an only child and always wanted siblings. Kelly and I had discussed kids as far back as our junior year and agreed to wait until Kelly had time to settle into her career before we started trying. But now we'd reached that point and two nights ago had agreed to stop Kelly's birth control and start trying to have a child. I was happier than ever before\n\nAnd that was when what I heard caused my hand to pause on the doorknob.\n\n\"Hogan and I decided that it's time for me to get pregnant!\" Kelly announced in an excited squeal. This set off her friend, Olivia Watkins. The two women made the same high-pitch noise that made me wonder about whales accidently beaching off the Jersey Shore trying to reach them. As I stood on the stairs, I grinned at their excitement that matched my own at becoming a father. I was again reaching for the knob when I heard the question that wiped that grin off my face and the happiness right out of me.\n\n\"That's wonderful, Kel!\" Olivia said. \"But what are you going to do about Paul?\"\n\nPaul?\n\n\"Shh!\" Kelly hushed her friend. \"Hogan is outside mowing the lawn.\" There was a pause and I could almost see her looking around for me to pop up. Then she started talking again.\n\n\"I've already told Paul that I am ending the affair. He was fine with it. With Grossman stepping down from his Senate seat, Paul thinks he has a real shot at it. Getting caught having an affair with a married employee would be a big no-no.\"\n\nJust that simple. Three sentences destroyed my world. Paul Evans was Kelly's boss in the DA's office. He was a widower in his mid-forties. His wife Anne died of breast cancer leaving behind him as a single father to their daughter, Barbara. Paul was a real political animal and Kelly had regaled me with stories of his maneuvers within his party to run for higher office. I guess I just found out how my wife got access to all that 'under-the-covers' information!\n\n\"Really?\" Olivia was saying. \"Just going cold turkey? You've been hot and heavy for six months and you're just going to give up the stud-muffin?\" The teasing doubt in her voice made me want to rip Olivia's head off. She'd been a classmate at Penn and I knew her before Kelly. I knew Kelly and Olivia were now best friends but I always thought she was still my friend too. I guess I was wrong about that.\n\n\"Stop!\" Kelly protested with a giggle. \"You are so bad. Paul is a great lover but he was just a bit of rough to play with. I love Hogan but Paul just took me and used me however he wanted. There was no love, just raw sex and power! Now that Bob and I are going for a baby, I don't want to take any chances. I love Hogan and will be a good and faithful mother.\"\n\n'How many more clich\u00e9s were we going to have here?' I wondered. 'All I need to do is come home to find a strange car in the driveway and find them fucking in my bed to make it complete.' I wanted to run into the room and scream. I wanted to smash up the room. But my muscles were locked in a paralysis. I was so stunned I couldn't move. My heartbeat was pounding in my ears.\n\n\"So, cold turkey?\" Olivia prodded. Again Kelly's giggle.\n\n\"Well, not cold turkey,\" she admitted. \"I have a conference next week with Paul.in Pittsburgh. We'll have our good-bye fuck out there. I'll miss the sex but Hogan and the baby are more important.\"\n\nI couldn't take anymore but I didn't know what to do. I love Kelly but this was killing me. My business training started to kick in then. I needed to step back and think. I needed to plan.\n\nI started stomping on the steps like I was coming up the stairs. Then I opened the door and steeped into the kitchen. Kelly and Olivia were sitting there with their tea cups in front of them. Was that a hint of guilt I saw on Kelly's face?\n\n\"Honey, are you okay?\" she asked in a concerned voice. I realized then that my cheeks were coated in tears.\n\n\"Allergies,\" I grunted. \"Gonna be a bad spring.\"\n\n\"Well, you go upstairs and take a shower. Just drop those clothes outside the bathroom and I'll wash them right away so they're not contaminating your closet. I bought you a new box of Claritin-D last week that is in the medicine cabinet.\"\n\n\"Thanks,\" I manage to get out as I make my way towards the stairs. I needed time to think.\n\n-**-\n\nThe next morning was a Monday and I used the excuse of an early meeting to be up and out of the house before Kelly was out of bed. I'd used my allergies as a reason to go to bed early the night before because my emotions were in an uproar. As I sat on the train I thought again about what I'd heard.\n\nOn one hand, my wife was unfaithful but was ending it as 'purely sexual' to stay with me and have my child. Some would argue that I should let it go at that and be happy that my wife was coming back to the marriage planning to be a good wife and mother. However, there is a voice in my head that says if she did it once, what will stop her from doing again in the future? Ten years on with the kids in school would she have another \"just sex\" affair? Then a divorce would have kids involved where Kelly would most likely get the kids and I'd get a large alimony and support bill. As an accountant and business analyst I had to think in terms of risk and reward. I found myself doing the same thing here. It came down to the fact my trust in my wife was completely destroyed.\n\nThe \"just sex\" excuse misses what is the truly important issue in these cases. It is the total lack of respect it shows for the partner. The cheater knows what they are doing is wrong and would hurt the other person. Otherwise, they would be doing it in the open and I would have known all along. Don't get me wrong, I don't think I would have ever accepted her sleeping with Don, but at the very least if she had talked to me about it some respect would have been shown. Kelly's actions proved to me how much she really respected me.\n\nI worked my day but a part of my brain was focused on what I should do. I had no evidence aside from my overheard conversation. I hadn't even noticed anything different in the last six months that this affair was apparently going on. A direct confrontation without evidence would be a high risk with little possibility of reward. Kelly would deny. Paul Evans would deny. Getting any case through the courts would be financial suicide as every judge, politician, and lawyer in the surrounding counties knew Evans. I'd get buried to keep his name clean.\n\nI thought about just leaving and starting over again somewhere else. It was tempting. But the house would be like an anchor around my neck. Kelly couldn't afford it on her salary alone and we barely had any equity. She would have to unload it almost immediately to stay out of foreclosure and today's market made that highly unlikely. It would destroy my credit as well as hers. Being a CPA with a poor credit score is not a good thing when going for a new position. How can you be trusted with other people's money when you obviously can't handle your own?\n\nI needed evidence before I could do anything. I would get it but it came from the most unlikely source.\n\n-**-\n\nThree days later I was keeping it together but still had found no evidence to back up what I'd heard. Her personal laptop was clean. No secret email accounts were to be found. No sexy underwear hidden in a box tucked deep in the closet. No receipts from places she had no business going to. Absolutely nothing.\n\nThen Kelly called me at work to say we were invited to a party \\ political announcement at Paul Evans home Friday night. I assumed this was his big announcement of his candidacy for the US Senate seat. I entertained thoughts of the big denouncement but I still had no evidence damn it!\n\nWe arrived just on time for the big event. Evans had a nice sized McMansion out near Washington Crossing complete with a small horse farm. A large tent had been erected in the back yard for all of the guests. And as we walked in, there stood the asshole himself, Paul Evans, at the head of a receiving line like he was a king. As a widower, Evans had no wife to play hostess. But he'd obviously recruited his 21 year-old daughter into the role. She stood next to her father greeting guests like she'd been born into it.\n\nWhen was our turn, Evans gave Kelly a wide smile and cried out, \"Kelly, you made it! How wonderful!\" He gave my wife a chaste kiss on the cheek. Then he turned to me. \"Robert! Excellent to see you again! I'd be lost without your wife but I understand I will have to give her up soon when you start to expand the family!\" He laughed at his own joke. \"Just let me have her back when you are done with her and there'll be no hard feeling on it!\" Again the laugh. Kelly actually blushed a little while I wanted to kill the smarmy SOB. I got his innuendo that he obviously thought had gone right over my head.\n\n\"Who knows what the future will bring,\" I said in a flat neutral tone. Not hostile, but not in any way friendly. The same way I reported an audit result. Evans actually blanched slightly and Kelly elbowed me and muttered about being rude. Evans smoothly turned to the next guest leaving us to his daughter.\n\nKelly was an incredibly attractive woman, but Barbara Evans was a vision. Even in my inner rage I noticed. Her dark red hair and brilliant smile made me think of a young Maureen O'Hara. Where Kelly looked like a busty ballerina, Barbara looked like she belonged on a pin-up swimsuit calendar standing next to Kate Upton. She had the combination good looks, health figure, hair, and skin that photographers dreamed of and so often had to use Photoshop to achieve.\n\nPaul Evans had a perfect triple threat political family. He looked the perfect part of the wise statesman and family man. His loss of his wife to cancer provided the \"perfect\" wife. She was idolized and any opponent attacking her was asking for career suicide. Barbara was the princess: Homecoming queen, a Penn senior majoring in business and pre-law, former gymnast now a member of the Penn cheerleading squad. Rumor according to Kelly was Barbara planned to try out for the Eagles cheerleading squad at their next open call as she'd just turned 21. With a sainted deceased wife and a smart, beautiful, photogenic daughter, the press would love him in a campaign.\n\n\"Robert!\" Barbara said in an excited tone as she gave me a big hug. This wasn't the polite party 'hug'. It was a full on body squeeze. Parts of her squashed against me in a most agreeable manner. \"You look great! No wonder Kelly has been hiding you away. You never come to any of our parties. You shouldn't work so hard. It's bad for your health!\"\n\nSomehow she got that all out in one breath.\n\nMy mood had gone from furious to completely shocked in less than a second. I made a few polite noises about how wonderful she looked and was moving off before two things hit me. One, Barbara never greeted Kelly. And second, what parties? Kelly didn't give me a chance to ask as she jumped in with her own greeting to the younger woman. Then we had no choice but to give way to the next guests in the line.\n\nAs Kelly and I wandered off to mingle I had to wonder what Barbara knew. After getting my wife a drink, I asked, \"What parties was Barbara talking about?\"\n\nKelly merely smiled and snorted dismissively. \"She was just teasing, the little brat. Paul has team meetings and strategy sessions here sometimes. He says he thinks better with a drink in his hand and you never know who might be in the next booth in a bar. She's been home a few times when we've met here. Don't tell anyone but Paul let her drink at home even before she turned 21.\"\n\nWell, that gave me the where. The bastard was fucking my wife right here at his house under the cover of 'team meetings'. They could even be real meetings where Kelly was the last to leave. Or possibly left first and returned after everyone else had left. That would keep a team of lawyers from speculating on why Kelly always stayed behind to help the boss clean up. With a dead wife and a daughter off to college, he had no need to find a discrete hotel room. Hence, no records of their meeting.\n\n\"So, Barbara attends your team meetings?\" I asked.\n\nKelly waved the question off. \"No, she's been home a few times when classes were cancelled. She is just teasing her father about having parties during working hours.\" She tugged on my arm. \"Come on, love, buy your bride a drink.\"\n\nFor the next hour, Kelly was never more than a foot away from me. We talked to a number of her co-workers and a few brought up our plans to have a child and how sorry they would be to lose Kelly for a time but how excited they were for Kelly and me. Frankly, I found it a bit awkward. Why did all these people know our plans?\n\nAfter an hour, Paul Evans called for everyone's attention. His daughter stood smiling by his side. He started off thanking everyone for coming and then launched into his big campaign announcement. Everyone expected it but acted excited anyway. I noticed the publisher of the local paper with one of his reporters nearby taking notes. I am sure it will make a big spread in tomorrow's paper.\n\nI won't bore you with the rest of the details from the party. It would have been a pleasant time if my heart wasn't shattered with my brain on overdrive thinking how to prove any of it. It was about 90 minutes after the grand announcement that Margret Williamson, the First Assistant District Attorney, came by and said Paul wanted to meet with his staff. Where Paul was an elected official Margret was the senior person that actually ran the office. DA's could come and go every four years but Margret was a permanent fixture. A very tough lady but also highly respected for honesty and integrity in the legal community. The older female lawyer was most of the reason Kelly took the position. I rather liked her. Margret was married for over thirty years to an electrician who supported her through college and now owned a nice sized electrical contracting company. The two were devoted to each other. I always thought they were the model for Kelly and me.\n\n\"Sorry to steal your wife away, Hogan,\" Margret offered. \"Paul wants to discuss to organization of the office once he is off campaigning.\" A moment later they were both gone.\n\nI wandered away from a small cluster of other spouses that had been left behind for the meeting and made my way over to the other side of their large pool opposite the patio where the party was occurring. There was a wicker chair swing hanging from chains. It was somewhat in the shadows so people would be able to see me if they looked but I wouldn't be obvious. In other words, it was a perfect place for me to try to gather my thoughts.",
        "I had been sitting down for less than five minutes when a voice intruded into my solitude.\n\n\"So here is where you are hiding,\" a voice purred.\n\nI looked up just as Barbara slid into the wicker swing next to me. She settled in so she was seated facing slightly towards me without me saying a word. Her little black dress settled across her tanned thighs in a way that clung to her body - hinting at what lay beneath without revealing anything. Seductive but innocent at the same time. It said something of my state of mind that I noted this almost academically.\n\n\"You look like a man with the weight of the world on his shoulders,\" she commented. I didn't really want to talk about it to my wife's lover's daughter - no matter how hot she was.\n\n\"We've been really busy in the office. A lot of audits going on,\" I said to end the conversation.\n\n\"Really?\" Barbara asked in an interested tone. \"I just finished my last accounting course at school. We spent several classes talking about use of forensic accounting in law enforcement. I thought it was fascinating.\"\n\nEven in my grief that surprised me. \"Really?\" I asked in a disbelieving tone.\n\n\"Well, it's not sexy or anything ... but it really is detective work to take all the right pieces of information out of a ton of other facts and putting them together to get a clear picture. Plus, since some people are trying to hide that information it gets even harder.\"\n\n\"Most people don't see it that way,\" I admitted.\n\nBarbara started going into a remarkable amount of detail on just what she'd learned in the class and why she enjoyed it so much. I have to say I was impressed. I've had people finishing internships at the firm that couldn't have spoken that well on the topic. Focusing in on her words actually helped me set aside both her looks and more importantly the rage boiling deep inside me. I found myself slipping into my role of mentor. It helped me put my emotional turmoil in the back of my mind a bit.\n\n\"You really did enjoy the class,\" I remarked. \"You seem to have an excellent grasp of the topic.\" Barbara blushed at my praise. For a moment, the pin-up girl was gone and I could see a sweet girl honestly touched by my simple praise.\n\n\"I've actually thought about going into the FBI when I finish school. Dad wants me to either become a prosecutor or go to work for one of his friend's law firms. I don't think that is what I want to do.\"\n\n\"You should follow your own dreams and not your father's.\" It was honest advice, not that I wouldn't be above spiking the prick's plans. \"I've done some work with the FBI when audits turned up something criminal. Sharp people.\"\n\nBefore Barbara could reply, Kelly stepped out of the shadows. \"Here is where you disappeared to. You weren't doing anything naughty we you?\" she asked in a teasing tone.\n\nBarbara turned to face my wife with a brilliant smile. \"We were just talking about Bob's job. We just covered it in class. I wanted to pick the brain of an expert.\"\n\n\"Well, Hogan is that,\" Kelly said in a proud tone. \"I looked at one of his audit reports where an employee was embezzling money using his boss's login. Hogan caught that some of the transfers happened when the guy was on a business trip but the logins occurred from the corporate office. Most of us would have stopped when the boss was identified. Hogan kept digging. I could have gotten a conviction on the employee on my first day out of law school. Hogan didn't really leave anything for the DA's office to do on that one.\" Kelly was beaming at me with pride on her face as she related this little story. That confused the hell out of me. How could she be proud of me and claim to love me while carrying on a six month relationship with her god-dammed boss?\n\nA shadow of my confusion must have crossed my face because Kelly asked, \"What's wrong, dear?\"\n\n\"Nothing,\" I said. \"Just thought about a problem.\"\n\n\"Well, stop that! This is a party!\" Kelly admonished me. She barely drew a breath and said, \"Hogan, you will never be able to guess the opportunity I've been given! Paul and Margret want me to move into more of an administrative role since I plan on going out on maternity leave as soon as you get your job done! That way when I go there won't be any cases left hanging. I'll be working directly for Margret!\"\n\nSomething in my heart leapt at the thought Kelly would be away from that bastard Paul. My hopes were dashed a mere second later.\n\n\"I will have to travel occasionally,\" Kelly continued. \"I will courier sensitive papers to Paul on the campaign trail; so I won't be a part of his campaign, but I will still get to see some of the behind the scenes activity. That will be so much fun!\"\n\nI could feel my heart shatter all over again. I know I heard Kelly say she planned on ending her affair so we could have a baby, I could easily see her falling back into her affair in her excitement to be part of the campaign. And if she did get pregnant who is to say it would be mine? Paul is about my size and coloring. Short of a DNA test it would be really hard to know. My rage started to grow but I clamped down on it. Now was not the time.\n\nBarbara started talking to Kelly about her new position and the campaign. The two were soon wrapped up in their conversation and I was forgotten. I took the opportunity to pull myself together. After tonight, I would start to plan. I needed some way to counter Paul's political power but frankly I had no idea how to do that.\n\nThe answer walked into my office two days later.\n\n__**__\n\n\"Your four o'clock appointment is here,\" my admin called in through my open door. (We're not allowed to call them secretaries anymore.)\n\nI glanced at my Outlook calendar and didn't see anything booked. Before I could reply, she walked in - Barbara Evans.\n\n\"Hi, Hogan,\" she called as she walked in. Her long dark red hair flowed down and over her shoulder. She wore a light sundress that showed off her gorgeous legs with sandals with straps that wrapped around her legs almost up to her knees. Her chest was demurely covered with no cleavage showing but the material clung to her breasts in a suggestive fashion. Two thin straps held up the dress leaving her arms bare. I was speechless watching her walk in.\n\n\"I hope you don't mind,\" Barbara started. She closed my office door behind herself. \"I told Mary that we had an appointment to discuss my career and how Kelly works for my father.\"\n\nI rose politely from my chair. \"I am happy to see you. I was just working on some reports.\" I gestured for her to take one of the chairs in front of my desk. After she was seated, I sat down. \"What did you want to talk about?\"\n\nThe happy face suddenly melted off Barbara's face. \"I think you know, Bob. I saw it on your face when you talked to my bastard father. I am so sorry that he's destroying such a nice guy.\"\n\nI was stunned. That was not what I was expecting.\n\n\"What are you talking about?\" I asked cautiously.\n\nBarbara grimaced. \"The fact the asshole known as my father is having an affair with your wife.\" I slumped back in my chair at having it thrown out so bluntly.\n\n\"Did you just find out?\" Barbara asked gently. I nodded. \"I am sorry.\"\n\n\"How - when did you find out?\" I asked.\n\n\"About three months ago,\" Barbara admitted. \"I don't know when it started but I found out in February. I'd gone home early one Friday and they were having one of their meetings at our house. I was having a late lunch with a friend from high school so I just ran in to drop off my bags, say hi and go. Dad asked when I would be home and I said after dinner.\n\n\"Turned out my friend got sick and couldn't make it. I grabbed some lunch and went home. I saw my dad and Kelly having sex in our hot tub. I took pictures and even got them running naked back into the house. There was a foot of snow on the ground too.\"\n\n\"You took pictures of your dad having sex?\" I asked in shock. I also wondered if I could get copies of the pictures. It would really help with the divorce.\n\nAs though she read my mind, Barbara reached into her bag and brought out a large envelope and placed it on my desk.\n\n\"Here are the pictures from that day and a few others.\" She paused and smirked. \"Dad has a security system installed in the house. The entire outside is covered and several of the inside rooms have cameras. If you know the website and have the key fob and password you can get in from pretty much anywhere. There is a thumb drive in there with video too.\"\n\nI was in shock at this. Paul's daughter was handing over everything I would need for my divorce and to destroy her father.\n\n\"Why?\" I asked.\n\nThe sad look on Barbara's face was replaced with anger. \"Because,\" she said in a quiet voice. \"I hate that bastard more than you ever could.\" I said nothing but waited. After a moment she started to talk.\n\n\"Dad met Mom when she was a college student. He was a brand new lawyer assigned to a sex crimes unit in Philly. Mom had come over from Ireland for school. Her family was well off but were killed in a bombing in Londonderry. She came over here to get away from the Troubles.\" Her voice had taken on a soft lilt that she'd probably leaned from her mother.\n\n\"Mom was dating some loser that hit her hard enough she ended up in an ER.\" Kelly paused and placed a small book on my desk. It was fairly thick and decorated in green and lace.\n\n\"I found her journal after she died and she was something of a submissive. She liked having a strong man take charge. This asshole took it too far and she ended up admitted to the hospital. Dad was assigned to the case. They met, the asshole went to jail and a year later they were married. Dad was always ambitious. He got a smart, beautiful woman with an exotic accent. Mom got a strong man that would protect her.\n\n\"I came along a few years later. Dad wanted me to do gymnastics. He thought having a daughter performing in the Olympics would do wonders for his political career. Do you know what ends most gymnastics careers?\"\n\nI shook my head and said, \"Never thought about it.\"\n\nBarbara smiled. \"They call it the Three B's: boobs, butts, and boys. I got the first one. I was told to do cheerleading and be the All-American girl. I didn't mind as I liked performing but I realized by the time I was sixteen I was merely a prop for my father's ambitions.\n\n\"Mom knew it almost from the start. Dad was having affairs almost from the time they were married. Mom knew and begged him to stop but she was too weak to do anything about it. She felt trapped. She was a staunch Catholic so divorce was out.\"\n\nBarbara paused a bit and l let her gather her thoughts. After a moment she continued.\n\n\"Sometimes I wonder if her poor reaction to the cancer treatments was a result of her unconsciously wanted to die or actively sabotaging her treatments. In any case, I was in the hospital with her when she died. The official story is my father was in court winning a homicide conviction. He had the doctor change the time of death. He was actually fucking his assistant at her apartment to celebrate. He just trotted out Mom as his trophy and the press loved the story of how they met. The heroic DA riding out to save the battered woman. Hell, the bastard hit her himself more than once that I saw.\"\n\n\"Why are you telling me all of this?\" I had to ask.\n\n\"Because you don't deserve this, Hogan. My dad, he's ... he's not a good person. After mom died he kept his affairs discreet until I left for college. That is when he started hosting \"meetings\" at the house. And they are not just for his job. He also has meetings for some of the charity groups he is involved with. I know for a fact he is sleeping with two other women from those groups too. One of the poor woman actual think it's 'true love' and is planning to leave her husband.\"\n\n\"Is that what Kelly thinks?\" I asked. I know what I'd heard but I was still curious.\n\nBarbara shook her head and said, \"No, she seems to think it's just fun. They say power is the ultimate aphrodisiac. Kelly seems to be proof of that. I heard her talking with my dad about some Senator they met with and how horny she was when she got back to Doylestown.\"\n\nI winced at the blunt comment. I even remembered the day. I'd come home to a wild woman and it was one of the best nights of sex in my life. A cherished memory was now sour because I knew now that my wife had probably not even been thinking of me at the time.\n\n\"So, what do you want?\" I ask. To her credit, Barbara looked me right in the eyes when she answered.\n\n\"I want you out of your marriage to that cheater. I want my father's career destroyed to the point he would never be elected dogcatcher in a town full of cats. I thought of just sending my stuff to the papers or even to the other party but he has too many friends. I figure together we can make them pay.\"\n\n\"Won't that make it harder for you to finish school?\" She again shook that deep red hair.\n\n\"No, Mom left her inheritance to me as a trust fund. I haven't touched it but if it came to it I could pay for the rest of my schooling and a MBA and still have a nice nest egg left.\"\n\n\"If your mom had that much money of her own, why didn't she take you and leave? She could have gone to Ireland beyond your father's reach.\" Barbara grimaced.\n\n\"As I said, she was raised very Irish Catholic. She was taught divorce was not an option. Whatever else happened, Mom clung to her faith until the very end. It is the one thing that makes me think her death was unconscious rather than deliberate since they also see suicide as the unforgivable sin.\"\n\nI have to admit, I couldn't see Barbara as anything but truthful. She said she wanted her father's career destroyed and me having this information sure couldn't bode well for his ambitions. I couldn't see any way this could be a trap of some sort. If Kelly and Paul wanted to wipe me out they could do it openly in court. This sneaky shit was only for when you were desperate. Like me.\n\nA plan started to take form in my mind. I would need Barbara to help with several items. If nothing else, it would tell me how committed she was to destroying her father.\n\n\"Okay,\" I agreed. \"But I don't want to destroy him by releasing these images or even naming him in my divorce.\" Barbara looked surprised at that.\n\n\"Why not?\" she demanded. Her face flushed red in her passion and she drew a breath to launch into some speech. I stalled her with a raised hand.\n\n\"I didn't say we wouldn't destroy him, but I don't want to have to deal with the bad press of being the cuckholded husband in a political scandal. Instead, I want to destroy what he's wanted all of his life. Destroy his power and influence and I can get a nice quiet divorce that no one will care about.\"\n\nBarbara looked at me with shock on her face. After a minute, a sly smile grew. \"What do you need from me?\"\n\nI smirked. \"I am going to do what I do best. Get me his financial records, personal and his campaign stuff. They got Capone through tax evasion. Having met your father, I have no doubt I can find something. And if not ...\"\n\n\"What?\" she asked.\n\nI smiled. \"I can make some.\"\n\n-**-\n\nOver the next three days, Barbara and I were busy. She installed a keystroke logger onto her father's personal laptop and the home desktop. She also performed a full hard drive backup of his computer. We set up their security system to upload its recordings to a cloud space I knew of that was physically hosted overseas. So nice of the ass to bug his own house. \n\nFor my part, I didn't bother bugging Kelly's phone. Thanks to Barbara's evidence, I didn't need anything more on that front. I did activate the GPS tracker intended for parents keeping track of children. It mostly just used cell towers for positioning unless I sent the command to activate the GPS. I just didn't want her surprising me at home when I was busy with my work.\n\nI faked a groin injury the day after Barbara first came to see me. That gave me an excuse not to have sex with my wife. (I never thought I would ever have to come up with an excuse not to have sex with my lovely wife.) After hearing of the number of Paul's partners I didn't want to take any more chances than I unknowingly had. Plus, I don't think I could have done it without my anger breaking out.\n\nOn a side note, I did make an appointment with a doctor to be tested for STD's. Nothing showed up at first but some of those bugs, like HIV, can take months before that give a positive result for antibodies. \n\nIt was a randy, frustrated Kelly that left for her 'final' rendezvous with Paul at the conference in Pittsburgh. Unsurprisingly, she was really excited to go. Leaving her hanging the last few days had her really keyed up. Some guys might have given her the 'good-bye fuck' as revenge. My problem was somewhere inside I still loved her. I could never trust her again but that didn't mean I didn't love her in some part still. But I also couldn't stand the thought of fucking her after what I'd learned.\n\nThursday morning came and Kelly was waiting with her packed bag waiting for Paul and a junior lawyer from their office that was going to the conference with them. I wonder if the young guy knew he was their cover?\n\n\"So, I will be home Sunday afternoon,\" Kelly said as she walked up behind me after dropping her bag by the front door. I was sitting at the table with my back to her sipping my coffee. She wrapped her arms around me and leaned down so her lips were right next to my ear. \"Hopefully you're feeling better and we can get started on the little one,\" she whispered. Her tone to raise a dead man and her smell ... it took me back to more innocent days. I wanted to cry right there.\n\nBut I managed to hold it together.\n\n\"I will keep it iced up so I am all healed up,\" I assured her. I patted her arm and kissed her forehead.\n\n\"Hmm,\" she moaned. \"I wish I didn't have to go to this. It would be so much better to just stay home with you and be naked all weekend.\"\n\n\"You can always tell Evans that something more important came up,\" I said. It just slipped out. And by the way she looked at me she'd heard something in my tone.\n\n\"What is your problem with Paul?\" she asked in a startled voice. \"First you were rude at the party and now you sounded like you hate the man.\" I forced myself to calm and shrugged.\n\n\"Honestly? I've seen too many hot-shits like Evans that think he's untouchable and power incarnate. They're big fish in little ponds. They sell the illusion of power and get people to buy it. Like that mayor in South Carolina last year. Big 'powerful' guy embezzling from the city while sleeping with three married women. Now he's doing ten years in the federal pen and they are all divorced and publicly humiliated. I get the same vibe off Evans. If he gets to Washington he'll be banging clueless interns in a week. But eventually the wheels will come off on his ride. And his shit will splatter over everyone around him when it does.\"\n\nKelly was looking at me in shock. She'd heard me rant about the scum balls before but I'd never linked Evans to it before. I probably should've kept my mouth shut but it felt good to let it out. And while the marriage was over I also felt it was fair to give Kelly fair warning. I still loved her even if I'd never trust her again.\n\n\"Hogan, that's a horrible thing to say about Paul!\" Kelly protested. \"He's a good man who's done a lot for the people of this county! He's not like that!\" I heard an almost pleading tone in her denial. \n\nIn timing that couldn't be planned, we heard the sound of a car horn come from outside the house. Paul had arrived. Kelly let out a frustrated sigh. She gave me a little glare that quickly faded into a mixture of regret and what almost looked like fear.\n\n\"I will be home in four days,\" Kelly said in a conciliatory tone. \"We can talk about this then. But be ready, love, we have a baby to start on.\" Then she wrapped her arms around me for a passionate kiss. A kiss I returned just as fervently.",
        "\"Have a good week,\" she breathed out. \"I love you.\"\n\n\"I love you too,\" I responded. She grabbed up her bag and opened the front door.\n\n\"Bye, dear!\" she called over her shoulder.\n\n\"Good bye, Kelly,\" I said. Then I shut the door.\n\n-**-\n\nThirty minutes later, I left to catch the train to the city. Barbara and I had an appointment with the FBI.\n\n-**-\n\nTurned out I had no need to manufacture any evidence.\n\nI would put Paul Evans' embezzlement skills at moderately clever. Barbara and I met in her off-campus apartment to review the documents she'd pulled off his computer. Fairly standard techniques on the whole. I estimated he had about $2 million stashed in an off-shore account. At least that is how much he funneled to it but I can't be sure it's still there because those records were not included. Most of that money came from a variety of small contributors that would not trigger IRS types but why were out of state people donating to a county DA's campaign? I managed to trace several of them to people with ties to defendants where the case was dismissed or a plea bargain was accepted with unusually light sentences.\n\nIt was Barbara that found the biggest bombshell. (The bombshell found a bombshell.) Turns out she was NOT an only child. Evans knocked up two other women along the way. One was born three years prior to his wife's death. The mother was one of his staffers at the time. The third was born eight months after his wife's death to - get this - an eighteen-year-old volunteer at the hospital his wife was in for treatment. Evans was flowing $2000 a month to each woman from campaign contributions as 'poll research consultants'. Barbara almost destroyed her own apartment in her rage. That red-hair really is a warning.\n\nBy the time Kelly and Paul left we had everything worked out in Paul's records. There were still questions but we lacked the resources to get to the information. So, I wrote up all of the findings and scheduled a meeting with a senior FBI agent I'd worked with out of the Philly office. Barbara came along to tell him the story we'd cooked up.\n\nBarbara's story was she'd wanted to look at some real records after taking her forensic accounting class. She'd decided to take a look at her father's records out of 'innocent curiosity'. When she'd spotted some oddities she'd called me because my wife worked for her father and she knew of my expertise. Gary was an experienced pro. He knew there was more to it than that but we'd dropped a gift-wrapped present in his lap so he didn't push. A dirty DA in his own backyard? A dirty DA that had just launched a US Senate campaign? It was a career making case dropping like mana from Heaven.\n\nWe caught a cab back to Barbara's apartment since she had a late afternoon class and I did the short walk to 30th Street Station for the train ride home. I was thinking of packing up my stuff and being gone when Kelly arrived home. Gary promised to expedite the case to at least subpoena Evans' records by Wednesday. It wouldn't take long for word to get around of the investigation at that point. The bastard would find out how illusionary his power is when all the rats deserted his ship.\n\nKelly called me while I was on the train heading home. She said she called early because they were going out to some big dinner and it would be really late before she got back to her room. (I had no doubts that she in fact had no plans to ever be in her room tonight.) I made a few vague remarks saying that was fine. She picked up on my distracted tone and asked what the matter was.\n\n\"I just had a meeting with some FBI agents on a case,\" I answered. \"I am on the train plus the investigation is still underway so I can't talk about it.\" All of which was perfectly true.\n\n\"Sounds like it really got to you,\" Kelly said, her tone concerned.\n\n\"Yah, well this one is going to be ugly. It will probably make national news when the full story leaks out.\"\n\n\"Really?\" Kelly asked sounding a bit intrigued. \"Can't you give me a little hint?\" I couldn't help it.\n\n\"Crooked politician, bribes, money-laundering, sex, marital infidelity, kids involved. Your typical summer novel crap. \n\n\"Hmm, anyone I know?\" I grimaced.\n\n\"I've said too much already. The Bureau would have my hide if I say anything else.\"\n\n\"Oh, you're no fun!\" Kelly pouted. \"Don't worry, love, your secret is safe with me.\"\n\nWe said our goodbyes and she was gone.\n\n-**-\n\nWhen I walked into the house, it all just hit me. My marriage was over. Dating and married, we'd been together for ten years. I never expected to be single again but now I was looking at just that. In the end I just sat on the couch and waited as the sun when down. I just sat watching. I felt like I was watching my life sinking down over the horizon. I just watched. It was many hours after it had gone down before I moved again.\n\n-**-\n\nIt was noon on Saturday before I emerged from my bout of self-pity. I'm not saying I didn't deserve to indulge some but I knew I needed to shake it off. Ironically, I was mowing the lawn again when I saw a BMW convertible pull into my drive way. I brought the mower to a stop while I watched Barbara emerge.\n\nThe first thing I saw was her long, pale legs swing out of the driver's side. She was again wearing sandals with the thin cord wrapped halfway up her calf. They always made me think of the ancient Greeks. As she stood I could see her sculpted legs flex in a way that spoke of strength underneath her firm flesh. Going with the Greek trend, she was wearing a pure white toga-like dress that stopped at mid-thigh but with two inches of lace at the bottom allowing a few teasing peeks of her upper thighs. The dress was a light silky material that hugged her curves and tended towards the translucent. Her firm breasts were held by a bikini top that was just visible through the dress. Her arms were bare of anything save the light freckles that dotted her skin about her upper arms and shoulders. The dress only went over the one shoulder leaving the other bare. Her long red hair hung down in waves over those same shoulders. However, it was her gray-green eyes and that smile that captured my attention as she approached me.\n\nI killed the engine and greeted her.\n\n\"Well, you look better than I'd expected,\" Barbara said. \"I half expected to have to pull you out of a bottle or down off a ledge.\" I snorted. I'd had many thoughts last night towards both options.\n\n\"Needed to be done,\" I said. \"Plus it keeps me distracted.\"\n\n\"Not meeting with a lawyer?\" she asked.\n\nI shrugged. \"I did that Tuesday before they even left. Papers will be ready Monday. I arranged to take an audit at a customer in Austin and leave Tuesday. Normally travel on this type of assignment is for three days and then I work everything remotely until I do my report-out. This one I will be staying there the whole three weeks.\" I shrugged. \"It's the cowards way out I guess but I don't want to be here when the whole mess melts down.\" I could see the agreement on Barbara's face. She knew this would put some focus on her too as the bastard's daughter.\n\n\"Well, I am glad you are thinking ahead,\" the redhead said. \"But I've learned that's something you're good at.\" There was that smile again. \"Now I can plan too.\"\n\n\"Okay, so here's my plan,\" Barbara announced. \"I am going to help you finish up with your work here and then you are coming to my place. We are going to have fun and you can even oogle me to your heart's content! I have a bathing suit that you're just gonna looovve!\" That last part was said in a voice that would have raised a dead man.\n\nI tried to rally.\n\n\"Barbara, I am still married,\" I protested. \"And I don't think I'll be ready to jump into anything for a while.\"\n\n\"You need to let off some steam before you explode,\" the sexy redhead insisted. \"Besides, you know the old saying, 'What's good for the goose is good for the gander.'\" The look she gave me was playful, wicked, and guileless all at the same time. I couldn't help but to laugh.\n\n-**-\n\nIn one of those bizarre coincidences that prove that the truth is stranger than fiction, we ran into Olivia of all people.\n\nAfter I'd finished up my yard work, I cleaned up and we went out for a late lunch to a nice restaurant. I wasn't really up for trying for any revenge sex but it was nice to get out of the house. And going out with someone as nice as Barbara - and who looked like Barbara did - would never be a hardship. When I pulled up, I noticed a certain car parked a bit closer to the restaurant. It was Oliva's. I always thought it was a crime putting OBX and Jersey Shore bumper stickers on Mustang GT. I almost told Barbara to turn around and we'd find another place.\n\nBut I didn't.\n\nInstead, I did something that was totally out of character for me. It was all on a whim. After all of my careful planning, something in me just tore seeing Olivia's car parked in that lot.\n\nI casually wrapped my arm around the beautiful redhead and ushered her into the restaurant without another word. I tipped the host to place us at a certain table. It was somewhat obscured but was in plain sight when returning from the bathrooms. I sat Barbara facing out and settled myself into the seat next to her. She smiled when I took her hand.\n\n\"What brought this on?\" she asked with a cute little smile. \"Not that I am complaining...\"\n\nI laughed. \"Remember me telling you about how I found out about my cheating wife? Her friend Olivia? Well, her car is parked right outside.\"\n\nBarbara let loose a throaty laugh. \"So, I get to be 'the other woman'? Oohh, I can live with that.\" She leaned forward and placed an incredibly soft kiss on my lips. It wasn't a deep passionate kiss but rather one that hinted and promised so much more to come; a Lover's Kiss.\n\nOur meals had arrived and I was honestly enjoying myself. The subterfuge was mostly forgotten as I enjoyed Barbara's company. Her sharp sense of humor killed me. I'd never heard someone make accounting sound so dirty before. I just happened to glance over and noticed Olivia walk past us. I pointed it out to Barbara.\n\n\"Oh goody,\" she giggled. \"I've been so waiting to do this.\" With that, she leaned forward to kiss me. I found my hand being guided under the table and onto her leg. The skin of her thighs were so incredibly soft with firm, supple muscle underneath. The touch was electric. I could feel the heat radiating out of her panties. My hand slid forward of its own volition to feel the moisture there.\n\nI was so lost in the sensations that I was surprised when I heard Olivia yelling at me.\n\n\"Hogan! What the hell are you doing?!\" she was screaming at me. \"Who is this tramp? Running around on your wife while she is out of town? I thought better of you!\" I have no doubt the whole restaurant heard her.\n\nI released Barbara and turned to look at my erstwhile friend. \"What is your problem, Liv? It's just a bit of carefree sex before Kelly and I settle down and have a kid. And can you keep it down? People are trying to eat.\"\n\nOlivia gapped at me like I'd smacked her with a dead fish. \"What...\" she started.\n\n\"Oh, come on now, Liv. Kelly is doing the same thing. I'm sure she's off fucking her boss right now. She has been for months. So I reckoned it was only fair for me to fuck the boss's daughter.\"\n\nI think Olivia almost had a heart attack right there. I felt Barbara start to giggle so I gave her a little squeeze to keep her quiet. Of course, I sort of forgot where my hand was so her giggle turned more into a groan of pleasure.\n\n\"You know about...\" Olivia stuttered out.\n\n\"I know I'm supposed to be the faithful clueless husband while my wife runs around so ably assisted by a woman I thought was a close friend of mine.\" Olivia winced at the scorn in my voice. \"I know Kelly wanted one last taste of the strange before having a kid. Kind of like that one last fling before we got married. If it was okay for her what is your problem with me?\"\n\nI had no information on Kelly having any affairs prior to Asshole Paul but as the saying goes, \"Once a Cheater, Always a Cheater.\" I was taking a shot in the dark with my suspicion and wondered if Liv was off balance enough to confirm it.\n\nShe was.\n\n\"You know about that, too??\" she gasped.\n\n\"Nope, but thanks for the confirmation,\" I answered. Olivia paled at that.\n\n\"Go away, Olivia,\" I said. She turned and fled the table. We heard a commotion a few minutes later that was Olivia leaving the restaurant.\n\n\"Well, that was fun while it lasted,\" Barbara said with a little laugh. \"I really wanted her to be in there longer.\" Her smile caused me to blush.\n\n\"You know she is probably on the phone to your wife right now,\" she added.\n\n\"Probably,\" I agreed. \"I give it five minutes before my phone goes off. However, it is five hours to get home from Pittsburgh if she leaves right now. That gives us time for dessert and still gives me enough time to get home and pack. Sorry I won't get to see you in that bikini like you promised.\" Barbara laughed again.\n\n\"Oh, I think we can do a rain check for that.\" She reached over to grab me by the shirt and pull me closer. \"You know my semester ends in a week and a half,\" she murmured into my ear. \"I've always wanted to see Austin.\" I'd barely grasped her words when her tongue slithered its way into my ear.\n\nEpilogue\n\nYes, well the shit truly hit the fan.\n\nKelly started calling me ten minutes after Olivia left the restaurant. I listened to a few of her messages and she was furious for cheating on her. That almost caused me to laugh. After an hour of her messages and texts, I blocked her number. I knew eventually she would just call from another phone but she was driving back from Pittsburg so it wasn't like she could just ask to borrow someone else's on the Turnpike. I went home and packed up all of my personal items not just the stuff for my trip to Austin. I had the time. Within four hours of the encounter with Olivia I was driving away from my house for what was probably the last time.\n\nI booked myself into a hotel near the Philly airport after dropping most of my stuff off in a storage locker until I could find a place to live. I talked to Barbara a few times on the phone. She was straying with a friend as her father was leaving furious messages on her phone now. I moved my flight to Austin up a day and was gone Monday morning.\n\nKelly managed to call my phone a few times from other numbers. Now they were tearful rants of how could I do this to her, why would I destroy her career, etc. etc. Apparently, Olivia's initial screaming had gotten a lot of people's attention. Someone then posted a fairly accurate account on their blog and identified Barbara and I as the players. My comment about Kelly fucking Paul was also reported along with the fact they were together in Pittsburgh for the weekend. That caused a big stir in the county political circles and the courthouse.\n\nI avoided most of the news out of Philly for the rest of the week. It wasn't until Friday that I got an email that told me what was happening back in Doylestown. Surprisingly, it was from Margret, the senior manager in the DA's office. The older lawyer apologized for all that had happened. She knew Paul was dating two women outside the office but knew nothing of Kelly's involvement. She also applauded my getting revenge by using the law against a lawyer.\n\nAccording to Margret, it was an eventful week in the Buck DA's office that week. Monday morning Paul was in the office attempting damage control and denying any improper behavior on his part.\n\n\"It is just my daughter's rebellion under the influence of a cheating husband\" was the story he tried to sell. Then on Tuesday, Kelly was served with the divorce papers on the grounds of adultery. The envelope was filled with pictures, DVD's and a letter from me. Kelly's scream of horror when she read my note brought Margret and two others running into her office. Kelly was slumped in shock in her chair and Margret spotted the pictures that had fallen out onto the desk. My letter to Kelly told her I never had an affair but hoped she now had some idea of how I felt about her and the asshole. I told her I couldn't be married to someone I couldn't trust especially now that I knew she'd been unfaithful before. Not much work was completed in the DA's office on Tuesday.\n\nMargret was in Paul's office for a meeting the next day when four men in suits suddenly walked in. Paul was yelling at them for interrupting an important meeting when one man informed Paul he was under arrest. She said he was in complete shock when they cuffed him and walked him out of the office. They \"perp\" walked him right out the front door of the courthouse and passed the reporters that had somehow been notified. (I owed Gary a few beers for that.) \n\nMargret closed her email by apologizing for letting their behavior happen in her office. She also said to let her know if I needed anything, as I didn't deserve this kind of thing. I am sure some of her email was damage control but mostly I think it was Margret being the moral, professional person I always took her for.\n\nNow all my plans for a quiet divorce were shot to hell because of my own stupid ass, impulsive stunt with Olivia in that restaurant. The Philly news stations quickly got wind of Paul's arrest and the charges against him. As I told Kelly, this had all the makings of a summer novel: sex, betrayal, revenge, and way too much angst. The news media loved it and it was quickly picked up by the hungry 24-news services. I avoided the worst as I was out of town and they hadn't managed to track me down since I booked a second hotel room in a place ten miles from the one listed on my itinerary at work. I had checked in there though so the reporters camped out around it trying to catch me. I did see on TV that they were camped in front of my house. Kelly wasn't coming out and they only got shots of my in-laws going in and out.\n\nBarbara had it the worst as the 'daughter that turned in her own father'. She still had to go to class and take exams so the media had a fairly easy time finding her the first few days. Then the school forced the reporters off campus as they were disrupting the students. It also helped when the two women who bore Paul's children came forward for their 15 minutes of fame. Her last final completed, Barbara slipped off campus and headed to the airport. The media was disappointed but not too surprised when she was a no-show at the graduation ceremony.\n\nAfter a while, the story slipped to a secondary news item and stayed there. It flared up when Paul's trial started but he plead guilty to several charges making him a 20-year guest of the Federal government. Thankfully, his pleading guilty meant Barbara and I were never called to testify. Then it dropped completely off their radar taking Barbara, Kelly, and I with it.\n\nOddly enough after all that publicity, my divorce did go through quickly and with a minimum of fuss. Kelly signed the papers four days after receiving them. I got a letter apologizing for what she had done to me and to us. She'd sworn in her rage driving back from Pittsburgh that she would never forgive me for cheating on her. Finding out that she was in fact the only cheater she'd realized how hypocritical that made her. She took my offer of a 50/50 split and just asked that at some point when it wasn't so raw if I would agree to meet with her so she could apologize in person. She closed saying that she would always love me and wished me well. I heard later from her mother she'd quit her job and moved out to the Midwest with an aunt.\n\nTaking down Paul did wonders for my career. The FBI gave me full credit in the press for the analysis of Paul's records. Since I was hiding from that same press, I was even more thorough on the Austin job and found not just the embezzler they were looking for but a second that they didn't have any indication of at the time. My firm promoted me and assigned leadership of a team focused on white-collar crimes. And yes, some joker hung the label on the team as Hogan's Heroes.",
        "But the best part was when they assigned me an assistant. A recent college graduate looking to gain experience in forensic accounting. I've never enjoyed working late so much.\n\nAnd that bikini looked even better on my hotel room floor."
    ],
    "authorname": "Rogue9_815",
    "tags": [
        "cheating",
        "revenge",
        "lawyers",
        "politician"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/good-enough-for-the-goose"
}