{
    "title": "Toys are Us",
    "pages": [
        "\"You are our grand prize winner and as such you have been registered to be on our Toy of the Month Club listing. You will start receiving your toys as of our next shipping date, which is Friday....\" There was a short pause. \"And you should receive your first shipment no later than Tuesday of next week. Congratulations!\" The fast talking voice on the phone said. \n\n\"Uh.... May I ask what this is going to cost?\" Brenda Patterson asked as the voice paused for the second time.\n\n\"Absolutely nothing, you are the grand prize winner. All I need to do is to verify your shipping address and we're in business.\" The cheerful voice replied.\n\n\"Well.... Uh.... I don't remember entering any contest for toys.\" \n\n\"According to the card we drew, you were entered by a friend who say's you are in need of all the toys you can get. That you don't have any and have never played with them, so we're going to fix that and put a big smile on your face.\"\n\n\"I had some when I was a kid but--.\" \n\nThe voice cut her off saying, \"That was way to long ago. The address we have is 123 Meadow Lane, is that correct?\"\n\n\"Yes it is but--.\"\n\nShe was cut off again. \"Good, good, then you'll receive you first toy next Tuesday and a different one every third Tuesday of the month for the next year. Have a good day and again, congratulation!\" The voice said and then the line was dead.\n\nBrenda laid the phone on the table and sat looking at it for a moment. \"I wonder who entered me in a toy contest? It would have to be Rose but....\"\n\n\"Excuse me?\" Her husband Ron said, \"Were you talking to me dear?\"\n\n\"No, more like myself, someone entered me in a contest and I won,\" She told him.\n\n\"Sounds like some kind of phone scam to me. What was the prize you won?\"\n\n\"A new toy each month for a year.\"\n\n\"Oh? We don't have kids so why would your friend enter you to receive toys. Sounds kind of cruel to me and whoever it was isn't a very good friend to boot.\"\n\n\"He didn't say who the friend was dear so I can't really say. The entry card said they thought I needed toys and didn't have any. It is quite strange but I can always give them to the nieces and nephews for birthdays and such.\"\n\n\"Well.... Yes, that is true, you never seem to know what they want anyway or what is popular. Maybe this will give you some good ideas.\"\n\n\"Yes, dear.\" Brenda said and promptly forgot the phone call and conversation as she went to fix supper.\n\n*****\n\nTuesday morning around ten a UPS truck pulled into the Patterson's driveway. When Brenda answered the door, the driver handed her a long thin package, about the same size as the large economy toothpaste came in. He asked her to sign for it and when she did, he told her to have a good day and left.\n\nBrenda wondered who could be sending her a package and then she remembered the phone call and the contest. It sure was an odd shape and sized package for toys. Her mind was rummaging the toy shelves from her last shopping trip for her sister's kids but nothing would mentally fit in this package. She read the label but it wasn't much help, all it said was Toys are Us. \n\nThe name sounded familiar but the label looked all wrong, cupids and hearts all over it. With a shrug she shut the door and laid the package on the counter on her way to the kitchen. She was behind on her housework and hadn't even finished the breakfast dishes. \n\n*****\n\nBrenda and Ron had been married for a little over five years and the honeymoon was long over. They had settled into that familiar routine that old married couples do, quite early and quite easily. Ron was an easygoing guy and easy to please. She was much the same way and they had married right out of high school.\n\nMany of their friends figured she was pregnant when they got married so fast but that wasn't so. They both had been virgins that first night and it showed as they fumbled their way around each other and the act of love. \n\nIn many ways it was a comedy of errors but in the end they had worked it out. Maybe not to the extent of other couples but they didn't really know any better so it didn't matter to them. They were happy and that's all they ever asked for.\n\nThe only person that ever questioned this was Rose, Brenda's best, and dearest friend. She lived across the street and was forever going on about the terrific loving she was always getting from her husband. She bragged about all the orgasms she had in one night and all the different positions they used and how each one was so much better than the missionary one Brenda and Ron used.\n\nBrenda blushed through most of it and only believed parts of it. Rose's fascination with sex and the bragging were just the price of having such a good friend. That was the way Brenda looked at it. Ron had these orgasm things Rose was always going on about, but Brenda was a lady and she took care of her husband, nothing else mattered. She did her duty, no more, no less.\n\nThe one time she had said something like that to Rose, Rose had come unglued and asked her what century she was from. She had gone on and on about women's rights and sexual equality, and other nonsense that Brenda couldn't make heads or tails out of. \n\nBrenda had learned about sex from her Christian, upstanding, church-going mother, rest her soul. It had been good enough for her mother to bury two husbands with so it was good enough for her and Rob. If it wasn't then Rob would let her know and they would make adjustments.\n\n*****\n\nIt was a little after two before the package crossed Brenda's mind again. She had caught up the housework and had the last of the laundry in when she sat down at the counter with her afternoon tea. It was a holdover from her girlhood, something her mother did, a short timeout and rest before getting the evening meal started.\n\nBrenda was the middle child of seven kids. She wasn't the oldest, the smartest, or the youngest. She had been quiet and self entertained, she loved to read and disappeared into books. She was just the middle cog in the wheels of her large family.\n\nShe and Ron both wanted a family but it wasn't happening and probably wouldn't. She had an egg deficiency, whatever that meant. The only part she really understood was the no kid's part and that hurt her deep inside but that's where it stayed.\n\nBrenda played with the box and then got up to get a knife to open it with. She neatly sliced the end and then turned it up. She gave it a shake and nothing came out. She gave it a harder shake and she almost screamed when a dick half again as big as Ron's hit the counter top and bounced onto the floor. \n\nShe sat there with her mouth open, staring at the monstrosity on the floor. What kind of a child's toy was this, she wondered in outrage. Then it dawned on her that maybe it wasn't for a child, that it was an adult toy. She remembered Rose raving about something like this. How she had used it on herself and her husband used it on her.\n\nBrenda felt herself blush hotly. She couldn't ever.... Ron would never.... Her mind balked at even finishing the thoughts. But.... Rose's stories and goings on about the one she had flashed through Brenda's mind in more vivid detail than she ever thought possible and she blushed again, deeper and hotter than before.\n\nShe fanned herself with her hand for a moment and then looked back down at the toy dick on the floor. It looked so real and so.... Big. She had never really looked at Ron's closely but she had seen it and it wasn't this big by a long shot. The head and veining looked the same but that was about all. Brenda closed her eyes and took a long deep breath; she was blushing again.\n\nThe sudden thoughts about what it would feel like inside her pussy was what had Brenda fluster now. She felt her inner muscles tighten up as they did when she anticipated Ron making love to her. Exactly when was the last time that happened, her mind asked sharply an edge of frustration and anger to the thought.\n\nThat thought shocked Brenda even deeper than the toy dick had. Not the question so much as the frustration and anger that went along with it. Where had that come from and why? Sex wasn't a real high priority thing with either her or Ron since they found out she couldn't get pregnant.\n\nOnce a month or so Ron would roll over and start fondling her breasts. That was usually the signal he wanted to make love to her. She would get up, remove her nightgown, and then return to bed. He would kiss and lick her nipples a little while and maybe suck on one of them. That usually had her nice and wet and ready for him to climb on top and fuck her.\n\nShe blushed at the use of the F word. Rose was rubbing off on her too much she realized. Her husband fucked her here and fucked her there but Brenda considered what she and Ron did, lovemaking. Although some of the things Rose talked about sounded exciting and highly interesting, even to her inexperienced ears.\n\nThe way Ron would move in and out felt good and he sometimes touched something that felt very good. But it was all over so quickly and then he got off her and went to the bathroom to clean up. She would wait patiently and then do the same. By the time she got back he was asleep. Sometimes she wished there was more.\n\nFrom the way Rose talked there was more, a lot more but Brenda politely ignored her friend more often than not. She had blocked her out when she had talked about a toy like the one on the floor. Maybe she should have paid closer attention. She looked down at the toy and a shiver ran up her spine.\n\nShe bent over and reached down for the toy but her hand stopped just short of grabbing it. She had never seen a dick other than Ron's and touching one would have been out of the question. She started to sit back up but suddenly felt silly, it was only a toy after all, it wasn't real. Then she wondered where they got the mold to make it.\n\nShe sat up quickly as the toy was suddenly attached to a man's body in her mind. The blush that hit her then was molten, it burned in her breasts and up into her face before a funny thing happened. It flashed directly to her pussy and caused Brenda to double over as pleasure shot out in all directions.\n\nShe sat rocking on her chair for several minutes before she could sit up straight and then her head was swimming when she did. What the heck had happened to her she wondered. She had never felt anything like it. \n\nWell maybe once a long time ago, back when she was a kid and touched herself in a bad way. Her mother had spanked her for it and told her she was a bad girl and she would go to hell for doing such things. Brenda had never touched herself down there again unless she had to.\n\nBrenda's eyes went to the toy and she shivered again as her thighs and buttocks muscles tightened, which caused her pussy to tighten. She could feel the wetness between her legs and nearly panicked, it wasn't that time of the month yet. Not taking any chances, she got up and headed for the bathroom.\n\n*****\n\nAbout ten minutes later, Brenda returned to the kitchen. There hadn't been any blood, just the clear slippery fluid that allowed Ron to make love to her without it hurting. Only there was more of it than she had ever seen. There was almost as much as came out after Ron had his way with her.\n\nThis had Brenda confused and a little worried. She thought about calling Rose but Rose was gone on vacation to some resort in Mexico and wouldn't be back for a week. That was too long to wait. She considered call her family doctor but the embarrassment of explaining the rubber dick on her kitchen floor stopped her.\n\nSpeaking of which, she would have to do something about it before Ron came home. Somehow she didn't think Ron would understand although knowing him, he would make some kind of joke abut lost and found. Brenda smiled at that and leaned over to study the toy closer.\n\nThere was a lot of detail and an awful lot of dick for it to cover. Her hand moved to hover over the rubber penis. She had never touched her husband's so she had no idea what to expect if and when she picked this thing up. Her hand was shaking she noticed.\n\nShe scolded herself for being childish and wrapped her fingers around the toy. It was cool and heavy as she lifted it off the floor. It felt so strange bending heavily on either side of her hand. Her hand covered maybe a third of it. She mentally compared it to her husband again and shivered. This thing was twice as big as Ron.\n\nWell, twice as long anyway. The girth was only half again as large. On their honeymoon Ron had had a hard time getting his thing in her, she was just that tight. That first time hurt like hell and there had been a little blood. After that they had found taking it slow and playing with her tits helped a lot. \n\nBrenda's nipples were super sensitive. She had to wear a bra. Sometimes at night, the cotton nightgown rubbing on them as she breathed would wake her up. They would tingle and she would be damp between her legs, never as damp as earlier but noticeable in any case. Sometimes it was hard to go back to sleep and the thought of waking Ron crossed her mind.\n\nThe only problem was if she woke Ron it wouldn't solve anything. He would do his thing, if she could get the idea that she wanted him to across, and then he would go back to sleep. She would still be.... She searched for a word but frustrated was the only one to come to mind. There was that word and feeling again.\n\nBrenda was sudden snapped back to the present by what her hands were doing. One hand held the big toy cock by the base and the other one was stroking it up and down along its length. She dropped it on the counter top like it was hot and just stared at it. What the hell was she doing? \n\nShe grabbed the box and used a single finger to put the big dick away. That thing was scary. Not from just its size but from the way it made her feel and the thoughts it invoked. Her hands playing with it so readily shocked her and brought some subconscious fantasies toward the light of day.\n\nBrenda was blushing and squirming on the chair from the thoughts that surfaced. Her hands started for her breasts, then dropped to the tops of her thighs, and then ended up folded on the counter top. She took a couple of deep breaths and blew them out slowly. Her head was swimming again as fears, thoughts, and fantasies fought with her upbringing.\n\nShe needed to get rid of that evil, wicked toy, she thought suddenly but what could she do with it. The trash was out. She would never be able to look at the trash men the same for wondering if they had found it. Rose was the answer of course. \n\nIt was she that had entered Brenda in the contest in the first place. Rose would and could definitely find a use for it but she was gone. Brenda wanted it gone now not next week. She could hide it, maybe that would help. Out of sight, out of mind as the old saying went.\n\nBrenda grabbed the box, hurried to her bedroom, and buried it in the back of her underwear drawer. It would be safe there until Rose returned and then she could get rid of it.\n\n*****\n\nFriday morning Brenda had had to fix Ron a travel bag and take it down to the office. One of those rare out of town crisis had come up and it was his turn to take care of it. He would be gone the whole weekend and possible all day Monday as well. Brenda dreaded these trips; she hated being home alone.\n\nShe was home alone every day but it wasn't the days, it was the nights. Without Ron next to her the bed was to big, to empty, and scary. The house seemed strange and every noise woke her up. The nights were long and lonely when he was gone. \n\nShe had had to wait and then drive him to the airport. By the time she was through and headed home, it was the lunch hour rush. It was hot and sticky stuck in the stop and go traffic for an hour or so. Her car's air conditioner was on the fritz and Ron hadn't gotten around to getting it fixed. She was ringing wet with sweat by the time she got home.\n\n*****\n\nBrenda stripped off her clothes in the bedroom and grabbed a clean bra and pair of panties out of her drawer. The lump of the toy in its box in the back corner caught her eye. She hesitated a second and then quickly shut the drawer. Just as quickly she snatched it open and stared at the lump. \n\nHer mind was tempting her with all sorts of crazy ideas. She wanted to slam the drawer but her hand went to the back corner and dug among the soft silky panties to unearth the box. Her hand was trembling as she laid it on top of the dresser and closed the drawer.\n\nBrenda's laid the clean underwear on the dresser next to the box and took a deep shivering breath. What was she doing? She should be getting in the tub not standing here staring at a box. What was in the box was what her minds eye was seeing. Her shaking hands picked up the package and dumped the big dick out on top of her clean underwear. \n\nShe dropped the box on the floor and stared at the detailed penis. Her breathing was slightly ragged as her hands came up to her breasts and cupped them. The shiver was back and twice as icy as before. Her breasts were so slick and slippery from her sweat. \n\nHer hands moved over her skin lightly and she felt her stomach muscles tighten as they did when Ron touched her breasts. Her fingers grazed her nipples to find them hard and the large dark circles underneath puckered. She gasped softly as a warm tingle spread throughout her chest. She shouldn't be doing this her mind warned her.\n\nWhy not, they were her breasts after all and anyway her mother was long dead and gone, was her mental reply. Her anger scared her but she sighed deeply as her fingers gently caressed her breasts, the tingling warmth growing stronger. These feelings were deeper and stronger then the ones Ron made her feel. \n\nWas the difference because of the light gentle touch she was using or the fact that it was her doing it? Was it the fact that she felt like she was doing something forbidden and dirty. Well not dirty maybe but.... Nothing that felt so good could be dirty could it.\n\nShe moaned softly as she lightly caressed and drew circles with her nipples on the palms of her hands. Her heart was beating faster and she was short of breath. The warm glow was slowly settling to her belly. She placed her hands on the dresser top and leaned on them, as she suddenly felt weak in the knees. \n\nShe took a couple of deep breaths and sighed. The strange warm fuzzy glow was still there but it receded slowly as she rested against the dresser. When her knees felt firm again she blew out a deep breath and stood up. She picked up her underwear and turned toward the bathroom. She paused a second, reached back and picked up the toy. She folded it in her panties and then went on.\n\n*****\n\nBrenda drew a tub of hot water, and used plenty of bubble bath and scented salts. She settled in for a soak since she would be alone all weekend. She would have plenty of time to catch up on things later. She let her mind drift as the hot water and sweet scents washed the sweat and grime of the day away from her mind and body.\n\nHer hands were folded on her belly but after a while they slowly crept up to her breasts again. Half of each breast was above the water and coated with suds. Her wet hands were hot as she caressed her breasts. Usually she used a rag to quickly wash her body so this caressing rub was new and highly pleasurable.\n\nShe wondered idle why she hadn't done this before. It was all rooted back to her mother and the spanking she had gotten for touching herself that one time. Her mother had told her it was wrong and this was the first time she had ever questioned it. Had her mother been wrong? Her hands felt so good as they touched her breasts, and even better on her nipples.\n\nThe memory of her mom and the spanking brought up the memory of why she got it. One hand wandered off down across her belly as the memory became more vivid. When it touched the thick dark curls on her mound she jerked it back quickly with a loud gasp. The hair wasn't in the memory for one thing and her fear of her mom returned.",
        "That shocked her when she admitted it to herself but suddenly she knew it was true. She had loved her mom but there was always fear right below it. It was for her own good she had always told herself but was it really. Was her mother's hard harsh manner really needed? With seven kids a little fear was a helpful thing.\n\nBrenda jerked as she realized her fingers were back in the tight curls and her nails were combing it while lightly grazing her skin. She shivered as her stomach muscles tightened. Her other hand was still on her breast and between the two her body was quivering. The warm tingling glow now warmed her from her breasts down to the lower hand.\n\nShe felt so good and seemed to be floating more than the water should account for. The lower hand moved lower to the thinner hair covering her outer lips. The quiver turned to a shiver quickly. There was a quick little catch in her breathing as a finger slipped in to part her lower lips. Her nail teasingly touched her inner lips.\n\nBrenda's mind was floating more than her body. It was awash with the warm fuzzy light from all the mixed feelings drifting through her body. Both of her hands were sending gentle pleasure to different places. Her breasts had been foremost earlier but now that finger between her parting lips was taking precedence.\n\nWhen it bumped into her clit, she gasped loudly and jerked it away. A jolt stronger than anything she remembered shot along her nervous system. It was similar to the better feels that she had occasionally with Ron on top of her and in her. Her hand went back to her sex and the finger gently explored her clit. \n\nAfter that first jolt, touching her clit was pleasurable, very pleasurable as long as she kept the touch light and slow. A tension was building in her lower back and deep inside her pussy. It was itchy and antsy in a very pleasant way but it was building. Brenda wondered where it was going.\n\nThe one finger on her swelling clit was bliss, a finger on the other hand rolling her nipple the same ways at the same time was heaven. Brenda would sigh and then moan softly. The soft moans were from the pressure inside her building a little to rapidly. It would give off a small spark of deeper delight and then eased up slightly.\n\nThe pressure was growing though, always growing, slowly but sure it was heading toward a climax the likes of which Brenda had never felt or even imagined. She was totally lost by now on a sea of gentle golden contentment and warm dreamy pleasure. \n\nShe was beyond the shores of an ocean she had never known. A sea that could have a violent storm of passion erupt at any time. Brenda's breathing was getting shallower and her heart was racing before the wind. She was headed for the rocks of a spectacular crash that would hit her without any warning that she would understand.\n\nHer finger smoothly rubbing on her clit stumbled and her nail flicked the bright pink nub. That was all it took, Brenda frozen in panic as every muscle in her body tried to tighten up at once. Her knees came up trapping her hand, as her stomach muscles wanted her to sit up. Her eyes flew wide and her mouth opened silently.\n\nThen the storm fell on her, not one of dark clouds and dim thunder, but one of bright starbursts and a deep ringing in her ears. The world went away even farther and her body disintegrated with pent-up energy and passionate fire. Brenda was in the middle of a storm all right and it was her first orgasm in full bloom.\n\n*****\n\nBrenda floated on a sea of euphoria and wondered vaguely why she hadn't drowned. She was curled up on her side in the tub and the water was no longer hot but lukewarm. She felt a sense of wonder and wonderful both at the same time. Brenda was very relaxed, content, and sleepy.\n\nHer mind in its hazy afterglow wondered if that had been one of those orgasms that Rose had ranted and raved about. If it was then she had ever right to rant and rave. A whole new world of feels had opened to Brenda and she knew her old one would never be the same. \n\nShe briefly wondered how long she had been in the bath. The temperature was to the point of being chilly. It was time to get out of the tub if she could. As she rolled over on her back she sighed and wished she didn't have to do anything but sleep. She had never been so relaxed, happy, and sleeping in her life.\n\nGetting out of the tub was an adventure in its self. Her arms and legs didn't want to work properly and didn't seem to have any strength. She ended up on her hands and knees and crawling over the side of the tub to the floor. The rug there was soft, fuzzy, and so inviting.\n\nIt took a force of will to climb to her feet and dry her body off. She had to pause when she dried her breasts and again when she dried between her legs. The soft but rough towel caused shocks from her hard nipples and jolts from her clit. Even being careful she was shaking slightly by the time she was dry.\n\nHer whole body seemed more sensitive. Just stroking her fingers over her arm made her shiver. The brush of the towel over her thighs was titillating and over her inner thighs, exquisite. Butterflies would jump in her stomach and the muscles there would roll at the oddest touches and caresses.\n\nWhen she tried to dress, the pressure of her bra on her nipples was just too much so she left it off. She picked up her panties and jumped when the toy dick rolled out and fell to the floor. It bounced once and then laid there in all its glory. Brenda felt her sex tighten up with a fluttery feeling.\n\nShe dropped the panties on top of the bra and bent to pick up the toy. It still felt funny in her hand but not as much as the other day. Something had changed and it seemed to be with her, Brenda thought suddenly. Where she had been afraid of the toy before, she was now very curious and excited by it.\n\nWith it in her hand she turned, walked into the bedroom, and over to the bed. She laid the toy dick on the nightstand and lay down on the bed. She laid flat on her back, her eyes on the ceiling and the slow turning blades of the ceiling fan. Ever so often her head would turn and she would look at the rubber dick. \n\nHer mind was wrestling with the problem of what to do with it. Where she had decided to give it to Rose a few days before, she now had other ideas and they shocked her. Bits and pieces of things Rose had said in the past floated up from her memory. Hand jobs, blowjobs, titty fucks, riding the pony, and anal ended up being quite a list.\n\nMost of them Brenda understood at least in principle, although why tit fucking? That was a real unanswered question and anal was mind blowing to even consider. Riding the pony was with the woman on top but again the why was beyond her. She wondered how the man could move in that position and then blushed as she visualized herself bouncing up and down on Ron's dick.\n\nHer thighs and stomach muscles tightened, squeezing her pussy at the vision and then she giggled. She would blow Ron's mind if she even attempted anything like that. Anything and everything on that list would blow Ron's mind. It would blow hers also she had to admit. Not that it was ever likely to happen, things as far as sex went were pretty much set in stone.\n\nDid it have to be that way? Was there a way to change it? Well, yes, anything was possible give time, patience, and practice. The only problem was explaining to Ron where these thoughts and skills came from. Her mind jumped at the word skills. Was she actually thinking about trying any of those things for real?\n\nThe answer was a meek but resounding yes.\n\n*****\n\nBrenda woke up cold and horny. Her dreams had been filled with all sorts of debauchery, some of which had even startled her in dreamland. Now that she was awake they seemed unreal and impossible, but then again so had touching herself before her bath. The memory of that orgasm made anything possible and even plausible.\n\nBrenda pulled the silk comforter over her body and shivered as it rubbed her hard highly sensitive nipples. The cloth felt cool and sensuous as it slid over her body. Her whole body seem overly awake and alive to any and all touches. Her hands were suddenly on her breasts and she moaned deeply as they caressed and teased her nipples so lovingly. \n\nThey almost seem detached from her, an entity of their own with a mind of their own. She sighed and squirmed as the passion grew along with the tingling itch she remembered so well from before. As it moved down to her belly, so did her hands. Light caressing fingertips that were just firm enough not to tickle made her squirm more.\n\nShe ran her hands over her stomach, her hips, her thighs, and around her sex without touching it. They moved on down to the tops of her thighs and then inward as she spread her legs. Her nails scarping lightly on the tender sensitive skin of her inner thighs had her groaning loudly.\n\nShe knew where the hands would go next and wasn't disappointed as one searched out her clit and rolled it lightly. She gasped loudly and lifted her hips. The other hand surprised her by seeking out her wet opening. A fingernail circling it lightly brought a yell to her lips and a jerking in her hips.\n\nWhen the finger dipped inside, she went up in flames as the second ever orgasm of her life washed through her straining body. She faintly realized that only her shoulders and heels were on the bed and her hand was trapped with the finger deeper inside her pussy. She shook as her other finger strummed her clit once, twice, three times.\n\nQuick, hard, and sharp, this orgasm wasn't as all out intense or as long and drawn out as the first but it was still hell on Brenda's mind and body. Muscles strained to pull her body apart at one point and the next it was trying to ball up and savor the mass of fiery pleasure shooting out from her depths.\n\n*****\n\nBrenda sighed deeply and stretched under the comforter. It rubbed her body sensuously as she raised her arms over her head and twisted the kinks and tight spots out of her body. Her hand bumped into the toy on the nightstand and she grabbed it. She brought it over so her hands were resting on her chest.\n\nShe looked at it closely and ran her hands over it, feeling the thickness and the veins and bumps on its surface. It seemed to warm up as her hands played over its surface. She wondered what Ron's would feel like if she played with it the same way and how it would feel to him. Would it feel good like her finger on her clit? Would he orgasm like she had?\n\nThat thought made her shiver but she didn't understand why. She could almost feel him moving inside her as she held the toy with one hand, wrapped her fingers around it, and stroked them up and down. She could feel the ridges and veins as they rubbed her palm. She moaned as she wondered what they would feel like in her pussy.\n\nThe thought of the size of that thing jerked her back to reality. There was no way it would fit inside her, Ron was a tight fit, and he was a lot smaller. The thought that a baby's head and shoulders came out of there during labor, so that thing shouldn't be a problem, crossed her mind. She wouldn't have a baby so she would never really know.\n\nTo get her mind away from that line of thinking, Brenda brought the head of the toy up to her mouth and licked it. It tasted like rubber and slightly antiseptic. Rose had talked about sucking and licking on her husband Joe's thing so she was curious as to how it would feel and taste.\n\nThe taste of this thing was terrible and she wondered about the taste of Ron's. Rose said she like the taste of Joe's so it must taste totally different from this rubber one. Well, duh.... That was a give me, if there ever was one. Then another thought hit her like a bolt of lightning and made her shiver.\n\nWhat did she taste like? She had never thought about it until now. There had been a lot of things she had never thought about she realized. Her hand sliding down across her belly brought the shiver back even harder. A finger gliding down her slit made her whimper loudly and she groaned as the finger slipped into her pussy easily. \n\nThat brought up another question and a second finger joined the first. Brenda gasped, spread her legs wider, and then raised her knees. The two fingers fit easily and moved even easier. She was very wet and slippery. She could feel the heat of her sex and the way the inner muscles grabbed at the fingers, only to relax and then grab again.\n\nThis surprised her, as she didn't realize that she was doing it. No wonder Ron came so easily and so quickly. It was exciting her and it was only her fingers in there. Her other hand moved down dragging the rubber dick with it as she worked the two fingers in and out slowly. Her hips would rise as they went in and fall as they came out. \n\nEver so often her wrist grazed her clit and she now understood the intense good feeling ever so often, when Ron fucked her. Uh.... Made love to her. Her mind was getting nasty and she had to stop that now before it got to be a habit. A third finger tried to join the other two and she felt full like she did when Ron was in her. \n\nShe was breathing hard and rotating her hips to make her clit brush against her wrist. Things were building fast, the tension was in her lower back again, and the antsy feeling was rising. She was having a hard time rotating her hips and flexing them at the same time. She kept losing her place as her fingers pressed deeper and deeper.\n\nShe was hovering right on the edge but couldn't quite get over it. Her fingers felt so good, the brush on her clit heavenly, but she needed something else. She didn't know what it was but.... \n\nShe jerked her fingers out of her pussy and stuffed them in her mouth. Why she didn't know, it was a sudden impulse. Her flavor filled her mouth and her aroma filled her nostrils as her free hand jumped to her clit and rubbed it fiercely. She went over the edge and crashed spectacularly into another mind numbing orgasm.\n\nHer body jerked and twisted about on the bed, wrapping her tightly in the comforter, her hand locked over her clit. She was sucking wildly on her fingers only it was Ron's dick in her mind. She was well past wild abandon and into new and uncharted space.\n\n*****\n\nBrenda woke up on her side with one hand still over her clit and the other near her nose. The smell of her sex was still strong on her fingers and she whimpered softly as she remembered sucking on them greedily. The memory of the orgasm seeped back slowly and she sighed contently. Those things were addictive, she thought with a mental smile as she went back to sleep.\n\n*****\n\nThe phone by the bed had been ringing for some time Brenda realized as her hand went in search of it. What time was it, she wondered. The clock on the nightstand next to the phone said nine thirty. This gave her a start as she picked up the phone.\n\n\"Good morning dear,\" Ron's voice came from the phone.\n\nMorning? Brenda sat upright in bed, confused. It was light outside and brighter on the back windows that faced east. \"Uh, good morning dear,\" She replied.\n\n\"You sound sleepy. Are you sleeping in while I'm away?\"\n\n\"Yes dear. I was really tired from the traffic yesterday and a hot bath just put me out like a light.\" \n\n\"I'm glad you're resting, I worry about you when I'm not there.\"\n\n\"I know dear but there's nothing to worry about. I'm a big girl and I can take care of myself.\"\n\nRon chuckled playfully and replied, \"Yeah, I know, that's what I'm worried about.\"\n\nBrenda froze for a second. Did he know about what she had been doing? That wasn't possible, he was just teasing her. \"I'm waiting until you come home so I'll take care of you and you can take care of me.\" Brenda said and wondered about the pun in the middle of that sentence.\n\n\"Promises, promises,\" Ron said and she could just see his big grin. Then he went on, \"I have to get going, I have two meeting this afternoon and a dinner with a district manager tonight. I love you and miss you and I'll call you in the morning.\"\n\n\"I love you to dear and have a good day.\" Brenda said and then Ron hung up.\n\nBrenda sat there looking from the phone to the clock and then at the back windows. She wondered just how long she had slept. Then she wondered what time she had had that last orgasm. For some reason, time since she got in the bath yesterday had no meaning. She hung the phone up and rolled over to stretch. \n\nShe jerked and then jumped as something long and hard slipped between her ass cheeks. How the hell had that got down there she asked herself and then she remembered having it in her hand just before the orgasm hit her. She must have dropped it during the excitement and mind-blowing pleasure.\n\nShe reached around to move it over out of the way. She ended up with it on her chest between her breasts as she stretched. Some sore and achy muscles were scattered here and there throughout her body. Orgasms seemed to use certain muscles more than others she thought as she relaxed back and sighed deeply.\n\nShe felt so good and so happy. Usually she was a little depressed in the mornings and it took a while for her body to wake up. This morning she was anything but depressed, she felt energized more than the extra sleep should account for. Extra sleep usually made her logy and groggy. The orgasms were the reason; there was no getting around that.\n\nThe big dick on her chest once again caught her eye. Smiling she pressed her breasts together around it. She fumbled around trying to hold them that way and to move the toy dick at the same time. She didn't have enough hands she decided with a giggle and anyway the rubber didn't want to slide.\n\nLaughing at her own silliness, she tossed the dick to the side and rolled off the bed. It was time to get cleaned up for coffee and a little breakfast. She found more sore muscles as she got to her feet and made her way to the bathroom. She thought about a shower but decided to wait until she finished her housework.\n\n*****\n\nIt was noon before Brenda even thought about getting dress and that wasn't like her. She always had at least her nightgown and robe on in the morning. Being naked all morning had been interesting and she liked it she decided. Rose always laughed about the fact that she did her housework in the buff. Brenda hadn't believed her then but found the idea interesting now.\n\nShe straightened the bed and folded the comforter. The toy was lying in the center of the bed and Brenda picked it up as she headed for the bathroom. She dropped the toy in the sink and carried a load of clothes to the laundry room. When she returned she washed the toy with hot soapy water and laid it aside.\n\nAs she opened the shower door Brenda paused and then went to retrieve the rubber dick. She returned to the show dropped the toy on the shower seat and turned the water on. The hot water cascading over her skin felt so good and when a particularly hard jet caught her nipples just right she would sigh and shiver.\n\nEverything felt so different with her body awake, the nerves so sensitive and receptive. Her body scrubber loaded with soap glided so sensuously across her breasts, belly, and thighs. When she ran it up and down between her parted thighs she gave out with a deep hissing breath. Everything seemed to turn her on now.\n\nTurning under the hot water her eyes went to the big toy. With just a slight hesitation, she picked it up and rubbed it over her body. It felt odd but good gliding over her skin and nearly took her breath away as she ran it lengthwise down her slit and between her legs. The veins and ridges bumped and massaged her clit so nicely.\n\nBrenda spread her legs wider and used one hand to guide the long thick toy dick between her legs and the other hand moved it slowly up and down. It rubbed in her slit and over her opening; she tilted her head back, bit her lower lip, and moaned loudly. She rubbed it lower and felt it bump over the tight pucker of her anus, which drew a deep hissing breath.",
        "She massaged herself from her clit to her asshole in short little strokes and slow movements. Her knees grew weak and her legs started to tremble. Her brain was in a foggy haze of glowing light and pure pleasure. She turned to sit down on the shower seat and nearly lost her balance.\n\nShe dropped the toy and grabbed the ledge on the shower wall. Shaking from fright as well as stimulation she found her way to the seat safely. She sat there breathing hard for a moment and then retrieved the toy from the floor. Her hands were trembling as she applied the massive head to her opening and pressed gently.\n\nNothing happened for a long moment and then she felt the muscles relax and the head filled her with a slightly uncomfortable stretching of the walls. She eased the head out and sighed softly when it was gone. She pressed the head forward and it eased into her vagina quicker and felt a lot better. She sighed again only with a growing pleasure this time.\n\nLeaning back in the seat she brought one foot up to the edge of it and slowly rotated the big toy. She felt the bulb like head move inside her easily. She was so wet and slippery that the toy sank in an inch or so. Brenda gasped and flexed her hips against the intruder. It moved deeper and she groaned.\n\nWith about a third of the dildo in her pussy Brenda felt full, the walls of her sex tight around the big shaft. She tried to stop the slow flexing of her hips but it was more effort than it was worth. Anyway the movement of the rubber dick felt so very good inside her. She slowly fucked herself with little sighs, gasps, and groans until she realized that there was a lot more dick in her than not.\n\nShe found it hard to believe that it would even fit much less most of it would disappear inside her. She felt so full and so complete somehow. She gave a shivering shake and groaned loudly as she pulled it out until just the head was still inside. The slide of the veins and ridges on her inner skin was heavenly followed by an empty feeling.\n\nShe took a deep breath and shoved the dick back inside. She made a gasping, not being able to catch your breath sound and froze. She knew she was on the ragged edge of a monster of an orgasm and wasn't nearly ready for it to happen. She sat very still and waited. She was trembling and suddenly felt flushed and hot all over.\n\nShe rolled her raised knee out farther and lifted the other foot to the seat. She looked down at her wide spread knees and thighs and at her hands holding the rubber dick. A few days ago she would have thought this to be impossible and very vulgar. Now....  \n\nNow it was real and beautiful. She watched as she drew the toy out. It's movements and the feelings overlapping into one picture in her mind. She whimpered and jammed the dick back in as her hips lifted and rolled up to meet it. She pulled it back and jammed it home again. The orgasm was there as she heard herself scream.\n\nHer body erupted into needle points of light and pin pricks of pure unadulterated pleasure. Her nervous system was one big electrical discharge the blasted her away into that never-never land of pure bliss. She hadn't touched her clit she realized somewhere far away and she found that interesting on some deeper level.\n\n*****\n\nThe big toy was eye opening for Brenda in so many ways. She didn't dare use it but that once that weekend as she wasn't sure how fast she would shrink after it stretched her so deliciously. She knew Ron would be all over her come Tuesday when he got home. She wanted to be ready, willing, and able when he did. \n\nShe was unsure of a lot of things but one thing she did know, somehow and some way she was going to change the way she and Ron made love. Her body was awake now and had an appetite that was amazing. She had spent time with her hands and mouth all over that toy and she wanted to try some of it on Ron.\n\nHer only worry was what Ron would think and or do. She had to be careful or she would ruin the whole thing but she had two more days to play and to plan. So hopefully she could figure out something. If worse came to worse she could always do her housework in the nude with Ron home. That should get the ball rolling.\n\nHer mind jumped ahead to next month as she wondered what toy would show up and what she would do with it. Only time would tell about everything. "
    ],
    "authorname": "TxRad",
    "tags": [
        "exploration",
        "masturbation",
        "first time",
        "first orgasm",
        "toy"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/toys-are-us-1"
}