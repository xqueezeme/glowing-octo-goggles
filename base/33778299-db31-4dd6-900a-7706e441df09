{
    "title": "I Dare You",
    "pages": [
        "Author's note: As with all of my stories, this one is a slow-burner and leaves something to the imagination. I hope you enjoy reading it as much as I did writing it.\n\nDisclaimer: Although not stated explicitly, all characters are over 18 years old.\n\n-----\n\n\"I dare you.\" I stared at the words again and they seemed to take on a new meaning, the letters morphing of their own accord into different shapes and sizes and colors. This couldn't be real.\n\nI glanced up at the locker room full of players shuffling to get their gear on, talking, laughing, ribbing, and looked for any sign that one of them was more interested in me and my flashy red paper, but no one seemed to care. Weird. My eyes drifted again to the text, and for the twentieth or thirtieth time, I read the words.\n\n\"You work so hard at every practice. I admire and respect that about you.\n\nThe showers are very calm after everyone is gone and you deserve a little treat. Stay later tonight, cutie, and enjOy yourself. I dare you ;)\"\n\nThe cursive writing was impeccable, smooth in its flow. A dark blue fountain pen must have been used and the expensive-feeling red paper had a faint smell of something. Vanilla, I suddenly realized. Maybe the desired effect was seductive and bold, but I found it a little endearing. The \"cutie\" sort of negated everything daring about it.\n\nBut it was the way the word \"enjOy\" was written that kept me mesmerized. It was clearly italicized, with a capital O in the middle. The connotation was hard to miss. This... person, whoever they were, was asking me to enjoy myself in the showers after everyone was gone. Here, at the club. I snickered to myself thinking that I had a perfectly nice and private apartment I could do that in, at no one else's command, so why would I risk it here? But there was something about that \"I dare you\" and the winking face that followed it that made my mouth dry and my insides growl. I brushed the thought aside. No, I wouldn't. Would I?\n\nThe locker room was calming down. I looked up and saw only three players remained. I recognized Oksana, because oh well, who wouldn't recognize Oksana, but the other two were still among the mishmash of faces, names, and jersey numbers that I hadn't memorized yet. Number 7 and Number 12. However, none of the three was paying me attention so I started wondering if it was a coincidence that they were still here or if one of them was my... what do you call a person who secretly dares you to do something risky? Naughty instigator, perhaps?\n\nI carefully placed the red paper in the side pocket of my gym bag and finished getting dressed. Socks, shoes, hair band and tie, everything was automatic. When you've played football - I refused to call it soccer like everyone did - for as long as you've been able to walk and been in teams since you were allowed to join one, the practice and match preparations became second-nature. There was a point where I thought I'd be doing this on a professional level, but a knee injury in the middle of my high school senior year plus a letter of acceptance to law school meant that my dreams of being the next Maldini or Cannavaro, female edition, were thwarted. Now I had to console myself by playing for a local team in a local league and feel like my past talent had been squandered. But at least I was back doing what I loved and it didn't conflict with my day job.\n\nWith one last glance at my gym bag and the mysterious letter within, I closed my locker and shook my head. Maybe someone on the team was trying to get into my head. I did grab a starting position in less than a month when many had been with the team for a few years, so maybe the other defenders weren't happy about it. No one had shown any bitterness though; quite the contrary, they were very helpful and welcoming. Plus there was that \"cutie.\" It definitely wasn't a bitter one.\n\nPractice was tough. Usually, when my feet hit the green grass, I found a way to get into my warrior mode. Block out the external stimuli, forget everything outside the field, and just give it my full concentration and effort. But today was different. My mind kept wandering back to that red paper, to that faint smell of vanilla, and to that daring message. Who could have slipped it in my locker?\n\nWith each practice drill, each movement, each run, I found myself looking at my teammates more and more, scrutinizing their behavior. Was it Bree, the goalie? We had gotten along rather well on the field and, by virtue of our positions, she had a nice view of my backside most times. Maybe she liked it a little more than she let on? Or was it Kiara, the other central defender? We had easily found a harmony together, moving in tandem to cover the penalty area, not stepping on the other's toes, and having each other's back. When you're a central defender, chemistry with your teammate can make or break your play, and Kiara and I had a lot of effortless chemistry and understanding. It was as if we'd been playing together forever, and maybe she did want us to play other games too. Or could it be Brooke, the team captain, miss congeniality without even trying off the field, and our own version of Iniesta on the field? She had been welcoming from the day I joined the team and always tried to get me involved with the group banter and off-field activities. During practice and matches, she had eyes everywhere, so maybe she had been eying me out without me even noticing. Or was it Oksana? The tall blonde goddess with Russian descent with whom I butted every time she stormed our defense during practice? We did have a bit of a quirky rivalry going on and maybe that lead to some attraction on her part. It was easy to imagine her daring people to do things and them bending over backwards to obey any order coming from her perfectly kissable lips.\n\nWait... Where did that thought come from? I slapped myself mentally while tackling number 14 and grabbing the ball before she could pass it to Oksana. Dribble and pass to midfield... Brooke. She was everywhere indeed. Did she smile at me? I thought she smiled.\n\nWhat was happening? I shook my head for what felt like the hundredth time and tried to concentrate and get back to my position. But my eyes landed on Number 7 who was stretching and getting ready to join the practice match. Her lunges were deep and showed off a perfect bottom.\n\n\"JESS!!!\" Kiara's voice shook me out of my ass-gazing moment and I barely noticed Oksana speeding past me and straight to the goal. Kiara quickly caught up with her and tried to slow her down while I ran toward them and snapped the ball between Oksana's legs from behind, flipped around, and cleared it with a powerful kick. This should not happen again, I chastised myself, while Kiara was rightfully raining expletives on me and Oksana applauded my swift comeback and teased Kiara for not reacting fast enough.\n\nI got my mind back in the game for the rest of practice, but I couldn't ignore the fact that I was on high-alert the entire time, watching every player, their eyes, their movements, their bodies. I had been playing football for as long as I remembered and I'd never looked at another girl's body beyond just acknowledging her fitness level. But now, other things were popping up as if for the first time. Curves, toned bodies, tensing muscles, sexy calves... The world \"bootie\" flashed in my head and I couldn't stop repeating it. This was a buffet of delicious booties, if there ever was one.\n\nBut I wasn't a lesbian. I hadn't been attracted to girls, at least I hadn't ever thought I was. This was an all-new territory to me. Could I be reconsidering my sexuality now, at the not-so-tender age of 27? \"No,\" the smart part of my brain answered. \"You're just affected by that silly red letter, it's making you think things. And that big O in enjOy, it's been a few days.\" The drive home was going to be agonizing. \"But there's the shower here,\" the naughty part of my brain retorted. \"The very calm shower, after everyone is gone, the players, the coach, the assi...\"\n\nOh crap! It could also be coach Terry, couldn't it? Or her assistant Alex? Or anyone of the staff at the club? They all had access to the lockers. I turned to the bench and saw Terry and Alex gesticulating and talking. They were in their mid-thirties, and quite attractive. It wouldn't be implausible to imagine one of them having a crush on a player. I was doomed. There was no way I could guess where that letter came from.\n\nAs the practice match ended and we finished some more drills and stretching exercises, Brooke brought us all together for a huddle and encouraging words. I was instantly aware of the amount of sweaty female flesh touching me and the close proximity of heaving chests around me. The person who dared me could have been among them, bumping against me now, and getting a thrill out of knowing what I didn't. This had to end, I was going crazy.\n\nWith the training over, I knew all the players would go to the lockers to shower and there would be a huge amount of skin on display. Only a few of the girls were comfortable being fully nude in front of the others, but there were a lot that paraded in their underwear between the lockers and showers. I didn't need to see that today and get more confused, so I offered to stow away the practice equipment.\n\nAlex, the assistant coach, stayed back to help me and we started gathering the various rings, hurdles, cones, poles, and balls, then took them to the storage locker. She didn't say a word through it all and I was grateful for the silent reprieve from the craziness of the locker room. I couldn't, however, stop myself from sneaking glances at Alex in her form fitting jeans and red polo shirt. She was cute in an understated way.\n\nAnd that, ladies and gentlemen, is how you start losing your mind. How could this one paper with barely three sentences confuse me and influence me so much? I had to get a grip. I wasn't attracted to girls, this was just a silly moment.\n\n\"Jess,\" I shook myself and saw Alex very close to me, touching my arm. I smiled to try to hide the trepidation in my whole body. She had kind eyes. \"You've been quite absentminded today, anything wrong?\"\n\n\"Oh, no, uhm, maybe, yes.\" I stuttered. \"A case at work, it's got my attention,\" I lied.\n\n\"Oh, good. Well, not good-good, but good in the sense that it's probably nothing life-threatening, I suppose.\" I nodded. \"You're an excellent defender, Jess, and both Terry and I saw that in you from your first tryout. But a defender can't be thinking about other things when on the field. It's deadly and we'd have to bench you. So I hope it's a one-time thing. Leave work outside the field.\"\n\nI apologized and assured her it wouldn't happen again. Perhaps I was getting good at this evasion thing as the entire time she was speaking, half of my mind was concentrated on the fact that she was still touching my arm and that the three buttons on her polo shirt were undone and offered a nice preview of her creamy white body.\n\nShe smiled, seemingly content with my answer and walked away. I headed toward the locker room, hoping everyone was already in the showers by now. That was the case. If I were honest with myself, I would have admitted that I was a little disappointed I didn't get to see some skin. I grabbed my gym bag and went into one of the empty showers.\n\nThe club had been sponsored by a wealthy businessman who grew up in the community and built like a professional stadium. It was one of the largest I'd played at and they had taken into account not only having over twenty showers, but also including a small changing room inside each one and a door, so you had as much privacy as you wanted.\n\nThe sound of the water coming from all the stalls was overpowering, though there was still the occasional shout or small discussion between two players. One by one, though, I heard the showers turn off and the doors open. I didn't count, but as I was shampooing my hair, I had a feeling only a few were left.\n\nI panicked. Whether subconsciously or not, I had put myself in the situation the letter wanted me to be in. I was suddenly attentive to every sound around me. I didn't recognize the voices but one to my right was asking if someone could drop her off and another one, also to my right, agreed, and I thought there was one other occupied shower to my left. When the two on my right went away, I turned off my shower and listened. Nothing. I turned it back on and rinsed my hair. Just to be sure, I switched the shower off again, and perked my ears. Nothing. I turned it back on and moved on to wash my body.\n\nI was now painfully aware of the predicament I was in. The coast was clear. I was alone and I could do whatever I wanted. Not that anything would have stopped me before, but well, psychologically, it was easier knowing I didn't have an audience to hide from. Was I seriously considering it now? This couldn't be. I needed to get a grip and just get myself home. The letter couldn't win. Even if whoever was behind it didn't know that I followed the instructions, I would know. And I wasn't weak and easily influenceable. No, I was my own master. I could choose not to do it.\n\nMy strong resolve lasted the three seconds it took my hand to travel down my body. By the time my soapy finger hit my outer lips, I knew it was a lost battle. I wasn't just wet, I was soaking. A shudder coursed through me and I closed my eyes and held onto the wall with my left hand. The little voice telling me I should stop was soon drowned out by the thumping of blood in my head, and the remainder of my resistance was washed out with the water running down my body into the drain.\n\nWith a heavy sigh, I felt my finger dip between my folds and knowingly reach my hard nub. There was no time to play or tease, I was aching for a release so I rubbed with frenzy, pictures of my teammates swirling in my head in a jumble of soft skin and rounded butts and plush tits. Within less than a minute, my building orgasm came crashing and I barely managed to turn and lay my back on the wall as I whimpered, swallowing the cry in my throat.\n\nThe letter had won and I didn't care. The naughty instigator had driven me to the brink and I had jumped with both feet, one finger, and one very drenched pussy. I heaved slowly, my finger still exploring, not totally content with the speed of this resolution. Soon enough, with my back now supported against the wall, I was on my way to a second, only slightly less frenetic, orgasm. As I was about to hit my peak, I pictured the woman behind that letter opening the door to my shower stall and walking in on me, and I crashed and tumbled with another barely contained whimper.\n\nA few minutes later, as I breathed normally again and felt some strength come back to my legs, I dragged myself back under the running water and finished cleaning up. I should have felt shame for being so easily influenced, but I didn't. I was owning my pleasure.\n\n-----\n\n\"Oh my, last Tuesday must have been intense! I wish I were in there with you.\n\nYou're so hot and the gym room might get a little stuffy today. How about you unbrace yourself before you walk in, cutie? I dare you ;)\"\n\nThe same red paper had been slipped inside my locker. The same flawless handwriting with the same \"cutie,\" and the same innuendo with the word \"unbrace\" italicized.\n\nI glanced up at the locker room still full of players getting ready for today's gym session and again; no one seemed to care about me and my special letter. I inhaled deeply and shook myself.\n\nShe knew what I'd done last time. Wasn't everyone gone by the time I went on my little shower joyride? Was she still there? Did she hear me above the sound of the water? No, there was no way. She probably just calculated that I'd been the last one in, and thus out, since I took care of the equipment. She was just assuming I obeyed her instructions. So the only way she'd know that for sure would be if I followed today's dare. I had the upper hand now.\n\nI smiled and stowed the paper away in my gym bag, all the while wondering if winning a naughty dare required doing it or not doing it. In my case, the lines blurred so much I couldn't tell. Oh shit, the voice of reason sounded in my head again. I was trying to rationalize doing what she asked. No way. This wasn't happening again.\n\nI headed to the changing room to get dressed and physically slapped myself the moment the door closed behind me. \"No, Jess, no, you wouldn't go train without a bra on. First, because it's uncomfortable. Second, because you're not a creep. And third, because you're not giving her that satisfaction,\" the logical part of my brain shouted.\n\nAlright, I agreed internally, and started taking off my work clothes. I got my gym gear on, with the bra, and was about to open the door when I suddenly stopped, took off my t-shirt and bra, stuffed the latter in my gym bag, and put the former back on. By itself. With a smirk on my face, I headed back to the locker room and threw my bag in my assigned locker.\n\nOnly a few players remained, all shuffling to get ready, and I wondered if she was among them. Would she notice my erect nipples? Would she get a kick out of it? I practically pranced around, emboldened by my take-charge attitude, and shouted at the remaining girls to get their asses up to the gym.\n\n\"That's some serious enthusiasm, you heard the newbie, girls!\" Number 20 replied and dashed after me, smacked me on my behind, and slowed down to let me catch up. After a double take on my chest, she whistled and nudged me. \"Whoa, you're stacked!\" I feigned incomprehension and she laughed heartily. \"Those are some damn fine titties, you should let them go free more often.\"\n\n\"I forgot my sports bra at home,\" I shrugged. That was the most logical excuse.\n\n\"Then you should forget your sports bra at home more often.\" She winked and laughed again. I joined her. Her cheerfulness was contagious and I thought for a moment that if she was my naughty instigator, I wouldn't mind her doing unspeakable things to me, as long as she brought that perky attitude along.\n\nWalking into the gym, I was hit by a waft of cold air from the AC and the smell of musky sweat that had accumulated over years of intense training. I was also hit by the realization of what I'd just done. Two hours with glistening flesh around me while my nipples brushed freely against my shirt sounded just as good as prospective torture.\n\nAnd torture they were. I caught some sideway glances the first few minutes as every team member seemed to notice my clothing situation, but nothing out of the ordinary. I kept a tally in my head of every person and their reaction, trying to determine which one was the most telling. None jumped at me. There were those who did a double take, those who required a triple one, those who looked once and lingered a little bit to take it all in, and those who looked once and then tried to not look again for a while until their eyes inevitably landed back on my chest for one more check. Whoever my naughty instigator was, she was good at not making herself very obvious.\n\nAfter some warm-up cardio on the elliptical, where my upper arms brushed way too often against my shirt and my chest bounced more freely than I'd ever felt, I moved to the weight lifting area where most of the players were. Alex was guiding Bree and Number 15, our two goalkeepers, but coach Terry was supervising everyone else. She raised her eyebrows when she noticed my wardrobe situation and glared at me. I felt myself both shrink from embarrassment and, oddly, tingle from excitement.\n\n\"50 weighted bench crunches, Jess!\" She shouted and moved closely toward an empty inclined bench. What was it about a coach that made you feel like a shy little girl again, even though you were an adult capable of making criminals shudder in court? I rushed to grab a weighted plate and came back to the bench. In my head, I was rehearsing the exercise and calculating how uncomfortable and indiscreet it was going to be. The answer: a lot. I chastised myself several times and promised not to fall for such silly shenanigans again. Who in their right mind would train without a bra when they have D-sized breasts to account for?",
        "I situated myself on the (very) inclined bench and dropped back to grab the plate. Gravity did its due and I felt an added weight pressing against my upper chest. This was going to be fun! Coach Terry stood behind me, staring with a weird look that I couldn't exactly decipher from my upside-down position. I started on my crunches and closed my eyes to avoid any further embarrassment as my entire upper body bounced with every rep. I could still feel her eyes on me, though, and it took all my will to not say, \"Like what you see?\" That's how some porn movies start, don't they?\n\nWhen my crunches were done and I sat back up on the bench, she shouted again, \"1 minute rest, then 50 more.\" I turned back and I swear I caught her smirk. Goodness, I was going to pay for this. She walked away to another player, and I tried catching my breath. My eyes wandered on the mirror facing me and landed on Brooke who was spotting another player, two benches away. She nodded toward the coach, smiled, and mouthed the words, \"she likes you.\" I felt myself turn even more crimson red.\n\n\"Again, Jess!\" I heard coach shout as she came back toward me, this time positioning herself to my side rather than behind me. I dropped back reluctantly, grabbed the plate, and started again. I kept my eyes open this time though, catching Terry's eyes repeatedly as I dropped back and came up. A mix of anger and something more carnal filled her face, but she kept it professional, not once looking down at my jiggling chest. \"26, 27,\" I mouthed and heaved under her eyes, with sweat pouring out of me and other liquids seeping from a different place.\n\nI slowly realized that as much as I was sure now that Terry was a lesbian, I was also certain she wasn't my naughty instigator. This wasn't the kind of woman who would mix business with pleasure, no matter how much she'd want to, nor was she the kind who'd hide behind subtle letters and playful dares. If she was interested, she'd come at you full-speed and tell you how she felt. I'd be lying though if I didn't admit the thought of her coming at me wasn't particularly enticing. Umph.\n\nA brief image of her ordering me to lick her to orgasm while doing push-ups on top of her fleeted through my brain and I shuddered. The prospect of another shower \"session\" after this training was becoming inevitable. I was too aroused to wait until I got home.\n\nI finished my reps under Terry's glare, caught my breath, and got off the bench on her side. \"Pack a backup, always,\" she whispered when I tried to pass her. I nodded and dropped my eyes to the ground. \"Triceps press, 3 sets of 50,\" she said louder, and moved away to another player.\n\nI hurried in the dictated direction, happy about this temporary reprieve. Number 20 was finishing up on the machine and she smiled when she saw me approach. \"That was fun to watch,\" she said discreetly. I blushed. Had the entire team noticed what happened earlier? Shit. \"We need more interesting training sessions like these,\" she laughed and got up. I started wondering if she wasn't too happy about this whole situation, but her lack of interest in me for the remainder of the time made me question that theory.\n\nThe rest of the session went on in discomfort but without any notable incident beside me realizing I was looking and lingering too much. Not at any woman in particular, but all of them. Say what you will about the porn industry, but it really nailed it when it comes to girls in spandex flexing muscles and making their bodies move in weird angles and shapes. It is very sexy and when you have over a dozen of them in one confined space, well, you can't help but stare and fantasize. Younger, older, married, single, butch, femme, it didn't matter. Every one of them was attractive in her own way and it occurred to me that I wouldn't mind pinching any of these girls' nipples. One week ago, the thought would have surprised me, but I was on a slowly progressing journey, and nipples seemed like a great, but safe, place to park my fantasies at.\n\nIn the last five minutes of training, Number 13 (I should really start learning their names!) spotted me on the barbell bench press and I stared at her crotch a little longer than necessary several times. When it was my turn to help her, the thought that she could smell me while I leaned my free-hanging chest above her made me even wetter, and I nearly ran back to the locker room afterwards. I usually finished my training with a bit of light cardio, but I knew I couldn't handle the slickness between my folds if I moved one more minute.\n\nI grabbed my gym bag and rushed toward the shower, but I bumped chest-first into a half-naked Brooke. \"Oh sorry, I tit not see you there!\" She winked and moved past me. Whether it was my brain playing games with me or the entire universe conspiring against my sanity, I didn't know and didn't care anymore. I needed to clear my head and the only way to do that was to get it out of my system. Which I did, in the shower.\n\nAs I shuddered against the wall with the image of my hands squeezing Brooke's chest burning in my brain, I started to wonder whether I wasn't maybe bi-curious after all. Straight girls don't fantasize about licking their female coaches, do they?\n\n-----\n\n\"Wow. That surpassed my wildest imagination! You have the sexiest chest and the most delicious set of hard nipples. I laughed, I stared, I was jealous, I stared again, and I laughed some more.\n\nCan you slip me a little something to remind me of you, cutie? I'll look above the fourth towel from the bottom, after practice. I dare you ;)\"\n\nThird letter, third dare, and \"slip\" was the italicized word. Out of habit I looked at the locker room, but no one was there. I folded the paper and stuck it in my gym bag.\n\nI had tried to come in early to catch my naughty instigator in the act, or at least eliminate some possibilities if the letter was already placed and not all players had arrived, but I got caught in traffic on my way over. The one time I don't check Google Maps before taking a route! By the time I had reached the club, practice had already started, and my letter was waiting for me.\n\nI rushed to get changed and kept glancing at the letter as it sat idly in my bag. I didn't have time to indulge, but my little devil had gone through the trouble of writing me that vanilla-scented letter. It'd be rude not to answer, wouldn't it?\n\nIt had been less than a week since the first letter and you could say I was already a little infatuated. My thoughts over the past days had centered around her, whoever she was. I'd been looking forward to practice more than I used to when I was a giddy 7 years old and football was my life. I closed my eyes and thought of her being disappointed not to see me today. Perhaps I could give her a reason to smile. My hand slipped down into my panties and I found myself already wet. I wanted to take my time, make it special, but the thought of doing this for a stranger was too naughty, and I barely managed to hold more than a couple of minutes. As my orgasm neared, I held onto the stall door and pictured her watching me. That did it.\n\nA few minutes later, after I'd changed into another pair of underwear (I had learned to pack extra - thanks, coach!), I raised the one I'd been wearing earlier and took a little sniff. Uhmmm. She was going to enjoy this as much as I did. Maybe more. Definitely more. The club's towel rack remained largely unused as all of us brought our own. I counted four from the bottom and slipped my panties above that one, then ran out toward the field.\n\nI was focused on practice this time; I couldn't afford another incident for the third session in a row. I ran, I jumped, I dribbled, I tackled, I bumped, I defended, all with determination. Maybe having gotten rid of some stress beforehand had helped. But if I'm being honest, I was showing off a little, for her. The idea that she was watching me was both driving me mad and giving me wings.\n\nWith the end of our practice match nearing, I scored a remarkable header from a corner and got high-fives from everyone, a smack on the butt from Oksana, and a hug from Kiara. \"Good job, Jess!\" a few of them shouted, and it felt good to not be referred to as \"newbie\" anymore. I was starting to fit in and feel appreciated; even coach and Alex were smiling from the sidelines. For a moment, I'd forgotten all about my current situation and what I'd left in the locker room for her. I was part of a team and it was damn nice.\n\nI couldn't wipe the grin off my face for the rest of practice. A new sense of belonging was spreading over me and whether I had my naughty little devil to thank for that or not, I wasn't sure. Back in the locker room, I glanced at the towel rack and was tempted to sneak a peek to see if she'd already collected my dues, or if the cleaning crew would have an unpleasant surprise on their hands, but I eventually decided against it. I trusted she'd find a way to get it out, she had her own mysterious methods.\n\n-----\n\n\"Thank you for the gift you left me last time. I thoroughly treasured and enjoyed it... many times.\n\nBut I feel guilty having all the fun by myself, so I left you something in return, cutie, to make you vibrate like you made me. I dare you to wear it ;)\"\n\nThis couldn't be. I did a double take. No she wouldn't, would she? I sighed. She would, she definitely would.\n\nAlthough the letter made it seem like she had left me a pair of her own panties in the towel rack, the word \"vibrate\" was italicized, and I knew what that meant. I looked around at the gym room. Only five players were there, all busy with their clothes and bags, the rest having gone to change or already on the field. I could walk to the towel rack and get the \"item\" without anyone noticing.\n\nI grabbed my bag and quickly stopped by the towels, slipping my hand in and out through the secret spot. With the object clenched in my fist, I rushed to change, not stopping to see if anyone had noticed my move.\n\nJust as expected, she did leave me a vibrator. I stared at it for a few minutes in confusion. It was black, very sleek, and felt like rubber. But it wasn't shaped in the more traditional cylindrical style. Instead, it looked more like the front of a pair of panties with an inward curve to hit the clit. There were no buttons and no controls anywhere, just a small battery door latch. I instantly realized it must be remote controlled. This would be... new.\n\nI didn't stop to think twice. Just that morning, I had wondered what she might dare me to do next and decided that I wasn't going to fight it anymore. I was under a spell, and the sooner I admitted it and stopped pretending to struggle over the moral grounds of it, the better. We were two consenting adults and those dares were too fun and too sexy not to obey. Besides, there was something more to this. The words she used and the way she used them made me feel, erm, things.\n\nI closed my eyes and thought of my imaginary naughty instigator. The faceless woman who had gotten me hot and bothered every day now, without touching me. The mysterious stranger who had overtaken my thoughts with her quirky dares and witty words, and forced me out of my comfort zone. The secret admirer who was probably out there, waiting for me with her remote control in hand, eager to test it out on me. I wanted her to control me. I wanted to relinquish my body to her and let her set the tone and speed and background to my orgasm.\n\nI dropped my panties and placed the vibrator so its curve perfectly aligned with my already hard clit. A thrill coursed through my body as the cold of the rubber hit my hot spot and I shivered from apprehension and eagerness. This was going to be fun. Torturous, amazing fun.\n\nI adjusted my panties, making sure they held the vibrator tightly in place no matter how I moved. Yup. I was good. Whether the setup would stand the test of two hours of drills and exercise, I wasn't sure, but that was the most I could do for now. I could always come back to the bathroom mid-practice and fix or discard it if things didn't work out.\n\nAs soon as I got out of the stall, I knew the next two hours weren't going to be a walk in the park. My entire body was tense and every movement was only fueling the fire further. If I took a step, bowed a little, raised my leg, or even stood still, the strange object made its presence known. I could only imagine what two hours of runs, squats, jumps, and intense exercise would do. I wouldn't even dare think what the littlest vibration might add on top of that, but I'd soon find out, wouldn't I?\n\nI stepped onto the field with apprehension and excitement. The vibrator was already meeting less and less friction in its new habitat, and my body was reacting to its simple presence. I expected a little welcome buzz from my mysterious stranger, but nothing happened, to my dismay.\n\nThe first forty or so minutes of practice were spent in the same absolute agony. With every move I made, I anticipated the buzz that didn't come. I ran, I jumped, I squatted, I did sit-ups, and half a dozen other ball control exercises, all while thinking about her and feeling the constant touch of the vibrator. Instead of acclimating to the strange presence within me, I became more and more aware of it. The yearning in my core was intensifying by the minute, I was getting more and more edgy, desperately clinging onto my sanity and doing my best not to run off to the bathroom to take care of the situation in a blink. But I couldn't. I had to wait for her to press that button.\n\nIt was hard to understand what that woman was doing to me by, well, not doing anything. My whole being, mind and body, was wired up and waiting. Never had a man made me feel this way, and the thought that it was an unknown woman doing this to me was both incomprehensible and electrifying. If she raised her hand right then, on the field, in front of everyone, and told me she was the one behind the letters, I would bulldoze my way to her, grab her hair and push her down in front of me, drop my shorts, and make her tongue do what the vibrator was supposed to. Decency be damned!\n\nWith every passing minute, my brain got flooded with the same question, firing from my neurons over and over again: When would she turn it on? When I was helping Zoe (number 3 - I was finally getting their names) stretch and had my body right on top of hers? Or when Zoe was helping me and had her face nearly level with my waist? Or maybe when I was slalom'ing with the ball and trying to stay in control? Or could it be when we stood in a circle and started passing the ball quickly between each other? No. She waited.\n\nUntil it buzzed, for the first time, at the very start of a two-minute plank. The relief that flooded my system upon feeling the little vibration was soon overpowered by the delightful excitement spreading through me. I relished the weak but constant buzz coming from the vibrator, but every second made my blood course faster in my veins and weakened my hands and knees. In a few seconds, I was trembling. Two minutes of this would be unthinkable.\n\nInternally though, I was smiling at her ingeniosity. This was clearly a small dare on its own. She had kept me anticipating until the worst possible moment, then challenged me to hold it through. I wanted to steal a look at the other players to see if she was observing me, but I kept my focus on the ground, counting down every second as if a live-ticking bomb was in front of me. Ninety nine, ninety eight, ninety seven...\n\nSeventy. I was barely hanging by a thread. The buzz wasn't strong, but it was enough to get me closer and closer. Another minute of this wouldn't even be imaginable. I tried and tried to get my mind off it. I counted the little grass roots springing up from the field below my head, I found a ladybug and a few minuscule insects, I heard every breath and sound around me, I concentrated on my breathing. Nothing worked. The vibrator was all I could think of or feel.\n\nFifty. I'd made it through more than half of it. I could get through this, I thought, naively.\n\nForty five. \"I could do this all day,\" one player said. A giggle and a few grumbles echoed around. I didn't look. I barely heard. \"Look at Jess, she's a natural.\" Without even looking up, I knew all eyes were on me. I couldn't place the voice, but whoever said that sentence either knew what they were doing or had unknowingly contributed to my torture. Steady, steady, you can hold it, I repeated to myself.\n\nForty. Shit. Still forty. I closed my eyes and summoned all my strength.\n\nThirty. I jolted. The vibration's intensity had suddenly increased and it wasn't that small buzz anymore. Whatever self control I had was quickly being suffocated under the pressure of this powerful building orgasm.\n\nTwenty five. Blurry vision, blurry sounds. The world was dissipating, washed out by a flood of endorphins.\n\nTwenty. The fact that I could still count was impressive. The fact that my body was still holding the plank was nothing short of a miracle. Every fiber of my muscles was shivering. So close. Release, whichever form it took, was almost there.\n\n\"Let go, cutie.\" The words cut through the fog of my brain. Was it her? Did she want me to...? I shuddered in the air, my body hanging by a microscopic thread of strength. I bit my lips, trying not to scream. A half whimper - half grunt escaped me as pleasure spread through me, faster than a cannonball, and kept rolling around my veins. With the vibrator still buzzing, my body stayed on that peak, wave after wave crashing into me.\n\n\"Down. Rest.\" Better words I had never heard in my life. I collapsed on the floor in a heap of lifeless flesh, and the breath I was holding finally escaped my lips.\n\nThe vibrator stopped too and I laid there for a moment, speechless. What just happened?\n\nDid anyone notice? Did anyone see? Hear? Know? I raised my head and looked around. No one seemed to care, they were all grumbling and getting back on their feet.\n\nI gathered whatever power remained in me and pushed myself up. My legs were beyond numb. I had barely managed to stand when a short buzz came from the vibrator. Jolt. Nothing. Buzz, jolt. Nothing. Buzz, jolt. For a minute, she toyed with my body, putting it back in disarray for a second then stopping. She was having fun.\n\nThen she finally stopped, and I was able to resume practice with whatever dignity and power I still had. But I couldn't help but wonder. Did she really speak to me, before I came? Or was it a figment of my imagination? I guess I'd never know.\n\nThe rest of practice went on without any incidents or buzzes, though the presence of the vibrator was even more noticeable to me now. Another relief in the shower would be welcome.\n\nAs we headed back to the lockers after training, I started wondering what I should do with the object. Return it? Keep it?\n\n\"Wow, I knew you were very cumpetitive, but this surpassed my expectations, cutie.\n\nI'd like to say this was all part of my genius plank from the start, but I sort of made it up as I went. I'm glad you enjoyed it :)\n\nPS: Please return it to the towel rack.\"\n\nI found the letter in my locker after my shower. I didn't look around to investigate who could have slipped it. At this point, I knew she was too careful to get caught.\n\nAnd although it was difficult to part with it, I slipped the now-clean object between the towels on my way out. A naughty smile crept on my face as I wondered what she'd do with it and which surprises the next practice session would bring.\n\n-----\n\n\"You're becoming familiar with most players now, cutie. That's great for the team spirit and chemistry.\n\nBut tonight, you'll try harder to get to know them more closely with a peck on the neck, a nip on the lip, a bump on the rump, a grip on the hip, and a thrust to the bust. I dare you ;)\"",
        "I re-read the lines for the fifth or sixth time. This dare was definitely the most, uhm, daring of the bunch so far. There were no italics, because everything was laid out clearly. I just didn't see how or when I could get away with doing all of these during practice, especially since this was a gym-only session. The bump on the rump maybe, the grip on the hip easy enough, but the rest? How? My brain was in overdrive mode trying to picture a scenario in which I could nip another player's lip while lifting weights or on the elliptical. No, no way.\n\n\"Did you guys tell Jess?\"\n\nI raised my head and stared with wide-open eyes. Six smiling faces were looking back at me. I tried not to openly stare below their heads, but I could see Bree was still completely naked; her perky nipples were standing out on top of her tiny tits and a neat landing strip guiding to her hidden folds. Lauren was still naked from the waist up, but was standing with almost all of her back to me, so all I could enjoy was part of the rounded outline of her chest. The other four had at least a bra and panties on, but were still showing some delicious abs and thighs. If some guy had walked in on this scene, it would've taken less than 2 seconds for his excitement to be noticeable. I hoped my reaction wasn't as obvious.\n\n\"Tell me what?\"\n\n\"We're going out for drinks tonight. You should join us, if you don't have any other plans. Get to know the team.\" Valeria, number 9, said excitedly.\n\n\"I...\" I glanced down at the red paper in my hand and a word jumped at me: tonight. \"...Yeah, definitely will.\" This was her plan all along.\n\n\"Great!\" a few of them answered back. If only they knew I was planning on getting to know the team very, very intimately.\n\nI found myself subconsciously measuring the smiles and naughtiness in each of their faces. Whether she was among the six players in front of me or she had already left the locker room but made sure someone asked me to join, I couldn't know. But this was some elaborate planning. She had clearly picked up the pace and was playing in another league altogether now.\n\n\"Do you have a car?\" The question came from Diamond, number 20.\n\n\"Yes.\"\n\n\"Can I come along? Mine is having its yearly maintenance and I've heard you say you live near the mayor's office. I live closeby too.\"\n\n\"Sure.\"\n\n\"Aw, you're an angel. Unlike these five who will be jam-packed in one car. No one thought to ask me or leave me a spot.\" She grimaced at them while turning her back and began jogging toward the gym. They shrugged and we all chuckled, though I thought to myself I wouldn't mind being jam-packed with them, especially if they stayed just like that... or perhaps everyone took off all their clothing.\n\nWhat a difference a couple of weeks and sentences make. A month ago, I would have told you without hesitation that I was straight. Today? I was daydreaming about licking Bree's landing strip. A shower \"session\" was essential before we headed out after practice, otherwise I might internally combust at night.\n\nSo I didn't have to worry about any dares during gym time, but I apprehended what the evening would bring. If the letter mentioned bumping and thrusting, that surely meant dancing. And I had to pretend to be be loose enough or find someone(s) drunk enough to attempt all my five dares with. All in public, while making sure the others saw, so that she could see.\n\nThere was also the chance that I'd pick her as my subject... would I? Would she betray herself then? Or maybe if I didn't, she'd be jealous and do her best to veer me toward her. Would she reveal herself if I was naughty enough with someone else?\n\nThe possibilities were endless, but one thing was certain. By the end of the night, I'd have transformed my budding lesbian fantasies into something concrete for the first time. And that thought alone was enough to fuel me throughout the gym session and wire me up, head to toes.\n\nTwo hours later, after I was done with my shower and its collateral, I found Diamond waiting for me in the locker room. She looked me up and down and whistled. \"Girl, you clean up good!\"\n\n\"I was planning on going out to dinner with friends so I had these already.\"\n\n\"Oh did we mess up your plans?\" She handed me the hairdryer and pointed at my wet hair.\n\n\"Nah, it's nothing important. I'll catch up with them another day. I'd rather go out with you guys tonight.\" Besides, I thought to myself as the sound of the dryer stopped any further conversation, I wouldn't be nipping and gripping with my friends, would I? The prospect of a fully naughty evening was much more appealing than sitting around a table discussing the latest cases and the hottest gossip around the firm.\n\n\"Alright, let's go!\" She bounced off the bench when I was done and we headed to the parking lot. With the bar's address entered in the GPS system, we were off.\n\nFinding someone from the team in my car was awkward, especially given the circumstances. Was she the one? Maybe. If I had to trust my gut, I'd say she didn't have the subtlety to carry out something like that. She was impulsive, always in a frenzy, and had no filter. Whatever Diamond thought, Diamond said. But, if by any chance she was the one, I wouldn't mind. Her perky attitude would definitely be a great plus, her infectious laugh too, and her delicious caramel skin. I glanced at her arms and hands and felt my insides tighten. Kissing those, or being trapped by those wouldn't be so bad. Maybe I'd pick her, tonight...\n\nNo. No, I couldn't. I was driving her home afterward and if anything started between us at the bar and we got in the car together, there'd be no stopping. I didn't want my naughty instigator to think that, or even doubt it. No, what happens at the bar has to very clearly be a temporary affair.\n\nBut heaven knows I was wired enough and ready for my first lesbian dabbles. I had reached a point where I needed something to happen. Argh... I had to stop overthinking everything. This entire situation and obscure investigation was driving me crazy and I couldn't stop my brain from defaulting to it every time it had a moment of silence.\n\n\"So what's the plan tonight?\" I asked Diamond to try and interrupt my constant ruminations.\n\nShe chuckled. \"You're such a lawyer. And a dork. We're going to a bar. There is no plan.\" She drew quotation marks in the air to emphasize the last word.\n\n\"Ok, ok, it's just that it's my first time going out with the team, so I don't know what to expect. What's the vibe usually?\"\n\n\"The vibe is good. We're going for drinks. You can get not drunk, a little drunk, somewhat drunk, very drunk, or drop-down-dead drunk. No expectations. You pick a level you're comfortable with. We can always Uber after.\"\n\nI smiled. \"I think I'll drive us home, so I will get something light.\"\n\n\"Alright. Expect some dancing too. Oh and we're going to a lesbian bar. Because guys in bars are assholes in general and the chicks over there know to keep a respectful distance. Brooke and Val are friends with the owner too, so we get treated really well.\" I nodded.\n\n\"Great.\"\n\n\"One last thing. Don't be surprised if you see Kiara and Oksana going at it.\"\n\n\"What?!\"\n\nShe sighed. \"It happens all the time. These two, every single time they get drunk, they jump each other's bones and then pretend it never happened and that they don't want to be together.\" She stopped talking and looked at me. \"Oh my god, you didn't notice!\"\n\nI hadn't, but I didn't want to seem stupid. \"I'm new and...\"\n\n\"And blind. You didn't see how they look at each other or tease each other?\"\n\n\"I thought they had a defender/attacker kind of vibe.\" I shrugged.\n\n\"Yeah, bedroom vibe. They're so obvious.\"\n\nAfter a second or two of silence where I processed that new piece of information, I found myself with more questions than answers. Starting with the most obvious: \"So why don't they get together?\"\n\n\"Because they're commitment-phobes and would rather have one night of super mega steamy hawt sex - their words, not mine,\" she was quick to point out, \"than go through the ups and downs of a real relationship.\"\n\n\"That does sound more fun.\" The words escaped my lips before I even knew.\n\n\"Yeah... I mean, for a bit. But it's just getting tiresome now. Everyone wants them to own up to it already.\"\n\nShe reached out to the navigation console and fast-forwarded through a few songs until she hit a latin bop. Two seconds later, she was taken by the music and the previous topic wasn't brought up again. It was still in my rearview mirror though, and I couldn't shake the image of Kiara and Oksana kissing and, well, doing naughtier things from my mind.\n\nTwo seconds after we entered the bar, I realized I had underestimated what going out with the team really meant.\n\nOn the football field, you see skin, hands, legs. You squeeze between two players, go shoulder to shoulder with someone, tumble on top of each other. There's some nudity and contact, but also a lot of adrenaline. Everything moves so fast and your mind is focused on something else, so much so that you barely notice if you find your head buried in another player's chest when piling up on top of each other to celebrate a goal.\n\nBut in a bar, everything is so languid and relaxed. The world moves at a different pace and your body and brain have time to stop, notice, and process. Notice the killer legs of Oksana, the delicious booty of Catalina, or the impressive chest of Valeria. The sweet dimples on Lauren's cheeks, the perfectly manicured fingers Bree hid under her goalie gloves, the strong upper arms of Chelsea, or the drop dead perfect body of Brooke.\n\nAnd you have time to feel the other players squeezed next to you, shoulder to shoulder, knee to knee. Time to look at their faces and see their eyes as if for the first time, or focus on their mouths while they talked. Time to hear everything they were saying and deduce everything they weren't. Like the way Kiara glanced at Oksana at least three times every minute. Or the way Oksana pretended not to notice but was even worse at concealing her own attraction.\n\nAnd instead of dusting yourself off and rushing to get positioned for the next play, you have time to fantasize about every possible scenario in the current circumstances. Like squeezing the leg of the player next to you under the table, having her reciprocate and touch you even more intimately. Grinding against someone on the dance-floor and gripping her ass so tight she'd want to take you right then and there. Or glancing furtively at a player, then stumbling into her in the bathroom, pushing her into a stall and having your way with her until she screamed your name.\n\nYou have all the time to see, feel, imagine, dwell... and my brain ran rampant, overlaying reality and fantasy at every opportunity. Keeping up with the conversation while all those images danced in my mind was nearly impossible though. I was going crazy and needed to take a break away from them.\n\nWhen it was time for the next round, I volunteered to fetch the drinks and Layla came to help me. At the bar, I found myself squeezed next to her and could barely remember half the orders. An image of her naked body floated in front of my eyes, and I recalled every time she had paraded in the locker room, especially that one time she dropped her toiletry bag in front of me and had to bend and pick it up, giving me a perfect view of her flawless taut ass. I remembered my hand itching to smack it and my tongue going dry wanting to lick the smooth skin. And now, she was next to me, shoulder to shoulder, hip to hip, and my right hand could easily brush her ass if I brought it up.\n\n\"Your mind is elsewhere,\" she laughed after she told the bartender every order I missed.\n\n\"Yeah...\" She was looking at me intently and I felt I had to give her an explanation. \"I have a case...\" I started saying, but the look in her eyes told me she didn't believe a word of it. \"I don't know, I guess I'm overwhelmed.\"\n\n\"It's normal. We're a loud, crazy, tight,... and sexy bunch. Maybe a little different from the people you interact with everyday.\"\n\n\"Ah yes,\" I nearly sighed. I was afraid that sentence would go elsewhere.\n\n\"We're quite overprotective of each other though, so be good to us and we'll be good to you.\" I nodded. \"I'm not saying we can't have fun with each other from time to time,\" she winked, \"but as long as things are clear and no hearts are broken.\"\n\nOh shit... So I was that obvious. I opened my mouth, trying to say something, but she was quick to cover it with her hand. I was tempted to suck on her finger but stopped my tongue before it betrayed me further.\n\n\"I'd be happy to be your first. I'm told I'm a great introduction to the sapphic world.\" She wiggled her eyebrows and I nearly collapsed from embarrassment.\n\nThankfully, the bartender came with our two full trays and all I could do was grab mine and rush back to our tables. I found a spot between Valeria and Brooke and squeezed in.\n\n\"She comes on a little strong,\" Val said in a low voice. I gulped.\n\n\"It's all in good faith though,\" Brooke joined in from the other side. \"With that face and that bod, she can get away with anything, and she knows it too well.\"\n\n\"Yeah, but she knows her limit, she isn't persistent or annoying. Just be yourself and don't worry about her.\"\n\nAll I could do was spin my head from one side to the other, petrified. Then a sentence Diamond said in the car rang in my ears and I put two and two together. Gosh, my gaydar needed massive fine-tuning.\n\n\"Thanks. It was a little weird.\"\n\nBrooke laughed. \"She does it with every newbie. Sometimes with resounding success,\" she winked, \"and sometimes leading to a few awkward weeks.\"\n\n\"Can't blame her for trying. The odds are stacked in her favor in our sport at our age.\" Val raised her eyebrows naughtily and I felt her piercing gaze on me. Why was everyone suddenly able to read me so easily? \"Of course, there's nothing stopping you from accepting her offer, if you want. You wouldn't be disappointed... I wasn't.\" A naughty smile grazed her lips.\n\nI found myself blushing and reaching for my glass for the third time in the few minutes that that conversation had lasted. It was nearly empty.\n\nBrooke did so too and clinked hers to mine. \"To awkward discussions and even more awkward explanations!\" She laughed and I found it infectious. Val joined in while giving me a quick hip squeeze. I didn't dare look in her eyes so soon, for fear of betraying my dark thoughts. If she was my naughty instigator, I'd spend half the time terrified of her reading my mind. And those eyes... if she wanted to, she could make me cum with nothing but a stare.\n\nHalf an hour later, having regained my wits and forced myself to participate in all kinds of discussions, from our upcoming league matches to European football clubs, some unavoidable local politics, and some work and personal topics, all while mentally undressing every single one of my teammates, I excused myself to the bathroom. Part of me, the one that had seen too many movies, couldn't shake the thought that my naughty instigator would follow me and wouldn't be able to control herself, but nothing happened.\n\nI came back to find the girls had dumped our tables and were dancing together. I sat back down, not feeling like barging in uninvited, and couldn't keep my eyes off Kiara and Oksana, who had slowly gravitated toward each other and were getting a little too hot together. Then Kiara suddenly broke it off and came back to the table.\n\nShe grabbed the first glass she saw, which I'm pretty sure wasn't hers, and gulped the rest of it in one go. \"You don't dance?\"\n\n\"I do. Didn't want to interrupt though.\"\n\n\"Well, there's nothing special for you to interrupt.\"\n\nI raised my eyebrows questioningly and she looked down at her glass. I had underestimated the degree of closeness and understanding we shared. Our few weeks of defending together seemed to have made it possible for me to read her thoughts from a simple glance. She raised her head again and I could see all the longing and sadness in her eyes.\n\n\"You and Oks...\" I begun.\n\n\"It's nothing.\" She interrupted and shrugged.\n\n\"Really?\"\n\n\"We have fun every now and then. Nothing important.\"\n\n\"Really?\" She wasn't fooling anyone.\n\n\"Yes really. Why do you keep asking?\" She grew defensive and was starting to retreat in her zone. Battling her on those grounds wasn't going to be easy.\n\n\"Because I feel there's something more to it.\" I hoped my accent sounded more compassionate than accusatory.\n\nShe grabbed another glass and drank it in one go. Putting it down on the table, she seemed to realize she now had two empty glasses, at least one of which wasn't hers.\n\n\"Look, she doesn't want anything serious and neither do I. We just get together sometimes and that's all there is to it. She can fuck whoever she wants, I can do whatever I want. It's easier like this.\" That bad, huh.\n\n\"So you wouldn't mind if I hit on her tonight?\" I... What the... Where did that come from? The question was asked before I even knew it.\n\n\"Oh please!\" She laughed, a little too forcibly.\n\n\"What?\"\n\n\"You're straight.\" Oh well, at least one player didn't suspect I was fantasizing about getting off with the entire team.\n\n\"Says who?\" Seriously though, who said I was straight? I had chosen the default option when I was growing up, mostly because I never wondered about the other possibilities, but that didn't mean I couldn't be gay, or bi, or whatever.\n\n\"Your face!\" She chuckled a little and pointed at me. I didn't need to feign it \u2014 I was a little offended. \"Look, I didn't mean it like that, but you're just... You don't look at us that way.\"\n\n\"Well, you're wrong. I'm definitely interested in women,\" there it goes, the truth out loud for the first time, \"and I kinda like Oksana.\" Another truth, but this one with more layers to it. Would I dare follow through with the mischievous idea that just started prancing in my head? Hah... dare. Yes, I had no choice but to dare. \"I think I'll try my luck with her tonight.\"\n\n\"You and Oksana? Be my guest.\" Kiara's answer was both dismissive and passive-aggressive. I was playing with fire there, but I had a plan.\n\nI stood up and walked toward our group, not daring to glance back and see what Kiara's reaction was. Layla spotted me instantly and winked, but I quickly looked away and my eyes caught Oksana's. Some invisible force was governing my moves now and I felt as if I was watching myself approach her, hold out my hand to her, and start swaying to the music.\n\nShe looked a little surprised but quickly accepted my offer. \"I had my suspicions that you played for our team,\" Oksana smiled, too proud of her double-entendre, and got close to me.\n\n\"I'm only interested in a one-on-one though.\" The latin rhythm playing was perfect for a little raunchiness, so I quickly moved to the side and rammed our hips together to emphasize my request. Bump on the rump: check.\n\nHer eyes grew wide and she blushed a little. Was I actually flirting with a half-goddess and succeeding? For a first try at this whole lesbian thing, I hadn't chosen an easy challenge.\n\n\"Beware what you ask for, newbie.\" She winked and got even closer. Her hands were suddenly on my sides and mine instantly rose to her hips in response. Grip on the hip: check.\n\n\"Wouldn't be the first time we find ourselves head to head, and I think my track record proves I can handle it just fine.\" I grinned and tilted my head toward her.\n\nShe grabbed me tighter, pushing our chests together, and took the lead with our dancing. Thrust to the bust: check.\n\n\"That's probably because I haven't whipped out my best offensive moves yet.\" The smile on her face made my knees wobble. Remember why you're here, I chastised myself. This wouldn't work if I got carried away.",
        "With a swift movement, I spun her around, grabbed her, and brought her so that her back was against me. With that advantageous angle, her neck was just there in front of me. This was almost too easy.\n\n\"Honey, who says you'll be the one on the offense this time?\" I whispered in her ear and lowered my lips to her neck. I didn't have to tell my tongue what to do. It was immediately licking her sweet pale skin. Peck on the neck: check.\n\nI had a fleeting thought that this was my first time touching a girl this intimately, and that a couple of weeks ago I would've found the idea of liking women just impossible. But the taste of Oksana's neck, and the shiver I felt in her body chased the apprehension and doubt away. Wasn't I liking this? Yes. Then there it goes. This was just too good to deny.\n\nOksana's head turned toward me and her lips got dangerously close to mine. I stared at their plump pinkness and couldn't help but moan a little. Last one. Would I dare?\n\nI wanted to look up and see if anyone was observing us, if Kiara was watching this, but I was too terrified to break the spell and lose my courage. Instead, I kept my eyes on Oksana's lips. This was it. Nip on the lip: check.\n\nSoft, sweet, and a hint of the vodka she'd been drinking. Had the music stopped or was my blood pumping so hard I couldn't hear anything else?\n\nThen it was all over in a split second. I opened my eyes to find Kiara grabbing Oksana away, with a furious glare at me. \"Come here, Oxy,\" she ordered. And my temporary conquest was no more.\n\nOksana tried to protest, but Kiara was faster. \"No, I won't let you touch someone else, or kiss someone else, unless you tell me you don't care what I think or want. Unless you tell me you prefer her over me.\" Like a young girl, Oksana lowered her eyes and remained silent. \"Alright then, we're out.\" With one final glare at me, she lead her away.\n\nI stood there speechless. Disappointment and happiness were battling it out inside me. This was what I wanted all along, wasn't it? But couldn't I have had a few more seconds to enjoy sucking on Oksana's lips? Oh shit. My hormones were worse than a teenage boy's.\n\n\"Classic rookie mistake,\" someone said, and I turned to find a few of the girls looking at me with almost the same anger as Kiara. Oh well, that was bound to happen.\n\nI shrugged. \"I'm sorry, didn't know they were this serious about each other. If I did, I swear, I wouldn't have come on to her.\" I faked my most sincere voice and stopped myself from smiling. The glares lowered in intensity so I headed to the bar.\n\nIf my naughty instigator was keeping count, I had fulfilled my contract for the night. Bonus: I managed to get Kiara to admit out loud she actually cared about Oksana, and Oksana to silently agree with her. What happened from now on was on them. Hopefully, they'd finally make the step and get together.\n\nOrdering a drink, I found myself deep in thought analyzing my feelings about what just happened and getting to the conclusion that my recent fascination with women surely merited further exploration. Much further. I didn't notice Brooke was next to me until she raised her new drink and nudged me.\n\n\"Salud! That was suicidal but brave.\" She winked, so she knew. \"I'm surprised none of us thought about it before,\" she frowned, \"but then again, it wouldn't have worked with us. Kee knows we're not interested in Oxy.\"\n\n\"I don't know what you're talking about.\" I smiled shyly.\n\n\"Sure, sure. When are you gonna tell them?\"\n\n\"Eh, I'll give it a couple of weeks, see if their hatred of me unites them. I can handle it for a few practices.\"\n\n\"You're a real hero.\" She beamed at me and leaned in to give me a quick hug. It was over before I could reciprocate or enjoy it, but I knew I wanted more of those hugs in the future. She was truly the captain of this ship, on and off the field. Attentive, loyal, caring, friendly. The girl next door with an amazing smile, face, and body, plus more smarts and wits than most.\n\nI found myself staring at her and wondering: Could she be the one? Maybe. On the outside, Brooke seemed too nice and serious to be my naughty instigator, but she'd proven time and again that she was very perceptive and unpredictable. If a woman like that decided to seduce me, there'd be no telling how creative, mischievous, or witty she could be \u2014 all qualities I'd come to see in my cunning secret admirer.\n\n-----\n\n\"Bravo. I was expecting something genius from you in the bar, but you surpassed that by a mile. If Kiara hadn't reacted, I doubt my jealousy could have handled two more seconds of that...\n\nSo you've proven once and again that you can score on and off the field, cutie. But today, you'll only take care of the former, and I'll worry about the latter. I dare you.\"\n\nShe was getting chattier in her letters, giving me a better glimpse into her personality and style. Maybe she was falling a little for me, and as odd as it sounded in my head, maybe I was falling a little for her.\n\nI took a deep breath and noticed her vanilla scent again. My brain lit up. I remembered that smell from the bar. It was definitely there, mixed among the strong perfumes, the alcohol, and an undertone of sweat.\n\nMy brain surfed through fleeting moments, hoping to recall where exactly that smell had been more noticeable. Was it with Diamond in the car or Layla at the bar, stuck in the awkward conversation with Brooke and Val at the tables, talking to Kiara, or dancing with Oksana? Or was it when Catalina invited me to dance a while later and I got my neck whipped a few times by her wavy long black hair? Or maybe when we started randomly exchanging dance partners and I hopped between Bree, Lauren, Chelsea,... why were there so many? Uh, Piper and Reese too. How could I forget? I was sandwiched between them for the better part of a song before... Samantha, there we go, saved me. We went back to keep an eye on the group's belongings at our tables and I would've sworn her touching my ass while guiding me wasn't an \"accident.\"\n\nThirteen players from the team had come to the bar, and I couldn't pinpoint that faint vanilla smell to any of them. If we removed Kiara and Oksana, for obvious reasons, we were left with eleven suspects. Eleven possibilities, each with its own flavor. Each with a different potential outcome, different perspective, different appeal.\n\nI was lost. I liked all of them, but I couldn't let myself feel anything more than that toward any of them. My real feelings of lust and fascination, which were recently ignited and were rapidly evolving, belonged to just one. And I was left confused, unable to channel them anywhere but to a faceless image. I knew she was surely one of eleven gorgeous and strong women, but for now, she had to take a shapeless form and voice in my head. That's what made the situation more confusing.\n\nI knew her, but I didn't know who she was. I wanted her, but I didn't know whom I wanted. I had surely talked to her, looked into her eyes, laughed with her, touched her, seen much \u2014 if not all \u2014 of her naked, and yet I didn't know that. Only she did. Only she could have appreciated those moments, or knew how special our interactions were, while I had to keep my heart in check to avoid falling for the wrong one.\n\nThat disadvantage was starting to take its toll on me. You don't go into a match not knowing anything about your opponent, you study everything about them and prepare for their every move. And yet, here I was, walking blindfolded in completely uncharted territory, falling for a woman for the first time in my life, and absurdly, not knowing which woman I was falling for.\n\nAnd if I was being honest, I'd say that I was terrified of the darkness of this tunnel, but even more so terrified of the light at the end of it. What then? What if this was a game to her? What if it wasn't? Do we get to know each other and date like normal people do? Isn't that preposterous? Aren't we past that?\n\n\"Jess, we have to be ready in five.\"\n\nI startled and turned my head toward the voice. Bree was looking at me, in her full goalie gear. Right, the match, I'd slipped so far in my thoughts I forgot about the match.\n\n\"Yes. On it!\" I answered enthusiastically, as I flipped my warrior mood on and turned back to my locker. I was already dressed so all I had to do was put my shoes and hairband on and I was ready to go. Into my gym bag the red letter went, but I didn't forget its content: I had to score tonight.\n\nAs I laced up my football shoes, I thought that the word \"easy\" probably didn't exist in her dictionary. This was the first game of the league, against the team that kicked our ass to second place the year before. It was also my first time in the starting eleven, and I was a center defender. The odds of me scoring anything beyond a head-butt with the other team's attackers were close to null. A goal? Forget it. She was demanding the impossible.\n\nBut impossible, I am thy name. I'd make it happen, I'd win that dare no matter what. She wanted a goal and she was getting that goal. Besides the perk of helping the team and doing what she asked, I'd be getting something in return. She did promise she'd help me score off the field, whatever that meant, so I couldn't let that opportunity pass, could I?\n\nTwenty minutes into the match, I realized how challenging her dare was. The other team was as organized as us, as brutal in its offense, and as unforgiving in its defense. We were evenly matched on many fronts, and Kiara and I barely had time to recover from thwarting one attack that we had to be ready for the next one. Good thing she didn't let her anger at me get in the way, because making a mistake was going to be fatal to us, so we had to be one hundred percent in sync.\n\nAt minute 27, Valeria got us a free kick, so Kiara and I moved up to the other side of the field. Being center defenders meant that we were very adept at timing our jumps and accurately heading the ball in the direction we wanted, so the team needed us in offensive set plays, i.e. free kicks and headers. But again, the odds of success were always low.\n\nBrooke took the shot and it landed far from me, straight where Kiara was. She tried to head it in but it was too high so it bounced off her head and above the goal. We ran back to our posts.\n\nThe dare was slowly slipping to the back of my mind until minute forty two, when I had to stop an attack by tackling the ball between their player's feet into a corner. They executed it, Bree punched the ball mid-air before anyone got to it, and I ran toward it.\n\nI got it and found myself a little away from our goal, with no one close enough to defend me. The path to their side was nearly empty. So I sprinted.\n\nI ran straight, not looking left or right, dribbling the ball before me, and trying not to lose sight of their two defenders who were waiting for me. Without slowing my pace, I faked going toward them then flicked the ball to the right and sprinted even faster. One of them slipped down trying to change direction quickly, the other managed it and was almost on me. In the corner of my eye, I saw a blue jersey, our color, sprinting on the left side and it was an easy decision. Yes, I could have, maybe, possibly, dribbled past their defender and scored. But this wasn't about me and my dare, this was about the team.\n\nI dribbled one more second to get the defender closer to me, then passed the ball down the field straight to where my teammate was running. It was Oksana. With a perfect timing, she reached the ball and was facing their goalie one-on-one. She scored with a shot between her feet and made it look too easy.\n\nI started shouting and bouncing and ran toward her, with all of our players joining us and hugging and high-fiving.\n\n\"That was crazy!\" \"Oh my God, what did you two do?\" \"So good!\" \"Fucking awesome!\" \"Yeaaaaaaaaah!\" I heard all those exclamations buzz left and right. Then I saw Oksana smile and reach out to me for a fist-bump, and I sighed of relief. I had done the right thing. \"Thanks!\" she mouthed.\n\nKiara and I jogged back to our side. \"That was excellent,\" she said with a low tone.\n\n\"Look, Kee, I...\"\n\n\"It's OK, I think I get it. You were pushing me, pushing us, in your own weird way.\" I nodded. \"I guess we owe you a thanks for more than just this goal. We talked a lot, we're still talking, but we're together now, and we want to make it work.\"\n\nI turned toward her, a huge smile on my face. The bit of guilt I was feeling over my behavior at the bar dissipated. \"I'm so happy for you two.\"\n\n\"Yeah, well, we'll get mushy about it later. Match is restarting and we don't want them to equalize before half-time.\"\n\nHalf-time came and went. As usual, coach Terry and Alex were realistic so all we got was a \"good job\" before they started preparing us for the second half. Back on the field, things became even more brutal. The other team was relentless in its attacks, being down one goal and wanting to equalize come what may. Our midfield players did everything they could to turn the pressure back on them, or at least tame their attacks, but Kiara, Bree, and I still had our fare share of scares. Yet, they didn't manage to score.\n\nIt was past the eighty-fifth minute mark and we were still up by one. With five minutes left, whoever scored would effectively end the match, either with a tie for them or with a win for us. It had to be us. We won a corner on their side, so as usual, Kiara and I went up the field and positioned ourselves.\n\nLauren took the shot and I felt it heading straight to me. In a split-second, I had to make my decision: straight or down, left or right, forceful or smooth. Their defendant jumped but I went higher, somehow propelled off my feet by my naughty instigator. This was my chance and I wouldn't waste it. My head connected perfectly with the ball and I was able to spin it to the left and down.\n\nIt bounced, their goalie tried to reach it with her foot but failed, and went straight into the net. I couldn't believe it. I was instantly toppled over by a hurricane of bodies, from on-field players to bench ones, all screaming and cheering. It felt amazing.\n\nThen in the midst of the craze I felt someone pinch my nipple and I jolted a bit. My face was buried under a heap of jerseys so I couldn't see who had enough access to do that. It only lasted a second but it was a deliberate nipple pinch with a bit of a roll between the fingers. Was she unable to keep her hands off me anymore? I smiled wider.\n\nA few seconds later, the euphoria subsided and one by one, the players rose up, giving me space to breathe. Brooke was the last one and she helped me to my feet, a wide grin on her face. \"We owe this match to you.\"\n\n\"Thanks, but it was a team effort. I just got lucky both times.\" I blushed while dusting off my shorts.\n\n\"A little bit of luck and a lot of pure talent. I've rarely seen a defender dribble and sprint as fast as you did today. It was perfect.\" She smiled and tapped me on the shoulder as we walked back to our side of the field.\n\nGoodness, her smile was infectious and her admiration authentic. I felt a few flutters in my stomach and had to keep my emotions in check. It would be so easy to fall for Brooke, so simple to imagine spending naughty nights with her... but I couldn't get carried away. I didn't know if she was my instigator, and couldn't let myself feel this way for anyone else.\n\nAfter the match ended with our 2-0 victory, we celebrated on the field and a little bit back in the locker room. There was no letter waiting for me, but I figured she didn't have time to slip it in unnoticed, or maybe she had another way of informing me of my prize. It wasn't until I came back from the shower that I saw the familiar expensive red paper in my locker.\n\n\"Impressive. I hope you're as precise with your hands as you are with your feet, and as goal-oriented with your tongue as your head.\n\nIt's time for you to relinquish a bit of control though, cutie, and let me take the reins. Your gift is in the towel rack. Make sure to have it ready tomorrow at 7:00 PM.\"\n\nA few players were around so I took my time drying my hair, getting fully dressed, folding my clothes, until there were only a few left and I could sneak to the towel rack to grab my prize. I slipped a rectangular box out of there and into my pocket then dashed out. The girls had planned to celebrate, but it was a Tuesday so we postponed it until the weekend.\n\nI drove home with my body still tingling from the euphoria of the match, and the curiosity of what she'd left me eating at me. I hadn't looked and wouldn't look until I was safe in my living room... or better yet, bed.\n\nWhen I finally dropped my gym bag at the front door, I took the box out of my pocket and opened it. A phone and a vibrator. It must be a smart, connected gizmo. Indeed, a quick look at the pink contraption revealed nothing but a logo, a charging port, and an on/off button. Even when turned on, it didn't buzz. The phone's screen lit up when I picked it up, but it was password-protected. The wait until 7pm the next day would be torturous.\n\n-----\n\n\"5377\"\n\nThe message popped up on the lockscreen at 7pm sharp, as I was staring at the phone for at least ten minutes, waiting for something to happen. I immediately typed out the numbers and chuckled when I saw they corresponded to my name, Jess. Clever.\n\nThe phone unlocked. All the apps and icons had been dumped up into a folder, leaving just one app with the same logo as the vibrator. I opened it. One chat was already active.\n\nNaughty Instigator: That was fast, were you waiting for me?\n\nMe: I like to keep my appointments.\n\nNI: Haha, I forgot you lawyers are sticklers for time. Will you bill me by the hour?\n\nMe: Depends. If this is just a consultation, yes. If you'd like to hire my full services, we'll think of a different payment plan.\n\nNI: I see. Will have to make my case then and see if you can handle it.\n\nMe: Boo... Are you doubting my abilities now?\n\nNI: No, no, no, definitely not. Just making sure you're ready for what's... cumming.\n\nMe: Oh, straight to the point.\n\nNI: If I'm paying by the hour, I better make the most of every minute.\n\nMe: Hahaha, it's alright, I'll waive my fees for this first consultation. Take your time.\n\nNI: Is that on the record?\n\nMe: Uh, yeah, I suppose?\n\nNI: Good. Because there will be a point when you'll beg me to go fast, and I will remind you that you said I can take my time.\n\nMe: Oh shit.\n\nNI: Exactly.\n\nI started typing something, but before I could finish, she anticipated it.\n\nNI: Sorry, cutie, a deal's a deal.\n\nMe: A'ight. I'll be extra careful what I say from now on.\n\nI noticed I was grinning like a high-school girl having her first love chat. She was funny, smart, fast, and even better \"live\" than in those letters. I wondered what she'd be like in person, and if her wittiness would show just as clearly.\n\nNI: Speaking of lawyer things, how was your big deposition today?\n\nI was taken aback. Maybe I'd mentioned that deposition once in passing in the locker room before or after the match, or maybe at the bar, and still, she remembered it. I'd never dated anyone who recalled what I said two minutes earlier, let alone at least a full day. That was impressive.\n\nMe: I hit the defendant with a piece of evidence they didn't know we had, so they had no choice but to offer us a nice deal. Our client will get a formal apology and a big fat check, plus my name is already making the rounds with the junior and senior partners at the firm.\n\nNI: So, in English, you kicked major ass?\n\nMe: Hahahahaha, yes, I did.\n\nNI: Nice! Even though I had zero doubts about your ass-kicking abilities. You've kicked mine a few times.\n\nMe: Only a few times? Huh...\n\nNI: No, Jess, this is not a clue as to who I am, it was a simple play on words.",
        "Me: If you say so. Btw, thanks for remembering and asking :)\n\nNI: I remember a lot of things about you...\n\nMe: Like?\n\nNI: Like the feel of your nipple between my fingers yesterday.\n\nMe: :o\n\nNI: You liked it?\n\nMe: I plead the fifth.\n\nNI: Isn't that what people say to avoid incriminating themselves?\n\nMe: It is.\n\nNI: Interesting. What if I told you that I can't take the image of your tits off my mind, ever since that braless gym session? I've thought about grabbing those poking nipples for weeks now, and yesterday, one of them was just there, next to my hand. I couldn't not pinch it.\n\nI felt my insides tighten. This conversation was quickly veering into another direction, and I both apprehended and ached for that to happen. My fingers typed the words before I could even think them through.\n\nMe: Did you want to do more?\n\nNI: Are you kidding me? Of course I did!\n\nMe: Too bad.\n\nNI: I'm not going to ask you if that means you're interested in more, nope, not falling for that trap and getting a \"plead the fifth\" answer back.\n\nMe: Dammit, my plan was too obvious.\n\nNI: I'm onto you.\n\nMe: Whoa, whoa, I did not consent to such positions.\n\nNI: Wha... Oh, \"onto.\" Smart ass.\n\nMe: My favorite nickname.\n\nNI: I'm offended. You don't like my \"cutie?\"\n\nMe: It has its merits.\n\nNI: What a diplomatic way of saying \"yes.\"\n\nMe: Try me again and I'll find seventy other ways of admitting something without admitting it. It's kind of what I do for a living ;)\n\nNI: Oooooh, I like it. I'm up against a worthy opponent. But I'll find a way to break your barriers... Oh wait, I already did!\n\nMe: I don't recall such a thing.\n\nNI: Planking, vibrating, shuddering?\n\nMe: Nope, doesn't ring a bell.\n\nNI: Does this?\n\nThe vibrator buzzed out of the blue, but only from the tip that touched my clit. The part that wrapped inside and settled against my G-spot remained still. It lasted a few seconds of pure joy, then stopped. I tried to think of an answer but failed.\n\nNI: You already have it in, don't you?\n\nMe: Wasn't that the idea?\n\nNI: Yes, but I was hoping to woo you or dare you to use it or something. Change of plans.\n\nMe: I can still take it out and pretend I'm completely appalled by your proposition. British accent: \"Oh no, a remote vibrator, I shan't ever!\"\n\nNI: First, you have to do that accent in front of me one day. Second, please keep it where it is. I'm very flattered you trusted me enough to break another barrier for me... Ba Dum Tsssssssss!\n\nMe: Oh man, you'd make a great lawyer. Straight back to where you wanted me.\n\nNI: Jess, where I want you is sitting on me, your pussy in my face, and my tongue inside you, but for now, I'll take the small wordplay win.\n\nFuck, fuck, fuck... I hadn't expected her to be that forward that quickly. She was right; I had let her go inside me and break another barrier, at least virtually. And just to accentuate her point, she buzzed the interior part of the vibrator. I felt myself get past wet and into soaking territory.\n\nNI: Why the sudden silence, cutie?\n\nMe: You know, if anyone else called me \"cutie\" this condescendingly, they might not live to see the next day.\n\nNI: Hahahaha, good thing you don't know who I am.\n\nMe: Yeah sure, that's what's stopping me.\n\nNI: Wait... Does that mean you know who I am or that you like the word because I'm saying it?\n\nMe: No to the first one.\n\nNI: (We'll get back to that later) What about the second? And don't you dare plead the fifth or sixth or whatever!\n\nMe: That's not fair. You have your secrets, I should be allowed mine.\n\nNI: Touch\u00e9. Too bad this isn't a democracy. Do you like the nickname only because I'm the one using it?\n\nMe: It does have a special ring, coming from you.\n\nNI: Wait until you hear me whisper it in your ear when I'm on top of you.\n\nMe: Will you keep daring me by then?\n\nNI: Yes, to hold your orgasm... if you could.\n\nBoth ends of the vibrator came to life with a stronger vibration than earlier. Five, ten, fifteen seconds. I was staring at my screen and trying to will my body not to betray me. She couldn't know if I let it overtake me, but I was sure she would know. Twenty seconds in, she stopped it.\n\nNI: How's that working for you?\n\nMe: Perfect.\n\nNI: Think you can resist it longer?\n\nMe: Uh-hum.\n\nNI: Are you sure?\n\nMe: Why don't you try?\n\nNI: My pleasure... and yours ;)\n\nThe vibrator turned back on at the same intensity. I was flirting with the edge of my control, getting closer and closer to the point of no return. But my desire to impress her momentarily won over my carnal desire and I held on. The buzz lasted a lot longer this time. I held my breath and couldn't let it go until it stopped.\n\nNI: Impressive.\n\nMe: I told you.\n\nNI: Are you wet already?\n\nMe: The question you wanna ask is how wet am I. And the answer is drenched.\n\nNI: Yummy. But why so suspiciously chatty now? Are you trying to take a break between my ministrations?\n\nI started typing an answer but was instantly taken aback by the vibrator coming back on at a higher intensity than before. How fast could this thing go? Ugh, I didn't want to know. It only lasted about ten seconds, but I was barely hanging by a thread.\n\nNI: How are we doing?\n\nMe: All cool.\n\nNI: Sure, like the cold sweat on your face now.\n\nMe: Hahaha. I already admitted to the presence of one bodily fluid, I shan't reveal more.\n\nNI: It's OK, there's enough fun to be had with your drenched pussy.\n\nOnce more, the buzz came back at the same high intensity, and I knew I couldn't fight it much longer. She kept it running, then raised the vibrations one more level, my eyes glazed over the screen and I saw she sent me a winking face. For more than twenty or thirty seconds, she kept the vibrator on and I was nearly done. My strength and defenses collapsed around me, and I felt the beginning of a shudder. That's when it suddenly stopped and left me standing alone on that peak, unable to crash through the waves and unable to go back.\n\nNI: How about now?\n\nMe: Fuck you.\n\nNI: No cutie, fuck you. I'm simply rubbing my clit here.\n\nThe mental image of her, pleasuring herself while she was talking to me, burned the insides of my retinas.\n\nMe: Shit. Please?\n\nNI: I recall you saying, on the record, that I could take my time. No take-backsies.\n\nMe: Ok you win this dare. Please...\n\nNI: I'm glad you said this, because I have another one of you. I dare you to cum...\n\nMe: Easy.\n\nNI: ...while talking to a stranger, a woman no less, whom you've let control you... and who's now in charge of a vibrator inserted in your pussy that she used on her own several times... including a couple of weeks ago while holding your wet panties against her face. I dare you to cum thinking of that, cum picturing me, cum for me.\n\nMy brain slowly read and, in its foggy state, tried to understand that long sentence. She had mixed in a reminder of the naughtiness of the situation with the revelation that she'd used that same vibrator on herself, and in herself. The thought alone was nearly enough to send me over the edge, then the vibrator came to life again, and I thought of it inside her, pictured her body jerking to it, her nipples bouncing, her face contracting, and I shuddered and screamed. I don't know how long my orgasm lasted, as the vibrator kept buzzing since she didn't know that I'd already reached my ecstasy. Wave after wave crashed into me and I let the phone fall from my hand while I clenched the sheets beneath me for dear life. It was a while more until the intensity began dying down.\n\nA minute or so later, completely spent and barely able to move a muscle, I flipped the phone around on the mattress and rolled on my side to see if there was any message.\n\nNI: Wow.\n\nI didn't need to ask, I knew she had her share of fun on the other side. I summoned all my strength to type a reply.\n\nMe: WOW.\n\nNI: That was glorious.\n\nMe: Ya.\n\nNI: Lol. Can you type anything more than one word?\n\nMe: Yessss ssss sss.\n\nNI: Hahaha. Perfect. Need a minute to gain back your composure?\n\nMe: Yup.\n\nNI: Alright. I'll be here, fantasizing about you.\n\nI flipped on my back and took a deep breath. This thing, whatever it was, had really just happened. No one had ever or could ever get me this wired up. I loved it, I wanted more of it, I ached for her real body next to mine, teasing me, pleasing me. Whoever was behind that phone, whoever could rib with me that well, that smartly, whoever could challenge my sexual ideas and limits, deserved that I consider a real relationship with them.\n\nI closed my eyes for a second, imagining what dating a woman would be like, introducing her to my parents, friends, and colleagues, going out with her, lying in bed next to her, waking up with her soft arms wrapped around me, cuddling with her while watching TV or a movie... I really wanted that.\n\nI jerked awake and looked at the time. More than half an hour had elapsed since I closed my eyes. Shit. I picked up the phone and saw she hadn't sent any messages and was showing as away.\n\nMe: Hey, sorry, passed out a bit. You still here?\n\nI waited with bated breath. Please let her answer. A few minutes elapsed before there was a sign of her, then the online indicator came back.\n\nNI: Didn't know you could be worn down this easily.\n\nMe: Ha-ha.\n\nNI: No, I'm dead serious, maybe we need to get you checked out, see if you can handle all these long matches and extensive training sessions.\n\nMe: Depends on the opponent. If it's a relentless battery-powered monster with no sense of a safe word, maybe not.\n\nNI: Ouch. Pinky is offended. But what if the opponent is a (normally) nice, sweet, loving, smart, hard-working woman who just wants to be a bit more than friends with you?\n\nI chuckled at her use of \"normally.\" The version of her I knew from the team would possibly fit that description. But the version I was talking to now? It had naughty and cheeky written all over it.\n\nMe: Are you asking me out?\n\nNI: I feel like I should buy you dinner before I continue taking advantage of you like this.\n\nMe: When?\n\nHer next reply didn't come right out. She showed as typing, then nothing, then typing again.\n\nNI: Saturday?\n\nI sent the answer before my brain could have a chance to chicken out.\n\nMe: Deal.\n\nNI: Whoa...\n\nMe: Yeah...\n\nNI: So you really have no idea who I am?\n\nMe: None.\n\nNI: Yet you just agreed to meet me in three days?\n\nMe: I gave you full control over my orgasm today and you came (hah!) through. Many people agree to blind dates with much less to go on.\n\nNI: Right. So... not a single suspicion into my identity?\n\nMe: Nope.\n\nNI: Have you eliminated anyone?\n\nMe: Well, realistically, all the players who didn't come to the bar, plus Oksana and Kiara.\n\nNI: That leaves ten, right?\n\nMe: Eleven.\n\nNI: Oh hah, forgot to count myself. Do you have any preference?\n\nMe: I don't think so.\n\nNI: Oh.\n\nMe: What?\n\nNI: Well, that's flattering to me as your secret admirer, proves that you'd like me no matter who I am... but not so much to me as the person behind that, because I didn't make you fall for the real me. Yet.\n\nMe: I'm sorry :( It's not that your identity doesn't matter, it's just that this whole situation is a little absurd and... I don't know. I was trying to give you a face at first, then I realized it was futile and I didn't want to get caught in a specific fantasy only to be more confused later.\n\nI couldn't stop myself from over-sharing those personal thoughts with her.\n\nNI: Makes sense. So you think of me as someone faceless now?\n\nMe: I think of you as you.\n\nNI: Aha! You just admitted to thinking about me, and a few seconds ago to fantasizing about me.\n\nMe: It's not like you're making it easy not to.\n\nNI: Jess, it's faster to type \"yes\" ;)\n\nMe: Yes, I think about you.\n\nNI: Mmmhmmm. I think about you too.\n\nMe: Yeah, with your head buried in my panties.\n\nNI: I knew this would come back to bite me.\n\nMe: Don't try to distract me with mental images of biting you. We were talking about you abusing my panties.\n\nNI: Yes. Your panties, which seem to always be soaked these days, for some reason.\n\nMe: You.\n\nNI: Oh, stop it!\n\nMe: No, seriously, I'm not this \"adventurous\" usually, or this, erm, easy. But there's something about this, about you. You know what I call you?\n\nNI: What?\n\nMe: My naughty instigator.\n\nNI: Hahahahahahahhahahaha, that is very lawyer-y and very perfect.\n\nI didn't know what was getting into me and why I was opening up to her like that. I was starting to get sleepy again, and in my hazy state, I wanted to spill out all my secrets, my hopes and dreams, and virtually cuddle up to her and doze off. But I had to rein myself in.\n\nMe: I'm starting to fall asleep. Don't freak out and call the cops if I stop answering.\n\nNI: Noted. No 911 calls. Tomorrow, same time?\n\nI didn't want to wait until evening time to talk to her, I would've preferred to chat with her all day, share my little victories, my annoyances, my every thought and feeling. But it was too early to want that, let alone tell her.\n\nMe: Yes.\n\nNI: I'm starting to get sleepy too. But I'll be here until you're out.\n\nMe: Mmmmm, but I want you here-here, not there-here.\n\nNI: Soon?\n\nMe: Yeah. Promise?\n\nNI: You have my word, Jess.\n\nSeeing her use my name like that was equally heart-warming and tingling. I couldn't wait until I could hear her say it out loud. Come to think of, I thought while smiling internally, I've probably already heard her say it, several times maybe, but I just didn't know it was her.\n\nMe: OK.\n\nNI: I'd do anything to cuddle you right now.\n\nI read the words and a huge sense of peace filled me. Yup, I'd do anything to have her with me too.\n\nMe: Nighty :)\n\nNI: Nighty, cutie.\n\n-----\n\nMe: It's 6:50pm and I can't wait ten more minutes.\n\nI shook my head and tapped send. I had been fidgeting for the past hour, waiting for 7pm. Fifteen minutes earlier, I picked up the phone and stared at it, willing the clock to move faster. It didn't. I waited and waited and waited, paced around my apartment, waited some more, but my impatience got the better of me.\n\nNaughty Instigator: Missing me already?\n\nOh yes! She was there. I sighed and plumped down on my couch.\n\nMe: As you said, I'm a stickler for time and since I'm here, and you're here, why waste ten productive minutes waiting for 7 o'clock?\n\nNI: I see. So it's a matter of productivity, nothing to do with you wanting me to get you off as soon as possible?\n\nMe: Nope. And for your info, Pinky is in the bedroom and I'm not.\n\nNI: Interesting. So just you want to talk to me? No extracurriculars?\n\nMe: I'm not saying none at all, just none for now.\n\nNI: You continue to surprise me, cutie. I'll have to readjust my expectations then.\n\nMe: Were you already...?\n\nNI: The mere mention of your name gets me wet, so yes, Jess, I was already half-naked and getting ready to pleasure myself.\n\nMe: Half-naked, uhm, thanks for making this easy for me.\n\nNI: Pinky is just a few feet away, calling your name. \"Jess, Jess, put me in. I can make you vibrate ;)\"\n\nMe: No.\n\nNI: Party-pooper.\n\nMe: I'd rather talk to you a bit, first.\n\nNI: Are you trying to get some info and reveal my identity? You lawyer-types have your own ways.\n\nMe: Nooooooooo ;)\n\nNI: Sure. Alright, what do you want to talk about?\n\nMe: Yesterday, when I asked you when, about our date, you took your time to answer.\n\nNI: I was checking my busy schedule.\n\nMe: Convincing, but no. You were hesitating.\n\nNI: Maybe.\n\nMe: Why?\n\nNI: So you're the one asking the questions today?\n\nMe: Yes. You can answer or not, but I'd really like it if you do.\n\nNI: OK, we'll play your game, young one. I hesitated because I apprehend meeting you.\n\nMe: Really?\n\nNI: Definitely. I knew from the start that if something was to come out of this, I'd have to tell you who I am, eventually, but it's just easier being anonymous.\n\nMe: You think I wouldn't like you?\n\nNI: It's partly that fear, but also much more. I'm comfortable being naughty and unpredictable hiding behind a red letter and a phone screen, but in real life? I don't know if I can be as intriguing or appealing. I guess we all have our insecurities, right? Plus, the past few weeks have felt like nothing but magic, and I'm afraid it'd break the spell if we met. I'm terrified you'd lose interest, or I'd lose interest, or what if we don't click at all.\n\nMe: I'm scared too. I had to shut my brain when I agreed to the date, because it was screaming at me all those same things. But we have to do it, right?\n\nNI: Yes.\n\nMe: You know what though, this makes it easier for me.\n\nNI: Why?\n\nMe: Knowing we're both equally terrified means we're both invested and we both care. That's got to be a good sign.\n\nNI: Hmmm... that's quite wise. But there's something else too. Not sure if I'm right.\n\nMe: What?\n\nNI: Sorry to say this, but I keep having doubts, thinking it's impossible for you to like me based on a few letters and some indecent dares. I mean, you're a weirdo for even doing them.\n\nMe: You asked so nicely, I couldn't say no ;)\n\nNI: No, seriously, why did you even go with the game?\n\nMe: I could ask you the same thing, why did you start the game?\n\nNI: Because I liked you.\n\nMe: We all know that ;) But why the naughty dares? You could've asked me out or something.\n\nNI: Alright, I'll answer this, but you'll have to answer my question after. Deal?\n\nMe: Deal.\n\nNI: After your first tryout for the team, everyone was talking about you in the locker room. Straight girls were wowed, and every bi and gay one wanted to get in your pants.\n\nMe: Really?!\n\nNI: As if you didn't know!\n\nMe: No, I didn't. I really, really didn't.\n\nNI: Come on, your first couple of weeks, you had like seven or eight fawning over you, wanting to help you during training, giving you tips, spotting you in the gym, touching every inch of you they could touch without being awkward about it. Even coach and Alex were a little gaga.\n\nMe: I had no idea. I thought everyone was so helpful and welcoming.\n\nNI: Yeah, well-cumming ;) You're like lesbian crack and candy, mixed into one fucking sexy body.\n\nMe: Huh?\n\nNI: Oh God, you're so terrible at this, aren't you? You're not too feminine, not too masculine, sweet and nice and funny, but also strong and decisive and reliable. Gorgeous, with a killer body and a straight head. Plus, you're not a player... well, not outside of soccer. In the lesbian world, you're the universally perfect combo.\n\nSo all my life, I'd been wondering why I couldn't easily attract men and turns out I was selling to the wrong market. There was a clientele right next door who would've lapped up my offer, literally and figuratively, but I'd been ignoring it. I started wondering if I had missed any signs of girls and women coming on to me during high-school, college, or at work. Perhaps... yeah... now that I thought about it, there were a few that had been more than just friendly. Wow, revelations!\n\nMe: So what changed after the first weeks? I don't think anyone behaves that way anymore.\n\nNI: With time, they started realizing you weren't interested. Either you were straight or you were brushing them off.\n\nMe: And you, in all of this?\n\nNI: Me, well, I liked you from the first day too, but I didn't think I'd stand a chance against the hordes. Again, insecurities. Then I saw them fall by the wayside, one by one, and I thought that maybe wooing you required a different approach. Something to grab your interest, keep you hooked, and get you out of your shell a little.\n\nMe: Hence the secret letters.\n\nNI: Yup. I'm a terrible flirt, and I'd never come on to a girl on my team before, let alone someone I barely knew and who was as gorgeous and as smart as you are. So I chose anonymity. And the only way my letter would have had an impact at all was if it was crazy and preposterous.",
        "Me: But you couldn't know that I did the first dare.\n\nNI: I saw you on the field after you got my letter and you were completely lost, contrary to your usual 150% focus. I knew I'd struck a nerve, but I didn't know if you went through with it. I had to wait until the next dare, which had to be super obvious (i.e. the braless gym session), to know if I hooked you or not. Then the rest, as they say, is history.\n\nMe: Fascinating. But wait, that doesn't explain one thing.\n\nNI:?\n\nMe: After the night at the bar, when I made a bit of a show with Oksana, many of them must have realized I wasn't completely straight. Yet no one has come on to me since, and to be clear, this time, I'm sure I would've noticed. I've been on edge about every interaction with a player these weeks.\n\nNI: I kinda, sorta, maybe, veto'ed it.\n\nMe: You what?\n\nNI: They were all handsy with you after Kee and Oxy left, and that drove me insane. I told them I was seriously interested and they backed off. Bro code. Or lesbian code, whatever you wanna call it.\n\nMe: Very possessive.\n\nNI: Look, I could tolerate you getting touchy with Oksana because I'd dared you to and I instantly knew why you were doing it. But someone else? Nope.\n\nMe: Wait, so they all know about this?!\n\nNI: Not the details. Just that there's \"something\" between us.\n\nMe: Huh... I wouldn't know what that is. Can you be more specific?\n\nNI: Yes, we have this special bond. I can dare you to cum anywhere, anytime, anyhow, and you'll do it for me.\n\nMe: Oouuhh. Talk dirty to me, baby.\n\nNI: Go to your bedroom.\n\nMe: Yes Ma'am.\n\nI got off the couch and walked to the bedroom.\n\nNI: Clothes off.\n\nMe: Take-charge attitude. How very \"insecure\" of you.\n\nI started taking my clothes off. I looked at the vibrator on my bedside table and ached to have it inside me.\n\nNI: Shower.\n\nMe: Do I take Pinky?\n\nNI: No.\n\nMe: Brutal. Alright, I'm in the shower.\n\nNI: Great. Now, you promised you'd answer my question next.\n\nMe: Huh?\n\nNI: So forgetful, tssss. Is that how you get when you're horny? Would be too bad if it happened at work or in court.\n\nI had a fleeting thought of her calling me up at work and daring me to do something crazy, and knew I'd be completely screwed.\n\nNI: I'll refresh your memory. You said you'd tell me why you did the first dare.\n\nMe: Ah yes.\n\nNI: You're in the perfect setting now, let's recreate that magical moment. I dare you ;)\n\nMe: Ooooh, brilliant.\n\nNI: Why thank you! So?\n\nMe: So the idea seemed completely preposterous when I read the letter. But I couldn't get it off my mind. I kept looking at all the players during practice, trying to guess which one sent it. Then I started noticing all the bodies, hips, chests, biceps, quads, smiles, cute dimples... and even though I'm straight, that got me in a state.\n\nNI: You're straight?\n\nMe: Was... Or thought I was...\n\nOh boy, I hoped I didn't ruin the mood with that disclaimer, but she had to know. I couldn't lead her on without her knowing what she was getting into.\n\nNI: We'll table this for later. You said you were in a \"state?\"\n\nMe: I couldn't go back to the locker room and see half of you parading naked, so I stayed back to stow the equipment, hoping I'd calm down. Problem was, when I eventually came down to shower, it was all, like you said, calm and private.\n\nNI: How inconvenient.\n\nMe: Very. At first, I didn't want to.\n\nNI: But you did?\n\nMe: I touched myself once and I was drenched. By then, my finger had a mind of its own.\n\nI didn't need to tell her that I was replaying that moment, to the letter, one hand typing, the other dipping into my folds and playing with my aching nub.\n\nNI: Naughty finger.\n\nMe: Very. It kept rolling and rubbing, in a frenzy.\n\nNI: And there was nothing to stop it and save you?\n\nMe: Nothing. My mind kept playing images of my sexy teammates, and my juices betrayed me as well.\n\nNI: Naughty mind and naughty juices.\n\nMe: So slick, they lubricated the whole area and my finger faced no resistance whatsoever.\n\nNI: What a terrible situation to be in!\n\nMe: Yup, it was hell-bent on destroying my will. So I held on to the wall to avoid falling and let it have its way with me.\n\nNI: That fast?\n\nMe: There was no time to argue.\n\nNI: Oh. What a powerful finger, silencing a chatty lawyer, just like that.\n\nMe: It hit just the right spot.\n\nNI: Jess...\n\nMe: Yeah?\n\nNI: I'm close.\n\nMe: So am I.\n\nNI: Ffffffffffuck.\n\nI felt my insides tighten and screamed as my orgasm hit me, as intense as the first time in the club shower, and just as unexpected and quick. I took a deep breath and left my finger toying inside me.\n\nMe: I forgot to tell you one thing.\n\nNI: Uhuhmmm?\n\nMe: My finger was hungry for more and it had to have a second round.\n\nNI: You did?\n\nMe: Yup, one wasn't enough to satiate it.\n\nNI: Shit.\n\nMe: So I leaned against the wall and I let it have its way a second time.\n\nNI: I made you cum twice that day?\n\nMe: Yes ma'am.\n\nNI: Whoa.\n\nMe: And about to do it again, today.\n\nNI: Hold on a sec.\n\nMe: Nooooooooooo :(\n\nNI: Go get Pinky, I want to be involved.\n\nI reluctantly stopped my finger and ran back to my bedroom. In a second, I was lying on the bed, the vibrator lodged within me.\n\nMe: Done.\n\nShe didn't type anything. The urgency of the situation must have been clear to her so all she did was turn it on remotely at medium intensity and build up in a few seconds to a higher level. I put the phone down, relaxed my body, and let it do its thing.\n\nSoon, the vibrations had taken over and I was being transported to a different dimension. I shuddered, but the vibration was relentless and I just couldn't handle a third orgasm. With whatever strength I had left, I picked up the phone and sent her a period. That's all I could type. She got the hint and slowed it down quickly then stopped.\n\nIt took me a few minutes to catch my breath and revive my senses. Then I removed Pinky, snuggled in bed, and grabbed the phone again.\n\nNI: Was it good?\n\nMe: So good I'm spent.\n\nNI: Two nights in a row, we must thank Pinky for her services.\n\nMe: Her?\n\nNI: So attentive, so gentle when she wants to, so strong when she decides to, must be female.\n\nMe: Hah.\n\nNI: Do you always go mono-syllabic after sex?\n\nMe: No.\n\nNI: Just with me?\n\nMe: Yup.\n\nNI: Must be special.\n\nMe: Umm-hmmm.\n\nJust like the night before, I was starting to doze off and daydreamed about her spooning me and me falling asleep in her arms.\n\nNI: Naughty Instigator, you said. I hope I'm living up to my name.\n\nMe: Even more.\n\nNI: Are you falling asleep like yesterday?\n\nMe: Maaaaaaaybe.\n\nNI: Hahahahaha, you're too cute. I just wish I could be there holding you now and helping you relax. Same time tomorrow as well?\n\nMe: Earlier?\n\nNI: 6:50 PM? ;)\n\nMe: Come on...\n\nNI: 6:30 PM. I can't make it earlier.\n\nMe: OK.\n\nNI: Good night cutie.\n\nMe: 'Night, naughty one.\n\n-----\n\nNaughty Instigator: I'm proud of you. You respected my 6:30 PM deadline.\n\nThe phone was in my hand and I had been waiting for her message. I instantly unlocked and answered her.\n\nMe: Trying to show you I can be a good girl... sometimes.\n\nNI: I'll be the judge of that.\n\nMe: Are we back to the law puns?\n\nNI: I didn't think I'd be deposited for being funny.\n\nMe: Hahahaha, alright, no further questions your honor.\n\nNI: So, good girl, tell me, where's Pinky tonight?\n\nMe: Awaiting her marching orders.\n\nNI: Yes, but where is she?\n\nMe: There's no fooling you, gah! I've already enlisted her services.\n\nNI: You don't want to talk before I make you cum, tonight?\n\nMe: I've been on edge all day, barely made it through a court visit and three client meetings. I'm horny, I'm eager, I'm drenched. So no, I don't want to talk before.\n\nNI: Too bad, we'll talk.\n\nMe: Ugh.\n\nNI: Are you pouting?\n\nMe: Yes.\n\nNI: Adorable.\n\nMe: Adorable enough to change your mind?\n\nNI: Nope, sorry. But let's just say that you'll have an incentive throughout our discussion. I dare you to enjoy it.\n\nI almost didn't notice it at first but the vibrator had been turned on. It was a little, but constant buzz, possibly its lowest ever setting. It felt more like a gentle touch than a world-collapsing vibration, but given my level of excitement, it was going to drive me crazy in the long run.\n\nMe: Starting to feel incentivized already.\n\nNI: I've been thinking about something you said last night. You told me you are/were straight.\n\nMe: I did.\n\nNI: I have trouble putting two and two together. You definitely don't seem straight now and you were very easily convinced by my evil plan.\n\nMe: True.\n\nNI: Are you gonna answer or just keep agreeing?\n\nMe: You didn't ask a question.\n\nNI: Don't play lawyer with me, Jess. I need to know. Are you or are you not straight?\n\nMe: Up until the moment I opened that first letter, I had 100% believed I was straight. Never kissed a girl, been with a girl, not so much as thought about a girl. It just didn't occur to me.\n\nNI: And the letter changed it?\n\nMe: I told you, I started staring that day and some things jumped at me. Maybe literally ;)\n\nNI: Yeah training with women can be an eye-opening experience.\n\nMe: Oh they were open alright. Ever since, I can't stop thinking about it. I see beautiful women around me all the time, but when I just glanced at them a few weeks before, now I look a little longer and more appreciatively.\n\nNI: How appreciatively?\n\nMe: Enough to get me wet picturing them naked, their various shapes and sizes of tits, their squeezable asses, their kissable lips...\n\nPinky's vibration went up a level. It was still weak, but felt a bit more noticeable now. I was already drenched and this slow-burn wasn't helping me.\n\nNI: So you've just been staring for a couple of weeks, and you think that's enough to say you've changed teams?\n\nMe: It's not about teams. I spent some time lost in my feelings at first. But with more thinking and more introspection, I know this isn't just a spur of the moment change.\n\nNI: Oh, explain.\n\nMe: First, my attitude toward women has changed, as I explained. Even if you weren't part of the equation, this is something I'd pursue from now on. I'd widen my dating pool to both genders. Plus, you told me I'm lesbian crack and cake, so my success rates should be dramatically increased.\n\nNI: Hahahaha. But am I part of the equation?\n\nMe: You are the equation now ;)\n\nNI: Oof.\n\nMe: From the first letter, something happened. I don't know how to explain it, but even though I don't know who you are exactly, you've drawn me in. You're quirky and devilish and smart, funny, thoughtful. You get me so far out of my comfort zones that I can't see them anymore, let alone come back to them.\n\nThe vibrator picked up the pace one more time. Still weak, but more and more impactful.\n\nNI: Since we're being honest now, you should know. Even though this seemed like a wicked game at first, I was and still am genuinely interested in you. Even more now.\n\nMe: \"Interested\"?\n\nHow dare she? I was outraged. She liked me a lot more than that, and either was tricking herself or trying not to show me.\n\nNI: Yes.\n\nMe: That's all you are? That's your honesty speaking?\n\nNI: Uh...\n\nMe: Look, if you don't want to put yourself out there for a potentially-straight-and-just-playing-the-field girl, I get it. But if I'm just an \"interest\" to you, then I need to tell my heart to slow down because it's fallen head over heels for you and it's going to be very disappointed if yours doesn't feel the same way.\n\nNI: Head over heels?\n\nMe: Yes. The dares were a good start, but these three nights? They've proven to me on how many levels you're awesome and how well we fit together. I thought you were on the same page.\n\nNI: I am.\n\nMe: Are you really?\n\nNI: Yes. I'm sorry for saying I'm just interested. I really feel this is more special than that and...\n\nMe: And?\n\nNI: And I like you a lot more than I let myself admit it. For many reasons, including the fact you just made me type this when I'd been forcing my heart not to get carried away.\n\nAh, right where I wanted her. For the first time, this felt like a small victory, but I needed more.\n\nMe: So you really like me?\n\nNI: No, I'm completely and utterly infatuated with you.\n\nMy heart fluttered and I grinned so widely. For a brief moment, I had the upper hand and I wasn't going to lose it.\n\nMe: Awwwww, wasn't so hard, was it?\n\nNI: Just a lil.\n\nMe: Do you think about me during the day, like I think about you?\n\nNI: All the time.\n\nMe: And night?\n\nNI: Well, I can't not, since I'm talking to you now.\n\nMe: Wise ass. I meant before these chats started.\n\nNI: Every night.\n\nMe: Me too. I couldn't tell you how many times I fell asleep just picturing you in my bed.\n\nNI: Asleep?! I was hoping to elicit a different reaction!\n\nMe: You know how sleepy I get when I'm done... And you've been helping me get there every night for a while.\n\nAs I expected, Pinky's level was raised again. We were starting to get somewhere. And just like that, my eagerness to be in charge dissipated. I wanted her to control the situation now, guide my pleasure, and take me higher and higher.\n\nNI: I feel used without my knowledge. Must know all the details of the crime. Fingers or toys?\n\nMe: Mostly fingers.\n\nNI: Naked or just comfortable?\n\nMe: Both. Sometimes under my PJ, sometimes completely naked.\n\nNI: Bed or couch? Or somewhere more creative?\n\nMe: Bed, couch, shower, and... once on the countertop.\n\nNI: Details on the last one.\n\nMe: I just wanted to see what it felt like. It was the night after the plank vibrator incident and I was on edge preparing dinner. I needed some relief.\n\nNI: Hahahahaha, amazing. Nipple pinching or not?\n\nMe: Always.\n\nNI: Yum. If I had your nipples, I'd always pinch them too. Still can feel it rolling between my finger. And that day at the gym? They were impossible to miss, poking so far. Fucking yum. It took all my will not to throw you on the floor and take them in my mouth. They're like what, one inch?\n\nMe: More or less. They're already standing up now, I think they like your attention.\n\nNI: Mmmhmmm. Pinch.\n\nMe: Already.\n\nNI: Can you bend and lick'em?\n\nMe: I can suck and bite too.\n\nNI: Fuck. Do it.\n\nThe vibrator picked up pace one more time and its constant buzz was finally at a point where it could push me over the edge, if it continued. I bent my head and took a nipple in my mouth, sucked on it and bit it a few times between licks.\n\nMe: Delicious. Can't stop thinking about tasting yours.\n\nNI: Soon. I still have some questions. With or without visual material?\n\nMe: A couple of times with, but mostly without.\n\nNI: Lesbian?\n\nMe: Definitely. Erotica and porn. Needed to widen my horizons and catch up on a few lessons I may have missed.\n\nNI: It worked?\n\nMe: I came every single time.\n\nNI: Trigger?\n\nMe: Everything. Sometimes a long wet possessive kiss, or when the tits are revealed and they're sexy and lovingly fondled, or when a long or big nipple is sucked well, when one is eating out the other, humping, tribbing, 69ing, face sitting, everything really. In erotica, I like the slow build-ups when you just want the two to get together, and in porn I love when they both seem into it and sort of forget the cameras.\n\nPinky's level rose once again. I was getting closer and closer.\n\nNI: Your finger: rub, fuck, both?\n\nMe: My preference is rubbing.\n\nSomething switched in the vibrator. The tip that was on my G-spot slowed down a little without stopping, but the one on my clit picked up a frenetic pace. Ugh. That was it. A few more seconds.\n\nNI: Hey Jess...\n\nMe:?\n\nNI: Rub your pussy on mine.\n\nThe words threw me off the edge and I was both floating and free-falling at the same time. The crescendo of stimulation had gotten me slowly worked up, so the descent was going to be long and pleasurable as well. I spasmed and spasmed and clenched and shuddered, stars in my eyes and images of what we'd do together playing in front of me. I finally collapsed, in a heap of sweat and loose muscles.\n\nThe buzzing had slowed down. I smiled. She instinctively knew I'd already cum. I took a few deep breaths and rested for a minute.\n\nMe: You better be as good as Pinky.\n\nNI: Even better. I come with a smooth tongue, a pair of hands, more than a few curves, a delicious pussy, and I know how to use them all. But being a smart player, I also know when to enlist help from the right tools and gear.\n\nMe: You have more than Pinky and the plank vibrator?\n\nNI: Uh-huh.\n\nMe: Intriguing...\n\nNI: I'll make sure you have zero doubts about your gayness from now on.\n\nMe: Which reminds me, tomorrow is Saturday.\n\nNI: It is indeed.\n\nMe: And?\n\nNI: And what? You're surprisingly chatty tonight, I thought you'd have collapsed by now.\n\nMe: Funny but no, I'm all invigorated.\n\nNI: Oh you are. Perhaps a second round is in order?\n\nMe: Not yet. And stop avoiding the question. We agreed to meet tomorrow, so how do you want to do this?\n\nNI: Fine, kill-joy. We're supposed to go out with the team after practice and celebrate Tuesday's win, right?\n\nMe: Yes.\n\nNI: So we'll do. But you and I will \"disappear\" early.\n\nMe: And how will I know whom shall I \"disappear\" with?\n\nNI: Trust me, you'll know.\n\nMe: Will you corner me in the bathroom and come on to me?\n\nNI: Good idea, but no.\n\nMe: Will you dance with me and whisper naughty things in my ears while grabbing my titties and pinching my very, very erect nips?\n\nNI: Sounds very fun, but still no.\n\nMe: Will you throw me against the wall in a dark corner of the bar, kiss me possessively, and finger me right then and there?\n\nNI: Someone has a vivid imagination tonight. Again, no.\n\nMe: Uhmmmm, that leaves one thing: Will you prop me up on the bar, rip my underwear, and eat my pussy in front of everyone? Make me scream your name so they know I'm yours?\n\nNI: Fuck you. I wish.\n\nI'd hit a nerve there. I could be naughty and sassy too, and she had to know that this wouldn't be a one-way street. I smiled, proud of myself. Then I noticed my hand had started rubbing again, subconsciously, and thought hers must be doing the same.\n\nMe: Are you playing with yourself again?\n\nNI: Yes.\n\nMe: I'm trying to picture it, but you've kinda made it difficult since I don't know what you look like.\n\nNI: Hard nips and eager pussy.\n\nMe: Yum. How wet are you?\n\nThe simple mention of the word \"wet\" was enough to trigger me. I loved it, loved that I was feeling wet, loved that I was getting her wet. It was the highest compliment we could give each other and the best indication of how much we craved each other.\n\nNI: I definitely need to change my sheets in the morning.\n\nMe: Put on some nice ones, because there'll be another sensitive ass rubbing on them tomorrow night.\n\nNI: That easy?\n\nMe: I plan to make you work for it, but we both know I'll melt the moment you touch me.\n\nNI: Too bad for you. I plan to touch you all over.\n\nMe: Just touching? I was hoping for some licking and sucking too. My nips and clit will be standing up, demanding some very wet lovin' and attention.\n\nNI: Don't you worry about that. If your sensitive ass is rubbing on my sheets, then my sensitive tongue will be rubbing all over you the rest of you. Then your ass too. All of you deserves some wet lovin' and attention.\n\nMe: Mmmhmmm.\n\nNI: Is Pinky in still?\n\nMe: No. But my finger is. And it's very efficient.\n\nNI: Cum with me?\n\nMe: I'm already close.\n\nNI: Me too. I'm craving the taste of your juices.\n\nAnd just like that, the pleasure took over and I was sent up in the air, on a fluffy cloud of euphoria and peace, a gentle tongue lapping enthusiastically at my folds and helping me maintain the sensation a little bit longer.\n\nA couple of minutes later, I picked up the phone, a silly smile on my face and all the excitement and exhaustion of the past hours having taken a toll on me.",
        "NI: You should be more naughty more often. This was delicious.\n\nMe: Yes.\n\nNI: Promise?\n\nMe: Swear.\n\nNI: Someone is collapsing.\n\nMe: Me!\n\nNI: Hahahaha, you're adorable. See you tomorrow?\n\nMe: Suck you tomorrow.\n\nNI: I'll hold you to your word. For now, how about a virtual cuddle?\n\nMe: Mmmhmmm. Wanna fall asleep in your arms.\n\nNI: Me too, Jess, me too.\n\n-----\n\n\"It's been a pleasure, Jess. I'm sad this is coming to an end, but I'm looking forward to the next step. That'll be the most daring thing we've ever done.\n\nBut I couldn't leave you without one last gift, cutie. To have you panting, I need you panty-less at the bar. I dare you.\"\n\nI felt my throat go dry while reading that first sentence. It was the end of the vanilla-scented red letters and dares, and I was already feeling nostalgic about their loss. But she was right, there were better things ahead, hopefully.\n\nI slid the letter in my gym bag and smiled. Instinctively, I turned around to try and gauge reactions from nearby players, but once again and for the last time, nothing jumped out at me. This was going to be a long, long practice, but the anticipation of the night should help me power through.\n\nI knew she was going to be watching me. If I let it show, she could easily see how absent-minded or apprehensive I was. So I spent the two hours forcing myself to focus on our drills, runs, exercises, and practice match, but in the back of my mind, the thought that I'd be kissing her tonight, and quite possibly more, wouldn't leave me. By the end of practice, I nearly ran to take a shower, and was one of the first ones out, hair dried, gym bag packed, ready to take on the night in my knee-length black dress.\n\nAnd panty-less. Obviously, panty-less.\n\nI eagerly waited for the players to finish up, trying hard not to stare at their naked or half-naked bodies as they came out of the shower and got dressed. I clearly failed and kept wondering if these were her hard nips, or those harder ones, or maybe those small but very perky ones. Which pair was going to end up in my mouth tonight? And how about her delicate pussy? Was it this eager shaven one, or that landing strip, or maybe that trimmed one? Did I see a glint of wetness over there? Mmmhmmm. And her ass? Which one would I be spanking in a bit? The tiny round one, the bubbly one, the caramel one, or... Argh, I had to calm down because I couldn't make a mess of my nice dress.\n\nFinally, most of the players were ready and we headed out. No one asked me to drive them, thankfully, as I would've had to refuse due to my other obligations. Time seemed to slow down even more, with each passing minute. I wished I could spin the clock's hands so we were finally at the bar, and she had finally revealed herself, but I had to trudge along, walking to my car, driving around, waiting for traffic, parking my car, all kinds of mundane things that just wouldn't end.\n\nBefore I got out of my car, I slipped my hand and tested the waters. \"Waters\" was an accurate depiction. I was nearly soaked.\n\nI rushed to the bar and found most of the team was already gathered around a few tables. I took a seat on one of the high chairs and waited. They could have been talking about anything, I didn't care, didn't hear, didn't talk. I was simply nodding and smiling to the congrats on my header goal and my sprint and perfect pass. My brain told me they were being nice and I should be more involved for the sake of team spirit, but my heart was pounding with one question: When?\n\nA couple of rounds of drinks later, most of the players moved to the dance-floor and I was nearly ripping at the seams. I stayed behind, pretending I was keeping an eye on our belongings and stared down at my drink. Had she changed her mind or was she toying with my patience? Was she making sure I was wired up, or giving me a chance to back off if I'd had doubts? And what if it was just a game and she was done with me? No, no, no way.\n\nThat's when I noticed the vanilla smell. Someone was sitting next to me and my heart nearly jumped from my chest. I raised my eyes and saw her. Smile and fear mixing on her face, kindness and naughtiness in her eyes, and a little shiver on her lips.\n\nI smiled. She smiled back and my whole world stopped. I finally admitted to myself that I wanted it to be her from the start, and I was beyond ecstatic that she was indeed the one.\n\n\"Hi,\" she whispered.\n\n\"Hi,\" I barely managed through my dry throat.\n\nShe placed her hand on mine, sending a shockwave of electricity through my body. Was it me trembling or was it her? The barrier between our bodies was blurred, and so was our perception. Too many feelings to process at once. She smiled again. I answered her.\n\n\"I love this dress. Too bad you'll have to take it off soon.\"\n\nMy mouth went drier. Her finger slid up my arm a little, provoking goosebumps all over. Then she dropped it to my thigh, under the table, away from any voyeur's eyes. I shivered. Slowly, she brought it to the hem of my dress, stopped, and smiled again. Her eyes were fixated on mine and I didn't dare breathe, let alone blink.\n\nI calculated that it would take me a second to spread open my legs, shove the dress upward with one hand and, with the other, grab her hand and put it on and in me. I remained still, breath caught in my throat, transfixed by her eyes.\n\nShe started pushing the hem up with her finger, inching closer and closer to where I ached for it to be. My world had completely stopped. Music, crowd, bar, drinks, smells, people, nothing and no one existed but her and the pounding of my entire body.\n\nShe finally reached high enough and moved it toward the center. My naked pussy was underneath her finger and she knew I'd done what she asked. Her smile widened. I readjusted my position, spreading my legs a little further apart to give her better access.\n\nAs her finger slid down, helped by my wetness, she leaned into my neck and whispered:\n\n\"Is that dripping pussy for me, Jess?\"\n\nAll I could do was nod my head in approval. My name coming out from her lips sounded sexier than it had ever been, the hissing at the end sneaking in my ears and titillating my senses.\n\nShe dipped her finger between my folds and instantly found my hard clit. A growl of appreciation resonated against my neck. I pushed myself further into her finger. She circled it a few times and began applying a bit of pressure.\n\nA shudder coursed through me and I barely stifled a loud moan. Instead, a whimper escaped my lips along with the words, \"Oh God!\"\n\n\"I'd rather hear you say my name,\" she half-scolded half-ordered in my ear. Her finger stopped, waiting for my answer.\n\n\"Please, Brooke.\"\n\nHer finger restarted its circles, then slid a little lower and into me. I felt my insides tighten around it. This... I didn't want this to ever stop. She licked my neck and paused against my ear. Her finger slowly pumped in and out of me twice.\n\n\"Come home with me, I dare you.\""
    ],
    "authorname": "bi_cathy",
    "tags": [
        "football",
        "lawyer",
        "lesbian",
        "naughty",
        "secret admirer",
        "seduction",
        "soccer",
        "vibrator"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/i-dare-you-19"
}