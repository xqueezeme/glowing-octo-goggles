{
    "title": "Teresa's Christmas Story Redux",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above. \n\nPart 1 - Prologue \n\nSaigon, South Vietnam. Christmas, 1972.\n\n\"Cordell! Why aren't you at the bar with the other guys, having a drink? It's Christmas.\" said the Captain. He'd been sitting alone in the Quonset hut that served as barracks and his office when the Corpsman had come in.\n\n\"Same reason you're not, sir.\" said Corpsman Leonard Cordell. It was unusual to see Army Airborne wings on a Navy Corpsman, but Cordell had earned them in a harrowing combat jump with the Captain and his unit of the 173d Airborne Brigade, to relieve and rescue Army soldiers that had been attacked weeks before.\n\n\"Well,\" said the Captain, \"we ought to be celebrating Christmas with our families by this time next year.\"\n\n\"I hope you're right, sir.\" said Cordell. \"But this God-cursed war will go on as long as someone is making money off of it, and Congressmen are not in danger of losing elections over it.\"\n\n\"You are the cynical one, Cordell.\" said the Captain. \"But we'll see. I think you and I will be home by next year.\" He took out the picture of his wife, looking at it. \"You know, it's going to be great. We're going to have kids, and we'll be setting up the toys on Christmas Eve, then watching the kids come in on Christmas morning and seeing what Santa Claus brings them.\" He became lost in thought. \n\nCordell did not interrupt his introspection. He was cynical enough to realize that the best laid plans didn't always come to fruition. But he hoped that the Captain's dreams would come true...\n\n* * * * * * * * * * * * * * * *\n\n\"Oh, it's so good to see you!\" exclaimed Molly as she hugged her mother at City International Airport. She then hugged her father. It was Monday, December 21st.\n\n\"Well, where is that new grandchild of ours?\" said William Ross. He was tall at 5'11\", very slender, and he seemed to look very old to Molly, much older than his age in the sixties.\n\n\"Oh, William, do be patient.\" said Margaret 'Maggie' Ross, his wife and Molly's mother. \"Molly's right not to bring a little baby into an airport like this.\" Maggie was not quite Molly's height, and starting to get a bit dumpy as she grew older, but not too much. She was younger than her husband by several years.\n\n\"Let's get your baggage and drive on over.\" said Molly. \"Cindy's on duty. She didn't think you were coming for two more days, and I want to surprise her...\"\n\nPart 2 - Runaway \n\nTown & County Police Lieutenant Teresa Croyle was driving around Town on Monday, December 21st. She was in plainclothes: jeans, a denim jacket, tie-dye shirt underneath, and tennis shoes. She'd been looking for a runaway orphan girl named Amy.\n\nAmy was fourteen, maybe fifteen, slender, light brown hair like Teresa's. She'd come back to the orphanage the week before, but had disappeared again Sunday. The orphanage people were beginning to get angry about it, and were saying the girl would have to be transferred to a State facility if this kept up. For some reason, Teresa told them she'd like to find out the full story before having them do that. They acquiesced... for now.\n\nThis was Teresa's only mission; everything else was paperwork and desk duty. Not much had been said, but she and her boss, Captain Cindy Ross, both knew well that Commander Donald Troy, the Iron Crowbar, did not care to have his Holidays blemished by having to deal with any problems with the name 'Teresa Croyle' attached to them. But at least she had a mission and could do some work.\n\n* * * * * * * * * * * * * * * *\n\n\"Oooh, Commander, you're looking sharp!\" exclaimed Lt. Tanya Perlman, as she entered my office on the morning of Monday, December 21st. \"What's the occasion?\"\n\nI was wearing my dark blue pants with the double row of light blue piping on the sides, and my light blue uniform shirt with metal ranks on the shoulders and a leather sash belt from the right shoulder to the left hip, connecting there to my pants belt. The dark blue necktie was tucked into the shirt between the first and second buttons.\n\nThe shirt was relatively tight and form fitting, and my badge was shined up over the left pocket, and the red and purple ribbons, both bordered in silver medal, were over my right pocket, just over my name tag. It wasn't formal, but one mere step down from Duty Dress. I looked good, impressive even... and I needed to look that way today.\n\n\"You know something, Tanya?\" I replied, \"I have never had the occasion to meet in-laws before. Melina's parents and Laura's parents were deceased and I never met them. Molly and Cindy's parents are coming today, and they'll be looking hard at me as the father of Molly's children.\"\n\n\"You'll charm them as you do everyone else.\" Tanya said with a grin. \"By the way, I appreciate you inviting me and Pete and Pamela to your house on Christmas Day as well as Christmas Eve.\"\n\n\"We'd love to have you.\" I replied. \"Carole thinks Little Pete is her brother, just like the rest of the boys. By the way, are you inviting Jack Muscone over? He should come up, too.\"\n\n\"He begged off.\" said Tanya. \"He said he and his FBI Team were going to get together. Only Eduardo is married, and they don't have kids yet. Martin will go with Sandra, of course.\"\n\n\"I very much hope to hear that Sandra gets a ring for Christmas.\" I said.\n\n\"I dunno.\" said Tanya. \"Martin said that he and Sandra have talked about it, and want to wait. I'm not sure what for, though.\"\n\n\"Well,\" I said, \"I suspect that's going to be figured out by the Fourth of July...\"\n\n* * * * * * * * * * * * * * * *\n\nTeresa's cellphone rang. It was Sergeant Irwin, who was becoming to her and Vice what Sergeant Rudistan was to Tanya and MCD.\n\n\"Ma'am, a person matching the description of your orphan was just seen near the Saskia Warehouse.\" Irwin said.\n\n\"I'll head on over.\" said Teresa. \"Come in as backup, but slowly and discreetly. I don't want to scare her off.\" Irwin acknowledged and signed off.\n\nThe Saskia Warehouse was west of the Girls Orphanage, which was west of Church Row, as it was called. The warehouse had been abandoned for a year, since the Saskia Company had moved out of Town after their Canadian-based business had failed. Teresa pulled up, seeing an opening in the fence. She went through and into the main warehouse.\n\nLooking around, she didn't see anyone, but as she resolved to head to a back area, a teen girl darted out and tried to run past her to the door.\n\n\"Hold on!\" she shouted. She easily grabbed the girl at the doorway. \"Amy, I'm here to help you!\"\n\nHearing her own name stopped the girl. \"How do you know my name?\" she asked skeptically.\n\n\"My name is Teresa. I'm a Police Officer, and I've been looking for you. People are worried about you.\"\n\n\"I always go back to the orphanage.\" said Amy. \"Why are they worried?\"\n\n\"They get worried when they can't find you.\" Teresa said. \"And it's about accountability, too.\"\n\n\"Okay, let's go back.\" Amy said, turning to the door. It was as if she were in a hurry to get back... or to guide Teresa out of this warehouse.\n\n\"Hold on, hold on.\" said Teresa. \"I have to talk to you first. Let's sit down on this bench outside here.\" She led Amy to the picnic table that had once been used by employees, and they sat down.\n\n\"Tell me, Amy, why do you keep running away?\" Teresa asked.\n\n\"I just need to get out of there every once in a while.\" Amy said, and Teresa did not need a crowbar to see that Amy was not telling her everything. \"I just need to spend some time alone, then I go back. What's the big deal?\"\n\n\"Are they doing anything to you at the orphanage?\" asked Teresa. \"Hurting you or molesting you in any way? You can tell me, and I can help and protect you.\"\n\n\"Oh no, nothing like that.\" said Amy. \"They're good to us. Honest.\"\n\n\"Okay, okay.\" said Teresa. \"I have to ask, though. And look, really, if there's anything I need to know, now is the time to trust me and tell me.\"\n\n\"No, it's good.\" said Amy. \"So are you going to take me back, or take me to the Police Station?\"\n\n\"Oh, I dunno.\" said Teresa. \"If I take you to Police Headquarters, Commander Troy is going to want to ask you a lot of questions.\"\n\n\"The Iron Crowbar?!\" exclaimed Amy. \"You know him?\"\n\n\"I work for him.\" said Teresa, seeing Amy's eyes light up. The Iron Crowbar's reputation was growing, obviously.\n\n\"Oh, wow!\" said Amy breathlessly. \"Can I ask you something?\"\n\n\"What?\" Teresa replied.\n\n\"Is he really ten feet tall?\"\n\nTeresa laughed heartily, as heartily and as deeply felt as she'd laughed in years. \"That's good, that's funny, Amy. No, he's about 6'4\", but not ten feet tall. But for the criminals, his mind is ten feet tall and then some.\"\n\n\"Wow, we heard he was huge, a big giant man.\" said Amy. \"And no criminal can escape him.\"\n\n\"He is that.\" said Teresa. \"Okay, I'll tell you what I'm going to do. Here's my card. Keep it hidden on you. If anyone tries to hurt you in any way, you call me. And if you feel like running away, call me, and I'll come get you and we can walk around the Park or something. But you've got to stop running away, because the Orphanage can't handle it, and they might send you to the State Facility... where you don't want to go, okay?\"\n\n\"All right.\" Amy said. She got up, ready to go. Teresa wondered why she was so eager to get moving...\n\nPart 3 - Meeting the Parents \n\n\"She asked if you were ten feet tall.\" said Teresa. She was in my office, still in civilian clothes, which had created its own stir in the halls of Headquarters. \"I took her back to the Orphanage. I talked to the Headmistress there, and told her that if Amy feels like going out, to call me and I'll be responsible for her. They're not going to send her to State, at least not yet, but they are tired of her being unaccounted for.\"\n\n\"I hope that works.\" I said. \"So you said she was really eager to get out of that warehouse and then to get back to the orphanage?\"\n\n\"Yes sir.\" said Teresa. \"I'm not sure what it was about, but she was ready to go. I was thinking about bringing in the drug dog, but Amy had no needle marks on her, she didn't look like an addict. Her skin is really pale, and her eyes are almost yellowish, but no tell-tale signs of addiction.\"\n\n\"Okay, good job on that. You do need to make a police report, even though you resolved it the way you did. Just to cover our butts, if you know what I mean.\"\n\n\"Yes sir.\" Teresa said. I excused her.\n\nAs she turned to go, I said \"Did she really ask if I was ten feet tall?\" Teresa grinned, about as merrily as I've ever seen her grin.\n\n\"Yes sir, she did.\" she replied. \"It was just so... unexpected, and it just struck me.\"\n\n\"I can tell.\" I said. \"Okay, Cindy's parents are coming sometime today. Molly called me and said they came early. So if you want to meet them, maybe a change of clothes, there?\"\n\n\"Gotcha, sir.\" Teresa said. \"And that's why you're dressed up, isn't it?\"\n\n\"Smart Lieutenant, you are.\" I said. \"I might just put you in charge of our Vice Squad.\"\n\n\"You think of the best gifts for Christmas, sir.\" Teresa said with some slight sarcasm. I conceded victory to her on that exchange. And I was inwardly very happy to see her having such a sense of humor, such as it was for her. Especially this time of year.\n\nAfter she left, I looked up something on the Internet, then made a call to the Town & County Girls Home. I spoke with the Headmistress, who said Lt. Croyle had been very professional. I then asked the Headmistress a couple of questions about policy...\n\n* * * * * * * * * * * * * * * *\n\nMolly had taken her parents to The Cabin, and their luggage was secured in the larger guest bedroom. They were then re-introduced to Ross and for the first time to baby Ian. Maggie held Ross while William held Ian, and Molly saw the tears running silently down his cheeks.\n\n\"Oh he's so beautiful.\" said Maggie. She then asked Molly a ton of questions about the delivery. After some time, and more baby holding, Molly said they needed to go to Police Headquarters to meet Cindy... and Commander Troy.\n\n\"Ah, the baby's father.\" said William Ross. \"I've heard many good things about him, from you and especially from Cindy in her letters... but he's married?\"\n\n\"It's definitely unusual.\" Molly said. \"His wife Laura is my gynecologist and delivered Ian. I think I told you she's a professor at the University, and she and Don have an open relationship. She can't have children any more, and she tells me over and over she's happy for me. Don, of course, loves Ross and Ian as much as anyone could.\"\n\n\"Yes, dear,\" said Maggie quietly, \"I guess we Catholic farmers are still tied to old traditions, but I understand. You had a bad, bad marriage, and I can understand you doing that. I'm sure Don is a good man. And the babies are precious. So, are we going to see Cindy at her work?\"\n\n\"Yes.\" said Molly. \"Yes we are. But there's something I need to tell you first. Cindy's fianc\u00e9e Jenna went home to Washington State. Her mother's brother is seriously ill. I actually checked on that; the story is true, he's in the hospital there. Cindy really wanted to introduce Jenna to you, and she's very disappointed that's not going to happen.\"\n\n\"Jenna is the one that was abducted, wasn't she?\" asked Maggie. Molly nodded. \"Poor girl, that must have been horrific, terrible. But the Police got her back alive?\"\n\n\"Yes.\" Molly said. \"Don wouldn't let Cindy take part, but Lt. Croyle and the SWAT Team did an incredible job.\" She saw her father shaking his head. \"What is it, Dad?\"\n\nWilliam shook his head. \"I know they're brave people. But they're having to do too much. It's like a war down here. Is this typical of America?\"\n\n\"No, Dad.\" said Molly, shocked at her father's question. \"Actually, it's relatively peaceful here. And crimes and violence happen everywhere.\"\n\n* * * * * * * * * * * * * * * *\n\nBefore taking her parents to see Cindy, Molly first took them to the Chief's office, having explained that Moynahan had been her Captain in Midtown and was now Chief here. When they got to the office, they found Lt. Wes 'Coldiron' Masters also in the office. Molly introduced them both to her parents.\n\n\"Ah, it's wonderful to meet you.\" said Chief Moynahan, getting up from his desk and shaking their hands. \"I have heard a great many good things about you from Molly here, and also from Cindy since I've arrived here.\"\n\n\"We've heard no end of good things about the two of you, also.\" said Maggie Ross.\n\n\"Ah, is that Ian?\" asked Masters. Molly handed Ian to him. Wes 'Coldiron' Masters had a reputation for directness, toughness, and professionalism... but now Molly was seeing his tender side as he held baby Ian.\n\nAfter a few more minutes of talking, it was time to go see Cindy. Molly led them down the hallway to her sister's office and knocked on the door.\n\n\"Come in!\" said Cindy. When the door opened and Molly walked in with her parents, Cindy was stunned. \"Mom, Dad! I didn't think you were coming until Wednesday!\" She got up and hugged them both.\n\nMolly said \"I was hoping to surprise you a little bit.\"\n\n\"You succeeded.\" said Cindy. \"Sit down, sit down.\" She had her parents sit on the loveseat sofa, Molly in the chair, and herself behind her desk.\n\n\"Well, look at you, a Police Captain!\" said William. \"And Molly's now a Police Lieutenant in the next county. We're very proud of you both.\"\n\n\"Yes, yes we are.\" said Maggie. She was looking at the pictures on the wall. \"So this is your friend Teresa, with whom you ran that race?\"\n\n\"Yes, Mom.\" said Cindy. \"We'll take you to meet her soon.\"\n\n* * * * * * * * * * * * * * * *\n\nIt was time. I had wondered if it'd be better to have Cindy bring her parents to meet me, or for me to go to them. I chose the latter.\n\nI walked down the hallway, took a deep breath, then knocked on the door. Opening it, I peeked in. \"Hello, mind if I come in?\"\n\n\"Don!\" said Cindy. \"Yes, do come in! Mom, Dad, this is Commander Donald Troy. Don, this is my mom Maggie and my dad William.\"\n\n\"I'm so glad to finally meet you.\" I said, taking Mrs. Ross's hand in my own, as she was nearest me. I felt a bit of a vibe from her. Not like from Eckhart, Cindy, or the FBI Deputy Director, but still a bit of a vibe. I could see where P. Harvey Eckhart was attracted to Maggie Ross, and it was more than just physical attractions that had ended up producing one Captain Cindy Ross.\n\n\"And you, sir.\" I said to Mr. Ross as I shook his hand. I was going to shake it firmly, but I instantly felt a lack of physical strength in him. That caused me to take a closer look at him...\n\n\"It's so nice to meet you too, Don, if I may call you that.\" said Maggie.\n\n\"Of course, of course.\" I said. I was then distracted. Ross had said \"da-da\" and reached out for me. I took him from Molly's arms. \"Hey Ross.\" I said. \"So what have you named your grandma and grandpa?\" Everyone chuckled, but it was the right of the firstborn to name grandparents, dontcha know.\n\n\"Oh, he definitely has your eyes, Don.\" said Maggie, beaming at us.\n\n\"I think he's going to be a redhead, too.\" said William, seeing the titian locks on Ross's head.\n\n\"I hope so.\" I said. \"Well, guys, there are a lot of us, and this is not the largest office in the building. Shall we go to an early lunch?\"\n\n* * * * * * * * * * * * * * * *\n\nOn the way out, we stopped by MCD, where Cindy introduced her parents.\n\n\"Oh, you must be Teresa.\" said Maggie, seeing Teresa and instantly recognizing her. \"Yes, I can see why Cindy thinks so highly of you.\" Teresa blushed a bit.\n\n\"Thank you, ma'am.\" Teresa said. \"I think even more highly of her.\"\n\n\"Oh, is that Ian?\" called out Joanne. She got up to take him and hold him, and from that moment it was an Ian lovefest in MCD for several minutes. Finally, we gathered up everyone and headed out.\n\nAfter we were gone, Joanne was beaming. \"Did you see that?\" she asked the others.\n\n\"What?\" asked Martin Nash.\n\n\"Ross.\" Joanne said. \"He is the spitting image of his daddy. He's gonna grow up to be the next Iron Crowbar...\"\n\n* * * * * * * * * * * * * * * *\n\nAfter getting back from lunch, I headed to my office, letting the Ross families plan and do whatever they were going to plan and do. After a few minutes, there was a knock on my door. William Ross opened it and came inside.\n\n\"Ah, hello, sir.\" I said, getting up. \"Please, have a seat.\"\n\n\"Thank you.\" he said, but he took a moment to stand and look around the office, taking in Pete Feeley's framed badge, the Laika crowbar on the wall, my framed citations for the Medal of Valor, Purple Order, and Orange Order, then the wood-and-matchstick Trojan Horse on the bookcase against the wall to the right side of my desk.\n\n\"Ah, student of the Trojan War?\" he asked.\n\n\"No sir.\" I said. \"Those are gifts from an... admirer.\"\n\n\"Hmmph. Interesting.\" he said. He finally sat down, looking at the pictures on the desk, which included Molly and Ross, and a new one of Cindy holding baby Ian in the hospital when he was mere minutes old.\n\n\"I wanted to talk to you, Don, if that's okay.\" said William.\n\n\"Certainly, sir.\" I said respectfully.\n\nHe started: \"I know that you and Cindy are blood-related, and not exactly through me. Molly dragged that secret out of us last year; she was mighty upset we didn't come here last year, and I agree that we made a mistake. Molly also told us that you were aware of everything, and revealed your knowledge to Cindy.\"",
        "\"Yes sir, I did.\" I said. \"No disrespect to you, but she had to know.\"\n\n\"Oh, I agree, it was the right thing to do, for both family and practical reasons.\" William said. \"And I can see that Cindy practically worships you; it was best that come from you than from anyone else on earth, even Molly.\" I just nodded.\n\nMr. Ross continued: \"And of course I know that you are the father of Molly's sons. I won't hide the fact that it was a bit disturbing to Maggie and myself that you're already married. But I'm finally glad to meet you, as I can see for myself that you're as good and honorable a man as Cindy and Molly say you are, and you're doing right by Ross and Ian.\"\n\n\"Thank you, sir.\" I said. \"And Ross and Ian are my sons as well as your grandsons, and there's nothing I won't do for them\"\n\n\"Yes, I believe that.\" William said. Then he peered at me. \"I'm told you are a very perceptive man, and observe and understand things most people don't. So I know you're going to understand when I say that I expect you to take care of both Molly and Cindy going forward, and into the future.\"\n\n\"Yes sir, you bet I will.\" I said, fully understanding the man's words.\n\n* * * * * * * * * * * * * * * *\n\nThat evening, as the sun was setting, Cindy asked her father to come out onto the deck of the Cabin. It was beginning to get cold as the sun went behind the horizon to the west. As she sat down with her father and spread a blanket over both of their backs, they both saw a train coming out of the western horizon.\n\n\"Trains.\" said William Ross as the whistle of the train reached them on the wisps of the wind. \"I always loved them as a boy.\"\n\n\"I like them, too.\" said Cindy. \"So, Dad, I brought you out here so we can stop delaying the inevitable, and talk about it.\"\n\n\"That you're not my daughter?\" asked William, nodding slowly. \"Yes. I guess we should.\"\n\n\"First of all, Dad,\" said Cindy, \"I am still your daughter and you are still my dad. Oh, maybe not biologically, but you raised me. You were the one that tucked me into my bed every night, that put peroxide on my scrapes, took me to my hockey games and cheered me on when I knocked the other girls down.\" She heard her father chuckle at those memories. \"So you'll always be my dad.\" She put her arm around him and hugged him. He hugged her back.\n\n\"Yes, you will always be my little girl, and you did get a lot of scrapes as a child.\" he said. \"Playing hockey and softball, then you started doing that training for those competitions. And speaking of that... have you truly fully recovered from your wounds from that bad raid?\"\n\n\"Yes sir.\" said Cindy. \"Pretty much. And I think Don promoted me partly so he can keep me back, and out of trouble.\"\n\n\"You think a lot of him, don't you?\" William asked.\n\n\"More than words can express, Dad.\" Cindy replied, looking out over the twinkling lights of the Town.\n\n\"Good.\" said Mr. Ross. \"Of all the things in the world, at least the Lord provided for him to be your, what is it, cousin?\"\n\n\"Yes, Dad.\" Cindy said.\n\n\"I can see the positive influence he has on you, too.\" said Mr. Ross. \"You've always been a fearless little girl, but I see it even now... I've been wondering how we'd face this awkward situation, but you just come right out with it and take it head-on... very direct, just like him.\"\n\nCindy realized that her father was right. \"Yes, there's no doubt he confronts any issue very directly. Sometimes too much so. And speaking of that... I do appreciate you and Mom coming here. I wanted you to meet Jenna, but... well, I guess Fate got in the way.\"\n\n\"Yes.\" said Mr. Ross. \"And I owe you an apology, for not coming here last year. But... maybe it's for the best, as you found out the truth about... things.\"\n\n\"Well, maybe I can bring Jenna up to Edmonton this Spring.\" Cindy said. \"And you can finally meet her then.\"\n\n\"Yes, if the Lord wills it.\" said Mr. Ross. \"If the Lord wills it...\" He hugged Cindy tighter, dissipating her sense of foreboding...\n\nPart 4 - Trouble \n\nThursday, December 24th. Christmas Eve. \n\nFor Teresa Croyle, it was the day that would forever live in infamy in her heart, though she'd learned to accept Alexis's death and to understand her father's agony of that devastatingly fateful night, which robbed him of his sanity.\n\nIt was early, about 7:30pm. Traffic was moderate as people went to church services or did last-minute shopping. Teresa was on her way to The Cabin, to help prepare for the big Christmas Eve party. She'd gone by Police Headquarters to get her gifts; they were now in the trunk of her car.\n\nThe Commander had wanted her to arrive early, and she knew why: he was getting her off the road and out of trouble as early as he could. The consolation prize was that she got to spend time with baby Ian, Ross, Jim, Carole, and little Pete before the rest of the Detective Force got there, and---- wait, what was that?\n\nShe had clearly seen the image of her sister Alexis as she went by a building. Looking up, she saw that it was the Saskia Building. She heard Alexis's voice say \"Stop here! Stop here!\"\n\nShe heeded the call, turning around and bringing her car to the front gate and the opening near it. She had her gun in a shoulder strap, like the Commander used when wearing his gun under a civilian jacket. She also had her badge, but no radio. Nevertheless, she got on her cellphone and sent a couple of texts before going in.\n\nAs she approached the main warehouse, she again clearly could see the ethereal form of her sister Alexis at the doorway. \"Come on! Our sister needs your help!\" Then the form vanished as Teresa got to the door.\n\nOur sister? Teresa thought. No, Amy is not related to us, she thought to herself as she looked around the warehouse.\n\nShe heard a shuffle in the far back, near the offices. She walked back there. Just as she went by some stacked boxes, she stopped. Looking between the boxes, she saw Amy crouching down.\n\n\"Hey, Amy.\" she said quietly. \"It's me, Teresa. Why are you here?\" Amy was looking up at her, scared... and then Teresa saw Amy's companion.\n\nHe was a smallish dog, brown and white, and looked like a cocker spaniel. Amy had him clutched tightly to her chest, and was holding his snout to keep him from making a noise.\n\n\"Hey, who's your friend there?\" Teresa said. \"Come on out, I'm not going to hurt him or you.\"\n\n\"No, don't take him away from me!\" Amy gasped, about to cry.\n\n\"I won't.\" Teresa said, seeming to understand without consciously knowing why. \"I'm not going to take your dog away from you. What's his name?\"\n\n\"Buddy.\" Amy said.\n\n\"Come on out here.\" Teresa said. As Amy came out, Teresa saw that the dog was indeed a cocker spaniel. \"So Buddy is why you've been running away. They have a no-pet policy at the Orphanage, don't they?\"\n\n\"I've been keeping him here, and feeding him.\" said Amy. \"I want to keep him, but they won't let me. Now they're telling me they're going to send me to the State Orphanage, and Buddy won't have anyone. He might die! I don't know what to do!\"\n\nTears were streaming down the girl's face, and Teresa knew that Amy would do whatever it took to protect and keep her dog. \n\n\"Tell you what.\" Teresa said. \"I can't keep him because I get allergic to dog or cat hair in my apartment. I don't know what to do either, but I know who will. Why don't you come with me, and we'll go see Commander Troy. He's the Iron Crowbar. He can figure out anything.\"\n\n\"Really?\" said Amy, hope creeping into her voice for the first time. \"He'll do that for me? And for Buddy?\"\n\n\"Oh you bet. He loves dogs, and he loves solving problems for people like you.\" Teresa said. \"Will you come with me?\"\n\n\"Okay----\" Amy said.\n\n\"Like hell you will!\" snarled a voice. A man's voice. Teresa looked up to see Patrolman Brett Bryce standing in front of them, his hand on his still-holstered gun. Near the door was the fat Patrolman Justin Hendricks.\n\n\"Get away from that dog.\" said Bryce.\n\n\"No!\" shouted Amy. \"You stay away from him!\"\n\n\"I said get away from him.\" Bryce ordered. \"I'm going to kill that filthy thing, and I'll kill you too if you get in the way.\"\n\n\"Like hell!\" yelled Amy, holding Buddy close.\n\n\"You heard her, Patrolman.\" said Teresa, who'd put herself in front of Amy, protecting her from Bryce. \"Stand down and get the hell out of here.\"\n\n\"You're not even supposed to be on field duty, Lieutenant.\" said Bryce. \"You stand aside and get out of here, and maybe I won't report you for this. And if you don't get out of the way, I'll kill you, too.\"\n\n\"And you'll have to.\" said Teresa. \"You're going down for this, no matter what.\"\n\n\"As you wish.\" said Bryce. He gripped his gun, beginning to draw it from its holster...\n\n*WHAM!!!*\n\nThe blue crowbar came down on Bryce's hand. As he gasped in pain, he looked up and to his right to see Captain Cindy Ross standing there, about to swing at him again. He took a quick step back to avoid any further blows. Teresa had time to draw her gun, though she kept it pointed at the floor, and away from Amy and Buddy. But she was now ready to do whatever it took to protect the girl and dog behind her.\n\n\"You're done, Bryce.\" Cindy said. \"Put your hands in the air, away from your weapon.\"\n\nBryce looked over. Justin Hendricks's hand was over his gun... but Sergeant Micah Rudistan's gun was in Hendricks's earhole.\n\n\"Oh please, try it Fat Boy.\" whispered Rudistan. \"Please give me the excuse.\"\n\n\"Who you calling 'Fat Boy', Rudistan?\" asked Hendricks. \"You're a fucking hypocrite.\" Nonetheless, he put his hands on his head, and Rudistan took possession of his service weapon.\"\n\nSeeing he no longer had backup, Bryce snarled \"Tell you what, Dyke. I'll put the gun down, real slow, and you put down the crowbar. And then you'll find out that I'm not just some punk off the street. I'll whip your dyke ass, and then I'll whip Teresa Cunt's ass, and then I'll kill that fucking dog.\"\n\n\"Irwin!\" called out Teresa, seeing Sergeant Irwin and Patrolman Hicks also in the building, along with Patrolman Morton, \"take Bryce's weapon. Search him for more.\" Bryce was relieved of his service weapon, and the extra, hidden one strapped to his ankle.\"\n\n\"That's a violation, right there.\" Cindy said. She then extended the blue crowbar behind her. \"Hold this for me, Lieutenant.\" Teresa took possession of the blue crowbar. Amy was behind her, wide-eyed.\n\n\"Okay, cocksucker.\" Cindy said levelly. \"No crowbar.\"\n\n\"Who are you calling a 'cocksucker', you fucking dyke bitch?\" snarled Bryce. Even so, he came at her.\n\n*THWACK!*\n\nHis blow missed. Cindy's didn't. A hard chop to his ribs, behind the bulletproof vest. Bryce grunted, then tried a martial arts blow. Cindy easily blocked it, and slammed her fist into his chest, followed by a solid kick to his left hip. Now in pain, Bryce tried a tactical move, and Cindy easily dodged it. \n\nShe let him try a few more, seemingly anticipating his every effort, until she got bored with it. On his last swing, she threw him hard to the ground. Handcuffs were affixed to his hands behind him almost before he realized what was happening.\n\n\"Micah,\" Cindy ordered, \"take this piece of garbage to Headquarters, put him in an isolation cell, under guard. He's charged with assaulting a police officer, that being Lt. Croyle, with a gun, having an unauthorized concealed extra weapon, and other bad-cop-using-gun-improperly charges.\"\n\n\"Yes ma'am.\" said Rudistan, who moved forward.\n\n\"Read him his rights, too.\" Cindy said. \"Oh! I almost forgot.\" She looked at Bryce with a malicious smile. \"I think several of us heard you say you intended to kill that dog, Bryce. I will be very sure to let Commander Troy know of your intent. And may God have mercy on you when I do.\"\n\nBryce spit at Cindy in response, then he was turned around and led away by other officers. Cindy advised Hendricks to get a good Union rep; his actions here would also come under Internal Affairs review. Hendricks just said he had done nothing wrong, and walked out.\n\nCindy turned to Teresa, then to Amy. \"Hi Amy. I'm Teresa's friend. My name is Cindy. Let's go meet the Iron Crowbar, shall we? Yes, bring Buddy...\"\n\n* * * * * * * * * * * * * * * *\n\nThe party was well underway when I went to the front door. First came Cindy. Then came a teenage girl with a cocker spaniel in her arms.\n\n\"Commander, this is Amy and Buddy.\" Teresa said by way of introduction.\n\n\"Oh wow, the Iron Crowbar!\" Amy whispered, looking up at me.\n\n\"Yes.\" I said. \"Come on in, Amy.\" They came in and I closed the door behind them. Amy was looking around The Cabin as if it were a palace.\n\n\"Wow, what a nice house!\" Amy said. \"It's not like what I thought it would be.\"\n\n\"Well\" I said, understanding, \"us police officers live in normal houses, too. No bars on the windows. This is my wife Laura. She's a doctor, and I want her to check on you to make sure you're okay. In the meantime, we'll give Buddy a bath and some food.\"\n\n\"Hi, Amy.\" said Laura sweetly. However, it was clear that Amy was feeling skeptical: she was not willing to relinquish the dog.\n\n\"Okay, why don't you bring Buddy into the kitchen.\" I said. Fortunately, Mr. William Ross came up.\n\n\"Hello there, young lady. I'm William Ross, and I'm a farmer in Canada. I know a lot about animals, so why don't you come and help me give Buddy a bath, and I'll make sure he's healthy, okay?\" Amy looked at Teresa, who nodded. To reassure her young new friend, Teresa went with Amy and Mr. Ross to the kitchen.\n\nCindy said to me \"We busted Bryce. He wanted to kill the dog, and was willing to shoot Amy and Teresa in the process. It is possible that I whipped his ass in what you like to call 'personal combat' before arresting him.\"\n\n\"Oh, this is getting better every minute.\" I said. \"He was a Green Beret, you know.\"\n\nCindy looked up at me with something of a sneer on her face. \"Don, I don't want to burst the Army's bubble, but standard Green Beret tactics are so easy to beat, it's ridiculous.\"\n\n\"Well, for a double black belt like yourself, I'm sure they are.\" I said, then thought about it. Cindy was right... what I'd learned from Sergeant Tate of the ROTC cadre had indeed shown me that the standard tactics weren't so hot against a well-prepared opponent. And there was no opponent more prepared than the current Police Boxing Matches champion...\n\nPart 5 - New BFFs \n\nMr. Ross and Amy gave Buddy a nice bath, the water not too hot and not too cool. He came out a much cleaner dog. Then Mr. Ross fed Buddy some milk in small doses, telling Amy that Buddy would get sick if he ate too much, too fast.\n\n\"Okay, Buddy is clean, and we'll look after him.\" I said to Amy. \"Now it's your turn for a bath and a checkup.\"\n\n\"It'll be fine.\" said Laura. \"Come on up. I have some clean clothes for you, too.\" Still, it took Teresa going with Amy to get her upstairs.\n\n\"Wow.\" said Molly. \"Nice little girl.\"\n\n\"So she was running away from the Orphanage to feed her dog.\" said Joanne. \"That's so sad, but it's uplifting, too.\"\n\n\"What are you going to do about all this?\" asked Cindy.\n\n\"Oh, we'll see if Buddy and Bowser get along.\" I said. \"If they do, we can keep Buddy here and work out Amy visiting him. If not, then I'd be grateful if one of you could keep him. Teresa's allergic over time to dogs and cats in her home.\"\n\n\"So is Jenna.\" said Cindy.\n\n\"Oh, I can keep him.\" said Joanne happily.\n\n\"Okay, for the litmus test.\" I said. I went upstairs and got Bowser, who was in the kids room with the kids and my mom and Pamela Feeley. Bowser sniffed at me and seemingly recoiled in wonder.\n\n\"Okay, Bowser\" I said, \"let's go meet your new friend.\" With that, I took him downstairs, where Mr. Ross was drying off Buddy. I held Bowser as he and Buddy sniffed at each other. Then we put the dogs down. I was ready to grab Bowser if he attacked Buddy, but the dogs sniffed each other some more, started circling and sniffing each other's butts, then sort of settled down like \"What's next?\"\n\n\"They seem to like each other.\" said Mr. Ross. \"You'll have to do some training. If Buddy has been left alone, he won't be house-trained. You'll have to do some cage training for that, but he's a young dog and will take to it. And we'll have to watch them when feeding them, that's when Bowser might stake a claim.\"\n\n* * * * * * * * * * * * * * * *\n\nSome minutes later, Amy came down the stairs, looking very refreshed after her bath and new clothes. The clothes were a bit big on her, but it was all good. Laura told Teresa and Amy to go through the food line and eat, and for Amy to eat as much as she wanted to.\n\n\"How is she?\" I whispered to my wife.\n\n\"We'll talk later.\" Laura replied. \"She should stay here tonight and she can be part of Christmas tomorrow. After that...well, we'll talk.\"\n\n* * * * * * * * * * * * * * * *\n\nFeeding time. I put down two bowls, one with Bowser's meal, one smaller one for Buddy. Bowser did try to wander over to Buddy's bowl, but I took Bowser and put him back at his bowl, and told him to eat. After a couple of times doing this, Bowser seemed to get the hint, and ate his own food. Buddy wolfed his down, and Mr. Ross said it would be best to give him smaller portions more frequently.\n\nStill, Buddy improved tremendously. His eyes got brighter almost as I watched him, and he began walking around and exploring. I set Bowser down, and he began leading Buddy around. This looked like the beginning of a be-yoo-tiful friendship, I thought to myself.\n\nPart 6 - Paying It Forward\n\nWe'd had a Secret Santa gift exchange amongst the Detectives earlier in the week. My gift went to Teddy Parker, and it was a liner for his trenchcoat that he always wore. The gift for me came from Grubby Paul, who gave me a nice bottle of single malt Scotch.\n\nSo we weren't really exchanging gifts this evening. But Teresa had a bit of a surprise for us. She stood in the middle of the greatroom as we all listened.\n\n\"A while back,\" Teresa said, \"I was given a gift at this party, at the Old Cabin. It was a picture of me and my sister Alexis, but it was a whole lot more than that. I found out that I had a family that night, and that people had my back and stood up for me when I had no right to expect nor ask them to.\n\n\"So now I want to give a few gifts.\" Teresa continued. \"This one is for Cindy, my soul sister.\" She handed Cindy a wrapped gift, which was obviously a framed picture. Cindy opened it to reveal a picture of her, Cindy, throwing a disc golf shot at the course in Teresa's hometown.\"\n\n\"Ah, that's nice.\" Cindy said. \"And this is definitely the best part of that town, the disc golf course.\"\n\n\"I couldn't agree more.\" Teresa said. \"And this is for Don.\" She handed me bigger package. One of the items inside was a framed poster of the 250-foot towers at Ft. Benning, Georgia, with the \"Airborne\" word and wings beneath them. Another picture, the same size as Cindy's, showed me letting Carole drop the frisbee into the 18th hole basket at the end of our outing some time before.\n\n\"Aw, these are so cool.\" I said.\n\n\"I have one more.\" Teresa said. \"I thought I was going to wait on this one, but I think there's no time like the present. I received this necklace I'm wearing now from the Police in my old hometown.\" She pointed to the necklace with the Airborne wings that was on her neck. I could feel the emotion in the room.\n\n\"There are two necklaces.\" Teresa said. \"One was for my sister Alexis, who you all know died on Christmas Eve. So I think she would want me to pass this necklace along to another daughter of a Paratrooper. I know Carole won't really understand this now, but one day her dad can tell her the story, and she'll be proud to be the daughter of a Paratrooper, too.\"\n\nShe opened the box and took out the other necklace, and draped it around Carole's neck. Carole was being held by Laura. Laura said \"Carole, you're wearing a necklace like Teresa's. You look so pretty with it on.\" Carole smiled happily, then grabbed the necklace to see and feel what it was.\"",
        "\"Teresa, hold Carole.\" I said. \"Let me get a picture.\" Teresa sat down next to Laura, and Carole went to her. Teresa pressed her cheek to Carole's, and they displayed their necklaces as I took pictures of them. I would frame one picture for Teresa, frame one for myself... and frame one for Carole when she got old enough to understand.\n\nOther people took pictures, too. I asked Teresa and Amy to pose together, and Amy of course had Buddy be in the shot. This picture would find itself on Teresa's wall, also...\n\nPart 7 - Night of the Christmas Crowbars \n\nThe Rosses were in the guest bedroom of the house, and Molly was in the Master bedroom, with Ian in the crib. Amy was in the other guest bedroom, sleeping with Buddy. In the front room was a full hideaway bed; Pamela Feely was asleep on it. In the greatroom, the two sofas pulled out to become sort of futon-beds, enough for Teresa and Cindy to sleep comfortably on.\n\nI had been sleeping on a futon in the upstairs room, Carole with me, and of course Bowser next to the bed. Laura was in the basement on yet another hideaway bed, and she had Ross and Jim on a mattress on the floor, where they were comfortable and safe.\n\nI woke up Cindy, and told her to come with me. She was already pretty much dressed, and I was in my all-black ninja outfit and trenchcoat, Tilley Hat, and gunbelt with badge attached, of course.\n\nOfficers who were Jewish generally volunteered for Christmas Eve and Christmas Day duty. It was overtime (double time, actually) for them, and it allowed the Christian officers to be home with their families. It was the Duty Desk Sergeant, an older Sergeant named Abram, that called me at 1:30 am, December 25th.\n\nWhen we arrived at the Station, I saw what was going on. Sergeant McCombs was trying to take Brett Bryce out of the holding cell, and he was browbeating a young Patrol Officer.\n\n\"Listen, punk.\" McCombs was snarling. \"I am transferring Bryce to County Jail, now, tonight. You get the hell out of my way.\"\n\n\"Sergeant, I have orders to not let anyone take him out nor see him until morning.\" said the Patrol Officer, whose brow was shining with sweat, his voice almost shaking with fear.\n\n\"Listen, shit eater, I'm a Sergeant, you are not.\" said McCombs. \"Now you either do what I tell you, are you're up on insubordination charges.\"\n\n\"I'm not a Sergeant either.\" said a voice behind him. \"But we're about to find out just who is going to get jacked up, here.\"\n\nThe voice belonged to me, Your Iron Crowbar. I was standing in the doorway to the hall, at the ready, tapping the red crowbar in the palm of my left hand, more than willing and able to use it. I saw the young Patrol Officer almost collapse with relief. Sergeant McCombs had a hatred-filled look on his face.\n\nI was not alone, by the way. Cindy was right behind me, brandishing the blue crowbar. She'd already had her fun tonight, though... it was now my turn.\n\n\"I told you before, McCombs.\" said Cindy. \"I usually win the rank-pulling game. But this is the one guy who really wins, and I'm glad I'm not you right now.\"\n\n\"Yeah?\" said McCombs, facing us. \"What're you gonna do, beat me up with those crowbars?\"\n\n\"I'll put it this way, McCombs.\" I said. \"There is only one way out of that room... through me. So you can either spend the night on a mattress in the holding cell... or you can try to get through me.\"\n\n\"That's easy enough.\" said McCombs. He attempted to walk past me.\n\n*THUMP!*\n\nI swung the crowbar right at McCombs's head. He stuck his arm up to protect himself and I got him solidly on the shoulder. I then grabbed him by the collar and threw him back, then swung the crowbar at his knees, taking him out. He fell hard to the floor on his hip and ass, howling in pain.\n\n\"Maybe I didn't make myself clear, McCombs.\" I said. \"So one more time: you can walk into one of those cells, or you can try the stupid thing again. And this time... I might let Captain Ross take a shot at you. Sometimes she misses, though... she seems to hit guys in the balls when she swings. Is that not right, Captain?\"\n\n\"Who says I'm missing when I do that?\" replied Cindy. McCombs got up and walked to the holding cells. I secured him inside one.\n\n\"It'll be up to the Duty Desk to let you out.\" I said. \"After I've taken Bryce to County Lockup myself.\" I turned to the Patrol Officer. \"You did well to stand your ground, Officer Meir. If this jerk gives you any trouble at all, you call me directly and let me know.\"\n\n\"Yes sir.\" said the young Officer, still in shock. \"Thank you, sir. And I didn't see a thing.\"\n\n'Thank you for that.\" I replied. \"Have a good Holiday.\" With that, Cindy and I went and got Bryce, handcuffed his hands behind his back, then transported him to County Jail. Deputy Sheriffs would hold him in isolation and under guard, and there would be no chance to spring him loose.\n\n\"Sir,\" said Cindy as we were driving back to The Cabin, bringing up the subject that had to be brought up, \"what are you going to do about Lt. Croyle?\"\n\n\"Oh, plenty of time to get that all figured out.\" I said. \"But let me be clear, Captain. Her punishment is reserved for me, and me alone. You are not to do anything, nor even bring it up with her until I tell you to do so. Do I make myself clear, Captain?\"\n\n\"Crystal, sir.\" said Cindy. \n\n\"And we'll also figure out Bryce.\" I said.\n\n\"What about Amy, and the dog?\" Cindy asked.\n\n\"You know me, I'm a dog-lover, as is young Amy. We will figure it out, and for the good. After all, my dear cousin, it's Christmas...\"\n\nOnce back, I said \"Cindy, let's go onto the back deck.\" We did, and sat down on the metal loveseat, watching over the Town. It was the usual dots of light, with some extra reds, oranges and greens, it seemed.\n\n\"I was going to do this tomorrow,\" I said, \"but now seems like the right time. I just wanted to tell you that last Christmas you didn't know we were family, and while I had suspicions, it's only now I can say it openly.\"\n\n\"I just want you to know, ma cousine, that I love you.\" I said. \"As my partner in the Force, as my cousin, and just as a very special friend and person.\"\n\n\"Aw, that's sweet. I love you, too.\" Cindy replied, snuggling into me.\n\n\"So,\" I said, \"as I've come to know you, and trust you with my life, I think it's time for me to show that trust.\" I pulled out what looked like a necklace box. \"So Merry Christmas, Cindy.\"\n\nCindy opened it, likely expecting a necklace. Instead, she saw two metallic objects, shiny gold, with little buttons around the edges. One was a bug-detecting device; the other, a recorder-killer. Both like mine. The latest technology, the very best.\n\n\"Oh my God, is this for real?\" Cindy asked, stunned. She knew what this gift truly meant, and the total trust it implied.\n\n\"I was using one of these tonight, to kill the TCPD cameras so McCombs has no video proof of me kicking his ass.\" I said. \"Use these sparingly and wisely, but do use them when you feel you need to. And if you lose one or both, let me know immediately. I won't be mad, I promise, but we have to know.\"\n\n\"Of course.\" Cindy said. \"Oh wow, thank you, Don. Not just for the devices, but for the trust in giving them to me.\" She gave me a warm hug, which I returned.\n\n\"By the way,\" she asked as we got up to go inside, \"who gives these to you? Laura?\" I looked at her and shook my head.\n\n\"No, Laura does not know I'm giving you these. And don't tell anyone you have them.\" I said, then began grinning as I said: \"As to where I get them... well, it's probably best that I keep something from you.\"\n\n\"Oh, like you've never done that before!\" Cindy said, playfully slapping my arm, but grinning also.\n\nPart 8 - Christmas Day \n\nDawn, Friday, December 25th. Christmas Day. \n\nI went onto the deck. It was cold, but I heard the Catholic Church bells ringing, then the Presbyterian Church's bells. I saw a train come out of the western horizon, and I watched as its light came toward the River, then turned south as the train took the curve. As the light got a little better I enjoyed the sight of my Town appearing before me.\n\n\"Ah, good morning, Amy.\" I said. She had come out, holding Buddy. \"Merry Christmas.\"\n\n\"Thank you, Mr. Crowbar.\" she said. \"Merry Christmas to you, too. I think Buddy has to go to the bathroom.\"\n\n\"Okay, let me call Bowser down, and we'll let them go do their business.\" I said. I hurried inside, went up to the playroom, and softly called Bowser. He bounded up. I took him downstairs and set him down on the deck. Amy set Buddy down, and the dogs went along the side walkway, then down along the hillside trail.\n\n\"They'll come back, won't they?\" Amy asked, concerned.\n\n\"Yes, I think so.\" I said. \"The area is fenced, so they can't go too far anyway. But remember, sometimes you've got to let something you love go free. If Buddy comes back, he's yours. If not, he never was.\"\n\n\"Buddy's all I've got.\" Amy said. After a few moments, a white-yellow haired dog came back along the trail.... followed by a brown and white one. The relief and happiness on Amy's face was palpable.\n\nBack inside, we got ready to bring the kids down for Christmas. The tree was in the greatroom, against a window overlooking the deck. It could be seen if one looked for it, but the outdoor tree on a pole and wires that I'd constructed and set up was clearly visible to all the Town at night.\n\nAnd of course, it was a day of joy as Carole dug into her toys. Ross and Jim weren't quite as understanding, but they knew they had toys to play with. Ian... was happy with a bottle and going back to sleep. For myself, I was paying attention to the Rosses, seeing their happiness at watching their grandchildren as well as the other kids. And I was making observations...\n\nMeanwhile, Amy said to Teresa \"Thank you for rescuing me and Buddy last night. That was the best Christmas present I could have. I don't have anything to give you, but I'll find something.\"\n\n\"Aw, sweetie,\" said Teresa, hugging the teen girl, \"having you here with us is the best present I could have.\"\n\n\"By the way, you said something about your sister last night.\" Amy said. \"What happened? Is it sad?\"\n\nTeresa nodded. \"Yeah, it's sad. My sister died on Christmas Eve, when a drunk driver hit her car head-on.\"\n\n\"I'm sorry.\" said Amy. \"Maybe I can be your sister today, and that can be my present.\"\n\n\"That would be a great present.\" said Teresa. She hugged Amy again, who hugged her back, both trying and failing to hold back tears. And they weren't the only ones in the room with tears in their eyes. Both of the Crowbar-wielding people were misty-eyed, as well.\n\nAfter a minute, I said \"Okay, guys, you get in front of the tree so I can take a picture of you.\" They posed, then Cindy posed with them, then Amy asked me to pose for one with her...\n\n* * * * * * * * * * * * * * * *\n\nAfter breakfast, as everyone talked and played with the babies and the dogs, Laura asked to speak to me privately. We went onto the deck.\n\n\"Did you call the orphanage?\" Laura asked me.\n\n\"Yes.\" I said. \"I told them Amy was our guest. When they balked, I said they could play it one of two ways, that she was in police custody as a runaway after being found, or she was my personal guest at my home. They're not really happy about it, and said they'd talk to me about it when I bring her back tomorrow.\"\n\n\"That's what I need to talk to you about.\" said Laura. \"I'm sure you've noticed she's not totally well. Some yellowing in her eyes, pale skin, all that?\"\n\n\"I did notice, but I was wondering if she just needs some nutrition after being in that warehouse for a couple of days.\"\n\n\"I think she needs some tests.\" said Laura. \"I'm going to take her to my clinic in my office, give her a checkup, do some bloodwork. And she's not going back to that Orphanage until I say so, if I have to get a Court Order or bring in the entire CIA to keep her.\"\n\n\"Consider that my job, and consider it done.\" I said. \"But I'll let you tell her about needing the tests... and you should tell Teresa at the same time. But it can wait for awhile... let them have this Christmas, and each other as sisters.\"\n\nLaura agreed, then said \"And I suppose we now have another dog to take care of?\"\n\n\"Yes, yes we do.\" I said firmly. \"I told Amy I would take care of Buddy like my own family. And that is a promise I will keep.\" Laura could not argue with that...\n\nPart 9 - Epilogue \n\nSaturday, December 26th. It was 10:30am as I went into the Interrogation Room at County Jail and Third Precinct Headquarters. At the table were Patrolman Brett Bryce, in a prison orange jumpsuit, his lawyer from Gresham & Mason, P.C., and the Police Union rep as an observer.\n\nPatrolman Morton was keeping watch. Paulina Patterson came in with me. Cindy and Teresa were watching through the one-way glass. They'd wanted to come in, but I suggested that it would rile Bryce up, and to let me handle it.\n\n\"All right,\" I said, sitting down, \"we have you, Patrolman Bryce, for assault upon a police officer, actually two counts of that; drawing your service weapon when the situation did not call for deadly force; brandishing your weapon at other human beings when deadly force was not indicated; having a concealed and unauthorized weapon on your person while in uniform; and the all-encompassing making terroristic threats.\"\n\n\"Your Captain assaulted my client.\" said the legal beagle. \"Your Lieutenant was also armed; therefore it is very debatable whether nor not deadly force was needed.\"\n\n\"And the assault on my Lieutenant, and making threats to kill her, as well as a teenage girl armed only with a puppy?\" I said. \"By the way, Hendricks has already turned; his own official affidavit confirms what the other officers have said, and he added that Bryce made the threats even before everyone else got there.\"\n\n\"Hendricks will tell any lie to get his fat ass out of trouble.\" said Bryce, who had never invoked the Fifth, by the way.\n\n\"I dunno, when added to all the other affidavits, including that of the aforementioned teen girl at the scene,\" I said, \"it does not look good for you, Bryce.\"\n\nThe lawyer looked back at the Union Rep. \"This one is yours.\" said the Rep, somewhat to my surprise.\n\n\"Oh, that's right...\" I said, letting my face show considerable menace, \"you, Bryce, made a threat to kill a dog. And after what I said in front of the entire Police Force... And you just went and threatened to kill a dog, even tried to through two people. That means I'm feeling... personal... about it.\"\n\n\"What are you going to do?\" sneered the lawyer. \"Assault my client like your Captain did?\"\n\n\"No one else is saying my Captain assaulted your client.\" I said. \"In fact, it's the other way around, and even Hendricks is putting his sworn signature on that. But since you asked, Counselor...\"\n\nWith that, I pointed at the one-way glass. Sergeant Rudistan opened the door and peeked inside.\n\n\"Sergeant,\" I said loudly, \"I understand the Rodrigo-san got drunk Christmas night, and go into a bar fight. He might deny that, but we need to pick him up and hold him in here for 24 hours or so, until we get the story straight. Tell him he'll get three free meals... and tell him he'll have Patrolman Bryce as his cellmate.\"\n\n\"Yes sir, right away, sir.\" said Rudistan. He withdrew and closed the door.\n\n\"Okay, I guess that wraps this up for now.\" I said.\n\n\"Hold it.\" said Bryce, his face openly showing his fear. \"Let's cut a deal.\"\n\n\"What, are you crazy?\" yelled the lawyer. \"He's just trying to intimidate you! You know some moves, you can handle it!\"\n\n\"What, the standard Green Beret tactics?\" I asked. \"I hear tell those didn't work so well against my Captain. Oh, and as an aside, the Rodrigo-san is probably the one person in this County that even she fears. And I understand the Rodrigo-san loves dogs... almost as much as I do. Have a nice day, guys..\"\n\n\"Wait!\" said Bryce. Yes, he was scared shitless, I could tell as he looked at his lawyer and said \"Just keep your fucking mouth shut.\" Turning to me, he said \"What can I do?\"\n\nI slid a file folder with some papers in it. \"This is your voluntary resignation from the Town & County Police Force, effective immediately. Sign it, and the Rodrigo-san sleeps alone tonight.\"\n\n\"What else?\" asked Bryce. \"What about the charges?\"\n\n\"Oh, we're not even at those yet.\" I said. \"That can all be determined... after you resign from the Force.\"\n\nBryce looked over at the Union Rep. \"It's your call, Bryce.\" said the Rep. \"We're not going to step in on this one.\" I was astonished, but kept my face passive.\n\nBryce signed the papers, immediately making himself a former police officer.\n\n\"Okay, ADA Patterson,\" I said, \"You decide how much effort you want to put into this case.\"\n\n\"Well,\" Paulina said, \"if he agrees to a nolo contendere on the assault on police officer charges, and guilty on a weapons brandishing charge, which means no weapon carry and no concealed carry for at least ten years, then we can probably see our way to recommending probation for Mister Bryce.\"\n\nHe took the deal.\n\n* * * * * * * * * * * * * * * *\n\nMeanwhile, Dr. Laura Fredricson had given Amy a thorough examination, and taken some blood. She ordered tests, and a couple of those were done immediately. She looked at the results.\n\n\"Amy,\" she said, \"you're going to be staying at the Hospital for a couple of days, until these other tests get back.\"\n\n\"What's wrong?\" Amy asked.\n\n\"Just relax.\" Laura said. \"But tell me, you haven't been feeling well, have you?\"\n\n\"I've been tired, but I haven't eaten a lot.\" said Amy. \"I feel much better now.\"\n\n\"Well, I'd rather have you at the hospital for observation until the tests get back.\" Laura said. \"It may not be much, or there may be a problem. But we'll work it out.\"\n\n\"How...\" Amy said, looking scared, \"how do I pay for this? And what about Buddy?\"\n\n\"Don't worry, it's on me for now.\" Laura said. \"And Buddy is staying with my family, so don't worry about him.\" She called in her assistant Gayle, and gave instructions to call the Hospital to prepare to admit Amy as her patient.\n\nAs Amy got ready to go, Laura texted her husband...\n\nFinis... pour le moment. "
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "christmas",
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/teresas-christmas-story-redux"
}