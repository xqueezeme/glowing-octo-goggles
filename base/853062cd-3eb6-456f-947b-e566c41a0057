{
    "title": "A Little Bit of Death",
    "pages": [
        "I could feel her warm breath on my face. Even with my eyes closed and just coming out of a dead sleep, I could tell we were almost nose-to-nose. I slowly opened one eye and confirmed what I already knew. Light reddish-brown hair, big green eyes, and a small nose, is what I saw before immediately closing my eye hoping against hope she hadn't seen it\u2014no such luck, I'd been caught.\n\n\"Daddy, I know you're awake. I'm hungry,\" my daughter, Tina Marie, said, lying on my pillow next to me. She had the strangest habit of coming into my bed in the morning, lying down on my pillow and watching me until I would wake up. She has scared the hell out of me on more than one occasion. Do you know what it is like to open your eyes and see someone staring back at you? The first time she did it, I almost had a heart attack. Now it was just something I kind of grew to expect. I'm not saying I liked it, but what was I going to say to her, \"Don't do that anymore?\" Like that would have worked?\n\n\"I'm still asleep,\" I said in a soft raspy voice, which was about all I could muster. \"Wake me in an hour, then we'll have breakfast.\"\n\n\"Daddy, you've got to get up,\" she said, now kneeling on the bed pushing at my still sleepy body. \"You promised to take me shopping today, remember?\" Stressing the word remember.\n\n\"I thought your grandmother did that?\"\n\n\"She only bought me underwear and stuff like that. She said it was high time you learned how to dress a girl. Daddy, please, get up,\" she demanded. \n\n\"Thanks, Mom,\" I said quietly under my breath, while my daughter kept trying to rock me awake. On the next push I slipped my arm under her stomach and rolled her over onto her back. \"It looks like someone needs a Stomach Claw,\" I said, tickling her stomach and sides. \"Oh no, not the Vulcan Death Grip!\" I shouted, grabbing both her sides. Laughing joyfully, Tina tried to get away from my craziness.\n\nYou see, a million years ago my dad and I used to watch professional wrestling on television. There were these two wrestlers, one of whom would do what was referred to as The Stomach Claw and the other did the Vulcan Death Grip. Both were basically the same wrestling move. The wrestler would grab his opponent, make a move to get him on his back, and then in front of a screaming crowd, he'd grab his opponent's stomach or sides with both of his large hands. It was all staged but the announcer played it up to the hilt.\n\n\"Oh no, not the Stomach Claw,\" the announcer would scream, and the camera would pan to the wrestler with an intense and horrific look on his face. His opponent's face would be all contorted, as if in excruciating pain, all the while slapping the mat with his hand at which time the attacking wrestler would release him, then stand up and parade around the ring. The referee would hold the gloating wrestler's hand up over his head designating him the winner. It was so fake, but my dad and I loved it. \n\nWe would be wrestling around on the living room floor, when he'd grab me and say, \"Oh no, not the Stomach Claw,\" then tickle me until I was about to pee in my pants. My mother would try her best to put a stop to it, but that never seemed to go the way she wanted.\n\n\"You two are going to wreck something, and I'm going to be very angry,\" she'd yell, chastising us both. Did it work? Not a chance. My dad usually ran after her while she continued to yell, \"Vic, I'm warning you.\" So he would tickle her instead of me. Afterwards they would kiss and hug, followed by my dad giving her a swat on the ass. They were in love.\n\nMy dad was career Navy. Although they lived in the Midwest, five years after they got married my dad joined the Navy. He was gone a lot, being a mechanic on a destroyer, which he called his tin can. The first couple of enlistments my mom traveled from base to base, following my dad whenever he'd get transferred. However, after twelve years she found a small house in Minneapolis close to her parents. She got tired of not having any roots and wanted a place to call home. My dad was gone a lot but when he did come home, it was Christmas, Thanksgiving, and the Fourth of July all rolled into one.\n\nIt wouldn't be the type of life I'd want, but it worked for them. I had a sister, Jenny, who was ten years older than me, and a brother, Tommy, who was just over eight years older; I guess you could say I was the oops child. They were supposedly done making babies, but my dad came home on leave, guess one thing led to another and that's how I came into the mix. It shocked the hell out of the two of them, especially since they had given away all of their baby stuff years ago.\n\nAfter I was born my dad came home as often as he could. And after his next four-year enlistment, just as he had promised my mother, he packed it in after doing nearly twenty-five years. He got a job as a large engine mechanic, and life at home over the next ten years was pretty normal. Jenny finished school and went on to college for a couple of years before marrying herself a doctor. Tommy wasn't much for school, but procured a good job working at a corrugated box plant. He was making decent money, moving up the ranks, and finally marrying his high school sweetheart. Me? Well, at sixteen I had the world by the tail. I had somehow made the varsity football team as a sophomore, procured me a beautiful girlfriend, and a bunch of friends. Like I said, life was good. Then my world took an ugly twist.\n\n\"We are moving to Florida,\" is how my dad phrased it at a Sunday dinner when the rest of the family was there. Sadly, our family no longer included my grandparents. My mother's mother and father both died several years back. \n\n\"What?\" is kind of how we all reacted.\n\n\"I've been offered a good job at the naval shipyard in Jacksonville, Florida. I'm sick and tired of all the snow and cold weather during the winters here. I want to be warm for a change. Hell, who wouldn't want to move to Florida if they got the chance?\"\n\n\"Me!\" was the first thing out of my mouth. I gave him all the reasons I should stay, even begging my mom to let me live with Tommy and his wife until I graduated high school, but it made no difference, especially to Dad.\n\n\"Steve, it's not the end of the world, for goodness sakes. Think about it, sun, sand, and the beach, it doesn't get any better than that,\" my dad said, trying to convince me it was the right move. I didn't like it, but in the end I didn't have a choice. \n\nCultural shock is the only way I can describe it. Jacksonville was not Minneapolis, and although it wasn't all that bad, I really missed my friends back in what used to be my hometown. The ocean and beach were nice, but the kids weren't nearly as friendly as the ones I'd left behind. When I went to the beach there was enough flesh showing I think I walked around with a constant hard-on for the first three months. That made Florida more bearable.\n\nWhen they told me I talked funny, I just looked at them thinking, \"I talk funny?\" It was like I had just stepped into the movie Deliverance with Burt Reynolds. When I made the football team my junior year that made a big difference. Everything, it seemed, revolved around football in one way or another. I got my first experience that year at just how big a rivalry could be when the Georgia Bull Dogs played the Florida Gators in Jacksonville. Hell, they shut down the high schools early so we could go to the rally downtown. Like I said, they take their football seriously in the south.\n\nEven within the state itself there were rivalries. The Miami University Hurricanes, University of Florida Gators, and the Seminoles from Florida State, all were in the football top ten every year, and the times they played one another, watch out. \n\nSenior year I got an early Christmas present\u2014my brother and his family moved down south to be with us. My dad helped get him a job at one of the paper plants. Although he wasn't making quite as much money, the lower cost of living, and no state income tax more than made up for it. We were almost a family again.\n\nA twisted knee my senior year ended my football career, what there was of it. Luckily my grades were good enough so I could go to any college I wanted. I ended up at the University of Florida. I was now a Gator.\n\nI loved college life. But as my dad put it, \"You're there for a reason, and I'm not paying good money for you to party.\" That was the lecture I got every time I came home. Let's just say I did him proud and leave it at that.\n\nI dated on and off throughout college. In my senior year I was really stuck on a girl named Connie. I was starting to think it was getting serious until she got a job in New York, which finished it for me. So I just dated a little, got a job with a large insurance company back home in Jacksonville, and life went on. Family, work, football, and casual dating filled my days and nights. I bought a small condo in a part of Jacksonville called Arlington. It was only a few miles from the beach. I had the bachelor pad I always thought I wanted. \n\nWhen my brother Tommy's youngest daughter, Christie, was in a school holiday play, it was a non-issue we'd all be there for opening night. Though on a Friday night it was the last place in the world I wanted to be. \n\nMy mom said the play was cute. I just thought it was two hours of my life I'd never get back. We all went backstage to get his daughter, that's when I met her elementary school teacher. Lana Jean Collins was her name and she was something else. There were a couple of dozen kids screaming, laughing, and begging for her attention, while she did her best to take care of everyone's issues, or tried to anyway.\n\nChristie came running out of the dressing room. \"Dad, wasn't I great?\" She was beaming. \"Come over here, you've got to meet my teacher,\" she said, dragging my brother across the room. \"Ms. Collins, this is my dad.\"\n\nShe stretched out her hand, saying it was a pleasure to meet him and what a wonderfully talented girl his daughter is. Christie then proceeded to introduce her teacher to our entire clan. When she got to me, I shook her hand, and I guess I forgot to let it go\u2014I couldn't take my eyes off her.\n\n\"Steve, you can give her hand back to her whenever you're finished with it,\" my brother said with a laugh. It was only then that I realized I still had her hand in mine. I think I turned a dozen shades of red, stumbling over some type of apology before releasing it. \n\n\"No problem,\" she said, smiling at me. \"But since I'm right handed I'm going to need it for at least a little while longer.\" \n\nWe all said what a lovely play it was, and hoped to see it once more this weekend.\n\n\"Kind of nice looking, isn't she?\" my brother asked, walking out to the parking lot with me. \"And single too I understand, but I guess you already noticed she wasn't wearing a wedding ring, seeing as how you couldn't keep your eyes off her.\"\n\n\"She's all right, I guess,\" I shrugged. My noncommittal reply obviously fooled no one. My mom snickered elbowing my dad, telling him that's exactly what he had said about her.\n\nShe was more than all right, at least in my book. Her strawberry blonde hair shone under the stage lights, and her deep green eyes had put me into a damn trance. I couldn't take my eyes off them. I didn't have a chance to look at the rest of her but would the next time we met, and there would definitely be a next time.\n\nI went to that play again on Saturday night, followed by the Sunday matinee. I made it a point each time to go backstage with Tommy after each performance to pick up Christie, hoping to catch another glimpse of her teacher, Lana. \n\n\"Steve, you must be a real play junkie,\" she said, with that singsong southern twang in her voice. She was a real southern belle, born and raised in Alabama, Bama as she called it. Sunday I made my big move.\n\nChristie came out of the dressing room just as I started talking with Lana. I quickly asked her if she was doing anything later that night.\n\n\"The only thing I want to do tonight is get off my feet, slip into a hot bath, and forget about this long weekend. Why don't you ask me some other time when there isn't so much going on?\" I wasn't sure if this was a brush off, but tonight wasn't going to happen.\n\nIt was almost three week later before I took another shot at her. I figured after the holidays things would have slowed down a bit, so I looked up her number and tried again.\n\n\"Lana, this is Steve Moore. We met at the holiday play, I'm Christie Moore's uncle.\" There was a short pause. Then.\n\n\"I remember you. You came to all three performances, and if my memory serves me right, you asked me out on Sunday.\"\n\n\"At least I was memorable.\"\n\n\"That you were. What can I do for you?\"\n\n\"Well, if you're not busy this weekend, maybe you'd like to go out to dinner or catch a movie or something?\" God I hoped I wasn't sounding too desperate.\n\n\"That would be lovely. What kind of food do you like to eat?\"\n\n\"Almost anything.\" I'd never really been asked that question before. \"Why don't you pick the restaurant?\"\n\n\"You sure about that? \" Now she was starting to scare me. How bad could it be, food is food, right? No, wrong. Being from the Midwest grits wasn't normally on my menu. Hell, I'd never even heard of grits before we moved south. Cream of wheat was as close as I'd ever come to it, and don't get me started on greens or hog jowls. I guess there were a few items I didn't like to eat, and over the period of three weeks I found out two other things: one, I really liked Lana, and two, she was a southern girl through and through who liked down home southern style cooking. How she stayed as thin as she did I'll never know.\n\nLana was a shade under five feet six inches and topped the scales at a hundred and twenty pounds fully dressed. She didn't have big boobs or a round booty, but what she had was more than all right with me.\n\nOn our fourth date we went to a church dance, we were the chaperones. We'd talked a little about religion, her being a Southern Baptist and me being Catholic. To me it wasn't an issue, but to her religion was a big part of her life. I'd stopped going to church years ago when I was too old to get in trouble for skipping mass. Lana, on the other hand, never missed.\n\nIt didn't take me long to realize why she was still single. She let it be known from the get go there was going to be NO SEX before the honeymoon, and I do mean none. There was kissing with and without tongue and hugging with clothes on, but you could forget about petting, any oral, and don't even think about bringing up the word intercourse. I was getting frustrated, but I was handling it, in a manner of speaking.\n\nAfter our sixth date I brought her home for one of our Sunday family dinners. Dad was barbequing chicken breasts on the grill and Mom and Tommy's wife, Ruth, were in the kitchen making potato salad and baked beans.\n\n\"Steve, why didn't you tell me everyone was bringing something. I could have made something,\" she said, looking at me a little cross. \"Mrs. Moore, I never would have come empty handed if I'd known. At least let me help you while Steve helps your husband.\" My mom looked at me and smiled. Lana continued, \"Mrs. Moore, you have a lovely home. The next time I'll make sure we bring something to share,\" she said, glaring at me before I could totally escape. I guess I was dead meat. \n\nI left for the sanctuary of the back patio. I simply never thought about bringing anything. I never brought anything.\n\nAfter dinner the women were talking amongst themselves, clearing the table, and putting the food away, so Dad took Tommy and me out back for a cold one.\n\n\"Looks like you've got a live wire,\" Tommy said with a snicker. \"And I can't wait to see what she brings next time.\"\n\n\"Hey, she's a great cook. A little too country at times, but she hasn't poisoned me yet,\" I responded, valiantly defending my girl.\n\n\"Well, your mom likes her, that I'm sure of,\" my dad said, finishing his beer. \"So unless you like this girl a lot, I'd keep her away from your mother because you know how she get's when she likes someone. Hell, I thought she was going to dump you for Connie before she left for New York. She has a habit of adopting people she likes.\"\n\n\"Dad, I really like this girl a lot, but she's really religious and more than a little conservative.\"\n\n\"Conservative?\" my dad asked.\n\nBefore I could answer Tommy put in his two cents worth. \"Dad, that means that Steve hasn't even gotten beyond first base yet, and by the sounds of it, isn't going to any time soon.\" He laughed, but my dad didn't.\n\n\"Steve, if you're just looking for a piece of ass I don't think this is the girl for you. I think this one is looking for something permanent, if you know what I mean.\"\n\nThat's how Lana worked her way into my heart and my mom's. On more than one occasion, after a disagreement with Lana, my mom would bluntly tell me that if I screwed this up she would never forgive me. \n\n\"In that case Mom, why don't you marry her instead of me?\"\n\n\"Don't get smart with me young man, you're not too old for a good ass whipping.\"\n\n\"Mom, you've never in your entire life given me an ass whipping,\" I said, grinning at her.\n\n\"Well, it's not to late to start.\" I could hear the agitation in her voice.\n\nOnce, during a family dinner, both my mother and brother were giving me unsolicited advice concerning Lana. \n\n\"Everyone needs to back off and let him make his own mistakes, that's the only way he's ever going to learn,\" my dad piped in, looking at my mother and brother.\n\n\"Yeah, let me make my own mistakes,\" I replied, glaring back at everyone with a little disdain. \n\n\"Yeah, let my little brother screw it up, and then when he crashes and burns, we're just going to have to pick up the pieces and put him back together.\"\n\n\"I'm not going to screw it up!\" Well, I wasn't planning on it, anyway.\n\nWe dated for almost eight months before she'd even let me have the serious conversation I'd tried to have with her for the last two.\n\n\"Lana, I'm in love with you. I want to plan my future with you in it.\"\n\n\"Steve, we hardly know each other.\"\n\n\"I know all I need to know.\"\n\n\"What's my favorite color, my favorite food, my mother's madden name?\" she replied all too quickly.\n\n\"Royal blue, stuffed pork chops, and not a clue. But, we have the rest of our lives to find out the other answers together. \n\nI took me two months, and a little help from my mother, to convince her I was serious and deeply in love with her.\n\nI thought about all the cute ways I could ask her. Wrap up the ring in twenty boxes, put it in her glass of wine, or set it on the top of her dessert at a fancy restaurant. None of them felt right so I just came right out and asked her, ring in hand, at our favorite Mexican restaurant.\n\nWhen she said she needed time to think about it I was crushed. That night I walked her to her parents' front door, got a great kiss goodnight, turned around and started slowly walking back to my car, trying to figure out what my next move should be.\n\nFrom over my shoulder, and before I could even turn around, I heard Lana call out, \"I've thought about it, and yes, I'll marry you.\"\n\nI bridged the distance in three steps, grabbed her, and swung her around on her parents' front porch, gushing that she'd made me the happiest man on earth.\n\n\"Just because I've said yes, don't you even think about what I know you're thinking about, Mr. Steven Moore. I'm coming to our marital bed pure as the new fallen snow. You understand?\" I understood, but wanted it to happen as soon as possible.\n\nWeddings don't happen overnight, not with Lana, her mom, and my mom planning them. There seemed to be a million details to work out, not the least of which was the honeymoon.\n\n\"Steve, just nod your head yes when they ask you a question, and we'll all get through this with as little pain as possible,\" was the advice my dad gave me. \"If she asks if you've got any second thoughts say no, even if you do. And remember, she's always going to be right from the moment you say 'I do,' so learn to live with that fact.\" I started to say something but he stopped me cold. \"After over fifty years of marriage to the same woman I must have done something right, just believe me when I tell you your days of being right are over.\" He smiled. I started to get worried.",
        "The wedding was in a rose garden, by a lake, not far from her parents' house. Our vows were exchanged in a gazebo that was covered with flowers. Her Baptist minister uncle married us, even making us write our own vows. \"Tell her what's in your heart, not just what you think she or the rest of us want to hear.\" \n\nPerfect, is how it all turned out. My dad shook my hand, my mom hugged me, my sister told me to go slow on our wedding night, and my brother punched me in the arm, telling me that for once I'd done something right.\n\n\"Screw this up and you'll have me to answer to,\" he said, as Lana and I got into our car to leave.\n\nI refused to tell my new bride where we were going on our honeymoon. The only thing I told her was that it was going to be warm and to bring a lot of casual clothing. I'd saved up more than enough money for what I wanted to do, and that was to have her totally to myself for an entire week. \n\nThe resort was on the far west side on the island of Cabo, a tiny island in the tropics. And when I say tiny, it was only three miles long. It had eight huts on each side of the island, each strategically placed in such a way that even looking out when we were on our deck, we couldn't see any of the other huts.\n\n\"How did you find this place?\"\n\n\"On the Internet you can find anything if you know what you're looking for. I just typed in romantic isolated Caribbean getaways and this, along with twenty other locations, came up. I narrowed down my choices to three and finally picked this place.\" I relayed this to her while looking at the ocean from our deck holding on to my new bride's hand.\n\n\"Well, Mr. Moore, you outdid yourself.\" She wrapped her arms around me and kissed me passionately. \"Now, if you don't mind, I'm a little tired, think I'll turn in.\" I was a little shocked to say the least. With a stunned look on my face, I watched her walk into our hut\u2014alone. Turning back around she smiled. \"Well, husband, are you going to stand there all night? After all, this is our wedding night; or maybe the morning after,\" she said, looking at her watch.\n\nI'd like to say it was the hottest sex of my life\u2014it wasn't. I'd never been with a virgin before, so I took my sister's advice and went slow, maybe too slow. After enough foreplay to get her hotter than she'd ever been before, it took me almost five minutes to get inside her. If I said that she was tight, that would be one hell of an understatement. I got her off the first time with my tongue and the second time when I finally got inside. If she hadn't been producing enough lubricant to float a battleship, I would have lost the top two layers of skin off my dick.\n\n\"That was worth the wait,\" my bride said, hugging and kissing me. \"Is it what you thought it would be?\" What the hell was I going to say? No fucking way? \n\n\"Hon, making love with you tonight was something I've never experienced before.\"\n\n\"That's good, right?\" she said, sitting up in bed.\n\n\"Not good, great.\"\n\n\"Steve, I know I'm not as experienced as the other women you've probably been with, but I'm excited to learn all about what you like to do, and experience all the things I've dreamed about all my life. So, I may be inexperienced, but you'll find I'm a fast learner.\" \n\nShe smiled, jumped off the bed, and ran over to the small refrigerator. Grabbing a bottle of champagne and two glasses she jumped back into our bed. Pouring two large glasses she handed me one.\n\n\"To us, may our love do nothing but grow.\" She sloshed down about half the glass before coming up for air as the bubbles tickled her nose. \"I'm sure as hell glad we don't have to go anywhere. Tonight I want to drink this entire bottle, and make love to you until neither one of us can walk.\" And that's just what we did.\n\nFor seven days we slept, walked on the beach, and best of all made love. I'm glad my sister had given her the 'Lovers Set' from KY because after four days going non-stop, even I was getting a little sore.\n\nLife for the two of us was what I'd dreamed it would be. She got off work at three-thirty, so she was always home waiting for me when I walked through the front door. I never tired of her jumping into my arms, kissing me, and asking me what kind of day I'd had. Even if it had been a horrible day, having my bride in my arms made any problem I had miraculously go away.\n\nAlmost two years to the day we got married, Lana surprised me one night when I got home. She was in a sexy outfit\u2014of course everything she wore made her look sexy\u2014with a bottle of champagne in her hands. Pouring two glasses she gave me a kiss that would have brought the dead back to life.\n\n\"This will be my last glass for a while,\" she said, downing it in one gulp and tossing the plastic glass over her shoulder. \"So, if you'd like to take advantage of this thin body of mine you'd better hurry because soon we're going to have to work around what I anticipate could be a pretty big bump.\" I still wasn't getting it. \"Earth to Steve,\" she said, kissing me for the tenth time. \"Think about it. What happens when a condom breaks like that one did last month?\"\n\n\"Oh my God, you don't mean..?\"\n\n\"I see you now get that we are going to be three pretty soon.\" She smiled. I chased her into our bedroom. At least we wouldn't have to worry about birth control for a while.\n\nMy mom went nuts, like I knew she would. My dad just said life, as I have known it, was coming to an abrupt end.\n\nTina Marie was seven pounds three ounces and had a thick head of light brown hair. After twenty-two hours of labor, I didn't think she'd ever come out. I was there for the whole thing and even got to cut the umbilical cord. I was tired, but Lana looked whipped. Tina was the most beautiful baby girl in the world. And that's exactly what I told anyone who would listen. Luckily for the two of us, Tina started sleeping through the night after the first month. Maybe this won't be too bad I thought, until my dad gave me a little insight.\n\n\"Steve, a baby changes everything, so you'd better get used to it. Your days of doing anything you want, when you want, are now officially over. With a little one you'll have to plan to go everywhere.\" I told my dad nothing would change much. He laughed\u2014he was right, I wasn't.\n\nNothing was ever easy or simple again. Just going over to visit with my parents was an ordeal. Food, diapers, two changes of clothes, was just the half of it. We now kept a bag packed with essentials in case we needed to go somewhere in a hurry. It got better, just not before Tina reached the ripe old age of five. Even though it was a pain in the ass at times, I wouldn't have given it up for the world.\n\nMoney was pretty tight for a while, but with us getting raises over the years, life wasn't too bad for the three of us. Our schedule centered around the school calendar year, and although Lana had summers off, it wasn't like most people thought.\n\nPeople who think teachers have it made should walk in their shoes for one year, and then they'd know what it's like to educate their sons and daughters. Lana worked one week after the kids left for their summer vacation, and went back a week before the students returned in the fall. That's the way the contract was written, but she always worked many days on her own getting ready for each new school year. \n\nAnd, no matter what you've heard, they don't get a paid three-month vacation in the summer. Their vacation is less than two months. I know lots of business people who get more vacation than that. Teachers get paid a yearly salary for the actual days they work which is divided up by the month, so they get their last paycheck a couple of weeks after they leave for the summer and don't get another one until they've been back for two weeks. And don't get me started on how little they are paid. Lana and I felt the crunch of those meager paychecks often.\n\nThen suddenly our life took a turn. I remember it like it was yesterday. It was April and we were coming up on eight years together. Lana caught a cold that she couldn't shake. It started out like any normal common cold, but then went into bronchitis-like symptoms. She went to the doctor she'd been going to see since moving to Florida as a kid. He was a general practitioner in a clinic with two other doctors. I think he did more reminiscing than doctoring during her first visit. He prescribed an antibiotic and some strong cough medicine. He told her to take it easy for about a week. After a couple of weeks when she didn't seem to get better I started to get concerned.\n\n\"Hon, you should go back to the doctor and get checked out again,\" I told my stubborn wife.\n\n\"Steve, it's just the start of a summer cold that's all. I used to get them all the time. If it doesn't get better soon, I'll go back and get checked out again. The only time it really bothers me is when I lay down to sleep at night.\" \n\nShe did get better after a couple more weeks, but still had a dry, throat-clearing cough that hung on. Finally, after badgering her to death, she went in and the good Doctor James prescribed some codeine cough medicine this time. As strong as it was, no one would be able to cough with that stuff in their system. She again got better but was still tired. I found out much later she also had body aches on and off.\n\nThat summer we had the greatest summer vacation ever. A good friend of mine had a condo on the beach with a twenty-two foot speedboat docked in a marina on the intercoastal waterway. He gave me a great deal. We frolicked in the surf during the day, and most afternoons I took them both out for rides up and down the coast. Lana screamed I was going to kill us all, while our five-year-old daughter yelled to go faster.\n\nWe cooked and ate breakfast and lunch in the condo. However, I made it a point to take everyone out for dinner at night. There were plenty of restaurants in the area; most were reasonably priced and not very busy in the mid-summer months. Hell, the snowbirds wouldn't hit for another six to eight weeks.\n\n\"We should buy a place on the beach,\" Lana said wistfully, cuddling up to me on the balcony one night, looking out at the ocean. We could rent it out during the height of the tourist season, and use it ourselves the rest of the time. Then when we retire, we could live there because it will already be paid for.\" It was a nice dream and I gave her the task of checking it out. \"You really mean it?\"\n\n\"Sure, why not? But I think you're going to find everything is a little out of our current budget.\"\n\n\"Well, it doesn't have to be anything plush like this. All we really need is a two bedroom, one bathroom place, with a kitchen and family room of some type.\"\n\n\"You look at what's available, and I'll push the numbers, but right now there is something else I'd like to push your way.\"\n\n\"Sir, are you propositioning me? You do know I'm married and love my husband to death?\" she said in her twangiest southern drawl.\n\n\"Well, little lady, I've got this problem, and I know you're just the woman to take care of it for me.\" I put her hand on my crouch.\n\n\"Mr. Moore, are you trying to corrupt me?\"\n\n\"I believe I've already done that, just want to see what you've learned.\" Lana always said she was a fast learner. I was the happiest man on Earth. I had the most beautiful woman in the world, a daughter that made my heart skip a beat, and a life most men dream of. In three words, I was lucky. \n\nWhen Lana's cough came back Dr. James was out of town, so one of the other doctors in the clinic saw her. He gave her two more refills of her cough medicine and put her on another round of antibiotics, something called a Z-Pack saying this would knock out anything she had in her system. That lasted almost three months and then we went through a week of her sleeping sitting up.\n\n\"Enough, already!\" I told her one Monday morning when school was closed for some holiday. \"We're going to the doctor and get this taken care of once and for all. With my daughter staying with my mom, we headed out to the same stupid clinic. \n\nMondays are the worst day of the week to see a doctor, especially if you don't have an appointment and there is no school. Two hours later we were ushered into an examination room where we waited another half an hour before the third doctor in the practice finally honored us with his presence. \n\n\"What seems to be the problem, Mrs. Moore?\"\n\n\"She's had the same damn cough on and off for the last five and a half months. The codeine cough medicine that was prescribed helped, but it came back as soon as she ran out of it.\" He looked at me and then at Lana.\n\n\"Why don't you hop up here,\" he gestured to the examination table, \"and let's take a listen.\" He listened to her chest, front to back, asking her to breathe deep and cough for him. He then took another look at her file. \"There is something there and it could be pneumonia, but I'm not sure. Just to be on the safe side, I think we'll get a couple of chest x-rays.\" I was starting to feel a little bit better. They were now treating her instead of just pushing drugs. \"Get with the receptionist and she'll set up the x-ray.\"\n\n\"You don't do them here?\" I asked.\n\n\"Not any more. The x-ray center is just across the street. Most of the time you can just walk in and have it done. Have my receptionist call for an appointment just in case.\" \n\nIt didn't make any difference because we weren't going to leave until we got one done. An hour and a half later, we were headed to Walgreens to fill two more prescriptions. It was four thirty before we finally got home. We had spent the entire day going from clinic to clinic, but maybe now we will find out what she had.\n\nAnother set of x-rays, a mammogram, an ultrasound, and an upper body MRI rounded out Lana's tests the following week, yet we knew little more than we did two weeks ago. When the doctor wanted to schedule a consultation with another doctor, a specialist, to go over all her test results, I lost it.\n\n\"We're not taking another test or seeing another doctor until you tell us what's going on, do I make myself clear?\" I wasn't trying to be being an asshole; I was just tired of being jacked around. \n\n\"Mr. Moore, we just want to be one hundred percent sure before we say what we think it is,\" the doctor said, without any emotion in his voice. \"There are two different kinds of masses, one in each breast that were detected on your wife's mammogram and confirmed with the ultrasound. The x-ray detected another in her lower right lung. We just wanted to get all the test results back before we said anything. However, the only way to be one hundred percent sure is to do biopsies to confirm our diagnosis. We need to talk with the radiologist who will perform them.\"\n\nDr. Patro saw us at ten-fifteen Wednesday morning. He looked at all the tests and agreed we needed to do the procedures. They would perform the biopsies on both her breasts and her lung the same day. Immediately following the lung biopsy she would have another x-ray of her right lung. \n\n\"Mr. and Mrs. Moore, it's a simple procedure where we take core samples from each mass in the breasts and in the lung and send them out for analysis. The procedure will take about an hour and a half since we are doing all the procedures at the same time. After the biopsy she will need to have a lung x-ray to ensure we got the right spot. We should have all the test results back within five days. \n\n\"Can you do it today?\" I almost shouted at him.\n\n\"Not today, but this week for sure.\"\n\nFor the next two days we were both a wreck. I tried to stay positive and put on a brave face for my wife, but it was hard.\n\n\"Honey, it's probably nothing. One's probably a cyst, and the other is just scaring from your pneumonia.\"\n\n\"What if it's cancer?\" I could hear the fear in her voice.\n\n\"No one has said anything about cancer.\"\n\n\"But Steve, what if it is?\"\n\n\"Well, we'll deal with it when we get the test results.\"\n\nIt took most of the morning to do the biopsies and have the x-ray. I wanted to be in the room just to hold her hand, but they told me it would be too crowded with everyone else who needed to be in there. So I sat in the procedure waiting room praying that it wasn't what we both feared. She came out from the biopsy before going to have the x-ray still in her gown, holding a bag of frozen peas on each breast.\n\n\"How did it go? Did it hurt?\"\n\n\"I felt a little pressure, that's about it. They took four to five samples from each area and we should know in three or four days.\" I was able to go with her to the x-ray room, but again had to wait outside the door.\n\nNeither one of us wanted to address the issue, especially when Tina was in the room. Though I was optimistic, I couldn't help thinking about what we'd do if the tests came back positive. After two days I was nuts and Lana? She paced nonstop at home, and how she was handling it at school, I couldn't imagine.\n\n\"Why can't they just give us the results over the phone? Why do we have to go into their office? This can't be good,\" my wife said, almost in tears.\n\n\"Hon, they said they wanted the doctor to go over the results with us. That doesn't mean it's bad news, just standard procedure.\" Now I was expecting the worst, and praying with all my might I was wrong.\n\nThere was a lot of crying five minutes after the doctor joined us in his consultation room. He patiently waited until my wife settled down and got control of herself. He'd probably gone through this hundreds of times before.\n\n\"Mrs. Moore, it's bad but it's curable,\" which brought on another crying spell. It was ten minutes before he could start again. \n\nShe had two different types of cancer, one type in her breasts, the other a more aggressive type in her lung. There was no way to tell for certain exactly how long either had been growing, but it had been a while. We talked about the surgery, the recovery, and the chemo and radiation she'd have to endure afterwards.\n\n\"We're going to be as aggressive as the cancer is, and make no mistake, we will beat this.\" I was glad he was so optimistic, someone had to be.\n\nWe made the appointment with the surgeon for the following Friday. We were told the rest of the appointments would be made a couple of weeks after the surgery took place. The only thing that remained was to tell our daughter.\n\nTina understood as much as five and a half year old could. Though we kind of white washed the severity of Lana's condition and stage four was never mentioned, we didn't make it sound like a walk in the park. However, we didn't give her all the details, either. She had questions, most of them dealing with what would happen afterwards, and what she could do to help. This was now a family affair.\n\nI didn't make love to my wife that night. I just wrapped my arms around her, pulled her in tight and held her as she let it all out, offering as much comfort as I could. There was nothing I could say or do that could fix this, I just needed to assure her I would always be there for her. Her tears kept my chest wet that night, while mine drowned the inside of my brain, as I tried my best not to let any escape. I was losing it but told myself I had to be the strong one, even if I knew I was only fooling myself. The woman in my arms was my life. I wanted to pick her up, right now, tonight, and run away from this as far as we could, but that was just wishful thinking on my part. No, this was something we would have to stand, fight, and win together\u2014there was no other way. So after five horrific days, in the darkness of our bedroom we connected, bonded, and stayed as one, like we always had. \n\n\"Are you still going to find me attractive after they cut these off?\" she asked, touching her breasts. I told her she meant more to me than some stupid breasts. She smiled, but I could tell it was forced.\n\nNeither one of us got much sleep over the next couple of days. Every once in a while I would wake up and look over at my wife, she'd be lying there on her back with her eyes open. I would reach over, rub her arm, and give her a light kiss. There were no smiles at three o'clock in the morning.",
        "Wednesday we went in for her pre-surgery physical. Looking at my wife I could see she was still in denial\u2014I wished I was too. They explained exactly what they were going to do and approximately how long the surgery would take. The surgery was scheduled for seven o'clock Friday morning. We went home with a list of do's and don'ts for the following day.\n\nI know she didn't sleep Thursday night. Hell, we didn't even go to bed until after midnight. We talked, she cried, and I did my best to try and convince her it would be all right. \n\nFriday I kissed my wife and watched her and a nurse walk down the hall together. I was shown to the waiting room and told that the doctor would be down after the surgery, which should take about three hours plus or minus. At three and a half hours I started questioning why it was taking so long. It was just after four hours when Dr. Reynolds finally showed up. He shook my hand and motioned for me to sit.\n\n\"There was more than we originally thought,\" is how he started our conversation. \"It had progressed into her lymph nodes so we had to take most of the nodes under each arm besides her breasts. We removed about thirty percent of her right lung but we believe we got it all. She's going to be pretty sore for a couple of weeks. Listen, no matter what, I'm confident she will make a full recovery.\" I was in shock. He said I could see her when she came out of recovery, which should be in about an hour and a half.\n\nShe was pretty much out of it throughout the day and into the night, so I just sat by her bed and held her hand. I felt sad because there wasn't a damn thing I could do for her. Our life going forward was going to drastically change, but I knew together we'd make it. We were a team.\n\nAt two in the morning I felt her stir. The nurses had been in to check on her almost every hour. Lana had either slept through it or wasn't quite all there.\n\n\"How are you feeling?\" I asked. Then I thought about what the hell I'd just said. It was a stupid question, except at the moment that's all I could think of. \"I love you,\" I added. She smiled, licking her lips. I poured her a glass of water and gave her a little through a straw. She was still feeling the after effects of the anesthesia. I told her to rest; we'd talk later. She took one look at all the wires and tubes going into each arm, shook her head and, I think, fell back asleep.\n\nI told everyone to stay away until at least Sunday, she needed rest and there would be plenty of time later for visiting. I was able to sneak Tina in Saturday night, and we had a little family get together with the door closed. It helped Tina to she see that her mom was okay.\n\nI was sorry, Tina was sorry, everyone was fucking sorry, that is except the doctors who had blown it since day one. And if I heard the phrase, 'doctors are human and make mistakes too' once more I was going to puke. My anger grew each time I took Lana to chemo and watched her lose whatever was in her stomach afterwards. Life sucked.\n\nWhen she lost all her hair, Tina said we should both shave our heads. We were about to do it until Lana stopped us. She said it was bad enough one of us was bald and couldn't do anything about it. She let it be know she would be angry if we did it, so we relented and all bought matching hats.\n\nThe test results after her third round of chemo came back looking pretty damn positive which lifted all our spirits. Instead of going out to dinner, I brought in Chinese and the three of us celebrated. We'd beaten it and life was going to go back to where it was before this nightmare began. Well, that was the plan.\n\nLana had been working part time, and sometimes even that was too much for her. But after getting a clean bill of health it seemed to reenergize her, and four months later she was back teaching full time. She even talked about reconstructive breast surgery. I told her if and when she was ready. It was not important to me, as long as she was healthy again. \n\nEveryone said she was the poster child for breast cancer and even though she had two different types of cancer, she had beaten the odds\u2014her cancer was gone, or at least in remission.\n\nWhen the test results came back clean six months later she started talking again about that condo on the beach. We'd gotten stung pretty good with medical bills even with insurance, but the more she talked the more I wanted to make it happen for her.\n\nWe didn't consider time-shares or stuff like that, and found being even one block off the ocean made one hell of a difference in price. \n\nMy brother was the one who found it. It was a fourplex that was going into foreclosure. When we first looked at it, I thought it should have been condemned. It was a block in from the ocean, was big, needed everything, and still way out of our price range.\n\nMy dad was the one who called the family meeting.\n\n\"It's a wreck and probably overpriced at that, but with a little hard work it could be a great investment. I've already talked with Jenny and she and David said they would be in for twenty-five percent if we decide to move on it. It would be like our own private beach house. I think we'll even be able to put a deck on the roof so we'll not only be able to see the ocean, but with the roof being three stories high, we should have a pretty decent view in every direction.\n\nThe look Lana gave me said it all. There was no way I could refuse her after what she'd gone through. We opened up a bottle of wine, and Tommy and I decided to let Dad do the bargaining. Thank God, we did.\n\nIt was touch and go with the owner, but with him dropping his price thirty thousand and us putting second mortgages on all our homes, ninety days later we were the proud owners of our own money pit.\n\n\"We're going to do only what has to be done right now,\" my dad announced, as we looked at the long list of things that had to be eventually done. We'd taken on a daunting task and sometimes over the next year and a half I wished we hadn't.\n\nI was tired of scrimping and wanted to splurge just once in a while. \"Steve, we can't go out tonight, we've got to use that money for the hardwood floors that are coming next week.\" She was a tough money manager. When I secretly sold a few childhood mementos, I bought my wife a new dress and took her to dinner\u2014though kicking and screaming.\n\n\"Steve, you're wasting money that could be better used elsewhere.\"\n\n\"I know, but I just had to do this.\" We had great sex that night.\n\nThe first night we actually stayed at our beach house was wonderful. We packed a picnic lunch and ate up on the newly constructed roof deck. Looking through her binoculars, Tina said she thought she saw a pod of dolphins\u2014I kind of doubted that. After Tina went to sleep we christened our new bedroom. We had running water, toilets, air mattresses for beds, but few other creature comforts. Who cared, we were happy.\n\nA week later, after church, I took my two favorite women out for brunch. The Sea Turtle Hotel was located right on Neptune Beach and the restaurant had a wall of windows facing the ocean. We got a table right next to the windows and started to enjoy their buffet.\n\n\"At theses prices, eat as much as you want, and what's left we'll stuff in Mom's purse,\" I told my daughter as we made our way through the line. Forty-five minutes later I was stuffed, but happy. \n\n\"Look Dad, dolphins,\" Tina said, with a little glee in her voice.\n\nThere they were, two bottlenose dolphins moving up the coast, and then we saw him. It was a lone swimmer out about thirty-five yards from shore. He saw the fins on the dolphins and thought they were something else.\n\nHe started swimming towards shore like his life depended on it. He wasn't that great of a swimmer, and the splashing and noise he was making got more than a few people's attention, as the dolphins were almost upon him.\n\nEveryone there knew what the guy was thinking, and after what must have been only a minute and a half a totally exhausted man flopped face down in the sandy shore.\n\n\"Do you think we should tell him?\" a man at the table next to ours said out loud.\n\n\"No, let him think he survived a near death experience. He'll have a great story to tell his friends and family, why ruin it for him.\" Everyone went back to their meals, but I knew how lucky he must have been feeling about now. \n\nAt the two-year mark we were close to completing all the major items on our beach house list. When we first bought the four-plex we had a blind draw to pick which unit would be our own home away from home. Lana and I got the top left unit just above my folks. Tommy drew the unit next to mine and my sister got the one that was left. We opened up a bottle of champagne and toasted our good luck.\n\nLuck, it's a strange word because it swings both ways. You've got good luck and then there is the other kind, which never seemed to leave us alone.\n\nJust before her third annual visit with her oncologist Lana had lost a little weight, often saying she was not hungry. She sometimes felt weak, but we thought it was just because she was not eating well and working non-stop at our beach house or at her school.\n\nShe had been cancer free for three years and although you never forget, it was finally starting to be something from our past. The week before her doctor's appointment she went for a full body scan, her doctor called it a PET scan just to make sure nothing was going on. Her doctor was going to discuss the results of the scan at her appointment.\n\nShe didn't call me at work after her appointment like she normally did. I considered her yearly appointment with her oncologist now just a formality; something her overly protective doctor required, like the PET scan.\n\nI was just getting ready to walk into a staff meeting when the receptionist said she had a call holding for me on line one.\n\n\"Connie, take a message, will you?\"\n\n\"Steve, it's your mother-in-law.\"\n\n\"All right, send it over to my desk. Please tell the rest of the people at the meeting I'll be there in a minute.\"\n\n\"Hi Helen, how are you and Rob doing?\"\n\n\"Steve, you've got to come home, right now!\"\n\n\"Helen, I'm just walking into a meeting, tell Lana I'll be home about four thirty.\"\n\n\"Steve, you have to leave now!\" She was starting to get on my nerves. She'd always been a little pushy but this was going beyond even her normal self.\n\n\"Helen,\" was all I got out this time when she hit me with the bomb.\n\n\"Steve, will you shut up and listen for a second? Lana's cancer is back.\" I was dumb struck.\n\nA brief word with my boss, and I was out the door almost running. Thank God, my car knew the way home because my mind refused to totally comprehend what I'd just been told. \n\nThree seconds after walking through the front door I was holding my sobbing wife, trying to make out what she was telling me between her crying bouts. The one word I did make out made me also start to cry. \n\nWe stayed that way for probably twenty more minutes before moving to the couch. Lana was still having a difficult time talking so I sucked it up, put on a brave face, and started lying through my teeth.\n\n\"It can't be right. You've been clean all this time. It's got to be what they call a false positive, that's all. \n\n\"But what if it's not?\" she said, trying her best to stop crying.\n\n\"Then we'll beat it the same way as we did before, together.\" She looked at me with such sadness in her eyes, my heart about broke. \n\n\"Steve, I don't think I have it in me to go through all that again.\"\n\n\"Lana Moore, I don't want to hear any talk like that. Do you honestly think I'd let anything happen to you? As God is my witness, you and I are going to be living in our beach house this year and for many years to come. You have my word on that.\" She smiled, but that was the last smile I saw for a hell of a long time. \n\nThey all had their own ideas why cancer may have come back. It didn't make any difference why; I just wanted to know what they were going to do about it. A biopsy confirmed our worst fears\u2014Lana had lymphoma, and for the second time went under the knife. \n\nEveryone in her elementary school sent cards and stuffed animals, telling her to hurry back. This time, however, she never went back.\n\nI laid my wife to rest in a small private cemetery plot near her beloved beach. Before she died she had fought like a woman possessed, we all did. We sold our condo in town and moved into the beach house full time. Just looking out at the water gave her a sense of peace when little else did. \n\nMy mom said I was a rock for my wife and Tina, but inside I died right along with her. She lost weight no matter what we did and the chemo hit her extra hard this time around. Tina and I both shaved our heads, which put a little smile on her face\u2014only it was too little, too late, for the three of us.\n\nI yelled and screamed; pleading with anyone who would listen that there had to be something else we could do. I badgered her doctors, \"Isn't there some new experimental drug floating around we could try?\" I wasn't giving up and was mortified they were.\n\nI fought calling in hospice until the very end. When they show up that means there is no hope left, and I wasn't about to let her go, not just yet. I made a comfortable area for us up on the roof deck, and every night I would carry my wife up the stairs where we would spend an hour or two watching the sun go down, enjoying one another's company. I prayed to God to let me wake up from this nightmare, but like all my other prayers it went unanswered.\n\nWalking with my dad one day on the beach he told me it was time. \n\n\"Steve, you have to let her go, for her sake and your daughter's. Hospice will make her remaining time peaceful, without any pain.\" \n\nI knew he was right, but this was my wife we were talking about. How could I let her go?\n\nI was in denial, this couldn't be happening, not to her, not to us. I pleaded, I bargained, I shouted at Lana's God. I told him I would do anything if only he would make her well. In my anger, I wondered how this God that Lana believed in so deeply, that was supposed to be so kind and loving like Lana said, could play this cruel trick on such a wonderful person as she. My mother said I was going through the stages of grief. I retaliated saying I didn't care what it was called; I only wanted my wife to be whole again. Through it all Lana held fast to her faith. She said it gave her some measure of comfort and peace. I was glad for her because I was in hell.\n\nHer last days were both tranquil and sad. I was glad she was at peace and finally without pain, though I was racked with it. Those last two days I never slept a wink. I wanted every available second with her.\n\n\"Steve, I'm scared,\" Lana said, during one of her few lucid moments while looking up at me from her bed. \"I'm leaving the two best things that ever happened to me.\" She was so weak it came out in a voice just above a whisper. \"I know you're going to be strong, if for no other reason than for our daughter. You're going to have to be both parents now.\" I held her feeble hands. \"And you have to promise me that every night, before she goes to sleep, you kiss her for me. Tell her that she was the most important thing in my life, and that I'll always be watching over her.\" She was too weak to even cry anymore, but I did see a single tear drip down her cheek. God, I loved this woman.\n\nSomewhere around three thirty in the morning, with me sitting on the side of her bed and Tina asleep in a chair by her bed, Lana took her final breath and we died together. We were looking into each other's eyes when the ends of her mouth turned up slightly and she closed her eyes and passed on to what I hoped was something better. I did nothing for the next hour. When I woke our daughter, I told her Mommy had passed on and was no longer with us.\n\nShe cried, I cried, and we spent the next twenty minutes holding each other looking at our wife and mother. How the nurse knew Lana had died, I'm not sure. Maybe it was the lack of noise or she heard our tears hitting the floor\u2014I don't know, but she walked in, checked for a pulse that wasn't there, and took charge.\n\nThe funeral was supposed to be small and simple. I hadn't counted on every one of her students, past and present, and fellow teachers attending, along with most members of her church. More people than you could have imagined loved her. I was going to say a few words and tried my best to get them out, but my dad ended up having to finish what I started.\n\nIt was just family and the minister at the gravesite. We put flowers on the coffin, and threw a handful of dirt on it when it was lowered into the cold concrete vault. A half hour later we were at my parents' house watching food being served.\n\nEveryone was sorry, so they told me, and if I heard another person say at least I had my daughter I was going to scream. Taking me out on the back deck, my dad gave me a beer and a chair.\n\n\"I thought you might need a little air.\" He was right about that. \"You may tell me I'm full of shit when I say it's going to get easier and easier every day, but it's true. We will do everything in our power to help you with Tina, but she's going to need you, not us. Tell her you love her and that you are going nowhere. And when you get up in the morning and feel you can't do it any longer, dig down deep, and remember you're doing this for Lana too.\" I had always seen my dad as a hard ass, but today he opened up his heart to me and gave me what I needed to get through the next couple of months.\n\nSmells, that's what I lived for now. I didn't touch her side of the bed for the first month. Every night I would fall asleep on what used to be her side. With her pillow over my face, I would close my eyes, inhale her scent, and pretend she was still there with me. Sometimes my brain would even cooperate, and I'd have a dream about her. We had shared a large walk-in closet so even my clothes had a hint of her essence. I wanted to kill my mom when she came in one day and washed all my bedding. I lost another piece of her.\n\nIn a way it did get easier, I no longer wanted to lie down and die to be with my wife. Tina went back to school, and when she made the honor roll she said she did it for her mom. My family took care of what I couldn't, but after nine months they stopped giving me any more slack.\n\nMy brother told me to get laid, and if it had to be an escort so be it. I told him I wasn't interested and went back to feeling sorry for myself, which consisted of making myself and everyone around me miserable.\n\nThe one thing I did do, though, was to turn the law firm of Collins, Collins, and Hathaway loose on everyone who had ever touched my wife. I wasn't looking for any big payday. I just wanted them to remember my wife's name every time they went to shrug off a patient without putting much credence in what was being said. I had promised Lana I wouldn't sue her doctors. But now I wanted my pound of flesh.\n\nWhen my boss asked me if I was growing a beard, I told him not really. He informed me that unless I came to work shaved, and look like I belonged there, not to come in any longer. \n\n\"I didn't hire a homeless man to sell policies because if I had, I'd be paying him a hell of a lot less than you're making.\" That was my first eye opener. The next one wasn't so nice.\n\nWhen all I did was mope around the house, my dad went into his place one afternoon and brought out his 45-caliber handgun. He cocked it and handed it to me.\n\n\"Put it in your mouth and aim for the top of your head. Use both hands so you don't miss because I sure as hell don't want to take care of a fucking vegetable for the rest of my life. And if you don't mind, please do it outside on the back deck. It's going to be messy, and I'd rather clean up the backyard with a hose than have to clean up a kitchen or living room.\" \n\nI just looked at him like he was crazy. \"I'm not going to kill myself.\" I handed him back his gun.",
        "\"Well, now that we've got that out of the way, all we have to do is to find a way to jump start your heart so you can rejoin the human race.\" My dad was right about one thing; I needed something to bring me back to life.\n\nPART 2\n\nI screamed my lungs out all the way down on my first and last tandem parachute jump. The only reason I didn't either throw up or shit in my pants was because I had literally nothing in my stomach\u2014good thing.\n\nThe Mustang Cobra was fast but the suspension was so stiff it felt like a racecar, and who wanted to drive one of those to and from work everyday? The three Corvettes I test drove were even faster, got a hell of a lot better gas mileage, but didn't give me the rush I was looking for. \n\nI was back to putting one foot in front of the other, all the while caring for my daughter. Both sets of grandparents were great during our time of need, but were smothering Tina. The more they gave or did for her, the more she clung to me.\n\nWhen I lost Lana I became the mother out of necessity. Now, as I began to enter the human race again, I wanted to be both the mother and father she needed. Shopping for clothes with an almost nine-year-old girl was a new experience for me. Don't get me wrong, I'd often gone shopping with my wife and daughter, and I was there physically, but mentally? Well, that was another story. What happened was they did the shopping; I just stood there pretending to be interested. To me everything looked good on them. \n\nNow Tina wanted my opinion and wasn't satisfied with, \"it looks nice,\" anymore. I came to understand why men don't go shopping with their wives because after a full day at the mall we had only two stupid outfits neither of which I much cared for. But life for the two of us was getting easier\u2014I guess my dad wasn't full of shit.\n\nSix months later, two things happened. I settled with the doctors' insurance company. I wasn't rich, but Tina's education and our immediate future would be totally taken care of. I used a portion to pay off my mortgage on our beach house, including the renovations, and the rest just sat in the bank in money markets. The only thing I had to agree to was no future litigation and accept the fact that they admitted no fault in her death. I signed\u2014nothing was going to bring Lana back. That night I took Tina out to dinner and on the way home we each put a rose on her grave. Alone in my bed I cried, setting myself back four months from where I'd moved forward.\n\nA week later I took Tina to a car and motorcycle show at the downtown armory. It was held inside, but there were a million vendors outside selling everything you could possibly want. We walked the aisles looking at every type of show car and bike that you could imagine. Then I saw it.\n\nDark, mandarin orange metallic, with lime green, fire engine red, and silver-gray pin stripping. It was a chopper with a front end that went on forever. The chrome wheels shown so brightly you almost needed sunglasses to look at them. It only had a single seat, a short back fender, and a rear tire that must have come off a four by four truck it was so damn wide. Best of all, it had a For Sale sign on it. \n\nI looked it over for what must have been at least twenty minutes while Tina stood by watching me. I asked a few dumb questions before asking permission to sit on it.\n\n\"You ride much?\" \n\n\"Nope, not at all. How does it handle?\"\n\n\"It'll take you a while to get used to the long front end, and you'll need to watch your speed going into the corners, but besides that it will feel like every other bike you've ever ridden.\" It probably would have if I'd ever ridden a bike before, which I hadn't. This was the first one I had ever thrown a leg over.\n\n\"How much are you asking? \n\n\"I've got thirty-two into it, but I need the money,\" he laughed. \"I don't, but my wife thinks we need a house, so all my toys are going.\" Lana never would have done that to me.\n\n\"If you're interested and want to take it for a spin, we can set something up for after the show today.\"\n\n\"I'd like that, but we, or should I say I have a slight problem; I've never ridden one before.\"\n\n\"You mean a chopper?\"\n\n\"No, I mean a motorcycle.\"\n\n\"You're fucking with me, right?\"\n\n\"I wish I was. Look, I'm interested, but if you've got other offers don't worry about me,\" I said, still mesmerized by what I was sitting on.\"\n\n\"Here,\" he said, handing me his card. \"I may regret this, but I'll hold it for two weeks, but that's all. Go to the Harley Davidson dealership and sign up for their riding course. In this state you have to go through this bullshit safety course before you can get a license anyway. And in your case that is exactly what you need.\"\n\nI got off, we shook hands, and I gave him my cell phone number. I took one more look at it before turning around and walking away.\n\n\"Dad, you're not thinking about what I think you're thinking about, are you?\" Tina asked, looking up at me. \"Grandpa would kill you, you know that, don't you?\"\n\n\"What Grandpa doesn't know won't hurt him.\" He was the last thing I was thinking about right now.\n\n\"Ridden much?\" Was the first question they asked me at the Harley dealership.\n\n\"Nope, never. Sat on one though. Guess that's why I'm here.\" He stamped beginner on my application.\n\n\"The class is all day Saturday and Sunday. Once you pass the written and riding test, you can get the endorsement on your driver's license. I gave him a check for two hundred and fifty dollars and that was that\u2014that's what I thought, anyway.\n\nI also needed a helmet, boots, and riding gloves. Now, after three hundred dollars more I could finally leave.\n\n\"You're serious about this, aren't you?\" my daughter said, looking at me like I'd lost my mind. \"Mom would have never let you buy a motorcycle, and Grandpa calls them organ donors on wheels.\"\n\n\"Look, honey, this is something I've got to do right now. I'm not asking you to understand, just trust me on this one.\"\n\n\"You do know I expect a ride before you either crash it or Grandpa finds out and makes you sell it.\" I noticed she had her mom's smile when she gave me a big one, knowing we now had our own personal secret.\n\nI felt like a total klutz. The book was basically common sense stuff, once you got it in your head you were on two not four wheels. But I'd never ridden a motorcycle. I hadn't even been on a two-wheel bicycle since I was a kid, so it took me a while to get used to it.\n\nClutch on the left, gas and brake on the right, is what kept going through my mind as I took off for the first time on a bike that looked like it had gone through World War II. They gave us Ducati two-fifty cc motorcycles, and by the looks of them they'd been dropped more than a couple hundred times. Over the next eight hours, I added to that count.\n\nI started the bike, gave it a little gas, let out the clutch, and killed the engine after three feet. \n\n\"Give it a little more gas and let the clutch out slower,\" I was instructed. I started it again, gave it a ton of gas and slowly let out the clutch. The engine was screaming, but I was moving forward and this time I didn't kill the engine. I probably burned out the clutch, but I was riding.\n\nIt took a while for me to learn the proper gas to clutch ratio, which finally came with practice. The instructor had the patience of a saint. He had probably seen all the stupid mistakes we were making a million times before. Starting, stopping, and making turns were all that we accomplished that first day. I was drained, stressed to the max, and afraid I would be the first one to fall over\u2014I wasn't, I was the second one. No matter, I felt alive, and every fiber of my body screamed out for more. \n\nSunday I was the first one there. I had made breakfast for Tina and dropped her off at Tommy's house again. I couldn't take the chance of leaving her with my parents.\n\nThe morning consisted of figure eights, sharp turns, rapid stops, and proper lane changes\u2014I was starting to get cocky. When we had to do a figure eight one way and then reverse it without putting our feet down I crashed and burned. It took me three tries and was told if I couldn't do it, I wouldn't pass the riding test. My cockiness evaporated immediately.\n\nThat afternoon I missed one question on the written test, and maxed the riding test. We all felt pretty good about ourselves, but the instructor cautioned us saying we would need a lot more actual practice before we could call ourselves even novice riders. We got our certificates and half of us decided to celebrate. \n\nThere were twelve people in our class. I was surprised that four of them were women, and most of them had done better than the guys on the riding test. At a local hangout we toasted our good fortune while talking about the bikes we were going to eventually own. A husband and wife said that they were looking at a Harley Ultra. The oldest guy in the class said he already put money down on a trike. When I said that I was looking at a chopper most thought it was a cool bike, but not too practical if I planned on doing any long distance runs. I wasn't thinking long distance. I was thinking to and from work and fun weekend rides, but to be on the safe side, I decided I'd look at other bikes.\n\nAll right, Tommy wasn't happy I'd passed, but I made him promise, like I had Tina, not to say a word to anyone. The following weekend, after Tina and I went out to lunch, we started my quest for the perfect bike.\n\nAfter trying two I realized that a crotch rocket wasn't for me. The best way to describe them was jumping out of a plane without a parachute, and I wasn't going there again.\n\nI rode four cruisers, all Japanese bikes. The Honda had everything that I could possibly need, but it didn't have that wow factor I was looking for. I dug out the phone number from the guy at the show and gave him a call.\n\nTuesday after work I rode my first Harley Davidson motorcycle. As I said, it wasn't stock but it sure got my juices flowing. It was ten times as loud as the Honda with none of the bells and whistles. A speedometer, a tachometer, and turn signals were all it had. He said he had a custom made windshield for cold mornings, and even a pee pad seat for the rear fender if I was interested.\n\nI almost dropped it going into my first turn. The front rake was so extreme I had to start turning well before I went into the corner, and cut my speed almost in half, but on a straight flat road my heart told me this was what I was looking for.\n\nWe talked price for three days before settling on one we could both live with. I think we each got what we wanted out of the deal. Frankly, I think I got the better end of the deal because he threw in all the extras, and for just under twenty-five thousand I had a bike that turned heads, including my own. I thought just a do-rag was in order\u2014I had to look cool, didn't I? But Tina told me she'd make a quick call to her grandfather if she even thought I was riding without a helmet. \n\nOn Monday I got into work early, and everyone who came in after me wanted to know who owned the hot bike in the parking lot. I said nothing to anyone and just let everyone look and wonder. Most of the people were gone when I finally left work, however the people who did see me gave me a big smile and a thumb's up.\n\nThe following day the men wanted to know the why, however many of the women started to look at me in a whole new light. Did I want the attention? Not really, but I didn't want to be totally ignored either. The only thing I really wanted was to be able to do my thing.\n\nA trip to the dealership to get an oil change was rather enlightening. There were so many custom parts on the bike they had to order a special oil filter. One week later I spent two hours waiting while they did an oil change, including a full look-see at the ins and outs on my new toy.\n\n\"It's in great shape,\" I was told, but warned if anything went wrong most parts would have to be special ordered or customized to fit. Everyone wanted to know what I paid, and if I'd thought about joining the local HOG Chapter. \n\n\"I'll bite, what's a HOG Chapter?\" For the next twenty minutes I was informed about the Harley Owners Group, and how to join it. You first had to be a national member, after which you could join a local chapter.\n\nOne of the salesmen, who was also a member, filled me in on the local chapter. \"We have activities most weekends, though it's really about hanging with people who like to ride.\" I figured it was more fun to ride with a group, so after a few clicks of my mouse and about another hundred dollars I was a national H.O.G., along with the local chapter, member.\n\nI had fun, real fun, for the first time in a long time, actually since losing Lana. I went on rides most weekends, and even started taking Tina with me on the short lunch rides. She wasn't happy most times since she had to sit on that small fender pad and hang on to me for dear life.\n\nOne Saturday ride was a little longer than most. We turned into the Kickstand Bar and Restaurant just after noon. It was close to a sixty-five mile jaunt that took a couple of hours as we took every back road in Florida. Although I was having the time of my life, Tina wasn't. When all sat down at two large tables and ordered beverages, lunch, and a basket of munchies, Tina voiced her dismay concerning her situation. \"No more,\" she said in a louder than normal voice, I guess trying to talk above the crowd at our table. \"That seat is kicking my butt, not to mention my back.\" She stretched her arms above her head. \"I can't take it anymore.\"\n\n\"It's not that bad.\"\n\n\"For you it's not bad, you've got a real seat. Me? I've got something the size of a napkin with the softness of a piece of cardboard. Dad, this is my last ride with you unless you get me something better to sit on. Hell, if I could get a cab to pick me up right now, I'd gladly pay for it out of my allowance just for a comfortable ride home.\" I was about to say again that she was over-reacting when someone from behind me spoke up.\n\n\"If you want, you can ride back with me. I've got a comfortable back seat that is not being used.\" Turning around I saw Nadine making the offer to my daughter. I was about to say something like that's okay she'd rather be with her dad when Tina piped up.\n\n\"You've got yourself a passenger.\"\n\nNadine and I were acquainted, how could we not be. We both went on most weekend rides and had talked occasionally, but that was about it. She was cute, well, what I could see behind those huge sunglasses she always wore, but she didn't say much. Sure we talked about the runs we were on or what was coming up next, but it was like she'd only allow a few questions, and then made it a point to disappear.\n\n\"You don't have to do that,\" I replied, turning around to face her.\n\n\"No problem, I haven't had anyone behind me in ages, anyway it'll be fun\u2014a lot more fun than riding on the back of that thing you call a bike.\"\n\n\"I love my bike!\"\n\n\"Steve, it's a one person bike. If I were you, I'd trade that thing in for something a lot bigger, and a whole lot more comfortable to ride, for the both of you.\" \n\nTina and Nadine were both right, it wasn't the most comfortable bike in the world. It vibrated, had a rigid frame, and even my seat could have used a bit more padding. It was old school I guess, that's why it had only twenty-two hundred miles on it when I bought it.\n\n\"It's made to be looked at, not ridden for any real distance, that is unless you like visiting chiropractors,\" she followed up with.\n\n\"Dad, please can I go back with her?\" How could I argue with that face?\n\n\"Only if Nadine will let me pay for her lunch in exchange.\"\n\n\"Well, it you insist, but you don't have to, you know.\"\n\n\"I know, but for a fellow HOG member, I think it's a must.\"\n\nI watched Nadine hobble around the table, grab herself a chair, and with difficulty sit down next to Tina. Damn, I never noticed, but she had to be almost my height, though I think a lot had to do with the boots she wore. Big, black, high top Harley boots with the highest heel they made. Putting her sunglasses on top of the black Harley hat she always wore, Nadine practically flopped down into the chair\n\n\"Just an old war injury,\" she told my daughter with a smile. It was evident she did not want to say anymore about it because she immediately glanced down at her menu.. \n\nWhat I had heard from others was that Nadine used to be married, but about six years ago she and her husband got hit riding on his bike. A car blasted through a red light and hit their bike about a third of the way back from the front wheel. Her husband, Greg, died on impact, and she got messed up pretty badly. She spent the next eight or nine months in therapy learning to walk all over again. Though the doctors saved her leg, it would never be what it once was. She had a ton of pins in it. It basically had to be rebuilt from the inside out. \n\n\"Tina, I've got a two year old trike with a plush back seat, speakers, and two drink holders. If you want, you can even plug in that iPod of yours and play it through my speakers.\" Tina was more than sold. \n\nLunch was good, but the conversation between the three of us was better. She wasn't backing away from Tina's questions like she'd always done mine. When the road leader yelled it was time to head out again we all went for our bikes, a few of us faster than others.\n\nI knew what her bike looked like; I'd seen it a million times before. It was bright red metallic with gold and black speckles in the paint. Her helmet and those big red sunglasses both matched the bike. I was going to say it was a little gaudy considering its size but after looking at mine in the sunlight I decide to keep my mouth shut. When Tina climbed aboard, I saw her eyes light up as she moved around in the large oversized seat getting comfortable.\n\nWith a huge smile on her face, she announced that it was even more comfortable than our couch at home. She was probably right.\n\nI rode about a bike's length behind them in the same lane. They never stopped talking. Nadine had an intercom system, and I could see them talk and look over at me every once in a while and laugh. I didn't know what they were saying, but it couldn't have been that funny.\n\nAn hour and a half later we were pulling into the dealership lot. Tina got off Nadine's bike gave her a hug, telling her that was the best ride she'd ever had on the back of a motorcycle.\n\n\"Maybe next week, if your dad decides to go, he'll let you ride with me again.\"\n\n\"Dad, please?\" Tina begged, staring at me with the same puppy dog eyes her mother had.\n\n\"We'll see,\" was all I said. I turned back to Nadine. \"I want to thank you for letting Tina ride with you. I know she was a lot more comfortable on the back of your bike.\"\n\n\"If you ever want to see what it's like to ride a real bike, I'll give you a ride sometime.\" \n\nNot a chance in hell! Me, riding behind a girl? I'd never live that one down, I thought to myself.\n\n\"Well, thank you again, and maybe we'll see each other next week?\" Which was more of a question than a statement. I told Tina to hop on and within two minutes we were out of there heading back to our house.\n\nWe grilled out on the back deck, and after a few beers I was about ready for bed, but Tina had other ideas.\n\n\"Dad, let's go for a walk on the beach,\" she said, putting on her tennis shoes. We were out about ten minutes when she opened up.\n\n\"Dad, do you still miss Mom?\"\n\n\"Everyday, pumpkin.\"\n\n\"When you think about her do you still get sad?\" I wasn't sure why all the questions tonight. \"Dad, sometimes when I close my eyes, I see Mom the way she was before she got sick, but I don't feel as sad as I did before. I still love and miss her, but I don't cry very much anymore.\"\n\n\"Sweetheart, just because you don't cry everyday doesn't mean you love or miss her any less, it's just that it's going to get easier everyday. The pain will still be there, but it will fade and eventually you'll just remember the good times. And the sad ones? Well, they'll fade more and more.\" I hoped that would answer her questions.",
        "\"Do you think you'll ever replace Mom and get married again?\"\n\nI stopped walking, knelt down in the sand so I was eye to eye with Tina. I took her in my arms. \"Honey, your mom can never be replaced. I may find someone else, but what your mom and I had was special, and no one will ever replace those memories. Why are you asking all these questions?\"\n\n\"Grandma said you're pining away. She said you should be moving on with your life. What does pining away mean?\"\n\n\"It just means I'm still holding a torch for your mother. There's nothing wrong with that, and when I'm ready to move on you'll be the first to know.\" I gave her a big smile, which she probably couldn't see since it was getting pretty dark. We gave each other a big hug, I got up from the sand, and with our hands entwined we walked back home.\n\nIt was an easy but busy week. On Wednesday we had dinner at my parents' house, where Tina made it a point to tell my mother that she had ridden on someone else's bike the weekend before.\n\n\"You're going to get your daughter killed, you know that, don't you?\" my dad said in disgust. \n\n\"Dad, I know how you feel, but it's no different than Tina riding her bicycle in the street.\" He mumbled something and left the dinner table.\n\n\"He'll get over it eventually, you know how stubborn your dad can be. He's only looking out for the two of you,\" my mom said, touching my hand. \"And it would kill him if something happened to either one of you.\" I knew she was right, but nothing was going to happen.\n\nI hemmed and hawed about going on the ride Saturday. I had things to do around the house I'd promised myself I was going to get done. But getting out on the open road with friends, that was something special. Tina asked if she could go, that in itself presented a problem.\n\n\"If Nadine doesn't come, you're going to get stuck on the back of my bike. Do you think you can handle that?\"\n\n\"Nadine said she's coming and that I can ride with her,\" she insisted stubbornly.\n\n\"Okay, I'm just asking you, what if she doesn't show?\" \n\n\"She'll be there.\" She gave me another one of her Lana looks\u2014I let it drop.\n\n\"Nadine, Nadine,\" Tina yelled, rushing over to her as she was putting her helmet into the trunk of her bike. \"Can I ride with you again today?\"\n\n\"If it's okay with your dad, then it's totally fine with me.\" She looked over towards me for some type of response.\n\n\"Nadine, I don't want Tina to become a pest by taking advantage of your good nature.\"\n\n\"Steve, like I said, no one has ridden in that rear seat since I bought this bike. I would love having her company. It will be enjoyable having someone to talk to while I ride.\"\n\n\"Well, okay, if it's no trouble then I guess you've got yourself a passenger for today's ride.\"\n\nShe was dressed, as usual, all in black from her boot cut jeans to her tee shirt that had a hot babe on it and said Daytona 2008. This time she was wearing black sunglasses with a big CC on the sides, and her usual black Harley hat. She always looked like she had just stepped out of a Johnny Cash song.\n\nIt was a poker run put on by another HOG Chapter. We had five stops and got one card at each, followed by a barbeque at the final stop. \n\nCrap is what I got; not even one pair. When I found Tina and Nadine at the final stop they were both grinning ear to ear. \n\n\"You guys want to grab a bite to eat?\" They looked at each other and started to laugh. \"Am I missing something?\"\n\n\"We got a straight flush, queen high,\" Tina said, looking at Nadine. \"And the payout is somewhere in the area of two hundred and fifty dollars.\" At that point they started holding hands and jumping up and down. Tina was anyway.\n\nThey won, and then gloated about it the entire time at lunch. A new outfit, complete with shoes and the accompanying accessories was discussed. I didn't even win one of the fifty or so door prizes. \n\n\"Steve, would you mind if I took Tina shopping on Sunday for a couple of hours in the afternoon?\" With Tina's eyes wider than I'd seen in months, what was I going to say? No?\n\n\"Nadine, I don't want her to be a bother to you.\" I was trying to let her off easy if Tina had talked her into it.\n\n\"No bother and besides, we've got this money burning a hole in our pocket, don't we, girlfriend?\" Tina was wild, and having more fun than she'd had with just me in ages. I gave her our address, grabbed Tina and headed out on my bike.\n\n\"Her husband died in an accident when they were on their bike, that's why she walks like that. I asked her how she could get back on a motorcycle after what she went through. You know what she told me? She said she still likes to ride because it brings her closer to Greg when she does. Dad, that makes no sense.\"\n\n\"Honey, you still have all those stuffed animals Mom gave you?\"\n\n\"Of course,\" she replied quickly.\n\n\"When you look at them and hold them, do you think of Mom?\" She wasn't so quick to answer this time. \"It's just like Nadine riding her bike. It was something they both loved to do, and when she's on her bike, she's remembering all the good times she and her husband had together. It brings her closer to Greg like the animals bring back memories of your mom.\" \n\nWe were now talking about something I didn't really want to get into tonight. It still brought back memories, both good and bad, I had started to try and suppress so I could begin to move on with my life. After putting Tina to bed I spent the rest of the evening on the rooftop deck looking out towards the ocean remembering how and why we'd bought this house.\n\nSunday morning Tina was up by eight, showered and dressed by eight thirty, and done with breakfast by nine.\n\n\"Nadine said she'd be here by about ten, relax, it's just the mall.\" She gave me this ugly look like I'd sprouted another head.\n\nWhen a guy needs something he goes shopping with a purpose. If it's a shirt he finds one he likes and buys it. Hell, most guys don't even try it on. And washing it before you wear it? Please. As long as it still doesn't have the pins in it, it's worn the next day.\n\nWomen, on the other hand, and I know this from personal experience, don't shop, they look. They can go to the mall looking for one thing and come home with five different items; and maybe not even the thing they went there to find. To them it's a form of recreation. You don't know what you're going to find, but when you do, you have to have it. I'll never understand the female mind. I used to tell Lana to put her credit cards on the counter and back away with her hands in the air. Did she listen to me? Hell no. All I heard is 'shop till you drop' as she and my mom walked out the door. \n\nNadine pulled up in a newer model Mustang. \"The girl must have money,\" I thought to myself, walking out the front door to take a look at her car.\n\n\"Nice, very nice.\"\n\n\"It was a bank repo. I got it for what was left on the loan, in other words, a steal. I'm glad it's an automatic because there would be no way I could handle a stick with my bum leg.\" Tina was already behind us, purse in hand, chomping at the bit.\n\n\"We won't be too awfully long, unless we see something we really like, then you'll probably have to send out a search party.\" I slipped her a fifty and two tens.\n\n\"Just to make sure you guys don't run short.\" We exchanged a smile with that line. Two minutes later they were gone, and I started working on the new bathroom floor.\n\nI hate doing floor tile in a confined space because of all the intricate cuts you end up having to make. I was about half done when I heard the commotion. There was a lot of laughing as two women, or should I say one woman and one preadolescent had made it back from the mall. Wiping off my hands, I went out to see what they'd bought.\n\n\"Dad, it was so cool, everything was on sale,\" Tina announced, showing me her four bags of clothes. \"I can't believe how much stuff I got.\" I looked over at Nadine, who just raised her shoulders and shrugged.\n\nI picked up a bag and before I could get a look at what was inside Tina pulled it away. \"Dad, that's my underwear bag.\"\n\n\"Sorry, but if you'll remember, when we went shopping last time we bought you underwear.\"\n\n\"Not like this,\" Nadine said with a big wide grin. I didn't want to know any more at this point.\n\nThey kept going on and on about what they'd bought, and even what they hadn't. I looked at my watch.\n\n\"It's getting close to supper time.\" I looked at Nadine. \"You're more than welcome to stay and eat with us. We're grilling something, that's about all I can tell you. We'd loving having you join us, wouldn't we, Tina?\" Tina could hardly contain herself. \"Please stay, Nadine,\" Tina begged.\n\nNadine was looking unsure. \"I probably should be getting out of your hair.\" Since I couldn't convince her, Tina did, or maybe I should say, Tina didn't give her a choice. \"No, you just have to stay, please,\" she continued to beg. Who could resist those eyes? Nadine acquiesced; thanking us, she said she would be glad to join us.\n\nI did chicken and baked potatoes on the grill while the women made a tossed salad.\n\nLooking around Nadine seemed intrigued by our home. \"Lovely place you have. How long have you lived here?\" \n\n\"Just under four and a half years. We sold our condo just off the downtown, and with my folks, brother, and sister we bought this place. They rent out their units most of the year, but Tina and I live in ours full time.\"\n\n\"It must be heaven living so close to the ocean?\"\n\n\"It really is, and if your leg's not bothering you too much I've just got to show you the rooftop deck with its panoramic view.\" I think if she had to crawl she would have made it onto the roof.\n\nLooking to the west the sun was setting over the intercoastal waterway. The colors\u2014well, let's just say they were something out of a travel brochure and leave it at that.\n\n\"Oh my God, it's beautiful up here,\" she gasped, taking off her sunglasses and hat, shaking her shoulder length jet-black hair, and pulling it back behind her ears. \"I think if I lived here I'd never want to go back downstairs.\"\n\nIt had been a while since I'd been on the roof to watch the sunset. Towards the end, I would pick up Lana and carry her up to the deck many a night to watch the sun go down and listen to the waves behind us breaking on the shore. I got a pang of sadness. \n\nWe spent the better part of an hour on the roof looking, listening, and talking.\n\n\"Look at the time,\" Nadine announced, glancing down at her watch. I've got to get home, put this stuff away, and get ready for work tomorrow. I want to thank you both for a lovely day.\"\n\n\"Nadine, I want to thank you for taking Tina shopping. I'm not much of a shopper, and I am pretty sure you were a lot more fun to shop with than me or her grandmothers.\"\n\nWe made it back downstairs in one piece. And with a bunch of hugs and kisses on the cheeks, and with the roar of her Mustang's engine, Nadine was gone.\n\n\"I had so much fun today.\" Tina was floating on air.\n\n\"I hope you didn't spend all her money.\"\n\n\"Nope, we split the two hundred and fifty, but somehow we seemed to get more than that.\" She shook her head. \"I must have added it up wrong.\" I smiled at her.\n\nI took a shower, got my clothes ready for tomorrow, and went to say goodnight to Tina.\n\n\"Dad, for some reason Nadine thought you were divorced. I told her about Mom, she said she was sorry for my loss. She told me she knows how it feels to lose someone you love.\"\n\n\"Honey, did it make you uncomfortable to share that with a stranger?\"\n\n\"Dad, Nadine isn't a stranger, she's my friend.\" What could I say at that point?\n\nWe saw a lot of Nadine and our HOG brothers and sisters over the next six months. When we went on weekend runs Tina was always sitting behind Nadine. At times I would glance over to the two of them, thinking I was looking at Lana and our daughter\u2014Tina seemed happy again.\n\nWe weren't an actual couple; it's just that everyone assumed we were. We were good friends who did stuff together. Over the next couple of months when someone invited Nadine or me, they took it for granted the other would be there too. Nadine came over for barbeques at our place and even invited us over to her place one night after a run that ended close to her home. It was a cute three-bedroom house in a gated community in Orange Park she and her husband had purchased just prior to the accident. Although she didn't talk much about him or about herself to me, she and Tina became thick as thieves. I was sure Tina knew more than she was letting on.\n\nIt was ninety-two degrees when our run ended at the dealership. I felt like my legs were cooking sitting on my bike at every stoplight that took more than thirty seconds to change. In a sleeveless tee shirt, jeans, and heavy boots, I was looking forward to stripping down into a pair of light shorts and sandals. Nadine, with Tina sitting behind her, followed me back home. We pulled into my driveway and saw Tommy and his family were already there. Tommy didn't rent out his unit in the summer. Introductions were made, cold brews and sodas were opened, and everyone kicked back enjoying the shade on the back deck.\n\n\"Nadine, if you want to get out of those heavy jeans, I'm sure I can find a pair of shorts for you to put on,\" Ruth, Tommy's wife, told her.\n\n\"I'm fine,\" she said, taking off her riding boots and slipping on a pair of sandals.\n\nI joined in on the conversation. \"Come on, Nadine,\" I urged. \"Put on some shorts and we'll go over to the beach and walk in the water to cool off.\" I felt a painful pinch on my arm at the same time Nadine declined my offer. Tina met my eyes and mouthed the word 'NO'. \"Tina, why don't you give me a hand taking out something to put on the grill for tonight. Folks, we'll be back in a minute.\"\n\n\"Bring out a few refills when you come back,\" Tommy shouted. We walked inside and up the stairs to our place.\n\n\"Dad, she's self-conscious about the scars on her right leg and doesn't want anyone to see them. That's why you never see her in shorts.\"\n\n\"They can't be that bad.\"\n\n\"Their pretty big and kind of gross, Dad. I've seen them.\"\n\n\"When?\" I started to ask.\n\n\"Remember when we went clothes shopping? I caught a glimpse of them in the mirror. She said they're not painful, but she still has a hard time bending her leg. I think she's more frustrated than anything else, and being a woman, well you can figure that one out.\"\n\n\"That's crazy. She's beautiful. So what if she's got a few little scars\u2014no one's perfect.\"\n\n\"You tell her that because I'm not going there.\"\n\nNadine had to be about five feet eight in her stocking feet, and from what I could gather probably weighed in at about one thirty, though I couldn't be sure about that. It was kind of hard to judge because she never, and I repeat never, wore anything form fitting Her black tee shirts were loose and her jeans were not the new fashioned tight ones with the straight legs. Most of the time she wore a black Harley hat covering her long, jet-black hair, which she always wore in a ponytail tied back with a leather braid of sorts. She couldn't have been much older than twenty-eight, though I never asked. And she was good-looking, well, I though so. She wasn't a runway model but was sure easy on the eyes, and I found myself looking at her more and more lately, almost studying her on occasion. The only reason I hadn't thought of her in a romantic way before was because everything about her said, BACK OFF. Previously more than one guy in the group had gotten his pride handed back to him a little bruised when he tried to hit on her.\n\nI came back with three more Coronas and a menu that no one objected to, especially since I was supplying the food and cooking it.\n\nDinner was nice and really laid back. I opened a bottle of wine with dinner, Nadine begged off saying wine and riding don't mix. It was starting to get dark when Nadine asked if we could go topside and watch the sunset.\n\nI agreed saying it was a great idea, and asked everyone up to the roof since it was getting close to sunset. \n\nNo one else joined us, saying if you'd seen one sunset, you'd seen them all. Like last time, Nadine had some trouble climbing the stairs. I was going to joke about putting in an elevator just for her, but thought better of it. On the roof deck we sat down in the two loungers waiting for the colors to explode.\n\n\"I could sit here forever,\" she said, looking over at me. \"It's so relaxing listening to the ocean and watching one of God's marvels unfold right in front of your eyes. It makes me feel so small and insignificant in the scheme of things.\" She was right, and the sunset was beautiful as usual. She looked at ease, then when she saw me watching her, her guard went up again.\n\nI reached over and gave her a big hug, and for the first time she hugged me back. I think I would have tried to give her a real kiss, but I chickened out not knowing how she would react. When we released each other she gave me a confused look. Did I overstep my bounds or did she want more? I too was confused.\n\nThere was no ride scheduled for the following weekend. She told me if I felt the urge to give her a call. After that she was off.\n\n\"You dating her, or is this a friend with benefits type of thing?\" Tommy asked when we were alone.\n\n\"To tell you the truth, I'm really not too sure. The three of us hang out together. I'd probably like to get to know her better, but every time I make any advances, she clams up and puts up this ten-foot concrete wall between us. But one thing's for certain, she sure as hell likes Tina.\"\n\n\"Well, then, stupid, ask Tina what her problem is? Maybe she just doesn't like ugly, stupid, men.\"\n\n\"Ha ha, look who's calling the kettle black. At least I had the guts to stand up to Dad and buy my Harley.\"\n\n\"Stupid decisions like that don't count. Now, if he had told you not to do something in advance, and you went against him that would be something.\" We looked at each other and laughed. We both knew that would never happen. \n\nThat night, before I kissed Tina goodnight, we had a little talk. \n\n\"Honey, why does Nadine seem put off by me? Did I do something to offend her? If I did, I don't have a clue what it was.\"\n\n\"Dad, she does like you, she even told me so herself. It's just that she'd kind of a private person, that's all.\" She looked away at that point.\n\n\"Okay, spill it. You know something you're not telling me.\"\n\n\"Dad, I promised Nadine I wouldn't tell, I gave her my word.\" She had Lana's concerned look in her eyes\u2014I had to let it slide.\n\n\"I'd never ask you to betray anyone's confidence. Just tell her that if I offended her in any way I'm sorry. Okay?\"\n\n\"Sure Dad, but I don't think that will be necessary.\" With a big hug and a little tickling we both called it a night\u2014for Tina, that is.\n\nWith a glass of wine in my hand, I found myself up on the rooftop deck again that night. Memories flooded into my brain as I talked to my wife, looking for a little insight, I guess. Tears didn't flow, but I felt my eyes well up. I still missed Lana terribly. And as far as I thought I had come, it only took me thinking about the good times to bring on another bout of remorse and sadness. I loved Lana and always would, but that night I finally realized I had to move on if I was going to remain among the living. I wasn't closing that chapter of my life\u2014more like I was moving it into those memories I'd treasure until the day I died.\n\nSunday I finally finished the bathroom floor and started resurfacing the kitchen cupboard doors. With a dust mask on, Tina helped me sand the totally flat ones while I handled the more intricate ones\n\nThe week was flying by when Thursday I got a call from Nadine.\n\n\"Dad, Nadine is on the phone and wants to know about this weekend,\" I heard Tina scream up the stairs at me. I picked up the extension.\n\n\"Hi Nadine, I was just thinking about you.\" So maybe it was a little white lie, but she had crossed my mind more than a couple of times during the first part of the week.",
        "\"We on for Saturday?\"\n\n\"Hell, yes,\" I replied immediately with a lot of enthusiasm. \"I was thinking about taking a trip down A1A to Saint Augustine. We can take off from here about ten and be there in plenty of time for brunch, and I know just the right restaurant.\"\n\n\"Sounds great, is Tina coming with us?\"\n\n\"She can't make it this time. My mom and dad are taking her to lunch, and then for a tour of the Naval base where my dad works. She wants to go aboard one of the aircraft carriers. Dad arranged for her to see whatever she wants.\" \n\nThere was a bit of hesitation. \"Okay, I'll see you just before ten.\" We talked a bit after that, but it was like I had to pull every word out of her.\n\n\"We going on a ride this weekend?\" Tina asked.\n\n\"Nadine and I are. You and your grandparents are going to lunch, and then on the tour of the naval base you wanted.\"\n\n\"Why can't I come with the two of you?\"\n\n\"I need some alone time with Nadine, so I can have a little personal talk with her, that's all.\"\n\n\"Dad has a girlfriend, Dad has a girlfriend,\" she said in a singsong voice.\n\n\"I wouldn't call Nadine my girlfriend, certainly not yet.\"\n\n\"Dad, all the new HOG members thought you guys were married to each other, for Christ's sakes.\"\n\n\"Watch that language, little girl.\"\n\n\"Dad, I'm not a little girl anymore, and I know she likes you, but for the life of me I can't understand why you don't like her for a girlfriend.\"\n\n\"It's complicated, that's all.\"\n\n\"What's complicated? If you both like one another, you should tell each other. Even the kids in my school move faster than the two of you.\"\n\n\"Well, you'll be the first one to know if we start dating.\"\n\n\"You two have been doing that for the last couple of months. It seems to me the only ones who don't realize it are you two. Now, what's for dinner?\"\n\nSaturday my parents arrived just after nine to pick up Tina. They didn't leave right away. Tina told them she wanted to wait to say hi to Nadine. My mom and dad wanted to finally get to meet her too. My stomach was doing flip-flops waiting for her to arrive. I felt like a damn woman, changing my pants and shirt twice before she arrived. By nine-thirty I was staring out the window watching for her like some love struck teenager. Tina looked at me and shook her head in frustration. Nadine finally showed up ten minutes after ten, putting me out of my misery. Since it was the first time she met my parents, I made introductions all around. Nadine told my parents how pleased she was to meet them and then turned to Tina.\n\n\"Tina, sorry you can't make it today,\" Nadine said to my daughter while looking me right in the eyes. The three of us walked downstairs. I gave Tina a hug and kiss goodbye. Nadine also gave Tina a hug imparting some words of advice. \"Have fun with your grandparents, and don't you dare let them talk you into signing up for the Navy.\" After that Tina walked back up the stairs to our place to where her grandparents were waiting for her. With that done Nadine and I mounted up and were out of there.\n\nIt was a beautiful Florida morning as we rode south along A1A, the ocean road. For a while I almost lost myself looking at the water, remembering what it was like that first week we bought the house, before Lana got sick. With the windows open you could smell the salt air, hear the waves crashing onto the shore, and think about how good it felt to be alive. A beep of Nadine's horn brought me back to the present. She told me she wanted a pit stop, so we stopped at the next convenience store.\n\n\"My coffee went right through me this morning,\" she said, walking out of the bathroom and putting her sunglasses and helmet back on. I topped off my tank and two minutes later, just like the Willy Nelson song said, we were 'on the road again'. \n\nBrunch was fabulous. Nadine did give me a bit of a hard time when I told her it was my treat. After we ate we did the tourist thing, walking up and down St. George Street looking in all the shops. I bought her a little trinket to mount on her bike, and she bought me a chocolate almond ice cream cone. We walked through the historic district looking at all the old houses and checking out a few bed and breakfasts that looked interesting. By two o'clock we decided to head back up north, saying the next time we'd spend the night so we wouldn't have to rush so much.\n\nWe couldn't have been more than twenty miles from home when it happened. I was riding on the right side of the right lane; Nadine was about a bike and a half length behind me in the left side of my lane. The signal light was already red when we approached the intersection. I had slowed down to almost a crawl when the light changed to green just as I hit the intersection. Two seconds later it happened. I had just hit the throttle to speed up\u2014I never saw the car to my right speeding across the intersection until it was too late to do anything. He must have been going at least thirty when he hit the front wheel of my bike, destroying it along with my front forks and putting me into a one eighty spin. They say at moments like this time stops, or at least goes in slow motion\u2014time didn't stop nor did my bike.\n\nI don't remember my bike being spun into the side of his car, nor do I recall being hurled over the trunk of his Toyota Camry either. I'm told I rolled about twenty-five feet before coming to rest on my back.\n\nThe whole accident, start to finish, didn't take more than ten to twenty seconds. I must have gotten knocked out on impact with the car and if not then, when I was thrown from my bike and hit the pavement. All I can say is, thank God I had leathers and a helmet on and my crash bars did what they were supposed to do\u2014take the full impact, instead of my leg.\n\nThe car finally stopped along with maybe ten others. Everyone had a phone in their hands calling 911. I was stunned, not even too sure what just happened other than I knew I wasn't dead or too badly hurt. That is, at least, what I hoped.\n\nLoud shouting and yelling is what I heard. All the while the young kid kept saying over and over again how sorry he was. Around me people were telling me not to move because I could have internal injuries. But after testing each leg and then my arms, I knew they worked and were intact.\n\n\"Nadine!\" I screamed just as the first squad car arrived, sirens blaring. In the distance I could hear at least one more, but right now I had other things on my mind, not knowing if she also had been hit.\n\nOne of the patrol officers was attempting to keep all the onlookers back when I finally spotted her out of the corner of my eye. She went under his arm and was next to me a second later. Her tears flowed. We just looked at one another, saying nothing, until she wrapped her arms around me whispering in my ear, \"I thought you were dead.\"\n\n\"Only the good die young,\" I replied, trying to make a little joke to lighten up what was probably a traumatic moment for her. Me, I was trying to be the tough guy, but realized rather quickly that, although I may not have any broken any bones, I had plenty of road rash, with probably more bruises than I could handle. \n\nMy head was starting to clear, and besides wanting to see what was left of my bike, I just wanted to get the hell out of there\u2014that was unlikely to happen any time soon.\n\n\"Mr. Moore, please stay still until we get a chance to make sure you haven't broken anything,\" the paramedic said, putting gauze pads on my elbow, knee, and shoulder. My helmet and sunglasses were missing, but I still had what was left of my riding gloves on. Nadine never moved a muscle. She just sat there looking at me with her big, dark brown eyes and this blank expression on her face.\n\n\"Nadine, are you all right?\" \n\nShe said nothing. \n\n\"Doc, can you please check out my friend? I think something's wrong with her.\" \n\nThey did nothing. \n\n\"Damn it, something's wrong with her! Nadine, can you hear me?\" \n\nStill nothing. I lost my patience. I sat up and reached for her, putting my arms around her. \"It's okay, do you hear me? I'm okay, we're okay, do you hear me?\" She just sat there with this far away look in eyes. I kissed her. It wasn't some huge passionate kiss, more one of someone conveying affection and assurance.\n\nThe kiss I got back surprised the hell out of the paramedics, and me. It was passionate, overflowing with feeling and emotion.\n\n\"Well, it looks like your girlfriend is also okay,\" he said with a laugh. \"We're going to transport you to the hospital. She can either ride with us or meet us there.\" I took one more look at her.\n\n\"I think it would be a good idea if she came with us.\"\n\nOne of the two policeman said that both bikes would be transported to the impound lot.\n\n\"Is there any way possible someone can get my girl's trike to the hospital they're taking me to instead?\" The two looked at each other and said they'd find someone to do that for me. With that we were loaded into the back of the ambulance, and with the sirens screaming, we were off.\n\nNadine never left my side throughout the exams and numerous x-rays. I held her hand, touched her cheek, and kept saying it was going to be all right. I wasn't a damn doctor, but I could swear she looked like she was in shock.\n\nIt took me almost two hours to get someone to finally take a look at Nadine. I was the one they were concerned about, but I was now more worried about her than I was about myself. I was banged up pretty bad but would live, however mentally I wasn't so sure about her.\n\n\"She lost her husband when they were in a motorcycle crash a couple of years ago,\" I told the doctor as he looked into her eyes, checked her pulse, and gave her a once over. \"I think seeing me sprawled out on the ground brought back all those memories.\"\n\n\"You may be right, but there is nothing physically wrong with her. You're the one she saw, and you're the one she's concerned about. Keep giving her assurances that you're all right. As soon as she sees that and her brain understands you're okay it should bring her back. If that doesn't work, then there are other types of doctors who deal with those kind of problems.\"\n\nAlmost six hours after being admitted I was released. After giving the police my statement and finding out where I could pick up my bike the following week, we were finally done. With a bunch of pain pills in my pocket we made our way out the front door hand-in-hand.\n\nWe found her trike in the emergency room parking lot in a handicap parking spot. Nadine was still not quite all there. We were holding hands, looking into each other's eyes, wondering, I guess, what was next. There was no way in hell she was going to be able to drive us home.\n\nI found her keys and helmet in the truck of her bike. Where my helmet ended up was anyone's guess. I put her into the rear seat with her helmet on, climbed aboard, and gave myself a crash course\u2014not the best choice of words under the circumstances\u2014in the workings of a Harley trike. It looked basically the same as an Ultra I once rode except it had a reverse gear. After two tries, I finally got us situated, and we headed up A1A towards Jacksonville and home.\n\nMore than once I felt her wrap her arms around me. I would have normally turned around and said something or at least smiled at her, but after the excitement of today, I was just happy to be in one piece and heading for home. I was going to warn Tina or maybe call Tommy, but I had my hands full right now, and what the hell was I going to say? Houston we have a problem? I think not. I was glad tomorrow was Sunday.\n\nI pulled onto the driveway and parked in the rear of our house. I got off, pulled off her helmet and looked at her. Sadness was what I saw in her eyes. Things were not back to normal yet. I gave her a quick kiss on her lips, helped her off her bike, put my arms around her holding her in a tight hug before leading her into the house.\n\nInside I sat her down in a kitchen chair, gave her a soda, and grabbed one for myself. I was thankful Tina wasn't back yet. I knew my mom was waiting for my call to say we were home. I wasn't sure what to do. Nadine's eyes were following me around the room; she seemed to not want to let me out of her sight. Maybe a good night's sleep would bring her back?\n\nI called my mom. \"Mom, I have a big favor to ask of you. Would it be possible for you to keep Tina until tomorrow evening? \"\n\n\"Sure sweetheart, we'd love to have her spend the night. Don't worry about a thing; we'll take good care of her.\"\n\n\"Thanks Mom, I owe you one.\"\n\n\"Just have fun,\" she tittered. Fun is not what I was having right now.\n\nI called and ordered a pizza and forced Nadine to eat two slices. She was getting better, but there was no way I was going to let her drive home. It didn't matter that she didn't have anything with her\u2014she was going nowhere. \n\nI showed her where my bathroom and shower were, gave her a pair of sweats and one of my tee shirts, and closed the door behind me. It took a few minutes before I heard the shower start, which was a good sign. Fifteen minutes later she was done, and it was my turn.\n\nI gingerly removed what was left of my clothes and threw them on the bathroom floor. I'd probably end up tossing them out, besides the new wear marks from the street; I was sure the bloodstains would never come out. I had wrapped cellophane on my knee and elbow to keep the gauze bandages dry, knowing I would have to hit Walgreens for replacements tomorrow morning. All I had were a few small adhesive bandages\u2014sadly, I would need a lot more than that. \n\nLooking at my naked body, I saw I was a mess. Scrapes and welts were visible, no bruises yet except for the ones on my right hip and shoulder. I knew they'd be bad because I could already feel the heat radiating from them. Others would probably pop up later, but like most of my other injuries I would be able to hide them from everyone, especially my family.\n\nEven areas that weren't rubbed raw stung when the water hit them. I did all I could not to scream out in pain. I guess I wasn't a tough, hard ass biker after all. I carefully washed what I could before the sting of the soap, mixed with the warm water, got to be too much for me to endure.\n\nInstead of wiping my body I just patted it down to remove what excess water I could. By the time I was done I knew that towel would join ranks with my clothes and eventually be trashed, it too was spotted with blood. I was hurting, but also saying a little prayer under my breath, thanking God\u2014it could have been a lot worse.\n\nShorts, a sleeveless shirt, and sandals were all I could manage to get on. My left arm was fine, but with the bandages on my right elbow and shoulder, dressing myself was going to be a bit of a challenge. Like I said, I was hurting, though after popping another pain pill I knew relief was not long in coming. \n\nWhen I was done in the bathroom, I went looking for Nadine. After calling out her name twice without getting an answer I got worried. \"Damn, I hope she didn't try to ride home.\" Then I realized I still had her keys. After looking around the outside I went back upstairs. I knew where she was. Grabbing two sodas from the fridge, the pain pills making wine not an option, I headed for the roof.\n\nStruggling up the stairs, it didn't take me long to realize I was going to be one sore mother tomorrow. When I hit the top step and saw the open door I knew I was right. Nadine was sitting in one of the loungers staring out at the dark beach; the sun had set hours ago. The ocean breeze felt good on my face. She turned around, smiled, and I handed her one of the sodas before sitting down next to her with a thud. My body was moving like a crippled old man's.\n\nIt was quiet, dark, and almost peaceful, as we sat there together in silence.\n\n\"I thought you were dead,\" were the raspy words that came out of her mouth. Although it was dark I could see the tears starting again. I grabbed her hand and kissed it. She drew in a sob. \"I couldn't move. You were hit and thrown over the top of that car before I could even stop. You were just lying there, motionless, and all my body would let me do was stand there and look at you. My legs wouldn't move, and my heart had already exploded through my chest. Everything came rushing back into my brain, NOT AGAIN! People were screaming, flocking around you, and I was totally useless. I am so sorry. When I heard someone say not to move you, I knew you weren't dead, but I was afraid to look. I don't even remember walking over to you or anything else that was happening around me. I just saw that you were alive and prayed that my mind wasn't playing some stupid trick on me like last time. I wanted to scream, shout, laugh, or something, nothing came out. You were talking, except I heard nothing. I'm still not sure what exactly happened. All I knew was that you were alive, and I hadn't lost you too.\" \n\nI reached over, wiped the tears that were running down her cheeks, and gave her a soft kiss.\n\n\"I'm fine, a little banged up maybe, but fine, nevertheless. I'm just glad I was wearing a helmet and heavy gloves or it might have been a lot worse.\"\n\n\"Steve, you have no idea how worse it could have been.\" She was now talking louder. \"You could have died. How could I have explained that to Tina? She would have lost both her parents, and it would have been my fault.\"\n\n\"Your fault? Nadine, I don't understand!\"\n\n\"I was there and did nothing, just like last time. I stood there and did nothing. Greg died and I did nothing. And now you.\"\n\n\"Listen to me,\" I said, putting her face between my hands and turning it towards me. \"There was nothing you could have done to prevent what happened. That kid was in too big a hurry and did something really stupid. I'm just glad I was far enough ahead of you, or you would have been hit also.\" I kissed her again with a lot more feeling behind it this time. \"We're both fine and in a couple of weeks this will just be another bad memory to try and forget.\" This time she kissed me back.\n\nIt was some time after midnight before we found our way down from the roof and back into my place. I debated, walking down the stairs, where we were both going to sleep, but she made that decision for me. I gave her a new toothbrush I'd gotten from my dentist a month ago, and after we'd both done what we had to, she was the one who led me to my bed.\n\nNo, we didn't do it, and truth be known I don't know if I even could have. Between the drugs, and being as sore as I was, I may have been able to, but it wouldn't have been that memorable. What we did was kiss more than a little then fall asleep in each other's arms. \n\nThe pain woke me out of a sound sleep just after nine. I untangled myself from Nadine\u2014that feat taking about ten minutes. I dragged myself out of bed and into the bathroom. I took two more pain pills, and washed them down with a tall glass of water. A little swish of mouthwash, and I was easing my sorry ass back into my bed next to Nadine.\n\nCurious, that's what I was. She had on my tee shirt and some type of panties but that was it. The sweat pants were off, and I thought about lifting the covers to look at her leg, but decided against it. No use pissing her off at this point\u2014if she wanted me to see, then she would show me. The next thing I knew I was asleep again.\n\nI was slowly coming out of a semi drug-induced sleep when through the slits of my eyes I saw a familiar sight. It wasn't Tina looking at me this time, it was Nadine.\n\n\"How are you feeling?\" she asked.\n\n\"Sore, but alive.\" She smiled. \"You sleep okay last night?\" I inquired rubbing my leg up against hers.\n\n\"You snore, do you know that?\" she informed me, pushing me gently.\n\n\"I don't snore, never have.\"\n\n\"Believe me, you snore. I'm surprised your wife never said anything about it.\"\n\n\"Maybe it's the pain pills I took last night?\"\n\n\"Yeah right, tell me another.\" ",
        "I was going to tickle her or at least grab her, but with everything that had happened yesterday I backed off a bit and just leaned over and kissed her. It was soft, pleasant, and just long enough to give me the start of a hard-on.\n\n\"I'll be right back,\" she announced, throwing her legs over the side of the bed heading for the bathroom. The toilet flushed, and I heard the sink and my bottle of mouthwash being used. \n\nI didn't stare at her but I saw them, and Tina was right, they weren't small. \n\n\"Now, where were we?\" \n\nThe next half hour was filled with a lot of kissing; our hands explored each other but neither one of us made any dramatic moves. When I put one of my legs between hers, I could feel the heat. Did she want me as much as I wanted her? What the hell was I so afraid of? If she didn't want to go any further she'd tell me, wouldn't she? No more bullshit, I was going for it.\n\nAfter a bit of fumbling around I caressed her breast, and when she didn't stop me I kept on going down past her stomach, to where my leg had been for the last ten minutes. I was careful to avoid touching her right leg, knowing she was self-conscious about the scars. With both of us breathing hard I pushed her panties to the side and found what I was looking for. It was already wet and hard, I used some of her own juices to lubricate it. Our kissing became more passionate as she tried to touch my tonsils with her tongue while I continued to bring her to new heights.\n\nI heard it start at her toes and finally come out her mouth when she pulled her lips off mine. She didn't scream, swear, or much of anything else other than to hold my hand down on her until she climaxed. Damn, it went on for a long time, but I just kept going until she finally started to come down. Afterwards she took my hand and wrapped my arm around her, nuzzling her head into the nap of my neck.\n\nI heard and felt her hot breath on my chest but was unsure what was coming next. I know she liked what I did, she had to, she climaxed, for Christ's sakes. Then I started second guessing what I'd done. We weren't going to be going any further because I didn't have a condom to my name, but I was still sprouting a huge hard-on and hoped for a little relief.\n\n\"I'm not on the pill,\" she whispered in an almost apologetic voice. \"And I haven't done this since my husband died.\" I didn't have a clue where this conversation was going. \"If you want, I'll do my best, but I just don't want you to be disappointed.\"  \n\nI don't know what she was worried about. Less than one minute later I was coating the ceiling of my bedroom as we both laughed at what I'd done.\n\n\"Been a while, has it?\" At this point what was I going to do, lie? \n\n\"You could say that.\" \n\nShe was already up, and after hearing the sink run for only a short time Nadine brought back a warm wet washcloth. After a few swipes to remove what was still left, I cleaned up my chest and the pillow next to my head. When I was finished I tossed it from my bed onto the bathroom floor.\n\n\"Just like a guy,\" she said, watching me.\n\nI kissed her and started rolling around on the bed with her, a big mistake. When I rolled over onto my right shoulder, \"Ouch,\" I about shrieked, rolling back onto my left side.\n\n\"You okay?\"\n\n\"Not totally, but I think we should save the acrobatics for a couple of weeks.\" One more good kiss and I rested on my left elbow looking at her. \"You want to talk before or after breakfast?\"\n\n\"After, if you don't mind. For some reason I don't remember eating any dinner last night, and this girl doesn't think well on an empty stomach.\"\n\nI would have loved to shower with her but she had other ideas. Being right handed, shaving was going to be a real chore, and I nixed the idea of possibly trying to grow a beard. It didn't go over very well the last time. \n\nI was waiting for her when she walked out of my shower. This was the first time I'd seen her totally naked and I wasn't disappointed. Nadine had a tight body, and though she didn't have big breasts, what she had was more than enough for me. I saw the other scars that were scattered across her body but they were nothing compared to the two long ones on the side of her right leg. They were pink, about a quarter of an inch wide, and probably a little bit over a foot long each. It looked like there had probably been extensive work done on her right leg and knee, and you could still see the marks where the sutures had been. The upper part of her leg appeared to be in worse shape than the lower part. I took her wet body into my arms and kissed her. To me she was beautiful. Her big brown eyes told me she was grateful for my silent acceptance of her appearance.\n\n\"Later, food first,\" was all she said, pushing me towards the shower while wrapping her long back hair in a towel. \n\nThis morning's shower wasn't any easier than the one from last night. I skipped the plastic wrap this time figuring no matter what I did the bandages were going to get wet. I still hurt even with the pain pills, knowing I probably would for the next week or so. \n\nNo motorcycles this morning\u2014we took my car. Passing on Denny's because it was packed to overflowing, I found a small diner a couple of miles down the beach that was about three quarters full. The coffee was good, but the bacon and buttermilk hot cakes were to die for. I cried uncle after five pancakes, two eggs, and four strips of bacon. Nadine didn't even come close to eating what I'd consumed.\n\nI was washing down my meal with a cup of coffee when she started.\n\n\"Okay then, where do we go from here?\" Nadine asked. She reached across the table for my hands.\n\n\"How about back to my place?\" The look she gave me wasn't priceless.\n\n\"Seriously, where do we go from here?\"\n\n\"Well, since I can assume we are now officially girlfriend-boyfriend we can talk about what each of us is looking for and what turns on or off the other. But we do have another issue. She's short, has light brown hair, and can be a royal pain in the ass when she wants to be, along with being a real know-it-all, especially when it comes to the two of us. Did you know she told me we have been a couple for quite a few months already, only we didn't know it?\"\n\n\"Steve, I think you know how I feel about Tina, but there's another big issue we need to address, except I don't want to discuss it here.\"\n\n\"No problem, I'm done. If I drink any more coffee I'm going to float out of here. Let's go back to my place and talk. Tommy will probably be bringing Tina back with him after having lunch at Mom's, so we've got at the most two hours.\"\n\nWe held hands all the way back to my place, not saying much. Once inside Nadine gave me a big kiss, and we sat down on the couch in the living room.\n\n\"Steve, I don't know an easy way to say it, so I'm just going to tell you; I mostly likely will never be able to have kids.\" She waited for my response. \"Did you hear what I said? I may not be able to have any kids? The doctor said because of the accident I would have a hard time ever conceiving. They mentioned in vitro fertilization if I ever wanted to try to get pregnant, but it just seems so sterile to me. Besides, since Greg died, there hasn't been anyone I have even considered marrying and having kids with. So if you're looking for a boatload of kids, sorry, I'm not your girl.\" At that point she shut up. \n\n\"Nadine, I'm not looking for a boatload of kids. One more might be nice, but it is absolutely not a deal breaker for me. I've already got Tina, and if you can't, we could always adopt if we wanted another one.\"\n\n\"Also, because of my leg, skiing is out, as is hiking for any distance. I can dance, but there is a lot I can't do. My leg will never be what it once was.\" She hung her head down, and in the next sentence pronounced, \"and isn't the most beautiful thing to look at either.\" She was laying it all out there for me, almost like she was waiting for me to say this or that was a deal breaker\u2014none so far were. \"I also keep in contact with Greg's parents and probably always will. I'm their only link to their dead son.\" She was tearing up again.\n\n\"Nadine, I still see and talk to Lana's parents, and Tina has a great relationship with them. I would never come between you and them\u2014I just am not that kind of guy. As far as skiing, hiking, dancing, so what. That stuff hardly means shit to me. It's you I'm looking forward to getting to know a lot better. I know a little about you, but I want to know a lot more. Hell, Tina probably knows way more about you than I do.\" \n\n\"You're right. We've even had some pretty intimate conversations about you. She understands you a lot better than I think you realize. But, the one thing I found out immediately was that you're her whole world right now. I don't think she could be any closer to you if she tried.\" I thought I knew that, but it was nice hearing it from someone else.\n\n\"Well, Tina thinks the world of you and has chastised me on more than occasion for not making a move on you.\"\n\n\"And why didn't you?\"\n\n\"I guess I just wasn't ready to move on yet. Lana wasn't just my wife. She was also my life. We were best friends and shared everything. When she got sick we both fought it and when she died, I felt like a huge part of me died right along with her. My wanting to know you better gave me the strength to make the decision to move on with my life. Lana is still in my heart, but I want more than what her memories can give me now. I want a real person. Someone I can touch, taste and love. I want my life back. I want what every other guy wants, someone to love and live out my life with. For a while you seemed to want to be only friends. I wasn't even sure you were approachable or would even want me. But here we are, and I am ready to take the next step with you.\"\n\nWe talked on and off for the next hour. There were things we disagreed on, but most were insignificant items. We knew we weren't clones of each other, nor did we want to be.\n\n\"Oh my God,\" I said looking at my watch. \"Tommy is going to be here soon. I need to get dressed.\"\n\n\"Steve, you are dressed.\"\n\n\"No, I need to put on long pants and a long sleeve shirt. I don't want my parents, especially my dad, to find out about the accident.\"\n\n\"Steve, you're not a little kid.\"\n\n\"Nadine, you don't know my dad.\"\n\nTommy asked where my bike was and all I said was I was having some work done on it. Tina gave me a hug and then kept her eyes on Nadine, I guess looking to see any change in the way we were acting towards one another. When Tommy and his group left, Tina sat down in one of the kitchen chairs and looked directly at me.\n\n\"Okay, what happened and where's your bike? Don't even try to tell me it's being worked on.\" That girl was too smart for a soon to be ten year old.\n\n\"It just needed a little work done to the front end, that's all.\"\n\n\"On Sunday? Dad, you're not talking to Uncle Tommy.\"\n\n\"Tell her, Steve,\" Nadine said, moving closer to us.\n\n\"Okay, but don't worry, it was nothing. I had a little accident yesterday.\" Before I could get anything else out I was peppered with a million questions, most of which dealt with how I was. \n\n\"I'm fine, just a couple of scrapes and bruises.\" \n\nAgainst my wishes, Nadine told Tina the whole story of yesterday, hospital visit and all.\n\nTina listened, and then focused in on only one thing Nadine said. \"Wait a minute. Nadine, you spent the night?\" \n\nNadine looked over at me. \"I did, but we slept in separate beds.\" \n\n\"Nadine, I'm not a kid anymore.\" She was now smiling ear to ear. \"So does this mean you two are officially a couple?\" \n\nFor the second time Nadine looked at me for guidance. \"I guess we are,\" she told Tina.\n\n\"Way to go, girl,\" Tina said, giving Nadine a high five. \"Wait until I tell Grandma, she's been so worried that Dad would never find someone again. Now at least she won't have to worry about him anymore\u2014that will be our job.\"\n\nTina and Nadine went on and on about everything for the next hour or so. Nadine stayed for several more hours, ate dinner with us, before announcing her departure.\n\n\"I hate to spoil this wonderful evening, but I've got to get home. I've got work tomorrow, and it's been kind of a stressful couple of days.\" The kiss she gave was just like the ones we'd shared last night in bed. \"I'll walk you out,\" I told her. She gave Tina a hug and kiss goodbye.\n\nI walked her out to her bike, kissed her again, and told her to go slow and be careful.\n\n\"Call me when you get home, okay?\"\n\n\"Don't worry, I will. There is no way I want to loose what I just found.\"\n\nI spent the next hour answering Tina's questions about how I really was feeling which became a mute issue when I asked her to help me change my dressings. My knee hurt but that was the least of my concerns. My entire shoulder had now turned an ugly purple, greenish black, and was throbbing. It was time for another pill. I put a few old towels on the bed, so the blood seeping through the gauze pads would not ruin my good sheets.\n\nI was in bed when Nadine called.\n\n\"Miss me?\"\n\n\"You know I do. Why don't you come back and we can\u2014you know\u2014talk.\"\n\n\"So that's what you call it now?\"\n\n\"How are we going to get to know each other without\u2014you know\u2014talking to one another other?\"\n\n\"Steve, one thing we didn't talk about, but I think it goes without saying, we're exclusive, right? No others?\"\n\n\"Nadine,\" I said in soft voice.\n\n\"Well, you don't know unless you ask, after this weekend I just had to be sure.\"\n\n\"We've probably been exclusive for what, the last six months? And like I said, according to Tina, everyone knew that except us.\" She laughed.\n\n\"I guess you're right. What are you going to do about your beautiful bike?\"\n\n\"I'll call Allstate tomorrow, send them the accident report, and tell them where they can find the bike. I never did get a good look at it after the accident, just how bad is it?\"\n\n\"Steve, let's just say that maybe you should start looking for another bike.\"\n\n\"That bad?\"\n\n\"What I saw of it wasn't good. The front end was totally ripped off, the entire left side was down to the bare metal, and the rear tire and fender were mangled. As I said, maybe it's time to look for another bike. You do have good insurance, don't you?\"\n\n\"I do, but if they total my bike it's going to cost me an arm and a leg when I renew my insurance policy again.\"\n\n\"It wasn't your fault!\"\n\n\"Doesn't matter, an accident is an accident no matter who's at fault; I'll still be a future risk. It's not fair, but what in life is?\"\n\n\"Love. It's something that demands nothing, expects little, but wants only the same in return.\" We were both quiet after that. \"Call me tomorrow, will you?\" I could hear the emotion in her voice.\n\n\"You know I will.\" \n\nSleep came easy; probably was the two pain pills I took. I'm just glad I set my radio alarm and my phone alarm because I barely heard either of them when they went off. I almost skipped my shower\u2014I was already tired of hurting. Tina barely got off to school on time. \n\nThe next few days were busy, to say the least. I filled my days with doctor's appointments, meetings with the insurance adjuster, and trying to hide my injuries from my boss and family. Nothing stays hidden forever. Somehow my dad found out. Even though he said nothing, after talking to him the following weekend I just knew he knew. It wasn't like I was a kid anymore and needed his acceptance or blessings; it's just that I didn't want to worry him or my mom.\n\nWithout a bike to ride Nadine and I spent a lot of time \"talking\" in and out of bed the following weekend. When Tommy invited us over to his house in town on Saturday evening, I just casually mentioned I would be bringing Nadine with me.\n\n\"I thought the two of you weren't dating?\"\n\n\"Things have kind of changed.\"\n\nEveryone liked Nadine. When all the women headed to the kitchen I knew I was in trouble. Nothing good ever comes out of it when the women get together and talk, especially in private. They trade stories, compare notes, and my daughter, sister-in-law, and mother would have a lot to tell her about me. I just hoped they wouldn't scare Nadine off.\n\nWe were the center of attention, fresh meat for discussion as they say. On the way out when I kissed my mom goodnight she whispered, \"don't blow it,\" in my ear. I knew all I needed to know about Nadine. \n\nMy dad shook my hand and told me he hoped I felt better real soon. Like I said before, he was just letting me know he knew. Parents always seem to find out, don't they, no matter how old you are?\n\n\"That was fun,\" Nadine said on the way back to my place, watching me drive.\n\n\"Do you think it's fair that you now know all my dirty little secrets, and I don't know hardly anything about you?\"\n\n\"Ask away, I'll tell you anything you want to know.\"\n\n\"Maybe later. Right now I just want to get out of these pants and put on a pair of shorts.\" I wondered if Nadine would ever feel comfortable enough around me to wear anything but long pants, the only thing I have seen her in so far.\n\nNothing had been said about later that night. Was she expecting an invite to spend the night? We weren't high school kids any longer, and weren't going to get in trouble for a sleep over, but it was so new. I didn't want to have her think I expected it. I also had Tina to consider.\n\n\"What's the matter?\" she asked, walking into my place. I hemmed and hawed a bit before finally asking her what she was doing later.\n\n\"Oh goody, I thought you'd never ask. Can I spend the night? I'll have to call my mom, but I know she'll say yes.\" Then she gave me that all knowing look. \"Steve, I'm not a mind reader, if you want something all you have to do is ask.\" I didn't say it with words, more so with lips and arms.\n\nThis time I wanted to know and feel all of her. I gently moved my hand to her right leg feeling all there was to feel. When I felt her try to move my hand away from her leg, I whispered, \"No don't. I want to know all of you. I think you are perfect exactly as you are.\" With that said, the passion exploded from both of us.\n\nAn hour later I lay there next to her hoping that Tina had not heard us. Nadine did her best to muffle her pleasure, but I think even the neighbors may have heard her delight in what we were doing. I was just thankful I'd picked up a twelve pack of condoms earlier in the week. I still wasn't as mobile as I would have liked and it hurt like hell to put any weight on my knees, but we improvised and our first time was memorable.\n\n\"How come you used a condom?\" Nadine asked. \"What, are you are you afraid of catching something?\" \n\n\"I just don't think you getting pregnant right now is a good idea.\"\n\n\"Steve, weren't you listening to me last time? It's going to take an act of God to get me pregnant.\"\n\n\"Look, my dad got my mom pregnant when they thought she was past being able to get pregnant. Hell, my brother got Ruth pregnant, I think, by just walking past her in the hallway. The men in my family are baby makers, cut and dry, and I don't think you want a little one right now. Do you?\"\n\n\"See, that's what I mean. You start making a judgment call without bothering to talk to me about it.\" She tried to look angry.\n\n\"You want a baby?\"\n\n\"Didn't say that either. We need to talk about everything that concerns the three of us.\" She was right about that one. I wouldn't make that mistake again.\n\nI looked at the clock and saw we had enough time to get in one more session. After having more than a little trouble doing it on my knees, Nadine rolled me over on my back and said it was her turn to drive. I wasn't a real fan of this position, I liked to be in control, but it sure worked for the two of us this time.\n\nFor a brief second, I thought about Lana. The afterglow and subsequent kissing after my lovemaking with Nadine reminded me of all the great times I'd had with her. I felt a pang of guilt.",
        "\"A penny for your thoughts.\" Nadine said, smiling at me and then licking my lips before giving me one of the greatest kisses I've ever experienced. She sighed, \"You sure do know what buttons to push. I'll have to give you that.\"\n\n\"Nadine, I don't want you to get mad, but I've got a personal question I want to ask you.\"\n\n\"Shoot. After what we just did, there can't be too many personal things left between us.\"\n\n\"Please, don't take this wrong.\" I was worried about continuing. \"When you're with me, do you ever, you know, think about Greg?\"\n\n\"Cheating on me already in your mind with your dead wife, are you?\" She was looking stern, staring at me, and I immediately though I'd really blown it this time. \"Relax. I'm just surprised I didn't yell out Greg's name when I climaxed that last time.\"\n\n\"Then you're not angry?\"\n\n\"Steve, we've both got a past that includes two of the most fantastic people who ever walked this earth. They were taken from us or we'd still be with them. I think about Greg everyday and I know he'd want me to be happy. I'm guessing the same goes for you and Lana. I'm just happy we have this chance to maybe get back a little of what we each had with them. But mister, I catch you thinking about that blonde slut Rita, the one who comes to the HOG rallies, and you and I are going to have words.\" With that said, all was well in the world\u2014again.\n\nIt was Thursday afternoon before my insurance agent got back to me.\n\n\"Steve, we sent your bike over to Daytona Beach Harley Davison to have them give us an independent estimate. Our adjuster had already given us his figure, but we just needed a second one.\"\n\n\"Well, what's the damage?\"\n\n\"You're not going to like it, but we've decided to total the bike. It would cost more to fix it than what the bike is worth.\" I was ready for that, what I didn't expect was the payout figure he gave me.\n\n\"Don, that's more than a couple of thousand dollars less than it's worth. The bike doesn't even have five thousand miles on it, and it cost over thirty-two thousand to build.\"\n\n\"But Steve, you didn't pay thirty-two for it.\"\n\n\"Doesn't make any difference, we're talking worth here. Look, the bike is worth at least thirty. I paid twenty-five plus and you're offering me twenty-two. If I get an attorney and decide to fight it, you're going to spend more than four before it's all said and done. Let's split the difference, give me twenty-three and a half and we'll call it even. I'm going to buy another bike, and you'll get that policy.\" He was still a little quiet. \"Look, I'll even give you a shot at my beach house. If your price looks good you'll get the house, which will more than make up for anything on the bike. Do we have a deal?\"\n\nI knew he had a lot more latitude than he was letting on. I was in the business, just not dealing with personal property. I'd insured the bike for twenty-seven because I knew if I needed to repair something it would be expensive. He agreed. We now started talking about the beach house. It was a good deal for him since insurance was high on any property near the ocean, even one a block in. \n\nI had the check in my hand three days later, and set out with my two girls to look at what was out there.\n\n\"You've got to buy a Harley. The only question is how much do you want to pay?\" Nadine explained, walking into the dealership with Tina and me.\n\nI was thinking used, one maybe two years old. Everyone warned not to go too small because I'd eventually regret it. I was told I would soon want to upgrade to a larger, more expensive bike, and I'd lose my ass on the trade.\n\nAfter talking to the Harley dealership salesman he made his suggestion. \"The smallest bike I would recommend for you would be a Road King. It's got the windshield, side bags for storage, and is comfortable for two-up riding.\" I looked over at Tina. She didn't look all that happy about what I was looking at.\n\n\"Dad, how about that one?\" She said, walking over to a crimson red one that had a full fairing. \"It's got a trunk and a nice backrest. I could ride forever on the back of this one.\n\nNadine added in her two cents worth. \"Steve, you might find the radio a nice option on your trips to and from work everyday, not to mention that Tina could plug in her iPod on our runs.\" \n\nThere were a million different models and the same number of options available. \"I think the only way to figure this out is to try them all.\" And that's what we did. We test rode all the available models from a Road King up the Screaming Eagle Ultra. Most were new except the Screaming Eagle, which was usually a specialty order. It, however, topped everything at about thirty-five thousand, which was well above my budget.\n\nUsed, it turns out, wasn't as good a deal as I first thought. The one-year-old bikes were priced almost as high as the new ones and the warranties weren't nearly as good. We spent the better part of four hours looking. When I got it down to two I decided to sleep on it.\n\nWe all went out to Donato's for pizza. I was torn; my mind kept drifting between the two bikes. Good thing Nadine was driving us around in her Mustang because my mind was back in the Harley dealership.\n\nEven at the restaurant I wasn't fully there. \"Earth to Steve. Earth to Steve,\" Nadine called out, trying to get my attention.\n\n\"I'm sorry, it's just that it's a lot of money, and I want to make the right decision.\"\n\n\"They're both beautiful bikes, and I know you'll be happy with either one, but is that a good enough reason to ignore the two best looking women in the restaurant?\" That snapped me out of my stupor. I still thought about the bikes, but I now had other things on my mind. \n\nNadine drove us back to the beach house. I could tell she was not ready to leave for her place right away.\n\n\"You want some company tonight?\" I leaned over, kissed her, and asked her what did she think? \"I'm not sure. I don't have a fancy paint job, a faring with a custom radio, or a trunk, but I do have a few things that just might interest you.\" I opted for Nadine.\n\nWhile Nadine was in the shower, Tina asked me if she was more than just a girlfriend. She was getting used to having Nadine around, especially on weekends. It was getting to be normal for her to wake up on a Saturday or Sunday morning and find Nadine with me. I looked at Tina, dug down in my heart and tried to find an answer that would explain it to both of us. \"I care for her a lot, but that's a question I've been asking myself for weeks, and I'm not sure exactly how to answer it.\"\n\n\"Well, I like her, if that counts for anything.\" It did, more than she could imagine.\n\nI found Nadine in her favorite spot at my house, upstairs on the rooftop deck. I handed her a glass of wine and sat down next to her on the lounger.\n\n\"I love this place. It's quiet, tranquil, and so relaxing. I could spend my entire life up here,\" Nadine said with a contented sigh.\n\nIn the distance hearing the surf breaking on the shore and feeling the stiff sea breeze on my face, brought me back to the day Lana \n\nand I first saw this place, and how happy we were back then. And with her body ravaged by that God-awful disease she still wanted to spend every available moment up here. I knew how Lana felt about our rooftop refuge, now Nadine felt the same way. \n\nI didn't make love with Nadine that night. We kissed, talked, and kissed a lot more. I watched her fall asleep, like I had Lana so many times before. My mind was in turmoil. I wasn't trying to replace Lana\u2014damn it\u2014I was moving on. Then why did I feel like this? It was like I was somehow being unfaithful to her memory. \n\nI didn't sleep much that night; my brain wouldn't give me the peace I so desperately needed. In shades of Tina, when Nadine opened her eyes I was there, laying next to her, watching her.\n\nShe wiped the corner of her mouth. \"Am I drooling or something?\" I didn't say a word\u2014I just smiled and kissed her.\n\n\"You all right?\"\n\n\"Never better.\"\n\n\"You ready to do this?\" Nadine said over breakfast. I looked over at her and nodded, yes. I thought to myself, this decision is going to be easy, the next one will be a lot more difficult.\"\n\nAfter breakfast I, or should I say we, bought the two tone blue and gray Ultra. I drove what I thought was a good deal, but when all was said and done, the dealer still made his money, and I got what I wanted. Tina looked at the back seat and was all smiles.\n\nI was happy. Later the three of us went on about a fifty-mile ride, and for the first time in a long time, Tina rode on the back of my bike.\n\nIt felt good to have her back there. When we stopped for a potty break Nadine came over and looked at the bike.\n\n\"Well, any buyer's remorse?\"\n\n\"None. It's everything I could have asked for.\" I was looking at her when I said it, thinking about something entirely different.\n\nI had the second longest week of my life. This time no one died, but that didn't make it any easier. Tina kept asking what was wrong, and all I could reply was that I had a lot on my mind\u2014and I did.\n\nOn Tina's mind was the HOG run we were going on this Saturday. All she could talk about was being on the back of her dad's new bike. She hoped everyone would be green with envy. \n\nI took Friday off from work. When Tina left for school I took two yellow roses to the cemetery. It was pretty quiet at that time of the day. The lawn crew was just getting started, sprinkler heads were popping up, no matter. I was on a mission. \n\nWe talked like we always had. I had lots to say and she listened, like she had a million times before. I told her I would always love her, and that Tina was becoming the woman we always dreamed she would be. I teared up, but for the first time I didn't cry. We both knew I was moving on. I had heard about a Jewish tradition that fit the moment. I reached into my pocket, pulled out a piece of coral, and placed it on her headstone. It meant I was there and would never forget her. She was my love; she'd been my wife and my life, but no longer.\n\nTina found me on the roof when she got home from school. She wanted to know why I wasn't at work. The only explanation I could give her was I'd had something important I needed to do earlier in the day, and after that I wanted a little time to myself.\n\n\"Dad, are you sure you're okay?\"\n\n\"I am now.\"\n\nI spent the next two months getting to know Nadine, not the surface one she showed everyone, but the deep down Nadine she never let anyone see. At the same time we were still doing everything together as a family, including going to both parents' houses for get-togethers.\n\nShe had an older married brother and a sister who was three years younger than her, engaged to a real asshole, though I'd never tell her that to her face. She had a wonderful mom and dad who were just happy to see their daughter with someone who treated her well, and made their formerly sad daughter happy again.\n\nNadine was getting more comfortable around us too. She had given up wearing long pants all the time, and had taken to sometimes wearing colorful sundresses and capri pants. Though she was not ready for a bathing suit yet, she even started to wear long shorts. Black became part of the past she could finally let go of. Her period of mourning was over. I was glad to see she felt she could trust us to accept her as she is. Somehow the more we learned about each other the more beautiful she became in my eyes. \n\nIt was late November and the weather had started to get a little cool. You needed a jacket on the morning rides. For the last couple of weeks Tina had begged off attending any of the HOG rallies. She preferred her friends to the two of us. I knew the novelty had worn off. And Nadine? Well, she was a permanent fixture in our lives now.\n\nLana had been buried with her wedding rings, but my grandmother had given my mother hers before she died. Tommy was already married, and my sister Jenny? Well, she had a rock that you needed two hands to lift. So the rings were mine if I wanted them.\n\nThursday night I stopped over at my parents' house like I'd done a thousand times before. This time, though, it was different. I had a request.\n\n\"Mom, I'd like to take Grandma's rings with me tonight.\"\n\n\"Steve, you want to tell me something?\"\n\n\"Maybe Sunday, but not now.\" She went to her jewelry box, got them for me, and placed them in my hand.\n\n\"She's a wonderful girl. I know the two of you will be as happy as you and Lana were.\" I kissed her on the cheek.\n\nFriday night Nadine brought over ribs for dinner. There was a rib joint on her side of town that had the best ribs I had since we moved south. They weren't as good as the place I knew up north, but they were a close second. \n\nAt the last minute Tina begged off to go with one of her friends to a movie and for pizza afterwards. Her friend's parents were taking them, and I think there were boys involved, although nothing was said about that. She was just ten and a half, after all.\n\n\"Just the two of us tonight?\" she asked with a huge grin on her face. \"You game for a little spice with your dinner?\"\n\nWe ate in the nude sitting on the living room floor. We spread out a sheet, grabbed the food, and even drank from the chilled bottle of wine\u2014no glasses for us. It was like a picnic only a whole lot nicer.\n\n\"I love this barbeque sauce,\" I told her, licking my fingers.\n\n\"Oh you do, do you?\" She put a dab on each of her nipples. \"Let's see if this improves the taste?\"\n\nBy the time I'd finished with her nipples some had dripped onto her navel and down between her legs. This was my idea of a picnic. By the time we were done, we were both a sticky mess. Tongues can only do so much cleaning, so we were off to the shower.\n\nSex in the shower can be done, if done carefully. We tried it against the back wall the first time and failed miserably. This next time however, with a little luck and a good stable shower mat we succeeded. But never again, once was enough, that's why God made beds.\n\nTina came home about nine. Nadine and I were sitting on the couch watching TV waiting for her. After a short conversation about her evening, she headed for her room, and we headed for our bed, and it was our bed now. By eleven the Moore household was quiet, except for the pit stop I made at two a.m.\n\n\"Steve, I love you,\" Nadine said as soon as I opened my eyes the following morning. \"I've loved you for a long time, and I think we should get married.\" If I wasn't awake before, I sure as hell was now.\n\n\"You're proposing to me?\" Now I was the one sitting up, making sure this wasn't some weird dream.\n\n\"Well, since you're not going to propose to me, I might as well lay my cards on the table. Steve, I want you for my husband. I can't make it any plainer than that.\"\n\n\"What makes you think I wasn't going to ask you? Maybe I was going to do it this weekend,\" I shot back.\n\n\"Steve, if I waited for you to ask me, we'd be collecting Medicare and Social Security.\"\n\n\"How about if I was, and had the rings and everything?\"\n\n\"Okay, prove it!\"\n\nI jumped out of bed and went over to my dresser, opened up my top drawer and pulled out a small envelope.\n\n\"I'm sorry there is no ring, box, but it doesn't change the way I feel about you. Nadine, I love you. Please, will you marry me?\" I opened her left hand and began to slip on my grandmother's engagement ring on her ring finger. \n\nOkay, so it didn't fit, but it was the thought that counted. My grandmother had tiny fingers. The ring would have to be made larger, but the stone was perfect. I guess in shock, she looked at it, smiled, and gave me a huge kiss.\n\n\"Well, what do you say? Will you let me make an honest man out of you?\"\n\n\"Only if you let me make an honest woman out of you first.\"\n\n\"That'll be the day!\"\n\nYears later there was still a disagreement about who asked who first, and I would always remind her that I had the rings.\n\nWe spent Saturday together just enjoying the moment. We told Tina at breakfast, asking her not to say a word until we had a chance to tell our families. She couldn't understand why we were waiting. \n\n\"Honey, we need a little quiet time to ourselves before everything gets nuts.\"\n\nWe all had breakfast on the roof deck, after which Nadine and I walked the shore for about an hour. We talked in and out of bed and by midnight we were drained, but extremely happy.\n\nThe following day we had breakfast at her parents and lunch with mine. Neither family was surprised, but both were thankful we'd found one another. And then it began. We started planning our late spring wedding.\n\nWe told both families we wanted a small intimate wedding, even though it ended up being neither. Jenny and her family came, but I hadn't counted on our entire HOG Chapter wanting to escort our limo to the church, and then coming to the reception. It ended up being a semiformal affair with a couple of kegs flowing. The hotel where we held our reception got a lot of business from bikers who couldn't find their bikes, much less ride them home.\n\nNadine looked beautiful. She wore a tea length off-white dress that clung to her body in all the right places. Her hair was done up in a French braid with flowers running though the braid. Her smile lit up the room. Somehow Nadine and Tina found Tina a mini version of Nadine's dress, without the clinginess. The two of them looked like something out of a fairy tale. Looking at them, my heart overflowed with love and happiness.\n\nFor our honeymoon we drove south to Key West. We decided to take Nadine's Mustang instead of our bikes. We didn't want to spend a second of our time out of each other's reach. The car made the most sense, and we rarely unclasped hands the whole ride. We spent the night in Miami before making the final three-hour trip to Key West. In Key West we had reserved a room at a small bed and breakfast that wouldn't break the bank. We spent four days exploring the Keys during the day, and then watching the most spectacular sunsets while sitting on Mallory Dock at night.\n\nNadine surprised me with a few sexy outfits, except she only had any of them on for no more than a minute or two before they joined all the other clothes on the floor. As we liked to call it, we talked a hell of a lot during those four days in Key West.\n\nWe put on a ton of miles and had the time of our lives. On the way back we made a rest stop and I saw the most gorgeous chopper I'd ever seen. I was memorizing every detail of it with my eyes when the owner came out and saw me looking at it.\n\n\"You want to buy it, I'll make you a great deal.\" \n\nI looked at my bride\u2014she didn't say a word.\n\n\"Been there, done that. Now I'm riding what I really like next to someone I really love.\" Getting back into her Mustang we did the final two hours enjoying the beautiful Florida weather and the feeling you get sitting next to the one you know you belong with.\n\nIn this down economy, we decided to rent out Nadine's house. We would think about selling it sometime in the future. \n\nThat woman had a ton of clothes and shoes. We ended up purchasing two wardrobes just so she'd have a place for everything. I only hoped this part of her wouldn't rub off on Tina, or I'd have to buy my brother's unit next to mine just so we'd have enough room for clothes.\n\nI guess I wasn't as fertile as I thought\u2014I never got Nadine pregnant, though we had a hell of a lot of fun trying. Three years later Nadine's sister lost a friend and her husband in a car accident. They had a three-year old son, and none of their relatives were in a position to take the boy. We spent a lot of time talking about it between ourselves and with Tina. A few months after learning about Danny, we went through the adoption process and welcomed him into our family. \n\nIt wasn't easy. and for a while I thought we had made a big mistake. But like everything else in our lives, we all came around. We could all relate to losing someone we really loved, though that didn't make it any easier for our new son, Danny. At thirteen Tina was a big help with Danny. She bonded with him, both understanding what it was like to lose a parent. Eventually he learned to trust and love us. ",
        "Luckily we had two bikes, so we could ride two-up. Vacations were fun and even wet at times, but we were all together. The first time I heard Danny tell Nadine he loved her, I felt complete. It had all been worth it. I'm not saying it was always easy, but we thought we had the best marriage going.\n\nI still visit Lana's grave every so often. I bring her up to date, and though it may sound a little strange, I sometimes bring pictures. Do I miss her? I think I always will, but I have a new love in my life, and I know Lana understands. I tell Lana one day in the future I'll introduce her to Nadine, and I know they'll be the best of friends, but for now I'll just live my life like she would have wanted me to.\n\nThough I may have died a little when Lana left me, I'm just glad I met someone who brought me back to life."
    ],
    "authorname": "Slirpuff",
    "tags": [
        "marriage",
        "love",
        "second chance",
        "motorcycles"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-little-bit-of-death"
}