{
    "title": "My Man, My Marine, My Lover! Pt. 04",
    "pages": [
        "\"Brat\" and Brian have some challenges ahead, more so than most couples. As they face the ups and downs that all relationships face, will one or both of them give up on what they have together? It will take physical, emotional, and mental strength to adjust and deal with what's ahead of them. If they are patient with each other, forgiving when needed, and loving even in the most difficult of times, they just may prove they have what it takes to be together. They may even reach \"forever.\" \n\nThis story is dedicated to all who serve (served) their country and to the families and friends they leave (left) behind. Your service, your sacrifice, and your \"loss,\" however it is defined, can never be repaid. To each and every one of you, I extend my gratitude. Be well and Stay safe! To my editor and favorite Brit \"Flyboy,\" I thank you for the above and so much more! Thanks for crossing over to \"Erotic Couplings\" for me. You know you love it! (Author's note: Brian and Brat are a healthy and monogamous couple who practice \"safe\" sex. Condoms are in use even if they are not described within the text of this story.) \n\n~~~~~~~~~~~ \n\nWhen I woke for the second time this morning it was still bright and early. The sun was a little higher in the sky and the streams of light now entering the room were less orange and more of a bright yellow. My first thoughts of the morning, as the sunbeams scattered through the room, the largest coming to rest on Brian's face, were my memories of the past twenty four hours. Finally being able to have Brian discharged, driving him here to the lake, arguing, making love, absolutely everything was running through my mind like a video. Waking up here, with the soft sunlight streaming in, finding myself wrapped in Brian's arms, it was all a dream come true. \n\nI gently moved back a little so that I could get a better look at my man; taking advantage of the quiet time to examine him. I looked at how his hair had grown and was now about two inches long. It had these little ringlets along the sides of his temples where his sweat damped his hair and it dried in curls. I was tempted to reach up and play with them, but I didn't. \n\nMy eyes followed along his profile; then moved slowly down his jaw and neck line. I could see the pulsation at the side of his neck and desperately wanted to kiss him there. I even thought about giving him a love bite. As I continued my visual exam, I traced over his chest and abdomen. I watched his chest rise and fall with every breath. \n\nMy eyes trailed lower and I followed along the V muscle that I enjoyed so much last night. It blatantly drew my attention to and directly pointed at Brian's morning erection. This time, I couldn't resist touching him. I slid my hand down and traced over his hip and down his groin until my fingers came in contact with his cock. I was gentle at first, lightly stroking him and tracing my fingers around his crown. Stroking my fingers along his shaft and following up and down the protruding vein running the length of his cock. \n\nI sensed more than saw when Brian awakened. I could hear the change in his breathing and I could see his abdominal, pelvic, and leg muscles tighten as I continued to explore his body. I think it was the first time I ever really examined an erect penis in such detail, well to be truthful, in any real detail. I was fascinated by it. My gaze was attracted to all of the little intricacies and nuances of it. I was transfixed by the beauty of it, the shine of its taut skin, the thickness of the coronal ring, the ridges of vessels along the shaft, the dense hard feel of the shaft itself. I found it intricate in its nature and most interesting to examine. \n\n\"Are you done with your inspection Brat or are you planning on making a day of it?\" His words were meant to be light hearted, but the tension in his voice was anything but. \n\n\"Actually, I was just debating what my plan for you this morning would be.\" I quipped as I continued to lightly stroke along his cock with my fingertips. I felt his eyes on me and even though I knew he couldn't see me, I found it erotic that it felt like he was watching everything I did. \n\n\"Andrea, before we get too involved here, I have something I'd like to talk to you about.\" \n\nI knew what he was going to say before he finished his sentence. He was wondering about last night. About our love making and more specifically why I didn't orgasm. I thought to myself last night this would most likely be the first thing he would want to talk about this morning. I knew he wouldn't forget it or let it go without comment. \n\n\"What is it you want to talk about Marine?\" I tried sounding light hearted. \n\n\"You didn't orgasm last night when we made love, did you?\" He asked rather calmly and on the quiet side. \n\n\"No, I didn't, but I enjoyed everything Brian. I enjoyed everything we did and I loved every single minute we shared together last night.\" \n\n\"I'm glad, but why do you think you didn't come?\" I could hear the concern in his voice. \n\n\"Brian, please don't take this the wrong way, but the simple and truthful answer is that my mind went somewhere else.\" \n\n\"What does that mean? Because, I don't think I like the idea of your mind being somewhere else while we're making love to each other.\" \n\n\"It was with you in that sense. I was with you. It was just different.\" I wasn't sure how to explain how I felt at the time. How different things felt for me at the time and how I was a little off my game. \n\n\"Different how? I think I really need you to explain this one to me.\" \n\n\"I was close to orgasm Brian. I was very close; my mind and my body were right there with you. Then I started thinking about how much I love you. I was thinking how happy I am to have you home and with me and most of all safe. Then, before I knew it, a different emotion came over me. I felt comfort and relief. I felt happy and content. It wasn't important for me to orgasm at the time. What was most important to me was you.\" \n\n\"What do you mean?\" I gave him credit, he was paying attention to what I was saying and he really wanted to understand not only what I was saying, but what I meant by it. \n\n\"I mean, in that moment, I didn't care about my satisfaction. I only cared about you and yours. You were most important to me at the time. I wanted to make sure you were taken care of; you had what you needed. You were my focus. The love we shared was more important. I wanted to experience you. I wanted to experience you being with me, in me, loving me, more than I wanted my orgasm. So, I focused on you, and our love, and being in the moment to enjoy you.\" \n\nMy eyes were tearing and I knew my voice was starting to break a little. I kissed him lightly on his abdomen as his hand stroked through my hair; I continued to talk to him and explain. \n\n\"I realized how thankful I was to have you home. How grateful I was to have you here with me, home and safe. Then I realized how many people weren't so fortunate. How many people didn't have their loved one with them for one reason or other. My mind set changed and the only thing that mattered was that you were alive and here with me. I was just enjoying the moment of being with you. I love you Brian.\" \n\n\"I love you too Andrea.\" He quietly added, \"More than you know Brat, more than even I think I knew.\" \n\nI wanted to lighten the mood and to finish what I started before our conversation. I teased him a little by kissing his erection and smiled when I heard him gasp. I licked my lips wetting them; I tipped my face down and lightly placed a second kiss on the head of his cock. \n\n\"Fuck.\" He moaned out. He wasn't expecting that and I caught him completely off guard. \n\nI laughed lightly and kissed him again leaving my mouth in place. This time, I drew my tongue over the head of his cock and circled it with the tip. I heard him suck in a deep breath and hold it as he tried to pull his hips back. \n\n\"Jesus Andrea.\" He growled at me. \"What are you doing?\" \n\n\"Baby if you don't know what I'm doing, I must be doing it very wrong.\" I giggled as I took the tip of his cock into my mouth and swirled my tongue repeatedly around its head. \n\nBrian moaned out loud. \"UUhhmm!\" \n\nAutomatically his hands went to my hair and clenched two handfuls as he gently, but firmly held onto my head.\"Andrea, you don't..\" \n\n\"Shish.\" I said before he could complete his thought. \"I want you Brian. I want to take you in my mouth; make love to you with my mouth. Don't forget baby, you owe me a 'threefer' and by my count, that leaves me two more to collect on today.\" \n\nHis hands relaxed a little but he kept them fisted in my hair. I felt his body relax back into the mattress and his head fell back against the pillows. I could hear him take several deep breaths in and out as I started to move my mouth over his erection. \n\nIt's an intoxicating feeling knowing you have this power over a man's reactions. To know that by loving him in this way, he completely gives himself to you. There is an enormous amount of trust shared between a man and a woman when they are giving each other oral pleasure. It's a love and trust that should never be taken for granted. I wanted to not only show Brian how much I loved him, but to ensure him that he could trust me no matter what. \n\nI peeked up at his face as I slid my lips over him; his eyes were closed, his chin jutted out, he licked his lips, swallowing hard and that alone made me double my efforts. I pulled back and licked my lips until they were really wet and then I licked up the sides of his shaft, kissing it every so often. The texture of it was fascinating to me. I tried to think of a comparison, but I couldn't recall anything similar in my memory. It was firm, yet spongy and a little giving in its density. My tongue licked up each side until he was coated in my saliva. \n\nI placed my hand around the base of his cock and then took the rest of him into my mouth. I sucked my mouth closed and heard him sigh as his fingers tangled in my hair. I pulled up the length of him until Iheld only his head between my lips and then I licked around it again and again as my hand followed suit and stroked up and down to the same rhythm. \n\nAfter a minute or two of licking and stroking, I took as much of his length into my mouth as I could and sucked harder. This time, I set up a suck and release cadence. I sucked him tight and stroked him quickly with my tongue for several seconds and then released just as he would thrust himself forward. I repeated it a dozen times before Brian cried out to me. \n\n\"Andrea. I'm going to come soon, very soon.\" He gasped, his words coming out with hesitation. \"Baby... you better... stop...Oh God!... if you don't...God!...want me to...Oh Fuck!... come in your mouth.\" He rushed the last words out. \n\nHe was arching up into my mouth as he said it and pulling my hair downward so my face was right up against him. I just sucked on him harder and faster. I was in a licking, sucking, stroking rhythm when I felt his entire body tense and buck upwards. I looked up at him and saw his face was red, his eyes were clenched shut, his jaw thrust forward and every muscle in his body was contracted. \n\nI knew he was about to release and I pushed him over by gliding the ridges of my teeth up his length and then sucking him into the back of my throat. I felt the tip of him slide just beyond the back of my tongue as I swallowed and pulled him further into my mouth. I followed up on that by sucking him hard and sliding my tongue over the under surface of his erection as fast as I could. \n\nI had shared in oral sex with two other men, but I had never done anything like this before. I was taking my time, concentrating on his response, and enjoying every minute of sharing this with Brian. Any experience I had before this didn't seem to count; nothing compared to this. A heady awareness came over me. I felt a special connection with him, the love, the raw emotion, and yes, I felt the power of sex in that moment. As I peeked up at Brian one more time, I realized how much I loved him. It may have been in that very moment that I knew there was nothing that I wouldn't do for my man. That included loving him, holding him, supporting him, and anything else he may need from me. \n\nBrian moaned and arched his pelvis forward. He grasped my head pushing me onto him even more. He wasn't forceful or hurting me, he was just taking what he needed from me and I was willing to give it to him. A few seconds later his orgasm ripped through him. \n\nI felt his entire body tense at first. Then his body shuddered and his breathing stopped as he sucked in a deep breath. I could see his head and neck bow backward and the veins in his neck were protruding. Finally, he took a deep breath in and a guttural growl escaped him just before he cried out my name. \n\n\"Fuck Andrea!! Fuck!\" \n\nI heard his words tear from his gut as I felt the warm cum leave his body and shoot into my mouth. It slid down my throat and I continued to swallow as he spurted several times.My experience was limited, but I had never taken a man orally and allowed him to come while I held him between my lips before. I surely would have never swallowed his cum if he had and I know I never enjoyed oral sex as much as I enjoyed it with Brian. He tasted of a combination of saltiness and something similar to when you chew a blade of fresh cut grass. I remember thinking how unusual to taste like salty grass, but that's what I tasted. It was actually a fresh taste that I found surprising, yet likeable. \n\nI could feel the intensity of his reaction in every sense of my being. I looked up with my mouth still encompassing his cock, my lips still wrapped tightly around him, and I watched his body's response. I was ecstatic at his reaction and elated with the power I felt in that very moment. I continued to suck every bit of ejaculate from him. He continued to spurt the creamy pearl colored streams with every movement of my tongue and lips. In that moment, I was happy I had taken him to completion and not withdrawn from him. I wanted to taste him, to swallow his cum, and to share in his orgasm more completely. \n\nAll I could think of as I looked at Brian was how much I loved my man. There truly was no weight I wouldn't bear for him, no sacrifice I wouldn't make for him. While I watched him descend from his orgasmic high, a smile crossed my face, I thought to myself, \"Welcome home Marine!\" \n\n~~~~~~~~~~ \n\nIt took a while but after twenty minutes or so, I felt a nervous energy between us that had nothing to do with what we just experienced. It was a tense energy and it was emitting from Brian. He was antsy and it seemed like he wanted to say something to me, but didn't know how to go about it. I could feel the tension growing. I wasn't sure what caused it, but I wasn't going to let it go without finding out. \n\n\"What's wrong?\" I sighed as I asked him. \n\n\"I want to know something and I would like the truth.\" His voice was quiet, hesitant, but stern and I didn't understand why. \n\n\"Ok. What?\" \n\n\"Was that a pity blow job for the blind guy?\" He actually asked me that question. I was immediately fuming. \n\n\"What did you just ask me?\" The heat was escaping from my body through my words. \n\n\"You heard me Brat, was that a pity blow job?\" He sounded a little less sure of his words now. \n\n\"Fuck you Brian. I can't believe you just asked me that. I don't do anything out of pity and you should know that. If I were going to do something out of pity, it wouldn't have anything to do with sex or love. You really are an ASS with all caps sometimes.\" \n\nI slapped his chest hard with my open hand and the sound echoed in the room. If he could have seen my fist coming, I would have punched him right in the nose. Instead, I rolled over and got out of the bed. \n\n\"I'm going to take a shower and then as soon as you're washed and ready, we'll start your morning exercises.\" \n\n\"Andrea, wait a minute. I want to...\" \n\n\"I don't care what you want Marine. I'm fuming with you right now. How you took me from a perfectly peaceful and happy state to fuming is beyond me, but you did. That should have been a really beautiful moment between us just now and you screwed it up big time. Marine, as far as I'm concerned, you're in the dog house. So unless it is absolutely necessary or it deals with our plan for the day, DO NOT talk to me.\" \n\nI turned and walked into the bathroom and slammed the door so hard, I heard the pictures on the bedroom wall bang. I flipped the shower handle on to HOT and pulled my hair up, pinning it on top of my head. As I stripped my clothes off, I heard the door handle rattle a few times before I got into the shower. He knew I meant business when he tried to come in and found the door locked. Let him stew over his stupidity for a while. \n\nWhen I was done and dressed, I walked out expecting to find him still in bed. Instead, he was dressed and had coffee made and some bagels and cream cheese on the table. When he heard me coming out, he gave me his best \"I'm sorry\" smile. It was going to take a lot more than that to make up for what he'd said earlier. \n\n\"I'm sorry Brat. I should have never thought that or said it. I don't know what I was thinking. Come have some breakfast with me.\" \n\n\"Not happening Marine. I expect you outside with your cane in five minutes. Don't piss me off any further; it would not work to your benefit or advantage.\" That being said, I walked out of the cabin. As my stomach growled, I wished I could have grabbed a bagel without him knowing it. \n\nLess than five minutes later, he came out of the house. He carried his cane in his left hand, a coffee mug in his right, and a bagel with cream cheese between his teeth. He walked down the stairs and stood there. Then he made a barking sound and I couldn't help but laugh. He truly was an ASS, but he was my ASS and for better or worse, I was in love with him. \n\n\"You are killing me Marine.\" I said as I tried to stop the humor from being heard in my voice. I took the bagel from between his teeth and bit it. \n\n\"Every good dog brings his mistress a bagel and coffee doesn't he?\" He sounded contrite and I really didn't want to be mad at him all day, but I did want to clear up the issue before moving forward. I took the coffee from him and set it on the picnic table along with my bagel. \n\n\"Briansit down please.\" He tapped his cane against the picnic bench, reached down and then sat. \"We have a lot to do today. You have a lot of new information to absorb, a ton to learn and a load of homework when we're done. I have a lot of teaching to do and some more research to review before our day is over. I don't want to start the day off mad at you. I don't want today or any day we spend together to be done out of duty versus want.\" \n\n\"I don't either Brat. I'm sorry for what I said. I don't know why I said it or what even made the thought enter my head, but once it did, I felt the need to ask.\" Brian closed his eyes and swallowed hard before he continued to speak. \"Can we put this behind us and move on? Can you forgive me for being so stupid and for being, an ASS with all caps?\" \n\n\"Baby, I can and do forgive you and yes, we can put it behind us and move forward. I just need to know that you don't believe that I could or would ever do anything that I truly didn't want to do with or for you. Especially anything involving sex or love. I think you know me better than that. In fact, I know you know me better than that.\" \n\n\"I do Andrea; you know I do. I don't know what came over me. I guess, in doubting myself, I started to doubt you too.\" He reached his hand out in the direction of my voice as he continued, \"I'm truly sorry babe.\" \n\n\"Ok, enough said.\" I took his hand and gave it a squeeze. \"We have a lot of work this morning. Let's get started by reviewing some of the techniques we'll be working on today and over the next few weeks. Ok?\" ",
        "\"Yes Ma'am, Drill Sergeant Ma'am.\" He mocked a salute in my direction. \n\n\"Remember you said that Marine. Because over the next few weeks, every morning, I will be your D.I. and you WILL follow my orders. Understood Marine?\" I smiled at him, but from the serious tone of my voice, he would never have known I was doing it. \n\n\"Yes Ma'am.\" He answered in full Marine voice. \"As long as I can give the orders later in the day.\" He laughed. \n\n\"That will depend on how well you perform during the sun light hours Marine.\" Now, he heard the humor in my voice. \n\n\"Oh, like a reward system?\" He actually licked his lips as he said it. \n\n\"No, more like a classical command and response theory. I command; you respond. Like Pavlov.\" I couldn't help but hear the laughter in my own voice as I said the words. \n\n\"Hmmm. I think I like the reward system idea, it sounds better and there is no dog or dog house involved in that one.\" His voice was almost childlike as he teased with me. \n\n\"I'm sure you would Marine, but it's not happening. Now let's get started. First I want to explain the concepts of the activities we will be doing today. With the cane techniques and activities, our goals are that there will be no tripping, falling, or physical collision with any items as you use the cane.\" \n\n\"Makes sense to me. I'd like to avoid all of those things too.\" \n\n\"Good. In order to do that Brian, you're going to need to use your cane more efficiently and effectively. Do you remember how they taught you to do a sweep with the cane to avoid those things?\" \n\n\"Yes. I think so. I wasn't really listening and I really just wanted to get out of there. I probably should have paid more attention to what they were saying. I know they were all trying to help. At the time, I refused to believe I needed it. Now, I regret my decision and my stubbornness. Like you said, more than once I might add, I can be an ASS.\" \n\n\"Well, it's too late to beat yourself up about it now. Besides, before we left Walter Reed, I visited with all of your therapists and they gave me a few handouts and manuals that are full of instructions and helpful hints. Let's practice out here. To make it more interesting, we're going to add in some sensory cues for you to identify and follow.\" \n\n\"Not to be stupid or anything, but what's a sensory cue?\" \n\n\"Well, your other senses will need to be more or less 'trained' to a heightened level. They will help to compensate for your blindness. This is called 'Sensory Development.' For example, you will need to use your other senses to figure things out and provide you with more information. Since visual input is about eighty percent of the sensory information sent to the brain, you have to make up some of that loss by using information from other senses. Like using your sense of smell to identify the direction of the kitchen, or what's cooking, or the location of a fire pit. Also, use the feeling of the warmth of the sun on your body to judge your position in relation to the sun or direction. Things like that.\" \n\n\"I guess that makes sense.\" \n\n\"One more thing I want you to do when working through the exercises and activities today. Every time a sense provides you with information, you should try to attach a mental picture to it. When a memory comes to mind, picture it and put as much detail into your mental picture as possible. Remember the colors of things, how they were shaped, where they were placed. Things like that. It will help to strengthen your Visual Memory and confirm the information to your brain from the other senses. It will also help, so you don't forget what things look like.\" \n\n\"Can you forget what things look like? Brat, where did you learn about all of this?\" He was curious and wondered how his neuro psychologist had all of a sudden become an expert on blindness. \n\n\"Yes, you can forget. That's why these exercises are so important. I've done a little bit of research on each of them. I've talked to a few of the experts at PENN and then again at Walter Reed. If you're a good boy and do well, I may even write a case study on our little experiment.\" I tightened my grip on his hand for support. \n\nHe pulled me to him and grabbed me around the waist. Enclosing me in his arms and against his chest, he kissed me long and hard before he started to speak again. His voice was calm, but full of emotion. \n\n\"I know you Brat. I know you better than you think I do. I know when you say you've done a 'little bit of research' it means you've spent days, if not weeks, researching this. I also know that if you say that you met with a 'few of the experts' at both hospitals, it probably means you pestered the shit out of anyone who could have been of any help. So, don't try and play it down.\" \n\nBefore I could even give him a response, he was kissing me again. His arms were around me, his hands were moving up my back and over my ass and his lips and mouth were on a seek and find mission. It took a minute before I even remembered to take a breath. God, my Marine knew how to kiss. All thoughts left my head during that kiss. Finally, when he broke away from my mouth and I could regain my thoughts, I knew I had to redirect quickly before we ended up back in the cabin and most likely, back in bed. Not a bad option, just not part of the schedule for the morning. \n\n\"Brian, stop it.\" I smacked his ass playfully. \"We don't have time for any play now. We have work to do and you promised you would pay attention and work hard.\" \n\n\"I did; didn't I?\" He gave me a quick kiss and a pat on the ass. \"Ok Brat, let's get the lessons started.\" \n\nWe worked hard that morning and almost every morning for the next several weeks. We would wake up, have breakfast together and then start in on his exercises. When he wasn't working with the cane on an obstacle course I'd set up, he was leading the way on a walk or hike to get the lay of the land and really test his cane skills. It was only a few weeks before it became second nature for him to use the cane outdoors. \n\nAfter about the third or fourth week, his cane became an extension of his body. The man who originally hated the cane, now kept it at the door and never went out without it. It was amazing how fast and how well he adapted to using it. I knew he would learn quickly; it was his nature. If Brian put his mind to something, nothing would stop him from succeeding. Watching him outdoors, on his own again, was heart-warming. It was like watching him before he was blinded. \n\nIndoors, he had such a strong mental picture of the cabin and the placement of everything, he didn't need to use or depend on his cane to get around. He never bumped into anything. One day, when I wasn't thinking, I moved the chair away from the desk and it was in the walking path of the bedroom.Without any cane, but just his senses, Brian knew it was in his way. He stopped, moved the chair back to where it belonged and then turned to look in my direction. I'd seen what happened in the reflection of the dresser mirror and was curious to see how he would handle it. He did very well. \n\nI could see his confidence and independence coming back stronger week after week. He was standing tall again. He smiled more often than not. He initiated a lot of the activities we did when we weren't actively working on his rehabilitation. Our conversations were back to normal and life with Brian was starting to look familiar again. He was even back to teasing me as often as possible.Even when I almost sent him tumbling over a misplaced chair. \n\n\"Brat, are you trying to kill me?\" It was all he said before coming over to me and giving me a kiss. \n\n\"No, I'm not trying to kill you. Let's say, I'm reinforcing \"visual memory and sensory perception\" with you and adding a new exercise into your daily sensory programs. I explained to you how the mind has a memory of how things looked and where they should be. I'm making sure that all stays fresh in your brain and doesn't get lost because you don't call on its use. Every day, we should spend an hour or so just reiterating visual recall.\" I tried to cover up my forgetfulness with the perfect deflection and excuse. \n\n\"That all sounds great babe, but I don't believe a word. I know you just don't want to admit you forgot to put the chair back where it belongs.\" He laughed. \n\n\"Ok, well there's that too. If you're going tonitpick about things; I guess that could be one explanation.\" \n\nI loved working and playing with my man. Sometimes I would give him the name of an object and he would have to describe it to me in detail. We made a game of it after a while. I started to write down names of things and I would list ten or more characteristics about them. Brian would have to describe the object or item until he mentioned all of the items on my list. Of course, he decided a reward system should be incorporated with his achievements. So, as I made the items and characteristics harder for him, he upped the ante on his rewards. \n\nWe had been at the cabin for just over two months. It was like old times between us and everything was going really well.One night, we were lying in bed and I was giving him objects for visual recall. I said, \"Ok baby, I have a hard one for you. I have twenty items on my list for this object, if you get all twenty, I'll give you the reward of your choice.\" \n\nHe laughed at me. \"Any reward I want is mine. Is that the deal?\" \n\nI could hear in his voice that I may have just made a deal with the devil or at least the little devil in my man. I knew before I even finished my offer that I may have just made a huge error in judgment, but it was too late to withdraw, but I tried anyway. \n\n\"Within reason of course,\" I added. \n\n\"Nope,\" he said, \"too late to change the negotiations. A deal's a deal. You said the reward of my choice for all twenty items on your list. Shoot. What's the item? And Brat, don't even think of trying to cheat me or welching on our deal.\" \n\n\"Would I do that?\" I tried to sound innocent, but I don't think I pulled it off very well. \n\n\"Yes, I think you would if you thought I wouldn't find out and you wouldn't get caught.\" He pulled me into his arms and held me close to him. \n\n\"Ok, the thought may have run through my head, but I would never really cheat you.\" \n\n\"I'm sure you wouldn't.\" He almost sounding convincing if he didn't laugh after he said it. \"Come on, what's the item?\" \n\n\"Your jeep,\" I said almost regretfully. \n\n\"Baby, you are so screwed. There isn't anything on that jeep that I don't know by heart. I'll get all twenty and then some. You my dear are mine and I plan on using my reward to my advantage.\" He laughed at me this time. \n\n\"Ok Marine, stop cocking off and start listing the items.\" \n\n\"I so know you babe, first item listed is the radio; second is the antenna.\" He sounded so cocky as he said it. \"Am I right so far?\" He was still laughing. \n\n\"Shut up and list all twenty.\" I hit him in the ribs. \n\n\"Come on Brat, be a sport. Were the first two items the radio and the antenna?\" \n\n\"Yes. Now don't be an ass and keep going and don't forget you're supposed to be making a mental picture of everything in your head so you can recall what it looks like.\" \n\n\"Babe, I'm definitely forming a mental picture in my head, but it may not have much to do with my jeep.\" \n\nTo my dismay, he listed about thirty items before he had my list of twenty complete. I couldn't believe it. I thought for sure he would have missed at least a few of them. He even listed the tear in the back seat from a friends pocket knife that punctured the upholstery. \n\n\"Did I win yet or do you want me to keep going until you decide to tell me I have all the items on your list?\" He pulled me closer and kissed the top of my head. \"Don't be a sore loser; tell me I won already will you?\" \n\n\"God I hate it when you get so cocky.\" I teased him. \n\n\"Baby, you're lying and you know it. I know for a fact that you love when I get cocky. In fact, it's one of the things you love about me most.\" \n\n\"Oh please Brian, get a grip on that ego of yours.\" \n\nI pushed at him, but he grabbed me and started to tickle me. I couldn't stand it after a while and started to scream between my fits of laughter. Tears were rolling down my cheeks as he continued to tease and tickle me. \n\n\"Tell me I'm the winner and I'll let you go.\" \n\n\"Ok, you're the winner.\" I cried out between tears, laughter, and sobs. \"Brian, let me go before I pee myself. I have to go to the bathroom.\" I was practically ready to wet myself before he finally stopped tickling me. \n\nI jumped out of the bed and walked into the bathroom with a full bladder and the intent to pee as soon as possible. I no sooner sat down than Brian walked in and stood a few feet in front of me. My first thought was that he must not have realized that I really needed to pee. \n\n\"Brian, I'm in here.\" \n\n\"Yeah, I know.\" I saw a smile cross his entire face. \n\n\"Well...\" \n\n\"Well...What?\" He laughed. \n\n\"Brian, I can't pee while you're in here.\" \n\nI was getting annoyed because I had to pee so badly and now I couldn't. I never could go to the bathroom when someone else was in the room. Even when I went out to clubs or restaurants, I would wait until the bathroom was empty before being able to go. I know it sounds weird, but that's the way it is for me. \n\n\"Why?\" Was all he said. \n\n\"Brian, I'm not explaining things to you. I just can't. Now get out; I have to pee.\" \n\nI knew he could hear the frustration in my voice. I could hear the frustration in my voice. I could hear the desperate need to relieve the pressure in my bladder in my voice. I felt the little muscle spasms starting that occur when you have a distended bladder. \n\n\"I don't understand. Why can't you pee with me in here? Do you have pee anxiety?\" \n\nHe walked closer to me as he asked his inane questions. He was standing right in front of me and I was tempted to reach out and hit him where it hurts if he didn't get out and leave me alone so I could go to the bathroom before I ruptured something. \n\n\"What the hell is 'pee anxiety'?\" I asked more annoyed than curious, but still curious. \n\nI knew the moment I asked, I was an idiot for falling into conversation with him. All I wanted to do was to go to the bathroom and pee. ALONE! \n\n\"It's like performance anxiety, only with pee. You can't perform or in this case, you can't pee because you're nervous in front of an audience.\" \n\nI was just thinking that what he said made sense, but I also realized that I didn't care what it was. I just wanted to pee. As these thoughts were running through my head, I noticed Brian was starting to kneel in front of me. \n\n\"Marine, just what do you think you're doing?\" \n\nI had no clue what he was up to, but it appeared to me that he was up to no good. I couldn't see anything good coming out of his being on his knees in front of me while I was seated on the toilet and dying to relieve my bladder of its contents. \n\n\"I'm going to help you.\" He looked all innocent with those big brown puppy dog eyes looking at me. \n\n\"Help me what exactly?\" I said half annoyed, half not believing what I was hearing and seeing. \n\n\"Help you get over your 'pee anxiety'.\" \n\nAs he said this, he placed his hands on the insides of my knees and started to slowly slide them up the insides of my thighs. When he reached the top, he started to knead the soft flesh of my inner thighs between his fingers and thumbs. \n\n\"Brian, stop that!\" I thought he was a little nuts. \n\n\"Relax baby. I'm here to help.\" His voice was getting all soft and he was facingdown, as if looking at his hands, and smiled like the Cheshire cat. \n\n\"Well, I don't know what you can do to help other than get out and let me go pee. ALONE!\" I repeated. \n\n\"I know exactly what I can do to help.\" God, his voice was getting all sexy. \n\nHis smile grew as his right hand started to make a directional change and made its way to my sex. He started to trace his fingers along the fatty folds of my lips as he kneeled in front of me. \n\nI gasped, \"What the hell are you doing?\" \n\n\"Relax baby. I just want to help you.\" His voice changed even more. \n\nI recognized that change, that sudden deep, quiet whispery voice. I knew his \"sexy\" voice when it was used. All of a sudden he became a little quieter, a little softer, almost as if he didn't want anyone else to hear him. As if he was talking to himself. It was a smooth silky sound with a little guttural tone to it. \n\n\"Brian...\" I didn't get to complete my thought. \n\n\"Shuuussshh.\" He was quiet and he had that calculating predator look in his eyes. I imagined this was the look he learned in sniper training. The look that said he was concentrating on his target. The look that kept him focused on only one thing. It was a look that showed no hesitancy, no question, only determination. \n\nI couldn't argue with that look or with Brian. His fingers had started to take their toll on me. I could feel, in spite of myself, my body reacting to him. Watching him kneeling in front of me, feeling his hand on the inside of my thigh, and the other stroking my sex while I was still unable to pee was rather erotic.Erotic and somewhat torturous to my bladder. \n\n\"Brian.\" It was something between a whisper and a moan as his name exited my lips. \n\nIt was that very second that he knew he had me. I saw a little twinkle in his eye. It was a hint of self-satisfaction that he had won the battle, but still was intensely planning the war. I knew this man, as well as, if not better than he knew me. \n\nI personally, would say better than. However, in the long run, does it really matter, who reads whom better, if both people are happy? The answer is no, but I still like to think it's me reading him better. I'm just a little wiser with experience now and know not to say it out loud any more. It's enough that I know it; I don't have to flaunt it, at least most of the time. \n\nMy breathing picked up some as he continued to slide his fingers along my sex. He took that as a sign to ramp things up a bit and he moved his hand from inside my thigh to my hip and then slid it back over my ass cheek. Goose bumps covered my body as his fingers started to lightly trace the very top of the crease to my ass. In response, I found myself leaning forward slightly. \n\nThis movement was seen as a notice to advance in Brian's mind. So he did. He started to use a third finger to massage along my slit. In seconds, he was gliding his middle finger along the inside of my folds. I was excited and wet and it didn't matter to me anymore if I peed. Somehow, it became a secondary need. \n\nWithout conscious thought, I reached up and started to stroke Brian's face. I was tracing his lips when he nipped at the tip of my finger and sucked it into his mouth. Circling it with his tongue sent all sorts of naughty thoughts through my brain. \n\n\"Kiss me.\" He said as he tilted his head up. I made my own advance strike and took his mouth a little harshly. I explored his mouth with my tongue and was rewarded with a groan from deep within him. I was also rewarded by his hand leaving my ass and taking up a new tactical strike on my breast. \n\nIn the middle of our kiss, Brian had managed to pull my sleep shirt up and lift my breast out of the cup of my bra. He held it in the palm of his hand and traced his thumb across my nipple. I could feel the warm heat start to spread through my body. His fingers in my sex were causing all sorts of nerves to fire. My stomach was doing somersaults. My lips and tongue were on a mission of their own and now my breasts were called into action. My mind couldn't focus on all of the stimulation individually, so it all seemed to melt into one tidal wave of heat and excitement as it rolled through my body. \n\nBrian broke from the kiss slowly. He started to kiss at my breast. He licked over the soft tissue and took as much of it as he could into his mouth. He licked and sucked as if it were his last supper. Knowing just how to push me over the edge, he started to suckle my nipple hard between his lips and whip his tongue across it simultaneously. ",
        "All the while his tongue was assaulting my nipple; his fingers were advancing in me. He kept his ring and index fingers gliding along my silky inner lips as he inserted his middle finger. Now his tongue and fingers were in a synchronized attack on my senses. Thank God for his \"Tactical Warfare\" class. My man knew his advancement techniques. Every move he made brought me closer to \"losing\" or \"winning\" this battle. It all depended from which vantage point you were viewing it. \n\nAs my body fell into the loss of thought and only reacted to the sensations of touch, I reached orgasm. As he lightly bit into my nipple and sucked it even harder into his mouth, I cried out his name. His fingers never stopped their maneuvers even as I peaked. I could feel the wetness of my excitement leak from me and knew it was going into Brian's hand and finally, simultaneously I felt the release of my bladder. \n\nI began to pee and Brian never once stopped his gentle touch. I peed over his hand and wrist and still he continued to lightly stroke me down from my pinnacle. His tongue licked more gently at my breast, his teeth stopped their teasing grind on my nipple, and he started to place little kisses over my breasts. \n\nAll I could do was lean my head forward and rest it on the top of his head as I waited for my breath to come back and feeling to return to my some parts of my body. As I became more grounded, I kissed his head and then his cheek. \n\n\"You never cease to amaze me Marine. Even when I think I know everything there is to know about you, you come up with something new. You sometimes make me wonder where you get these ideas from, yet I realize I may not really want to know the answer to those questions.\" \n\nHe kissed my lips softly. \"It's not the questions or the answers that matter Brat. It's the results.\" He laughed as he kissed me again. \n\n\"The results so far have been wonderful Marine.\" I smiled and kissed him to reinforce the fact that I wasn't jealous of how he received the knowledge, simply happy that it was me with whom he was sharing it. \n\n\"You haven't seen the half of it yet baby!\" He laughed teasingly and with a certain amount of promise in it. \"Wait till you see what I have planned for later.\" \n\n\"Later?\" I shook my head. \n\n\"Yes Brat, I said later.\" \n\nI closed my eyes and swallowed the lump in my throat. Then I prayed that whatever he had planned was at least as good as his \"helping me to get over my 'pee anxiety'.\" \n\n~~~~~~~~~~ \n\nAfter our little bathroom experiment, it was getting late and I for one was a little tired. Of course, when only one person is tired and the other looks as if he has gotten his second wind, no one gets any sleep. I could tell by the energy in his voice there would be no sleep for a fairly long while. By the look on my man's face and the light in his eyes, tonight was going to be a marathon. \n\n\"Brian what has gotten into you?\" \n\n\"I don't know exactly babe. I think taking that hike earlier today gave me energy. Talking about my jeep and doing that memory recall kind of amped me up some too.\" He lowered his voice a little as he started to kiss my neck. \"Not to mention our little 'pee anxiety' experience. God only knows how exciting I found that endeavor.\" \n\n\"You liked that did you?\" I said sarcastically. \n\n\"Baby, I not only liked it, I loved it. That was exciting. Didn't you feel it?\" His voice got even deeper. \n\n\"No. I still can't believe you did that.\" I tried to sound stand offish, but I knew I failed when I almost started to laugh at the sound of my own voice. \n\n\"Yeah right, you enjoyed it and you know it.\" He teased. \"Me on my knees in front of you; my hands between your legs.My fingers touching you, stimulating you. You frustrated because you can't pee, but still getting turned on by my touch. Baby, I felt and heard your reactions. No matter how much your words deny it, everything else said you enjoyed it.\" \n\n\"You're nuts! I only did it for you.\" I laughed. \n\n\"Ok, if that's what you need to believe then go ahead. My question is what else will you do for my benefit?\" \n\nAs he said this, his hands started to move over my neck and chest. He kept kissing along my neck as he whispered sexy little comments and questions to me. \n\n\"Brian what exactly are you up to? What devious plan do you have now?\" I asked as he nipped and kissed along my collar bone. \n\n\"I'm not up to anything baby and I never have a devious plan when it comes to you. Diabolical maybe, but never devious.\" He growled. \"Besides, I'm doing exactly what you told me to do.\" \n\n\"Really, when did I tell you to bite along my neck and fondle my breasts?\" I kissed his temple as he moved his head in better position to bite my earlobe. \n\n\"Baby, I'm not fondling your breasts, I'm improving my sensory memory. You know, feel the object and then make a mental picture.\" He was actually trying to sound serious as his fingers traced around my nipple. \n\n\"Oh! Well then carry on Marine. I surely will not interfere with your homework and therapy.\" I started to laugh and then gasped as he pinched my nipple to focus my attention. \n\n\"If I remember correctly and if my mental picture is correct, I recall a breast about the size of a nice large California navel orange.\" He said as his hand molded over my breast and gently caressed the soft tissue. \n\n\"Um hmm.\" Was all I said as he continued to kiss along the side of my breasts as he squeezed my soft tissue in his hand and then caressed nicely again. \n\n\"I believe I also recall a pretty dark pink areola with nice perky dark nipples.\" He whispered as he took my firm little erect nipple into his mouth. \"Am I correct?\" \n\n\"Yeesss.Mmmm.\" I moaned as he drew his teeth over the top and bottom of my nipple and lightly bit down on it. \n\nHis hand started to stroke down my abdomen and came to rest on my mound as his mouth followed directly behind it. The base of his hand rested on my mound just above the top of my slit. He started to apply a little pressure and made small circles as he continued to physically and verbally tease me. \n\n\"If I remember this correctly, it is partially shaved, but still has a nice amount of hair to say \"woman\" and not girl.\" \n\n\"Yes, woman.\" I whispered as he placed little kisses from my belly button to the top of my womanhood. \n\n\"Oh baby, now I really need to make sure I have 'visual memory' because if I never regain my sight again, I never want to forget what this looks like.\" \n\nAs he said this, he slid his fingers into me and started to stroke along my wet silky walls. His finger glided back and forth, caressing every inch of me. He would slide all three of his fingers along the insides of me caressing along my inner labia and the walls of my outer lips. The more his fingers moved in me, the wetter I became. \n\n\"Do you like this baby?\" He said right before I felt his tongue lick my slit. \n\n\"Oh God, yes!\" I cried out. \"Oh Brian, please.\" \n\n\"Not yet baby. I need to finish my homework.\" \n\n\"Oh shit!\" I almost yelled as his tongue followed the path of his fingers. \"Brian!\" \n\n\"Now, back to my recall.\" His voice was getting husky and I knew he wouldn't be able to tease me much longer. \"Let me see if I remember what's in here. I remember small lips that were a pinkish plum color, were very soft, and tasted like raspberries when I ate you out.\" \n\nWith that he started to lap the flat of his tongue along my sex. He slid his middle finger in and started to finger fuck me as he continued to describe my pussy in great detail. Every word he said made me wetter and with his finger inside, I didn't hold much hope of holding out for too much longer. \n\n\"Brian please. Please baby.\" I started to beg. \n\n\"Please what Andrea. What is it that you want baby?\" He was definitely playing with me now. \n\n\"Please Brian, make love to me. I can't take it too much longer.\" \n\nThen he did the unexpected. He rolled onto his back and patted his thighs. \"Come on baby, straddle me and let me touch you while you're on me. I want to be in you and be able to touch you all over for a while before we come.\" \n\nI never heard Brian say anything so calmly and yet so wantonly before. I moved up to where he was laying and I straddled his waist. I lifted myself up and reached down to take hold of his cock. He took a deep breath in as I wrapped my fingers around him and placed him in me. Then I slowly lowered myself onto him. \n\nI just sat there with him inside for a few minutes. He rested his hands on the front of my thighs and then he asked for some oil. I reached over to the side table and grabbed the body oil. I placed a few drops in his hands and sat back as he started to massage my thighs. I never felt so wanted in my life. As he massaged, I started to move up and down on him. The faster I moved, the higher he bucked until he was coming inches off the bed. \n\n\"Brian, slow down baby. We're not in any rush.\" \n\nHe did immediately and then ran his oiled hands up my torso and took hold of my breasts.They slid over my skin so smoothly, so lovingly, that his touch was almost ethereal in nature. \n\n\"Are you ok Andrea?\" He whispered so quietly, I barely heard the question. \n\n\"I'm ok baby, I'm so very much more than ok, don't worry.\" I said as I started to move a little faster up and down. I leaned forward just a little and started to rotate my hips in a forward motion. \n\nBrian pushed himself up into a sitting position. He reached behind me and grabbed my ankles. Then, he wrapped my legs around his back. In one fluid movement he rolled me over onto my back as he took the top position. He slid a pillow under my hips and slowly started to rock and thrust forward. \n\n\"How's that babe?\"His voice full of love. \n\n\"It's great baby; you're perfect. I love making love with you.\" \n\nThat was all he needed to hear for the next few minutes he thrust into me like there was no tomorrow. He was sucking my nipples and kissing my breasts all the while he was thrusting his body up and in. I felt my body preparing for release. My breasts tightened and my pelvis started to match his speed and force. I was so wet I could hear the sound our sexes made as he slid in and out of my sex. It was wonderful to feel and experience this with him. Nothing else mattered as we made love to each other. \n\n\"I'm going to come any second now baby!\" I lifted my hips as he pushed into me. \n\n\"Come Andrea. Whenever you're... ready baby.\" He was rushing the words out. \"I wish I could see... your beautiful face. Talk to me as you come; talk me through it as you come.\" \n\n\"Oh Fuck! Brian you feel...so good. I feel my...muscles clenching..Oh God! I feel the heat...the tension in my body. Oh Brian, I feeeel...every inch of you...inside...my pussy. Oh God! I can't Brian, I have to come.\" \n\n\"Just let go.\" He said on a moan. \"Uugghh.\" \n\nI couldn't hold it back any longer. My body had a will of its own and I just felt a pure rush of energy as every muscle in me contracted and released at a rapid pace. I felt the flow of the warm fluids leak from between us. The sound two people make as their bodies come together during sex got louder. \n\nSeconds later, he reached his own peak and his body responded similarly. He held his body weight on his forearms as his lower body continued to buck and thrust. His facial features were so drawn and twisted as he tried to control it but he couldn't. He was trying to hold back and I could feel myself tighten around his cock. I kept squeezing and releasing my muscles and pushed him into the abyss. \n\nHis body shook as he experienced his release and this time he did scream out. \n\n\"FUCK Andrea! Oh! FUCK! FUCK!\" \n\nHe fell forward on top of me as his body trembled from his climax. I stroked his back as I felt his breathing slow. Several minutes passed as we lay there. He didn't pull out of me. I enjoyed the feeling of his body weight holding me down. I loved being covered by him, protected by him, and consumed by him. I felt like I was whole again. I felt like my heart could beat easier now. Just as I had that thought, I heard Brian ask me something. \n\n\"What Brian?\" \n\n\"I asked if you liked your heart.\" He whispered into my ear as he turned his head toward me. \n\nIt took me a second or two before I realized that he was holding my heart locket in his hand between us. \n\n\"Yes, I love my heart. I love him very much and I'm glad to have him back.\" I had tears in my eyes and it was easy to hear the emotion in my words. I had worn the heart he gave me every day since I took it out of the box. This was the first time Brian mentioned it since he returned home. \n\nHe realized what I said immediately and it didn't take long before he showed his thanks. I felt his kisses in my ear first. Then I felt his tongue run along the side of my neck causing a charged response to run down every nerve ending in my body. A few playful kisses were strategically placed before his hands were all over my breasts, immediately followed by his mouth. I felt him slide out of me as he lifted his body weight up and leaned on his side. \n\nHe started to talk quietly as we continued to make love to each other. \"Baby, I don't know if you are aware of how thankful I am to have you in my life.\" He hesitated; then he continued. \"From day one, you have been there without question, without doubt. You made me see how stupid it was to put things off between us for any longer. You made me realize how much I wanted to make love to you.\" He continued to kiss me as he spoke. \n\n\"You are the only thing that kept me grounded when I was over there. Anytime I started to think, 'What the fuck are we doing here? Or will we all make it out of here?' It was my thoughts and memories of you that would make me fly right.\" He continued to slowly caress his hands all over my body. \n\n\"The day that I read your letter and you laid me out for being \"fucked up\" and \"lost in my shit\" was an eye opener. When I told you my head was up my ass and you told me to \"unfuck myself\" I knew if it weren't for you to come home to, I might not have done so well those last few months. I know I've thanked you before, but I want to thank you again Andrea. Thank you and know that I love you for everything you do and for everything that you are.\" \n\nHe stopped talking for a few minutes and then went back to his love making. \n\n\"You're welcome Brian. I know you do. I've loved you forever, but maybe now is a good time to remind you that no matter what, I will love you forever! There is nothing you can say or do to get rid of me, so you should face it like a man; you're stuck with me Marine. Forever!\" \n\n\"Forever is good with me Brat. In fact, Forever is perfect.\" \n\nHis hands massaged and stroked my body while his mouth was on its own journey. My Marine didn't need to be sighted to carry out the mission in his mind. He was licking my nipples, sucking my nipples, tweaking my nipples until I couldn't take it anymore and tried to push his mouth and hands away from my over sensitized flesh. I didn't think either one of us had the strength to make love again so soon, but if he wanted to try, I was there with him. \n\n\"Brian enough there, move on baby.\" I moaned as he took one last nip at my breast tissue and I teasingly slapped the side of his head. \n\n\"Watch it Brat, I'm still recovering from a head injury.\" He laughed as he started to kiss under my breasts making a half moon shape as he followed the curve there. He placed little butterfly kisses along my rib cage and continued down to my hip bone. Then he licked with the tip of his tongue along the ridge of my hip and down into my femoral groove. He switched back to kisses as he covered my mound with his delightful orchestration of little kisses and suckles on the soft tissue. \n\n\"Spread open.\" I felt his hands slide between my thighs and he started to stroke my labia. He took his time, he was in no rush, and I felt every amazing touch of his fingers. Just when I was enjoying this feeling for the third time in just over an hour, he stopped. \n\n\"Turn over.\" He softly ordered. \n\nHe placed his hands on my hips and guided me as he turned me face down. He stroked along my back and over my ass a dozen times before I started to relax in that position. I was nervous when I was face down and Brian knew it. He was kneeling behind me and I could feel him pulling the pillows from the bed. He piled them on top of each other and aligned them right next to my hip. \n\n\"Lift up.\" He said as he pulled both of my hips off the bed and pushed the pillows under my pelvis with his knee. Now, my ass was a several inches off the bed and I was in a jack-knifed position, with my butt up in the air. I was a nervous mess but Brian soon relaxed me. \n\n\"Trust me.\" His words were spoken so softly and with complete love that I had no reason not to. \n\nHe rested his hand on the curve of my lower back. He gently added pressure in order to still me as my body started to shake involuntarily. \n\n\"Hand me that body oil again.\" His voice was all sexy and deep again. \n\nI reached over to where it lay on the bed and gave it to him. I could hear him rubbing his palms together and then I felt his warm strong hands gliding over the muscles in my back. It was wonderful. As I started to relax, his hands moved down to massage my butt. I stiffened and he lightly smacked my ass. \n\n\"Relax Andrea. I'm not going to touch you anywhere you don't want me to.\" He laughed. \"At least not yet baby, but I'll get to it if you allow me. Don't you worry.\" \n\n\"Brian!\" I could hear his muffled laugh as he leaned down and kissed my ass cheek. \n\nHe continued his massage until I finally calmed down again. \n\n\"Open your legs.\" He said as he slid his one hand between my thighs and placed his other on the curve of my back, massaging in firm circles. He started to massage between my legs, from my perineum forward, as he quietly and calmly talked to me.Reassuring me with his hands and his words. \n\n\"Andrea, I want to pleasure you in a way you might not be totally comfortable with.\" I gasped at his words. \"I want you to trust me.\" \n\n\"What does that mean Brian? Not totally comfortable with.\" \n\n\"I will not hurt you and if you relax and let things happen, I promise you the most amazing experience of your life. Can you relax for me baby? Can you trust me?\" He was calm and I could hear the love, the reassurance, the control, the strength in his voice, but that didn't stop me from shivering. \n\n\"Brian what are you going to do?\" My voice shook, I was so nervous but I was also majorly aroused by his massage, his touches, and his words. I did trust him, I was just nervous not knowing. \n\n\"I'm going to claim my \"ANYTHING you want reward\" and bring you to orgasm by stimulating your G-spot.\" He said it so matter of fact, that I was a shocked. \n\n\"That's not fair Brian. You can't just attach your reward to anything.\" I sounded whinny even to my own ear. \n\n\"Baby, you said, 'ANYTHING!' There were no rules or conditions attached.\" I heard him holding back his laugh. \n\n\"I think you're cheating.\" I was actually unsure if I was teasing or testing him. \n\n\"No cheating baby, claiming my reward.\" He tapped my ass with his open palm. \"Now, don't be a sore loser. You're about to make out on this deal.\" \n\n\"Humph!\" \n\n\"It may take some time Andrea. It could take a fair amount of time, but I promise it will be worth it if you just relax and let me pleasure you. I think I can bring you to multiple orgasms if you let me.\" \n\n\"Brian, that only happens in romance novels and erotic stories, not real life.\" \n\n\"Don't be so sure baby. I have it on good authority, this will work.\" He sounded so certain and sure of what he was saying. \n\n\"How do you plan on doing this?\" I still wasn't convinced. \n\n\"I'm going to insert my thumb into your vagina to stimulate you. The pad of my thumb will rest on your G-spot and I'll massage it. If it works for us, you will orgasm like never before. Do you trust me?\" ",
        "\"Yeeeess, but...\" My head was spinning but I couldn't deny I was sexed up. I could feel how wet he made me just touching my back and ass as he explained to me what he wanted to do. When he said he wanted to insert his thumb in to stimulate me I felt myself get so wet right then, I tightened up. \n\n\"Try to relax Baby.\" \n\n\"Brian.\" I wasn't sure what I wanted to say. \n\n\"Ready?\" He asked calmly as his left hand remained firmly placed on my lower back. I could feel his thumb stroking inside my pussy and gathering my juices. Then I felt the pressure just over my vagina. My body tensed. \n\n\"Relax baby. I love you. I want to do this for you.\" I took a deep breath and exhaled as I tried to relax. \n\n\"Ok. I'm ok.\" I just kept breathing slowly, in and out. \n\n\"Good baby, now just calm down and breathe. Focus on my touch. It's just the two of us here. It's me and you enjoying each other. There is nothing to be worried or nervous about. We love each other and we are appreciating each other and sharing our love. \" \n\nI could feel his hand on my back slowly moving in small circles once again. His thumb pressed against my vaginal opening and then he entered me. It was an odd feeling, different, but not painful. I thought to myself, \"Here I am, ass end up, bent over pillows, my man's thumb in my vagina, and I'm totally content just because I'm with him and I know he loves me. I'm still nervous as fuck, but I'm content with him.\" \n\nAs I thought it, I took a few deep breaths and I felt my body relax. I trusted Brian. I had no reason to be nervous. I wanted to be calm. I started some breathing exercises and I tried to concentrate on the fact that it was Brian. My Brian, my love. I trusted him. I loved him. I knew he would die before he would hurt me. \n\nI focused on what he was doing. I could feel his thumb inside and he was pressing down firmly and making little circles. Then he would change his movement to side to side, after a few minutes, he changed to up and down strokes. I started to feel like I had to pee again. The pressure was building. \n\nBrian started to press a little harder and was making circles again. I could feel the build-up of energy and tension in my pussy and my body started to tremble, it was getting intense. I had to pee, I could feel it. I had to move, but his hand was firm on my back and now he was straddling my lower legs, pinning my legs between his. \n\n\"Brian, stop, I have to pee.\" I cried out, my body now shaking uncontrollably. \n\n\"No, you don't have to pee baby. It's just the feeling you get before you're going to come. Ride through it Andrea. Let go and ride through it.\" \n\nHe kept a firm pressure on my back and tightened his legs along mine. He kept pressing and rubbing his thumb in circles and all of a sudden it hit. \n\n\"I can't Brian. I have to pee, I have to move.\" I was yelling at him and I couldn't stop my body from squirming. \n\n\"Let go Andrea. Let go.\" He kept repeating it quietly, reassuringly, over, and over. \n\nIt was like a freight train hit me at full speed, I cried out and my body bucked. I was squirming and my muscles were contracting, I was breathing so hard and fast, I thought I was hyperventilating. \n\n\"Brian... Stop... I can't...I can't\" I cried out, but my body was pulsating and I couldn't think. \n\n\"Brian.\" I cried out again. \n\nHe started to press harder and his thumb was moving faster and my world just fell out from under me as the most intense orgasm of my life took over my body. My head sank forward into the mattress, my back arched, my ass quivered, my legs shook. Every muscle in my body was in spasm and I screamed over and over again. \n\n\"Oh God! Brian!! Brian!! Brian!! Fuck!! Fuck!! Brian!! \" \n\nI could barely catch my breath as the spasms continued to run through my body. He kept his thumb inside but he stilled his movements for a minute. Once I caught my breath, he started again. It wasn't even two minutes before that freight train hit me again. \n\nI was over the edge, I was bucking and screaming. I was cursing him at the same time telling him more. I was trying to pull away, but my body couldn't move. Again, I felt the charge of energy surge through me as he continued to massage my G-spot with the pad of his thumb. He was pressing even more firmly now and I could feel the pressure in my abdominal wall. I was soaked and fluids were literally dripping from me. It was like nothing I had ever experienced or heard of before. \n\nI was breathless at the end of the second orgasm and I felt light headed. I would have sworn I was going to pass out. Finally, he stopped massaging me again and my body started to calm. I no sooner got my breath back and my heart rate was just starting to come down and he started stroking again. \n\n\"No Brian, I can't. Not again. I can't.\" All the while I'm saying this my body is rocking into his hand and my mind is saying enjoy it, you want it again, just enjoy it. It got to the point after the third or fourth experience that I just couldn't move. I couldn't think. I couldn't do anything. I felt like I had left my body and I was floating somewhere else. \n\nI don't know how long it was between the time we started and the time I finally recognized the fact that I was now lying flat on the bed and Brian was lying next to me. I could see his lips moving and I could hear sounds, but nothing was registering. Finally, it started to clear. \n\n\"Andrea. Are you ok? Baby I need you to talk to me. Are you ok?\" His voice was sounding nervous. \n\n\"I'm ok.\" I barely croaked the words out. \"I'm ok.\" I repeated. \n\nI was still in a fog. I could hear Brian's soft words and I could feel his hands rubbing up and down my body, but nothing made sense or registered with me. I just lay there thinking of what my body was feeling and what had just happened. When things finally cleared I could hear Brian. \n\n\"Andrea baby, please talk to me. Let me know you're alright.\" \n\n\"I'm alright Brian.\" I used my last bit of energy to reach over and touch his hand. I locked my fingers with his and pulled his hand to my mouth and kissed it. I slid my hand up his arm until I could reach behind his neck and brought him down to meet my mouth and kissed him. His face was barely an inch from me and he had a look of pure joy on it. \n\n\"Brian, what was that? I never felt like that, not even when I played with toys. I think I had at least five orgasms.\" \n\n\"I think it was more like seven and you could have had more, but I thought you passed out. You wouldn't speak to me and I couldn't get you to listen to me. I stopped and just positioned you as comfortable as possible and kept talking to you as calmly as I could. Truthfully, you had me a nervous wreck. I told you if you relaxed and trusted me you could have multiple G-spot orgasms and you did.\" \n\n\"Do I even want to know how you found out about this and who you practiced this on?\" \n\nI wasn't sure I wanted to know the answers, but I felt I had to ask the questions. I wasn't even sure at this point if it mattered because he would only be practicing this little technique on me from now on going forward. But if he was willing to answer, I was willing to listen. \n\n\"First of all, I didn't practice on anyone. Let's get that out of the way.\" He was annoyed that I posed the question. \n\n\"Sorry but I had to ask.\" I kissed his cheek. \n\n\"For future reference, I did not 'get happy' with anyone other than my own hand. If I remember correctly, I had your permission for that.\" He laughed. \n\n\"Yes, you did.\" \n\n\"Second, I found out about this G-spot thing when I was overseas. Some of the men were talking about it one night and I overheard their conversation. They said they were on some kinky website called literotica.com and one of them read about it on a thread called, \"Try This &amp; Report Back,\" by Mr.G or Mr. GGG. It was something like that.\" \n\n\"Really?A kinky website?\" Now it was my turn to laugh. \n\n\"They said the guy was really interesting and detailed in his description. He had some technical advice and directions on the \"how to\" aspects of it. He sounded like he knew what he was talking about, so they tried it. According to them, it was a big hit. So, I filed the Intel and looked up the site. It sounded like fun even if it didn't work. I figured we could play when I got home and see if you liked it. By the sound of things I would say you did.\" \n\n\"Oh Baby, I did. I did. I did!\" I kissed him after every \"I did.\" \n\n\"I only wish I could have seen you as you came with each orgasm. Although, I have to say, listening to you is very fucking sexy. You got very dirty mouthed when you hit your third climax.\" \n\n\"I wouldn't know, I don't think I remember much after that. I just remember thinking this can't be real and then I was floating and watching things from afar. Sounds were muffled and nothing made sense. The only thing I know is that I came around to your voice asking if I was ok.\" I yawned and tried to stretch out. \n\n\"Baby you're wasted and I'm not far behind you. Let's get some sleep now.\" He lightly kissed my lips. \n\nI laughed, \"Before I go to sleep, I should send a thank you letter to Mr. G for his instructional site.\" \n\n\"I'm sure he would appreciate it, but that can wait until the morning.In fact, he asks that people post information on his thread if they try this technique. We'll have to post our accomplishments. A lot of the threads are testimonials to how well his technique works for people.\" \n\n\"Baby, please tell me you are kidding. I'm not posting my name and information on a naughty erotic web site.\" \n\n\"Not our names Brat, just a tag name and our feedback or we can be anonymous. Now, go to sleep. I'm wasted.\" \n\nHe pulled the covers up and over us and held me in his arms. Within minutes we were both asleep. \n\n~~~~~~~~~~ \n\nI awoke in Brian's arms. I could tell by how much sun was coming through the patio doors that we had slept late. I looked at my cell phone and it said, ten thirty five. I turned to see Brian still asleep, he was wrapped around me like my own personal shawl and his left leg was draped over my thighs. I can't accurately describe the feeling of waking in his arms. I can only say that I felt loved, wanted, protected, and blissful. It was the most idyllic way to wake up together after everything we had been through and dealt with over the past few months. \n\nI'm not sure exactly what time we fell asleep, but I do know it was after three in the morning. My body felt exhausted, my muscles were tight, there was a dull ache through every inch of my body, and I couldn't stand the thought of having to get up and walk into the bathroom. I lay still for as long as I could and then my bladder said, it's now or here and now. So, I smoothly unwound myself from Brian's body and went to walk to the bathroom. I didn't even make it off the bed before something between a cry and a screech came from me. It was very high pitched. \n\n\"Oouuhheee!\" I practically feel back down onto the bed and that hurt just as bad. \"OOhhh!\" \n\nIn seconds, Brian was sitting up and reaching for me. He went to pull me back into his arms but I cried out to stop him. \n\n\"No! Brian, please don't move me.\" \n\n\"What is it? What's wrong?\" \n\nI could hear the fear and tension in his voice as he crawled the few feet separating us and softly rested his hand on the middle of my back. He was as gentle as he could possibly be as he caressed up and down my spine. He stopped every few inches to massage his palm into my muscles. I could feel a slight tremor in his hand as it moved along my spine. \n\n\"Baby, what's wrong?\" His voice was full of tension. \"Tell me, please tell me.\" \n\nI needed a minute to calm myself and to clear the emotion from my throat. Tears had formed in my eyes the first time I moved and when my ass hit the bed, they just started streaming down my cheeks. I had never been so sore in my life. I felt like someone physically beat me up, my body ached, and my vagina felt a little abused. I was afraid to say anything because I didn't want to hurt Brian and I didn't want him to feel guilty about the pain I was in. We had such a wonderful night I didn't want anything to change that. \n\n\"Brat, if you don't answer me right now, I'm going to get really pissed. I can't see shit and you're making me very nervous. Now tell me what's wrong.\" \n\n\"Please Brian, give me a minute. I need a minute and then I'll tell you.\" I was trying to hold back my tears, stay calm, breathe, and put words together and all of it had somehow become too difficult to do. \n\nI tried to move my legs slightly, but even that was painful. The throbbing between my legs was intense and it seemed to project from my vagina to my lower abdomen. It was worse than any cramps I'd ever had and it didn't appear to be lightening any time soon. I wiped the tears from my cheeks and took a few deep breaths and then slowly exhaled. I tried to focus my mind on anything but the pain. It took me a few minutes, but I felt at least that I could talk without crying. \n\n\"Brian, I'm very sore, very, very sore. My whole body aches, some areas more than others.\" I wasn't lying; I just wasn't being too specific with the truth. \n\n\"Oh God, Baby I'm sorry. Fuck me! I wasn't thinking! I just wasn't thinking! Fuck!\" \n\nI could hear the anger in his voice and the self-recrimination. I was trying to avoid this, but it was too late now. He was in full blown self-blame mode and there was little to do now except redirect him. If I couldn't redirect him, he was going to keep beating himself up and that wasn't going to help either of us. \n\n\"Brian, neither of us could have predicted this happening. Maybe one of us should have thought about it, but we didn't. So, we'll know better next time. Right now, I need your help. Baby, I really can't move without some serious pain in parts I didn't know could hurt this bad.\" \n\n\"What can I do? What do you need? Just tell me Brat, anything. Tell me what you want me to do.\" \n\n\"First, I need you to calm down. It's not a life threatening emergency; it's a little pain. Ok, it's more than a little pain, but it will resolve. I need you to get me my overnight bag. I have ibuprofen in it and right now, I could use a few. I also need you to go get me a glass of water.\" \n\n\"Done baby, I got this for you.\" \n\nIn seconds he was off the bed and moving to the side table in the room. He knew exactly where my bag was and quickly brought it back to me, setting it right next to me. Without hesitation he was off to get me a glass of water. I watched as he walked out of the bedroom and went into the kitchen area. He was back two minutes later with a glass of water and a carton of juice from the refrigerator. Not once did I hear him bump into anything. \n\nIf I didn't know he was blind, I would have thought he had twenty-twenty vision. He performed perfectly. That's when I became absolutely sure that bringing him here was the best choice for him. I no longer felt guilty or concerned about not taking him home to his parent's house. It's also when I knew that if for some reason, he didn't regain full vision, he would be fine. We would be fine. \n\n\"Baby, here is your water and I brought you some O.J. in case you want juice instead.\" \n\n\"Thanks Brian. I'll take my pills with water, but the juice is a good idea. I need to rehydrate and get some electrolytes back in me. That's half the reason my muscles feel like shit; I'm dehydrated.\" \n\nJust then it hit me. How did he know it was orange juice in his hand? \n\n\"Brian, how do you know it's orange juice?\" \n\n\"Magic Powers Baby, remember.\" He smiled down at me. That smile made me think, if I didn't hurt so badly right now, I would have my way with him. He leaned down and kissed my head as he said, \"Either that or I may have opened the carton and smelled it to make sure of what it was. I figured at worse I would be bringing you milk.\" \n\nWe both started laughing. \n\n\"Sit with me Brian.\" I moved my bag so he could sit next to me. \n\n\"What do you need Brat? Tell me and if I can do it for you I will. I can't tell you how sorry I am or how stupid and guilty I feel. This is my fault. If I could take your pain I would.\" \n\nHis voice was getting a little shaky as he continued to berate himself over what happened. \n\n\"Brian, I know you didn't do this on purpose. I don't want to hear any more I'm sorry or I'm guilty. I don't blame you and I need your help, so I need you to stop that and help me.\" \n\n\"Ok. What do you need?\" \n\n\"First, give me that orange juice. Then go in the bathroom and let the hot water run. There are towels on the shelf next to the sink. I want you to take two, soak them in hot water, wring them out and bring them to me please.\" \n\nAgain he was off like a bunny doing my bidding. I took the ibuprofen and drank two glasses of orange juice before he returned with the hot towels. \n\nHe had them nice and hot and they weren't dripping anywhere. He handed me one and kept one in his hands. \n\n\"Brian, I need your help to move back onto the bed. Do you think you can help me?\" \n\n\"Baby, I can do whatever you need me to do.\" \n\nHe leaned over gave me the other towel and lifted me up like I weighed nothing. He turned so that I was long ways on the bed and gently placed me down. He felt around for the pillows on his side and gently lifted my head and back before placing the pillows behind me. I was in a partial sitting position which helped to relieve some of the pressure in my sensitive parts when I kept my knees bent. \n\n\"Thank you Brian. You were very gentle, I appreciate that Baby.\" I held his hand and kissed it. \n\n\"Brat, what is your plan for these towels?\" \n\n\"I want to fold the one and put it between my legs to help ease the muscle pain. I took the ibuprofen, so I should start to feel some relief in an hour or two. Why?\" \n\n\"Can you roll onto your side a little?\" \n\n\"Yes. Why? What are you planning Marine?\" \n\n\"Relax Baby, I'm here to help.\" \n\n\"Hmmm. If I thought you would laugh and not take it seriously, I'd say, \"The last time you told me to roll over and relax is what got me here.\" I was smiling and made sure he could hear the laughter and jest in my voice. \n\n\"Yeah, well someone told me I shouldn't feel guilty about that, so I'm not. Now roll over and let me put this hot towel on your back and bottom. I want your muscles to loosen up, I felt how tight they were and you're only holding tension and pain in them. As soon as the towel starts to cool I'll give you a gentle massage.\" \n\nI did as he asked and he placed the hot towel down the length of my body. It felt great as the heat seeped into my muscles. I could feel him touch the towel every few minutes. When it was no longer warm he took it off my back. \n\n\"Brat, give me that towel from between your legs. I'll go run the hot water on it again and it will be nice and hot while I massage your backside.\" \n\nTrue to his word, my man returned with a nice hot towel and gave me an excellent massage. So much so, that I fell asleep.When I woke it was almost noon and I could smell food cooking. My first thought was \"umm, that smells good.\" My next thought was, \"Is it a good idea for Brian to be cooking.\" I didn't have a time for a third thought because, I realized Brian was done with the cooking and was actually out on the patio and was placing food on the table. \n\n\"Brian, what are you doing?\" \n\n\"I figured you'd be getting up soon, so I heated up some lunch for us. Don't move and I'll be right over to help you.\" \n\n\"Brian, how did you heat up the food? Did you cook? On the stove?\" I was a little nervous about that. I already knew he had blown off most of his physical and occupational therapy when he was hospitalized. So, I wasn't sure how safe it was for him to be working with open gas flame. \n\n\"Calm down Brat. I sniffed around in the fridge and I mean that literally. I sniffed the stuff my Mom made and I picked out some lasagna and heated it in the microwave. I think it's safe for me to use a microwave. I can still push a couple of buttons you know.\" ",
        "\"Brian, it's safe for you to do a lot of things. I know you can use a microwave. I know you can do a lot of things to perfection. What I want you to promise me is that you won't try to do anything that may cause you to get hurt. Ok?\" \n\n\"Yes. Ok. Now, let's get you something to eat.\" \n\nHe lifted me into his arms and headed for the patio. \n\n\"Brian wait, I can walk now Baby, I'm not as sore as I was earlier.\" \n\n\"Are you still hurting at all? And don't lie to me; I want the truth.\" \n\n\"I won't lie, I still hurt a little, but it's not too bad. I can walk and I'll take two more ibuprofen after I eat.\" \n\n\"I'd rather carry you if you still hurt. You're not heavy and I like having you in my arms.\" He kissed my face. \n\n\"Ok then turn around and carry me into the bathroom first. I have to pee worse then ever and don't bang my head off of any walls or anything! I'm already hurting all over my body.\" \n\n\"Shit, the two of us are a pair. Can you imagine seeing us from someone else's view point; the blind guy carrying the girl who can barely sit up, let alone walk without being in some degree of pain as they try to get around together. It makes for quite a sight I would think.\" \n\n\"You know what makes it an even better or funnier sight?\" I couldn't help myself, I just realized what we looked like as Brian said what a sight we made, and I started laughing. \n\n\"What is it? What's so funny?\" He really didn't know what I was laughing at. \n\n\"Brian, there's a naked blind Marine, carrying a naked sore woman out to the patio for lunch. You have to admit that is pretty funny.\" \n\n\"Shit Andrea, I've been out on the patio since you feel asleep. I didn't even think about the fact that I was walking around naked. I wonder how many people saw me.\" He actually looked mortified by the thought. \n\n\"Did you hear any 'hey baby you look good' or any whistles?\" \n\n\"No.\" \n\n\"Then, no women saw you, so I don't care about the rest. Now take me to the bathroom or we're going to see how well you clean up pee off the floor.\" \n\n\"Yes Ma'am.\" He gave me his mock Marine voice as he carried me to go pee. \n\nThe rest of our day went along perfectly smoothly. We relaxed and had a naked lunch on the patio. Then we had a naked nap in the bed and I was treated to another massage. The stiffness was finally starting to leave my back muscles. We had a naked shower for two, where I again got a full body massage, only this time it was with the hot water pulsating from the shower head Brian guided over my body as we stood together under the rain shower. Finally we decided to put some clothes on before we thought about having a nice dinner and going for a short walk along the lakefront. \n\nThe day was perfection and so was the evening. We ended our walk in front of the lake below the cabin. Brian stood facing the water with his head tilted towards the horizon. I knew he was remembering all of the beautiful sunsets he had watched from that exact position. I also knew he was missing his sight more right this second than he probably had since the explosion. I stepped behind him and placed my arms around his chest. I held him close to me as I quietly started to describe the sunset. \n\n\"It's beautiful Brian. The sun is still just above the tree line. It won't be but a few minutes before it falls below the ridge and the trees. It's one of those big burning red-orange suns we get this time of the year. The heat rays being emitted are a golden orange and they spread forward over the trees and are just touching the water's edge. The sky behind it is a darker shade of magenta with streaks of purple, pink, and mauve. The sky itself is clear of clouds and it has just a hint of dusky blue settling in now.\" \n\nI kissed his back, right between his shoulder blades. My hands held him tight around his waist. He took one of them and placed it to his mouth. His kiss was light and he held my hand there for several seconds before he spoke. \n\n\"Tell me more Brat. Describe it all to me just like you did.\" \n\n\"The sun is just kissing the tops of the trees now. It's slowly lowering and the shades of orange, purple, pink, and mauve are deepening. It's setting faster and all you can see now is the very curve at the top, but the burnt yellow is blending into the golden orange and more purples and blues are coming out in the sky.\" I remained silent for a few minutes as the sun set and the evening sky took over. \"It's gone now; all that's left is the color streaked sky. The shades are turning darker and a little duller now that the sun is no longer emitting its rays through the gas vapors. It's a beautiful sky, calm, and clear. Soon it will darken and we will be able to see the first star of the night.\" \n\nAs I said the last sentence, I could have bitten my tongue off. I couldn't believe I said \"we\" instead of \"I.\" It was too late to fix it now. I only hoped he understood my intent. A moment later, I knew he did. His hands covered mine on his chest wall and he squeezed my hands against him. \n\n\"Thank you for that Baby. I saw the sunset through your words and I knew exactly what was happening as you described it to me. You're right, it was beautiful. Let me know when you see the first star. I want to make a wish together.\" \n\nI just kept holding him. I pushed my body closer as I pulled him back towards me. I did what I always do when we stand quietly like this and I placed several kisses between his shoulder blades and along the back of his shoulders. \n\n\"Brian.\" \n\n\"Yeah Brat.\" \n\n\"I love you.\" \n\n\"Yeah, I know Brat.\" \n\n\"Brat.\" \n\n\"Yes Marine.\" \n\n\"I love you too. I've loved you for most of my adult life and I will love you for the rest of it. I've loved you for a long time. I'll love you for a long time to come.\" \n\n\"How long a time Marine?\" I asked as I kissed him again between his shoulders. \n\n\"Forever Brat!\" He whispered. \"Forever!\" \n\n\"I like Forever Marine. I like it very much!\" \n\n~~~~~~~~~~~~~~~~~~ \n\nDear Readers and now Friends, \n\nBrat and Brian's story can end here at sunset with them knowing they will love each other forever. It can, if you choose, go on a little further and have the \"Happily Ever After\" if that is what you would like. Please vote and comment on the story and on the ending that you would be most happy with for our couple. \n\nI hope you enjoyed the story as it stands, at least so far. Thank you for following along with Brat and Brian and for being so kind and generous with your comments and support. Their love story is playing out all over the country in so many ways. Please remember that not everyone has the chance for the \"Happily Ever After.\" Support your service men and women in any way possible. It can be as simple as a \"Thank you for your service.\" or a \"Hey can I give you an assist with that?\" \n\n\"Always Faithful\" and Thank You, \n\nApple"
    ],
    "authorname": "Apple_of_Eden",
    "tags": [
        "marine",
        "blindness",
        "love",
        "friendship",
        "sex",
        "oral sex/cunnilingus",
        "intercourse",
        "pee scene",
        "orgasm",
        "sexual exploration"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/my-man-my-marine-my-lover-pt-04"
}