{
    "title": "A First, My Friend's Sister Ch. 06",
    "pages": [
        "So began the most memorable summer of my life. Jeanie and I had fallen for each other. It was quick and passionate, and it would forever change the way I felt about love, friendship and destiny - for better and for worse. The roller coaster ride had begun, and so would come the highs and lows, the thrills and chills, that came along with it.\n\nIt began with the high of being drawn to Jeanie. Though we knew it could be problematic, neither of us could quell the unquenchable desire we had for one another, and neither wanted to. We became a couple and we found as much time to be together, and be intimate, as possible. But though we enjoyed our time together, there were certain moments when I could tell Jeanie was preoccupied with another, more pressing thought. It was as though she was lost in the moment, and her eyes seemed to go unfocused and distant. When I asked her what was on her mind, she would inevitably laugh it off and say it was nothing. So I waited until she was ready to tell me what was going on.\n\nThat time finally came in late June, the night she graduated. We had been together for over a month, and our love had blossomed over that time. I was proud to watch her graduate with one of the highest GPAs in her class, and my sister, Jocelyn, graduated as well. The night of the ceremony, Jeanie's parents threw a small party for her with friends and family. I spent the first part of the evening celebrating with Jocelyn and my family, then I ran over later to hang out with Jeanie and her family.\n\nTony let me into the house when I rang the doorbell. Things between Tony and me had gone fairly well now that he was dating Jeanie's friend Theresa, but he still had moments when he could be an ass about me being with his sister. Tonight was one of those nights, apparently, when upon greeting me at the door, he announced to the group that \"Frankie's little boy toy\" had arrived, thereby embarrassing us both in front of her family. Jeanie promptly told him to shut up and I rolled my eyes as I entered the house. Her family was good-natured about it all though, as I talked with aunts, uncles and cousins and had a nice time hearing all sorts of funny stories about Jeanie's early childhood. I'd met most of the family before, so there was very little awkwardness, but they did enjoy poking fun at the fact that Jeanie and I were now dating.\n\nWhen the party wound down and her family headed home, Jeanie and I ended up downstairs hanging out on the couch in their family room, a couch that had by now seen its fair share of erotic moments between Jeanie and me. Tony and Theresa were upstairs hanging out, but although Theresa did a great job of keeping Tony in check, we still wanted to be away from him and alone for a while. Jeanie lay in my arms as I lightly stroked her hair, the TV tuned to a mostly ignored and forgettable old movie.\n\n\"So you've finally graduated, Giana,\" I said, \"now I can't make fun of you for being in school anymore.\"\n\n\"I'm sure you'll find something else to make fun of me about, Jim,\" she retorted. \"I have full confidence in that.\"\n\nI laughed and nuzzled my nose into her neck. \"Yup,\" I snorted, \"you can count on that.\" I gave her warm kisses on the back of her neck and enjoyed her little giggles in return. After a moment she leaned back and looked into my eyes.\n\n\"There's something I need to tell you,\" she said softly, then looked away from me, as though she didn't want to look in my eyes anymore. \"I've needed to for a while, but I just couldn't work up the courage. And I've been nervous about it all night because I thought it might come up...\"\n\n\"What is it, sweetie?\" I asked, turning her in my arms so that she faced me and holding her gently. \"Is it like a secret? I mean, whatever is going on, you can tell me.\"\n\n\"I know,\" she said. \"I know I can tell you anything but it's a little bit sad.\"\n\n\"Just tell me, Jeanie,\" I reassured her, \"and I promise it'll be ok.\"\n\n\"Really?\" she asked.\n\n\"Yeah, I promise.\"\n\n\"All right. Well, you remember how I said I applied to Northwestern in Chicago?\"\n\n\"Yeah, of course I remember.\"\n\nHer shoulders tensed up slightly and her eyes darted back and forth before finally landing on mine. \"Yeah, I didn't just apply. I got accepted and I'm already enrolled. I'm going there in August.\" Her head dipped down and she hid her eyes from me, as though she was embarrassed or thought I would be mad. But she didn't need to worry like that. Hearing it was a bit of a shock at first, and as much as it hurt to know she'd be moving so far away, I was still incredibly happy for her. And I knew I had to tell her so.\n\n\"Jeanie, are you crazy? You've been beating yourself up for weeks over this? I'm happy for you! This is amazing, I am so freaking proud.\" I pulled her into me and held her close in a tight hug. \"This is a good thing, Jeanie, seriously,\" I whispered in her ear.\n\n\"Are you really happy, Jim?\" she whispered back.\n\n\"Of course,\" I said, \"this is going to be huge for you.\"\n\n\"But we'll be apart,\" she said, pulling back and looking at me, little tears forming in the corners of her eyes. \"I mean, I've been dreading telling you. And tonight everyone was asking about where I was going to college and I had to tell them not to say anything in front of you and it's just been hell...\"\n\n\"You shouldn't have put yourself through all that. I mean, it sucks that we'll be so far apart but this is an amazing opportunity for you so of course I'm going to support you.\"\n\n\"Really?\" she asked.\n\n\"Yes, of course, really.\"\n\n\"So you're not going to dump me?\"\n\n\"Jeanie!\" I yelled. \"No, I'm not going to dump you. How could you think that?\"\n\n\"I dunno,\" she shrugged, \"I just thought maybe...\"\n\n\"Don't even think it,\" I interrupted. \"I love being with you and I'm not breaking up with you. No way.\"\n\nFinally she smiled. \"Thank you, Jim, you have no idea how much it means to me to hear that. You really are the best.\"\n\n\"Of course I am,\" I said, smiling back at my joke.\n\n\"But what happens in August?\" she asked, keeping the mood serious for a moment longer.\n\n\"Well,\" I said, \"let's just enjoy being together now and not put any pressure on ourselves. We'll worry about August in August. What do you say?\"\n\n\"Ok,\" she said smiling, as she wiped away the little tears in her eyes. I put my hands on her cheeks and pulled her face to mine, kissing her softly. The tense mood lifted and we spent the rest of the night cuddling and laughing. I told her how proud I was of her and how much she'd enjoy college. In my heart though, there was a dull ache. It was the ache of knowing how hard it would be to let her go in August. I did my best to ignore it, to pretend it wasn't there, but for the first time I saw just the slightest dark cloud creeping in over our relationship. How would we ever make something like that distance work?\n\nI squashed the thought and did my best to enjoy the moment. Which is exactly how I approached every day of that summer. \"Forget about what happens when we go to school and just have fun,\" I kept telling myself. And have fun we did. One of the highs of our roller coaster summer came just a week or two after Jeanie's graduation. We went on a double-date with Jeanie's best friend Missy Martz and her butthole boyfriend Dan Reindorf. I wasn't a huge fan of Dan; he could be a stuck-up prick, but Missy was cool and we all usually had fun when we hung out. A little too much fun, one might say, as evidenced this particular evening.\n\nMissy and Jeanie were best friends and they shared everything. They finished each other's sentences and were constantly laughing at inside jokes. Which made them a lot of fun to be around, whether Missy's jackass boyfriend was with us or not. On this evening we decided to grab dinner and then go to a drive-in movie. I showered after work and ran to Jeanie's house. Dan drove because he had a big, spacious SUV, a Lexus gifted to him by his parents. It was easy to complain about Dan as a person, but it didn't suck getting to ride in his car.\n\nWe had a fun time at dinner and even Dan was tolerable. Most times he acted like he didn't want to be with us, like he had some other important things he'd rather be doing. And it often felt like he looked down on us. But this time he was in a decent mood and even joined in some of our fun without constantly looking at his watch or checking his phone and texting.\n\nAfter dinner we went for a walk in the park before the movie was set to start. Missy and Dan walked ahead of us and Jeanie and I held hands.\n\n\"You know,\" she whispered slyly, \"we could always ditch them and head up to Overlook Point, maybe reenact prom night...\" She pushed into me when she said it and gave me a wry smile. The memory of our first kiss up on Overlook Point, and the make-out session that followed came streaming through my mind.\n\n\"Sounds good to me,\" I whispered back, pulling Jeanie into a kiss.\n\n\"Mmmmm,\" she hummed against my lips, \"you'd like that, wouldn't you?\"\n\n\"You know I would,\" I said, my lips playing against hers, my hands roaming down the back of her little sundress and finding her behind. I was tempted to slide my hand beneath, but held myself in check.\n\n\"Too bad, mister,\" she said suddenly, backing away from me and leaving me lunging for another kiss that wouldn't come. \"You're just going to have to wait!\" As she said this she turned to skip away. I followed behind quickly and with two long, quick strides I pounced on her and wrapped my arms around her suddenly. I pulled her to me from behind and kissed her neck playfully. She squealed in my arms, laughing and wriggling to break free from my grip.\n\nSoon we were both laughing and I released her. She turned and looked into my eyes, still giggling, and I opened my mouth to say something. I didn't know exactly what I would say, but I knew my heart wanted to say it, though my mind and my mouth didn't know how. I stood there, my jaw swinging open and fluttering, but no words would spill out. She watched me for a moment, smirking comically at my awkwardness, but in the next instant she did something I would never forget.\n\nShe looked me in the eyes and said, \"Yeah, I know, I love you too, Jim.\" Then she turned and started running away toward Missy and Dan, laughing the whole time. I will never forget that moment, and how beautiful Jeanie looked when she said it, for the rest of my life. I jogged to catch up with her and took her by the hand when I did. Nothing else needed to be said between us in that moment.\n\nWhen we got to Missy and Dan we all agreed it was time to turn back and head for the drive-in. They both raised their eyebrows at us, wondering what the grins and laughing were all about. But the four of us walked back to the car and made our way to the movie.\n\nThe girls insisted they ride together in the backseat, and wound up whispering and giggling the entire time. I attempted to make a bit of painful small talk with Dan in the front seat, which went about as well as could be expected. But when we got to the drive-in and parked, Missy and I switched and I headed to the backseat to be with Jeanie. Missy gave me a knowing smile and a wink as we passed. I could only imagine what they had been whispering about back there.\n\nI climbed in the back with Jeanie and we cuddled close together. The movie started and we all sat together in the darkness of the car and the murky glow of the giant screen. It was a pretty pointless action flick that no one in the car was particularly interested in other than Dan. But it was the only one playing at the drive-in, and the whole point was to go to the drive-in to have some alone time together.\n\nJeanie and I were basically making fun of the situations and dialogue, and every now and again Missy would join in with a snort. It was probably pissing Dan off but we really couldn't care less. We were having a good time and that's all that mattered to us.\n\nAnd it just got better when about halfway through the movie Jeanie started slyly nuzzling her warm nose into my neck. Her breath was soft and it tickled me just right. She softly breathed and kissed the sensitive area just under my ear, knowing exactly how to make me squirm. Soon it was too much to take and I turned my face to hers and met her with a soft kiss. She had me so turned on so quickly. We instantly began to make out and even though we tried to be quiet, it was pretty obvious what was going on in the backseat.\n\nIt didn't seem as though Dan and Missy minded though when I began to hear the sounds of their kissing coming from the front seat. \"Here we go again,\" I thought to myself, remembering this group's prom night when the couples fooled around in each other's presence. It had gotten pretty hot that night, and as my desire began to build, I wondered how far we'd be willing to go tonight. The only reason we stopped last time was because our limo reached its destination. Tonight there would be no interruption.\n\nThe movie droned on with shouts and explosions, but in our car the real entertainment was the intimacy between the couples. When the sound of Missy and Dan fooling around reached us, Jeanie responded in kind by searching down my neck with soft, warm kisses. I rolled my head back and reveled in her soft, teasing touch, growing harder and harder by the moment. My cock stiffened and strained against the tight fabric of my shorts.\n\nJust how far was I willing to go? I wondered to myself. Our fooling around got pretty heated last time we were together; would I really let it go further this time? Would Jeanie? I didn't know what would happen, but I did know Jeanie was building a raging inferno inside me. She unbuttoned my shirt and began kissing and licking my chest. I groaned softly, trying in vain to mask how turned on she was getting me. But when her mouth fastened tightly onto my nipple, I gasped and ran my hands into her hair, holding her close as she sucked and flicked away at my sensitive nub.\n\nFrom the front seat I heard Missy moan lightly. I ventured a quick peek up over Jeanie's head and saw that Dan's head was searching her chest just as Jeanie's was searching mine. He had slipped her dress strap down off her shoulder and I could hear wet, sucking noises over the sounds of the movie. I screwed my eyes shut and ground my hips into Jeanie, aching for a release from the throbbing tightness in my pants. Jeanie felt my growing need and lifted her thigh to rub against my hardness, as her mouth slipped onto my other nipple and bit down gently.\n\nShe understood me so well physically now and her hesitation had all but evaporated. She now took deft command of my pleasure as well as her own, and our lovemaking had become intense and incredible. Not that it wasn't always amazing, but now Jeanie had a confidence and an eagerness that combined to make it mind-blowing. She showed her understanding by sliding her thigh up and down the length of my cock, letting me grind against her softness to release the growing pressure in my cock.\n\nI pulled her hair gently back and let my mouth descend on her supple neck. I nibbled and licked every inch of her until her hands began groping desperately at me. I knew everywhere she was sensitive as well and she began to become just as aroused as I was. She draped her leg over mine and I scooched sideways to the middle of the seat so that she could easily straddle me. As I did so, I kissed down her chest until I found the gentle rise of her breasts. I nuzzled my nose and lips down into her dress to seek out her soft flesh. This time Jeanie moaned and she wasn't quiet about it. She was more comfortable and aggressive in this situation than I even expected her to be.\n\nIt turned me on to know how into this she was. She didn't mind being a little dirty and fooling around while Missy and Dan were in the car with us. It made me really hot to think of how naughty she could be. I ran my hands brazenly up the backs of her legs, under her dress and over her hips, letting my fingers curl around and gently tug the waistband of her panties. Then I moved my hands up her front, over her belly and up to her breasts, squeezing them softly through her bra and pushing them upward to meet my kisses and searching tongue.\n\nAs I kissed her tender flesh she ground her hips into me, thrusting her softness along the length of my hard cock. The eroticism of the moment built within me as I yanked down on her bra to expose her nipples to my probing tongue. Jeanie gasped at the exact same moment Missy moaned from the front seat. I couldn't see what was going on up there, but I had a pretty good idea it was the same as what was happening in the back seat.\n\nI sucked and licked away at Jeanie's nipples like a man possessed. Our fooling around had ascended so quickly that it was nearly impossible to stem the tide. Both couples were going at each other frantically, the sounds of heavy breathing and wet kisses on soft flesh filled the car, drowning out the sounds of the long-forgotten movie. Jeanie wrapped her fingers in my hair and pulled my head back, pressing her mouth firmly to mine in a heated kiss, her tongue filling my mouth softly but adamantly. Then she kissed her way to my neck again as she ground her hips against my crotch in a tight, circular motion. The feel of her grinding against my raging erection was driving me insane and I let out a low groan.\n\nAs I did, I heard Missy moan again from the front seat. I peeked over Jeanie's shoulder and saw Missy looking at me. Dan had scooted into the passenger seat and Missy was sitting in his lap, just as Jeanie was in mine, his face buried in her chest. He had yanked both her dress and bra down and was feasting on her large, rounded breasts, alternating between each, making suckling, slurping noises as he pleased her. Our eyes locked and Missy's jaw dropped open, giving me a knowing, erotic look. I met her gaze for a moment then brazenly yanked down on Jeanie's dress and bra straps.\n\nJeanie craned her neck backward as I did so, revealing her nakedness to me. As she leaned back, she rested against the back of the seat Dan and Missy were in, her head lolling beside the headrest in front of Missy. They made eye contact, and a moment of unspoken understanding passed between them. It was such a forbidden turn-on for me, and I reveled in the dirtiness of it. I leaned forward and kissed and licked my way down Jeanie's neck to her exposed breasts, making sure Missy could see everything I was doing. I ran my hands up under the back of Jeanie's dress and squeezed her bare ass as I licked and sucked her nipples.\n\nThen something happened that I never would have expected. I felt a hand come down and cradle Jeanie's left breast, squeezing it and holding the nipple gently upward for my suckling mouth. I assumed it was Jeanie holding herself for me, but when I glanced up I saw that Missy was leaning over the seat and it was her hand fondling Jeanie and holding her for me. I groaned and immediately fastened my mouth on Jeanie's nipple, flicking the swollen nub with my tongue and gently gnawing it.\n\nMissy's finger worked its way into my mouth as she swirled her fingertip over and around Jeanie's nipple while I suckled it. I licked against Missy's finger, sucking it and Jeanie's nipple simultaneously. Both girls moaned in ecstasy as we shared our intimately erotic moment, Missy's finger tweaking Jeanie's nipple as I sucked both. I groaned in agony at how intensely erotic the moment had become. Missy worked her thumb into my mouth as well and gently pinched and tugged Jeanie's nipple as I sucked it, rolling it between her fingers until it was engorged and taut.\n\nI was overcome with passion. I ran my fingers over the fabric covering Jeanie's crotch and found it absolutely sodden with her juices. I pressed against her soft pussy, feeling her wetness coating my fingers through her panties. This only heightened my desire as I worked my fingers inside the elastic to push against her naked folds. Her sex was saturated and yielded easily to my touch. I glided my fingers softly up and down her slit, then pressed one finger against her little opening. She was incredibly tight but my finger slid in effortlessly. Jeanie gasped and grasped my hair in both hands, squeezing in ecstasy.",
        "I bit gently down on both her nipple and Missy's fingers. Both girls moaned and Jeanie began bucking her hips to meet my finger inside her. She pulled my head back forcefully and leaned forward to mash her mouth onto mine, her tongue pressing into my mouth and swirling. Missy's hand left her breast and a moment later, Jeanie pushed my head back and began to tear open the rest of the buttons on my shirt wildly. She was humming with desire and I could hear Missy making similar noises in the front seat. \"Holy shit,\" I thought to myself, \"we're all seriously going to fuck right here in this car.\"\n\nOnce my shirt was fully unbuttoned, Jeanie descended on my chest and began licking and biting me everywhere. She was grinding her crotch back and forth on mine and I could feel my cock swelling to the point of insistent urgency. I needed her so badly in that moment and she didn't disappoint. She scratched her nails down my chest until her hands found the buttons on my pants. She undid them quickly and yanked my zipper down. Her jaw fell open when she saw my boxers tented out by my hard-on. But she wasted no time in hooking her fingers into the waistband of my boxer briefs and tugging them downward.\n\nI lifted my butt up off the seat just enough for Jeanie to tug my pants and boxers down to mid-thigh, freeing my rock hard and pulsating cock. It craned upward, yearning to feel Jeanie's soft touch and slide into her. She wrapped her fingers around it and stroked it gingerly. I exhaled hard out of my nose and watched her hand slide up and down the length of my cock. I slipped another finger into her warm pussy and slid them gently in and out of her in rhythm with her bucking hips.\n\nJeanie kissed my mouth again hard. As she did so she ground her sex against my cock. I slipped my fingers out of her and yanked her thong aggressively out from between her ass cheeks. I then stretched the crotch of her panties to the side so that her pussy lay bare and open for me. With my other hand, I propped my hardness up so that it glided between her wet lips. Jeanie gasped in my mouth as my cock separated her folds and rested against her opening. She broke our kiss and looked me deeply in the eyes. This was a point of no return. Were we really going to have sex in this car with Missy and Dan in the front seat? We gazed at one another, each panting for breath, our shoulders heaving in ecstasy.\n\nAs if on cue, Missy let out a low, satisfied groan from the front seat and threw both hands onto the armrest to steady herself. She muttered, \"Ohhhhh fuuuuck.\" There could be no question what had just occurred. Jeanie and I could both hear the soft, slippery noise of Dan's cock sliding in and out of Missy's pussy. Jeanie flashed me an absolutely devious grin and began to settle her weight onto my cock. The head slipped in easily, but I held myself back, letting my full length slide into her ever so slowly. \n\nJeanie and I had been intimate numerous times since getting together, finding any and every opportunity we could to come together. But even so, she was a small girl and her pussy was still remarkably tight. It was heavenly to make love to her, but I had to be cognizant about not rushing things and hurting her. As a result, Jeanie let out a long, almost melodic, moan as I glided into her inch by inch. When I had plunged in as deeply as I could, she rested her forehead against mine and we both groaned and laughed simultaneously.\n\n\"Fuuuuck, Jim,\" she moaned, \"that is soooooo fucking good.\"\n\n\"Mmmmmmm, sweetie,\" I moaned back, \"fuck me.\"\n\nJeanie took her cue and began to swirl her hips very slowly in a circular motion, sliding my cock gently into and out of her tight pussy. The feeling was exquisite as I ran my hands onto her ass and guided her motions. I kept her panties hooked around my thumb so that I could keep them pulled to the side, out of the way of our fucking. Our momentum and passion began to build like an inferno.\n\nIn the front seat, Missy bucked feverishly on Dan's cock, the sound of their screwing loud and heated. Jeanie began to move faster and faster in my lap, fucking me with more and more energy. The SUV was pitching and rocking; I couldn't help but imagine what it must look like if anyone was watching from the other cars around us. Both couples reached a furious pace, each person groaning and swearing in our shared ecstasy. I sank my fingernails into Jeanie's ass cheeks and rose to meet her grinding thrusts.\n\nI felt my climax building inside me, rising like a growing fire. Jeanie and I glared at one another, each willing the other to go harder and faster. She wrapped her hands around my neck for leverage and squeezed softly, her thumbs pressing lightly against my throat. We fucked one another fiercely, each swearing and moaning each other's names.\n\nFrom the front seat, Missy and Dan drove one another to the same point Jeanie and I were approaching. A moment later Dan's guttural grunts and his long, low moan indicated that he had just cum. Jeanie and I exchanged a look that said, \"Holy fucking shit.\" It was incredible how intense this experience had become and we were both reveling in the joy of being young and naughty. Her hands tightened around my neck as Dan came loudly. Jeanie arched her back, resting her head once again next to the headrest on the seat behind her. Her pert little breasts pointed upward and I ran my right hand up under her dress and squeezed her left breast, twisting her nipple between my thumb and forefinger. Jeanie moaned and I saw Missy reach her hand up to tangle it in Jeanie's hair.\n\nJeanie's bucking then became fast and uncontrolled as she neared her peak. I pinched her nipple between my fingers and squeezed her ass in my other hand, guiding her hips as her jerking became more frenzied. Her pussy clenched my shaft so tightly, sliding up and down vigorously, holding me in its taut, velvety soft embrace. A moment later, she let out a series of short, high-pitched gasps and screwed her eyes shut. \"Ahh fuck, ahh fuck, I'm cumming... Jim, fuck, I'm cumming!\" she moaned as her body convulsed in quick, little spasms.\n\nI was so fucking proud of her. Since we'd begun making love she had become more and more comfortable with her body and her reactions to stimulation. Her orgasms had become intense and confident, each one growing stronger. She had let go of any hesitations or inhibitions and it made it so incredibly wonderful to be intimate with her.\n\nIt turned me on so much to watch her jerk and convulse, her orgasm rocking her little body intensely, her face contorted in desperate pleasure. I couldn't stop myself; watching her orgasm drove me uncontrollably to my own. I felt the glorious release from deep inside me and the gushing flow of my own cum sprang forth from me.\n\n\"Nnnnngggghhhh, Jeanie, fuuuuuuuuck,\" I groaned from deep within my throat, an animal noise as my body took over and my mind melted into nothing but the thought of ultimate pleasure. I felt spurt after spurt of my load shoot into her as her hips continued to swivel forward and back in the throes of her own pleasure. I came for what felt like minutes until Jeanie finally began to slow the circular grinding of her hips to a stop. I opened my eyes and found her smiling down on me, Missy's hand still tangled in her hair.\n\nVery slowly she leaned forward to lay on top of me, finding my lips with her own in a soft kiss. \"You ok?\" she whispered to me after the little kiss.\n\nI opened my eyes and looked into hers. \"Yeah,\" I whispered back, \"you?\"\n\n\"Mm hmm,\" she hummed, biting her lower lip and smiling.\n\n\"That was fucking crazy,\" I whispered, laughing.\n\nShe nodded. \"Uh huh, crazy freaking good,\" she laughed.\n\nTo that I laughed too, a chance for us to clear some of the tension in the air. From the front seat, both Missy and Dan laughed as well, relieving everyone involved. I was glad to know there wasn't going to be weirdness or tension after what had just happened.\n\n\"You guys are insaaaaane!\" Missy shouted from the front seat, her tone joking and jovial.\n\n\"Us?\" Jeanie countered. \"You guys are!\" At this we all laughed and calmed down. It was nice to bask in an afterglow that was free from any sort of weirdness. I had been worried that we'd all be embarrassed but it was obvious there would be none of that. We all scooched back into our places and fumbled to re-arrange our clothing.\n\nAfter a few minutes the girls got out and headed to the bathrooms in the lobby. While Dan and I were alone it did get a bit awkward. We had very little in common to talk about to begin with, so it was made all the more awkward trying to make small talk after we'd both fucked our girlfriends in the same car. So consequently we both just sat there and watched some of the movie until the girls returned.\n\nA short while later the movie ended and we made our way out of the drive-in. Once back at Jeanie's house, I hopped out and helped her out of her side by taking her hand. Missy leaned out the window and said, \"Wow, what a gentleman; hope you're taking notes, Dan.\" I heard a vague grunt coming from the driver's side as Missy leaned out of the window to hug Jeanie good night. \"Love you, bitch,\" Missy said gruffly as the girls hugged.\n\n\"Love you too, skank,\" Jeanie returned as they broke the hug.\n\n\"Good night, Jim, you bad boy, you!\" Missy yelled, laughing, as Dan backed out of the driveway. Once again I couldn't help but think of what a shame it was that such a cool girl was with such a lame guy. But that wasn't really my business. My business was with the girl next to me, who I pulled into a tight hug.\n\n\"Well, tonight was... interesting,\" I said, as I held her tightly against me.\n\n\"Have fun, did you?\" she asked, grinning.\n\n\"Yes, yes I did,\" I replied, a wide smile beaming across my face.\n\n\"Mmmmm, I bet you did,\" she said, her grin twisting slyly.\n\n\"Heh heh, you know I did!\" I said, laughing.\n\n\"Don't go getting all sorts of naughty thoughts in your head, Stillman;\" she admonished, \"there won't be swapping or any of that stuff!\"\n\n\"No, no, I wasn't thinking that,\" I said.\n\n\"Just because Missy's hot...\" she began.\n\n\"I know she's hot and she's awesome,\" I admitted, cutting her off, \"but I wasn't thinking anything like that. You're the girl I'm interested in.\"\n\n\"Good answer, James,\" she said, smiling.\n\n\"Besides,\" I continued, \"I wouldn't let that dickhole Dan lay a finger on you in a million years.\"\n\n\"Yeah, no shit,\" she replied.\n\n\"But... uhhhh... Missy...?\" I asked, letting the question trail off.\n\n\"Yeah, what about her?\" she asked coyly, raising her eyebrows in a mock questioning way.\n\n\"Wellllllll,\" I asked, my voice raising expectantly, \"just what was going on there?\"\n\n\"What exactly do you mean?\" she asked, feigning innocence.\n\n\"You know what I mean,\" I said, lowering my chin to glare at her.\n\n\"Did you enjoy it?\" she asked.\n\n\"Uhhh, yeah, yeah I did actually.\"\n\n\"Well, I'm glad, but don't go thinking you're getting some sort of threeway thing!\"\n\n\"Whoa, whoa, not even what I was implying!\" I said. \"I'm just wondering whether I have anything to worry about actually.\" I swiveled my hips and shoulders coyly, raising my eyebrows at her, as though my implication was an innocent one.\n\nJeanie just snorted. \"No, you don't need to worry. Whatever that was it was a first and only time thing. I dunno what happened or why, but she and I are so comfortable we just do whatever in the moment.\"\n\n\"Right, ok, cool,\" I said, nodding my head. But then I put a thoughtful look on my face. \"But if that's the case, then who's to say in some future moment...\"\n\n\"All right,\" she interrupted, \"now I know exactly what you're driving at, buddy. Get those dirty thoughts out of your head!\"\n\n\"It's hard!\" I replied. \"You make me think dirty things.\"\n\n\"Oh do I now?\" she asked, pushing into me and raising her nose up to touch mine. I leaned down to nuzzle her.\n\n\"Yeah you do,\" I whispered, stealing a quick kiss.\n\n\"Mmmmm,\" she groaned, \"you make me think dirty things too, Jim.\" We kissed again softly. I felt my manhood stir to life again, amazed at how skilled this girl was at turning me on. Unfortunately this was the end of the night and our time together had run out for the evening.\n\nShe broke our kiss. \"I have to get inside soon before I get in trouble,\" she whispered.\n\n\"Damn,\" I moaned, disappointed. The stirring below would have to wait. It was like no matter how much I had her, I only ever wanted more.\n\n\"I know, it sucks, but we can hang out tomorrow, right? What time are you out of work?\"\n\n\"Seven, I'll call you.\"\n\n\"Ok,\" she said, smiling, and stood on her tippytoes for a final goodnight kiss. After the kiss she made her way up her front steps, but before she opened the door I whispered her name loudly. She turned to look at me.\n\n\"I love you,\" I whispered, just loud enough for her to hear.\n\nShe smiled her gorgeous little smile. \"I love you too,\" she whispered back. She opened her door and disappeared inside, smiling the whole time. I headed back to my house, happy as I could possibly be in that moment. Little did I know that our little roller coaster ride of a summer was about to hit one of its lows just a few days later.\n\nIt was a Friday night and my sister was planning a girls' night for all her friends since they'd be going away to college soon. Jeanie was included in the girls' night since she and Jocelyn were pretty good friends. I made plans to hang out with Tony that night. When I showed up at his house he seemed to be in a weird mood. He greeted me at the front door with a snide, \"Glad I'm good enough to hang out with tonight since the girlfriend won't be around.\"\n\nI just rolled my eyes to this comment and walked in the house. Jeanie came bounding down the stairs as Tony went up them to get dressed. She looked cute as always, but I was preoccupied.\n\n\"Hey, sweetie,\" she said, bouncing over to me and planting a smooch on my lips.\n\n\"Hey,\" I said, distracted.\n\n\"What's wrong?\" she asked.\n\n\"I dunno,\" I said, \"is he acting weird or is it just me?\"\n\n\"It's not just you; he's been in a crappy mood all day.\"\n\n\"Yeah, he's been dropping hints lately about me not wanting to hang out with him and only hanging out with you. It's bullshit; I always see if he's available. He's spending a lot of time with Theresa too.\"\n\n\"I know,\" she said sweetly, caressing my arm. \"He's just sensitive is all.\"\n\n\"Yeah, he sure as hell is,\" I agreed. I tried to put Tony's shitty mood out of my head and focus on the few minutes I'd have that day with my girlfriend. We were both working odd hours so sometimes we had to make due with only seeing each other for short amounts of time. The past couple days we hadn't had much hang-out time and I found myself craving her attention. I pulled her close to me.\n\n\"So what are you girls up to tonight?\" I asked, letting my hand slide down her back and onto her behind.\n\n\"Dinner, maybe going dancing, then just chilling somewhere. Nothing big, I guess.\"\n\n\"Well, you look awfully pretty,\" I said, giving her butt a little squeeze through her form-fitting dress.\n\n\"Oh do I?\" she asked playfully.\n\n\"Mm hmm, I've been missing you so much,\" I hummed as I pulled her close and let my hand caress her.\n\n\"Mmmmm,\" she groaned, giving me a warm, little kiss. \"I've missed you too, sweetie, we have to hang out tomorrow.\"\n\n\"Yes,\" I said, my lips dancing against hers, \"we definitely do.\"\n\nAt that exact moment, Tony appeared behind us. He must have made his way downstairs quietly without us hearing. \"Ok, what the fuck is this?\" he asked in a grunting, derisive voice. I knew how it probably looked to him, me kissing his sister, my hand groping her ass. But I really didn't appreciate his tone. Jeanie and I been dating for a while, and I really cared about her. He'd seen us hanging out numerous times and at that point he knew the score. I didn't feel like having him talk shit about me spending a quick, little intimate moment with the girl I loved.\n\n\"Why don't you just shut up?\" I asked him, my tone matching his with derision. I hadn't meant it to be so confrontational; it just came out that way in my annoyance. I simply didn't appreciate him taking our little moment of affection and making it seem like some sort of affront to him. But I knew immediately it was a mistake.\n\n\"Really, tough guy,\" he said, \"why don't you make me?\" I could tell right away that he was seriously pissed. But in that moment, I was as well.\n\n\"Maybe I will, dickhead,\" I shot back, breaking away from Jeanie. She clutched at me to hold me back.\n\nThe next moment became a blur as things got heated quickly. Tony said, \"Yeah? Bring it on then, sweetheart.\" Jeanie grabbed my arm. She was yelling, \"No, stop, guys, stop, seriously.\" I yelled, \"I've had just about enough of your fucking shit, pal!\" Tony and I walked toward each other until we were practically nose to nose. Jeanie was still yanking my arm back and trying to jump between us. Tony grabbed my shirt and pulled it upward. Jeanie had my other arm and with Tony's strength I had no way to either advance or defend myself, especially not without putting Jeanie in harm's way. He extended his left arm and held me at just the right length, cocking his right arm back to punch. I clutched at his arm to try to stop the blow but it was no use, he had me. He stepped to throw the punch and I lowered my head and turned to put my body in front of Jeanie so she wouldn't get hit. I braced for the impact. It never came.\n\nI opened my eyes a second later and Tony dropped his fist. Instead he pushed me forcefully away, throwing me off balance into Jeanie. It seemed violent but I knew it wasn't. It was him getting himself out of the situation immediately. I fell into Jeanie, nearly toppling us both over, but she was able to get her arms around me and stop the momentum. Tony turned and stormed out of the room as Jeanie yelled, \"What the fuck is wrong with you, Anthony? Seriously, what's your fucking problem?\"\n\nIt was a good thing her parents weren't home at the time. They would have been none too pleased with this little episode. Jeanie threw her arms around me and pulled me close. \"Are you ok?\" she asked, moving her head to look into my eyes. I was avoiding eye contact with her, just staring at the ground and seething, as the gravity of what had just happened sunk in. \"Jim? Sweetie? Look at me, are you ok?\" she asked frantically.\n\nFinally I looked into her eyes, the anger and the humiliation burning within me. \"Yeah, I'm ok,\" I grumbled.\n\n\"Are you, seriously?\" she asked, running her hands into my hair on the sides of my head and holding my face in front of hers so she could search my eyes. I looked into hers and saw the little pools of tears forming.\n\n\"Yeah, baby, I'm ok,\" I whispered, now feeling awful because I knew how much this would hurt her. I put my hands on her cheeks. \"Are you? I'm sorry, sweetie, I'm so sorry. Are you all right?\"\n\nThe first tear streamed down her cheek. \"I'm ok,\" she whispered.\n\n\"Are you sure? You're not hurt, are you?\" She shook her head. I kissed her forehead and pulled her body against mine, holding her in a tight embrace.\n\n\"It's not your fault, Jim,\" she said soothingly, \"you didn't do anything wrong. He was being a fucking dick and you were just defending us.\" Her voice cracked with anger and sadness, but her hands continued to stroke my hair as we held each other. I walked her over to the couch and sat down, pulling her onto my lap and hugging her close. I heard her sniffle.\n\n\"I'm really sorry,\" I whispered, \"I let it get out of hand.\"\n\n\"No, you didn't;\" she said, \"he just flew off the handle. He always does that.\" As she said this we heard the front door slam and a moment later Tony's Jeep started up and flew out of the driveway. It looked like things were going to be a big problem between us now. Jeanie and I sat on the couch holding each other. After a few minutes she said, \"I'm not going out tonight; I'm staying here with you.\"",
        "\"No, Jeanie,\" I said, \"I'm ok. You have to go out with the girls. They're your friends; you should go enjoy some time with them.\"\n\n\"Are you sure?\" she asked. \"This whole thing is so fucked up.\"\n\n\"I'm ok,\" I replied. \"Really. I'm more worried about you.\"\n\n\"I'm fine. Just pissed off that my brother is being such a dick.\" I couldn't argue with that. He had pulled a dick move. A few minutes later her phone beeped. \"It's a text from Theresa,\" she said. \"She says he's there and he's a mess.\"\n\n\"Yeah, I'll bet he is,\" I said.\n\n\"Well then he shouldn't have been such an asshole,\" Jeanie said.\n\n\"True, but keep in mind he could have punched my lights out and didn't.\"\n\n\"But that's fucking irrelevant, Jim,\" she countered, her anger rising. \"You're his best friend and it shouldn't have come to this. We love each other and he needs to accept it.\"\n\n\"Yes, he does, but it can't be easy.\"\n\n\"Look, I get it. It's hard having your friend date your sister. But would you really be this much of an ass with Joss?\"\n\n\"I'd like to think I wouldn't but...\"\n\n\"No, there's no but,\" she interrupted. \"You're a good guy and you would support her and you wouldn't fight. Not with someone who cared about her and treated her well.\" I did have to agree with her there. I knew what was most important was that my sister was happy and treated well.\n\n\"Yeah, I guess,\" I conceded.\n\n\"You treat me with such respect, Jim. It pisses me off to see you disrespected.\"\n\n\"Well, give him the benefit of the doubt. Let him cool off and we'll see.\"\n\n\"There's nothing to see,\" she said hotly. \"If he doesn't cool off I'll kick his sorry ass myself.\"\n\nI just stared at her, a little smile curling my lips. After a moment she turned to look at me.\n\n\"What?\" she asked, seeing my little grin.\n\n\"Nothing,\" I said, \"I just love how tough you are.\"\n\nShe smiled as well. \"I am tough, buddy, and don't you forget it.\"\n\nI put my hands up in innocence. \"Oh I know, I won't mess with you.\"\n\n\"Better not,\" she said, peppering my chest with soft mock punches, \"I'll kick your butt.\" It was good to have a moment of levity to deflate the tension that we'd been under.\n\n\"Yeah, I know,\" I laughed, grabbing her wrists and wrapping them around me to pull her lips gently to mine. \"You're my little ass-kicker.\"\n\n\"Mm hmm,\" she hummed against my lips. \"I'm a badass.\"\n\nTo this I laughed and kissed her harder, letting my hands slide down her back and find her behind. I gave it a little pat. \"It's time for you to go, badass, the girls will be waiting for you.\"\n\n\"Are you sure? I don't want to leave you alone right now.\"\n\n\"I'm sure, sweetie, go have a good time with your friends.\"\n\n\"Ok,\" she reluctantly agreed. I stood her up off my lap and stole another kiss. She grabbed her little overnight bag and we walked hand-in-hand to my house where the girls were gathered. At first they all busted on Jeanie saying no boyfriends were allowed but she explained to everyone about the fight with Tony and they all let up. They sympathized with me and said I'd done the right thing. I appreciated hearing them all say they were impressed that I stood up for my girl.\n\nI wished them all a good time and grabbed my keys. \"Where are you going?\" Jeanie asked me as I opened the door.\n\n\"Don't know,\" I replied, \"just somewhere I can think. Don't worry about me, you just have fun.\"\n\nShe smiled at me and as I turned to go she grabbed my hand and pulled me back for one more kiss. All the girls ooohed and ahhhed at our kiss, except for Joss who yelled, \"Gross!\" I just laughed and shook my head. \"Text me or something if you can,\" I told her as I stepped out of the house.\n\n\"I will,\" she called after me and closed the door.\n\nOnce in the car I replayed the incident over and over in my head. The more I thought about it, the more I felt I'd done nothing wrong. Yes I let myself get pissed off quickly, but it was only because he constantly had to drop comments and bust on us. He deserved it, I decided.\n\nI made my way to the park and walked up to Overlook Point, where Jeanie and I had first kissed. I enjoyed the view as the sunlight slowly faded, just thinking and trying to relax. I didn't want to lose my best friend over this. I loved his sister, but he was also the closest thing I had to a brother. It was such a shitty situation.\n\nMy phone buzzed in my pocket. I took it out and read the text from Jeanie. \"@ dinner. having fun. another text from theresa. she says he feels horrible. good let him. u ok?\"\n\nIt was good to know that Tony felt bad. It was a sign that he could be talked to and reasoned with eventually, once his god damn temper cooled down. I sent a message back to her. \"Im ok. @ overlook point. thinking bout u ;-) have fun, miss u. itll be ok.\" \n\nA few minutes later, her reply came. \"Mmmm ill be there in 5 mins, dont start w/out me! ;-)\"\n\nI laughed. It was wonderful being with a girl with such a great sense of humor. I looked out at the picturesque view as the sun set over the town I called home. I decided I loved her and that I wouldn't sacrifice our happiness just because her brother was being unreasonable. Perhaps I should have cut Tony a little slack with his temper. I knew it couldn't be easy knowing his buddy was getting it on with his sister. So I decided that I'd give him a day or two, then I'd apologize. I didn't feel like I'd really done anything wrong, but it was important to me to smooth things over.\n\nDuring my apology though, I was going to make it clear that if he really did have a serious problem with Jeanie and me, then maybe it would make the most sense for us not to hang out. It sucked, but that was the way it had to be. Once I'd made my mind up, I felt better. The sun slipped down under the horizon and the light became dim. I walked back to the car, resolute in my decision, but I was still grappling with the idea that I might lose my best friend over the situation.\n\nI got back to the car and drove to get some pizza for dinner. I ate a few slices leisurely and talked to a couple friends who were at the pizzeria at the same time. As I was leaving I got another text from Jeanie. \"Out dancing. lots of fun. miss u.\"\n\nI replied, \"Miss u too. heading home. everything is cool.\"\n\nWhen I got back to my house I talked for a bit with my parents. I didn't tell them the fight story. It was just too weird and I didn't want to tackle that subject just yet. Instead I made my way into our living room and watched TV. They went up to a bed a short while later and I just laid there watching a mindless sitcom rerun, my mind shut off and barely processing it. A couple hours later, headlights pulled into the driveway and the gaggle of girls tramped up the steps. \"Oh crap,\" I thought, \"they're going to be giddy and goofy, I gotta split.\"\n\nAnd of course I was totally right. The girls were laughing and giggling, noisy and crazy. They spilled into the living room and found me on the couch. \"Don't worry, I was just leaving,\" I said to Jocelyn before she could even reprimand me.\n\n\"Good, see ya!\" she shouted snidely.\n\n\"And keep it down, would you, I don't feel like having to defend you to mom and dad if you wake them up,\" I said, mostly joking, as I made my way out of the living room. Jeanie ran to catch me on the stairs for a goodnight kiss. As we smooched quickly the girls all razzed us from the living room. Mocking choruses of \"Kiss me, big boy!\" and \"Good night, my handsome prince!\" and \"Mwuh mwuh mwuh!\" serenaded us.\n\n\"Good night, sweetie,\" I whispered, \"love you.\"\n\n\"Love you too,\" she whispered back, squeezing my hand as I walked up the steps. I brushed my teeth and cleaned up for bed. Once in my room, I threw on some mesh shorts and flopped into bed shirtless. The cool evening breeze wafted in through the window and the moonlight cast a dull, blue haze over the room. I put my headphones on and just relaxed listening to music.\n\nAfter a little while I was just beginning to doze off when I felt a presence above me. I opened my eyes and found Missy standing over my bed smiling down at me. \"Missy, wha...?\" I asked as I yanked the headphones off. It was all I had time to say though as in the next moment Missy quickly swooped down onto me and kissed me full and wet on the lips, her tongue pushing out and snaking into my mouth. She tasted like cherry candy and a hint of alcohol. Just as the gravity of what the hell was happening hit me, she pulled back and stood over me again laughing.\n\n\"Truth or dare!\" she said, laughing, and turned and skipped out of the room, giggling the entire way.\n\n\"For crying out... how old are you guys?\" I called after her. I laid the headphones on my bedside table and turned the music off. If this kind of crap was going to continue all night I'd need to be prepared. Our parents had long ago gotten sick of us locking our bedroom doors during fights so my doorknob had no lock. I was a prisoner to the whims of the gaggle of crazy, probably slightly buzzed, girls downstairs. Although, if that was their idea of a prank, it wasn't such a terrible thing. Missy's lips were soft and warm and her mouth was sweet. That was the kind of prank I could live with.\n\nI heard continued giggles every now and again from downstairs but no further visitors appeared. After some time, I dozed off. I was deep in sleep when something roused me. It wasn't a quick, startling waking, but more of a soft, gentle arousal. My chest felt warm and a feeling of comfort flowed through me. Reality came softly into focus and I realized that Jeanie was hovering over me placing warm, gentle kisses across my chest.\n\n\"Jeanie? What's goin' on sweetie, you ok?\" I mumbled, shaking off sleep. She placed her hand over my mouth.\n\n\"Sssssssshhhh,\" she whispered, a devious little smile curling her lips. She bent back to her ministrations, her mouth planting soft, wet kisses down my chest. I rolled my head back, realizing what was happening. She made her way down to my belly but she didn't stop there.\n\nI felt her fingers curl into my shorts and pull them softly downward. The blood rushed into my manhood in anticipation and it rose up toward her warm mouth. I could feel her soft breath for a single moment before her lips curled gently around the head. I screwed my eyes shut and arched my back, in disbelief that she was really here going down on me. Had she stolen away from the other girls while they slept to join me in secret? I couldn't believe how lucky I was to have such an awesome girlfriend.\n\nShe took the length of my cock slowly into her mouth and worked her tongue over it. I was in heaven. We hadn't been able to do this for days and I had been craving her. The earlier drama with her brother had only made me want her more. Now here she was, sucking me lovingly while the others in the house slept. Her hand joined her mouth as she sucked and stroked me simultaneously. Within moments I was rock hard and trying with all my might to suppress my moans. I ran my fingers into her hair and guided her motions.\n\nAfter several minutes I felt my pleasure building within me. But I wanted more. I pulled gently up on her head to urge her off of my cock. She slipped off gently and I pulled her up to me. I kissed her mouth and pushed her onto her back. Now it was my turn.\n\nI rose above her and kissed down her neck. I put my hand over her mouth and pulled her shirt up. She had changed into a t-shirt and shorts and I was delighted to see she wasn't wearing a bra. Her pert, little breasts spilled out for me and I immediately searched them with my tongue, licking and nibbling her nipples until they hardened into little pebbles. Now it was she who struggled to suppress her moans beneath my hand.\n\nI sucked and gently bit both of her nipples then kissed my way down her belly. I ran my tongue in a circle around her navel then dipped lower. I pulled her shorts and panties gently down so that I could kiss her mound, her wiry pubic hairs tickling my lips and nose. As I did so, her mouth gaped open and she gently sucked my fingertips. She spread her legs wider and I let my tongue wander down into her sex. She was already wet and her pussy greeted me with her warm, sweet nectar.\n\nI lapped away at her as she gnawed and sucked my fingers, gently cooing and squeaking in her ecstasy. She began to flow freely and her sweet taste engulfed my mouth. I suckled greedily at her clit and she sat up, propping herself on her elbows to watch me service her. I was so turned on in the moment I gave her pussy several more long, wet licks before I pulled my body up and knelt above her. She laid back and lifted her legs up so that I could slide her shorts and panties down and off her legs. I yanked my own shorts all the way off of myself and maneuvered between her legs.\n\nI hovered above her, our faces just inches away. My cock gently slid between her lower lips, becoming soaking wet and lubricated. I ran the head up and down until it was coated with her slickness. She looked into my eyes, her jaw hanging agape in anticipation, little gasps escaping her lungs.\n\n\"I love you so much,\" she whispered sweetly.\n\n\"I love you too, baby,\" I whispered back, entering her gently and sliding my cock so slowly into her. We rocked gently back and forth for a few moments before we increased our speed. We couldn't afford to make any noise so we were careful to slide together softly and slowly. We made sure the bed didn't creak as our bodies flowed together smoothly and sweetly. We made love tenderly, the cool air kissing our naked bodies, both sheathed in a light sheen of sweat.\n\nWhen she came, her mouth hung open silently, the grunts in her throat barely audible. But her body stiffened so tightly, becoming rigid and taut as I slid into and out of her, until finally she convulsed with shaking little shudders. After her orgasm she lay limply beneath me, her hips still swiveling as I gently plunged into her. My orgasm followed closely behind hers. I collapsed on top of her and moaned desperately into the pillow behind her head. It felt so incredibly good to control our tempo and as I came I shot jet after jet of my load deeply inside her.\n\nOnce my spasms subsided, I gently let myself slip out of her and rolled to the side. I pulled her body close to keep her warm in the cool night air. \"That was so amazing,\" I whispered in her ear.\n\n\"Mmmmmm,\" she moaned silently, \"it really was.\"\n\n\"Thank you for sneaking away to see me.\"\n\n\"I'm glad I did,\" she said, pulling my hand up to kiss it. We cuddled like that for a while but as we both nearly dozed off she finally said, \"I better go. We can't get caught like this.\"\n\nI was sorry to hear it. I planted soft kisses over her neck and shoulders and on her back as she stooped to pull her shorts and underwear back on. Once dressed she leaned down and kissed me again, then slipped back downstairs to sleep with the girls. I fell asleep with visions of my amazing girlfriend whisking me away to pleasant dreams.\n\nI awoke the next morning in a great mood, despite the fact that I knew things were in turmoil with Tony. A late night visit from your girlfriend will do wonders for a guy's mood. I came downstairs quietly to prepare for work. I had the early shift at my waiting job and despite the fact that it was 9:30, the girls were mostly still sleeping. I took just the slightest amount of pleasure in making a little too much noise as I prepared and ate my breakfast.\n\nFrom the living room I heard Jocelyn groan, \"God, Jim, would you shut the hell up? Mom and dad at least had the decency to be quiet when they left.\"\n\nFeigning innocence I popped my head into the living room where the girls were camped out. \"So sorry,\" I said in my smarmiest voice, \"was I disturbing you?\" This elicited groans from several of the girls, pretty much confirming that they must have been drinking last night. \"I'll be quiet,\" I announced, \"no further interruptions. And no noise. Certainly no music... unless it be lullabies.\" Every time I made another statement someone would get madder and madder. Mutters of \"Shut up\" and other angry grumbles came my way.\n\nFinally Jeanie chimed in saying sweetly, \"Jim, sweetie, if you don't stop even I won't be able to save you.\" I just laughed and went back into the kitchen. I ate my breakfast in silence reading the newspaper as the girls began to stir a bit. When I finished breakfast I sneaked in to wish Jeanie a good morning. It was a pretty cool sight to see six pretty girls camped out in my living room. I tiptoed over to Jeanie and gave her a kiss on the forehead, then I headed back upstairs before the hooting and joking could begin.\n\nI showered and headed back downstairs to go to work. Jeanie met me at the door and hugged me before I left. We agreed to meet up later that night. \"How you holding up?\" she whispered, knowing the fight with Tony was weighing heavily on my mind, even if I wasn't showing it.\n\n\"Well, I have this amazing girlfriend who's making my life a lot better,\" I replied.\n\n\"She's the cause of all this trouble though,\" she whispered back, nuzzling her head against my neck.\n\n\"No,\" I said, \"her brother just has a temper, that's all. Everything will be ok.\" I kissed her forehead and opened the door, telling her I'd call her later. She blew me a kiss as I walked away.\n\nMy day of work went quickly. I was actually relieved to be working to take my mind off the fact that Tony and I were fighting. In all the time we'd been friends, we'd never really had a fight like this. We busted balls and had a few arguments, but for the most part we always got along perfectly. So this was new to me and it really sucked.\n\nAs my shift was about to end I sent Jeanie a text. I didn't hear back from her as I left work and drove. As I was nearing my house I sent another asking where she was. I got no reply again and as I pulled my car into my driveway I found out why. Tony was sitting on my porch waiting for me. Which meant he had to have talked to Jeanie to find out what time my shift was ending. That could either be a good thing or a bad thing. And with Jeanie not texting me back I had no way of knowing what to expect.\n\nHad they had an argument and she was now upset? Was he waiting here to have it out with me? Theresa had said he felt bad but who knew what he'd decided during the night. It was time to find out. I got out of the car ready to face the moment of truth.\n\nAs I made my way up the walk his face betrayed nothing. I kept my own look hard as stone as well. When I got to the steps he stood. For a moment we both just stood there looking at each other. I hoped he wasn't waiting for me to talk because I was taken off-guard. I was prepared to apologize but if he had come here looking to stir things up I wasn't going to give him the satisfaction. Finally he muttered, \"Sup?\"\n\n\"Sup,\" I said back, noncommittally.\n\n\"Ok, no need to gloat on it all day,\" he said quickly, \"I'm sorry, all right?\"\n\n\"Gloat? I'm not gloating,\" I retorted.\n\n\"Look, I know I was an asshole,\" he said, \"it's just fucking weird, man, ok? It's fucking weird and I've tried to not be a dick about it but sometimes it's weird for me. Like walking into a room and your hand is on my sister's ass, yeah, it's weird, all right.\"\n\n\"All right,\" I agreed, putting my hands up in a calm-down gesture. \"I know it's weird for you; I hear that. You said it about ten times. I'm not judging, man, I'm really not.\"\n\n\"So what now?\" he asked.\n\n\"Look, I'm sorry too,\" I said. \"I didn't mean to snap. And I get why it's weird for you. But I just have to say...\" I stopped, hesitating. There was something I needed to say but I wasn't sure how he'd take it.\n\n\"What?\" he asked. \"Just spit it out.\"\n\nI shook my head for a minute and then just went for it. \"I love her, Tony. I know she's your sister and it's weird for you, but... I just love her. So I don't want to keep fighting with you but I can't just let her go.\" I waited for his reply, keeping my chin high and not flinching.",
        "\"So you love her, huh?\" he asked, not sarcastically, but pressing. \"Then what happens in August when she goes to Chicago?\"\n\n\"I dunno,\" I said honestly. \"My heart goes with her.\"\n\nAbruptly, as if the skies had suddenly opened and the sunshine came pouring in, he broke out laughing. \"You really are a fucking poet,\" he spouted out between laughs. I took my medicine again as he basked in his moment. \"Your heart goes with her? Holy shit what a wussbag,\" he guffawed.\n\n\"Ok, ok, enough,\" I said finally, after he'd had his good laugh. \"I may be a wussbag but you're a fucking hothead so just stop fucking with me.\" I said it firmly but with a smile to let him know I wasn't being combative.\n\n\"I can't, goddammit,\" he replied, matching my jovial tone as he continued to chuckle. \"I'm telling ya, I don't mean to fuck with you but I can't help it. It's weird to see you with her. It's weird to think you put your hands all over her.\"\n\n\"Open your eyes, man;\" I said, pleading, \"she's gorgeous. Someone, whether it's me or some random douchebag, is going to be putting his hands on her. Now I'm not saying you have to like that it's me, but I'm telling you to accept it. Because I love her and I'm not using her and I'm not going to break her heart or treat her like shit. I'm going to treat her well. Can you say that for half the other assholes we know? Or some other guy that would be looking to hit it and quit it?\"\n\nHis eyes held me firmly as he pondered the thought. \"She's my sister,\" he said calmly.\n\n\"Yeah, and she's my girl.\"\n\nAfter another moment he smiled. \"Ok, man, look, I don't want to fight. I trust you, just treat her well and I'll try not to bust your balls about it.\"\n\n\"Ok,\" I said simply.\n\n\"We cool?\" he asked.\n\n\"Yeah, cool,\" I replied.\n\n\"Good,\" he stated simply, \"now get your ass in there and take a shower, you fucking stink. Be at my house in ten minutes.\"\n\n\"What are we doing?\" I asked.\n\n\"Don't worry, it involves your precious girlfriend,\" he said as he walked away toward his house. \"And remember,\" he added, \"I said ten minutes, Maria, ten. Don't spend all night doing your hair.\"\n\n\"This coming from the little girl who spends an hour in the bathroom before we do anything,\" I called after him.\n\n\"Ten minutes, Deborah, ten!\" he yelled, still walking away. I laughed as I headed inside for my shower. I was impressed that he had been able to apologize. That was actually a big step for him. Normally he'd refuse to ever apologize and would hold grudges against anyone who took a stand against him. It was a sign that he was maturing and I had a pretty good idea I knew who to thank for it.\n\nMy theory was confirmed when Jeanie opened the door for me and I walked in to find Tony and Theresa hanging out in their kitchen. \"We're all going out to dinner, my treat,\" Tony announced. I smiled. Without saying a word I walked over to Theresa and gave her a hug. She was definitely the one who had influenced this growth in Tony.\n\n\"Thank you,\" I said to her, taking her by the shoulders after our hug and looking her in the eyes. She just smiled.\n\n\"Uhhhhh, I said I'M treating,\" Tony chimed in, \"just in case you missed it. And your little girlfriend is over there,\" he added, \"so hands off of mine.\" To this we all laughed. I walked over and threw my arm around Jeanie.\n\n\"Yeah, and don't you forget it,\" I said, laughing. Tony just shook his head and smiled. I had a feeling the worst of anything we'd have to handle was officially behind us. We went out for a nice dinner together that night and had a great time. It was like a weight had been lifted between us all.\n\nAnd that good feeling lasted throughout the summer. Jeanie and I fell deeper in love, both dreading the coming of late August and trying our best to savor our time together. We would find times to make love as often as we could, sneaking away for quickies here and there, teasing and pleasing one another. It was fun being naughty and young, and we reveled in our moments of affection.\n\nBut soon, inevitably, August rolled around and the time of Jeanie's departure grew near. I decided to take a day completely off from work to spend some quality time alone with her. It was a weekday and her parents and brother were out of the house at work. I came over to her house mid-morning and cuddled in bed with her. \"Hi baby,\" she whispered, yawning and shaking off sleep as I crawled into her bed. She had unlocked the door for me earlier so I could just come in and lay with her.\n\n\"Hey,\" I whispered, wrapping my arm around her and drawing her close. I felt the warmth of her skin immediately, so I gently pulled back the covers to see what was underneath. She wore a skimpy pink thong and a little t-shirt that came only down to her belly. She looked incredibly sexy laying there all curled up against me. \"Mmmmmm, sweetie, you are so freaking cute,\" I hummed in her ear.\n\nShe giggled, nuzzling into the crook of my arm. We held each other for some time, dozing off now and again. After a while she rolled over and gently kissed my chin. \"Time to get up,\" she said.\n\n\"Yeah, I'm hungry,\" I replied. \"And for food this time,\" I said grinning, letting my hands wander down over her breasts and onto her hips. She laughed.\n\n\"Naughty boy!\" she chastized.\n\n\"Mm hmm,\" I agreed, laughing.\n\nWe both laughed and enjoyed the moment. Then, as if she sensed exactly what I was thinking, she said softly, \"I'm going to miss you, Jim.\"\n\n\"I'm going to miss you too, Giana,\" I said back. After a few moments I threw back the covers and lifted her up. \"C'mon, cutie, let's go eat breakfast.\" I carried her out of her room and into the hall.\n\n\"But Jim,\" she protested, \"I'm not wearing...\"\n\n\"No clothes for you today!\" I said authoritatively. \"Today you are my naked little sex toy!\"\n\n\"Oh am I?\" she asked seductively as I carried her downstairs.\n\n\"Yes, my sex toy!\" I declared. I put her down in a chair at the dining room table. \"What will my little toy have for breakfast?\" I asked. \"You'll need your energy today.\"\n\n\"A big bowl of Fruity Pebbles, please,\" she said.\n\n\"Fruity Pebbles, it is,\" I said, grabbing a huge salad bowl from their cupboard. I filled it with a ridiculous amount of cereal and grabbed two spoons.\n\n\"Holy shit!\" she yelled, when she saw the bowl I brought in to her.\n\n\"My girl wants a big bowl, she gets a big bowl,\" I declared. She laughed and we both ate the Fruity Pebbles out of the salad bowl. When we were done I asked her what now?\n\n\"Now, I say we go out and hang by the pool,\" she suggested.\n\n\"I like that idea, but it may interfere with my 'no clothes' rule,\" I said.\n\n\"Don't worry,\" she said, her eyebrows raising deviously, \"I have a bikini that barely passes as clothing.\"\n\nMy jaw dropped. \"Go put it on quick,\" I said breathlessly. \"I'm running home for my trunks. Meet you at the pool in five.\" I leaned forward and kissed her then darted from the room, Jeanie's giggles echoing through the hall behind me. I threw my trunks on in record time and raced back to her house where I went around back to the pool. Jeanie hadn't come back downstairs yet so I took my shirt off and lounged in one of the chairs.\n\nA moment later Jeanie appeared and slid open their sliding glass door. She had two towels draped over her arm and a bottle of sunscreen in her hand. She wore an orange string bikini that I had never seen her in before, and I had a pretty good idea why.\n\nIt hugged her curves perfectly, the bra cups thin and plunging around her breasts, revealing so much of her gorgeous olive skin and pert, little breasts. The bottom was skin tight and when she bent to put the towels onto a chair, I noticed that it rode into her crack a little, revealing her curved hips and round ass. With how sexy this bikini was, there was no way her parents or brother would ever let her wear it out or around others. I felt so turned on to be seeing her in it and instantly felt myself hardening as I watched her.\n\n\"Damn, sweetie,\" I gushed, \"that bikini is so fucking hot.\"\n\nShe giggled. \"You like?\" she asked, pushing her hip out saucily and running her thumb into the waistband, gently tugging.\n\n\"Yes,\" I said emphatically, \"I'm getting turned on already.\"\n\n\"Well, then come over here and rub lotion on me,\" she said grinning. She sat in a chair next to me as I jumped up to fulfill her wish. Her back was to me as I squirted lotion in my hands and rubbed them to warm it up. I then spread it all over her shoulders and back, being sure to let my fingers slip down under her waistband to feel her ass when I could. She just giggled. When I had finished on her back, she stood. \"The backs of the legs too please,\" she requested.\n\nI needed no convincing as I squirted more lotion and began to rub it into her muscular legs. She'd played soccer and run competitively for years so her shapely legs showed the effects. Her muscles were taut and defined and my hands followed their sexy contours as I rubbed from her thighs down her calves, smoothing the lotion into her. She then turned to face me.\n\n\"Ummm, the front too, please, sir,\" she said demurely, looking up at me with mischievous eyes.\n\n\"Yes, my lady,\" I said haughtily, and rubbed more lotion in my hands. I ran my palms down her chest under her neck and palmed both breasts as I did so, letting my fingers slip under the bra to glide slickly over her nipples. She gasped lightly but I didn't linger long, sliding out and running the lotion onto her belly. Then I knelt down in front of her and put more lotion onto her legs, enjoying letting my fingers trace along her upper thighs where she was so soft and smooth.\n\nOnce she was covered I stood up \"How's that?\" I asked, rubbing my palms together to dry up the last of the lotion.\n\nShe glanced down and saw the bulge in my shorts, a stirring caused by getting to touch her all over. \"So very good,\" she said, her voice low and rasping. \"Your turn.\"\n\nWith that she took the lotion from me and squirted some into her hands. I turned around and reveled in feeling her hands run down my back, repeating my motions by letting her hands dip down into the waistband of my trunks. Then she leaned down and worked it onto the backs of my legs, her hands sliding up my thighs gently. She then moved to my front and ran the lotion down my chest, her thumbs grinding seductively against my nipples as she went. Then down onto the front of my legs, looking up at me as she slipped her hands up under my trunks to my thighs.\n\nI smiled as she stood up and finished. \"How'd I do?\" she asked.\n\n\"Perfect,\" I said smiling, pulling her to me. We kissed softly and then she bent and took the towels and laid them on the deck. We lounged on them, lying flat next to one another in the warm August sun. The sweat began to build on us as we laid there for a while, our fingers intertwined. After a bit, Jeanie went in and grabbed us snacks and lemonade. We ate and drank them in chairs next to one another, still sweating.\n\nAfter we'd eaten, we lazed about for a while longer, each softly running our fingers over one another's skin, relaxing and enjoying being warm and half-naked next to each other. We chatted a bit about things, and we joked a little, but mostly we just enjoyed being alone, stealing kisses every now and again, sometimes on the lips, sometimes on our shoulders or backs or necks. It was lovely and seductive, having an entire beautiful day to lay in the sun with the girl I loved.\n\nFinally, after a long while, Jeanie whispered, \"Ready to swim? I'm all sweaty.\"\n\n\"Sounds good to me,\" I said. I stood and took her hands to pull her up. I threw my arms around her and enjoyed her warm body pressed to mine. We shuffled over to the pool's edge where I gently picked her up.\n\n\"You better not, Stillman,\" she said, sensing that I was about to throw her in.\n\n\"I wouldn't do that,\" I said soothingly. \"You really think I'd just throw you right in?\" As I said it I gave her a wicked smile and raised my eyebrows.\n\n\"Jim, don't, it's too cold,\" she protested.\n\n\"I said I wouldn't throw you in,\" I said still smiling and looking evil.\n\n\"James... don't...\" she said again, looking at me sternly.\n\n\"I won't throw you in,\" I assured her, \"but I will go in with you.\" As I said this I tipped over the edge, holding her in my arms.\n\n\"Jim, no, stop, stop,\" she pleaded as our balance tipped past the point of control and we toppled into the water together. We came up after our splash, still holding one another. She wiped her hair out of her face and splashed me. \"I'm going to get you for that, James Stillman!\" she yelled.\n\nI just laughed. \"Sorry, sweetie, I had to do it.\" She jumped into my arms as I laughed and wrapped her legs around me. She put her hands on my head and dunked me under the water.\n\n\"You are in big trouble, buddy,\" she said as I wiped the water from my eyes, still laughing.\n\n\"No I'm not, you'll forgive me,\" I said confidently.\n\n\"Oh will I now? I'm freezing, Jim!\" she protested.\n\n\"Yeah but I'll keep you warm,\" I said, pulling her close.\n\n\"You better,\" she replied, leaning into me until our noses touched.\n\n\"Mmmmm, my pleasure,\" I moaned, claiming her mouth with mine and pulling her body close, feeling her breasts press against me. She wrapped her legs tighter around me and I backed up to the side of the pool where she crushed against me as we kissed. She ground her hips into me, pressing my hardness into her softness.\n\nShe groaned from deep in her throat. \"It's getting warmer in this pool,\" she whispered between kisses.\n\n\"The water is going to boil soon if we keep this up,\" I said, sliding my hands up the backs of her thighs and squeezing her ass. I hooked my thumbs into her bikini bottoms and tugged them gently upward until they rode into her crack. She moaned and pushed her tongue into my mouth. The attraction between us was palpable, spreading heatedly like a wildfire. My cock grew harder and harder as she ground against it, until it pressed demandingly between her legs.\n\nShe reached behind me and took hold of the side of the pool to gain leverage as she bucked her hips into me. Soon we were dry-humping hungrily, my fingers slipping under her bikini bottoms to stroke her folds. Again she groaned into my mouth and pushed hard into me. She broke the kiss and leaned back to look at me.\n\nShe held my gaze for a moment as she ran her hands behind my head, then brought them forward in front of her. She hooked her hands into her bra straps and yanked them downward, freeing her breasts before me. The pool was pretty secluded but there was always a chance a neighbor could see us. Neither of us seemed to care in the moment. My eyes widened as I looked down at her breasts, her brown nipples rock hard and at attention. I descended on them greedily and pulled each into my mouth in turn, suckling and flicking them with my tongue.\n\n\"Oh fuck yes,\" she grunted as I sucked her nipples, flexing my fingers upwards into her sex.\n\n\"You taste like suntan lotion, baby,\" I said, smiling up at her.\n\n\"Well then maybe you should clean me off,\" she whispered huskily.\n\n\"Mmmmm,\" I groaned, fastening onto her nipple again and sucking it briskly. After a moment I popped off it and asked, \"What did you have in mind?\"\n\n\"Let's head up to the shower so we can wash all the dirty off us,\" she suggested.\n\n\"I don't think there's enough soap in the world to wash the dirty off of me and you,\" I joked, \"but I say we give it a try.\" She laughed and kissed me again as we both floated together to the steps out of the pool. She slipped herself back into her bikini top and we got out and toweled ourselves off. She made it a point to glance down at my very obvious erection tenting my trunks and raise her eyebrows. I smiled deviously.\n\n\"You did it, and now you have to answer for it,\" I said slyly.\n\n\"Nope, not my fault,\" she said, backing away from me and hiding behind her towel.\n\n\"All your fault, sweetie,\" I said, following her.\n\n\"Nuh-uh,\" she yelled, turning and breaking for the door. I followed closely behind as she threw open the sliding glass door and ran inside. I closed the door behind me and continued my pursuit yelling, \"Your fault, your fault,\" after her. She kept repeating, \"No, no, no,\" and giggling wildly until I caught her from behind right at the bottom of the stairs.\n\nI yanked her body to mine, feeling her cool flesh press against me, still moist from the pool. I pressed my hard-on against her ass and let my hands roam down her front, caressing her breasts and sliding down her tummy until they slipped into her bikini bottoms.\n\nShe turned her head and leaned backward so our mouths could press together. She wiggled her hips so that her ass pressed against my erection. I groaned into her mouth as my fingertips grazed downward over her mound and into her pubic hair. She returned the groan then broke our kiss and stepped up on the first stair, turning to face me. I slipped my hands out of her bikini and held her by the hips. \"If we keep this up,\" she said, \"we'll never make it upstairs.\"\n\n\"Ok,\" I said, raising my hands up in the air, \"I'll stop. No touching until the shower.\"\n\n\"Good,\" she said, turning and leading me up the steps. \"No touching.\" I followed her and she led us into the bathroom. I shut the door behind us as she reached in and turned on the water. Once it was running she turned to me and smiled.\n\n\"What?\" I asked.\n\n\"Take it off for me, big boy,\" she said, glancing down at my bathing suit.\n\n\"You mean like this?\" I asked, reaching under the waistband to untie the strings.\n\n\"Mm hmm,\" she hummed, biting her lip and smiling slyly. I held her eyes as I slipped them down slowly, revealing my throbbing erection. When it popped free her eyes darted down and bulged slightly, watching me as I dropped the trunks to the floor, leaving me naked before her. My cock lunged upward, turgid and erect. Her lips curled upward in a saucy half-grin.\n\n\"Your turn,\" I whispered, \"take it off.\" I nodded downward at her bikini. She kept her eyes on mine as she reached behind her back to untie her bra strings. She let the shoulderstraps slip off and the cups fell forward in her hands. She pulled it down and dropped it to the floor, revealing her bare breasts to me, her dark brown nipples hard as little pebbles. Never breaking eye contact, she hooked her fingers into the waistband of her bottoms and tugged them downward, leaning forward as they dropped to her knees, then letting go so they could slip to the floor.\n\nI looked down to take in the sight of her naked body, her little tuft of jet black pussy hair smoothed down flat from the wetness of her bikini. For a long moment we both just looked each other up and down, enjoying the sight of our naked bodies, resplendent in our burgeoning sexuality. It was Jeanie who spoke first.\n\n\"God damn, Jim Stillman,\" she said breathlessly, eyeing me up and down, \"I can't believe you're my boyfriend.\"\n\n\"I'm lucky to be,\" I said, stepping forward and taking her by the arm. \"I can't believe you're really my girlfriend.\" I swept open the shower curtain and stepped into the tub then turned to help her step in next to me. The water was warm and felt pleasing against our cooled skin. We let the flow rush between us as we wrapped our arms around each other and began kissing passionately. Without breaking our kiss or opening her eyes, she reached blindly and grabbed a bar of soap from the dish on the wall. Wordlessly she began rubbing it against my chest to work up a lather.\n\n\"Mmmmm, that's nice,\" I groaned, as her hands began to roam. She worked the lather around to my back and down onto my ass. Then she hunched forward and lathered my legs. She knelt down and looked up at me. I smiled as she raised her hands up the insides of my thighs and gently cupped my balls with her soapy hands, scrubbing them softly and getting them soapy and slick.\n\nI let my head loll backwards, enjoying the feel of her soft hands. She brought them both upward and stroked the length of my cock, spinning her hands around the shaft and over the head. I gasped and my knees gave just a little. It felt so incredible having her stroke my manhood softly. It made me want to make her feel good too. I took her arms and lifted her to her feet.",
        "I took the soap and began running it over her body as well, getting her lathered up. I spread the soap over her breasts and down her belly, then around her hips to her back. I pulled her to me and pressed our soap-covered bodies together. I ran my hands down her back to her ass, letting the bar slide between her cheeks. She bent her head backward and groaned as my hands roamed her secret, sensitive parts.\n\nI knelt down before her and brought the soap between her legs, from back to front, running it along her pussy lips as I brought it forward. Then I lathered up her pubic hair and pressed the soap against her mound, making sure I pushed lightly against the cleft where her clit was nestled. Again she groaned as my fingers curled around the bar of soap and ever so gently slipped into her folds, getting them soapy and slick.\n\nShe grabbed me under my chin with both hands in her exuberance and lifted me up, pressing her mouth and body firmly into me. We held each other close, our bodies sliding against each other, slippery and warm. The water cascaded over our bodies as the desire between us grew. Our tongues tangled together and we groaned as the slickness of the soap allowed us to stimulate each other vigorously.\n\nAfter a while, I pushed her back under the water and let it rinse the soap from her body. I cupped my hand and cleaned her off completely before running my tongue down her neck and finding her breasts, her nipples hardening as my tongue circled them. I knelt and kissed my way down her belly, my hunger for her insatiable. I kissed down onto her mound, letting her hair tickle my lips and nose. I licked up between her lips and found her clit, gently lapping against it to coax it from under its little hood.\n\n\"Ahhhhhhhh, fuck, Jim,\" she moaned, leaning back against the cool tiling on the wall. I licked away at her sex, tasting her warm, sweet honey beginning to flow freely. She ran her hands into my hair and held me fastened to her clit, moaning my name. The water rushed down over her body onto me, its warmth and the sensuality of the moment causing my head to spin.\n\nThen, abruptly, she yanked my head back and my mouth slipped away from her sex. She looked me in the eyes. \"Come here,\" she groaned throatily, lifting me and turning our bodies so that I was under the spray of water. She rinsed my body and immediately dropped to her knees beneath me. She took my turgid cock into her mouth, holding it firmly against her tongue and looking up at me with her sweet brown eyes. My jaw dropped open as I stared at her, soundlessly mouthing the words, \"Baby, you are so fucking hot.\"\n\nThe sides of her lips curled into a devious smile around my cock, then she bent her head forward and took to her task, sucking me hard and deep. I wrapped my fingers in her wet hair and hung on for dear life, stooping over her as she worked my cock deep into her throat and out again, stroking it up and down with her hand. My knees grew weak as I struggled to stand while she sucked me so beautifully. I couldn't take much of it, I knew. If she kept going I would cum my brains out and I wasn't ready for that yet. I wanted today to last, to be a long, steamy marathon of unbridled, carefree sex. Gently I pulled back on her hair and eased her off my cock.\n\n\"Jeanie, fuuuuck,\" I groaned, \"that feels so good. Let's dry off and head to your bedroom.\"\n\n\"Ok,\" she agreed smiling. I took her hands and lifted her up. She turned and shut off the water and I pulled open the curtain. I was just able to reach a towel from the rack and we both used it to hurriedly dry off. When she was done she tossed the towel at me laughing and hopped out of the tub, running out into the hallway to her bedroom. I followed closely behind and found her standing with her arms behind her back by her bed.\n\nI looked her up and down, admiring her soft, rounded form. My cock throbbed just looking at her with her lovely olive skin, her wide hips, her small but pert breasts, her little nipples taut and erect. I walked over and stood by her. Without a word she turned me gently and pushed me down onto the bed. I fell back and propped myself on my elbows, but she followed me onto the bed and pushed me authoritatively down so that I lay flat on my back. She sat on her knees beside me, her eyes trailing down my body, taking in the sight of me, my cock bobbing beneath her gaze. She ran her hands softly down my chest and held my cock gently upright.\n\n\"Jim,\" she whispered to me, \"you've been my first.\"\n\n\"I know, sweetie,\" I whispered back.\n\n\"My first for so many things, my first love,\" she continued, as though she hadn't heard my response.\n\nI ran my hand lovingly up her arm. \"Francesca, I know,\" I said softly, drawing her eyes to mine.\n\n\"You've loved me like no one else could,\" she said, looking in my eyes. \"So beautiful, so caring, so sweet.\" Her words were tender and lovely, her voice lilting and soft. But as she said it she gently stroked my cock up and down, building a raging fire within me that contrasted sharply with the tenderness of her words.\n\n\"Oh, baby,\" I groaned, arching my back slightly to enhance her stroking.\n\n\"I want you to be my first everything, Jim,\" she whispered, her soft brown eyes almost pleading with me.\n\n\"What, Jeanie, what?\" I whispered breathlessly, not taking her meaning and trying to think straight as her hand gently stroked my manhood.\n\n\"I want you to take me,\" she whispered again, but this time I could really tell she was struggling to form the words as she almost grunted them out, wanting to say something but unable to find the way to say it.\n\n\"Baby, I'll... anything, what do you want?\" I asked, not sure how to reassure her when I didn't know what she was asking.\n\n\"I want us... to do it... in the butt,\" she breathed harshly, as if she almost couldn't bring herself to say the words. Hearing her say it was like arriving in heaven. We had only ever joked about that subject and I had never seriously asked if she was willing. It was an absolute dream for me to be able to do that with her, and hearing her say we could was music to my ears.\n\n\"Oh, sweetie,\" I whispered excitedly, unable to disguise my enthusiasm, \"we can. We'll take it slow; we'll only do what's good for you. If you don't like it, we'll stop.\"\n\n\"Really?\" she asked smiling.\n\n\"Of course, Jeanie,\" I answered, \"there won't be any pressure. We'll only do what feels good for you.\"\n\n\"Oh I love you, Jim,\" she whispered hoarsely, bending her head down and taking me in her mouth. I leaned my head back and savored the soft smoothness of her warm mouth around my cock, thinking about what we were about to do. I had only ever tried anal once before with a girl in college who I used to hook up with off and on.\n\nOne night this girl and I had gotten completely wasted at a party and stumbled back to my dorm room. As we were fumbling drunkenly through our foreplay she just up and told me to \"put it in her ass.\" The thought excited me but the act was less than thrilling. It was awkward for us both as we were entirely too hammered to do anything right. I woke the next day barely remembering we had even tried it, and the experience was so off-putting that she and I never hooked up again.\n\nToday would be different though. Jeanie and I loved one another dearly and we would do this the right way. We would learn each other's bodies and figure out the right way to make it good for us both. I knew we would. And as I thought about it, it ignited a fire within me so brilliant that I felt drawn to Jeanie in a way I'd never felt before. I arched my back and thrust my cock deep into her throat. She groaned and accepted me, sending vibrations running along the length of my shaft.\n\nI reached down and took hold of her hips, urging her toward me. She took my meaning and shifted her body on the bed, moving herself willingly into position above me. She lifted her one leg over my chest to straddle me, her legs on either side of my head, her sex hovering in front of my face in a 69 position. This was something else we'd never tried before, and I ran my hands up the backs of her thighs in anticipation, taking in the sight of her pretty pink pussy spread and waiting above me. A little rivulet of wetness glistened down the center of her lips as they parted when she spread her legs.\n\nI held her open, my hands pressed against her thighs, and lifted my head to lick her. Immediately she groaned, my cock still filling her mouth, as I ran my tongue in an upward direction from her clit to her drooling opening. I gathered a tongueful of her nectar and drew it into my mouth, letting it coat my tongue and slide warmly down my throat. She was flowing like a stream, her honey warm and sweet. I licked again, eliciting another deep moan vibrating through my cock. The feeling was incredible as she worked her mouth up and down the length of my shaft, holding me upright with her hand at the base.\n\nOver and over I licked as our enthusiasm built, each driving the other to go faster, lick deeper, suck harder. We both groaned and grunted, trying to divide our attention between our ministrations and the amazing feeling of being simultaneously eaten. My head began to swoon with desire until all I could think about was Jeanie and pleasing her and being pleased. My world became Jeanie's sex, nothing else existed or mattered.\n\nI craned my neck further up, pushing my tongue deeply into her hole, my nose pressing against her anus. She slipped my cock out of her mouth to suck in a deep breath. \"Oh holy fuck, Jim,\" she gasped, as I swirled my tongue inside her pussy. I wanted more. I wanted her to feel filthy, to moan my name and tell me how dirty all this was. She was my girl, in mind, body and soul. I wanted to show her I would do anything for her, anything for her pleasure.\n\nI pulled my tongue out and ran it up to her ass, swirling it around her anus and rimming her. She stroked my cock but her uneven breathing kept her from taking it back into her mouth. I pressed my tongue to her hole and softly licked it, letting my drool get it soaking wet. I groaned knowing I was licking her most secret place, learning her in a way no one had ever done before, learning the last secret she had for me. I ran my tongue all around her asshole, feeling its tightness and pressing hard to feel how taut it was.\n\n\"Uuuuuuuhhhhh, Jiiiiiiiiiiimmmmm,\" she groaned throatily, temporarily stopping her stroking in order to focus on the pleasure I was giving her. I responded by rapidly flicking my tongue against her hole, the noise slippery and wet as I tongued her, slipping it just inside her, feeling her rigid muscle squeeze against the tip of my tongue.\n\nShe was impossibly tight, the strength of her little muscle driving me insane, imagining what it would be like to slide my manhood into it. She began groaning my name over and over again as I licked her, her hand absentmindedly sliding gently up and down my shaft.\n\nI dipped my head lower and fastened onto her clit. She shouted, nearly screamed my name. \"Jim! Fuck... Jim... yes!\" I sucked down hard on her clit and flicked it with my tongue. Her body started to jerk and convulse as her pleasure mounted. I pushed one finger into her pussy and slid it gently in and out. She groaned and slipped my cock back into her mouth, humming against it as I slid my finger in and out of her.\n\nThe intensity of the moment began to build. I let my middle finger press against her anus as I plunged my index finger in and out of her pussy. Her body was beginning to shake and I knew her peak was nearing. Very gently I pushed my middle finger against her asshole until it just barely slipped inside. Her muscle clamped around my finger tightly as I pushed just inside to the first knuckle and softly twisted and swirled it.\n\nShe pulled my cock out of her mouth and gasped. \"Jim, fuck, that feels so fucking good,\" she groaned as I sucked her clit and gently fingered both her pussy and ass. Slowly and gently I pushed deeper into her, until my fingers were buried to the second knuckles. She drew ragged, uneven breaths, but she kept groaning in pleasure.\n\n\"Uuuuhhhhh, oh fuck yes, Jim,\" she grunted as I gently hooked my middle finger inside her ass, feeling it plunge deeper into her satiny soft insides. The tight grip of her muscle held my finger tautly, while her creamy smooth insides caressed it warmly. I could feel both fingers gliding along with the other, separated by just the thin layer of flesh between her pussy and ass. I was overcome with ecstasy, dying to be able to feel her with my cock. Increasing the pace my fingers' thrusting, I clamped down firmly on her clit and sucked hard.\n\nShe gasped and bucked her hips, letting her weight collapse down onto my face. \"Jim, I can't...\" she grunted, \"I'm going to... I...\" she was stammering as she bucked and shook. In the next instant she pressed her legs together and held my head in place as her orgasm washed over her. She rested her head on my thigh and moaned incoherently as she came.\n\n\"Nnnnnnnn, uuuuhhhhhh, oooooohhhh, Jim, god yessssss, mmmmmmmm,\" she groaned, her orgasm turning her to jelly as her convulsions wracked her. After several moments she fully collapsed and lay on top of me limply. I lost my suction on her clit but she was too sensitive for that now anyway, so I just slowly and gently continued to finger her holes until her shaking subsided.\n\nOnce she calmed down and caught her breath, I slipped my fingers gently out of her. Her head rested on my thigh and after a few moments she softly began placing kisses there, making my throbbing hard-on twitch and jump. She kissed and licked my balls, then made her way up my shaft. She turned her body so that she was next to me, kissing her way up my chest until she got to my face. Softly she kissed my lips, staring into my eyes all the while.\n\n\"That was crazy good, Jim,\" she whispered.\n\n\"God yes, it so was. Did you like it?\" I asked.\n\nShe nodded. \"Hell yes,\" she said, \"it was dirty and naughty and so fucking hot.\"\n\nI smiled and lifted myself up to my knees next to her. We stared into each other's eyes for a moment, kissing softly. I breathed softly against her lips and asked, \"Wanna do something crazy?\"\n\nShe bit her lower lip and smiled deviously. \"Mm hmm,\" she hummed, her eyes alight with mischief. She pivoted on her knees so that her back was to me, then leaned into me, turning her head to claim my mouth with hers. I ran my hands along her hips to her front, sliding them across her belly and drawing her to me. My cock pressed against her ass. She inhaled deeply through her nose feeling my hardness, as though she anticipated what I had for her. I brought my hands up to her breasts and squeezed them, her nipples hard and tight against my palms.\n\nShe broke our kiss and leaned her head back against my shoulder, revealing her neck to me. I descended on it hungrily, kissing and licking from her neck up to her ear as I gently tweaked and pulled her nipples with my fingers. I slid my cock up and down the crack of her ass, letting it slide between the soft pillows of her ample flesh, getting it slick with her flowing juices.\n\nWithout a word, she leaned forward onto her hands, arching her back and jutting her ass up. I followed her down and kissed from the small of her back, slowly up her spine, planting soft kisses and licks all the way. She crawled forward on her hands and knees to the side of the bed, reaching over to her bed table and pulling out the little drawer there. From it she took a small bottle of lotion, twisting her body and holding it up to me. I took it and looked into her eyes.\n\n\"We really going to do this?\" I asked her.\n\n\"Yes,\" she said decisively, \"you're my first, Jim. You're the only one I would ever want to share this with.\" As she said this she slid back across the bed beneath me, propping herself up on her forearms and arching her back to present her ass to me. I leaned down and kissed both of her cheeks in turn, taking a naughty little bite of each. She squealed as I did so. Very gently I ran my hand along her sex, drawing her wetness upward over her little hole. She hummed silkily.\n\n\"You want this too, right?\" she asked, turning back to me.\n\n\"Oh god, yes,\" I assured her, \"so much.\" She bit her lip and smiled. \"I'll do my best, sweetie. To make it good, to make it right.\"\n\n\"I know you will,\" she whispered, \"just go slow, ok?\"\n\n\"Ok,\" I whispered back. I swirled my finger around her ass, using her own wetness to lubricate the hole.\n\nShe hummed as she exhaled. \"Dirty boy,\" she whispered, swiveling her hips just a little to meet my gently probing fingertip.\n\n\"You love it,\" I whispered back, softly circling her little rosebud as I did so.\n\n\"Mm hmmmm,\" she hummed and laughed. Seeing she was both relaxed and turned on, I popped open the lotion and put a generous dab on my fingers. I rubbed some over the length of my cock, then smoothed the remaining dab onto her hole. She pushed back against my touch, welcoming and anticipating it. Very gently I once again pushed just the tip of my finger into her, feeling the tight ring of muscle clenching it. She huffed a big breath out as I gently probed her, preparing her for what was to come.\n\n\"Mmmmmm,\" she moaned, \"you're so gentle.\" I pushed just a little more into her and watched her hands ball into fists on the sheets.\n\n\"Still ok?\" I asked.\n\n\"Mm hmm,\" she said, \"it feels weird but kind of good.\" I twisted my finger around just a little to let her feel what it was like. She moaned contentedly and I was happy that so far she was in no pain. Without a word, I slowly drew my finger out. She took an anticipatory breath as I put the tip of my cock against her little bud.\n\n\"Baby,\" I whispered, \"are you...\"\n\n\"Do it,\" she commanded, her voice low and sultry. I screwed my eyes shut and tensed my muscles, steeling myself to move achingly slowly so as not to go too quickly and hurt her. I held my cock rigid in my fist and pressed the tip against her asshole. It fit snugly into her canyon and halted at her entrance, the tightness of her hole offering staunch resistance. Gently I thrust slightly forward with my hips and her hole yawned just enough so that my tip pushed inward.\n\nImmediately she sucked a breath in through her teeth, making a sharp hissing sound. I held myself steady, with just the tip holding still inside her. \"Damn, Stillman,\" she moaned.\n\n\"You ok, sweetie?\" I asked, holding myself motionless.\n\n\"Yeah,\" she replied, her voice humming and melodic, \"but you feel so fucking huge.\"\n\n\"I'm not, baby, I'm really not,\" I assured her, leaning forward just a bit more and letting another inch of my cock slide inside her.\n\nAgain she groaned, dipping her head lower to rest against the pillow. She didn't protest though, and I could feel her just barely pushing back against me. I held myself still for another moment, then very slowly pushed my hips forward another inch, gliding a little more of my cock into her.\n\nTo this she laughed and tensed, turning to look back at me. \"Fuck, Jim,\" she hissed, \"don't tell me you're not huge. You feel so fucking big.\"\n\n\"Does it hurt?\" I asked, afraid that she might be in pain.\n\n\"A little,\" she said, \"but not bad. You can keep going. But slowly.\"\n\n\"Ok,\" I whispered, \"just tell me if it's too much.\"\n\n\"I will,\" she said, turning and burying her face back into the pillow. I let my body hunch a little further forward and my cock slipped deeper into her. Her groan was muffled by the pillow but it was loud and growling. I halted my progress, hoping I hadn't hurt her, but my fears were allayed a moment later when she turned to me. \"Do it, Jim,\" she whined, her voice high and almost desperate, \"fuck me.\"\n\nHearing that spurred me forward. It was such exquisite agony denying myself the wanton abandon I so craved. I wanted to tear into her tightness, to thrust and pound and open her up, reveling in her aching tightness and letting myself explode into her. But I couldn't; it would hurt her. So I held myself back, taming the animal within me, starved and craving the soft tightness of her flesh. I held my concentration acute and keen as I lurched my hips forward and ground the length of my manhood all the way into her, inch by excruciating inch, until I was buried to the hilt in her tiny asshole.",
        "\"Uuuuunnnggghhhhh,\" Jeanie moaned as I held myself steady deep inside her. The primal nature of her guttural moan stirred something within me, something animal and wild. To be doing this with her, to be taking her asshole so deeply, made me feel dirty and aggressive.\n\n\"You like that, baby?\" I groaned. \"You've got my whole fucking dick in your ass.\"\n\n\"Mmmmm,\" she moaned, \"your dick feels so fucking good inside me, Jim.\" Her voice was dripping with the same animal quality mine was, a hum and a whine and a groan simultaneously. And below it all was a plea. An adamant, pleading entreaty for more. And I would give it to her. I would have all of her, every inch, leaving no secrets between us. To know her in every intimate way, to be inside her where no one had ever been, in her most hidden, mysterious place. Claiming it, owning it, coveting it.\n\n\"Ohhh sweetie,\" I groaned after a moment, pulling back very slowly to withdraw my cock, amazed at how taut her little hole was. When I had withdrawn to the tip, I reversed direction and pushed gently back into her, inch by inch, as her jaw swung open and a long, low whimper issued forth. \"Are you ok?\" I asked once I was completely buried again.\n\n\"Fuck me, Jim,\" was her only response, a curt, insistent order that left me with no doubt about what to do next. I let my weight settle onto her ass until I had plunged as deeply as I could go, then brought my hands up onto her hips for leverage. I began swirling my hips in a circular motion, grinding into her and letting my cock piston slowly in and out of her. Her groans came low and erotic as we found our rhythm, her hips pivoting to meet mine.\n\nA moment of realization washed over me and the ecstasy of the moment hit me. \"Holy shit,\" I thought to myself, \"I'm fucking Jeanie in her ass.\" I nearly swooned in the rapture of the realization. Our love had blossomed into this forbidden act, this taboo that we were sharing. I felt dirty and erotic and blissful all at once, joining with the girl I loved in such a naughty way.\n\n\"Oh fuck, baby,\" I grunted, \"your ass feels so fucking good.\"\n\n\"Is it good, baby?\" she gasped.\n\n\"God yes,\" I moaned, \"you're so tight.\"\n\n\"Mmmmm, I want to feel good for you, Jim,\" she said, working her hips faster and urging me to give her more.\n\n\"You do, Jeanie, you so do,\" I panted, matching her motions and intensity. Our pace quickened and I marveled at how taut she was wrapped around my cock, sliding up and down my length as I ground into her with ravenous ferocity. I arched my back to slide deeper into her, pulling her back into me with every thrust. Her hips slid further down until she was flat against the bed, my bucking bouncing us both up and down as she moaned into the pillow with every breath.\n\n\"Oh Jeanie,\" I groaned, \"oh baby, does it feel good for you?\" The feeling was incredible for me, but I needed to make sure she was still ok in the heat of the moment.\n\nShe turned her head and moaned. \"Uh huh,\" she grunted, \"so... fucking... amazing...\"\n\n\"Are you sure?\" I whispered, leaning forward and laying my weight across her back, swirling my hips so that we slid against each other. I kissed the back of her neck and her cheek, enjoying the soft cushiony feeling of her ass beneath me.\n\n\"Oh yes, baby,\" she said, catching her breath as we slowed. \"Your cock feels so good inside me.\"\n\n\"In your ass, you mean?\" I asked perversely, wanting to hear her say the words. \"Say it for me.\"\n\n\"Mmmmm yes,\" she moaned, \"your cock feels so good in my ass.\" I knew she wasn't just telling me what I wanted to hear. She swiveled her hips in a fluid, swirling motion and little waves of electricity seemed to course through her when I met her rhythm. Her eyes would clench shut with what seemed like pain, and she'd purse her lips together, but then she'd exhale through flaring nostrils and her moan was one of exquisite joy. I wondered how it must feel to her. The stinging pain of being penetrated mingled with the heightened sense of arousal must have been driving her ecstasy to its peak.\n\n\"Oh baby, I love to hear you talk dirty for me,\" I groaned, pushing myself up so that I kneeled above her again. I ran my hands along her ass cheeks and spread them, holding her open to my grinding thrusts. She moaned deeply and slid her hands beneath her. I could feel her fingers swirling over her pussy, lightly grazing my balls as she masturbated while I fucked her.\n\n\"You like it, huh?\" she asked, her voice hoarse. \"Well then how about this: you better fuck my ass hard and make me cum, baby.\"\n\n\"You want me to fuck your ass hard, huh?\" I asked, my voice playfully taunting and dripping with hunger.\n\n\"Uh huh,\" she grunted, her fingers swirling over her clit furiously.\n\n\"You gonna cum if I fuck your ass hard?\"\n\n\"Uh huh,\" she groaned again.\n\nI growled deep in my throat. \"Unnnhhhhh, ok then, how about this?\" I worked my hips back and forth in a heated frenzy, holding nothing back and fucking her hard and deep. Her moans became whimpers and pleas, lost in a sea of desperate ecstasy. I arched my back again and succumbed to the moment. I knew I couldn't do this for long. She was so incredibly tight, gripping me like a little fist with a velvety soft interior.\n\nWe fucked fast and hard, the feeling of her flesh becoming one of warm, molten liquid swirling around my manhood. I'd never felt anything so impossibly perfect in my life. Hard yet soft, smooth and warm and liquid and tight. I was losing myself, overcome with the eroticism of it all, my explosion becoming imminent. I battled to hold it back but she felt so incredibly amazing I was becoming powerless to resist the glorious onslaught.\n\n\"Jeanie... baby, I'm so... so fucking close,\" I stammered.\n\n\"Me too,\" she squeaked, her eyes screwed shut and fingers working her clit frantically. I concentrated with all my might to hold on for her, to not let myself explode. My load boiled within me, pressing to the surface and threatening to tip me over the edge at any moment.\n\n\"Mmmmmm,\" I groaned, \"baby, I'm right there.\" Our fucking found its fever pitch as we both pounded into one another, her hips bucking and me meeting her, the loud slaps of our coupling echoing off the walls, her bed creaking and swaying.\n\n\"Huuuunnnhhhh, huuuuunnnnhhhh,\" she moaned incoherently. Finally, after several more agonizing moments, I could take no more.\n\n\"Jeaniiiiieeeee, babyyyyyy,\" I pleaded. And just as I thought I could take no more, she said exactly what I needed to hear.\n\n\"Hmmmmm, fuck, now,\" she shot out, \"now, Jim, now, ohhhhhh god I'm cumming.\"\n\nI joined her in a chorus of moans and curses as my orgasm boiled over, spilling forth my load in spasms and spurts. \"Fuuuuuuck, yes, oh Jeanie, oh god yes.\" As the jets of cum shot out of me I collapsed on her back and let the waves wash over me, filling her with my load. She shook and trembled beneath me as her own orgasm rocked her body, humming and hissing deep, labored breaths as her pleasure enveloped her.\n\nAfter several sublime minutes, our breathing gradually slowed and we lay in blissful gratification. Still on her back, I whispered softly in her ear. \"I love you, Francesca.\" She slipped her arms out from under her and reached back to hold me by the arms. \n\n\"I love you too, James,\" she whispered as I laid soft, warm kisses on the back of her neck. Once we had come down from our shared high, I pushed myself up gingerly off her back, and turned my body very slowly, letting my cock slip gently out of her ass. It made a soft, slippery sound as it popped out and several more drops of my cum dripped out onto her ass cheek as I rolled away. I couldn't believe how much I'd cum, the entire day an extended session of foreplay ending with the most spectacular sex I'd ever had.\n\nI collapsed next to her and drew her body to me, holding her in my arms, our skin glistening with sweat from the exertion. She reached up and cradled my face with her hand, drawing me forward for a soft kiss.\n\n\"I don't want to leave you, Jim;\" she said sweetly, \"this is going to be so hard.\"\n\n\"I know, sweetie, I feel the same way.\" We laid in each other's arms for a while, basking in our love and the satisfaction of what we'd shared. My body ached and throbbed in the most appeasing way, but inside, in my heart, I felt a twisting pain. It was the pain of knowing she was leaving in a few days.\n\nShe'd be so far away; it left me feeling empty and yearning to hold onto her and not let her go. But I knew I couldn't do that. We dozed in the warm afternoon air for a while, and when we woke we showered again, washing each other lovingly and sharing our wonderful intimacy. Afterward, we dressed to go out to dinner.\n\nWhile we ate, Jeanie laid down the law. \"Ok, so what are we going to do?\" she asked.\n\n\"What do you mean?\" I asked back, feigning ignorance.\n\n\"You know very well what I mean, Jim Stillman,\" she replied, holding my eyes with hers.\n\n\"Well, you'll be in Chicago,\" I stated matter-of-factly, \"I don't know that there's much we can do.\"\n\n\"Sooooo weeee... break up?\" she asked, dragging the question out as though she didn't want to suggest it, her eyes searching mine.\n\n\"No, silly, we run away together and get married and never come back,\" I stated decisively.\n\n\"Ok,\" she said, her lips curling into a smile.\n\nI laughed and looked into her eyes. I could only be honest with her; I owed her that. \"I dunno, Jeanie, I really don't. I love you. I don't want to break up with you or lose you. But I've seen people try these long-distance things and they always fail miserably. So, I just don't know.\"\n\n\"Just because others have failed, doesn't mean we will,\" she said, \"but I know what you mean. I've seen it happen too.\"\n\n\"I think we could make it work, sweetie, I really do,\" I said, \"but the problem is it's so far. I mean, neither of us have the money to make that trip very often so we'll only see each other like on holidays and...\"\n\n\"I know,\" she interrupted, looking down. \"I wish I wasn't going so far.\"\n\n\"No, it's ok, Jeanie. It's your life. You have to make the most of it. And we can work. If it's not now maybe it will be after or... I don't know, maybe...\"\n\n\"It's ok, Jim,\" she said, \"you don't have to try to explain. There's nothing we can say, nothing we can do. I'll always love you and I'll always...\"\n\nShe stopped, unable to keep talking. Tears welled in her eyes and her lip curled downward as she fought to hold back the crying. I reached out and put my hand on her cheek. \"I'll always love you too, Jeanie,\" I said softly. \"You changed my life.\"\n\nAnd just like that it was over. Not to the point where we didn't talk or see each other. But we both now understood the inevitability of the break-up. We had no other choice. How could we stay together when we would live so far apart and never see each other? It was a recipe for disaster. So that moment, at the table at the little pizzeria where we always liked to eat, marked the end of the special ride we had. Things could never be the same after that.\n\nSo we agreed to break up. We tried to make it as pain-free as possible, but that was easier said than done. All the while when we hung out over those next few days, we knew the end was looming. And on the night before she was to leave, I helped her pack her bags with the finality of knowing she was leaving in the morning. The cars were packed up, her belongings tucked neatly away for the trip. The misery weighed heavily on my heart, but I did my best to put on a brave face for Jeanie and her family. I knew I wasn't the only one sad to see her leaving. So I smiled and did my best to be happy and encouraging.\n\nAnd when we went for a walk that night, leisurely strolling the neighborhood we'd grown up in, I assured her that everything would be ok. That she'd love college and do very well and thrive in her new environment. We came back after our walk and sat on the picnic table in my backyard, soaking up the last few moments we had together, our hearts heavy. The night was warm and clear and we laid on the table looking up at the stars, sharing a moment both precious and bittersweet.\n\nAnd when we started kissing she asked if it would make it harder. I said it would, but she said she didn't care and kissed me harder. And as I yanked her shorts down and tasted her, she told me she needed me and didn't want to be without me. And as we made love on the table, careful to hush ourselves so as not to be heard, I told her the same and confessed that I would yearn for her always.\n\nAnd when we came together, we professed our love and let the agony and the longing overwhelm us.\n\nAnd when I walked her back to her door afterward, weak in the knees and drained of every ounce of energy I had, we kissed passionately and held onto each other as though we'd never let go.\n\nBut we did let go. And the next day she left, leaving me heavy-hearted and forlorn. I thought then that our last chapter had been written, our moment in the sun come and gone, but I couldn't have been more wrong. There was more between Jeanie Delvecchio and me, more joy, more lust, more love and more heartache. The roller coaster ride had just begun."
    ],
    "authorname": "johnwhoknew",
    "tags": [
        "summer",
        "car",
        "shower",
        "anal virgin",
        "first time anal"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-first-my-friends-sister-ch-06"
}