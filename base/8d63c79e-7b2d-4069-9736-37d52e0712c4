{
    "title": "Writing It Down",
    "pages": [
        "*Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age; there is no underage sex in any of my stories.\n\nDisclaimer: This story has been edited by myself, utilizing Microsoft Spell-check. You have been forewarned; expect to find mistakes.\n\n*.**.***.**.*\n\nThe rain came down in sheets, limiting Becky's visibility. She was grateful her father had passed along his 'Rain-X philosophy' when they'd worked on her truck together, but even with the window treatment, the blades of her windshield wipers were working overtime. The heavy cloud cover made the late afternoon quite dark indeed. The diminutive girl was negotiating the streets of Baylor Lake, Louisiana with caution.\n\nBecky had been soaked, running from Gilbert Hall to her truck. The umbrella had only kept the rain from her face; her sweater and jeans were thoroughly soaked. Her socks and tennis shoes squished as she pushed on the clutch to shift gears.\n\nAll she wanted to do was get home, get out of her wringing wet clothes, and soak in her whirlpool tub. She planned to light some candles, turn off the lights in the bathroom, lay back and soak in the hot, soothing waters.\n\nAfter luxuriating in the semi-darkness for a while, she would bring her hands down and begin to slowly stroke her flesh. She would bring herself to orgasm, then once again luxuriate in the suds.\n\nHer truck's powerful engine grumbled, as if complaining. With a hot bath calling to her, Becky di want to jam the accelerator to the floor, get home in a hurry. But the relentless rain and the flooded streets necessitated caution.\n\nThe F100 Ford pickup truck had been stripped down and rebuilt by father and daughter until very little of the original hideous rusted shell of a truck remained. Even the chassis had been modified to strengthen it, to handle the 1999 Ford Mustang engine that sat underneath the hood, handle the horsepower that powerful beast could churn out.\n\n=.==.===.==.=\n\nThe day after Rebecca Meadows's graduation from Lloyd M. Bentsen High School in Sweet Oak, Texas, Clyde Meadows, Becky's estranged father made a drunken appearance. Weaving and staggering and slurring his words, Clyde whooped and told Becky he was so proud of her, his baby girl, a high school graduate.\n\n\"So, what time's the graduation?\" he asked.\n\n\"Six o'clock,\" Becky said.\n\n\"Six? Oh, okay, so we got time go get something to eat. Where you want to eat?\" Clyde smiled happily, checking his watch with one eye closed.\n\n\"Six o'clock, yesterday,\" Becky said, shoving her father out of the trailer she and her mother and two older brothers lived in. \"Yesterday, all right? Yesterday!\"\n\nBecky's mother went outside. Becky could hear her father's whining voice, could hear her mother's tight voice. Becky went to her room. She shut the door and lay on her bed, staring at the ceiling.\n\nA moment later, the expected knock came. Becky sat up and called out.\n\n\"He's really sorry,\" her mother started.\n\n\"Mom, he's always sorry,\" Becky snapped. \"He's always sorry. It'll never happen again. This time he means it, he swears. Well, you God damned right it'll never happen again because I've had it with him. He can go to hell for all I care.\"\n\nWith that, Becky pushed past her mother. She saw her father standing in the living room, looking defeated. She stomped past him and left the trailer.\n\nJumping into her truck, Becky drove to the trailer of Todd Moore, her boyfriend. His mother's car was in front, so she knew they couldn't fool around; Becky actually shivered when she thought of fooling around with Todd.\n\nThey'd not actually had sex, but they'd come pretty close. He had used his mouth on her pussy and she'd used her mouth on his cock. She'd even swallowed all the sperm that Todd had pumped out of his cock. There was a lot of it and she'd swallowed it all.\n\nLuanne Holmes, a classmate of hers had held court in the locker room of Lloyd M. Bentsen and had announced to all that sperm tasted terrible. Becky had not thought Todd's sperm had tasted great, but she certainly wouldn't call it terrible. And knowing that it brought pleasure to her man made it all worth it.\n\nBecky knocked on the door of Todd's trailer, but there was no answer. She knocked again, then tried the knob.\n\n\"Hello? Anyone home?\" Becky called out.\n\nThe four foot ten inch girl skittered down the hall to Todd's room. The door was open but Todd was not in his room. Becky went in, determined to wait for him.\n\n\"Oh wow!\" Becky said, seeing the box for a brand new laptop on the floor next to Todd's bed.\n\nThe new laptop was on his desk, large screen lighted. Becky walked over and looked at the screen. Pushing her glasses up her button nose, she began to read what Todd had written.\n\n**An hour later, Abby called out that she was leaving. She still sounded quite irritated with him. Todd lingered in bed for thirty minutes more; daylight was just beginning to break. Then with a grunt, he got up and went into the hall bathroom.\n\nSliding the door shut, he dropped his briefs to the floor. Steeling himself for the blast of cold water that was sure to come, Todd started the shower.\n\nHis cock was hard; he'd been thinking of Luanne's blonde pussy and big tits and hot wet mouth. He began to stroke his hard cock, imagining sliding his soapy cock between her wet, soapy breasts. With a grunt, he spurted his semen onto the shower wall. Finally, erection taken care of, Todd showered. **\n\nBecky felt a heaviness in her heart; last night, Todd had said he loved her. But, reading his words; apparently he fantasized about Luanne, pleasured himself to thoughts of Luanne, not thoughts of Becky. Becky continued to read what he'd typed out.\n\n**He toweled himself off, then padded, still nude, into the bedroom. He froze; Becky was sitting at his desk, reading his latest entry. She had her shorts unzipped and was rubbing herself as she read his words.\n\n\"Like my ass, huh?\" she asked, looking over her shoulder at him.\n\n\"Huh? Uh, hey, how'd you get in here?\" Todd asked.\n\n\"I knocked, but no one answered. When I tried the door, it was open,\" Becky admitted, getting to her feet.\n\nShe put her glasses on the desk, then allowed her shorts and panties to fall to the floor. Her tee shirt and cotton bra followed, fluttering to the floor to lay in a heap.\n\n\"I uh, that's got to hurt, right?\" she asked, nodding toward the computer screen. \"I mean, you're pretty big.\"\n\n\"It, yeah, I mean, shit, I don't know, but it probably does,\" Todd stammered, cock causing his towel to tent out. **\n\n\"Thought you was nude when you left your bathroom, dumb ass,\" Becky thought, continuing to read Todd's words. \"But now you got a towel on?\"\n\n**\"The... Vaseline,\" she said, reading his screen through severely squinted eyes. \"Go get the Vaseline.\"\n\nHe dropped his soggy towel to the floor of his bedroom and scampered back into his bathroom. He found the nearly empty jar of bargain brand petroleum jelly and carried it back to his bedroom.\n\nBecky was on his unmade bed, on her knees. Her shoulders were pinned to the bed, her small hands were pulling her sweet bubble cheeks apart.\n\nTodd dipped a finger into the slimy jelly and knelt on the bed behind his girlfriend. Both shuddered as he ran the greased fingertip around her tightly clenched rosebud. Then he used a little pressure. His finger pressed past her clenched flesh and entered her anus.\n\nHe could feel the tight ring as it clamped down on his finger. He could feel the smooth flesh, feel the warmth of her flesh as he pushed into her.\n\n\"Oh,\" she moaned quietly.\n\n\"I'm hurting you?\" Todd asked.\n\n\"No, no, that just feels, oh, God. I mean, when you were licking my, when you put your tongue up there, but this, oh!\" Becky moaned and grunted.\n\nTodd had his finger all the way inside of her rectum. He twisted the finger in an ever widening circle, then slowly pulled the finger out. Then, when just the tip of his finger was inside of her, he drove the finger back in. Becky let out a small 'oof' and shuddered.\n\nHe greased up his index finger and wormed the index and middle fingers into her. Her small hands continued to pull on her buttocks. Her buttocks had white marks where her fingers pulled hard on her soft flesh.\n\nTodd twisted and pumped the two fingers in and out of her buttocks. Then he grabbed the jar of petroleum jelly in his other hand and brought the mouth of the jar to his hard, throbbing cock.\n\nBecky was grunting and moaning, eyes tightly shut, mouth open. A thin line of drool dribbled out of her mouth, wetting Todd's blanket.\n\nHer eyes shot open and her mouth opened wide when the blunt head of Todd's cock pressed into her greasy anus.\n\n\"I, wait, oh God, Todd!\" Becky cried out as the blunt head forced into her anus, pushing past her sphincter.\n\nThere was a flash of white hot pain. His fingers had been slightly uncomfortable at first but that discomfort had given away to pleasure.\n\nBut Todd's cock was much larger than his fingers. He paid no attention to her protests; his cock was in a warm, tight grip. Her muscles were attempting to force the intruder out and he could feel every pulse, every ripple as she tried to expel his cock from her bowels.\n\n'Oh God, oh God,\" he grunted and loosed a torrent of sperm deep into her guts. **\n\nVulgar. The words were vulgar. Todd was a great writer, or he would be a great writer one day; writing poems that would describe passion, romance. There was nothing romantic about these vile words.\n\nHe was describing stuffing his fingers, his dick up her butt. And he was describing her as a nasty slut, a dirty, nasty slut that wanted him to stick his cock up her butt. After reading about him masturbating to thoughts of some other bit titted slut, she wanted him to use her.\n\nShe lashed out; it was all just too much. First, her father not going to her graduation, then showing up drunk and stupid this morning, then her mother's trying, again, to make excuses for her father's failings, again. And now this. Her new boyfriend, she had even said she loved him, her new boyfriend just seeing her as nothing more than a slut.\n\nHer punch cracked the screen. Becky actually marveled at the nearly perfect spider web her small fist had created on the white screen.\n\nThen she heard a door. A moment later, her boyfriend, her former boyfriend entered the room.\n\nShe slapped his face. She moved to kick him in his balls, but he moved before her tennis shoe could land, so she only caught him on his thigh.\n\n\"Your father's very hurt,\" was Imelda Meadow's statement when a furious Becky returned.\n\n\"Good!\" Becky screamed. \"Now he knows how it feels. What'd I get for my birthday? Nothing. What'd I get for Christmas? Nothing. What'd I get for graduation? You got it. Nothing. He's hurt? Well, boo hoo; he'll get over it. I had to.\"\n\nThat night, Becky decided to go to Scoops, a local ice cream parlor. They had the best caramel sundaes anywhere and she was in the mood to drown her sorrows. She arrived at the same time that Rory Smith, a former classmate also reached Scoops. For as long as Becky could remember, she'd had a crush on the tall, muscular cherub faced blond. And he was there without Luanne Holmes, his girlfriend.\n\nThey sat together; Rory even paid for Becky's sundae. Their conversation was about Rory's favorite topic, Rory. Becky did not notice, though; she was enamored with Rory anyway.\n\nThey left Becky's truck at Scoops and Rory drove them to Browner Park. He parked away from the street lamp and they climbed into the back seat of his Lexus.\n\nBecky almost giggled when she saw Rory's cock. Fully engorged, Rory's cock was a puny four inches. Todd, who was shorter than Rory, skinnier than Rory, had packed a fat cock that was at least six inches in length.\n\nRory grabbed Becky's breasts, squeezing them painfully. He slobbered all over her nipples, making odd mewling sounds.\n\nLosing her virginity hurt. Rory was sickened by the sight of Becky's blood and lost his erection. The suggestion that they do sixty nine horrified Rory; he wasn't about to put his mouth on her pussy.\n\nIt was a few days after that fiasco, or series of fiascos that Imelda told her daughter she had a visitor. Becky secretly hoped it was Todd; her anger had cooled. After all, what he had written wasn't really that bad.\n\n\"Oh. It's you,\" Becky said, seeing Clyde sitting in the living room.\n\n\"I uh, yeah, it's me,\" Clyde agreed.\n\nHe then showed her a white poker chip. Becky pushed her large glasses up her nose and squinted at the token.\n\n\"It, it's a desire chip,\" Clyde explained. \"I uh, I, after you, after I fuck, I mean, after I messed up, I still can't believe I missed your graduation, baby girl, I mean, God, you know, day you was born, I couldn't believe God had given me such a beautiful, perfect girl.\"\n\nBecky looked at his face. She could see the tears swimming, threatening to spill out. She could feel her hardened heart beginning to melt, so looked at the chip again.\n\n\"Anyway, that night, I called the hot line,\" Clyde said.\n\n\"Hot line?\" Becky asked.\n\n\"Alcoholics Anonymous,\" Clyde said. \"It's this eight hundred number, and I called them and said I needed help.\"\n\n\"Oh,\" Becky said, not knowing what else to say.\n\n\"And I, I been going to these meetings, been listening to these people, I uh, anyway, last night, they asked if anyone had a desire to stop drinking and I got up and got this chip,\" Clyde said. \"I, I wanted to get one first night I went, but I, I was too ashamed get up, even though I really wanted to get one. Well, last night I said 'Fuck it' I mean, I said 'Forget this stupid ass ego shit and get up and go get your desire chip, damn it.' And I did and I want you to have this.\"\n\nBecky gingerly took the plastic chip and studied it. There was a simple 'AA' imprinted on the face of the chip. She then gave her father a hug. She did give him a sniff but could smell no alcohol on his breath.\n\nBecky put the chip on her desk and prayed to God that this time, this time, her father meant it. She prayed that this time he would stick to his promises. After all, as far as she knew, this was the first time he'd actually gone to Alcoholics Anonymous, tried to get help, instead of trying to white-knuckle' it himself.\n\nA few days later, Becky drove to the bus station. The large bus that would take Todd to DeGarde, Louisiana was ready to depart. Becky waved at the large vehicle, hoping Todd would see her. She mouthed 'I love you' as the bus pulled out, then she followed the bus to I-10.\n\nThat evening, having nothing better to do, Becky decided to go to a movie. She didn't even know what was playing; she just didn't want to sit in her bedroom, didn't want to sit in the living room and watch the 'Real Housewives Of Beverly Hills' or whatever it was that her mother was immersed in.\n\nThe arrow was green for Becky to turn left. She turned left, heard the scream of brakes, and then felt herself tumbling violently.\n\nShe had a concussion. Her glasses were smashed and those had been her spare glasses; she'd broken the others nearly a year earlier. The truck was a complete loss.\n\n\"They had to cut it open to get you out,\" Becky's father told her. \"Thank God you had your seat belt on.\"\n\nClyde's AA sponsor loaned Becky his deceased wife's car, until Becky could get her own. She didn't even know this man, a large, bald headed man that constantly cleared his throat, even while talking, but he was willing to let Becky drive his car.\n\n\"And, you and me? We're going work on this project been meaning get to,\" Clyde said excitedly.\n\n\"What is this?\" Becky asked, seeing a rusted greenish gray pickup truck sitting behind Clyde's trailer.\n\n\"This? This is an F one hundred,\" Clyde said happily. \"That was the first car I ever owned; God! I loved that thing! Don't know why I ever got rid of it.\"\n\n\"Okay,\" Becky said, seeing nothing but an ugly rust bucket.\n\nBut together, she and her father tore down the monstrosity. He showed her how to sand away the rust, showed her how to patch the spots that had rusted straight through the metal. The engine was a total wash; it had sat, unused for too long and the elements had corroded it. They found an engine out of a totaled 1999 Mustang and tore the engine down. They replaced what needed to be replaced, upgraded what needed to be upgraded and soon had an engine that looked dangerous, just sitting on the tarp.\n\nAnd, every day, Clyde was sober. His hands were steady, his speech clear, and his step straight.\n\nFather and daughter applied two coats of primer to the restored body. Then they picked out a dark blue, not whatever the previous color might have been. Three coats of the blue went down on the body; Becky was getting pretty handy with the air compressor. Ten coats of black lacquer went over the glossy blue; they even blacked out the chrome bumpers, chrome rims and chrome dual exhaust pipes. Ten more coats of clear lacquer went down, and finally they put in the windows, tinting them to the darkest legal tint. It depended on where you stood; the truck was blue. No, it's black. No, no, it's definitely blue.\n\n\"Uh, in other words (ah ahem mm) it uh, it's almost a (ah ahem mm) a good thing that drunk totaled your daughter's car (ah ahem mm)?\" George, Clyde's sponsor asked as he examined the final product. \"Like that (ah ahem mm) bed liner (ah ahem mm).\"\n\n\"Mr. George, thank you so much for letting me use your car,\" Becky said, handing him the keys to his deceased wife's sedan.\n\nThen she hugged the large man.\n\n\"And thank you for getting my Daddy sober,\" she whispered.\n\n\"Aw, Baby (ah ahem mm) God's one got your daddy sober,\" George smiled, squeezing her in a smothering hug.\n\nThis truck was a stick shift. Clyde had to teach his daughter how to drive; laughing that since the state of Texas took his license, he had to tell her, he couldn't show her. The first time Becky let out the clutch, the tires chirped loudly and lifted the front wheels off the ground for a millisecond.\n\n\"Whoa!\" Becky let out an excited squeal.\n\n\"Uh huh, don't be doing that every time, hear?\" Clyde also laughed, delighted in his daughter's happiness.\n\nOn the campus of the University of Louisiana at DeGarde, the truck was quite noticeable. Becky Meadows was just another fresh faced freshman, but the truck really stood out. Even her height of 4'10\" did not stand out; many of the Cajun girls were as short as or shorter than Becky. The large 32E chest wasn't an anomaly either. The waist length brown hair also seemed to be the norm around the campus; many girls actually had hair that reached their ankles.\n\nBecky wanted to find Todd Moore; Abby Moore, Todd's mother had said he was still a student at U.L.D. But the first week was spent getting acclimated to the campus, her schedule, her dormitory, her roommate, the cafeteria.\n\n(The communal shower was an eye-opener. Becky had never showered with another naked girl showering less than two feet away from her. And there were nude girls of all shapes, sizes and colors. Some were pretty, some were worth sneaking a peek at. And a few were grotesque.)\n\nBecky glanced around the large, noisy cafeteria, but never did see Todd. She looked around the library, but never did see Todd. She glanced up and down the halls of her five classes, and there was no sign of Todd.\n\n\"Why you don't just go over to Sharp Shire? That's the dorm for the guys,\" Nadine Brown, Becky's roommate suggested when Becky voiced her frustrations.\n\nThere were a few young men lolling about outside. They perked up when the cute girl approached, but none of them knew Todd Moore.\n\n\"A freshman? Why would I waste one minute of my time hanging out with a lowly freshman?\" one shirtless youth sneered as he flexed and posed for Becky's benefit.\n\n\"I'm a freshman; so, I won't waste any more of your precious time,\" Becky snapped, walking into the lobby of the dormitory.",
        "A call up to the fourth floor Monitor revealed that Todd wasn't in. Becky left a message that she was in Murphy Dormitory; please come by.\n\n\"Hey uh, listen, I uh,\" the shirtless youth tried to talk to Becky when she stepped out of Sharp Shire dormitory.\n\n\"Go away; I already have one rectum, I don't need a second one,\" Becky snapped, stomping past the buffoon.\n\n\"Day-yum! Shorter! You been burned,\" a young man chortled.\n\n\"Uh, yeah, uh Burn unit?\" another young man said, pantomiming holding a phone. \"Uh yes, one male victim, third and fourth degree burns, all over his body.\"\n\nBecky's weekly calls home to her mother and her father were the highlights of Clyde's week and of Imelda's week. Both expressed their pride in her, both parents expressed their confidence in her scholastic aptitude.\n\n\"Dean's list, I'm sure of it,\" Clyde encouraged.\n\n\"But even if you don't? We're still mighty proud of you,\" Imelda assured Becky.\n\nIt was after the fourth phone call home that Becky realized that her dad seemed to know what she had shared with her mother. And her mom seemed to know what Becky and her father had talked about.\n\n\"Mom, are you and Daddy back together?\" Becky asked, getting right to the point on her next phone call home.\n\n\"I uh, well, I mean, he's been sober and...\" Imelda defended.\n\n\"Mom, it's okay,\" Becky assured her mother.\n\nIt wasn't okay with Becky's brothers. Jeremy moved out of the trailer and a week later, Martin followed. Both boys had suffered under Clyde's active alcoholism for too many years; their scars were too deep.\n\nImelda made a joke of it, even though it was obvious that she was upset. She told Becky it was about time those two found out about rent and utilities and food and those bills that just pop up when you least expect them.\n\nFive weeks into her semester, Becky finally cornered Todd. And saw that Luanne Holmes had not gone to Connelly College. It was Luanne that saw Becky first as Becky approached their cafeteria table. Luanne's blue eyes opened wide and her face lost color.\n\n\"Hi Luanne, hi Todd,\" Becky said calmly.\n\n\"Becky! I uh, hey! How you doing?\" Todd stammered, clearly not happy to see Becky.\n\n\"You know, I left a few messages at Sharp Shire,\" Becky said, voice still calm, measured.\n\n\"I uh, yeah, I uh, I been meaning get back to you,\" Todd lied.\n\n\"It would have taken, what? Five minutes of your time to let me know?\" Becky said, pointing to Luanne.\n\n\"Yeah, well, i...\" Todd said.\n\n\"I thought you were a man, Todd Moore,\" Becky said, voice becoming hard. \"I thought you were a man, but now I see, you're nothing but a little boy.\"\n\nTodd said nothing, just hung his head. Luanne sat stock still, saying nothing as Becky turned and walked away.\n\nSafely in her room, Becky let out an anguished wail. She sobbed bitter tears over her loss. Then Nadine pressed a cool rag to Becky's forehead. Quietly, Nadine sponged Becky's tears away.\n\n\"Love hurts sometimes,\" Nadine said flatly.\n\nBecky now had no reason to turn down any requests for dates. Her first date was with Aaron Newsbaum, a legally blind man she knew from her Sociology 115 class. He was tall, gangly, used a white cane, even though he still had some vision, and was bright and funny.\n\n\"See, there's this barbecue place? Cowboy's? On Thursday nights, there's line dancing,\" Aaron enthused. \"We can go there, get something to eat, then do a little dancing, what you say?\"\n\n\"Oh that sounds great,\" Becky smiled.\n\n\"Now, I uh, I can't drive, but we can double-date with my roommate,\" Aaron suggested. \"Or I can Uber us there.\"\n\n\"Or I can drive us,\" Becky said.\n\nThe dinner was good. Not great, but Becky did like the double chocolate malt, and also tasted Aaron's caramel apple malt.\n\nAaron and Becky had fun dancing. At ten o'clock, Aaron said he had an eight o'clock class so they left.\n\nIn the parking lot in front of Sharp Shire dormitory, they kissed, becoming more heated. Aaron let out a shuddering groan when he braved touching Becky's breasts. From the light of the streetlight, Becky could see a dark stain in the front of Aaron's jeans. She had made the young man ejaculate, just from letting him touch her breasts. That knowledge gave Becky a feeling of power.\n\n\"Next time?\" Becky said, actually patting Aaron's crotch. \"Don't waste that, okay?\"\n\nThey did go out on a few more dates. He was funny, with a very dry and sardonic wit. He was also intelligent.\n\nAfter their third date, they had sex on the bench seat of Becky's truck. Aaron's cock was a lot like the rest of him, long and thin. Becky wrapped her hand around the shaft and barely had her lips around the head of his cock before Aaron grunted and blew his load. Then he returned the favor. Aaron Newsbaum liked eating pussy and Becky shuddered, groaned and squealed through two orgasms before urging him to slide his condom onto his cock.\n\nBefore he did, though, Aaron had Becky roll onto her belly. He then used his hands to pull her sweetly rounded buttocks apart and lapped at her anus. He tried to force his tongue into her back door while his fingers continued to toy with her wet pussy. Becky grunted, then squealed in orgasm when Aaron jammed two fingers into her spittle lubricated rectum.\n\n\"No, no, stick it in me,\" Becky finally demanded, rolling onto her back.\n\nUnfortunately, Aaron seemed to think that sex meant that they were now exclusive. Becky broke it to him as gently as possible; they were both young, both needed to date others.\n\n\"It's because I'm blind, right?\" Aaron said bitterly. \"Yeah, yeah, it's all good. Shit, sympathy sex feels just as good as regular sex, you know.\"\n\nThankfully, Ruth Eissenbach did take Aaron Newsbaum off of Becky's hands. Like Aaron, Ruth believed that sex meant that they were exclusive. Becky was always polite whenever their paths crossed; she was also quite relieved.\n\nBecky's 4.0 GPA earned her a spot on the Dean's List. Her roommate, Nadine, however, was on academic probation; Nadine spent more time hanging out in frat houses than in class or the library. She was almost cheerful as she packed her two suitcases at the end of the semester.\n\n\"Told my parents,\" Nadine said. \"I told them don't waste their money; I hate school.\"\n\nWhen she enrolled for the spring semester, Becky's student advisor pointed out that Becky needed at least twelve hours of Physical Education. So Becky signed up for beginner's yoga.\n\nAlexis Smith looked up as yet another student wandered past her open doorway. The head coach of the Lady Storm softball team was idly killing time; she and her two assistant coaches had already approved their current roster; and their first practice wasn't for another three weeks. But Ed Baggett, the University of Louisiana at DeGarde was paying her, had given her an office, so Alexis was just taking up space.\n\nAlexis sucked in her breath as Becky Meadows walked past. Susan Couvillion, Alexis's best friend and her unrequited crush had been dead, drug overdose for almost six years now.\n\nAnd Susan's twin had just walked past. True, the doppelganger was at least ten inches shorter than Susan had been, and the twin wore glasses; Susan had not worn glasses, other than extremely ugly sunglasses. But Susan's twin had the same beautiful brown hair, the same deep brown eyes, the same button nose, same pouting lips, and same round chin as Susan Couvillion. The twin also sported a large chest, just as Susan had proudly displayed.\n\n\"You!\" Alexis called out, stepping into the hall.\n\nBecky jumped, startled when a woman called out, loudly. She turned and saw a beautiful blonde woman approaching her.\n\n\"Yes ma'am?\" Becky asked, stepping back slightly.\n\n\"What's your name?\" Alexis demanded.\n\n\"Becky. Becky Meadows,\" Becky quavered.\n\n\"Know anything about softball?\" Alexis asked, smiling down at the girl.\n\n\"No. No ma'am, not really,\" Becky said, not relaxing her defensive pose.\n\n\"You're my new equipment manager,\" Alexis decided. \"So you better learn.\"\n\nAlexis Smith had been a cheerleader for the University of Louisiana at DeGarde, and had been second base for the Lady Storm softball team. With her degree in Physical Education, along with her status of being a part of two championship seasons, it had just made sense to Ed Baggett to hire Alexis Smith as an assistant coach. When Linda Mouton, the head coach of the Lady Storm disclosed to Ed Baggett and Dean Robert Sims that she had Parkinson's and abruptly retired, Alexis was named as head coach.\n\nAlexis Smith was a horrible coach. True, she knew the game, knew the rules, but did not know how to train others in the game. She did not know how to rally morale, motivate players.\n\nBecky studied the game. She used the computer in the library and studied the game of softball. Slowly, she started to recognize the numerous failings of Coach Smith.\n\nBecky Meadows liked being the equipment manager. In high school, she'd never been particularly athletic, so had not been accepted by the athletes of Lloyd M. Bentsen High School. But here, she was accepted, even welcomed by the athletes, welcomed with smiles and gentle caresses to her shoulders, her arms, and her back by Coach Smith.\n\nIn time, those gentle touches and innocent caresses gave way to hugs and squeezes. When the team travelled to other campuses, Becky was often positioned between Coach Smith and the window of the team bus. And Coach Smith found reasons to touch Becky's leg, arm, and waist often as the large vehicle rolled along.\n\nBecky had an odd feeling in the pit of her stomach as the older woman touched her, caressed her. It was not an unpleasant feeling, just an odd feeling, a feeling of being slightly off-balance.\n\n\"Nineteen to two. Nine fucking teen to two,\" Assistant Coach Babette Broussard complained after their fifth straight loss. \"Nineteen to two, to a God damned team that hasn't won their last fourteen fucking games! Are you kidding me?\"\n\n\"Come,\" Alexis barked out when there was a soft knock at her office door.\n\n\"Coach Smith?\" Becky asked, sticking her head in the door.\n\n\"Yeah Honey?\" Alexis asked, brightening at the sight of Becky.\n\nAnd then Alexis's happiness gave way to bitterness, anger. Becky Meadows dared point out her mistakes as a coach. The little bitch dared question Alexis's decisions during the game.\n\n\"You listen here, you little God damned cunt!\" Alexis snarled, shoving Becky hard.\n\nAs a stunned Becky sprawled on the floor of Coach Smith's office. Alexis straddled Becky's waist and began pushing Becky's U.L.D. Lady Storm tee shirt up, exposing Becky's industrial strength bra.\n\n\"No,\" Becky protested.\n\nEd Baggett, the Athletic Director of the University of Louisiana at DeGarde opened the door of the office just as Alexis pushed up the cups of Becky's bra. The maneuver exposed Becky's left breast and Alexis grabbed the large nipple, twisting the sensitive nub cruelly.\n\n\"Ms. Smith, that will be enough,\" Ed Baggett thundered as Becky burst into tears. \"In fact, you need to clean out your desk; you no longer work here.\"\n\nEd Baggett, Dean Robert Sims and the legal team of Coutre & Associates offered Becky Meadows a full scholarship, as well as one hundred thousand dollars if she promised not to press charges. She signed the documents and walked out of the administration building. She also walked away from the game of softball. She had no desire to be their equipment manager ever again. Her last act was to stuff her U.L.D. Lady Storm tee shirt into a trash can.\n\nBecky did not sign up for the summer semester. She proudly showed her father and her mother the letter from Dean Sims; she was on the Dean's List again; she still maintained a 4.0 GPA.\n\nWhile home, she did have another date with Rory Smith. He took her to Rustler's BBQ, then back to Browner Park. Becky gave him a blow job, swallowing his load. Then Rory complained bitterly when she insisted on a condom.\n\nTheir third date was a movie and then another suck and fuck. Becky decided there would be no fourth date.\n\n\"Rory, how many girls you been with?\" she asked when he called, asking for another date.\n\n\"Oh well,\" Rory preened. \"A gentleman doesn't tell.\"\n\n\"I'm not asking for their names. Just give me a number,\" Becky said. \"Ten? Fifteen?\"\n\n\"I uh, about fifteen, I guess,\" Rory stammered, multiplying the actual number by five.\n\n\"And still don't know how to fuck? Girls got this thing? Called orgasms,\" Becky said. \"Google it. But don't call me no more, hear?\"\n\nA week before the fall semester began, Becky noticed that her father looked pale. She also noticed that he was sweating, even though the air-conditioning was blowing high.\n\n\"No easy way say this,\" Clyde admitted. \"But, shit, you don't drink for thirty eight years straight and not do some damage.\"\n\n\"That's kind of why I took him back,\" Imelda quietly said.\n\n\"That. And you love me,\" Clyde tried to joke.\n\n\"That. And I love you,\" Imelda said, a tear sliding down her cheek.\n\n\"I'm not going back to DeGarde,\" Becky decided.\n\n\"Oh bull shit too,\" Clyde snapped.\n\n\"Baby, you, you're doing too good to not go back,\" Imelda said.\n\n\"But Daddy's sick,\" Becky sobbed.\n\n\"No, Becky, no,\" Clyde said. \"You are going to school, and you're going to do your best and that's that. I don't want hear this shit you're not going to school. Just because I destroyed my life; that's no reason for you to ruin yours.\"\n\nThe next level from beginner's yoga was quite a step up. Becky found herself dragging a towel and bar of soap with her yoga pad and workout clothes. Mrs. Patel, the instructor came into the locker room and stripped off her own sweat soaked clothes. She smiled at Becky.\n\n\"I am glad I have only the two classes on Tuesday Thursday,\" Mrs. Patel admitted as she adjusted the taps of the shower. \"Monday Wednesday Friday? I have all four levels.\"\n\n\"Uh yes ma'am,\" Becky stammered, looking away from the sixty year old Indian woman.\n\nThe woman did not shave. Anything. Her legs, her underarms were heavily carpeted with coarse black and silver hair. Mrs. Patel's crotch was likewise thickly furred and when the woman had turned to grab her loofah sponge, Becky had seen that Mrs. Patel's anus was fringed with a dark circle of hair.\n\nReaching and giving her own anus a deft rub, Becky was sickened to feel a fringe of stiff hairs. She vowed she would shave that clean as soon as possible.\n\n\"See you Thursday,\" Mrs. Patel cheerfully called out as Becky scampered away.\n\n\"Yes ma'am,\" Becky said.\n\nBilly Fontenot took Becky to Benito's Fine Italian Restaurant on their first date. Their second date was to the Flowers movie theater and then to Yum Yum Ice Cream for a caramel sundae afterward. He then drove them to Huvall's Levee, a local make-out spot.\n\n\"So? What you think?\" Becky asked as she slurped up and down the length of Billy's fat five inches of uncircumcised meat. \"Think I ought shave my pussy?\"\n\n\"I uh, oh God yeah,\" Billy grunted as Becky swallowed his entire length down to the root.\n\nBilly soon pumped a hot load down Becky's throat. He did not hesitate to put his head between Becky's thighs, licking and sucking at her wet pussy. She reached down and pulled her right butt cheek, an invitation for him to jam a finger into her sweaty anus.\n\n\"Um, oh yes,\" Becky hissed as Billy fingered her pussy and her ass, his lips firmly around her fat little clitoris.\n\nBilly sucked her to two orgasms, then rolled a condom on over his hard cock.\n\nBilly's nice fat cock was one benefit of dating him. Another benefit of dating Billy Fontenot was that Billy had his own car; she didn't need to drive them everywhere. Yet another benefit was he seemed to have a ready source of cash; Becky didn't need to chip in for their dates. She would not have minded, but it was still nice to be able to keep her money in her purse.\n\nThe biggest benefit of having the occasional date with Billy Fontenot, though, was Billy Fontenot was roommates with Todd Moore. Usually Becky waited until the third or fourth date before she would have sex with her dates. Some would-be Romeos didn't even make it to the third date.\n\nBut when Becky found out, over an excellent lasagna at Benito's that Billy and Todd were roommates, Becky had almost fucked Billy on that first date. Now, laying underneath the handsome young man as he drove his fat meat into her, Becky told him to make sure Todd heard all about their hot and heavy fuck.\n\nThree weeks before Thanksgiving, Imelda called Jeremy, Martin, and Becky. Jeremy and Martin refused to make the twenty minute drive to see their father as he lay in Collier Hospital in Lowridge, Texas. Becky made the four and a half hour drive after letting her five professors know what was going on. As she was maintaining a perfect score, her professors agreed that she could make up any missed assignments, provided she returned before final exams the first week of December.\n\n\"Hey, baby girl,\" Clyde croaked out. \"Becky, what you doing here? You got school.\"\n\n\"Daddy, that don't matter,\" Becky choked out.\n\n\"Love you, baby girl,\" Clyde said, wearily closing his eyes.\n\n\"I love you too, Daddy,\" Becky sobbed, clutching his hand.\n\nThree days later, Imelda called their two sons. Again, they refused to inconvenience themselves. Neither boy would come see their father as he lay in the ward of the charity hospital. With a nod, Imelda gave the doctor permission to pull the plug.\n\nAt the memorial service, Becky was introduced to Clyde's second family, the members of his Alcoholics Anonymous home group. Most of them had glowing things to say about her father.\n\n\"I (Ah ahem mm) I ordered this for your daddy,\" George told Becky, handing her an 18 month medallion. \"I (ah ahem mm) don't think he's (ah ahem mm) going drink at the big meeting in the sky, so (ah ahem mm) guess we'll say he's got eighteen months today, okay?\"\n\nBecky gave the man a hug and kiss, then put the brass medallion into her purse. The heavy coin gave a soft 'clink' as it struck the white plastic chip, the one her father had given to her seventeen months earlier. She then looked around, but there was no sign of Jeremy or Martin.\n\n\"I'm an alcoholic (ah ahem mm) named George,\" George said out loud.\n\n\"Hi George,\" several people called out.\n\n\"(ah ahem mm) Clyde said he wanted the topic (ah ahem mm) of his last meeting to come from page sixty nine (ah ahem mm)\" George said and a few people tittered. \"But I think we'll a (ah ahem mm) go to 'A Full And Thankful (ah ahem mm) Heart' out of 'As Bill (ah ahem mm) Sees it.'\"\n\n\"Page sixty nine in our Big Book deals with sex,\" a woman whispered to Becky, smiling widely.\n\n\"Daddy!\" Becky couldn't help but giggle through her tears.\n\nAs they held the impromptu AA meeting at the memorial service, Becky couldn't help but think that Jeremy and Martin should have been there. They needed to hear these people, hear their stories. They looked respectable, dignified, refined. And yet they used words like 'fuck' and 'shit' and used those words in the same sentence with 'God' and 'Gratitude' and 'prayer.'\n\nThe day after they buried Clyde, Becky returned to DeGarde. Her professors expressed their sympathy for her loss. Becky smiled, despite the tears.\n\n\"Don't be sorry. My Daddy's in Heaven and he's out of pain,\" Becky assured them.\n\nBecky easily caught up on her assignments, then went home for the Thanksgiving break. Jeremy and Martin showed up for Thanksgiving. Jeremy looked sullen, spoke in monosyllabic grunts to his family. Martin nervously introduced Layla Green to Imelda, Becky and Jeremy.\n\nLayla Green was an African-American girl with a medium sized afro hairstyle, skin the color of rich coffee with a splash of cream, and big golden brown eyes. She displayed a self-assurance and poise as she entered the trailer.\n\nThough surprised, Imelda greeted the girl with smiles. Becky was used to seeing African-Americans and whites together on the college campus; in fact, she'd been asked out a few times by African-American men, and one African-American woman. She had politely declined those requests; she had not found any of those men particularly appealing. And had certainly not found Laquissa Toombs attractive. Plus that, the whispered comments behind the backs of the white women that did date black men was very scornful. Becky did not want to hear those words said about herself whispered about in the halls of Murphy's.",
        "She had smirked; she had not joined in, but Becky Meadows had certainly smirked when those words were said about Luanne Holmes. In private, Becky laughed aloud, imagining what Todd Moore's reaction must have been when the pretty blonde informed him that she'd decided she'd go black.\n\nBut Becky too welcomed Layla Greene with a smile. Then she gave the hotly blushing Martin a smirk.\n\n\"Jeremy, since, since Clyde's not here, you carve the turkey?\" Imelda asked, eyes filling with tears as she looked at the empty seat.\n\n\"Yeah, course, won't do it as good as Dad; I'm not falling down drunk,\" Jeremy sneered.\n\n\"Never mind, God damn it,\" Imelda snapped, eyes blazing. \"Thought I'd let you take over as the man of the house, but can tell, you're nowhere near ready to be a man.\"\n\n\"Miss Imelda, I, I'm studying over at Oakleaf's Cordon Bleu,\" Layla offered. \"I'd love to carve the turkey, if that's all right with you?\"\n\n\"Are you really?\" Becky asked. \"What's the best thing you know how cook?\"\n\n\"Best thing?\" Layla smiled. \"Girl, anything with chocolate.\"\n\n\"She does this uh, damn, this egg custard? Has this burnt sugar on top,\" Martin said as Layla quickly, efficiently carved the turkey. \"That stuff? Aw man!\"\n\nAfter pumpkin pie, which Imelda admitted was from Burns & Burns grocery store, Jeremy moved to turn on the television. Imelda grabbed him by his hair and pulled him into his seat again.\n\n\"As y'all know, Clyde was working at Alliance Square; their maintenance department,\" Imelda said.\n\nJeremy started to say something. A look from Imelda silenced his tongue. Imelda pulled three envelopes from her purse.\n\n\"And they had a life insurance policy, you know, where everyone in the group has the option to buy in,\" Imelda went on. He took out a policy and set up how he wanted it split up.\"\n\nShe handed Martin, Jeremy and Becky an envelope apiece. Becky gasped when she saw a check for eighty thousand dollars. She looked at Imelda.\n\n\"Momma, I can't take this. What about you?\" Becky declared. \"You need this more than me.\"\n\n\"Jesus, little Miss Goody Two-Shoes,\" Jeremy taunted. \"Ten thousand? Uh, I think Mom will be fine without ten thousand bucks. She probably kept most of it for herself anyway.\"\n\nBecky looked at Jeremy, then at Martin. Since Martin wasn't correcting Jeremy, apparently, he too had been given a check for ten thousand dollars. She looked at Imelda again.\n\n\"Becky, seriously, I had my own policy on Clyde; Burns & Burns has an excellent benefits package,\" Imelda said, smiling sadly. \"And even though we were separated all them years, we were still married; we never divorced.\"\n\nJeremy beat a hasty retreat as soon as possible. Martin and Layla followed, chattering about hitting a few Black Friday sales, now that they had ten thousand to blow. Becky helped her mother clean up.\n\n\"If they had bothered to see him in the hospital; hell, if they'd just shown up for the funeral,\" Imelda said quietly, cutting herself another piece of pumpkin pie. \"You want the last of this? If they had bothered to show up for the funeral; he was their father. He might have been a shitty father, but he was their father, I would have given each of you thirty five thousand. I would have taken a bit out my own and you each would have had thirty five thousand.\"\n\n\"Yes ma'am, I'll take that last piece,\" Becky agreed. \"We got any more of that Cool Whip?\"\n\nReturning to U.L.D. after the Thanksgiving break, Becky doubled down on studies. She also went to First Union, where she had deposited her one hundred thousand dollar check from the University settlement. She intended to deposit her eighty thousand dollar check.\n\n\"You know, you're only getting point zero seven percent interest,\" the teller confided to Becky.\n\n\"Uh huh?\" Becky asked.\n\n\"That kind of money? Might want think about investing, see about getting a bigger return,\" the girl went on. \"You know, make your money work for you instead of you working for it.\"\n\nMartin Boyd of Boyd Investment Group gave Becky's hand a firm shake, sat face to face with her, not across a desk, and talked with Becky as if she was an adult instead of a child. He agreed that eighty thousand was an excellent beginning.\n\n\"You'll get some brokers? You're the one has to tell them what to buy, you'll have to research your portfolio,\" Martin said. \"Me? Since I don't make anything if you don't make anything? I make suggestions, I look for opportunities.\"\n\n\"And, yes, I run it by you first,\" Martin said as Becky filled out the paperwork. \"After all, this is your money. Your money.\"\n\nBy the time the spring semester began, Martin Boyd had put seven thousand dollars more into Becky's portfolio. He had lost two thousand in one venture also, but overall, Becky was showing a profit.\n\nNadine Brown had been a good roommate; she'd been a friend when Becky had needed a shoulder to cry on. The second semester, Mathilda Cooper had been neither friend nor adversary. The same was true of Veronica, not Ronnie Thompson.\n\nDenise Watson, however, was a bitch. She tried to use her size to intimidate Becky. The larger girl tried to demand more of the closet space as well as dresser space. She also demanded that she be allowed to use Becky's cell phone and Becky's laptop computer.\n\n\"No,\" Becky quietly but firmly said.\n\nA week into the semester, Becky couldn't find the brass medallion that George had ordered for her father. She searched frantically for it, but it was gone. Also gone was a twenty dollar bill that had been tucked away in her purse. The white plastic chip was in a different compartment of her purse than the compartment Becky normally kept it in. Becky always kept it, and the brass medallion in the center zip compartment.\n\nReaching for her cell phone, Becky saw that someone had made a phone call to Benhurst, Colorado while she'd been in the dormitory's communal shower. She rapidly punched in the number of the University campus security office.\n\n\"Who you calling?\" Denise demanded to know.\n\n\"Yes, hi, I'm in room three oh four, Murphy dorm?\" Becky said when a tired sounding man answered 'Security.' \"I need to report a theft.\"\n\n\"What?\" Denise screamed.\n\n\"Look, kid, you and your roommate work it out, okay?\" the tired sounding man said.\n\n\"Send someone here. Now! Or I'll get the DeGarde Police Department here. Understand?\" Becky snarled. \"Think Dean Sims would like that?\"\n\nDenise added battery to her charges, as well as destruction of private property. Thankfully, Becky would be able to use her spare pair of glasses until her new glasses came in. Stephanie, the third floor monitor sent a student to the cafeteria to get some ice for Becky's black eye while Denise argued with the female security officer, screamed insults at Becky.\n\nThe medallion was located inside of one of Denise's shoes, along with a wadded up twenty dollar bill. Denise would not admit to calling her home in Colorado, but since the number matched her mother's number on the college application, she would be responsible for those costs as well.\n\nThe next day, Becky Brown, another resident of Murphy's third floor knocked softly on the door of room 304. Becky smiled; she and Becky Brown delighted in greeting each other with 'Hi, I'm Becky, no, I'm Becky, no, I'm Becky' whenever their paths crossed.\n\n\"Hi, I'm Becky,\" Becky Meadows said.\n\n\"No, I'm Becky,\" Becky Brown said, smiling.\n\n\"No, I'M Becky,\" Becky Meadows responded. \"So, what's up?\"\n\n\"I uh, I had that bitch, Denise? I had her last semester,\" Becky Brown said. \"God, almost dropped out; I swear. Bitch helped herself to half my stuff and even ran up a three hundred dollar bill on my phone.\"\n\n\"Well, don't think she'll be back,\" Becky Meadows said, pointing to her black eye.\n\nThe two girls chatted for a few minutes, each sharing their Denise Watson horror stories. Becky Brown then admitted she had an Algebra test to study for and stood to leave the small dorm room.\n\n\"Third time taking it,\" she whispered, embarrassed. \"Professor Huxton is such an ass hole, I swear.\"\n\n\"He is hard,\" Becky Meadows agreed. \"Bye, Becky.\"\n\n\"No, I'm Becky,\" Becky Brown said, then lightly kissed Becky Meadows on her lips. \"Bye Becky.\"\n\nIt had been a simple kiss, lip to lip. But Becky Meadows had felt an electric shock run through her whole body when the attractive brunette had touch her lips with her own moist lips. Quickly, Becky Meadows gathered her shower bag and her pajamas and scurried to the shower room.\n\n\"Sweetheart, why don't you just get an apartment?\" Imelda asked when Becky told her mother what had happened. \"That way? You don't have to deal with people like that Denise girl going through your stuff.\"\n\n\"Or have to take showers with people like Natalie,\" Becky thought, thinking of the horse-faced woman that seemed to pay a bit too much attention to other girls in the communal showers.\n\nMartin Boyd suggested Becky invest in a house instead. As he pointed out, Becky had at least two years to go on a bachelor's degree. Twenty four months of rent would get her no return. Twenty four months of mortgage payments, however, would get her a return on investment when it came time to sell. And, it would help her establish a solid credit rating.\n\nBilly Fontenot agreed with Martin's assessment. Apartment or house; either one would give them someplace more comfortable to fuck than the back seat of his Ford Edge.\n\nBilly was no longer Todd Moore's roommate. But he did still live in Sharp Shire dormitory, did still see Todd Moore in the hallways. Todd's new roommate was an African-American gangsta wanna-be, so Becky did not pursue Todd's roommate for any revenge fucks.\n\nTammy Hale was an agent with Davis Realty. The beautiful red head smiled and agreed to take Becky around, look at homes in the seventy to ninety thousand dollar range.\n\nThe first home was next door to a home that had seven cars in the driveway and an eighth car on blocks. There were several empty boxes, beer boxes and pizza boxes on the strip of dead grass between sidewalk and street.\n\n\"No. Absolutely not,\" Becky said and Tammy drove to the next destination.\n\n\"Well, that tells me why it's been on the market for five months,\" Tammy agreed. \"Notice? It is not one of ours.\"\n\nThe next destination smelled of mildew; Becky did not even enter the house. Tammy called the listing agent to report the first home and the condition of the second home.\n\n\"No. My client does not want to make you an offer on either home,\" Tammy snapped. \"I'm giving you a courtesy call so you can clean them up.\"\n\n\"Idiot,\" Tammy said, dropping her cell into her purse. \"See why I have such a low opinion of real estate agents?\"\n\n\"Um, you're a real estate agent,\" Becky pointed out to Tammy.\n\n\"Yeah, well, what can I say? I suffer from low self-esteem. Comes from being a cheerleader in high school,\" Tammy shrugged. \"The next one? Guy put it on the market last Tuesday. I haven't even had a chance to see it yet.\"\n\n\"How much is he asking?\" Becky asked, nodding with approval at the middle class neighborhood.\n\n\"Seventy nine five,\" Tammy said.\n\nThe house needed a new roof; they could see the shingles curling up. The windows were single paned; those would need to be swapped out for more fuel efficient windows.\n\n\"Oh my God,\" Tammy gasped when she opened the door.\n\nApparently, Jonathon Savoie and Richard Arnaud, as well as Richard Arnaud's wife had not taken their eviction well. The three kicked holes into the sheetrock, into the paneling of the dining room, and of every interior door. They had urinated on the carpet. They had poured cement into the two toilet bowls. They had pulled the closet doors off their hinges, had pulled the upper cabinets down off the kitchen walls, pulled the lower cabinet doors completely off of the cabinets.\n\nThey had left various pieces of furniture behind; those pieces too large to fit into their cars. Those pieces of furniture had likewise been ruined if the smell emanating from them was any indication.\n\nWorse of all, though, they had locked Debbie Arnaud's two pet Pomeranians in the house with no food or water. The two male dogs whined and whimpered, too weak to even walk to Tammy and Becky.\n\n\"Oh my God, Ms. Meadows, I'm sorry, I, I can't show you any more houses today,\" Tammy gasped, gathering the two beasts into her arms. \"These two babies need to go to the doctor's. Now.\"\n\n\"I'll hold them; you drive,\" Becky agreed as they scurried to the car.\n\nOnce the two animals were safely in Dr. Dupre's care, Tammy called her boss, Carmen Davis and told her what had happened. Carmen agreed to contact the seller.\n\n\"Again, Ms. Meadows, I'm so sorry,\" Tammy said.\n\n\"Nothing, absolutely nothing happens in God's world by mistake,\" Becky said, parroting something she'd heard at her father's memorial service. \"If we hadn't shown up, who knows if them two dogs would have survived much longer?\"\n\n\"Giving them fluids right now,\" Dr. Dupre told Tammy. \"Going try give them a little food later on, see if they can handle it. Give us a call, hmm, Monday, see how they're doing, okay?\"\n\nTammy thanked the man and her and Becky left the Kimble, Louisiana office. They sat in silence for much of the ride back to the campus of U.L.D.\n\n\"Did I lock the door?\" Tammy suddenly wondered aloud as she put her signal on to turn into the parking lot of Murphy's dormitory.\n\n\"I don't remember,\" Becky admitted. \"I was too busy holding them puppies.\"\n\nAt the three bedroom, two bathroom home on Tallow Road, Becky quietly walked around while Tammy took video of the damage to the home on her cell phone. She shook her head at the squalor, the filth created by the tenants.\n\nThe back yard had an eight foot privacy fence around the perimeter. There were two pecan trees that stood, tall and proud, though without any leaves of yet.\n\n\"Ms. Hale, how much you think it would take fix this up?\" Becky asked as Tammy securely locked the door.\n\n\"God, I don't know,\" Tammy admitted. \"Probably looking at least twenty thousand, maybe even more.\"\n\n\"Offer them thirty,\" Becky said.\n\nBecky's father had shown Becky how to sand, how to patch. Jeremy, her older brother had worked for Scandurro Construction before Joe Tonicetti had run him off. From there, Jeremy had hung sheetrock for Mike Morrison, and when Mike had died, Jeremy worked with Samuel Dees, until Samuel got tired of having to constantly supervise Jeremy.\n\n\"If that dumb ass can do it, I should be able to do it,\" Becky said to herself.\n\n\"Yes ma'am. God, look at the video; they even poured cement into the toilets,\" Tammy said into her cell phone. \"New roof, new windows. Oh, and know you can't see it on the video? But they peed on the carpets, so that's ruined. Yes ma'am, thirty thousand. Seller pays all closing costs.\"\n\nTammy smiled at Becky. Becky smiled, even though she imagined she could still smell the urine; some urine probably got trapped in the grooves of her tennis shoes' soles.\n\n\"Them paying all closing costs will save you a bit more,\" Tammy disclosed when she ended her phone call. \"Give me a check for one percent, earnest money, okay?\"\n\n\"Yes ma'am,\" Becky said and tapped on her cell phone. \"And...you should see it now.\"\n\nTwo weeks later, the seller made a counter offer. Becky declined the forty nine thousand dollar counter and her and Tammy looked at a few more homes. After another week, the seller made a second offer; forty four thousand; Becky to pay the closing costs. Again, Becky declined.\n\n\"Ever think of being a real estate agent?\" Tammy asked the third time she called Becky's phone. \"They've come back with thirty five, you pay the closing costs.\"\n\n\"Sorry, I have a low opinion of real estate agents,\" Becky laughed.\n\n\"Really! Me too!\" Tammy agreed. \"Self-esteem issues, I'm sure. Someone ought do a psychological study on them some day. Why do real estate agents become real estate agents? I'll get the paperwork started, Ms. Meadows.\"\n\nOn her first day off from her job at Burns & Burns Grocers grocery store, Imelda drove out to see Becky's new home. She borrowed Jeremy's rusty pickup truck and carted Clyde's tools, along with the washing machine and dryer from Clyde's trailer. Jeremy wasn't happy about that; he now lived in Clyde's old trailer home. When Imelda suggested he use part of the ten thousand dollars from Clyde's insurance to buy a new washing machine and dryer, Jeremy clammed up.\n\n\"And you can get you a pretty good deal at Deubler's,\" Imelda told her son. \"But, uh, no, I will not co-sign for you.\"\n\nImelda was horrified when she saw the condition of the home. She swore she felt filthy, just standing in the living room. Her eyes watered from the stench of the uncirculated air.\n\nThe only interior door that the previous tenants had not damaged was the door from home to garage. They'd not damaged this door because it was a solid wood door, quite heavy. Becky helped Imelda unload tools and washing machine and dryer, then blocked the garage door from being able to be opened from the outside. She made sure she had securely locked the interior door.\n\nDaryn Blutcher was six feet, four inches and 247 pounds of solid muscle. The twenty year old man played left cornerback, left tackle, and occasionally free safety. Daryn had an uncanny ability to be where the ball was. He was also as poor as a church mouse and not much brighter than a mouse.\n\n\"Daryn, hi, Becky,\" Becky said, greeting Daryn as he left his English 220 class.\n\n\"Hi, Becky,\" Daryn said, smiling down at the four foot, ten inch girl with the incredible tits.\n\n\"Listen, I need some muscle; I've got some carpet that needs to be ripped out,\" Becky said, smirking at Todd Moore as Todd glowered from behind the hulking football player.\n\nDaryn agreed to do the heavy work, for a hundred dollars. He and Becky donned face masks, rubber gloves, and goggles and got busy ripping the carpet from the three bedrooms, hallway, and living room. While Becky swept, then mopped the concrete floors with a solution of ammonia and water, Daryn used a sharp knife to cut the carpet and padding to strips of three foot width.\n\n\"All right, now, come here,\" Becky ordered, pulling Daryn into the master bathroom.\n\nShe made him wash his hands, even though he'd worn heavy gloves. Then she pulled him into one of the rear bedrooms; none of the windows had curtains.\n\n\"Now, here's your hundred bucks,\" Becky said, counting out five twenties.\n\n\"Thanks,\" Daryn said, stuffing the bills into his pocket.\n\n\"And...\" Becky said and unzipped Daryn's jeans.\n\nHis cock was seven and seven eighths inches long and quite thick. Becky knelt on the hard floor and stretched her mouth wide to swallow all seven and seven eighths inches down. She actually gave a shudder of pleasure when the head of Daryn's fat meat entered her throat. That momentary spasm of gag reflex always triggered an oddly pleasant response in Becky.\n\n\"Damn, aw damn,\" Daryn grunted as Becky's lips, tongue and throat massaged his cock.\n\nBecky fondled Daryn's large testicles with one hand while her other hand rubbed her hairless pussy. She bobbed her head up and down, waggling her tongue around Daryn's sweaty dick.\n\n\"Man, Becky, I'm 'going to jizz,\" Daryn warned.\n\n\"Mm hmm,\" Becky agreed, not releasing his cock.\n\nShe again drove her mouth down to the root of his meat and let him spurt his load. The final two spurts, she caught in her mouth so that she could taste him. He had a slightly sweet taste underneath the bitter, salty flavor.\n\n\"Thanks, Daryn wheezed.\n\n\"You not done, huh?\" Becky asked, shrugging out of tee shirt and bra.\n\n\"God damn, those are some nice tits,\" Daryn gushed, seeing Becky's unfettered breasts bobbling.\n\n\"Thanks,\" Becky smiled, hefting them with her small hands.\n\nDaryn's cock did revive as he roughly played with Becky's breasts. While Daryn squeezed her breasts, Becky stepped out of tennis shoes, then wiggled out of her blue jeans, revealing her bald pussy.",
        "\"Hang on, hang on, I got a couple condoms,\" Daryn said as Becky gently pulled him to lie on top of her on the concrete floor.\n\n\"You brought condoms with you?\" Becky asked, not sure whether to be upset or not.\n\n\"Hey, what can I say? You're a beautiful girl. A guy can hope, right?\" Daryn shrugged, rolling a condom onto his fat meat.\n\n\"I'm, you think I'm beautiful?\" Becky asked, then squealed as the head of his cock slid into her pussy.\n\n\"Too beautiful be seen with a guy like me,\" Daryn groaned as he slid his meat into her tight pussy.\n\nDaryn Blutcher was not handsome. His blond hair was tightly coiled curls on a square face. His brown eyes were mean little slits on a face that looked like lumps of clay had been dropped to form an abstract face. His cheekbones were pronounced, his nose was too large, even for his large head and his lips were thin ribbons of chapped flesh.\n\n\"Ugh!\" was all Becky could say as Daryn's cock pounded in and out of her pussy.\n\n\"Ugh!\" Daryn agreed as he pumped a load into the tight latex sheath.\n\n\"Got another condom?\" Becky asked, still shuddering from her orgasm.\n\n\"I...yeah,\" Daryn said, checking his pockets.\n\n\"Good,\" Becky said, crawling to her purse.\n\nDaryn watched Becky's sweetly rounded buttocks wiggle and waggle as she crawled across the floor to where her purse was. He could see her tightly crinkled light brown anus, and underneath, he could see her wet pussy lips, reddened and open. His cock began to stiffen again. He quickly pulled the used condom off, then used his handkerchief to wipe his sticky cock clean.\n\n\"My last boyfriend? Called this bowling,\" Becky said, bringing a tube of lubricant to where Daryn lay.\n\n\"Bowling?\" Daryn asked, cock now fully erect as he watched Becky's large breast wobble and bobble back and forth.\n\n\"Uh huh. Know how a bowling ball's got three holes?\" Becky smiled sweetly and Daryn almost filled his condom.\n\nBilly Fontenot had taken Becky's anal virginity, in the back seat of his Ford Edge. As usual, Becky had sucked him off, then pouted when he wouldn't kiss her afterward. He then bent and licked, sucked, and fingered Becky to an orgasm.\n\n\"Hey, wait, what?\" Becky giggled when Billy forced her onto her belly.\n\nBilly then tongued Becky's anus, fingers fumbling with her pussy.\n\n\"Oh God yes,\" Becky hissed when Billy jammed a thick finger into her anus.\n\n\"Oh Billy,\" Becky grunted when he added a second finger.\n\nBecky enjoyed analingus, having her anus licked. She enjoyed when her lovers introduced a finger or two to her rectum during foreplay. It produced this odd warmth inside of her belly, a very pleasurable sensation.\n\n\"Ugh!\" Billy groaned, dangerously close to ejaculating again.\n\nHe pulled Becky onto hands and knees and drove his throbbing cock into her tight pussy in one thrust. Three pumps and he spurted his second load into another condom.\n\nThe entire time he was pumping his cock in and out of Becky's pussy, his fingers continued to twist and pump into Becky's rectum. He squinted, trying to see his fingers plunging in and out of her, the little bit of moonlight not giving him much light.\n\n\"Ugh!\" Becky groaned when Billy suddenly pulled his fingers from her stretched rectum.\n\nBilly hurriedly pulled the condom from his cock. He held his sticky cock in one hand and aimed for Becky's brown hole.\n\n\"Agh!\" she cried out as he pressed the blunt head of his hard cock to her anus.\n\nThere had been a sharp jolt of pain. Becky sucked in her breath. Billy lurched forward, driving half of his cock into her bowels. Becky let out her breath in a scream of pain.\n\nThat had been their last date. Scott Williams, however, knew that spit, sperm and pussy juice was not enough lubrication for anal sex. Plus, Scott Williams had an apartment, with a large, comfortable bed.\n\nBecky had tensed up when Scott began to tongue her anus. She tensed up when he introduced a finger to her rectum. She tensed up when he introduced a second finger to her rectum.\n\n\"Oh!\" Becky let out a sigh as Scott began to lubricate her anal sheath with petroleum jelly.\n\nIt was pleasurable, Scott's thick fingers plumbing her. Soon, he had three fingers thrusting and twisting inside of her and Becky reached down to rub her clitoris.\n\nWhile she sook and gasped in orgasm, Scott pressed his greasy cock to Becky's anus. Again, there was that sharp jolt of pain as her muscles tried to deny Scott entry. Then his cock was pushing into her and the pain gave way to that oddly pleasurable feeling.\n\nNow, on a hard concrete floor of her home, Becky wasn't sure if her tiny little rosebud could accommodate Daryn's immense girth. She soldiered on, greasing up Daryn's latex covered cock.\n\n\"Hold it straight,\" Becky ordered, then swiveled around.\n\nShe squatted, facing Daryn's feet. Daryn groaned at the sight of Becky squatting over him, long brown hair in cute ponytail, sweet ass lowering closer and closer to his cock.\n\nBecky reached down and pulled her left buttock. Daryn could see Becky's tight little ring coming closer and closer.\n\n\"Ugh!\" Becky grunted as the head of Daryn's cock bounced away.\n\nBecky Reached back with her right hand, blindly searching for Daryn's cock. She found the fat cock and guided him to her anus.\n\n\"Ugh!\" Becky grunted as his cockhead pressed against her protesting anus.\n\n\"Oh God damn!\" Becky screamed out as Daryn's fat meat began to push upward into her.\n\nHe was big. And Becky had not prepared her rectum for such a large intrusion. Scott Williams had not been small, but Scott had taken the time to prepare Becky's rectum for his cock.\n\n\"We can stop; we don't need to do it like this,\" Daryn groaned.\n\nThe tightness of Becky's struggling ass was actually painful. If Daryn had not been looking at Becky's light brown ring, stretched taut around the head of his cock, could not see her round ass cheeks wiggling, there would be no pleasure in this act at all.\n\n\"No!\" Becky grunted in a strangled scream.\n\nHer weight forced nearly half of Daryn's meat into her rectum. Becky groaned; the pain seemed to be intensifying instead of subsiding into that pleasurable warmth.\n\n\"Damn!\" Daryn suddenly cried out and Becky almost sobbed in relief as he ejaculated.\n\nWhen Daryn ceased his shudders and unintelligible grunts, Becky gingerly wiggled forward, dislodging his massive cock from her ass. She almost collapsed in relief. Her anus throbbed with each beat of her heart; it was a few minutes before she could rise.\n\n\"Todd still tutoring you in Vocabulary?\" Becky asked as she pulled her jeans up her stubby legs.\n\n\"Uh, yeah,\" Daryn agreed. \"Need me to see if he can tutor you?\"\n\n\"No, took English two twenty last semester,\" Becky said, struggling into her bra.\n\n\"Oh. Okay, where you want these?\" Daryn asked, holding out the two knotted condoms.\n\n\"Garbage can's in the kitchen, Becky said, wiggling into her tee shirt. \"No, next time you see Todd, just let him know we went bowling, okay?\"\n\nWhen Becky pulled in front of Mauragas Dormitory, the Male Athletes' dormitory, Daryn proved to be a little more intuitive than Becky gave him credit for. He smiled sadly at her.\n\n\"I'd ask you out, you know, on a date,\" he started. \"I mean, hey! I got a hundred bucks, could take you someplace nice, you know, I mean, not Radcliffe's nice, but someplace nice.\"\n\n\"Daryn, Radcliffe's isn't that great,\" Becky said, downplaying the exclusive French restaurant.\n\n\"But, you're already in love with someone else,\" Daryn said.\n\n\"Huh?\" Becky asked.\n\n\"But, yeah, you still want me to, I'll tell Todd we made love,\" Daryn smiled sadly. \"But, I, can I have a kiss?\"\n\nBecky gave him a soft kiss. He smiled sadly again, then opened the door of her truck. Before he closed his door, Becky saw a tear slowly trickle from his eye. She felt absolutely horrible as she watched the large man walk to the dormitory.\n\nPulling up in front of Murphy's dormitory, Becky wanted a shower, warm pajamas, and a good long cry. Getting out of the truck, Becky could feel her anus throbbing painfully. Walking up the stairs of Murphy's, the elevator was far too slow, Becky could feel her anus throb painfully with each step.\n\nGathering her shower things, Becky hoped Becky Brown would come, just to chat, and hoped Becky Brown would stay away.\n\nEach time Becky Brown came into her room, Becky Brown and Becky Meadows would play their silly little game of 'I'm Becky, no, I'm Becky.' Then they'd sit on Denise's abandoned bed and chat. As they chatted and laughed, Becky Brown would touch Becky Meadows, tough Becky Meadows on her hand, her arm, her thigh.\n\nAnd when she would leave, Becky Brown would give Becky Meadows a kiss, lip to lip. Becky Brown's touches made Becky Meadows feel a little odd. Not bad, just off-center slightly. And those lip to lip kisses always produced an electric jolt inside of Becky Meadows's belly.\n\nBecky Brown must have been busy studying; she did not come to Becky Meadows's room that night. Becky Meadows did her one assignment, constantly seeing Daryn's sad face, seeing that tear trickle down.\n\nA few days later, Becky wished she had hired Daryn again. Four by eight feet sheets of sheetrock were heavy. The internet had several videos on how to patch holes in sheetrock and Becky bought six sheets of the material, as well as the other materials the Internet had told her she would need.\n\n\"Measure twice, cut once,\" Becky recited as she walked around, patching the holes in her walls.\n\nTammy Hale recommended Paul Robichaux for those jobs Becky could not do. Becky met with the handsome man and hired him on the spot. When he recommended turning the ruined dining room into a bedroom, knocking out the wall between the two rear bedrooms to create one large master suite, and enlarging the hall bathroom to add a whirlpool tub and separate shower stall, Becky knew she'd made the right choice.\n\n\"Save all the receipts; old owner's wanting to sue the former tenants,\" Tammy said. \"Oh, and Payton and Eli say 'Hi Aunt Becky.'\"\n\n(Tammy Hale had named the two dogs Payton Manning Hale and Eli Manning Hale. In her eyes, just like the two Manning boys, her pooches were winners.)\n\nWhile Becky labored on her house, she would wave to her neighbors. Some would return her wave. Some would hesitate, then return her wave. Some neighbors pretended they did not see Becky's wave.\n\nBecky did the painting herself; she found a brand new air compressor on-line for half the price that the Home Depot in Elgee wanted. The miserable looking woman admitted, her boyfriend had talked her into buying it for him; he planned to open his own painting business. Then when the air compressor was out of the box, the boyfriend left her for another woman.\n\nPaul admired Becky's handiwork as he and his crew installed the kitchen cabinets. He took several pictures with a digital camera.\n\n\"Know, your cell phone has a camera,\" Becky said.\n\n\"Uh huh, can't use it,\" Paul admitted. \"Go to take a selfie? Get the top of my head, get my left shoulder, never get what I'm aiming for.\"\n\n\"Just think how bad it would be if he drank,\" one of his crew laughed.\n\n\"Bite me,\" Paul laughed and took a few more pictures. \"Ms. Meadows, this is really some great work you did here.\"\n\nBlue had been Clyde's favorite color. Becky vacillated between pink and blue and decided on blue.\n\nIn between working on her house, Becky continued to study, continued to maintain a 4.0 GPA. In her weekly phone call home, she did complain to her mother; she was being stretched pretty thin.\n\n\"Poor baby,\" Imelda teased. \"Uh, oh, wait! You volunteered for this.\"\n\nOne afternoon, Becky was in the library; Professor Laughlin wanted a group project on business principles. Members of each three person group were assigned randomly; Becky was thinking very seriously of telling Professor Laughlin that Jude Goss and Candy Steinbrenner were not pulling their weight; please assign her to another group.\n\n\"Hi Todd,\" Candy simpered, thrusting her 40C chest forward.\n\n\"Hmm? Oh, hey Sandy,\" Todd Moore said to the portly girl.\n\n\"Candy,\" she said, losing her smile.\n\nBecky said nothing, just regarded Todd with cool eyes. He'd allowed his thick brown hair to grow out; it was bushy, making his slightly scrawny physique look smaller. He also had a scrub of beard hair and a wispy looking mustache. Despite this, Todd Moore was still handsome, in Becky's eyes.\n\n\"Hey, uh, um, uh, Becky? I uh, I was wondering, see, there's this place, you like Mexican food? There's this Manny's,\" Todd Stammered.\n\n\"Oh! I love Manny's,\" Candy interrupted. \"Love Mexican food; there salsa is the best.\"\n\n\"Manny's? Yeah, they got good salsa,\" Becky agreed, voice calm, even.\n\n\"And uh, then after? We uh, we can go bowling; you like bowling?\" Todd asked, Adams apple bobbing as he swallowed nervously.\n\n\"I love bowling,\" Candy interrupted.\n\n\"Bowling, the sport?\" Becky clarified and Todd nodded, frowning at such an odd question.\n\n\"Never been,\" Becky agreed, voice still quite calm.\n\n\"Want to?\" Todd asked.\n\n\"When?\" Becky asked.\n\n\"Um, uh, how 'bout uh, Thursday?\" Todd asked.\n\nIt had taken all of his courage to get up from his table and walk to where he saw Becky sitting with two other students. Todd had told Dweeb, he didn't know the boy's real name to watch his back pack and walked to where Becky was seated.\n\nHis last reserve of courage was quickly depleting; Becky was not making this easy. Her cool, detached manner sapped all of Todd's strength. And that Candy, Sandy, whatever, good God, why was she interrupting them? This was hard enough without her barging into the conversation.\n\n\"Pick me up outside of Murphy's at six,\" Becky agreed, then turned back to her notes. \"All right, come on, we still haven't decided what business we're going to focus on.\"\n\n\"Um, oh okay, six,\" Todd said and shuffled away.\n\n\"Pick any God damned business you want,\" Candy snarled, slapping her laptop shut.\n\n\"Hey, Candy? Not my fault he asked me and not you,\" Becky snapped. \"But I am not getting an 'F' on this junk, just because your feelings got hurt.\"\n\n\"Why don't we pick, oh, I don't know, how about a Mexican restaurant?\" Jude smirked, clearly enjoying the confrontation between the two girls. \"Or maybe a bowling alley. You like bowling, Candy?\"\n\nWhen Becky complained to Professor Laughlin, the man shrugged and told Becky to deal with it. No matter where she went in life, she would be paired with people that didn't pull their weight; it was up to her to figure out how to get the job done regardless.\n\nOn Thursday, Becky Meadows and Becky Brown were sitting outside when Todd shuffled up. Becky Meadows and Becky Brown gave each other a quick kiss, lip to lip, then Becky Meadows pushed her big glasses up her button nose and smiled at Todd. Becky Brown smiled at Todd then went into the dormitory building.\n\n\"So, where's your car?\" Becky asked.\n\n\"Huh? I uh, I don't got one,\" Todd admitted.\n\n\"Oh. We taking an Uber there?\" Becky asked.\n\n\"I, uh, don't you drive?\" Todd asked.\n\n\"Yeah. Didn't know I was going have to drive,\" Becky sighed. \"Fine, come on.\"\n\nTodd tried several times to start conversations as Becky drove to the Mexican restaurant. Becky wasn't rude; she just wasn't very encouraging. She answered Todd's questions with short answers, asked no questions of him. She offered no opinions or comments to any statements Todd made.\n\nAt the restaurant, Becky listened as Todd talked about his declared major, English, with a minor in Mass Communications. Again, Becky wasn't rude, she just wasn't very conversational.\n\n\"Business,\" was all she said when Todd finally asked what her declared major was; she didn't elaborate.\n\nBecky read Todd's eyes when the waitress put the check on the table. She wondered if she'd have to pick up the check; Todd's eyes showed he had not expected the bill to be that high.\n\n\"How 'bout I pay half?\" Becky finally offered as Todd counted out some crumpled bills.\n\n\"I, God damn it, I hate to ask you, but could you?\" Todd said, face red with embarrassment.\n\n\"And whoever loses at bowling has to pay for that,\" Becky agreed, fishing out a twenty dollar bill.\n\n\"Okay,\" Todd whispered.\n\nBecky won the first game, somehow managing a fifty three to Todd's forty six. She 'lost' the second game and declared that since it was a draw, they'd each pay half.\n\nTodd looked disappointed when Becky drove from bowling alley to Sharp Shire dormitory. She looked at his hangdog expression for a moment.\n\n\"What?\" she finally asked.\n\n\"I uh, well, I mean, Billy, and then Daryn, I mean, they said...\" Todd stammered.\n\n\"What? Really? You thought, what? You think I'm some kind of slut?\" Becky asked, voice becoming shrill.\n\n\"Well, no, but...\" Todd stammered.\n\n\"You think I'm just going flop on my back and let you fuck me?\" Becky shrilled, incensed.\n\n\"You fucked Billy and Daryn, oh, and Scott,\" Todd yelled.\n\n\"After the third or fourth date, Todd,\" Becky yelled. \"Not after just one date. Jesus! You want just a piece of ass? Give that Candy a call that's all you looking for.\"\n\n\"Sorry. All right? I'm sorry,\" Todd screamed. \"I'm sorry about Luanne. I'm sorry I was such a dick about it. I'm sorry, okay?\"\n\nBecky pushed her glasses up her button nose, then looked at Todd. She pulled the glasses off and dabbed at her eyes with the sleeve of her blouse.\n\n\"You really hurt me,\" she said, voice breaking. \"I thought, I mean, you said you loved me.\n\n\"Yeah, I know,\" Todd mumbled.\n\nShe leaned over and gave him a soft, moist kiss. She gently pushed his hand away from her breast and sat back.\n\n\"Good night, Todd,\" Becky said quietly.\n\n\"Uh, so, uh, you doing anything tomorrow night?\" Todd asked.\n\n\"They just finished putting the carpet in,\" Becky said. \"So, I'll probably be doing a walk-through; who knows? It's good enough, might spend the night there.\"\n\n\"Huh?\" Todd asked.\n\nBecky had not said anything about her new home. Truthfully, Becky had said very little about anything at all during their date. She had not even discussed her father's passing, a monumental occurrence in her life.\n\nTheir next date was to Chuck for hamburgers, then next door for miniature golf. Becky 'lost' the game and gave Todd a kiss for winning. She then grimaced and rubbed her lips.\n\n\"Might want shave that stuff off your face,\" Becky said. \"Itches.\"\n\n\"Hey. I like it,\" Todd protested, rubbing his mustache with his index finger.\n\n\"Okay,\" Becky shrugged. \"Like it more than kissing me? That's fine. Keep it.\"\n\nCandy, Jude and Becky finally decided on studying real estate brokerages as their business. Researching was not Jude's strong suit and Candy just sat and sulked. Becky's reminders that this project was thirty percent of their grade did little to motivate either Candy or Jude to put forth any tangible effort.\n\nFor their third date, Todd reluctantly agreed to go to Cowboy's for barbeque, then line dancing. Becky stared at Todd when he showed up, mustache and beard still on his face.\n\nIt was apparent that Todd did not enjoy line dancing, did not enjoy Country & Western music. And when Becky pulled up to Sharp Shire dorm, Todd became agitated.\n\n\"What? What's your problem?\" Becky asked, looking at him.\n\n\"I mean, shit; this was our third date,\" Todd said.\n\n\"Yes? And?\" Becky asked, waiting.\n\n\"We, third date, I mean, aren't we going fuck?\" Todd asked.\n\n\"Won't even shave that crap off your face?\" Becky asked. \"And, uh, Todd, just standing there, acting like you're just too cool to dance? I'm supposed be all hot and ready?\"\n\nTodd let out a strangled scream of frustration. Becky shook her head, unimpressed with Todd's antics.\n\n\"Todd, maybe what? Two years ago? Maybe two years ago, before I had a clue what anything was, I would have put up with all of that,\" Becky admitted.\n\n\"Good night,\" Todd spat and left the truck.\n\nThe last day in February, Becky moved into her new home. Todd was among the guests she invited for a housewarming party. Becky nodded in approval; he had shaved the fuzz from his face. Becky Brown was also among the guests and latched onto Daryn Blutcher as he sat in a comfortable loveseat.",
        "Becky Brown and Daryn left shortly after wolfing down their plates of spaghetti and meatballs. Becky made sure to tell everyone that her future sister in law, Layla Greene, a recent graduate of a Cordon Bleu school had given her the recipe.\n\n\"House is beautiful,\" Todd said as the last guest left.\n\n\"Thank you,\" Becky smiled. \"You've seen it all?\"\n\n\"I, yeah, I guess so,\" Todd said. \"I mean, I'm pretty sure I did.\"\n\n\"Oh, bet you haven't seen the back yard,\" Becky smiled, pulling him to the atrium doors.\n\n\"Becky, shit! It's like what, ten degrees out here,\" Todd complained as Becky pushed him onto a chaise lounge.\n\n\"Don't worry,\" Becky smiled and lighted the fire pit. \"Be plenty warm in a minute.\"\n\nShe pulled a heavy fleece blanket from the small outside storage closet and draped it over the chaise lounge. She then made Todd lay down and pulled the blanket over the two of them. She wiggled her butt back until she was mashed against his crotch.\n\n\"Still cold?\" Becky asked, small hand rubbing lightly over his hard cock.\n\n\"I uh, no,\" Todd moaned as her hand rubbed him through his jeans and briefs.\n\n\"You ARE?\" Becky squealed. \"Aw, poor baby, you're frozen solid. Here, let me warm you up.\"\n\nBecky deftly unzipped Todd's jeans and fished his hard cock out of his briefs. The angle wasn't comfortable, but Becky managed to wrap her small hand around his fat cock.\n\n\"How about now? Still cold?\" Becky asked, giving him a slow hand job.\n\n\"Freezing to death,\" Todd agreed, hunching his cock against her hand.\n\n\"Oh, poor baby,\" Becky clucked. \"Well...\"\n\nShe unzipped her jeans and pushed them down to her knees. She wiggled slightly and Todd's hard cock began to slide into her wet pussy.\n\n\"Oh, yes,\" Becky sighed as Todd's hands massaged her breasts through sweater and bra.\n\n\"God, yes,\" Todd moaned as he pushed himself into her.\n\n\"Still cold?\" Becky whispered.\n\n\"I'm, um, I'm warming up here,\" Todd moaned.\n\nA moment later, Todd stiffened. Becky sighed with contentment as she felt his semen spurt into her. She'd not achieved orgasm; the position was awkward. But she was pleased that she could bring her man to orgasm.\n\n\"Damn, it, Becky, its cold out here,\" Todd's complaint woke Becky from her light slumber.\n\n\"Shit! Yeah, it is,\" Becky giggled, looking at the dying embers of her fire pit.\n\nShe dumped some water onto the pile of embers and pulled Todd inside. Both let out a sigh as the warm air greeted them.\n\nIn her bedroom, Becky stripped out of heavy sweater and bra, boots and jeans, then assisted Todd out of his clothing. She lay on her bed and spread her legs wide.\n\n\"Come on, baby, use that magic tongue on me,\" Becky ordered.\n\nTodd obviously did not remember, he had ejaculated into her pussy just an hour earlier. He licked sucked and fingered Becky to a grunting, thrashing orgasm. She then rolled him onto his back, straddled him, and started to ride him hard.\n\n\"Yes!\" she hissed as Todd began to play with her swinging breasts.\n\nIn the morning, after omelets made with some cheese and a few meatballs from the previous evening's meal, Becky pulled Todd into the bedroom again. Todd was an anal virgin but Becky walked him through getting her tight rectum ready for his fat meat.\n\n\"Ugh!\" they both cried out as he pushed into her.\n\nTodd looked down and his eyes rolled back in his head for a moment. Her bubble butt was in front of him, two pale hillocks of flesh. There was a shallow furrow bisecting the two sweet globes of flesh. In that narrow furrow was a light brown ring of flesh, shiny with lubrication and the head of his cock was pushing upward into that tight ring of flesh.\n\n\"Ugh!\" Todd grunted.\n\n\"Oh yes,\" Becky hissed.\n\nShe loved that first stab, when her lover was entering her. The only time she had not liked it was when she'd had Daryn's immense bulk invading her. Todd was fat, almost too fat for her tiny rosebud. That stab of pain was followed by a delicious warmth in her guts.\n\n\"Aiee!\" Becky screamed out when Todd's hands found her hanging breasts.\n\n\"Oh God yes, oh yes Todd,\" Becky gurgled as Todd's cock was entirely inside of her, filling her up.\n\nWithin minutes, Todd was hammering Becky's ass hard. She grunted, screamed, and shuddered in orgasm. A moment later, Todd stiffened and blasted his load into her guts, triggering a second mild orgasm within Becky's guts.\n\nThey showered together, but didn't get very clean. Becky's breasts did get quite soapy, though and she knelt and gave Todd a boob job, masturbating his cock between her breasts. When he blasted his load, she opened her mouth wide and tried to catch all of his cream.\n\nSunday morning, Becky woke Todd with a blow job, fed him breakfast, then told him she had a mountain of homework. He admitted he too had a mountain of homework to catch up on. She pulled on a bra and a long U.L.D. tee shirt and drove them to the campus.\n\n\"I uh, I love you,\" Todd said when Becky pulled in front of Sharp Shire dorm.\n\n\"Aw! Thank you; that's sweet,\" Becky said and kissed him.\n\n\"I, you not going say it?\" Todd asked, hurt.\n\n\"Hmm? Todd, I'm not sure, I'm not sure I love you,\" Becky said honestly. \"Got to remember; thought I loved you once before and you kind of shit on that.\"\n\nTodd didn't answer; just jerked on the door handle and let himself out. Becky sighed when he slammed her truck's door.\n\n\"Shit! Jesus, I said I'm sorry,\" Todd yelled.\n\n\"Yeah, well sometimes sorry just don't cut it, Todd,\" Becky said, turning up an old Mindy McCready song. \"Yeah, tell 'em, Mindy. Guys do it all the time, right?\"\n\nBecky was enraged with Jude and Candy when their Business Principles & Applications project received a grade of 79. She saw she would have to make a 100 on the mid-term and a 100 on the final exams if she wanted to maintain her 4.0 GPA. For Jude and Candy, though, a '79' was a great grade.\n\nTwo hours later, Becky was still angry with Candy and Jude. The sound of the steady rain drowned out the lecture of Early European History. Finally the professor waved the students out of the hall forty minutes before the class was to end; he was tired of repeating himself, tired of trying to be heard over the rain.\n\nMarching out of Gilbert Hall, even with her umbrella, Becky was drenched. That morning, it had been fifty degrees, so Becky had worn a light sweater. Now, the air was a very chilly thirty eight degrees and the gusts of wind made it seem much colder.\n\nThe early March air was cold, the rain was cold. But the air underneath the umbrella was warm and Becky's glasses fogged over, making it difficult to find her truck.\n\nOnce safely inside of her truck, Becky cranked the heater to full blast. She then carefully backed out of her space; there were other students racing about on foot and in cars and on bicycles. She sighed with some relief when she managed to leave the U.L.D. parking lot without incident.\n\nThe rain fell in sheets; visibility was minimal. Becky crawled through the streets of DeGarde, Louisiana, ignoring the one or two idiots that bleated their horns at her slow progress.\n\nTurning onto Charles Lane, Becky had to brake when a yellow Smart car nearly came to a stop in front of her. The small car turned on Oak Park and Becky continued. Another gust blew the driving wind sideways and Becky slowed to a crawl again.\n\nShe almost didn't see the girl. The girl's sweater was dark gray and her skirt was dark gray. Fortunately, the headlights picked up the white knee socks and black and white saddle oxfords the girl wore.\n\nAs Becky slowly passed the girl, she vaguely recognized the forlorn figure. The girl was a neighbor, living two houses down Tallow Road from Becky's own home. She did not know the girl's name but the girl waved to her whenever they saw one another.\n\n\"Hey!\" Becky called out, rolling the passenger window down. \"Hey, get in.\"\n\nMontana 'Monty' Gardner stopped walking, wondering if she should run. The Baylor Lake High School student knew better than to get into a stranger's car. But she was cold, wet, miserable.\n\n\"Thanks,\" Monty said, scampering into the truck and closing the door.\n\n\"The bus lets you off this far from your house?\" Becky asked as she resumed her slow progress.\n\n\"Huh? No, oh hey, you're the woman moved into that house!\" Monty said, recognizing the woman, now recognizing the truck.\n\n\"Yeah, right down the street from you and your mom,\" Becky agreed.\n\n\"Not my mom,\" Monty actually giggled, holding out her dark hand.\n\nMonty's father was a Pakistani. He was actually a second generation Pakistani-American; his grandparents had immigrated to America in 1961. His grandparents acclimated themselves to American culture. His parents acclimated themselves to the American way of life; they called themselves Americans. But James Carter Ahjib was radicalized in college. He called himself Amir Mohammed Ahjib and identified himself as Pakistani, disassociating himself from the Great Satan, America.\n\nRadicalized or not, Amir did like blondes with big tits and had impregnated Chloe Kennedy, a fellow college student. Upon her birth, the baby was named Coltoom Ahjib. She was female, therefore, Amir disavowed any parentage. So, Chloe took him to court.\n\nEnraged that the infidel Chloe Kennedy would dare bring dishonor to him, Amir vowed to murder her. He also vowed to murder the judge, an infidel who had no right to pass any judgement against him. After all, he followed the teachings of the Prophet Mohammed and this judge did not follow the teachings of the Prophet Mohammed. For that little threat, Amir was given jail time.\n\nUpon his release, Amir did make good on his promise; he did behead Chloe Kennedy. He was captured as he attempted to enter the courthouse, searching for the judge who dared sentence him.\n\nPolitical correctness being what it is, and fearing that the few Muslims in the community would make Amir Mohammed Ahjib some sort of martyr, it was almost three years before Amir was finally brought to trial for Chloe Kennedy's murder. At his trial, Amir vowed to slaughter his daughter, the cursed dog Coltoom Ahjib.\n\nFearing their son's threats, Amir's parents sadly gave custody of the girl to Chloe's half-sister, Margaret Gardner. Margaret Gardner first moved from Benhurst, Colorado to Lowridge, Texas. She also had Coltoom's name changed so that Amir or Amir's friends could not easily find them.\n\nHannah Montana,\" Coltoom said when she was asked what name she'd like; she was a huge fan of the Disney Channel's hit show.\n\n\"Oh, that's nice, but how about just Montana?\" Margaret suggested.\n\nOne morning, Margaret woke up to find two of her tires slashed. It was just a random act of juvenile vandalism, but Margaret was sure it was a warning from Amir's friends so she and Monty moved to Colfax, Missouri.\n\nOne winter morning, a rat froze to death. Unfortunately, it had frozen to death on Margaret's doorstep. Margaret was sure it was another warning so they moved again. Another incident, another move. Another incident, another move. Margaret grew to resent the caramel skinned girl that had brought so much hardship upon her.\n\nThis last move had been to Baylor Lake, Louisiana. Margaret vowed it would be the last move; Montana was now eighteen. The next move, Monty would be undertaking that move on her own.\n\nThe rain did not let up as Becky continued to drive along Charles Lane. From behind them, an impatient driver swerved around them, jammed his accelerator and spun his tires for a moment before fishtailing nearly 180 degrees.\n\n\"See, ass hole? That's why I'm crawling here,\" Becky said to the other car.\n\nShe smiled and shook her head. Monty smiled and agreed.\n\n\"So, why did the bus let you out so far away?\" Becky asked again.\n\n\"Bus didn't. I had to walk home from school,\" Monty sniffled, then started to cry.\n\nThe eighteen year old girl told Becky that she had planned to spend the night with Candy Thibodeaux, a friend that also attended Baylor Lake High School. She had planned to ride on bus number 83 with Candy to Candy's house.\n\n\"Bus one forty three leaves and I'm waiting and I'm waiting, and then Candy comes up and says she's real sorry; she forgot all about it,\" Monty sobbed. \"She forgot all about it and she's going go to Chris's house but we'll do it next weekend and they just leave me there.\"\n\n\"And they couldn't just bring you home?\" Becky asked.\n\n\"Chris Breaux? Calls me a 'Sand N*gger.' No way he'd ever let me get in his car,\" Monty said bitterly.\n\n\"And this Candy just... Monty, that don't sound like no friend to me,\" Becky said. \"A friend wouldn't just up and leave you like that. A friend wouldn't ever go out with some guy says such hateful stuff about a friend.\"\n\n\"Know what? You're right,\" Monty agreed, fresh tears coming to her eyes.\n\nBecky sighed with real relief when she saw the windmill in front of the white and light blue house; this landmark let her know this was her street. She put on her blinker and made the turn. The driver behind her jammed his hand on his horn and did not let up until he was a block further up Charles Lane.\n\n\"What. Ever, jerk face,\" Becky said to the irate driver.\n\n\"I will be so glad to get out of these wet things,\" Becky said to Monty as she pulled underneath the carport in front of Monty's house. \"You need take a hot shower so you don't catch your death of cold.\"\n\n\"Thanks so much, Miss Becky,\" Monty said, opening the door of the truck.\n\n\"Of course. We're neighbors,\" Becky smiled. \"And, don't call me 'Miss Becky,' that makes me sound so old.\"\n\nMonty didn't say anything, just closed the door. Becky backed out into the downpour and turned back up Tallow, then turned left and into her own driveway. The garage door went up and she pulled her truck into the garage.\n\n\"Whew! Thank you God!\" Becky enthused, thoroughly relieved to be home.\n\nShe unlocked the door and let herself into the warm home. She flicked the kitchen light on and slipped her feet out of her dripping wet tennis shoes. She pulled the sodden socks from her feet and closed the garage door.\n\nBarefoot now, she walked through to the living room. The small lamp was on, casting a soft, welcoming glow about the comfortable room.\n\nAs she passed the hall bathroom, Becky reached in and flicked the heater on. She then shut the door to keep the warmth in the room.\n\nIn her bedroom, Becky selected her short flannel top and her flannel shorts. She slipped her feet into her fuzzy Panda Bear slippers and returned to the hall bathroom.\n\nBecky still adored her Panda Bear slippers; her mother's father had given her a pair of the black and white slippers when she had been a little girl of four years old. Sixteen years later, Becky continued to wear Panda Bear slippers, even though Pop-pop had been gone for ten years now.\n\nWhen she reached the bathroom door, the doorbell gave a hearty chime. A split second later, there was a rapping on her front door.\n\nBecky cautiously made her way to the front door; she was not expecting company. Todd had called her the other day and had attempted to keep his tone cheerful, but Becky could tell that Todd was still upset from the perceived slight; she had not told him she loved him when he had told her he loved her. Upon reflection, Becky was still convinced she'd been right; she wasn't sure of her feeling for Todd Moore, and saw no benefit in saying something she might not feel.\n\nBecky peered through the side peephole Paul Robichaux had installed for her. There was a peephole installed in the door itself, but Becky would have had to pull a stool in front of the door to use the standard peephole. Paul installed one in the door jamb itself, at an angle that looked out onto the small front porch.\n\n\"My wife's four foot five,\" Paul smiled when Becky had squealed in delight.\n\n\"Ask him how tall his other wife is,\" one of Paul's crew called out.\n\n\"I pay you run your mouth?\" Paul called back. \"Huh? Or I pay you keep your melon head down and do your work?\"\n\n\"Melon head,\" another crew member laughed.\n\n\"You too, Flap Ears,\" Paul said as Becky looked through the peephole, marveling at the view.\n\n\"Flap ears,\" 'Melon Head' laughed.\n\nNow Becky peered and saw Monty standing at the door, looking absolutely miserable. Becky unlocked the door and swung it open.\n\n\"Forgot my Aunt Margaret needed my keys; she left hers at work, but since I was supposed go to Candy's it wasn't no big deal,\" Monty sobbed out. \"And after work she and Miss Louise was going go to the casino so ain't no telling when she'll be back.\"\n\n\"Oh you poor girl! Come on, get in here,\" Becky urged, taking Monty's hand.\n\nFrom across the street, Becky could tell that the dark skinned girl was a beauty, with her waist length brown and blonde hair. In the truck, Becky had been too focused on driving safely, despite the horse's ass behind her to pay any attention to Montana's looks.\n\nHere, face to face in her living room, Becky could see that Montana Gardner was stunning. Her brown hair had streaks of blonde woven in. Her head was square with large golden eyes underneath a heavy brow. Her nose was slender, leading to full lips. Her jaw and chin were square, strong.\n\nThe sweater and white blouse were drenched, so stuck to Monty's figure. Becky saw a white lace bra and Monty's caramel colored skin through the translucent blouse. The skirt also clung to Monty, showing well-formed hips and muscular legs.\n\n\"Come on; I'm already getting the bathroom warm,\" Becky insisted, pulling Monty to the hall bathroom.\n\n\"Whew!\" Monty sighed as the warm air of the bathroom wrapped around her in a cocoon of warmth.\n\n\"You can use the shower, or if you want, there's the bath,\" Becky said, putting her flannel sleepwear onto the counter. \"You want to do that? Soak in a nice hot bath?\"\n\n\"Can I?\" Monty sobbed.\n\n\"Oh, absolutely!\" Becky enthused, hugging the crying girl. \"Day like you've had? Bet a nice bath's just what you need.\"\n\n\"Thank you, Miss Becky,\" Monty cried, clinging onto Becky.\n\nAunt Margaret wasn't hostile to Montana. But, because she resented Monty, blamed the girl for their numerous moves, Aunt Margaret was not affectionate. She didn't hug or kiss the girl.\n\n\"And, come on. I'll put these into the wash, I'll get you something wear while these get cleaned,\" Becky said and began to unbutton Monty's sweater.\n\nMonty did not object to being undressed by another woman. She docilely allowed Becky to unbutton sweater and blouse, allowed Becky to unzip her skirt.\n\nBecky had that odd, slightly uncomfortable feeling in her belly. As her fingers worked the buttons through the wet material, she felt that strange sensation, the same sensation she had whenever she and Becky Brown would kiss. She had that same feeling she'd had when Coach Smith would touch her thighs, her waist.\n\nBecky showed Monty how to adjust the temperature of the water, showed Monty where the controls for the whirlpool jets were located and waited. Monty shrugged out of her bra, exposing her 30C cone shaped breasts. Becky's eyes focused on Monty's dark brown half-dollar sized areoles, crinkled from wearing a cold, wet bra, focused on Monty's hard, fat nipples. That feeling of being off-balance was strong in Becky's guts as she stared at Monty's flesh.\n\nMonty's navel was a tiny dent in her flat belly. Becky smiled, thinking of her own nub of a belly button; she had an 'outtie' belly button.\n\nMonty's white cotton panties were also translucent and Becky could see the dark triangle of fur capping Monty's prominent pubic mound. Monty wiggled out of her wet panties, then turned to adjust the water temperature. She held her hand underneath the running water and Becky looked at Monty's sweetly rounded buttocks.\n\n\"How tall are you?\" Becky asked, turning to leave the bathroom.\n\n\"Four eleven. Tell people I'm five even, but I'm really not,\" Monty admitted, sinking into the nearly scalding water.",
        "\"Oh, hey! You want a bath bomb?\" Becky suddenly asked. \"My mom? Got me this big old thing of them. Got cucumber melon, um, jasmine-vanilla, eucalyptus, um, lavender, strawberry; what you want?\"\n\n\"Lavender? What's that smell like?\" Monty asked, sinking down until just her head was above the water.\n\nBecky dropped the lavender bath bomb into the water and before she left with Monty's clothes in hand, the bathroom began to fill with the sweet scent. Monty plunged her head under the water and stayed as long as she could hold her breath.\n\nIn her garage, Becky made sure the washing machine was set to 'cold water' and started a small load. She then scampered out of the cold garage; she was still in her own wet clothes.\n\nIn the guest bedroom, Becky hurried to the bathroom. She turned on the heater and closed the door. She went to her bedroom and found a long sleeved U.L.D. tee shirt and a pair of fuzzy socks. She smiled; she could faintly hear the whirlpool jets through the wall that separated her bedroom from the bathroom.\n\n\"Yeah?\" Monty called out when Becky knocked on the door.\n\n\"Okay, got you this and some fuzzy socks,\" Becky smiled, grabbing her own sleep wear from the counter.\n\n\"Thanks, Miss Becky,\" Monty said.\n\nWith a nod, Becky left the bathroom. In the guest bathroom, Becky took a quick shower. She consoled herself that she would take a nice long bath tomorrow. Tomorrow, she would try out the waterproof vibrator she'd bought recently.\n\nOne of the former tenants, Jonathon Savoie had left behind a stack of his Parasols magazines when he and Richard and Richard's wife had abruptly moved out of the rental home. Becky had read through the magazines and had sent in her own subscription for the adult magazine as well. Several companies advertised in the back pages of the magazine; Becky had ordered the vibrator from one of those companies. Just as promised, shipping was fast and the instrument of pleasure had arrived in a discrete package.\n\n\"C batteries? I got C cell batteries?\" Becky asked herself as she toweled dry.\n\nBecky wrapped a towel, turban style around her waist length hair. She then grabbed her cell phone and sent a text message to Layla Greene. Becky and Layla had formed a fast friendship over the Thanksgiving break and solidified that friendship over the Christmas Holiday. Now the two girls texted or talked at least twice a week.\n\n\"Need recipe for quick and easy soup. It is cold and rainy here,\" Becky sent.\n\n\"Peanut chicken Thai,\" Layla answered, with a link for the recipe.\n\n\"Isle of view,\" Becky responded.\n\n\"Isle of view too,\" Layla responded, including a kissy face emoji.\n\n\"Yeah?\" Monty called out when Becky knocked.\n\n\"You allergic to peanuts?\" Becky asked, poking her head into the steamy bathroom.\n\n\"No; eat peanut butter and jelly all the time,\" Monty said. \"But, Miss Becky, you don't need...\"\n\n\"Monty, you don't know when your aunt's coming home. Really think I'm going eat and not feed you?\" Becky shushed the girl's protests. \"Oh! You want some tea? My sister in law, well, she's not really my sister in law, but my brother's girlfriend, I swear, she is the coolest, anyway, she sent me this stuff make this drink called a warm blackberry cobbler, oh! It uh, it's got alcohol in it; that all right?\"\n\n\"Black...that sounds yummy,\" Monty agreed, sitting up in the water.\n\n\"I hate you; wish I had cute little titties like those, instead of these big old monsters,\" Becky thought as she closed the bathroom door.\n\nIn the kitchen, Becky turned on her Keurig coffee maker. Then she got out the box that Layla had shipped to her.\n\n'Had to come up with a specialty drink for class,' Layla had written. 'Came up with a \"Warm Blackberry cobbler,\" One mug of hot tea, one jibber of blackberry schnapps, one jigger of blackberry vodka and a spritz of lemon juice. Enjoy!'\n\nIn the box was a box of Lipton tea bags, one fifth of blackberry schnapps, and one fifth of Nulough's blackberry vodka, one small glass with various markings indicating one jigger, two jiggers, and two sixteen ounce mugs. And on each mug was a heart with the words 'Isle Of View' printed inside the heart.\n\n\"Isle of view too,\" Becky smiled, seeing the words on the large mug.\n\nWhile the tea bags steeped in the large mugs, Becky read the recipe for Peanut Chicken Thai soup. She pulled two leg quarters from the freezer and put them into the microwave to defrost.\n\n\"Yeah, yeah, I know, microwaves rob food of their soul,\" Becky murmured as she put a large pot onto her stove. \"Whatever, Layla; they defrost quick and easy, okay?\"\n\nBecause Paul Robichaux seemed to understand the needs of a person of shorter stature, the stove was at the proper height for Becky. She again checked the recipe and located the other ingredients.\n\nShe measured out the jiggers of the schnapps then the jiggers of the vodka, nodding at the aroma that wafted from the mugs. A squirt of lemon juice from the plastic lemon from her refrigerator and the two drinks were ready. Layla would have been livid; the recipe called for lemon juice, not plastic lemon juice.\n\n\"Thank you so much, Miss Becky,\" Monty enthused, stepping into the kitchen. \"That bath's the best.\"\n\n\"Will you quit calling me 'Miss Becky?'?\" Becky said, smiling. \"I'm only twenty, for God's sake!\"\n\nShe indicated the kitchen table and they sat, sipping the quite hot tea.\n\n\"Oh, wow! Layla, this is good,\" Becky said aloud.\n\n\"Isle of, where's that?\" Monty asked, reading her mug.\n\n\"Say it out loud,\" Becky smiled.\n\n\"Isle of view,\" Monty said.\n\n\"Oh! Well, Isle of view too,\" Becky smiled.\n\n\"Isle of, oh! I love you! That's so cute,\" Monty enthused.\n\n\"My sister in law and me? We say that to each other all the time,\" Becky admitted.\n\nShe took another sip of the beverage, then got up to turn the microwave off. She could smell the chicken beginning to cook in the appliance.\n\n\"Okay, and...four cups of water, bouillon cubes,\" Becky read off of her phone.\n\n\"That smells good,\" Monty said, looking into the pot as Becky stirred in the ingredients.\n\nBecky smiled and put a casual arm around Monty's slim waist. She then put the wooden spoon into Monty's hand and had the girl stir the soup while she located the next item on the list. As she added the basil, Becky again put her arm around Monty's waist.\n\nTo Monty, the contact may have seemed casual. To Becky, however, the contact was creating that odd, slightly off-center feeling in Becky's stomach. She wished she'd put on a pair of panties; she could feel her pussy moistening.\n\n\"Half teaspoon of red pepper flakes,\" Becky read a few minutes later and reduced the heat. \"Come on; while the corn starch thickens. You got a hair brush?\"\n\n\"Yeah,\" Monty agreed and grabbed her wet purse.\n\nBecky pulled Monty into her bedroom and pushed the girl onto the bed. She plugged in her hair dryer, then scrambled onto the bed behind Monty.\n\nIf Monty thought it odd to have another woman's legs loosely wrapped around her hips, she made no indication. She allowed Becky to brush out her long hair while the hand held appliance whirred and whined.\n\nBecky had that feeling in the pit of her stomach again as she worked the brush through Monty's thick hair. She wondered if Monty noticed how much her hands were shaking.\n\nBecky and Monty switched places and Monty used Becky's brush to brush out Becky's chestnut brown hair. Becky wondered if Monty could see the large wet spot on the flannel shorts. Looking into the mirror over her dresser, watching as Monty carefully methodically dried her hair, Becky wanted to twist around, wanted to press her lips against Monty's lips.\n\nLooking again into the mirror, Becky could see the faint shadow of the wet material. She cursed herself; she should have put on a pair of panties before pulling on the shorts.\n\n\"There. All dry,\" Monty said, shutting the hair dryer off.\n\nAnd when the girl got out of the bed, Becky could see a dark circle on the back of Monty's long tee shirt. She bit back the squeal; Monty's own pussy was wet. Obviously, Monty had found the intimate gesture just as arousing as Becky had.\n\nIn the kitchen again, Becky got down two large soup bowls. She poured the soup over the rice noodles and they sat to eat.\n\n\"Oh, man! This is good; you said this was peanut chicken soup?\" Monty said.\n\n\"Yeah; like I said, Layla's this cook,\" Becky agreed.\n\n\"And tell your mom I want couple them bath bombs,\" Monty said. \"My aunt? Don't never get none that kind of stuff. And usually? My skin's so dry.\"\n\n\"Yeah; my skin? Would dry up in a minute, I swear,\" Becky agreed. \"Why I buy lotion by the bucket.\"\n\n\"'Well, if you didn't need shoes; I swear just bought them shoes, how you outgrow them so fast?'\" Monty said, adopting a harsh voice.\n\nBecky reached out a hand and gently touched Monty's hand. The girl glanced up and Becky could see the pain in Monty's golden brown eyes.\n\n\"Be right back,\" Becky said, getting up from the table.\n\nMonty continued to slurp the spicy soup. She heard a door close. A minute later, Becky sat down again. The two women finished their meal.\n\n\"Okay, now that we're all warmed up,\" Becky said, pulling Monty to her bedroom again.\n\nBecky had plugged in a small electric heater and closed the door, trapping the warm air inside. On her bed, Becky had unfurled a large beach towel. A large bottle of lotion lay next to the towel.\n\n\"Found my lavender one,\" Becky smiled and urged Monty onto the king sized bed.\n\n\"Oh, Miss...Becky,\" Monty protested lightly as Becky made her lay on her belly.\n\nBecky pulled Monty's socks from her feet, then squirted a bit of the lotion into the palm of her hand.\n\n\"Oh,\" Monty moaned softly as Becky began to rub the lotion into the sole of Monty's left foot.\n\n\"Oh,\" she barely moaned as her right foot also received a gentle massage.\n\nShe just murmured as Becky's fingers kneading her calves, the backs of her knees, the lower half of her thighs.\n\nBecky once again felt that off-center feeling in the pit of her stomach. The feeling had lessened as they'd sat to eat. But, now, in the dimly lighted bedroom, that feeling had returned and was strengthening.\n\nBecky edged the hem of Monty's tee shirt up to just underneath Monty's deliciously rounded buttocks. She continued to work the lotion into the girl's light brown flesh. Bending and peering, she could see Monty's pinkish purplish pussy lips, fat and wet, peeking out between the dark brown curls of her pussy.\n\nThat odd off-balance feeling was so strong, Becky was sure she was swaying, in danger of toppling over. She could hear her heart beating, the pulse pounding in her ears as she touched another girl's soft flesh. Becky swallowed; her throat was tight and dry.\n\n\"This all right?\" Becky asked quietly, tugging gently on the hem of the tee shirt.\n\n\"Hmm? Oh. Oh yeah,\" Monty gave her consent and Becky eased the hem up and over Monty's round buttocks.\n\nBecky leaned forward; she could smell an earthy, musky aroma over the lavender scented lotion. She kneaded the lotion into Monty's sweet buttocks, firmly squeezing the hillocks of flesh. Easing the hem further up, she brought her hands to the small of Monty's back and pressed firmly.\n\n\"Ugh!\" Monty groaned.\n\nBecky applied the lotion into Monty's flesh, edging the tee shirt higher and higher. She moved Monty's thick hair aside and ran her hands lightly up and down Monty's ribcage. She could feel the swells of Monty's cone shaped breasts, mashed against the towel, the soft comforter and pillow top mattress.\n\n\"Can we take this off?\" Becky asked, forcing herself to speak in a soft whisper.\n\n\"Uh. Huh,\" Monty sluggishly agreed.\n\nBecky worked the lotion into Monty's shoulders, up and down Monty's arms. She then bade Monty roll onto her back.\n\nBecky again started at Monty's feet. Lifting Monty's right leg, Becky could see Monty's pussy lips, slick and puffy with excitement. She could see that Monty had a fat clitoris that peeked out from the folds of Monty's pussy.\n\nBecky could also feel how wet her own pussy was. When she had sat back, to give Monty room to roll over, her hairless crotch had come in contact with her flannel shorts and they were soaked with her juices. Becky's vision was so blurred that her glasses were useless.\n\nBecky gently massaged Monty's flesh, carefully skipping Monty's pubic mound and breasts. She smirked; Monty twisted slightly, trying to force her vulva and then her breasts into Becky's hands.\n\nFinally, Becky gently traced her fingers around Monty's slim throat. She then leaned forward and gently touched Monty's full lips with her own.\n\nEyes still closed, Monty twisted her head slightly and pressed her lips against Becky's lips. Monty opened her mouth and lightly licked Becky's lips. Becky opened her mouth and touched her tongue to Monty's soft tongue.\n\nBecky stretched to lie next to Monty; her equilibrium was completely gone by now. She again touched Monty's lips with her own, her greasy hands gently touching Monty's beautiful face.\n\nThe girls kissed for a few minutes. Becky then pulled her mouth from Monty's mouth, bent and took Monty's left nipple into her mouth.\n\n\"Ugh! Oh,\" Monty let out a grunt, then whoosh of air.\n\nBecky squeezed Monty's right breast in her hands while her mouth licked and suckled Monty's left breast. She then leaned over and began to tongue Monty's right nipple while her hands toyed with Monty's left breast.\n\n\"Ugh, oh God!\" Monty cried out.\n\nBecky continued to suckle Monty's breast while Monty shuddered in orgasm. When Monty ceased shuddering, Becky again sought out Monty's lips. They kissed, tongues mashing against one another. Then Becky again began to suckle on Monty's hard nipples.\n\nAfter she brought Monty to another orgasm, Becky rolled onto Monty's belly and wiggled down Monty's torso. She lightly kissed Monty's heaving belly, then blew warm breath over Monty's dark brown curls.\n\n\"Ugh, oh God, oh Miss...oh Becky,\" Monty keened.\n\nBecky had never performed oral sex on another woman. Most of her boyfriends had performed the act on her, though. She knew what she liked and what she didn't like.\n\nBecky liked when Todd payed attention to her pussy lips. She liked when Todd tried to force his tongue into her pussy. She had liked when Billy used his thumbs to open her up and licked up and down her pussy lips. She liked when her lovers used their fingers to plumb her pussy, her anus.\n\nLicking up and down Monty's musky pussy, savoring the flavor of the beautiful girl's sweet pussy, Becky brought a finger to Monty's tightly clenched anus.\n\n\"Ugh, oh God yes,\" Monty hissed as Becky drove the tip of her finger into Monty's ass.\n\n\"Aiee! Augh, oh my God!\" Monty screamed when Becky thrust two fingers into her pussy and clamped her lips around Monty's clitoris.\n\nBecky felt her face suddenly become drenched. She licked and sucked and fingered Monty's pussy while worming a second finger into the girl's tight ass.\n\n\"Aiee!\" Monty screamed out again when Becky gave Monty's clitoris a forceful suck.\n\nBecky sat back onto her heels and ran her tongue over her lips, trying to get all of Monty's nectar from her face. She sucked her fingers clean of Monty's essences. Becky smiled; even without her glasses, she could see that Monty was a limp rag right now, slumped on the bed.\n\nAgain, Becky's strength left her, her sense of balance abandoned her and Becky stretched out next to Monty. She lay an arm across Monty's belly.\n\n\"I never, that, that was the first time I ever done that,\" Becky admitted to her guest.\n\n\"Me neither, I've never, I mean, Candy and me? We kissed and she played with my titties, but...\" Monty whispered hoarsely.\n\nBecky heard her cell phone ring. It was Todd's ring tone; Clyde Meadows had been a bit of a 'metal head,' especially 80s metal, and Becky had grown up listening to that music. She had designated Blue Oyster Cult's 'Burning For You' as Todd Moore's ring tone.\n\n\"My boyfriend,\" Becky groaned and dug her phone out of her purse.\n\n\"Hey,\" she answered, hoping Todd couldn't hear the nervousness in her voice.\n\n\"Hey, man, it is some ugly out there,\" Todd said. \"I was kind of hoping we uh could maybe do something tonight, but it just does not look like it's ever going let up.\"\n\n\"No, sure don't,\" Becky agreed and almost giggled as Monty's hand started to creep up underneath her fleece top.\n\nCuddled as they were, two girls talking, that odd, off-center feeling had lessened somewhat. Now, as Monty's soft hand crept up her flesh, Monty's dark hand against her pale flesh, that odd sensation was again building inside of Becky's belly.\n\n\"I, weather says supposed let up 'bout ten,\" Todd said.\n\n\"Todd, I'm already,\" Becky said, almost yelping when Monty's fingers found her hard nipple. \"I'm already in my jammies. First thing I did when I finally got home was jump in the shower, then get ready for bed.\n\nBecky pulled her fleece top up to just under her throat. She wished she had not put her glasses onto the nightstand; she wanted to see Monty's hands on her breasts. The blood was beginning to pound in her ears, a soft, steady pulse.\n\n\"You okay?\" Todd asked as Becky bit back a groan.\n\nMonty sucked one, then the other nipple into her mouth. Becky let out a soft grunt when Monty lightly bit down on Becky's nipple.\n\n\"Yeah. Like I said, I'm in my jammies, just lying in bed,\" Becky said and combed her fingers through Monty's hair.\n\n\"But, supposed be nice tomorrow; we do something?\" Todd asked hopefully.\n\n\"Like what?\" Becky asked and lifted her hips up to allow Monty to slide her shorts down and off her legs.\n\n\"Oh! You shave it,\" Monty purred, running her fingers over Becky's smooth pussy.\n\n\"Like uh, let's see, I got, damn, I got twelve bucks,\" Todd said dejectedly. \"I mean, bowling's at least...\"\n\nBecky bit back a squeal as Monty's soft tongue gently trailed along her swollen pussy lips. That delicious, wonderful off-balance sensation was pulsing and throbbing in her belly. The blood was roaring in her ears. When Monty thrust two fingers into her pussy, Becky could take no more.\n\n\"Todd, listen, I got to go; I'll call you tomorrow,\" Becky wheezed and tapped the screen of her phone.\n\nTodd's ring tone started again. Becky ignored it and pulled Monty around. She urged Monty to straddle her face and Monty pressed her furry crotch to Becky's mouth. Becky screamed into Monty's pussy as she felt Monty's fingers at her own pussy, felt Monty's tongue again trailing along her swollen pussy lips.\n\nThe two girls licked and sucked and fingered each other's pussies to orgasm. Again and again, 'Burning For You' chimed out.\n\n\"Mmph!\" Monty squealed when Becky tongue swiped across Monty's anus.\n\nBecky lapped at the spicy orifice, then wormed two fingers into Monty's rectum. She traced her tongue up and down Monty's heavy pussy lips while her fingers plumbed Monty's ass.\n\n\"Aiee, augh, oh God!\" Monty screamed out in orgasm when Becky jammed a third finger into her ass while sucking forcefully on Monty's fat clitoris.\n\nAfter Monty ceased shaking and grunting, Becky gently pulled her fingers from Monty's ass. She nudged the girl away and Monty rolled to her right side.\n\nThey lay, Monty on her right side, head toward the foot of the bed, Becky on her back, head toward the head of the bed. Slowly, Monty wiggled around and lay her head on Becky's shoulder.\n\n\"I, that was, oh God,\" Monty whispered.\n\n\"Yeah, yeah it was,\" Becky agreed.\n\nMonty picked her head up and the two girls kissed. Soft lips pressed against soft lips. Becky wound her right arm around Monty's slender frame and they lay quietly for a moment.\n\nBecky wiggled off of the bed and pulled the comforter back. She and Monty wiggled under comforter, blanket and flat sheet. The two nude girls cuddled together, warm underneath the comforter.\n\n\"I uh, I was going tell Candy, but guess I can tell you,\" Monty said a few minutes later.",
        "Becky's phone chimed, alerting her that she had a message or messages she'd not listened to. Becky thought very seriously of changing Todd's ringtone from Blue Oyster Cult's 'Burning For you' to Alice Cooper's 'Poison.' Becky ignored the chime and pulled her glasses on her face. She then rolled to peer into Monty's golden brown eyes.\n\n\"I, on Valentine's Day? I uh, my aunt and me, we belong to this church, the church of the risen and living Messiah?\" Monty whispered.\n\n\"Hmm? Oh, think I heard 'bout them; they got this show on Channel twelve, I think,\" Becky agreed.\n\n\"Yeah, I mean, I don't believe half of what they saying,\" Monty agreed. \"Anyway, Valentine's Day, Burton? He's Miss Louise's little brother, swear, thought she was his momma, way she acts; Miss Louise goes to our church and she and my aunt, they set up this date.\"\n\n\"Hmm?\" Becky asked when Monty lapsed into silence.\n\n\"Anyway, we went out, we went to Backyard barbecue; I love their apple slaw; stuff is sooo good,\" Monty said.\n\n\"Yeah it is good,\" Becky agreed, thinking of taking Todd to Backyard BBQ.\n\nThe phone chimed and Becky sighed in impatience. Maybe she wouldn't take Todd to Backyard BBQ. If she had to be honest with herself, Becky did love Todd Moore. And she was still angry with him. She was angry with Todd for abandoning her, she was angry with him for going out with Luanne Holmes, hated him for now being so damned clingy and needy and possessive.\n\n\"And he tells me he loves me,\" Monty said.\n\n\"First date?\" Becky asked Monty.\n\n\"And I'm like, 'shit! What am I supposed to say?'\" Monty said. \"So, I say it too.\"\n\n\"Okay,\" Becky said and was about to say, she'd said some stupid things in her own life.\n\n\"And we're in the back seat of his car; it's really his mom's car; she goes to our church too,\" Monty continued.\n\nBecky was facing away from the light, and noticed there was a smudge on her glasses. But even in the semi-darkness, with a smudge on her glasses, she could see fear, confusion in Monty's beautiful brown eyes.\n\n\"I was going tell Candy, shit, it hurt! Hurt a lot!\" Monty admitted.\n\n\"Yeah, my first time did too,\" Becky said softly, running her hand up and down Monty's back. \"It gets better, I promise.\"\n\n\"And my period's three days late,\" Monty confessed.\n\n\"What's Burton say about it?\" Becky asked.\n\n\"Him?\" Monty gave a disgusted snort. \"Won't even look at me.\"\n\n\"So, you think you might be...?\" Becky asked and Monty burst into tears.\n\nBecky held Monty tightly as the girl sobbed. Becky gently kissed the girl's cheeks, trying to kiss the tears away. Monty clung to Becky as her tears continued to stream from her eyes.\n\nWhen Monty's tears did subside, Becky wiggled out of the bed and wet a washcloth in the small half-bath's sink. She'd had a choice; more closet space, or more bathroom space. Becky had told Paul to give her more closet space. So, he'd created a half-bath, rather than a three quarter bath for the master bedroom.\n\n\"Here, here,\" Becky soothed, gently wiping Monty's face.\n\nThey dressed in their sleepwear again. Monty snuggled down in the bed and smiled; she could see a smudge on Becky's glasses.\n\nThe phone chimed again and Becky sighed. She grabbed it off the nightstand and listened to Todd's two messages. Both messages were petulant demands to know what Becky was doing, why she so suddenly ended their conversation.\n\n\"Know the difference between men and little boys?\" Becky asked Monty.\n\n\"No. What?\" Monty asked.\n\n\"Shit. I was hoping you knew,\" Becky said.\n\nDuring the night, Becky left the light of the half-bath on, with the door slightly ajar. But Monty slept the entire night through. Becky roused at five thirty in the morning and smiled at the peaceful face of her guest.\n\nBecky was now a yoga devotee. She did one hour of her poses, concentrating on her breathing, concentrating on her spiritual development.\n\nBut thoughts of Todd, his immaturity, his cloying demands kept crowding into Becky's consciousness. Becky sighed and held the lotus position again, again trying to clear her mind.\n\n\"Do I love him? Yes,\" Becky thought.\n\nA moment later, the question popped into her mind, \"Why?\"\n\n\"Hell if I know,\" Becky said aloud.\n\n'Breakfast?' Becky sent to Todd's cell phone.\n\nShe put a shower cap on her head, to keep her hair dry and took a quick shower. The shower was more to shave her legs and underarms and her pussy than to wash any sweat from her body.\n\n'Where?' Todd had responded by the time Becky finished her shower.\n\nBecky texted 'Home' to his cell phone and told him she would pick him up in front of Sharp Shire dorm in fifteen minutes. Monty roused as Becky was dressing, even though Becky was trying to be quiet.\n\n\"Going get my boyfriend; breakfast,\" Becky said quietly.\n\n\"Oh. Okay, I need leave?\" Monty asked, sitting up.\n\n\"You don't want breakfast?\" Becky asked.\n\n\"Well, yeah, I just didn't know if...\" Monty said.\n\nBecky silenced Monty's words with a soft kiss. She ran her fingers through Monty's tousled mane of hair and gave her a second kiss.\n\n\"Clothes are right there; fresh out the dryer,\" Becky said, indicating Monty's freshly laundered and folded school uniform at the foot of the bed. \"Back in a few.\"\n\nShe felt a little naughty; she was wearing one of Daryn's old football jerseys, white knee socks that matched the white jersey and white canvas tennis shoes. She was not wearing a bra or any panties underneath the jersey.\n\n*Daryn had not given the jersey to Becky Meadows; Becky had bid on the jersey at a fund raising event and won the jersey. Becky's bid of $125 made Daryn's jersey the second highest bid received that day.)\n\nThe garage was still cold; her weather app said it was forty one degrees outside. But the sun was not fully up; it was certainly chilly.\n\nThere were many areas that had not fully drained from yesterday's deluge. Becky drove slowly, carefully.\n\n\"Here,\" Becky sent a text to Todd's cell phone when she pulled up to Sharp Shire and did not see Todd waiting outside.\n\nA few minutes later, just when Becky was about to text Todd again, he came stomping out of the dorm. Becky screwed up her face; he looked angry.\n\n\"Don't really need attitude,\" Becky said to herself.\n\n\"So, where were you last night?\" Todd immediately demanded to know when he got into her truck.\n\n\"Home. Told you. Got home, took a shower, put on my jammies and got in bed,\" Becky said.\n\n\"And couldn't answer your phone?\" Todd demanded.\n\nShe looked at Todd. Todd glared at her. She pushed her glasses up her button nose and let out a sigh.\n\n\"I'm making blueberry waffles; Layla sent me a recipe for bacon syrup, and then I'm going get back in bed,\" Becky said. \"Now. You want do that? Or are you going have this shitty attitude? You're going have this shitty attitude? Then you can just get out here.\"\n\n\"I just, I just, I mean, God damn,\" Todd yelled.\n\n\"Get out,\" Becky sighed.\n\n\"I love you, I told you I love you, but you just seem have this giant stick up your butt about shit happened last year,\" Todd said, tears of rage coming to his eyes.\n\n\"And that gives you the right yell at me?\" Becky asked, not moving to put the truck into 'Reverse.'\n\n\"I don't know what else to do,\" Todd said.\n\n\"How 'bout talk to me? How 'bout treat me like I'm my own person? With rights to privacy, rights to be alone and don't need to get your permission?\" Becky asked. \"Todd, I'm trying, I'm trying real hard figure out if I want you to be a part of my life or not. And right now you ain't making any points in your favor, hear?\"\n\n\"What can I do?\" Todd asked a moment later.\n\n\"Wasn't listening? Just told you,\" Becky said.\n\n\"I, I want be a part of your life; I want you as a big part of my life,\" Todd pleaded.\n\nEven though she wasn't fully believing Todd's words, Becky was hungry, so put the truck into reverse. She was careful; there were some students bustling around.\n\nOn Tallow Road, Becky did look toward Monty's home. There was no car underneath the carport; apparently Monty's Aunt Margaret wasn't home yet.\n\nBecky smelled coffee when she entered the kitchen. Monty smiled nervously as Todd followed Becky into the kitchen.\n\n\"Todd? This is Monty, my girlfriend,\" Becky said. \"Montana? This is Todd Moore. We went to high school together in Texas.\"\n\n\"I uh, hi,\" Todd said, caught off guard.\n\nOn the trip from dormitory to house, Becky had said nothing of having company. Becky had said something about blueberry waffles and bacon syrup, and getting back into bed. Todd was agreeable to waffles and syrup and was very agreeable to getting back into bed. He wasn't sure how this guest would affect those plans, though.\n\n\"Hi; Becky, you didn't tell me he was so cute!\" Monty loudly whispered to Becky.\n\n\"What? I'm going go out with ugly guys?\" Becky asked, smiling. \"Todd, you want coffee? Or, you want a warm blackberry cobbler?\"\n\n\"Blackberry cobbler? Thought we was having waffles?\" Todd said, trying to pull his eyes from Monty's chest.\n\nMonty had packed a short tee shirt and shorts for her visit to Candy's house. She now wore tee shirt and shorts, without a bra and her dark areolae were very visible through the tight tee shirt.\n\n\"It's a drink; got hot tea in it,\" Becky said, already beginning to fry several strips of bacon.\n\n\"Coffee,\" Todd decided, watching Becky's cute backside wiggle as she worked.\n\n\"Machine's right there; pods are in that bowl,\" Becky nodded wither head.\n\n\"What part of Texas; I lived in Lowridge way back,\" Monty said.\n\n\"Sweet Oak; mm, probably 'bout an hour away from Lowridge, huh Todd?\" Becky said as she put some butter into the microwave oven.\n\nBecky put the cooked bacon onto a wad of paper towels, then reduced the heat on the frying pan. She measured out the maple syrup and poured that into the skillet.\n\nTodd was given the first two waffles, along with some bacon. Becky put the warm bacon syrup into a measuring cup and put that onto the table. Monty was given the next two waffles and helped herself to a few strips of bacon.\n\n\"This is good,\" Todd mumbled.\n\n\"Mm hmm,\" Monty agreed. \"And, thank God you don't use that nasty turkey bacon; that's all my Aunt Margaret ever gets. Stuff is so nasty.\"\n\nWhile they ate, Becky saw flashes, glimpses of the Todd Moore she'd fallen in love with. She saw that outsider that had been looking in, just like she had been, an outsider looking in.\n\nTodd finished his breakfast and prepared himself a second cup of coffee. Monty took his empty plate and her own plate to the dishwasher. She also started to clean the mixing bowl.\n\n\"Monty, leave that,\" Becky ordered as she finished her own breakfast.\n\nBecky carried her plate to the dishwasher and put her plate into the appliance. She then put an arm around Monty's waist. The younger girl turned and looked at Becky.\n\nTodd's cock, which had been nearly fully engorged, leapt to full hardness as Monty and Becky kissed. Their kiss had started off as just a lip-to-lip kiss, which was hot enough, but then Becky opened her mouth and the other girl pushed her tongue into Becky's mouth.\n\nBecky's hand dropped from Monty's waist and fondled the girl's buttocks. Todd could see Becky's pale hand against Monty's caramel skin. He could see Monty's caramel hand against Becky's white jersey as Monty gently tugged at Becky's hard nipples.\n\n\"Yawn. I'm going back to bed,\" Becky announced, pulling away from Monty's kiss.\n\n\"Yawn. Yeah, me too,\" Monty agreed. \"Todd?\"\n\nTodd didn't say anything. His eyes were wide as Becky slipped out of her jersey, displaying her nude body. He woodenly got to his feet and followed Becky's sweet bubble butt as she marched down the hall.\n\nMonty shrugged out of her tight tee shirt as she followed Todd and Becky. When she got to the bedroom, Becky and Todd were kissing while Todd struggled to get out of his clothes.\n\n\"Thank you for making the bed,\" Becky smiled at Monty, holding out her arms.\n\n\"Welcome,\" Monty said, embracing Becky.\n\nTodd was now nude and watched as the two women kissed. His cock jerked and throbbed and pulsed as he watched the passionate kiss.\n\nBecky tugged Monty's shorts down and Todd groaned as he saw the girl's nicely rounded buttocks.\n\nWhen Becky eased Monty onto the bed, Todd saw the girl's cone shaped tits, her large areolae and hard nipples, her triangle of dark fur.\n\nBecky urged Monty to lie in the center of the bed. She then took her glasses off, put them onto the nightstand, then knelt between Monty's spread legs.\n\n\"Ooh!\" both girls moaned as Becky licked up and down Monty's wet slit.\n\n\"Todd, legs broke?\" Becky asked, pointing toward her buttocks. \"Come on; I need you in me. Now.\"\n\nTodd scrambled onto the bed and knelt behind Becky. He could see that her pussy was wet, ready for him.\n\n\"Ugh!\" Todd and Becky cried out as Todd slid his erection into Becky's pussy.\n\n\"Ugh, oh God aw no,\" Todd whined a moment later and spurted into Becky's snug pussy.\n\n\"Mmph!\" Monty squealed in orgasm as Becky sucked and fingered Monty's pussy.\n\nTodd pulled his soft cock from Becky's pussy and watched as Becky continued to pleasure Monty. His cock was quick to rise, watching Becky's tongue lapping at Monty's puffy pussy lips.\n\n\"Ugh! Oh yes,\" Becky hissed as Todd slid his renewed erection into her pussy.\n\n\"Mmph!\" Becky screamed into Monty's pussy when Todd jammed his spittle wet thumb into her rectum.\n\nTodd pumped a second load into Becky's pussy a few moments later. Watching his semen slowly dribbling out of Becky's hairless mound had his cock slowly reviving.\n\nBecky wiggled forward, then flopped onto her back. She and Monty kissed for a few moments, then Monty wiggled down and began to play with Becky's heavy breasts.\n\nBecky spread her legs wide, in open invitation to either of her two lovers. Monty took the invitation and began to lap at Becky's sloppy pussy.\n\n\"I, it okay if I,\" Todd asked, unsure of what to do.\n\n\"Monty, it all right if my boyfriend fucks you?\" Becky asked.\n\n\"Mm hmm!\" Monty agreed.\n\nMonty wiggled around to kneel between Becky's spread legs. Todd knee-walked around and knelt behind Monty. He did not pause to admire the girl's juicy rear; his cock was blindly searching for her wet pussy.\n\n\"Ooh,\" Monty moaned as Todd's fat meat pushed into her willing pussy.\n\n\"Ugh!\" Todd grunted; Becky's pussy was tight but Monty's pussy was incredibly tight.\n\nBecky came closer and closer to her orgasm as Monty's tongue swiped up and down her pussy lips, swiping across Becky's clit. Becky could feel Todd's juices and her own juices running out of her pussy.\n\n\"Mmph!\" Monty grunted, golden eyes opening wide.\n\nMonty could feel Todd's cock stretching her, filling her pussy. She could feel his coarse pubic hair rasping against her swollen pussy lips. Then, Todd had jammed a thumb into her unsuspecting rectum; the feeling was incredible. Nasty, dirty, and incredible.\n\n\"Aieegh!\" Becky squealed in orgasm when Monty's teeth gently nipped at Becky's clitoris.\n\n\"Ugh, oh God,\" Monty grunted in orgasm.\n\n\"Augh, yes,\" Todd groaned and pumped his sperm into Monty's pussy.\n\n\"I need, I got to,\" Becky grunted a moment later and scrambled out of the bed.\n\n\"Oh! Me too,\" Monty complained when Todd's wilted cock slipped out of her pussy.\n\nBecky dashed into her half-bath. Monty dashed to the hall bathroom.\n\nWhen Monty returned, she saw Becky and Todd reclined on the bed. She watched as Becky knelt and sucked and stroked Todd's fat cock. Monty marveled at how easily Becky swallowed such a fat dick, swallowed the cock all the way down to Todd's pubic hair.\n\n\"Want this, want this up my ass,\" Becky told Todd.\n\n\"Up your...\" Monty gasped, truly shocked.\n\n\"Uh huh, oh God, hurts so good,\" Becky enthused, smiling at Monty.\n\nTodd patted the bed next to him. Monty crawled up and flopped down next to him. He leaned over and kissed Monty on her lips. Soon, they were frantically kissing, tongues thrusting into each other's mouths. Todd's hands gripped Monty's left breast and she groaned when he tugged, almost cruelly at her nipple.\n\n\"Oh God,\" Todd groaned.\n\nMonty looked down and saw Becky facing away, squatting over Todd's greasy looking cock.\n\n\"Ugh, oh God, Todd, oh yes,\" Becky groaned as his cockhead pressed against her struggling anus.\n\nMonty watched, fascinated as inch after inch of Todd's fat meat pressed into Becky's tightly clenched rectum. She watched Becky's tight brown ring slowly flower open, slowly accept Todd's cock.\n\n\"That, that's got to hurt,\" Monty grunted.\n\n\"Uh. Huh,\" Becky agreed, voice strained.\n\nSoon, all of Todd's cock was jammed into Becky's bowels. Becky sat, sweetly rounded buttocks resting against Todd's hips. With a 'whoosh' of breath, Becky slowly rose up. Then she sat again.\n\n\"Like my ass, Todd?\" Becky asked, peering over her shoulder at him. \"Huh? Like my ass, like when I let you fuck my ass?\"\n\n\"Uh huh,\" Todd managed to grunt out.\n\nBecky bounced a few times on Todd's fat cock, then let out a strangled scream. Monty watched as Becky shook in orgasm.\n\n\"Ugh! Oh! Aw shit, aw damn it,\" Todd grunted out and jerked as he climaxed.\n\n\"Pizza for lunch?\" Becky asked a moment later, wiggling to dismount from Todd's wilting cock. \"Took some wings out, but I just am not up to cooking right now.\"\n\nMonty watched a glob of semen bubble, then ooze out of Becky's stretched, raw looking anus. Then her brain registered that Becky had said something.\n\n\"Huh? Oh, shit, it's my Aunt Margaret,\" Monty asked, then squealed when her cell phone rang.\n\nBecky cleaned Todd's cock of lubricant and other slimy things. They could both hear Monty meekly answering with half-sentences, half-protests.\n\n\"No ma'am, I did not stay at Candy's; no ma'am, she left me there at school,\" Monty finally said. \"Aunt Margaret, I did not lie to you; she left me at the last minute. No ma'am, I did not lie to you. I didn't.\"\n\nMonty quickly dressed, grabbed her backpack and clean clothes and left Becky's house.\n\n\"Pizza sounds good,\" Todd finally said.\n\nIt turned out that Candy's mother had believed that Candy was staying with Monty. The plan had been for Monty to stay with Candy; Mrs. Thibodeaux was a bit sketchy on the details of who was doing what. But it was lunch-time and Candy had not returned and her cell phone was turned off. So Mrs. Thibodeaux called Monty's Aunt Margaret.\n\nCandy had spent the evening with Chris Breaux and two of Chris's friends and Michael Breaux, Chris's older brother. The four young men had enjoyed fucking the unpopular eighteen year old girl; popular girls weren't willing to do the slutty, depraved things the unpopular Candy Thibodeaux was willing to do.\n\nArriving home just after lunchtime, unaware of the semen in her hair, Candy lied and said she had been at Monty's house. When Candy's mother disclosed she'd spoken with Monty's Aunt Margaret, and the semen in her hair was pointed out, Candy then said Monty had been with her, had also fucked the four boys.\n\nMonty, however, told her aunt the truth. Candy had abandoned her to run off with Chris Breaux, a popular boy that also went to their school. She had not gone with them; Chris called her a sand n*gger. Instead, she had walked home, had been seen by their neighbor, Becky Meadows, and Becky had driven Monty home. Aunt Margaret had not been home, And Monty had given Aunt Margaret her keys; Monty had no way of getting into the house. So Monty went to Becky's house, had been fed, had been given a bed to sleep in, and had her clothes washed and dried by their friendly neighbor.\n\n\"Aunt Margaret, don't believe me, let's just go right across the street and ask her,\" Monty challenged. \"You called me, what? A minute ago? Ask yourself, I wasn't right across the street, how I get here so quick?\"\n\nAunt Margaret did stomp across the street, Monty right behind. Aunt Margaret knocked, forcefully on the front door of Becky Meadows's home.",
        "\"Hello? Oh, hey Monty, change your mind about pizza?\" Becky answered, swinging the door open. \"Be here in about twenty minutes. Hi; you must be Ms. Gardner; I'm Becky Meadows.\"\n\n\"I uh, Monty stayed here last night?\" Margaret asked, beginning to think maybe Monty had been telling her the truth.\n\n\"Yeah, and even made the bed this morning. When I came back from campus, your car still wasn't back so we went ahead and had breakfast,\" Becky agreed. \"Want to come on in?\"\n\n\"I uh, no, no Ms. Meadows,\" Aunt Margaret stammered. \"Thanks.\"\n\nMonty flashed her Aunt Margaret a triumphant smirk. She then gave Becky a brilliant smile before following Aunt Margaret back across the street.\n\nAfter pizza, after a nice nap, Becky again urged Todd to fuck her. She kissed him hotly as she eased his briefs down his slim legs.\n\n\"Let's go bowling,\" she urged as she bent to take his cock into her mouth.\n\n\"Bowling? Now?\" Todd groaned as her small tongue lapped all around his sensitive cockhead.\n\n\"Uh huh, all three my holes,\" Becky giggled.\n\nNow, Becky's odd question 'the sport?' when Todd had first approached her in the library and asked her to go to Manny's, and then bowling made sense. Becky was asking if Todd meant the sport, with the heavy balls, and flat shoes and wooden lanes, or fucking her three holes.\n\nTodd's first ejaculation took a few minutes; Becky's jaw was beginning to get sore when he finally groaned and filled her mouth. She rode him to three orgasms, then flopped onto her back and urged him to mount her. Todd pounded Becky's splayed pussy to two more orgasms before he again stiffened and spurted into her.\n\n\"Best for last,\" Becky giggled and grabbed the tube of lubricant.\n\nIn the morning, Becky again made breakfast; a hot, hearty bowl of oatmeal with pecans and pieces of peaches. She sweetened the porridge with honey. Then she drove the quite tired Todd to Sharp Shire dorm.\n\nReturning home, Becky shook her head at the disaster area that had once been a kitchen. It needed to be cleaned; pots needed to be scrubbed, the counter needed to be wiped down. But right now, she had other plans.\n\n\"C, C, yes! C Cell batteries!\" Becky whooped, finding the package in the back of her 'junk' drawer in her kitchen.\n\n\"And, oh! Jasmine-vanilla...\" Becky said, dropping the bath bomb into the scalding hot water.\n\nShe lighted three candles and turned off the overhead light. The vibrator did work as promised and was certainly waterproof. In the semi-darkness, Becky sat in the scented water and pleasured herself several times. Finally, the water cooled so she blew out the candles and toweled herself dry.\n\n\"Shit! Homework!\" Becky squealed, leaving the warmth of the bathroom.\n\nMonday, before the third period, there wasn't a student of Baylor Lake High School that had not heard that Candy Thibodeaux had fucked four boys over the weekend. Traumatized, Candy turned to Montana Gardner, seeking comfort and consolation.\n\n\"Uh? I had walk home because you left me here,\" Monty shrilled to the sobbing girl. \"In that rain. Lucky I didn't catch pneumonia, bitch!\"\n\nWhile Monty was eating lunch, alone, Becky was nodding with satisfaction; Professor Laughlin had adjusted her score from a '79' to an '89.' As he explained, he'd reviewed Jude and Candy's previous grades; a '79' was ten points higher than their average.\n\n\"So, it only stood to reason; their better grade was due to your input. And your lesser grade was due to their input, or more likely, their lack of input,\" the man said.\n\nSo Becky was in a good mood when Monty knocked on her door that afternoon. Monty was slightly disappointed that Todd wasn't there, but pushed her disappointment aside as they went to Becky's bedroom.\n\nThey kissed for several long moments, slowly undressing each other. Becky noticed, while she had an odd sensation in her belly, it was not the oddly off-center feeling. This was more a feeling of excitement, of anticipation, not of nervous energy.\n\nWhen nude, Becky and Monty swung into a sixty nine and pleasured one another. Becky was on top, enjoying the feeling of being in power. After they'd brought each other to orgasm, two for Becky and three for Monty, they fell away from each other, then wiggled around to embrace.\n\nWhen, uh, other day, you, Todd stuck his...\" Monty stammered, head resting on Becky's large breast.\n\n\"Stuck his cock up my butt?\" Becky guessed.\n\n\"Yeah; that didn't hurt?\" Monty asked.\n\n\"So good,\" Becky agreed.\n\nBecky gently urged Monty onto her belly. She pried Monty's beautiful buttocks apart and tongued Monty's tightly crinkled anus. While she licked at Monty's rosebud, Becky insinuated one, then a second and then a third finger into Monty's rectum. Her other hand toyed with Monty's wet slit.\n\n\"Mm, oh!\" Monty grunted in orgasm.\n\n\"And...\" Becky said, urging Monty onto her knees, shoulders pressed to the mattress.\n\nBecky had Monty reach back and pull her buttocks open. Becky located her vibrator and the tube of lubricant.\n\nBecky then turned on the vibrator and ran the loudly humming instrument up and down, from Monty's lightly furred pussy to Monty's anus. Then, working the vibrator into Monty's pussy, Becky used her other hand to lubricate Monty's rectum.\n\n\"Ugh, oh!\" Monty grunted as the vibrator shook and shuddered inside of her while Becky's fingers filled her rectum.\n\nBecky slowly pulled the vibrator out of Monty's pussy. She then trailed the loudly buzzing toy from the top of Monty's pussy, along the area of flesh between pussy and anus, then to Monty's quickly contracting anus.\n\n\"Ugh!\" Monty cried out when Becky pushed the tip of the vibrator against Monty's anus.\n\nBecky reached her other hand down and began to rub her own very wet pussy. She watched as Monty's sweet ass flowered open, accepting her vibrator.\n\n\"Ugh!\" both girls cried out.\n\n\"Oh God yes,\" Monty hissed, feeling the slick vibrator slowly pushing into her.\n\nMonty could feel the buzzing instrument pushing, stretching, pushing into her virgin ass. She could feel her rectal muscles trying to push the toy out. Every nerve in her body seemed to be centered in her rectum.\n\nBecky thought that the sight of her vibrator pushing into Monty's ass had to be one of the most erotic sights she'd ever seen. The flesh colored toy was lighter in color than Monty's caramel colored skin; it presented an erotic contrast.\n\n\"Oh, ugh, oh God I'm, I'm, oh!\" Monty suddenly cried out and shook in orgasm.\n\nBecky briskly rubbed her own pussy to orgasm. Becky twisted and pushed and pulled on the vibrator while Monty grunted and shook.\n\nWhen Monty slumped down, Becky slowly reduced the speed, the intensity of the vibrator. When it clicked off, Becky slowly pulled it from Monty's ass.\n\n\"Oh. My. God,\" Monty whispered, voice shaking.\n\n\"See why I like it? Up the butt?\" Becky asked.\n\n\"Uh huh,\" Monty weakly agreed.\n\nThe two girls kissed and cuddled for a few minutes more. Then Monty reluctantly climbed out of Becky's bed and dressed again. Becky saw no reason to dress; she wasn't planning on going out of the house. Nude, she followed Monty to the front door. The two girls kissed, then Becky stood behind the door as Monty left Becky's home.\n\nReturning to the bedroom, Becky clambered onto the bed again. She rubbed her pussy to another orgasm, then dug out her cell phone and hit the number for Todd.\n\n\"Hey,\" Todd happily answered his phone.\n\n\"Don't you 'Hey' me, Mr. Moore,\" Becky tried to sound angry. \"Monty just left here looking for you. Now, tell me, why would MY girlfriend be looking for you?\"\n\n\"What?\" Todd laughed. \"Oh, hey, nuh uh, I'm innocent here.\"\n\n\"Uh huh; I bet. Bought a brisket other day; what you doing Wednesday?\" Becky asked.\n\n\"Hoping I'll be with you,\" Todd admitted.\n\nMonty answered when Becky called and screamed indignantly. Wednesdays, they had to go to their church; no, Aunt Margaret wouldn't dream of letting Monty skip even just one Wednesday.\n\n\"Then I guess you'll just have to wait until Friday,\" Becky said, then laughed when Monty declared her anger with Becky.\n\nOn Wednesday, after gorging themselves on the succulent brisket, Becky pulled Todd into her bedroom. When they were both nude, Becky showed Todd her vibrator. Then she showed him how she masturbated when she was thinking about him.\n\n\"Tet it all wet from my pussy,\" Becky husked, then knelt down, facing the foot of the bed.\n\nShe pulled the vibrator from her pussy, then ran it along the furrow of her buttocks. Todd groaned as Becky slowly pushed the buzzing toy into her willing anus.\n\n\"And fuck my tight ass; oh! God! Oh, I wish my boyfriend was here. He'd push his huge cock up my ass, fuck my ass so hard,\" Becky encouraged.\n\nTodd got the hint and greased his cock; the lubricant was sitting on the bedside table. He pulled the buzzing toy from Becky's rectum. They both groaned as he wormed his cock into her squirming hole.\n\nThey showered together; anal sex can sometimes be a little messy. Then Becky drove Todd back to campus. When she returned, Becky decided to watch a movie; Parasols Magazine had a special for new subscribers. Anyone that signed up for a new subscription was given a ninety day Silver Membership to Falgout Film Studios.\n\n\"Oh! I don't think this is like Lifetime,\" Becky said aloud as she read the film titles available to Silver members.\n\nHer phone buzzed and Becky put 'Dallas Sanantonio's Anal Adventures in Wonderland' on pause. She smiled; it was Monty's phone number.\n\n\"I hate you,\" Monty said to Becky when Becky answered her cell phone.\n\n\"You do? Why?\" Becky laughed.\n\n\"I saw you leave with Todd,\" Monty accused.\n\n\"Uh huh,\" Becky said. \"But he did ask where you was.\"\n\n\"He did?\" Monty squealed.\n\nMonty told Becky of the boring church service she'd had to endure. She also told Becky about Candy's repeated attempts of reconciliation.\n\n\"I mean, it's just because no one else will talk to her and she's like punished forever,\" Monty confided. \"Todd going be there Saturday?\"\n\n\"Don't you worry about Todd; yeah, told him bring his dirty clothes,\" Becky agreed. \"Probably make a whole weekend out of it.\"\n\nOn Thursday, a custodian at Cabrini High School was diagnosed with the Corona Virus. On Friday, a teacher at Northside High School, as well as three instructors at the University of Louisiana at DeGarde were diagnosed with the Corona Virus.\n\n\"What in God's name am I going do?\" Aunt Margaret asked when Baylor Lake High School informed her that they were suspending in-person school attendance. \"We don't have a computer.\"\n\n\"Becky does,\" Monty suggested, even pointing toward Becky's house.\n\nTodd wisely stayed out of sight while Margaret and Monty and Becky went into the bedroom that Becky had set up as an office. Aunt Margaret approved of the set-up, agreed that Monty could come over during the week to do her on-line schooling. The harried woman then offered to pay Becky twenty five dollars a week, for the Internet service that Monty would be using.\n\n\"Absolutely not, Ms. Gardner,\" Becky said, pushing her glasses up her button nose. \"We are neighbors. Neighbors don't charge neighbors for things like that.\"\n\n\"Call me Margaret, Neighbor,\" Aunt Margaret smiled wearily.\n\n\"Call me Becky,\" Becky said, holding out her hand.\n\n\"I'm sure this stupid virus will run its course soon enough,\" Margaret said, as she and Becky shook hands.\n\nBecky agreed with Margaret Gardner's prediction, but still drove out to Sam's Club in Elgee, Louisiana. She managed to grab two jumbo packs of toilet paper and some water. On a whim, she bought a collection of assorted scented hand sanitizers, then drove home.\n\n\"University's going to on-line,\" Todd announced when Becky walked into the house.\n\nBecky checked her phone and saw a message from the University. A check of her email showed another message, confirming Todd's announcement.\n\n\"Then, it's a good thing you already here, huh?\" Becky said, kissing him.\n\n\"And got my clothes,\" Todd agreed.\n\n\"Hi Todd,\" Monty said when she entered through Becky's still open garage.\n\n\"Hey,\" Todd smiled.\n\n\"'Hi Todd'? 'Hi Todd'? No 'hi Becky' huh?\" Becky shrilled, even swatting Monty on her nicely rounded butt.\n\n\"What. Ever,\" Monty laughed. \"Hi Becky. Saw you what? Not even ten minutes ago, Becky, but okay Becky, hi Becky.\"\n\n\"Keep it up; I won't share my boyfriend with you,\" Becky threatened.\n\n\"Oh! Hi Becky! It's so great to see you Becky!\" Monty acted terrified that Becky would make good on her threat.\n\n\"Oh, shut up, goof ball,\" Becky laughed, prying Monty's arms away from her.\n\nThe next week the three students established a routine. Becky would wake, do her morning yoga, then wake Todd. After they made love, Becky would start breakfast. Even though she knew Margaret Gardner could not see her through the tinted window of her kitchen, Becky would wave as the woman left for another day of work at Kendricks' Engineering. Moments later, Monty would walk across the street, back pack slung over her shoulder.\n\nThe three would sit and eat breakfast, then return to the bedroom. From watching the Dallas Sanantonio films, Becky had learned what a 'daisy chain' was and the three usually started off their morning in a chain, Monty sucking at Becky's pussy, Becky sucking Todd's hard cock, and Todd licking and sucking at Monty's pussy.\n\nAfter their pleasure, they would go to the office and do their assigned work. An hour or two into their work, they would stop so that they could eat lunch, then return to the bedroom.\n\nShortly after Easter, Monty's baby bump began to show. Aunt Margaret was furious with her niece. Burton denied any part of it until someone reminded him that a DNA test would reveal whether or not he was the father.\n\nBecause of the pandemic, Backyard Barbeque had limited seating. Burton, his mother, his sister Louise, Aunt Margaret and Montana went to the diner to eat and discuss their future plans.\n\nWhile the quintet ate at the old restaurant, Becky and Todd sat in the living room, eating fried chicken and watching Dallas Sanantonio starring in a lesbian movie. Becky's phone chimed and she saw that it was Monty's number, so she answered.\n\n\"He wants us, they all want us get married,\" Monty whispered to Becky.\n\n\"And what you want?\" Becky asked, muting the television.\n\n\"You going hate me,\" Monty said after a long hesitation.\n\n\"No, Monty, I won't,\" Becky said, already having a good idea of what Monty was going to say.\n\n\"I, I'm in, I want marry Todd,\" Monty confessed.\n\n\"I know that,\" Becky admitted.\n\nBecky would have to be blind to miss the adoring looks the beautiful girl kept shooting at Todd. She would have to be blind not to notice Monty's constant flirting, Monty's constant touches to Todd.\n\nBecky also noticed Monty's hesitation, her reluctance to make love when it was just the two of them. When Todd was in the room, Monty was always willing to pleasure Becky, have Becky pleasure her. But that was when Todd was in the room, when Todd was participating.\n\nBecky also sensed that Todd was pulling away from her. In the morning, Todd seemed almost reluctant to make love with Becky. In the evening, after Monty went home, went across the street to her Aunt Margaret's home, Todd seemed to pull inside of himself. He never initiated the touches, the kisses with Becky.\n\n\"Here. Talk to your girlfriend,\" Becky now said, pushing her cell phone into Todd's hand.\n\n\"Funny. Movie's the same, with the sound on or off,\" Becky said aloud as Todd started talking to Monty.\n\n\"And how's she get that hat stay on like that?\" Becky asked herself as she turned the volume back on when Todd put Becky's cell phone onto the coffee table.\n\nDallas Sanantonio wore a cowboy hat and cowboy boots at all times. Most of her scenes started off with the curvy brunette dressed in western style shirt, usually tied under her large breasts, Daisy Duke cutoff denim shorts slung low on her hips. But Dallas never removed her hat or her boots. Becky noticed the actress had three Stetsons, a charcoal gray one that matched her beautiful grayish blue eyes, a chocolate brown hat that emphasized her long brown hair and large light brown areolae, and a black hat that looked good with her pale complexion. The hat bands of these three hats changed, though, from scene to scene, from movie to movie. The bands changed to match whatever pair of cowboy boots Dallas Sanantonio was wearing.\n\n\"Love the red ones the best; wonder if....\" Becky said as Todd quietly closed the front door behind himself.\n\nBecky used her cell phone to look at Cal's Western Wear's on-line store. The Flowers, Louisiana store had an expansive selection of Stetson style hats, a good selection of interchangeable bands, matching belts with interchangeable buckles, and four different styles of red leather cowboy boots. Becky loved the look of the stiletto heeled boots, as well as the pointed toe boots with the riding heels.\n\n\"Limited in-person, call ahead...\" Becky mused, one eye watching as Dallas pleasured another woman, hat and boots firmly on head and feet.\n\n\"Cal's Western Wear, Douglas speaking,\" a man answered after the third ring.\n\n\"Uh, yes, how late are y'all open?\" Becky asked.\n\n\"Hmm, another forty five minutes,\" Douglas Gueydan affirmed.\n\n\"And, site says limited person; do I need make an appointment?\" Becky asked, turning off the television.\n\n\"Empty right now; come on in,\" Douglas said.\n\nBecky hurried, making sure her doors were locked, then backed her truck out of the garage. She didn't even look over at Monty's house, look to see if she could see Todd or Monty.\n\nBecky made it to the store twelve minutes before they were to close. Douglas assured her that he was in no hurry. He did not tell her that he'd spent the last three hours twiddling his thumbs, there'd been no customers.\n\nBecky found a cream colored Stetson style hat that looked good with her complexion and her brown hair. She pulled up the two boot styles she'd liked on her phone.\n\n\"Okay, the riding boot? Got that in red, white, and black. Oh. And brown. But that dress boot? Only got brown or black left,\" Douglas said. \"You're about what? Seven, seven and a half?\"\n\n\"Wow, that's pretty good,\" Becky said. \"Seven most of the time; seven and half if it's cut small.\"\n\nWhile Douglas went to get the boots, Becky looked at the boot cut jeans, the snap button blouses.\n\n\"What's the red tag mean?\" Becky asked as Douglas hustled back, four boot boxes in hand.\n\n\"Seventy percent off. Blue tag's fifty percent off,\" Douglas said, pulling up a stool.\n\n\"The hat, oh! Got a blue tag!\" Becky said, delighted.\n\nThe dress boot had a blue sticker, and the riding boots had a red sticker. Becky tried on the red riding boot first.\n\n\"Heel's going slip a bit; you wouldn't be able get them on if it didn't,\" Douglas informed Becky.\n\n\"I know you need close up,\" Becky said as she took a few steps in the boots.\n\n\"Ma'am, just take your time,\" Douglas assured her. \"I'm in no hurry to get home to some Ramen noodles and Hormel's Chili, okay?\"\n\n\"Eww!\" Becky said, deciding she'd get the red boots, if they had a matching hat band and belt.\n\n\"Cook the noodles, then pour the chili on top,\" Douglas smiled. \"Hot, fast, cheap, and filling.\"\n\n\"And eww. Don't forget eww,\" Becky smiled. \"Let me see the other boots.\"\n\nThe riding boot added nearly four inches to Becky's stature. The dress boot added five inches and the black leather gleamed. So Becky indicated she would get both pair of boots.\n\n\"I also brought out a red in the round tow,\" Douglas showed Becky, but she shook her head.\n\nBecky also grabbed two pair of button fly boot cut jeans; they actually had two pair that fit her short stature. There was a pair of Daisy Duke Style low-rider jeans shorts with leather patch pockets in her size; Becky knew she'd never wear them in public, but they had a red tag.\n\n\"And the belts, the buckles...\" Douglas rang up the items, mentally calculating his commission for the sale.",
        "\"Oh! This is cute!\" Becky said, seeing a cream colored riding coat.\n\n\"Hmm? Oh yeah, matches your hat,\" Douglas agreed. \"Want me see if we got it in your size?\"\n\n\"Seventy percent of two nineteen is....yeah, see if y'all do,\" Becky agreed.\n\n\"Lining zips out,\" Douglas said, hurrying to the stock room. \"And it's water resistant. Not water proof, but know what? Spray it down with Scotch Guard? It'll be water proof.\"\n\nTodd did not come home that night. Becky soaked in the large tub, lazily masturbating in the darkness, illuminated by one solitary candle. When the water grew cold, she sighed, switched off the waterproof vibrator and blew out the candle.\n\nBecky did not know if Aunt Margaret had broken down and splurged for Internet access. Becky did not know how many bedrooms were in the Gardner's rental house, nor did she care. Two days after Todd had walked out of her home, Monty and Todd informed Becky that they would be getting married. Becky laughed a bitter laugh when Todd assured her that they'd always be friends.\n\n\"Come on, Todd,\" Monty said quietly, seeing the expression on Becky's face.\n\nTHE END\n\n**Author's Note: I write these stories for my pleasure. I post them here for your enjoyment. I thank you for reading my words.\n\nI thank those that take the time to rate my stories, as well as those that 'favorite' my tales. I especially thank those that take the time to leave comments, whether they be good or bad.\n\nAlexis Smith, as well as Susan Couvillion, Alexis's unrequited crush are characters from the 'Wealth' series.\n\nMartin Boyd, Becky's investment counselor is a character from 'Quarter Ton' in the Group Sex category.\n\nTammy Hale, Becky's real estate agent is a character from the 'Yapping Dogs' series in the Loving Wives category.\n\nJonathon Savoie and Richard Arnaud are characters from 'Duplex' in the Mature category.\n\nDr. Dupre, the veterinarian is a character from 'Pudgy' in the Toys & Masturbation category.\n\nPaul Robichaux, Becky's general contractor is first introduced in the 'The Broussard Sisters' in the Group Sex category.\n\nHave a swell day. And some of you, have a swollen day."
    ],
    "authorname": "JimBob44",
    "tags": [
        "loss of virginity",
        "group sex",
        "mff",
        "anal sex",
        "college",
        "romance"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/writing-it-down"
}