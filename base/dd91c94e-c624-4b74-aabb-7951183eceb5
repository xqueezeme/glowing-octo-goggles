{
    "title": "How to Rim",
    "pages": [
        "We hadn't expected to write again, but have received several requests to give more details about how Celeste and I rim. Since rimming has resulted in such exceptional orgasms for both of us over thirty-five years we, thought we should honor these requests. Some of this is scattered through the Guide, but important details are added\n\nAt the outset, you have to recognize and overcome the psychological barrier that you are going to be putting you mouth and tongue on and in the anus, which also is the exit point for waste from the body. If you can't do this, don't read on\u2014but know that you're turning away from pleasure you can only imagine if you don't rim.\n\nCome to grips with where your mouth and tongue are going. Common sense and careful cleaning create a perfect stage for rimming. Celeste and I have never had a problem, never\u2014and we probably rim once a week. If you have never rimmed before and want to experience the thrill, it's probably a good idea for the women to administer an enema to herself before starting, maybe two, and then washing carefully. They really aren't necessary, but they'll put you at ease about elimination and make you more relaxed.\n\nWith that out of the way, let's look at what you're trying to accomplish by rimming and compare it to eating pussy (cunnilingus). The ideal orgasm for Celeste involves simultaneously stimulating her clitoris, g-spot, the furrow between her inner and outer sphincters, and the tip ends of the arms of her clitoris. (All of this is explained in the Guide.) If I eat her pussy, what am I accomplishing? Actually, all I'm doing is stimulating her clitoris with my tongue and I don't know about you, but I find both the smell and taste of the vagina to be unpleasant. On the other hand, when we rim (analingus) we can accomplish all four goals, and without the nasty odor or taste. A clean asshole is absolutely delightful. To me, it tastes slightly sweet, slightly metallic, and very pleasant. Also, there's absolutely no possibility of pain for her, as I never penetrate her inner sphincter. As a matter of fact, my penis plays no role in rimming.\n\nHere's how I rim Celeste. \n\nI kneel on the floor with my knees resting on a pillow for comfort. Celeste lies on the edge of the bed with her legs resting on my shoulders and a doubled-up, thick pillow or cushion under her butt and the small of her back to provide a perfect angle for my tongue and a restful position for her. I then nimble at her rosebud (it looks just like one and opens up like one too) until she is aroused. When she is, I spread her ass cheeks as far as possible, form my mouth into an \"o\" and suck her hole open. [I know what some of you are thinking, but that has never happens. Never.] Once she is wide open, I broad stroke her up and down using running the flat of my tongue up and down her hole until she begins to tremble. Once this happens, I roll the edges of my tongue into the shape of a cannoli and gently tongue fuck the furrow between her outer and inner sphincter.\n\nWhile I'm doing this, Celeste chooses the intensity of the orgasm she wants to have. If she wants a regular, take-your-breath-away one, she just strokes her clit. If she wants more intensity, she slips her middle finger into her vagina, finds her g-spot with it, and presses against her g-spot while stroking her clit with her thumb, pushing the two together. If she wants to try to ejaculate, we use a g-spot stimulator. It looks something like a hook with a broad tip at its end but supplies a constant pressure that lead to an ejaculation about half the time. If she want the full monte, while I'm tongue fucking her and she is stroking her clit and g-spot, I take two fingers of one hand and press against the ends of the two arms of her clit which are located at about ten and two o'clock in the area around her hole if 12 o'clock is the point where her anus is closest to her vagina.\n\n[When Celeste rims me, her mouth and tongue actions are exactly the same. Obviously, there is no g-spot or tip ends of the clitoris stimulation, but she replaces them by scratching my frenulum while I play with my nipples. It's a gusher every time.]\n\nYou just can't miss using these techniques, but you should be warned about a couple of things before you try our style of rimming.\n\nFirst, as Celeste's orgasm approaches her entire body starts to tremble. When the shaking starts, she thrusts her butt down on my face hard, trying to get my tongue as deeply into her as possible. Then her thighs clamp around my head and for a couple of seconds I have the sensation that I'm going to suffocate. Don't worry if this happens to you, the sensation passes and you will continue to breathe.\n\nSecond, when her orgasm strikes, she often screams because of its power. This is fine when we are alone at home, but not something you want to have happen in a hotel or motel where it can disturb other people. Pencils can break, but the plastic dowel of a toilet paper holder clenched between the teeth prevents this from happening.\n\nThird, and Celeste wanted me to stress this, rimming is not a well-we've-done-that-now-let's-do-something-else activity, particularly for a woman who has not experienced the intensity of a rimming orgasm before. It can be so powerful that what has happened to her is a total surprise. It not that it is frightening, but it can be stunning. A woman's lover needs to stay with her, lying next to her in bed and holding her reassuringly, stroking her body gently as she comes down from what seems like an explosion within her body. As well, for a woman the afterglow that radiates through her is exquisite and needs to be savored.\n\nRimming can produce an unbelievable sexual experience. We hope these details will help you to achieve one. "
    ],
    "authorname": "celesteandjim",
    "tags": [
        "rimming",
        "analingus",
        "anal licking",
        "oral sex",
        "oral sex how-to",
        "rimming how-to"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-rim"
}