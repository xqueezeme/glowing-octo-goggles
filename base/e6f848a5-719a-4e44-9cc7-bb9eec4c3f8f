{
    "title": "There and Back Again Ch. 131",
    "pages": [
        "Chapter One Hundred Thirty-One: Separation Anxiety\n\nWe left Denerim a scant few days later. We'd managed to avoid Eamon -- who was apparently accompanying Connor to Kinloch Hold -- altogether, and saw Kallian only briefly, between her duties as Bann of the Alienage. Cailan had 'people' looking into who would have attacked Anora's ship, as did Leliana, though I doubted we would ever get closure on that subject. Erlina had been locked up in Fort Drakon -- but in a rather comfortable room, not a cell, and the reforms Cailan had brought to the prison meant she was unlikely to be abused during her incarceration.\n\nGoodbyes with Wynne were difficult a second time. She'd proudly showed me around her clinic before we left, and I was even more impressed. There were separate quarters for mages and mundane healers, as well as for a small rotation of templars; in addition to the triage and treatment area I'd seen initially, there were a dozen or so rooms for patients to stay in while they recovered. There was a special place for women giving birth, and a few rooms decorated for children. There was a small herb garden to grow supplies -- for potions, poultices, as well as food -- and a kitchen and dining room staffed by Chantry sisters. While they had a full rota of healers on staff, I knew they would miss Wynne when she left for Orzammar -- and so would I.\n\nLeliana was getting on a ship -- destination unspecified -- the same day. I knew I'd see her again within a few months -- she'd promised -- but she was my best female friend, and it was hard to lose her.\n\nDougal, Loghain, and my newest soldier recruits for Soldier's Peak accompanied us as we left; we would all travel together for the first three days, then Aedan, Alistair, and Zev would turn off to head for Vigil's Keep, while I kept going with the rest. Dougal would leave us at the tunnels leading to the Peak and head for Jader, but Loghain and the soldiers would come with me the rest of the way to my isolated Fortress. Aedan and Alistair had decided that the former Teyrn would be allowed to stay in Ferelden as long as he didn't draw attention; he could staff the Peak until the rest of the Wardens left Amaranthine for good. Loghain was subdued for much of the travel, keeping to himself and retiring to his tent early at each stop. That he was mourning was obvious, and put to rest any lingering concerns that he was complicit in any plot of Anora's to fake her death. If that's even what happened.\n\nWe travelled much more slowly on the way back; not only was it much harder to move quickly with a large group of people, we didn't have enough mounts for all of the soldiers Cailan sent me. I took some time riding Sadie alone, improving my confidence, though I enjoyed riding with Alistair so much we still doubled up some of the time. I was dreading the upcoming separation from my husband, and we took every opportunity to cherish our time together before it happened.\n\nMy new travelling accommodations certainly didn't hurt in that regard. Now that I was travelling officially as the Steward of Soldier's Peak, instead of the ratty tent we'd lugged around during the Blight, Alistair and I shared a pavilion that rivalled Cailan's. It had a curtained-off sleeping area separate from a larger room for meetings and the like; I had a small, thin mattress that could be rolled easily for transport, a portable desk, and two small folding chairs. Heavy hanging tapestries muffled sound. It granted a degree of privacy and luxury I would never have expected on the road, though I missed Sandal's silencing enchantment.\n\nThe soldiers had sworn themselves to my service, the same as Mhairi and the others, but I still felt weird commanding them. Another woman had been assigned as their lieutenant until we reached the Peak, an attractive, though grim-faced woman ten or so years older than me named Avanna. There were no other females in the ranks; I wondered if Cailan had chosen her because he thought it would make me more comfortable working with a woman.\n\nBefore we went our separate ways, Aedan and Zevran sat me down and brought up some concerns that hadn't even occurred to me as we travelled.\n\n\"You must sleep in your armour and keep a weapon within your reach, Bellissima,\" Zevran insisted, presenting me with a long, thin dagger that he strapped to my forearm, underneath the leather of my armour.\n\n\"What? Why? We're hardly going to be attacked by bandits on the road with this big an entourage,\" I laughed.\n\n\"It's not bandits I worry about,\" Aedan growled darkly. He looked around and lowered his voice, leaning in closer. \"You're going to be travelling alone with a large group of armed soldiers, almost all of them men. If even one of them gets the wrong idea...\"\n\nMy mouth fell open in shock. Sheltered as my Earth upbringing had been, it had never occurred to me that I was at risk with my own sworn soldiers. I glanced nervously at a nearby campfire where six men sat playing cards. \"You think...one of them...really?\" I whispered.\n\nZevran shrugged. \"Not really. I have spent a bit of time getting to know them, yes? But the fact remains that you are a beautiful young woman, alone with many men who have little hope of satisfying any...urges...for quite some time. If I truly suspected anyone, they would be dead, and his Majesty did a thorough job vetting them as well, I believe, but you must be prepared to defend yourself if need be, yes?\"\n\nI gaped at the two men, mind racing. I thought back to some of the encounters I'd had with men in Ferelden -- trying to pull me out of a tree for some 'fun', and threatening Leli and me while we washed in the river. They may have a point. \"Does Alistair feel the same way?\"\n\nAedan snorted, and Zevran chuckled. \"I don't think it has occurred to him, cara mia, and it will not be me who puts the idea in his head, or he wouldn't let you out of his sight.\"\n\n\"Nonetheless, you must be careful, sister.\" Aedan wrapped his arm around my shoulder and squeezed. \"I don't want to see you hurt.\"\n\n\"I believe I can help,\" another voice joined in, and I glanced up to see Loghain settle on a log across from us. \"I know many of these men, and most I would trust with my life. However, not only as a woman but also as the Steward of Soldier's Peak, you should travel with a personal bodyguard. Virtually all of the nobility have bodyguards. Your husband can help keep you safe when you are together, but you should look into hiring someone regardless -- as should he, truth be told.\n\n\"For the time being, until we reach Soldier's Peak, I would be happy to oblige.\"\n\nI stared at the taciturn former noble in surprise; to my greater shock, neither Zevran nor Aedan objected to the idea, both eyeing me speculatively.\n\n\"Or, if you do not trust me, I can recommend one or two of these soldiers whose loyalty you can trust.\" Loghain turned his eyes down, avoiding contact with me, his face very slightly flushed. \"Your lieutenant should also set her tent up directly beside yours, for both your sakes.\"\n\nI glanced at Aedan, who shrugged, and Zevran, who nodded once, an encouraging smile on his handsome tattooed face. Loghain, as my bodyguard? I tried to picture it, but it was difficult to imagine him acting servile in any way, not to mention the fact that he wasn't my favourite person to begin with, and it would mean spending a lot of time alone with him. At least he probably won't be interested in polite conversation. I didn't really have another option.\n\n\"I accept your offer,\" I responded finally, \"just until Soldier's Peak. Thank you, Loghain.\"\n\nI doubted I'd said his name in his presence since...ever, really, and his brief surprised look confirmed I wasn't alone in realising it. I felt uncomfortable around him, given my knowledge of his actions -- both those he'd taken, and those I'd managed to prevent -- during the Blight. That said, I also didn't feel worried that he'd attempt to rape me, and he did seem to hold some deep loyalty to Aedan and Alistair, whether from gratitude or respect I couldn't be sure. I might be uncomfortable, but I'll be safe.\n\nAedan later gave me his blessing to fill Loghain in on my background, if I wanted to. Not that I needed permission, but it was interesting that he trusted the man that much. I wondered, not for the first time, what Loghain had said to make my brother trust him; Aedan still wouldn't talk about it with me, and from what I recalled from the game, the former Teyrn didn't really have a good explanation for his actions. I decided to wait and see how I felt after being essentially alone with him for a few days.\n\nThe night before we parted ways, Alistair made love to me desperately, over and over, while I clung to him and tried to memorise his scent, the feel of his touch, and the beautiful look on his face as he held me and let himself go. There really isn't a more attractive man in all of Thedas. I finally passed out a couple of hours before dawn from sheer exhaustion; if I hadn't, I wondered if he'd have kept us both awake all night.\n\nThe morning came too soon, and I reluctantly buckled myself into my armour before helping Alistair with his temporary plate. I hoped his new Archdemon Bone armour would be done soon; his old dragon bone had been destroyed by darkspawn in the Vigil's sub-basement, and the plate was horrendously heavy and bulky.\n\nAlistair caught me slipping the new dagger Zevran had given me under my bracer. \"What's this?\" He pulled it out of the sheath, gasping as he cut his thumb on the sharp blade.\n\n\"Gift from Zevran.\" I winked. \"To keep me safe from amorous advances. So no getting fresh, ser,\" I teased, taking back the dagger and re-sheathing it. I wiped the blood off his finger with my sleeve.\n\nHis eyes widened, but instead of amused, he looked horrified, and I sighed. I hadn't wanted him to worry. \"All those men...\" he muttered, clearly distressed.\n\n\"It's okay, love. Avanna's tent will be right beside mine, and Loghain's going to be my bodyguard until I can hire one. Dougal will be there too.\"\n\nHe glared at me. \"You've thought a lot about this, and yet you didn't discuss it with me.\"\n\nI took his hand and pressed it to my cheek. \"I didn't think about it. Aedan and Zev did,\" I explained. \"But I didn't want you to worry. I'm a big girl, and you know I can handle myself. The rest is just for appearances.\"\n\nHe sighed, running one frustrated hand through his hair. \"Maybe I could just...\"\n\n\"No. See? This is why Aedan didn't talk to you about this. Go to Amaranthine, love. Be the Commander of the Grey. I'll be back in no time.\"\n\nHe pulled me to him awkwardly one last time, kissing me sweetly. \"Maker, I'm going to miss you. I love you, Sierra Theirin.\"\n\n\"And I you.\"\n\nOnce we finished packing, we stepped out of our tent, allowing a couple of the soldiers to fold away and pack the tent and furnishings. I hugged Aedan and Zevran, and then stole one last, desperate kiss from Alistair. The three heading to the Vigil bid Loghain and Dougal goodbye, and then they were off. I blinked back the tears that threatened, turning resolutely away when they disappeared down the road to the Vigil.\n\nTravelling without any of my friends was much more depressing than I'd have predicted, had I stopped to think about it before it happened. The soldiers were nervous and overly formal around me, and being mounted while they travelled on foot would have made discussion difficult anyway; Avanna was polite, but clearly not a big talker. Dougal chatted with me some, but Loghain's humourless presence didn't encourage much small talk.\n\nI still felt awkward riding on my own, though I thought I'd had enough practice that perhaps my butt and legs wouldn't ache horrendously by the end of the day. I considered walking and leading Sadie more than once, but each time I thought about it, Loghain, my silent shadow, seemed to guess my intent and shot me a disapproving frown.\n\nI sighed. It's going to be a long trip.\n\nCamping was even more awkward; once Dougal and I ran out of things to talk about, I ended up going to bed early. To my horror, Loghain planned to sleep in my pavilion's antechamber.\n\n\"No, no,\" I objected. \"You have a tent. Avanna's tent is practically blocking my door. I'll be fine.\"\n\n\"And if someone decided to cut through the side of yours in the night, what use would I be then?\" he growled, setting up his bedroll across the flap that led to my sleeping area. \"As your bodyguard, I must be nearby if I'm going to be any help, not two tents over and too far to hear you.\"\n\nChastened, I retired, sinking down onto my travel mattress in full armour, one dagger still strapped to my arm, and another under my pillow. I felt ridiculous. I could hear Loghain shifting, settling in to his bedroll, and eventually the sounds of the camp died off, but despite the quiet, I couldn't sleep.\n\nI hadn't slept alone in months, and the conspicuous empty space in my bedroll felt like it was taunting me; my armour dug in to me in places, and after months in Denerim and at Vigil's Keep, I wasn't used to it anymore. Someone across the camp was snoring loud enough to wake the dead, and Loghain's steady breathing on the other side of a mere curtain was distracting. I was exhausted -- my exertions the night before with Alistair had assured that -- but nothing I did seemed to work. I started counting sheep, and somewhere in the thousands, I finally drifted off.\n\nI woke the entire camp screaming, after a particularly bad darkspawn nightmare; I hadn't had many since the Archdemon had died, but they weren't completely gone. Usually Alistair woke with me and soothed me back to sleep without much effort, but now I was alone and surrounded by strangers. Loghain came bursting into my sleeping chamber, sword drawn; he gave me a very strange look when I assured him it was just a dream, but he let it drop, going out to calm the rest of the camp who'd also come running.\n\nI was more tired the next night, after such broken sleep; I slept heavily, and felt much better when I woke. The third and fourth nights were also quiet. The fifth night, the last night before Dougal would leave us and we would head into the old mining tunnels leading to Soldier's Keep, I woke in the middle of the night to the sound of a thump, followed by a muffled shout and some grunting right outside my tent.\n\nI jumped up and palmed my daggers, trying to call out through a throat suddenly dry with fear; a moment later I was saved from my own fright by Loghain calling out.\n\n\"Your Highness? Are you alright?\"\n\n\"What's going on, Loghain?\" I replied hoarsely.\n\n\"Found someone sneaking around the pavilion,\" he informed me. \"It's safe.\"\n\nI opened the tent flap, daggers still in hand; the older man nodded approvingly at me, before stepping aside so I could see what he'd found. On the ground at his feet knelt one of my soldiers, half-dressed and, judging by the smell wafting off of him, more than a little bit inebriated. Loghain took a handful of his dark hair to tilt his head back so I could see his face by the dim light of the campfire.\n\n\"Name's Clem, my Lady,\" Loghain helpfully supplied. We had drawn a crowd, a handful of the other soldiers watching in apparent disgust.\n\n\"Alright Clem, what were you doing prowling outside my pavilion?\"\n\n\"Wasn't!\" he objected drunkenly.\n\n\"The fact that you're here on your knees would indicate otherwise,\" Loghain growled, shoving the man so he landed on his face in the dirt.\n\n\"Wasn't lookin' fer you, m'lady,\" he insisted again as he spat out some dirt. \"Was hopin' that 'Vanna mighta been interested...\"\n\nI glanced to the woman in question, whose face flushed visibly red even in the near-dark. \"Already told you I wasn't, nughumper!\" she hissed. Turning to me, she continued, \"I swear, I didn't...I wasn't...\"\n\nI interrupted her before she even figured out what she was trying to say. \"It's okay. Not your fault,\" I whispered. I turned to the assembled men, ignoring the blubbering drunken mess on the ground. \"All of you, hear this. There will be no fraternizing -- and no drinking -- while we're on the road, or when you're on duty. In your own time, when we're safe and you've got a night off, what you do is your own business and I don't care. But anyone on duty caught with their trousers down -- literally or figuratively -- will be punished.\n\n\"And just to be clear, right now: there is a zero tolerance policy for harassing unwilling partners. If she -- or he -- says no, and I hear about you whining, begging, blackmailing, or otherwise not respecting that answer, you'll find yourself awaiting trial for misconduct faster than you can say you're sorry. And rapists will lose a part of their anatomy they're probably rather fond of. You've been warned. Now unless it's your watch, get to bed.\"\n\nI turned to Avanna, once the rest of the spectators had cleared out. \"You alright?\"\n\n\"Just embarrassed. You didn't...\"\n\n\"Yes, I did have to. And it's not just for you.\" I patted her arm gently. \"Spread the word, would you?\"\n\nShe nodded. \"What do you want me to do with this?\" She gestured disgustedly to the man still lying in the dirt, now snoring noisily.\n\n\"Leave him until morning, then send him on his way. Some village lost their idiot; hopefully he can find his way back there.\"\n\nShe snorted a laugh. \"Working for you is going to be interesting, I think. Can I at least move him over there? We'll never get to sleep through that snoring.\"\n\nI grinned. \"Be my guest.\"\n\nWith the help of another soldier, Avanna dragged the unfortunate Clem away from my tent flap, and I finally ducked back into the tent, Loghain on my heels.\n\n\"Sorry I woke you for that,\" he muttered.\n\n\"You kidding? Good job, bodyguard. I didn't hear anything until you had him down.\" I shook my head. \"Goodnight, Loghain.\"\n\nIn the morning, a dejected and very embarrassed Clem set off back towards Denerim while the rest of us bid goodbye to Dougal. He hugged me, clasped forearms with Loghain, and headed out alone. I knew he was capable of looking after himself, but still I worried. He promised to send a message to the Vigil when he arrived in Jader.\n\nWith a sigh, I turned and looked at the tunnel entrance at the base of Soldier's Peak. There was only one way in, though I recalled the tunnels branching impressively inside; I hoped Faren had succeeded with effectively marking the path, or we were going to be in trouble. I nodded to Avanna, who started shouting orders; a handful of soldiers pulled out torches and lit them, and then one by one they filed into the narrow tunnel.\n\nI spent one more minute watching Dougal's back as he rode away; he looked back and winked at me, and, smiling, I ducked through the entrance.\n\nOnly to stop, awed. The torches were rather superfluous; evidently Faren had gotten his hands on a bunch of the arcane lamps from Soldier's Peak, and had lit the way through the tunnels almost as bright as day. I stepped up to one of the lamps, inspecting it; he'd cleverly inset the small orbs into holes in the walls, clearly lighting the correct path.\n\nLoghain waited for me just inside the entrance, an almost-smile on his usually reserved face. \"You are being welcomed home, it seems, my Lady.\"\n\nI grinned and strode to the front of the group, leading them to my new home. There were multiple branches from the main tunnel, many of them dark - a couple were dimly lit, but it was never unclear which way we were to go. The few steep places even had railings embedded into the wall so no one would fall. The tunnels were all wide and tall enough to lead the horses, though riding would have been out of the question; Loghain led his horse and mine, and one of the soldiers led the two mules carrying our supplies.\n\nThere were guards in the tunnels periodically, who saluted respectfully as we passed but otherwise left us alone.",
        "With the tunnels open to the sky in several places, it grew colder as we climbed, and we paused to don layers as the day wore on; it was late afternoon when we finally exited the tunnels into the frigid, snowy courtyard of the keep. I grinned to myself at the gasps and slack-jawed expressions as Loghain and the soldiers saw Soldier's Keep for the first time. I looked over the area with pride; the building truly was impressive -- massive, built into the mountain, with soaring towers connected by high, open walkways. I couldn't even begin to guess how many rooms it held, how many people it could house, not to mention what other things might be found in long-abandoned storage rooms and towers. As much as I wasn't thrilled with being there without my family, I had to admit I was looking forward to exploring.\n\nThere were some new developments in the courtyard: a sparring ring had been set up, along with archery targets on the far side; a small barn and fenced area for horses was set against one wall. A full smithy sat opposite -- small, but completely roofed, with smoke pouring out of two large chimneys. There were some ruined buildings I hadn't really noticed before -- whether they were meant to be barracks, a barn, or something else was no longer obvious -- but they were halfway to being disassembled, stacks of wood -- some obviously rotten, and some potentially useful -- dotted around the courtyard.\n\nWe were met, while everyone was still gawking, by Levi himself, accompanied by almost all of the soldiers assigned to the Peak, plus Faren, Bel, and Jowan. A servant rushed up to take the horses' reins and lead them away. The soldiers hustled into some sort of formation, and at an unintelligible shout from Ser Mhairi, they all saluted formally; those who'd accompanied me from Denerim also snapped to attention behind me, returning the salute. Surprised, I stammered, looking between an amused Faren and the female knight. Seeming to take that as acknowledgement enough, she shouted 'At ease!' and the soldiers dropped their arms, shifting to a more comfortable, but still formal stance.\n\nI approached Levi who, if he had any opinion on the soldiers' display, showed no indication of it in his expression.\n\n\"Your Highness!\" he greeted me, eyes crinkling with amusement at my grimace.\n\nNot waiting for my response, Faren grabbed me in a hug. \"Am I glad to see you! It's really boring around here.\"\n\nBel shot him a dirty look, and Jowan just sighed. I laughed and turned to Levi.\n\n\"It's good to see you again, Levi. And it's still just Sierra, okay?\" He nodded reluctantly, and I smiled. Dropping my voice to a whisper, I leaned in so the soldiers waiting beside us couldn't hear. \"Now what do I do?\"\n\n\"Just say something to the group and then tell them 'as you were',\" Loghain replied.\n\nI turned awkwardly to the ranks of soldiers, nervous at the unexpected speech.\n\n\"Um, thank you all for, uh, being here. I look forward to working with you, and, uh, getting to know each of you better. Ser Mhairi, if you can get the newcomers settled in and then come find me?\" The knight nodded. \"Right, then, as you were!\"\n\nThe soldiers fell out of formation, and Mhairi began shouting orders. Avanna joined her, and the two were soon herding the entire group towards the Keep. I watched them go, bemused, while Loghain nodded in apparent approval beside me.\n\nI finally got to greet Bel and Jowan, and Levi gestured towards the Keep. \"Shall we go inside? I've got the braziers burning for warmth, and your quarters are ready, my Lady.\"\n\nI followed Levi as he pointed out the improvements I'd already noted. \"My brother is running the smithy, if that's alright with you; he's already got a start on weapons and armour for the soldiers to choose from. And we've got workmen starting to tear down those old barracks. You can let me know what you'd like built there once they're done. We've got patrols in the mines, lookouts on the catwalk, and guards on the doors. We've cleared enough rooms for the soldiers you brought with you and then some. Got a cook and some helpers, a handful of maids, stable-hands, and the like in the servants' quarters.\"\n\nHe turned to me, seeing my overwhelmed, tired expression. \"Beg your pardon, my Lady. You must all be exhausted. Why don't I show you to your quarters and you can clean up while I get dinner arranged?\"\n\nI nodded. \"I'd appreciate that. Please invite Ser Mhairi and Lieutenant Avanna to join us for our meal? Then we can all talk while we eat.\" "
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-131-1"
}