{
    "title": "Blurring the Lines",
    "pages": [
        "It was around 11pm on a Friday night when I received the first text message from Kat. I had only gotten home from work less than an hour ago and my mind was still consumed by the world of schedules, order forms, and phone calls. Kat messaging me at such a time of night was peculiar. Usually we only exchanged calls or texts during normal business hours and her one line, \"Are you busy?\" text had me wondering if something was up.\n\n\"Just got home from work. What's going on?\" was the most sensible reply that popped into my head and onto my phone screen.\n\nImmediately the iMessage icon indicated the message was read and a response was on its way. \"I went out for some drinks and now I'm drunk and horny. Can I come over?\"\n\nKat was known for being blunt and stating matter of factly what was on her mind, but still this seemed incredibly odd. In the nearly two years that we'd known each other, she's never randomly texted me looking for a hookup. Before I had time to type a response, another message popped up on my screen.\n\n\"This wouldn't be like our usual arrangement. I'm just a little drunk, I want some dick and I'm 10 minutes from your house.\"\n\n\"I'll leave the front door unlocked. I have to take a shower. Just let yourself in,\" I texted in reply before stripping and heading for the bathroom.\n\nThis would probably be a good point in the story to explain to you that Kat is an escort whom I had been seeing semi-frequently for the entirety of our relationship. Now, I know prostitution and \"escorting\" is looked at with all kinds of negative judgment for reasons ranging from legitimate concerns over human trafficking down to the idea simply being offensive to those with delicate sensibilities, but allow me to provide some background on my decision to indulge into the offerings of the world's oldest profession.\n\nThe first reason, and biggest catalyst as to why I initially decided to pay for pussy was simply the convenience. I work 70-80 hour weeks most of the time which isn't the type of lifestyle that lends itself to meeting a nice girl and settling down. In fact, it even makes finding enough free time to get out of the house, go to a bar, and hope for a random pick up pretty difficult. Yet, the stress of a demanding work schedule has done nothing to rid me of the same physical urges everyone else has. Turning sex simply into a business transaction between two consenting adults for an agreed upon fee to be exchanged at an agreed upon date and location alleviates those physical urges without the hassle and petty mind games that dating presents. All I have to do is make a phone call/text or two, put a stack of cash into a envelope as a \"donation\" for a woman's time, and I get exactly what every other human being who has ever walked this earth wants: sexual gratification.\n\nOf course, I mentioned human trafficking being a legitimate concern and considering I'm simply a human being with physical needs and not a complete lowlife scumbag devoid of a conscience, I made sure to do the appropriate background work. I just wanted to get laid, not help fund the suffering of others. That's how I came across Kat's fully independently-operated website.\n\nThis brings me to my second reason for making this decision. Kat is physically stunning. She's slender and stands about 5'4. Her fiery red hair has always been a favorite of mine and her piercing green eyes are honestly the most captivating thing about her. She possesses an immaculate figure which she works tirelessly to maintain and her shapely ass and perfectly formed tear drop breasts give her feminine curves that drive me absolutely insane. Physical attraction is obviously going to be high on the priority list of reasons for paying for sex, but the reason why I kept going back to her are much more involved.\n\nWhich brings me to my third reason for seeing Kat roughly once a month over the course of the last two or so years. She's incredibly good at her job. The first time I paid to visit her may have been because I simply needed the release provided by getting my dick wet, but she kept me coming back for more because she's punctual, charming, honest, and has an incredibly open and down to earth personality. She's a physically immaculate woman who doesn't suffer from any of the trappings of narcissism that beautiful people often exhibit. \n\nOh, and I forgot to mention, she's a fucking sexual force of nature who has never even once denied me the opportunity to fulfill one of my sexual fantasies. All of the kinky role play scenarios, outfit requests, and urges to act upon sexual dominance and submission were granted after laying some initial basic ground rules. The number of items on my sexual bucket list she helped me cross off are too many to recall, but I'll provide a few brief examples.\n\nIts probably fair to assume that at some point or another, every adult in the 21st century has watched porn on the internet. Its also not a stretch to imagine many of those same people have also had fantasies of fucking a pornstar. To have freely uninhibited sex with a partner who really, really knows how to fuck your brains out and has the stamina to pull it off. I tried acting this fantasy out with a \"nice\" girl I was dating once, and bless her heart, she honestly wanted to make it happen but after a few awkward attempts at being the sexual demon I was hoping for, I decided to put that fantasy on the back burner for a while. \n\nKat agreed to indulge me in my pornstar experience request by greeting me at the door in 6 inch heels, fishnet stockings, tiny skintight booty shorts that didn't even completely cover her ass cheeks, and showing enough of her ample cleavage to get me instantly drooling. That was followed by a striptease, a sloppy deepthroat blowjob, and fucking her in every hole in every room in her house before cumming all over her face and tits. I was even allowed to film parts of it so I could relive the memory later.\n\nAnother time, I explained to her a fantasy I had about wanting to sexually dominate her complete with hair pulling, ass slapping degradation. We agreed on basic limits and a safe word and then I spent an afternoon fucking her hard enough to put her through a brick wall. We were a heaving pile of saliva, cum, lube, and smeared make up before my dick finally decided three times was enough.\n\nAbout a week later she contacted me to suggest that turnabout was fair play and the next time I saw her, I was handcuffed and blindfolded to my bed while she poured hot wax all over my chest and then rode my face and dick like I was her own personal human sybian. I'm pretty sure a handful or two of my hair was ripped out that night and she damn near broke my nose and sexually waterboarded me when she came to a screaming climax while grinding her perfect, dripping wet pussy against my face.\n\nFor long stretches of time, I wasn't even fucking anyone else. It wasn't because I held some weird concept about being monogamous with a prostitute, but because she satisfied all the sexual needs I had so thoroughly that fucking \"normal\" women was just kinda boring and I didn't have the time to build enough of an emotional connection with someone to make the more vanilla sex intimate and fulfilling.\n\nSuffice to say, Kat definitely checked all the boxes on the list of things I wanted. Not only that, she also proved to just be a damn fun person to be around. Its not always just dicks, pussies, and rough sex every time we get together though our sexual chemistry is undeniable. She's a legitimately interesting human being. She's flirty and a great conversationalist. We've even gone on real dinner dates and acted like normal human beings before our night descended into its usual sexual depravity. She made it a point to remember my birthday and bought me tickets to see my favorite soccer team the weekend of my birthday. I returned the favor by using my contacts in the wine industry to track down her favorite bottle of burgundy that's nearly impossible to find on the American side of the Atlantic and presented it to her with a rare St-Florentin cheese and French bread I baked myself when her birthday came around. While it certainly started as a relationship based upon sex for money, over the last two years we've become two people with real respect and affection for one another. \n\nWith that said, we don't contact each other to randomly hangout. Discretion plays an important role in our relationship for reasons which should be obvious. Our arrangements are scheduled days in advance to make sure our itineraries match up. We don't get drunk and send each other hook up requests in the middle of the night. Thats why her text was so random and her intentions confusing. She'd never treated me like some dude she'd met on Tinder. We were always just business contacts. It just so happens that business involved getting to intimately know the most private areas of each others anatomies.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nI was just getting out of the shower and toweling off when I heard the front door open. The telltale sounds of high heels clicking across my hardwood floors indicated exactly who it was. Then I heard her voice.\n\n\"Aidan?\"\n\n\"In the bathroom.\"\n\nThe clicking sounds of footsteps getting closer ended as she came into view at the edge of the tile bathroom floor. She looked fantastic dressed up for a night on the town in a black dress that perfectly displayed and accentuated the curves of her body. Her makeup, as usual, was minimal and her sexy open toed high heels revealed feet which must have been recently treated to a pedicure. However, there was an odd look on her face. There wasn't the beaming, light up the room smile. She wasn't jumping into my arms to greet me with the customary hug and kiss on the cheek like she always does. She looked, well, vulnerable. Something I had never seen her express before.\n\nThis caught me off guard enough to have to ask, \"Are you ok?\" with an actual sense of concern.\n\n\"Yea,\" she replied somewhat quietly while not looking directly at me. \"I just wanted to see you. I know I shouldn't text you like that...\" as her voice trailed off.\n\nI stepped closer to her and as I reached out to put my arm around her, still covered only by a towel, she slumped into my chest and let out a deep breath. \"I just need a friend and I really want to get laid\" she continued, \"and you were the first person I thought of.\" I could smell the combination of wine on her breath and perfume on her skin as she looked up at me and half-stated, half requested, \"Don't be mad at me?\"\n\nNow, I've never been accused of being an overly sentimental or emotional guy (in fact, if I'm being perfectly honest, I can be kind of an ass sometimes), but seeing that face and those amazing emerald eyes look up at me and display the first truly vulnerable moment I've ever seen out of this woman, something just clicked in my head and a lot of lines between sex and emotion and business versus intimacy suddenly just got really blurry. In that moment, acting purely on impulse, I just leaned down and kissed her. Not an aggressive, animalistic kiss like we've shared before while trying to fuck the consciousness out of each other, but something tender that tried to show her that her moment of vulnerability wasn't being met with hostility.\n\nThats when the sexual chemistry started to kick into high gear and before my brain had a chance to object, my instincts told my arms to pick her up, press her against the bathroom wall, and our mouths were locked into a passionate embrace. \n\nAt some point, when I had to come up for air, my brain jump started itself into functioning properly for a split second and I looked at her long enough to ask, \"You sure this is what you want?\" She just stared at me for a brief moment with those captivating eyes and nodded at me. Thats all the encouragement I needed and hormones completely silenced logic in favor of the perfect physical specimen that was currently only inches and a cloth towel away from my increasingly hard cock.\n\nI carried her to the bedroom with her legs clasped around my back and her lips all over my neck. I wasn't sure of the full scope of the fallout from what I was about to do, but with a sexual goddess draped all over me, perspective and careful thought were no longer playing a role. \n\nI gently tossed her onto the bed and she went to immediately remove her panties from underneath her tiny dress that had ridden up her legs and was bunched around her hips. When she turned to present her back to me and pull her hair to the side revealing the zipper on the back of her dress, I stated bluntly, \"Leave the dress on. I like it.\"\n\nShe partially turned back around to face me with an incredulous side-eye look and shot back, \"You have no idea how much this dress cost. Unzip me.\"\n\nAnd with that, she stood to let the dress fall to the floor before picking it up and spreading it across the dresser. I may have been thinking solely with my dick, but it was clear she still had enough sense to worry about her dry cleaning bill. \n\nWith her back turned to me, I noticed one of my favorite accessories that she often uses during our encounters, a small heart-shaped gem plug peaking out from between her cheeks. Everything about this woman turned me on and as I walked up behind her to grab her ass and run my finger across the plug, I growled into her ear, \"You dirty girl, when did you put this in?\"\n\nShe looked over her shoulder to reveal a mischievous smile and said \"Before I started driving over here. I know how much you love it,\" and then reached back to give my dick a squeeze as it pressed against her back. She then pushed her palm flat against my chest and sent me back towards the bed, her sexy fuck me eyes glaring at me the entire time. I took a seat at the edge of the bed while she laid down a pillow and positioned herself between my knees. Without losing eye contact, she grabbed the shaft of my dick and enveloped the head with her mouth. She got to work immediately with her expert technique of slowly stroking with the firm grip of her hand while rhythmically bobbing her head up and down and swirling her tongue across the sensitive underside.\n\nI pulled her hair away from her face and held it behind her head as she continued to work my dick with expert precision, still never breaking eye contact. Every time she sucks my dick, she always makes those sexy slurping sounds and emits these soft, little purring noises from the back of her throat that send vibrations down the shaft. If she really wanted to, she could make me cum in a couple of minutes doing this and as a matter of fact, has done exactly that on several occasions previously.\n\nI had other plans though and didn't want to cum the first time too quickly so I made her stand up, get on the bed with me, and pulled her on top of me. Normally, the old 69 position isn't really a favorite of mine. In fact, I think its kinda lame and more of a punchline to a joke for adolescent teens than something adults actually do in the bedroom, but I knew if I could play with her pussy and that cute, little gem plug in her ass, I could effectively distract her enough to throw off her rhythm and not make this blowjob come to an untimely early end. The thing is I'm absolutely obsessed with this woman's pussy and ass. She's incredibly responsive to stimulation when she's turned on and by simply rubbing my thumb gently across the plug while pushing two fingers inside of her, she was already squirming on top of me and gasping in pleasure around my dick.\n\nWithin a few minutes, her pussy was soaking wet and all I could think about was fucking her. A quick addition of some latex and a position change later, and Kat was looking over her shoulder at me, presenting her absolutely perfect pussy and gem-filled ass while begging me to fuck her. This is my favorite position to take her because she is the absolute opposite of passive and within a few strokes, she was already throwing her ass back at me and as usual, the hottest filth I've ever heard was pouring out of her mouth.\n\n\"God, I love your cock.\" \n\n\"Smack my ass and fuck me.\"\n\n\"Pound me. Pound my pussy like you fucking own it.\"\n\nThis sort of verbal assault just doesn't ever stop with her. Between the constant commands to fuck her harder and throaty moans of pleasure, its the sexiest thing I've ever heard while fucking a woman. \n\nHer pussy already feels amazing, even with the latex, but one of the main reasons why I love it when she uses a plug is that it creates even more pressure on my dick and makes the kegel-toned muscles of her pussy even more potent. The way she pushes her ass back on my dick and then grinds into me while contracting her muscles makes it feel like she's trying to milk the cum out of my cock. A few minutes of this is usually too much to handle if I haven't cum already and this time was no different. Her blowjob skills and sexy hips and ass pushing their way back into me, swallowing my entire cock whole into her exquisite pussy, made me shoot my first load into the condom with a few final, powerful thrusts into her. I collapsed onto the bed beside her and took a few moments to catch my breath while she stared at me with that huge smile that I'm accustomed to seeing.\n\n\"Its back. You're smiling again. You feeling better?\" I asked while running my hands all over her perfect body.\n\n\"Yea, I'm fine. Sometimes I just need someone who makes me feel better when I need it, just like I do for others, you know?\"\n\n\"Well come here, I have something else that might make you feel better,\" I said as I grabbed her and pulled her petite frame onto me. \n\nKat might not ever admit it for sake the of my ego and my kinky desires which lead to her direct financial benefit, but of all the crazy, sexually adventurous things we've done together, there's nothing that gets her off like a mouth on her pussy and that's exactly what I planned on doing while my dick recharged. We positioned ourselves so she could steady herself using the headboard while she lowered her pussy onto my face. Learning from past mistakes, I always keep one arm with a firm grip around her hips and thighs so her somewhat violent grinding motions when she cums don't shove my nose into my forehead.\n\nShe was still oozing her delicious nectar and, like always, she smelled and tasted like ambrosia. Everything about this woman, from her perfectly groomed hair on down to her pedicured feet, was meticulously maintained and her neatly trimmed pussy was no different. I sucked, fingered and massaged every portion of her sensitive mound and delicate ass until her thighs were quivering around my head and I was forced to keep a vice grip on her pelvis to prevent my death by pussy-related decapitation. With one last gasping inhale and a shrieking exhale, she forcefully removed herself from my clutches, falling backwards onto the bed. Her thighs and stomach twitched involuntarily in the sexiest series of muscle spasms.\n\nI stood up and headed for a glass a water while she lay on the bed catching her breath. I returned to see her staring at me with heavy-lidded eyes and stood beside the bed offering her the glass which she took gulps from before setting it on the bedside table. She leaned back against the mattress again and without hesitation reached for my semi-hard dick as I stood over her. Once again, she worked her magical combination of firm gripping hand and expert level oral skills to bring me to full attention. I reached down to fondle her still wet pussy and from the throaty vibrations cascading over my dick, it was easy to tell she had sufficiently recovered enough for the next round.\n\nI scooped her up into my arms momentarily and then tossed her back onto the bed into a new position on her back with her ass pulled to the edge of the bed. My mattress is perfectly raised to the appropriate height for me for a reason and after pulling open her sexy, shapely, tapered legs, I lined up my hard cock with her perfectly manicured pussy and began to thrust my way back inside her. Her legs pushed against my chest for leverage as she gently lifted her ass up to accommodate my girth inside her tiny, squeezing pussy and as I started to fuck her, she matched my rhythm by undulating her hips up and down to maximize friction. Her pussy was so warm and wet and the movement of her hips drove me crazy. I grabbed her thighs and began pulling her body towards me to max my thrusts with my hips. One of her hands grabbed one of her bouncing breasts and the other made its way between her legs as she rubbed her clit while I pounded my cock inside her.",
        "By this time, Kat was writhing all over the bed and she was practically shrieking. No longer was she moving her hips to match my rhythm. She was simply playing with her clit and gripping the sheets while accepting the deep, hard fucking.\n\n\"Fuck me....oh...god....FUCK....ME...\" was all she could spit out between gasps and groans. The muscle spasms in her stomach and legs started next as the orgasm washed over her body. The pale, freckled skin on her face and chest went flush and her hand reached out and put a death grip on my wrist as I fucked my cock into her quivering pussy as deeply as it would go while we both rode out her body convulsions. One final massive contraction of her pussy pushed my cock out of her completely and she recoiled onto the bed to catch her breath and let the last of the muscle spasms fade away. I let her lay there a moment to recover but I was nowhere near close to being done with her. \n\nI made my way into the bathroom to grab a bottle of lube and a small towel before making my way back to the bedroom. I watched her watch me as I made my way back to the bed. Her eyes were locked onto my hard dick bouncing in front of me, leading me like a divining rod back to her. She noticed what I had in my hands and a devious smile swept across her face.\n\n\"I know what you want,\" she said in a playful, sing song voice. She rolled over onto her knees and presented her gorgeous heart-shaped ass to me. Her slightly swollen pussy was still glistening with her juices and the cute little gem plug sparkled in the sparse light as it poked out from between her cheeks.\n\nI kneeled down beside the bed with my face at the perfect height mere inches from her most intimate areas and went to work on removing the plug. She placed her head on the sheets and looked back at me and I slowly began tugging her plug. My focus went back and forth between watching the tiny muscular ring of her asshole stretch open and the intense look on her face. Her hand reached between her legs again to play with her pussy. At first there a strong resistance, the muscles in her ass not wanting to immediately open and relinquish the plug but after a deep, relaxing breath from Kat, the plug popped out in one smooth motion into my hand and I watched as her tiny ass snapped shut again having given up the toy to me.\n\nI placed the plug on the towel beside her and went to work with my mouth. Kat and I had an agreement. I could have her ass almost any time I wanted, but my tongue always had to precede my cock. It was a small compromise as far as I was concerned considering the huge reward I'd get in return. My tongue flicked over her tight little rosebud and I used two fingers inside her pussy, searching for her g-spot to get her prepared for the ass fucking I was about to give her. She cooperated by continuing to play with her clit and I applied liberal amounts of saliva to her smallest and most delicate of holes. It only took a minute or two of licking her sexy little asshole before she began begging.\n\n\"Fuck me. Please. I want your cock now. Fuck my ass.\"\n\nI've never heard a sexier woman ever make a sexier request. My dick was hard enough to cut glass listening to her plead for me to sodomize her.\n\nI stood up and grabbed the lube, applying ample amounts to both my cock and the tip of my finger which I used to grease up her entrance. I stared at her momentarily to enjoy the sight; she lay face down on the sheets, her flowing red locks splayed all over the bed, her slender back and hips glistening in a light sheen of sweat, her ass in the air, lubed and ready for my cock. I reached for another condom when her hand reached out to grab me.\n\n\"Don't. I want to feel you.\"\n\nI must've looked at her with the dumbest face I've ever made because a smile quickly crossed her face and she let out a playful giggle while my brain tried to find enough blood to function properly and process what she had just said to me. For obvious reasons, this would be the first time she and I would ever have an encounter without using protection and under normal circumstances, my logical mind would've won and I would've put a condom on anyway. However, nothing about this was normal circumstances. From her random text inviting herself over to my house in the middle of the night to her display of vulnerability in my bathroom earlier and the fact that I was trying to make important decisions with a dick that was harder than granite in front of sexual goddess who was asking me to fuck her in the ass, nothing about this was normal.\n\nSo, of course, I listened to her and seconds later my bare cock was pushing up against her well-lubed rear entrance. It wasn't the wisest decision I've ever made, but it certainly turned out to be one of my best. The feeling of her soft flesh against the sensitive head of my cock as it slowly crept into the tightly guarded entrance of her ass was amazing. Her breathing was deep and measured as she tried to relax. I was in absolute ecstasy as the vice grip of her ass closed around my cock head. It felt like she trying to choke the life out of my dick and I loved every second of it. It was always slow going at first when I fucked her ass and this time was no different. Once I got the head in, I let her take over. Both of my hands were on her hips and her hand gripped one of my wrists while she slowly worked her hips back towards me. I loved watching her back into me, slowly impaling herself on my cock as she gasped and groaned at the intrusion. My dick looked amazing between the heart-shaped cheeks of her ass and felt even better.\n\nWith about half my cock buried in her asshole, I felt her fingers, which were furiously rubbing her clit, glance across my balls. It caught me off guard causing my body to stiffen and my cock to flex and swell reflexively. The sudden movement made her let out a brief yelp and reminded me how sensitive this entire process was for her. I added a bit more lube and she let out one more deep breath and I could suddenly feel the clenching grip of muscles relax enough for me to move again. After another minute of slowly and gently inching my way inside the muscular grasp of her ass, my hips met her ass cheeks and I was fully buried inside her. \n\nKat inhaled sharply and half-shouted, \"Fuck, thats deep!\" as I bottomed out between her cheeks. I held still for a few moments and just enjoyed the firm, pulsing grip of her ass. Her shoulders gently rose and fell against the bed while she steadied her breathing and before long she was rocking her entire body back and forth, fucking herself with an inch or two of my cock before pushing her ass back against my hips again. I started to match her rhythm and soon I fucking her ass freely with about half my cock. She felt absolutely amazing. She may have felt more relaxed and easy, but the muscles in her ass still gripped me with the muscular strength of a warm, wet fist. She was wrapped so tightly around me and my cock was so sensitive, I could feel the pulse of her blood flowing through her body on my dick.\n\nOnce she had finally opened up enough to accept my full length on each stroke, the filth started pouring from her mouth again.\n\n\"Yes, fuck my ass! Make me fucking take it. Pound me like a fucking whore!\"\n\nThis was why after two plus years, I still kept coming back to Kat for more. She didn't just take a pounding, she demanded one and enjoyed every moment of it.\n\nI impaled her tiny pink asshole with long, deep strokes, bottoming out with each stroke. Her sphincter wrapped tightly around my dick felt a massage every time I pushed inside her. Kat kept talking shit through gritted teeth encouraging me to continue to fuck her harder. I reached forward and grabbed a handful of her hair at the base of her head and swatted my other hand across her ass cheek, leaving a red handprint behind.\n\n\"Yes, fuck me like you fucking mean it!\"\n\nI'm not sure my dick has ever been harder before or since and I reamed her tiny asshole with every inch of it. To show her appreciation for the cock I was giving her, Kat began throwing her ass back at me. Deep, guttural groans came out of her mouth when she got too dick drunk to form words and pretty soon, I could feel the pressure start to build in my balls. I gave her ass another hard smack while I tugged on her hair and let her know I was going to cum in her ass. As usual, she gave the perfect response, practically screaming back at me, \"Yes! Fill me up! Cum in my fucking ass!\"\n\nAnd with that, my entire body lurched forward, pushing her body into a prone position on the bed. With a series of short, deep strokes, I fucked her entire body into the mattress while I unleashed a torrent of cum in the tight clutches of her bowels. I pressed my body into hers and bit into the back of her neck as the last drops of cum spurted their way out of my cock.\n\nIt took me several moments to regain my composure before I rolled off of Kat and she sucked in air through her teeth one last time as I removed my cock from inside her. We both got up to clean ourselves in the bathroom before falling back into bed together and curling up with each other before drifting off to sleep. It was another barrier we crossed and another first for us that night. We had \"slept\" together numerous times, shared the same bed on a regular basis, but we had never before actually fallen asleep with each other.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next morning I woke up to an empty bed. I looked at my dresser and the little black dress was gone. The open toed high heels were nowhere to be found. The only thing out of place in my room was an envelope sitting on the bedside stand. I picked it up and looked inside to find s stack of $100 bills and a piece of paper. The piece of paper was a handwritten note from Kat explaining that last night was the final time we would be seeing each other. She had gone out for a drink to work up the courage to come see me one last time. The letter detailed how she had always wanted to maintain a professional relationship with her clients and that her emotions had led her to be unable to continue viewing me simply as a client and treating me with the requisite amount of professionalism. The money was reimbursement for our previous meeting which she had sworn to herself she wasn't going to take since she had already made up her mind to stop seeing me. Her phone number and email were both going to change and she asked that I respect her wishes not to contact her anymore. She had finally let her guard down in front of me and crossed several lines of professionalism as a way of getting a taste of the intimacy that she rarely was allowed in her line of work.\n\nAnd that was the final time I ever saw Kat. "
    ],
    "authorname": "tbs04",
    "tags": [
        "anal",
        "rough",
        "escort"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/blurring-the-lines"
}