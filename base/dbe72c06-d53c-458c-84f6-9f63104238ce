{
    "title": "Harem Sisters Pt. 18",
    "pages": [
        "Authors note\n\nI'll keep this note short and sweet.\n\nApologies for the lateness of this submission, I've had quite a bit going on IRL.\n\nThis is the end of the current story arc for Harem Sisters, but it is not the end of Jason's story. He will return with his all star cast of ladies for more smutty adventures, but for now I'm focussing on Lust at first sight, along with a few other Lit only stories and my paid work.\n\nI'd like to thank each and every one of my readers for supporting me. This has been a crazy couple of years.\n\nP.S I haven't forgotten about Abi.\n\nPeace out. Stay awesome.\n\nChapter 52\n\nI awoke the next morning in an empty bed, the sheets covering me from the waist down. I didn't remember getting under the covers last night, only passing out shortly after filling my mother with a huge load. At some point in the night--or maybe the morning--she must have woken and covered me.\n\nThe thought of my mother's naked body curled up beside me in the night had me hard in seconds, and I wished she'd been there when I'd woken up. I could have gone for another round with the sexy, mature woman.\n\nIt felt good to finally accept the attraction I felt to my mother. I knew it was wrong, but I was all about doing what was wrong these days. The fact that she never carried me, nor that she gave birth to me, changed anything. She wasn't a great mother to me when I was growing up, but she was all I had. Plus, she had more than made up for it since I had come home.\n\nWe had some rough patches. But I loved her, and I was finally okay with giving her all of me.\n\nThe door to the apartment's master bedroom creaked open slowly, and I was greeted with the sight of my mother slipping into the room quietly. She wore a simple white and silver gown that she hadn't bothered to tie closed, giving me a tantalising view of her tanned, naked flesh beneath. In many ways, Tori was a perfect duplicate of our mother. They were a similar height with the same fantastic hourglass figure, full breasts, and tight ass. Only my mother had the softness around her hips and stomach that came from childbirth.\n\nHer breasts were also a touch larger than my sisters. Something I enjoyed quite a lot.\n\n\"Good morning, dear,\" my mother said, perching herself on my side of the bed and handing me a mug of coffee.\n\n\"Good morning,\" I smiled, taking the coffee. \"I wondered where you were.\"\n\n\"You usually wake up around this time, so I thought I'd make you a coffee,\" she said, taking a sip from her own mug.\n\n\"I appreciate it,\" I smiled. \"But there was something else I hoped to have first thing this morning.\"\n\n\"Do tell,\" my mother smiled.\n\nI took the mug from my mother's hand and placed it on the nightstand, along with mine. Then I wrapped an arm around her waist, pulling her against me. My mother gasped, then let out a soft giggle before our lips met. Our tongues danced together as my hands all but ripped her flimsy gown from her body. As expected, she was naked beneath, and I let my hands slide down her back bare to cup her naked cheeks. She gasped as I groped her ass, and I felt her hips began to gyrate against my obvious flagpole erection beneath the sheets.\n\n\"I think I'm going to have to change the sheets today,\" my mother said.\n\nI looked down to the spot where she had been grinding herself against my cock and noticed a sizable wet patch in the white sheets. My dick pulsed at the fact that this sex-goddess of a woman was so aroused so quickly by me. I needed to feel her again. I needed to solidify my claim to this woman. I had many women as my lovers now, and I should have felt content with what I had, or at least a little shame for being in such a position. Spreading my love and affection to so many amazing women.\n\nBut they had made it clear that they felt no jealousy over one another.\n\n\"Not this time,\" my mother whispered when I started to shift our position.\n\n\"What do you mean?\" I asked, worried I'd stepped over a line I didn't know existed.\n\nShe simply smiled, bit her bottom lip in a way that made me think of Tori, and pushed me against the soft mattress. The bedsheet was gone next, flung away with a second thought, and my cock sprang free to slap against my stomach before pointing upwards, almost as if it were trying to get closer to my mother.\n\n\"Just lay back and relax,\" my mother winked.\n\nThe woman who had raised me began kissing at my neck, down my chest, and running her hands across my stomach as she slowly sank lower down my body. Where her lips once pressed against my chest, her hands took over as I felt her tongue trail down my stomach. My cock twitched in anticipation, and I ran my hands through her thick, dark hair to pull it away from her face and was rewarded with her gorgeous brown eyes staring up at me as she pressed her cheek against the side of my erection.\n\n\"Let me take care you of, Jason,\" she said in a sultry tone filled with passion.\n\nMy mother ran her tongue up the length of my shaft, purposefully pulling away from the tip as she reached the apex of her travels before lowering herself once more. Her tongue danced across my balls and gliding over where my groin met my thighs. Pre-cum oozed from the tip of my ignored penis, dripping down the side of my shaft for my mother to eagerly lap up with her expert tongue. Still avoiding the tip of my raging erection.\n\nI had plenty of experience receiving blow jobs since returning home. All of my women were eager to please me with their mouths and not once shy away from taking me down their throats or receiving my load. But my mother seemed to have otherworldly skills that could give Lucy and Vicky a run for their money.\n\n\"Are you enjoying yourself?\" my mother asked.\n\n\"I think you know the answer to that already,\" I said, laughing softly.\n\nMy laugh was cut off as I felt the tip of my penis become engulfed in warmth. My mother's tongue worked along my glans as her hands simultaneously worked my shaft and fondled my balls, bringing me to climax in nearly record time.\n\nI felt my orgasm rush in like a tidal wave crashing against a stick fort. My mother must have also known because her lips locked around my tip with an air-tight seal as she gently massaged my balls and pumped my shaft, urging me on with her muffled moans.\n\nI opened my eyes and looked down at my mother--who was staring at me--and released my first load of the day into her mouth. Our eyes locked as I poured the contents of my balls into her waiting mouth for a full ten seconds. Once my mother was satisfied she had claimed all there was to have, she deepthroated me in one smooth motion, her tongue darting out as she reached the base to lick at my testicles.\n\nI simply lay back on her bed, breathing heavily as my head spun with the intensity of my morning orgasm. I was so out of it that I didn't even notice my mother had stopped working my tool with her mouth and hands and was now straddling my waist. It wasn't until I felt her impale herself on my still hard, slick cock that I was brought out of my near-sex coma.\n\n\"Mmmm,\" my mother moaned in pleasure as she gyrated her hips. \"That's my boy.\"\n\nMy hands went instinctively to her hips, my own bucking up as I tried to fuck her, but I had no leverage. Her hips rocked and rotated as she ground herself against me. I was usually in charge in bed--I definitely was last night--but right now, I was at my mother's mercy as she took control and rode me like a prized stallion.\n\n\"You have no idea how much I have wanted this,\" she said, breathing heavily. \"Every day since you came home, I wanted you, Jason.\"\n\n\"I'm sorry for treating you so badly,\" I said through my own groans of pleasure.\n\n\"Don't be sorry, my dear,\" my mother gasped loudly as her body started to shake.\n\nI'd fucked Tori more than enough times to recognise where she got her messy and visible orgasms from. My mother's body shook and trembled as I felt the welcoming wetness around my groin and thighs increase. She went on like that for about a minute before finally opening her eyes and giving me a satisfied smile.\n\n\"Even better the second time,\" she laughed softly.\n\n\"That was so hot,\" I said, running my hands along her thighs, over her hips, and up her stomach to cup her gorgeous breasts.\n\n\"As much as I'd love to continue riding this magic cock, we should stop for today,\" my mother said, lifting herself off my erection. My dick slipping free with a wet slap against my stomach.\n\nI was a little confused as to why she was stopping. Sure, I had gotten off already, and so had she, but I was easily ready to go for another two rounds at least. I was kind of hoping to solidify our new relationship with a morning of non-stop sex.\n\n\"Jason, my dear,\" my mother said, leaning down to kiss me. \"You have other women to satisfy. Get to it.\"\n\nI grinned and returned her kiss, picking up on her meaning immediately. Tori was most likely still in her bedroom--she always slept late--and more than likely stark naked. She had started sleeping in the nude after we had begun our incestual relationship.\n\n\"Go get her,\" my mother said, slapping me on the ass as I slipped from the bed.\n\nI strode from my mother's bedroom without a stitch of clothing, my painfully erect penis bobbing with each stride. It wasn't long ago that I would have been too afraid to walk around the apartment naked--especially on my way to see my sister--but this was a safe zone once again. Like it had been when I first come home.\n\nI would never have to worry about wearing clothes with only my women in the home. Just the thought of that made my cock pulse with excitement.\n\nOr maybe it was the prospect of finding Tori nearby.\n\nI chuckled at the term 'finding Tori,' which flashed a series of images of me searching for my sister, but I was wearing a badass leather jacket and driving an old black Mustang.\n\n'Hmm, weird,\" I said, stopping at the bottom of the stairs. \"Oh well, just keep swimming.\"\n\nI spied my sister as soon as I stepped foot into the open plan living area. Tori was in the kitchen, leaning against the counter with her back to me, presumably toying with her phone as usual. I was more than a little surprised to see Tori up and about already, especially fully dressed. Although, her outfit didn't leave much to the imagination.\n\nTori looked like she was about to go for a run or to the gym. She was dressed in a matching set of shorts and sports bra, and from where I stood, I had a fantastic view of her behind as her high-waisted shorts hugged her ass perfectly, leaving her lean, toned legs on display for my enjoyment. I was so caught up in checking out my little sister that I didn't even realise I was stroking myself slowly.\n\nI let my hand drop away from my manhood and crossed the distance between Tori and me. My bare feet making no sound as I crossed the tiled kitchen floor.\n\n\"Good morning, beautiful,\" I greeted my sister, grabbing her hips and pulling her against me.\n\n\"Jason!\" Tori giggled, then gasped as my cock slipped between her legs.\n\n\"You look amazing,\" I whispered in her ear as I groped her bountiful breasts.\n\n\"Oh shit,\" Tori gasped, squeezing her thighs together and rocking her hips against me. \"Jason...Vicky is getting changed. We're about to go for a run.\"\n\n\"She won't mind waiting,\" I said, pulling Tori's sports bran up to free her amazing breasts. \"She can watch or even join in if she wants.\"\n\nTori's mouth opened in reply, but no words came out as I rocked my hips and slid my cock along the length of her still-covered vagina. My hands were at her hips next, and in one smooth motion, I had her shorts pulled down her hips along with her underwear to reveal Tori's perfect little pussy. As usual with my sister, I could see she was incredibly aroused already. The tanned skin of her thighs glistened with the wet sheen of her lubrication, begging me to taste her.\n\nI dropped to my knees behind Tori and placed my hands on her ass cheeks, pulling them apart before pressing my mouth between her legs. Tori let out a sharp gasp as my tongue flicked out and ran along her moist labia. I felt her body shiver as I lapped at her pussy, studiously avoiding her clit as I teased her.\n\n\"Oh Jason, please fuck me,\" Tori moaned, laying herself flat against the kitchen counter as if that were the only thing keeping her upright.\n\n\"What's the magic word?\" I asked, wiping my face with my hand.\n\n\"Ple--\"\n\nBefore Tori could plead for me to fuck her once more, I dove back into her sweet entrance and doubled my efforts. I groped her ass with my hands as I pressed my face between her magical thighs. My tongue dove deep into her tunnel before I licked along the lips once more and attaching myself to her super-sensitive clit that had protruded from its little hood.\n\nTori let out a wail of pleasure as I attacked her clit with the ferocity of a magpie swooping a cyclist at the beginning of spring. Her legs shook, and I felt her pussy began to drip her fluids all over my face and dribble down my chin and neck. Tori had always been an incredibly messy lover, but I wouldn't have it any other way.\n\nAs usual with my sister, it only took me a minute or two to bring her to a climactic orgasm that would have woken the dead with her vocal moans and curse words that could make a sailor blush. There was a reason we rarely made love when our parents were home and before our mother gave her approval.\n\n\"I'll never get tired of watching you too.\"\n\nI rose to my feet and cupped Tori's dripping sex with one hand while her body shook and wiped my mouth with my other hand as I turned to see Vicky walking up to me. The buxom blonde wore a sky-blue tank-top over a dark-grey sports bra that matching her leggings. Her top barely covered anything with how low cut the sides were, giving me more than a sneak peek at her bronzed skin beneath.\n\n\"Good morning,\" I smiled at my sandy-haired lover.\n\nVicky stepped into my embrace, and own lips met with a sensual kiss. Our tongues danced together languidly as I groped her ample rump.\n\n\"Mmmm, you taste like Tori,\" Vicky purred, licking her full lips. \"You should do that more often.\"\n\n\"Noted,\" I chuckled.\n\nTori let out another soft moan, and it was then I realised I had been gently stroking at her warm, wet vagina as I made out with Vicky. Tori had just climaxed rather spectacularly, but I knew she needed and wanted more. And my cock was practically begging me to fuck her.\n\n\"Better finish her off,\" Vicky said, nodding to Tori, who was now gyrating her hips against my hand. \"Don't mind me. I'm happy to sit this one out and watch.\"\n\n\"You know you never have to ask to join in,\" I laughed, a laugh that was echoed by a moan from Tori as I slipped a finger inside her.\n\n\"Oh, I know,\" Vicky grinned. \"But I feel like watching. Just think of it as a live-action porno.\"\n\n\"I'll make sure I put on a good show for you,\" I winked.\n\n\"You better,\" Vicky poked her tongue out.\n\nWe kissed once more for a few minutes as Tori continues to fuck herself on my single finger inside her. Vicky may have said she wanted to just watch, but it didn't stop her from working my shaft with her expert hands, spreading my pre-cum all along the shaft of my cock and massaging my balls for me.\n\n\"Alright, now you're ready,\" she said a little breathlessly.\n\nI turned my attention back to Tori, who was now looking over her shoulder at me with lust-filled eyes. Tori's dark eyes darted between Vicky and me before biting her lip and wiggling her hips enticingly. I placed one hand on the small of Tori's back and guided my painfully hard dick to her waiting entrance. I slipped inside of my sister with little resistance, and we both let out a long, primal growl of pleasure as I rooted myself deep inside of her warm tunnel.\n\n\"So hot,\" Vicky whispered, more so to herself.\n\nI was already incredibly worked up due to the morning's events and knew it wouldn't take me too long to reach a climax. But I was going to make sure Tori hit the finish line first. This wasn't the first time I'd please multiple women in the same morning.\n\nIt was one of my favourite morning exercises.\n\nTori was far shorter than I was--making this position a little difficult--but we had, had plenty of practice together, especially in this position. I lifted Tori's right leg and rested it on one of the kitchen stools on either side of her. This gave me greater leverage and allowed me to get deeper with each thrust. The arrangement seemed favourable to my sister since she dipped her head down and pressed her cheek against the smooth kitchen counter as she let out a series of cute and sexy moans.\n\n\"Pull her hair,\" Vicky said, pressing her body into my side.\n\nI obliged my blonde lover and grabbed a fistful of Tor's long ponytail. I had discovered early on that all of my women enjoyed me being rough with them, and Tori especially loved having her hair pulled while I fucked her. It was probably why she always had it in a ponytail for me while we fucked.\n\n\"Harder,\" Tori growled as I pulled her head back by her hair.\n\nOnce more, I obliged and wrapped her ponytail around my fist as I pulled harder, using the force to slam harder into Tori's incredibly wet pussy. Tori pushed herself off the kitchen counter and clutched at the edge in a white-knuckled grip. Her panting was getting louder, and she cursed almost every second pant as I drilled into her relentlessly. The sound of wet fleshing slapping mixed with Tori's moans and gasps of pleasure to fill the spacious kitchen like it was the theme music to our TV show, and we were starting a new episode.\n\n\"You're close, aren't you?\" Vicky said, leaning her whole body against me as she ran her hands across my naked chest and back.\n\n\"Very,\" I gasped as a particular. \"How did you know?\"\n\n\"I just know,\" Vicky winked.\n\nJust then, Tori's whole body stiffened, and I felt her pussy clench tightly around my cock. Then I felt the spread of her climax around my erection, pelvis, and drip down my thigh. As usual, Tori's climax triggered something in me, and I was basting her insides within seconds of feeling her warmth trickle down my thighs.\n\n\"This never gets old,\" Vicky grinned.\n\n\"Come here you,\" I pulled my blonde-haired lover against me and kissed her hard. Our tongues explored each other's mouths with a feral intensity as my cock pulsed, spitting the remnants of my climax into Tori's still throbbing tunnel.\n\n\"Good, you're all here.\"\n\nMy mother's voice instinctively made me want to pull away from my sister for fear of being scolded for our incestual act. It was going to take some time to grow accustomed to my mother being okay with her children bumping uglies. It was like I was hardcoded to not want her to see us like this. The fact that we were also sleeping together didn't change anything. I just hope it would get easier with time.\n\n\"Hey, Mum,\" Tori said, straightening herself and stretching her back like a cat after a nap.\n\n\"Good morning, Mrs Parks,\" Vicky grinned, still clinging to my side.\n\n\"It has been better for some of us,\" my mother smiled. \"And please, call me Melissa, you know I hate it when you're so formal.\"\n\n\"Okay,\" Vicky grinned, looking from my mother to me. \"You two banged, didn't you?\"\n\nI felt my face redden at her accusation and looked to my mother to see her barely suppressing a grin.\n\n\"Yes, Vicky, Jason and I have slept together,\" my mother replied.\n\n\"Awesome,\" Vicky giggled.\n\n\"That doesn't bother you?\" I asked the blonde-haired beach babe, knowing the answer before I asked. My women were very tolerant of me fucking other people. Especially my family members. It was something I had accepted but still felt like one of the luckiest men on the planet.\n\nNot for the first time, I wondered if there were any others out there like me.\n\n\"I need a shower,\" I said, sliding my softening erection from Tori's slick pussy. \"Sorry for holding up your run.\"",
        "\"That's okay,\" Vicky shrugged. \"I enjoyed the show way more than going for a run.\"\n\n\"Just give me a few minutes,\" Tori said with a sharp gasp as I slipped out of her. \"And I'll be fine for a run.\"\n\n\"I think you should take a break, sweetheart,\" my mother said. \"You look a little shaky.\"\n\nI took a step back from Tori to give her space and noticed her legs were shaking. The inside of her thighs were slick with a mixture of her own juices and my seed that was seeping out of her pussy. The sight sent a pulse through my cock once more. Even though she was already pregnant, the thought of breeding my sexy sibling had the blood rushing to my dick in no time.\n\n\"I'll be fine,\" Tori smiled as she took a seat on one of the kitchen stools, her shorts still down around her ankles. \"I'll clean up and be ready shortly. I promised Vicky I'd run with her.\"\n\n\"That's okay. I'll go instead,\" I said. \"I need to get some more cardio in these days anyway. It'll be fun.\"\n\n\"That's a great idea!\" Vicky bounced. \"Do you mind, Tori?\"\n\n\"Not at all,\" Tori laughed softly. \"You two have fun.\"\n\n\"Alrighty, I'll go shower and change,\" I said, turning to Vicky. \"Give me ten minutes.\"\n\n\"Okie dokie,\" Vicky grinned.\n\nI gave each of my women a quick kiss before heading towards the downstairs bathroom and stepped into the shower. I didn't waste time as I cleaned myself up, even though my dick was refusing to cool his shit. Thankfully, by the time I was washed and dried, he had settled down enough for me to dress without too much evidence of my arousal showing. Although I doubted that would last long once, I saw Vicky's glorious ass bouncing in her tight leggings.\n\n\"Alright, I'm ready,\" I said, walking into the kitchen once more. \"Were we off too?\"\n\n\"I'll tell you on the way,\" Vicky said. \"You can drive.\"\n\n\"Drive? I thought we were running,\" I replied.\n\n\"We are,\" she nodded. \"But I know a nice spot for a run.\"\n\n\"Sounds good. Let's go.\"\n\nI bid farewell to my mother and sister before following Vicky down to the parking garage. I took in the expensive BMW that had been a gift from my father after returning home and suddenly had the urge to burn it.\n\n\"Something wrong?\" Vicky asked, taking my hand in hers.\n\n\"It's nothing,\" I sighed. \"I just can't stand the look of this car anymore.\"\n\nVicky laid her head on my shoulder and hugged my arm against her. \"Everything will be okay. It's just a car. You can always sell it and get something different.\"\n\n\"That's actually a great idea,\" I said.\n\n\"I have them from time to time,\" Vicky laughed. \"Not often, though.\"\n\n\"Don't say that,\" I shook my head. \"You're--\"\n\n\"I know what I am, Jason,\" Vicky interrupted me with a quick kiss. \"I know I'm a walking stereotype of a blonde girl. But I'm okay with that.\"\n\n\"You're still amazing,\" I said, wrapping my arms around her waist. \"You are perfect the way you are.\"\n\n\"Thank you,\" Vicky smiled, and I spotted a slight blush on her bronzed cheeks. \"You make me really happy, Jason. I've never felt this way about a guy before, ever.\"\n\n\"I know the feeling,\" I nodded. \"I just hope my words don't feel cheapened because I feel the same about Hayley, Tori, Lucy, and Liz.\"\n\n\"I think that at all. I love all of the girls in our little harem almost as much as I love you,\" Vicky smiled. \"They're amazing, and I feel like the luckiest woman on the planet to be with you and them.\"\n\n\"How the fuck did I end up in this position,\" I laughed.\n\n\"By being a super-handsome stud with a magic dick,\" Vicky winked. \"And your personality isn't too bad either.\"\n\n\"Not too bad?\" I asked with a raised eyebrow.\n\nVicky giggled and kissed me on the lips quickly before darting away. \"Come on, I want to run.\"\n\n\"Yes, Ma'am.\"\n\nChapter 53\n\nA forty-minute drive led Vicky and myself out of Sydney's main hustle and bustle and into the outer, quieter suburbs. The houses were all similar, the lawns were freshly mowed, and the trees were planted at even intervals down the centre traffic island that divided the main street. We passed by a small outdoor shopping centre with the bare necessities; supermarket, post office, butcher, take away shops, and a few small businesses. It looked like a nice place to live, only it would be a bummer to have to drive forty minutes to get to the beaches my women loved to visit so often. At least the new house would have a pool, that's if it was still on the table.\n\nI didn't really know what to expect from my father after everything. The short discussion I'd had with my mother the night before hadn't really gained me any answers. She had just assured me that everything would work out and to leave it to her. She was a fierce woman--that much I knew from my childhood--and it was heart-warming to see her mother-grizzly side fighting for me and my unborn child...well, now unborn children. Tori was pregnant, and I had a feeling I was going to have more on the way soon.\n\nThe prospect of one child had once sent my anxiety levels skyrocketing, but now I just felt joy at the opportunity. My women wanted to have children with me, and I wanted to give them that. It would be difficult, but I was sure we could--as a family--meet any challenge head-on.\n\nAt least these kids were going to have plenty of love and care around them at all times.\n\n\"This is the place,\" Vicky said once I stopped the car.\n\n\"What's so special about this place?\" I asked, looking around. We were at a park with a children's playground with some picnic tables dotted around. Kids played on the multi-coloured playground and in the sandpit while parents looked on. Couples lounged on blankets on the soft grass, and even a few joggers and cyclists passed by. The whole scene had a quiet calm about it that contrasted heavily to the packed beaches and city streets I was accustomed to.\n\n\"We used to live around here,\" Vicky said. \"My father would bring Liz and me down to this park each weekend.\"\n\n\"You've never mentioned your father before,\" I said.\n\n\"He died when we were little,\" Vicky said sadly.\n\n\"I'm sorry.\"\n\n\"It's okay. It was a long time ago now,\" Vicky replied. \"I just like coming back here from time to time.\"\n\n\"How did he die?\" I asked. \"If you don't mind me asking.\"\n\n\"Heart condition,\" Vicky said. \"I don't know all the details, just that he had several surgeries to try and fix his heart, but in the end, it wasn't enough. My grandfather went the same way.\"\n\n\"Hereditary condition then?\" I asked.\n\n\"Yes,\" Vicky nodded. \"Thankfully, it wasn't passed on to either Liz or me.\"\n\n\"I'm glad to hear that at least,\" I said. \"How come you don't live out here anymore?\"\n\n\"Couldn't afford it,\" Vicky replied.\n\nI felt a pang of sadness for my blonde-haired girlfriend and her sister. The area they currently lived in was far from a slum or a terrible part of town, but it was definitely in a cheaper neighbourhood. I also knew that Liz had taken up dancing at a strip club to help pay the bills and that Vicky took the odd modelling job whenever she could to chip in. I suddenly felt terrible for always taking everything I had, had when growing up for granted. I'd been out on my own for some time now, but I never had to worry about paying for University or keeping a roof over my head. My father was an asshole, but he still provided everything I needed for me to set myself up. These wonderful women had lost their father--who they obviously loved--and had been forced out of their home and to grow up quickly to help pay the bills.\n\nMy determination to succeed in my plans had just increased ten-fold. I would do everything in my power to help provide for my women.\n\n\"Don't worry,\" I said, taking Vicky's hand. \"I'm going to make sure you and Liz don't have to just get by anymore.\"\n\n\"You don't have to,\" Vicky smiled. \"We are fine, really, we are.\"\n\n\"I'm not taking no for an answer,\" I said. \"I want to help.\"\n\nVicky smiled and kissed me softly. It was different from our regular kisses, which were usually filled with lust and urgency. This one was tender and soft but brimming with passion.\n\nI was going to have a chat with my mother about what we could do for Vicky, Liz, and their mother. I was actually a little put off that my family hadn't done anything for the girls already, considering how close Tori and Vicky were. Then I remembered that my father controlled pretty much everything in the family.\n\nStill...he could have at least given one of them a job.\n\n\"Let's run,\" Vicky smiled.\n\nWe started off on the path that circled around the park, then split off into the trees at the far end. We jogged at a leisurely pace for a couple of laps around the park before splitting off and delving into the forest. We ran side-by-side when we could, but the path wasn't very wide, and other runners, walkers, and cyclists were travelling in the opposite direction to us. I didn't mind moving in behind Vicky because I got to admire her glorious rump as it bounces enticingly ahead of me. The tightness of her leggings left almost nothing to the imagination, and I soon remembered how difficult it was to run with an erection.\n\n\"Let's take a break,\" I said, jogging up beside Vicky.\n\n\"Sure thing,\" Vicky said, slowing to a walk.\n\nI spied a park bench about fifty metres up the track and motioned to it. Vicky and I slumped onto the bench, breathing heavily. The pathway through the forest felt secluded, but the existence of a bench--and the occasional cyclist or jogger--took away from the feeling of isolation. But it did give me an idea.\n\n\"We should go camping sometime,\" I said.\n\n\"Ooo, that would be great!\" Vicky beamed. \"Liz really loves camping, although she goes a bit nuts with it.\"\n\n\"How so?\" I asked.\n\n\"One time, she did a three-day hike where she set up camp in a new location each night. Carrying everything on her back each day,\" Vicky said.\n\n\"She did this by herself?\" I asked with a raised eyebrow.\n\n\"No,\" Vicky shook her head. \"Her first boyfriend.\"\n\nI hadn't even heard of any of my women talk about past relationships--apart from Leon and Hayley--so the news took me off guard. Deep down, I knew that they would have dated guys in high school--they were all tens on their worst days--but I just hadn't been faced with it yet. Liz was beautiful, loyal, and passionate, but I still didn't expect to hear she had dated a guy before. She seemed too awkward around men. At least she was towards me in the beginning.\n\n\"What was he like?\" I asked.\n\n\"A fucking dickhead,\" Vicky snorted with laughter. \"He spent way too much time looking at himself in the mirror and always expected Liz to be on call whenever he needed her.\"\n\n\"Sounds like you girls dated some real winners,\" I laughed.\n\n\"Don't even get me started on Tori's first boyfriend,\" Vicky giggled.\n\nThe thought of any of my women with another man was enough to make me jealous, but the feeling was ten-fold when it came to my sister. Tori wasn't just my girlfriend--and mother to my future child--she was also my sister. Sure, we hadn't gotten along for much of our youth, but I still loved her. Knowing and falling in love with her now just confirmed my belief that no one--potentially even myself--would ever be good enough for her.\n\n\"Don't worry,\" Vick assured me. \"You're ten times the man any of those guys were.\"\n\n\"Thanks,\" I smiled.\n\n\"What about you and Lucy?\" I asked.\n\n\"Lucy was a bit of a slut,\" Vicky said, without a hint of accusation.\n\n\"And you?\" I asked.\n\n\"Let's just say Lucy, and I have some stuff in common,\" Vicky giggled and bumped her shoulder into me playfully.\n\n\"What am I going to do with you,\" I shook my head with playful disappointment.\n\n\"What. Ever. You. Want,\" Vicky said slowly.\n\nOur eyes met, and I felt an intense burning lust from her eyes. Her body radiated heat, and the glint of arousal in her clear, blue eyes made my heart race and my cock pulse. I had been staring at her ass for the last fifteen minutes, but one look from my blonde lover had me harder than a granite boulder.\n\n\"You know how you girls joke about me having a magic dick?\" I said.\n\n\"It's no joke,\" Vicky grinned. \"That thing is fan-fucking-tastic.\"\n\nI laughed at her bold statement and cupped her face gently. \"You are all magical to me. There's something about you and the others that I cannot explain. Just being in your presence makes me forget everything else and throw reason to the wind.\"\n\n\"Then do it,\" Vicky said in a low, husky voice.\n\nJust then, a couple with a stroller came around the bend, and Vicky and I toned it down. I took her hand in mine and smiled at the couple as they passed by. Vicky looked longingly at the stroller and the obvious newborn sleeping soundly.\n\n\"You want one, don't you?\" I asked.\n\n\"Yes,\" she nodded. \"I never thought I wanted kids, but after meeting you, I can't wait to have one.\"\n\n\"It's not just because of Hayley and Tori?\" I asked.\n\n\"Tori's pregnant!\" Vicky exclaimed. \"WHY WASN'T I TOLD?!\"\n\nVicky shot to her feet and squealed with delight, then threw herself on me, kissing me deeply before covering my face in quick kisses.\n\n\"Woah, calm down,\" I laughed. \"We only found out last night. I'm actually quite surprised Tori didn't tell you this morning.\"\n\n\"I wasn't there long before you interrupted everything,\" Vicky giggled. \"But that does explain why she rushed to the bathroom suddenly when I got there.\"\n\n\"Why were you there so early? And getting changed?\" I asked. \"I seem to remember both you and Tori not being morning people.\"\n\n\"I had a photoshoot at the ass-crack of dawn,\" Vicky replied. \"It was closer to our place than mine, so I decided to drop by and take Tori out for a run.\"\n\n\"I'm surprised Liz didn't come with you,\" I said.\n\n\"She was working later,\" Vicky shrugged. \"Otherwise, she would have.\"\n\nThe thought of Liz taking her clothes off for a bunch of random men made my blood boil, but it was something she had been doing since before I met her, and I didn't want to be one of those guys that forced his girlfriend--or girlfriends--to do or stop doing things simply because he didn't like it. They were all free to do as they pleased without seeking my permission.\n\n\"Don't worry. She hates it as much as you do,\" Vicky said as if reading my mind. \"The club she works at has strict no-touching rules, and they look after their girls. I hope that settles your fears a little.\"\n\n\"A little bit,\" I chuckled.\n\n\"Anyway,\" Vicky said, wiggling herself against me. \"Enough about everyone else. I want you to put a baby in me, now.\"\n\nI laughed at Vicky's forwardness, especially since she had been so adamant--not that it mattered after long--that I not cum inside her the first time we hooked up.\n\n\"We kind of don't really have any privacy,\" I said.\n\n\"Then follow me.\"\n\nVicky grabbed my hand with both of hers and tugged me to my feet before we set off again. We followed the path for another ten minutes before Vicky led me down a narrow, grown-over path further into the forest, where we walked for another fifteen minutes before I started hearing the tell-tale signs of water ahead. Another few minutes brought us to a small, knee-deep river with a large thicket of bamboo growing on the opposite bank.\n\n\"Across the river,\" Vicky said.\n\nThe water wasn't deep, but I still preferred to not get my shoes and socks wet. Thankfully, some stepping-stones made crossing the four-metre river easy. Once on the other side, I could see a small clearing amongst the bamboo stalks with lush-looking grass.\n\n\"Been here before?\" I asked.\n\n\"Liz and I found this place a while back. Don't worry, you're the first guy I've brought here.\" Vicky winked.\n\n\"I feel very privileged,\" I chuckled.\n\n\"You should,\" Vicky grinned.\n\nThe clearing inside the thicket of bamboo stalks was quite small--maybe big enough for a two-person tent--and extremely private, with little of the surrounding trees and bushland visible to us from inside our quaint sanctuary. Sunbeams shone through the overhead canopy, landing on the beautiful blonde goddess before me. Vicky's hair shone like golden silk, and her bronzed skin glowed with a mixture of sweat from our run and the light of the mid-morning sun. Vicky smiled at me as I took her in. flashing me her brilliant pearly whites, framed by her full, soft lips that begged to be kissed.\n\n\"You're so beautiful,\" I said with awe.\n\n\"Thank you,\" Vicky blushed in a very un-Vicky-like way. She was always the most forward--tied closely with Lucy--out of all of my women, so seeing her acting so bashful was incredibly cute.\n\nI took two steps closer to my blonde-haired lover and pulled her against me. Her body melted into mine, and our lips met for a gentle kiss. Our tongues explored one another's mouths like it was our first time. Vicky made a sound like she was purring, and I felt her body tremble in my arms as we languidly made out amongst the trees and bamboo stalks.\n\nOur kiss ended as slowly and softly as it began, and Vicky pushed herself back to arms-length before pulling her tank-top over her head, followed by her sports bra. I was momentarily stunned when her bountiful breasts spilled forth. Vicky's mountainous melons were absolutely perfect. From their shape and size that seemed to defy gravity, down to her perfect--perpetually hard--nipples that stood to attention, begging for me to play with them.\n\n\"I want you to give me a baby, right here,\" Vicky said, hooking her thumbs into the waistband of her leggings, tugging them down just enough to expose her gloriously wide hips and the top of her silky smooth mons veneris. \"Earth to Jason, you there, babe?\"\n\nI looked up to see Vicky smiling coyly at me, her hands stopping just before revealing everything to me. A beam of sun shone across Vicky's naked torso, creating a shiny shimmer across her sweat-slicked skin, but it was her eyes and dazzling smile that took my breath away.\n\n\"I'm here,\" I nodded. \"I was just stunned for a moment at how amazing you are.\"\n\nVicky giggled and bit her bottom lip, then spun around to face away from me before bending at the waist to slide her leggings off. This girl knew exactly what she was doing, and if I wasn't already hard enough to hammer nails, I would be now. I was actually quite surprised my basketball shorts were holding together.\n\nI stripped my shirt over my head and dropped my shorts and underwear in record time. I didn't care to put on a show all that much--if my women wanted one, they could always ask--I just needed to claim this beauty as my own once more. But this time, I would put a baby in her. I wasn't sure the difference trying for one would have over what we'd already been doing. Vicky had mentioned early on she wasn't on birth control, and I just assumed that since she hadn't said anything since that she had started. All I knew was the idea of breeding this magnificent creature was incredibly arousing.\n\n\"Come here,\" I said, motioning for Vicky to come to me.\n\nVicky smiled and obeyed, sauntering over to me with a wildly exaggerated sway to her hips. Her breasts bounced gently with each step, but my eyes were glued to her. I reached out to pull her against me as soon as she was within arm's reach. We gasped together as our skin contacted once more. The heat from Vicky's body was almost too much to bear, but I would suffer the worst fires of hell for this woman. Our lips met in a somewhat mix of frantic, lust-filled making out and passionate loving kiss. My hands roamed over her hips and cupped her bountiful booty while Vicky's hands trailed up and down my back before resting on my hips.\n\n\"I want you so bad,\" I whispered when our lips parted.\n\n\"I always need you,\" Vicky replied.\n\nVicky was quite a bit shorter than me--only a touch taller than Tori--but she felt perfect. I didn't know how to describe it, but each of my women felt perfect in my arms. Even though they were far from the same in height and shapes. Our foreheads pressed together for a moment, then I felt Vicky's hand on my rock-hard shaft. She grasped my butt cheek with one hand while she began working my shaft with the other. I felt wetness around my cock, and for a moment, couldn't pick what it was.",
        "\"Just lubing you up,\" Vicky winked when I looked at her.\n\nI looked down when her hand left my erection and saw it disappear between her legs for a moment, only to return, covered with her own juices before the blonde-bombshell massaged it into my flagpole of a dick.\n\n\"Then I think we're ready,\" I said in a tone heavy with lust.\n\n\"I've been ready since I saw you this morning,\" Vicky purred.\n\n\"You could have joined in,\" I said, kissing her neck softly.\n\n\"I know,\" Vicky moaned. \"But I wanted you to myself. I hope that isn't selfish.\"\n\n\"Not at all,\" I smiled as I nibbled her ear. \"I need to make more time for each of you.\"\n\n\"You're such a good man,\" Vicky said. \"Now, please make love to me.\"\n\nI didn't need any further invitation. I grabbed Vicky by the hips and lifted her easily. Vicky squealed in delight and wrapped her arms around my neck and her legs around my waist. With my prize in hand, I gently lowered myself to my knees, and with one arm around her waist, I used the other to lower my lover to the soft grass beneath us.\n\n\"I can't believe how strong you are,\" Vicky purred. \"It felt like I weighed nothing to you.\"\n\nI felt my man-brain go into overdrive at her compliment. It hadn't felt like too much to lift, and it felt really good to be able to lift my women so easily. Like I was some Viking raider carrying his women off for a night of intense rutting. Well, in this case, it was a mid-morning rut in the forest.\n\nVicky's legs opened wide for me, and I felt her hand slip between our bodies and grab my shaft. Our lips met as I brought myself closer, and with my lover's hand guiding me, I slipped inside of her warm tunnel with little resistance. I moaned into Vicky's ear, and she moaned into mine as I filled her passage. Her walls gripped me tightly, and the warmth from her thighs sent a rush of pleasure through my entire body.\n\nWe didn't speak after that point--there were no words that needed to be said. Our bodies stayed joined as one as we made slow, sensual love in the grass, outdoors, with the breeze kissing our naked bodies and the shafts of sunlight warming our skin.\n\nVicky and I had had some amazing sex in the past. She was so passionate, lustful, and eager to please that it wasn't hard for us to get lost in the moment and fuck like animals. But this time was quite different. Usually, we would have changed up positions a couple of times, and Vicky would have taken me in her mouth more than once--she really loved sucking my dick--but not this time. We stayed in that same position for what I estimated to be about an hour. Our bodies moved together in perfect unison, only at a much slower pace. The build-up to my climax was so slow and gradual that I didn't feel it coming until it was too late. I barely had time to warm my lover before I let out a series of moans as I filled her womb to capacity, triggering another orgasm from my sandy-haired lover.\n\nOnce we had both come down from our euphoria, I slid out of Vicky's pussy, collapsing on the grass beside her. Vicky immediately cuddled up beside me, and I wrapped an arm around her as she rested her head on my chest.\n\n\"That was...incredible,\" I said, still catching my breath.\n\n'Mmmm, I know,\" Vicky purred. \"You're amazing, Jason.\"\n\nI kissed Vicky on the forehead and wondered if she planned to fall asleep right here and now. I knew it was probably a good idea to get dressed and head back, but I didn't want to break the moment. Surely we'd be okay for another ten minutes or so.\n\n\"It's nice here,\" Vicky said sleepily after a few minutes.\n\n\"I know,\" I replied, kissing her forehead. \"I forgot how quiet the outdoors is.\"\n\n\"You've spent most of your life in the cities, haven't you?\" Vicky asked, shifting her position, so she was resting her chin on her hands across my chest.\n\n\"Yeah,\" I nodded. \"Sydney my whole life, then Melbourne. We would travel to the coast every year, but I rarely spent time away from the cities.\"\n\n\"Then camping would be a great idea,\" Vicky grinned. \"There's a long weekend coming up in a few weeks. Maybe we could organise something.\"\n\n\"That's actually a great idea. I really enjoyed the beach holiday we had and would love to spend some more time with you girls,\" I said.\n\n\"Just beware, Hayley and Lucy don't camp well,\" Vicky giggled.\n\n\"Well, I guess I'm just going to have to make sure they're well catered for, won't I?\" I smirked.\n\n\"You're the best boyfriend,\" Vicky smiled and kissed me. \"But we better get going.\"\n\n\"Good idea.\"\n\nWe had a quick wash in the river--along with some playful groping and kissing--before we dressed, not caring about getting our clothes wet. The return trip took far longer since we were only walking instead of running or even jogging. The casual walk back was lovely and peaceful, and we chatted about our lives, and I learned how Vicky and Tori had become friends.\n\n\"Oh yeah, Tori got picked on a lot in our first year of high school,\" Vicky said. \"The glasses made her a target.\"\n\n\"That's rough,\" I sighed. \"I didn't know anything about that.\"\n\n\"Don't beat yourself up about it. That girl can take a lot and dish it out,\" Vicky grinned.\n\n\"What happened then?\" I asked.\n\n\"Hayley happened,\" Vicky replied. \"Liz and I knew her from primary school, but she was older than us. By the time we reached high school, she had a reputation for being a bit of a bitch. As soon as she stepped in for Tori, the bitches who were bullying her backed off.\"\n\n\"So, what you're saying is I shouldn't get on Hayley's bad side?\" I laughed.\n\n\"Oh yeah, do not piss her off,\" Vicky giggled.\n\n\"Come to think of it, I do remember the quiet rage in her eyes when Madison came back,\" I said, mostly to myself.\n\nVicky let out a goofy laugh and hugged my arm, clutching my hand in both of hers. \"Yeah, I wouldn't have wanted to be that girl if Hayley got to her first. Shed fierce.\"\n\n\"So, how did you and the others become friends?\" I asked.\n\n\"Liz and I stuck together a lot. Twin thing,\" Vicky said as if that was the only explanation needed. \"And Lucy and Hayley were best friends, even back then, Hayley spent most of her time at Lucy's house instead of her own. One day Liz was sick, and I had no one to talk to, so I sat with Tori. We became best friends immediately. From there, she properly introduced me to Hayley and Lucy, and the rest is history.\"\n\n\"Liz always found it hard fitting in, though, didn't she?\" I asked.\n\n\"A little,\" Vicky shrugged. \"She can be shy. Took her a few weeks to even talk to Hayley and Lucy without me there.\"\n\n\"I have a feeling it might have been her attraction to girls,\" I mused.\n\n\"What do you mean?\" Vicky asked in confusion.\n\n\"Well, Liz likes girls and has loved you in that way for a very long time,\" I started explaining. \"Now she is being introduced to a bunch of pretty girls that she could quite possibly start feeling for. Or maybe she was worried you'd like them more than her. It's hard to say since I didn't know any of you apart from Tori back then. But most of Liz's issues with me were attraction and jealousy, to begin with.\"\n\n\"You could be right,\" Vicky pursed her lips in thought. \"Come to think of it, I do remember her being shy when we had sleepovers, and the other girls would change. It could be that she was dealing with her girl attraction back then.\"\n\n\"You didn't know she liked women?\" I asked.\n\n\"Not at all,\" Vicky shook her head. \"I guess I kind of figured she might since I had found women attractive too. But Liz only ever dated guys in high school.\"\n\n\"Could be she was trying to mask or deny it to herself,\" I said.\n\n\"Probably,\" Vicky nodded. \"Anyway, this gives me an idea.\"\n\n\"What is it?\" I asked.\n\n\"You should spend more time with Liz,\" Vicky grinned.\n\n\"How did you get that idea from the topic of our conversation?\" I laughed.\n\n\"Because I love you, and I love my sister, and you make her happy,\" Vicky beamed brightly.\n\n\"That still doesn't make sense,\" I shook my head and chuckled.\n\n\"I don't care,\" Vicky giggled. \"It's a great idea, isn't it?\"\n\n\"I have to admit. It sounds like a fantastic idea,\" I smiled, pulling Vicky in for a quick kiss. \"Now, let's get back home. We have been gone for a long time.\"\n\n\"Everyone knows you can't keep your hands off me,\" Vicky smirked. \"It won't be a surprise that we are out for a while.\"\n\n\"I'm gonna let that slide until next time you attack me,\" I said with a raised eyebrow. \"Now get your buns in the car.\"\n\nVicky giggled as she climbed into the passenger seat of the BMW. I stared at the car for a moment and finally decided I would sell the thing. I'd have to check to make sure I actually could first. Maybe my mother would be able to help me out.\n\nNow the only question was...what car did I want?\n\nChapter 54\n\n\"Honey, I'm home,\" I called out as I entered the apartment I shared with my mother and sister.\n\n\"Hey, Jace,\" Tori bounded towards me, wrapping her arms around me in a fierce hug. \"You guys were gone for quite a while.\"\n\n\"Longer than either of us guessed,\" my mother added as she lounged on the couch in the living room. \"Did you and Vicky have a good...run?\"\n\n\"It was very relaxing,\" I chuckled.\n\n\"I bet,\" Tori grinned. \"Where's Vicky?\"\n\n\"She had me drop her outside so she could drive home. Said she'd call you later,\" I replied.\n\n\"I'm glad you two got time alone today,\" Tori said. \"You have no idea how different Vicky has been since you came home.\"\n\n\"It looks like I'm not the only one that has changed after coming back,\" I nodded. \"Each day, I feel more thankful than the last that I have you and the others.\"\n\n\"The feeling is mutual,\" Tori smiled, kissing me on the lips softly.\n\n\"How adorable,\" my mother cut in.\n\n\"Come here, you,\" I grinned, opening my arms to the woman who raised me.\n\nMy mother crossed the empty space between us with most of her reserved dignity intact, but I could pick up a slight quicken to her step. My arms encircled her slim waist, and my hands settled on the small of her back, right above the curve of her fantastic ass. Our lips met in a sensual kiss that had me rock hard immediately. I seriously didn't know how the fuck my body had so much sexual energy stored up to use at a moment's notice, but I was glad I did in order to satisfy so many borderline nymphomaniac women in my life.\n\n\"As flattered as I am to your...situation, my dear, I need you to cool your jets for a bit,\" my mother said once our kiss ended.\n\n\"Why? What's up?\" I asked, hiding my disappointment.\n\n\"Your father is on his way over here to talk,\" she replied. \"Since you skipped the meeting last night.\"\n\n\"In hindsight, that probably wasn't a good idea,\" I said, rubbing the back of my neck. \"He did say that was the only chance I had.\"\n\n\"Yes, and no,\" my mother replied. \"That was before he learned I was in your corner. Trust me, Jason, we will get everything we need from that man.\"\n\n\"I kind of feel bad,\" I said, not really knowing where these thoughts were coming from.\n\n\"He wasn't a good father,\" Tori said. \"The fact that he doted on me and me alone while dismissing you so easily is proof enough of what a shitty parent he was. He cheated on Mum and treated her like a second-place prize. I understand he lost the woman he loved...your birth mother, but that's no excuse for doing the things he's done.\"\n\n\"Your sister is right, Jason,\" my mother nodded. \"He had decades to get over your mothers passing, to reconcile with you, and tell you the truth, but he hasn't. I knew he was a selfish man when I first met him, but I thought that's what I wanted. A man that wouldn't let anything get in his way to achieve his goals. But a man who blackmails his own son into keeping secrets is not a man I wish to be with. He is not a good man.\"\n\n\"I guess I'm just feeling a little sorry for him,\" I sighed heavily. \"After hearing about my...my mother, it's hard not to feel sorry for him. I couldn't imagine losing any of you.\"\n\n\"And that's what makes you a wonderful man,\" my mother smiled. \"But it's also a weakness when dealing with men like your father. He will use that against you without hesitation if it means getting his way.\"\n\n\"So...what do I do?\" I asked.\n\n\"Nothing, my dear,\" my mother cupped my cheek. \"You have done enough. Let Mumma bear take it from here. I'll deal with your father.\"\n\nThe front door to the apartment swung open suddenly, and I immediately jumped back from my mother's touch, expecting my father to waltz through the door to tell me I had lost and we were all going to be living on the street. But instead of the scowling, hard stare from my father, I was greeted with a beautiful smile from Natalie, the slim, white-haired assistant at my father's firm who I'd hooked up with a few times. She was dressed in a fitted white blouse and a sexy black pencil skirt that gave her a sexy librarian look.\n\n\"Thank you for coming, Natalie,\" my mother said, greeting the white-haired woman with a warm hug. \"I know it was a lot to ask.\"\n\n\"Nonsense,\" Natalie shook her head and smiled. \"I want to help in any way I can.\"\n\n\"What's going on here?\" I asked with a hint of confusion.\n\n\"Natalie has agreed to help our situation,\" my mother replied. \"Which is incredibly brave of her.\"\n\n\"I just want to do what's right,\" Natalie nodded.\n\n\"I still don't know what's going on,\" I sighed.\n\n\"You'll find out soon enough, Jason,\" my mother replied. \"As I said, leave everything to me.\"\n\nI was about to argue that I needed to know what was going on if I was going to plan what to do and say when my father showed up, but then the door to the apartment swung open once again. This time, there was no mistaking who it was. My father strode into the apartment like he owned the place--well, technically he did--his gaze sweeping over the group of us assembled by the kitchen counter before halting on me. His eyes were hard and unyielding. It felt like he was trying to break my will just by staring me down. The old Jason might have wavered under this man's powerful stare, but not anymore. He had lied to me my whole life, treated my mother like crap, and then threatened to take away his support for Hayley and my unborn baby when I stumbled upon his secret.\n\nI felt bad for this man for what had happened. But I would never forgive him for using Hayley and our unborn child to get his way.\n\n\"You're late,\" my mother said flatly.\n\n\"You should be grateful I'm even here,\" my father snapped. \"Especially after last night.\"\n\n\"But you are,\" she smirked. \"This is as important to you as it is me.\"\n\nMy father's eyes drifted over to me for a split second, and I saw a hint of worry flash. I met his gaze and crossed my arms across my chest. I wanted to scream at this man, berate him, and hit him. I wanted to know why I wasn't enough for him after my birth mother died. But I kept my calm.\n\n\"He knows,\" my mother said, looking between my father and me.\n\n\"You told him?\" my father growled.\n\n\"No, although I should have a long time ago\" she shook her head. \"He came by the office last night and heard us arguing.\"\n\nMy old man stared at me for a moment, but I couldn't pick his emotion. He was once again masking his emotions perfectly, not giving a single thing away. His gaze drifted to Tori for a moment, and I saw what could have been pain. His little girl was standing opposite him with a firm, unyielding gaze that could have rival her fathers. Then his eyes focused on Natalie.\n\n\"I guess I shouldn't be surprised to see you here,\" he huffed.\n\n\"I'm just trying to do the right thing,\" Natalie said, standing her ground. \"It's what my grandfather would have wanted.\"\n\n\"His name will be coming down tomorrow,\" my father said. \"I don't need him anymore.\"\n\n\"Enough,\" my mother cut in. \"You will not bully this young woman. You will listen to what I have to say, and you will agree to my demands because it is the best thing for our children. And that's the only thing that matters right now. No matter what happens today, we are over, so let's make sure our children and grandchildren do not have to suffer for our marital issues and lies.\n\n\"Fine, but everything we discuss will be locked by a non-disclosure agreement. Otherwise, I walk now,\" my father said.\n\n\"Agreed,\" my mother nodded to Natalie, who stepped forward and held out a piece of paper from her folder.\n\n\"The child won't even be your grandchild,\" my father laughed as he sighed his signature on the paperwork Natalie handed him. \"Jason isn't your son...he might as well not even be mine.\"\n\nMy fists clenched into tight balls that matched the rage pitted in my stomach. My jaw clenched, and I heard my teeth grind as I restrained myself from launching myself across the room to wipe that smug look off his face. My father's eyes drifted back to mine, and the smirk vanished, immediately replaced by the look of fear I had seen in his eyes the last time I got mad with him. He still thought I was the weak, helpless boy that left to go to University in Melbourne.\n\n\"Jason,\" Tori whispered.\n\nI looked down to see Tori's hand on my arm and immediately felt my body calm from her touch. I looked up to see a sad expression on Natalie's beautiful face that told me she hadn't known about my birth mother. I looked into her blue eyes, and I could almost feel her urge to want to hug me.\n\n\"No, that child will not be my grandchild,\" my mother said, accepting the same form and singing her name, handing it back to Natalie for her to witness. \"But Tori's child will be.\"\n\nThe scratch of Natalie's pen as she signed was deafening as silence filled the room. My heart slammed in my chest, and my palms felt suddenly clammy and sweaty. My father's eyes glazed over as he stared at nothing, while my mother had a look of triumph spread across her beautiful features.\n\n\"Who is the father....\"\n\n\"You know who,\" my mother replied.\n\n\"No...no, that cannot be,\" my father shook his head. \"How the fuck can that be!\"\n\n\"You cannot be that stupid, dear,\" my mother all but taunted him. \"I think you just didn't want it to be true, so you ignored the signs.\"\n\n\"I want all of you out...now,\" my father growled.\n\n\"No,\" I said, stepping forward.\n\n\"Don't you dare speak to me!' my father snapped, shooting a dangerous glare my way. \"When I'm done with you, you'll be locked in prison for the rest of your life. I'll make sure of it.\"\n\n\"You will do no such thing,\" my mother cut in. \"Unless you wish to deal with the non-disclosure agreement you just signed. And...well, you're a lawyer, you know how these things work.\"\n\n\"You bitch,\" he growled. \"You won't get away with this.\"\n\n\"Oh, but I will, my dear husband,\" my mother cooed. \"Natalie, can you please hand my husband a copy of the files you're holding.\"\n\nNatalie stepped forward tentatively and held out one of the manilla folders she had tucked under her arm. My father snatched it from her with a glare and began flicking through it immediately.\n\n\"I doubt I'll need to explain what those,\" my mother said after a minute passed. \"And I don't think I have to tell you that those are only copies.\"\n\n\"Fucking bitch,\" my father growled. \"What do you want.\"\n\n\"Natalie,\" my mother nodded to the white-haired woman.\n\nNatalie stepped forward once more, pulling a stapled stack of papers from one of the remaining folders. My father took these with less force than he had the folder and started flipping through them.\n\n\"That is our divorce contract, detailing the exact split of assets and money,\" my mother said. \"You'll notice that you're being left with more than half of what we own as a courtesy. You'll keep the firm and managing partner on the condition that you will sign over the deed to the manor you were forcing onto Jason, where he will take over the mortgage.\"\n\n\"Do you know how much that house costs a month?\" my father scoffed. \"The house isn't even halfway paid off, and the boy doesn't even have a job.\"\n\n\"That's not your problem,\" my mother said sternly, folding her arms under her breasts. \"Do we have a deal?\"",
        "\"The two-bedroom as well as the coast house?\" my father balked. \"This is more than half.\"\n\n\"But you keep your firm,\" my mother smirked. \"Or would you like to go to court and have me take everything? Maybe I could just settle for owning half of your firm.\"\n\n\"Bitch,\" my father cursed under his breathe. \"What if I refuse? I am one of the best lawyers in this city, and I've never been afraid of going to court.\"\n\n\"No, dear,\" my mother laughed. \"You aren't, but you close ninety percent of your cases out of the courtroom. By using strong-arm tactics just like this. Besides, if you refuse, that first document will be sent to the authorities, then the best-case scenario is you'll lose your license and your firm.\"\n\n\"Blackmail is a crime too,\" he snapped back, then glared at me. \"So is incest.\"\n\n\"Yes, you are correct,\" my mother replied. \"But are you willing to lose your license, firm and potentially spend ten to fifteen years in prison just to out your own children? Not to mention, taint your family name and legacy? No, I don't think you will. You know as well as I do that if those documents see the light of day, your whole firm becomes a target. Every case you've touched is re-opened, and you'll have a lot of angry clients. Just take the deal, Nathan.\"\n\nThere was a tense silence in the apartment as my mother and father stared each other down, neither wavering. I could see the muscles in my father's jaw tense as he white-knuckled the documents in his hand. While my mother just smirked as if she'd already won. But then again, maybe she had. I didn't really like my father knowing about the relationship between Tori and me--since he could use that against us--but I also didn't know what she had on him. By the look on my father's face, it must have been something incredibly damning.\n\n\"Fine,\" he said finally. \"But I have one condition.\"\n\n\"I'll hear you out,\" she replied.\n\n\"Any and all copies of this document must be destroyed or handed over to me,\" he held up the folder with the blackmail evidence. \"I will not have this hanging over my head for when you need money.\"\n\n\"No,\" my mother replied flatly. \"I will sign whatever you want me to keep me from talking about it, but I will not hand it over. Think of it as insurance in case you decide to try and oust your own son.\"\n\n\"Do you think I'd really do that?\" he frowned.\n\n\"I don't know what you're capable of these days, Nathan.\"\n\n\"Very well,\" my father said sternly. \"I'll have one of my associates draft the paperwork and have you come into the office tomorrow to sign.\"\n\n\"No need,\" my mother cut in. \"I had Natalie write up the paperwork and draft the contract for me. She really is an incredibly intelligent young woman. Too bad you never saw her for anything than a firm ass to look at.\"\n\nNatalie's cheeks reddened once more, and I saw her shift uncomfortably. It couldn't have been easy for her to be here right now. Siding with my mother meant ending her career at the law firm that her grandfather helped build. I'd have to think of a way to make it up to her. One that didn't just involve some mind-blowing sex.\n\nShe deserved much more.\n\nTen minutes later, our signatures were all signed, and the dates were marked. My father all but stormed out of the apartment as soon as the pen left his hand. I was sure if the doors weren't automated, he would have slammed them with enough force to shake the foundation.\n\nThen he was gone. And it was all over. We won.\n\n\"Mum...I can't begin to express my gratitude for what you've done,\" I said, pulling this magnificent woman into a big hug.\n\n\"Yeah, Mum, you were amazing,\" Tori said, throwing her arms around us both.\n\n\"It was nothing,\" my mother laughed. \"I'm only glad I was able to get this all sorted for you. Both of you.\"\n\n\"I still don't know how the hell I'm going to pay off a 1.5 million-dollar mortgage,\" I laughed. \"But I'll figure something out.\"\n\n\"Oh, that reminds me,\" my mother said.\n\nShe disentangled herself from our embrace and retrieved her purse from the kitchen counter, pulling a slip of paper out and handing it to me. \"This should help.\"\n\nI took the piece of paper and recognized it for what it was immediately. I held a cheque in my hands for half a million dollars, signed in my mother's elegant hand. I stared at the number of zeroes for what must have been two or three minutes before looking back up to my mother.\n\n\"I can't accept this,\" I said, dumbfounded.\n\n\"Nonsense,\" she replied. \"It's an investment for my grandchildren. It won't pay off the rest of the mortgage, but it will make a sizable dent in it for you and give you breathing room to set up your streaming business idea.\"\n\n\"You know about that?' I asked.\n\n\"Of course I do,\" she smiled. \"I think it's a fantastic idea.\"\n\n\"Dad thought it was stupid,\" I shrugged.\n\n\"That's because your father is still living in the nineties,\" my mother laughed. \"He doesn't understand how popular internet personalities can become. To him, you have to work nine to five to make a living. Everything else is a hobby. Your girls are all young and beautiful. You'll have no problem achieving your goal.\"\n\n\"Thanks, Mum,\" Tori grinned, throwing her arms around our mother.\n\n\"Hush now,\" she smiled. \"I'm just doing what any good mother would. It took me a couple of decades to get there, but it's better late than never.\"\n\n\"You are a good mother. Thank you,\" I nodded, then turned to Natalie. \"And thank you. None of this could have happened if you hadn't helped us. It mustn't have been easy to do, knowing full well you wouldn't be welcome back at the firm.\"\n\n\"There was no choice to be made, Jason,\" Natalie smiled. \"I'd do anything for you.\"\n\nNatalie and I had, had an explosive start to our relationship. The sex had been amazing, and we got along really well. But we hadn't really spent a lot of time together. I know she had a crush on Hayley--which was returned in kind--but right now was the first time that I noticed she was looking at me with the same awed reverence I had seen in her eyes when she had spotted Hayley for the first time.\n\n\"Come here,\" I smiled, opening my arms to her.\n\nNatalie's face broke out in a massive grin as she skipped over to me and slipped into my arms. My arms encircled her slender waist, and her petite body nestled against mine as her arms wrapped around my neck. Our lips met, and a moment later, our tongues danced together.\n\n\"So,\" I said once our kiss ended.\n\n\"So...\" Natalie smiled, her cheeks flushed.\n\n\"I was wondering if you'd like to go on another date sometime,\" I said.\n\n\"I'd love that,\" Natalie nodded. \"But I have one condition.\"\n\n\"Shoot.\"\n\n\"Hayley has to join us.\"\n\nEnd of book 2"
    ],
    "authorname": "Darth_Aussie",
    "tags": [
        "harem",
        "incest novella",
        "creampie",
        "breeding",
        "pregnant",
        "brother sister",
        "younger sister",
        "mother son",
        "older brother",
        "siblings"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/harem-sisters-pt-18"
}