{
    "title": "The Food Desert",
    "pages": [
        "Chapter 1\n\n \"Steve, is that really you?\"\n\nI was sitting in a food court at a mall, working on the ever-present laptop, waiting for my son and almost daughter-in-law. Even though I hadn't heard that voice in almost fifteen years, I knew instantly who it was. Looking up, I smiled.\n\n\"No Kara, it's someone else. What kind of a dumb statement was that?\"\n\nShe flinched a little, before she noticed I was smiling, and she grinned back. \"Gee, you found a sense of humor since I saw you last. Or did you buy one, moneybags? Lord knows you could afford it now.\"\n\n\"I bought it. Got a good deal, too. I wanted Jimmy Fallon's, but the tight bastard wanted way too much. And yeah, life's been pretty good to me for the last few years.\"\n\nThe smile was still there, and it brought back memories of happier times. Mentally, she shook herself. It had been almost twenty years. She should be over it now.\n\n\"Still farming?\"\n\nShe had often made fun of his little hobby farm, absolutely refusing to help, but not above helping spend the money it brought to them.\n\n\"No, farming takes time, and that's something that's in short supply for me lately. What about you? Did the recession hurt you?\"\n\nKara took the conversation to mean she was invited to sit, and she pulled out a chair. Damn, she had always had good legs, and even at forty-one, they still drew your attention. Never missing much, she gave me a smirk, glad she had chosen that particular dress to wear shopping. \"Still a leg man, I take it. Yes, it did, a little, but I wasn't exactly into a lot of the stuff that was happening at the time, so I came out all right. I'm doing good business now, got eight agents each in all four of my offices, and they hustle. Everybody wants the American dream, and I try my best to give it to them. What about you? If you're looking to upgrade, I got several really nice properties, or maybe a vacation getaway? If you need a hideout, I have a really, really nice two thousand foot cabin on a hundred acres of mostly woods, with an almost fifty-acre private lake that just hit the market. I haven't shown it yet. If I remember right, you like to fish.\"\n\n\"To answer your first question, yes, and you always had the best pair I'd ever seen, with one exception. To the rest of the questions, no, I like what I got now just fine, although I might take a look at that cabin. Email some pictures to me on my business site, and we'll talk. What are you doing in this city anyway? You're a long way from our old stomping grounds.\"\n\nShe smiled: that \"I know something but you don't' smile,\" the one that used to drive me crazy. \"I'm here on business, same as you. In fact...\"\n\nThat was as far as she got when she stopped, looking at the arms that were hugging me from behind, going up to the very attractive face of a young woman. I saw her watching as the girl gave me a big kiss on the cheek. A young man, Hispanic, very good looking in his own right, stood off to the side, smiling.\n\n\"Let him go,\" he told the woman, her red hair falling over his fathers' face. \"You might kill him, just from the heat.\"\n\n\"Oh, I think your Papa can take it. I almost wish I had met him first.\"\n\nI pulled my future daughter-in-law into my lap, tickling her, as she writhed and screamed in English and Spanish, her long legs flailing, her short skirt riding up. Stopping before she gave the old guys at the food court a heart attack, I introduced her to Kara.\n\n\"Kara, let me introduce the only woman in the world that could give you a run for your money in beauty and great legs. This is Ashley, my new daughter-in-law. Well, in five days, anyway. That handsome devil trying to stay out of the way is my son, Miguel, although he prefers to be called Mickey. Kids, this is Kara, sorry, can't remember your last name, real estate mogul and my first wife.\"\n\nKara's smile slipped. I knew it had always been one of her dreams to have my child, but we divorced, messily, and the next three husbands just hadn't measured up and she wouldn't even consider it. Then again, I was only thirty nine, so she knew the twenty something man couldn't be my biological child. Besides, he was Hispanic. I could see her wondering, had her old honey married a Latin cutie? She took a quick glance at my hand, and for reasons I couldn't define, seemed glad to see my finger bare.\n\n\"It's Johnson now. Has been for eight years. I confess my judgement wasn't the best after we parted, so I had to go through a few losers before I found another keeper. It could have been you, you know, if....\"\n\nI was a little sharper than I meant to be when I interrupted her. \"Kara! Please, let's not go down that road.\"\n\nKara was watching me closely, and she saw it. The pain in my eyes, just a flash, and then gone. Damn, after all these years. I was surprised to see the wetness in her eyes, misty with old emotions and memories.\n\n\"Sorry. Look, would you like to have dinner tonight? Not to reopen old wounds, I promise. I'd just like to hear firsthand the story of how you ended up where you are from the source and not magazine articles.\"\n\nI was surprised to find myself even considering it, but before I could speak, Ashley broke in. \"Papa, why not invite her to the wedding? Then you wouldn't be alone, and you guys seem to be on cordial terms.\"\n\n\"Ash, I won't be alone. I'll have the whole wedding party. Besides, it's short notice. I'm sure Mrs. Johnson wouldn't be able...\"\n\n\"I'd love to! I haven't been to a good wedding in years.\" She suddenly looked at me, noticing my face. \"That is, if it wouldn't be a bother. I'd hate to intrude on a family moment.\"\n\nLooking inwards, I found calm. It was a long time ago. \"Please come, and bring your husband. We can tell each other dirty little secrets about you.\"\n\nA small, pensive look appeared and vanished so fast no one but Ashley saw it. \"I\"m afraid he isn't with me this trip. It would just be me, if you'll have me. But, Steve, aren't you timing things awfully close? Don't you have to attend a business function the next day?\"\n\nWondering how she knew that, I nodded in agreement. \"I'm going to be at the wedding, Kara; I'm not going on the honeymoon with them. I'll be able to make the dinner with no problem. How did you know about that?\"\n\nDetermining to keep her secret, she just grinned. \"Oh, I read a lot, and it's been in the papers recently.\"\n\nShe looked at her watch, frowning. \"Speaking of business, I have to go do some. Network, network, network, the life blood of real estate. Here's my card, Steve. If you're serious about letting me attend the wedding, call me. Ashley, Mickey, a pleasure. Your father is a good man.\"\n\nTaking a chance, she bent down and gave me a soft kiss on my cheek, the first physical contact we had in over twenty years, and walked away. I discovered later, she went to the nearest ladies room, went in, locked the stall door, leaned against it, and tried to control her breathing. Seeing her ex, the one that got away, the one she had hurt so deeply, moved her unexpectedly.\n\nShe told Ashley later that it didn't help that I looked so damn good. No, I wasn't ripped, and she spent enough time in gyms to know what that meant, but I was more toned than I had been back then, I had a new stylish hairstyle, still had all I started with and the dusting of grey made me look like the distinguished successful businessman I was. I was a far cry from the young man in overalls and work boots she remembered.\n\nChapter 2\n\nI sat there, watching those hips sway as she walked away, remembering. Mickey brought me out of my reflections. \"So, that was your first wife. Damn, was she a child bride?\"\n\n\"Don't let the clothes fool you. She's actually two years older than I am, forty-one now. She's just a very well kept forty-one. Appearance was always important to her.\"\n\n\"This is the first I knew about you being married before Maria and Sandy. What happened?\" Ashley realized she made a mistake when she saw my face, bringing up all my wives at the same time. She was trying to find a way to back up when I spoke.\n\n\"Short version, she traded up. Found someone higher up on the food-chain who made her a better offer and she was off like a shot. They married, divorced seven months later, because she caught him screwing around. Like that wasn't part of his history. Met two more losers, neither of them lasting more than two years. She's been married for a long time to the guy she has now. Maybe she finally found what she was looking for.\"\n\nMickey was adding it up as he talked. \"So she's been married five times?\"\n\n\"As far as I know. Maybe more. I don't really keep up with her, but my cousin keeps me informed when I visit. One of the many reasons I don't visit much.\"\n\nAshley apologized. \"Sorry, Papa. You seemed to be getting along fine, and she is a good looking woman. I thought it might be fun.\"\n\nI reached over and took her hands. \"You see the good in everyone, Angel. I think it's one of the biggest reasons my son fell in love with you. Me too, as far as that goes. I doubt she will show up, but if she does, she does. I'll be in such a good mood I don't think anything could possible screw it up. Now, let's talk about more pleasant subjects. Come to your senses yet, and decide to dump Mickey for me?\"\n\nShe laughed and Mickey grinned. \"Not yet. If he's not trainable, though, I might reconsider. Older guys tend to already be housebroken.\"\n\nThen they started talking about the wedding, and all thoughts of my ex left my mind. Mickey had met Ashley in college, and it was love at first sight. She moved into his apartment at the start of their junior year, and hadn't left his side since.\n\nHer parents weren't keen to see her with a minority partner, but when they found out he was my son, they thawed pretty quickly. It made me not trust them. I got Mickey when he was nine, when I married his mother. His mother was long gone, we didn't last four years, but I had adopted Mickey in our second year, and he wanted to stay with me. I didn't have the money then I did later, but it was starting to come in when she had run back to Costa Rica to be with her lover. I filed, citing abandonment, and got sole custody of Mickey until she could be found. That took a year and a half. By then the divorce had gone through, and I got full custody. She didn't even get visitation rights.\n\nMickey took it hard. He had just turned eleven, and for a long time it had just been him and his mother. It took a couple of years of therapy to get him back, and when he was finally happy she showed up again, wanting him to move to Costa Rica and live with her. I really didn't realize how big a vocabulary he had until then, and a lot of what he said wasn't in any dictionary.\n\nShe got a lawyer and went nowhere, fast. When he was eighteen, he went to see her. The visit was supposed to last two weeks, and he was back in four days.\n\n\"You wouldn't recognize her, Dad. She looks fifty, now. They have a little farm and just barely make a living. They have no electricity; leave the doors open and the damn goats spend as much time inside the house as they do outside. Her husband tried to go all macho on me, and it made me really glad you put me in martial arts. I whipped his ass, and he told me I had to go. I just feel really bad for my little sisters. Then, when I got to the airport, Mom asked me if I had any money. I gave her everything you had given me for the trip, just for the little girls.\"\n\nI was really surprised. The woman I remembered was high maintenance, we even had a cleaning woman and she had quit working after we got married. She was a beautiful woman, with long reddish hair, smoky eyes, cute little nose, and lips that really, really needed kissing. Tall, at five-eight, she was not small, and her proportions matched her height. She had the full features of the classic Hispanic beauty, thirty-eight D, twenty-six inch waist, and a forty inch bottom.\n\nAnd she was really, really, really good in bed.\n\nWe met when she applied for a job. I didn't have anything, and she looked desperate, so I helped her, getting a friend to take her on. Maria repaid me by cooking dinner for me, spicy dishes I loved but couldn't pronounce, and it just took off from there.\n\nI didn't even know she had a son for four months, and when I found out I was kind of pissed. Not pissed that she had a child, but pissed that she thought I might be shallow enough to stop seeing her over it. After that, I insisted he be with us on every other date, He was a really quiet little boy, and it took him a long time to warm up to me.\n\nOur shared love of baseball broke the ice. I sponsored a team and made sure he got to play. I was the one who took him to practice, and made sure we were at all of his games. He turned into a good enough shortstop to get offers from colleges, and he played college ball on my dime. I couldn't see taking a scholarship away from someone who needed it when I could afford to pay. He even got two offers from major league teams, but he was smart enough to know his chance of playing in the majors were small, and AA ball didn't interest him at all. Besides, he wanted to get his MBA, knowing when I retired he would get the business, and he wanted to be ready.\n\nAshley stopped after four years, took her degree, and went to work for me in the family business. She probably knew as much about it as I did. My business had gotten really big really fast, and it almost outgrew me.\n\nMy business? I owned a chain of very successful grocery stores, specializing in high risk areas that most chains wouldn't enter.\n\nChapter 3\n\nI had a good job, as a receiving foreman in a large factory. I also had a small farm, just a few acres, but it had always been my passion, and I was a pretty good farmer, optimizing yield while improving the land.\n\nI married a girl from the factory. I got a lot of ribbing from the guys about how lucky I was, and I agreed.\n\nShe worked in the office, her hair was always perfect, her makeup nice but understated, and even though she didn't have to, she always wore a dress or skirt. If I had her legs, I would too. Her hemline was always a little higher than business proper, but none of the managers complained.\n\nWe met over paperwork issues. One of the other girls warned me she was a little mercenary, a little too materialistic, but I put it down to misplaced jealousy, wooing her until she accepted my ring.\n\nThe marriage was small but nice. We honeymooned in Florida, and her tiny bikinis always caused a stir when we hit the beach. I wasn't bothered, because at the end of the day, all they could do was look, while I'd be the one to peel those little wisps of fabric off her.\n\nI loved Kara with all my soul, and I really believed she loved me. The first three years were wonderful; we seemed so in sync, even started thinking about a family.\n\nTrouble started when I was offered a manager's position and I turned it down so I could focus on my farm. Kara did not like me farming, couldn't stand to see me dirty, and she absolutely refused to help me. She was really pissed when I turned down the job and we had our first serious argument since we married.\n\n\"Take the job! You wouldn't have to get dirty, could wear nice clothes every day, and best of all, we could spend more time together. Think of the doors it could open. We could join the country-club, move up in society.\"\n\n\"I could care less about the country-club people. Besides, I would still make more at my regular job and the farm.\"\n\nWe fought, and in the end, I chose the farm over the country-club. Kara didn't. At first, I didn't notice, she told me she had started stopping for a drink with the girls on Fridays but was always home by eight or nine. It seemed to make her happy and I was busy with the farm, so it wasn't like it was taking time away from us.\n\nThen one of her friends took them to the country-club, using her father's membership to get them in. That led to some Saturdays by the pool. I was at the farmer's market until three, and she was home shortly after. I didn't know for a long time she would pack a conservative suit, but change into one of her tiny bikinis at the club.\n\nOf course, that got the attention of the sharks, and they started circling. Conversations morphed to flirting, flirting led to touching, touching led to sex and the end of our marriage.\n\nThe guy was an asshole, all flashy clothes and Daddy's money. He had a job, working for his father, an office where he usually did useless things while the managers ran the business. He had the perfect suits, money to burn, and drove an expensive foreign car. Sadly, it didn't take long for her to fall for the glitter.\n\nI found out, as usual, by accident. Accident or not, it didn't make it less true. I followed them to a romantic restaurant and confronted them. He got stupid, or macho, or both, and swung at me. I worked a physically demanding job, and farming, if you did it right, didn't make you soft. I only hit him once, but it broke his cheekbone and detached a retina. I would have been in deep, deep shit if it hadn't been for the security cameras.\n\nEven with the evidence, Daddy's money made it uncomfortable for me for a little while, until a friend in the local paper took an interest, wondering why he was out on a romantic date with a married woman. Seeing the truth might hurt his business, Daddy shut the whole thing down. I got a divorce, Kara got an upgrade. We met for the final time when we signed the papers. She tried to fight it for a few months, apologizing over and over, literally begging me for another chance. The trust was gone, though, and the hurt was still too raw. Oddly, even as she tried to get me back she still hung out with her friend at the club, and once she understood I was never going to take her back, her pragmatic side surfaced, and she worked the guy until he proposed.\n\nShe started to apologize again just before we signed, and I stopped her cold. \"Not a word, Kara. Nothing you could say would justify what you did. I hope you like the trade up, but you need to bear in mind how you got together. He was engaged, wasn't he? And you were married. Free advice here; don't sign a prenuptial if you're actually stupid enough to marry the asshole. Remember how you got him, and realize you might have a use-by date. I figure you have a year, tops.\"\n\nShe was still crying when I left. Eight months later they had a big society wedding. The reception was held at the country-club, of course, and they got a rather rude surprise at the end of it. The country-club revoked his membership, and she had already been barred. Seems the wives didn't appreciate young women using the club as a hunting ground for rich husbands, especially ones that were already spoken for. The woman he jilted had a father who just happened to head the membership committee. His dad couldn't do much about it.\n\nI heard they joined another, less prestigious club, and just months later she caught him in bed with one of the bridesmaids. She had followed my advice, didn't sign anything, and raped him in the divorce. He'd been in court before, as a respondent in a few divorce cases where he was the other man, and the judge, a woman, had a long memory. She may have tacked a little more on there at the end, sort of a cosmic payback.\n\nShe surprised the shit out of me by showing up at my door two months later.\n\n\"What do you want, Kara?\"\n\n\"Can we talk?\"\n\n\"No.\"\n\nI think she was really surprised when I refused to let her in.\n\n\"Don't you want to gloat? Tell me I told you so? I'll take it if you do. I deserve it.\"\n\n\"Think I give a fuck what you deserve? I deserved a faithful wife. How did that work for me? I don't know what you want, but if you're looking for forgiveness and another chance you've wasted a trip. I'm seeing someone, and it may get serious. The last thing I need is an ex hanging around to complicate things. So take your blood money, join another country-club, hook another sucker, enjoy the lifestyle, and don't come back.\"",
        "I didn't slam the door, even though I wanted to, but the look in her eyes when it shut was priceless to me. She really thought a few apologies and a lot of sex would make it all better. She stood there for a few minutes, thinking I would change my mind. I'm sure she heard me fire up my bike and leave by the back driveway. When I got back an hour later she was gone, a thick note stuck in the door. I used it to light my charcoal grill that night, not even curious about what she wrote.\n\nChapter 4\n\nThe girl I was dating turned out not to be the one. We were great in bed and got along pretty well, but neither of us was what the other was looking for. In the end, we parted on good terms.\n\nI dated from time to time, but still hadn't found the one. Kara remarried, and it crashed and burned in eighteen months. Cheating was rumored to be involved, but nobody knew who cheated on the other.\n\nTwo years later she married again, and two years after that, she was single again. I didn't hear much about her by then, so I couldn't say why and really didn't care enough to find out.\n\nApparently, the divorces had left her a woman of independent means and she went back to school, getting certified as a CPA, and went into real estate, a small office that handled high end properties, her listings coming from contacts she made while being married to her different spouses.\n\nHer business flourished and she opened another branch, then another, until she had four offices. Between the second and third office she married again.\n\nMy cousin had told me about it on a trip home. I had gotten so involved in the new business I had to give up farming and had turned my acreage over to him, just to keep the farm viable.\n\nThis was the first time I had seen Kara in all those years, but I noticed she found a way to comment on my success. Maybe all those marriages made her even more mercenary.\n\nSo then, what was making me so successful?\n\nChapter 5\n\nI farmed, and sold in a market on the outskirts of the high end section of the nearest town. My customers were doctors, lawyers, bored housewives, people with money, usually. They were nice people despite being well to do, and most were concerned enough to ask questions about how the food was produced, and how fresh it was. I had a core group that pretty much wiped me out every week, but this particular Saturday it was raining pretty hard, and it was an outdoor market. I only sold about half my product, and realized the rest would be going to a soup kitchen I supported. I always gave a portion of my vegetables to them anyway, my attempt at being a good citizen.\n\nI was taking the short way home, going through the 'bad' section of town when I blew a tire. Cursing under my breath, I pulled under the shelter of a defunct minimart. It took me a while to move my produce out of the way to get to my spare, and I had it scattered about as I hurried to change the flat. Bad neighborhood, remember?\n\nI was just letting the jack down when I heard a small, wavering voice.\n\n\"Them collard greens?\"\n\nI looked up to see a tiny black woman, guessing her to be sixty or better, looking at the basket.\n\n\"Yes ma'am, that and some kale thrown in. Do you like collards?\"\n\n\"I love them,\" she sighed, \"but I ain't had no fresh ones in years. Almost forgot what they look like.\"\n\nLooking back, you realize that often your life pivots on the smallest of things. A chance meeting and a random act of kindness that day led to where I am now.\n\n\"Would you like some? You can have them, the market is over, I'm stuck with them and it would make me feel better, knowing they went to someone who could appreciate them.\"\n\nIt shocked me when tears sprang from her eyes, and she looked like she was going to faint. I grabbed her, and sat her in the passenger seat of my truck.\n\n\"You all right? Do I need to call someone?\"\n\n\"I'll be fine in a minute, son. It's just that you don't see a lot of kindness in this place, especially from strangers. Are you a Samaritan?\" She had a little smile on her face.\n\nI grinned back. \"No ma'am. I'm a Baptist, but I remember something about casting bread on the waters. The offer stands; you can have all you want.\"\n\n\"What else you got?\"\n\nI uncovered the basket of carrots, the spring onions, the heads of buttercrunch lettuce, the loose lettuce for salads, and another basket of mixed greens.\n\nShe just looked for a minute, then asked for my phone. She made three calls. Ten minutes later I was surrounded by older black and Hispanic women, all talking excitedly. Twenty minutes later, everything I had was gone, a line of ladies clutching bags like they held gold.\n\nThey all thanked me and I asked them why they didn't just buy produce from the grocery stores. The woman I met first explained.\n\n\"We ain't got no grocery store. The last one left ten years ago, after being robbed one time too many. We have to ride the bus twenty-four blocks to get to the closest one, and they don't like our business much. They follow us around like we're gonna steal. And you can't get much at a time, not and carry it on a bus. You breaking down here is like a gift from God.\"\n\nIt hit me what a captive market this could be. I asked her if she thought I could sell if I showed up the next Saturday. Instead of being happy she frowned. \"You could bring three times what you had today and go home empty in three hours. But this is a bad neighborhood, white boy, like you would stick out like a sore thumb. Wouldn't take long for the homeboys to notice you. I wouldn't if I was you.\"\n\nI drove her the three blocks to her home, offered to help carry her stuff, but she thanked me, yelled at a couple of ten year old boys that were hanging around, and handed them the bags. I thanked her for her business.\n\n\"I'll be here next Saturday at eight, same place. Spread the word.\"\n\nShe looked at me and finally smiled. \"God bless you, boy. I hope you know what you're getting into.\"\n\nShe got my number, and I went home feeling good. She called me the next Wednesday. \"You take EBT?\"\n\nEBT cards were the next generation of food stamps. I didn't, but there was an app I could get, and a scanner to use on my smartphone. \"I will by Saturday.\"\n\n\"If you could come on Friday it would be better, We all get our cards then, and it goes pretty fast. I got a lot of neighbors wanting to see what you got.\"\n\nFriday worked even better for me; that way I could make my regular market and keep all my customers happy. I worked four ten-hour days so it would work. I told her it would have to be afternoons and I would be there at two.\n\nChapter 6\n\nI was more than a little surprised to see a small crowd gathered that afternoon, glad I had hit my buddies up for any excess they might have, just in case. I think I may have overloaded my phone, and I was sold out by four. As I was packing up to leave a cop car rolled in, and two cops, a huge Hispanic guy and a shorter black guy getting out.\n\nGrandma Greely was still there, waiting for her promised trip home, and she greeted them by name.\n\n\"Officer Jose, Officer Dan, how ya'll today?\"\n\n\"We're fine,\" answered the black one. \"What you got here?\"\n\nShe motioned me over and introduced us. \"Officers, this young man is Steve Moore. He's a farmer, got him some mighty fine stuff here. God dumped him in my lap, and I ain't letting go. He's got good stuff, fresher than anything you can get at the store, cheaper, too, and I ain't got to go half-way across town to get it. You boys be nice to him.\"\n\nWe shook hands and talked for a minute. They seemed like nice guys. Grandma was talking to some latecomers, telling them I was out but I'd be back next week, and they got me off to the side.\n\n\"Don't take this wrong, it does us good to see you here, to see these folks this happy. If you could keep coming back, it would mean a lot to these people. But this is a bad neighborhood, son. Crime, drug use, shootings, all sky-high. You'll be a mighty tempting target, a white boy doing a cash business. We'll do our best to keep an eye on you, but watch your back. And remember, if you're faced with it, it's just money. Give it up and live.\"\n\nI thanked them for their concern and showed them my conceal carry permit, telling them about the Bond Arms four-ten two shot pistol and the Smith and Wesson .40 caliber, both within arm's reach when I worked. They frowned a little, and told me if I had to use it, make sure no one else got hurt, and reminded me again that it was just money.\n\nOfficer Jose told me as he got into their squad car that I also needed a special business license, as my farmers market credentials didn't cover me here.\n\n\"Relax, it's only fifteen bucks. I'll tell my buddy in permits you're coming, so it should be a breeze. My mother bought from you today, it's how we found out you were here. I'll find out how good your stuff is come Sunday. Remember, be careful.\"\n\nI had noticed a few young black guys checking me out, but they hadn't approached me, so I let sleeping dogs lie.\n\nThe next day I was telling my customers about my new location. Ms. Chen, a tiny oriental woman who was also a lawyer, gave me her card. \"You keep going there, sooner or later you're going to need me. Give me my produce this week free, and we'll consider it a retainer.\"\n\nChapter 7\n\nIt soon became obvious the demand was outstripping the supply by a large margin. I had signed up every farmer I knew and a lot that were friends with them but I didn't know, and found myself having to pull a small trailer behind my truck, and still selling out. I had five or six folding chairs, and I would take them along, setting them up for Grandma Greely and her friends, along with a canopy for shade. She had become the official hostess, and would hold court while I worked. When it got to be too much for me, she sent me her fifteen year old granddaughter, and I showed her the prices and how to use the scales.\n\nShe wouldn't take any money from customers, though. I surprised her by paying her, minimum wage for three hours, the time she got home from school until I was packed to go. I paid her in cash, and tears came to her eyes. It was the first money she had ever earned. I told her I would up her pay if she would learn how to use my app for EBT purchases and handle the money when I was busy. She seemed surprised that I would trust her with money.\n\n\"Why, you gonna steal from me?\"\n\nShe was a very pretty young woman, black, white, and Hispanic mixing together in a very attractive balance. She blushed and said she would never do that.\n\n\"Didn't think so. I'll let you in on a business secret. People like to buy from pretty girls. Now hop in the truck and help me get your grandmother home. I expect you by three next Friday.\"\n\nThe two officers made it a point to cruise through at least twice while I was there, and word got out.\n\nIt didn't stop one guy from trying his luck. I was packing for the day, Grandma Greely and two of her friends were sitting chatting while her granddaughter Alice helped me total out the day and pack up. I was paying her ten dollars an hour by then, thirty dollars a day, and was thinking about taking her with me on Saturdays, which would give her another fifty a week. She was very excited when I told her we would give her a try next week.\n\nHe was young, thin, with the wild eyes and jerky mannerisms of a junkie. He had a tiny pistol, a little twenty-five automatic. Not much of a weapon, but I still didn't want to get shot by one.\n\nHe was weaving, demanding the money. I reached for the money box, grabbing the Bond under it. I did not want anyone else to get hurt, and at short range the four-ten would blow him almost in two. The pistol didn't have a chance to clear the table, when two guys slammed into him, hard. He went down, and they kicked the shit out of him for about five minutes.\n\nThey stood back, and instead of smiling, the two glowered at each other. Grandma Greely broke the silence. \"Miguel! Michael! You boys behave now. This is Steve Moore. The black one is my grandson Michael, and the other guy is Miguel. They used to be friends, until politics got in the way. And Miguel is the grandson of Tina, my best friend.\"\n\nTina was sitting beside Grandma Greely, and she was giving Miguel an earful in Spanish. To make it more interesting, the cops pulled in, looking at us talking and the unconscious guy on the ground.\n\n\"What happened to him?\"\n\nMiguel looked at him blandly. \"I think he fell down.\"\n\nMichael chimed in. \"Yeah, that's it. His eyes just rolled back in his head, and he fell. Must have landed wrong, and it knocked him out. Junkies, huh?\"\n\nOfficer Jose reached down and picked up the little pistol. \"Well, I think we'll take him in, possessing an illegal firearm and all that. You, you, and you come with me.\"\n\nMicheal, Miguel, and I walked with him to the side of the building. \"Steve, let me introduce you. Miguel here is the leader of a 'social' club known as the Tenth Street Kings. Michel here leads the Brothers of Shadowwood, the name for the local projects. They clash from time to time over business interests and territories. They'll screw up one day, and become guests of the state, but right now they're clean.\"\n\nHe turned to them. \"Here's the deal, boys. You leave this man alone. He's doing a great service to the community, your grandmothers love him and he's not really making enough to make it worth your while to hassle him. He's also got your sister working for him, Michael. Do you really want her to get caught up in a crossfire? Maybe down the line he'll get big enough to hire more help, you got a young sister, don't you, Miguel? If something were to happen to this man, if he were to stop coming, the city and this neighborhood would be very disappointed, not to mention two local cops. Locals who might just get interested enough to dig a little. We understanding each other here? I want your word that you'll leave him alone, you might even want to have a couple of your guys keep an eye on him, to avoid ugly incidents like today. Now shake hands with each other, and let's go back out front.\"\n\nThey looked at each other while I extended my hand.\n\n\"Deal?\" They shook my hand, and surprisingly, each other's.\n\nMiguel grinned. \"One thing. I know you give his grandma her stuff free. I want the same thing for mine. Deal?\"\n\nI shook his hand again. \"Deal.\"\n\nWe walked back around the building to nervous faces, who relaxed when they saw us smiling.\n\nMiguel and Michael hung back a little, talking, and from then on, every time I was there, there were a couple of guys that seemed to hang around. I always made sure they had bags to take home to their families.\n\nThe cops told me later it was the first time the two had talked face to face in two years, and crime in a four block square dropped over fifty percent after the deal was made.\n\nThings rocked along for almost a year. When the local season ended I hit the regional commercial farmers market, looking for the best stuff at the best price. It got cold, and I bought some space heaters and comforters for Grandma Greely and Grandma Vasquez and their friends.\n\nThe new season was just starting when some guy in a suit came by and sat watching for about an hour. When the market was done, he came over and introduced himself.\n\nHe was from the management group that owned the building. They had tried to sell it for years, but no one was interested because of the location. He was there to offer me options. One, stop trespassing and set up somewhere else, or two, lease the building for a very moderate price. He then outlined several of the programs available to anyone interested in operating in high risk areas, cities around the country were just coming to terms with the concept of food deserts and their impact on neighborhoods. I talked it over with the Grandmas and Alice after he left, and they were very excited. They made phone calls, and Miguel, Michael, Jose, and Dan showed up. Alice took the Grandmas home while we sat and discussed it.\n\nThe general consensus was it would be a very good thing, and the boys agreed to leave the store alone. Jose and Dan promised a bigger police presence until the store got on its feet.\n\nI talked it over with Ms. Chen, and she looked into it for me, finding all kinds of government programs from the federal level all the way down to the city.\n\nThe place needed work: new coolers, shelves, lights, paint, but I leased it through a government program that had me paying two hundred a month for two years. At the end of that I could pay full rent or buy, but I was on contract to keep it open for at least two more years.\n\nMs. Chen was worth more than her weight in gold, guiding me step by step. She headed her own firm by then, and we were one of her biggest customers.\n\nI took a leap of faith and quit my job, increased my acreage, and was now a full blown small-business man.\n\nChapter 8\n\nWe opened Grandmas' Faith Grocery Store, five months later. There was a lot of hoopla, politicians praising each other for bringing affordable food back to the masses, that sort of thing. The locals just smiled and thanked Grandma Greely and Grandma Vasquez. They were stunned when they unveiled the store logo, both their faces smiling back at everyone walking through the door.\n\nMs. Chen had wrangled a deal with an independent grocers association, getting access to their prices instead of what jobbers charged to outfit a bodega. They took it on faith, if it succeeded it would lead to more business, and if it failed they could shrug their shoulders and say they tried to help the community. I think they were shocked at the volume we did, rivaling some of their smaller full-service stores.\n\nWe opened at eight every morning and closed at seven every night, and we were closed on Sunday. Even though we were in good graces with most of the people who could do us harm, I didn't want to expose my people to risk any more than necessary. It was one of the reasons I decided not to carry alcohol. It took a lot of temptation away, and besides, I needed that cooler space for vegetables and milk.\n\n I had people. Alice worked from three to eight, three days a week, and eight hours on Saturdays. Miguel's youngest sister, seventeen, worked the same hours as Alice on opposite days, and Consuela's Spanish skills helped us tremendously. I even took Spanish classes, and could now speak it, poorly. I think a lot of customers came in just to hear me try, and laugh as they corrected me.\n\nBesides the girls, I had four middle-aged women working the two registers I had to keep open all the time. I also had two full-time stockers, because the place was small and stuff came off the shelves pretty quickly. Both were mature men, happy to have work, and I paid pretty well. The girls got ten an hour, the women and men fourteen when they got to top pay. In the summer, I paid the girls the same, because they worked full-time. I wanted to make money, but I wanted those that worked for me to make a living, also. Even after all these years, I have one of the lowest rates of turnover of any grocery chain.\n\nEveryone who worked a register was trained on how to handle a robbery. Open the cash register, raise your hands, and back away. You also mashed the panic button on the floor as you backed away, and the police usually responded quite quickly. We only had three the first year, pretty amazing really. The fact that I kept two coffee pots going in the office and we never, under any circumstances, charged the police for snacks, probably helped a little. Plus, the guys they caught got the shit beat out of them when they made bail or got out of jail, courtesy of the two \"social\" clubs. Word got out.\n\nAfter the first year, I had to give up the farm. I just simply didn't have time, anymore. It broke my heart, but I realized I could do a lot more good in my store.\n\nThe place was a cash cow. I had no competition to speak of and a good reputation in the community. The Grandmas, as they came to be called by everyone, were there three or four days a week, holding court with their friends. If you wanted something known in the community, drop a word to them and everybody heard about it before the day was out.",
        "Dan and Jose came by one Friday with a man that wanted to talk to me. He was there to invite me to a private meeting with the City Commissioners. They had a proposition for me.\n\nIt seems the city had acquired a grocery store in a strip mall, by default, seized as part of a drug case. They wanted me to expand to a full-service store, and would sell me the store for fifty percent of its tax value, in exchange for a contract that I keep it open for five years. I got Ms. Chen in on it, and she told me I would be a fool to walk away from the deal.\n\n\"What do I do with the old store?\"\n\n\"Anything you want. Think of something that would help the community, and I'm sure you'll get support. It's only three blocks away, so all your people can follow you. You know you need to hire a full-time manager, someone you can get on contract for a year or so to show you how to properly run the business, and you'll have to triple your workforce, at the very least.\"\n\nI had a meeting at the store, telling them we were moving, but it was close by and they still had their job. Most were for it, but a couple wanted to know what I was going to do at the old location. \"I don't know yet, but I don't want to close it. I'm open to any idea.\"\n\nThe move took five months. Some renovations were necessary, and hiring had to be done. I had nine hundred applications for thirty jobs. Alice had graduated, and I made her produce manager. Part of the deal was she only worked thirty hours, but got paid for forty eight, the time being spent in school while she got an associate degree in management. She had two more semesters to go.\n\nConnie, as she liked to be called, was grocery manager, with the same deal as Alice. One of her responsibilities was to make sure all our advertisements were bilingual.\n\nI hired a man in his sixties with an impressive resume, putting him on contract after his old company forced him out, at a very nice salary. I was so impressed at the end of his contract I gave him the option to stay, which he jumped all over. The fact that he was black was a boon to the business, because you didn't see a lot of white faces in the store. I didn't hire him because he was black, he was the best qualified person I could find, and I couldn't see a color on his resume.\n\nThe old store got yet another facelift, some additions to help the new business. I mentioned once to Grandma Greely how I missed my own grandmother's fried apple pies, and two days later she gave me a whole basket of apple pies, which the crew inhaled. I have to admit I hoarded back a few, eating all of them the same day, enduring her laugh at my stomachache. Grandma Vasquez, not to be outdone, made a &lt;i&gt;tres leches&lt;/i&gt; cake. Soon the other grandmas got involved, from coconut pies to lemon pound cakes to raspberry bars.\n\nI formed a co-op, got a man to guide them through breaks they could claim as a cottage industry, and opened a pastry cafe, complete with twenty tables inside and ten outside for use in good weather. The Grandmas still held court, having taught their recipes to their granddaughters and grandsons and putting them to work. There was very little trouble because there always seemed to be a cop around. They and any fireman, EMT, or other members of public service got the first piece free, the cost coming out of my share. After a year, we set up a commercial kitchen beside my grocery store, me being the only client. As I expanded they expanded, until I couldn't monopolize them anymore and they went countrywide, a bakery in every section of the country. I was the majority owner, but the original ladies got a share, and had become wealthy enough that EBT cards and social security were a thing of the past. I was pleased to see that even though they could afford to move into any section of the city, they stayed. It didn't stop them from buying nice homes in the neighborhoods and sprucing them up.\n\nChapter 9\n\nOne day a man in a nice suit came in and asked if I had a few minutes to spare. I thought he might be a salesman, but I had time, so we went into my office. He surprised me by pulling out a portfolio of my holdings, my stores, the bakeries, the pastry shop, showing how much they were worth. \"You have a lot of money tied up in this section of the city, Mr. Moore. It would be a shame if something were to happen, say fires, vandalism, that sort of thing. I'm offering you an insurance policy here, a contract that would stop any of that from happening, and the cost is only fifteen per cent of everything, a bargain really. My employers require an answer in the next seven days. Think carefully before you decide.\"\n\n\"Is this an attempt at extortion?\"\n\nThe man looked mildly amused. \"Not at all. We are merely a protective service, to make sure no bad luck should befall you.\n\n\"At fifteen percent of my worth?\"\n\n\"Well, the cost is a little higher than normal, but we guarantee our work.\"\n\n\"I see. I have partners, you know. I'll need to confer with them.\"\n\n\"Ah yes, a lovely bunch of ladies. All well advanced in years. Part of our services is health insurance. It would be a shame if something were to happen to one of them. Bones have a hard time healing as that age.\"\n\nHe looked surprised at my expression. \"You shouldn't have done that. I can tell you my answer right now, Not no, but HELL NO! Take your slimy ass and crawl it back under the rock you usually hide under. Does the light of day hurt your eyes?\"\n\nHe merely shrugged. \"I urge you to think about it. Seven days.\"\n\nI called Jose and Dan. I always taped my office conversations, for a variety of reasons, glad now I did. They ran his photo, and he came back as a low-level point-man for a branch of the local organized crime family.\n\n\"This is serious shit, amigo. He must have known he was being taped, because he never once made an outright threat. We need to get the task force on this, we've been hearing rumblings lately they were wanting to expand their turf. Might want to tell Miguel and Michael a shit storm is coming, the first thing they do is freeze the locals out.\"\n\nI called them both after they left, through their grandmothers, saying that I had something serious going on that affected them, and we all needed to talk, the sooner the better. We met at the pastry shop the next night, after closing hours.\n\nAfter our coffees and snacks, I told them what was going on.\n\n\"Look boys, I know what you do, how you make your money. I don't particularly like it, but if it wasn't you, it will be someone else. You've always been square with me, so I'm going to tell you what I know.\n\n Something you might want to think about, in the future, is how many old gang leaders do you see? Your careers have a shelf life, and you might want to start thinking about exit strategies. Your life, though. I just don't want to sit with your grandmothers as you get sentenced to twenty years to life.\"\n\n\"That sermon over, what are you going to do? The cops know, and they sent word you guys need to get your ducks in a row and keep a low profile, if you can. I'm not bowing to those assholes. One thing you need to know. If I have to pay protection, I want to deal with family. I need a few guys from each of you to keep an eye on our businesses, and your families. And family comes first. If you see them getting ready to burn my stores down and get a message that your grandmothers are in danger, you let it burn and go to them, got it?\"\n\nI walked out, leaving their mouths hanging open.\n\nChapter 10\n\nThe man returned in seven days and was stunned to see Micheal, Miguel, Jose and Dan already there.\n\n\"When I got your offer, the first thing I did was consult my friends; after all, they have a lot more experience on these matters. The general consensus is that you may be right, but I like to hire local. So, thanks, but no thanks. Have a nice day, now.\"\n\nHis confidence had returned, and he smiled. \"It's unfortunate that you refused our generous offer. But, I'm sure you think you know what is best for your families and company. I'll be leaving now.\"\n\nHe rose, but Dan surprised him. \"Sit your ass back down, Slick. We got things to discuss. Your bosses run things based on returns. There's not going to be any profit here. It would be very expensive to try and change the neighborhood.\"\n\nThe man smiled. \"May I?\" he said, reaching into his briefcase and pulling out a folder. \"Ah, here it is. Sgt. Dan Pettigrew. You live on Eighteenth Street, you have a lovely wife, she even looks like a librarian. A sexy librarian, if I may say so. You have a sixteen year old son, a whiz on the basketball court. College scouts are already looking at him. Oh, and a daughter in college. Vassar, I'm impressed. Even on a scholarship it must be tight. You know, college campuses have the highest incident of rape in the country. Some girls just disappear. And sports injuries are so common, anything could happen to end his college hopes. As for your wife, she...'\n\n\"You can stop right there,\" I said, as Dan's fingers were closing around his pistol grips, opening my own folder.\n\n\"Brian McCaulkey. A lawyer no less. Harvard, my turn to be impressed. You have a beautiful ex-wife and two daughters in Catholic school. Very attractive young women. You know how wild Catholic girls can get, especially when they're exposed to minorities, their urge to walk on the wild side can be overwhelming at times. Drugs, sex, damage to reputations, no chance to get into the really good schools when they look at their records. All kinds of repercussions. I think we've both made our points here. Touching a family member would result in mutual destruction on both sides. I think we should agree to disagree and never cross paths again.\"\n\nHe had gone from red to pale to red again. He rose, giving us a parting shot. \"I'll tell my employers it might be wise to wait a few years before they approach you again, but they are very determined people. I urge you one more time to accept my offer.\"\n\nMiguel exploded before anyone could stop him, jumping up and towering over the man. For the first time, I saw real fear on his face.\n\n\"Motherfucker, my grandma gets so much as a stumped toe, your daughters are going to get a shot of habanero sauce. Feel me motherfucker? As soon as me and my boys break them in I'll send you the video of them and their mother as I ship them off to an exciting career south of the border. Then I'll come after you. You're small, cute, dress you right and I could get a pretty good sissy price out of you. And I'll make sure your new Daddy is into discipline. Might want to start wearing a butt plug now, to get used to the idea.\"\n\nThat shook him pretty bad. He looked over at Michael, and Michael told him everything Miguel did would be light compared to what he had in mind.\n\n\"I won't touch you until I'm done with them, but I will be sending regular videos of how well their training is coming. When I have them completely broken in, I know a couple of pimps who would pay me top dollar for high end white bitches. Then I'll be coming after you, and I'll do what Miguel said, only there won't be any sweetheart moments. I'll sell you straight to some guys I know who are into rough trade. You'll be a pain-slut in less than a week, I guarantee it. And tell your boss he can't protect that fat hairy princess of a daughter, one of us will get her. We'd go after her mother, but she's already proven such a whore we can't think of anything to do to her she hasn't already tried. Does your boss know you're fucking her? You better use extra strength rubbers, bitch, or you'll get a gift that keeps on giving. One of the Brothers made sure of that. Consider it a down payment of what's coming.\"\n\nThe man was obviously shaken. He tried to say something but we pretty much shoved him out the door. Jose looked at me. \"This on tape?\"\n\n\"Nope. This is one conversation I thought needed to be private. He's threatened all of us. What do you want to do?\"\n\nWe sat into the night, making an uneasy alliance. I got four guys, two from each gang, watching our businesses round the clock. I paid them, making it legitimate, as assistant managers. I even had the two obvious ones wear shirts with the store logos, and handle stock every one in a while. They understood after I explained.\n\n\"You just stand around, you get made. You put a few things on the shelves, carry some boxes, they write you off as employees. Lazy employees, but still workers.\"\n\nOne actually liked it enough to ask me for a job when this was over. I promised him if he did his part of the deal, that I would send him for training and assure him a position.\n\nBoth \"clubs\" sent me information through them, that I passed along to Jose, through his mother. I read in the papers a few days later a barbershop had been busted as a front for a bookie shop, and a whole warehouse of high-end stolen cars were found in containers, about to leave the country. According to the papers, they were tied to organized crime. Jose and Dan were both on their beat when it happened. I got a call from the lawyer.\n\n\"This your doing?\"\n\n\"NO. I told you, you leave us alone, we leave you alone. I read about it in the paper and saw it on television like everyone else. Surely we aren't the only ones you've pissed off lately, are we?\"\n\nHe hung up without another word.\n\nChapter 11\n\nI'll give them points, they were serious people. I think they had to move on us to keep their reputation. A guy was caught trying to torch the bake shop, and he was found on the sidewalk of the restaurant they used as a cover, unconscious. Seems someone had set his crotch on fire. Rumor had it everything had to be amputated to save his life.\n\nI think the lengths the boys went to shocked them. They hired a rival gang to do a drive-by on Miguel, but as soon as their car came into the neighborhood they were made, and when they came roaring up, automatic weapons sticking out the windows, blue lights started flashing. A guy in the car panicked, from what the report said, and opened fire. They counted three hundred bullet holes in their car later, all six occupants riddled like Swiss cheese.\n\nThey got to one of Michaels' guys, blowing him to bits. I sent over the food for the wake, the grandmothers furnishing the cakes. I shocked them all by paying for the funeral, insisting it be done right, and kept his mother in groceries for a year, giving the younger boys jobs to keep them off the streets. They went to Michael anyway, but he turned them down. \"Stay straight, little brothers. This ain't over yet, and your momma don't need to lose any more sons.\"\n\nTwo weeks after the death Michael hit a butcher shop, killing a nephew of the boss and shooting the place to ribbons. War was rapidly escalating.\n\nThey tried to hit me, but I got lucky. One of my guards made him, and came to my office. \"Got a hot one, boss. This guy look like he's shopping?\"\n\nI looked at the camera, noticing the way he looked around nervously, and how he held his hand under his jacket.\n\n\"This guy is an amateur, Cody. A professional would walk into the place like he owned it. Let's go see if he'll be reasonable.\"\n\n I took the Bond, and held it down to my side, coming up behind him.\n\n\"Can I help you find something, sir?\"\n\nLike I said, amateur. A real pro would have said no thanks and walked out, aware he had been made. This guy turned around, dragging the pistol out of his pocket. He was incredibly slow, but didn't stop despite my warnings. I was too far away to trap his hand, so when the pistol finally cleared I gave him both barrels, center-mass. He was dead before he hit the ground.\n\nI had the video tape to prove it was self-defense, and I only fired when it became apparent he wasn't surrendering, so it was an open and shut inquiry, reported as an armed robbery gone wrong.\n\nDid I feel good about taking a life? No, not a bit. Could I have handled it better? Probably. I was pragmatic enough not to let it bother me too much.\n\nChapter 12\n\nEnough was enough. The next day I was standing outside the restaurant when it opened. I was made instantly, but when a guy in a waiter suit came by and suggested I leave, as there was a private party in progress, I asked him to tell Mr. G the Grocery Man was there, and would like a few minutes of his time.\n\nI was sweating bullets when the man came out and motioned me over to a table.\n\n\"You are full of surprises, Mr. Moore. The last thing I ever expected was for you to walk in the door today.\"\n\nI sighed. \"I came to see if I could get the killing to stop before it gets really bad. Those boys aren't going to give up anything without a fight. Neither am I. Your actions have focused attention on all involved. It might get uncomfortable for you, being under so much scrutiny. The last thing this city needs is another killing.\"\n\nHe didn't bat an eye. \"Why are you telling me these things, things I already know?\"\n\n\"I'm just clarifying positions. They won't give up without a fight. I won't give up without a fight. Will all the bloodshed be worth it? More importantly, will it result in greater profit? Despite how you conduct it, it's still a business. How profitable will it be when all the money is covered with blood?\"\n\n\"You know it isn't that simple.\"\n\nI rose. \"It is to me. Well, I can say I tried. Think of your families, this will be an eye for an eye type of war. Lots of people will die, and the need for blood will never be quenched. Let's stop it now. It's only a very tiny part of this big city. Let it go.\"\n\n I rose, thanked him for his time, and walked out the door. He called out to me just as I touched the handle.\n\n\"It's not up to me. I just give all the information I can to my bosses, then we run cost analyses, to make sure any action we take is profitable. This could get very expensive very fast, and expenses without returns are not good business, no matter what line of work you're in.\"\n\n\"So then, peace?\"\n\n\"No. Truce. If my people don't take my suggestions, we will proceed. If they do, then we have peace, at least for a little while. It's the best I can do.\"\n\nI walked back over and stuck my hand out. He seemed surprised, but took it after a few seconds. His grip was firm without being overpowering, a good sign. Too strong meant aggression and an attempt at dominance, too soft and it made you suspect their sincerity. A brief, firm shake meant he acknowledged you as an equal and someone worthy of respect.\n\nI told Miguel and Michael the war was on hold, and to try not to do anything that would spark it off again. I also passed along what Jose and Dan had told me.\n\n\"You're under the microscope now. The killings and violence have gotten the powers that be watching a little more closely, and the new DA and Mayor both got elected on promises to make the city safer and reduce crime. Be careful.\n\nAnd boys, if I hear anything, I might give you a call. If I were to say, for example, 'how's your Momma doing?' it means grab everything you can and disappear because they're coming for you. Might want to make sure you have liquid assets available, just in case.\"\n\nI think they were both stunned. They never really answered, just nodded.\n\nThe DA did try to make a circus out of the situation, bringing in a task force to deal with the problem. He even made a run at me, saying I was associated with the local criminal element. The community, thinking the store might close, and their jobs would be lost, raised hell to their local Councilman, making it really plain that if I was driven out he could kiss his political career goodbye. He was young and had his heart set on higher office, so he came out in support of me. We even did a press conference together.\n\nHe spoke, praising my accomplishments and involvement in the community. He even joked that if I could run on the ice cream ticket, he would be out of a job.\n\nIt started, just like most things in my life lately, by accident. Alice had a little sister that was struggling with school and needed encouragement. She was twelve, and came to work with Alice one day out of boredom. We ended up talking, and I pointed out to her how much education meant to Alice. She was set to receive her two year degree in three weeks, and wanted to continue schooling. I helped her check into scholarships for disadvantaged youth, and it looked like I was going to lose a manager, at least for a couple of years. She was hoping to attend one of the three local colleges and still work part time.",
        "Amy was having trouble with math, and I had always been good at it, so I helped her for an hour or so, showing her how to simplify every problem, breaking it down into small parts and then tying them together to get the right solution. She laughed like a kid at Christmas when she finally understood. I walked her over to the ice cream cooler, pulled out a box of what I knew were her favorites and gave her one.\n\nI made her a promise. For every improved grade she got on her report card, she got an ice cream. Get an A in any subject, and it was a whole box. Apparently she talked about it, because a week later her best friends were waiting for me. \"Can we get the same deal?\" There were only five of them, so I agreed without thinking. Now there were four elementary schools, two middle schools, and even a high school involved. I put Alice in charge of it, making Amy help her, and every Friday afternoon there would be close to two hundred kids lined up. If you got an A in anything, we made a copy of it and posted it in our store window, the A highlighted with yellow marker. If you got straight A's, you got a pizza party. Good thing I got ice cream and pizza wholesale.\n\nI surprised everyone by stepping up to the microphone. \"I'd like to say a few things, if I may. I'd like to start out by admitting to consorting with criminals. Two-thirds of my work-force in all my businesses have criminal records. Doesn't stop them from being honest trustworthy workers who want to put the past behind them and make a good life for themselves and their families. My store is open to the public, any member of the community is welcome, regardless of who they are or what their past and present happens to be.\n\nA big city is made up of small communities, just like a small village. And just like a village, everybody tends to know everybody. So yes, I do consort with criminals, I even have a few ex-gang members working for me. They do a good job, and as long as they perform to the standards I've set, I don't have a problem with them. If their friends happen to stop by and behave themselves, I say nothing. I'll never attempt to be their judge or jury, others in the community will handle that, and ultimately they'll face the highest Judge of all, to atone for any sin they may have committed. Anything I might do would be so insignificant compared to that it just seems pointless. So I welcome all to my businesses if they behave. There's a lot of good in this community, good that gets ignored, mostly. I finish with this. I never in a million years thought I would end up here, but God pushed me this way, gave me to Grandma Greely, and the rest is history. This is my neighborhood now, and I'm proud to be here.\"\n\nThe crowd clapped and called out in approval. The politicians, seeing the writing on the wall, backed down. I even got the Businessman Of The Year Award from the city, a nice write-up in the papers and did guest-shots on the local television stations. It seemed someone noticed.\n\nChapter 13\n\nTwo weeks later the Councilman for our district approached me, asking for an hour of my time. There was another man with him when he showed up, and I met them at the pastry shop.\n\nOver coffee and pastry the man made his pitch. \"I'm also a Councilman, representing a district much like yours in another city. High crime rate, section 8 apartment complexes, high unemployment, the whole gamut of the ills of the poor and disadvantaged. BIll and I met at a conference last week, and he told me about you. If you could spare the time, I'd like for you to come to our city, meet with the Council, and explain what you've accomplished. Maybe you could offer some advice that will help us get something like you've created off the ground. Maybe you could expand, ever thought about that?\"\n\nNo, I hadn't. I was making really good money off the bakeries, the store and the pastry shop. Still, I was proud of what I'd accomplished, proud of the difference I was making in the community. I agreed to meet them in three-week's time.\n\nThe first thing I did was talk it over with my advisors. Both Grandmas, Dan and Jose, Ms. Chen, Michael and Miguel. The consensus was that I should help them if I could.\n\nI rented a big van and they all traveled with me. They dropped me off, saying they wanted to see the area while I talked to the Council.\n\nIt was a three-hour meeting. Most were all for a program like the one I'd stumbled onto. Two were totally opposed to it for some reason.\n\nMy people were waiting for me when I got through, and they took me to a soul food kitchen they'd found. I noted I was the only white face in the crowded dining room, and there was a lull in conversation when we entered. They must have decided I was harmless and the talking went back to a dull roar.\n\nDan started the conversation. \"There's a medium-sized grocery store two blocks over. It's been abandoned for four years so it will need a lot of work.\"\n\nGrandma Vasquez continued when he stopped. \"It's in a strip mall, and there's a storefront next to it perfect for a pastry shop. You could recruit locals and do the same thing you did with us. We'll even help train them and share recipes.\"\n\nMs. Chin went next. \"I bet if we worked the programs you could get the whole thing, all the empty shops, for practically nothing. Do a little renovating, establish it as a safe place, and you could fill every shop. It's a golden opportunity, son.\"\n\nMichael and Miguel chimed in, saying there was gang activity, but it was mostly locals, no presence of the national organizations. \"Not enough money flowing,\" Miguel said, \"so it's not worth their time.\"\n\nI looked at the table and they grinned at me. Grandma Greely said it best. \"You got everything squared away at home, son. And to be honest, you've seemed a little bored lately. Work your magic, one more time.\"\n\nI thought about it for a few days, then Ms. Chen and I made appointments. She got me the programs I needed, and I bought the strip mall. It took four months for the construction crews to finish the grocery store and I used the time to hire the people I would need.\n\nI found another store manager, a fifty-eight year old Hispanic woman who'd been passed over for promotion a dozen times at the chain where she'd been working. She was a gold mine, helping me recruit talented people like her, mostly minorities and women who knew their options were limited at other places.\n\nChapter 14\n\nThere was a big media event the day before we opened, covered by the local papers and every television station in the city. I introduced the team that would be running the store, from Mrs. Hernandez down to every part-time worker. We toured the store, the wide aisles, the well-stocked shelves, the shining produce department, the state of the art butcher shop.\n\nThe media was suitably impressed and the clips looked good on television. There was a crowd standing at the door an hour before we were scheduled to open. Mrs. Hernandez and I stood at the entrance and welcomed as many as we could, personally, giving them coupons good for opening day only. We'd had a thousand printed up and were out by noon. It slowed down a bit after the first month, but still did a booming business.\n\nTwo months later the pastry shop opened, again to good press. The Grandmas made a personal appearance, stunned to find they were celebrities in their own right. Oprah had heard about them, invited them on to her show. She seemed amazed at the story, especially about my involvement. Grandma Greely grinned. \"Who knew a flat tire, collard greens and an extraordinarily nice white boy would put us on the path we are now. Steve Moore was gift from God and one of the nicest men I've ever met. And ladies, he's single.\"\n\nOprah grinned and said I sounded like a catch, and the crowd made appreciative noises when my picture popped up on the screen.\n\nA month later, a fast food type Chinese restaurant opened to immediate success.\n\nThen a lady walked into the store and asked me for a moment of my time to present me with an opportunity. She was tall, well developed, her hair cut extremely short with a small part on the side. Her large dark eyes were expressive over a cute little nose and small mouth full of gleaning white teeth. She seemed amused when it took me a minute to speak coherently.\n\nI invited her over to the pastry shop, and over a cup of coffee and a pastry she made her pitch.\n\n\"I want to open a restaurant. Not just a restaurant, a soul food restaurant. My grandmother was from one of the bayous of Louisiana and she taught me Cajun and Creole. My other grandmother was from the Low Country of South Carolina and taught me all her recipes, even from the Gullah. My grandfathers were from France and Mexico, and I learned from them as well. I've worked in LA. New Orleans, Charlotte and Atlanta in different restaurants and learned from all of them. My food will be different, soul food with an international twist.\"\n\nWell, that explained her coloring, a light caramel. \"Why are you telling me this?\"\n\n\"Because I want to open it in this area, specifically, right here. I could take over both empty storefronts left and turn it into a cozy place that still has a good bit of room.\"\n\n\"If you want my blessing you have it. Contact the management firm I use and start the paperwork.\"\n\nFor the first time she looked less confident. \"I can't.\"\n\n\"Why not?\"\n\n\"Because I don't have nearly enough money. I've saved some, but it is still less than half of what I need to do it right and I don't want to scrimp.\"\n\nI could see where this was going. \"I'm guessing you want me to invest in you, be one of your partners?\"\n\nShe shook her head. \"No. I want you to be my only partner. Too many cooks and so on. If I have to argue, I want it be with just one person.\" Sandra handed me a portfolio.\n\n\"Here, my credentials, my financial report, the estimates of the cost of getting it up and running, everything I could think of you might need. If there's anything else you need I'll get it for you.\"\n\nI took the papers. \"Well, it looks like you've thought of everything.\"\n\n\"I hope so. One more thing. You'll own 51% so any final decision will be yours alone. I will insist in turn that I have complete control of the kitchen and staff. Think about it. It's a good investment, my dream and I'll make you a lot of money.\"\n\nI grinned. \"I'm at the point in my life now that money is no longer an issue for me. My grandmothers will tell you, though, that I get bored easily without new projects to keep my interest. I'll consider it carefully. If I decide not to join you, I'll turn you over to some people I've become comfortable with. One or more may be interested.\"\n\n\"I don't want anyone else. Call me if you want to meet again or have questions. Thank you for your time.\" A firm handshake and she was out the door. I watched in admiration at the way her business skirt swished as she walked away.\n\nI turned to see the staff grinning at me. Mrs. Wilmington, the woman handpicked by the grandmothers to manage the shop, hugged me. \"So, coffee and a treat, a nice way to get to know someone. She seems lovely.\"\n\n\"I'm sure she is, Mrs. W. Sadly it was just a business meeting.\"\n\nHer smile got wider. \"Well then. Maybe it could turn into frisky business. She seemed to like you.\"\n\n\"Mrs. W, stop! I have enough trouble with the grandmothers, I don't need any more pressure. I've had two bad experiences with marriage and I'm a little shy about new relationships.\"\n\nShe patted my arm. \"That was most likely because we weren't around to guide you. Now go, look over those papers. I'd like to see a partnership develop on a whole bunch of levels.\"\n\nI took her advice. The business plan was sound, her credentials top notch. I was still a bit leery because a restaurant was a terrible investment. Eight out of ten failed the first year, and one of the two that survived usually folded in the second. Then again, most were because of poor judgement, underfunding and mismanagement. If you had a good plan, a sound financial base, good management and a bit of luck, you could be wildly successful. My lawyers read over the prospectus and gave their blessing. Ms. Chen summed it up. \"Even if it flops, you can still make money by writing it off on your taxes. But, son, you seem to have a Midas touch and I predict this will make you a lot of money.\"\n\nI drove home every Sunday for dinners with my family. I'd bought a house close to my original store, on the fringes of the projects. I was between Grandma Greely and Grandma Vasquez, so the place was well-watched while I was gone. Besides, Connie and her new husband were housesitting for me. It kept the house in shape and gave them time to build a nest-egg for their own home. Sunday lunch was a big family affair, Michael, Miguel, Alice, Amy, Connie, their significant others and children, Jose, Dan, their families and children, as well as assorted friends and family made the tables quite crowded at times.\n\nI always made it a point to discuss business with them, grateful for their input. They may not have business degrees (well, a couple did) but they had something much more valuable: an abundance of common sense. The papers included a picture of Sandra in a chef's outfit and to a woman they grinned. So did the men, for a different reason.\n\nWe talked it over, and it was Alice and Connie who came up with the idea. \"Have her cook for you. That will be the most important part of the business. If she can't cook, it's a deal ender.\"\n\n\"You girls are geniuses! But cooking for one doesn't give you much of a focus group. I'm going to invite her to cook for all of us, using her best recipes. Then I'll get honest opinions from people I trust.\"\n\nThat got them excited and it was scheduled to happen in two weeks, if she was available.\n\nChapter 15\n\nIt turns out she was. Available, I mean.\n\n\"How many?\"\n\n\"Count on thirty. Most are employees, business partners, with a few old friends thrown in. Not to put pressure on you, but my three grandmothers and my mother will be there, and their opinions carry a lot of weight.\"\n\n\"I'd ask how it's possible for you to have three grandmothers, but I think I'll wait until you can tell me in person. There's a problem. No way can I fit that many people in my apartment.\"\n\nI had an answer. \"Not a problem. If you can do it on a Sunday, the pastry shop is available. It may not be set up the way you're used to, but it's still a commercial kitchen.\"\n\n\"I'll need help for that much cooking.\"\n\n\"You sound like you don't want to do this. If you're going to run your own place you'll have to learn to deal with things that come up unexpectedly.\"\n\nI think I offended her. She was a little short in her answer. \"Two weeks. I'll handle everything. I'll serve at one. If anyone is late you will start without them. I want to have the food served promptly for maximum effect and flavor. I'll talk to Mrs. Wilmington so I can have access to the kitchen on Saturday night for the prep work. Goodbye.\"\n\nI looked at the phone after she disconnected. Bit of a temper on that one. Then again, all chefs seemed a little flighty, to me.\n\nI got one more call the next week. \"Any of your group Jewish? Or Muslim? If they are I'll have to adjust the menu.\"\n\n\"Ms. Chen and her husband are Jewish, and Michael's girlfriend follows Islam. With the exception of those two the rest of us will eat most anything in front of us.\"\n\n\"Thank you. See you next Sunday.\" The phone went dead.\n\nWow, she must still be pissed.\n\nMy family showed up on time, renting three vans to hold everyone. Sandra unlocked the door at 12:30 and I introduced everyone as they came in. I saved the grandmothers for last.\n\n\"This is my Grandmother Tina Vasquez, my Grandmother Celia Greely, my mother Veronica Chen, and my Grandmother Sarah Moore.\"\n\nShe was a bit surprised when they all hugged her, telling her how delicious everything smelled.\n\nShe'd hired two young girls, pastry shop employees who could use the extra money, and had the meal set up buffet style, making sure there were placards designating the foods that were kosher and acceptable to Muslims. The beverages were sweetened tea, lemonade, coffee, and water, no sodas.\n\nThere was shrimp and grits, blackened chicken, paella festooned with mussels and clams, Southern fried chicken, a dish with chickpeas and ham I never caught the name of, flank steak in a mushroom and brandy sauce, deep-fried catfish, and pulled pork.\n\nShe had pinto beans cooked with a ham hock, collards, corn on the cob roasted on a grill, green beans, tiny potatoes that were microwaved and then deep-fried, potato salad, coleslaw, some kind of layered salad, heirloom tomatoes she had chopped into rough chunks in a vinegar oil dressing with fresh basil served in parfait glasses, fried cornbread pancakes, a big chunk of baked cornbread, and yeast rolls made from scratch.\n\nFor dessert there were fried apple and peach pies, four layer chocolate cake, banana pudding, and fresh churned ice cream, banana and vanilla. Basic, simple, home style and as common as dirt, but in my opinion just as necessary to the survival of the world.\n\nEveryone ate until they couldn't hold another bite. The meal took hours because no one was in a hurry and wanted to sample everything. I liked everything but the blackened chicken, which was way too spicy for my stomach. I particularly liked her fried chicken and the tiny potatoes. The fried pies were great but not as good as Grandma Greely's, but that might be personal bias. The banana pudding, though, was so good I was almost in tears. It was a huge bowl that disappeared in minutes.\n\nThere was still a lot left, and Alice slipped down to the store and bought every plastic bowl and a bunch of baggies. For some reason Sandra kept me tied up and by the time I got loose there was nothing left. I think she was smirking when she thought I wasn't looking, as well as the Grandmas. She pretty much shoved us out at four, saying she had to clean up so the shop would be ready by morning.\n\nI deliberately didn't call her. She made it to the next Thursday before she came blasting through the door of the market, coming straight to my office. I was reviewing tapes from the night before of the first robbery attempt since we opened. The cashiers had done as we'd drilled into them, opening the cash registers and stepping back. Our new registers were state of the art with a built in panic button. You hit it when you opened up the till and the police were notified immediately.\n\nI felt bad for the boys. One was seventeen, the other nineteen. Armed robbery in that state carried a mandatory seven-year sentence, but they had robbed me and threatened the lives of my employees. The cops were waiting when they rushed out the door and ran to their getaway car. They looked wildly around for the driver as four policemen stepped from the shadows. \"POLICE! DROP YOUR WEAPONS AND BACK AWAY FROM THE VEHICLE! IF YOU TURN AROUND WE WILL FIRE!\"\n\nOne dropped his weapon instantly and his hands went into the air. The other hesitated until he looked over his shoulder. Every cop was holding a shotgun. He dropped his weapon.\n\nThe cashiers were given three days off with pay to recover from the fright, and counseling was available to them. Two would come back. The other, badly frightened, resigned. I gave her a month's pay and wished her well.\n\nSandra blasted into the office and stood with her arms folded over her chest, a defiant stare on her face. \"Well?\"\n\n\"Well, hello Ms. Sandra, nice to see you. Enjoying this fine weather? I am. I was just thinking about taking a few days off, maybe go to the coast and do some pier fishing.\"\n\nI looked at her face and decided I needed to be more careful. \"Please, since you're here, have a seat. I was just about to call you. The food, by the way, was exceptional. My family is still talking about it.\"",
        "Her face relaxed for a second before she put her business face on. \"I'm glad you enjoyed it. I think you have a fine if somewhat unusual family. I especially liked your grandmothers. More wisdom between them than you would find at most colleges. Seriously, are you going to partner with me?\"\n\n\"I've thought it over quite a bit, gone over the figures with my lawyers. After their advice I've decided not to take the deal.\"\n\nHer eyes clouded over and the tears came. I couldn't help it and walked over to hug her. She melted into me for a minute before her spark came back and she started hammering me with both fists. \"Let go of me you asshole! You know what you can do with your money? You can...\"\n\nI put my hand over her mouth and muffled her. Before the shock could register I started talking. \"You have a way with food and a flair for presenting it. The restaurant would be very successful, but the money you want isn't nearly enough to start out right. You need a six-month cushion to get established and start operating in the black. Therefore, I'm doubling my stake to make sure you can focus on growing the business without worrying about money. Don't worry, I'll honor the terms of the partnership. What do you say? Ready to sign the papers? We could go over to the law office right now. Ms. Chen has everything ready. She advises that you get your own lawyer and have them look it over just to be sure everything is spelled out and understood. Good enough?\"\n\nShe stopped struggling, went pale, then turned bright red. Then she started crying again. It would seem that was her go to response. Cry if you're hurt, cry if you're happy. I would bet she had a different set of tears for every situation. I let her cry it out, handing her a box of tissues.\n\nFifteen minutes later she wiped her eyes, blew her nose, and started on me. \"You're grandmothers warned me about your sense of humor. Just so you know, I think you're a jerk for making me cry.\" Sandra stopped for a minute before grinning. \"I also think you're just a big sweetie pie for making me shed tears of joy.\"\n\nI grinned. \"I would much prefer you not use those words to describe me in social situations.\"\n\nShe just grinned. Three months later, at her grand opening, she made a short speech about how much support and encouragement she'd gotten, especially from her \"sweetie pie.\" My grandmothers looked like they'd swallowed an elephant, trying to keep from laughing.\n\nChapter 16\n\nWe were thrown together a lot getting the business off the ground. I helped where I could, but it was her baby so I left it up to her. Gradually she was calling me every day to ask my opinion about various business related topics. Then we began to have \"working\" lunches and a couple of dinners. She began giving me soft touches once in a while, and held my hand or arm when we walked. I got a glimpse of her true feelings once we ran into a former lover. We'd parted on good terms and when she saw me at the restaurant she came up to say hi. Sandy had gone to the restroom and when she came back we were standing there talking. She locked down on my arm so hard she left bruises as I introduced her. April just grinned, kissed me on the cheek, and walked away.\n\nI looked over, surprised to see Sandra steaming. \"What?\"\n\n\"I've suddenly lost my appetite. Take me home, please.\"\n\n''No.\"\n\n\"What?!\"\n\n\"I said no. I don't know exactly what's happening here, but I know I don't like it. You're an adult. At least I think you are. April and I were close once but we both knew it wasn't going anywhere so we decided to go back to being friends. She was telling me she had found the right man and would be getting married in six months. I expect the invitation soon. If you need to leave I'll call you an Uber. Just so you know, if you leave, there will be no more lunches or dinners. Our only interaction will be about the restaurant.\"\n\nI watched the emotions flit across her face. Then she got a determined look on her face. \"Steve, can I ask you something? Do you have a problem with mixed race couples?\"\n\n\"Not that I know of. My second wife was Costa Rican and it never bothered me. I wanted the woman, not the race.\"\n\n\"Ever dated a black woman?\"\n\n\"As a matter of fact I have. Two.\"\n\n\"Why did you stop dating them?\"\n\n\"One was a gold digger, attracted to the money I was making. She was subtle, but I had it figured out by the fourth date. When she started talking about moving in together, I stopped seeing her. It was not exactly an amicable breakup.\"\n\n\"What about the other one?\"\n\n\"Honestly, she was boring. She was a lawyer that I met through Ms. Chen, attractive, intelligent, but there was no spark. We made love after the fifth date, and realized our relationship would never progress. We never dated again, but we've become pretty good friends. Why the interest?\"\n\nShe snorted. \"Don't play that game, white boy. I've sent you enough signals to get a fleet moving, but you've ignored them. My progressive bitchiness is a result. If you just want this to be a strictly professional relationship then I can live with that. I wouldn't like it, but I would deal with it.\"\n\n\"You know, there's a well-known rule in the business world. Never mix business with pleasure. Then again, if I'd followed rules all my life I wouldn't be where I am today. So yes, I'd love to explore, see if we connect on a romantic level. I want one promise. If either of us decides we're not that compatible, we part ways and maintain a courteous professional relationship. Is that agreeable to you?\"\n\nShe studied my face for a minute before grinning. \"Agreed. You may take me out Saturday. It may be the last Saturday we get for a long time when the restaurant opens. Just so you know, the restaurant will be closed Mondays and Tuesdays, so you need to adjust your schedule.\"\n\nSo we started dating. Pretty much everyone close to me gave me a version of \"I told you so\" over our relationship. The grandmothers were very happy, even my genetic one. I asked her once if she had a problem with Sandy's race.\n\n\"No and yes. You two obviously meld together very well and I can tell you're happier than you've been in a very long time. The circle you move in is multicolored so they won't have a problem with you getting serious. You know how some of your uncles on your mothers' side are, though. It might get a little sticky at family functions.\"\n\nMy father had passed away when I was in my late teens, and my mother had remarried just as soon as I moved out to the man she had been seeing. I didn't like him, he didn't like me so we kept our interactions to a minimum. He always made fun of me to the family, especially after I started farming. He was a middle manager at a small manufacturing facility and thought what I did demeaning.\n\nA lot of it stemmed from the way I ignored his instructions on how to live my life, but most of it was because he wanted me to sell my land to him for a ridiculous price. He had plans of turning it into an industrial park, even had investors lined up. Besides being a good farm, it held a lot of sentimental value. It had been in my family since 1846, divided many times until there was only forty acres left. Some of my fondest memories were of helping my grandfather farm. I pretty much spent every weekend in-season, and later lived with him during the summers. He had intended for my father to have it, but he passed suddenly so he left it to me.\n\nPops had a pretty good lawyer, so I used him when Mom's husband started hinting at eminent domain. The lawyer managed to get the farm listed as an historic property, making it almost bulletproof to development as long as the land was worked. That's why when I had to give up farming I leased it to my cousin on the condition that he keep the farm viable. I sweetened the deal by buying everything he raised for my stores after I got established. He was paid about fifteen per cent more than he could get on the open market, so he was more than happy with the deal. He eventually leased another fifty acres to try and keep up with demand.\n\nMom's hubby lost a little on the deal, making promises and deals he had to prove up on or reimburse the money they had fronted him. Needless to say there was no love lost between us, and my mother barely spoke to me. They would have a field day knowing I was dating a woman of color. I'm sure the story would make the rounds and I would be the object of ridicule, but I knew they were smart enough not to let it get back to me. One cousin tried it with Mickey's Mom, and though his opinions came to be eerily true, it earned him an ass kicking of epic proportions. I was smart enough to know what button to push, and when he swung first I owned him. Still sued me in civil court for 'violence not warranted by the situation', saying I should have stopped when I had him down. My lawyer countered, suing the cousin for emotional distress, and I had a better case. The cousin finally agreed to drop the whole thing if I would. I made him post an apology on Facebook as part of the settlement. You could tell it was killing him, but he gritted through it.\n\nChapter 17\n\nAll that being said, it took four months before we became intimate. The restaurant opened to rave reviews. Soul Food International was a big hit. The food was excellent, the ambience relaxed, and Sandy made it a point to thank everyone for dining with her, making friends in high and low places. The stress was starting to get to her, so I decided we needed a little break.\n\nShe came in exhausted on Sunday afternoon. The place was open for a lunch buffet and then closed at four, giving her a little more time to relax. I took her into the bathroom, showing her the bubble bath I had prepared, along with the candles and soft music.\n\n\"Relax, babe. You need it.\"\n\nShe was startled at the effort but soon agreed it would be just the thing, moaning that she didn't have clean clothes. I just grinned and told her we'd find something for her to get comfortable in. I closed the door and was soon rewarded with the sound of her singing along to the music.\n\nHer assistant manager was a good chef in her own right, and I had bribed her into getting Sandy's sizes and doing a little shopping. A trip to Victoria's Secret netted a couple of really nice gowns, two teddies, bras and panties that were sexy, some that were just comfortable, and some that were both. There was a nice silk robe to finish the set.\n\nI also got her to get three nice dresses, two sundresses and a slinky number suitable for clubbing. There were a couple of pair of shorts and nice casual tops, two pair of jeans, new walking shoes and two pair of high heels, one two-inch and one four-inch. I had all but the prettiest gown and panty set and the robe packed into two suitcases.\n\nI gave her 45 minutes and went back to check on her. She'd gone to sleep. I could hear her gentle snores through the door. I grinned as I tapped on the door. \"Honey, wake up. I've got something for you to wear and it will be right outside the door. Come to the living room when you're done.\"\n\nI had to repeat it several times until I was sure she was awake and understood me. I heard the door open as I walked back into the living room. I put the lights to low and poured her a glass of her favorite wine, unsure whether she would want it but wanting to be unprepared.\n\nFive minutes later she came into the room, the robe belted loosely, giving me glimpses of her gown. The pale lavender contrasted nicely with her caramel skin. Just the thought of seeing her in it had me hard as a rock in seconds. There was a shy smile on her face. We had never been intimate or stayed over with each other before.\n\nShe gave me a soft but firm kiss, lasting more than a few seconds. She drew back and twirled, the robe floating out a little, revealing a very nice looking body. The lavender panties made her skin even more vivid in contrast. \"You have excellent taste.\"\n\n\"Don't thank me. You need to give your assistant a raise. She got it for me, along with a few other things.\"\n\nHer smile was radiant. \"What other things?\"\n\n\"In due time, honey. You're staying with me tonight. Will we make love? I'd sure like to, but you're exhausted and we need to get up early in the morning.\"\n\n\"Why? I've got two days off. We can sleep in.\"\n\n\"No we can't. We have places to be. And that's all I'm going to say, so don't ask any more questions. Bed, now.\"\n\nI took her hand and led her to the bedroom, turning the covers down and snuggling her in. \"Aren't you coming to bed?\"\n\n\"In just a minute. I need to wash the day off me before we snuggle.\"\n\nThat made her smile. I probably set a world record for a shower, coming out in just my boxers. She grinned as I turned out the lights. I slid into her arms as I settled down. It took me a second to realize while I was in the shower she had taken off the gown. Then she grabbed my shorts, tugging. \"I'm not really that sleepy, honey.\"\n\nI woke to the alarm; Sandy snuggled to me, her head on my chest. The night was glorious. I kissed her softly, stroking that magnificent body gently. She woke with a start, then relaxed, flexing her body into mine with a purr. \"Ready to continue from last night?\"\n\nI think I shocked her. \"Absolutely, but we don't have time. We need to shower and dress. We have two hours to get to the airport and you know how long it takes to get on the plane.\"\n\n\"Airport? I'm not moving until you tell me what's going on.\"\n\n\"We're going on vacation, baby. I haven't taken one in years, and you need to recharge. Belize, for three days of sun, sand and relaxation. So get it in gear.\"\n\nShe looked a little pissed. \"What makes you think I'll just drop everything and go off with you?\"\n\n\"Because you love surprises. And me. Don't look so shocked, if I can see it, everyone in the universe can see it. Here's another tidbit. I love you, too. So get that fine bottom out of that bed or I'm going to shower without you.\"\n\nHer mouth hung open a little. \"I... we... you... Oh Hell! I do love you, honey, and I'd love to go on vacation with you. Do we have time to stop long enough to pack a suitcase?\"\n\n\"Already done. The two green suitcases are yours. Pick something out to wear while I start the shower.\"\n\nI heard her squeals of delight as I stepped into the shower. Thirty seconds later she was in the shower hugging and kissing all over me. Sandy was trying to talk and cry at the same time and it wasn't working. I stopped her the only way I knew how, with a long firm kiss. She started making other noises and I pulled back. \"Shower now. Play later.\" That being said, there was a good bit of groping going on while we showered. She finally got out, leaving me flushed and with an aching erection. She giggled and flipped the water to cold. I gasped with the shock before turning it off and coming into the bedroom. She had the green sundress laid out and had a new bra and panty set that made me want to miss the flight. She grinned and did a slow turn. \"You like? Good. I'll model everything for you later. I'll be wearing the green teddy to bed tonight. That is, if you want me to wear anything at all.\"\n\n\"The teddy,\" I said decisively. \"It'll look great on you and I've always enjoyed unwrapping presents.\"\n\n\"In that case I'll find a bow to go with it. Now get dressed!\"\n\nChapter 18\n\nIt was the highlight of my life. She was beautiful, vibrant and she was mine. We spent a lot of time in bed, but we did hit the beach a couple of times. She wore the most conservative bikini, the first time, then went with the racy thong bottomed one the next. When she found out tops were optional, it was gone instantly. Men and women stared; she was that beautiful. Oddly, it didn't bother me as much as I thought it would. I was proud of how attractive she was, and was confident that although others would look, I was the only one allowed to touch.\n\nWe went dancing, and though I was a decent dancer she wore me out pretty quickly. We'd shared a lunch with another couple at the resort, and they were there. Her husband was as worn out as I was, so the girls danced together, ignoring the men who tried to dance with them. They danced over to our table and gave a little bump and grind that had us rushing back to our rooms. She laughed the next day on the plane. \"I have zero interest in girls, honey. Pam is the same way. I have to admit it was fun, but the purpose was to rev our men up. I think we accomplished that goal, wouldn't you?\"\n\n\"Don't talk. Exhausted. Need nap.\"\n\nShe cooed and snuggled into my arm.\n\nShe came back to the condo I was leasing and never left. A month later she gave up her apartment. five months later, I gave her a diamond. I walked into her restaurant and demanded to see the chef. She thought she was going to be confronted by an irate customer and was surprised to see me on my knee, holding up an open box. The diamond twinkled in the candles of the closest tables.\n\n\"Sandy, love of my life, will...\"\n\nWell, I think that's about as far as I got before she dove on me so hard she knocked us both to the floor. She yanked so hard on the box it flew out of my hand and landed under a table. We were on hands and knees scrambling for it while she screamed \"YES' over and over. The whole placed clapped and cheered when she found the box and got the ring on her finger. That's when the kissing portion of the evening began, followed by her parading through the place, me in tow, while she showed every table there the ring.\n\nMy \"family\" was very happy for me. They had seen how depressed I had been after the break-up with my second wife. The grandmothers descended immediately, grabbing Sandy and spiriting her off to make wedding plans. Her first was basically just a ceremony in a courthouse anteroom. She once expressed to Grandma Greely how she had longed for the full wedding experience and they were determined to give her her dream. They did not hesitate in telling me they were paying and all I had to do was show up when and where they told me. I was more than happy with that.\n\nMs. Chen lost her grandmother status when she told me she thought she was too young to be a grandmother. \"Well, then. I have another position I needed to fill. I need a new Mom, my old one isn't working out,\" I told her. She and her husband were childless. I never asked why, but she was so overcome with the offer she cried in my arms, the first time I'd ever seen her cry. She did, though, become a hell of a grandmother to Mickey. She would have taken him every weekend if I would have let her. Sandy's mother had passed and she stepped right into the role. There were endless discussions about flowers, color schemes, invitations, venues, until I thought I would go crazy if I was asked one more opinion. Finally they decided to leave me alone. All I needed to do was make sure the tux fit and be there on time.\n\nMickey was my best man. Jose, Dan, Miguel, Michael and my cousin Billy were my groomsmen. Sandy had two of her college friends, her assistant from the restaurant, Connie, and Alice. Her maid of honor was her sister. I met her for the first time at the rehearsal. We didn't hate each other, but we had nothing in common. She was pissed at Sandy marrying a white guy, and me for having the nerve to marry her. Probably the first true black racist I'd ever met. Luckily she went to school on the other coast and we wouldn't be seeing each other that often.\n\nI understand she and Sandy had a pretty good row about it. Sandy told her if she didn't tone it down she would be returning to California before the wedding.\n\nFinally, on a sunny afternoon in June, we became man and wife. We married at a Baptist Church that we started attending two months before the wedding. Actually Sandy had been attending for a few months before we became intimate and dragged me along. I liked the people and most liked me. The preacher loved me because I told him if he ever paid for food for his fundraisers again I would never forgive him. I even helped when I could. Over the years I've probably cooked thousands of hot dogs and hamburgers, plus breakfasts.",
        "The place was packed to the point of people standing in the back. Most were from the church, but my extended family was there. The glaring exception was my mother and her side of the family. Well, I invited her, the rest was on her. Sandy's father had flown in from France and gave her away. He was suitably impressed with his daughter's success, and he seemed to like me.\n\nMs. Chen hovered over Sandy while her husband beamed as she introduced them to her family as my parents. Her dress was breathtaking and she seemed to float down the aisle. I don't think I took four breaths during the entire ceremony, but I remember lifting her veil for our kiss. Tears were streaming down her cheeks but every tooth was bared into the largest smile I'd ever seen on her face.\n\nI don't remember much about the reception, but it was still going on when we boarded the plane for our honeymoon destination. We were going to France. Not Paris, but Nice and then on to Monaco.\n\nThe honeymoon turned into a food odyssey, as Sandy dragged me from restaurant to restaurant. We ate foods I'd never tasted and loved. We ate foods I'd never tasted and barely controlled the urge to vomit. I finally learned to say no if it did not appeal to me. It should have bothered me, but she was so happy I couldn't be angry. The nights and mornings made up for it as we tried our best to burn off the extra calories.\n\nWe were supposed to spend five days in Monaco but left after two because neither of us felt comfortable there. We did hit a few casinos; after all, it was Monaco. Sandy won a few thousand euros at a game we didn't understand, and I dropped almost a thousand at blackjack, which I thought I did understand.\n\nThe rest of our time was spent traveling the Italian coast, eating in small diners and bistros off the beaten path. We both agreed that next vacation should be spent traveling the interior and mountains to see what delights awaited us there.\n\nMost of the beaches were topless or nude. It still took her until the last two days to drop her top. She said she was embarrassed but her nipples stayed hard as rocks, especially when a man would whistle or try to chat her up. I thought one Spaniard was going to have to experience some good old fashioned Southern ass whipping, until Sandy called him out for the ass he was. I was fluent enough by then to understand everything. We were on a clothing optional beach and he was nude, with a little pot belly and an even smaller penis.\n\nBefore I could stop her she yanked down my shorts, telling him to take a look at what a man's cock should look like. We had drawn a pretty good crowd and people howled with laughter as he scurried away. It took me fifteen minutes to talk her into letting me pull up my trunks. Sandy was laughing until I stopped struggling and started pulling on her thong. \"It's only fair,\" I said, as her thong popped off into my hands. She covered herself before grinning, and we walked the length of the beach and back to our hotel before she begged me to let her put her thong back on. We never repeated it, but it made a killer story when we got back home.\n\nChapter 19\n\nWe went home and settled into domestic bliss. She still ran her restaurant and I was checking into another store location across the state line. My schedule was much more flexible than hers so I adapted to it, making sure we got to spend every moment we weren't working together. Our first anniversary was approaching and I asked her if there was any one thing she desired, so I could get it for her.\n\nIn answer she took four days off and we rented a cabin in the mountains, laid-in supplies, and rarely left the property. We didn't spend it all in bed, there were trails to hike, and we spent a day skiing, but there was a lot of lovemaking. We were snuggled together under blankets the last night, watching the fire crackle. I was idly playing with a nipple when she sighed and took my hand.\n\n\"I've thought a lot about what I'm about to ask you. If you truly want to give me something, this is all I desire. I'm 31, you're 35, and my clock is ticking. I've wanted to be a mother all my life, even more than being successful in business. If you truly mean what you say about giving me anything, this is it. Will you make a child with me?\"\n\nShe didn't know it, but she'd hit on my fondest dream. I loved Mickey, but I got him late, so I never got to experience late-night diaper changes, the terrible twos, teething, watching him learn to walk and talk or grow as a young child. I wanted it more than any success I could achieve.\n\nShe mistook my stillness for reluctance and tried to change the subject. I put my fingers to her lips. \"Shhh. Don't spoil the moment. You've just made me very happy. I vote you throw the birth control pills away, forthwith!\"\n\nSandy giggled. \"Forthwith?\"\n\n\"Absolutely, forthwith. I've always wanted to use that word. Seriously honey, the sooner we start, the better. I don't want to try to chase them around with my walker.\"\n\nThe blanket slipped down and I'll never forget the look on her face. Lust, love, and something deeper, primal, the urge to continue the species. \"The only time you're going to need a walker is tomorrow. After I'm done with you, we'll be lucky if either of us can walk right.\"\n\nMaking love to Sandy had always been great, but that night took it to a whole new level. A stray thought popped into my head as she rode me, now I know what a male spider feels when he's mating with a Black Widow. She consumed me.\n\nIt took five months, but one day I came home to find her sitting at the kitchen table, crying. Since she was so emotional, I wasn't very concerned. Sandy would cry at the drop of a hat.\n\nI sat down beside her, hugging her to me. \"What's wrong, baby?\"\n\nShe tried to talk several times before giving up, sliding something across the table. I picked it up and my heart exploded. Blue lines on a little stick. We were pregnant!\n\nI tried to form words, but I must have been around my wife too much, because all I could do was cry with her. It was a hour before we could talk rationally.\n\n\"This is just a home test, honey. I'll be seeing the doctor tomorrow to make it official. I'll call first thing after I know.\"\n\n\"No you won't. I'll be going with you tomorrow.\"\n\nI was gently rubbing her tummy. She grinned. \"You can't feel anything yet. You know I test myself every two weeks, so this is fairly recent. It's a boy, though. I can feel it.\"\n\nI pretended to frown. \"I was hoping for a little girl. If it is a boy, can we try again?\"\n\nHer smile got wider. \"Yes, I'd like to have one more and I hope we get a set, but if they're both boys, or girls, I'm sure we'll love them just as much. Two's my limit, even though I'd like to have a houseful. I'll be 33 by the time I'll be pregnant again, and that's a little long in the tooth.\"\n\nI agreed instantly, not willing to risk her health or that of a child. Two would be plenty.\n\nThe doctor confirmed the good news the next day, set us up on a regular schedule of visits, gave us information on different birthing techniques and classes, and sent us on our way.\n\nI wanted to wait a while to disclose the news, but she told everyone at the monthly family dinner a week later. All my grandmothers, my Chinese mother and father, and most of my friends dissolved into tears. When we announced if it was a girl it would be named after the woman who started me down this path, Grandma Greely almost fainted and found herself surrounded by three generations of women, none of who were related to me but everyone as much a part of my family as any blood relative. Sandy wanted the middle name to be Rose as a tribute to her late mother. Celia Rose Moore had a definite ring to it.\n\nChapter 20\n\nI was in the middle of contract negotiations for a third and fourth store in other cities. Michael and Miguel had given up any active part in their respective social organizations, and both had associate business degrees in business management specializing in the food service sector. I'd used the grandmothers and extended family to push them into the situation but truth be told, it didn't take much.\n\nMiguel was the point man in one city, Michael in the other. I did visit both twice a week to review progress and suggest things. Ms. Chen was their guide and between us, we kept them on an even keel. They had traveled with me before, knew the ropes and did really well. They were vice-presidents of my corporation.\n\nThey had learned from watching us, and could speak with a professional demeanor. If things got stressed, though, they sometimes resulted to attitudes and behaviors learned on the street.\n\nOne contractor called me, pissed beyond words. \"I refuse to deal with street trash! They have no idea how business works and I will not be dictated to like this.\"\n\n\"Let me ask you something. If you found out someone was trying to steal from you, would you be polite? Or would you take charge of the situation and get the thief eliminated? That's exactly what they're trying to do. We discovered your deal with the suppliers and tradesmen to pad costs fifteen percent. I know we have a contract, but I'll let you out of it if you voluntarily leave. Balk, and the unions, cops and lawyers get involved. You're lucky they didn't kick your ass on general principles. You have one day.\"\n\nOne of Ms. Chen's lawyers who just happened to also be a CPA found the hustle. It was Miguel's project, but as soon as he found out he called Michael for support. It did not go well for the contractor. He will never realize how close he came to a first class ass kicking. As it was, he did withdraw, leaving a lot of workers pissed and unions asking pointed questions. Any project he bid on in the future would be examined very closely.\n\nThose two would make a total of five, in three states. I was getting in over my head. I promised my wife when she hit four months I would put all expansion plans on hold unless my group could handle it without me. She said I should still work and I told her I was working, on the biggest project of my life: learning how to be the best most loving father and husband humanly possible. Of course, she responded by crying.\n\nChapter 21\n\nMs. Chen took me to task. Seems I wasn't paying as much attention to my businesses as I should.\n\n\"I've got good people, Mom. I'm just a bit preoccupied right now.\"\n\n\"News flash honey. Women have babies every day and the world doesn't stop revolving because of it. You have an even bigger duty now, besides Mickey, you'll now have a little one. You need to look to their futures.\"\n\n\"I understand your logic, and while women have children every day, they don't have mine. I'd like to savor every step, if you don't mind.\"\n\nShe smiled. \"You don't think I'm looking forward to another grandchild? I get a bonus with this one because it's a girl and I'll be there for every step of her childhood. Gregory (her husband) is obsessing already, looking into childproofing the house. We have her bedroom picked out and are decorating it. It will be done before she's even born. Still doesn't stop me from running my firm. Tuesday, one, sharp.\"\n\nI appeared at the appointed time and spent three hours going over figures. I was amazed at the wealth I had already accumulated, and with the addition of two more stores my profit, after taxes and salaries, would be a surplus of about a million three, a year.\n\n\"What are we going to do with all that money?\"\n\nMom and the accountant laughed. \"You're going to keep expanding. You haven't gone unnoticed and many are copying your business model, but there are plenty of opportunities out there. With your proven track record, cities will be more inclined to work with you than your competitors. Our suggestion is you keep expanding in the Southeast until you reach saturation, then go West.\"\n\n\"How many stores are we talking here?\"\n\nThe CPA pulled up a chart on her computer. \"I think you should concentrate on two a year for the next five years. After that, if my model is accurate, you should up it to five. In twenty years you have the capability of being one of the top three chains in the country.\"\n\nI threw them for a loop. \"What if I don't want to be that big?\"\n\n\"Then you've missed a golden opportunity. Think of how many could benefit, how many people you could get off the streets, keep kids away from crime and turn them into successful businessmen, role models for their communities. You didn't really consider the impact of your actions when you started, but look at the good it's done. Look to your grandmothers, destined to live out their lives in dangerous apartments, scraping by on Social Security. Think they don't appreciate what you've done for them?\"\n\nShe had me there. Apparently she was on a roll, giving me facts she had obviously holding back while Mom grinned. \"Speaking of helping people, you need to start a charitable arm. It's a great tax shelter and you could really do some good. I suggest you start off simple, say with a scholarship program for aspiring lawyers. Just two will be sufficient for right now. I have the paperwork ready, if you're interested.\"\n\nI left it hanging until she got nervous. \"All right. $500,000 to start. That should handle the scholarships with plenty left over. And make the scholarships all inclusive, tuition, room and board, and a monthly allowance for incidentals like gas, clothes, that sort of thing. I'm putting you in charge for right now, but I expect I'll be pretty active as time passes. I think that sometime soon I'll want to add programs for food service scholarships, at least at the associate level. And I'd like to do some kind of program for disadvantaged youth but we'll talk about it later. We done here?\"\n\nI grinned as I left, their mouths hanging open. I had thought about a charity before, but never had time to pursue it. Now that it was handed to me on a platter, I had no excuse.\n\nChapter 22\n\nI couldn't stop smiling. True to my word, I had almost stopped traveling completely: home every night with my wife. I still worked from the building I'd found to use as corporate headquarters. We bought it for practically nothing and renovated it completely; leasing the space we didn't need as soon as it was available. Mom was pushing me to look at some warehouse space, hinting we would probably need it in the near future as a distribution center.\n\nI'd had to hire administration people to help keep track of everything. Good people mostly. The law of averages said I was going to find one or two bad apples, and when I did they went away as quickly as possible.\n\nI hooked Michael and Miguel into helping me with charity work. They became involved in neighborhood outreach programs, concentrating on middle schools. They were at that age when the world around them was coming into focus but were young enough to still be reached. I went with them a few times to see them work.\n\nMiguel always dressed well but informally, but Michael went the full route. His standard attire was a three-piece suit, matching tie over a white shirt, his shoes gleaming. He'd developed the habit of wearing a fedora, and I had to admit he looked sharp.\n\nThey would talk about general things to warm them up before they got into the meat of their presentation. \"I want you to look at us, really look. Yeah, we dress well, but underneath the clothes, despite what we've accomplished, we're still just guys from the hood. Before we started this our lives were on a far different track.\"\n\nTwo photos flashed up on the screen behind them. Mug-shot photos of each. While they looked at the pictures Miguel and Michael would be taking off their coats and shirts, leaving them in white \"wife-beater\" tees, showing off their tattoos complete with gang tags.\n\n\"This was us before we turned our lives around. If we had kept on the path we walked, we would be dead or in jail by now. We were rivals, so it might have been one of us killing the other. I want you to think about this and ask you something. How many gang members do you see on the streets over the age of thirty, or even twenty-five? Not a lot. They're either dead or in jail. Is that the future you want? We got out, and you can, too. Think about it. If you need help or want to reach out to someone, you have our cards. Call, and someone will come. It might not be us because we travel regularly, but it will be someone, and they'll be there fast to help with whatever you need.\"\n\nThen it was my turn to speak. \"I want you to know that if I hadn't had a flat tire in a bad neighborhood my life would be totally different now. I'd probably still be a factory worker and a part time farmer. It would have been a life I was happy with, I believe, but I like the one I have now so much more. Not because of the money, although I like being successful, but because of the good I've been able to do.\n\nIf I hadn't broken down that day, I'd still be a country boy, avoiding towns, especially the 'bad' neighborhoods. I believed what I saw on television, that inner city neighborhoods were places to avoid at all cost. But I did have to stop, and I met an older black woman who changed my life completely. I'd like to say I changed hers as well. Now, despite her age, she's a successful businesswoman with an interest in many businesses.\n\n\"I hired my first employee there: the woman's granddaughter, a fifteen year old mixed-race child who was nervous around a white man. Seven years later, she's still with me, a college graduate and a manager at one of my stores. Miguel and Michael became my friends, first, before they started working for me, and now I don't think I could be as nearly successful without them. The lessons I learned are that no matter what your age and race, you have value. And most importantly, no matter what your background, you can change your life for the better. Think about it.\"\n\nWe knew that if we were lucky we would reach about 10% of those children. But if we did, and they became successful, then maybe they could reach another ten per cent, and it would snowball from there. I liked to think so, anyway.\n\nChapter 23\n\nI had just returned from one of our talks. It had been a good session and I was on top of the world when I walked in to the restaurant. Sandy and I ate lunch together nearly every day, a standing date. Her bulge was obvious, and her regulars asked for updates, often. A few wanted to hold a shower for her, and she responded by inviting them to the one the Grandmothers were planning. She'd just won Restaurant of the Year from the city, and I promised to hang a copy in my office alongside the awards I'd won over the years.\n\nA couple of young guys followed me in but I paid them no attention. Her prices were reasonable enough for most all to eat there and it was always a mixed crowd. I didn't realize anything was wrong until I heard a gasp from her hostess. A shotgun boomed.\n\nI turned slowly, glad Sandy was in the kitchen. There were two of them early twenties or late teens. You could tell from the looks on their faces that at least one was high and the other needed a fix, judging from the way his hands were shaking I slowly raised my hands. The boys started screaming about this being a robbery and everyone needed to stay cool.\n\n\"All right. Everyone needs to be cool. Ginny, open the till and step back. It's only money.\"\n\nShe did what I said, and one slung the shotgun over his shoulder and started shoveling the money into a bag. The other held what looked like a military rifle, waving it in the general direction of the patrons.\n\nSandy had been in the freezer when the shot rang out. She looked thought the kitchen doors and was out before she thought. \"What the hell's going on here?\"\n\nIt wasn't a shout, but it was pretty damn loud. Sadly, she had a large knife in her hand and the kid with the rifle flipped out. It was fully automatic and he nearly cut her in two emptying the magazine. I rushed for her even as the other guy was screaming for me to stop. I felt the bullet strike me and it knocked me forward. I slid until I was next to my wife. The light was going out of her eyes but she smiled, whispering \"I love you\" through the blood that frothed around her mouth. Then she was gone. I went into what can only be described as a blind rage."
    ],
    "authorname": "qhml1",
    "tags": [
        "love story",
        "drama",
        "relationships"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-food-desert"
}