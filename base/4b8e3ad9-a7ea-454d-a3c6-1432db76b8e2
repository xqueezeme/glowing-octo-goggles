{
    "title": "Westrons Pt. 13",
    "pages": [
        "Thanks again for your positive comments and feedback. It's very encouraging for Alianath Iriad (my editor) and me. \n\n***** \n\n- \"How could you let this happen?\" Kanitz was furious, and Ishana was bearing the brunt of it. \n\n- \"It wasn't her fault.\" I said. \"She saved my life. So did Koroba and Nasta.\" \n\n- \"It should never have happened in the first place!\" \n\n- \"They did their jobs, Chancellor. I'm unhurt. Their response was amazing.\" \n\n- \"Where is Madze?\" said Kanitz. \n\n- \"It's her night off.\" said Ishana. \n\n- \"She'll be sorry she missed it.\" said Nasta. Koroba poked her. \n\n\"What?\" said Nasta. \"It's true.\" \n\nKanitz sent the bodyguards outside. \n\n- \"I'm so sorry.\" she said, softly. She stepped closer, looking unusually hesitant. She held out her arms. \"May I ...?\" \n\nThe Chancellor hugged me, very gently. \n\n\"I was so afraid. When they told me there had been a shot ...\" she whispered. \n\nIt seemed completely genuine to me. Yet only a few hours ago, according to Themis, Kanitz had been using the Princess to gain (or keep) some kind of hold over me. \n\nMaybe Kanitz did have real feelings for me. But she was also a political intriguer of the first order, who seemed to love the game for its own sake. \n\n- \"You'll stay here, tonight.\" \n\nShe got me a room in the Palace basement, close to where Airta and I had spent several passionate days and nights. My three bodyguards were posted down there with me. \n\n- \"May I ask a question, Colonel?\" asked Koroba, the sharp-featured little blonde. She didn't wait for me to answer. \"How did you do it?\" \n\n- \"Do what?\" \n\n- \"One of them got past Ishana, and had you dead to rights. You hadn't drawn your sword - and the next thing I knew, she was on the ground, with a broken arm. Even if Nasta hadn't almost taken her head off, she was probably out of the fight. How did you do it?\" \n\n- \"Ah.\" Well, no harm in teaching a little ... just to show them that there was no magic involved. \n\nI unbuckled my belt, and handed Koroba my smallsword, still sheathed. Then I stood in front of her. \n\n- \"Aim at my navel.\" I instructed. I moved slightly left; she followed my movement with the tip of the blade. I move slightly to my right, and again she adjusted her aim. \n\n\"Which movement is easier?\" I asked her. \n\n- \"To my right - when you moved to your left.\" She was slightly puzzled. \n\n- \"So I waited until she lunged, and moved to my right, to make it just that little bit more difficult for her to adjust her thrust. I didn't simply dodge, either.\" \n\n- \"No.\" said Nasta. \"I saw you - it looked like you were spinning.\" \n\n- \"You turned your back?\" asked Ishana. She was scowling. \n\n- \"Let's try this at ... medium speed. Go ahead, Koroba - stab me.\" \n\nThe little blonde grinned, and thrust the smallsword forward. She expected me to dodge to my right, and was already adjusting her aim when I spun in the opposite direction. \n\nShe was surprised, but she didn't flinch, or overreact; she knew it was only a demonstration. I finished my spin, and brought my arm down. \n\n- \"What ...?\" said Nasta. \n\nI was standing close to Koroba, with her extended arm trapped under my armpit. My other hand was on her elbow, applying gentle pressure. \n\n- \"Don't relax.\" I said. \"Keep your arm tense.\" Then I pressed just a little harder. \n\nKoroba's eyes went wide. She got it right away. \n\n- \"You just fall on her arm - with your full weight? Where did you learn ...? Pylos?\" \n\nNasta wanted a demonstration, too. She was much bigger than Koroba, and wondered if that move would work on her. It did. \n\nI don't know where it came from, but an idea suddenly occurred to me. \n\n- \"Ishana, how did they know that we were coming? They didn't wait to see who we were ...\" \n\nShe frowned. \n\n- \"That's right.\" said Koroba. \"It was too dark to positively identify you. They had to know - someone told them that you were coming.\" \n\n- \"How?\" asked Nasta. \n\n- \"Shit!\" swore Ishana. \"Keep him here!\" She bolted from the room, and up the stairs. \n\nThe mystery was solved, a short time later, when Ishana returned with Kanitz. \n\n- \"One of the servants.\" said the Chancellor. \"She's gone.\" \n\n*** \n\nTallia was furious, too. But she knew better than to blame the bodyguards. She'd seen Oshide and Yehla look out for me; she also knew that Oshide had sacrificed her life to protect mine. \n\nWe hadn't had sex for a week, with so many people in her parent's house. This night, though, she wasn't going to let that stop her. She suspected - rightly - that I could use some comforting. Despite the fact that Koroba and Madze were lying on the floor not four feet away, Tallia started fondling and caressing me. \n\nShe kissed me, and stroked my cock until it was fully erect. Then she turned and pressed her naked backside against my crotch. She tucked me inside her, and began to gently rock back and forth. \n\n*** \n\nEsyle knew that we'd made love; maybe Tallia had told her before breakfast. She smiled pleasantly and asked if I'd had a good night. \n\nI'd meant to do it sooner, but there was no time for like the present. \n\n- \"Esyle, would you have lunch with me?\" I asked. \n\n- \"Of course I'll be here for lunch.\" \n\n- \"No, I meant just the two of us. Would you like to go down to the river with me?\" \n\n- \"Like ... a first date?\" I'd explained the 'Pylosian' custom of dating before becoming intimate. It was something the Westrons understood, except that they did it after they'd had sex. \n\nWe packed a picnic lunch, and set off across town. Ishana and Nasta hovered nearby at all times. I asked Esyle to make one small detour, to a gunsmith's shop where Tallia had helped me buy my pistols. \n\nAfter that, we sat on the riverbank, and watched the boats. I was relieved that Esyle didn't seem to mind the presence of my two bodyguards. She was a little nervous, but that was mostly because the whole experience was so novel for her. \n\n- \"It's an ... interesting custom.\" she said. \n\n- \"I'm glad you're enjoying it.\" \n\n- \"I already like you, and I'm ready to copulate. But I can see that if we were strangers - if we had just met ... this would be a good way to find out if I did like you enough for sex.\" \n\n- \"That's pretty much the idea.\" \n\n- \"In Pylos, do you copulate during the first date, or is there some sort of waiting period?\" \n\nEsyle was mildly annoyed that I started to laugh. \"Are you making fun of me, Cook?\" \n\n- \"No, sweetheart. I wouldn't mock you. I like you. You're lovely, and clever, and I enjoy your company.\" \n\n- \"That's good.\" she said. \"So when -?\" \n\n- \"Not quite yet.\" \n\n*** \n\nKanitz set aside an entire afternoon for me. Alone. \n\n- \"The women who tried to kill you were soldiers. Deserters from General Vis' own regiment.\" \n\n- \"Deserters?\" \n\n- \"Yes. For maximum deniability. But we can't leap to conclusions; they could easily have been suborned by someone from another party.\" \n\n- \"Berandot?\" \n\nKanitz smiled, ruefully. \"Unfortunately, Cook, you have quite a few enemies. I told you - there are many women who believe that no male should be allowed to command troops. Then there are those who resent you because you're Pylosian.\" \n\n\"Now I've discovered that there are males who dislike you, too.\" \n\n- \"Males? I've ... I don't know any Westron males - except for a gunsmith, and a tailor, and ...\" \n\n- \"There are several males who would've liked to service Countess Aneli during her hemmer. If she'd been pleased, she might have married again. There are rumours that you've also had Langoret -\" \n\n- \"That's not true!\" \n\n- \"I know.\" said Kanitz. \"But rumours and innuendo can sting ... true or not.\" \n\n- \"What about the servant who disappeared?\" I asked. \n\n- \"She used a lantern, to signal, when you left the Palace. We're following her trail. But I fear she may already be dead.\" \n\nShit. This was serious, now. \n\n\"On a happier note,\" said Kanitz, \"the Queen has decided to grant you the Belere Palace. Your share of the prize money and the Crown Prince's ransom has also been determined.\" \n\n- \"The Belere? That house ...?\" \n\n- \"Is yours. A gift from your grateful monarch.\" \n\nI was stunned. I had a mansion, now? That feeling lasted only until Kanitz passed me a piece of paper. On it was written a number, with so many zeros, that I felt faint. \n\n- \"This is ...?\" \n\n- \"Prize money.\" \n\nI was filthy, stinking rich. \n\n\"One last thing.\" said Kanitz. She looked me in the eye, making sure that she had my complete attention. \n\n\"I assume that you and Talley have had a chance to ... reminisce, about Pylos. May I suggest that the two of you make certain that your stories are ... compatible?\" \n\n*** \n\nWas Kanitz trying to protect us? Or was she intent on keeping the secret of Pylos a secret? I couldn't tell. \n\nOne thing was certain: on the day she wanted the two of us to disappear, our lives wouldn't be worth a damn. \n\n*** \n\nEsyle loved the Belere. \n\nTallia took a step back, and let her little sister see the place, take the lead, and respond to its myriad possibilities. It was a very, very wise thing to do. \n\n- \"Oh - this could be the dining room!\" said Esyle. \n\nI stepped close to Tallia, and took her hand, giving it a gentle squeeze. \n\n- \"You're a genius.\" I whispered. \n\n- \"No genius. You and I have the army, and the command tent.\" she said. \"My sister needs something that is yours and hers - the two of you. This could be it.\" \n\n- \"When did you become so wise?\" \n\nTallia liked hearing that. Tisucha overheard us, and she smiled as well. She and Talley were with us, for the inaugural visit. \n\nI took Esyle aside. \n\n- \"Tell me - do you think that you could turn this into a home? Not just a palace, but a place to live? For all three of us?\" \n\nTallia would've squealed, and leapt into my arms. Esyle just smiled shyly, and reached for my hand. \n\n- \"We can live here. There are rooms that be set aside for you: a library, a map-room, a cabinet, for receiving officers. There's a fine dining room, for entertaining guests. The gardens are lovely, too. I could even have a small library.\" \n\nBut we can have several bedchambers, so that you can sleep with whomever you wish to. There could be a nursery, overlooking the gardens ...\" \n\n- \"Could you organize this, Esyle?\" I asked. \"I suppose ... what I'm asking is: would you like to be the Lady of Belere?\" \n\nShe grinned at me. \"Is this our second date, Cook?\" \n\n*** \n\nIshana shook her head. \"We can't accept this.\" \n\n- \"Of course you can. Send it to your family. Or put it aside, and save it.\" \n\nI had just presented my four bodyguards with a modest amount of cash. Ishana wavered a little longer, but she could tell that her colleagues wanted her to accept it. Nasta was positively vibrating with excitement. \n\n- \"We ... we shouldn't accept gifts.\" said Ishana. \n\n- \"Why not? Besides, that's not a gift.\" I said. \"It's just a bonus. I've done the same for every soldier in the regiment.\" \n\n\"This, on the other hand ... this is a gift.\" \n\nI presented the twin wooden boxes. Ishana hesitated, but curiosity got the better of her: she opened one. \n\n- \"Oh ...\" \n\nEach box contained a pair of splendid pistols. One for each of my bodyguards. \n\n- \"You have to accept, Ishana.\" I said. \"How else can I show my appreciation for what you've done for me?\" \n\n- \"You could come over when I'm in hemmer.\" said Koroba, the little blonde. From the challenge in her eye, I guessed that she wasn't just joking. \n\n- \"Oh!\" said Nasta. \"Can we do that?\" \n\nIshana lifted one of the pistols, and lovingly ran her fingertips over it. \n\n- \"Thank you, Colonel.\" she said. \"These are ... very fine.\" \n\nI spread some of my new wealth around. I had to persuade Tisucha to accept some cash; she gave in only when I suggested that she could keep it as a reserve for her daughters. \n\nI sent Yehla some money, too, to help support her family and our unborn child. \n\nThe soldiers in the Aneli regiment got a bonus as well. I offered a reasonably good sum to anyone who wanted to retire - enough to purchase a small plot of land, or start a business. Those who remained in the regiment got a smaller amount. After three victories in as many years, many were prepared to stay on. \n\nI also went to visit Oshide's family. It was one of the hardest things I've ever had to do. They were pleased to hear that their daughter had saved my life, but there was no way to pretend that she wouldn't still be alive if she hadn't. \n\n*** \n\nAneli hosted a small dinner gathering at her house in Cercen. That alone created a new problem for me. \n\nThe Belere Palace was a much grander place than Aneli's establishment in the capital. It was finer than her estate, too. She had lands, and a title, but would she be jealous when she was invited to the Belere? How would she react if she thought that her prot\u00e9g\u00e9 was ... outgrowing her? \n\nLangoret and Major Faregil were present. So was Colonel Avette. There was a surprise guest, too, as I discovered when someone slapped me on the back hard enough to nearly dislocate my shoulder. \n\n- \"Ha! Cook!\" \n\nIt was Tudino, standing hands on hips, a bold twinkle in her bright blue eyes, and an impudent grin on her mis-shaped face. She was missing part of one ear, now, too - thanks to a Crolian sniper. \n\nIt didn't really matter. Tudino was never going to be mistaken for a beauty. But I found her very appealing. She had courage, and character - and a powerful right arm. \n\nWe embraced in front of the others, like long-lost friends. \n\n- \"Where have you been?\" I asked her. \"That's another parade you've missed, now.\" \n\n- \"I'll be at the next one - that I can promise you. As long as you'll let my regiment team up with yours - and share some of the action.\" \n\nLangoret and I had already discussed it. We were in complete agreement. \n\n- \"It will be a pleasure to have you with us.\" said Langoret. \n\n- \"As long as my regiment is included.\" said Avette. \n\n- \"It will be.\" promised Aneli. \"But how will this work, Cook? One brigade of four regiments? Or two brigades?\" \n\n- \"We have the flexibility to do both. Or even to have four regiments acting independently. With commanders like these,\" I said, \"we can do anything.\" \n\n- \"That sounds like a toast!\" laughed Tudino. \n\nIt was the first of many. We ate well, and drank a fair bit. Aneli led the conversation, for the most part. I shouldn't have been surprised when she turned to the subject of sex. \n\n- \"My last hemmer was fantastic. It could have been the subject of a song. I'm hoping that my next one is just as wonderful. In fact, I suspect that it's already on its way. Another week or two.\" Then she turned to me. \n\n\"Cook - you'll be there for me, won't you?\" \n\nPut on the spot like that, I had no choice. Now that she mentioned it, I should have known; there was the faint scent of arousal about her. \n\n- \"It would be my pleasure, Countess. You're not the only one who has fond memories of our last encounter.\" \n\nShe grinned at me. I grinned back. Fucking Aneli was no hardship. Langoret was smiling, too, remembering the last time we'd been in this position. \n\nIt was an odd little dinner party, though. Aneli made the mistake of trying to match Tudino drink for drink. I can hold my liquor, but Tudino had two hollow legs, from what I could see. Aneli's eyes glazed over, and we had to have her servants carry her to bed. \n\n- \"Cook? Could I have a word?\" asked Tudino. \n\n- \"Of course.\" \n\n- \"In private?\" \n\nWe stepped into Aneli's sitting room. \n\n- \"What's on your mind?\" I asked her. \n\nFor the first time since I'd met her, Tudino looked mildly embarrassed. \n\n- \"It's ... ah, shit. Listen, Cook ... I know that I'm not much to look at. Actually, that's probably an understatement. Males run the other way when they see me coming. But ...\" \n\nI blinked - several times. I'd had a fair bit to drink, but somehow I understood her tone before I caught what she was actually saying. \n\n- \"Are you ... asking me ...?\" \n\n- \"Yeah. I'll be in hemmer in a couple of weeks, too. And I thought ... maybe ...\" \n\nI couldn't sense anything about Tudino that would have hinted that she was close to hemmer. No scent, no glow ... nothing. But I knew that she didn't think she was attractive. \n\nHer jaw was crooked, her chin was quite big, and the corner of her mouth had been creased by a bullet, at some time in the past. Her nose had been broken, at least once, which I could certainly relate to. No, Tudino was no classic beauty. \n\nBut I found the contrast between her coal-black hair and her pale skin quite fascinating. Her eyes were exceptional, too. But it was the whole package which intrigued me. Tudino was a damned good leader, and a battlefield commander with excellent timing. \n\nHer courage was undeniable; I couldn't think of anyone who'd been wounded as often as her, and yet continued to soldier on. I liked her. Hell, I admired her. \n\n- \"I would be honoured, Colonel.\" I said. \n\n- \"Really?\" She seemed surprised. \"I mean ... it's just - I thought that this peace might be my only chance to ... have a child. You ... you don't mind that I'm ...\" \n\n- \"You're an incredible woman, Tudino. I would take a bullet for you. Joining you for your hemmer sounds much less painful.\" \n\nShe laughed aloud. \n\n- \"I like you, Cook. I liked you from the first. I thought it was your nose, but maybe it was your personality all along.\" \n\n- \"Say the word, and I'll be there.\" \n\n- \"Think you can survive both Aneli and me, in the same week?\" \n\n- \"If I do, I'll hold a parade.\" I said. \n\n- \"Ha! I'll march in that one.\" \n\n- \"Seriously, Tudino: there's just one hurdle - I'll have to ask my ... my lover if she doesn't mind.\" \n\n- \"Why would she?\" \n\nGood question. Why would she? \n\nLangoret walked me home, with her aides and my bodyguards. \n\n- \"An interesting evening.\" she said. \n\n- \"It was. Do you have any advice, though, on how to prevent Aneli from putting me on the spot like that?\" \n\nLangoret smiled. \"No. She's a force of nature. I wish I could help you with that - but I fear that you are on your own, where her hemmer is concerned.\" \n\n- \"Thanks.\" \n\n- \"Don't thank me too soon. I may be adding to your ... difficulties.\" \n\n- \"What?\" I couldn't help it: I had a sudden vision of Langoret naked. \n\n- \"While you were off with Tudino, Colonel Avette asked my advice.\" \n\n- \"About what?\" \n\n- \"About whether you would attend her in her hemmer.\" \n\nI shouldn't have been surprised. Avette had taunted Berandot - and others - that she would bear my child. I'd thought that she was just trying to piss them off. Angry words, in the heat of the moment ... \n\n- \"She was ... serious?\" \n\n- \"Oh, yes.\" said Langoret. Then she laughed again. \n\n*** \n\nWhat a horrible problem. Women who wanted me to have sex with them. \n\nTudino was right; Tallia didn't mind at all. Including Esyle in our ... arrangement was her idea, anyway. And Aneli was like a legacy; I couldn't really turn her down. \n\n- \"Won't it make it awkward, working with these Colonels, afterwards, if we've ...?\" \n\n- \"Awkward?\" said Tallia. \"The opposite is more likely, don't you think?\" \n\nI took a good long look at my lover. This ought to be good, I thought. \n\n\"Remember how you were with me, before we'd copulated?\" she said. \"Nervous, always careful not to say the wrong thing, afraid to get caught staring at my backside ... wondering how to approach me, the when and the where ...\" \n\nI had to laugh. \"You're right. But how did you know all that? You are some kind of mind reader ...\" \n\n- \"It's not very difficult, with you, sometimes.\" she said. \"But how do you feel around me, now?\" \n\n- \"Like I want to pull your breeches down and bend you over that table ...\" ",
        "- \"I was being serious.\" she said, with a little pout. \"Admit it: you're more comfortable.\" \n\n- \"You're right.\" \n\n- \"Then isn't it time you copulated with Esyle?\" said Tallia. \"Especially before Aneli and the two Colonels wear you out? You'll be no use to anyone for some time afterwards - that's assuming you survive.\"  \n\n\"Besides, the longer you wait, the more Esyle will worry that she doesn't appeal to you, or that there's something wrong with her.\" \n\n- \"There's nothing wrong with her!\" \n\n- \"Then ...?\" \n\n- \"It's a little complicated, Tallia. Where? When? I don't want her first time to be on the floor of your parents' house.\" \n\n- \"What about the Belere? You'd only need to furnish one room ...\" \n\n- \"Tallia, you're a genius.\" \n\n*** \n\nEsyle had no idea why I would want to go to the Belere in the evening, when it was too dark to see anything. But once we went through the front door, and she saw the trail of candles that Tallia had set up, she was enchanted. \n\n- \"Oh! It's beautiful ...\" \n\nThere were flowers (Tallia knew her sister's favorite scents), and a bottle of wine and some smoked sausage, fruit and cheese on a small table. But the key element was the wide bed, with a luxurious mattress and cotton sheets. \n\nI didn't have to say a word. If Esyle were going to balk, it would be now. There wasn't much doubt about why we were here - if she wanted it to be tonight. \n\n- \"It's lovely, Cook. Tallia helped you, didn't she?\" \n\n- \"All clear, Colonel.\" said Koroba, with a little grin. Ishana and Nasta were downstairs, while Madze was lurking somewhere outside. Ishana wanted the whole crew present if we were going to spend the night in an empty house. \n\n- \"Thank you, Koroba.\" said Esyle. \n\n- \"You're very welcome, Lady.\" said the little blonde. \n\n- \"Why did she ... call me that?\" asked Esyle, suddenly shy. \n\n- \"Because you are.\" I said. \"My Lady. The Lady of Belere. This is to be your home.\" \n\n- \"Our home.\" She wrapped her arms around me, and buried her head against my chest. \n\nI held her close, felt her relax. \n\n- \"A glass of wine?\" I suggested. \n\n- \"Just a little.\" \n\nEsyle surprised me, a bit. She wasn't flamboyant. or a little 'precious', like her sister. Tallia was clever, and assertive. Esyle was just as intelligent, but more reserved, more patient. But that didn't mean that she lacked confidence - far from it. \n\nWhile I poured two glasses, she quickly stripped off her clothes and sat down on the bed. I hadn't expected that at all. \n\nShe was very pretty, in a more subdued, less obvious way than her sister. She was a little more solidly built, too, though still small-breasted and slim-hipped. \n\nThere was a sort of calm, a certain serenity, about her features. And she had incredibly long, thick hair, which looked even more spectacular framing her nakedness. \n\n- \"You're ... beautiful.\" I got out, a little throatily. \n\n- \"I can hold your glass, while you take off your clothes.\" she said. \n\nShe watched me, with a slight smile on her lips. Why had I ever worried that Esyle was shy? Tallia's sister - Tisucha's daughter. I can't imagine that any young woman had ever been better prepared for her first time. \n\nShe was patient with me, as I tried to be patient with her. We kissed for a long while, and I stroked her luxurious hair. I caressed and fondled her little breasts. \n\nEsyle sighed when I finally reached her pussy. She especially liked it when I slipped a finger inside her. Her first orgasm was quiet, and subdued, but no less intense for all of that. She clung to me, as her whole body quivered and shook. \n\nWhen I finally entered her, I discovered that she was quite wet, and more than ready for me. She'd been practicing, I guessed, with a ladies' aid - or perhaps a variety of them. \n\nShe seemed to experience no discomfort, as she wrapped her arms and legs around me. It was as if she couldn't possibly get close enough. \n\nAll my fears of hurting her, of finding that she was too tight - evaporated. \n\nIt was a beautiful experience, for both of us. \n\n- \"What a wonderful way to start.\" she murmured, just before she fell asleep. \n\n*** \n\nWe repeated the experience the very next night. Esyle had obviously had some excellent sex education: she took the lead, and pressed me down on my back. \n\nThen she straddled my lower legs, and took me in her mouth. He long, thick hair fell over my stomach like a dark, silky curtain. She was better at this than she should have been, considering that she'd been a virgin only yesterday. Big sister had to have been coaching her. \n\nShe used her hand to firmly stroke my saliva-soaked shaft, while taking the first few inches in her mouth. I warned her when I was close, but she only intensified her efforts. \n\nWhen I came, she gulped and swallowed every drop. Then she lay down beside me, and held me tight. \n\n- \"Was that -?\" \n\n- \"Incredible.\" I said. \"Your teacher deserves a bonus. But you're a prize pupil.\" \n\nI returned the favor, which she enjoyed immensely. But after she came, as I went to move between her legs, Esyle stopped me with her hands. She turned me over, onto my back again, and mounted me instead. \n\nShe sank down on me, slowly. Then she leaned forward just a little, so that she could trail the ends of her prodigiously long hair across my chest, my shoulders, and my face. \n\nMy second orgasm was a long time coming, but she made the journey unforgettable. \n\n*** \n\nEsyle refused to sleep with me the following night. \n\n- \"And stay away from my sister. too.\" she insisted. \"You need to save your strength for Aneli. Tallia told me how worn out you looked after your first bout with her.\" \n\nI wanted more of Esyle, but it was probably good advice. My patron, in hemmer, was a bit of a demon. A little rest before the main event could only help. \n\nWe met at the Palace, where Aneli had been staying for most of the past week. Her fine house in Cercen wasn't large enough - nor was it far enough away from the neighbouring buildings. \n\nAneli's hemmer might have caused an uproar, if males had caught her scent. Even if she had hidden in her house, to try having sex there was asking for trouble. Once in the throes of passion, Aneli was very vocal - and very loud. \n\nSo she'd accepted Kanitz' invitation to spend her time in security, at the Palace. My bodyguards received word when she was ready, and escorted me there. \n\nThe Countess was in one of the luxurious underground love-nests. And she was more than a little impatient to begin. \n\n- \"Finally!\" she said. \"Where were you? I was about to start climbing the walls!\" \n\nShe remembered to offer me a drink, but then gave me no time to taste it. Aneli wanted oral sex - and she wanted it right away. \n\nI didn't mind. Aneli was short enough that I could reach up and fill my hands with her magnificent tits while I ate her. She grabbed hold of my hair, and pulled my face closer. \n\n- \"Oh, yes! I missed this! If only I could hemmer every month!\" \n\nI lifted my head up, to respond. \"You'd need a stable of lovers, Aneli. Once a month would kill me.\" \n\nShe chuckled. \"You'd die happy, though. Less talk - more licking!\" \n\nShe'd been waiting for her first orgasm for days. It didn't take long. I didn't give her a chance to recover - instead, I crawled up between her legs, lifted her knees, and sheathed myself inside her in one long lunge. \n\nShe grunted, and then let out a long groan. \n\nI gave her my very best, pumping my cock into her humid depths over and over again, until she came again. \n\nThen she wanted it from behind, on her knees. I only lasted a dozen strokes in that position, before blasting an enormous load of cum into her. \n\nAs soon as she'd assured herself that I had another erection, Aneli wanted to ride me. Then it had to be from behind, again, with her kneeling by the headboard, hands on the wall. \n\n- \"I loved it this way, last time.\" she said. \"Ungghh ... yes - like that!\" \n\nAfter three (or four?) orgasms, she gave me a moment to catch my breath, while she went into the next room to wash. I had a quick bite and a drink, while I could. \n\nThen it was more oral sex, in a 69, followed by a long, thorough plowing in the missionary position. After that, she wanted to sit on me, facing away, while I sat on the edge on the bed. \n\n- \"Any ideas, Cook?' she asked. \"I have some old favorites, but is there anything else you'd like to try? Something I might not have seen before?\" \n\nChallenge accepted. I put her into a spoon position, just to recover a little strength. When I felt my arousal building, I flipped her onto her back, and quickly straddled her stomach. I lifted her heavy breasts towards the center of her chest, and created a tunnel of flesh around my engorged member. \n\nAneli was absolutely stunned as I fucked her tits. I knew that she wouldn't feel much, in terms of physical sensations, but the sheer novelty of the act caught her off-guard. \n\n- \"Where - should - I come?\" I grunted. \n\n- \"What?\" \n\n- \"Too - late.\" \n\nI ejaculated all over her. It didn't have the volume of my first orgasms, but there were several jets of semen that splashed her throat, her chin, and two satisfying spurts that landed on her face. \n\nAneli couldn't believe it. \n\n- \"That's ... that's insane!\" she sputtered. \"Is that something you do in Pylos? I had no idea your people were so ... crazed.\" \n\nShe was turned on enough that she manhandled me onto my back, and slid her body over mine, squishing her big tits against my chest and stomach, smearing my semen on both of us. \n\nAneli saw that I needed a little ... encouragement, so she took me into her mouth, and sucked me back to life, before climbing aboard the erection she'd created. \n\nAfter that joining, she finally let me rest a little: that is, she fell asleep. \n\n*** \n\nThe next day, Aneli resumed her onslaught on my stamina. I'd like to think that I acquitted myself well. \n\nFor one thing, her lush, voluptuous body was like a playground specifically designed for my carnal fantasies. Even after she washed, or douched, she remained wet and hot, her pussy a juicy cleft just begging to be repeatedly penetrated. \n\nShe had energy, and imagination. I liked Aneli, so it wasn't difficult to summon up the energy to try to please her - especially if by 'trying to please her' I really mean 'fucking her as hard and as long as I could'. \n\nHer hemmer scent, and that ... special something - I can't quite define it - contributed to keeping me hard for the rest of that second day, so that I could fuck her every time she asked me to. \n\nWhen she passed out, completely exhausted, I was tempted to hold a small victory parade just for myself. That thought only lasted for a moment, as I fell asleep beside her. \n\nBy the time she woke me up, Aneli's hemmer was beginning to fade. She had just enough scent (or pheromones, or whatever the secret ingredient was) left to get another rise out of me. \n\nWe had one more long, friendly fuck, doggy style. \n\nAfterwards, I lay back down beside her, and kissed her. She seemed surprised by that. \n\n- \"You ... you genuinely like me, Cook?\" \n\n- \"What? How could you doubt it?\" It may sound strange, but I suspected that I understood what she talking about. \n\nHer question might have sounded bizarre, considering that we'd just had sex ... well, I'd lost count, again, of how many times. A lot. \n\nBut Aneli knew that it was just sex, fuelled by her hemmer. A male who completely despised her would have been powerless to resist; he would have fucked her until he passed out - just as I had. \n\nShe knew that I was capable of resisting. The simple fact that I could spend months in a military camp, surrounded by any number of females in hemmer without losing my mind was proof of that. \n\nIt was that simple gesture - kissing her - when her hemmer was no longer operating so powerfully on me, which made Aneli think that I actually had affection for her. \n\n- \"Of course I like you.\" I said. \"You are one of a kind, Aneli.\" \n\n- \"Not just because I gave you command of my regiment?\" \n\nI raised my self up on one elbow. \"Gratitude alone is very different. You can tell the difference.\" \n\n- \"I know.\" she said. \"I'm just hoping ... that we can still be friends, when you're no longer just my Colonel.\" \n\nI kissed her again, and held her close. She closed her eyes, and hummed. \n\nMeanwhile, my thoughts were flitting around like water bugs. What had she heard? What did she know? \n\n*** \n\n- \"It's an invitation.\" said Tallia, as she handed me a bulky envelope, sealed with wax. \n\n- \"How do you know?\" I asked. \"The seal's unbroken.\" \n\nShe just rolled her eyes. \n\nIt was indeed an invitation - to a formal ball, held by Countess Iloni, to celebrate the victories of Henach and Limset. \n\n- \"The nerve!\" said Tallia. \"As if the two battles were equal!\" \n\n- \"Vis has been playing that game all along.\" I said. \"That's no surprise.\" \n\n- \"You should tear it up, and throw it away!\" \n\n- \"Iloni?\" I mused. \"Isn't she the one who ...?\" \n\nShe was indeed the legendary - or notorious (take your pick) - Countess I., renowned for the frequency and the power of her hemmer. She went into hemmer twice, and sometimes even three times a year. \n\nThere were stories that no male could keep up with her; that on occasion she'd had two or even three - at the same time. In a society as open about sex as the Westrons, it amazed me that any female could be perceived as wanton, or wicked. \n\nOf course, there was probably an element of envy, or jealousy involved. \n\n- \"She probably just wants to fuck you!\" spat Tallia. \n\nEsyle spoke up. \"I think you should go.\" \n\n- \"Oh?\" \n\n- \"It will look petty if you don't. Or, people may think that you're afraid.\" \n\n- \"I'm not sure that I care what people think.\" \n\n- \"You should.\" But Esyle had one more persuasive argument up her sleeve: I wouldn't be the only male at the ball. It would be my first real chance to encounter upper-class males. \n\nI'd met Westron males, of course: shopkeepers, gunsmiths and foundry-workers, for the most part. But I'd never met any Counts (though that title only meant the consort of a Countess). \n\n\"The army has accepted you.\" continued Esyle. \"But the nobility don't know what to make of you, yet. Now that you own the Belere, they really aren't certain. This is a test, of sorts, to see if you fit in.\" \n\n- \"I don't.\" I said. \"But now I'm curious. How do I respond to the invitation?\" \n\n- \"Who will you go with?\" asked Tallia. \"Aneli?\" \n\n- \"No.\" said Esyle. \"They'll think that you're just -\" \n\n- \"I'll go as the owner of the Belere, in my own right.\" I said. \"And that means that you'll be accompanying me, Esyle.\" \n\n- \"Me? But I can't -\" \n\n- \"You most certainly can. Aren't you the Lady of Belere?\" \n\n- \"Ooh.\" said Tallia. \"That'll put the sand up their nostrils.\" \n\nI'd been with the Westrons for three years - and it was the first time I'd ever heard that expression. But it sounded appropriate enough. \n\n*** \n\nTudino had reserved a small hemmer-cottage, outside the city. \n\nThese were little getaway villas, far enough from the capital that no wandering males would come by. Only those whose wives or lovers were waiting for them were allowed past the checkpoints, guarded by soldiers. \n\nI was stunned by the sheer size of the 'Hemmer-village'; there were hundreds of little houses - and soldiers everywhere. \n\nAny male who thought he could sneak in here was taking a serious risk. Getting caught meant a heavy fine, plus a public flogging. That was just the beginning. An offender would find that his family and friends and all their neighbors now shunned him. \n\nThe penalty for a second offence was more permanent: death. \n\nThere was a small market here, too, with female merchants, and plenty of Woles, too, doing a booming business. Food, wine, candles, luxury linens ... \n\nThe soldiers examined my pass thoroughly, even though I was accompanied by three of my bodyguards. Ishana herself was in hemmer, and hadn't made the trip. \n\nTudino had rented a modest little villa. There were many types of hemmer-cottages. The smallest were provided to the urban poor, free of charge. \n\nI saw the curtains move on the front window. She didn't come outside, though. Shyness? That wasn't something I ever associated with Tudino. \n\n- \"Good luck, Colonel.\" said Nasta. \n\n- \"Just call for help if you get into trouble.\" said Koroba, with a sly grin. \"We'll be outside if you need us.\" \n\nTudino was sitting on the edge of the bed, but she leapt to her feet when I came through the door. \n\n- \"Lock it.\" she said. \n\nI barred the door, and then stepped towards her. \n\nShe flinched. \n\nI pretended not to notice. Tudino, the Hero of Tonol ... nervous? Her face was surprisingly pale; she should have been flushed with arousal. And that look in her eyes ... was that fear? \n\nI couldn't remember ever seeing her in anything but military garb: breeches, white shirt and waistcoat. But today she wore a light, frilly shirt that left her arms and part of her shoulders bare. The frills accentuated the neckline, and then trailed down the front. \n\n- \"Shall we have a drink?\" I asked. \"How are you, Tudino?\" \n\nMy feigned nonchalance didn't fool her. \n\n- \"Ah, shit.\" she said. \"I'm a mess, Cook. I'm sorry.\" \n\nI handed her a glass of wine. \"Care to tell me about it?\" \n\n- \"I don't know. Looks like I brought you all this way for nothing.\" \n\n- \"Nothing? You mean, you're not really in hemmer?\" I didn't know if it was possible for Westron females to have false alarms. \n\nShe snorted. \"No. This is my hemmer. This is it. Awesome, isn't it?\" She looked so dejected, so downcast ... she couldn't even look at me. \n\nI touched my glass to hers. \"Your health.\" I lifted the glass and took a sip. She followed suit, but without raising her eyes. The edge of her glass barely touched her lips. \n\nThis was not the Tudino I knew. \n\n- \"Tell me about it.\" I suggested. \n\n- \"I'm sorry.\" she said, again. \"I'm sorry you came all this way -\" \n\n- \"I came here to be with you, Tudino. Because you're my friend. Whatever happens here - or doesn't happen - is only between you and me. No one else needs to know a damned thing about what we say or do.\" \n\n- \"Or don't do.\" \n\nShe still wouldn't look at me, so I was able to study her thoroughly. She'd invited me here to have sex. She was disappointed, or embarrassed - or even humiliated, because she couldn't. Or felt like she couldn't. \n\nShe was in hemmer, she'd said. But I couldn't see any of the tell-tale signs of arousal. I breathed deeply, through my nose, as discreetly as I could ... ah - there it was. \n\nAneli was like a tidal wave of pheromones, with a powerful, potent scent. I could almost taste her arousal on the air. Themis ... was like lying down in a field of fragrant flowers. Aphrodisiac flowers. \n\nTudino was like the gentlest of tidal pools - almost imperceptible. My heart went out to her. In a land ruled by hemmer, she was supremely disadvantaged. \n\n- \"We don't have to do anything.\" I said. \"I'll be perfectly happy letting you try to drink me under the table while we trade war stories.\" \n\n\"After all, we're here for at least two days, aren't we?\" \n\nHer head shot up. If we simply walked out, my bodyguards and a hundred soldiers were going to know that nothing had happened. \n\nFor the first time since I'd met her, Tudino looked very vulnerable. This woman could face a storm of shot without flinching; as far as I knew, she'd been wounded in virtually every engagement she'd fought in. \n\nBut she was terrified, now - and on the verge of tears. She couldn't send me away, either, because that would only broadcast her shame far and wide. \n\n- \"We could say that it was me.\" I suggested. \"That I couldn't ... perform.\" \n\n- \"Hah! Who's going to believe that?\" ",
        "- \"Why wouldn't they believe it?\" \n\nShe snorted again. \"Aneli brags about your virility all day long. There's a story that you took on two of your bodyguards in hemmer at the same time.\" \n\n\"And your aide, Tallia. You don't even need hemmer to have sex with her. Constantly.\" \n\n- \"Alright. So we'll stay here.\" I said. \"I don't mind. Will you at least have a drink with me?\" \n\n- \"I'm so sorry. I fucked up.\" \n\nI raised my glass. \"Here's to fucking up - and living to tell the tale. I mean ... not that we're going to tell anyone ...\" \n\n- \"I know you're trying to make me laugh, Cook. And I appreciate it. But -\" \n\n- \"You know, Tudino, if this was a military situation, you wouldn't hesitate to tell me if there was a problem - even if it was entirely your fault.\" \n\n- \"It's NOT my fault. Fuck! I was BORN THIS WAY!\" \n\n- \"What way? Why don't you just sit down and tell me about it.\" I gestured at the table, laden with food and drink - lots of drink. \n\nShe followed my lead, if only because there would be a table between us. \n\n- \"I'm ashamed enough as it is.\" she said. \"Do we really have to talk about it?\" \n\n- \"Come on, Tudino - what else are we going to do for two days? And you saved my life at Tonol. Seems like the least I can do is listen for a bit.\" \n\nShe shook her head. \"You keep saying that. It's not true.\" \n\nI refilled my own glass, and topped hers up. \n\n- \"Langoret and I are in full agreement. We'd bitten off way more than we could chew. If you hadn't sortied when you did, we were done for.\" \n\n- \"Bullshit. You had them on the run. I just kicked them in the balls when they were down.\" \n\n- \"Alright, we'll never get to the bottom of this, without several cases of wine. Why don't you just start with what's bothering you?\" \n\n- \"You won't let it go, will you?\" She sat up a little straighter, and spread her arms. \"Smell me. Take a good look: I'm a fucking freak.\" \n\nI wanted to take her in my arms, to comfort her. She wasn't ready for that. \n\n- \"Who says so? What asshole ever told you that?\" \n\n- \"My grandmother. My mother. I say it, Cook! Look at me!\" \n\n- \"I am looking at you.\" \n\n- \"I'm ... a freak.\" \n\n- \"You'd have plenty of company in Pylos.\" I said. \"We have people that want to ...\" I described several fetishes and deviant desires. \n\n\"But are you talking about your hemmer? Or is it something else?\" \n\n- \"I don't HAVE a fucking hemmer!\" she snapped. \n\n- \"You do, you know. When was the last time you lay with a male?\" I was guessing. \n\n- \"Fuck you, Cook!\" \n\n- \"When was the last time?\" I repeated. \n\n- \"Six years ago.\" she mumbled. I heard her clearly, and didn't force her to repeat it. \n\n- \"What happened?\" I asked, as gently as I could. \n\n- \"He was the local stud, well-known for impregnating every female he copulated with. My grandmother ... recruited him. I no longer cared about the ... sexual part any more. I just wanted a child, and ... for people to treat me as if I was normal.\" \n\nI didn't interrupt. \n\n\"He couldn't even ...\" She blinked back tears. \"He couldn't even get hard. Still tried, because he was probably worried about his reputation. It was like trying to feed a soggy slow match into a musket barrel.\" \n\nOuch. I tried not to wince at that image. \"He talked? Afterwards?\" \n\n- \"No. I told him I'd castrate him if he breathed a word. It was the first ... blemish, on his otherwise spotless record.\" \n\n- \"That wasn't your first attempt, I take it?\" \n\nShe shook her head. \"Third. That's why we went to a so-called specialist. My grandmother was trying to help ... damn it - why am I talking about this?\" \n\nI nudged her glass towards her; Tudino suddenly snatched it up, and drained it. \n\n- \"Pretty good wine.\" I said. \n\nTudino shook her head. \"You're such an asshole, Cook.\" \n\n- \"Maybe.\" I said. \"But you invited me for a reason. What was that reason, Tudino?\" \n\n- \"What?\" \n\n- \"You've had bad experiences. Why invite me to your hemmer, after six years?\" \n\n- \"Don't be thick. I told you: I wanted a child. I thought you were handsome. I ... I like you. I was drunk when I asked. Alright?\" \n\n- \"And?\" \n\nShe glared at me. \"Give it a rest, won't you?\" \n\n- \"You picked me because I'm Pylosian.\" \n\n- \"Yes, Fine. Because you have a hybrid lover, and you can get it up for her every fucking day, even though she has no hemmer ...\" \n\n- \"That's true. I love Tallia, and she ... excites me. Without hemmer.\" \n\n\"So how are you any different, Tudino?\" \n\nShe didn't answer, but instead drained her glass again. \n\n\"How are you any different?\" I repeated, in the barest whisper. \n\n- \"Why are you doing this to me? I'm a freak! I'm fucking ugly!\" \n\n- \"You're no such thing! Whoever gave you that idea was wrong! Wrong!\" \n\nThat shocked her into silence. I took a deep breath. \"I wish that you could see yourself as I do. Damn, Tudino ...\" \n\n\"Your hair is amazing. It's so long, so dark ... I just want to run my fingers through it ... and then, you have a high forehead. Some people may not find that appealing, but I do. It reminds me of the first-class military mind inside your head.\" \n\n\"Your eyes are simply spectacular. They're your best feature, if you ask me. I noticed them the first time we met - do you remember? After Tonol? I only saw one eye, because the other was covered by a bandage.\" \n\nShe nodded, ever so slightly. \n\n\"Your nose is a classic. Tudino: look at mine. How could you think that I wouldn't sympathize with a broken nose?\" \n\n\"Your lips are ... soft and kissable. I know: a bullet scarred the corner of your mouth. Damn, woman - don't you realize how much presence that gives you?\" \n\n- \"Presence?\" she whispered. \n\n- \"Presence. Charisma. I don't know what to call it.\" \n\n- \"My chin ...\" \n\n- \"You have a strong chin. Slightly crooked. Hit by a musket ball, at some time. Do you know what that means?\" \n\n\"It means that you're one of a kind, Tudino. There's no one like you. Your face is unique, and highly attractive, because of who you are ...\" \n\n- \"Stop.\" \n\n- \"You're the only Tudino I know. I came up here because you asked me. But If you want the truth, I was looking forward to it -\" \n\n- \"Cook , stop!\" she snapped. \n\nI stopped. \n\n\"I appreciate what you're trying to do.\" she said. \"But you don't have to -\" \n\nShe fell silent, suddenly, because I pushed my chair back from the table, and stood up. I looked her in the eye. Then, slowly - deliberately, I lowered my hand, to the red scarf I wore as a sash. I moved the trailing ends aside, to reveal my swollen erection. \n\nTudino's jaw dropped. She stared at my crotch. \n\n- \"How ...?\" \n\n- \"I'm trying to tell you.\" I said. \"You're a striking, beautiful woman. And your hemmer is working on me.\" \n\n- \"I don't -\" \n\n- \"You do. Your scent is so subtle, it's almost unnoticeable. But I can sense it.\" \n\n- \"Subtle?\" \n\n- \"Delicate.\" I said. \"Just barely perceptible. But so tantalizing ...\" \n\nTudino was still staring at the outline of my erection through my breeches. \n\n- \"That's ... You mean it?\" \n\nVery slowly, I circled the table, until my engorged member was only a foot from her face - at eye-level. \n\nTudino couldn't resist. She raised a hand, and reached out, until her fingertips brushed against my swollen cock. \n\n- \"Oh -\" was all she said. \n\nI took hold of both her elbows, and pulled her from the chair. She didn't protest, or pull away, when I kissed her. \n\nShe was nervous, and still a little skittish. But her lips were molding themselves to mine, and she was holding on to me tightly with her hands. \n\nWhen we finally separated, just to breathe, she placed a hand on my chest. \n\n- \"Wait, I ...\" \n\nI didn't wait. I scooped her up in my arms, and carried her to the bed. \n\n- \"No more waiting.\" I said. \"I'm going to give you an orgasm - with my fingers, and my tongue. We'll talk after that.\" \n\nI was bluffing, just a bit. I had no intention of trying to finger her right away. In fact, I didn't try to remove any of her clothing, either. \n\nI just kissed her. \n\nMales have pheromones, too, and she just needed time to sense mine. She let me explore her lips, and discovered that I hadn't been lying: I enjoyed every moment that we lay side by side. \n\nThat's not to say that my hands were inactive. I ran my fingertips across her hip, to her waist. I caressed her hair. Then I touched a single finger to her nose, feeling the bump there. \n\nBefore she could say anything, I took hold of her hand, and raised it to my nose, so that she could feel the bump on mine. \n\nShe smiled. \n\nI kissed her some more, and then put my hand on her breast, through the frilly shirt. Her breath caught - but she didn't object. \n\nI pulled back, and reached for the top bottom of her shirt. Very slowly, very deliberately, I undid it. Tudino watched me, but made no move to stop what I was doing. \n\nAfter the third button, I was able to slide my hand under the frills, over the bare skin which had rarely - if ever - been touched. \n\nShe was small-breasted, like Esyle, but her nipples were ... exquisite. \n\nI returned to kissing her, while I fondled her breasts, and then undid the rest of her buttons. Now there was some colour in her cheeks, and her nipples were standing to attention. She had to be able to sense my arousal, too. \n\nTudino's military-style breeches were easy to remove. She was tense, but she didn't fight me. I stroked her bare legs, and then kissed my way from her knee to her hip. Then I moved up to lay beside her again, and resumed my attention to her breasts. \n\nAs I kissed her, and toyed with her nipples, Tudino's hands began to wander. I felt her fingertips trail across my ass, and then she turned towards me, so that she could brush her hand over my erection. \n\nOnly then did I slide lower, and kiss little circles around her navel. I looked up, and met her eye. She was watching me, fascinated. \n\n- \"May I?\" I asked. \n\n- \"No one has ever ...\" \n\n- \"Someone's about to.\" I said, softly. \n\nIt wasn't so surprising that no one had ever done this for her before. Westron males were usually so intoxicated by their partner's hemmer that they could barely think: they could only rut. \n\nI was suddenly overcome by a wave of passion. I can't quite explain it. If you had asked me, a week earlier, who I loved, I could have answered: Esyle, and Tallia. Themis. With fond spots for Kanitz, and, to a lesser degree, for Aneli. \n\nI still loved Vanova, though I'd probably never see her again. And I got a pang whenever I thought of Oshide. \n\nBut at that moment, I felt like I was riding a wave, and that wave was Tudino. She deserved the best damn hemmer I could give her. \n\nWhen my lips touched her labia, she folded. I made love to her pussy with my mouth. Time passed, but neither of us was aware of it. \n\nHer first orgasm began to build. She was tense as a bowstring, almost bent in half as she arched her back and thrust her pussy at me. I could feel it coming - that was when I introduced a second finger inside her, and flicked my tongue across her clit. And then back. \n\nI was wrong. It wasn't just Tudino's first orgasm of the day; it was her first ever orgasm shared with another person. \n\n*** \n\nIt's a testimony to the trust between her and I, and to the openness of Westrons, in general, when it comes to sexual matters: there was nothing especially awkward about Tudino wrapping her arms around me, and crying her eyes out, moments after the first shared orgasm of her life. \n\nShe had masturbated, alone, during her hemmers, and brought herself off. \n\n- \"But I never, never felt anything like that.\" \n\nShe smiled, and kissed me. We lay like that, for a few moments. I kissed her back, and began caressing her back, her shoulders, and then her surprisingly delicious little ass. Her dorsal fur was dark, but sparse. \n\nTudino happened to glance down, and saw my erection, standing tall and proud like a flagpole (It could have been even harder; then it would have been pointing at my chin). \n\nShe looked back at me. A devilish little smile slowly spread across her face. \n\n- \"Can I? Or ... can we?\" \n\nShe didn't wait for an answer. \"The wetter the better, I suppose?\" She lowered her head, and tried to take my full length into her mouth. She slurped and slobbered, apparently more intent on covering me in spit than in imparting any pleasure. \n\nWithout further ado, she swung her leg over, and straddled my hips. She took a firm hold of my erection. Then she tried to sit down on me, all at once. \n\n- \"AAAHH!\" She let out a piecing scream. It must have hurt like hell. My cock was wedged halfway inside her. Only tenacity and determination kept her from leaping off me like I was a hot stove. Or maybe it was sheer stubbornness. \n\n- \"Don't move.\" I cautioned. \"Wait. Wait a bit.\" \n\n- \"Till it stops hurting?\" she said. \"Because I expected it to hurt a bit ... but this is -\" \n\n- \"Wait till you get used to it, a little.\" \n\n- \"It's hardly 'little'.\" When she realized what she'd said, she chuckled - and then winced. \n\n- \"You have to relax.\" \n\n- \"Easy for you to say.\" \n\n- \"That's why I'm saying it.\" But I tried to help, rubbing her thighs, and then sliding my hands from her waist to her breasts, and then back. \"Can you lean forward?\" \n\nShe could. Kissing and fondling seemed to help. So did Tudino's hemmer; we could both feel it increasing, growing in intensity. It kept me hard; it also seemed to help her lubricate. \n\n- \"I do have a hemmer!\" she exclaimed. \"Can you feel it?\" \n\n- \"I most certainly do. You just needed to be warmed up.\" \n\n- \"I feel warmer now, that's for sure. It doesn't hurt so much, either.\" She tried a little movement with her hips, and then another. We both felt the progress, as I slid a little further inside her. \n\nTudino's cheeks were flushed, now. Even her throat and chest had a bit of colour. Her nipples were hard, and I could smell - and sense - her growing arousal. \n\nShe shifted again, drew back, and then thrust forward. She had to repeat those motions several more times, but finally ... \n\n- \"I did it! All the way!\" \n\n- \"That's wonderful! Congratulations!\" \n\n- \"I couldn't have done it without you.\" she said, more softly. \"I wish my grandmother could see me now.\" \n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "assassination",
        "bodyguards",
        "sci-fi",
        "hemmer",
        "palace",
        "sisters",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/westrons-pt-13"
}