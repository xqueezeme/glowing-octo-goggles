{
    "title": "Sun, Sex, and a Summer of Love",
    "pages": [
        "This is my entry for the 2019 Summer Lovin' contest. It is based on a collection of real-life incidents that have happened over the years either to me or things I've witnessed at both nude and non-nude events. It's also a little nod to this year's 50th anniversary of the first Woodstock festival in 1969. Enjoy!\n\n***\n\nKyle rushed through a maze of restless office workers feverishly clutching their lattes. It was the same horde of nameless faces, thundering legs, honking cars, and blinking lights that usually presented an obstacle course on his morning journey to work. He reminded himself that it was Friday and the weekend would soon bring much-needed relief.\n\nHe made his way into the tall glass and steel building where he worked, feeling a relative calm wash over him as he crossed the quiet lobby and made his way to the bank of elevators. The faces suddenly became familiar. There were smiles and nods. His paper coffee cup felt warm and soothing in his hand, countering the dull ache in his shoulder from a heavy laptop bag.\n\nThe elevator gave its final beep as it reached the nineteenth floor and the doors slid open. Kyle took his usual amble across the office, giving a brief hello to coworkers eating hasty oatmeal cup breakfasts at their desks. He had the usual thought as the bag slumped off his shoulder and he took a seat at his desk: that the job was mundane and not what he really wanted to do after graduating college, but that it was temporary and afforded him the chance to have an apartment on the Lower East Side, even if it was with two other guys.\n\nAs the morning wore on, Kyle found himself dwelling more and more on the end of the day, as it usually went with Fridays. He took frequent trips to the snack machines and just wandered about to stretch his legs. On one of these brief strolls, however, he spotted Jordyn standing by the bright blue water cooler. She was filling a small paper cup. The tank belched and a large, wobbling bubble soared upward to the surface.\n\n\"Oh, hey Kyle!\" she said enthusiastically, spotting him as he passed.\n\nKyle felt a sudden buzz throughout his body as he watched her eyes light up. He stopped short and stood there in awe of her long, dark brown hair, her big brown eyes, the shiny stud in her nose, and the strange tattoo peeking out from beneath her sleeve that he could never see the rest of. A slight nervousness arose as he became conscious of the way her breasts warped the text on the front of her tight-fitting t-shirt. It read, \"Coder Grrrl.\"\n\nJordyn often wore shirts like that and he wondered if it was because of the way it advertised her body. She was the type of girl that was not shy about broadcasting her sexual allure. She always managed to keep it just within reason so as not to run up against the office dress code. Kyle found girls like that intimidating but also exciting.\n\n\"Hi Jordyn,\" he said with a smile.\n\n\"Killing time on a Friday, eh?\" she said with a smirk. He laughed and nodded. \"I've probably had a gallon of water already. The water cooler makes a good excuse to get up, but no one is ever actually here to have a conversation with. Like, are there seriously no other Game of Thrones fans in this office?!\"\n\nKyle grinned. He felt his leg nervously tapping against the floor but for some reason, he couldn't stop it. \"Well, I watch it. But I'm afraid if we started on that, we'd never get back to work.\"\n\nJordyn was the free-spirited girl of the office and Kyle certainly crushed on her, even if he wasn't sure whether she was even straight or not. She'd given indications on both sides. \"Perhaps she's bisexual,\" he wondered, then decided it didn't matter because she probably wouldn't be interested in him, anyway.\n\n\"Got any plans for the long weekend?\" Jordyn asked.\n\nKyle had almost forgotten it was a three-day weekend and felt embarrassed that he still had no plans. \"Not really. What are you doing?\" he replied.\n\n\"Oh, I'm going to the Far Out Festival!\" she said excitedly. \"Have you heard of it?\"\n\n\"Um, sorta,\" he said, even though he hadn't.\n\n\"It's so much fun! I went there last year and had an amazing time. Everyone just camps way out in the Catskills. There's a big stage with music -- but nothing electronic is allowed. It's all, like, retro sixties back-to-the-Earth stuff. You even have to leave your phone in your tent and just chill out with everyone.\"\n\nKyle nodded dumbly at her, focusing on her deep pink lips and dark hair. He heard her rapid description begin to slow, then panicked when she seemed to notice the way he was gazing at her.\n\n\"Anyway--\" she continued with a smile, \"People cook and share everything. It's like a return to the original Summer of Love vibe but, like, a small slice of it or something.\"\n\n\"Cool,\" was all he could manage to say. He had heard lots of things about the sixties. It was all hippies and free love and cool music as far as he could tell, but he still wasn't quite sure what it would have been like to actually be at Woodstock.\n\nAn awkward silence passed between them. She studied his face as if still curious about the way he was looking at her. Kyle's eyes darted away nervously and then back again.\n\n\"Well, if you don't make any plans, you're welcome to come along if you like. I have a four-person tent that's plenty big enough so you wouldn't have to bring much.\" Kyle was taken aback. He felt terrified and excited at the same time, unsure how to react to the fact that Jordyn had just invited him to spend a weekend camping in a tent with her.\n\n\"Oh, cool. Okay...\" he said quickly as his heart starting thumping in his chest. He couldn't believe he just quickly agreed like that.\n\n\"Awesome!\" she said, suddenly grasping his wrist excitedly. She seemed almost surprised that he said yes. \"You're gonna have so much fun, then!\" He smiled nervously at her. She let go of his wrist and started speaking rapidly again, explaining what he needed to pack and where they should meet for the drive up in the morning. \"I'll just email you the logistics,\" she said finally, realizing that she was probably giving him too much information.\n\n\"Okay, great!\" he said, trying to hide his nervousness.\n\n\"Oh, and also, some people return Monday night but a lot of people get up super early on Tuesday and drive home. Last year I came back here and went straight into work. Is that okay?\" she asked.\n\n\"Yeah, that's fine,\" he said, wondering if he'd smell weird coming straight from the festival.\n\n\"Nice! Let's do it,\" she exclaimed before finally drinking the cup of cool water she'd been holding the whole time.\n\n\"Okay! Well, see you later then. I'm gonna run to the bathroom,\" Kyle added, feeling the need to sit down and breathe.\n\n\"Okay, later!\" Jordyn said, waving.\n\nKyle rushed to the bathroom and locked himself in a stall. He could have Googled the event, learned more about it, and avoided the surprises that followed. It might have prepared him more. It also might have made him chicken out.\n\nInstead, he sat there picturing Jordyn in his head. Her impish smile. Her soft hair... and the close quarters of an empty tent with a mess of blankets laid out just for them.\n\n***\n\nJordyn and Kyle had merged onto the highway in her rental car for mere moments before he felt her gun the engine and trill with excitement. She began talking a mile a minute, describing the strange booths that people set up, all the activities that one could take part of, the drugs, the wild costumes people bring, and the music which she went on and on about, demonstrating a deep love for the artists of the sixties, only a handful of which he recognized.\n\nShe enthusiastically explained that it didn't break the rules to use her iPod in the car on the way up there. \"I made you a sixties mixtape!\" Jordyn announced, cueing up the first song, \"Somebody to Love\" by Jefferson Airplane.\n\nKyle watched with growing admiration as Jordyn put her arm out the window and began to sing along, belting out the lyrics which she knew by heart. Her hand caught the wind and drew it into the car where it rushed against her body and kicked up the dark hair which spun about her face in wild tendrils.\n\nAs he observed her delight, Kyle felt his heart pulsing in his chest. He couldn't take his eyes off Jordyn's face, lost in her easy smile and the sparkle of her eyes. \"If you listen to the lyrics, it's sorta ironic that we're listening to this on our way to celebrate free love and all that stuff, but it's still such a badass song,\" she said during a break pause in the vocals.\n\n\"Free love?\" Kyle thought, wondering just how closely the festival they were about to attend embraced that particular theme.\n\nThey drove for a couple of hours like that, side by side and flanked by two large coffees, with the stereo system cranked and the windows rolled all the way down. After finally making a pit stop for a snack and a bathroom break, they headed back out onto the road for the final, brief leg of the journey.\n\n\"Oh! Shit! I almost forgot to mention!\" Jordyn exclaimed with a sudden outburst. \"Is it okay if my best friend Tessa joins us? She's coming down from Rochester. I told her she can share our tent. We'll be okay fitting three of us in there.\"\n\nKyle's mouth snapped shut and he was taken aback. \"Another girl?\" he thought. He began to wonder again about Jordyn's sexuality, then felt sad that maybe her intent of inviting him to share a tent wasn't quite what he had hoped for. Certainly not with her BFF joining them. On the other hand, the idea of sharing the tent with two girls instead of one had an obvious appeal.\n\n\"Sure! I don't care. The more the merrier!\" he said. She laughed and cast a smile at him. Kyle realized maybe that didn't sound the way he intended.\n\n\"Anyway, I have this sort of foam mattress thingie that rolls up. That's why I suggested that you don't bring a sleeping bag. I had one last time and it was way, way too hot. It cools down overnight, but I was like, baking in there. The tent got all steamy.\"\n\n\"Was that with... um...\"\n\n\"Tessa, yeah.\"\n\n\"Wow, okay. And now there will be three of us heating it up.\"\n\n\"Yeah. Yikes. We'll be okay with three bodies in there, though,\" she reaffirmed.\n\nKyle wasn't altogether put off by the idea of three bodies in a steamy tent, especially when the other two bodies were girls. He just hoped that Tessa was as cool as Jordyn and that things wouldn't get awkward.\n\n***\n\nWhen they arrived, they parked the car in a large meadow full of numerous other vehicles and started down a path lugging large bags containing all of their supplies. Kyle wanted to laugh as Jordyn crunched over piles of snapping twigs. The military-style olive canvas bag perched on her back was as big as she was.\n\nThe setting was pristine and beautiful, exactly as Jordyn had described. All the riches of the summertime were flourishing through the countryside. Kyle wasn't sure where the big lake she had mentioned was but the grassy pasture they crossed seemed to be the perfect setting for an outdoor festival. Crowds had already started gathering. There were sudden shrieks of delight, following by dropping bags and eager hugs. They passed through a maze of half-erected tents beyond which a large, empty stage had been constructed.\n\nJordyn chose a quiet area near the woods as a location for their tent. \"This is where we were last year, so Tessa shouldn't have any problem finding us.\" The tent didn't take long to construct and it wasn't long before their neighbors emerged from their own to see what was going on.\n\n\"Hey! I'm Jeff and this is Preeti,\" said a lanky bearded guy as he approached. A quiet Indian girl followed behind him. She had a dreamy look on her face and extended her hand happily to the group.\n\nJordyn and Kyle introduced themselves and gladly accepted a cold beer offered by their new friends, which they pulled out of a large blue cooler.\n\nAfter socializing for a bit, they got back to work and Kyle helped Jordyn execute her plan for the inside of the tent. She decked it out with all sorts of psychedelic tapestries to serve as sheets, as well as tiny paper lanterns. Soon it looked to Kyle like some private harem for an Arabian sheik where sharp-eyed girls might be staring back at him through a web of colorful veils. He was impressed.\n\n\"Ding-dong!\" someone shouted from outside.\n\nJordyn gasped and peeked outside. \"Oh-my-god!\" she shrieked as she scrambled out into the sunlight.\n\nKyle crawled out of the tent and found a young woman standing there with a bag at her feet. Jordyn raced up to her and gave her a bear hug, then leaned back, gazed into her eyes, and gave her a happy kiss on the lips. It was obvious to Kyle how close they were, right off the bat. They were over the moon to see each other.\n\nTessa was cute and just as bubbly as Jordyn was. Her dirty blonde hair was tied hastily back into a messy ponytail. The remnant of an unraveling braid was tucked inside, its red dye starting to fade into a tinge of magenta. Tessa cast a look over at Kyle with her big brown eyes and smiled, forming two small dimples.\n\n\"Hey! Are you Kyle?\" she asked.\n\n\"That's me,\" he said with a grin. Jordyn released her friend from her bear hug and stepped aside, anxious for them to meet. Tessa and Kyle took a step toward one another.\n\nKyle felt himself going in for a hug. He wasn't entirely sure why, perhaps because Jordyn just had and the scene was still fresh in his head. However, Tessa had extended her hand for a handshake, catching him off guard.\n\n\"Oh, sorry!\" Tessa laughed, adjusting her stance for an unexpected hug as Kyle shifted to a handshake. They laughed awkwardly.\n\nKyle persisted until Tessa recovered and gave him a handshake. He felt embarrassed.\n\nTessa seemed enthusiastic to meet Kyle but he felt like the first impression he gave made him look like a nervous idiot. She went back to chatting with Jordyn and he began telling himself to calm down and stop being so anxious around them. He was there to have a good time, to spend time with a girl he crushed on, and who knew what else.\n\nThe festival was only just beginning and the whole weekend held the promise for an exciting adventure.\n\n***\n\nIt wasn't long before the three of them raced off to the main festival area, where crowds were already gathering in excitement on the long expanse of grass in front of the stage. The scene certainly looked like something out of the old Woodstock footage that Kyle had seen on TV; throngs of merry, carefree youths, blissed out in the warmth of the sun, wearing skimpy clothes and flirting with their sexual laxity.\n\nWithin the span of thirty minutes, it felt like the party of the century had formed, a sea of constantly shifting bodies, a roar of voices, constant peals of laughter, growing louder and louder as the kickoff event came nearer.\n\nThe festival organizers came on stage and introduced themselves as Arwen and Mitchell. She looked like a tall hippie goddess with long golden dreadlocks and psychedelic clothing, albeit with a modern, edgier vibe than what Kyle had seen from the sixties. Mitchell peered at the audience with an amused look through the small circular frames of his rose-tinted glasses. He was dressed more simply, with worn-out hiking shorts and a faded t-shirt featuring a cartoon dancing mushroom. Something about him reminded Kyle vaguely of an old camp counselor he once had.\n\nThey were festival promoters, yes, but they also looked equally like participants, having thrown together exactly the kind of wild get together in the forest that they would want to attend themselves.\n\nThe opening announcements were a mix of practical information and celebratory fanfare that prompted all manners of hoots and hollers from the crowd. It didn't last too long, as Arwen and Mitchell were soon replaced by a trio of mustachioed guys from Brooklyn who performed a modern twist on traditional folk songs.\n\nAs a lively twang filled the air, Kyle, Jordyn, and Tessa made their way through the sea of blankets to observe the festival as it commenced, partaking in various things to eat and drink and stopping to check out a mishmash of ironic arts and crafts. Time seemed to fly by and when the sun finally began to set, bonfires sprung up and the smell of charred marshmallow began to fill the air as they joined in making s'mores with a nearby group of festival-goers.\n\nAs the activity began to die down late into the evening, Kyle noticed Jordyn beginning to yawn.\n\n\"Wanna get some sleep, babe?\" Tessa asked her. Jordyn nodded sleepily. \"Okay, let's go,\" said Tessa, rising to her feet and helping Jordyn up. \"She's like, about to pass out,\" Tessa laughed, indicating to Kyle that it was time for them to go. He rose and joined them, following behind the two girls who were arm in arm.\n\nThey passed by a series of small, dying bonfires; not-quite-legal features of the festival, but a rule no one seemed to care about. Soft faces crowded around them, flickering with a strange orange glow. Fatigue seemed to be setting in across the board as evidenced by the wet, glassy eyes that stared blankly into the flashing tongues of fire.\n\nWith a loud zipping sound, Tessa opened the small portal to their tent and ushered Jordyn and Kyle inside. Kyle quickly crawled over to his side of the tent, beside Jordyn's spot who had chosen to sleep in the middle. He laid down and propped himself up on his elbow as he watched the girls getting ready for bed.\n\nJordyn and Tessa crowded around their backpacks in the opposite corner of the tent, with their backs to Kyle. They rummaged around inside for a few moments. Jordyn pulled out a small bottle, squirted something into her palm, and then massaged it into her face. Kyle felt butterflies in his stomach as he watched Tessa casually hike up her shirt partway, then reach for her bra strap underneath. He heard it unsnap and watched her tug it down, yanking it out from beneath her shirt, which she let drop back down to her waist.\n\nThough he hadn't seen much, it was titillating nonetheless.\n\nJordyn returned the bottle to her backpack and then reached for a stick of deodorant. She quickly ran it under her arms, as if sheepish about performing this action, and then tossed it back into the bag. Then she reached for her own bra in the same manner as Tessa had. Kyle watched with great interest as she stealthily removed it and placed it in the corner with the rest of her things. Tessa abruptly leaned back, undoing the buttons on her denim shorts, and slipped them right off. She sat there in her underwear as she folded them and put them aside. Jordyn followed suit, tugging off her own shorts.\n\nKyle continued to gaze at both girls, sitting there in their panties, with the soft, outwardly expanding cushion of their bottoms resting on the tie-dyed sheets beneath their bodies. He watched as they turned left and right, finishing their tasks, observing the loose swing of their freed breasts beneath the thin fabric of their t-shirts. He was so used to seeing Jordyn's shirts accentuating the size and shape of her breasts but they were always so tightly contained and mostly motionless on account of her bra. It was exciting to see them wobble about, indicating their weight, their softness, their youthful animation. He imagined being able to touch them, to place his hands against her bare chest and give them a soft squeeze, feeling her stiffening nipples pressing back against his palms.\n\nJordyn suddenly turned and caught him watching. He looked down casually and picked at the sheets nervously as she crawled over and laid down next to him. The moment she collapsed beside him, Kyle caught a whiff of an enchanting fragrance, rose and lavender, and something else that was exotic and mysterious. He knew it was just whatever lotion she had applied but it seemed to express everything that was lovely and feminine about her.\n\nHe inhaled deeply, trying to hide the fact that he wanted to breathe in the scent of her body as it reclined beside his. He wondered if she was feeling insecure about her smell after a day in the hot sun, given that she'd be sleeping next to him. He didn't mind. As lovely as the floral scent was, he also yearned to know the true scent of her skin and her hair. He imagined what the rest of her body smelled like. He imagined someday becoming intimate with her, the phantom scent of her private, feminine musk floated through his mind.",
        "\"Are you tired?\" Jordyn asked.\n\n\"Yeah, getting there,\" he said with a smile. She smiled back at him.\n\nTessa slipped into the sheets on the other side of Jordyn. Suddenly Jordyn giggled and shifted her feet around. \"Oh my god, your toes are so cold!\" she yelped. Tessa started laughing and rubbing her feet up against Jordyn beneath the sheets. Jordyn shrieked again and Kyle began to laugh. Their playfulness was arousing, as was the sight of their shifting breasts as they squealed and laughed together.\n\nKyle laid down and began to cover himself with the sheets. Jordyn glanced at him out of the corner of her eye and then rolled her head to his side.\n\n\"You're sleeping in your shorts?\" she asked with genuine surprise.\n\n\"Oh... I forgot!\" Kyle said. In fact, he hadn't forgotten. He was feeling anxious about removing them in front of the girls and sleeping in such close proximity, wearing only boxers. Kyle kept his shirt on but quickly slipped off his shorts and then slid beneath the sheets as Jordyn watched.\n\nShe smiled at him again. \"Goodnight,\" she said. She rolled her head to the right and exchanged a goodnight with Tessa as well.\n\nKyle lay there for a while, staring up at the shadowy ceiling of the tent that surrounded them. He remained anxious about his state, wondering, \"What if I wake up with a boner?\" The thought of her waking up to discover a huge bulge between his legs terrified him but somehow it excited him at the same time. He imagined the scenario playing out over and over, picturing himself fast asleep, then seeing Jordyn lift herself up into a seated position, rubbing her eyes. When she removed her hands, she'd gasp softly. She'd look down and spot the telltale sign of morning wood.\n\nIt turned into a sexual fantasy. A huge grin would stretch across her face. She'd check his eyes, confirming that he was still asleep. Jordyn would slowly and carefully begin to peel down the sheet over his body. He'd wake but keep his eyes closed, his heart thumping in his chest as he realized what she was doing. Jordyn would pull the sheets down until they cleared his pelvis. There, she'd gaze at the outline of his stiffened penis.\n\nHe went further. What if she got even more curious?\n\nKyle imagined her checking again to confirm he was still asleep, then carefully undoing the button on the flap of his boxers. She'd move aside the two sides of the opening, her eyes wide and full of wonder. Then, all of a sudden, his swollen cock with spring out and give a stiff bounce. He'd hear her soft gasp as she found herself looking down at his erect penis.\n\nThe fantasy stopped there. He didn't know how it would continue. Or rather, he knew how he'd want it to continue but he couldn't bring himself to imagine something that seemed so unrealistic. He felt silly for having it.\n\nThe sadness of that conclusion lulled him to sleep, relieving him of the stress of his own desires, at least for a time.\n\n***\n\nThe following morning Kyle awoke to sounds and movement. His eyes blinked open. When the world came into focus, he saw Jordyn and Tessa digging through their bags. They both sat there in their t-shirts and panties. Jordyn's shifting movements threatened to expose her butt crack and Kyle felt himself becoming aroused.\n\n\"I know it's here somewhere. I remember packing-- ah!\" she pulled out a bottle with a blue liquid inside.\n\n\"Nice!\" exclaimed Tessa. She noticed Kyle watching them. \"Good morning, sleepyhead,\" Tessa said with a smirk.\n\n\"Hey, good morning,\" Kyle said, rubbing his eyes.\n\nJordyn turned suddenly and smiled at him. \"You could have warned us that you snore!\" she laughed, before hurling a balled-up piece of clothing in his direction.\n\n\"Oh... sorry...\" he chuckled. \"Was it that bad?\"\n\n\"Nah... not really.\"\n\nKyle was in no hurry to throw the sheets off his body. The stiff nubs of Jordyn's nipples poked against her black t-shirt. Tessa's were becoming hard too. He wasn't sure if it was from the cool morning air or the fact that they shared a tent with a guy. He wanted to imagine it was the latter.\n\nKyle looked at the bottle that Jordyn held. It said, \"Smell-O-The-Wild Wilderness Soap\" and had a cartoon-like image of a grizzly bear scrubbing clean, his goofy grin partly obscured by a swirl of iridescent bubbles. \"What's that?\" he asked.\n\nJordyn glanced down at the bottle. \"This? It's just the soap that I packed. It's all biodegradable and stuff, so we can use it in the lake.\"\n\nKyle was surprised. He hadn't thought much about having to bathe. The few times he'd gone camping, it wasn't for long, and he didn't share a tent with anyone. The most he'd ever done was wash his face in a stream. His mind suddenly flashed with images of people quickly undressing and nervously splashing their bodies in a lake before anyone showed up and caught them. He couldn't imagine it actually happened like that, though. Kyle began to worry that he'd never be able to get out from under the sheets, as everything seemed to be arousing him.\n\nHe suddenly remembered the fantasy he'd had the night before. Did Jordyn wake to discover his body in a scandalous state? If she did, he might never know.\n\n\"Oh, that's cool. I didn't know they made biodegradable soap but I guess it makes sense,\" Kyle said. \"So, how does that work, then?\"\n\n\"How does soap work?\" Jordyn asked, confused.\n\n\"No, I mean, washing in the lake. You guys can go first if you want. Just tell me how to get there and back when you return.\"\n\nA wide grin stretched across Tessa's face which she quickly hid by turning away. Kyle immediately realized she clearly knew something that he didn't know.\n\n\"Uh...\" said Jordyn. She glanced over at Tessa who was too busy trying to hold in a laugh. Jordyn smiled and turned back to face Kyle.\n\n\"Well, most people just go together... Does that make you nervous? You don't have to if you don't want to,\" she said, seeming suddenly anxious herself.\n\nKyle felt himself jolt awake. \"You mean... like...\" he mumbled, deeply flustered by Jordyn's response.\n\nTessa whipped her head back around and eyed Kyle as if she was relishing his innocence. \"It's no big deal. We're at a festival in the woods.\" -- Then she dropped the bomb. -- \"Everyone gets naked sooner or later.\" She laughed. Jordyn gave a nervous laugh as well.\n\nKyle felt his face becoming hot. Clearly, he'd made a fool of himself and was embarrassed about that. However, it paled in comparison to the embarrassment he was subsequently feeling at the prospect of bathing in the lake with Jordyn and Tessa. They seemed to study him with a compassionate sympathy, not exactly the attitude he wanted them to feel toward him when faced with the idea of seeing him naked.\n\n\"Oh! Okay. I wasn't sure. I didn't... um... want to assume anything and make you feel uncomfortable,\" he said, trying to hide his ignorance.\n\nTessa smiled at Jordyn who returned the expression.\n\n\"Okay. You did bring a towel though, right?\" Jordyn asked him.\n\n\"Yeah,\" he said, now understanding the specific reason it was on her list of things to pack.\n\nFor the next several minutes, Jordyn and Tessa took their time pulling on their shorts and packing a small bag with everyone's towels, as well as the newly recovered soap. Their apparent lack of anxiety only made Kyle more anxious as he sat there silently brooding about what they were about to do. Their meandering, unhurried actions began to drive Kyle crazy, allowing his anticipation to grow at a relentless pace.\n\nKyle had been awake for just a matter of minutes and already had concerns about revealing his morning wood. Now he couldn't stop thinking about the three of them walking down to the water's edge and getting naked together. He would be able to see both girls without any clothes on. As exciting as that was, he was also preoccupied with the thought of them seeing his penis. The horror of imagining that he might become erect in front of them began gnawing at his mind.\n\n\"Okay, let's go!\" Tessa said enthusiastically. She unzipped the tent flap and stepped outside into the morning sunlight. Jordyn followed her. When she reached the exit, she glanced back at Kyle who looked white as a ghost.\n\n\"Come!\" she said happily, extending her hand. Kyle took it and followed her out. A cool breeze flowed over them which contrasted with the warm sun.\n\n\"It's gonna be coooold,\" Tessa said, gritting her teeth.\n\nJordyn laughed loudly. \"I know!\"\n\nKyle zipped up the tent and then followed them off through the grass and then through the trees. After just moments, he already felt exhausted, like he had run a marathon, but only because his heart thumped wildly in his chest. After several minutes of crunching over twigs and stepping carefully over mud-soaked patches of moss, Kyle began to see bits of blue-gray shimmering in between branches and knew that the lake was nearing.\n\nThey zig-zagged through the trees as voices began to sound in the distance. There was an occasional splash. Laughter.\n\n\"Here, let's find a spot for ourselves over there,\" said Jordyn, pointing off to the left and leading the way. They began to turn and navigate through the woods, becoming closer and closer to the shoreline of the lake. Then Kyle saw something that made his heart stop. There, through the trees, he caught sight of a pair of naked female breasts. They were visible only for an instant, obscured by the staggered oaks, but he was sure he had seen them. A mixture of fright and excitement swelled up inside him and formed knots in his stomach.\n\nAll of a sudden, he found himself standing by a strip of sandy shore where the reeds had been cleared away. The water was glassy, smooth, and shallow. He could see the bottom of the lake, crystal clear, obscured now and then by sparkling light.\n\n\"This is a good spot,\" Tessa said with resounding approval.\n\nKyle stood there, frozen, terrified, staring at Tessa and Jordyn as they set the bag on a rock and began to unzip it. A queasy feeling began to flood his body.\n\n\"Yup,\" Jordyn said. She turned and looked at Kyle over her shoulder. \"Is this okay?\"\n\nKyle nodded quickly at her. She smiled and then turned back around. They pulled out all three towels and placed them, folded, on the rock, then withdrew the bottle of biodegradable soap and set it down.\n\nTessa went to grasp for the buttons on her faded denim shorts but stopped short and paused when she saw Jordyn studying Kyle's expression.\n\n\"Just leave your clothes on the rock. Don't worry, no one will steal 'em!\" she said, trying to lighten the mood for him. He knew that she could plainly see how nervous he was but he hated the fact that she was so aware. He nodded. \"... You okay?\" she added.\n\n\"Yeah,\" he said. However, inside, he was coming apart.\n\n\"Okay, cool,\" she said.\n\nTessa smirked and resumed fumbling with her buttons. As Kyle watched Jordyn do the same, he began to follow suit as well. He felt faintly dizzy as he watched the girls shimmy their shorts down to their feet and step out of them. The tugging motion loosened both their panties, drawing them down far enough to begin to expose their cracks. As they stepped forward to set their shorts on the rock, he watched their cheeks loosely wobbling within the thin fabric that covered their round behinds.\n\nKyle frantically tried to suppress his growing excitement and arousal, desperate to avoid an embarrassing moment. He quickly tugged his shorts down and rushed over to place them on the rock, then made his way back to where he had been standing, not too close to the girls. Jordyn seemed to briefly glance at him, keen to check on his state with a curious expression. Then she turned and briefly made eyes at Tessa, who silently acknowledged that it was okay to continue.\n\nTessa was the first to act. She grasped the base of her t-shirt and pulled it straight upward, clearing her chest and taking it high into the air above her head. Two large, round breasts plopped out and bounced in place as Kyle stared at her in amazement. They were beautiful; plump, with a playful movement, and two wide, pink nipples. As she lowered her arms with a balled-up t-shirt in her fist, Tessa flashed a look in Kyle's direction. She narrowed her eyes curiously at him as if briefly confirming that he had seen her boobs, and then threw her shirt on the pile of clothes with a slight smile.\n\nBefore he could collect himself, Jordyn took hold of her own t-shirt and smoothly drew it up her body and over her head. Kyle watched as Jordyn's perfect, sloping breasts bounced free and settled into place in front of her chest. He gazed at them in profile, being gently warmed by the sun, her crimson nipples taut and tickled by the passing breeze. They danced briefly as her breasts gave a slight wobble, jostling about in response to her soaring arms.\n\nAs Jordyn's hands floating down to the side of her body, she turned and gave Kyle a curious look, just as Tessa had done. They both seemed to be observing him, adding pressure to his already anxious state. He quickly looked at the ground in front of him and then tugged his own shirt off. He felt the cool breeze flow across his bare chest and then looked up to catch sight of Jordyn looking back over at Tessa.\n\nThe two girls stood there in the bright sunlight, each of them wearing only a pair of panties, their beautiful boobs jutting out sharply from their bare chests. As if anxious to get on with it, Tessa tucked her thumbs into the waistband of her underwear and shot them down to her feet. Kyle gawked as she bent in half, letting her breasts dangle heavily beneath her chest, warping into a different shape as she recovered the last bit of clothing she had to remove. She casually stood back up, as if wanting to show off her lack of concern about being naked, and turned slightly, allowing Kyle to see her body completely and fully exposed.\n\nTessa had a curly mound of dark brown hair nestled between her legs, ungroomed but not too thick. It was much darker than the hair on her head but the sunlight shone through and illuminated her delicate labia. Out of the corner of his eye, Kyle saw Jordyn tug down her own panties. He shot a look over at her body and caught sight of her bare, pale bottom becoming exposed and exhibiting another gentle wobble. She stepped out of her underwear, took a breath, and turned to face Kyle.\n\nHe found himself gazing at Jordyn's naked body; her pronounced breasts, her excited, ruddy nipples, the dark patch of fur between her legs, about the same thickness as Tessa's pubic hair, with two luscious, swollen lips peeking through, offering a heart-stopping view of the entrance to her vagina. Even the hidden tattoo on her arm was revealed in all its humorous glory; a naked, surprised Tinkerbell with two petite breasts straddling the stem of a sunflower.\n\nKyle's whole body buzzed with an electric thrill he so rarely had a chance to feel with girls, having only had a couple of partners to have been awkwardly intimate with. Most of the time, he felt these sensations while sitting in front of his computer, with his boxers tugged down and his bedroom door securely locked, watching videos on a low volume which the voices of his roommates triggered his anxieties from the other room. And yet here he stood, with not one but two girls, with no clothes on whatsoever, letting him examine at their big boobs and hairy, naked pussies.\n\nThe girls watched him expectantly. He felt his knees buckling slightly, standing there with only a pair of boxers on and a gently swelling penis forming a slightly wobbling bulge. Despite his incredible insecurity, he knew that the longer he delayed the more he would project his lack of confidence in front of them. Deeply conscious of their focused attention, he held the waistband of his boxers with two trembling hands and prepared to do something he never imagined having to do that weekend.\n\nKyle took a deep breath and bent in half, slowly dragging his underwear down over his legs. He pulled them off completely and stood back up. Kyle felt his chest heaving in and out as he searched the faces of the girls standing before him. Their eyes were darting all over his body, quietly taking in the sight of his shoulders, biceps, chest, his muscular thighs, and his long, dangling penis that hung down between his legs in front of a plump pair of testicles.\n\nThey seemed briefly lost with a sense of wonder, before snapping out of it and returning a glance to his face with a pair of smiles. He dwelled on that moment of intense curiosity they seemed to possess. He imagined, for a moment, that they might have actually been looking forward to this moment. Maybe even falling asleep the night before with a tremor of excitement, expecting that the morning would soon come and they would find themselves in precisely this situation, knowing that he would show them what his penis looked like.\n\nA sudden sense of intense relief flooded Kyle's body, carried through his blood with a surge of endorphins. He stood there briefly overwhelmed by the sight of two completely naked female bodies, mesmerized by the sight of their large breasts and fuzzy pubic mounds as they seemed equally aware of his exposed genitals. He felt dizzy. Kyle could feel himself trembling with nervous excitement. He felt vulnerable, horny, and disoriented.\n\n\"Ready?!\" Tessa exclaimed.\n\n\"Yeah!\" Jordyn replied as if both responding to Tessa and expressing the thrill of seeing Kyle overcome his fear and shed his clothing with her.\n\nTessa turned and charged for the water with Jordyn in tow. Kyle's senses were overwhelmed by the sudden sight of wildly bouncing boobs and wiggling bottoms as they crashed into the shallows and kicked up frothy sheets of water. He ran after them, desperate for the cool water to soothe his growing arousal and perhaps give him the means to hide his body while he adjusted to the sensation of public nudity.\n\nAs he followed them out into the lake a short way, he quickly realized that the water would reach no higher than just above their knees and would offer him little actual coverage to sort through his feelings. Both Jordyn and Tessa seemed to be preoccupied with the sensation of the cold water splashing over their bodies. They shrieked and laughed and splashed water at each other by kicking their feet.\n\nKyle laughed at their excited animation, devouring the sight of their bodies, his head swirling with the image of swinging boobs and the occasional flash of pink flesh peeking through small masses of dark pubic hair. Jordyn was the first to brave the cold temperate of the water, quickly submerging herself as much as possible in the shallow water, and then rising back up to brush the long wet hair out of her eyes and then slick it down her back.\n\n\"Oh my goood, it's fucking freezing!\" she shouted, drawing laughter from both Tessa and Kyle. Jordyn opened her squinting eyes and aimed them squarely at Kyle, excited to see him laughing and enjoying himself. He threw himself into the water with a loud splash and then came up laughing to see Tessa doing the same. Soon, all three were soaked, shivering, and laughing with shared merriment.\n\nKyle looked out along the shoreline beyond Jordyn and Tessa and discovered that in the short time they'd been there, many other festival-goers had found their own spots to wash and get clean. In the distance, from his vantage point, Kyle watched small clusters of naked bodies gathering in the shallow waters just like they had. Though too far away to assess any details, he was amazed at the stark masses of dark, bushy pubic hair contrasting with pasty feminine figures. There was a wide diversity of bodies; pale ones, dark ones, with hanging breasts and dangling penises. An animated assortment of girls and guys standing naked together, disturbing the mirror-like surface of the lake, frolicking and laughing at the water's edge and gazing down at the shocking, wavering reflections of their own stark nudity.",
        "Kyle returned his attention to Jordyn as she emerged from another dunk in the cold water. Her body was glistening and covered with thousands of tiny, raised goosebumps. Her breasts had firmed up and were trembling slightly as she shivered. Jordyn seemed aware that he was watching as she grasped for the long coils of hair behind her head and twisted them together, wringing out the water which ran in rivulets between her boobs as she draped her dark locks over her shoulder.\n\nTessa stepped forward and reached for the bottle of soap which had been left bobbing amongst them in the water. Kyle watched her squirt a large dollop of soap into her palm and then hand the bottle to Jordyn. She did the same and passed it on to him. He squirted some into his hand, snapped the bottle shut, and then set it back down in the water.\n\nAs Kyle began to lather the soap between his palms, he watched in amazement as Jordyn and Tessa stood there preparing to soap their bodies. Their boobs were shiny and wet, the bushes between their legs covered in a fine mist of water droplets. Excitedly, they began to rub their palms in circles all over themselves; over their stomachs, down their thighs, and along their arms. Then they began to cup and softly squeeze their breasts, massaging the soap into their spongy flesh with a circular motion while hopping about in response to the chill of the air.\n\nKyle followed suit and lathered his body up until it was covered in a white film just as theirs were. Jordyn and Tessa took occasional looks at him, as well as at each other, exhibiting a sense of camaraderie and shared excitement about getting clean together. Tessa refreshed the supply of soap in her hands, forming two mounds of bubbles, and then lunged forward with her hands out. She stuck two spheres of white foam at the tip of Jordyn's breasts, like dollops of whipped cream, and then stepped back in a fit of giggles.\n\nJordyn looked down and began laughing at the domes of soap slowly sliding down over her excited nipples. Kyle laughed along with them and became excited by their playfulness. However, it soon became a cause for alarm as their interactions teased at his emotions and the sensations of arousal growing in his body. Again, he became increasingly worried about the risk of developing an erection.\n\nAfter a few minutes of goofing off, Tessa reached down and took a slight squat. She stuck her fingers between her legs and brushed them through her pubic hair, then began rubbing back and forth, generating a thick white lather. Jordyn glanced briefly to the side in Kyle's direction and then nervously reached between her own legs to do the same.\n\nKyle stopped washing his body for a moment, startled by the sight of the two girls facing each other and vigorously washing their pussies together. A powerful excitement rushed through his body as he observed them studying each other curiously, their eyes affixed to each other's soapy genitals. Suddenly, intense arousal struck. It came upon him so fast that he was unable to stop its advance.\n\nWithin an instant, Kyle was mortified by the sensation of his penis beginning to thicken and grow between his legs. Fortunately, the girls had not seen and he spun around just in time before it began to twitch wildly and rise into the air one tick at a time as the blood pumped through his body and rushed to that tingling area between his legs. He quickly threw his hands over himself and stood there trying to regain control.\n\nHe heard a voice behind him. It was Jordyn. \"Are you okay?\"\n\n\"Yeah... sorry... um...\" he mumbled.\n\nKyle saw movement out of the corner of his eye. Tessa had walked forward a short distance and their eyes met as she looked down and saw that he was covering himself. She smiled and walked back over to Jordyn.\n\n\"He just got a boner,\" he could hear her whispering to Jordyn.\n\nKyle's heart sank.\n\n\"Oh!\" Jordyn exclaimed behind him. \"Kyle, it's okay. You don't have to be embarrassed,\" she reassured him. Kyle continued to grasp at his penis which continued to stiffen in his hands and pushed painfully against the useless cage of his fingers. \"It's not like we haven't seen one before.\"\n\n\"Um... sorry... this is really embarrassing,\" he said, having barely processed what she said.\n\n\"Whatever, you don't have to hide it or anything,\" Jordyn repeated.\n\n\"Um... are you sure?\" he said with surprise, daring to give a sheepish look over his shoulder. Both Jordyn and Tessa were standing there with soft, curious expressions. He had expected them to be laughing at him but they weren't. Instead, they both seemed to be quieted by the event and a little tense with anticipation. Both girls nodded at him.\n\n\"O-kay...\" he said, hesitantly letting his hands drop. He felt his thick, hard cock spring upward and bounce in front of his body. He couldn't believe he was about to turn around in that state and allow him to see him fully erect.\n\nKyle could feel himself turning flush as he slowly turned around. His massive, swinging erection wavered back and forth as he shuffled around to face them. Their eyes immediately dropped down to his pelvic region. For several moments, the girls quietly examined his state of arousal, their eyes moving along the hard shaft of his penis as it stuck outward from his body as if reaching toward their bodies and aching for their attention. They studied the tight, round sack beneath his shaft which hugged his body due to a mixture of arousal and the chill of the air. Their eyes traveled to his tip where his thick, ridged cockhead bulged and twitched.\n\nThey seemed to be just as curious about his massively erect penis as he was about the sight of their bodies, lingering on his manhood for a few moments longer as they gradually began to resume washing their bodies. Kyle felt a sudden dose of confidence in the way they seemed to be admiring his body, almost becoming privately aroused themselves. He continued to wash himself thoroughly, avoiding any contact with his penis for fear of seeming eager to touch himself in front of them.\n\nEventually, Jordyn stepped forward to hand him back the bottle of soap. Her eyes briefly darted down to his cock and back up again. She seemed mildly flustered.\n\n\"Um...\" she said quietly as if unsure how to say what she wanted to say. \"Just don't forget to wash your penis,\" she added in a low voice, holding the bottle out. Surprised that she'd noticed his awkward avoidance of that area, he took it from her hand.\n\n\"Yeah, trust me-- you don't want to spend three days sleeping in a tent with the rank smell of unwashed genitals!\" Tessa snickered before wrinkling her nose.\n\nJordyn burst out laughing. \"Ha-ha, I wasn't going to go there, but yeah...\"\n\nKyle felt one more wave of embarrassment wash through his mind. He quickly replenished his supply of soap and then slowly reached down. The girls tried to hide their curiosity but as they carried on with rinsing they took casual looks in his direction. Kyle continued to feel embarrassed as he began to soap his swollen cock, only calling further attention to how massive and throbbing it had become. He felt strange, giving himself long, quick strokes along the length of his hard shaft, slick with a soapy film.\n\nHowever, it also felt incredible. The sensation of stroking his penis in front of them and having an innocent means to justify it made his mind burn with a potent sexual agitation. For a moment, he imagined that it felt the way it would feel if they returned to their tent together, still naked and curious, anxious to continue their exploration of each other's bodies, asking him to see what it would feel like if he slipped it inside their bodies. One and then the other. Warm, wet, and slippery.\n\nWhen he finished, he quickly rinsed himself off with water as they had done.\n\n\"Race you both back!\" Tessa shouted as she turned and launched toward the shore.\n\nJordyn squealed and bolted after her. Having been caught off guard, Kyle darted off behind them, aware that there was no way he could catch up. Their bare legs crashed through the water, kicking up a torrent of noisy splashes. Kyle almost made up the gap between them.\n\nTheir two naked bodies raced excitedly toward the sandy half-moon where they had left their things; a pair of peachy, wobbling bums and the occasional appearance of a boob swinging widely out to the side. Kyle found himself laughing at the sensation of freedom for the first time, no longer having any reason to be ashamed of his erection. His thick shaft swung wildly back and forth in front of his body as he ran through the water, slinging droplets of water from his bulbous cockhead.\n\n\"I win!\" Tessa laughed as she stepped foot on the damp sand. Jordyn arrived a moment later, laughing. She smacked Tessa on the butt, making it wiggle and instantly turn red. Kyle arrived, laughing as well.\n\nJordyn quickly handed out towels and then all began wiping their bodies down. Kyle took one last look at their boobs as they patted them dry, and then between their legs as they quickly dragged the soft cotton panties over their hairy crotches. Then, as the cool breeze and the warm sun began to finish the drying process, they each slid the rest of their clothes back on and finished getting dressed together. It was not lost on Kyle that neither of the girls bothered to put their bras back on, now embracing the sensation of the soft fabric of their t-shirts drawn down over their bare chests.\n\nWalking back, the events that had just occurred played over and over in Kyle's mind. For him, it had been a momentous achievement. He felt like his whole life had somehow just changed. That first taste of naked freedom still echoed inside him, surging with a thrilling power. And yet he marveled at how the girls seemed to return to their idle chatter, demonstrating the fact that they had done this before and knew how to contain their titillation inside.\n\nBut he knew it was there. He had seen it, even if for a moment, and wondered if he'd see its return.\n\n***\n\nBy the time Kyle and his friends set up their blanket on the grass for the day ahead, it was clear that the summer festival was now in full swing. The bands were eclectic and folksy, each performing upbeat acoustic sets. Festival-goers everywhere were dressed in strange costumes or had their faces painted. Everyone seemed to have a drink to share or a joint to pass. Kyle found himself easily swept up in the excitement and unpredictability of it all.\n\nAside from the rotating musical performers on stage, an entire tent city had sprung up offering all kinds of activities and having a perspective to offer on a range of topics. There was a tent for finger painting and one for impromptu spoken word. Some offered opportunities to immerse oneself in spirituality and meditation. Still others were more mundane, like a free clinic for medical treatment which somehow already featured a dazed young man holding a bag of ice to his forehead.\n\nKyle, Jordyn, and Tessa wandered from tent to tent, exploring the offerings. This included a free store for giving away basic necessities to anyone who failed to bring something essential. Objects such as tissues, pots, and tampons were laid out on tables as if it were some kind of bizarre yard sale. Free condoms and legalize pot signs were everywhere. Glitter and body paint transformed everything and everyone.\n\nPeriodically, they took a break from the activities, returning to their blanket to relax in the sun and listen to the music. Kyle enjoyed the moment that Jordyn rested her head in his lap. Of course, she had done the same thing to Tessa, earlier. Tessa had stroked her hair lovingly as the two watched a banjo player plucking out a humorous bluegrass rendition of a Beyonc\u00e9 song. Kyle wanted to offer Jordyn the intimacy that Tessa offered her but couldn't work up the courage to run his hands through her long dark locks.\n\nFeeling anxious by the closeness of Jordyn's body, he distracted himself with a reassessment of the activities going on around him. In the distance, he noticed a man in overalls and two women riding up to the edge of the forest on dirt bikes. They stopped and looked around with expressions of bewilderment. It seemed obvious that they lived in the Catskills and had no idea that such a festival was in town. The girls looked enthusiastic, however.\n\nKyle watched the man flag down a stranger passing by. He appeared to ask what was going on. The stranger gave an explanation that seemed to delight them, waving them forward as if to say they were welcome to join in the festivities. Kyle found it humorous that locals might just stumble upon their wild hippie shenanigans deep in the forest, having no idea what was going on.\n\nTurning his attention back to Jordyn, Kyle began to look at her in a whole new light. She wasn't the girl he drove up with, any longer. She wasn't the coworker that he crushed on from afar. Not the one he secretly fantasized about having an intimate experience with. No-- she was the girl he saw completely naked. The one he actually witnessed soaping her pussy, right in front of him. The girl he slept next to in a tent at night, in her t-shirt and panties, the warm glow of her fascinating and fragrant body right by his side.\n\nHe felt suddenly closer to her. He dwelled on how vulnerable he had made himself in front of her. How vulnerable she had allowed herself to be, trusting him to see the most intimate parts of her body, being comfortable with his display of arousal, even giving off a sense of deep curiosity about it.\n\nIn such a short period of time, the weekend somehow already felt like the most exciting and transformative time of his life.\n\nThey continued to relax on the wide blanket that Jordyn had laid out for the three of them, surrounded by a vast matrix of sociable strangers and a cacophony of cheerful voices. The breeze was scented with the telltale presence of marijuana. Kyle enjoyed the soft compression of the grass beneath his body, the warm embrace of the sun, and the calming melodies emanating from the stage.\n\nEventually, Tessa spoke up as nature inevitably called.\n\n\"Okay, I really have to go pee,\" she said, casting a dismal look at the long lines by a distant row of green mobile toilets. She turned to Jordyn and added, \"There's no way I'm waiting in that line, I'll find a spot in the woods. Come with?\"\n\n\"Okay, I have to go too,\" Jordyn replied, rolling lazily onto her side and preparing to hoist herself up to her feet.\n\n\"Why do they even have those things here, if they're supposed to not have any modern devices?\" Kyle asked, staring at the toilets.\n\nTessa laughed. \"Yeah, because it would be sooo wise to have hundreds of people just constantly peeing in the woods around us... like we're about to do.\" Kyle chuckled as he realized how ridiculous his question was. \"Granted, I peed a little bit in the lake this morning... but not near you guys.\"\n\n\"Ha-ha, gross!\" exclaimed Jordyn, rising to her feet. She looked down at Kyle, noticing that he hadn't budged. \"Wanna come?\" she asked.\n\n\"Oh, sure,\" he said, scrambling to his feet. He was still unclear when it was okay for him to be included in something like that, though after the experience that morning he reminded himself that he shouldn't be surprised.\n\nThe three of them wandered off into the woods, making idle chit-chat about the various goings-on at the festival and the assortment of characters sitting near their blanket. As the sound of voices and music began to grow distant, Tessa stopped abruptly and scanned the area.\n\n\"Okay, I could pee here,\" she said matter-of-factly.\n\n\"Ha! Yeah, this is totally a pee spot,\" Jordyn added, pausing next to her.\n\nKyle had been trying to determine whether he should turn around and let them do their thing or if they wouldn't care if he witnessed. However, they didn't bother to give him a chance to decide. Tessa and Jordyn immediately yanked down their shorts and panties in one quick motion, briefly flashing their pubes, and then squatted down until they hovered a few inches above the ground.\n\nKyle tried not to take obvious looks at their bodies but he was mesmerized at how they were able to perform such a private task in front of each other, not to mention in front of him. He'd never seen a girl urinating before. It seemed so strange and alien to him. He found himself sneaking a peek at Jordyn's vulva as her muscles seemed to engage and tighten, forcing her labia to bulge outward slightly. Her lips parted suddenly and a forceful jet of liquid began to squirt from her body. The stream twisted, hitting the ground with a hiss as it dug a few centimeters into the soil before bubbling to the surface and meandering away from her body in a tiny stream.\n\nHe glanced over at Tessa and found her doing the same, tensing her body and looking down between her legs as she applied pressure with apparent satisfaction and relief, squirting downward with equal intensity.\n\n\"Oh, look out!\" Jordyn shouted.\n\nTessa laughed as Kyle leaped out of the way, so deeply lost in a trance that he didn't realize her little river was running straight for him. Jordyn began to laugh softly and covered her face in embarrassment. Kyle found it funny that she only seemed to become embarrassed at that moment, as opposed to feeling that way about going in front of him in the first place. He couldn't imagine ever doing that in front of them, even though watching them go made him realize how much he had to go himself.\n\n\"Sorry...\" Jordyn was saying.\n\n\"That's okay!\" he said with a grin as the two of them squeezed out the last few drops and finished up. Kyle caught the brief scent of their efforts waft past his nose with a strange tang. They stood back up and quickly pulled their clothes back up.\n\n\"Do you have to go, too?\" Jordyn said, pausing for him out of courtesy. \"We'll wait.\"\n\n\"Ha-ha, yeah, that's a peeing tree if I ever saw one,\" Tessa said, pointing to an oak beside them which had a large, protruding hole where a thick branch had once grown. Indeed, it looked almost like a natural urinal.\n\nKyle grew immediately anxious. He was already a little pee-shy, and that wasn't even around girls. For a moment, he had a brief vision of himself standing there, holding his penis out in front of them, urinating against a tree. It filled him with such an awkward feeling of insecurity and fear that he chickened out, even though he had to go.\n\n\"Um, no, it's okay,\" he mumbled. \"I don't have to go yet.\"\n\n\"Okay,\" said Tessa, turning to lead the way back. He followed behind them. However, he began to panic, realizing that he'd now have to hold it all day and who knew when he might get to go again.\n\nThe festival music grew louder as he waffled back and forth on the matter. Realizing that it was now or never, he knew he'd have to make a decision fast. Kyle quickly ducked behind a tree where he could not be seen and undid the button of his shorts.\n\n\"Be right there!\" he shouted ahead to the girls. \"I changed my mind. I'll try to go.\"\n\nJordyn turned and seemed mildly surprised as he hid behind the tree. \"Okay!\" she yelled back. The girls hung around and waited for him until he finished and hurried to catch up, feeling relieved.\n\nAs they passed through the edge of the forest and walked out into the meadow where everyone was gathered in front of the stage, Kyle reflected on what he had just seen; how strange and shockingly intimate it was. He felt frustrated with himself that he wasn't as bold as they were when it came to things like that.\n\nThis experience, and then one earlier that morning, made him yearn for a change. He wanted to feel comfortable. He wanted to share moments like that casually with them, without fear or shame.\n\n***\n\nThat night, Kyle found himself again enjoying the cool air that filtered through the tent material, the shrill echo of crickets all through the woods, and the warm glow of nearby bonfires shining through the flimsy walls surrounding him.",
        "A long time passed as he tried to sleep but he couldn't stop thinking about the momentous thing that had happened that morning when he found himself confronted by two beautiful naked bodies and sharing his own with the girls. He felt a strange sort of vulnerability and closeness to them, all of a sudden, which twisted him all up inside emotionally.\n\nThen, he heard something that made his heart skip a beat. The soft smacking of lips and rustling of sheets. His eyes were shut but he squeezed them tighter still. The sounds became a little louder and consistent. Hands were moving to unknown locations, sliding back and forth, perhaps over fabric or under clothing. He could hear heavy breathing, someone's gentle sighing.\n\nIt was obvious that Jordyn and Tessa were making out but this realization struck him like lightning. On the one hand, it was exciting to hear two girls becoming intimate. On the other hand, he felt somehow left out, longing for the closeness he felt that morning and aching for it to take the form of intimacy.\n\nOne of the girls let a quiet, \"Mmm\" slip. He felt movement. It sounded like one body curling up alongside another. He wondered if they were touching each other's breasts, or perhaps even elsewhere. -- And right next to him!\n\nAfter a few minutes of soft, tender movement, all went quiet. Kyle's heart was racing. He couldn't sleep now. Would there be more? Was anything going to happen? Did they know he was awake and that he could hear?\n\nThe questions cycled through his mind to the point of exhaustion until he fell asleep pondering them feverishly, having sunk into a haze of confusion over Jordyn's feelings toward him. Sleep weighed heavy on his eyes, but heavier still on his heart, having spent all day fantasizing about being naked with her, wondering if that might evolve into something more, only now... what?\n\n***\n\nThe following morning couldn't have come soon enough.\n\nThe confusion Kyle felt the previous night while falling asleep had long since faded. All that he could think of was the inevitable trip to the lake to bathe, just like they had done the morning before. For the past twenty-four hours, he had been haunted by what he had seen. Every time Kyle closed his eyes, all he could picture was the stirring image of Jordyn and Tessa stripping off their clothes and racing into the water together, naked and excited, unashamed of their jiggly or hairy bits.\n\n\"Ready?!\" Jordyn exclaimed in her typically upbeat manner.\n\n\"Let's do it!\" Kyle said, responding to her prompt for a high five. He knew that deep down she understood how jarring it had been for him to go through that experience and she seemed to be full of pride for what he had done. He wondered if she recognized in him what it was like for her to go naked in public for the first time. He wondered if maybe it was exciting for her to see him embrace it because she wanted to share that intimacy and vulnerability with him.\n\nKyle's heart raced as they hurried down the long winding trail to the lake. With great anticipation, he watched their breasts wobbling about inside their t-shirts, knowing that they'd soon make their appearance, bouncing free in the cool morning air. When they reached their spot, all Kyle's memories and anxieties came racing back. He thought about how embarrassed he had felt undressing in front of them, how much he had stalled, how he felt when he first caught sight of their naked bodies and private parts. Only now he forced himself to push them aside. The hesitation between the three of them from the day before was gone.\n\nMoments after they arrived, clothes began to come off and get tossed into a shared pile on the large rock by the water's edge. Kyle didn't cower off to the side as he had previously done. He stood right by Jordyn as she yanked off her t-shirt and proudly extended her bare chest forward. Kyle pulled off his shirt and threw it atop hers. Excitedly, they continued to undress, each of them pulling down their shorts and then reaching for their underwear. The same thrill gripped Kyle as he watched Tessa tug down her panties and expose her soft muff, followed by Jordyn, as he tugged his boxers down and let his penis spring free.\n\nJordyn hissed and threw her arms around her own body. They crossed in front of her chest and squeezed against her breasts, forcing them to bulge outward at the sides. \"Ugh, it's so chilly first thing in the morning!\"\n\n\"It'll warm up soon,\" said Tessa, moving up behind her. Tessa rubbed her hands briskly up and down Jordyn's arms to warm her body with skin-on-skin friction.\n\n\"Mmm...\" Jordyn moaned. \"That feels better.\" She dropped her arms to the side and fell into a relaxed position. Kyle felt himself start to tingle as the quick motion of Tessa's strokes caused Jordyn's breasts to wag back and forth. Her nipples were dramatically raised, indicating the sensation of the cool air against her warm body.\n\nTessa laughed. \"You're all covered in goosebumps!\"\n\nJordyn looked down at her boobs and chuckled. \"I know, look at my nips!\" she said, briefly glancing at Kyle. She poked gently at her firmly erect nipples and observed the tiny bumps surrounding her areolas. Kyle was surprised that she was doing that right in front of him. He wondered if she was trying to tease him.\n\n\"Oop, someone's waking up...\" Tessa snickered. Both girls started laughing and glancing down at Kyle. It took him a moment to register that they were talking about him, but sure enough, he realized that while not yet erect he had visibly thickened and inadvertently revealed his mild arousal.\n\nBefore Kyle had a chance to respond, Jordyn shouted, \"Okay, here goes nothing!\" She darted out of Tessa's embrace and headed straight into the water, causing a crashing sound, following by a shriek. Kyle and Tessa ran after her, charging over the sand with bravery that extinguished itself the moment their feet struck the chilly water.\n\nAfter a few moments of shock, they began to adjust to the temperature and waded out to the same spot they had the day before. In the distance, Kyle saw a young man and women making their way down to the water. The couple spotted Kyle, Jordyn, and Tessa in the water and paused for a moment. They smiled nervously to one another, exchanged some words, and then nodded hesitantly. Kyle wondered if this was the first time they were seeing each other naked as he watched the couple begin to undress, taking peeks at each other and failing to suppress laughter as body parts were revealed and innocence was lost. She curiously acknowledged his limber shaft. He quietly eyed the thick black bush sprouting between her legs.\n\nThe man reached for his partner's hand. Squeezing his hand tightly, they advanced toward the water, keeping to themselves but taking curious looks at the bold display of nudity that Kyle and his friends demonstrated. The girl's large, weighty breasts swung like pendulums as her toes hit the water and she reacted with surprise. Her friend rubbed her back and seemed to encourage her to move forward. She did, staring at the icy water like it was the enemy.\n\nSuddenly Kyle felt like he was on the other side; someone who had been naked in the wilderness before and could show others the way. The very idea of being able to shrug off any nervousness and embrace nudity excited him, even if it wasn't entirely true yet.\n\n\"Have you not gone under yet??\" Jordyn laughed. She and Tessa had just braved a dip, squatting down to lower themselves into the shallow water and grimacing as they splashed their bodies.\n\n\"Not yet...\" Kyle replied, gritting his teeth.\n\n\"Hmm...\" said Jordyn, a wry grin forming on her face. She turned to look at Tessa who returned a smile. \"Should we?\" Jordyn added, on the verge of more laughter.\n\n\"I mean... obviously,\" Tessa replied without hesitation.\n\nThe two girls grinned and then turned to face Kyle. \"What....?\" he said, taking a step back cautiously. They began advancing toward him, moving through the water with determination and an impish glow. \"Wait... hang on...\" he mumbled, realizing what they had in mind. \"Please don't!\"\n\nAll of a sudden, Tessa lunged and grabbed Kyle's arm, pegging him as a flight risk. As she anchored Kyle to the ground, Jordyn circled behind him and grabbed his shoulders, pressing him downward. Kyle laughed and struggled, desperately trying to prevent her from dunking him in the cold water.\n\nThen, unexpectedly, everything between them changed. Kyle had spent the past day admiring Jordyn from afar, relishing the sight of her body with a distant wonder, unsure if their friendship would ever cross any boundaries or if he would be left to suffer in that state of remote titillation. But no, indeed their bond of trust and closeness had formed enough for her to take a leap-- both figuratively and literally.\n\nJordyn threw one leg around Kyle in a frantic attempt to subdue him. Then she leaped on top of him, throwing her arms around his neck and wrapping her legs around his waist. In an instant, Kyle felt the soft compression of two wet boobs as they squished into his back. Her nipples were hard and pressed firmly into his skin. As she clung to his body, her pubic mound opened wide against his butt. Kyle felt a soft, wet mass of pubic hair rubbing against his body and then the silky inner flesh of her widespread pussy as they struggled together.\n\nKyle felt his mind shatter. A storm of excitement rose up through his body and rendered him weak, making him easy prey for the girls' sinister plan. Before he could even finish processing what was happening, his cock sprung to life, throbbing instantly and reaching for the sky. It waved back and forth in front of his body as he stumbled forward with Jordyn riding his back. Tessa laughed with delight and watched the two of them come crashing down into the water with a loud splash.\n\nThey both scrambled to their feet frantically. Jordyn wiped the hair out of her eyes. Her jaw hung open from temperature shock. She threw her arms back around her body and repeated the same motion that Tessa had performed earlier in an effort to warm her back up. Kyle rose back to his feet, aware of the presence of his massive erection but too shocked and frozen to care.\n\nJordyn recovered and joined Tessa in a fit of laughter.\n\n\"You look so miserable!\" Jordyn exclaimed with a touch of schadenfreude.\n\n\"He looks like a drowned rat,\" remarked Tessa before looking down between his legs. \"Except with a huge boner.\"\n\n\"Um... sorry...\" Kyle mumbled, observing that they both were amused at the sight of his arousal. He felt the embarrassment from the day before surging back again. However, he was also still reeling from the sensation of Jordyn's body on his. The soft squish of her breasts was only just fading. The wet rubbing sensation of her pussy against his butt still fueled his intense throbbing.\n\n\"At least you're not cowering in fear and hiding it like you were yesterday,\" Tessa snickered.\n\n\"Yeah, you'd better get used to it or else you're gonna have a hard time today... No pun intended,\" Jordyn added.\n\n\"Huh?\" Kyle said.\n\n\"Today is day three,\" Tessa explained as she took her first squirt of soap. \"Pretty much everyone gets naked for the last day of the festival.\"\n\n\"What?\" Kyle said, visibly startled. Jordyn watched him with keen interest.\n\n\"Yeah, after breakfast everyone will go to the stage where they'll throw one big party. Everyone just gets naked and free and enjoys nature together.\"\n\n\"And sometimes each other!\" Jordyn laughed.\n\n\"Yeah! It's so much fun-- and really freeing,\" Tessa added.\n\nKyle's mind began racing with bewildering thoughts. He was only just beginning to get adjusted to nudity -- and that was limited in scope to just Tessa and Jordyn, as well as a couple of strangers. His mind exploded with images of widespread nudity. He imagined naked girls dancing around him, men strutting about sporting huge erections, massive orgies on all the picnic blankets. He began to cool his frantic thoughts as he focused on washing his chest and arms.\n\n\"It's so funny how you're both so comfortable just being naked...\" Kyle said, still reflecting on his stop-and-go progress toward a state of comfort.\n\nJordyn perked up. \"Well, Tessa's actually from a nudist family.\"\n\n\"You are?\" Kyle replied with surprise.\n\n\"Yeah, my parents are nudies from way back,\" said Tessa with a casual shrug. \"Rochester has a lot of nudists. My dad is first-generation Finnish-American so he grew up that way.\"\n\n\"Tell him about that club,\" Jordyn said excitedly.\n\n\"Oh, well, my family has always gone to this private nudist club on the weekends, mostly during the warmer months. It's basically like a big campground with a lake and volleyball and hiking and stuff, just like any other, except that nobody wears any clothes,\" Tessa added.\n\n\"Wow...\" said Kyle. He knew such places existed but had never met anyone who went to them. \"Isn't it weird... like... being naked in front of your family?\"\n\nTessa shrugged again. \"My parents are cool about it. They raised us that way, so my sister and I just grew up being used to it.\"\n\n\"Oh my god, your sister is so cute!\" Jordyn said. \"She's totally going to have zero shame or issues about her body when she's older...\" she sighed. Tessa laughed. \"Actually, I barely remember even seeing your sister with clothes on.\"\n\n\"You've been there? Have you been to the nudist club?\" Kyle asked, his eyes growing wider.\n\n\"Yeah, I went there once but mostly I've just hung out at Tessa's parents' house,\" Jordyn replied.\n\n\"... naked?\"\n\n\"Yup. Her family is so cool. Like, nobody even really cares. One night we all got naked and her dad took us into the sauna together and we just hung out with him. It's just, like, part of their culture.\"\n\n\"That's cool.\"\n\n\"Totally!\"\n\n\"Man, I can't imagine ever doing that with my mom and dad...\" Kyle muttered.\n\n\"It's really not that weird once you get used to it. Especially when you grow up with it. Literally, all it means is that I didn't have to use Google to find out what a guy's dick looks like,\" Tessa snickered, giving Jordyn a teasing look.\n\nJordyn laughed and raised her hand. She seemed mildly embarrassed. \"Guilty as charged,\" she sighed.\n\nKyle laughed. \"Really? Is that what you did?\"\n\nJordyn nodded as she continued to laugh. \"Except then my mom found out. She walked into my bedroom later and was like, 'I think we need to have a talk...'\"\n\nKyle and Tessa were in hysterics. Seeing them so tickled by her anecdote, Jordyn continued. \"Later, I figured out how to clear the browser history and that's probably for the best. Soon after that, I started looking up pictures of girls' bodies too and that would have really confused my parents...\"\n\nTessa and Jordyn shared an amused and knowing look. \"She is bi,\" Kyle thought to himself.\n\nThey continued washing their bodies and chatting like old friends. Kyle felt himself energized, still reeling from the exciting contact with Jordyn's body.\n\nIt began to finally sink into Kyle's mind what he was now a part of. The more he saw glimpses of the world of nudism the more he wanted to feel comfortable while immersed in it. Not only that, the more he saw examples of sexual freedom, the more he wanted to enjoy its pleasures.\n\nYet nerves were still holding him back from surrendering himself completely to it, and the looming threat of the biggest leap of all stood there waiting for him just beyond breakfast.\n\n***\n\nAfter getting back to their tent, Kyle, Jordyn, and Tessa quickly ate a meal that seemed like something a cowboy might have cooked for himself alone, out in the wilderness. However, Kyle only picked at his food, having mostly lost his appetite due to the new onslaught of anxiety that Tessa's unexpected news about the final day of the festival had produced.\n\nIt seemed odd to Kyle that after that discussion Jordyn and Tessa didn't talk about it at all. He continued to be amazed at the way they just accepted the fact that everyone was about to strip naked together, treating it as a simple fact and nothing to be so alarmed about. By contrast, as they gathered their blanket and water bottles to take back to the main stage for the day, Kyle felt himself knotting up inside like nothing he'd felt before. It was far worse than the daunting prospect of them bathing together. No, this would be something far more profound and terrifying.\n\nAfter settling in, it seemed almost like the day was going to begin like any other. However, out of the corner of his eye, Kyle soon recognized Mitchell walking out onto the stage and knew things were about to change. Mitchell was followed closely by Arwen, who seemed briefly distracted with laughter from an amusing conversation that carried onto the stage. Kyle's heart started racing, knowing that the closing remarks were about to begin and he would find himself suddenly confronted by the expectation to take off his clothes in a sea of equally so-inclined young festival-goers, for a day of spirited, naked revelry in the sun.\n\nAs Mitchell approached the mic stand, the speaker system crackled and conversations everywhere began to gradually quiet down. Excited faces turned toward the stage. Mitchell began by simply thanking everyone for attending. He went on to talk about the great efforts that went into booking the different performers, planning the activities, and building out their little tent-city in the woods. Arwen chimed in, revving up the crowd for the final day and expressing similar gratitude. She had a charismatic way of speaking that made everyone feel welcome and loved, excited to be alive, and thrilled for whatever plans she had in store. Kyle felt like he'd hypnotically follow her off a cliff if she asked.\n\nAs they took turns at the mic, Kyle watched the faces of everyone present. There were excited faces, nervous faces, faces of people who had been there before and were impatiently awaiting the upcoming taste of freedom, and faces filled with trepidation about the challenge that lay ahead.\n\nKyle looked back toward the stage as he heard a change in tone that indicated that their speeches were coming to a close. Sure enough, they hinted at what was next. Arwen and Mitchell exchanged grins. \"You first, or me?\" said one to the other. The crowd laughed. Then, just like that, Arwen crisscrossed her hands over the base of her shirt and peeled it upward with one smooth motion. A beautiful pair of perfectly-shaped, sloping breasts popped out, wiggled cheerfully, and then settled about her chest. As the crowd roared with a wave of cheers, she yanked off the rest of her clothes in record time and kicked them aside.\n\nBoldly facing the sea of people before her, Arwen presented her lithe, nude yoga body with flair. Her skin was smooth and evenly tanned, her crimson nipples poked out like two shiny buttons, her thick, untamed pubic hair looked like the scruff of a wild animal, which Kyle imagined as a description of what she might be like in bed. She raised her arms as if to say, \"Here I am, this is me!\" revealing two small tufts of dark brown hair in her armpits, in exactly the same shade as the hair that obscured her pussy.\n\nMitchell smirked and revealed a set of dimples that seemed to make a group of girls nearby instantly animated. They appeared to be waiting with bated breath as he proceeded in the same fashion as Arwen did, removing his shirt and then undoing the button of his shorts. In a matter of moments, he had them straight down to his feet and stepped out of them. He stood back up, tall, thin, and handsome, revealing a fluffy mass of brown pubes lit by the sun like a ball of fire. A plump pair of testicles hung between his legs and his long, floppy penis dangled over them, swinging hypnotically from side to side and tipped with a thick, mushroom-like head.\n\nThe girls nearby lost their senses, falling all over each other and giggling with excitement. Kyle turned and watched as Jordyn and Tessa jumped to their feet with excitement and anticipation. He quickly made his way onto his feet and exchanged a look with them both, attempting to show as much self-confidence as he could muster, then he took a deep breath and listened to the simple finality of Arwen's closing words: \"Okay everyone, let's all get nakeeed!\"",
        "Her voice blasted out of the speakers, rang out across the crowd, then reverberated against the trees. As if reacting directly to the sound of her command, the blankets around Kyle erupted with activity. Everywhere he looked, crowds of young people were hopping to their feet and cheering. Some of them immediately began to grasp at their clothing to prepare to strip while others looked left and right, bewildered or amused, waiting to see evidence of what was about to happen before they braved the task themselves. They watched for the first pair of breasts to pop free. Maybe a glimpse of a naked penis springing out. The shocking flash of a neighbor's pussy.\n\nSure enough, there they were. There they all were. Bare, plump asses squeezing out of tight shorts. Panties slipping down over hairy vulvas. Floppy dicks popping free. Kyle didn't know where to look. Loosely wiggling and bouncing boobs of all shapes and sizes were introducing themselves to the world all over the place as festival-goers squealed and roared and laughed with delight.\n\nJordyn and Tessa were halfway undressed before Kyle even started. Feeling a rush of excitement, he hurried to catch up. Shaking nervously, he tugged off his shirt and dropped his pants as quickly as he could, then stood there confronted with a sea of stark nakedness in every direction, feeling the warm summer breeze accessing every nook and cranny of his body.\n\nExcited looks fired in all directions. Girls with bright, shining eyes cast him brief looks, assessing his body, and then many others, their mouths half open, their supple, nude figures animated with an outpouring of emotion and disbelief, processing the sensation of their own nudity and the inevitability of having hundreds of eyes frantically devouring the taboo sight of their naked breasts and fuzzy vulvas.\n\nKyle began to panic as he felt a powerful arousal thunder through his body. Never before had he seen such a display of beautiful, naked female bodies at the peak of their sexuality. He felt dizzy examining the happy dance of their puffy nipples as well as the erotic sight of their already swollen labias, some tucked demurely into their hairy bushes and others much more revealing with their feminine secrets.\n\n\"Whoooo!\" he heard erupting from nearby. It was Tessa, launching her arms into the air and surrendering her naked body to the universe. Jordyn was clapping and dancing to music that only she could hear in her head. She turned and saw that Kyle had finished stripping down. Her face lit up as she quickly looked up and down his body. He saw her swell with emotion then rush to his side.\n\nJordyn threw her arms around Kyle's body and gave him a great big bear hug; the same kind she had given Tessa when they first encountered each other. Their bodies squeezed together and he felt just like he did that morning, only even more delighted as he felt the warmth of her breasts envelop his chest and the sensation of his penis pressing gently against her stomach.\n\n\"This is so crazy!\" he laughed.\n\n\"I know! I love it!\" she cheered as she released him from her arms.\n\n\"Come on guys, I don't want to stay here! Let's go explore!\" laughed Tessa. She grabbed Jordyn's hand and tugged her off the blanket, then slipped into the crowds. Kyle quickly followed but lost sight of them in the madness and excitement. He wandered around for a bit, searching for them, but soon found himself too distracted by the electric feeling taking over his whole body and the impact of having his senses completely overwhelmed.\n\nHe ducked into a tent where a reduction in the threat of so many eyes on his body would allow him a chance to breathe and refocus. It was set up for body painting and a few young men and women were already taking advantage of the opportunity to have their naked bodies painted by freelance artists. Kyle stopped to watch a bearded man with a serious expression carefully painting a girl's breasts with colorful spirals that looked a bit like the swirling path that Dorothy skipped along in the Wizard of Oz. The artist seemed oddly transfixed with his own work and not at all preoccupied with the fact that he was examining a stranger's nipples.\n\nThe girl's boyfriend arrived from another corner of the tent, having just left a woman who painted his own body. Kyle was surprised to see that even his penis had been painted as part of a cosmic mural of sorts. He tried to imagine what it must have been like to stand there and allow a female artist to give that part of his body such explicit attention and focus.\n\n\"Wow, that's awesome!\" laughed the young man as he viewed his girlfriend's half-transformed body.\n\nThe girl turned slightly, forcing the artist to pause. She shimmied her breasts at him. \"Check it out, my boobs are all swirly,\" she mused before allowing the artist to get back to work.\n\nKyle marveled at how relaxed and comfortable nudity was for her. He had been standing right there, a complete stranger, eavesdropping on a naked girl and her boyfriend, and she had no problem shaking her boobs back and forth right in front of him. He felt jealous and wanted a wild, sexually open relationship with a girl like he'd never quite had before. He wondered if Jordyn was the sort of girl he could have such a relationship with.\n\nStepping back out of the tent, Kyle began to observe that several people had taken to sunbathing nude on their blankets. There were guys lounging about in the buff, girls flipping one way and then the next, seeking the perfect all-over tan, sometimes in rows of threes and fours, as well as a host of couples relaxing in the sun together. He stopped short when he spotted a gorgeous young woman lying flat on her back beside her boyfriend. Completely taken by her body, Kyle paused for a moment and pretended to look around for someone. Feeling sure that the girl and her boyfriend both had their eyes securely shut, he took several glances down at their bodies to study them.\n\nIt was the first time Kyle found himself able to just examine two live, naked bodies in such close proximity. Being intimate with a girl didn't really afford him the level of detailed and focused examination, and the one time he had taken an art class with a nude model she was too far away for him to observe her private parts with such a jarring clarity. Seeing this pair laying side by side also provided him with the starkest comparison between physical masculinity and femininity that he'd ever seen.\n\nThe boy's penis rested in the valley between his thighs like a long, fat sausage. Just beside it were the girl's two hairless folds of skin. He was captivated by how sweet and delicate they looked, like smooth, soft pink rose petals flowering beneath a small bush of dark brown pubic hair. He gawked at how innocently seductive her naked pussy looked, how vivacious and round her breasts were as they blossomed dramatically upward from her chest, exhibiting a weighty jiggle in response to her rhythmic breathing.\n\nKyle didn't want to make anyone feel uncomfortable by gawking but he couldn't tear his eyes away, immersed in a world of nakedness that he'd never experienced before.\n\nThe girl also seemed to be a few years younger than he was. Her charming, fruitful body seemed to be oozing with a juicy sexuality that she wanted to expose for the first time. She looked unreal, like someone's fantasy of the girl next door who'd only just come of age. The one who snuck into the backyard knowing her parents would be out for several hours. Who quickly removed her clothes and laid down on a blanket in the sun, titillated by the risky sensation of the warm sun and the breeze on her young, naked boobs and pussy, believing that no one could see her in that state -- even though there Kyle might have been, peeking through the slits of the tall fence that provided her with a false sense of security.\n\nHe found in her the purest expression of that point in life when all the riches of the body come alive and announce themselves to the world. The girl flashed like a beacon, drawing glances from passersby all around her as if wanting to make it known how deeply feminine she was, how fertile her body, how ready she was to receive attention from boys, to let them explore her body with their hands, their tongues, perhaps even penetrate it and explore her charms on the inside and out. Her body was like a potent weapon, a means to fulfill an emergent and flourishing desire as she reached an age of youthful passion and craving.\n\nIt began to drive him mad.\n\nBut he wondered: was he simply imagining it all? Was he merely seeing his own desires reflected back as if from a mirror? The moment his arousal reached the point of crisis and this element of doubt crept into his head, Kyle received his answer. The girl opened one eye a crack, squinting at him as he loomed over her in the golden haze of the sun. She smirked, then shut her eye again. The smirk grew into the warm glow of a smile. It spread like wildfire across her whole face.\n\nNo, she knew what he was doing, it was all part of her eager thrill.\n\nKyle rushed off, dizzy, his body awash with adrenaline. He felt desperate to find Jordyn and Tessa.\n\n***\n\nIt had become harder to find their blanket, lost as it was in a sea of colorful tapestries draped across the grass like a vast psychedelic checkerboard. However, he eventually located it and found it absent of both of his friends. \"Maybe they went back to the tent,\" he thought before heading off toward their camping spot.\n\nAs he approached the smattering of tents by the edge of the woods where they had set up camp, the noisy discord of countless voices began to take a backseat to the rustle of trees soothed by the breeze and bird calls that echoed throughout the forest. Kyle unzipped the tent and peeked in but found no one there either. He paced back and forth between their tent and their neighbors', wondering how he would locate his friends once again.\n\nThen, all of a sudden, he stopped short, hearing a strange sound. Then he heard it again, more distinctly. He inched closer to their neighbors' tent. Now sure that he was hearing slurping sounds, he carefully leaned over and peeked into Preeti and Jeff's unzipped tent. Kyle gasped at what he saw: an upright, fully erect penis. Preeti's face emerged as if out of nowhere, sinking down on the stiff cock as it drove to the back of her throat and then sliding it back out of her mouth again. For several moments, Kyle observed them in amazement. He couldn't believe his eyes. Preeti was sucking Jeff's cock!\n\nKyle inched even closer to get a better look, feeling mildly guilty for watching them, but unable to turn away. Then, all of a sudden, he saw Preeti's eyes shoot through the open tent flap and connect with his own. He'd been caught. Kyle panicked, feeling the urge to run. Then he stalled, second-guessing himself, wondering if maybe he should just shrug it off casually so that he would look like less of a perv.\n\n\"Hi Kyle!\" he heard a voice say.\n\nKyle spun back around and saw Preeti emerging from the tent. He froze, discovering her naked for the first time. Her body was a deep, even brown. She had wide, curvy hips, with a patch of dark, coarse black thatch between her legs. Preeti's breasts were medium-sized with wide brown nipples. She skipped over, seemingly excited to see him, her face exhibiting a mischievous gaze, visibly conscious of the fact that he'd just caught them in the act. Preeti grinned at him, as if expecting him to say something, her long black hair neatly woven with flowers.\n\n\"Hey... uh... sorry, I was just passing through, looking for...\" Kyle began to mumble.\n\nJeff emerged from the tent behind Preeti. To Kyle's surprise, his penis was still fully erect and exhibiting a shiny gloss from Preeti's saliva. However, his erection quickly began to fade as he gave a stretch, throwing his arms out wide to either side.\n\n\"What's up?\" Jeff asked. He looked around. \"Where are your friends?\"\n\n\"Oh, I just came back to the tent because I lost them at some point. Did they not come by?\"\n\n\"I don't think so...\" Jeff replied. Preeti shook her head no, then took a seat in one of the folding chairs they'd set up near their tent. \"Hey, you want some moonshine?\" Jeff added, quickly reaching into the tent and pulling out a bottle with no label. \"My cousin makes this stuff. It's pretty fuckin' strong.\"\n\n\"Sure,\" said Kyle, relieved that Jeff wasn't upset that he'd been watching them being intimate. Jeff took a swig from the bottle and passed it to Kyle. Kyle did the same and coughed. It felt like his throat was on fire. \"Geez!\" he exclaimed. Jeff laughed. Kyle passed it on to Preeti who eagerly took a sip without flinching.\n\nPreeti got back up and passed the bottle back to Jeff. \"I've got the munchies. I'm gonna find that bag of chips,\" she said, offering Jeff her seat. Jeff took her place. Kyle was shocked to see Preeti give him a grin before leaning down and planting a few quick kisses on the tip of her boyfriend's penis, then patting it like it was the family pet. She seemed perfectly undaunted by the fact that, in bending over, she gave Kyle a clear view of the two thick, hairy lips of her pussy pursed together like a fuzzy clamshell. She laughed and crawled back into the tent.\n\nJeff chuckled and offered Kyle the other chair, where he took a seat. Jeff took another gulp of moonshine and passed the bottle over to Kyle again who gladly accepted it. His second taste was less shocking as he began to grow accustomed to the strength of the high proof liquor.\n\n\"Anyway, sorry. Preeti always gets super horny at this festival,\" Jeff mused.\n\nKyle smirked. \"That's okay.\"\n\n\"She's fucking amazing at giving head, though!\" Jeff exclaimed, taking the bottle back. He looked proud. Kyle heard Preeti laughing out loud from inside the tent.\n\n\"That's cool... You're lucky!\" Kyle remarked as Jeff grinned. Here he had felt embarrassed about walking in on them but Kyle was now marveling at how open they were about it.\n\nPreeti reemerged from the tent, wrestled open the bag of chips, and stood between them munching feverishly.\n\n\"Oh, I'm sorry, you can have your seat back,\" Kyle said, getting up.\n\n\"It's okay, you can sit,\" she said with a smile.\n\n\"No worries. I'd better go find Jordyn and Tessa, actually,\" he replied. \"Thanks so much for the moonshine!\"\n\nPreeti nodded happily as Jeff raised the bottle to toast him. \"See 'ya round,\" he added as Kyle headed back off toward the stage. As it grew closer, he felt like he was on a high. The alcohol made him dizzy and loose but also self-reflective. He felt like he was still transforming. He imagined walking back into the crowds, bolding experiencing new things.\n\n***\n\nAs Kyle made his way back through the sea of blankets, he spotted a petite Asian girl sitting happily on her blanket, kneading the shoulders of a tall male, twice her size. He felt an instant attraction, becoming lost in her cheerful expression, ensnared by her gleaming eyes, and in awe of her long black hair that cascaded down behind her back and whipped left and right as she worked the kinks out of the man's muscles. He thought at first he must be her boyfriend, but as he grew closer he saw the men rise to his feet, give a resounding, \"Thanks!\" and then head off after exchanging a namaste.\n\nThe girl immediately caught sight of Kyle as he advanced in her direction. She gave him a curious, soulful look which made him tremor as he began to pass by.\n\n\"Hey--\" she called out.\n\nKyle stopped abruptly and turned, surprised to have been singled out. \"Do you want a massage?\" she asked, cheerfully. She gestured to the spot in front of her body which the man had just vacated.\n\nHis heart thumped in his chest as he looked down at her. The girl's petite breasts looked like small, round fruit sprouting from her chest with mauve, elongated nipples. They wiggled with a spirited motion as she quickly patted the blanket between her parted legs where Kyle saw her smooth, perfectly shaven pussy.\n\n\"Okay, sure. Thank you,\" he stammered.\n\n\"Okay!\" she chirped. \"I'm Mayuree!\"\n\n\"Kyle,\" he said, extending his hand. She swung his hand up and down dramatically and laughed, then shifted her weight back slightly to invite him to take a seat. Kyle nestled himself into the gap presented by her small, evenly tanned body. He took a deep breath as she lifted her hands and placed them upon his shoulders and began to feel for his muscles.\n\n\"Just relax,\" the mousey young woman said, softly blowing her words past his ear. Even when he could not see her face, he knew she was smiling from ear to ear. Kyle dropped his shoulders quickly, realizing he was perfectly unaware of how much tension he was full of. As she began to knead his shoulders and back, her pronounced nipples occasionally brushed against his skin but she didn't seem to care. For several minutes, Mayuree ground her way through all the tension that Kyle had built in the whirlwind of a day he was having until at last, he sunk into a deep relaxation.\n\n\"All done!\" she exclaimed.\n\nKyle rose to his feet, glassy-eyed and in a fog, then smiled at her. \"Thanks!\" he exclaimed in the manner of the man before him.\n\n\"You're welcome!\" Mayuree gave him a briefly impish look. \"Five dollars, please!\"\n\n\"Oh! Um...\" Kyle said, panicking and realizing that in his state he certainly wouldn't be carrying any money.\n\nShe sensed his panic and began to laugh heartily. \"I'm just kidding!\" she roared, holding her stomach as she doubled over in hysterics.\n\n\"Very funny...\" he said with a wide grin.\n\nAnother Asian girl that Mayuree appeared to be friends with rushed over from a nearby blanket and said, \"Hey, we're gonna put on sunblock. Do you want some?\"\n\n\"Sure!\" blurted Mayuree. She turned to Kyle and added, \"Do you want some?!\"\n\n\"Okay,\" he replied.\n\nShe sprang to her feet, grabbed his hand, and began dragging him over to another blanket. He felt a little unsure of what was going on as a small group of guys and girls gathered together and smoothed out the empty blanket. Mayuree, on the other hand, seemed to understand exactly what they were doing.\n\n\"Who wants to go first?\" one of the guys asked. A bolt of anxiety shot through Kyle's body.\n\n\"I'll go,\" said the girl who had approached Mayuree earlier. She quickly lay down on her back in the center of the blanket. Mayuree and the others sat in a ring around the girl's body. Mayuree tapped the spot next to her, having reserved it for Kyle. He quickly joined them, realizing that he just got himself pulled into something quite unexpected.\n\nAs everyone sat cross-legged in a circle, Kyle found himself in jarringly close proximity to the girl's perky breasts and her naked vulva which was positioned roughly where he sat. A bottle began being passed around. Each of them squirted a large coin of creamy white sunblock into their palm and passed it on. Kyle joined in, mimicking the actions that he observed.\n\nThe girl in the center of the blanket closed her eyes, shifted about to find a comfortable position, and then calmly relaxed herself. All at once, everyone reached forward and began to massage their dose of sunblock into different parts of the girl's body. Kyle began smearing the ointment in a ring around the girl's bellybutton as he watched what everyone else was doing. They each covered an area and moved on to the next. Kyle worked his way down her thigh, taking occasional peeks at the two lips of her pussy peeking out from beneath her wispy pubes, sandwiched together and bulging slightly. The girl began to sigh happily and seemed to be soothed by everyone's efforts.\n\nTo his amazement, Kyle watched as one of the other participants swept her hand across the girl's body, curling it underneath her left breast and then circling around to the other. She moved on and let one of the guys go, who seemed all too eager to wipe his hand across one of her boobs, massaging it in a circular motion, before moving to the other. Astoundingly, the girl didn't flinch. Kyle wondered how well they all knew one another that they were comfortable touching her breasts like that. He, on the other hand, didn't dare to touch her privates. However, he watched with fascination as some of the others even ran their hands back and forth over the girl's inner thighs, then quickly across her hairy mound.",
        "The girl eventually flipped over and they performed the same task on her backside, working the greasy ointment into the soft mounds of her buttocks. After a few minutes, everyone seemed to understand that she was well-coated and stopped. The girl sat up and smiled. The guy nearest to her, who had first dared to rub her boobs, smiled back at her.\n\n\"Good?\" he asked.\n\n\"That was sooo good,\" she cooed. Then she added, \"What's your name?\"\n\n\"Adam,\" he said. Kyle was shocked to discover that they were complete strangers and yet she let him touch her there.\n\n\"Next?\" the girl said.\n\n\"I'll go!\" said Mayuree with great enthusiasm. She threw herself down in the same position as the girl before. The bottle of sunblock made the rounds again and they all began attending to Mayuree's body. Kyle watched Adam proceeded as he did before. One by one, each participant felt comfortable enough to briefly touch her breasts and, later, her pussy, including some of the girls. They all seemed so casual and unconcerned about it that it filled Kyle with a sense of mystery and wonder.\n\nAfter waffling back and forth, Kyle braved it and leaned forward. No one said a word as he found himself cupping Mayuree's small boobs. He began rubbing them in circles, watching them flatten and spring back to their rounded shape as he manipulated them. He glanced at her face as his fingers grazed her taut nipples. She seemed to be blissed out. He moved down her body, feeling mild panic as he reached her cleanly shaven pussy. Her outer labia had become visibly swollen and flush with arousal, divided by a clean slit that parted willingly as the girl across from Kyle ran her fingers briefly across it.\n\nAs the other girl continued on toward Mayuree's knees, Kyle moved in, rubbing his greasy fingers over her smooth mound and feeling her lips parting to him; opening to the moist pink flesh inside. Some of her feminine moisture renewed the slipperiness of the sunblock coating his hands. As Kyle leaned over Mayuree's body, his nose flooded with the distinct smell of wet pussy mixed with the fragrance of fresh coconut. He felt his penis begin to grow and harden, so he quickly folded one leg over the other to hide his erection, keeping it securely sandwiched between his thighs. He felt himself leaking a little, swept into a frenzy of arousal after touching Mayuree's readily moistened vagina. He managed to regain control and bring down his physical arousal, moving back to his original position so as to not provide any suggestion of what had happened.\n\nSoon, Mayuree was done and got up happily, then returned to Kyle's side-- but her presence beside him felt somehow different than it was before. He had just come to know her body so intimately and she had been so willing to let him explore it. One of the guys went next. Kyle felt strange applying sunblock to him and grew hesitant but enjoyed the sight of the girls rubbing his body up and down. As the girl across from him began to rub sunblock into the young man's legs, his penis flopped to the side and thickened slightly. The girls seemed to steer their attention there, consciously or not, and began to run their hands over his penis casually, not making a fuss, but examining his body intimately and curiously the whole time. It occurred to him that their hands were probably still sticky with Mayree's intimate moisture. He couldn't help but wonder how much of her pussy juices would inadvertently find their way all over his body.\n\nKyle grew acutely nervous about his own potential to take a turn. Before he could have any say in the matter, however, Mayuree had volunteered on his behalf for him to go next. She smiled happily at him and pointed to the spot for him to lay down. Kyle stretched his body out beneath the curious eyes of a handful of strangers. He became aware of his deep, rapid breathing and tried to bring it under control. He gazed up at the set of strange faces crowded around him as they passed the bottle again and squirted sunblock into their hands. Then he watched them glancing down at his body and he began to panic.\n\nKyle closed his eyes tightly and tried to relax. Suddenly, he felt the strange sensation of hands all over his body, rubbing him here and there with soft, sticky fingers. He continued to panic about getting an erection and thought about how mortified he'd be if it happened at that moment. He continued to screw his eyes shut as he felt hands getting close to his pelvic region. Then a soft, feminine touch traveled over his cock and back again.\n\nHe felt his cock stir but he kept his cool. The soft heat of Mayuree's nimble body bloomed against his skin as she leaned over him, reaching down over his body and blocking the sun overhead. He squinted at her, keen to watch what she was doing. Then he felt a set of small fingers running over his stomach and his penis. He knew it was Mayuree, curling her fingers over his testicles, briefly lifting his shaft to make sure some of the lotion got applied all over his genitals.\n\nAs she moved on to his thighs, he dwelled on how wonderful the sensation was, even if brief. The focused attention to his body by so many strangers filled him with a surge of erotic excitement and confidence about his body. It was all over too soon and he sat up with a big grin, finding everyone smiling happily at him.\n\nAs the final guy took his turn, Kyle discovered that the idea of applying sunblock to a stranger's body seemed to be something of a theme. At least two other blankets had some kind of similar activity, even if less elaborate than the ritual taking place in front of him. It seemed to Kyle a weirdly brilliant idea. It permitted a safe space for innocence to remain intact while people unused to this kind of sexual freedom could warm up to the idea. The girls around him had a chance to study a guy's body in a uniquely intimate way, without being the focus of his own attention. They curiously examined his penis and testicles up close, even had the chance to touch them without yet committing to something intimidating and overtly sexual.\n\nEven during the girls' turns, the other girls boldly touched breasts and a vulva not belonging to themselves. They didn't seem to be lesbians to Kyle, but who knew? He wondered if perhaps they were bi-curious, or if they simply took the opportunity to be able to compare themselves to another girl's body and work through any questions, thoughts, or feelings about their own.\n\nWhen everyone was finished, the group began to disperse and Mayuree turned back to Kyle. \"Do you want some lychees?\" she said with an eager look on her face.\n\n\"Oh yeah, I love lychees,\" he said. This response seemed to thrill her.\n\nShe led him back to her own blanket and opened a small plastic container. They began to feast on the fruit, constantly licking their fingers and wiping the sweet juices from their chins. As they continued to eat, Kyle and Mayuree noticed a couple on a nearby blanket sitting by themselves. The strangers became quietly affectionate, though highly alert to any possible attention they might draw from snuggling in public. To Kyle's surprise, the man slipped his hand between his girlfriend's legs. Biting her lip nervously, she parted her legs wider for him. The man glanced about to see if anyone was watching, then whispered something.\n\nThe girl nodded quickly, her face lighting up with excitement over being kinky in public. The man took one more brief look around, failing to spot both Kyle and Mayuree's curious looks, then lowered himself between her legs. Kyle briefly caught sight of a flash of pink between her legs, followed by the man's darting tongue before her body became obscured by his head. Swift arousal washed through Kyle's body as he realized that the man had just started to eat his girlfriend's pussy and no one nearby seemed to be concerned with this fact. It was one thing for Preeti and Jeff to have a little fun in their tent but this was just out in the open!\n\nKyle glanced at Mayuree. She held a lychee to her lips but it was stuck there, frozen and unmoving, as her eyes remained fixed on the motion of the man's head between the girl's open thighs. Suddenly Mayuree realized Kyle was watching her and she laughed.\n\n\"They're having fun!\" she blurted out.\n\n\"Yeah, that's awesome! They don't seem to care if anyone sees,\" Kyle chuckled.\n\n\"Oh yeah. That stuff happens all the time here.\" Mayuree shrugged as if it was no big deal. \"I think it's beautiful that they can just be together like that wherever or whenever.\" Kyle nodded enthusiastically, finding it exciting to see that she had such a carefree attitude herself.\n\nMayuree resumed eating, even though her wild grin and urge to laugh impacted her ability to chew. Kyle grew nervous as she began to cast him quiet looks out of the corner of his eye. He felt her shifting uncomfortably, perhaps starting to struggle with growing arousal from the voyeuristic circumstances. He didn't even need to look at her to know that gears were turning.\n\n\"I'm not against messing around either... if you want,\" she said quietly, with another shrug. She glanced down at the container of lychees and offered it a serious look as if focused on finding the perfect one. Deep down, however, Kyle imagined she was afraid to watch what his reaction might be to her cautious invitation.\n\nHe, on the other hand, began shaking with anticipation and nervousness. Had he really heard her right? What exactly was she proposing?\n\n\"Okay, sure!\" he said, feeling embarrassed for perhaps exhibiting a little too much willingness to participate. Mayuree looked up at him suddenly, her eyes widening and the huge grin returning to her face.\n\n\"Okay!\" She set aside the container of lychees and scooted back on her blanket. Mayuree's eyes seemed to be lit up like the sun shining overhead. Her pupils darted back and forth as if studying Kyle's face. He shifted forward awkwardly, not knowing how to proceed or what she was comfortable with. Then, to his surprise, she laid back down on the blanket, propping herself up on her elbows, and slid her legs apart. Her tiny breasts stuck outward from her body; perky and swelling with arousal.\n\nKyle felt himself growing rapidly, his expanding shaft sliding along the soft, cotton fabric of the blanket as a powerful state of arousal took hold. There he sat on a wide picnic blanket, surrounded by hundreds of strangers, as a beautiful girl opened her legs and offered him her pussy. Her smoothly shaven folds parted slightly as her thighs opened wide, revealing herself to be a shade of pink several times lighter than the rest of her body. He noticed her skin glistening, perhaps from the heat of the sun, but perhaps also as a result of watching the couple nearby. Mayuree gazed at Kyle, timid, but with quiet longing.\n\nMoving onto his hands and knees, Kyle began to reposition himself for an act he still couldn't believe was about to happen. He felt his heart pumping in his chest as his cock wavered beneath his body, fully erect and already throbbing painfully. As he leaned in between her legs, he examined the loose flaps of her labia and began to draw out his tongue. Finally, just like that, he found himself dragging it through her moist, pliable flesh as it willingly acquiesced upon contact.\n\nMayuree was definitely wet, already slick with secretions from her body, undoubtedly inspired by the mounting excitement of their group activity followed by a briefly voyeuristic thrill. Kyle discovered that she tasted somehow differently than he remembered girls tasted like, though perhaps that was from the faint taste of sunblock on her genitals. Even her scent was unique. However, he imagined it, too, was due to some combination of sunblock, mixed with the lychee juices that still stained his lips, along with the earthy flavors of her pussy's natural emissions.\n\nThe moment their bodies connected, Mayuree began whimpering. Kyle felt the occasional pressure of her pelvis against his face as she made subtle movements, instinctively humping the air as if her body were already anticipating an explosive outcome. He heard her begin to squeak and then laugh softly. Glancing toward each other across her body, their eyes connected. She gave him a look of elation as she savored the sensations of his clumsily lapping tongue. Kyle grew further excited, seeing how much she was enjoying it. He felt empowered and began to work harder, attempting to use his tongue more skillfully, teasing her, toying with her body and inching closer to her budding clit.\n\nKyle grew increasingly bold, flicking his tongue frantically over her small, round button of pleasure and periodically sucking playfully at her labia. He felt himself becoming increasingly smeared with the fruits of his labor, a fragrant mix of warm saliva and cum. As Mayuree became feverish with pleasure, Kyle took frequent looks at her face which seemed to gaze out toward some faraway place, dizzy, as if lost in a maze. He felt the pressure building in her body as it writhed and twitched. He worked harder to foster this growing frenzy until he could sense that she could take no more.\n\nLashing frantically at her soaking pussy, Kyle delighted at her reaction as he felt her body being to roll with a deep thunder from the core of her body. He watched her two small boobies jostling back and forth as her body quaked with a powerful orgasm. The look on her face said it all. It was a beautiful devastation. He suddenly felt proud of himself, brimming with sexual confidence.\n\nKyle sat back on his knees, wiping the cum from his face and laughing at her body which was still quivering with lingering echoes of pleasure. She flashed him a grateful look, a beam of happiness shining through a cloud of exhaustion. Mayuree looked down and spotted Kyle's massive erection, sprouting from his body and twitching with excitement. Her eyes were still shining as it estimated his length and girth.\n\nKyle gazed at her desperately, realizing that he was on the verge of having her return the favor.\n\nA tall, sharp-eyed man suddenly weaved by Mayuree's blanket and glanced down at her. \"Oh! Hi Mayuree!\" he said.\n\nShe looked up at him, squinted, then opened her eyes wide. \"Oh, hey!\" Mayuree snapped her legs shut and sat up straighter.\n\n\"Here, come with me. I gotta show you something awesome!\" the man said, grasping for Mayuree's arm and tugging at her body. She laughed and rose to her feet, sensing that he was insistent. The man began leading her away abruptly. Kyle felt almost like he wasn't there at all.\n\nMayuree turned and pouted at Kyle, then gave him a quick wave as they vanished into the crowd. He smiled and waved back but was sad to see her go and felt upset that the stranger had arrived and whisked her away when he might have been just moments from continuing the kind of casual sexual experience that he'd been dreaming about.\n\nKyle sat there a while, wondering if she'd come back. However, he felt awkward sitting on her blanket without her while she remained nowhere in sight. He finally rose to his feet and wandered off with the hope of possibly reconnecting later. As he walked back out into the crowd, he felt further changed by his experiences. As frustrated as he was from an experience cut short, he began to notice girls looking at him and smiling. He felt suddenly confident. He was all too eager to embrace his new life as one of those guys who just had casual oral sex with a girl at a party; the ones that always bragged to him and made him feel jealous.\n\n***\n\nWandering through the tent city, Kyle examined each of the activities that were offered but couldn't focus on what he was seeing, not after what had just happened. However, that changed when he came upon a large tent that arrested his attention. It sported a large painted sign that read, \"Free Love!\" Kyle hurried over and took a closer look.\n\nAs he peered at the signs posted by the entrance, his head started to spin. \"Join the sexual revolution!\" it said. \"Find a partner, get down, make love!\" There were \"free spankings\", a \"learn to talk dirty\" session, something called the \"kissing booth\", and pole dancing lessons. Kyle could hear a crowd inside. They cheered abruptly. He burned with curiosity and began to push his way through the tent flap.\n\n\"Hey, wait up, dude! You gotta sign the consent form,\" a voice shouted. A man raced up to him with a clipboard. Kyle accepted it and scanned the page in front of him. It was full of rules about what to do and what not to do in order to have a \"safe, fun, and respectful experience\" in which everything required communication and consent. He signed it nervously, wondering what he was getting himself into.\n\nWhen Kyle got inside, he found various activities and workshops going on but he made his way to a small crowd gathered around something that seemed to be dramatic enough to cause an uproar. Weaving his way through the gathering in order to obtain a clear line of vision, he was shocked to find a small futon lying on the crowd, around which the crowd had assembled. Incredibly, a young woman was lying on her back, engaged in a wild and spirited fuck with a young man. Nearly a dozen guys inched closer, watching, with a handful of girls mixed in.\n\nKyle observed everything with a sense of newfound wonder. There was not an ounce of shame to be found anywhere. All the guys in the audience sported full erections and stroked themselves happily while observing the deed in front of them with great interest. Kyle forced himself to relax, suddenly feeling the sensation of his cock growing rapidly and rising into the air in front of his body. No one seemed to care so he cautiously reached down and grasped himself, moving his hand slowly back and forth along his shaft.\n\nTurning his attention to the couple on the futon, Kyle couldn't help but get the sense that the girl didn't seem to know the young man she was having sex with. She lay there flat on her back with her legs spread wide open as he grunted excitedly, thrusting his penis inside her. Kyle gazed at the deep pink gash between her legs surrounded by a ring of closely-cropped black hair. He could tell she was incredibly wet as evidenced by the glossy sheen of the man's cock each time it slid back out of her vagina.\n\nThe girl seemed to be beside herself with an intensely-charged, erotic wonder. She aimed her large eyes at everyone who watched her with a mix of shock and amusement on her face as if astonished with how exposed she was at that moment with her pussy spread wide open and everyone able to see his cock sinking into her body, emerging again creamy and wet with her cum. She began to laugh joyfully as her breasts thundered back and forth on her chest while she stared in amazement at the guys tugging frantically at their bodies above her. To Kyle, she looked so innocent in a way but revealing a hidden inner craving that yearned for a wild experience like this. Like something she'd only dreamed of but couldn't believe was actually happening to her. Something she'd remember forever but keep to herself; that one time she let herself do something crazy and impulsive.\n\nAs the woman began to cry out with pleasure, Kyle felt a new presence emerge beside him. A girl had arrived and gave him a sheepish look. She looked down at Kyle's hand as he continued masturbating, then looked back up at him and smirked as if feeling embarrassed that she had just dared to take a closer look. Kyle smiled back, feeling an intense excitement at the freedom with which he could perform such a private activity in her presence.\n\nThe girl was petite, coming up to only his chin. Kyle gazed down at her thin body and marveled at the two small, perky boobs that stuck out proudly from her chest as if in defiance of her obvious timidity and hesitation. She bit her lip, then slowly slid her palm down over the smooth layer of hair covering her mons in order to touch herself there, awkwardly, conscious of Kyle's anxious curiosity which she herself could not help but return.",
        "Moments later, the girl began rubbing her pussy hesitantly. She and Kyle took occasional looks down at each other as they masturbated, then back at the couple. The girl grew bolder and more confident. Kyle's mind was blown as they shared such an intensely private and carnal activity, side by side. As the couple's pleasure grew, so did that of the girl beside him. Kyle began to watch her boobs swing back and forth, smacking together lightly as she turned her knees inward and frantically rubbed her fingers between her squeezing thighs.\n\nThe girls' curious stares turned into an expression of intense desperation. Kyle angled his body slightly so she could observe his penis better as he continued his fierce stroking. Screams rent the air from the futon and the crowd began increasingly animated, gawking at the sudden orgasms taking place before their eyes. The girl beside Kyle remained glued to his demonstration of self-love, whipping her hand back and forth over her pussy until it began making a soft sloshing sound and coating her fingers. Her face twisted into an expression of anguish. Kyle watched as she doubled over with pleasure, her whole body suddenly jerking and spasming with pleasure as she whimpered softly.\n\nKyle quickly looked away, feeling himself becoming close to his own orgasm. Terrified he might start ejaculating right then and there, he gazed at the tent walls, trying to calm his passions. When he finally came to his senses, the couple on the futon had finished and laid in a sweaty heap. The girl beside Kyle had vanished and was nowhere in sight.\n\nHe wondered, was she embarrassed for what she had done next to him? Was she just so overwhelmed that she needed to find a place to sit down? He realized that guys would be way more open to jerking off in a group while watching sex than a girl would. He supposed that it didn't surprise him that she dipped her toes in the water and then fled.\n\nKyle needed air before he could risk observing any more erotic wonders. He rushed out of the tent, anxious to continue his search for his friends.\n\n***\n\nOn his way back to their blanket, Kyle paused when he spotted something fascinating. Standing there in the sea of anonymous, naked bodies, he spotted the three locals that had arrived on motorbikes the day before. The man and his girlfriend were nude, watching the stage with big smiles on their faces while holding hands. He found it astonishing that they'd either stayed or returned, having been swept up in a strange world they merely stumbled upon while careening through the woods the day before.\n\nAs bewildered as they looked, they seemed perfectly happy to laugh at the wild thrill of unexpected nudity. The man threw his hands up and cheered, deeply conscious of and amused by the exposure of his genitals dangling beneath a large gut. His girlfriend tapped her foot excitedly to the beat of the music, her perky breasts dancing about as if with glee. She appeared to become startled one moment after the next as naked bodies strolled by her, letting it all hang out.\n\nBut what interested him most was the young woman standing behind them; the second girl, their friend. She seemed skittish as she stood there, still wearing a tight pair of navy boy shorts, having only successfully completed the challenge of getting half-naked. A strange fear flashed in her eyes, having built up as a result of letting strangers see her breasts, but burning brighter the more she thought about going all the way and exposing her pussy to the crowds gathered around her.\n\nKyle watched as she chewed her nails nervously, her attention briefly distracted by the shock of a man strolling past right in front of her. She froze and eyed his swinging dick. Taking a deep breath, the woman grasped at her panties but chickened out and began biting her nails again. Kyle watched her do this several times, getting closer to making the leap with each instance but backing away at the last moment. He found himself rooting for her, cheering her on silently in her head. He wanted her to feel the same high he was feeling at that moment, the one that emerged so dramatically and began to shine through the wall of fear and insecurity that he had built up.\n\nAfter a few moments, the woman's chest began heaving in and out and she tried again with a renewed determination. \"You can do it,\" Kyle repeated in his head, feeling as though he were on the verge of laughter. The woman seemed to stop breathing. Then, in an instant, she tugged her panties straight down to her feet and stepped out of them. He watched her panic as a thick black bush popped into view. For a few moments, she covered her crotch in shame, glancing left and right with an expression of terror and bewilderment. Then, seeing that no one cared what she just did, she slowly lowered her hands and stood there anxiously, her knees starting to buckle.\n\nKyle became fascinated by her body, even if just because it was a thing that she apparently was so self-conscious about. It became a thrilling mystery revealed right in front of his eyes, apparently for the first time in public. This fact was immediately apparent, as her tan lines were strikingly pronounced. Having sunbathed recently in a bikini, her boobs were surrounded by faint triangles of pale flesh. Her hairy vulva was surrounded by the whitish outline of once-worn bikini bottoms. It seemed almost like the discoloration were painted onto her body in the body painting tent. Beneath her thick mass of coarse pubic hair, he discovered her outer labia, which peeked out below her bush like two fuzzy lips.\n\nThe man in front of her, her friend, suddenly turned and did a double-take, discovering her at long last to have embraced the wild sensation of public nudity. He quickly nudged his girlfriend who swung around sharply. Kyle watched as her eyes lit up and she gave her friend a thumbs up, then said something inaudible. The newly naked woman laughed and nodded quickly, crossing her arms under her breasts in a subconsciously defensive position and still breathing rapidly. The three continued to talk excitedly.\n\nThe woman's transformation was a dramatic reflection of everything Kyle had just been through himself. He felt like he was watching a new world just beginning to open up to her. He wished he could hear what they were saying. He craved to know what she was feeling. He sympathized with her, united as they were in the bold resistance to a wall of uncertainty.\n\n\"Kyle!\" he heard as a frantic voice rang out behind him. He spun around. A sense of relief washed over him as the familiar faces of Jordyn and Tessa emerged from the crowd.\n\nThe moment Jordyn spotted Kyle, she darted straight toward him and threw her arms around his body. Within an instant, he felt her warm breasts against his body again, only this time there was no layer of slippery suds between them. They were skin to skin; the clammy, naked flesh of her body pinned to his. She shook him back and forth, squeezing her chest firmly against his body as if secretly wanting him to feel their fullness, weight, and density as if wanting him to feel the sensitivity of her excited nipples which poked into his skin like darts.\n\nKyle's erection had faded but the moment their bodies connected he felt a renewed tingling. He felt himself growing slightly against her body, just enough to passively indicate his arousal. It pressed gently into her abdomen, beginning to pulse with a mild sense of desire. She didn't seem to react, she just clung to him, feeling the sensation of his body, absorbed in it.\n\nWhen she finally let go, Kyle was surprised to see Tessa rushing over from the corner of his eye. She, too, embraced him and seemed to relish their shared nakedness. His mind flashed with the briefly unpleasant memory of his awkward, failed attempt at a hug when they first met. However, that embarrassment quickly faded. With one simple, genuine gesture she had wiped the slate clean. It was in the past, and now she too felt his delight at the touch of her body as they welcomed each other as close friends would do.\n\n\"Where did you get those?\" Kyle laughed as Tessa released him and stepped back beside Jordyn. The two of them stood side by side, each sporting oversized, semi-translucent fairy wings affixed to their backs with transparent straps over their shoulders. The wide appendages appeared exactly as intended as if sprouting from their backs, full of iridescent glitter and a psychedelic pastel sheen like the swirling colors of an oil slick.\n\n\"Oh! We made these at the fairy tent!\" Jordyn exclaimed. She hopped to the side to show them off, then hopped back. The happy springing of her breasts seemed to showcase all of her excitement. Kyle noticed that she had small gold and purple stars painted onto the cheeks of her butt.\n\n\"Someone put some real fucking work into that tent,\" Tessa laughed. \"You literally sit on large magic mushroom tops for seats.\"\n\n\"The fairy dust dispensers are these little wands,\" Jordyn added, holding her fingers up as if pinching a small object.\n\n\"You guyyys, let's hurry!\" Tessa interrupted.\n\n\"Come with us!\" Jordyn said. \"Tessa wants to find that 'Scooby-Doobie' guy.\"\n\n\"Huh?\" said Kyle.\n\n\"It's basically this guy dressed to look like Shaggy and he hands out free pot.\"\n\nKyle chuckled and felt the tug of Jordyn's hand as they whisked him away back through the crowd. Surrounded by merriment on all sides, he abandoned himself to the festivities, feeling himself increasingly freed of inhibitions.\n\nHe'd never felt that way before. He never wanted it to end.\n\n***\n\nA glorious bronze glow began to cut through the crowd as the low afternoon sun began to sink below the horizon. The final musical acts were some of the best Kyle had heard so far, though perhaps his perception was altered by the increased comfort and thrill he felt being naked and free with his friends and strangers alike. He, Jordyn, and Tessa joined the revelers in dancing and drinking, then sprawled out on their blanket as a cool breeze began to move in and soothe the hot-blooded partiers.\n\nIn time, a sense of sadness set in as Kyle resigned himself to the knowledge that the festival was coming to a close and he was about to spend his very last night with his friends, savoring the final moments of their naked companionship. For all the fun he had being able to observe Jordyn, with her beautiful body and carefree personality, he still found himself wanting more, wondering if their relationship might have crossed into a more intimate territory if only he'd been bolder and warmed up to the erotic potentials of their circumstances at a faster rate.\n\nAs evening set in, Kyle crawled into the tent with the girls, feeling the same, sudden wave of butterflies stirring awake at the pit of his stomach, just like the night before. Only now, it was even more pronounced a feeling of erotic anxiety, being in such close quarters with their naked bodies in a cramped space. He entered close behind Tessa, whose bare bottom wobbled in front of his face. Her ass sported the same gold and purple stars that Jordyn's did, which bowed outward, accentuating the fullness of her rump. Kyle's position afforded him a glimpse of a few wiry pubes just barely sticking out at the base of her crack where two thick, rosy flaps of skin briefly made an appearance.\n\nHe hoped she would remain in that state of perfect immodesty. After all, they'd spent the whole day naked together. What difference would it make if they spent the night ensconced in their little tent, still unashamed about sharing their bodies with each other, even in those close quarters?\n\nKyle watched as Jordyn repeated part of her nightly routine, applying skin cream to her face in the corner of the tent while Tessa flopped down beside her, the heavy weight of her breasts giving a dramatic bounce as her butt hit the ground. Unlike before, however, there were no clothes to remove for bed. Jordyn didn't bother with the quick swoosh of deodorant. She just crawled back to her spot, evening out the sheets as she went, preparing them for comfort with a wistful look on her face.\n\nIndeed, putting any clothes back on seemed to be the furthest thing from anyone's mind.\n\nKyle still found it hard not to stare at the girls with their swinging boobs and hairy crotches, unavoidably flashing all over the place. As Jordyn turned and made her way down to the sheets, Kyle caught sight of her shadowy, hairy hole beneath her butt cheeks, her outer labia sealing it closed like a fuzzy sandwich. It was strange and exhilarating. He couldn't stop his penis from growing, sliding along his thigh and beginning to throb. However, he didn't care anymore.\n\n\"Sorry,\" laughed Jordyn, \"I'm, like, sticking my ass in your face here...\" She finished flopping down next to him, appearing to feel the same nervousness that Kyle felt as her naked breasts wiggled about directly beneath his eyes.\n\nHe laughed it off. \"That's okay. I'm not complaining.\" The girls giggled. He felt excited to not have to be so cautious around them. There was no point anymore. He didn't even bother to hide his growing erection which she appeared to notice out of the corner of her eye.\n\n\"Ahh, I don't want to leeeave,\" Tessa moaned dramatically throwing her arms around Jordyn. \"I'm gonna miss you guys!\" Kyle felt excited to be included in her sentiments and no longer the third wheel.\n\n\"I know!\" Jordyn said with a pout. She grabbed Tessa's arm and drew it further over her body in an attempt to snuggle. However, Jordyn's foot also slid over toward Kyle. He felt it brush up against his own foot. Kyle realized it was deliberate. She nestled it in between his legs and gently rubbed it against his calf.\n\nAfter lying next to Kyle for a few moments, Jordyn began to sigh. She rocked her head to the side and gazed at Kyle. He turned and offered her the same look. He wondered what she was thinking.\n\n\"How are you doing?\" she asked.\n\n\"Me? Fine,\" he replied.\n\nJordyn suddenly sat up on her elbows. \"Did you have fun today?\" she continued, trying to shift to a more cheerful tone. However, something seemed to be weighing on her mind.\n\n\"Yeah.\"\n\n\"Cool... And what about being naked? It's not so bad, right?\"\n\n\"No, I like it.\" Over Jordyn's shoulder, Kyle could see Tessa watching them with an impish grin on her face.\n\n\"Ha-ha, I'm sure you do,\" Jordyn said. She grinned at him and then returned her gaze aimlessly toward the tent walls.\n\nA few more moments passed in silence before Tessa gave a long stretch. \"Yeah, it feels good to be naked and not care,\" she sighed. As she lowered her hands back to her side at the end of the stretch, Tessa casually brought one of them to Jordyn's thigh. Jordyn exhaled deeply as she smiled at Tessa. Kyle could tell that she was filled with tension for some reason. It was their final night together, after all. A lot had changed between them. He wondered if she was just feeling emotional about it all.\n\nTessa suddenly folded her body over to the left, entered a fetal position, and began to nuzzle Jordyn. Jordyn reached over and ran her fingers through Tessa's hair. Kyle watched as Tessa shifted in a little closer and began to nuzzle Jordyn's breasts. They fell silent and lay like this for a short time. Then, all of a sudden, Tessa raised herself onto her elbow and leaned in to kiss Jordyn on the lips. Jordyn's eyes closed as she surrendered to it.\n\nKyle blinked at them in awe as the kiss became more passionate. Soon, Jordyn sat up and wrapped her arms around Tessa. She glanced briefly at Kyle and then resumed kissing Tessa, enjoying the sensation of being in one another's arms. He didn't quite know what to do. The sight of them together was wildly arousing and at the same time, he felt pangs of jealousy, wanting to feel the same sensations that were playing out before his eyes.\n\nThe two girls became increasingly amorous. Kyle heard their breath quicken. Then, Tessa reached up and cupped Jordyn's breast.\n\n\"Oh, sorry. Um. Do you want me to go hang out outside for a bit, or something?\" Kyle whispered.\n\nJordyn spun her head around with a look of surprise. \"Oh! Why?\" She seemed disappointed.\n\n\"Well, I mean. If you two want some private time together, or whatever...\" She blinked at him. \"I mean, like, I felt bad last night, I wasn't sure if I was ruining something.\"\n\nTessa gave Jordyn a playful smack. \"See!\" she exclaimed. \"I told you he heard us!\"\n\nJordyn looked bewildered. \"Oh, I didn't know you were awake. You should have said something!\" she said.\n\n\"Well, I didn't want to interrupt you. Anyway, I can go outside or something.\" Kyle started to get onto his hands and knees to crawl toward the tent flap.\n\n\"Dude...\" Tessa grumbled as she rolled her eyes. \"When a girl thinks you're really hot and wants to jump your bones, you make for the door?!\" Kyle was taken aback. His heart started racing.\n\n\"Tessa!\" Jordyn gasped, widening her eyes at her friend.\n\n\"What? I don't blame you! He is really cute.\"\n\n\"Sorry... I... um... I didn't...\" Kyle stammered.\n\nTessa grinned and glanced back and forth between Kyle and Jordyn. After a few moments, she crawled quickly toward Kyle, dragging him over to Jordyn until he sat right beside her, then she flung her long hair over her shoulder and leaned in to kiss Jordyn again. Kyle sat there awkwardly, watching the two of them, listening to the smacking of lips as their two naked bodies pressed together and became increasingly flush with passion.\n\nWhat happened next surprised Kyle, even after all the surprises he'd encountered that weekend. The girls unlocked their bodies and separated. Tessa shifted her hips backward and eased gently into her side of the tent, turning to face Jordyn and Kyle squarely. She lifted her knees and moved them to either side, then slipped her hands between her legs.\n\nKyle watched in disbelief as Tessa's head rolled slightly backward, abandoning herself to a sense of bliss as she began to gently rub her pussy in a circular motion. His cock began to lift further from his lap, twitching higher and higher into the air one notch at a time as Tessa's actions fueled his growing erection.\n\nAs Tessa began to moan softly, Jordyn suddenly scooted backward and nervously opened her legs the same way. She gave Kyle a brief, tender look as she reached down and began touching herself, spreading her body open and running her fingers through the satiny pink flesh that emerged. The two girls looked at him expectantly as they continued to rub themselves.\n\n\"Um...\" Jordyn began nervously. She took a deep gulp, eying Kyle with a visible sense of caution. \"Do you... want to masturbate with us?\"\n\nKyle's heart began pounding in his chest. He couldn't believe what he was about to do.\n\nKyle felt himself quickly nodding and shot upright. He shifted back toward the sealed entrance to the tent until he felt the coarse fabric brushing up against his back. Then he sat with his feet together and knees out to either side. Kyle's massive erection sprouted triumphantly from his lap, wavering back and forth before Jordyn and Tessa's eyes until he reached down and grasped it with a trembling hand.\n\nHe began to give his penis long, firm strokes in front of them, dizzy with arousal and uncertainty as he listened to their soft moans and whimpers. Jordyn and Tessa's eyes shifted back and forth between watching him stroke himself and gazing down between each other's legs. Tessa suddenly threw one of her legs over Jordyn's, binding them together. They sat there, lovingly entwined, side by side with legs parted wide, in full view of Kyle's self-pleasure and feverishly zipping their fingers back and forth over their moistened labias.\n\nKyle felt himself swelling and throbbing beyond the point of mere arousal. He'd never been so gripped by desire in his entire life. His gaze floated between their jerking breasts and their hands whipping frantically over their pussies, disturbing the loose flesh of their thick, swollen lips. Their vulvas seemed increasingly flush, damp, and malleable. To Kyle, they looked like nothing less than sweet, exotic fruit, with a thick, fibrous exterior splitting open to reveal the juicy pink pulp inside.",
        "He felt himself beginning to leak, making his hands mildly sticky. Unable to tear his eyes away, he focused on the dewy flaps of moist flesh between their legs developing a soft blush as their hands zipped in circles, offering brief glimpses of the satiny coral pink from inside their vaginas. As if yearning for more human contact, Jordyn and Tessa boldly switched to pleasuring each other, crossing their arms over one another to massage each other's private parts. He observed how lovingly they rubbed each other's bodies as if they were interchangeable, as if they somehow connected, or a natural extension of one another.\n\nJordyn suddenly locked eyes with Kyle. She appeared to be suffering as she watched him with a deep, penetrating gaze. The moment he moaned, she did too, as if they were intimately connected. Moments after her brief vocalizations, her movements became more frantic and audible. He could suddenly hear the schlick-schlick-schlick of her wet pussy as Tessa feverishly pleasured her friend.\n\nThe close, humid quarters of the tent made for a potent environment for all the senses to operate on overdrive. Kyle's nostrils filled with the faintly sour scent of body odor, intensely personal and somehow incredibly erotic. He gawked at the sight of Jordyn's incredibly creamy pussy, having had hours to lubricate itself from the thrill of the widespread nudity and sexual activity under the hot sun. Tessa's hands were already coated. They seemed to be beyond ecstatic at the opportunity to share this session of self-love, adoring the sensation of each other's touch as they feverishly rubbed each other's soaking pussy.\n\nAs Kyle felt himself surging fiercely at the core of his tight fist, he observed that their pubic hair was increasingly sloppy and slick, intensely fragrant with a deep feminine odor. The schlick-schlick continued, louder still. Their swaying, naked breasts sent their raised, pink nipples dancing about, shiny and tacky as if having been freshly suckled.\n\nThe girls' movements began to slow as their arms seemed to begin to tire and cramp up.\n\nJordyn gave Kyle a brief glance, her face disturbed with emotion. She slid closer to him and nuzzled up against his body, resting her head on his shoulder. She looked down at his lap thoughtfully as if studying his state of arousal. Kyle leaned in and smelled her hair. It was a little sweaty but laced with a flowery odor from some unknown product she must have used. Lost in a haze of her soothing scent, Kyle's body suddenly jerked to life as he felt Jordyn's hand reach down and tenderly lift his stiff erection. She appeared to study it briefly, toying with it casually in her hand before she began to stroke him gently.\n\nSnuggling closer to him, Kyle felt her heavy breaths washing over his chest. Her eyes darted up at him. They smiled softly at one another, communicating a sense of safety and longing. She seemed uncharacteristically nervous. As if something deep inside him was controlling his hand, Kyle reached up and gently touched one of Jordyn's boobs. It softly compressed against his fingers and gave a slight wobble. He cupped it in his palm and felt himself surging wildly in Jordyn's hands as she continued to take long strokes up and down his lengthy shaft. She seemed to delight in his touch as he grew bolder, gently playing with her boobs and giving them a gentle squeeze.\n\nJordyn's voice arose. \"I'm so sorry you were nervous yesterday. When we went to the lake for the first time, I mean...\" She spoke softly, with a hint of deep emotion.\n\n\"Oh... It's okay--\" Kyle mumbled.\n\nShe pounced on his words. \"I want you to know that... um... you shouldn't be. We were, like, as turned on as you were.\"\n\n\"You were?\"\n\n\"Yeah. Especially, like, when I saw how much... um... your penis had grown. I was super turned on by your reaction to seeing us washing.\"\n\nTessa interjected with a laugh, saying, \"Ha-ha, yeah. She didn't stop talking about your cock later!\"\n\n\"Oh my god-- Tessa!\" Jordyn snapped back, trying to mask her aggravation with a laugh. Kyle felt himself turning red. Jordyn fell briefly quiet, then looked up at Kyle nervously. \"Do you... want to do anything else...?\" she asked hesitantly.\n\nKyle didn't quite know what she was getting at but he knew the answer was yes. He nodded quickly then took a deep breath.\n\nJordyn's eyes silently drifted back down to Kyle's lap where she briefly resumed rubbing his steely shaft with her soft fingers. She sighed softly and moved onto her hands and knees. Kyle felt himself holding his breath as Jordyn shifted her body in front of his, briefly sticking her butt in the air, and then lowered herself toward his lap.\n\nKyle felt their entire relationship change in an instant the moment she took his thick, swollen cock and began to guide it into her mouth. He watched her eyes dancing and her nostrils flaring as the fat knob of his cockhead slipped between her red lips and slid over her tongue. It was warm and wet, soft at first, and then firming up as it began to react to the sensation of his shaft making contact. Within moments, he found himself watching her head bobbing excitedly back and forth, taking him deep inside.\n\nHe began to stroke her hair with his trembling hands, closing his eyes and suffering the exquisite sensation of his cock slipping through her mouth with increasing speed. Her actions were briefly disturbed by a muffled laugh as Tessa chimed in with her decidedly less emotional perspective on the matter.\n\n\"Yeah, girl! Suck that cock!\" Tessa joked as if finding her own remark hilarious. It seemed to have a positive effect on Jordyn, however, who sucked him more aggressively and with a sense of amused excitement. She fed on him as if in a frenzy; the rawness of her emotion and desire animating Jordyn's entire body.\n\nSoon Kyle was moaning and squirming beneath the force of her efforts. Sensing his overwhelming pleasure, she backed off and rose up in front of him, licking her lips and smiling. They gazed at each other as if proud of what they'd just accomplished. Then, with a laugh shared between her and Tessa, Jordyn sat back on her bum and flung her legs out to the side. She leaned back onto her elbows and gave Kyle a hard stare. Her hairy pussy spread wide before his eyes. The damp, sticky lips of her labia peeled open slightly, revealing a lush pink interior. Wordlessly, she begged for him to crawl between her legs for a taste.\n\nKyle's cock throbbed almost painfully as he scrambled forward and threw himself between her thighs. The warm heat of her body radiated from her vulva and carried with it a sudden odor of intimacy.\n\n\"Ohh, god...\" Jordyn whispered, almost inaudibly, as Kyle stuck out his tongue and dragged it squarely over her sensitive flesh. At first, he began licking excitedly, frantic with the desire to taste her pussy. Then, as he became aware of his over-enthusiastic actions, Kyle slowed his pace and began to flirt with her body, teasing her inner thigh, planting soft kisses on her labia, then sucking at it gently. Jordyn responded, struggling to prevent herself from writhing about and making his job harder.\n\n\"Yes... yes...\" she exhaled losing herself into a drunken bliss.\n\nTessa's face lit up and she scrambled over to cradle Jordyn in her arms. Tessa gazed down happily at her friend's face, her jerking breasts, her spasming hips, soothing Jordyn's fits of pleasure with loving kisses on her forehead and neck.\n\n\"Mmm... fuck... Kyle...\" Jordyn began to moan. \"Oh god... eat my pussy...\" Her words seemed to raise and lower in volume according to the intensity of the sensations moving through her body. Kyle felt her hips instinctively jerking, mashing her wet, satiny flesh against his lips and nose until he was coated in her juices and feminine scent. His tongue lashed against her harder, flicking angrily against the hard nub of her budding clit until she began to cry out in pleasure.\n\n\"Fuck!\" Jordyn shouted suddenly. \"Fuck-- yes! Kyle!\" she screamed as he fought back against her frantic attempts to subdue his actions. \"Yes! Oh-mi-god!\"\n\nKyle felt Jordyn pumping her hips aggressively as her body spasmed. She clutched his head, grasping painfully for his hair until finally, she released her pleasure in a fevered gush and he was able to sit back up with a wide grin on his face. She sat there, huffing and puffing, her shock and exhaustion slowly transitioning into soft laughter as Tessa leaned in to squeeze her tightly.\n\n\"Okay... like... I can't take it anymore. Watching you two is making me so fucking horny,\" Tessa finally lamented. Jordyn snickered and threw her arms around Tessa, covering her with sympathetic kisses. Tessa started to laugh. \"I mean... this is excruciating. You two seriously need to hook up now. Just get on with it already, geez...\"\n\nJordyn's jaw dropped in response to her friend's boldness. Kyle turned and looked directly into Jordyn's eyes. \"Did you really... want...\" he began to say, stumbling on his words.\n\nTessa continued to want to rush things along, rolling her eyes and adding, \"Why do you think she asked you here?!\" She seemed delighted to play even the slightest part of matchmaker.\n\nKyle smiled shyly at Jordyn who couldn't help but light up with amusement. Truthfully, he wanted to touch and explore every part of her body's landscape, making love to every inch of it, in every way possible. He had already memorized it with a potent fascination, from the shiny metal stud sparkling in her nostril to the delicate curl of her small ears. He had mapped the entire terrain of the smooth, blushing flesh of her inner thigh. Even if blindfolded, he could point out the exact location of that single dark brown freckle on the underside of her left boob. Kyle was even enamored by the small chipping of the nail polish of her big toe, once painted red but now fading in color. He desired to know each of these things as intimately as his own body.\n\nJordyn leaned into Kyle suddenly and with longing. They began kissing feverishly. \"This is it,\" Kyle thought to himself. They were about to have sex... and in front of Tessa, no less. He could feel himself trembling. His cock throbbed fiercely, anticipating the sensation of gliding into her snug body, a sensation he'd been fantasizing and dreaming about with increasing clarity all weekend long. The closer they'd become, bonding together during the festival, the more urgent he was for them to open up fully to one another, for each other to share their body completely, to physically manifest all the intense feelings that had been building there.\n\nKyle felt Jordyn shifting her weight and opening her thighs to him. Together they looked down between her legs. Kyle scooted his butt forward and held his erection squarely at the entrance to her body. Their eyes connected as he slowly pushed himself inside her, sinking deep within. She was tight. He felt the wonderful pressure of the walls of her vagina squeezing with a gentle pressure against him from all sides.\n\n\"Oh god, I'm so wet....\" she whispered, transitioning into a small laugh.\n\n\"I know... it feels amazing...\" he mumbled back.\n\n\"Kyle...\" she cooed softly. Jordyn pulled herself in close to his body as if begging for his embrace. \"My pussy's so wet...\" she continued to whine. He felt her lips as they sought his own. She gave him a few desperate kisses, then added, \"I've been like that ever since we went to the lake together...\"\n\nJordyn sounded breathless as she forced out this admission, aiming to inflame his desires for her. Kyle's head was still spinning with the realization that she had, indeed, been turned on by their first time getting naked together; that she had looked at him and enjoyed the sight of his body as much as he did hers. Their bodies began to move together, subtly, but with a deep yearning from their cores.\n\nShe began to notice him shaking and seemed concerned. \"How are you feeling? Are you okay?\" she asked, searching his eyes.\n\n\"Y-yeah... I could barely breathe... at the lake... when I saw your body...\"\n\nJordyn smiled and then let out a soft laugh that seemed to relax her. \"I noticed... guys don't exactly hide that so well...\" she said, recalling the sight of his spontaneous erection during their first group bathing session. He gave a sheepish smile.\n\nThey resumed kissing until Jordyn planted her feet firmly on the ground and pushed herself up onto his lap. Kyle felt the weight of her body bearing down on him as she began to ride him there, letting her jostling breasts bounce happily against his chest. Jordyn began to laugh joyously at the exciting sensation of his swollen member forcing itself upward through her body as she rebounded against him.\n\nTessa began to groan as she watched from a small distance. It looked like her body was on fire. She began to masturbate frantically, her legs thrown hastily to either side and the juicy squelching sounds of her own body revealing the intensity of her voyeuristic excitement. Seeing the two of them finally acting on their urges seemed to be getting her off just as much as her mutual masturbation with Jordyn had.\n\nKyle gazed happily into Jordyn's shining eyes as he felt her body bounce happily up and down in his arms, emitting a loud sticky sound as their bodies continued to move together. His nostrils were flooded with the lingering scent of sunblock, barely masking the earthy funk of faint body odor mixed with the scent of wet pussy, as well as the heady odor of his own masculine arousal. Jordyn's body felt clammy, with a layer of semi-dried sweat. The slick, coral-pink flesh of her vagina clung to his body as if feverishly claiming ownership of his cock through a firm, moist suction.\n\nHe glanced down at their bodies as she continued to feverishly spring up and down. A creamy, whitish film began to form at the base of his stiffened cock as it quickly sunk into her body and withdrew, coated in her juices. \"You're coming so much...\" Kyle mumbled.\n\n\"Ngh!\" Jordyn cried out. Together they listened to the music of her body; the sticky separation of flesh as the portal of her body opened to him, gliding his shaft through the tight canal of her body and into its warm recesses.\n\nFeeling the urgent need to fuck her harder, Kyle laid Jordyn back and leaned over her in missionary position. As he began to thrust into her body, he became absorbed in the hypnotic motion of her breasts as they rocked back and forth on her chest. Kyle cupped them, briefly steadying their gentle sway, feeling her hardened nipples pressing into his palms. They gazed into each other's eyes, gripped with a sense of overwhelming emotion as their bodies united, one inside the other, both of them jerking their hips with a joyful craving.\n\nJordyn seemed to have unfolded like a flower, bearing her breasts and pussy to him with an expanding sensuality. She seemed to grow intoxicated, lost in his eyes as though unable to see anything but his intense desire for her. Her hips jerked against him with the same sense of deep craving that he saw in her expression as if her body were unable to do anything more at that moment but seek the final outcome of her desperate search for the absolute perfection of their union.\n\nFinally, full of vulnerability and emotion, Jordyn grasped for his body with a sense of crisis overtaking the deep tenderness that had been there before. She was in his hands, giving herself entirely over to him with the looming threat of a powerful release growing near. Kyle frantically swung his hips against hers, driving his cock as deep as it could go, filling her entirely from within. He observed the sweaty hair clinging to her face. Her mouth parted slightly and hung open as she realized what was coming. A look of devastation flashed across her face.\n\n\"Ohhh my god! Kyle!\" she squeaked suddenly, grasping his arms painfully. \"Faster! Fuck me! Ngh! I'm gonna come!\"\n\nHe pumped against her with every bit of energy he had left, determined to see her reach a climax. \n\n\"Ffffffuuuck!\" she screamed. What followed was a series of convulsions. Jordyn seemed to almost lose consciousness as her body jerked and spasmed and her eyes rolled back into her head. Kyle could feel her body gushing, dousing his cock as she shuddered in his embrace. Then she collapsed, almost lifeless, exhausted by her own explosion of erotic bliss.\n\nTessa scrambled to her side and began caressing her lovingly. Jordyn gazed up at her dizzily with teary eyes.\n\n\"Wow... holy shit...\" Jordyn gasped. Tessa giggled while Kyle sat back, watching on with pride for what they'd just shared.\n\n\"Do you... uh... mind if I get some of--\" Tessa began to ask Jordyn.\n\n\"Oh!\" replied Jordyn, suddenly springing back to life and sitting up, \"Ha-ha-- no, go for it.\"\n\nTessa pressed right up against Kyle as if expecting him to repay a favor. He found himself suddenly surprised as she pressed her lips against his. It was entirely unromantic; merely impassioned and full of lust, as if Tessa was in need of first constructing a door for herself to waltz through, into the subsequent embrace of raw carnality with a new partner. Kyle responded in kind, pressing his lips firmly against hers, his hands making their way across her body, fueled by the shockingly spontaneous invitation to explore her erogenous zones at will.\n\nWhen she had her fill of his clumsy affections, she threw herself in front of him and adjusted her body as she lay down. Tessa wrapped her long hair back behind her head, tucking her colorful braid behind her ear, and settled into a comfortable position, parting her legs wide. Kyle stared down at her in disbelief as she so casually made herself sexually available to him.\n\nTessa laughed, \"Look at his expression.\" Jordyn snickered at her comment. Tessa added decisively, \"I may not date guys like Jordyn does, but I still like to fuck 'em... once in a while.\"\n\nKyle couldn't believe what was happening but wasted no time in going along with her expectations. He shifted forward again, this time before Tessa's sopping, hairy vulva, and inserted himself inside her pink pussy. He felt her expanding to accept him inside and the slick walls of her inner muscles guiding his cock to her core. Her body felt somehow different than Jordyn's but equally pleasurable.\n\nAs Kyle began to thrust, rekindling the intense erotic energy he'd just felt with Jordyn, he observed Tessa's attention moving smoothly between him and Jordyn, one moment craning her neck, her face awash with a raw expression of pleasure at the sight of his thick cock gliding smoothly into her body, and in the next, seeking Jordyn's lips with her own. Tessa seemed to be a sponge, desperate to absorb every ounce of passion she could draw from the both of them in a manic fit to enhance her own exquisite pleasure. His throbbing cock and curious touches. Jordyn's soft breasts and juicy lips. She wanted all of it, in combination.\n\nKyle frantically pumped his hips forward and back, observing the wild swing of her free breasts, the slight wobbling from the soft pudge of her stomach, and the milky wetness exuding from her slick, hairy mound.\n\nTessa was loud. Comically so.\n\nThe words flew from her mouth in a steady stream and rattled in Kyle's ears. \"Yes! Oh god... fuck! Fuck-fuck-fuck... ngh!\" she cried out, before howling, \"Yessss!\" Her performance caused Jordyn to giggle incessantly. Kyle was amazed at how little Tessa seemed to care about being heard by anyone within a reasonable range of the tent. Before long, he heard footsteps walking past their tent outside.\n\nA woman's voice floated past the outside of the tent, bubbling up into laughter. \"Everyone's fucking,\" he heard the woman exclaim. Kyle heard a man's laughter.\n\nJordyn's eyes widened and her mouth opened. She shared a laugh with Kyle, briefly embarrassed by the attention they'd drawn. He felt excited and empowered again, just like when he was with Mayuree, and again when the girl had watched him masturbating in the Free Love tent. He wanted people to know what they were doing. It made him that much more aroused.",
        "Jordyn and Tessa exchanged a feverish kiss. \"Baby...\" Tessa whimpered.\n\n\"What is it, babe?\" Jordyn whispered.\n\n\"Come here... I need you...\" Tessa replied breathlessly.\n\nKyle quickly pulled out of Tessa to make room for Jordyn as she crawled into her friend's arms. Kyle watched as Jordyn covered Tessa with spirited kisses, first on the lips, then the breasts, making her way downward. Jordyn glanced back at Kyle with a small smile as she raised her buttocks into the air and inched backward, sinking between Tessa's legs.\n\nAs Jordyn began to munch her best friend's lady bits, her hips widened. It was an invitation. Kyle gazed down as Jordyn's soft, round, star-covered rump and her expanding, hairy mons peeking through. He squeezed her butt cheeks and smacked them playfully together a few times, excited by their loose movement. Between them, the clean pink asterisk of Jordyn's anus seemed to blink at him as it repeatedly revealed itself and vanished again. He gazed at the fuzzy folds of her swollen labia, gently giving way to her sweet pink inner flesh under the forceful movement of the heavy mounds of her butt, then began to ease forward, returning his cock to the wet portal to her body.\n\nKyle groaned as he felt the stretch of Jordyn's moist pink flesh, clinging to and sucking at his swollen member, now renewed with a fresh coating of Tessa's cum. He began to thrust, bumping lightly against the cushion of her body and watching the soft ripple of her flesh respond to his efforts. As he fucked Jordyn doggy style, he marveled at the attention she gave Tessa, who reclined lazily across the floor of the tent as if lost in heaven. It was obvious that Jordyn's technique between a woman's legs was sensational. He realized that he could never hope to perform that way anywhere nearly as well as Jordyn and Tessa could with one another. Being a woman herself, Jordyn seemed to understand more about Tessa's body than he'd ever know.\n\nAnd yet, that's what seemed to be so magical about their threesome. Each of them had something unique to offer. Connecting interchangeably. Bodies bearing unique gifts and special talents as they explored an unknown territory of new erotic experiences that seemed to have consumed Kyle in just one weekend.\n\nKyle drifted into a deep and profound sense of bliss, touring Jordyn's intimate depths with his tingling cock that seemed to flow with a constant wave of erotic energy, bound together as they were through that open channel of pleasure. He heard Tessa screaming. The thunder of her spasming body seemed to reach Kyle's through the intermediary of Jordyn's body which responded to every squirt and cry. The explosion of energy as it traveled from person to person was almost too much to bear and Kyle felt himself on the precipice of release.\n\n\"I'm gonna come!\" he blurted out, quickly pulling himself from Jordyn's sodden hole. She spun around and stared at his cock as he began to quickly stroke it, transfixed with its visible, throbbing energy. Tessa quickly sat up, a look of amusement and wonder forming on her face. She pushed Jordyn forward.\n\nJordyn dismissed Kyle's hand and grasped for his cock. He gasped as she wrapped her lips around him and slid him back inside, her eyes wild with anticipation.\n\nTessa laughed at the sight of Jordyn's own cum being sucked from his cock and collecting against her lips. \"Can you taste your own pussy on him?\" she asked with a chuckle.\n\n\"Mmm-hmmmm...\" Jordyn mumbled, briefly pausing her frantic sucking to suppress a smirk.\n\nKyle groaned as she feverishly enjoyed his cock, urging him toward a release into her mouth. Her eyes seemed deep, shiny, and dark as she repeatedly glanced up at him, brimming with anticipation and gauging his state. Kyle couldn't imagine exactly what must have been going through her mind but he saw in her so much desire, urgency, and fascination, waiting for his release as if desperate to receive her own thrill from the sheer crisis of his pleasure.\n\nSuddenly, he felt a fire in his belly, swelling up and overtaking his whole being, it crackled and swept through his body, an intense erotic energy that could be delayed no longer. With a fierce squirt, Kyle felt himself exploding into Jordyn's mouth, erupting with spasm after spasm of ruinous ecstasy. She seemed to be taken aback by his powerful emissions but delighted at the same time. Attempting to keep up, she ferociously sucked and stroked him until every last drop had been swallowed.\n\nAs she removed his cock from her mouth, Kyle saw that her tongue was still wet and sticky with semen, yet she seemed determined to make sure that nothing was missed, curling her tongue around his tip with a wry grin, removing the excess cum and grinning at Tessa who seemed enchanted by her friend's delight at polishing Kyle clean.\n\nFeeling weak from the expenditure of so much energy, Kyle finally slumped down alongside Jordyn who wrapped her arms around him. He buried his face between her breasts, her warm cleavage and beating heart soothing him into a peaceful lull. Soon, all three of them had collapsed into a naked, sweaty heap, arm in arm, their bodies still reeking of sex. The heady musk of his still-swollen cock hung in the air and seemed to rekindle Jordyn's otherwise waning arousal with each breathy inhale she took. The earthy, feminine perfumes of their wet bodies seemed to cling to everything. Kyle's hands and fingers had transferred their beautiful scents all over each other's bodies. The same entwined bodies that now lay slumped over one another, a tangle of naked flesh, limbs draped lazily across a thigh, a breast, an arm, as if no longer possessed by their owners.\n\nThey snuggled naked together for a long time, occasionally passing their lips from one to the next in an aimless attempt to exhaust the last glimmers of physical desire as they listened to the crickets and felt the soft evening breeze filtering through the tent.\n\n\"Ugh, I don't want to leave!\" Jordyn lamented.\n\n\"I know!\" groaned Tessa.\n\nTheir bodies tightened, clinging to one another with refusal.\n\n\"Yeah, I can't believe this is our last night...\" Kyle mumbled. The girls smiled at him softly.\n\nAs they sunk back into silence, their spirits were renewed now and then as an occasional voice cried out into the night air with an orgasm, somewhere out amongst the tent city that had sprung up all around them. More than a dozen such screams rent the air over their stretch of quiet reflection together.\n\nIt seemed as if everyone was out there was making love, just as they had.\n\nJordyn seemed to smile and bury her face in Kyle's neck each time. He felt her soft grin pressing against his flesh as if she were recalling the sensation of that incredible moment when she'd experienced it earlier with him.\n\nFinally, Jordyn and Tessa slipped into a deep state of slumber, still clutching at each other's bodies and bound to Kyle's. He closed his eyes and listened to the way their heavy breathing mimicked the sighing breeze, occasionally interrupted by the last few female voices crying out in desperation as their bodies quaked with pleasure within some distant tent.\n\nKyle began to wonder if he'd run into Preeti and Jeff the following morning, having one more go at it in their tent before packing up. He wondered if he'd see Mayuree again, not even to resolve where they left things-- just to thank her and say goodbye.\n\nThen he decided it probably didn't matter. As much as he felt bad that the festival was coming to a close and he may not see those people again, Kyle knew that each and every morning that followed he'd see Jordyn at work, just like he always did, and he wondered what their transformed relationship would be like.\n\nIn time, he fell asleep comforted by the fact that they'd soon share a knowing smile by the water cooler, or elsewhere, both thinking about the time they spent together at the festival... and, just perhaps, making plans to resume an exploration of everything they'd shared on that final night of long-awaited intimacy.\n\n***\n\n\"Sun, Sex, and a Summer of Love\" was submitted to the 2019 Summer Lovin' contest. If you enjoyed this story, please consider voting by clicking a star.\n\nYour support means a lot! Remember to check out the other great author submissions -- and thanks for reading!"
    ],
    "authorname": "SolarRay",
    "tags": [
        "festival sex",
        "hairy",
        "hippie",
        "hippies",
        "outdoors",
        "public nudity",
        "summer",
        "threesome",
        "voyeur"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/sun-sex-and-a-summer-of-love"
}