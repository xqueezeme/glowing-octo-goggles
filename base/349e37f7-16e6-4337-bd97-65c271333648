{
    "title": "The Cursed Tattoo Pt. 10",
    "pages": [
        "For Each Their Own\n\nRyan loved Melinda's big booty. It was firm and juicy, and felt just right under his palm when he slapped it. Seeing the tattoo on it -- his tattoo, his brand, his slave mark -- made it even hotter, even though he was supposed to hate that.\n\nThey were alone in Ryan's bed, which was a rare occurrence these days. Usually there were multiple girls around in the apartment, always willing to go along with anything and everything. The line between sex and no sex was fleeting, especially when Annie, Remy, and Erica were constantly competing to offer themselves for Ryan's use.\n\nMelinda was on the bed, on her side, her legs bent, and Ryan was on his knees, fucking her. It was one of his favorite positions. He loved how the sideways pose accentuated a girls' hips. He pulled Melinda's hair with one hand and grabbed her thigh with the other. He was liberal with the energy. All of the girls could take it, these days.\n\nExcept for the new girl, Stacy, of course.\n\nMelinda was still a little bit angry about that. She had not been included in the decision making process, and had been quite shocked when she found out there was a new slave in the harem. She had held out on Ryan for a few days. This was only the second time they had fucked since then. Ryan plowed into Melinda, hard.\n\n\"Oh yeah? Is that all you got, you fucking slave master?\" Melinda panted. \"Is this how you fuck all the girls you take? You just take whoever you want. No one is safe. Who's next? You gonna fuck my daughter, too?\"\n\nMelinda had no idea why she said it out loud. It was the heat of the moment. Ryan was already going hard and his cock was always like steel but there was one way the girls could always tell what Ryan was feeling. The energy. Melinda felt a clear spike in it.\n\n\"What? You bastard. Did that turn you on? You want to fuck my daughter! You fucking bastard. You want to take my Hannah and turn her into a whore like her mommy. Is this how you would fuck her? Is this how you would take her?\" Melinda continued. She couldn't stop. Deep down, she'd been thinking about this for a long time. The curse was messing with her head and there were times when she genuinely wanted to offer Hannah to Ryan.\n\nMost of the time she knew better, though, and she was ashamed of herself as a mother for thinking such thoughts. Now, in the heat of the moment, she was letting it all out as dirty talk. \"Would you fuck her in the ass? Would you take that huge monster of a cock of yours and shove it into my poor baby girl's tight teenage asshole?\"\n\nRyan didn't say anything, but shifted his cock into Melinda's ass. He pushed it in even more forcefully than usual. He commanded her big, jiggly butt to surrender to his throbbing manhood. Melinda's legs shuddered. Ryan took on a relentless pace, enough to wreck someone who wasn't as adapted to taking it as his girls were.\n\nMelinda could feel the energy burning harder than usual. \"You bastard! You would, wouldn't you? You would fuck my baby Hannah in the ass like this.\" Ryan covered her mouth to stop her from talking and took out his frustrations on her ass for good long while.\n\nLong after she'd completely succumbed, he pushed Melinda to the floor. She assumed the correct position with practiced ease: on her knees, mouth open, and tongue sticking out. Ryan managed to mostly evade the open mouth, and came all over her face and chest instead. Melinda knew he did it on purpose, she didn't mind.\n\nRyan went to the shower without saying anything more. Melinda scooped up all the cum she could find into her mouth and swallowed it all. She then joined him in the shower but neither of them said anything.\n\nLater, they were cuddling on the sofa. \"What the hell was that?\" Ryan finally asked.\n\n\"What?\"\n\n\"I know you like to be naughty, and dirty talk is part of that, but didn't you go a bit far? I mean, for you? I completely understand why you want to protect Hannah from me, so why this now? I know you're still angry about Stacy but I don't get why you had to bring Hannah into it.\"\n\nMelinda took a moment before she answered. \"Look. I'm really sorry about that. Or, you know how you make us feel. Right now I can't feel bad about anything but I know I will feel bad about it later. I guess I better get this out while I can.\" She took a breath.\n\n\"I'm so happy when I'm with you, Ryan. I know it's a curse but it's the best thing that's ever happened to me. Sometimes I really don't know if... any woman might not be happier with you in her life, you know? I took comfort in knowing you would never do it, take more girls, but now you did it to Stacy. I know it makes me a horrible mother, but would Hannah be as happy with you as I am? If I could offer her that, wouldn't it be the best gift I could give her?\"\n\nMelinda waited, but Ryan said nothing.\n\n\"I want the best for my daughter and you are the best thing that has ever happened to me. What am I supposed to do? I know it's wrong and I'm not going to do it, but I can't help how I feel. Please, tell me you at least understand what I mean. Say something.\"\n\nRyan always got spooked when the girls talked about how much he meant to them. It was horrible to realize he carried such a responsibility. \"I do believe you, and I do understand. You girls keep talking about it enough, so I do believe you when you say I make you happy. I completely agree with you that I should stay far away from Hannah. Just remember, the curse is messing with your head, so if you feel weird or conflicted it's not you, it's the curse.\" Ryan felt pretty happy about getting the message across.\n\n\"No. You're not getting away that easily. I don't think you should stay away from Hannah. No, I want you two to get along,\" Melinda said.\n\n\"What? I thought you just said... What?\"\n\n\"You idiot. I don't want you to date her, I want you to date me. The secret is out and you are officially my boyfriend now. That means you need to take me out, and get to know me, for real. You've done it with the other girls. You can't just get away with fucking me like a whore anymore. I want you to be a real part of my life. And if you want to date me, Hannah is part of the package. The reason we've always been such a good team is that we shared everything. Hannah met my boyfriends and I met hers. It is important to me that she approves of you.\"\n\n\"You want me to be a stepdad?\"\n\n\"No. I want you to be my boyfriend. There is a difference.\"\n\n\"So, what about the crazy talk?\"\n\nMelinda thought about it for a moment. \"That was just me sharing a deep, dark secret with you, in the heat of the moment. I feel like it has brought us closer already.\"\n\nSomeone was at the door so the conversation was over.\n\nOver the next couple of weeks, Ryan did go out with Melinda a few times. This sparked the other girls into action, too. Rules and limits had to be set, and the final deal was that Ryan had to do two date nights a week. No more, no less. Each girl would get their turn in order but it was up to them to trade and barter their \"tickets.\"\n\nMelinda used all of her turns to cook for Ryan at her house. Hannah was also invited. Ryan's progress with her was limited, though. Hannah was rightfully afraid of him. Melinda did her best to get the two talking but other than that they had little common ground.\n\n---\n\nAnnie was over the moon, beaming with joy. She finally got to be just a normal girlfriend, on a normal date. They were in a fancy restaurant and she could not stop talking about her day, and her life. Much of it involved Ryan, but it was still nice to just talk about it to him. Annie still worked at Ryan's old office but she wasn't the shy but gorgeous girl-next-door-type anymore. Now, she looked like she belonged on the silver screen, in a casino with James Bond or Danny Ocean.\n\nAnnie wore a red dress and red pumps. The outfit was new and more daring than anything she used to own in the past. Annie was naturally quite ginger already but she liked to dye her hair to enhance the effect. Recently, she'd changed to a much bolder shade of red.\n\nIt all screamed \"fuck me,\" to Ryan, and he would, but the date was surprisingly nice, too. It was one of the best dates Ryan had even been on. Their relationship felt completely real now. It was getting easy for him to believe her when Annie said she wanted to be with him, curse or no curse. The curse was the root cause, of course, but things had evolved beyond that now.\n\nAnd, despite the way she carried herself now, Annie was still a total sweetheart, deep down. She was still kind and caring. The change in her wasn't arrogance, it was just confidence. Being with Ryan had set her free from doubt.\n\nRyan was happy, too. With the way Stacy had entered his harem, he'd forgotten what a positive force Annie was, too. He loved watching her smile as she talked. He loved the way she saw the world. There was also some practical value in hearing all her gossip about the other girls without them being in the same room.\n\nTheir table was in a quiet and private corner so Annie had no qualms about it when Ryan kissed her after the dessert. They made out like teenagers, like lovers. The waitress came by with their check but Annie wasn't embarrassed at all. She kept kissing Ryan while he tossed a credit card at the waitress, not even bothering to check her out.\n\nEleftheria was also somewhere nearby, just in case, but for a literal Angel, she was surprisingly good at being inconspicuous when she wanted to.\n\nThings got hot and heavy but Ryan knew in his heart Annie wasn't the kind of girl who would truly appreciate getting fucked in public. She would've let him do it, gladly, but tonight was her night.\n\n\"You want to skip the movie, or not?\" Ryan said.\n\nAnnie sighed contently. \"No. We can always fuck, but tonight is my only chance to do all this other stuff, too. Sorry.\"\n\n\"No. Never be sorry. Tonight is totally your night. And even when it isn't, you can still get whatever you want. You deserve it. All of it. You're the boss with me. Don't ever be sorry about that.\"\n\nAnnie smiled. \"You're just saying that because you know I only want what you want.\"\n\n\"We're at an impasse, then, if we both just want what the other one wants.\"\n\n\"Man up. Take charge,\" Annie said.\n\n\"Okay. Movies it is. Something girly and emotional, I insist,\" Ryan said.\n\nThey spent most of the movie making out, in the relative darkness of the theater.\n\n\"You missed half the movie,\" Ryan said, in the hallway, after the movie was over.\n\n\"It was so worth it, and more,\" Annie said.\n\nThey gazed into each other's eyes and shared another deep kiss. Neither of them gave a fuck about the awkward glances their sappiness earned from some random bystanders.\n\nEleftheria was among them. She basked in the bittersweet pain she was feeling. Emotions were still new to her, but somehow, she already knew how to torture herself with them. She wanted to be the one in Ryan's arms and it felt somehow right for her to deny herself that joy. The wait would make the reward so much sweeter.\n\nEleftheria's weakness came dangerously close to disturbing her focus. She let her fantasies recede and concentrated on observing the surroundings again.\n\nAfter the dinner and the movie with Ryan, Annie was ridiculously horny. She was horny all the time, but something about the wholesome evening had really pushed her desire to a new level.\n\nLuckily, they had a car now, and Ellie was their driver. Annie couldn't have cared less. Her body was on autopilot and she would have made love to Ryan in the backseat of that car even if it had been just a taxi.\n\nShe let his cock slide inside her, under her red dress. Her breasts fell out, gently cupped by her garments. The energy was on full blast, but somehow, it had love in it. It wasn't just a tool for knocking out women and taking advantage of them. It was a rising tide of emotions, all emotions. Annie felt love, and devotion, and lust.\n\nThe world had completely disappeared for her. The was no car, no traffic. There was just a man and a cock. The cock filled her body and the man filled her soul.\n\nRyan was completely focused on her, too. Ellie stole little glances at them through the mirror. Annie didn't care about orgasms, or even the magic cum. She wasn't counting. She just enjoyed being in love. They moved in unison, at their own, excruciatingly slow pace, completely isolated from the frantic rhythms of the busy city around them.\n\nWhen they arrived at home, Ryan carried Annie into their apartment and into their bed. They made love all through the night, and into the morning. At some point other girls started joining them and Annie was glad to love them all.\n\n---\n\n\"Shut the fuck up, bitch. It's my night, so I get to decide, and I say we fuck,\" Remy said.\n\n\"Whatever. We fuck all the time anyway, but you're right, it's your call,\" Ryan said.\n\n\"You. Me. Bedroom. Your dick in my ass. Just the two of us. You go hard. Quality time,\" Remy said.\n\nIt came as a shock to Ryan to realize how rarely he ever fucked anyone one on one, anymore. He hadn't even noticed how routine group sex had become for him. \"Fair enough,\" he said.\n\nRemy grabbed him by the arm, quite roughly, and took him to the bedroom.\n\nThe tall and slim tattoo artist was almost naked already, and all lubed up under her buttplug, so all she had to do was bend over the edge of the bed and pull the plug out. \"Go,\" she said.\n\n\"This isn't very romantic, you know?\" Ryan said, as he pushed his big cock into her openly waiting asshole.\n\nRemy didn't even answer, but once Ryan got up to speed, the atmosphere changed. The more Remy moved and moaned under him, pretending to struggle against him, the harder he wanted to fuck her.\n\n\"Be relentless. I want you to fuck my ass for as long as you can. Destroy me. I want to feel it for days,\" Remy said.\n\n\"This is starting to sound like a punishment,\" Ryan grunted.\n\n\"So what? It's my date. You need to do what I say,\" Remy said.\n\nRyan kept a relentless, even pace, for who knows how long, ramming her ass with his superhuman endurance. He never got the sense that Remy was actually looking for a punishment, though. Something about the hard, endless pounding was deeply satisfying for her.\n\nIf some people love to run marathons, then why not this? Ryan thought. It's not like he wasn't into it himself, too. He really got to luxuriate in how her well-trained hole accommodated him.\n\nRemy's purple mane was still the nicest head of hair to pull in his whole harem. It was as if it was made for that. Much of what Remy said and did was designed to provoke. Ryan was glad he was the one on the receiving end of all that provocation these days and he got the sense that Remy was very happy to have him, too. He let his girl have what she wanted, and rode her ass without mercy.\n\nThere was no end to Ryan's power. Because of the magic, he could literally have gone forever. It was Remy whose body gave out first. She went from enthusiastic to ecstatic, and then from grimly determined to barely hanging on. Ryan was sure she would have said so if she'd wanted him to stop.\n\nAs soon as Ryan realized there was no limit to his endurance, he reveled in that knowledge. The realization spurred him on and lifted him to an even higher level of enthusiasm.\n\nToward the end, Remy's discomfort was clearly evident on her face, but Ryan kept going. Like so many times before, he fucked her ass until she literally passed out. The difference was, this time, she passed out from pure physical exhaustion. It wasn't the magic that rendered her senseless. Her distended asshole was offering little resistance anymore.\n\nRyan came inside her and backed off. He took a long look at his crazy slave's gaping anus. It was in a sorry state, and he hoped this was really what she had wanted. He had to admit, the sight made him horny again, and a part of him wanted to go back in, do it all over again, and make doubly sure she would feel the consequences of what she had begged for.\n\nRyan would not be this excited about so completely dominating any other person. Remy, however, had been constantly pushing him to do it to her, ever since they first fucked. He knew her soul, he could see it whenever they fucked, so he knew her darker desires were real, and true.\n\nRyan was almost done with his shower by the time Remy limped in. He half wanted to laugh at her, half to beg for forgiveness. He split the difference and kept a neutral face. He was finally starting to get tired of always feeling sorry for everything.\n\nRemy said nothing but her actions spoke loudly. She had rarely been so tender with her hugs and kisses. She surrendered into his arms without a word and let Ryan wash her body all over, including her extremely tender tush. He was gentle, turning every touch into a caress.\n\nOnce they were out of the shower, watching TV, Remy was perched across Ryan's lap. She was face down and her ass was poking up, right under his face. Ryan was gently rubbing a bag of ice on it. He wasn't sure if it helped, but he felt like it was at least a nice gesture.\n\nLizzy, the precocious store clerk and Remy's best friend, was also home, but she had given them some space. Remy sighed a satisfied sigh.\n\n\"Help me understand,\" Ryan said.\n\n\"Thank you. That's such a nice thing to say, instead of just 'I'm sorry' all the time,\" she said. \"It's okay for you to like it, too, you know.\"\n\n\"With you, maybe, but I don't want to be like that all the time. But with you? Yeah. Maybe I do get a kick out of it. And, technically, I'm taking advantage of you, I know. But help me understand there's more to it than that.\"\n\n\"I can see why she likes you now,\" Remy said. She was referring to Lizzy's newfound interest in Ryan as a person. \"Our little Master is growing up. I like it, too.\"\n\n\"So, tell me what's in it for you, and maybe next time I'll go even harder.\"\n\n\"It's not about that. Well, not just about that. It's about power, I think. I like it when you feel powerful. I don't know why, but it just makes me feel good.\"\n\n\"It makes you feel safe, right?\" Lizzy said. She'd crept right up to them.\n\n\"Yes,\" Remy said.\n\nLizzy got right up close to Remy's face. She was almost kissing her. She caressed her cheek.\n\n\"The more powerful he is, the weaker it allows us to be. The more strength he shows, the safer we feel. When we feel like he has the power to do whatever he wants to us, the only thing we can do is to trust him,\" Lizzy said.\n\n\"Yes,\" Remy said. \"That's right. It makes me trust you.\"\n\n\"You know what that means, right?\" Lizzy said to Ryan. \"It's completely up to you where you draw the line. If you go too far, make sure it's just by a little bit. We are completely at your mercy, all of us.\"\n\n\"Not in life in general, thank the heavens, but I know what you mean,\" Ryan said. \"I feel it, too, during sex. None of you have ever said no to me, about anything. I do realize that.\"\n\n\"We don't want to,\" Lizzy said. She caressed Remy's cheek again.\n\n\"You're a super strong bad-ass, aren't you? People don't mess with you,\" Lizzy said, to Remy.\n\nRemy smiled. \"You know it, bitch. You ever want someone beaten up, I'm your girl. Always.\"\n\n\"But with him, you want to be weak,\" Lizzy said.\n\n\"That's right,\" Remy said, her eyes lighting up in realization. \"If you want me to beat him up I will try, but in my fantasies that fight would always end up with my ass about as sore as it is now.\" She laughed, but then winced, and clenched said sore butt. Lizzy laughed, too, and then kissed gave Remy a gentle kiss.\n\n\"So, take a lesson from the history books,\" Lizzy said, to Ryan. \"You are the conquering hero. Us poor girls, we can only surrender. So when you have your way with us, make sure to show us what a powerful man we belong to now.\"\n\n\"That's a bit sexist, but I like it. In the bedroom only, of course,\" Ryan said.\n\n\"Fuck bedrooms. Take me anywhere,\" Remy said. \"We're not scaring you with too much girl talk again, are we?\"",
        "\"No. Not at all. I asked. Thank you,\" Ryan said.\n\n\"So, does that mean you'll go even harder, next time? I think the energy helps my ass recover pretty fast,\" Remy said.\n\n\"No. It's boring if we do the same thing over and over. You need to come up with something new and different for our next date,\" Ryan said.\n\nRemy shivered. \"Oh fuck. You don't know what you've done to me. This is going to get my imagination going. I won't be able to stop thinking about it.\"\n\nRyan groped her tender butt cheek, still bright red from many a slap. \"Good,\" he said.\n\n---\n\n\"Why, exactly, would you want to go on a date with Ryan?\" Remy asked.\n\n\"It's not a date,\" Eleftheria said. \"It's a meeting. We have important things to discuss. It would do us good to have a few uninterrupted hours to go though things. Boring, tedious things, without Ryan's little mind being constantly distracted by all this naked temptation.\"\n\n\"Okay. Whatever,\" Remy said.\n\n\"Good. Everybody out,\" Ellie said.\n\n\"What?\"\n\n\"I want to have my date here, so everyone has to leave. Go clubbing, or whatever it is that you do,\" Ellie said.\n\n\"That's an option? Fuck. I need to do that next time. I didn't know we can just throw the others out,\" Remy said.\n\nEllie herded all the naked women into some clothes, and then out the door.\n\n\"You know they all suspect something, right? You're slipping,\" Ryan said, once they were alone.\n\nEllie came up to him and kissed him. She blushed and moaned. \"Mm. That's so good. You have no idea what you're doing to me.\"\n\n\"I think there are things we really need to talk about, first,\" Ryan said.\n\nEllie kept kissing him in different spots, all over his face.\n\n\"You could have stopped Stacy but you didn't. Now, there's Hannah. Even Natalia knows our secret. Are you doing this? Are you sneaking more women into my life?\" Even though Ryan's memories were still blocked, his heart and his instincts were telling him that Ellie had changed. He feared it was the curse, warping her angelic mind as it did for the humans.\n\n\"Now that you revealed to me the ones your heart desires, what if I will?\" Ellie said.\n\n\"No. That's not up to you,\" Ryan said.\n\n\"Prove me you can recruit on your own and I won't have to meddle.\"\n\n\"Recruit? Is that what it is now?\"\n\n\"Why not? A police officer, for example, could be a useful tool for us,\" Ellie said.\n\nRyan knew exactly who she was referring to, and he was sure Ellie knew all about how interested Ryan was in Candice Emerson, at least on the surface, but he would not let her see him react to her insinuations. This wasn't the first time they'd had this conversation but Ellie had never been this forward about it before. Usually, she just insinuated, as if she might be just joking or teasing.\n\n\"They're not tools, they're people. And you're one of them. Are you just a tool?\"\n\n\"I am, if you want me to be.\"\n\nRyan pushed her off.\n\nEllie smiled. \"Relax. I know you love your slaves. That's why I'm not worried. I know whoever you take will be all the better for it.\"\n\n\"Like Claudia?\" Ryan said.\n\n\"I know her. She will come back as soon as you ask it of her.\"\n\n\"I very much doubt that,\" Ryan said.\n\n\"Give it time, My Love. If you wait for too long she might just come back on her own, but I would prefer it if you took an active stance and made it happen of your own will.\"\n\n\"And by 'on her own,' you mean you would somehow trick her into it?\"\n\n\"Just say the word,\" Ellie said.\n\n\"No,\" Ryan said. He sighed. \"How well do you understand human morality? I mean, you have to understand us pretty well, right? You just choose to ignore it.\"\n\n\"I know your kind a lot better than you know yourselves,\" Ellie said.\n\n\"Then why do you insist on being so... evil? That's not a very angelic thing to do.\"\n\n\"I'm a Fallen Angel, and I've fallen for you, my Love. You are my absolute. Trust me to always do what's best for you, even when you don't see it.\"\n\n\"I hope you see it would be best to stay away from Claudia. She's been through enough. You shouldn't mess with her. It's her right to stay away.\"\n\n\"You're wrong in your reasoning but I agree with your choice. For now,\" Ellie said.\n\n\"You know, for someone so desperate to get fucked, you're really bad at putting on the charm,\" Ryan said.\n\nEllie smiled. She stood even taller and let her gown drop, revealing all of her angelic grace once more. Fuck me, that's a good point, Ryan had to admit.\n\n\"Please, touch me,\" Ellie said.\n\nRyan did. Her exalted body quivered under his fingers as he let the accursed energy flow into the heavenly Angel's oh so earthly flesh. Ryan could barely wait a minute before he had to push her down and fuck her. With all the sneaking around, it still felt new and exciting. It was marvelous to get to openly mount her, and just let her have it.\n\nHe took her from behind, right in the middle of the living room floor, and reveled in how he owned her now.\n\nAfter a decent while of good fucking he came all over her, but he had no intention or need to stop. He carried her to the bedroom -- she was heavier than a human would be, but Ryan had the strength for her now -- and they kept going, losing track of time. Ellie didn't sweat, but soon, she was gleaming with Ryan's perspiration.\n\nBeing with her in this room reminded Ryan of the flashes he sometimes saw, of Ellie being with him, even before she became his. Like the ones he'd seen when he first touched her in Germany.\n\n\"Have you ever messed with my mind? Changed my memories, or something?\" he said.\n\nEllie's pussy gripped him harder. She frowned and squeezed her eyes shut. \"Yes,\" she whispered, after an uncharacteristic moment of hesitation.\n\n\"Why,\" Ryan said, altering his speed inside her.\n\n\"For you. All for you. I have failed. I'm sorry. There's a conversation we need to have. Something I need to tell you. I've failed, in the past. But next time I will do it right, and then I'll show you all my previous failures, and you can punish me.\"\n\n\"You know, for such an arrogant angel, you have very low self esteem, don't you?\"\n\n\"I don't mind. I have a good Master now. He will fix me when he feels the time is right.\"\n\n\"Oh yeah? Is your Master a good fuck?\" Ryan said.\n\n\"The best. He could make an Angel cum like a whore.\"\n\n\"Why can't you be both?\"\n\nEllie looked him in the eye. \"For him? Yes.\" Then she did it, she came like a whore. Ryan fucked her harder and fingered her clit, to make her orgasm last.\n\nEllie grabbed his wrist and squeezed it with her unnatural strength, but the curse protected Ryan. There would be no limits with Eleftheria. She was indestructible. But, ironically, Ryan wanted to treat her softly. Whatever drove Remy, Ellie was not like that. Ellie, deep down, was more like Annie or Erica, despite her diamond-hard outer shell. Somewhere deep down, the Fallen Angel Eleftheria the Rogue was completely vulnerable.\n\nRyan fucked her heavenly body hard, but lovingly. He squeezed her big breasts as hard as he could, knowing it would still feel nice and gentle to her. He could never hurt her like Claus had -- literally, physically, he did not have the capacity to leave a mark on her immaculate form.\n\nThe magic gave Ryan superhuman powers but he was still just a man, so he had taken to the habit of taking little breaks every now and then. If nothing else, he needed water. If he got too dehydrated he would pay for it later. When he was fucking a big group, one of the girls could go get water for him. Ryan had even eaten while fucking a few times. But now, one on one, he had to pop into the kitchen himself.\n\nEleftheria was lying on the bed when he got back, stretched long, cocking her hip. It was a sight Ryan had dreamed of seeing for so long. Her pose was obviously purposeful, and for his benefit. Ryan took a sip and put his glass on top of his drawer, where Ellie used to lounge, all that time ago.\n\nShe rolled around on the bed, accentuating parts of her body to him. \"When will you take my ass, Master?\" the Angel said. As it just happened, Ryan was getting a good view of her perfect little rosebud at that very moment. The thought of spreading it wide open made him rock hard again.\n\n\"I don't even know why, but it feels wrong. Because you're... you know, you,\" Ryan said.\n\n\"An Angel? You think you will earn the Wrath of the Heavens if you sodomize one their envoys? Remember, I've fallen. They don't care. I'm yours to do with, ass you please.\"\n\nRyan snorted into his glass. \"Did you just make butt sex joke?\" he said.\n\n\"Ass you can see, my ass-sets are quite ass-tonishing. Feel free to ass-certain their quality for yourself.\"\n\n\"What's in it for you? Do you even care?\" Ryan said.\n\n\"I'm an Angel. I have no other use for my bodily cavities. I don't eat, I don't breathe, and I most certainly don't excrete any kind of waste. As far as I can tell, the only reason there even are any holes on my body is purely for my Master's pleasure -- for you and that that big cock of yours.\"\n\nRyan blushed. I had been a while since dirty talk had worked so well on him.\n\n\"I can even adjust, to a certain extent, to accommodate any special wishes you might have,\" Ellie said.\n\n\"What does that mean?\" Ryan said, eyes wide, as he joined her in bed.\n\n\"What kind of an ass do you prefer?\"\n\n\"Tight, of course, but not too tight. Elastic and strong, so that it holds it's grip.\"\n\n\"What else?\"\n\n\"Can you make it wet? Like your pussy? But just a little bit. Like, naturally lubed.\"\n\n\"One unusually elastic, naturally lubricated Angel ass, coming right up,\" Ellie giggled.\n\n\"Why are you talking weird? Or, weird for you. Which means, normally, I guess,\" Ryan said.\n\n\"I'm afraid you're making me more human, in some ways. I have all kinds of emotions now. I'm not as calculated as I used to be. I fear it might cause me to make mistakes, but the fear is also exciting.\"\n\nRyan smiled. \"I know exactly what you mean. But how about that ass?\"\n\n\"Here it is,\" Ellie said, and got on all fours, face down, ass up. She was very limber, and made full use of her flexibility, arching her back almost ninety degrees.\n\nRyan pushed a finger into her butt, and then another. His heart beat faster. It was exactly how he had dreamed. He pushed his cock against it, teasing it. Ellie gasped and her anus pulsated under his advances. He let the tip of his penis sink inside.\n\nThere's more to sex than just pegging a hole, Ryan knew, but physically, this was the was the most gorgeous place he had ever put his dick into. Ellie's gourmet ass was tight, elastic, and gripping, and just slippery enough. Some inhuman muscles inside even gave it a ribbed feel as she actively massaged his cock with them.\n\n\"Oh fuck,\" Ryan gasped. He was having an unusually tough time keeping himself from coming too soon.\n\nEllie twisted and moaned under him.\n\n\"Can you make it so that you really love it, too? You don't need to just act,\" Ryan said.\n\n\"Already. Doing. Opposite. Trying to. Hold back,\" the Angel panted.\n\nIt was good enough for Ryan. He decided to ride that ass as hard as he could before it made him cum. Ryan had another go, and then another, increasing the the amount of cum spread all over her in between.\n\nEllie had condemned her pussy to fairly little use from now on, but knowing her, she'd probably done it on purpose.\n\nFor once in his recent life, Ryan was getting tired. He had found his match in bed. He could sense Ellie's magical potency was much greater than his. Ellie was just getting started, as far as expending any energy on keeping up with him. It was the total opposite of all the other girls.\n\nInside, Eleftheria was at the peak of her happiness. It was the first time she felt like she'd managed to offer her Master something he truly appreciated. Not that she minded. The way Ryan was oblivious to most of the things she could offer him was one of the many things she loved about him.\n\nRight now, Ellie could hear someone outside in the hallway, digging keys out of her purse. She knew exactly who it was, based on the rhythm of her individual heartbeat.\n\nEllie rolled Ryan around, onto his back, and sat down to ride him. She let his perfect cock sink back into her ass, the ass she had made for him, and only for him. She took him balls deep and let her wings loose. Ryan's cock pulsed insider her and gave her another small orgasm. She started pumping at a medium pace, letting her wings gently sway with her motion.\n\nAs Ellie had predicted, the newcomer came to the bedroom door and peeked in. The spy saw them from behind, Ellie with her wings out and Ryan sodomizing her. When Ellie could hear the newcomer's heart beat faster, hers did the same. My heart, Ellie thought. Another one of those things I don't need, other than to give to my Master.\n\nThe newcomer skulked into the girls' room. Ellie made Ryan cum inside her one more time. Then she tucked him in and let him sleep.\n\nOn the other side of the wall, Lizzy was alone in the dark room. Her mind was racing.\n\nRyan fucking Ellie was not such a big deal, other than the fact that she was an actual angel, whatever that meant. The girls had an ongoing joke about them hooking up. If they were guys, they'd have a betting pool going. Lizzy's own over-under would have been in the future, though. That did not look like a first time.\n\nNo, the big deal what that Ellie had let her see them. That had to have been on purpose, and that was potentially bad. Lizzy had no idea what she was supposed to do with this revelation. Was it a test? Should she tell, or not tell, and to whom?\n\nThe door opened. Ellie stepped in. She was still naked, but at least she'd hidden her wings again. She came right to Lizzy. She grabbed her by the throat but it was the most gentle choke she'd ever been in, if such a thing existed.\n\nEllie lifted her up against the wall. Lizzy could smell Ryan all over the terrifying, supernatural creature's skin.\n\nLizzy felt relatively safe, for some reason. She remembered what she had said to Ryan about trusting someone stronger than yourself. This was the same thing. When someone else is so much more powerful than you, all you can do is either fear them or trust them.\n\nEleftheria the Rogue leaned in close, close enough to kiss her. Lizzy could see her blue eyes shine in the darkness.\n\n\"You saw me with our Love,\" Ellie said.\n\n\"You wanted me to see,\" Lizzy said.\n\n\"How did it feel?\" Ellie said.\n\n\"Inevitable,\" Lizzy said.\n\nEllie kissed her. The kiss was hesitant but tender. Lizzy could taste Ryan on her lips. \"I've never done that before. Kissed one of you. One of us,\" Ellie said.\n\n\"The energy flows through people. Once you kiss someone and feel Ryan though it, you will learn to love it,\" Lizzy said.\n\nEllie smiled. Lizzy caressed the inhumanly strong arm that was still gently squeezing her neck. She was on the tips of her toes.\n\nEllie frowned and let go. \"I'm sorry. I didn't mean to... I don't know why I did that,\" she said.\n\n\"I do,\" Lizzy said. \"It's because you're strong, and you like to be in control. And now, he is. If you need someone to take it out on, I suggest Remy, rather than me. She's good at that.\"\n\n\"What? No,\" Ellie said. She sighed. Then she gave Lizzy a hug. It was a perfectly normal, human hug, and Lizzy was more confused than ever.\n\n\"I don't want to be above you anymore. I don't need a slave. I think I need a friend,\" Ellie whispered. \"But not someone who's just there for me, no matter what,\" Ellie continued. \"I need the kind of friend who will call me out on bullshit, and always tells me the truth. That's you.\"\n\nLizzy could not lie. \"That's me. Yes,\" she said.\n\n\"I will tell you everything, and then you will judge me,\" Ellie said.\n\nAnd she did. She confessed everything, even the things Ryan did not know. It took a while and other girls started to get back home, too, but no one bothered them. Everyone else went straight to Ryan.\n\nEllie told Lizzy how she had marked Ryan as soon as she met him, and how she had told him about it a few times, including in Germany, and how she had made him forget. She told her about her plans for Ryan. She even told her a little bit about some of the dangers they might soon face. And she told her about her weakness.\n\n\"... and that is why I had to let you catch me. I had to let you see me, so that I would have to tell you everything,\" she concluded. Ellie went to her knees and cast her eyes down.\n\nLizzy took a moment to let the whole convoluted story sink in. \"And what do you want from me, exactly?\" she said.\n\n\"Judge me,\" Ellie said.\n\n\"Will you wipe my memory if I say the wrong thing?\" Lizzy said.\n\n\"Should I? I don't know. When I was an Angel I was always right. I never had to doubt myself. Now, I doubt everything. All my choices might be wrong. But it doesn't matter: I will remember your words even if you don't. Please, judge my actions.\"\n\nLizzy put her hand on the naked angel's head, carefully. Then she got on her knees, too, and hugged her.\n\n\"You're not right or wrong. No one is. And you never were. Even when you were an Angel, you weren't always right. You just felt like you were,\" Lizzy whispered. \"It's good that you doubt yourself. It will make you make better choices. Your weakness will become wisdom. You know that, right? You've seen arrogant people fall.\"\n\nEllie was literally hot in Lizzy's arms. She had to be several degrees warmer than a human.\n\n\"I forgive you,\" Lizzy continued. \"I judge that you've done well enough. But as for Ryan, you're not right or wrong. There is no right or wrong. That's why you feel lost. If you choose to push Ryan then that's your choice and you have to live with it. What I would do is to just let him grow on his own and see who he wants to be. If you really want to love him then I believe you should let him make his own choices. Just support him, no matter what.\"\n\n\"I don't know if I can be that weak,\" Ellie said.\n\n\"It's love,\" Lizzy said. \"It's not supposed to be fair.\"\n\nEllie kissed her again. \"Thank you,\" she said.\n\n\"Are you going to zap me?\" Lizzy said.\n\n\"No. I think I'm beginning to love you, too. I think I'm done with zapping. The next time I tell Ryan the truth will be the last time. Come what may. Can you keep my secret, until then?\" Ellie said.\n\n\"Yes, yes I can,\" Lizzy said. She felt like it was safe to leave now so she got up. Then a thought occurred to her. \"Ellie, where's your dress?\" she said.\n\nEleftheria gasped. She shot up to rush out of the room but Lizzy stopped her. \"Don't worry. I'll go get it for you. Where is it?\" Lizzy said.\n\nThe dress was in the living room, not the bedroom, and pretty inconspicuous, so Lizzy doubted anyone had paid any attention to it. And even if they had, they would have just presumed Ellie had put on a disguise and headed out.\n\n\"You see? How can I make mistakes like this? My weakness will ruin me,\" Ellie said, when Lizzy got back to her.\n\n\"No, it won't. I know you hate making mistakes but you need to get over it. You can't just stop because things get messy. Real strength is when you keep going, even if you're afraid and you're unsure, and you make mistakes,\" Lizzy said.\n\nEllie kissed her again, this time, harder and deeper than before. It felt like a real kiss now, and not just a test.\n\n\"Are you going to Ryan?\" Ellie said.\n\n\"Yes,\" Lizzy said.\n\n\"I wish I could join you. Maybe soon, I can,\" Ellie said, and kissed Lizzy one last time, before letting her go.\n\nRyan had to fuck Lizzy particularly long and hard before she got over the shock of everything she had learned that night.\n\n---\n\n\"No,\" Erica said. The petite blonde, a librarian transformed into a cult of one, kept her eyes down despite her adamant tone.\n\n\"What do you mean, no?\" Ryan said.\n\n\"I can't go on a date with you,\" she said.\n\n\"Why not?\"\n\nErica scoffed. \"You're Ryan. You're my hero. You're my Master. I live to serve you. I could cook you dinner but I wouldn't eat it with you. I can't let you take me on a date like a normal person. It's not right.\"",
        "\"Well, I'm not going to let you worship me this whole time, so just forget about that. I order you to tell me what you want to do, other than groveling, or sex.\"\n\n\"I need a few books from the library,\" Erica said, after thinking about it. \"If we really have to go out, would that be enough?\"\n\n\"Yes. Absolutely. You would have to wear some clothes, though.\"\n\n\"I know. I'm sorry,\" Erica said.\n\n\"For the last time, I'm not asking you to be naked all the time. You can wear whatever you want.\"\n\n\"That doesn't make any sense,\" she said.\n\n\"What?\"\n\n\"You saying I can wear whatever I want, but then saying I can't be naked,\" Erica said, grinning.\n\nRyan had to admit it. Even if she was completely crazy, she was pretty clever, too.\n\nErica absolutely refused to wear any underwear, saying no one would see it. With one of her old skirts and cardigans, and her glasses, she did look like the hot librarian she had once been again.\n\nShe stopped at the door.\n\n\"What?\" Ryan said.\n\n\"Could I get one of those collars? Like Remy has? I don't want to wear it all the time but I think I'd like one now.\"\n\nRyan wanted to ask her why but he'd spent so much time telling her to be more independent he didn't want to question her when, for once, she actually asked for something. \"Of course,\" he said.\n\nHer outfit complete, they headed out. Ellie acted as their chauffeur and bodyguard. The ride was awkward. Ryan didn't really know how to have a normal conversation with Erica at the best of times. She seldom wore her glasses at home so she even looked different now.\n\nAt the library, though, she cheered up and started to chat about the research. They wandered around, gathering the needed materials, and then headed for a private room.\n\n\"I didn't know there were reading rooms here,\" Ryan said. If I'd used one of these that day, you might never have touched me, he thought. Ryan wasn't as far along, relationship-wise, with Erica as he was with some of the earlier girls. He did like her, though, and despite her special brand of crazy, he was glad to have her. He was ambivalent about the whole worship thing, but beneath that, Erica was a kind person.\n\n\"An employee benefit. Even though I work for you now, I still have the hookup here,\" Erica said.\n\nAs soon as she had closed the door to the small private reading room, Erica started to take her clothes off. Ryan wasn't sure what she was up to but he let her continue, to see where she was going with this. He would have preferred her to stop with the stockings and heels but Erica took it all off. She left on only the collar and her glasses. She folded her clothes into a neat pile and then sat down and opened a book.\n\n\"Is this really what you always do? You're naked, even when I'm not around?\" Ryan asked, after a few minutes.\n\n\"Yes.\"\n\n\"Why?\" he said.\n\n\"I always imagine you watching over my shoulder as I read. Usually it helps me focus, but I have to admit it's a little hard now that you're really here.\"\n\n\"So, you're really doing it for your own benefit?\" Ryan said.\n\n\"In your honor, but yes. It makes me feel better about myself to be naked, just because I know you're... somewhere. Maybe with me, in my heart, or something.\"\n\nRyan watched the petite, naked blonde read her book for a moment more. \"Toss me one. I may be your... hero, but I used to do this for a living. I can help you.\"\n\nErica smiled and opened a book for him. They studied in silence.\n\nIt was the least awkward Ryan had felt around Erica, even though she was naked in a quasi-public place. Somehow, it was starting to make sense to Ryan that she would want to live like this -- like a hot, submissive, nudist nun.\n\n\"Ellie has really gone soft, hasn't she?\" Erica suddenly said, seemingly out of nowhere.\n\n\"You know she can probably hear us, right?\" Ryan said.\n\n\"That's what I mean. I know exactly who she is, better than any of you, but I'm not afraid of her anymore. You really have tamed her, haven't you?\" Erica said.\n\n\"What's that supposed to mean?\" Ryan said.\n\n\"Nothing. I'm just saying, it's really hot. Some women like a man who can care for a dog. It really turns me on when a man can handle a pet Angel.\"\n\n\"There's nothing going on if that's what you're implying. I think she's really just sorry for lying to us and she's trying to make up for it. I think she's being nice to all of us, and not just me,\" Ryan said. He hoped he wasn't being too defensive. He half expected Ellie to burst in through the door.\n\nCome to think of it, he'd not seen Ellie and Erica argue in a long time. If anything, the few glances Ryan had seen Ellie cast at Erica recently had been friendly. \"Have you talked to her?\" he said.\n\n\"What? No. It's definitely not my place. One of these days I'm going to have to do a presentation for you on Eleftheria the Rogue, and Angels in general. I'm not sure you really understand what you have there. That could be a nuclear-bomb-type weapon you're playing with there.\"\n\n\"What makes you so sure I have any power over her?\" Ryan said.\n\n\"You're my Hero. I have faith,\" Erica said.\n\nA few minutes later, she continued. \"I can't believe that I'm saying this, but if you really are fucking her -- or will, in the future -- I can keep a secret. And I don't even care why it's a secret. I'd keep it.\"\n\n\"Well, good to know,\" Ryan said.\n\nThey spent a few hours reading, both completely comfortable in the seemingly strange situation.\n\n\"Hey, wanna fuck?\" Erica said.\n\nRyan blinked. \"Sure. This is what I want. I really appreciate you taking some initiative.\"\n\n\"I'm sorry,\" she said. \"It's just, I used to work here so I kind of have this fantasy of having sex here, especially with you.\"\n\n\"Fucking a hot librarian? Yes. But I want something, too. If we're going to do this, we're going to do it properly. Put your clothes back on. Get in character.\"\n\nErica smiled. \"Like your poker games?\" she said.\n\n\"Someone told you about that?\" Ryan said.\n\nErica bit her lip. \"Actually, it was Claudia. I asked her about the plug so she told me the story.\"\n\nHearing her name did not hurt Ryan as much anymore. He was not mad about losing her. He just wished he could have apologized properly. He could still go to her. He knew where she worked. But he knew that would be a horrible idea. It would be a violation of Claudia's wishes if he ever even stepped into the same room with her. And a phone call seemed too little.\n\n\"I'm sorry,\" Erica said.\n\n\"No. It's fine. You can talk about her. I wish her all the best. It's my fault, what happened.\"\n\n\"No! It's not. Sorry,\" Erica said.\n\n\"Come on. Put your clothes on and go shelve those books,\" Ryan said.\n\nErica smiled and started dressing.\n\nThe cavernous main hall of the underground library was empty of people. It seems even occultists have social lives.\n\nErica pushed her little cart around, putting all of the books back into their proper places. Ryan followed her from afar. He marveled at her delicate legs in their silky stockings. The heels she wore now were too much for a real librarian, but that suited Ryan's fantasy just fine.\n\nWhen Erica climbed too high on a ladder and bent down deep to reach a shelve she could have reached from the ground, Ryan understood the signal. He sneaked up to her and pushed his face right up her skirt. He grabbed her thighs and breathed in her scent. Erica gave a gentle gasp and made a show of very slight resistance.\n\n\"Please, sir. People might see,\" she whispered.\n\n\"Let them, slut. It makes you horny, doesn't it.\"\n\nErica moaned louder when she felt his tongue.\n\n\"It's a library. You have to keep quiet,\" Ryan said. \"Why are you wearing no panties? Are you something anyone can check out?\"\n\n\"This one is reserved, only for you,\" she said.\n\n\"It better be good, then,\" Ryan said.\n\nErica fell into his arms, letting him lower her to the floor. She dug out his cock. \"You better believe I'm good,\" she said, and took the grotesque monster deep into her delicate throat.\n\nShe had learned fast, and it was a wonder. Ryan could not deny it was a special treat to see her petite body accommodate him, all around. There was a certain sense of spectacle to jamming a big cock into a small woman, no matter what the hole.\n\nRyan spun her around and sunk himself into her wet pussy next. He pulled her shirt open and groped her tits while he took her from behind.\n\n\"I love a full service library,\" he hissed, not sure if Erica cared about the banter anymore.\n\n\"Anything for our best VIP. Anything,\" she said.\n\nRyan knew she was talking about her ass but she wasn't quite well trained enough, yet. They could do it at home, but not here, with only natural lube. Besides, her pussy was amazing. It flexed and stretched under his pushes. It was plenty enough, for now. Erica kept her voice down but her moans still echoed in the cavernous halls.\n\nThey heard a noise from somewhere and stopped. They could hear voices in the distance. The sounds faded off. Ryan built his speed back up.\n\n\"Do you want more, whore?\" Ryan said.\n\n\"Yes. Kiss me,\" she said.\n\nRyan pulled her up. He pushed her back against the shelves. He lifted one of her legs all the way over his shoulder and slammed his cock back into her tight pussy. She moaned into his mouth while he fucked her more.\n\nErica was usually the most passive of all his girls. She was the most likely to just lie back, look him in the eye, and surrender. There was a beautiful reverence in her eyes even now, and it was impossible to forget she literally worshiped him.\n\nThe curse was an emotional steamroller for all of Ryan's girls but most of them tried to delay the inevitable, and stay active, before the pleasure overwhelmed them. Erica was not like that. She often looked like she was already gone before Ryan even began. Getting her to play a little game like this was a nice change.\n\n\"A full service librarian like you deserves a special tip,\" Ryan said.\n\nErica knew her reward would involve her on her knees, whatever it was, so she dropped down.\n\nRyan shot his massive load all over her face, and her glasses. He watched on with rapt attention as she licked the glasses clean.\n\n\"You know, you could have let me swallow more,\" Erica said.\n\n\"I do. But this was role play. A naughty librarian needs cum on her glasses. You can get a proper drink at home, any time. Did you even like it, the game?\"\n\n\"Of course. I told you it was a fantasy of mine. Not to say my fantasy wasn't more about you and less about this place, but still. I liked it. It was different. Exciting.\"\n\n\"Glad to know you're still you in there, and not just a mindless zealot.\"\n\n\"Don't make fun of people's religion. It's not cool anymore,\" Erica said.\n\n\"Well, hide your little nun tits, at least until we get back to the car, and the we'll see what we'll come up with next. Do you still want to go somewhere else?\" Ryan said.\n\n\"Home, please. I've had enough of wearing clothes for one day.\"\n\nAll Kinds of Games\n\nLizzy still kept an emotional distance from Ryan. She didn't want to play girlfriend, like Annie did. Elizabeth was a loner by nature. She'd always been. Spending too much time around other people could often be taxing to her. Ryan, of course, was a huge exception to that. All the rules went out the window with him. Lizzy was still adjusting. She was slowly getting used to things being the way they were now.\n\nRyan knew not to worry. He'd seen enough, during sex, to know she was all in. She just didn't like the same things most girls did. Taking Lizzy on a dinner date would be pointless. She would probably not care so much about going out, or spending time together, she'd just see it a chance to eat because people need food to live. She had a point. They hung out all the time, anyway.\n\nIf something in particular was bothering her, Ryan was as clueless as ever. He was used to her being pensive.\n\nFor Ryan, most of the girls were friends, lovers, or worshipers, but Lizzy was more like a buddy. She was a young and beautiful brunette, more petite than most of Ryan's girls, but she had a fantastic ass, quite plump for her frame. Being friends with someone as hot as her would have been a problem otherwise, but since it was already a given that they would fuck almost every day, all those issues were conveniently moot.\n\nIt was easy for Ryan to see her as more of a dude when just hanging out, even if she was topless. They played PlayStation all the time and that's how Lizzy chose to spend a couple of her first dates, too. She didn't even throw the other girls out, she only wanted to get to pick the game and not be interrupted.\n\nImagine Ryan's surprise, when for her third date, she wanted to go shopping.\n\nEllie was their chauffeur but Ryan didn't read anything into the slight tension between her and Lizzy.\n\nIt all clicked when they finally reached their destination. It was, of course, a computer store, not some haughty boutique for clothes and shoes.\n\n\"You do know that PCs are much better than consoles, right?\" Lizzy said.\n\nRyan maybe did, a little bit.\n\nLizzy scoffed. \"The graphics are better, the games load faster, and the best PC games are just so much better than any of that casual console nonsense. If you can get good at some grand strategy, or some 4X, who knows, maybe it'll even make you smarter,\" she said.\n\nThere was a dizzying array of all kinds of boxes, big and small. Apparently, computers came in parts. Who knew. The end result was actually pretty similar to some of the other girls' shoe hauls. All the little boxes were just as expensive. Ryan was glad he didn't have to pay for it with his own money.\n\nHe had to admit it, though. Helping Lizzy put the thing together was interesting, and made for a completely different date from anyone else. The games did look better, too, but Ryan wasn't sure if he cared too much.\n\nEllie came up to Lizzy as she watched Ryan play with the new rig. He had a headset on so he wouldn't hear them talk. Ellie put her hand on Lizzy's shoulder. Lizzy flinched, and then wished she hadn't.\n\n\"Were you really willing to let him die, in Germany, even though you were already hooked?\" Lizzy whispered.\n\n\"Yes. I was on a singular mission. I didn't even consider it until we were already there, and then it was too late. Now, he is my mission, and I remain equally dedicated. I would do anything for him, and I don't mean that like you humans do. I would actually do anything,\" Ellie said.\n\nLizzy shivered. She was still not sure if Ellie was being intimidating on purpose or just clueless to the way she came across to the mere mortals. \"It's still not right. What if you switch again?\" Lizzy said.\n\n\"I will not, but I understand your worry. And I, too, now regret my past actions, even though my choices were sound at the time. I did everything right and I killed Claus. My plan worked perfectly. But I still hurt, because of my love for him,\" Ellie said, referring to Ryan.\n\n\"Do you insist on him being a great leader and amassing hundreds of followers?\" Lizzy said.\n\n\"No. But I fear it will happen, no matter what. There are fights ahead, ones we cannot avoid. We all will either live or die with him. I must admit I feel a certain sense of urgency because of that. But you're right. We have to let him grow at his own pace.\"\n\nLizzy watched on, in silent contemplation, as Ryan completely failed to understand any game more complex than a basic shooter.\n\n---\n\nMelinda insisted Ryan should go watch Hannah play soccer. This was her clever way of circumventing the date night limitations. Ryan could go alone and on his own time, and it would not count against Melinda's quota.\n\nIt was a hot summer day. The sun was beaming down from a clear blue sky. The soccer field was in the middle of a park, surrounded by trees. The was one dinky stand for the spectators. Dust rose from the dry pitch. Ryan waved to Hannah and she waved back. She wasn't thrilled to have him there. Despite the heat, Ryan wore long sleeves and gloves.\n\nHannah was good. She was a star forward, and looked impressive running the field. She scored right before half time. Ryan was sure her team would win the game.\n\nDuring the break Ryan had time to look around. A woman caught his eye. She was not in the stands, but further away, in the shade of the trees. She wore just a tank top and some small jean shorts in the heat, leaving lots of chocolate skin on show. She also wore a ball cap and large sun glasses but Ryan recognized the way she carried herself. More than anything, he could not mistake her extreme hourglass waistline. It was police officer Candice Emerson.\n\nShe was looking at the field, but also stealing glances at his direction. What were the chances she was there by coincidence? Ryan took a while to gather his courage. Then, the next time she looked over, he waved at her. She looked dejected, at first, but then waved back. She started making her way over.\n\nThe shape of her body was well on display. Gone was the general issue police blue. Her waist was ridiculously tiny compared to her strong hips. She was beautiful. The second half of the game was just starting.\n\n\"Good day, mister Dobbs,\" she said, as she sat next to him. Her skin was gleaming in the summer heat.\n\n\"Hello, officer. Here on business?\" Ryan said.\n\n\"I have a day off.\"\n\n\"You know someone on the team?\"\n\n\"Yes. Hannah Andrews. I saw her in your apartment, remember. Too bad she's an adult or I'd arrest you.\"\n\n\"What?\"\n\n\"Relax, it was a joke. Although, I am here to spy on you. There is no criminal case against you, but my informant is very insistent, and it did all make me very curious. So, I decided to spend some of my own time to check you out.\"\n\n\"Andy? Please tell him to stop creeping on my girls. You're a cop, and stalking is illegal, right?\"\n\n\"I can't comment on that. What's with the shirt and the gloves? Not hot enough for you?\"\n\n\"I... have a skin thing.\"\n\n\"Your skin looked just fine the last time I saw you naked.\"\n\n\"Thanks. Yours is nice, too.\"\n\n\"Whoa there, lover boy, I thought you only went after white girls, like Hannah there.\"\n\n\"What the fuck is that supposed to mean?\"\n\n\"Don't know. Why don't you tell me? What are you doing here?\"\n\n\"I'm dating her mother and she wants us to get along. What is your problem with that?\"\n\n\"How about the fact that her mother is supposed to be fine with your ten other 'girlfriends.'\"\n\nRyan didn't answer. He pretended he was watching the game.\n\n\"Come on. I saw you. You were so buried in naked women the last time, you couldn't even move, and Melinda Andrews wasn't even there. Why would she want you to stalk her daughter?\"\n\nRyan glanced around, to see if anyone was in hearing range, but the extreme weather had kept the crowds down.\n\n\"Hey. What's your problem? So our relationship isn't entirely conventional. So what? Melinda is a great mother so you just shut up about her. If you want to follow me around then go ahead, but if you start harassing my girls, I'm going to have to complain about you to someone,\" he said.\n\n\"Whoa. Easy there, tiger. We're just talking here. It's interesting though, that you call them 'your girls.' What exactly do you mean by that?\"\n\n\"Okay, you got me. I have seven girlfriends. Guess what? I fuck them. I have sex with all of them, sometimes at the same time, and we all love it. If you have a problem with that, I suggest you pull your head out of your nineteen-fifties and wake up to the modern world. People are allowed to have sex with other people. What's your problem? Are you not getting any on your own, so you have to snoop into other people's sex lives?\"\n\nCandice grabbed Ryan by the arm. \"Listen, asshole. Whatever you got over these women, I'm going to figure it out. And when I do, I'm going to save them from you. I'm not afraid of men like you.\"\n\nRyan could feel his sweat seeping through the shirt were Candice was grabbing him. He had no idea how the curse would behave in a situation like this. He was instinctively clamping down on the energy. \"Look... lady. I have no idea who you think I am, but I can promise you I'm not that guy. I'm not a pimp, or a player, or anything like that. I'm just a...\"",
        "The audience erupted and the ref blew the whistle. Someone had fouled Hannah so Ryan stood up to get a better view. Candice got up, too. The opponent got a straight red and Hannah was fine. People sat back down. The free kick was too far from goal to be really dangerous.\n\n\"Are you going to just stay there?\" Ryan said, after a while.\n\n\"I've got my eyes on you. I'm not going to let you forget that. Sooner or later, I will figure you out,\" Candice said.\n\nThe conversation was over but Candice stayed for the rest of the game. Hannah scored again. After the final whistle, Hannah saw them. She celebrated with her teammates, caught her breath, and toweled off. Then she made her way over.\n\nHannah looked suspicious, and maybe a bit peeved. \"You're the cop, right?\" she said. Candice just nodded.\n\n\"You're not...\" Hannah said, to Ryan. She raised and eyebrow and let the unsaid question hang in the air.\n\nRyan chortled. \"I most certainly am not. She's here to save the girls from me, once she figures me out,\" Ryan said.\n\nHannah and Ryan both laughed.\n\n\"Okay. What the fuck, seriously? Did you think he was, what? Hitting on me?\" Candice said.\n\n\"No. I just wanted to make sure he wasn't,\" Hannah said.\n\nCandice got up. She was angry at herself. \"If you ever need to talk to me in private, about anything, don't hesitate to call me,\" she said, and gave Hannah her card.\n\nHannah said down next to Ryan, but not too close, and they watched the cop walk off.\n\n\"She's going to be trouble, isn't she?\" Hannah said.\n\n\"So, you're what, on my side now?\" Ryan said.\n\n\"No. I'm on my mom's side. And if she's trouble for you, then she's trouble for us.\"\n\nHannah put her hand on Ryan's shoulder and he could not help but think that she was already a lot less afraid of him than she should be.\n\n---\n\nThat night, Ryan lay awake in bed. With the girls all over him, he never had trouble sleeping, but sometimes he chose to take some time to think. He didn't really even need sleep, but he enjoyed the calmness of joining the sleeping girls.\n\nNow, he was thinking about Candice Emerson. The cop was hot and it would be so easy for him to take her. Even with all of his girls, he still felt something toward Candice. The way she was challenging him made him want to tame her and show her her place. That was, of course, a horrible reason to make a go at her, but that didn't stop him from thinking about it.\n\nHe would, of course, do no such thing. Even thinking about it made him feel bad, like he was cheating on his girls -- even though he didn't deserve them, either. Desire was a strange thing.\n\nLuckily, it was not such a big deal to him. He could let Candice go. She was an idle fantasy for him, like the fantasies any man would have. Many men were sometimes tempted by some other woman who temporarily caught their eye and then happily stayed with their significant other. The only difference here was that Ryan had a bunch of significant others. That should only make it easier for him forget about Candice, as soon as he could get her to forget about him. There had to be a way to make her lose interest, many ways, he just hadn't figured out a the best one, yet.\n\nMeanwhile, he let his mind wander all over that tight body of hers -- her strong legs, and that outrageously slim waist. How soft would that big ass be? How would it jiggle if I slapped it? What was she hiding under her top? What would I find if I pushed my hands under there?\n\nOne of the girls was crawling on top of Ryan. She was tiny, so it had to be Erica. Ryan had popped a semi and sometimes the girls seemed to have sixth sense about things like that. Ryan smiled in the darkness and let her make her way up to kiss him. He hadn't heard her come into the room but that was because he had been almost asleep already.\n\nBut something was off, maybe the scent. Has Erica changed her perfume? He sneaked a peek at the clock on the night stand. It was much later than he had thought -- already early, in fact. He must have already nodded off at some point.\n\nRyan glanced down but he saw no one there. It was dark, but all he could see was himself -- no one on top of him. Lizzy and Melinda were to his sides. But Ryan definitely felt a weight on top him, and then a hand on his tattoo.\n\nWith a sudden twist, the tattoo started to burn. Ryan roared in pain. His arms were trapped under the sleeping girls but he squeezed his legs around the invisible assailant. There was definitely someone there. He could also feel the energy of the curse being drawn away from him. The door crashed open and the lights turned on.\n\nRyan heard Ellie shout a familiar word, but in a strange language. There was a strange jolt inside Ryan's body as the curse somehow reset itself. All of the energy was sucked back in, and in an instant, the energy started to flow normally again, completely overwhelming the woman in Ryan's lap.\n\nShe was visible now. It was the witch, the one who had given him the spell to begin with. Her hand was still on the tattoo and Ryan was still squeezing her tiny body with his legs. She had tried to take her spell back but Ryan could feel it was now affecting her, like it would any other woman.\n\nEllie was at the door. Something strange was going on, beyond the attack. Hearing the magical word Ellie had used made Ryan want to remember something -- something extremely important. Ryan's mind wanted to scream something into his consciousness. Something about a conversation he had had with Ellie, but he had no recollection of when it might have happened.\n\nRyan's scalp burned. It was as if someone was branding him with a hot iron. For some strange reason, he was sure there was another spell tattooed on his scalp, and somehow it had been activated. The magic word Ellie had used was the trigger for that unknown, second spell.\n\nAnnie, Remy, and Erica rushed into the room. Lizzy and Melinda had woken up and they had jumped off the bed. The girls gathered into one corner. They were not panicking, but they were worried.\n\nRyan tried to spike the witch with the energy but she didn't go out. She moaned, but stayed conscious. Ellie grabbed some rope from the treasure chest and climbed on the bed. Ryan Released the witch and Ellie tied her arms around her back. Then she tied her ankles to her wrists.\n\nIt looked like she had lots of experience in tying people up. Of course, it also helped that Ellie was wearing her flimsy dress. The thing never hid much, but with Ellie bending over and wrestling the other woman, it hid nothing.\n\nOnce Ellie was finished wrapping up the witch, Ryan was sure there was a bit of bondage going on there, and not just tying up a prisoner. The intricate and aesthetically suggestive rope arrangement seemed solid, though. The witch wasn't going anywhere.\n\nEveryone waited in silence for a while. Ryan's girls eyed the newcomer with indignant, hostile curiosity.\n\nThe witch was a beautiful, petite Indian woman, or maybe Middle-Eastern. She was wearing the same kind of flimsy, \"Arabian Nights\" harem outfit as the first time they had met. Her big brown eyes were slanted and beautiful, and wide with adrenaline, and they were locked on Ryan. The look on the delicate woman's face did not falter but it was clear that inside, she was holding down a storm of emotions.\n\n\"Who's she?\" someone said.\n\n\"She is the witch who originally gave me the curse,\" Ryan said. The girls now looked at her with newfound anger. But some of them soon realized they actually wanted to thank her for bringing Ryan -- and the curse, or blessing -- into their lives. \"Maybe she could even help us lift it,\" Ryan added, making the situation even more complicated.\n\nEllie had considered gagging the witch but the prisoner had not made a sound. \"Are you injured?\" Ellie asked Ryan.\n\n\"No. I think she tried to take the curse back, but whatever you did, you made her fail. I think the curse got her, instead,\" Ryan said. He was about to mention the pain in his scalp but then something in Ryan's memories clicked into place. He was sure Ellie had put the second spell on him but he didn't know why he knew that. It felt like a secret.\n\n\"I'm guessing she doesn't she speak English?\" Ryan simply said, hiding his own inner turmoil.\n\nEverybody's attention turned back to the witch. Ellie started speaking to her in a strange language. The witch did not answer at first, but then the conversation heated up. By the time they were done, the witch had calmed down. It seemed like Ellie had managed to convince her about... something.\n\n\"She knows you are her Master now. She's thoroughly familiar with the curse so she understands her situation. She will not harm you,\" Ellie said.\n\nErica said some gibberish and everyone turned to look. The witch said something to her but Erica seemed confused. The witch repeated herself and Erica answered her. They both smiled.\n\n\"I think Ellie told the truth,\" Erica said.\n\nEllie was suspiciously tolerant of such a blatant subversion of her authority. Everyone made note of that. Erica started to unbind the exotic witch.\n\nOnce the witch was free, she lunged at Ryan. Everyone made a move to come at her so she cowered back. Then, she approached Ryan again, this time more slowly. He was sitting on the side of the bed. She bowed herself next to him and laid her head on his naked thigh. Then she wrapped her arms around it and held on tight. She kept muttering something to herself.\n\nEllie told Ryan she was praying for a just and magnanimous Master.\n\nRyan sighed. The whole incident had shaken him more than he would like to admit. The most horrible thing about it had not been the pain, but the horror. The realization that he was about to lose the curse had hit him hard. He had not let himself admit how much he loved the curse, and the life it had wrought for him.\n\nIt was clear the witch was about to join the harem but he could not look at her like that, not yet. She had just tried to take from him what he held now realized to be most dear. Then there was the business with Ellie and this second spell. That would have to be dealt with, too.\n\n\"Leave, everyone. I need to think,\" he said. No one moved. \"Please?\" he added. Some of the girls started to head out. Ellie looked at Ryan questioningly but he didn't react to her. She took the witch and headed out.\n\nAnnie was the last one. \"I'll be fine. Please?\" Ryan said, and she left, too.\n\nIn the darkness, he communed with his curse -- his blessing -- and set many things straight, in his mind. Little locks started opening. Little, artificial locks, and Ryan had no doubt about who had put them there. He learned about himself, but also about the nature of this ever evolving energy he was gaining more and more conscious control over.\n\nThe sun was already up when walked out, with a renewed understanding. The home was still quiet. The girls were all asleep. Only Ellie was in the living room, standing at her usual spot. Ryan stared at her like she had always stared at him. Neither moved or said anything but they knew they had a lot to talk about."
    ],
    "authorname": "FacetiousTales",
    "tags": [
        "anal sex",
        "harem",
        "magic",
        "male dominant",
        "library",
        "public sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-cursed-tattoo-pt-10"
}