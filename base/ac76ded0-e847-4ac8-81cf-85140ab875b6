{
    "title": "Collateral Ch. 19",
    "pages": [
        "Summary: Creatures of habit.\n\nJake stole a nervous look in Klaus's direction, but the guy seemed as impassive as ever while reading his newspaper.\n\n\"The gangs are kind of fighting,\" he eventually managed to speak.\n\nThe last few months had been like a fairy tale. Not that he believed in such things. But whatever was happening between him and this man he could no longer call a stranger pretty much seemed taken from a movie, the kind that was supposed to have a happy ending. He wanted to believe that was the case with Klaus and him, too.\n\nOnly that the streets didn't care that much about his stupid dreams. He had seen Diaz almost weekly, and his brother had seemed more and more different from the guy he knew. Diaz was changing, and Jake could not say whether it was for the better or, the worse. Diaz was focused, a sort of new determination in his eyes, harsher than usual, and Jake had not had the guts to ask him what was going on. Now, that he had heard more and more about the gangs fighting, he wished he had asked.\n\n\"What else is new?\" Klaus seemed immersed in his correspondence and newspaper.\n\n\"Shouldn't you be doing something? To stop them?\" Jake insisted.\n\n\"What makes you think I am not doing anything?\" Klaus looked up from the papers straight at him.\n\n\"You are?\"\n\nThe man's strange smile was doing nothing for his nerves.\n\n\"Tell me what you are concerned about, love,\" Klaus said casually, while his eyes traveled to his papers again.\n\nDiaz was not the only one too focused these days. And Jake could not shake off the sensation that he was kept in the dark by the only two people in his life that mattered. Plus, Klaus was using that endearing term so often lately that Jake wondered if it meant anything. At least the guy hadn't insisted for Jake to confess again. They seemed to be too busy ... living. Sharing moments, minutes, hours, sometimes only in pleasant silence, sometimes having crazy sex, like usual, and sometimes only talking about their days. It kind of reminded Jake of something, something he had thought lost and gone a long time ago.\n\n\"Is this about your brother?\" Klaus made a ball of paper out of one of the envelopes on his desk.\n\n\"Yeah, I mean, Diaz ...\"\n\n\"Diaz is old enough to take care of himself,\" Klaus said shortly.\n\n\"I guess,\" Jake said unconvinced.\n\n\"I gave you my word,\" Klaus spoke. \"Your brother will not end up imprisoned. Regardless of his wrongdoings. Is this enough of a guarantee for you?\"\n\n\"Yes,\" Jake said, casting his eyes down.\n\n\"Come here. Give me a kiss,\" Klaus beckoned him close. \"I think that you have not kissed me during the last hour at all.\"\n\nJake rushed to the man and threw his arms around his lover's neck, placing a long kiss on Klaus's lips. It was a cheap trick if he was to think about it, but if Diaz and Klaus thought themselves too smart to let him in their dealings, he was ready to find out what was going on without their help. And pretend he was the only guy with his head in the clouds in this.\n\n\"I still have work,\" Klaus sounded genuinely regretful when Jake broke the kiss. \"It feels like I see you too little these days.\"\n\n\"It's okay,\" Jake smiled. \"My ass is thankful for the break.\"\n\n\"You cannot be serious,\" Klaus huffed, but his lips stretched into a smile. \"I know for a fact that you are in mint condition.\"\n\n\"Yeah, right,\" Jake rolled his eyes. \"Tell that to someone who doesn't know what a sex demon you are.\"\n\n\"As usual, you are quick to flatter me. Off you go now, or I will not be able to finish here this century.\"\n\nOf course he went, but only after sharing another long kiss with Klaus.\n\n***\n\nKlaus did not need his beautiful lover's warnings to know that the noose was tightening. But it was not yet the moment to intervene. Timing was everything. Too early, and he would have risked complications. Unwanted expenses. Right now, it was for the best just to wait.\n\nAnother long night spent sorting out business matters. For the first time in forever, he felt weary. He would have traded his place with anyone just to be able to head back to sleep and spoon with Jake. The young man had kept a solid promise to be all over him if they slept together, and now Klaus was wondering whether he could ever sleep alone again. \n\nHighly unlikely. He was not usually impatient, but he wanted to wrap things faster and head back to Germany, with Jake. He could not wait to show his lover his real home. And it was time for him to let others handle his business so that he could spend more time in the same place. Jake was going to have school for a few years, and that meant that he could not travel with Klaus all the time. \n\nHe wondered briefly how it had come to this. Hans kept telling him that it was long overdue. And that he was lucky it had not happened with some random gold digger. Yes, he was lucky. No one else was luckier in the whole wide world.\n\nIf he was efficient enough, they were going to spend Christmas in Germany, settled in Klaus's old home. He had a hunch Jake was going to love it. It was smaller and cozier than the estate he used now. And Jake still felt ill at ease, as far as he could tell. The young man preferred only a few places and did not venture a lot to get more acquainted with the rest of the property. Surprisingly one of those places was in the kitchen with Agnes, where Klaus suspected that she was giving him some informal cooking lessons after Jake had repeatedly offered to help her in the kitchen. \n\nA creature of habit, Klaus thought and smiled. He was one, too, but he was about to change some of the old habits in favor of enjoying a comfortable life with his Jake. That was earned, after all.\n\n***\n\n\"Hey, Diaz,\" he casually waved at his brother.\n\n\"What are you doing here, little bro?\" Diaz eyed him, a bit suspicious.\n\n\"What's this stuff you all moving about?\" Jake gestured towards the wooden boxes laid on the floor.\n\n\"Nothing kids like you should know,\" Diaz ruffled his hair.\n\n\"I heard the Wanderers are like all gone and stuff,\" Jake mentioned. \"Not one guy left. Nothing.\" \n\n\"Yeah,\" Diaz replied, and there was a small glint in his dark eyes that Jake didn't miss.\n\n\"And not just them.\"\n\n\"And?\" Diaz shrugged, as he sat on one of the boxes and looked up at Jake.\n\n\"You're like the only guys left,\" Jake gestured around. \"I think.\"\n\n\"Good to know you have two eyes,\" Diaz snorted. \"How's your life, dog? Going to that fancy school yet?\"\n\n\"Not yet,\" Jake looked down.\n\nHe had not yet mustered the courage to tell Diaz he was going to leave the country and go to Germany with Klaus. Eventually, he and Klaus decided that it was for the best to just start school there, and skip all the complications with a transfer. But now, he had to find a lie that was easy to believe, at least by Diaz's standards. So far, he had come up with nothing.\n\n\"You know what, Jake?\" Diaz looked at him and seemed to ponder over something. \"You go to that school. Get that paper that tells you that you're smarter than the rest of us.\"\n\n\"It's not like that,\" Jake protested.\n\n\"Yeah, it is,\" Diaz cut him short and pointed a finger at him. \"Because you might be that. The thing is, you have no pride in yourself. Licking that guy's shoes for what? Education?\"\n\nDiaz spat the last word like it was poison.\n\n\"It's the only reason why I let you do that,\" Diaz continued. \"Mom would have liked that. One of her boys getting into college. She would have bragged to all her friends. So do that. Okay?\"\n\nJake just nodded. Yeah, mom would have liked that. But she would not have liked seeing her first born involved in shady stuff like Diaz was right now. Jake wasn't stupid. He wasn't sure if he was smarter than the others, but he did have both eyes and half a brain to know Diaz was up to no good.\n\nHe pretended to take a hike and returned after a little while. No one was going to wonder why he was around. But he was careful not to let himself be seen. \n\nThat night, he didn't sleep well. Nor the next. Nor the following. Maybe it was a good thing that Klaus worked late every night. The man was going to see something was not right if he could spare one of his scrutinizing looks in Jake's direction. And that, luckily, was not happening.\n\n***\n\nThe dinner had been quite silent, which was unusual, even for a guy like Klaus who had admonished Jake a few times about talking with his mouth full. But now, he had to go to sleep alone, and he needed to know where Klaus was. If what he had heard from Diaz that night was true, some things were bound to happen.\n\nSo, listening to his gut instinct, he left the bedroom to check on Klaus a few hours later. \n\n\"Where are you going?\" Jake watched Klaus putting on gloves.\n\nThe man seemed surprised to see him at the top of the stairs. Jake was surprised to see the gloves. It was late at night, but by no means so cold to wear leather gloves.\n\n\"Some small issue I need to tend to,\" Klaus replied.\n\n\"I see,\" Jake said slowly, but didn't move.\n\n\"You go back to sleep. I will be back later, and then I will not let you rest until morning,\" Klaus joked.\n\nFunny thing. The man said he never lied.\n\n***\n\nKlaus lit up a cigarillo and patted the pocket of his coat. So the final act was finally in the works. Maybe he had lied to Jake, but the boy did not have to be privy to everything. After all, Klaus was doing this to protect him, as well.\n\nThe car slowly came to a halt. Slipping into his usual no-nonsense persona, he proceeded to get out of the vehicle.\n\n***\n\n\"You really have some balls to come here,\" Diaz opened his arms in fake welcome.\n\n\"I believe I was invited,\" Klaus smiled affably.\n\n\"Well, I didn't think you'd come, though,\" Diaz rubbed his chin. \"Anyways, since you're here, let me tell you this. We rule this city, okay? We're the masters around here. And you better put up all the money you have, pretty boy, or you won't like it.\"\n\n\"I am terribly sorry, Mr. Lopez, but I do not know of any changes in the structure of the city hall as of late. Have you perhaps become mayor?\"\n\nDiaz's lips curled unpleasantly.\n\n\"Nazi boy here thinks he's smart,\" Diaz showed teeth in his snarl.\n\nThe men around him began to move. Klaus could sense the wave of hostility growing. He consulted his watch. A little time to play cat and mouse. A small luxury by all means.\n\n\"I might not be the mayor. But you know what the fuck I'm talking about,\" Diaz sneered. \"I'm not that cocksucker, quick to kiss your ass. I'm the real king of this place, so you better pay respect.\"\n\n\"Respect, Mr. Lopez,\" Klaus tasted every word in his mouth, \"is earned, not given.\"\n\n\"Mr. Lopez? Why so formal?\" Diaz opened his arms and laughed.\n\nThere was nothing remotely hilarious in the situation. But Klaus smiled, nonetheless. A bit of a dogfight could be entertaining once in a while.\n\n\"I am not comfortable with being on a first name basis with scum like you.\"\n\nThe sound of guns cocking was to be expected. Nonetheless, Klaus chose to stand his ground, looking Diaz straight into his dark mean eyes. He could see the resemblance. Diaz was, indeed, a lucky man to be Jake's older brother. Even if the young man had not asked for his brother to be spared, Klaus would not have found it easy to get rid of that character. It would have felt wrong.\n\nDiaz balanced the gun in his hand, most probably with the intent to scare. Klaus just squared his shoulders.\n\n\"I could just put a bullet in your head,\" Diaz pointed the gun at him.\n\n\"And risk losing money? I thought you were fond of it,\" Klaus smiled thinly.\n\n\"Ha, you think you're in any position to negotiate? We can kill you and bury you in a place with no name on it. What do you think will happen?\"\n\n\"Except for signing your death warrant?\" Klaus drawled the words like he was having fun. \"And everyone else's?\" he gestured around.\n\n\"You're just one guy. And we can take care of your driver later. Wreck your car. Pity that's a nice ride. Make it look like a fucking accident.\"\n\n\"And now you are just talking out of your ass,\" Klaus sighed.\n\nDiaz flinched like there was suddenly a fly getting in his eye. The hand on the gun trembled. The sound was deafening in the strange silence, and everyone turned.\n\n***\n\nJake rushed through the door and ran to stand between Klaus and his brother. Through a haze, he registered the surprised look in his lover's eyes, mixed with something he had never seen before.\n\n\"No! You can't!\" he yelled at Diaz, raising his arms like he was trying to block the entire space between the two.\n\n\"Jake, what the fuck are you doing here?\" Diaz looked at him like he was crazy. \"Get the fuck out!\"\n\nJake was about to say something when he felt grabbed from behind. His blood pounding in his ears stopped, brought to a halt by a curdling sensation in his stomach, as cold metal pressed against his temple. He almost stumbled backward, kept on his feet by a strong arm belonging to someone he knew too well. He thought he knew.\n\n\"How fortunate,\" Klaus spoke, his German accent unhidden now. \"What are you going to say about this, Diaz? Do you remember what collateral means?\"\n\n\"Let him go,\" Diaz yelled and raised his arm higher, but his hold was just growing unsteady.\n\n\"He is such a handsome young man,\" Klaus continued, tapping his gun against Jake's temple. \"His entire life before him. And you want to ruin it? For what? It would be quite a shame, don't you think? Now be a good boy, and put the weapon down. And tell your acolytes to do the same.\"\n\n\"Yeah, right,\" Diaz began laughing. \"What else?\"\n\n\"Do not test my patience,\" Klaus added.\n\nJake felt like he was paralyzed. His mind was blank like he was moving through muddy water. He heard the words. He felt Klaus's strong body pressing into his. But he could not make sense of anything. The familiarity of being so close only made him feel sick and confused. \n\n\"Let's just shoot them both,\" one man yelled.\n\nDiaz turned like he was burned with acid and pointed the gun at that man.\n\n\"What did you say, dog? You want to kill my little brother?\"\n\nJake felt air returning to his lungs, and he began struggling against Klaus's arm keeping him in place. The man just pulled him closer, tightening his grip. He tried to turn his head so he could look at Klaus.\n\n\"Drop your weapons, gentlemen,\" another voice shouted. \n\nJake could not turn to see everything that was happening. But there were men in dark blue pouring through the door now and coming from seemingly everywhere, and soon the sound of guns hitting the floor, curses, and yelling filled the air.\n\nJake watched in horror the scene before his eyes. A man was now pushing Diaz with his face against the wall and putting him in cuffs.\n\n\"Ah, the cavalry,\" he heard Klaus commenting, and he turned to face the guy.\n\nThe gun kept until earlier to his temple was gone, and Klaus was taking in the scene, with a satisfied smirk on his face.\n\n\"You promised,\" he whispered, hanging on the man's arm. \"You gave me your word,\" he hissed through his teeth.\n\nKlaus looked at him and dared to look hurt. He frowned and gestured for one of the men in blue, who seemed to be in charge, to come closer. The gang members were taken away, the workshop quickly emptying. \n\nJake watched as the cuffs on Diaz's wrists were released by the man Klaus had spoken to, earlier.\n\n\"Sir,\" the man passed by and saluted. \"Are you certain?\"\n\n\"Just this one time,\" Klaus said with a strange smile.\n\nThere were only the three of them left in the room. Klaus pushed Jake aside firmly and walked towards Diaz. The man took a few steps back until he almost hit the wall.\n\n\"So, Diaz, let me hear it,\" Klaus stopped a few feet away from Jake's brother.\n\n\"Hear what?\" Diaz's eyes were darting sideways, looking for an escape route.\n\n\"Well, let me hear you thanking me,\" Klaus's voice became frozen.\n\n\"Thanking you? Are you fucking crazy?\"\n\nJake's feet were made of lead. He wanted to yell at them, to stop already.\n\n\"As you can see, I just saved your ass from prison. How about a little gratitude?\"\n\n\"Fuck you,\" Diaz spat. \n\n\"How about thanking your little brother then? He did ask me to look out for you.\" \n\n\"Fuck you!\" Diaz's voice was now angrier, as the guy stole one quick look at Jake.\n\n\"That is not very nice of you. So, seeing how you lost your crew, how about a little mano a mano? What do you say?\"\n\nDiaz's eyes settled on the man now.\n\n\"Diaz,\" Jake called. \"Don't, just don't do it! He'll fucking wreck you! Klaus ...\"\n\n\"Jake, shut the fuck up!\"\n\n\"Jake, stay out of this!\"\n\nStrange how the two rivals were on the same page when it came to putting him in place.\n\nDiaz smirked as he put up his fists.\n\n\"Don't you worry, little bro. Fancy pants here needs a lesson. But first, Nazi boy, lose the piece.\"\n\nKlaus reached into his pocket and fished out his gun. He threw it on the floor, away from both of them. Then he showed his open palms. Jake shifted in his place, not knowing what to do.\n\n\"Let's have Jake keep score,\" Klaus offered.\n\n\"Fuck score. I'll fuck you up before you can move your fag ass one inch.\"\n\nJake felt the first blow like it was aimed at him. Diaz wobbled and shook his head. \n\n\"Taking me by surprise, eh, fag?\"\n\nKlaus evaded gracefully the next clumsy attack and made Diaz stumble and fall face first to the floor.\n\n\"I dislike that word to the extreme,\" Klaus said with a small huff. \"But I will allow you the courtesy to stand up again. I also dislike hitting a man when down.\" \n\nDiaz stood up with murder in his eyes. This time, he managed to push Klaus against the wall and send home a punch, right into the man's side. But Klaus pushed his knee between them and used both his hands to send Diaz away from him almost flying and onto his back.\n\nKlaus towered over the man.\n\n\"It may seem a tad late to talk rules here, but you can yield at any moment.\"\n\n\"Fuck you,\" Diaz replied and struggled to get to his feet.\n\nJake attempted to move. Klaus pointed a finger at him, without even looking.\n\n\"Do not even dare, Jake. Your brother and I will settle this like men.\"\n\nDiaz took advantage of what he thought to be an opening, only to be met by another harsh punch. He was breathing heavily now, just moving around and throwing his fists at random. Jake could feel his heart breaking. Klaus was merciless, meeting every failed attempt with another strike. \n\nDiaz fell to the ground, blood pouring from a split lip. Klaus came next to him.\n\n\"Let me hear it now, Diaz.\"\n\nDiaz spat a glob of blood at the man's feet.\n\n\"When hell freezes over.\"\n\n\"Very well.\"\n\nKlaus grabbed Diaz, forcing him to his knees.\n\n\"I do appreciate resilience in a man, but not when it is directed against me.\"\n\nDiaz's head lolled to one side. Jake covered his eyes.\n\n\"Jake,\" his brother called for him at the third strike. \"Grab that piece and shoot this bastard!\"\n\nJake searched for the abandoned weapon with his eyes. He hurried and took it, the gun real and threatening in his hand. He was trembling as he held it with both his hands.\n\nThe two men looked at him.\n\n\"Shoot him, Jake! Don't be a fucking coward!\"\n\nKlaus remained silent. He was just looking at Jake, his eyes trained on him, unreadable. Diaz continued his bellowing. When the feet were cut from underneath Klaus, Jake dropped the weapon to the floor, like it was burning him.\n\nThis time, the two men were fighting on the floor, and Jake could not tell who was winning now. Diaz seemed to have found new strength and was pinning Klaus to the floor. His victory was short-lived, though.\n\nThe howl felt deafening in Jake's ears. So did the terrible sound of bone cracking. Diaz's body fell limp. \n\nJake hurried by his brother's side.\n\n\"Oh, no, oh, no, no, no, no!\" he cried, as he pushed against his brother's unconscious form, dragging him to nestle his head in his lap.\n\n\"Do not worry; he is not dead. But he should better have that leg put back together by a good surgeon. Otherwise, he might develop a limp. Now come, Jake. There is nothing left for you to do here.\" ",
        "Jake looked up, his eyes filled with tears.\n\n\"No,\" he said, fighting to stop the trembling in his lips.\n\n\"No?\" Klaus watched him, with unhidden surprise.\n\n\"No,\" Jake said again.\n\nKlaus's face turned to stone. He took a few moments to straighten up his suit. \n\n\"Is this your final answer?\" he asked again.\n\nJake hated him. He hated his blue eyes and perfect face. Yeah, fairy tales were for stupid idiots.\n\n\"Yeah,\" he replied, pulling his brother's head closer and cradling it in his arms.\n\n\"Suit yourself,\" Klaus shrugged and turned on his feet. \n\nHe stopped only for a second, to pick up the gun from the floor. Then he was gone like he had never been there. \n\nJake barely registered the sound of the door closing behind the man. He should have never dared to dream. Klaus was just another asshole in a world of assholes and Jake should have known better.\n\nTBC\n\n*****\n\nAuthor's note:\n\nI know, I know, feel free to hate me ... But this is needed, trust me. After all, their feelings have never been truly tested up till now, right? \n\nIt's just one thing I want to add. You are a lovely audience, and your nice comments make my day. Bear with me and my little story."
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay novel",
        "gay romance",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/collateral-ch-19"
}