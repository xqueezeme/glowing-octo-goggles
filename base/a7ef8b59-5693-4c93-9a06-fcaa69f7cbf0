{
    "title": "What You Wish For Pt. 03",
    "pages": [
        "Introduction\n\nNo sex here. Sorry. If anything, this chapter's a touch boring. Either way, it sets up everything that happens for the rest of the story. So please be patient if you're still with me in this long ride.\n\nThanks for reading, and please comment.\n\n\nCHAPTER EIGHT\n\nIt was mid-July before I heard back from Natalie.\n\n\"Well that didn't take very long,\" she said from her air conditioned office in Florida.\n\n\"What didn't take very long?\" I asked.\n\n\"Selling the book.\"\n\nI was speechless. She'd found a publisher? In, what, not even a month?\n\n\"You still there?\" she said, laughing.\n\n\"Who bought it?\"\n\n\"The publishing rights or the movie rights?\"\n\n\"Movie rights?\" I said. Someone was going to make a movie out of my book?\n\nShe laughed, then choked on the cigarette she must've been inhaling during her laugh.\n\n\"Settle down, kid,\" she said. \"No one's bought it yet.\"\n\nI felt like a deflated balloon. Pop. That fast.\n\n\"We're in the middle of a bidding war,\" she continued.\n\n\"Which is?\"\n\n\"When something's real good, when they think it's really gonna take off, the publishers all bid on the book. Then I go back to them. Kind of like an auction through five or six dozen phone calls.\"\n\n\"And this is good?\"\n\n\"Oh yeah,\" she gasped, coughing again. \"It's real good.\"\n\n\"And the movie thing?\"\n\n\"Same deal. Four different producers are bidding on the option.\"\n\n\"Option?\"\n\n\"Yeah. The book takes off, becomes a hit, they can exercise their option to buy the film rights.\"\n\n\"How'd they hear about the book?\" I said. \"Find out it was . . . well, worth a damn?\"\n\n\"They have people at the publishing houses that keep 'em in the loop.\"\n\n\"So what're we talking here?\" I said.\n\n\"Money?\"\n\nI was silent, afraid to say more.\n\n\"Well, kiddo,\" she said, her voice getting serious, \"you'd better please tell me you're already working on something else.\"\n\n\"Almost done with the outline,\" I said.\n\n\"And it's a Lieutenant Randolph thriller?\"\n\n\"Actually,\" I said, \"it is. I liked him. He's a good character.\"\n\nI could hear her sigh of relief through the phone.\n\n\"Thank you God,\" she said. \"That's going to drive up the bidding.\"\n\n\"Why?\"\n\n\"Because,\" Natalie replied, \"everyone agreed he's a great character. Complex, sullen, but likeable. And smart as a whip and manly, too. That helps sell this to the female crowd.\"\n\n\"Oh,\" I said, not really understanding.\n\n\"And,\" she continued, \"just like in the movies, publishers want to bank on a proven star. They like series books. You know. Jack Reacher, Inspector Rebus, Hercule fucking Poirot. Just like we've now seen, what, about a million Friday the Thirteenth movies?\"\n\n\"Oh,\" I said, getting it now. \"Well, that shouldn't be a problem.\"\n\n\"Good.\"\n\n\"So,\" I said, again afraid to ask.\n\n\"Well,\" she said, choosing her words carefully, \"if it comes down the way it's looking, you're gonna be doing nothing but writing about our little friend Lieutenant Randolph for a long time. They're talking a three-book deal.\"\n\n\"And?\"\n\n\"And you're gonna be a millionaire,\" Natalie said. \"Several times over if they make any movies from the books.\"\n\nMy eyes damned near bugged out of my head at that one. Sure, I knew it was lucrative if you reached the bestseller list. Still, a millionaire right off the bat?\n\n\"So get your ass moving on that outline, okay?\"\n\n\"Sure thing, boss.\"\n\n\"And one other thing,\" she said.\n\n\"What?\"\n\n\"I've got your editor\u2013the one in Chicago\u2013lined up to help you with this.\"\n\n\"Oh?\"\n\n\"Yep.\"\n\n\"So who is he?\"\n\n\"She,\" Natalie corrected me. \"She's from Chicago. We use her sometimes. I'll give her your number. You get together with her. Quick as you can. You two get this into final form as soon as possible, okay?\"\n\n\"Sure,\" I said.\n\n\"Okay then,\" Natalie said with finality.\n\n\"Wait,\" I said before she could hang up. \"This editor. What's her name?\"\n\nShe laughed. \"Oh yeah. I suppose that would help.\" She coughed again, a longer fit. \"It's Marisa Key. You'll like her.\"\n\nI heard her laughing at the last comment as she hung up.\n\nMarisa Key? I'll like her? And that's funny?\n\n* * * * *\n\nThe next morning, bright and early over coffee, my cell phone rang.\n\n\"Who's that?\" Dad said, still reading the paper while nibbling on toast.\n\n\"Dunno,\" I said, not recognizing the 773 number before flipping open the cell phone. \"Hello?\"\n\n\"Tyler Collins?\" she said. The voice was indescribable. Somewhere between deep and high without being in between. And there was a lilt to it, just the way she said my name. It came out as half question, half statement.\n\n\"Speaking,\" I said.\n\n\"This is Marisa Key,\" she continued. \"Your editor.\"\n\n\"Ms. Key,\" I said. \"I've been expecting you.\"\n\n\"What does your day look like?\" she said, skipping the small talk.\n\n\"Oh, uh, give me a sec.\" I covered the mouthpiece and looked at Dad. \"What's today look like?\"\n\n\"We're caught up,\" he said, still reading the paper. \"Maybe a few hours in the morning, but nothing major.\"\n\n\"I'm wide open from eleven on,\" I said back into the phone.\n\n\"Fine,\" she said. \"I'll be there at eleven thirty.\"\n\n\"You're coming here?\" I said, glad I wouldn't have to drive to Chicago.\n\n\"Yes,\" she confirmed. \"Are there any hotels in\u2013where are you again?\"\n\n\"Grant City,\" I said. \"And yes, we have hotels here. Two of 'em.\"\n\n\"Fine. Then I'll be there by eleven thirty.\"\n\n\"At the hotel?\"\n\n\"At your house,\" she said, agitation surfacing at the unnecessary talk.\n\n\"You know where I live?\"\n\n\"Yes.\"\n\n\"Okay then,\" I said.\n\nShe disconnected without another word.\n\nWhat was Natalie foisting upon me?\n\n* * * * *\n\nBy eleven fifteen, Dad was gone to visit Mom, and I'd showered the fine sheen of walnut dust off of my skin and out of my hair. I was changed into clean khaki slacks, a light blue oxford dress shirt with cuffs rolled to accommodate the summer heat, and boat shoes, no socks. I was putting the final touches on combing my damp and unruly hair when the doorbell rang.\n\nMarisa Key was early.\n\nI ran the comb through one final time, checked that I'd shaved closely enough, then bounded to and down the stairs.\n\nWhy am I hurrying like a tardy schoolboy? I though, forcing myself to slow down as I approached the door. Because her voice on the phone, her no nonsense manner, left me feeling like I was meeting my second grade teacher, I realized.\n\nI opened the door, though, and saw that Marisa Key would never be mistaken for a second grade teacher. Lou Reed groupie maybe, but never a schoolmarm.\n\n\"Mr. Collins,\" she said in that indistinguishable accent.\n\nI nodded and stepped back, looking her up and down as I did so. She was nearly as tall as me, maybe five nine, with impossibly long legs and long, sinewy features. And skinny, too. Painfully so. Like a runway model who lives on bottled water and fat free crackers\u2013\"Just two, thank you.\" Her hair was short, but thick and spiked, kind of like she'd stuck her finger in an outlet. Her face was part waif, part Cherokee Indian with a hint of Asian thrown in the mix. Face angling in a vee to a small chin, high cheekbones, small yet full Cupid's bow lips, tiny, pert nose, and large, deep brown eyes slanted at the corners to give the hint of Asian.\n\nAll told, Marisa Key could've been a runway model. She certainly had the build, the exotic features, and the long, awkward, gangly stride of a newborn foal.\n\nYet, all of this clashed with her wardrobe and makeup. Her clothes were straight from a punk rock concert. Tight black jeans, black leather motorcycle boots with metal studs, tight t-shirt ending two inches above her jeans to reveal the sharp, jutting hipbones of the terminally skinny and the hint of a tatoo of unknown design, studded black leather bracelets on her wrists, and a large black leather bag slung over her shoulder. Her makeup only embellished this. Black mascara, lipstick, and nail polish and a diamond stud in her left nostril.\n\nThe overall look made it impossible to guess her age. She could've passed for sixteen, but she could also be my age.\n\n\"Where shall we work,\" she said, ignoring my roaming eyes and the astonished look that I know was plastered on my face.\n\n\"Uh . . . I . . . .\"\n\n\"Do you have a dining room table?\" she said.\n\nI nodded, focusing my stare on her impossibly dark brown eyes.\n\n\"Can you run a chord to your laptop from there?\"\n\n\"Uh, yeah,\" I managed. \"Sure.\"\n\n\"Fine,\" she said, turning toward the kitchen and seeking out the dining room. \"Get your laptop and bring it to the table.\"\n\nI obeyed.\n\nA few minutes later, I had the laptop fired up and we were seated at the table. She pulled the laptop in front of her and motioned for me to slide closer so we could both see the screen.\n\n\"Okay,\" she said once I'd booted the final version of Long Gone, \"time to get to work.\"\n\nShe reached into her black bag and pulled out a tattered copy of the Long Gone manuscript. It was huge, at least six inches thick, bound together with several thick rubber bands, and compounded by hundreds of yellow post it notes stuck throughout the manuscript.\n\n\"You've already read it?\" I said, watching her pull the rubber bands off.\n\n\"Of course.\"\n\n\"What did you think?\" I said, fishing for a compliment.\n\nShe turned and stared at me, though. Her look said it all: You're wasting my time.\n\n\"You're a capable writer, Mr. Collins,\" she said.\n\n\"Tyler,\" I said automatically. Then I paused.\n\n\"Just capable?\"\n\nShe made a face. \"That's better than most.\"\n\n\"Really?\"\n\n\"Really,\" she said, fanning the first ten pages in front of us. \"Now can we get started?\"\n\n\"Sure.\"\n\n\"Good,\" she said, emphasizing that we wouldn't be wasting any more time.\n\nAnd we didn't. Jesus, what's to say? She'd had the manuscript for a week, and the whole thing was littered with her notes. Notes on little things. Isn't there a better word to use here? What're you saying here? Is this the best way to say it? Tighten this passage up. You're letting the conflict wane here. The tension's dying.\n\nAnd that was just the first sixty pages, which took us until six thirty to complete. In seven hours, we took two potty breaks and she took three smoke breaks, standing on the back porch staring into the distance while she huffed down her cigarettes. I tried to engage her in conversation during her first smoke break, but her look told me that wasn't such a hot idea.\n\nI had to admit, though: She was good. Fucking brilliant, actually. I was amazed at the improvement when I reread the first fifteen pages against my final manuscript\u2013the manuscript that was probably going to make me a millionaire. The changes were subtle. A word here, move a sentence there, make the dialogue more vague here and more explicit over here. The overall effect was magical, though. It was really a massive improvement.\n\n\"Well,\" she said, pushing herself back from the table as I read our changes. Okay, her changes.\n\n\"Enough for one day?\" I said.\n\nShe nodded. \"I'm hungry. Are there any decent restaurants in this town?\"\n\nI smiled.\n\n\"Well?\" she said.\n\n\"Can I take you to dinner?\"\n\nShe shook her head. \"That won't be necessary, Mr. Collins.\"\n\n\"Probably not,\" I said. \"But I want to.\"\n\nHer look told me to back off, which made me try all that much harder.\n\n\"Listen,\" I said, \"I really want to talk about this. About you. How you do this. So if you don't mind, I'd like to take you to dinner.\"\n\nShe fixed me with her stare, her lips set tight, and said nothing.\n\nI decided to wait her out, trying to put on an eager, innocent face as I did so. After a moment, that caused a flicker at the corner of her lips, the closest thing to a smile I'd seen from her all day.\n\n\"Fine,\" she said, reaching over and bundling up the loose pages of manuscript into a tidy pile. \"Then we'll make it a working dinner. We should be able to get another ten pages done.\"\n\nI tried to convey with my body language and fallen face that this wasn't what I had in mind, but she ignored me.\n\n\"Bring the laptop,\" she said, pushing away from the table and slinging her bag over her shoulder.\n\nI obeyed.\n\nAgain.\n\n* * * * *\n\nAny thoughts that Marisa Key was an anorexic were quickly dispelled over dinner. I watched her steadily plow through a bowl\u2013not a cup\u2013of gazpacho followed by a main course of Mexican stuffed meatloaf with grilled zucchini and chipotle-cheese smashed potatoes. When she was finished, the plate looked like it had just come out of the dishwasher.\n\n\"Still hungry?\" I said, looking at my half-eaten braised brisket sandwich with a side of fresh fruit.\n\n\"Sure,\" she said, sliding her plate out of the way and sliding mine in front of her.\n\nAnd the whole time she ate, we kept editing the manuscript.\n\nIt was going faster now as I learned to trust her advice and she figured out my own predilections for sentence construction and word choice.\n\nThe waitress approached as Marisa finished the last of the fruit. It was Nicole. She and her husband owned the place. She took one look at the plates, then a glance at Marisa.\n\n\"Dessert?\"\n\n\"What do you have?\" Marisa asked, not bothering to look up from the laptop she was pecking away on.\n\nNicole's look was disbelief. I could only give a slight shrug and smile in response.\n\nNicole gave the dessert choices, and Marisa chose the Bananas Foster over cinnamon ice cream.\n\n\"Two spoons?\" Nicole said.\n\nMarisa looked at her, then at me. \"Do you want some, Mr. Collins.\"\n\nI just smiled and shook my head. \"Just coffee, please.\"\n\nNicole almost burst out laughing, but Marisa didn't notice.\n\n\"Would you please stop calling me Mr. Collins?\" I said.\n\n\"It's your name,\" she replied, pointing at the manuscript. \"What about this?\"\n\n\"I prefer Tyler,\" I said, not to be deterred. \"I mean, we're probably about the same age, right?\"\n\n\"Whatever,\" she said, the impatience showing again. \"Fine. Tyler. I'll call you Tyler, okay? So, Tyler, what should we do here? Tyler?\"\n\n\"Yeah,\" I said, smiling at her petulance. \"Fine. Let's change it.\"\n\n\"How?\"\n\n\"What's your idea?\"\n\n\"To get you to tell me how to tighten it,\" she said, her speech going slow.\n\n\"No,\" I said. \"I wanted to have dinner to get ideas on how to edit my work better. Instead, we've spent the evening doing more editing without you really telling me anything. So I want to know how you'd do it, and I want you to tell me why. Hell, I want you to tell me how you even saw this . . . this . . . the flaw here.\"\n\nShe frowned, then looked at the laptop and saved the work, both on the internal hard drive and on a flash drive. Flipping the laptop shut, she pushed it aside and again bundled up the manuscript, which she stacked on top of the laptop and pushed it aside just in time for Nicole to place her dessert in front of her.\n\nPicking up her spoon and taking a bite, she turned to me. \"Okay, shoot. What do you want to know?\"\n\n\"How old are you?\"\n\n\"Twenty-five.\"\n\n\"How'd you get into this? Editing?\"\n\n\"I'm in the graduate school at Northwestern. Working on my doctorate. This pays the bills.\"\n\n\"Major?\"\n\n\"English and creative writing.\"\n\n\"Have you written anything?\"\n\nHer face gave a brief flash of anger at this one, and she said nothing.\n\n\"So how long have you been editing professionally?\"\n\n\"Four years.\"\n\n\"Why do you do it?\"\n\n\"Like I said, it pays the bills. School's not cheap, you know.\"\n\nI nodded.\n\n\"How long did it take you to go through and damned near tear apart every page of my manuscript?\"\n\nHer eyes narrowed.\n\n\"There's no need to be offended,\" she said. \"It's my job.\"\n\n\"I'm not offended,\" I protested. \"I'm curious. Jesus, I spent two months editing this, and you just got it last week. So how long did it take?\"\n\n\"Three days,\" she said, shoveling more Bananas Foster into her mouth. \"This is good, by the way. You sure you wouldn't like some?\"\n\n\"No, I'm fine,\" I said, but she already had a spoon full of ice cream and caramelized banana in front of my mouth.\n\n\"Really,\" she said. \"Try it.\"\n\nSo I rolled my eyes and tried it.\n\n\"You're right,\" I said, taking the spoon from her and taking a piece of the banana glazed with caramel and melted ice cream.\n\nShe flashed a smile, the first true smile of the day.\n\n\"Listen,\" she said as we shared the rest of the dessert, \"I got it in on Sunday morning. I spent seventeen, eighteen hours a day for three days.\"\n\n\"So what's the first thing you did?\"\n\n\"Read the whole thing. Twice.\"\n\n\"You a speed reader?\"\n\nShe shook her head. \"Fast, but not really a speed reader. And it goes faster the second time anyways. You know what you're reading. The second time, I start making notes of where the plot's getting weak, if a word or phrase jars me, something's unclear. You know.\"\n\nI nodded. I thought I knew. I thought I knew real well until I'd met with her and seen her find mistakes every other page of my manuscript. Now, I realized, I didn't know shit.\n\n\"And after that?\"\n\nShe scooped up the last bite of dessert and held her spoon toward me. I waved it off to her obvious delight.\n\n\"After that,\" she said, \"I just keep going over it.\"\n\n\"So how many times did you go over it?\"\n\nShe shrugged. \"Dunno. Twelve. Maybe fourteen. A lot.\"\n\n\"They pay you well for this?\"\n\nShe hesitated before answering. \"Well enough.\"\n\n\"Covering your expenses while you're here?\"\n\nShe shook her head. \"They want me to drive to and from Chicago every day. Not practical, though.\"\n\nI pulled my cell phone out.\n\n\"Who're you calling?\" she said, her eyes going wide.\n\n\"They're paying for your room,\" I said. \"And a meal allowance.\"\n\nShe shook her head frantically, reaching over to take the cell phone from me. I turned my shoulder to block her out.\n\n\"Natalie,\" I said when she answered.\n\n\"Hello, Tyler,\" she croaked. I'd never seen her, but I could picture Thelma Diamond, the old bailiff on Night Court, chain smoking cigarettes while talking to me.\n\n\"Marisa's here,\" I said.\n\n\"Good,\" she chuckled. \"And?\"\n\n\"And she needs the publisher\u2013whoever that's gonna be\u2013they need to pay for her room and meals while she's here.\"\n\n\"But she's only an hour away,\" Natalie protested.\n\n\"Which is two hours a day wasted on driving when it could be spent on getting this thing done,\" I said.\n\nNatalie was silent for a moment before speaking.\n\n\"You willing to put everything aside until this is done?\"\n\n\"Yes,\" I said, looking at Marisa glaring at me.\n\nNatalie sighed. \"Fine. After all, what's a room cost in Podunk, Illinois?\"\n\n\"And Natalie?\"\n\n\"What?\"\n\n\"This was at my insistence,\" I said, staring right back at Marisa as I spoke. \"Marisa's pissed off I'm even asking for this, okay?\"\n\nNatalie laughed her wheezing laugh. \"Told you she's a pistol.\"\n\n\"No,\" I said, \"you told me nothing. Just a vague warning that has proven all too true.\"\n\nNatalie seemed to think that was the funniest thing she'd heard all day. She was still laughing aloud when I clicked the phone shut.\n\n\"You have school to pay for,\" I said, sliding the phone into my pocket. \"The thousand or so in rooms and meals is better borne by those who can better afford it, okay?\"\n\nBut the glare didn't leave her face. Instead, she stomped off to the restroom, then returned and bundled all of her things up.\n\n\"Eight o'clock,\" she said, staring down at me. \"See you then.\"\n\n* * * * *\n\nBy late the next day, we'd plowed through another seventy pages of the manuscript, going back to make additional changes in the first sixty pages as we did so. By the end of the afternoon, I was wiped, mentally and physically.\n\n\"Enough,\" Marisa said, her face impassive as I rubbed the exhaustion from my eyes.\n\nI nodded.\n\n\"Tomorrow then,\" she said, standing and scooping everything back into her bag.\n\n\"Wait,\" I said, reaching out to her arm.\n\nShe jerked it away and glared at me.\n\n\"What,\" she glared.\n\n\"Why're you so pissed?\" I said. \"All fucking day you've been . . . well, pissed.\"\n\n\"You shouldn't have done that,\" she said.",
        "\"What? Arranged for the hotel room and the meals?\"\n\nShe only glared in response.\n\n\"I didn't do it just for you,\" I said. \"I did it so we could get this done faster, too.\"\n\n\"Yeah,\" she said, still tense and pissed. \"Whatever.\"\n\n\"I just don't see why it's such a\u2013 \"\n\n\"Because,\" she fumed. \"Because they don't want hired gun editors making too many demands, Mr. Collins. Because if we do, they just go to someone else. Okay, Mr. Collins? So you got your way, but I may get fewer jobs because of it. So there. You fucking happy now?\"\n\nI could only stare back, embarrassed I'd tried to do something nice for her and maybe only screwed up her livelihood.\n\nThen I reached for my phone and dialed.\n\n\"Still going well?\" Natalie rasped.\n\n\"Great,\" I said. \"She's incredible.\"\n\nNatalie gave a wheezing cackle at that. \"Yeah. Right.\"\n\n\"No, really,\" I said. \"We're really moving along.\"\n\n\"That's great, kiddo.\"\n\n\"That call yesterday,\" I said. \"Is she gonna get in trouble over it or anything?\"\n\n\"Publishers may bitch,\" she said. \"Depends on who gets the book, really.\"\n\n\"Why didn't you tell me?\"\n\n\"Didn't really think you cared,\" she said, surprised at the sudden anger in my voice.\n\n\"Then don't do it,\" I said. \"I'll take care of it myself, okay?\"\n\n\"Tyler,\" Natalie said, \"I'll square it. Okay? Really.\"\n\n\"We're not taking that chance,\" I said, looking at Marisa as I spoke. Her features were still impassive bordering on pissed with a new touch of too little, too late.\n\n\"You really like her, don't you?\" Natalie said, amazed.\n\n\"She's fucking brilliant,\" I said. \"And I want to make damned sure she'll work with me when the next one's ready.\"\n\n\"Okay,\" Natalie said. \"Consider it done. Hell, we'll split it if that's okay.\"\n\n\"No,\" I said. \"I'll take care of it all myself.\"\n\n\"If that's what you want,\" she said, her voice getting soft like she was amazed.\n\n\"And this whole mess,\" I said. \"It stays between us, okay? And you don't hold it against her in the future, right?\"\n\n\"I wouldn't have done that,\" she protested. But her protests may have been a bit too energetic.\n\n\"I mean it,\" I said. \"If she's not getting work because I was a dumbass, I'll hear about it. And if she won't do my next book when it's ready, I'll know why. Okay?\"\n\n\"Settle down, Tyler,\" Natalie said. \"I said it's forgotten, so it's forgotten.\"\n\n\"Okay,\" I softened. \"Thanks. And sorry for sticking my nose in.\"\n\n\"Don't worry about it, kiddo,\" she wheezed before hanging up.\n\nI turned and looked at Marisa. \"Okay?\"\n\nIt was little more than a twitch, but her nod was perceptible.\n\n\"And I'm sorry,\" I said. \"I won't stick my nose in anymore.\"\n\nShe scrunched her lips together and to one side, then nodded again.\n\n\"So now that I'm the one paying,\" I said, \"can I buy you dinner before you go back to your room for the night?\"\n\n\"Just a burger, though,\" she said. \"Not as expensive as last night.\"\n\n\"I've got the money to buy you better dinner than a\u2013 \"\n\n\"Just a burger,\" she repeated.\n\nI stared at her for a moment, watching her eyes flare up again.\n\n\"The Hitching Rail it is,\" I said, pushing back from the table.\n\nCHAPTER NINE\n\nWe took separate cars to the restaurant, and I arrived there first. I was no sooner in the door than I was accosted in a tight hug and a deep kiss.\n\n\"Hey you,\" Allie said, coming up for air.\n\n\"Hey, babe,\" I said, kissing her cheek before hugging her to me again.\n\nShe was good to hug, and I seemed to need the hug for some reason. Probably because I'd just spent ten hours with Marisa glaring, snorting, and all around treating me like shit.\n\n\"You eat yet?\" she whispered into my ear.\n\nI shook my head and broke the hug.\n\n\"Actually, I'm meeting someone here,\" I said. \"Kind of a working dinner.\"\n\n\"Oh,\" she said, almost pouting.\n\n\"But you can join us,\" I offered.\n\n\"Is he here already?\"\n\nI saw Marisa getting out of her car and walking across the parking lot to the entrance.\n\n\"She,\" I said, nodding my head out the window.\n\n\"You're kidding, right?\" Allie said, trying to hide the look of horror as she watched the tall, skinny Goth chick stride through the door.\n\n\"Be nice,\" I whispered, then turned to Marisa as she entered. \"Marisa, meet Allisyn. My . . . uh . . . well, my girlfriend.\"\n\nMarisa nodded, looked at Allisyn, then stuck her hand out. \"Allisyn.\"\n\nAllisyn tried to smile as she returned the handshake, but her eyes were locked on Marisa's black make-up and spiked hair.\n\n\"It is okay if she joins us for dinner?\" I said to Marisa.\n\n\"Your ticket,\" Marisa shrugged. \"Invite whoever you want.\"\n\nWithin minutes, we were seated and our orders placed.\n\n\"So you wanna work on this or what?\" Marisa said to my right.\n\n\"Work on what?\" Allie said to my left.\n\n\"His book,\" Marisa answered, shooting a quick glance at me.\n\n\"Book?\"\n\n\"I've written a book,\" I explained.\n\n\"Really,\" Allie said, like she didn't believe us. \"A book. And you're . . . what . . . his agent?\"\n\n\"Editor,\" Marisa mumbled, staring down at her Diet Coke.\n\n\"A book?\" Allie said again, her face a mixture of disbelief and excitement. \"You're not shitting me? You've written something, and she's editing it for you?\"\n\n\"Go ahead and show her,\" I said to Marisa.\n\nMarisa pulled the tattered manuscript from her bag and laid it with a thump in front of Allie.\n\n\"Holy shit,\" Allie said, running her fingers over the title before flipping through the manuscript. \"It's huge.\"\n\nShe looked at me.\n\n\"I was gonna tell you once we got a publisher for it,\" I said. \"Not like it's a secret or anything.\"\n\nI looked directly at Marisa as I spoke the last.\n\n\"So how do you get a publisher?\" Allie said, her eyes glued to the manuscript as she flipped through it.\n\nSo the next hour was spent discussing when and why I started writing a book, what the book was about, and all the shit involved in getting it published. I tried to get Marisa more involved with the conversation, but she seemed content to eat her burger and fries, along with a basket of cookies for dessert only one of which she shared with me and Allie. Occasionally, she offered a point of clarification on the publishing process, but that was about it.\n\nThen Allie just confronted her point blank, and Marisa had no alternative but to answer.\n\n\"How many books have you edited so far?\" she asked Marisa.\n\n\"Nineteen.\"\n\n\"Any I've heard of?\"\n\nMarisa named three or four that had snuck into the bestseller lists.\n\n\"And this one? How does it rate against those,\" Allie said.\n\nMarisa only shrugged.\n\n\"Come on,\" Allie prodded. \"You've seen the ones that are good, the ones that aren't so good, right?\"\n\n\"They were all pretty good,\" Marisa said, avoiding my bemused stare as she spoke.\n\n\"So how's this one?\"\n\nShe only chewed her lip in response, her shoulders and arms tense as she gripped the Diet Coke in front of her.\n\n\"You won't hurt his feelings,\" Allie said. \"Right Tyler?\"\n\n\"Not a bit,\" I agreed.\n\n\"So how is it? How does it compare?\"\n\nMarisa wouldn't budge, though.\n\nAllie shot me a look. What's going on here? the look said. I shrugged.\n\nAllie turned back to Marisa, leaning over the table and lowering her voice.\n\n\"Is it that bad?\"\n\nMarisa's head shot up like she'd been slapped.\n\n\"You're kidding me, right? That bad?\"\n\n\"So it's good?\" Allie prompted.\n\n\"It's the best thing I've ever worked on,\" Marisa said, then shot me an embarrassed look.\n\n\"So you think it's\u2013 \"\n\n\"I can't tell you if it's going to sell,\" she said, looking back at the table. \"But I can tell you that if the goddamned public knows shit from shinola, it's going to be huge.\"\n\nAllie's mouth was open. \"That good?\"\n\n\"Better,\" Marisa said.\n\n\"So it's better than just capable?\" I said, smiling at her initial description of Long Gone.\n\nShe looked at me, then looked back at the table.\n\n\"Jesus, Tyler,\" Allie said, watching Marisa's reaction.\n\n\"Sorry,\" I said. \"Why don't we all go get a beer?\"\n\n\"Sure,\" Allie said, standing.\n\nMarisa looked from me to Allie, then back again.\n\n\"I'm just gonna get back and turn in for the night if that's okay.\"\n\nAllie tried to talk her into staying, but it was a no go. So Marisa left, while Allie and I moseyed to the bar for a drink.\n\nHalfway through our first beer, Allie started grinning.\n\n\"What?\" I said.\n\n\"This beer,\" she said, making a face.\n\n\"What's wrong with it?\"\n\n\"Doesn't taste right.\"\n\n\"Let me get you a different one,\" I said, motioning to the bartender.\n\n\"It's not that,\" she said, leaning in close. \"I'm just trying to think of something that would taste maybe a little bit better.\"\n\nI got the picture.\n\nWe rushed back to her house, and I soon discovered that she was right.\n\nShe tasted way better than Amstel Light.\n\n* * * * *\n\n\"She's . . . strange,\" Allisyn said while we snuggled in post coital bliss.\n\n\"How so?\"\n\nAllie snorted. \"Like you didn't notice.\"\n\n\"You mean the make-up?\" I offered. \"The black clothes and all that?\"\n\n\"For starters,\" she said, rolling over and facing me. \"But she's . . . well . . . she seems angry.\"\n\n\"At me?\"\n\n\"More like at the whole world.\"\n\nI only stared in response, my mind wandering over the few days I'd known Marisa and the hours we'd spent going over the book.\n\n\"Not like psycho killer pissed at the world,\" Allie explained. \"More like 'life sucks and everyone's an asshole' pissed. Know what I mean?\"\n\n\"Yeah,\" I said, starting to nod. \"I suppose you could see it that way. Still. . . .\"\n\n\"What?\" Allie prompted when I didn't finish my last sentence.\n\nI shrugged. \"Just don't really know her, I guess. Could be anger. Could be just shy, too, or having a bad day. I mean, c'mon, you only met her for an hour over dinner.\"\n\nAllie peered into my eyes, contemplating my words. Then she smiled, which turned into a grin.\n\n\"That's why I love you,\" she said. \"You're so sweet. You just can't really say a bad thing about anyone, can you?\"\n\n\"Love me?\" I said, tensing at the mere mention of the word.\n\nHer smile only got broader.\n\n\"You know what I mean,\" she said, slithering her head under the covers and showing me exactly what she meant.\n\n* * * * *\n\nThe next five days were spent with Marisa. Ten to twelve hours a day of editing, tightening, changing a word here and cutting some there.\n\nOn the fourth morning, I noticed something I hadn't noticed the previous two days. Marisa was showing up with additional notes and changes for the things we'd already gone over.\n\n\"When are you doing this?\" I asked.\n\n\"What?\" she snapped, agitated for the millionth time at my time wasting questions.\n\n\"Going back over the stuff we already covered? The changes we've already made?\"\n\n\"At night. After dinner. What's the difference? It needs to be done.\"\n\nJesus, I thought. She's going back and putting in another four or five hours while I'm out in the shop working on dwindling Dad's backlog and doing his bookkeeping.\n\n\"Just didn't really notice before,\" I said. \"That you were doing it.\"\n\nShe rolled her eyes, then stared at me impatiently.\n\n\"Okay. Good. Now you know. Can we get back to work here?\"\n\nAnd that's when I realized she wasn't really all that pissed off with the world. Allie had it wrong. Marisa was angry a lot. Definitely. But it was an anger born of suffering fools. She was focused, and she got impatient when her focus was derailed. \n\nI smiled at the realization and decided then and there to test my hypothesis.\n\n\"So you date anyone?\"\n\n\"None of your business,\" she said, not bothering to look up from the laptop as she typed some changes.\n\n\"Ever been married?\"\n\n\"Not answering,\" she said, turning to the manuscript and pointing at a passage we'd just gone over. \"You sure on this one?\"\n\n\"Yeah,\" I said. \"What about kids? You have any kids?\"\n\nThere it was, the straw that broke the camel's back.\n\n\"What the hell,\" she said. \"I mean, who cares, Tyler. My personal life is none of your concern. This books is your concern, got it? And the sooner you quit worrying about my social life and start worrying about turning this piece of shit into a readable story, the better we'll both be.\"\n\n\"You said it was already really good,\" I shot back, enjoying the argument I'd started.\n\n\"For an unpolished piece of crap,\" she said, standing. \"But it needs work. And we don't have much time to get it done.\"\n\n\"Then where you goin'?\" I said, standing with her.\n\n\"Outside for a cigarette,\" she said, stalking toward the kitchen door. \"Alone.\"\n\nI smiled as I watched her flick open her Zippo and light up the smoke, puffing furiously to rid herself of the tension I'd created.\n\nAs she was finishing, Dad pulled into the driveway.\n\nI watched him get out of the truck and look at the stranger smoking on his back porch. The look of horror on his face was priceless. I'd told him about the editor, but I hadn't described her to him. And he'd been gone to the rehab clinic for fifteen hours a day for most of the previous two weeks, so he'd never seen her.\n\nThe look on his face as he walked toward her, then past her with mumbled greetings met by a curt nod of Marisa's head, had me chuckling as he opened the door and entered the kitchen.\n\n\"Is that . . .?\" he sputtered.\n\n\"Yep,\" I beamed. \"What d'ya think of her?\"\n\nHe turned his head and looked, then turned back to me.\n\n\"You're kidding me, right? She's gonna help you get this book thing taken care of?\"\n\n\"She's the one.\"\n\n\"She any good?\"\n\nThe look on his face told me he wouldn't believe any affirmations of her competence, but I was feeling particularly puckish that morning.\n\n\"Actually, Dad, she's an absolute genius.\"\n\n\"She's from Chicago, ain't she?\"\n\nThat seemed obvious. Goth chicks were unheard of in Grant City, even amongst the student body of our local liberal arts and sciences college.\n\nI only smiled and nodded.\n\n\"Jesus,\" he said, shaking his head as he walked past me and toward the stairs to change into work clothes. I could hear his muttering as he climbed the stairs.\n\nMarisa returned from her smoke break a few minutes later, and we got back at it without more questions.\n\nWhen Dad went to the shop, he went out the front door, avoiding us entirely.\n\nCHAPTER TEN\n\nIt was day eleven, and Marisa and I were twenty-three pages from done when my cell phone rang in the late morning.\n\n\"Natalie?\" I said.\n\n\"We've finally got a winning bid,\" she said, her enthusiasm nearly jumping through the phone at me.\n\nI froze, afraid to ask.\n\n\"Well?\" she prodded. \"Aren't you gonna ask who? How much?\"\n\n\"How many books is the deal?\" I said, starting slowly.\n\n\"Three,\" she said, \"with an option for two more.\"\n\n\"So I have to write five Lieutenant Randolph books?\"\n\n\"Nah. Just three. If you can still come up with it, then two more and they get first dibs on 'em.\"\n\n\"Terms?\"\n\n\"Your royalty is fifteen percent, which is pretty good. Not the best, but definitely above average for a first timer. Long Gone will have a first printing of two hundred fifty thousand. Your advance is a third of the royalties from the first run, the balance of your royalties payable quarterly.\"\n\n\"And what're they charging up front?\"\n\n\"Seventeen bucks a book.\"\n\nI tried to do the math in my head, but failed.\n\n\"A little over two hundred grand when you sign the contract,\" she said. \"The balance paid as the sales surpass the first one third of the initial run. Got it so far?\"\n\nI nodded. Two hundred grand. Up front, for the love of God!\n\n\"Okay,\" she continued. \"Then here's the best part. Your rate goes all the way up to eighteen for any copies\u2013hardcover or paperback\u2013over a half million. That's really good, by the way. Won't be as much money on the trade paperbacks, of course. They don't sell 'em for as much. But still, it's good money.\"\n\nThe few percentage points didn't seem like much to me, but they really had her excited.\n\n\"Now,\" she crowed, the wheeze gone from her voice, \"here's the best part. The movie rights.\"\n\n\"You've already got someone for them?\"\n\n\"Uh huh. We sold the option for a half mil, percentage of gross receipts if it's made into a movie.\"\n\n\"So I get five hundred grand even if they don't make a movie out of it?\"\n\n\"Bingo.\"\n\n\"When?\"\n\n\"As soon as you sign.\"\n\n\"And when can I sign all of this?\"\n\n\"Soon as you can get your ass to Miami, sweetie.\"\n\nI sat back, staring at Marisa, but not seeing her.\n\n\"So please tell me it's almost done, Tyler,\" Natalie said.\n\n\"No later than noon tomorrow,\" I said.\n\nI heard her sigh of relief.\n\n\"That's great time, kiddo. Then you can come down here the day after?\"\n\n\"Sure.\"\n\n\"See ya then.\"\n\nI flipped the cell phone shut and stared at the ceiling.\n\n\"Good news?\" Marisa asked.\n\nI looked at her and nodded. \"It's sold.\"\n\nShe gave a tight smile.\n\n\"Good,\" she said. \"Then let's get moving. You promised this by noon tomorrow.\"\n\nI don't know what came over me. Probably the giddiness of the whole thing. Whatever it was, I just leaned over and swept Marisa into my arms and gave her a big, tight hug, nearly dragging her out of her chair and sending us both to the floor.\n\nWith the hug, I felt the tension ease from my body. I also felt her body get more tense as the hug went along.\n\n\"Sorry,\" I mumbled into her ear, breaking the hug and looking at her in embarrassment.\n\n\"Whatever,\" she said, easing before looking at the manuscript. \"Where were we?\"\n\n* * * * *\n\nWe finished at three the following afternoon. Marisa e-mailed the completed manuscript to Natalie, then started sweeping the manuscript into order before wrapping it in rubber bands and tossing it\u2013for the final time\u2013into her purse.\n\n\"Let's celebrate,\" I said.\n\nShe looked at me, then shook her head.\n\n\"Come on,\" I prodded. \"Just one final meal at the Bar and Grill. They've got a new dessert.\"\n\nShe held back, but I pressed.\n\n\"Listen,\" I said. \"I'm sure you're sick of me by now. Probably just want to get the hell out of here and get a real meal at some hidden little gem in the city. But we need to start a tradition here.\"\n\n\"Tradition,\" she said.\n\n\"Tradition,\" I repeated. \"You're gonna be the editor on all my books. If you'll have me, that is. And we'll always end the editing process with dinner at the Bar and Grill. Then you'll forget about me for six months or so until you have to come back, and I'll spend all that time trying to get another book written. Then, we'll start all over again. And end it\u2013again\u2013at the Bar and Grill.\"\n\n\"Tradition,\" she said again, a smile curling the corner of her lips for only the second time since we'd met.\n\n\"Like Thanksgiving turkey,\" I beamed.\n\n\"Santa Claus,\" she said.\n\n\"Exactly.\"\n\n\"Can't buck tradition, I suppose,\" she said. \"Even if it's only the start of one.\"\n\n\"Gotta start somewhere,\" I said.\n\nShe smiled fully now, teeth and all. And it was a pretty smile, assuming you could get around the whole black lipstick thing.\n\n\"Should we call your girlfriend?\"\n\nI shook my head. \"Nope.\"\n\nShe tilted her head. \"Why not?\"\n\n\"Because we're starting a tradition,\" I reasoned. \"I don't know if we'll still be together next year when we do this again, but then we'd have to invite her anyway.\"\n\n\"Because of the whole tradition thing,\" Marisa said, nodding in mock serious understanding.\n\n\"Exactly.\"\n\n\"Okay,\" she said, standing and scooping the rest of her belongings from the table and into her massive black bag. \"Pick me up at five-thirty.\"\n\n\"Done.\"\n\n* * * * *\n\nBy quarter to six, we were seated at the Bar and Grill. Marisa was demolishing a Thai-glazed chicken wings appetizer and I was sipping my beer and watching her in amazement.\n\n\"What?\" she said, seeing me staring as she sucked the sauce off of her long, delicate fingers.\n\n\"I just don't know how you eat so much,\" I said. \"And you're so . . . uh . . . . You really keep your shape well.\"\n\n\"Skinny,\" she said, pushing the empty plate to the side. \"You can say it. Skinny, scrawny, bean pole. I know what I look like.\"",
        "I smiled. \"So how do you do it?\"\n\n\"Dunno,\" she replied. \"Just lucky I guess.\"\n\n\"So what do you do? I mean, I know you're in graduate school and all. But why? For what?\"\n\n\"Writing,\" she said. \"I love books. I mean really, really, really love 'em. They're my passion, my whole reason for being.\"\n\n\"So you want to teach?\"\n\nFrankly, the thought of this Goth-looking girl standing in front of a class of serious college students seemed a bit far fetched.\n\n\"Sure. I suppose so.\"\n\nShe smiled as the waitress delivered our dinners. Roadhouse burger with sweet potato fries for her, grilled chicken sandwich with fresh fruit for me. Sorry, but I can't get away with eating like Marisa. I'd weigh four hundred pounds in about a week.\n\n\"I really want to write, though,\" she said with a mouthful of food.\n\n\"Books? Short stories? Poems?\"\n\nShe shrugged. \"Probably not poetry. Doesn't really excite me all that much. Short stories are nice, too, but they don't make enough to live on. So I guess I'm gonna have to start with books sometime soon.\"\n\n\"Any ideas?\"\n\nShe shook her head, cramming a bunch of fries in after her latest gulp of burger and chasing it down with a sip of Bacardi and Coke.\n\n\"Need more experience,\" she said when she finally swallowed. \"You know. Life experiences.\"\n\n\"What about your life's experiences?\"\n\nOkay, I was on a roll, getting her to open up and talk with me more than the previous week and a half combined. Might as well push the point.\n\nHer look told me she didn't understand the question, though.\n\n\"You married? Engaged? Kids? Any brothers or sisters? Where are you from? You know. Tell me about Marisa Key.\"\n\n\"Not much to tell. Born and raised in Chicago. Half sister. Mom and Dad divorced when I was seven. I've seen him maybe ten times since. Mom's a teacher; sister's a lawyer. Never married or engaged, and I'm not seeing anyone now.\"\n\nI nodded.\n\n\"So your half-sister the lawyer,\" I said, my eyes widening as I looked at her and saw the faintest familiarity. It wasn't much, but it was there.\n\n\"Yeah, your Florida girlfriend. Susan's my sister. Different father, same mother.\"\n\nI was stunned. No wonder Natalie had laughed.\n\n\"Don't pout,\" Marisa said, seeing the emotions rushing through my face.\n\n\"So when Susan said she knew an agent?\"\n\n\"She lied,\" Marisa confessed. \"I know the agent. But when she read your manuscript, she called me and told me I had to read it and try to get someone to look at it for you. So she sent it to me and I read it. What can I say? She was right. It was incredible.\"\n\n\"So you called Natalie,\" I continued the story for her.\n\nMarisa nodded. \"I've worked for her before. Told her I'd found a brilliant new manuscript that needed an agent to market it. Brand new author. It took some begging and pleading, but she agreed to read it if Susan could get it to her.\"\n\n\"And the rest is history,\" I concluded.\n\n\"Pretty much,\" Marisa agreed.\n\nWe finished our dinners in silence, me not knowing how to feel and wondering why I even gave a shit.\n\n\"Done pouting?\" she said, pushing her plate aside then reaching for a piece of melon on my plate.\n\nI laughed. \"Nothing to pout about, is there?\"\n\nShe shrugged.\n\n\"I mean, you did me a real big favor. Just wish I'd known earlier, I guess.\"\n\n\"What's the difference?\"\n\n\"I wouldn't have backed off so quickly on making Natalie pay for the room.\"\n\nShe shook her head. \"It's still a business. Always remember that.\"\n\n\"And your cut? Do you get something?\"\n\nShe shrugged. \"Natalie will probably give me a bonus of some kind. Not much, but something.\"\n\n\"Then what's in it for you?\"\n\nShe smiled. \"You're kidding, right?\"\n\n\"I know it's not the joy of my company. You've made that clear for the past eleven days.\"\n\n\"The chance to make sure another promising author gets a chance?\" she offered.\n\nI shook my head.\n\n\"Fine,\" she admitted. \"Natalie agreed to be my agent if I can get a book written and it's worth a shit, okay?\"\n\nI nodded. \"Fair enough.\"\n\n\"So now you know everything, right?\"\n\n\"Suppose so.\"\n\nThe waitress cleared the dirty plates, and Marisa ordered the warm peach melba and a glass of Pinot Grigio to go with it.\n\n\"So how's Susan doing?\" I said.\n\n\"She liked you,\" Marisa replied, finishing her Bacardi and Coke and staring impatiently at the kitchen door where her dessert was being made. \"A lot.\"\n\n\"She seeing anyone yet?\"\n\nMarisa turned back to me. \"You really care?\"\n\n\"What's that supposed to mean?\"\n\n\"She just made it sound like you were just fuck buddies is all.\"\n\n\"That wasn't by my choice,\" I argued, feeling my anger rising.\n\n\"Jesus, Tyler,\" she said, making a face at my reaction. \"Chill, man. Nothing wrong with it even if you were. I'm just sayin'.\"\n\n\"Saying what? That she was just a convenient piece of ass? That that's all I cared about?\"\n\n\"Hey,\" she said, \"settle down. I don't really know how you felt\u2013or still feel\u2013about her, okay?\"\n\nI nodded, trying to settle down.\n\n\"Who's that over there?\" Marisa said.\n\n\"Don't change the subject,\" I replied.\n\n\"It's just that she's been staring at you for the past twenty minutes and I can't tell by her face whether it's good or bad.\"\n\nI started to turn, but Marisa's hand on my arm stopped me.\n\n\"Don't look,\" she said. \"She looks a lot like your girlfriend. What's her name.\"\n\n\"Allisyn.\"\n\n\"Yeah, her. And she's with a guy and a baby.\"\n\n\"My ex-wife,\" I said. \"With her new family.\"\n\nMarisa frowned at that, then picked up her spoon and took a bite of the peach melba as it was slid in front of her.\n\n\"Wanna bite?\" she said with a mouthful of peaches, ice cream, and raspberry puree.\n\nI shook my head, content to sip my after dinner cup of strong, black coffee.\n\n\"So that's her new husband?\"\n\n\"And their baby,\" I said, sneaking a quick look to confirm it was, in fact, Kristin. She was staring at me, as was Randy, who appeared depressed by the whole thing. Kristin turned away, but Randy just kept right on looking.\n\nMarisa said something that, with her mouthful of food, I didn't catch.\n\n\"What?\"\n\nShe swallowed, took a sip of wine, then spoke in a low voice. \"I said that's not his baby.\"\n\n\"What d'ya mean that's not his baby? Of course it is. That's why she left. So she could move up here, continue her affair with him, get knocked up by him, and start a whole new family.\"\n\n\"When was the baby born?\"\n\n\"Who cares?\"\n\n\"Because there's no way that's his baby,\" she said, her eyes looking into mine as she spoke. There was a touch of fear there and maybe sadness, and I had no idea what was coming over her.\n\n\"It's his,\" I said again.\n\n\"Look at him, Tyler. He's, what, five six maybe. Stocky build. Jet black hair and dark, dark skin tone. Look at the baby. He's big. I'm guessing he's about a year, but he's big even for a baby. She's not that big; your ex, that is. And the baby's got the blondest hair and bluest eyes I've ever seen. Christ, they're fifteen feet away and I can see the blue in those eyes.\"\n\n\"So what're you saying?\" I said, knowing exactly what she was saying.\n\n\"You've got real light brown hair,\" she said, sipping her wine and looking over my shoulder at Kristin's table. \"And I'll bet you were blonde when you were little. Real blonde.\"\n\n\"He's not mine,\" I said.\n\n\"And you have blue eyes, too. Big time. And your skin's light. Not dark like what's his name's skin tone.\"\n\n\"He's not my baby,\" I whispered, my voice going hoarse as I counted months in my head.\n\n\"Then when was he born?\"\n\nI shrugged. \"Don't know.\"\n\nShe nodded.\n\n\"You may want to find that out,\" she said, pushing her half-eaten dessert to the side before gulping down the rest of her wine.\n\nWe left without another word between us.\n\nAnd I felt Kristin's eyes gouging holes in my back as we walked past them."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/what-you-wish-for-pt-03"
}