{
    "title": "It's The Way You Look At Me Ch. 14",
    "pages": [
        "I leaned over and softly kissed Jamie on the cheek before I rolled out of bed. She didn't even stir as left the room. She was probably tired from the past week of work. She had been very busy this week getting the catalog ready for the spring issue that was due out early next month. I turned and looked at her one last time before leaving the room and heading for the thermostat.\n\nIt sure didn't feel like spring was just around the corner. It was quite cold here this morning in Paris. The weather didn't usually stay this cold but for some reason it was. A light snow had fallen last night and covered everything a dusty white this morning. I knew by noon it would warm to about fifty degrees and it would all melt away.\n\nI turned the temperature up and rubbed my hands together before I went to the kitchen. I found my beany cap on the bar top where I had left it last night so I pulled it over my head. I probably should have put a shirt on over my bare chest but my sweat pants and cooking over the hot stove would keep me warm.\n\nIt had been like this every morning since we had gotten here. I got up early and worked out before coming back to cook Jamie breakfast before she went to the office. I slept in a little this morning since it was too cold for me to go jogging around anyway. I would wait until the afternoon before I ventured out and braved the crowds.\n\nI pulled the bacon and eggs from the fridge and placed them on the counter. I cracked open a few and scrambled them in a bowl before placing the bacon in the pan to get that started. I worked to get the coffee started as I tended to the bacon so it wouldn't burn. I found the pastry from yesterday and pulled it from the box to take a bite. I set it down and turned the bacon before dumping the eggs into the pan to cook them. I turned around and got a cup for my coffee.\n\n\"Hey baby,\" I smiled as Jamie wandered out into the living room.\n\n\"Morning baby,\" she smiled. \"Thank you for cooking again.\"\n\n\"I make a good house husband don't I?\" I teased.\n\n\"Yeah,\" she smiled. \"You will make some lucky girl happy one day.\"\n\nI smile at her as she sat down at the bar stool and waited for me to finish.\n\n\"You could have woken me up and I could have cooked,\" she offered.\n\n\"I kissed you good morning but you didn't move. I thought I would let you sleep in.\"\n\n\"I need it,\" she smiled. \"I've been so busy this week. Sorry I'm not my normal self.\"\n\n\"Don't worry about it baby,\" I smiled. \"Once this week is over we can take a break and get out of the here.\"\n\n\"I can't wait,\" she cheered. \"I'm actually getting tired of Paris. Carrie needs to send me someplace else besides here.\"\n\n\"Isn't that the truth,\" I chuckled.\n\nI rounded the bar top to where she was sitting in her chair. I leaned down with her coffee in my hand and set in on the bar top next to her. I turned to her and placed a gentle kiss on her mouth as she smiled at me. She giggled softly into my tender kiss and returned the favor in that loving way she had always done. I pulled back after a couple more and looked at her smile. Her white teeth showed brightly behind those big lips I loved to kiss so much. She pawed my face and pulled me in for one more before I stepped back and headed for the stove again.\n\nI flipped the bacon again and glanced her way as she pushed herself from the seat. She headed towards the big window in the apartment to pull the curtain open. Her long sleeved shirt hung about mid-thigh and kept my attention now as she reached the curtain and gave it a pull. The morning sunlight flooded the room brightly as she looked out the window.\n\n\"The snow is still hanging in there,\" she noted as she started to stretch.\n\n\"Great,\" I said sarcastically. \"My favorite thing.\"\n\nShe laughed softly as I looked her over again. The shirt was pulled high up on her legs and showed the soft creases of her butt cheeks on her legs as she stretched her arms above her head.\n\n\"It won't be so bad,\" she offered as she turned and held her pose.\n\nShe caught me in a dead stare as the shirt remained high on her legs and showed me the soft line of her cunny. She held her pose a little longer in her teasing way before she brought her hands down to the hem and pulled it to cover her puss.\n\nI wanted her already. I had wanted her since last night but we ended up working on the catalog instead and were too tired by the time we went to bed. I never let that bother me though. It wasn't just about the sex with her. It was just being here with her and spending time with her. That's what really mattered to me. A couple of months from now I would be focused on football and she would be out on her own again doing her job.\n\nShe walked slowly across the floor back towards her seat again. She slightly slid across the floor in her socks was more like it. Like she was ice skating across the wood floor until she reached her seat. She leaned over the bar top and pulled her hair from her loose bun to retie it. If only I was on the other side of the counter. I moved over to my left a little and caught her butt as it reflected in the mirror.\n\nShe slipped into her seat again once she was done and satisfied that her hair was ok. I winked at her before I refocused on the eggs and stirred them again. Then I found the blender and dumped a scoop full of protein in with some milk. I pressed it on and let it mix before stopping it and pulling it off.\n\nI took a sip and continued to look at her. She sat there with her hands folded under her chin and waited on me to finish our breakfast. The way she looked at me now with her pure blue eyes. They studied my eyes before she smiled her perfect and content smile. I couldn't help but smile back at her before I took another drink.\n\nI blew her a kiss as I set the cup down and leaned against the counter again. She batted her eyes and continued to look at me. Those eyes seemed to look straight through me and into my heart. She could see that I truly loved her and nothing else mattered. I loved the way she looked at me just as much as she loved the way I looked at her.\n\nThe clock inside my head went off as I turned and went to the eggs again. I gave them another turn and found them firm and cooked. I killed the heat and grabbed two plates to divide them up. I put a smaller portion on her plate before dumping the rest on mine. I gave her half the bacon and myself the other half before grabbing both plates.\n\nI sat next to her as she leaned in and gave me another kiss to say thank you for making the breakfast. I took a bite of my eggs and glanced over at her sitting next to me now. Her legs were apart as she sat there relaxed and ate her food. The way the sun was striking her tanned skin kept my attention. My hand couldn't help but leave my side and rest on her leg.\n\nHer warm skin met my fingers as I rested them there and softly touched her. She smiled at me as she ate another bite and chewed it silently. I rubbed her skin as I took another fork full of food and chewed it. I felt the soft skin run under my fingertips. She just ate and gave me that smile and those eyes again.\n\nHer legs parted just a little as I reached the hem of her shirt that rested on her thighs. I didn't venture past the hem for now. I just stroked her leg and felt content as her warm and soft skin ran under my touch. She smiled at me touching her as she ate slowly.\n\n\"I love you Jamie,\" I said softly.\n\nI drew a heart on her leg with my fingers as I took my last bite. I trailed down to her knee and touched the back side of it to tease her a little. She giggled as my fingers touched her ticklish spot. I took my last sip of my drink before looking at her again. Her eyes were playful as she brought her hand over to my stomach and felt my tight skin.\n\nHer fingers teased my skin as she traced the outline of my muscles. She flattened her hand out over my stomach and moved it up to my peck. She squeezed it in her hand before she teased my nipple with her nail. That always made my cock stir for some reason. She knew and did it just to be a tease before she let her hand fall to my lap and rest against my cock as it strained in my pants.\n\n\"What time do you have to be in this morning?\" I asked.\n\n\"Not until ten,\" she replied.\n\n\"What do you have going on today?\"\n\n\"A photo shoot for some underwear we are going to have in the catalog this spring.\"\n\n\"Some handsome hunk going to be the model?\" I teased.\n\n\"I don't really know,\" she said. \"I just made the call and asked for a model. I don't know what I am going to get.\"\n\n\"Oh,\" I said.\n\n\"I should have just used you,\" she teased. Her hand rubbed my leg now as she spoke.\n\n\"I'm not a model,\" I sighed but still smiled at her compliment.\n\n\"No,\" she giggled. \"But you are sexy like one.\"\n\n\"If you say so,\" I sighed.\n\n\"I do,\" she said as she finished her last bite. \"And I'm always right too.\"\n\nI chuckled softly as I pushed myself away from my stool and stood. I went behind her and reached for her plate. She turned her head and looked at me with those eyes again and that smile of hers. I knew she wanted a kiss so I found her lips with mine and placed a gentle one on her mouth. Her hand found my chest again as she kissed me with just a little more force behind it.\n\n\"Thanks for the vote of confidence,\" I said as I pulled back.\n\n\"It's true,\" she smiled. \"You are very sexy.\"\n\n\"Sure baby,\" I smiled back. \"You are the better looking one of the two of us. Especially with those eyes of yours. And those perfect little legs that lead to that perfect little butt of yours.\"\n\nI dropped my hand to her butt and gave it a soft squeeze. She giggled her little giggle as her hand trailed down my chest to my pants. I couldn't help but lean down and kiss her neck right at her shoulder where the shirt left the skin exposed. I let it linger there and kissed her wetly. She melted to my touch and tilted her neck a little more to give me more skin.\n\nThe skin on her arms popped with goose bumps as she let out a low, sexual growl. I continued up her neck to the spot right up by her ear. I knew her spots and got the response I wanted from her. She leaned into my lips more telling me she was getting turned on.\n\nMy hand slipped under her shirt at her tummy. I traced her skin all the way up to her breast as she continued to let me kiss her neck. Her nipple was hard and pressed into my palm as I cupped her tit. She let out her first moan as I teased her nipple with my fingers. Her breath caught in her throat as I gave it a soft twist and moved my lips to kiss near her throat.\n\nI felt her body start to turn and rotate the chair towards me. We worked in silence as she twisted her body around and spread her legs out around mine. My lips never left her neck as she stopped moving and moaned again. It vibrated against my lips as she tilted her head and let me work.\n\nHer hands found my cock and traced it as it pressed hard against my pants. Her thumbnail scratched the ridge as my hands worked down her body and between her spread legs. I moved the hem off her hips and let it rest in her lap as my fingers worked back towards her middle. I was kissing further down her neck towards her collarbone as my finger traced her slit.\n\nShe tilted back in the chair now and opened herself up to me more. I slipped one finger inside as she gasped at the suddenness of me slipping inside. I let it rest there as she hooked her thumbs around the elastic of my pants. They slipped down my legs until my cock sprang free. Her fingers curled around it as her thumb circled the wetness at my tip.\n\nI started moving my finger inside of her as she stroked me. I listened to her gasp again as I reached deep inside of her. She pulled me faster and shifted in the chair again so she was sitting right on the edge of the seat. She pulled me closer to her until my cock touched my hand between her legs.\n\nI slipped my hand from her wetness and gripped her legs right at her knees. I lifted them up as she teased her opening with my cock. She coated it in her wetness before shifting her body again to take me inside of her. I felt my cock start to part her as I pushed forward to close the gap. We both let out a gasp as I opened her up and slipped in so easily.\n\nI let myself slide inside until I was almost buried all the way inside. I had to spread my legs just a little to get a better angle before I pressed the rest inside. I rested there for a moment and let her heat and wetness surround my cock. She squeezed her muscles as I found her mouth with mine now.\n\nWe kissed with a deep and desirable kiss as I slipped away until I was barely inside of her. She gasped into my mouth as I slowly returned until my hips bumped her legs. I retraced her tunnel all the way out. Her wetness coated me and let me slide so easily out of her. I loved how wet she was right now. I had to pull away from her mouth as she gasped again. Her hot breath hit me in the face as I slipped into her again.\n\nI looked into her blue eyes as I pressed into her at a slow and unhurried pace. The way she looked at me now, it made me smile as I felt her love and passion for me. Her hand softly pawed my face again as she pulled me closer and found my mouth. She placed these deep, open mouth kisses on me. She panted into my mouth with each press of my body into her.\n\nI picked her legs up higher as I changed the pace a little. I folded them over and held them together before placing them on my shoulders. She slipped just a little further down into the chair and rested her head on the countertop as I pressed so deep into her now. I changed my stance just a little more and slipped deeper into her still. I could feel her wetness leaking from her center and coating her cheeks as I slipped in and out of her.\n\nShe was moaning, gasping hard, as I fucked her with an unhurried pace. I focused on her eyes as I slipped so easily into her center. She was soaking wet now and close to cumming. I knew her body so well. I could tell she was right on the edge as I pressed into her and tilted my hips just a little more to touch her end. She gasped and moaned as she gripped the counter with her hand to control her body. She flooded me as she started to cum.\n\nI slowed just a little and let her cum hard before stopping my body. I rested deep inside of her and let her walls squeeze me. I just softly turned my hips and slipped in the flood she released. She smiled her content but hungry smile at me as I looked at her. She playfully pushed me away to tell me she wanted to change. I stepped back and slipped from her wetness as she spread her legs around my body.\n\nI fell to one knee before she could sit up and leave the chair. I spread her legs wide again and moved to her center. My tongue touched her cunny. Splashed into her wetness with my tongue as I tasted her cum. Loved the way she tasted after she got off. She gasped at my touch. Fingers curled in my hair as she relaxed and opened her legs more. I licked her from her pucker all the way to her clit, tasting her sweet cream as it leaked from her. I dug my tongue into her hole, lapping at her as she moaned playfully.\n\nI dug my tongue deeper into her hole and brought my fingers up to spread her open. Gasped as I exposed her cunny more and teased her clit with a finger. My whole mouth covered her cunny as I ate her and sucked her cum from her. Felt her fingers curl hard in my hair and pull it as she moaned loudly. Her hips started to turn against my tongue as I dug my tongue into her hole.\n\nI knew the flood was coming as I worked just her clit. She pulled me so tightly to her cunny as she whimpered and bucked her hips against my face. I held my breath and sucked her clit into my mouth and rolled it on my tongue and between my lips.\n\nHer chest heaved as she gasped hard. Ragged pants as she flooded my mouth and gripped my hair harder to pull me tighter to her cunny. I never slowed down as she cried out her warning and squeezed her legs around my ears. It was just a muffled gasp as she flooded my chin.\n\nI slowed down as she released her grip and let me breath again. I looked up at her from between her legs. Her chest rose and fell hard and fast from the act. Her eyes were slightly parted as her mouth hung open and took in air. She smiled down at me now as I gave her another long lick and tasted what she leaked again.\n\nI finally leaned back just a little and took in her cunny. It was just as perfect now as it was when I had first tasted it that night in my room on my bed. Her outer lips were puffy and swollen with excitement, her pink little inner lips were barely visible. Her clit stood out proudly from behind its hood, a trickle of white wetness leaked from her middle. I leaned in and tasted her sweetness before I stood now and wiped my chin.\n\nShe stood on shaky legs as she climbed from her chair. I took her in my arms to steady her. She pulled me to her mouth and kissed me, tasting herself as she did. I loved that most about her. She wasn't afraid to be a little dirty. We kissed a few times before she went to turn. I couldn't help but find her neck and kiss it again. Her skin was so flush and red from earlier.\n\nShe growled and finally pulled away from me. She turned around and sat back in the chair with her back to me. Her legs hung off either side as she let her ass and cunny hang off the back of it. She arched her back hard to bring her cunny up and out and give me the space to find her from behind. I could have either hole in this position but I chose her puss. I knew that's what she wanted anyway but she would have gone for either at this point.\n\nI couldn't help but kneel down again and taste her cunny. I couldn't get enough of the taste. I licked her from her clit and stopped at her pucker. Tongued it hard and pressed the tip inside before pulling out and slipping it into her cunny. Her fingers curled in my hair as she stopped me from licking her now.\n\nI glanced up at her as she looked at me with those lustful eyes. She curled her finger as she directed me to stand and find her once again with my cock. I stood and took my cock into my hand. Pressed it against her soaked cunny and felt it part her lips. Her lips parted as I felt her heat and wetness surround my cock as I sank into her once again.\n\nShe whimpered then gasped as I filled her all the way. Hands went to the counter and gripped it hard turning her knuckles white as I slipped all the way inside until my hips bumped her ass. I slowly started to pull out until I was just stretching her with my head. One single fuck left her mouth as I started to slide back inside of her again. It was the first word she had said since we had started this.\n\nI was careful now as I slipped in and out of her. I didn't want to press too hard and knock her off balance and off the chair. I widened my stance more to allow myself to press deep into her and touch her spots. She shifted in the chair slightly and got more comfortable. Her grip on the counter never changed as I pressed deep into her and touched her end.\n\nThis position was intense as her cunny gripped me tightly despite how open she was. It was the angle and how my cock was slipping into her. It was intense for her too as she looked over her shoulder at me. I could see it on her face as she gasped as my hips bumped her ass again. I leaned over her body and kissed her neck as I moved my hips now. She gasped again as my lips touched her sensitive skin. It sent another wave of goose bumps down her arms as I fucked her lightly.\n\nI placed my hands on her hips and held her firmly to the chair as I started to pick up the pace a little more. She undulated her hips a little making me slip from her. I quickly gripped my cock and felt her sticky wetness coating it thickly. I pressed it against her folds and listened to her gasp as I filled her once more. I stood more upright now so I wouldn't slip from her again.\n\nMy hands still gripped her hips tightly as she twerked her hips in rhythm with me. She glanced over her shoulder at me as I picked up the pace again. Her eyes were open then closed quickly as she gasped hard. Her mouth hung open and her nose wrinkled the way it did when she was in intense pleasure. I loved that look.",
        "I felt her cunny start to squeeze me again as she grew closer. Her one hand finally left the counter to grip my forearm as I held her hips still. Her nails dug into my skin as her pleasure began to intensify. I knew she was ready to cum but she was waiting on me.\n\n\"Almost baby,\" I panted.\n\nShe relaxed her grip just a little and arched her back harder. Little whimpers leaving her mouth with each crash of our bodies. Her nails dug into me arm again sending pain and pleasure through my body. Her cunny was quivering as she could barely hold on now.\n\nMy loud cry told her I was cumming. I felt her cunny squeeze then release as I flooded her. I shot wave after wave inside of her quivering cunny. The room started to spin as I filled her deep inside her womb. I had to slow down and rest deep inside of her. Her cunny milked my cock for the last drops before we were both spent.\n\nWe were both panting hard as we looked at each other. I wanted to kiss her now so I leaned down and caught her mouth. My cock slipped from her as she sat up and kissed me. It was a hard and passionate kiss as I pulled her head to my mouth. Our tongues tangled in the middle until she pulled my lower lip out and chewed it softly.\n\nShe let it go as her eyes opened and found mine. I could feel my seed dribbling out of her now and landing on my cock as it rested between her legs on her lips. It was still just as hard as it was when I first entered her. I could have had her again right about now. The thought was running through her mind as she smiled that smile at me.\n\nI checked the clock and saw it was past nine now and she still needed to get ready to go. But still, maybe it wouldn't hurt for her to be late just once. My hand touched the sticky mess between her legs as I pushed my cock against her opening.\n\n\"No, no, bad boy,\" she giggled. \"I have to work.\"\n\n\"Damn,\" I joked. \"Can't blame a guy for trying though.\"\n\nShe giggled her little giggles again. \"No, I certainly can't. That was a great breakfast though.\"\n\n\"Umm hmmm,\" I agreed.\n\n\"I can't think of a better way to start the day,\" she smiled.\n\n\"Seconds?\" I teased.\n\n\"Oh god,\" she giggled. \"I don't know about that. My legs are like jelly right now.\"\n\n\"I can take you to the bed and lay you down,\" I started. \"I can make love to you all day long. You wouldn't have to do a thing.\"\n\n\"That does sound tempting,\" she smiled her coy little smile. \"But I have to go in today.\"\n\n\"Go get cleaned up baby,\" I smiled. There wasn't a hint of disappointment in my voice.\n\n\"Thank you,\" she smiled back. \"I love you Owen.\"\n\n\"Love you too Jamie.\"\n\n\"What should I make you for dinner?\" I asked slyly.\n\n\"I hope it's as good as breakfast,\" she smiled.\n\n\"I'll think of something.\"\n\n\"Hmmm,\" she growled and kissed me again.\n\nShe playfully pushed me away and headed for the bedroom to get ready. I watched her go. She seemed to float across the floor now as she headed off. I turned and went to get the dishes started and to clean the mess off the chair and the floor.\n\nI had just finished the last dish when the phone started ringing.\n\n\"Can you get that?\" Jamie called.\n\n\"Sure,\" I replied.\n\n\"Bonjour,\" I said. (Hello)\n\n\"Bonjour. Puis-je parler \u00e0 Jamie se il vous pla\u00eet?\" (Hello. Can I speak to Jamie please?)\n\n\"Tenir une minute se il vous pla\u00eet. Permettez-moi aller la chercher.\" (Hold on just a minute. Let me go get her)\n\n\"Puis-je demander qui appelle?\" (Can I ask who is calling?)\n\n\"Il est Anna de l'agence de mannequins.\" (It's Anna from the modeling agency)\n\n\"It's for you,\" I said to Jamie.\n\n\"Who is it?\"\n\n\"Anna from the modeling agency.\"\n\n\"Bonjour Anna,\" Jamie said.\n\nI turned and headed back to the kitchen to start drying the dishes so I could put them away. Jamie followed me out into the kitchen and listened to Anna talk.\n\n\"Vous avez \u00e0 me faire marcher,\" Jamie cried. (You have got to be kidding me.)\n\nI looked up as she had a pissed off look on her face. She listened still then spoke in the same annoyed tone.\n\n\"La date limite est demain. Je dois avoir des photos faites aujourd'hui.\" (The deadline is tomorrow. I have to have the photos done today.)\n\n\"Vous \u00eates d\u00e9sol\u00e9?\" she quipped. (You are sorry?)\n\n\"Vous ne devez pas quelqu'un d'autre?\" (You don't have anybody else?)\n\n\"Court pr\u00e9avis? Je r\u00e9serv\u00e9 ces deux semaines \u00e0 l'avance.\" (Short notice? I booked this two weeks in advance.)\n\n\"Oublier. Je vais comprendre.\" (Forget about it. I will figure it out.)\n\n\"Non, il est tr\u00e8s bien. Je ai un autre mod\u00e8le que je peux utiliser.\" (No, its fine. I have another model I can use.)\n\nShe looked at me as she said this. I knew exactly what she was thinking as I shook my head no. She shook her head yes as she listened to the woman on the other end of the phone.\n\n\"Ne vous attendez pas que nous utilisions votre agence plus. Je ne suis pas besoin de ce casse-t\u00eate.\" (Do not expect us to use your agency anymore. I don't need this headache.)\n\nShe hung the phone up and looked at me with her pleading eyes.\n\n\"I'm not a calendar boy,\" I said quickly.\n\n\"Good thing this isn't a calendar shoot,\" she joked. \"It's an underwear modeling shoot.\"\n\n\"I ain't that either,\" I said quickly.\n\n\"Please Owen,\" she begged now. \"I have to get this done by today and you are my only option right now.\"\n\nI couldn't resist those eyes but I really didn't want to do it.\n\n\"Please,\" she begged again.\n\n\"I'm not an underwear model,\" I said. \"I don't have to body for it.\"\n\n\"Look at you Owen,\" she said confidently. \"You have the body that drives women crazy.\"\n\n\"If you say so,\" I replied.\n\n\"I do baby,\" she smiled. \"Believe me, I know.\"\n\n\"Do you now?\" I teased.\n\n\"Trust me,\" she smiled again.\n\nI sighed.\n\n\"Please Owen,\" she begged. Her little girl voice coming out as she looked so damn cute right about now.\n\n\"You owe me then,\" I joked. \"What do I have to do?\"\n\n\"Get dressed and come with me,\" she smiled. \"We can work it out once we get to the office.\"\n\nI sighed before I slipped my pants off my legs and headed for the bathroom.\n\n\"Should I shave?\"\n\n\"No,\" she said quickly. \"The scruffiness is the perfect look. Just get dressed.\"\n\n\"Can I take a shower first? I want to feel clean.\"\n\n\"Hurry up,\" she sassed. \"I'm going to be late.\"\n\n\"I tried to talk you out of going into work today,\" I teased.\n\n\"Yeah, yeah,\" she sassed again. \"Hurry up you pain in the ass.\"\n\n\"I'm the pain in the ass?\" I chuckled.\n\n\"Yes you,\" she giggled her little giggle. \"Hurry up.\"\n\n\"Should I bring a sock or something with me?\" I asked from the bathroom.\n\n\"A sock?\" she questioned.\n\n\"To stuff in my underwear so I look bigger,\" I answered.\n\n\"Geez,\" she laughed. \"No, you are plenty big without a sock.\"\n\n\"Are you going to fluff me a little?\"\n\n\"You're sick,\" she giggled again. \"Besides, the photographer is a guy.\"\n\n\"Say what?\" I called as I got into the shower.\n\n\"Just kidding,\" she said sweetly.\n\nI scrubbed myself quickly then got dressed. We were out the door and got to her office just a little late. We went up and into the office so she could make a phone call to Carrie to let her know what was going on. Then we went up another floor to a bare office that was set up for the photo shoot.\n\n\"Je pensais que nous allions annuler,\" the photographer said. (I thought we were going to cancel.)\n\n\"Non, je trouvai un remplacement,\" Jamie said. (No, I found a replacement.)\n\n\"Je suppose qu'il va faire,\" she said looking me over. \"Il a l'air assez beau.\" (I guess he will do. He looks handsome enough.)\n\n\"Juste attendre jusqu'\u00e0 ce qu'il prenne sa veste. Il ya beaucoup sexy,\" Jamie smiled. (Just wait until he takes his jacket off. He is plenty sexy.)\n\n\"Hey,\" I said to Jamie. \"I'm not a piece of meat.\"\n\n\"Que dit-il?\" the photographer asked. (What did he say?)\n\n\"Il a dit qu'il est heureux d'\u00eatre ici,\" Jamie lied. (He said he is happy to be here.)\n\n\"Bien,\" she smiled. (Ok)\n\n\"I take it she doesn't speak English?\" I whispered to Jamie.\n\n\"Only a little,\" Jamie replied. \"And she doesn't know you can speak French either.\"\n\n\"Hmm,\" I smiled. \"Let's keep it that way.\"\n\n\"Why?\" she asked slyly.\n\n\"It could be fun.\"\n\n\"Oh god,\" she sighed.\n\n\"Or I can leave,\" I teased.\n\n\"No,\" she sassed. \"We can have a little fun with her I guess.\"\n\n\"That's my girl.\"\n\n\"Bon, laissez-nous commencer. Le vestiaire est ici,\" the photographer ordered. (Okay, let's get started. The changing room is over here.)\n\nJamie repeated what I already knew and showed me to the changing room. It was just a small room with a curtain covering the door. There was a little bench seat and a few hangers to hang things from. I stood in there and dropped my jacket off my shoulder before I took my shirt off.\n\n\"Ceci est le premier que vous allez commencer,\" she announced and pulled the curtain open. (This is the first one you will start with.)\n\n\"Good thing I wasn't naked in here,\" I said.\n\nShe just smiled and tossed the jockey shorts my way. I knew she couldn't understand me anyway. I dropped my pants and my boxers and stood there naked in the small room. I slipped the underwear up my legs and stood there looking at myself in the mirror. Jamie is going to owe me I thought as I looked at the reflection.\n\nI pulled the curtain back and walked out to the white wall and stood there waiting for instructions.\n\n\"Perdre le chapeau et fixer vos cheveux,\" she barked. (Lose the hat and fix your hair.)\n\nI almost pulled the beanie off my head but I waited until Jamie told me in English to do as I was told. I tossed the beanie her way.\n\n\"What's wrong with my hair?\" I asked.\n\n\"It's just a little messy,\" she smiled. \"Let me fix it for you.\"\n\nShe fixed my hair and turned to look at the photographer. \"Est-ce bon?\" (Is that good?)\n\nShe nodded and took her camera out and checked on it.\n\n\"Il est assez beau. Je voudrais l'estomac. Il est tr\u00e8s en forme,\" she offered. (He is pretty handsome. I like the stomach. He is very fit.)\n\n\"Oui,\" Jamie smiled. (yes)\n\n\"Tenez comme \u00e7a. Poussez vos hanches sur,\" she ordered. (Stand like this. Push your hips out.)\n\nI understood and did as I was told since she was standing how she wanted me to stand. She started snapping pictures of me as I moved around and did different poses that she instructed me to do. Jamie was telling me what she wanted like I didn't know what she was saying. I was surprised she was playing the game with me like she was.\n\nThe camera girl was flirty and making all sorts of little comments about me. She wanted to see me without the underwear on. She bet I was hung and could make her toes curl. I just smiled the whole time and pretended like I didn't know a thing.\n\n\"Bien,\" she said. \"Allez mettre sur les bleus maintenant.\" (Ok. Go put on the blue ones now.)\n\nI turned to go back to the room. \"Dois-je le suivre et jeter un coup d'oeil \u00e0 lui?\" she asked Jamie. \"Peut-\u00eatre que je peux le ramener chez lui avec moi. Si vous ne voulez pas lui.\" (Should I follow him and sneak a peek at him? Maybe I can take him home with me. If you don't want him.)\n\nI couldn't help but turn around now. \"Je suis d\u00e9j\u00e0 pris mais je vous remercie.\" (I am already taken but thank you.)\n\nShe turned beet red as Jamie laughed. \"Ouais, je peux parler assez bien le fran\u00e7ais. Voil\u00e0 pourquoi je suis tellement souriant.\" (Yeah, I can speak French pretty well. That's why I have been smiling so much.)\n\n\"Je suis d\u00e9sol\u00e9. D\u00e9sol\u00e9 si vous avez trouv\u00e9 me inappropri\u00e9,\" she said embarrassed. (I am sorry. Sorry if you have found me inappropriate.)\n\n\"Il est tr\u00e8s bien. Je trouve \u00e7a dr\u00f4le,\" I replied. (It's fine. I find it funny.)\n\nI turned and went to the changing room to get into the blue ones now. I couldn't help but laugh as I stepped out of the changing room and headed back out for another round of photos. It went easier now since she knew I could understand her. She still made some comments about me but she had backed off some.\n\nShe ordered me to turn around and shake my butt a little. They both laughed as I did my best to do what I was asked.\n\n\"You shake it better than I can,\" I said to Jamie.\n\n\"That's my trademark isn't it?\"\n\n\"Especially when you are riding me,\" I said.\n\n\"Owen,\" she sassed. \"You're bad.\"\n\n\"I hope she can't understand us,\" I smiled. \"Wouldn't that be funny?\"\n\n\"No,\" she smiled. \"It wouldn't.\"\n\n\"I can't wait until I get you home tonight,\" I teased.\n\n\"You want me to twerk my hips like that?\" she asked.\n\n\"It's making me hard just thinking about you doing it.\"\n\n\"Owen,\" Jamie sassed.\n\n\"Bon, revenir \u00e0 nouveau autour,\" she ordered. (Ok, turn back around again.)\n\nI was a little turned on as I turned back around. My cock was pushing the underwear out just a little more as I turned. Jamie noticed right away as her eyes focused on my cock. She wasn't the only one that smiled as I stood there with my hand on my hip. I pushed it out just a little more as she snapped a few shots.\n\n\"Le temps d'une pause. Je dois changer la batterie.\" (Time for a break. I need to change the battery.)\n\n\"Voulez-vous que je change dans la paire blanc?\" I asked. (Do you want me to change into the white pair?)\n\n\"Oui,\" she smiled. (Yes)\n\nI left the floor and headed back to the changing room again. I pulled the curtain closed and slipped the blue underwear off before tossing them into the corner with the other ones that I had already done. The curtain opened as Jamie slipped inside with me.\n\n\"Fuck,\" I croaked. \"Haven't you heard of knocking?\"\n\n\"Knocking?\" she questioned. \"On what, the curtain?\"\n\n\"Touch\u00e9,\" I smiled.\n\n\"How are you doing out there baby?\" she asked.\n\n\"Alright I guess. This isn't my thing.\"\n\n\"You look hot out there Owen,\" she said. \"Really hot, I'm turned on. My panties are soaked.\"\n\n\"That's a lie,\" I teased. \"You probably aren't wearing any.\"\n\n\"I'm wearing some today,\" she sassed. \"It's a tiny little thong though. They are so damp right now. Hmmmm, fuck.\"\n\nThat little growl at the end. It made my exposed cock start to swell. She walked to me now, ran her hands across my chest as she looked up at me with those sexy eyes of hers. They said she wasn't lying about being wet. She licked her big lips, which seemed to be swollen more than normal, to wet them. I knew that look, I had seen it a thousand times before. One that spoke to my sexual side and made my cock continue to inflate.\n\nI pulled her closer to me and kissed those wet lips of hers. She growled and gasped into my kiss as her nails gently raked my skin from my nipples all the way down to the base of my cock. It sent another chill through my body as she touched my base and curled her small fingers around my mostly swollen cock. She pulled my bottom lip out with her teeth gently before she let go.\n\nIt stunned me as she squatted down in front of me now and looked at my cock. She licked her lips again as she looked up at me with a look of lust in her eyes now. I watched as she opened her mouth and took me inside. I slowly slid all the way into her mouth in one swallow until I touched the back of her throat. Her heat and pressure from her mouth made me gasp as she held still and let her tongue trace me.\n\n\"Fuck,\" I gasped. \"Jamie, what about what's her face?\"\n\n\"Hmmm,\" she growled as she retreated and pulled my cock from her mouth.\n\n\"Elle a besoin d'une autre batterie. Elle a d\u00fb courir au magasin pour en obtenir un,\" she said softly. (She needs another battery. She had to run to the store to get one.)\n\nMy cock went back into her mouth before I could process and respond. It took me a second to translate and comprehend what she had just said to me. I felt the back of her throat as she tried to relax and let more of me slide into her mouth. It happened just as I finally processed the information. I felt her teeth gently close around the base of my cock.\n\n\"How long will that take?\"\n\nShe shrugged her shoulders as I started to come out of her mouth. She teased the tip with her tongue and circled the head before taking me back inside. I couldn't say anything but a long fuck as I felt the back of her throat again.\n\n\"Hum hmmm,\" she growled again.\n\nShe let me slide from her mouth again until I was out. She looked up at me as she held me now and ran her tongue the length of my cock to my sack. She went back up the other side still looking up at me with those eyes.\n\n\"Stand up,\" I ordered.\n\nShe didn't hesitate and stood quickly. I grabbed her hips and turned her into the wall. I forced her against the wall like I was the cops and I was frisking her. She pressed up against the wall as I dropped to my knee behind her and worked the button on her grey dress pants. It opened quickly and the zipper followed just as fast. I worked them off her hips until her perfect ass with the white string splitting the middle came into view. I let them rest right at the bottom of her butt as I kissed the supple flesh on her cheeks.\n\nShe arched her butt out harder in response to my mouth against her butt. She let me kiss her as I slipped her pants further down her legs until the piled up at her ankles. I used my hand to pull her cheeks apart and expose her cunny covered by the smallest piece of fabric. Both her lips flared open on either side of the cotton but hid her opening for the moment.\n\nShe was wet just like she said. The white cotton showed how much of her desire had soaked into them. Her little lips were moist as I leaned in and licked the cotton right between her legs. I tasted her desire as she gasped at my tongue touching her. I slipped it under the edge and touched her opening. She brought her hands back and pulled her cheeks open to give me more space.\n\n\"You're a bad girl Jamie,\" I teased.\n\n\"Tell me about it,\" she sassed right back.\n\n\"Why are you so wet?\" I asked. My finger pressed into her wetness as she gasped. I slipped all the way inside in one push.\n\n\"Because you are fucking hot in those underwear,\" she whimpered.\n\n\"I'm not in them now,\" I teased more.\n\n\"I know,\" she gasped again. \"Even hotter now. Fuck, I'm so wet right now.\"\n\n\"Bad girl Jamie,\" I teased again.\n\n\"Please,\" she begged now. \"Please fuck me.\"\n\n\"Jamie,\" I gasped in mock shock. \"Right here?\"\n\n\"Yes,\" she panted hard. \"Fuck, I need you right now.\"\n\n\"I don't know about that Jamie,\" I continued. \"What will that lady think when she hears you moaning?\"\n\n\"I don't care,\" she begged. \"Please, don't leave me like this.\"\n\n\"Leave you like this?\" I asked. My fingers pressing in and out of her as we spoke. \"What about me? Look what you have done to me.\"\n\n\"I'm so wet Owen,\" she played along now. \"You would slide inside so easily. Please.\"\n\nHer little girl voice was coming out now as she begged. I couldn't ever resist that voice. My fingers curled around her hips and pulled her thong down her legs until it rested at her knees. I never left my spot but pulled my finger from her cunny. She still held herself open as she rested her body against the wall as she waited on me. My tongue took the place of my finger as I tasted her desire now. Her cunny was soaked and leaking her wetness as I pressed into her opening. She gasped as I licked her and circled my tongue against her cunny.\n\n\"Please Owen,\" she begged again. \"Fuck me.\"\n\n\"Since you said please,\" I teased as I stood.\n\nI changed my stance since there was a height difference between us. I pressed my cock against her opening as she still held herself open. I felt myself part her and open her up for the second time today. She seemed wetter and more turned on right now than she did this morning. My cock sank slowly into her as she moaned her desire.\n\nMy hips touched her ass as I bottomed out inside of her. I held myself close to her and thrust my hips into her now. It was just a short but powerful stroke as I fucked her. My hips slapped against her ass making the sounds of sex fill the small room. Each crash of my body into hers made her ass softly ripple with perfection.\n\nI curled my fingers around her body from the front to get between her legs. She let out another whimper as I found her clit and circled it with my fingers. I could already feel her cunny squeezing me as she grew closer to cumming.",
        "\"Already?\" I asked softly. My mouth was right by her ear.\n\n\"Fuck,\" she gasped. \"Yes. I told you I was wet.\"\n\n\"I can tell,\" I whispered again. My hot breath hitting her ear as I spoke. Knew it would make her pant more. \"Cum for me Jamie. Squeeze my cock with that little pussy of yours. Soak my cock with your cum.\"\n\nHer hips undulated as I held my cock deep inside of her. She started pressing back into me now as I held still and let her fuck me. She was up on her toes as she tried to fuck me with more force. Her muscles tensed as she started to cum.\n\n\"Fuck,\" she yelped. \"Cumming.\"\n\nI used my hand to cover her mouth as she bucked hard against me and flooded my cock. She panted in a ragged breath around my fingers as she came hard. These little whimpers left her lips as she finished but never slowed down. I withdrew and stepped back. My cock glistened with her cream as I continued backwards to the little bench seat.\n\nShe wasted no time now. Kicked her boots off her feet then climbed out of her pants and left them on the floor. The thong quickly followed as she threw it at me. I moved my head out of the way as it hit the wall next to me. She followed me to the bench and turned around. She spread her legs around mine as she settled over me. Took my cock into her hand and pointed me to her wet opening. I watched from behind as I split her again and we became one.\n\nShe took me all the way inside in one stroke. Placed her hands on my knees and started a hard rise and fall. She took me all the way inside before pulling up and letting me slide up her slippery tunnel until I was just inside. Then she dropped her weight down on me until her ass hit my pelvis. The loud slap filled the small room as she panted hard.\n\n\"Slow down baby,\" I begged. \"I don't want to cum yet.\"\n\nShe slowed down as she pulled off of me. Let me slide all the way to her opening before holding and twerking her hips on my tip. Her wetness coated me and leaked all the way down my shaft to my sack. She started to take me back inside now. I disappeared all the way inside as her butt rested against me again. Twerked her hips again as I rested deep inside of her.\n\nShe repeated this over and over until the tingle in my balls went away. I gripped her hips and started to buck into her now to let her know she could increase the pace. She panted hard before stopping and standing. I slipped from her and thought it was over. Maybe she heard the photographer and it was over.\n\n\"My legs are still tired from this morning,\" she sighed.\n\nI smiled. \"Sit on me again. Face me this time. Feet right here.\"\n\nShe didn't question me now. She just did as ordered and climbed into my lap. Her feet rested on the bench next to my hips. Her cunny hung over my cock as it bounced and waited impatiently for her pussy. I pointed it and pressed it between her lips again. Sank part of the way in as I gripped her wrists and brought them to my neck. She got the idea and wrapped her arms around my shoulders and neck to hold me.\n\nShe was squatting over my body as I rested on the bench below her. I gripped her hips and planted my feet firmly on the cold floor below. I pulled her body to mine as I bucked up and into her. The slaps of sex filled the room again as we crashed together in the middle.\n\nHer mouth hung open as she let out a long but silent gasp of pleasure. We were crashing together hard now, my cock touching her end with each plunge. She remained silent with her mouth hung open above me. Her eyes were closed as she enjoyed the ride I was taking her on.\n\n\"Owen,\" she panted hard. \"Owen...I'm gunna...fuck...hard Owen. Yes...fuck...gunna cum hard...\"\n\nI never slowed down now. I just listened to her little whimpers and squeaks as she sat above me. Orgasm ripped through her body as she whimpered above me and let it take over her body. Her little cunny squeezed me hard then quivered as she soaked my cock and forced me out. Wetness leaked from her and covered my legs down to the seat below me. Her forehead banged against mine as she bucked with pleasure.\n\nShe rested her head against mine and panted hard. Her hot breath hitting my face as my cock found her soaking wet opening and slipped back inside.\n\n\"Fuck Owen,\" she gasped. \"Fuck that was intense.\"\n\n\"Umm hmm,\" I agreed as I slipped deeper inside of her again.\n\n\"Sorry I banged your head,\" she whimpered as I filled her again.\n\n\"Hardly felt it,\" I offered.\n\nShe giggled softly as I pressed all the way in then out. She dropped her weight on my lap now and wanted control. I smiled as she still held her head against mine. She started a slow rise and fall. I slipped so easily into her cunny. She was still leaking her wetness as she pressed me all the way into her. I could still feel her cunny quivering as she moaned above me.\n\nHer feet slipped behind her as she went to her knees now on the bench. Felt her legs tremble as they pressed up against mine. I finally relaxed my grip on her hips as she found my mouth. It was slow and gentle now, she was still trying to recover from her last orgasm. Those ones always took a lot out of her. Our lips pressed together as she worked her hips and squeezed my cock trying to get me to cum now. I could feel it coming but was holding back hoping I could give her one more.\n\nShe knew what I was doing as I closed my eyes and concentrated hard so I would cum just yet. She knew all my tricks just like I knew hers. It was like a little game now. She twisted her hips hard and drove me deeper into her cunny. My response was to find her clit with my thumb and circle it. I knew how sensitive it would be right now. She would be on edge again quickly.\n\n\"Owen?\" I heard the photographer. \"Jamie? Je suis de retour. Finissons.\" (I'm back. Let's finish up.)\n\n\"Fuck,\" Jamie whispered.\n\n\"Shhh,\" I hissed.\n\n\"Tenez juste une minute,\" I called. (Hold on just a minute.)\n\n\"Le temps c'est de l'argent,\" she called. (Time is money.)\n\nJamie had stopped riding me as we spoke. My thumb hadn't stopped circling her clit though. She whimpered at my stimulation then started rising and falling again.\n\n\"O\u00f9 est Jamie?\" she asked. (Where is Jamie?)\n\n\"Elle descendit \u00e0 faire un appel t\u00e9l\u00e9phonique,\" I lied. (She went down to make a phone call.)\n\n\"Je vais prendre un verre. Je reviens tout de suite,\" she called. (I'm going to get a drink. Be right back.)\n\n\"Prenez votre temps,\" I called back. (Take your time.)\n\n\"We better hurry,\" Jamie whispered.\n\n\"You better hurry,\" I teased.\n\n\"Hmmm fuck,\" she growled.\n\nShe picked up the pace and started a hard rise and fall on me now. We softly slapped together. I hoped she had really left to get a drink. I looked up at Jamie as she rose up again. I wanted those swollen lips again. She read my mind and found them with hers. I kissed her hard, tasting her and tangling my tongue around her.\n\nShe whimpered above me as my thumb left her clit and gripped her hips again. I was pulling her down on me as we both grew close. I started leaving the seat again and met her halfway as we came together in the middle. Her whimpers grew louder as she started again.\n\n\"Jamie,\" I gasped. \"Quiet.\"\n\n\"Sorry,\" she panted. \"Cum with me Owen.\"\n\n\"I planned to,\" I moaned.\n\nShe dropped down and held me deep. Ground and worked her hips hard over my cock. Flooded me as I started to flood her. Wave after blissful wave left my body and filled hers. She rested her forehead against mine again as we both panted hard. I could just make out those lips of hers and the smile she had on her face. I filled her full before I turned my head and found her neck. I kissed the flush skin under her jaw as she moaned her playful moan. She still tipped her hips and brought pleasure to us in the afterglow. Then she leaned back and smiled at me still.\n\n\"You are a bad girl,\" I teased.\n\n\"I know,\" she smiled. \"But it felt so fucking good. I can't believe how wet you made me.\"\n\n\"That's what I do,\" I said confidently.\n\n\"Ok Mr. Cocky,\" she giggled. \"Get dressed so we can get this over with.\"\n\n\"Yeah,\" I smiled. \"I can't find the white underwear she wanted me to wear though.\"\n\n\"You could wear mine.\"\n\n\"Your size zero isn't going to fit my big ass,\" I chuckled.\n\n\"I'll get dressed and find them for you,\" she giggled.\n\nShe slipped from me now. My seed dribbled from her cunny and caught against her leg. She looked around for something to clean herself.\n\n\"Use my beanie,\" I offered.\n\nHer dirty side came out now. Used her finger to scoop me from her leg before she brought it to her mouth and licked her fingers. She repeated as more of me dripped out. I sat there with a dumb look on my face as she pulled her fingers from her mouth. Never missed a beat as she dipped between my legs and took my cock into her mouth.\n\nI moaned as she sucked my half deflated cock and cleaned me. By the time she was done it was almost hard and bounced with my heartbeat again.\n\nShe shook her head. \"I can't believe you sometimes. I don't know how.\"\n\n\"What have I always said?\" I asked.\n\n\"Yeah, it has a mind of its own,\" she giggled.\n\nI sat there and watched her slip her thong up her legs and cover her cunny. She picked her pants up and shook them before getting them back up her legs. Her boots followed and just as quickly as she slipped into the room she was gone. I sat there and rested thinking about how crazy we were sometimes. It made us fun though.\n\nI stood as she returned and pulled the curtain open again.\n\n\"Here you go sexy,\" she sassed. \"Get them on and get out there. She is waiting for you.\"\n\n\"Yes ma'am,\" I sighed.\n\nI walked back into the room and stood in front of the white wall to do the last round. Jamie sat there contently as the photographer returned with a bottle of water and found her camera again. We went straight into poses and finished up quickly.\n\nI left the room and got changed back into my clothes before heading down to her office. They sat around the computer and looked over the photos before choosing three to send off to Carrie for her choice on which one she liked the best. The reply came within ten minutes with her choice. They picked the photo and made a layout.\n\n\"I'm never going to hear the end of this,\" I sighed.\n\n\"What?\" Jamie asked.\n\n\"This is going to be plastered all over the locker room when training camp starts.\"\n\nShe laughed. \"Shouldn't there be pictures of girls on the walls?\"\n\n\"This is too good for them not to bust my balls about,\" I sighed.\n\n\"Thank you Owen,\" she smiled. \"Thank you for being a good sport and helping me out.\"\n\n\"How could I resist those little puppy dog eyes you gave me?\" I asked.\n\n\"You didn't have to,\" she said. \"But thank you for doing this anyway.\"\n\n\"It made you smile Jamie. It was worth it.\"\n\nI left shortly after and did my overdue workout before heading back to the apartment to study more French and then relax. I had a pretty good grasp of the language but I still wanted to learn more. I relaxed after that and did another light workout before waiting for her to come home.\n\nShe got home late that evening. She said she was sorry but she had to get everything finished. I told her it was fine. I knew the day was going to be long when it started off bad. We bundled up and left the apartment and headed out to find dinner. We strolled along holding hands and taking in the sights as we walked. We had seen it plenty over the past few weeks since we had been here but it was always different every time we went out.\n\nWe ate at a small caf\u00e9 and had a casual conversation about what we were going to do once she finished this assignment. She suggested Sweden since we had never made it there but I declined this time. It was cold here, Sweden would only be colder. I wanted to see Sweden in the springtime when it was warmer so we could be outside and enjoy the sights.\n\n\"Maybe we should just go home,\" I offered. \"Or we could go see Jordan and Kelly and the new baby.\"\n\n\"That's not a bad idea Owen,\" she smiled. \"I never thought of that.\"\n\n\"We might not get a chance if we don't go now. We have Berlin coming up in a few weeks. Then who knows where you will go from there.\"\n\n\"True,\" she smiled again. \"Let me talk to her tonight and see if it's ok for us to come.\"\n\n\"Sweden will always be there,\" I offered.\n\n\"Yeah,\" she said picking up her fork and getting another bite of food. \"It will.\"\n\nWe finished dinner then headed out on a walk before we went home. We loved walking the city at night and seeing the sights. It was different each time we went out and we never grew tired of it. We loved the city itself, she just didn't like coming here all the time for the work. Berlin was going to be a nice change of pace since the office was smaller and less stressful.\n\nWe passed by the tower and took in the sights before we crossed over one of the bridges. I stopped and leaned against the railing to look at the water below. She followed my lead and leaned against my side while she held my chest. We listened to the tour boat pass through the water below us and give the tour of the city.\n\n\"I love you Owen,\" she whispered to me.\n\n\"I love you to baby,\" I smiled.\n\nShe leaned into me more and wanted a kiss. I didn't hesitate and found her lips in a soft kiss. It was just a simple kiss that said I love you and I never thought I could be this happy in life. She smiled up at me once we stopped. The look in her eyes told me how much she loved me and how happy she was living this life with me.\n\nWe both turned to look out at the water and all the people still filling the streets even at this time of night. Her knee brushed against one of the many locks that were shackled to the fence on the bridge. She looked down at it then turned to me again.\n\n\"I never could figure out what all these things are for.\"\n\nI smiled at her. \"Creepy Vinnie told me about them.\"\n\n\"Oh, he did,\" she giggled a little.\n\n\"It's the touristy thing to do in the city of love,\" I explained. \"You get a lock and write your name on it along with the person you are in love with on it. Then you chain it to the fence and throw the keys into the river. The story says that you are stuck together forever once you throw the key away.\"\n\n\"I wonder how many keys are at the bottom of the river?\" she questioned.\n\n\"A lot judging by how many locks there are,\" I offered.\n\n\"We should do it,\" she smiled shyly. \"If you want to that is.\"\n\n\"The lock shop is right over there,\" I pointed. \"I've been by it a hundred times when I go for my runs.\"\n\nI took her hand and pulled her along towards the lock shop. We bought a lock and used a marker to write our names on them. Jamie drew a heart around our names before we walked back to the center of the bridge and found a little space near the top. She hooked it around the fence and waited for my hand to cover hers before we both closed the lock. We both turned now with the keys in hand and threw them into the water. We heard one hit the water then the other.\n\n\"You're stuck with me now,\" she teased.\n\n\"I wouldn't want to be anywhere else but stuck,\" I smiled.\n\nShe smiled up at me and showed me her white teeth as she did. I loved that smile. It was a content and loving smile that I had grown to love over the years with her. But I wanted something more than just a lock chained to a bridge in Paris. I reached into my pocket and felt the little ring box as I did.\n\n\"I don't consider being with you as being stuck,\" I said. \"I love you Jamie, more than I ever thought I could love somebody. I've loved you all my life to be honest, I just didn't know how much I really did love you until now.\"\n\n\"Yeah,\" she smiled shyly. I think she knew what I was doing but she wanted to let me continue.\n\n\"Do you remember that night on the beach when we first kissed?\" I asked.\n\n\"How could I forget?\" she smiled sweetly at me.\n\n\"I was terrified that I had just made the biggest mistake of my life,\" I chuckled a little. \"But I knew in that moment that my life had changed forever. I had just kissed the person who I wanted to spend the rest of my life with. I didn't know it back then, I just knew my life had changed and for the better.\"\n\n\"It's kind of like now. Life is going to take us places that we had never thought possible. And I can't see myself going through life without you by my side. You give me purpose and meaning in my life and make me the happiest man alive. I love you so much because of that.\"\n\n\"We have been through a lot together Jamie. We've fought the battles that would break a normal couple. Our love is far from ordinary, it's extraordinary, and the life we are going to share together will be extraordinary because of that.\"\n\nShe smiled at me still as I paused and pulled the box from my pocket now. \"I guess what I'm trying to say is...will you take my hand and never let go. Will you show the world with me that we aren't afraid and we won't be broken?\"\n\n\"Yes!\" she cheered. \"Of course I will. I already told you to take my hand and never let go.\"\n\n\"This is my way of showing you I don't want to let go.\"\n\n\"The ring is small Jamie, but it's important to me,\" I said as I opened the box.\n\n\"I know,\" she smiled tenderly at me. \"It was your moms. And I don't care if it's small, it's coming from you and that means more to me than anything in the world. I know how important she was to you so by you giving me this ring it tells me how important I am to you.\"\n\n\"The most important thing in the world to me Jamie. Maybe I should tell you more often.\"\n\n\"It's not who you are Owen,\" she offered. \"But I know, it's the way you look at me, that's how I know.\"\n\nShe smiled up at me as I placed the ring on her finger and held her hands once it was in place. I kissed her now, a slow and tender kiss that told her how much I really did love her. I could feel the love in her tender kisses as she kissed me back.\n\n\"Thank you Owen,\" she smiled sweetly at me now. \"Thank you for being so good to me. I don't know what I did to deserve you sometimes but I'm thankful for each and every day that I wake up next to you.\"\n\n\"I don't know either. But I'm always going to be there for you and I'm going to give you all of me so you have the best life you can possibly have.\"\n\n\"I know you will,\" she said as she looked into my eyes. \"And I love you so much because of that. You treat me the way I've always dreamed of being treated when I was younger. I've always dreamed love could feel like this but I didn't know it could actually come true until you kissed me that night. Ever since that night I knew my life was going to be better because you were a part of me.\"\n\n\"You couldn't of said it better Jamie,\" I offered. \"Me and you, forever.\"\n\n\"Forever and ever,\" she smiled.\n\n\"Forever and ever,\" I agreed.\n\n*****\n\nThanks for reading. Comments are always welcome."
    ],
    "authorname": "betweenthesheets",
    "tags": [
        "cousin",
        "romantic",
        "sex",
        "office sex",
        "blonde",
        "teasing",
        "incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/its-the-way-you-look-at-me-ch-14"
}