{
    "title": "The Triple-A Boinkathon Covenant",
    "pages": [
        "This is the first story I've posted to Literotica, hopefully not the last, and is my entry in the 'Summer Lovin' 2021' writing contest. All of the characters in this tale are figments of my imagination, and they are all of course, over eighteen years of age. \n\nI hope you enjoy it.\n\nJune 2000\n\nAlex Sinclair decided to take the afternoon off and drive out to Coney Lake, ten miles north of his dorm, to a small beach used almost exclusively by nudists. It was a small lake, about half a square mile in area, surrounded by heavily forested land. The beach had a ten-foot-wide wharf, built by volunteers years earlier, that jutted fifty feet out into the lake. The tiny beach and wharf tended to fill quickly with sun worshipers on hot summer afternoons. As folks stretched out on towels and beach blankets, there was barely room to walk among them, so many people brought air mattresses and inner tubes to escape the crowd. That's what Alex did when he came here. \n\nNow out in the center of the lake reading his book and sipping a cold beer, he lounged on his double-wide inflatable mattress. A full ten inches thick, this was more substantial than any lightweight camping mattress. He was so comfortable and the motion of the water so soothing, he was soon asleep. \n\nA feminine voice startled him awake, warning him that his book was about to fall into the water. He was on his back and groggily sat up, hoping he wasn't burnt. Fortunately, he'd slathered on a thick layer of lotion before nodding off. The person who'd called was a very pretty young woman with her butt hidden deep down through the center of a large black inner tube, floating ten or fifteen feet away. Her entire torso was hidden; the water inside the tube was almost to her shoulders. His book was right on the edge of the mattress\u2014one good bump and it certainly would have fallen in.\n\n\"Hey, thanks . . .\", he called to her. \"I just bought it and I'm only halfway through.\"\n\n\"What are you reading?\"\n\nHe held it up so she could see the cover\u2014'A Brief History of Time' by Stephen Hawking. She raised her eyebrows.\n\n\"I'll bet you're only reading that to impress any girls who might come floating by,\" she said, grinning.\n\n\"Curses, foiled again,\" he said. \"That's exactly it... are you impressed?\"\n\nShe held out her hand, palm down, teetering in a 'maybe . . . maybe not', gesture.\n\n\"It's for an elective course. I thought it was going to be extremely dull but it's actually fascinating reading. I think I even understand some of it. Are you a student at the college?\"\n\n\"Yep, I'm first year engineering. How about you?\" she asked.\n\n\"I'm a grad student, third year, MBA program. Wow, first-year engineering\u2014you must have started right out of high school. What kind of engineering?\"\n\nShe pretended to scowl. \"Electronic and computing... lots of coding. Hey, I'm sure that someday being told I look too young will be a compliment, but I'm not quite there yet.\" He laughed with her at his unintended slight. The chatter came easily and spontaneously. After a few minutes, he noticed that she seemed a bit uncomfortable in her tube.\n\n\"In this heat, it probably feels good having your butt down in the water like that. But if you'd like to straighten out, you're welcome to join me on the mattress. There's plenty of room.\"\n\nShe agreed but now found herself partially stuck inside the tube. She managed to flop over, spilling out of the tube into the water, giving him a flash of very nicely shaped buttocks in the process. She came up sputtering and noticed he was grinning at her.\n\n\"Poetry in motion,\" he said, teasing. \"Hey, I need to cool off, too.\" \n\nHe sealed his book inside a big Ziploc bag and stored it in a pouch attached to the mattress. Then he rolled off the edge, recoiling from the cold lake water on his hot skin. The mattress had some tether cords and he attached one to her tube so it wouldn't float away. Another of the cords was clipped to a small cooler, floating upright at the pillow end of the mattress. \n\nThey were both strong swimmers and were soon in an impromptu race with lots of laughing, splashing, and teasing. After a few minutes, they climbed back onto the mattress from either side, up onto their stomachs. They surreptitiously checked each other out during the awkward business of boarding a floating air mattress\u2014both liked what they saw. He offered her a cold can of beer from his cooler. He even had foam sleeves that the cans slipped into, keeping the beer colder.\n\n\"By the way,\" he said, reaching across and offering his hand, \"I'm Alex Sinclair.\"\n\nShe took his hand. \"Hey, Alex . . . Maggie Blair. Nice tameetchya . . .\"\n\n\"Maggie and Blair\u2014they're Scottish, right? My great-granddad emigrated from Scotland around the turn of the last century.\"\n\n\"Yeah, mine too, although he was a bit earlier than that\u2014in the mid 1800's. My great grandfather was the first engineer in our family and worked for several railways during his career.\"\n\n\"The engineer that drives the train?\" asked Alex.\n\n\"No, the kind that builds them. He designed and built bridges, figured out the curvature of tracks, grade percentages, and all the other stuff they need, to lay out rail lines. There have been engineers in every generation of our family since. I knew when I was a little kid that I would be, too.\"\n\nYour great-granddad would be shocked to see what engineers are doing these days. Were you a geek in school?\" he asked, grinning.\n\n\"Not quite,\" she said. \"I will admit to being smarter than your average bear, though.\"\n\n\"My bet is, you were pretty popular in high school,\" he said.\n\nShe smiled, accepting the compliment. \"I am sure enjoying college more than high school. Everyone is so much more grown-up here...\"\n\n\"I know what you mean. Hey, need some lotion on your back?\"\n\n\"Yes, please... You...?\"\n\n\"I'd appreciate it.\"\n\nThey did each others' backs\u2014each did the remainder of their own bodies, twisting to reach buttocks and the backs of thighs. This was a bit awkward too, but they got it done with a minimum of fuss.\n\nThey talked about the heat\u2014it was at least 90 today. The light breeze earlier in the morning had disappeared\u2014the surface of the lake becalmed. They'd both lived in areas with brutal winters so they now preferred hot climates. They agreed that in a perfect life, you'd live in a place where it was over 80 degrees every day. After a half-hour, they were chatting like old friends. \n\nAlex could feel the skin on his back getting hot; eventually, he would need to turn. For some reason, he was feeling a bit shy about it, even though he'd been coming to this lake and being around naked people for almost a decade.\n\n\"Hey Maggie, I've gotta flip; I'm baked on my back. Hope you don't mind.\"\n\n\"Now, why would I mind that?\" she asked, teasing. \"Me too, actually; I didn't want to be first. Let's do it together\u2014but first I'm going back in the water to cool off.\"\n\nThey both did, whooping at the shock of the cold water. As they climbed back aboard, Alex got his first look at her unobstructed naked body from the front. She was even more beautiful than he'd imagined. Her breasts were larger than average with a lovely shape; firm and upright. Rather than perfectly round orbs, Maggie's had a slight taper from the base upwards, with her rosy dark areola and large pink nipples poised at the uppermost tips of the breasts. They jiggled slightly as she repositioned her body so her head was on the mattress's built-in pillow. Her torso and limbs were nicely muscled\u2014her stomach hard with slightly prominent abs. There were bumps where her hip bones protruded at either side of her lower belly. Her privates were bare and tanned, the same as the rest of her.\n\n\"Oh shit,\" said Alex quietly.\n\n____________________\n\nMaggie Blair almost hadn't come to the lake today, but her roommate had invited some friends over who were pissing her off. It was so noisy in their dorm room, she was having trouble concentrating. Finally, she decided 'to hell with it', and fetched her beach gear.\n\nShe'd discovered Coney Lake the previous summer. When she was still in high school, she and several female friends often went skinny-dipping in the icy waters of Lake Superior. She'd learned to not care about what other people thought. There would occasionally be guys there, but she kept her distance, worrying that they'd be jerks with several naked young women there swimming. She was delighted when she discovered they were more uptight about it than most of the girls.\n\nShe'd been to Coney lake a half-dozen times this summer. But she'd noticed several young assholes on the wharf, ogling the women and surreptitiously taking pictures with their iPhones. So she'd gone to Walmart and bought the largest inner-tube they sold, keeping it fully inflated in the back of the Chevy Tracker her parents had given her when she'd graduated from college with her BSc.\n\nFive minutes after parking, she'd launched her tube and pushed off from the crowded beach. She had a small waterproof case that contained bottled water and suntan lotion. The inner tube permitted her to slowly propel herself by simultaneously rowing with her hands and arms, and gently kicking with her feet. The steady hum of voices from the crowd slowly faded as she moved steadily towards the center of the lake. Now she removed her bikini and stored it in the case.\n\nAn hour passed and Maggie found herself a bit bored. Maybe it was time to head back to the dorms. But then she noticed a double-wide air mattress drifting towards her. She began slowly moving towards it, curious about the person lying on top, apparently asleep. As she drew nearer she could see it was a very good-looking, athletic young man, asleep on his back. She couldn't help staring at his flaccid cock, one of the largest she'd seen, lying sideways across his thigh. She liked that he'd done some 'manscaping'\u2014the sandy-brown hair of his bush had been trimmed back considerably from what she imagined it must look like naturally. This put his entire cock on display, without the upper few inches hidden in a dense thicket of pubic hair. These days, young women were pretty much obliged to keep their privates defoliated so why not men, too?\n\nMaggie checked to see if he was burning, but he seemed fine. There was a plastic tube of suntan lotion lying beside him. Then she noticed he'd been reading and his book had jostled to the edge of the mattress. She decided to call out and warn him.\n\nShe couldn't help but smile at how confused he was, being confronted by a naked woman floating nearby, and roused from a deep sleep.\n\nThey struck up a conversation and she found herself liking him. Within minutes she felt a strong connection and wondered how he was feeling about her. Eventually he noticed that she appeared uncomfortable, probably due to having her ass stuck down through the hole of her inner tube for the past hour. He invited her to join him on his mattress. When she agreed, he rolled into the water for a quick swim and to cool off. After horsing around for a few minutes, they awkwardly climbed aboard the mattress from opposite sides and lay on their stomachs, talking for some time and getting to know one another. Maggie was very impressed with this young man, who'd now introduced himself as Alex.\n\nAmong other things, they discovered they'd been raised in the same small town in Michigan's Upper Peninsula and told a few 'Yooper' jokes. Growing up, their houses had been less than a mile apart and at one point, they had attended the same high school, although Alex had been a couple of years ahead of her. Their four parents had worked for various departments of the federal government and possibly knew each other.\n\nShe was intrigued that he was in an off-campus MMA group, and in fact, a part-time instructor. He told her she'd likely never see him fight as he would run away first if possible. He would only fight if there was imminent danger to him or his companions. Then his philosophy was to win the fight in seconds, before being injured by an attacker. He told her the Marquess of Queensberry would strongly disapprove of what he would do to walk away unscathed. She suspected this training was the reason his body was so toned and muscled, without looking like an over-bulked weightlifter.\n\nEventually, the heat of the sun was overwhelming and it was time to roll over onto their backs\u2014that's when things started getting interesting. First yhey rolled off either side of the mattress for a short swim, then climbed back aboard, never a graceful procedure on a floating air mattress. The 'shrinking' effect of the cold water on Alex's privates soon wore off and Maggie was secretly delighted. In her peripheral vision, she watched his penis swelling into a substantial erection. She understood that she'd caused this\u2014she was obviously turning him on. She smiled to herself at his embarrassment.\n\nShe twisted onto her side, facing him. Her beautifully formed breasts were now aimed straight at him, daring him to stare. He couldn't help himself, his eyes locking on them for several seconds.\n\n\"See something you like, Homie?\" she asked with a sly grin.\n\nHe couldn't help but laugh. \"Alex Jr. has a mind of his own; I have absolutely no control over this.\"\n\n\"I know,\" she said, grinning. \"You horn dogs are all the same and I'll take it as a compliment. I'll tell you what Alex Sinclair, roll over onto your side facing me.\"\n\nThey'd now drifted a half-mile from the beach and wharf; there were no other air mattresses or tubes visible within a hundred yards. The space between their bodies was hidden from anyone around the lake who might be looking in their direction. \n\n\"What did you have in mind?\" asked Alex.\n\n\"Just watch me...\"\n\nSeconds later, he'd twisted onto his side facing her with their bodies less than a foot apart, his bottom arm extended out over the plastic pillow with his hand dangling in the water. His erection was urgently poking straight forward, the tip resting on the plastic of the mattress, almost touching her belly. She reached between them and began gently rubbing his rock-hard member with the tips of her fingers. She was enthralled with the firmness of his flesh and the heat of his shaft radiating into her hand. As she slowly moved her fingers, she could see the muscles of his chest and legs tense, and feel his heartbeat increasing in the large blood vessels swelling along the length of his cock. She could feel her body responding and the heat and wetness at her loins.\n\n\"I'm really enjoying your company and chatting like this Alex, but it's pretty obvious that your mind is going to be elsewhere for a while. Please consider this a mercy hand-job, so we can enjoy the rest of the afternoon.\"\n\n\"My God that feels good,\" said Alex, moaning from the touch of her fingers. \"Please do whatever you like; I'll be eternally grateful.\"\n\nAlex would explain later, that due to his crazy schedule at college, he'd not been with a woman for a couple of months, and was incredibly randy. It only took a minute of long, firm strokes of Maggie's talented fingers, using lake water as a lubricant, when Alex started cumming hard. She could see his pending orgasm in his eyes\u2014every muscle in his body was tense and straining. She held one cupped hand under his glans as she continued stroking his shaft with the other, collecting the surges of spewing semen as he cried out in a series of guttural, strangled moans, as though he was in severe pain. She recognized these sounds as intense pleasure and felt a wave of warm satisfaction, knowing she had given this to him. When he was done, she rolled over and washed her hands in the lake. Alex rolled onto his back gasping and trying to catch his breath, his large ruddy erection slowly subsiding across his belly.\n\n\"That was absolutely fucking mind-boggling, Maggie. I sure hope we get to know each other well enough that I can reciprocate someday soon.\"\n\nShe smiled back. \"There's a pretty good chance of that, Alex. I think this might be the beginning of a beautiful friendship.\"\n\n\"Humphrey Bogart,\" he said, \"From Casablanca. My dad likes that movie. Except Bacall hadn't just helped Boggie run off a batch.\"\n\nThat struck Maggie as hysterically funny and she laughed uproariously. It was indeed the beginning of a wonderful, intimate, loving, life-long friendship.\n\n____________________\n\n July 2005\n\nFive Years Later\n\nAlex's amazing, crazy, sexy idea that would not only strengthen their marriage but spice it up for the remainder of their years, came to him one sunny afternoon while dozing naked on the hidden deck at the back of their home. Maggie was stretched out beside him, just on the cusp of sleep, after returning five minutes earlier with a couple of ice-cold beers she'd fetched from the kitchen. \n\nHe'd watched her pad naked through the large glass sliding door and back out again a few minutes later. He'd silently marveled at her lovely sculpted buttocks, every bit as nice as the first time he'd seen them five years ago out in the middle of Coney lake. Her waist was flat and firm without any trace of fat. Her honey-blond ponytail hung to the middle of her back. Her breasts were large and lush; jiggling provocatively as she walked. Her entire body was tanned to an even nut-brown; her skin blemish-free. She'd given birth to their daughter Chrissie three years earlier, but still had the body of a Playboy centerfold. He was an incredibly lucky man and he knew it.\n\nToday Alex was twenty-eight years old\u2014Maggie was twenty-six. Where in God's name had the past five years gone? They had moved in together a month after meeting at the lake; their wedding a year later. It seemed like yesterday they'd read their vows on a remote Maui beach, the open Pacific the backdrop behind them. There had been whales breaching a few hundred yards offshore that day; surfacing and blowing their jets of foggy breath high into the air. The honeymoon had been a marathon\u2014exploring as much of the island as possible in a week and still finding the energy to make love three or four times a day.\n\nTheir first year of marriage had been spectacular\u2014the passionate love life they'd so enjoyed before the wedding carried on into the marriage. Maggie was the most amazing partner he'd ever had or could even imagine. \n\nThen their daughter Chrissie was born and life changed.\n\nWhile they loved their daughter and had quickly become exceptionally good parents, they both understood that their love life had taken a major hit. They didn't fully understand why. They still loved each other passionately and were best of friends\u2014they enjoyed being together and talking for hours about everything in their lives. He still thought she was stunningly gorgeous and the sexiest woman he'd ever known. She considered him an exceptionally talented lover and still fantasized about his body when alone or at work.\n\nDuring their first six months of marriage, they'd enjoyed wonderful sex at least twice a day. That tapered off to daily until discovering to their delight that Maggie was expecting. During her late pregnancy and during the year after Chrissie was born, they were lucky to have sex once a week. During Chrissie's second year, that decreased to once or twice per month. \n\nThey discussed the issue from time to time\u2014especially in the quiet time after they'd actually found time for a love-making session. Each of them seemed to want more sex but it was nearly impossible to find time in their crazy lives. They each worked sixty hours per week or more at their new careers. They were both so tired by 9:30 PM, any thoughts of sex were overpowered by the narcotic lure of sleep.\n\nAfter graduating with his high-tech MBA, Alex joined a start-up software firm. The owner and CEO Kerry Sloan had impressed Alex with a prototype program for crunching terabytes of complex data and displaying it in near cartoon simplicity. Obscure trends and anomalies stuck out like sore thumbs, as did whatever had caused them. And by plugging in forecast data, the potential results 'down the road' were just as easily analyzed. The software was easily adapted for use by industry, science, finances, and academia. Alex could see the tremendous potential of the product. If developed and marketed correctly, it could well be the next coveted 'killer app'. ",
        "Alex's first project had been to ensure the source codes were protected with iron-clad patents and built-in layers of encryption and password protection. Then he revamped their marketing division and renamed the company CrystalSoft or 'C-Soft', as it would become known throughout the industry. The 'Crystal' in the name implied that their products could make anyone's data, no matter how complex, crystal clear.\n\nWithin two years, Kerry Sloan had promoted Alex to President and CFO. As part of the deal, Alex received a large block of the company's preferred shares. Sloan intended to take the company public in a few years\u2014when that happened and if the company continued to grow at its current rate, Alex would become a multi-millionaire overnight. His salary was now over $200K, not including bonuses and stock options\u2014this would increase significantly as the company prospered. He and Sloan became good friends, although Alex often worried about the amounts of cannabis and cocaine that Sloan seemed to be using these days. As the company prospered, he could easily afford as much of it as he desired.\n\nJust this past year, Maggie had graduated with her Masters in Computer Engineering, at the top of her class. She was one of those rare people who truly understood complex computerized digital systems with utter clarity. When she worked with a new system it felt organic to her, as though she and the assortment of computers, servers, and countless peripherals were silently communicating with one another.\n\nAlex loved holding and admiring her left hand. On the traditional finger, she wore her wedding rings\u2014both the diamond-studded engagement ring and the slim matching wedding band beside it. On the pinkie finger of the same hand, she wore a diminutive stainless steel ring with a chamfered pattern along the edges. The ring showed significant wear, much more than Alex thought logical, considering Maggie had only owned it for a year. This was her engineer's ring, presented to her in a secret ceremony after she'd graduated from engineering school. Maggie was left-handed and her professional code required that this deeply traditional ring be worn on her dominant hand so it would come in physical contact with all her work. There were times she must remove her wedding rings for work, but never the pinkie ring.\n\nWhen Alex commented on the ring's rather shabby appearance the first time he saw it, Maggie explained that some engineers later in life, return the rings to their professional society. The rings would then be re-issued to new young engineers, to wear throughout their careers. Maggie had opted for a used ring and in her will, stipulated that upon her death, it must be returned to the society.\n\nWorking towards her Masters, Maggie's thesis had investigated some discarded technology from the previous century. The idea was simple\u2014to transmit radio waves towards the sky that essentially bounced back to earth thousands of miles away, reflected off the ion trails of small space particles entering and burning up in the earth's atmosphere. It occurred to her that there may still be an application for this old technology using modern digital 'smart radios' to replace the original analog boxes full of tubes, transistors, and hand-soldered circuit boards. After a year of innovation and tweaking, she had her new prototype digital system working flawlessly.\n\nAfter graduation, she created a small company to develop her now patented ideas. She reasoned that during wartime, various countries would attack their opponents' satellites, thus disrupting military communications. But the flow of space fragments and dust into the atmosphere was constant and unstoppable. Users could count on Maggie's transceivers to work, even when other complex satellite systems were disabled. She'd named her technology and company, 'Ion-Link'.\n\nAn alumni instructor of Maggie's from their school of engineering, now Major Howard Comstock, heard through the grapevine about her work and requested a meeting. He was so impressed, he set up demonstrations with senior officers at the Pentagon. Six months later, she'd been hired as a civilian contractor. Comstock also strongly encouraged her to register in a special accelerated Doctorate program, in communications engineering.\n\nUnfortunately, all of this required a lot of travel. Much of it was to military research labs scattered around the US. But there were occasional longer missions to military installations overseas. Her ongoing objective was to upgrade their systems, adding Ion-Link transmitter-receivers to operate seamlessly alongside their existing networks.\n\nDuring her interactions with assorted military deep-thinkers, she also extolled the virtues of the software developed by Alex's company. Many of her military clients investigated and bought into C-Soft as well, much to the delight of their Board of Directors. Back in the beginning, they had ruled out sub-routines for military applications, foolishly assuming there was limited potential. The Pentagon would eventually become C-soft's largest client; their most lucrative cash cow.\n\nIn spite of their demanding careers, Alex and Maggie loved being parents. Their daughter Chrissie had been an easy baby so far\u2014not disrupting their lives quite as much as some of their friends were experiencing. Their jobs permitted either to care for her. Alex's company had dozens of highly talented women coders, writers, technologists, and engineers\u2014many attracted by the company's on-site daycare. While not all of the deployment sites where Maggie worked were kid-friendly, her business office certainly was. Her employees\u2014fellow engineers, accounting, sales, and other logistical staff\u2014were always amused when they walked into her office, to find one of the top up-and-coming minds in space communications, chatting on the phone with some high ranking officer at the Pentagon, while breastfeeding her baby girl.\n\n____________________\n\nThe afternoon that Alex had his big idea was a stifling hot Sunday in late July. Baby Chrissie was having an afternoon nap in her cool basement nursery so Alex and Maggie had spread out their sun mats on their private deck to lay naked in the sun. As Maggie returned with two tall bottles of Corona, she decided she needed more lotion. Alex was soon slathering it all over her back and ass. He enjoyed rubbing the creamy lotion deep between her buttocks and the backs of her thighs. Lying on his stomach, he could feel his erection swelling beneath him.\n\nThey settled down to enjoy the warm afternoon, already in the low 90's, and to sip their icy cold beers. They both loved the heat radiating deeply into the flesh of their bodies. \n\n\"God, this is so wonderful,\" said Maggie, still on her stomach. \"I feel like I'm getting my batteries charged.\"\n\n\"Reminds me of the day we met at Coney Lake,\" said Alex.\n\n\"Yeah, that was a hot one too, out on your air mattress. That was a wonderful day.\"\n\n\"It sure was . . . I recall you had to help me with a small problem . . . I still think about it sometimes\u2014that was so fucking sexy. It's no wonder I fell so hard for you.\"\n\nShe smiled, remembering too. \n\n\"Hey Mags, how's everything with you these days? We've talked about how we've slowed down in the boinking department. It's probably more me than you, what with how fucking nuts it is at work these days. But I want you to know that you're still as hot as ever. When you came back out onto the deck, you looked so gorgeous that I almost blubbered a little bit. You are without a doubt, the sexiest fucking MILF in the entire country.\"\n\nMaggie smiled broadly. \"I can't tell you how good it is to hear you say that, baby . . . To answer your question, I'm good; but I'm in the same boat as you\u2014batshit crazy at work. Did I tell you that my final level of security clearance was approved?\" She actually lowered her voice to a whisper as she told him this. \n\nBeing a civilian contractor, it was a long, difficult process to obtain high-level security. The investigation of her background by the CIA and FBI had taken more than a year. This had included Alex's background and all of their immediate family and close friends. Now with her new highest level of clearance, the President wouldn't see too many things that she couldn't see, too.\n\n\"That's awesome, babe. I guess that means you'll have even more access and opportunity with your military contacts. I can only imagine the responsibility and money that you'll be into soon. Congratulations Mags, I know how long and hard you've worked for this.\"\n\n\"Thanks baby, you've been a big part of it too\u2014I've been able to bounce everything off you before I've done it. I trust your opinions more than any others.\"\n\nAlex smiled, pleased with the comment.\n\n\"Mags, just to change the subject, you have a birthday coming up in a couple of weeks. Any thoughts about what you'd like? Nothing is too good for you, babe\u2014just drop a few hints.\"\n\n\"Hmmmm, I will give it some thought.\"\n\nTheir conversation drifted away and they dozed. Alex slept fewer hours per day than most people\u2014he did his heavy thinking at night in the dark and quiet of their bedroom. It was in this semi-consciousness state that some of his best ideas came to him. Now nearly asleep, out on the deck in the sun, his conversation with Maggie replaying in his mind, he was struck with inspiration. For ten minutes, an idea bounced around inside his brain as he fleshed it out until it was nearly complete. It would require some work at the PC but he'd have it ready in a day or two. Damn, this had the potential to alter their lives for the better. Laying on his stomach thinking about it, he could feel a substantial erection swelling again beneath him.\n\nHe slowly rolled onto his back so Maggie couldn't help but see it. One of the many things about her that delighted him\u2014she seemed as turned on by his body as he was by hers. Whenever he got an erection, in addition to swelling several inches in length and becoming considerably thicker, his shaft turned a ruddy brown with prominent veins running along its length. The sight of his rock-hard, twitching cock was an instant, powerful aphrodisiac for her, and Alex could sense her breathing was escalating.\n\nReaching over, her soft warm fingers began sliding rhythmically up and down the length of his cock. Her fingers formed a loose fist, slowly moving back and forth over his glans and shaft. She moved closer, onto her side, her lush breasts pressed against his chest.\n\nShe was smiling at him, obviously enjoying his eyes wandering up and down the length of her body. Now she rose to her knees and swung one leg over his thighs so she was sitting on his loins. She raised her hips and with slippery fingers, grasped and guided his shaft into position. She abruptly lowered her ass, impaling herself onto Alex's wood-like member. As they moved slowly together, she lowered her head and whispered in his ear.\n\n\"It's a good thing this deck is so nice and private, eh baby?\" she said.\n\nAlex moaned softly in reply.\n\n____________________\n\n August 2005\n\nTwo weeks later on the Sunday morning of Maggie's birthday, they were having a rare lazy sleep-in. Chrissie was actually sleeping late too, providing Alex and Maggie an opportunity for equally rare morning sex. The session had been slow and intimate; both were glowing afterward, lying in each others' arms.\n\nOccasionally Alex and Maggie enjoyed a good session of '69' and that was how they'd started. Being only a few inches different in height, their bodies were well suited for it. Laying on their sides, Alex could lay his head on the inside of Maggie's thigh, while she did the same with him. In complete comfort, his mouth and tongue were positioned to provide perfect stimulation of her pussy. She could take his entire cock into her mouth and slowly let it slip back out again, her head supported on his inner thigh. He could reach down and massage her boobs, or over her hips to stroke her buttocks. She spent much time reaching up between his thighs, massaging and stimulating his scrotum. The game was to drive each other to distraction, making it last as long as possible.\n\nWhen Alex was finally near the point of no return, Maggie stopped and jumped off the bed, standing and bending forward so her face was almost touching the bedding\u2014her legs spread wide. Alex jumped off too and positioned himself directly behind her. Neither of them required further foreplay; he entered her roughly and immediately began to drive himself into her from behind. The spectacle of his fully erect cock driving back and forth between the bottoms of her perfectly sculpted buttocks was intoxicating. They only lasted a couple of minutes when he began gasping loudly, driving himself into her even harder. The slap of his loins on her buttocks reverberated through the house, waking Chrissie in her crib. Maggie managed to somewhat constrain her cries of pleasure, but too soon it was over. \n\nAs soon as he'd recovered his breath, Alex pulled on sweatpants and padded down the hall to his daughter's room, fetched her, and brought her back to their bed. A few minutes later, Chrissie had gone back to sleep.\n\n\"Happy birthday, babe,\" said Alex softly. \"I have something very special for you today.\"\n\n\"I've already had something pretty special,\" she said lecherously. \"But what is it? I love presents.\"\n\nHe leaned over and reached under the bed, retrieving two items. One was a small box\u2014the other a tube about a foot long and three inches wide. Each was wrapped in colorful birthday paper, each with a red bow. Maggie's eyes immediately went to the tube and she smiled.\n\n\"I might already have a couple of those, baby,\" she said.\n\nAlex laughed and tapped her with it, showing it was far too light to be a sex toy. He handed her the smaller package first, which she immediately tore open. It was a prototype digital computerized watch, not yet available to the general public, compatible with her iPhone. It was the very latest technology and would provide dozens of cool new apps that he knew she would have fun figuring out. She was one of those rare people who actually used most of the capabilities of her high-tech toys. She was delighted and tried it on; reaching for her iPhone on the night-stand wireless charger. In minutes, she had the two linked and exchanging data.\n\nThen she looked at the tube and Alex handed it to her. \"Darling, this is not for your birthday today; this is for your birthday next year. And that's the only hint I'm going to give you.\"\n\nShe carefully removed the paper and bow; inside was a plain cardboard tube containing a rolled-up document of some kind. She tapped the tube so the paper popped out and she uncoiled it. She looked puzzled as she started to read. Alex had purchased a sheet of very expensive vellum parchment; centered across the top in a fancy legal font was a single sentence.\n\n 'The Triple-A Boinkathon Covenant'\n\nBelow this title were several sections with sub-headers and text.\n\n'This document constitutes a recurring covenant between the parties \"Alexander (Alex) Sinclair\" and his lawful (and lovely and sexy and amazing) wife, \"Margaret (Maggie) Sinclair\". This covenant shall remain in effect until either of the above parties indicates otherwise. Hopefully for many, many years.'\n\n 'Triple-A Definition'\n\n'Triple-A is an acronym of the phrase, \"Anything, Anytime, Anywhere\", and outlines the details of the annual recipient's wishes for acts of a sexual nature, to occur on or near the date of their birth.'\n\n 'Boinkathon Covenant Definition'\n\n'The Boinkathon Covenant is essentially a pact providing the aforenamed recipients one full year to decide what sexual favors their spouse is to provide on their birth date. These favors can and indeed, SHOULD include anything that the 'givee' is physically capable of performing. The imagination should be the only limit as to what these favors might be.'\n\n'The favors become due seconds after midnight on the day of the recipient's birthday.' \n\n'All requested favors must be completed within a 24 hour period\u2014there can be as many activities as the recipient wishes during that time. The 24 hour period may occur after the recipient's birthday, right up until the recipient's birthday the following year (although that is probably not the best way to employ this covenant).'\n\n'Upon fulfilling the requested annual favors, this covenant automatically transfers to the recipient's spouse, to come into effect on that spouse's next birth date.'\n\n'The favors may be presented to the 'givee' in oral or written form and should be provided in sufficient time and detail, that the 'givee' has the opportunity to fully prepare.'\n\n'The person scheduled to be the next recipient is listed on the back of this form.'\n\nMaggie turned the page over. On the back was an embossed table, showing their names and the years they were to be recipients, alternating right through to Alex's name in the year 2060. She smiled. Alex would be eighty-two that year\u2014she would be eighty. She rolled onto her side and faced him.\n\n\"Let me get this straight. Next year on my birthday, I can give you a list of things I want you to do for me. Or to me. Sexy things. Anything I want and for a whole day?\"\n\n\"You've got it, babe. I can't imagine anything you'd like that I wouldn't do for you. But I don't know all that goes on inside that brilliant head and maybe there are lots of amazing ideas that have never occurred to me. By presenting you with this document, I'm giving you my word that I'll do anything that you want me to do that I'm physically capable of doing, anywhere you want me to do it.\"\n\nMaggie smiled wider, starting to think about the possibilities.\n\n\"Do you see the genius of this, Mags? We each have a whole year to think about it\u2014for you to plan what you want and for me to drive myself crazy, imagining what it might be. And when I find out, figuring out how and where to do it, to provide everything precisely as you ask for it. This is going to drive me fucking crazy.\"\n\n\"Well, I'll have to give this some thought, won't I?\"\n\n\"You damn betcha you will.\"\n\n____________________\n\n July 2006 \n\nIt had been a hectic year for both of them. \n\nMaggie had been away for a month at a military base somewhere near the Arctic Circle, so secret that she couldn't even tell Alex where it was. His security level was considerably lower than hers. It was a listening post; a remnant of the old DEW line or Distant Early Warning system developed and installed back in the 1950's so 'Uncle Sam' could keep a closer 'electronic ear' tuned on the USSR. They were able to talk every day using a heavily encrypted Skype-like program; essentially a secure military communication app. The toughest part of all this for Maggie was being away from her family. Chrissie was old enough now that she could sit in front of the PC and talk with her mother, too. Chrissie told her about all of the things happening with her neighborhood friends, then Maggie and Alex would talk in their own secret code. Military censors were monitoring to ensure nothing sensitive was leaked from the base to the outside.\n\nAfter they disconnected, Maggie would cry for a while. Then she would immerse herself in her work\u2014it helped her forget for a while, her wonderful husband and her little girl, so many miles away.\n\nThe weeks went by quickly and soon she was back home.\n\nAlex's company had experienced an emergency that spring\u2014they had been infiltrated by an industrial spy. For several months it had been a closely guarded secret that C-Soft was modifying a data presentation module specifically as a 'weapons tracking system'. It would show in real-time where the projectile was and where it might strike, given different forecast data. Some snippets of information about the system had leaked. A clandestine investigation was launched by Alex using an outside firm comprised of retired CIA employees.",
        "Six months earlier, the C-Soft HR department was interviewing systems engineers. One in particular, a young East Asian woman, had greatly impressed all the interviewers and eventually C-Soft's upper management, including Alex. She was subjected to the company's stringent background check which she passed with flying colors and was hired.\n\nShe was an agent of a foreign government. During the past months, she had passed along information about portions of the company's latest module. No single employee had access to entire systems so the leaked information didn't cripple them. But they were forced to regroup and initiate a much higher standard of security for all new and existing employees. It had been time-consuming and bloody expensive.\n\nBut through all of this, inevitably just before sleep overtook them, Alex's 'Triple-A Covenant' would creep into their thoughts. Maggie in particular, who'd initially thought it was a bit silly and was only doing it to humor Alex, began to get into it a bit more.\n\nWhat on earth could I ask for, she wondered? \n\nAs the month of her birthday approached, she began taking it seriously. She'd enjoyed an active sex life before she'd met Alex and had tried a few things, so she had some experience to draw on.\n\nShe started an encrypted list of potential items on her personal laptop. Reviewing it a few days later, it occurred to her that all of her ideas were things that would please Alex. But that wasn't what he'd had in mind when he'd drawn up the contract. He was clear that the whole purpose of the exercise was for each of them to get exactly what they secretly wanted. Anything! Maggie could only imagine what Alex would want when it was his turn\u2014he would know exactly what he wanted and wouldn't hesitate to ask for it. So she decided she would too.\n\nThree weeks before Chrissie's birthday, they took her to a local water park to play with her friends in the fountains. All three of their birthdays were in summer months; it was now late July and scorching hot\u2014just the way they liked it. They sat on a bench a short distance from the group of children, all now soaked and shrieking in pleasure.\n\nMaggie looked at Alex and said, \"Hey baby, I've got something for you.\"\n\n\"Okay, what's up?\" he asked. \n\nHe'd reminded her of her upcoming birthday a few times over the past months, hinting that he needed to know what she wanted for the big day. She'd been coy, saying she was thinking about it. She reached into her purse and pulled out a thumb drive. \n\n\"This is complicated enough that I decided to write it all down,\" she said. \"Use our special password\u2014it's encrypted for your eyes only, my love.\"\n\nAlex could tell from her expression what this was and took the small drive eagerly.\n\n\"Read it on your own when we get home and don't mention it again until my birthday,\" she said cryptically.\n\nAlex felt his blood pressure increase. Up until this precise moment, he hadn't known whether Maggie was taking his idea seriously. He now understood that she was and had a gut feeling that whatever was in this file was going to be spectacular. He felt a stirring in his loins, just thinking about it.\n\nLater that evening after Chrissie and Maggie had gone to bed, Alex poured himself a scotch, seated himself in an easy chair in the family room, and with great anticipation, opened her file on his laptop.\n\n____________________\n\n\"July 23, 2006\n\nMy Dearest Alex,\n\nMy incredibly sexy and handsome husband, as you know I have a birthday coming up in a few weeks. You've asked for some direction about what you might do to help me celebrate my big day.\n\nI must admit that at first, I thought your 'Triple-A Covenant' idea was a bit silly, but as the weeks and months have passed, I've warmed to it. Very much indeed. And I have given it a great deal of thought. Thought and soul-searching, I suppose you might say.\n\nI considered many, many things that I might suggest, based on how they made me feel at night when I lay in bed thinking about them. I finally arrived at a few favorites. Here they are in the approximate order that they might happen.\n\n1. My birthday is on a Friday this year and I've arranged to have the day off work. You're the boss at your firm, so please give yourself that entire day off, too.\n\n2. Arrange for your folks (or mine...) to take Chrissie for the day. Arrange to deliver her on Thursday evening and pick her up Saturday morning. Or whenever she'd like to be picked up that day. Maybe Friday will carry on into Saturday morning, although I seriously believe you're going to be too worn out to be of much use to me by then!\n\n3. I'd like to start my big day with a lazy, naked breakfast in bed. There will be no 'happy ending' for you (you're going to have too crazy a day . . .) but there should be at least a couple of them for me. In past years, you have been a very generous husband with your oral skills, and I'd like a good long session so I can fully enjoy what a talented guy you are. \n\n4. One of my fondest memories is the day we met. So late morning, we will drive out to Coney Lake and spend a few hours having a picnic on an air mattress. You should pack a cooler with a few beers, snacks, and suntan lotion. (The long-range forecast looks good but if the weather does not cooperate, I'll have a 'Plan B' for that afternoon.) The goal of this request is for us both to enjoy some summer heat together, just like we did the day we met.\"\n\n____________________\n\nAs Alex continued to read, there were three more numbered requests in Maggie's letter. \n\n\"Holy crap,\" he said out loud to himself. He could feel his cock thickening inside his shorts, just from reading what she'd requested, and wondering how he would ever make all the arrangements. This was going to be the most amazing day of their marriage.\n\nHis biggest problem until then would be not having a 24-hour per day woody, just thinking about it.\n\n____________________\n\n August 2006\n\nAlex was like a little kid waiting impatiently for Christmas morning. The days seemed to drag longer and longer as he spent hours thinking about Maggie's birthday. Finally, the big day arrived.\n\nHe'd shopped the previous evening after dropping Chrissie for a two-night sleepover at his folks. Thank God both sets of parents had retired and moved from upper Michigan to the same area where he and Maggie had settled. He'd bought several of her favorite items for breakfast; things that were easy to prepare and serve in bed. He'd brought the pillows from all the guest rooms and piled them at the head of their bed where Maggie could easily find them to make herself even more comfortable.\n\nFinally, they were awake at 8:00\u2014a ridiculously late hour for both of them. They were usually up at 5:30 and on the road within the hour. Still in bed and both naked, Alex crawled over to Maggie for a deep kiss and to wish her a happy birthday. Their resolve almost ended there, as Alex's erect penis jabbed the side of her hip. But he rallied and backed away, heading off to the kitchen.\n\nMinutes later he was back with champagne, orange juice and a carafe of fresh coffee, along with the morning paper. He left these with her and returned to the kitchen. Twenty minutes later he returned with a large tray of bagels, cream cheese, ham, and a large selection of fresh cold berries and fruit segments.\n\nFor her first special gift, holding a stemmed glass full of ice-cold champagne and orange juice, Maggie laid back into a small mountain of pillows, just starting to feel a mild buzz from the delicious drink. Alex stretched himself out between her legs and spent the best part of a half-hour giving her some very special treatment. Just the previous day, Maggie had carefully and thoroughly waxed her privates; even back between her lovely firm ass cheeks. Alex now explored every square inch of her; every tiny crevice and orifice was fair game, no matter where he might discover it. When he finally spread her dusky red labia and discovered the tiny bright pink bud hiding inside, he gently blew on it so she could feel his hot breath. Next was a long series of licks with the tip of his tongue, approaching her clit but not quite touching it. This teasing went on for several minutes so Maggie was squirming and thrusting her hips, trying to move her pussy so her clit would finally come in contact with Alex's darting tongue.\n\nAt this point, Alex backed away from her pussy, and slowly crawled up her body, spending a minute suckling her breasts, greatly enjoying their shape and heft as he felt her nipples stiffen and swell between his lips. He moved his body upward and Maggie held her glass of orange juice and champagne to his lips for a sip. He moved his lips from the glass to hers, kissing her deeply, thrusting his tongue between her lips, tasting the champagne on her lips and teeth. She could taste her own juices on him and felt a surge of heat through her body.\n\nNow he crawled back down and resumed teasing and torturing her swollen labia with long wet licks, avoiding her bright red clit. As she was reaching a high level of frustration with his inability to touch her where she desperately needed to be touched, he suddenly clamped his lips over her little bud and sucked and rubbed it with his tongue, while at the same time, slipping a finger into her tight little sphincter, already slippery and lubricated with her own juices that he'd carefully transferred there. The resulting scream of pleasure might have been heard out in the street, as a string of powerful tremors streamed through her loins and upwards through her body's oversensitive nervous system like jolts of electricity.\n\nA few minutes later, Maggie lay utterly satiated among the stack of pillows, slowly recovering, trying to get her breathing back under control. Alex still lay between her legs, his face pillowed on her stomach, recovering his breath too. He had a massive erection, but he would have a cool shower in a few minutes, and it would go away.\n\nAfter they'd tidied the kitchen and bedroom and drank some more coffee, it was time to head for the lake. Alex partially inflated the air mattress in the garage with an air compressor\u2014it would require only a minute or two with the manual pump at the beach. An hour later, they'd launched the mattress and were floating out in the middle of Coney Lake. The weather had cooperated fully; it was now in the high eighties and would be in the low nineties by mid-afternoon. Utterly naked, they slathered sunscreen all over one another and lay on their backs, side by side, thoroughly enjoying this stolen day from work.\n\nThey sipped ice-cold Corona's and snacked on the goodies that Alex had packed in the cooler. They reminisced like two old friends who have not had an opportunity to talk for many months. They talked about Chrissie and how much they loved her and how lucky they were to have her. And they talked about themselves and how much they loved each other. Maggie cried a bit, she was enjoying this so much.\n\nFinally, it was 2:00 PM\u2014they been floating out here for over two hours.\n\n\"Alex baby, even though this is my special day and much of the fun is coming to me, I do have one gift for you.\"\n\nHe rolled his head and looked at her. She fixed her eyes on his, smiling.\n\n\"Roll onto your side, baby. This is going to be a flashback to the day we met. I can't expect you to go all day without at least a couple of happy endings so this is going to be one of them. I suspect you have some very special plans in store for me.\"\n\nHe did as instructed, just as he had six years ago. Instead of water, she'd brought along a vial of very special lubricant which she smeared into the palm of her hand. It was water-based, so later they could wash it off with a quick swim. His cock was now fully erect and poking rudely in her direction.\n\n\"See something you like, Homie?\" she asked, smiling.\n\n\"I liked what I saw six years ago, and I like it even more today,\" he said.\n\nThis was a much longer treatment than she'd given him back then. She moved her hand slowly up and down his length with soft feather-like touches, intended to tease him. Soon his entire body was writhing as he twisted and turned from the torture she was inflicting on him. Instead of one minute\u2014the time it had taken him to cum during their first session\u2014Maggie managed to make her soft strokes last a full ten minutes before his entire scrotum and belly started twitching violently. She grasped his cock tightly in her fist and began pumping his shaft violently, causing Alex to cry out in a series of strangled gasps. Each spasm of his cock launched a powerful surge of creamy thick semen into the palm of her other hand. Finally he lay still, utterly satiated, struggling to catch his breath.\n\n\"My God, Maggie; you have no idea how good that feels,\" he managed to say between heaving breaths.\n\n\"Oh, I think I do, baby...\", she said smiling.\n\n____________________\n\nThe fifth item on Maggie's list was the most interesting, the most expensive by quite a bit, and had required much research to arrange. Alex had started on-line, trying to find the right solution here in town. He called a half dozen people, using numbers he found on their websites. While none of them were exactly right, one made a suggestion that turned out to be precisely what he was looking for.\n\nWhen they arrived back from the lake, there was a small minivan parked on the street in front of their house. By now it was approaching 4:00 PM. As they pulled into the garage, Alex sent Maggie to their bedroom, saying he'd come for her in fifteen or twenty minutes, and that she should shower.\n\nA chime sounded and Alex went to the front door. Two very attractive young women who'd been waiting in the van, were now standing on the front porch with two large bags of equipment. He invited them in and showed them where to set up in the center of the family room. Alex had pushed the furniture back and closed the heavy drapes so it was quite dim.\n\nFinally, Alex went to fetch Maggie, and after having a quick shower himself, led her down the stairs into the family room. She was wearing a short terry robe tied at the waist. Alex was wearing loose cargo shorts. As they entered the room, Maggie saw the two professional massage tables set up side by side, perhaps a foot apart\u2014just enough room for a person to stand between them, providing they stood sideways.\n\nMaggie's fifth 'pact' request had surprised Alex very much.\n\n____________________\n\n\"5. Alex, baby, here is the part that's going to require some research. I want a very special hour-long naked massage. I want you to find someone locally to massage both of us, side by side\u2014they must be naked too, while they're doing it. And they must be very hot looking women. \n\nYou are probably shocked at this. Why two women? Why not a male masseur for me? Here's something I've never admitted to you before. Back in the dorms during the first two years before I met you, I had a female roommate. During those months when we were so crazy busy with courses and there was no time for socializing, one evening we got into the wine and ended up in bed together. It was just the one woman, several times over a two-year period. It got us through some hectic times. I've never had the inclination before or since. But I'd like to explore it again\u2014probably just this one time. I want to feel a woman's hands on me.\n\nIf either of us has a happy ending, that's okay. \n\nYou might wonder, if this is my birthday, why am I including you? It's because I will get so much pleasure out of watching you, right there beside me. And I know it will be a mind-boggling turn-on for you, watching me get massaged by another hot young woman.\n\nSo there's the challenge, big guy. Think you can make the arrangements?\"\n\n____________________\n\nSo Alex had a good idea of what he was looking for. The women he hired for this request must actually be massage therapists\u2014not glorified hookers from a rub-n-tug parlor. And they must be willing to perform their service in their clients' homes and take the experience a bit further than was typical. Well, quite a bit further, actually. He finally found a couple in an adjacent city that seemed to fit the bill. \n\nSue and Nancy Sullivan were married and had tried to find someone to provide this service for them. They couldn't find anyone who suited them, so decided to offer the service themselves as a sideline to their regular careers. After a couple of years, they were averaging twenty or more appointments per month\u2014mostly repeat business. As their fee reached $1,000 plus per session, they were considering leaving their day careers altogether. Alex had driven to their city to meet them and to satisfy himself that he could trust them with Maggie. They had a long, frank discussion about precisely what Alex and Maggie wanted. They were delighted to hear this was based on a request by Maggie for her birthday. They explained to Alex that Sue considered herself bisexual while Nancy was totally gay and interested in women only. So Nancy would massage Maggie and Alex would get Sue.\n\nBack home, he had a buddy in his company's security department run a police background check. They were model citizens and Alex felt confident about them.\n\nThey were ready to go to work. The tables were just as Maggie had requested, side by side in the center of the family room. The lighting was subdued and soothing music was playing on the stereo. Alex had chosen Bolero\u2014he and Maggie had gotten a kick out of the movie '10' when they'd watched it recently on Netflix. It could loop a few times and probably no one would notice. There was a tall stool at the head of each padded table, where they each had a glass of wine within easy reach.\n\nWhile Alex was upstairs, Sue and Nancy had changed into matching outfits\u2014silky robes tied at the waist, that came to mid-thigh. In their mid-thirties, each woman was trim and fit. He suspected they spent a lot of time in the gym, maintaining their hard athletic bodies. Sue was the taller of the two, just a few inches shorter than Alex, very cute and feminine with freckles scattered across her forehead and down her nose. She had large breasts, straining against the material of her robe. Nancy was petit; an inch or two shorter than Maggie. She was the more attractive of the two, with medium size breasts and the most attractive legs Alex had ever seen. They were both blond\u2014their long hair swept back and tied in ponytails. \n\nAlex introduced them to Maggie as Nancy handed them glasses of wine. They chatted awkwardly for a few minutes until Alex took Maggie by the arm and led her to Nancy's table. She loosened the sash but kept her robe on while she climbed onto the table, tummy down. Nancy had a towel ready and used it to cover Maggie's backside as she pulled the robe away and laid it across a chair. Then she had Maggie raise her butt and slid a pad under her hips, elevating her backside. Alex had done this himself many times and understood the advantages. Alex was watching Maggie carefully to make sure she was still okay with this. She looked more excited than she had in years.\n\nAlex went to his table, removed his shorts, and hopped up onto his stomach. He didn't care if he had a towel across his ass; hopefully it would be coming off pretty soon anyway. The tables had large oval holes where the person being massaged could put his or her face, so the head and neck were straight for the masseuse. Alex could see under the table and watch Sue and Nancy's legs as they moved about.\n\n____________________\n\nMaggie was so excited, she could feel her heartbeat throbbing at her temples and deep in her loins. Sue and Nancy were precisely what she'd had in mind when she'd written her request to Alex for her birthday. Now here they were, stretched out on soft padded massage tables in their family room. She could feel Nancy's hands adjusting the position of her legs.",
        "Just before laying on their hands, Nancy reminded them of the 'stop code'.\n\n\"Alex and Maggie, if either of us does anything that you don't like or don't approve of, or that hurts, or for any other reason, all you have to do is firmly say 'stop' and we'll instantly stop whatever we're doing and step back from the tables. Is that okay?\"\n\nIt was. \n\nThe Sullivan's started at their feet. Maggie felt the stream of warm massage oil being squirted up the backs of her calves and thighs. She could feel the oil trickling down the flesh of her legs, and the strength in Nancy's hands as she scooped it into her palms and spread the oil evenly over the backs of her limbs. As the women went to work, it was clear they were pros. They had a routine, simultaneously performing the same actions on Maggie and Alex.\n\nThey started slowly, working their way up their clients' legs, their fingers working deep into firm flesh, probing for knotted muscles, rubbing and working them away. Maggie felt that Nancy could easily succeed as a professional therapist\u2014she was doing a marvelous job. When the couple reached the top of their client's thighs, they moved upwards to Maggie and Alex's shoulders.\n\nThey stopped and drank from water bottles\u2014it was now quite warm in the room as the heat of the late afternoon permeated the house. Sue had beads of perspiration along her forehead. Alex and Maggie had quick sips of their wine from their glasses.\n\nNow Nancy and Sue slowly removed their silky robes, tossing them to one side. It was a shock to Maggie as she raised her face from the oval opening; there were Nancy's lightly tanned breasts bobbing directly above her head. She glanced over at Alex and smiled; he'd just noticed Sue's breasts jiggling and swaying as she worked on his back. He looked absolutely delighted. Alex turned and caught Maggie's eye; they smiled at each other and Alex winked before moving his face back to the oval hole.\n\nFive minutes later, the now lightly perspiring couple had reached their clients' lower backs. Maggie felt Nancy remove the towel covering her backside. She felt a stream of the warm oil being squirted over her buttocks and dribbling down into the valley between. Looking down through the hole in her table, she could watch Nancy's muscular legs moving as she worked. She had a trim, muscular ass and her loins had been scrupulously waxed. Maggie found it very sexy. A few feet away, she could see that Sue was also perfectly groomed\u2014not a trace of hair or even stubble to be seen. Alex had his face buried in the hole, but Maggie could tell from the way he was moving, that he was thoroughly enjoying what was happening.\n\nThe Sullivans spent a few minutes firmly massaging their buttocks, which Maggie had never experienced before. As Nancy used her powerful hands and fingers to perform a deep forceful massage of her ass cheeks, Maggie could feel the tips of her fingers working their way deep down through the cleft of her buns, stopping just shy of touching her pussy. It felt wonderful and it was taking all her willpower not to grind her hips against the mattress.\n\nThe Sullivan's had been working for twenty minutes when Sue quietly indicated that it was time for Alex and Maggie to roll over. Both were now so horny that any feelings of shyness had evaporated. Seconds later, after long sips from their wine glasses, they were both flat on their backs. The Sullivans slipped folded towels under their heads as pillows. Maggie liked this; it made it easier to watch what was happening down the length of her body and across at Alex.\n\nThe talented couple spent another ten minutes massaging their arms and legs\u2014Maggie suspected that the best part of the session was going to be time spent on their torsos. She was surprised at what a turn-on this was, watching Sue's hard little frame working around Alex's body; first his legs and then his arms. Both women had developed a trick of ensuring there was lots of contact between their own bodies and their clients as they massaged their extremities. Maggie caught Alex watching Nancy massaging her body and they smiled at each other, confirming they were still perfectly okay with all that was happening.\n\nWhen Sue started on Alex's shoulders and chest, she stood beside him. As she reached across him for the massage oil, her breasts came in contact with his chest, and she rubbed them there for a few seconds. Oil from his body was now smeared across her stomach and her delightful boobs. At one point, apparently wanting to massage along his side, she pulled his arm out and positioned it around her waist, with his hand on her ass. Alex interpreted this as an invitation and began to explore her backside with his hand. Her buns were nicely muscled and perfectly formed. His hand, slick with massage oil, explored every inch of her. Looking across at Maggie, Nancy had done the same thing. And for the first time in his life, Alex was treated to the vision of his wife's hand exploring another woman's buttocks. While a bit strange at first, he found it highly erotic. His cock was now fully erect, lying upward across his belly.\n\nNancy spent several minutes deeply massaging Maggie's breasts\u2014harder than she'd ever experienced before, and it felt wonderful. Nancy's palms were callused and it felt incredibly good as they ran roughly over her oiled nipples and the flesh all around her breasts. Soon her hands were working down Maggie's stomach, around her hips, and between her thighs. Nancy's fingers continuously bumped her most secret area and she watched Maggie carefully to ensure she was enjoying this\u2014getting unspoken permission to continue.\n\nAt the same time, Sue was doing pretty much the same things to Alex; her heavily oiled hands working all around his cock and scrotum. Her fingers worked back between his buttocks, slowly across his puckered butt hole, setting off little lightning bolts of exotic pleasure that riffed through his nervous system like powerful electric currents. \n\nThe Sullivans knew this session was all about Maggie's birthday, so Alex wasn't allowed to cum until Maggie said so. Sue was being careful to ensure that Alex had lots of wonderful sexy stimulation, but not enough to bring him over the edge.\n\nNancy's fingers were providing similar pleasure now for Maggie. Her fingers ran across the oily skin on either side of her labia with great pressure, setting of pleasure receptors deep inside her loins that Maggie had never known were there. Now her fingers penetrated the labia, running up and down just inside them, not quite entering her. She used the entire surface of her hand to apply a good deal of pressure and friction to her clit and the area around it. Nancy was extremely talented. She had obviously learned a few tricks about the female anatomy while providing this service for the past few years. Maggie's breathing was escalating rapidly.\n\nAlex had been watching Nancy's technique. \"That feel good, babe?\" he asked.\n\n\"Oh God, you have no idea,\" she replied in a slightly strangled voice. \"I hope you're taking notes baby, I'll be requesting this in the future.\"\n\nNancy smiled at the compliment.\n\nMaggie reached across the gap between the tables and gave Alex's cock a few tentative rubs with her fist. Nancy just smiled as she did it, simply ignoring his erection for the time being, and carrying on with her work.\n\nMaggie had her first orgasm\u2014the pressure had been building deep inside her from Nancy's attention. Now it radiated up inside her pussy, causing her entire body to stiffen, and her eyes to clench shut. Nancy knew it was happening and continued to rub briskly over her clit. \n\nThe Sullivan's time was nearly up. Nancy and Sue slowly ran their hands up and down the bodies they'd been massaging for the past fifty-five minutes. Now they rolled the two tables, supported on castors, tightly together, and repositioned Maggie and Alex so they were laying on their sides on one table, Maggie's back tightly to Alex's stomach in a slippery hot spoon position. This left the other table free.\n\nNancy and sue moved onto it, Sue on her back and Nancy on top of her in a 69 position. As they buried their faces in each other's privates, they reached over and pulled Alex and Maggie's hands over to gently massage them while they pleasured each other. The visuals were stunning\u2014Alex and Maggie were both breathing heavily while watching this amazing performance taking place only inches away.\n\nThe spoon position permitted Alex to work his now wood-like erection so it slipped between Maggie's upper thighs and protruded rudely from just beneath her pussy. Poor Alex; he'd been teased now for over an hour and Maggie took pity on him, reaching down and directing his slippery cock until it slid into perfect position to penetrate her. To his credit, he waited for permission; she pushed back with her hips, causing him to slide into her. He immediately began to move and she pushed back even more violently with her ass, while he started slamming himself into her backside.\n\nThe Sullivans had watched this unfolding and quickly moved to either side of Alex and Maggie. Alex could feel Nancy's hand and oily fingers exploring between his buttocks and massaging his ass and scrotum. Maggie could feel Sue's fingers rubbing her pussy on either side of her special fold while Alex's cock slid in and out of her.\n\nAlex's orgasm came suddenly, surging upwards through his cock like an erupting volcano, and he cried out in a series of long guttural gasps and groans. The sound of Alex cumming and the attention she was receiving from Sue were so powerful, Maggie started to cum again too. A minute later, they lay spent side by side as Sue and Nancy rubbed their hands up and down their clients' bodies, slick with massage oil, sweat, semen, and the juices that had flowed so copiously from Maggie's pussy for the past hour.\n\nThe Sullivan's work was done. After packing their equipment, they had a quick shower in the guest bathroom and changed into fresh shorts and tee-shirts. Minutes later, they were on their way. Alex and Maggie hugged them in thanks and promised they'd call them again on some special occasion.\n\nAs soon as the door closed, in his mind, Alex was going through the steps to complete Maggie's requests. There were still a couple more, then his plans for the day would be complete.\n\n____________________\n\n\"6. After the massage, I'd like a very special bath in our tub, which will require me being carefully washed and rinsed over my entire body to remove the massage oil. I might do the same for you.\n\n7. You'll cater a very fancy dinner to our house. You'll serve the dinner wherever you like in the house. It will be very sexy. We will be naked.\"\n\n____________________\n\nAlex had prepared their ensuite bathroom with its huge soaker tub, that morning before leaving for the lake. All he had to do was bring the champagne from the fridge in an ice bucket. He started the water running and added some very sexy bubble bath. Minutes later, Maggie still naked and covered with a heavy oily sheen of massage oil, climbed into the tub and seated herself at one end. Alex set a tall flute of cold champagne next to her. Just as he was about to enter the tub himself, Maggie stopped him.\n\n\"Alex, have a look on the counter under my tub of styling mousse.\" \n\nHe did as instructed and found a tiny piece of rolled-up paper. He unfolded; inside was a tiny blue pill. He smiled at her, understanding instantly. Even though he was still in the prime of life and had never experienced any difficulties achieving and maintaining a large, enthusiastic erection, they'd experimented with Viagra in the past. On nights that he was really tired from work, he found that it helped. He'd started with 50 a milligram pill but it produced a boner so hard that it was painful\u2014he worried that he might be that one guy in a million, seeking medical assistance for an erection lasting more than four hours. Even the 25 milligram tablets were slightly more than he needed, so he cut them in half. But not tonight\u2014he opted for the full 25 Mg. He only used them on nights they considered 'special occasions'\u2014tonight certainly qualified for that. He'd already cum twice today but with this little helper, he knew he'd have another whopper before the night was over.\n\nHe lit a few candles, shut off the electric lights, and climbed into the tub, settling himself behind Maggie, his back to the tub. She was leaning back into his chest, sitting between his legs. As she enjoyed the warm water and her glass of champagne, Alex carefully and slowly washed her entire body. The bubble bath gave her skin a wonderful slick feeling, as though she was coated with fine machine oil. Then he reached for an object on a little stand beside the tub. It was a waterproof vibrator.\n\n\"Just lean back, Mags... I have another special treat for you. You don't need to cum if you don't want; just lay back and enjoy the sensations.\" Over the next five minutes, he gently rubbed the vibrator all around her slippery pussy and finally against her clit. He did feel her stiffen slightly towards the end as she had a gentle orgasm. \n\n\"I love it when you cum, Mags... I can feel it through your body when you do. It feels incredibly sexy.\"\n\nA half-hour later, they rose from the tub and dried each other thoroughly. Alex's cock was now semi-erect after their activities in the tub.\n\n\"Looks like the 'V' is working its magic,\" she said, giving his cock a little squeeze. \"He's performed admirably today. I hope he has one last performance lurking in the wings.\"\n\n\"Oh I think he does,\" said Alex, grinning. \"The 'V' doesn't keep me hard continuously. The boner comes and goes, the same as without any Viagra. But he'll spring back quickly if you pay him some special attention.\"\n\n\"Oh, don't you worry about that, mister. He's going to love what I have in mind for him.\"\n\nAnother thing that Alex had learned\u2014when on Viagra his erection didn't subside right away after he came. He could continue making love without stopping. If they did stop after he'd cum, he could be hard again in minutes, rather than having to wait a half-hour or more. \n\nThey wandered through the house naked. By now it was after 7:00 and they were hungry. Alex had picked up their gourmet take-out dinner on the way home from the lake\u2014it just required heating and steam for some veggies. He had it ready in fifteen minutes and carried their plates of food into the dining room. He'd set this all up earlier in the morning, too.\n\nTheir two chairs were set side by side at the table. A candle was burning and the remainder of their bottle of champagne was there in an ice bucket. A spare bottle of wine was cooling in the fridge if they needed it. They sat so close together, their bare thighs were pressed together. As they ate, they stopped often for long deep kisses, and fondling of private parts and breasts. When they'd finished the main course, Alex smiled at her with a lascivious look.\n\n\"Time for dessert,\" he said. \"You're going to like this...\"\n\nHe brought two bowls of fancy ice cream from the freezer and set them on the table. He sat next to Maggie and semi-lifting and encouraging her, she moved into his lap. As instructed, she lowered her butt so his now rock-hard cock slid deeply into her, as her full weight settled in his lap. It felt marvelous for both of them. Now moving slowly so as not to over-excite Alex, they began to eat their ice cream; sometimes feeding one another.\n\n\"Alex baby, there is something about having something freezing going into one end of your body and something burning hot going into the other, that is fucking amazing.\" She bounced on him a bit, causing powerful waves of pleasure to flow through his cock. He breathed deeply. Soon the ice cream was finished and they rose; Alex's shiny erect cock sticking straight out, as hard as a wooden broom handle.\n\nThey were drinking wine now and Alex led her to the private deck off their bedroom where they sunbathed during the day. It was dark out now and Alex had set up a large plush chaise lounge. He raised the back to a comfortable angle and sat, gently pulling Maggie down to sit between his legs, her back to his, as they had in the tub. They finished their wine, talking intimately as on so many previous lovemaking sessions. Alex continuously played with her boobs and nipples. After an hour, they were actually starting to feel a little sleepy. All the activity of the day; the sun, the good food, the wine, and the lovemaking, were taking their toll.\n\nAlex gently pushed Maggie forward and worked his way out from behind her. He had her sit back and spread her legs as he lay on his stomach on the lounge and positioned himself. For the next several minutes, he slowly and methodically licked every tiny bit of her pussy and the wonderful slick skin all around it. He reached back with his tongue between her buttocks and licked her puckered little bud there, too. The air was finally cooling and it felt wonderful out here on the deck. Alex could tell from the tightening and slackening of Maggie's body that she'd now had another little orgasm.\n\nTalking quietly, Maggie said, \"Alex, this has without a doubt been the best birthday of my life. I've lost track of how many times I've cum; I'll never forget this day as long as I live. I would never have believed it could be so erotic, having my boobs massaged by a really hot woman while watching another, massaging your cock.\"\n\n\"Yeah, it was incredibly special,\" he said. \"The Sullivans were worth every penny and then some\u2014they were unbelievable. We'll have to call on them again one day. \"\n\n\"Baby, you've been so good to me today, I want to use our last session of the day to pay you back. Let's head for bed.\"\n\nAlex required no further prompting. \n\n\"I'm going to give you a nice BJ, baby. I know you'll stay hard after cumming with that 'V' in your system, so when you're almost finished coming, I'm going to scramble back and I want you to jump my fucking bones with everything you've got baby. Your final assignment is to bust this fucking mattress. Think you can do that?\"\n\n\"As someone said on a certain air mattress about six years ago, 'Just watch me',\" and he smiled as she remembered.\n\nShe sat him on the edge of the bed leaning back on his elbows and knelt between his legs\u2014a strategically placed lamp provided lots of light. This was perfect for him. When she performed oral sex, watching her gorgeous face as his cock slid in and out between her lips, was almost as good as how wonderful it felt. She had learned many tricks on torturing Alex this way\u2014tonight she intended to use them all, before letting him cum.\n\nThe sensations for him were exquisite as he watched his swollen blood-red glans slowly disappear between her stretched lips. Inside her mouth he could feel her tongue slowly circling his glans, softly at first; then with more pressure. She kept moving her head forward slowly, taking him into her mouth, a quarter-inch at a time. She was breathing through her nose as his bulbous glans reached the back of her mouth and moved into the top of her windpipe. She'd trained herself years ago, how to overcome her gag reflex. She continued pushing until an inch of his cock slid into her larynx; then past it into her upper esophagus. Alex was presented with a view so mind-bogglingly sexy, he had to will himself not to cum. Maggie's lips were now pressed tightly around the base of his cock and her chin deeply into his scrotum. He could feel the warmth and pressure around his glans.\n\nShe just held him there for twenty or thirty seconds; not moving and holding her breath. Then she slowly backed off until her airway was unobstructed and she could again draw in deep lungfuls of air. She continued with this, slowly picking up the tempo, until after ten minutes, she was quickly taking his entire length rapidly in and out. The vision of it and the unbelievable sensations were finally more than he could bear, and the wonderful pressure that had been building in his balls and lower stomach came roaring out of him, providing such intense, almost painful pleasure, that he cried out in a deep strangled wail.",
        "She felt the first surge deep in her throat as his hot viscous seed surged down her gullet. She backed off and slammed him deep into her throat again, feeling the next powerful surge across her tongue; then blast against the back of her throat. He'd fallen back on the bed, his eyes clenched tightly closed, a look of extreme pain on his face. Another desperate gasp escaped him. Finally, she could feel the surges of cum into her mouth diminishing. She closed her throat allowing the last of his semen to flow through her mouth and erupt at the corners of her lips, spilling down her chin onto her breasts. \n\nNot giving him even a second to recover, she jumped up onto the bed and flipped onto her back, her ass slightly protruding over the edge of the mattress. Alex's eyes locked on hers, feral with animal lust. Her breath came in rasps; his semen still coated her lower face, shiny where it flowed down her neck. One long ropy strand lay wetly between her breasts. \n\nSomething snapped inside his brain. He reached under her and lifted her legs. With all his strength, he pushed her legs forward, folded her in half at the waist, her knees back to her shoulders. The skin of her buttocks and thighs was stretched as tight as a drumhead. Her loins were utterly exposed, her labia tight and pink, shiny with her fluids, and perfectly smooth, thanks to her recent waxing.\n\nShe knew this was his favorite way to finish. He could watch his cock sliding in and out of her pussy and her breasts surging up and down on her ribcage as he slammed his hips into her backside. Thank God for the Viagra. Even though he'd had a powerful orgasm only thirty seconds ago, he started pounding violently into her\u2014the hardest fucking she had experienced in her life. In all the years she and Alex had been making love, it had never felt as primal and wonderful as it did now.\n\nFor the next few minutes, he simply slammed his cock into her gaping pussy, using the weight of his entire body. She screamed in pleasure and for a second of panic, he thought he'd hurt her, but no\u2014the look of passion on her face told him it was raw pleasure; not pain. And he slammed into her again and again and again.\n\nMaggie's face was glowing red as though her blood pressure had gone off the charts. Her eyes still locked with his, her face wild with animal lust. \"OOOOOHHHHH FUCK ALEX, OOOOOHHHH FUCK ME, FUCK ME FUCK ME. SLAM THAT FUCKING MONSTER INTO ME... GIVE IT TO ME BABYYYYY\" and screamed again as he did; harder than he'd ever believed he could, or that a woman under him could withstand. Ten seconds later they both exploded simultaneously. He continued pounding into her as he came and for several seconds afterward until he had nothing left, and he collapsed on her, her arms wrapped around his back, pulling him to her with all her strength.\n\nThey lay like this for several minutes. Alex became aware that Maggie was crying quietly and again panicked, thinking he'd hurt her. But as he drew back and looking at her face, he could see her smiling.\n\n\"Baby, I didn't know raw fucking pleasure like that even existed. If we were both hit by a truck tomorrow, I'll die knowing I've had the ultimate pleasure from my ultimate lover.\"\n\n\"Oh bullshit,\" Alex managed to gasp, \"We're just getting started, baby.\" \n\nAnd they both laughed. A minute later as their combined fluids flowed down through Maggie's thighs into the sheets and Alex's still semi-engorged cock pressed firmly against the fold of her pussy, they fell asleep locked in each other's arms.\n\n____________________\n\n July 2010\n\nFour Years Later\n\nAlex and Chrissie were walking home from the kiddy's water park, just a few blocks from their house. It was early afternoon and just getting starting to get hot. Chrissie was now eight years old and like her parents, seemed to thrive in the heat. As soon as they arrived home, Alex would set up a sprinkler out in the backyard for Chrissie to run through it. She was now old enough to be shy and would have her little Wonder Woman bathing suit on; a few of the neighbor's kids would probably join her. These were good times.\n\nBut that wasn't all that had Alex in a mellow mood. His birthday was coming up in a few weeks and he was 'on deck' this year for the Triple-A pact\u2014his second. He'd been working on his list for some time and even though it was for his pleasure, he was sure that it was going to be a pleasant surprise for Maggie, too. He'd asked for several special activities, described in considerable detail. He could feel a slight twinge in his cock, just thinking about it.\n\nAfter that summer four years ago, their love life had improved ten-fold over previous years. They both knew this was a direct result of 'The Pact'. They'd each spent much time, reliving that day\u2014remembering just how wonderful Maggie's birthday had been. During the past year, they'd made love weekly at a minimum. Sometimes it was several times per week.\n\nIt had been Maggie's turn again last year. She'd tried hard to top her first year and almost succeeded. Her creativity when suggesting kinky new things to try was something Alex had never imagined\u2014a side of her that he'd not known existed. He was blown away at one request\u2014to have a passionate fuck session somewhere in semi-public with lots of people around but with a very low risk of being noticed. He'd nearly given up on that one, but driving home one afternoon on a divided highway just a few miles from their home, he'd noticed that the east/west lanes were built around a rock island\u2014an outcropping covered in thick brush and trees. It had obviously been cheaper and easier to run the divided lanes around either side of it, than blasting and hauling it away. Alex made a mental note of its location.\n\nEarly on a Sunday morning just a few days before her special day, he'd parked on a side street and walked back to that section of the highway. Traffic was light and he'd quickly run across the empty lanes and scrambled up the bank into the heavily overgrown section. \n\nJust ten feet in, he discovered that he was out of sight of the pavement below. This patch of brush was perhaps fifty yards long and twenty yards wide. There was a crude trail through the growth with a few small clearings, perhaps where homeless people had camped. As cars went by, they seemed very close\u2014where he stood was only fifty feet from the center of the closest lane.\n\nHe'd brought a waterproof pack with some supplies they would need. He picked a spot that he believed would be perfect and on his knees, pushed the pack deep into a heavy thicket until it was completely hidden. Five minutes later, he was back at his car and headed home. \n\nHer big day had been on a weekday, so they'd arrived mid-evening. Dressed in jogging gear as though they were simply out for a run, they waited for a break in traffic and scooted across the lane to the forested rock island. Together they scampered up into the foliage. From the pack, he produced a blanket, a bottle of wine, stemmed glasses, and some snacks. A minute later he had them all laid out in the tiny hidden clearing.\n\nThey were there for an hour, making love in this brushy island. At one point with Maggie flat on her stomach on a towel , Alex laid on her back, his legs spread outside hers, and his cock slowly gliding in and out between her slippery buns. They'd crawled forward down the brushy trail, until they were facing the traffic in the oncoming lane, but were still perfectly camouflaged by the green leafy brush. They were so close that through gaps in the brush, they could make out the faces of the drivers and passengers as they drove by.\n\n\"We'll be fucked if a helicopter flies over'\" said Alex.\n\n\"Not as magnificently fucked as I'm getting right now,\" said Maggie, groaning loudly as Alex's thick cock slipped all the way into her pussy, and he held it there a few seconds before pulling it out. Then he started to pound her backside, driving his cock deeply into her from behind. A few minutes later, they'd both cum powerfully, and lay still, making sure they hadn't been spotted. They waited until it was nearly dark before crawling out of hiding, making their way back down the trail to the highway, and jogging back to their car.\n\nMaggie told him later this had been a life-long fantasy that she didn't believe would ever happen. \n\n____________________\n\nAlex had spent a lot of time, trying to decide what he was going to ask for on his thirtieth birthday, coming up in a few weeks. Rather than worrying about getting old, he was having trouble sleeping at night because he was so excited. He couldn't wait for it to arrive. \n\nMaggie was away in Washington, DC this week\u2014she'd be home late Friday. Then she had a week off, barring any major events threatening national security. During the past four years, Ion-Link had grown into a thriving company, highly regarded by the US Military. There had been a severe solar flare three years ago, the largest and most powerful since scientists had first discovered and started measuring them. The flare had temporarily knocked out hundreds of communication satellites belonging to several countries, both commercial and military, including the US. Through it all, Maggie's Ion-Link had performed flawlessly, providing uninterrupted communications, wherever it was installed. Overnight, Maggie's radio technology became vitally important for military emergency communications. \n\nShe had recently graduated from the accelerated Doctoral program that Major Howard Comstock insisted she enroll in a few years ago. She was now known throughout her secret community as Dr. Margaret Sinclair. Only close associates within her company or the industry dared call her Maggie. Alex was immensely proud of her.\n\nHer HR department now accepted applications from only the brightest graduates of MIT, Caltech, Stanford, and a few other top Ivy League colleges and universities. It generally took over a year to be accepted at Ion-Link, due to the stringent background checks conducted first by Maggie's security people; then by the CIA. Maggie retained 100% ownership of the firm and was now making seriously big bucks. But the trade-off was time away from her family. She was now on the road at least three months per year; sometimes four. Much of that time was comprised of one and two-week trips but occasionally she was still required to be away for up to a month.\n\nAlex usually didn't know where she was on the longer trips\u2014their locations were classified. But the military was smart enough to ensure that she didn't burn out or become sufficiently unhappy that she wouldn't do it anymore. On a few occasions, they'd flown her home on military aircraft of opportunity for a quick visit with her family. On other occasions, they'd flown Alex and Chrissie to Europe, where they put the family up in a five-star resort. Maggie of course was flown to the resort, sometimes thousands of miles from wherever she'd been deployed, to keep the location secret.\n\nAlex's Crystal Soft firm had finally gone public over the past year. Alex was now the company's second largest shareholder after his boss, CEO Kerry Sloan. Sloan owned 75% of the company and Alex 20%. The remaining shares traded publically and had sky-rocketed in price since their IPO, resulting in two stock splits. These days Alex worried even more about Sloan, who was exhibiting subtle symptoms of mental impairment, likely due to his heavy recreational drug use over the years. He was still functioning but Alex could see the brilliance and drive that had brought the company this far, was slipping.\n\nAlex was the real reason the firm had prospered; he was now the most important person in C-Soft's hierarchy. His wages and bonuses had increased five-fold over the past four years\u2014he and Maggie's investments were now sufficient that if they sold their respective shares and companies, they could retire and live like royalty for the remainder of their lives. But that was not going to happen anytime soon\u2014each of them loved their work and couldn't imagine not taking exciting new projects to their next levels.\n\nAlex couldn't wait for Maggie to arrive home. The days were dragging as he awaited his big day to find out what she'd done with his list.\n\n____________________\n\nMaggie felt a little stir of excitement as she read Alex's list of 'Triple-A' requests for his thirtieth birthday. As usual, she was a bit shocked, wondering how she would manage to carry out these assignments. At first she didn't think she'd be able to handle them all, but as the days went by, her thoughts fermented in the back of her brain. After a week she had his list pretty much worked out. She'd do it all and not only that, she was looking forward to it too, perhaps just as much as Alex. She'd never been to Las Vegas.\n\nShe understood that he was an absolute sucker for her lithe little body\u2014she could usually reduce him to a stammering idiot with a really good boob-flash in a public place such as a restaurant or department store. During the year before they married, they spent much time at Coney Lake and he became almost blas\u00e9 at seeing her totally naked. But if Alex got so much as a little peek at her boobs or God forbid, her pussy under a short, loose skirt in the back of a taxi, it would cause his heart rate to race and his face to flush red in near overpowering horniness. Maggie had figured this out quickly in their relationship and often did it on purpose, just to torture him. This weakness for Maggie's body had cropped up in his twenty-eighth birthday list and was 'front and center' again for his thirtieth.\n\nThis year he was asking for a dirty weekend in Vegas. The most complex part of the list was travel arrangements\u2014the rest wouldn't be terribly difficult. There were a couple of items she couldn't finalize until they were there. In the list, she appreciated that he'd been thinking of her, too. They were going to have an amazing time.\n\nTheir flight landed in Las Vegas on a Thursday afternoon. After several drinks served by the first-class attendants\u2014scotch on the rocks for Alex and martinis for Maggie\u2014they'd managed to get an hour of sleep. They spent time talking and catching up\u2014Chrissie was staying with her grandparents.\n\nWith their companies prospering, the Sinclairs were not afraid to spend a few dollars on luxury every now and then. Maggie had pre-shipped their luggage which would be waiting in their hotel room. She'd packed enough for a month, much less four days. So all they had with them on board were small overnight packs containing electronics and fresh underwear.\n\nShe'd arranged for a limo and after landing, they found their way to a prearranged parking stall where a plush charcoal Cadillac Escalade Premium SUV awaited them. Its back and side windows were tinted nearly black. It had a fully stocked bar and they split a small bottle of ice-cold champagne to celebrate their arrival. They'd barely finished it when they arrived at their destination.\n\nRather than stay at one of the well-known Las Vegas casino hotels, they had opted for Desiree's Grotto, just a block off the strip. It was a full-size hotel designed and operated by a former A-List movie goddess named Desiree Centaine\u2014possibly the most beautiful actress in the history of Hollywood. As the years caught up and scripts requiring sultry, sexy women in their twenties and thirties slowly dried up, Centaine decided to change professions. She had amassed a fortune during her career and used some of it to build a luxury establishment with a significantly different business plan than any other hotel chain in the world.\n\nDesiree's Grotto was the only hotel she owned or ever intended to. Her target demographic was not families with a squall of noisy children. She catered to moneyed couples, looking for a few days of escape from their stressful, albeit extremely successful lives. The nightly rate at Desiree's Grotto was triple the rate of any other five-star hotel in Las Vegas. But anyone who stayed there, swore afterwards it was worth every penny and more.\n\nAs they entered the lobby from an alcove where the limo dropped them, they were struck with its outright gaudiness. Maggie whispered that it must have cost many millions just to decorate this cavernous room. They felt like the 'gee whiz kids', standing surrounded by unimaginable extravagance and opulence, including dozens of elaborate, masters-like paintings, the size of their walls back home. The floors were covered with deep plush carpeting with marble corridors running between them. The walls were draped with heavy fabrics and the lounge area was full of deeply padded furniture that would make Donald Trump's furniture seem spartan. Interspaced through it all were marble statues of ancient exotic women and their lovers. There were tiny wet bars in various locations where wine and tiny pastries were available to guests. They were deeply impressed.\n\n\"Do you know what they don't have?\" said Alex. \"There is not a slot machine to be seen. They must be the only hotel in Vegas without one in the entry.\"\n\nThe desk clerk was an extremely attractive tall, slim black woman in a slinky braless black dress with lots of cleavage showing. She welcomed them like they were old friends. They noticed that the rest of the desk staff were attractive young women, all provocatively dressed.\n\nThey didn't need a bellman and set off to find their room. It was after 6:00 PM and they were hungry. As they walked through the main level which seemed only slightly smaller than a football field, they passed dozens of different venues for guests. They wandered through a casino, the most exorbitantly decorated either had ever imagined. There was no constant clatter of bells and claxons from slot machines\u2014it was comfortably quiet in here. Also, there was no reek of cigarette smoke. They would later learn that guests who wished to smoke were encouraged to walk up the street to any of the large casinos, where they could smoke to their heart's content. And there were no 'trailer trash' folks here either, sitting endlessly at slot machines with plastic jugs full of coins or tokens. All of the people in this room were dressed to the nines; the women in exotic dresses and most of the men in black tie.\n\n\"You have to be well healed to gamble here,\" said Maggie. \"It's a good thing we don't like gambling; we could lose our nest egg here in an evening.\"\n\n\"Ain't it the truth,\" said Alex. \"By the way, we won't be able to eat here; we don't have the proper threads.\"\n\n\"Speak for yourself, my oh-so-sexy but unimaginative husband. I have a couple of outfits that will be just peachy here. And I'll bet we can arrange for a tux for you with a phone call.\"\n\n\"I like the way you think, baby,\" he replied, smiling. \"You hungry?\"\n\n\"I'm starving,\" she said.\n\n\"Let's see if this place has a fancy restaurant.\"\n\n\"I will give your bare butt a long, slow, wet kiss, right in front of Caesar's Palace if there isn't,\" she said.\n\n\"Now I'm hoping they don't,\" said Alex, grinning.\n\nThey found it a few minutes later\u2014it too was black tie for men and elegant sexy gowns for the ladies. \n\n\"Did you pack anything decent to wear in this one, Mags?\" Alex asked, teasing.\n\n\"When I get dressed for dinner tonight, I am gonna stop your heart, baby,\" said Maggie. She could see the excitement in his eyes as he absorbed that information. \n\nAlex noticed a house phone on a table, picked it up, and asked for the concierge. The tuxedo question was obviously a common one\u2014it seemed they had a discrete men's wear store on-premises with a large inventory of styles and sizes and lightning-fast alterations. Thirty minutes after finding it and initialing the chit, the tux and all accouterments would be delivered to their room in an hour. They found a little bar and had a drink while they waited.\n\nNow having found their room, they were again astonished by its incredible lavishness. It was actually a small suite with a living room, bedroom, and large five-piece 'his & her' bathroom with a sauna and huge soaker tub. In the bedroom, they discovered all their pre-shipped luggage had not only safely arrived but had been unpacked, pressed, and hung in a large closet.",
        "They could not believe the size of the bed\u2014a full eight feet square. They fell back onto it and were impressed with how soft, yet supportive, the mattress was. It was a four-poster with gossamer-like curtains around the edges. On the underside of the canopy were mood lights that could be adjusted for brightness and a full-size magnifying mirror\u2014the largest that either of them had ever seen. They were both anticipating what they were going to see in it when they finally crawled back in here for the night.\n\nThey agreed to get moving. They knew they'd probably be here for the entire evening if they started fooling around now. They had nearly a week and intended to take full advantage of this amazing bed.\n\n\"Let's be ready at 8:00,\" Alex said. That gave her just over an hour.\n\n\"You bet, baby. I'm going to use the soaker tub so the shower is all yours.\"\n\nAlex was always quicker getting ready. At a few minutes past 8:00, he was sitting in a plush armchair near the entry door, checking his iPhone. He was feeling pretty sharp in his new threads after he'd managed to get his bow tie properly secured. He'd opted for a tux with a bit of a retrograde look; his butt was hidden behind tails that hung down to his knees. A pure white waistcoat protruded slightly below the bottom edge of his jet-black lapels. The bow tie was white rather than black.\n\nHe'd noticed a dress hanging from a coat-hook next to his chair, and wondered what it was doing there. Maybe it had been delivered while they were in the bathroom. He wasn't good at judging how a dress on a hanger might look on Maggie, but he suspected this one would be spectacular. It was made from a black, shiny lam\u00e9, with the occasional strand of silver woven through. When he felt the material with his fingers, it was gossamer thin and as clingy as wet cotton. He'd never seen anything like it and could only imagine how it would look on his wife. He wondered again why it was hanging at the entry door and not in the closet.\n\nMaggie called from the bedroom, \"You ready, baby?\"\n\n\"Yes, I'm at the door.\" He was greatly anticipating what she might have chosen to wear. He knew it was going to be sexy and stunning.\n\nStill looking at the dress, Alex noticed her stroll into the room in his peripheral vision. He turned his head to admire her and suddenly felt faint with shock. She had fixed her hair so it hung in thick, honey-blond waves alongside her head, partially covering one side of her face. It looked like she'd just spent several hours in a hair salon. Her face was elegantly made up too, highlighting her beauty\u2014she was truly gorgeous. But what stunned him to his core; all she was wearing were black high-heeled stilettos, causing the muscles of her bare calves, thighs, and buttocks to nicely stand out. She had the legs of a Radio City Rockette. She had even put a little rouge on her areola and nipples, which stood out like puckered little raspberries. Her privates were shiny pink and utterly bare.\n\nMaggie was delighted with his response and walked directly to the dress hanging from the closet door. Removing it from the hanger, she carefully raised the hem and slipped it over her arms and head. The black sheath flowed down her body like an exotic fluid to six inches above her knees and settled into place. Alex continued to stare at her, his mouth hanging slightly open, as he absorbed the mind-boggling sexiness of all that he'd just witnessed.\n\nHe didn't think he'd ever seen fabric as clingy as this dress\u2014it covered her torso and legs only slightly more efficiently than paint. It was sleeveless with a spaghetti strap around the back of her neck, down to the bodice which was a deep, loose vee. Her breasts were hidden within folds of the shimmering cloth. There were slits in the sides of the hem, almost to her hips. While the material was not opaque\u2014he couldn't actually see Maggie's skin through it\u2014it seemed to shimmer and flow as her body moved, clinging to her curves. As the dress settled against her body, it was like a second skin, showing every curve, no matter how subtle. Her nipples and breasts were perfectly molded through the cloth and as she did a little pirouette, the material settled slightly between her buttocks. It was very obvious that she was wearing nothing beneath it and Alex could already feel the stirrings of an erection.\n\n\"Like it, baby?\" she asked.\n\n\"There are no words,\" he managed to stammer.\n\n____________________\n\nAs they strolled through various hallways and the huge lobby on the main floor to the dining room, not a single set of male eyes failed to notice and follow her. Many women were also fascinated, most exhibiting tell-tale signs of jealousy. The ma\u00eetre d' did a slight double-take when they walked in and Alex gave him their name for the reservation. They were whisked away to a semi-private table surrounded by a cleverly arranged potted garden full of lush vegetation and flowers.\n\nAs they worked their way through their multi-course dinner and excellent champagne, they talked for over an hour, catching up on everything in their lives. Maggie could tell with great delight, that Alex was still mesmerized by her dress. \n\n\"If my heart can survive that shock, it'll be good 'till I'm one hundred,\" said Alex.\n\n\"I'm going to hold you to that, baby.\"\n\nNow in their little semi-private grotto of palm bushes and lush flowering plants, with her back to the restaurant, Maggie reached into the deep vee of her dress and pulled sideways, completely exposing her breasts to a stunned Alex, who was suddenly having difficulties breathing. His eyes bugged wide open as though he'd just spotted a ghost. Just as quickly, the material slid back into place, Maggie smiling smugly, thoroughly enjoying the look of unadulterated lust on his face.\n\nJust before they left, Maggie arose to visit the lady's room. As she stood, she managed to pull one of the slits at the hem open, giving him a quick peek at her bare pussy, before the dress fell back into place. His erection was now straining mightily against the material of his trousers. She was grinning as he watched her magnificent ass disappear through the tables around them.\n\nAfter dinner, they slipped into a small intimate club in Desiree's Grotto\u2014one designed to her specifications. There was no semi-hysterical DJ here, playing rap music at an eardrum piercing volume. This room was dark and sensual. The couples were all dressed elegantly, sitting in intimate booths or love seats, carefully arranged to provide some separation from the people around them. A small orchestra played from a nearly hidden alcove, their music sultry, sizzling, and erotic.\n\nThey were seated in a two-person nook, the seats deeply plush and comfortable. Alex put his arm around Maggie's shoulders and pulled her gently against his chest. Their drinks arrived and they sat for several minutes, enjoying the music and ambiance. Subtle lighting permitted the wait staff to find their way through the dim aisles and find their customers. But in the booths, it was difficult to distinctly make out other people nearby\u2014they were like moving shadows. Alex moved his hand to the vee of Maggie's dress and slipped it inside, cupping a breast and tweaking the puckering nipple with his fingertips. He could feel her head press back into his shoulder and hear her quietly sigh in pleasure. It was utterly dark under the table and her hand found his erection and gently massaged it through his pants.\n\nA few minutes later, the orchestra was playing a song that lent itself nicely to slow dancing. Alex whispered in Maggie's ear.\n\n\"Let's go up and dance, babe. But you'll have to help me get up there.\"\n\n\"Why, what's wrong?\" she whispered back.\n\n\"You've given me an immense hard-on and you'll have to help me hide it as we walk to the dance floor.\"\n\nMaggie giggled. \"It will be my pleasure, lover.\"\n\nShe arose first and stood with her back to him. He stood in the semi-darkness and wrapped his arms around her waist as they moved towards a few other couples slowly gyrating on the tiny dance floor. Seconds later, she'd twirled and they were in one another's arms, slowly moving in time to the music. Maggie could feel his erection pressing against her lower belly as they moved and forced herself tightly against it. She knew he couldn't feel her boobs through the layers of tux, but she pressed them tightly against him anyway. The song went on for five minutes and they were ready to jump each others' bones, right there on the dance floor. She helped him conceal his erection returning to their table as well. Finally, it was well after midnight. \n\nWhen researching Desiree's Grotto, Maggie had been fascinated with one of the hotel's quirks. Desiree assured her customers that there were no cameras in the elevators\u2014they were utterly private. They were also express so would not stop until you'd arrived at your floor.\n\nWhen she and Alex entered the elevator and the door slid closed after he pushed their button, she sank to her knees in front of him and unzipped his fly. A second later, she had his rock-hard member in her mouth and took him deeply, slowly moving him in and out between her lips. Alex thought his knees might buckle. Thirty seconds after she started, the control panel gave a warning ping, indicating the doors were about to open, and Maggie stood, watching with delight as Alex struggled to get his swollen cock back inside his pants. He barely succeeded when the door swished open, revealing an empty hallway.\n\nTheir room door was almost one hundred feet from the elevator. As she stepped out into the empty hallway, Maggie casually reached down and grasping the hem of her dress, pulled it up and over her head, leaving her utterly naked. She hung the dress around Alex's neck and leaned into him for a deep kiss. Seconds later, he put his arm around her, and they headed down the hallway, Maggie strolling beside him. She was so turned on by the bug-eyed look on his face at her nakedness, and the huge bump in the front of his pants, she could feel her juices leaking from her, slowly coating the insides of her thighs. She thought there were likely security cameras here in the hall and felt a little thrill, knowing that in a security room somewhere, a number of men were watching their every move.\n\nBack in their room, they made love for over an hour, taking full advantage of the Jacuzzi soaker tub and the monstrous canopy bed with its overhead mirror. It was a night that neither of them would forget for many, many years.\n\n____________________\n\nThe next morning, they had breakfast delivered to their room. Still in bed, they were both naked under the covers when it arrived and called for the waiter to let himself in. He was a young man, clearly in awe of Maggie, trying not to ogle her breasts which were partially exposed as she held the sheet loosely around her body, trying to remove the cover from one of the dishes. They laughed heartily when the flustered young man finally left them alone again.\n\nMaggie had managed to fulfill several of Alex's Triple-A requests the previous evening. But his twenty-four hours were not over until midnight\u2014he might even get a few bonus hours if he was lucky. And there were a few more boxes to tick today.\n\nAnother of Alex's requests was to take a hike, with a sub-request. Years ago in his early teens, he'd visited Las Vegas with his family and they'd spent a day hiking in the park just west of the city called Red Rock Canyon. He'd never forgotten it and spent some time in Google maps, getting a feel for the trails. He finally settled on an area accessed via a long winding trail from the parking lot.\n\nThey arrived late morning and two hours later reached the summit of a small mountain of ancient rusty-red boulders the size of houses. Fortunately, the weather was cool for this area today\u2014in the mid-seventies. It was not unusual for it to be well over one hundred degrees. This was true desert\u2014dry scrubby brush, cactus, and lots of sand. The peak they'd arrived on provided a magnificent view of the other low rocky mountains in this range, but more importantly, of the access trails to where they were sitting. Fortunately, the park was not too crowded yet.\n\nAs well as getting some exercise and seeing some spectacular scenery, Alex had requested a long, outdoor BJ with Maggie either nude or topless while she gave it. This spot was perfect\u2014they had this area to themselves and could see if anyone was coming. Alex chose a large smooth boulder with a wide flat top and spread the large bath towels he'd borrowed from their room. He had a small cooler and opened an ice-cold Corona. Then he removed all his clothes and sat in the center of a towel. \n\nIt didn't take Maggie long to undress, too. She wore a light sleeveless T-shirt, tight shorts, and sockless sneakers. Laying between his legs, she first took a sip of his beer and then proceeded to the task at hand. A half-hour later, Alex had one of the most spectacular orgasms of his life. Maggie managed to swallow most of his semen but there was still a fair amount spread across her lower face which Alex carefully wiped away, before giving her a long deep kiss of gratitude.\n\nLater that day, they spent an hour lying outside the hotel at a 'swimsuit optional' pool, surrounded by a high fence and lush tropical landscaping. Alex quickly decided that Maggie was the most beautiful woman there, although there were many other couples enjoying the sun, warming their naked bodies. All around the pool, Alex could see the men and many of the women, stealing occasional glances at Maggie. He had to avoid looking at her to prevent an embarrassing erection.\n\nFinally, they headed back to their room to prepare for dinner. They had worn robes down to the pool with nothing underneath. As they boarded the elevator, two businessmen in suits joined them, apparently headed to the roof bar. When the door closed, Maggie pretended to lean forward to adjust the bag she was carrying, causing her entire robe to fall open. Her entire chest was now exposed, but she pretended not to notice while digging through the contents of the bag. The two men openly stared, not believing what they were seeing\u2014two perfect breasts swaying and jiggling as she moved. And below her tight, hard stomach, was a perfectly bald and suntanned quim. Neither of the men would ever forget this. Another of the requests on Alex's list was complete.\n\nAlex's twenty-four hours were now up, and Maggie hadn't missed anything. They remained in Las Vegas for a few more days, enjoying being utterly lazy and emptying their minds of work and all the other distractions back home. They made love several times per day, slept long hours, and played like teenagers in all the amazing venues offered by this city.\n\nToo soon it was time to board their aircraft and return home.\n\n____________________\n\n May 2020\n\nTen Years Later\n\nNeither Alex nor Maggie could believe that twenty years had slipped by since that magical afternoon on Coney lake, back in the summer of 2000. Alex was now forty-two years old; Maggie would turn forty in a few months. Their daughter Chrissie was a teenager; now eighteen. Where in God's name had the years gone? It seemed like just a year or two since she'd been born.\n\nThey were recovering from three very difficult years; so bad that Maggie often laid awake at night while off in some far-flung country, worrying about the survival of their marriage. There were several problems with varying degrees of complexity, but the root cause of most of them was their respective careers. \n\nBoth of their companies were now worth millions\u2014Alex and Maggie were incredibly wealthy, although a stranger would never guess, given their lifestyle. During rare days at home together, they dressed as always; jeans or shorts, sneakers, tee-shirts, perhaps a fleece top in cooler weather. \n\nThey had paid a price for their success. Every year there were more and more demands on their personal time; countless days, weeks, and months of work and travel. Alex now spent a lot of time on the road, too. Their companies and jobs were so demanding that their family usually played second fiddle to their professional lives. \n\nMaggie in particular, was required to take more frequent and longer trips to sites where her firm's communications products were being installed, serviced, or upgraded. Due to the increasingly sensitive nature of her technology, her military customers were loath to grant security clearances to new people in the company. The few with sufficiently high security clearances were stretched so thin, Maggie often had to go herself.\n\nA few years earlier, Alex's Crystal Soft was nearly acquired by a rival firm in an attempted hostile takeover. Alex later learned that the rival company had hired professional agents to befriend his partner, Kerry Sloan. Sloan was now for all practical purposes, a junkie. Alex and Sloan's family had attempted interventions and getting him into rehab but none of it worked. Posing as friends, the agents over a period of months, convinced an incoherent Sloan to sign an interim agreement to sell them all his C-Soft shares.\n\nAlex didn't find out about it until one morning when the rival firm's executives and lawyers arrived at the C-Soft head office and attempted to physically take it over. C-Soft had installed a security department a few years earlier, due to some threats against employees and managers. Sam McClusky, the Head of Security, and Alex were close friends. Faced with lawyers brandishing some very legal and authentic-looking paperwork, Sam looked to Alex for direction. Alex knew there was some serious bullshit being flung about and ordered Sam to throw them out of the building, using violence if necessary. Sam took him to heart and a few minutes later, they were gone.\n\nAlex tried to contact Sloan who was nowhere to be found. He called his board of directors and the firm's criminal lawyers; none of them knew what the fuck was going on either. Alex ordered all the building's doors locked, with guards posted to check the company ID of anyone wishing to enter. While waiting for his lawyers to arrive, he called an emergency staff meeting and explained what was going on.\n\nOver the next week, the pieces fell into place. Crystal-Soft's legal firm quickly established that Sloan didn't have the authority on several different levels, to sign the offer to sell his shares. They launched several court actions against the other company and against Sloan. Then tragically, Sloan was discovered found dead in his home by his housekeeper\u2014his autopsy confirming what the paramedics already knew. He'd overdosed on Fentanyl-laced drugs. The police ran an investigation for over a year, to establish that it was accidental and not a murder.\n\nIn an emergency meeting, the board of directors promoted Alex to CEO of Chrystal-Soft. A year later, according to the terms of Sloan's will, Alex received a large percentage of Sloan's shares making him the majority shareholder by a comfortable margin. When the whole fiasco was over, which had been monitored closely by financial analysts throughout the country, C-Soft's share values surged, increasing the company's net worth by almost 40%. \n\nThe remainder of Sloan's common shares went to his estranged family, who had no voting rights and could have no further say in the company's day-to-day affairs. Alex now owned almost 90% of the company. \n\nIt had all worked out well but had taken a toll on Alex's family life as he'd fought the rival company and Sloan's tarnished legacy. And when it was all over, it sunk in that he'd lost a dear friend\u2014a victim of drug addiction.\n\n____________________\n\nJust over a year later in the spring of 2020, Alex arrived home early one evening and was surprised to find Maggie asleep on the sofa in the living room. She'd been away on a six-week project at yet another classified location, somewhere in northeast Asia."
    ],
    "authorname": "TiltKilt",
    "tags": [
        "romance",
        "nudism",
        "las vegas",
        "flashing",
        "erotic massage",
        "key west fantasy fest"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-triple-a-boinkathon-covenant"
}