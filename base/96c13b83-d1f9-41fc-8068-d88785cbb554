{
    "title": "The Turnaround Part 6",
    "pages": [
        "Author's Note: This story may not be reproduced in any form for profit without the written permission of the author. This story may be freely distributed with this notice attached, as long as no charge is made for it and it isn't changed in any way. If it is archived, it is done on the basis that the author will have unrestricted access to the archive.\n\nThis story is a work of fiction. None of the characters or events herein are based on real people, either living or dead. It was produced for the entertainment of ADULTS ONLY, and contains descriptions of explicit sex. If you are not an adult, or reading sex stories upsets you, do not read any further. By reading further you certify that you have accessed/requested access to this material willfully, and that you are an adult 21 years of age or older. You also certify that you are NOT a city, county, state, or federal law enforcement officer, official of the United States Postal Service, acting in the capacity of a representative of a telecommunications firm, and that this material does not offend the standards in your area, nor is it in violation of any of local, state, or federal law. \n\n* * * * *\n\nIn the last episode, Erin had watched from the doorway as her mother, Eva, was mercilessly fucked in the ass by their handsome, Black, big-dicked (Tyree) neighbor as her mother's beautiful friend, Bridget, joined them. \n\nChap. 1\n\nErin fell through the door, hearing her mother's scream as she descended rather clumsily to the carpeted floor. After witnessing Tyree plunder the depths of her mother's ass, Erin had fingered herself into a door bumping, floor-falling orgasm! Her mother stared at her, eyes big as saucers! \n\nBridget's smiling face was smothered in the custard cream-like cum of her mom's numerous orgasms. Her nipples were hard as rocks, too. Her pussy looked like it had taken on Lennox Lewis and had gotten its ass beat just like Tyson did! Her eyes were glazed with pleasure. Erin could understand why she was smiling. She had watched Tyree fuck Bridget (see Part 5) before sticking his dick in her mother's ass.\n\nTyree continued to kneel behind her mother, Eva, with his thick, long, veiny, asscream and cum-covered dick waving back and forth as he gave her a smoldering look of control and dominance. Erin knew that he could feel her gazing upon his amazing, pussy-pleasing tool. What she didn't know was that he had a perfect view of her exposed pussy, as her jeans and panties were down around her shins. Her pussy lips glistened in the glow of the candles. \n\n\"Erin! What the HELL are YOU doing?!\" Eva finally gasped.\n\n\"I-I-I... ME?! What are you doing?! I came up to... I mean I had come to... Me?! Mom! You're not even divorced yet and y-your up here with...with...!\" Erin screamed as she rose to her feet, pulled her panties and pants up her thighs and began backing towards the doorway. \n\n\"Go home! Now! I will talk with you when I COME HOME!\" Eva said sternly.\n\n\"Seems to me that you already CAME!\" Erin said as she glanced at Tyree's cum lathered dick and then into his eyes as she hastily exited the room and began sprinting down the hallway. \n\nTyree glanced at Bridget, who was still smiling slightly. She had seen the look on the young girl's face as she stared at Tyree's drenched dick. The look in her eyes was the SAME that had been in Bridget's eyes the first time she had viewed Tyree's dick. One of wonder, awe, and finally, longing. As Bridget continued to look and smile at Tyree, he nodded his head in assent to her keen observation. He knew, instinctually, that Erin had never laid eyes on a dick as large as his. What would she do?\n\nEva rolled off of the bed. Her asshole was STILL wide open from the fucking it had received minutes before. She could feel Tyree's large deposit of cum inside of her ass begin to leak and dribble out of her stretched asshole and down the crack of her ass and onto her inner thighs. As she reached for her panties on the carpeted floor, Bridget asked her to stand still and not move. \n\nBridget nimbly got off the bed and moved behind Eva's bent form and began kissing and licking Tyree's cum off of her thighs, ass, and finally her raw, tender ass. She dipped her tongue repeatedly into Eva's ass to scoop up Tyree's cum. Eva moaned and wiggled her ass as Bridget's tongue massaged the abused orifice. Finally, Bridget kissed her ass while simultaneously smacking her asscheek.\n\n\"Go home and be with your daughter. Be kind to her, Eva. She just witnessed something she could never have been prepared for,\" Bridget said reassuringly.\n\n\"I know, I know. I don't know what I'm going to say to her! She should not have been acting like a gott-damn voyeur! But at the same time, I know this shocked her. What am I going to do or say?\" Eva said.\n\n\"Be honest with her. Tell her the truth. You're a grown woman with needs. I satisfy them,\" Tyree said evenly.\n\nEva and Bridget glanced at each other. They both knew he spoke the truth.\n\n\"You're right, baby. I'll just be honest with her,\" Eva said as she smiled up at Tyree and finished getting her clothing back on.\n\n\"Thanks you two. I had a great time. I don't plan on missing much time with the two of you because of this crazy scene. I want you to know that. I love what I'm doing with you and I won't let anything stop what we have together,\" Eva said as she glanced back and forth between Tyree's dick and Bridget.\n\n\"Likewise,\" both Tyree and Bridget said. \n\nEva went to the bed and gave Bridget a deep kiss. She then wrapped her arms around Tyree's neck and kissed him as he grasped her asscheeks in his strong hands.\n\n\"Call me if you need me,\" Tyree said.\n\n\"Sure thing,\" Eva said as she disengaged with Tyree and headed for the open door of the bedroom.\n\n\"By the way, Bridget, you were right. Tyree's dick felt magnificent pounding me in the ass,\" Eva said over her shoulder as she turned and began walking down the hallway.\n\nChap. 2\n\nEva walked out of the side door of Tyree's house and into the driveway. She stepped off of the driveway and onto her lawn and walked towards the front door. Her mind was rifled with thoughts. Her daughter had just witnessed her getting ass-fucked! Eva felt guilty about Erin witnessing that scene. But, it had felt good and it had been the first time she had had a man in her ass. And what a man to have! Her ass continued to tingle and throb from having been invaded earlier.  \n\nShe approached the front door and turned the door handle. The livingroom was dark but there was a light on in the kitchen. Eva quietly walked through the livingroom and entered the kitchen. Erin was sitting in a kitchen chair drinking a soda. Her face was still flushed. She did not look up at Eva as she entered the kitchen. She sighed audibly, instead. \n\nEva walked towards the opposite end of the table, pulled out a chair, and sat down facing Erin. \n\n\"We have to talk,\" Eva said quietly.\n\n\"What is there to talk about mom? I just saw you fucking another man...and woman! Dad would have a stroke if he heard about this!\" Erin said heatedly as she looked at her mother, accusingly.\n\n\"I can't change what you saw. But I do doubt your father would have a stroke, considering...,\" Eva trailed off. She did not want to tell her daughter about the numerous occasions she had suffered through upon finding out about her husband's infidelities over the years. He had broken the vows of their marriage VERY early on. She had always kept so much hidden from Erin's knowledge. She did not want her to see her father in the same light as she did. Even though the silly, dishonest bastard deserved it.\n\n\"What? Considering what, mom?! Considering that less than fifteen minutes ago, you were getting buggered by a BLACK man?! How could you MOM?! And...and kissing and letting Bridget do those awful things to your body! What's happened to you?!\" said Erin as she continued staring at her mother.\n\n\"First off! Why the hell are you sneaking around in our neighbor's private residence? I don't recall hearing a door chime, hon! What you saw was three adults having adult fun...plain and simple. I'm enjoying my body for the first time in my life, Erin. I allowed my marriage to make me a stranger to my OWN needs...putting myself second. That's the old Eva, I'm the new Eva. All my life I've sacrificed my needs for the needs of others. My father, your father. Always second or last. Well, I've turned over a new leaf! Life is too damn short to be wasted on being taken for granted! Plus, I want to set a good example for you, Erin. I've always been the quiet suffering, demure housewife. That's never going to be me again, hon. I'm a woman with needs and so my dear are you,\" Eva said smoothly while looking directly into her daughter's eyes.\n\nErin's mouth stood open as her mother finished. Her brain flashed back to one year ago when her mother had barely had enough courage to second-guess her father. Now, she was a completely different woman!\n\n\"Mom...what the fu-...I mean...what's happ-...I don't know where to...,\" Erin said haltingly.\n\n\"Erin, I know that you are not a virgin,\" Eva said suddenly. \n\nErin's face immediately became crimson red. She could not hide the feeling of a 'deer caught in the headlights' that came over her. How long had her mother known?!\n\n\"Don't worry, honey. I'm not mad or disappointed. I'm kind of surprised that you didn't let me know. I could tell by the way you began to walk that you were sexually active. A mother always knows,\" Eva said as she smiled at Erin to reassure her that she was not upset in any way.\n\n\"So, can we cut the act? I know that you know what sex is and how it feels. Can we cut the 'I'm shocked that my mother would have sex with an attractive man' thing? I want us to be like we were before your father moved out,\" Eva said.\n\nA tear trickled from Erin's eye at the memory of how things had once been in their family. Mom was right. Ever since dad (Larry) had moved out, she had begun to emotionally distance and physically isolate herself from her mother. Her mother had been lonely. No wonder she succumbed to charms of their neighbor!\n\n\"I agree mom. I'm sorry for acting like a damn fool for the last few months. I don't know what's gotten into me. And I'm so sorry for embarrassing you like that tonight, Mom! I should have never climbed those st-,\" Erin began before Eva began to speak.\n\n\"Honey...honey. Don't worry about that. No one was embarrassed. We were all worried about you,\" Eva said as she stood up from her chair, wincing noticeably. \n\nErin smiled to herself as she realized her mother was groaning and grimacing because of the pounding her asshole had just taken from their mammoth-dicked neighbor. God, how had she taken that entire dick?!\n\nEva came over to Erin and wiped her fingers across her wet cheeks, wiping her tears away. She then hugged her daughter to her bosom.\n\n\"Erin, I want you to know that I am in no way in any harm. I am enjoying myself. Don't you think it's about time?\" Eva asked.\n\n\"Yeah, mom. You deserve to be happy. I don't have the right to judge you. I know you've made a lot of sacrifices for me,\" Erin said as she looked up at her mother.\n\n\"I love you, honey\" Eva said.\n\n\"I love you, too, mom,\" Erin said as she thought of Tyree's dick plowing through her mother's backside. Did all Black guys have dicks that big?\n\nChap. 3\n\nErin got up the next morning and showered. She had dreamed about the scene she had witnessed the previous evening. Her mind could think of nothing else! She had gone into her mother's room to borrow a hairpin when she saw that her mother was still sleeping. The cover had come down around her nude mother's sleeping form. Her mother slept on her stomach. Erin walked towards the bed to adjust the sheet back up around her mother's body. She noticed her mother's STILL gaping and red asshole. \"Damn, what a dick!\" Erin thought as she pulled the sheet up.\n\nIn school that day, Erin had on a pair of tight jeans that accentuated her round, heart-shaped ass to perfection. She had a low round ass, sorta like J-Lo's. She wore a loose fitting camisole-like blouse to top it off. It did nothing to hide the sway of her 36C's. As she walked out of class and down the stairs to her locker, she passed a group of young, Black students leaning on the railings of the steps. They were talking and cracking jokes as she passed by. As she swung her curvy thighs from side to side, she heard: \"Damn that white girl got body like a sista, yo!\" \n\nA chorus of approval was the response from the other boys. Erin continued on her way acting as if she had not heard the young man's remark. Secretly, she knew that she turned Black guys on. Black men had started complimenting her over the last year or so. At first, she didn't know what to make of it. She had been offended that 'THEY' were making comments about HER! But after hearing their repeated comments about her ass being like a Black woman's, she began to comprehend their meaning. Black women were voluptuous is a goddess-like way. No other nationality of women could match up to a thick-thighed, river-hipped sista. She knew this instinctually from having attended school with Blacks for four years. \n\nErin's body was bootylicious and she knew it! Exquisite, full breasts, which were, capped off with ever-erect pink nipples...flat stomach...full, rounded hips...nice, onion-like ass and supple yet thick thighs. She could give any stripper a run for their money. Her body exuded sexuality in a major way. The male teachers in school had a private ogling club dedicated to her sensuous face and body. Many of them flirted with the daydream that they would be able to get a piece of what had to be the tightest, unspoiled pussy in the hemisphere and get away with it. \n\nAs Erin sauntered over towards her locker, she wondered if Tyree found her body sexy. She had been sitting in class all morning long thinking about the sight of Tyree's dick plowing through her mother's stretched ass lips, again and again. She remembered the look on her mother's face when he hit bottomed out in her ass. She could still her mother's screams of passion as Tyree pounded her ass and Bridget ate her pussy from underneath. What that must have felt like, Erin thought to herself. Her pussy seemed to clinch everytime the image of them fucking came to her mind. \n\nErin closed her locker and turned around. Standing directly in front of her was a smiling Tyree! How long had he been standing there staring at her ass? Oh well, if he had been, she hoped he had gotten a good, long look! \"What the hell is happening to me?\" she thought before saying...\n\n\"Hello...Mr. Tyree,\" Erin said nervously. \n\n\"Please, you know we're neighbors. Call me Tyree, okay? How are you doing this afternoon?\" he asked.\n\n\"Fine. I was heading to class right now. Some speaker is coming to talk to the class or something. Hey, what are you doing here?\" Erin asked.\n\n\"I'm the speaker! Your principal is an old friend of mine and asked if I would come and speak to you guys about a couple of things,\" Tyree said as he continued to look into Erin's eyes. \n\n\"Oh...cool! Would you like to walk me to class, Tyree,\" Erin said dramatically as she smiled at him.\n\n\"Yeah, I would,\" Tyree said.\n\nAs they walked down the hallway, Tyree could help to notice the fullness of Erin's ass. Her breasts swayed to and fro as she carried her books in the crook of her arm. He could make out the indentations of her nipples through her halter-top. She was a senior. In fact, she was already eighteen years old and due to graduate in a month or two. She was ripe! He had to careful. No reason to bring a rape charge on a brotha. She was after all, the daughter of the woman he was fucking into submission every other night. He knew her pussy had to be twice as tight and wet as her mother's, though. He wondered what thoughts were going through her mind as she walked next to the man she had caught fucking her mother the night before!\n\nErin's pussy fluttered as she became very wet walking next to Tyree. He was giving off some very powerful vibes. He exuded a commanding presence and it was affecting Erin! Her nipples were protruding through her bra and top. She knew he noticed because she had caught him gazing at her nipples, at least twice. \n\nWhen they reached the classroom, Mr. Washington, her guidance counselor introduced Tyree as a friend of his who was there to speak with them about the importance of education. Mr. Washington also noticed the erect nipples of Erin. He took a quick seat behind his desk to hide his almost instantaneous erection. \"Chalk one up for the club,\" he thought happily. \n\nTyree walked in and introduced himself to the class. As he looked around, he remembered sitting in a high school classroom just like this one. Young, Black, and gifted...and confused. He remembered how it seemed that everyone he knew had post-high school plans except him. He had the ability to succeed in college, but his parent's funds were on empty. He had never taken a liking to the streets but what other choices were there? \n\nTyree started talking about his past. He had been through a lot and still had made it to college. Tyree stressed believing in yourself, discipline, and sacrifice as the cornerstones of effective goal attainment. He talked about racism and discrimination and how it had affected him and motivated him to find ways to limit its impact in your life. He talked about drugs and the toll it takes on one's life and family. He also talked about responsibility and relationships. After finishing to a rousing ovation from the class, Tyree had gone and shaken every student's hand. The bell rung signaling the end of class and of the school day. Tyree walked out of the classroom with Mr. Washington. They headed off towards the parking lot. \n\nChap. 4\n\nAs Erin came out of school, her mind was flooded with thoughts about Tyree. She had not known that he was so intelligent, well spoken, and worldly...yet very down to earth and honest. Watching him talk and gesture, Erin could not help think of the body that lie beneath his well-tailored suit. She had repeatedly found herself staring at the bulge of his pants as he talked. The size of his dick was imprinted on her eyes and mind from memory. She knew she had viewed something that was rare. As she turned the corner to begin her five block walk home, she heard a car beeping. She turned around and saw that it was Tyree, driving his black, 420 SEL Mercedes Benz.\n\n\"Need a ride?\" he asked as he slowed and guided his car along the curb.\n\n\"Yeah, why not?\" Erin replied as she hopped off the curb and opened the door to his car. She hoped that he didn't notice how nervous yet excited she was.  \n\nAs she closed the door, Tyree pulled away from the curb. They came to a stoplight. Erin could feel Tyree's gaze upon her shapely legs.\n\n\"I hope that you don't think ill of me after last night, Erin. You weren't supposed to see that,\" Tyree said.\n\n\"I already talked to my mom about it. It's cool. You guys are adults and I'm not,\" Erin said. \n\n\"Technically, from what your mother has told me, you are an adult. And as an adult, you should know and understand that sex is pleasurable when it's consensual. Nothing that happened last night was forced. Everyone got what they wanted and everyone was satisfied,\" Tyree said as he turned to look into Erin's eyes. He held her eyes for a moment. He wondered if she knew what he was getting at.\n\nErin saw the teasing look in Tyree's eyes. She recognized it because she was giving him the same look. She crossed her legs, sexily. Her pussy was starting to pulse slightly. It was a good thing she had on jeans or her wet spot would be visible to him. She could not remember her loins ever reacting this intensely. Her pussy had been wet for over an hour now! \n\nTyree pulled off from the light and noticed that every time his tires hit a rough spot in the road, Erin's bountiful titties bounced and warbled ever so lightly. He could plainly see her pencil eraser sized nipples through her blouse and bra. It was a sight to see! Plus, babygirl had thighs! The curve of her hips and legs was breathtaking. \"This young girl got body out of this world!\" he thought to himself.",
        "\"I enjoyed your speech, Mr...er...I mean Tyree,\" Erin said while smiling at her continued use of 'Mr.'\n\n\"I'm pleased. I like to give back whenever possible,\" said Tyree.\n\n\"I never would have thought that you went through what you went through. I never heard a Black man talk about his life like that before,\" said Erin.\n\n\"To be truthful, Erin. Black men's lives are often tragic lives. Look around you. How many successful Black people do you personally know or are familiar with?\" asked Tyree.\n\n\"None, besides you,\" answered Erin.\n\n\"Life is different for Black men. Don't misunderstand me. It's not an excuse. It's the truth. Our lives are different. Take for instance the prison situation. Damn near 7 out of 10 Black men are involved in the criminal just-us system. The story that is spread around is that Black men are lazy, shiftless no-good bums who would rather sit around and wait for a welfare check than find gainful employment. Or deal drugs as an alternative to hard work. But the truth is, Black men have been historically and systematically shut out of the main avenues of economics that liberate people to make decisions for themselves. How the hell our Black people supposed to get ahead when it seems like everything is controlled, influenced, or in debt to white people? And as we all can surmise, they have never had OUR best interest at heart. Fuck a liberal!\" Tyree said as he looked at Erin. \n\nShe had no idea what the fuck he was talking about! She was eighteen years old and had had no real experience of the world around her, he realized. Her mother and father had kept her sheltered from the harsh realities of the world. She existed in a world where there were no problems. He realized he was going to have to tone his diatribe down a little so as not to scare her. He knew she had images of his dick in her mind...even as they spoke. \n\n\"Have you ever dated outside of your race?\" Tyree asked suddenly as they pulled onto their block.\n\n\"No! I mean, no,\" Erin said quickly while averting her eyes.\n\n\"Why?\" asked Tyree.\n\n\"Be-...Because I never found a guy outside of my race that I found attractive,\" Erin answered wisely.\n\n\"Do you find me attractive?\" Tyree asked.\n\n\"Y-Y-Yes,\" answered Erin, demurely.\n\n\"Would you consider dating me, if I was available?\" Tyree asked already sensing her answer. \n\n\"N-No. I don't think that would be wise of me...I uh-...\" Erin finished rather shakily.\n\n\"Why?\" Tyree asked as he pulled his car onto his driveway.\n\n\"I-I don't think my father would approve, actually,\" Erin said quickly while glancing out of the window towards her house.\n\n\"Why wouldn't your father approve if I made you happy?\" Tyree asked, testing/teasing her. He could not help but to think that she resembled the woman who played 'Wonder Woman' (Linda something...) on television during the days of his youth. Same black hair...same electric blue eyes...same eye-catching titties...but Erin had hips and ass!\n\n\"Be-because he just wouldn't. Trust me. He doesn't like B-...,\" Erin trailed off.\n\n\"Blacks? He doesn't like Blacks? Is that what you were trying to say?\" asked Tyree.\n\nErin lowered her head as Tyree's car came to a stop. She had no idea how to answer the attractive, Black man sitting next to her. Her racist father's voice rang in her head ,but his voice seemed to be getting weaker. How could she deny to herself that she wanted Tyree? She did not want to fuck up her chances of getting to know him better/fuck him by spewing forth all that her father had imparted to her. She had taken her father's word as any child would do. But life was beginning to show her that he may have been wrong...at least this once. So, she kept her mouth shut.\n\nTyree turned the key in the ignition to shut the car down. He looked over at the perplexed look on Erin's face. He knew what was going through her mind. He knew what her father had taught her because her mother, Eva, had told him and Bridget many stories about ole' Larry. Larry had been a racist when she had married him, and had never changed his ways. His fear of Black people had been transmitted to his daughter. He had taught their daughter many hateful and unfair beliefs. Eva had accepted Larry's explanation at the time that he was letting her know what 'they' were like, though Eva had never heard Larry say that HE had had contact with ANY Blacks during his lifetime. His views were nothing but racial propaganda meant to keep mental midgets in their place. He was amazed at the fact that so many people were given their beliefs on certain issues without ever experiencing truth for themselves. Being led like sheep to the slaughter... too lazy to think for themselves...experience for themselves.\n\n\"Look Erin. I'm not going to tell you what you were taught about Blacks is right or wrong. Look around you. You know the difference between right and wrong. You're eighteen years old, now. You're responsible for your own beliefs. It's up to you to believe what your experience has shown you...not anyone else to tell it to you. You're a beautiful young woman who has a whole lifetime of experiences ahead of you. Don't cheat yourself under the guise of tradition,\" Tyree said as he stared straight ahead wondering how these self-defeating beliefs could consciously be told to a young child under the guise of 'protecting' them.\n\n\"I'll see you later, Tyree,\" said Erin as she got out of the car, looked back at Tyree, closed the door and started swaying her hips across her lawn toward the front door of her house. She secretly hoped that Tyree was watching her. \n\n\"Fuck! That young girl got ass!\" Tyree thought to himself as he exited his car and went into his home.\n\nChap. 5\n\nErin walked into her home and was happy that the air conditioner had been turned on. She was perspiring lightly and her pussy was absolutely drenched! She began walking up the spiral staircase to her room. She noticed that her nipples were scratching the fabric of her bra as her breasts bounced and swayed with her movement. As she walked past her parents (now her mother's) bedroom, she noticed her mother lying in bed watching television. Erin parted the door.\n\n\"Hi, mom. Are you feeling okay?\" Erin asked with slight concern in her voice.\n\n\"Hi, baby. I'm fine, just resting,\" Eva replied. She had been lying in bed most of the day taking lemon and salt baths. Her asshole still gaped slightly and was sore from the pounding she had taken the night before. It didn't hurt though in a pain sense, but throbbed erotically throughout the day (reminding her of how it felt to have her ass stuffed full with hot, Black dick). She had been contemplating visiting Tyree this evening, but had not made up her mind, as of yet. She figured she probably needed another night of soaking before she saw him again. She knew he would not ask to fuck her ass because he knew she was hooked and would ask it of him, anyway. She had never experienced orgasms as intense as the ones that rocked her mind, body, and spirit last night!\n\n\"Oh, you look tired. Anyway, I'm going to head to the shower. Are you cooking anything?\" Erin asked as she stood beside her mother's bed.\n\n\"Uh, I was thinking of making a couple of steaks. Maybe some corn on the cob and a baked potato. How does that sound?\" Eva asked as she turned to look at the flushed face of her daughter. Her nipples were very noticeable. Must have the air conditioner up too high, thought Eva.\n\n\"Sounds good to me! Let me go and shower and I'll be down in a little while,\" Erin said as she bent forward and kissed her mother on the cheek and then straightened up, turned around and left the room.\n\n\"Okay, baby,\" Eva said as the door swung shut. \n\nEva got up out of the bed and walked to the bathroom to find her robe. She noticed that her backside STILL felt very loose and worn. She reckoned that had better get used to feeling like this because she definitely was hooked on getting assfucked!\n\nChap. 6\n\nAs Erin lathered her Christy Canyon-like breasts with soap, she reminisced about her earlier encounter with her neighbor, Tyree.  He had piqued her curiosity with his questions and his demeanor. Her father may have been misled (she was STILL not prepared to call her father incorrect or wrong) about his beliefs concerning Blacks. When she was young, she had believed every word that had come out of her father's mouth without doubt. As she got older, she saw that what her father SAID and what he actually DID usually tended to be a different. He had told that he had always been faithful to his wife and her mother, but as she found out at the age of 12, that was a LIE. He had promised to give up drinking...another lie. When it came to the subject of Blacks and equality, he often would begin acting very irrational and opinionated. There were no 'buts' when it came to Blacks. They were what they were. And according to him, they were lazy, deceptive, sneaky, dumb (which doesn't making ANY fucking sense because you have to have some intelligence to be deceptive and sneaky), uncivilized, thieves who wanted to rape and defile white womanhood (another glaring inconsistency...as we all know, masters raped their slaves on the regular and everyone knows that. But that FACT doesn't jibe with propaganda).\n\nErin remembered the lengthy bulge that ran on the inside of his thighs under his slacks. Black or white, the man had a big dick! She had seen it last night as he ransacked her mother's ass. Sex had been on her mind for approximately 24 hours. Last night, Tyree had shocked her physical senses...today, he had shaken her belief system. Up could be down and left maybe was right. She was beginning to see that there was no simple Black and white world...there were gray areas she had not considered. What else could have father been mistaken about?\n\nEva was in the kitchen looking for her roaster and could not find it. It was then that she remembered she had left it at Tyree's house last week. She had volunteered to cook dinner for both Tyree and Bridget and had taken it and left it afterwards. Tyree had fucked them good that night, she remembered...smiling to herself. As Erin entered the kitchen, Eva had an idea.\n\n\"Erin, honey, I left my roaster over at Tyree's. Could you be a doll and fetch it for me?\" Eva asked. She figured it was time for her daughter to realize that she was not going to change her relationship with their neighbor. She fully expected Erin to say no, but...\n\n\"Okay, Mom. Let me go and put a sweat suit on and I'll be on my way,\" said Erin to a surprised Eva. It wouldn't hurt to see him one more time today considering the conversation they had had earlier in his car.\n\n\"Thanks, honey,\" said Eva, unaware that her daughter's pussy had begun to spring forth in wetness at the thought of being near Tyree for the second time today. \n\nChap. 7\n\nAs Erin took off her robe, she noticed the flushed appearance of her normally pale skin. She was excited and she hadn't even left the house yet. She noticed that her nipples were sensitive and erect. She looked at her genital area and noticed the wetness of her large pussylips. She ran her hand down to her pussy and snuck a finger inside. She was drenched! \"What's gotten into me?!\" she mused while smiling slightly...already knowing the answer.\n\n\"More like what I want to have in me,\" she said out loud as she wiped her pussy with a towel and put on her g-string panties. Erin sprayed her neck with perfume. She then put her loose-fitting sweat suit on and headed out of her room, down the stairs and out the front door. She headed out of her front door, smiling.\n\nAs she headed across the grass, she noticed that it had gotten a slightly darker outside. She also noticed that there were no rooms lit up on the first floor of Tyree's house. She saw a light on in what must have been his bedroom. She approached the side door that led into his kitchen and knocked. She knocked again and waited. She decided to try the door handle. It was unlocked, as it was the previous night. Erin began to push the door open and then she remembered what had occurred when she walked through this door last night. She stepped in.\n\nAll was quiet within the house except some light jazz been played upstairs. Erin walked through the kitchen and into the foyer. She heard the music more clearly, now. She looked up the long staircase before she placed her foot on the first step. \"What the hell am I doing?\" she thought as her feet kept her moving up the stairs. \n\nErin approached the landing and headed right towards the music. The hallway was dark. Once again, she could smell incense and candles. As she walked towards the end of the hall, she came to the end. She looked around the corner and saw candlelight flowing out of a room on the left. She approached the door slowly yet steadily. \n\nErin heard the moans. She slowed her footsteps but did not stop her approach to the open door way. As she came closer to the doorway, she got her body as close to the wall as possible so that she could look into the room without being seen. Erin lifted her face off the wall and peered into the room. What she saw caused her breath to catch in her throat!\n\nChap. 8\n\nBridget and Tyree were situated on a loveseat (that sat in front of the large bed). Tyree was sitting on the couch, naked, with his large, muscular legs spread. A nude Bridget was kneeling before him on the couch licking his thick, Black dick while she held it up to her mouth with her small hands. Their skin colors contrasted sharply. Bridget...alabaster white. Tyree...dark, brown chocolate. \n\nErin watched as Bridget leaned forward and snaked her tongue out and lapped at Tyree's ball bag lightly. She gently and wetly licked up his shaft, and her tongue circled his helmet, slowly. She laboriously and wetly sunk the large head of his massive dick into her mouth. Erin could hear her moan, deeply, as her mouth was filled with Big dick. Tyree moaned with her. Her lips slid further down the shaft, as she was able to take half of his cock inside. \n\nErin's nipples were rock hard and she could hear her breathing in her ears. Her face felt very hot and her pussy was pulsing, rhythmically. She could see Bridget's spittle running out of her mouth and dripping down the remaining length of Tyree's dick. It seemed to her that Bridget was paying homage to Tyree's large shaft. She could hear Bridget moaning incessantly. \n\nBridget's small hands worked methodically up and down the thick, wet shaft. Her grip was loose yet firm. Erin could also see the lips of Bridget's pussy shining in the candlelight. In fact, her entire ass and pussy region glistened. What Erin did not know was that Bridget had been thinking about stuffing her mouth with Tyree's dick since this morning at work when he had come up behind her and said some sexy comments concerning her dick-licking and cum-swallowing skills. Her pussy had throbbed all day as she thought of the never-ending pleasure she got from fucking her Black boss. The forceful way he liked to fuck had her hooked! No other man made her feel the way he did while in bed! And no other man could give her multiple orgasms each and every time they fucked. She knew good dick when she fucked it. Her mother had not raised a fool!\n\nAs Erin continued to watch, Tyree began to moan more frequently. Bridget moaned continually as she jacked his dick with one hand, rather firmly, while licking ferociously around the bulky tip of his dick. She snuck her other hand between her legs and began to diddle her clitoris, tenaciously. Erin could hear her the 'squish' of Bridget's soaking wet pussy against her fingers as she continued to lick and occasionally suck the head of Tyree's dick into her mouth. She seems so well coordinated, thought Erin.\n\nAs Tyree felt the familiar heat of his nutt racing from its hidden position, behind and above the balls, his eyes noticed a figure in the doorway. Female, definitely. But who? As his eyes traversed the form, he recognized who it was! Babygirl likes to watch, does she? He thought as he relaxed and experienced the intensity of his orgasm and the developing situation directly in front of him.\n\n\"MMmmmmPPPHHHH...,\" went Bridget's cum-filled mouth around Tyree's spurting dick as spurt after thick spurt hosed her tonsils again and again. She heard Tyree say, \"save some of that,\" Bridget knew that he liked her to open her mouth and show him his cum before swallowing it. For some strange reason, Bridget had come to love doing it for him. In her mind, she knew this represented another act that represented her status as his number one bitch. \n\n\"Are you going to watch again or join in?\" she heard him say as her stretched lips slipped off of his dick. \n\nErin was taken aback! She had unconsciously moved her left hand to her covered pussy and was slyly kneading the side of her breast with her right hand. She was caught! Or was she?\n\nErin slowly walked into the room revealing herself for the first time to Bridget, who continued kneeling on the floor, still holding Tyree's shiny shaft in her small hand...mouth STILL filled with cum. His cum was beginning to dribble out of the sides of her mouth and down onto her chin. Bridget noticed the tips of Erin's excited breasts through her rather thick sweat shirt. She also noticed the flushed appearance of her face and neck. \n\nErin stopped her steps approximately 10 feet from where Tyree and Bridget were. Tyree continued to look into Erin's eyes, finding the answer to his unasked question. Erin continued to look at the cum-streaked lips of Bridget. Tyree looked at Bridget and nodded, slightly...and then looked at Erin. Bridget rose from her kneeling position and began walking towards the wide-eyed and shaking Erin. Erin's eyes darted to the floor, to the wall, to the ceiling...everywhere except into Bridget's eyes, who was now standing before her. \n\nBridget reached out and moved a wisp of hair from Erin's face and then bent towards her lips. Bridget kept her hand on the side of Erin's face as their lips touched for the first time. At first, Erin lips remained closed and stiff. As Bridget continued stroking the side of her face, her lips began to part. Erin moaned as she felt the first touch of Bridget's eager tongue on her lips. As they got more into the kiss, Tyree's cum began to be transferred from Bridget's worn out mouth to Erin's tender lips. At first, Erin recoiled but Bridget held her tight. After a few moments of tasting his tangy cum, Erin bent forward and searched for more inside of Bridget's mouth. \n\n\"Mmmm...,\" Erin moaned as Bridget forced a dollop of Tyree's cum into her mouth. Some of it leaked out of her mouth and gathered on her chin like a stalactite.  \n\nTyree sat on the couch and slowly fisted his large dick, which was still erect.\n\nAs the women continued their sloppy kiss, Bridget reached down and took hold of the bottom of Erin's sweatshirt and began pulling it upwards exposing her taut stomach muscles. Erin assisted Bridget by lifting her arms and raising her head. As her shirt came off of her arms, Tyree and Bridget both noticed the bountiful pair of breasts that were trapped by the sheer bra she wore. Her nipples were clearly visible. \n\nTyree continued to fist his dick and view the vision of loveliness that was slowly being revealed directly in front of him. Erin was even more stacked than he had previously thought! Her breasts were tremendous and bounced heavily with her every movement. \n\n\"Do you want to suck his dick, Erin?\" Bridget whispered into her ear as she undid the drawstring on the front of her sweatpants.\n\nErin said nothing as she stared at Tyree's massive dick over Bridget's shoulder. She had heard the question, vaguely. She was speechless at the speed at which things were happening! She had come over to retrieve a roaster and now she was being undressed and was preparing to experience the biggest dick she had ever seen in her young life... and the dick belonged to a Black man! ",
        "Bridget pulled down Erin's sweatpants after she finished untying them. Erin wore a matching sheer g-string that showed her dark-colored muff. Bridget noticed the large wet spot on her panties as she bent down and helped Erin lift her legs out of the pants. She also was able to make out the indentations of her pussy lips through the sheer fabric. Bridget wondered if Erin had ever had her pussy eaten by another woman. Maybe her and Tyree could BOTH turn her young, sexy ass out! \n\nAfter stepping out of her pants, Erin was guided by Bridget's hands on her shoulders to stand directly in front of the reclining Tyree. Tyree looked up at Erin as Bridget deftly unsnapped her bra from behind and slowly released her beautiful, hefty twin orbs. Her nipples were bright pink and at least a half-inch in length. Her nipples resembled thick eraser tips. After discarding her bra to the carpeted floor, Bridget reached around Erin and softly cupped both of Erin's bountiful titties. \n\nTyree watched the expression on Erin's face as she stood in front of him while being groped from behind by Bridget. The look was one of LUST and SURRENDER. She continued to stare at his big dick as he stroked it. Her breath was ragged. Her eyes smoldered with ANTICIPATION, FEAR AND DESIRE. He watched as she stuck out her small, wet tongue and licked her full lips, unconsciously. \n\nBridget began kissing and licking Erin on her earlobe, neck, shoulder and back as she sunk to the floor and began pulling Erin's panties down and off her thighs. She noticed the wetness of Erin's cunt as she pulled the sheer material away from her wet and matted pussy. Bridget was intrigued at the amount of cunt cream that covered Erin's pussy lips and surrounding pubic hair. It was literally dripping off of her lips!\n\nChap. 9\n\nFinally, Erin stood before Tyree, naked. Tyree could not EVER remember being face to face with a woman who possessed such a sensational body! Smooth, unblemished skin. Small shoulders. Large, firm, perfectly formed breasts, which were accentuated by her small, yet toned, and trim waistline and stomach. Mouthwatering nipples that begged to be licked and softly bitten. Nice, full hips that tapered into long yet beautifully developed legs and calves. And she had the nerve to have small, manicured feet!\n\n\"Do you want to suck HIS DICK, Erin?\" Bridget asked again, louder this time so that Tyree could hear her. She was back to cupping and squeezing Erin's breasts and nipples from behind.\n\nTyree watched the expression on Erin's face as she answered. Before she spoke, he noticed, she once again unconsciously licked her lips.\n\n\"Y-Yes!\" Erin hissed as she nodded her head up and down. \n\n\"Come on then,\" said Bridget as she nudged Erin forward by placing her hands on her shoulders. \n\nTyree started stroking his dick a little swifter as Erin approached him. She took a few steps and seconds later stood directly between his spread legs. Her face was flushed and her breathing quickened as she stared at the colossal piece of meat he was fondling. \n\n\"You like what you see, Erin?\" asked Bridget as she reached around Erin and took both of her extremely hardened nipples and begin to twist and pull them away from her body.\n\n\"Yesss...\" Erin hissed, as her nipples seemed to be stretching towards the three-quarter inch mark. She had never seen her nipples get this long in all her life. Her pussy juices were starting to drip-drip down her inner thighs. She stood before Tyree quaking with desire as Bridget manipulated her nips from behind!\n\n\"He's going to taste so goooood in your mouth, baby! Have you ever had a dick that big in your mouth before?\" asked Bridget, sexily. She guided her right hand from Erin's breast down the center of her body and began to rub her fingers through Erin's pubic hair...getting closer and closer to her hot, glistening pussy.\n\n\"Nooo! Never! Never THAT big! Ahhhhh...\" Erin breathed as she felt Bridget's busy fingers glide teasingly across her swollen and wet pussy lips. \n\n\"Get on your knees,\" Tyree said smoothly as he stopped stroking his extremely hard dick. It SLAPPED against his washboard abs, the head well above his navel. \n\nErin noticed the thick ropy veins that crisscrossed across the underside of his colossal dick as she slowly slunk to the carpeted floor in front of him. She also noticed the large amount of precum leaking out of the sizable hole on the tip of his dick. She then knee-crawled towards him and sat up, resting her hard-nipped breasts on his thighs.\n\nBridget was still behind her rubbing her back, shoulders, and finally her neck. Tyree took hold of his dick and pulled it away from his reclining body and towards Erin's lips. Bridget (though she didn't have to) guided Erin's head, with her hand on her neck, towards the shiny, Black dick that was beckoning her.\n\nErin bent forward and stuck out her small wet tongue. He stared at her as she stared at his dick. She reached out her hand and latched onto his dick. She immediately realized that she COULD NOT get her hand all the way around his dick. His dick looked much bigger than when she saw it from the doorway...and it was soooo fucking hot in her hand. She could only imagine what his thick, long dick would feel like inside of her. She clenched her pussy muscles in anticipation.\n\nErin bent forward allowing her tongue to glide along the mushroom shaped tip of Tyree's immense dick. She circled the tip 4-5 times, slowly, before descending down the underside of his dick, leaving a shiny coat of spittle in her wake. His dick was hard and warm on the tip of her tongue. There was no give in his dick. It was unyielding. It was the hardest dick she had ever come face to face with. Bridget rubbed her back and shoulders as Erin dipped her head lower towards his large tennis-ball sized nutts. \n\nThe first thing Erin noticed was the color and size of Tyree's balls. They were dark brown and very large. They hung over the edge of the couch like two huge berries hanging from the stalk of a very bulky tree limb. Erin's tongue brushed lightly and teasingly along the skin that covered Tyree's balls. He moaned at the warm, ticklish feeling she was giving him. Erin traced her tongue along the contours of his balls, slowly and wetly. Her previous two boyfriends had constantly complimented her on her dick-licking skills. They had told her that it seemed like her mouth was always wet and ready for dick. Erin loved to tease the few men she had allowed into her mouth with her tongue skills. She licked dick like it was a lollipop and she was trying to get to the center of it! \n\nErin looked up at Tyree while licking her lips. She made up her mind at that moment that she was going to show him how good she could be. Erin pulled away from his mammoth balls and languidly slid her tongue upwards along the beefy length of his dick until she reached the ridge of his dick. She began leisurely butterflying her tongue around his large helmet leaving tiny trails of spittle on his cock.\n\nErin sat up slightly, positioning her pendulous breasts around Tyree's balls...hugging them. Her nipples dug into his flesh, arousing him further. She brought her hand to his balls and began to softly scratch at the skin as she continued to tease and tongue his helmet. Tyree could hear and feel her moaning around his wetly embedded dick as she went about her task with gusto. He had thought she was going to have to be coaxed into sucking his dick the way he liked it, but she was doing fine on her own. She didn't seem to mind that Bridget was in the room with them. He wondered if she had ever been with a woman before? She was after all, eighteen years old.\n\nAs Erin continued to slobber and slurp on the tip of his sledgehammer-like dick, Tyree's gaze found Bridget's eyes. He gestured towards Erin's exposed thighs and smiled. Bridget licked her lips in silent agreement. She began to stroke Erin's asscheeks in a circular manner bringing forth moans from the young girl's mouth. Erin began to sway her hips to and fro. \n\n\"Erin...honey...Bridget is going to get you ready for my dick by getting you a little wetter than I know you already are. Is that going to be okay with you?\" Tyree asked as he looked at the top of her head.\n\n\"Yesssss...,\" Erin breathed before attempting to fit her pouty lips around the head of his cock. She could barely fit the helmet and 1-2 inches of his dick. She swirled her tongue around madly against the manmeat she could manage to get into her mouth. She didn't give a shit WHAT Bridget did as long as she didn't try to take this dick away from her!\n\nBridget, meanwhile, had positioned herself on her back underneath Erin's slightly spread thighs. She reached up between the \"V\" of Erin's thighs and pushed outwardly so that Erin would move her thighs apart. She obeyed immediately, allowing Bridget to scoot her head between her thighs and under her drooling pussy. \n\n\"Mmmmmpphhhh...,\" Erin moaned around Tyree's thick, Black dick as she felt Bridget delicately spread her blood-engorged pussy lips with her dainty fingers. Erin had never been with a woman before. She had fingered a girlfriend of hers a few years back but that had been the extent of her woman-to-woman contact. Her inhibitions were lowered because of the scene she had witnessed the previous evening. She had never seen her mother look more pleased than when Tyree was pummeling the depths of her pussy and ass. \n\nSuddenly, Bridget snuck her tongue out from between her lips and licked the length of Erin's wet and matted slit. Erin moaned long and deep. Tyree reached out and grabbed the back of Erin's head and began to force more of her mouth down over his cock. Erin looked up at him but had no intention of objecting. She wanted to please him and his big dick. She had never had engaged in oral sex with a woman before. The soft, fluttery feel of Bridget's tongue was a big difference from her two previous boyfriends clumsy attempts at pleasing her orally. Bridget definitely knew what she was doing and what she was doing was driving Erin crazy!\n\n\"How does her tongue feel, baby?\" Tyree asked as Erin reached up and began to stroke the thick stalk of his dick in time with the circular motion of her tongue on the tip of his dick.\n\n\"G-Gooooood! So GOOD!\" Erin breathed as she came up for air before quickly descending down towards his spittle-covered dick. Bridget was now circling her clitoris slowly and steadily. She had Erin's asscheeks in her hands and she massaged them, firmly. Erin could feel her pussy heating up, clenching and unclenching, nipples feeling like they were going to swell up and fall off of her body, and that weird, twisting feeling in her stomach preparing her body for an intense release. \n\nErin began to establish an erotic rhythm to her dicksucking as Bridget continued doing what she apparently did best...eat pussy. Erin tightened her grip on Tyree's dick and began to stroke him methodically as she began to wetly and firmly tongue the first two-three inches of Tyree's dick with her overactive tongue. Precum was leaking out of his dick in a continuous flow. Her tongue was awash with it. \n\nChap. 10\n\nBridget was overwhelmed by the taste of Erin. She was salty, sweet, soooo liquid! She ran her tongue up and down her slit, probing inward, tasting her juices, again and again. Erin subtly moved her thighs wider around Bridget's head so that she could dig deeper into her pussy. Bridget smiled at the movement. She had a hot one on her hands! She couldn't wait to see how her young, tight pussy would react to Tyree's massive dick! \n\nErin swiveled and writhed slowly on Bridget's mouth, moaning all the while around Tyree's dick as she continued to slobber all over the top of it. Slowly and steadily, Bridget began to fuck Erin with her tongue. She slid it in and out of her lips, moving up to tease her swollen clit. Erin cried out when she did this, so Eva began darting her tongue on her clit again and again until she began to relax even more. Bridget wanted to stick a finger inside of her and get her off, quickly, but she remembered that Tyree preferred if he was the first to enter their pussies. He had explained that he needed all the extra pussy juice he could handle to fit his dick comfortably inside of a woman. No use wasting it, he had convinced them. Plus, to have his dick be the first and only thing filling you all night long wasn't such a bad trade-off. So she resisted and began licking around her outer pussy lips. Her tongue wanted more, though. She traced every fold, every crease, finally circling her clit. \n\n\"MMmmmPPHHHHhhhh...,\" Erin moaned heatedly around Tyree's dick as he continued to push her head back and forth across the top one-fourth of his dick. Meanwhile, Bridget's tongue gently pushed the covering hood of her clitoris backwards to reveal the small, hard bud of her clitoris. Erin cried out again as her legs trembled and shuddered above Bridget's prone body. \n\nErin was aware of her legs shaking as the wonderful sensations of another woman's tongue and mouth raced through her body. Tyree began moaning as the pressure began building in his balls, once again. \n\n\"Suck my dick like you mean it, bitch!\" Tyree said suddenly. All of a sudden, the room was quiet. Eva had told both Tyree and Bridget that her daughter was a member of many Pro-women's groups and that she found 'that' type of vulgar language inexcusable. Erin stopped licking and nibbling momentarily as she looked up at Tyree's eyes. She saw no look of apology on his face. Instead, she saw a look of daring in his eyes. She felt that he was daring her to speak out against him and his language. Instead, she lowered her eyes and then her mouth back towards the tip of his dick. She could hear the liquidy, sloshing sounds coming from her pussy as Bridget ate her out, expertly. \n\n\"Okay, Tyree,\" was all Erin said before quickly returning her needy tongue and mouth to his mammoth erection. He had made her meek in his presence and she was beginning to think she was falling in love with him. She began sucking his dick with gusto as her own orgasm raced forth. \n\nTyree began forcing her mouth down onto his cock as he thrust forward. Her mouth was like a small, wet pussy and he couldn't hold back his orgasm any longer. He could tell she was on the brink of cumming and he wanted to wait for her to cum first.\n\n\"Let me know by squeezing my dick when you are getting ready to cum, you young pretty motherfucker! I want to fill your mouth with my seed while you're cumming in Bridget's mouth,\" Tyree said as he continued thrusting into Erin's moaning mouth.\n\nSlowly, and gently, Bridget sucked Erin's swollen clit between her lips, in and out, in and out. Her lips felt heavenly on the soft folds of Erin's cunt. Erin began calling her name even though her mouth was filled with thick dick. \n\nAs her pussy began to pulse madly from Bridget's ministrations, Tyree began to bellow. His dick hardened and widened inside of her mouth as she felt the tale-tale contractions of his dick muscle in her tiny, stroking hand. As Bridget pursed her lips and took Erin's elongated clit between her lips and began to suck, Erin cried out and orgasmed strongly sending several pulsed of spray out of her pussy and onto Bridget's nose and cheeks. \n\n\"AAAAAHHHHHH...OOOHHHHHHH!\" Erin screamed. \n\nShe squeezed Tyree's dick as ordered. Tiny rivulets of cum dripped down Bridget's upturned and still licking face. Bridget's face was SOAKED with cum and pussy juice. Erin had never cum so hard in her life! Her head spun from the intensity of it! \n\nAt the same time, Tyree let loose with a thundering explosion of male juice into the confines of Erin's small, wet mouth. Erin breathed through her nose as Tyree shot thick shot after thick shot of cum into her mouth. She swallowed on reflex his first couple of spurts. She had never swallowed a man's cum before. She had tasted it before, though. Tyree tasted strong, manly, pungent...yet sweet...almost like peaches. \n\nTyree continued to spurt as Erin sucked very strongly on the head of his dick. Her mouth was filled to overflow as she experienced the aftershocks of her orgasm as Bridget continued to gently lick and massage her pussy lips and clit. Her thighs would not stop shaking, which she found funny. \n\n\"I want you to kiss Bridget and share your prize,\" Tyree said authoritavely. Erin didn't miss a beat as she backed off of his dick and crawled backwards over Bridget's prone body before bringing her lips down to hers. They kissed and Tyree watched as they allowed his cum to be shared by the both of them before they licked it up and swallowed all of it. \n\nChap. 11\n\n\"I think you're ready to be fucked, Erin,\" Bridget whispered into Erin's ear as she licked her neck, languidly. \n\n\"I think so, too,\" Erin breathed in response as she looked back up towards the couch and saw Tyree's long legs and thick dick sticking straight up and out. She wondered if his dick ever got completely flaccid. It sure didn't seem like it! \n\nTyree stood up and looked down at Erin and Bridget. \"Get on the bed,\" he said as he gestured towards the king sized bed behind him. \n\n\"Okay,\" Erin said as she disengaged herself from Bridget and stood up. She started walking towards the bed as if she was in a trance. Her eyes focused on the swaying length of Tyree's dick as he stood next to the bed. She could still taste him on her taste buds. Her stomach fluttered as she sat down on the bed and then scooted to the middle of the bed and reclined onto her back. \n\nTyree got onto the bed as did Bridget, whose face was still shining from Erin's secretions. She looked NASTY and the sight of her turned Erin on. She had never seen her cum on another person's face. Bridget's cum-streaked face represented Erin's total submission and enjoyment of this experience. Tyree and Bridget were taking her places she had never imagined! \n\n\"Spread your legs,\" Bridget said from behind her. She was sitting against the headboard looking down at the prone Erin. Tyree placed himself between her open thighs and let his dick graze against her thigh flesh.\n\n\"Mmmmm...,\" Erin moaned at the contact of his warm spear against her cool flesh. She swore she could feel his heartbeat through the skin of his dick. Her stomach trembled as she watched his massive dick waving back and forth between her thighs. \n\n\"How am I going to take all of this man's enormous dick?\" thought Erin as Bridget began running her fingers through her scalp to help calm her. She then bent forward so that she was next to Erin's ear and said: \"You're going to be okay, honey. It looks too big but just lie back and relax. You'd be amazed at how your pussy can stretch around a big dick. Tyree's going to have you screaming his name in no time!\"\n\nIt was as if Bridget had read her mind. Erin immediately began to force herself to calm down. \"But goddamn his dick is BIG!\" she kept telling herself.\n\nBridget reached across and over Erin and began to palm her tit and play with the nipple. This bought another moan from Erin's parted lips. She stared at Tyree as he in turn gazed at the pink furrow between her thighs. Her pussy lips were wet and swollen with excitement and had flowered open resembling a beautiful flower in bloom. Her opening looked quite small in comparison to the towering dick before it. The lips were thin and very wet with her secretions. The trimmed hair around her pussy was matted with her cum. Girl juice covered her inner thighs and the crack of her ass. Brownish lips framed the deep pinkish red of her opening. At the top, her pink clit peeped out, paler than her pussy flesh. Erin unconsciously opened her thighs further as Tyree slowly moved into position. \n\n\"Look at his dick! Look how long it is and how thick he is! Your pussy is going to thank you when this is over, girl! You're getting ready to get your first real dick, Erin,\" Bridget breathed into her ear as she continued to tweak and twist her meaty nipples between her fingers. ",
        "\"Ugh...yes! He is very big and very thick! I'm so wet, Bridget! That's the biggest d-dick I've ever seen in my life! Stay with me! Don't leave me, please!\" Erin cried as Tyree took her calves in either hand and spread her thighs further, before aiming his precum-dripping dick towards her saturated center. \n\nBridget released Erin's breast and guided her hand towards Erin's pussy. Her hand splayed open as she ran her fingers through Erin's sparse pubic hair. She took two fingers and spread the wet outer lips of Erin's pussy. Erin hissed at the feel of her fingers on her sex. Her touch was affectionate yet erotic.   \n\n\"Your pussy is so lovely, Erin. So wet, so beautiful,\" Tyree said as he admired her eighteen-year-old pussy with cream dripping from between its swollen lips. She was going to be spoiled after taking his dick inside of her body. No other man would be able to pull her after tonight. He guided his beefy dick to her drenched pussy lips even as she moaned from Bridget rolling her clit between her wet and sticky fingers.\n\nChap. 12\n\nTyree moved his hips forward and pressed the fat head of his cock against Erin's swollen, moist, pink pussy lips, and began to run it up and down her entire slit. He could feel her heat on the tip of his dick. He could also feel Bridget's fingers moving in circular manner around the flesh of Erin's pussy lips.\n\n\"Uhhhh...Mmmmm...,\" Erin moaned from the dual sensations that were afflicting her sensitive loins. She sensed a sudden gush of wetness sweep through her pussy lips and down the crack of her ass. She wondered if he could also see it.\n\n\"How many dicks have you had, Erin?\" Tyree asked as he continued to rub the bloated head of his cock across the slick, wet lips of her pussy.\n\n\"T-T-Three!\" answered a panting Erin as she watched her pussy being dually manipulated by soft fingers and a big, warm dick.\n\n\"Were their dicks as BIG as mine?\" Tyree asked already knowing the answer.\n\n\"N-N-No! Not even close!\" Erin breathed. She found herself secretly hoping and wishing that he would just shove his dick inside of her, filling her needs. Her heart was beating madly against her rib cage, she had a sheen of perspiration on her forehead, breasts, and stomach. She was writhing her crotch up against his lengthy pole, daring his cock to pierce her. Her pinkness just inches from his blackness. \n\nBridget slid her fingers off of Erin's very wet pussylips, through her slightly damp pubic hairs, up her stomach to her full, heaving breasts. She raised herself to sit back and behind Erin's head. She then lifted Erin's head by cupping her hands together and placing them behind her head. She raised Erin's head as she looked up at her questioningly. \n\n\"I want you to watch that fat, Black dick sink into your tight, wet pussy, baby. You're going to enjoy this soooo much, girl!\" Bridget said slowly and deliberately as Erin turned her eyes back towards Tyree's pendulous dick and moaned. She knew she was getting ready to get royally fucked like never before! \n\nTyree shifted his hips forward and the bulky tip of his dick (which was cool from the air conditioned room) kissed the wet, warm lips of Erin's splayed pussy. \n\n\"Hsssssssss...\" Erin hissed between her teeth as Tyree began to shift his hips forward and then back dragging the very hard length of his dick across the soaked, matted lips of her young, needy pussy. The heat of her pussy seared his dick.\n\nThe tip of Tyree's dick was coated in her pearly juices. Rivulets of her wetness clung in strings across the head of his dick, connecting her to him.\n\n\"Are you ready?\" Tyree said as he looked up at her flushed and heaving chest and face.\n\n\"As ready as I'm going to get! Give it to me! I want to feel you inside of me...stretching me...\" Erin said as she licked her lips and gazed at the cumbersome size of the dick and visually compared it to her tight, splayed opening of her quivering cunt.\n\n\nChap. 13\n\nEva gingerly stood up from the toilet, pulled up her panties and closed her robe, before flushing the toilet. She had gone into the bathroom and blotted her asshole with baby wipes to soothe her STILL sore asshole. The discomfort was starting to ebb and she was considering a repeat session with Tyree, soon. \n\nShe had submitted her ASS to a Black man! If someone would have told her six months ago that she would be sleeping with a Black man and loving every minute of it, she would have SLAPPED THE SHIT OUT OF THEM. She would have told them that Black men were not her type. She would have added that she preferred white men (although she had never been with any other men other than white men before she had met Tyree). What THEY didn't know was that THIS Black man knew how to push a woman to mindbending, banshee screaming, body wracking multiple orgasms she experienced each and every time Tyree stuck his dick inside any of her orifices! YES, she had experienced regular, consistent orgasms while lulling the evening away with his dick firmly planted at the back of her throat! Who would have thought that shy, prim and still married, Eva would ever participate in such debauchery?! \n\nAs she walked out of the bathroom, she began to wonder what the hell was taking Erin so long to retrieve a roaster from Tyree. She wondered if they were talking about what had happened the night before. Tyree was good with teenagers. He knew how to communicate with them at their level. Talk their talk. She hoped that Erin was behaving herself. No matter what she felt about her and Tyree's relationship, she had no intention of giving THAT dick up to please her damn near grown daughter...especially when she knew her daughter was no longer a virgin. Her daughter needed to loosen up. Maybe if she had the opportunity to fuck a BIG DICK, she wouldn't be the way she was, which was very uptight. She wondered what the long term effects of her daughter seeing her being split in two by a giant, Black dick would do to her? Would she start dating Black men? Larry (her soon to be ex-husband) would shit his drawers!! \n\nShe thought that she would wait five more minutes before getting dressed and heading over to Tyree's to find out where in the hell her daughter could be?!\n\nChap. 14\n\nTyree moved forward and watched as the fat tip of his dick squeezed between the small, pretty pussy lips of Erin. Just behind her lips, a pool of her aroused secretions bubbled and spilled forth, coating the head of Tyree's dick. Her dripping liquid ran around the crown of his dick and onto her lower pussy lips, and then if cascaded wetly in rivulets down the inside of her thighs, coating her asshole. \n\n\"Unngghhhhh...Ewwwww...Ummmmm...,\" Erin sighed loudly as the bloated tip of his dick lodged in the narrow neck of her small, underused pussy. The mouth of her pussy was stretched tautly around the circumference of Tyree's ample dick. The sensations were of pleasure, pain, and longing. Erin looked at Tyree's long, thick dick as it split her pussylips wider than they had ever been. The first 2-3 inches of his dick was coated in her pudding-like cream. Tyree began slowly inching his dick slowly, in and out.\n\nErin shuddered as her tight opening now turned sloppily wet and allowed her neighbors big, Black dick to sink further into her young, unspoiled body. As his dick reached the 5-6 inch mark, she felt the inner sleeve of her tight cunt being pulled/forced back and forth over the length of his dick. This new sensation caused her to arch her back, spread her thighs further, and scream into the quiet night as she claimed her first orgasm of the night!\n\n\"AAAAAAHHHHHHHH...,\" Erin screamed as she felt her pussy quiver and clasp around the thick, blunt presence of Tyree. Her body had seized up quicker and stronger than ever before! She hadn't been prepared for that one.  She was used to one orgasm per sex session. She had had two already and they had just started! She could hear the 'slurp-slurp' sound of her pussy being filled like never before and instinctually knew that Tyree and Bridget could, too. \n\nBridget reached for a pillow and placed it under Erin's head, removing her hands. She was dying to be part of the action! She moved to the side of Erin and bent forward and grasped one of Erin's large, shaking breasts and gripped it, playing with the nipple for a moment. She then bent further forward and took Erin's upturned nipple into her mouth and bathed her nipple with her tongue, teasing it to new lengths. Her breasts rested on Erin's arm. Bridget looked towards her and noticed the flushed face of Erin fill with both the throbbing pain of a BIG dick and the longing to be dicked even deeper and harder. She had experienced that feeling herself, many times. She turned her head in the opposite direction and gazed at Erin's juices glistening on his drenched dick. \n\nOn each inward thrust of Tyree's dick, Erin could be heard saying, 'oh'. The 'oh's got louder and louder as his dick slipped in past the 7 inch mark and caused her to once again approach orgasm. The combined tactile stimulation of having her pussy stuffed with thick, slippery dick and her nipple being licked and nibbled on by an overactive tongue caused her to race towards the 'orgasmic cliff' her body so craved. \n\n\"Oh-Oh-oh-OH-OH-OH-OH-OH-OH-OH...AHHHHHHH!!\" Erin screamed as her pussy seemed to pulse and clench simultaneously around the length and girth of Tyree's dick. She looked down and saw that there were STILL 4-5 inches of dick left outside of her body! That image and fact caused her to moan deeply and cum once again, spontaneously. The 'slush-slurp' sound of her pussy filled the room. Tyree's dick looked like a wet glazed donut!\n\n\"Bridget, watch out!\" Tyree said as he took Erin's quaking thighs into his hands and put them on his shoulder. Bridget moved out of the way of Erin's thighs and moved around on the bed till Tyree's sweaty back was in front of her. Tyree put his balled fist on either side of Erin's stomach and guided his sopping wet dick till just the shiny tip was lodged between her pussy lips. \n\n\"OH MY GOODNESS! I-I-I never...I mean, I thought...I saw you last night and...Mmmmmm...SHIT! I can't believe sex is THIS good!\" Erin gushed as her lower body would not stop quaking and shivering. She bent her head to look at Tyree's dick and noticed her cum cream dripping off of his dick in dollops. There were still INCHES of dry, unchartered dick left to experience, she noted excitedly.  \n\n\"Is this why snuck into my home TWICE and watched me fuck your mother and Bridget as you played with your tight pussy?!\" Tyree asked as he inched his dick back into the wet flaps of Erin's pussy. Her pussy farted, wetly.\n\n\"YESSSSSSS! That's exactly why! I had to have you, Tyree. I just had to. I couldn't help myself, honest\" Erin said rapidly and excitedly as the longing for his dick turned into a fevered pitch! Her hips flexed upwards trying to capture more of his length inside of her.\n\n\"Don't keep humping that pussy onto my dick unless you want ALL of this dick, girl,\" Tyree said as he watched Erin's messy pussy circle and attempt to gather more dick as she writhed her hips slowly. Her hips never slowed as she gazed into his eyes with lust. She smiled hoping that he did just that...stuff her with all 12 of his thick inches. She wanted him to be the one to make a real woman out of her, at last. No more pencil dicks! She realized at that moment that the craving for BIG dick had just begun!\n\nTyree bent forward until Erin's thighs were on either side of his arms and he towered above her with his dick thrusting in and out of her 6-7 inches. Erin was amazed at his agile and precise thrusts as he held himself above her and made her feel like a submissive slut. \n\n\"You're going to get all of this dick, tonight, babygirl. Tell me what you want,\" Tyree said as his dick reached the 8-inch depth and continued to plow onwards, slickly and wetly. As he pushed his dick in another inch he felt the familiar pinching of her inner depths on the tip of his bloated dick. He was going to have to really work this pussy to get it lathered up enough to take all of his length. He planned on making her cum a few more times so that the cream, she evidently produced each time she orgasmed, would aid his freight train-like entry into her most hidden treasures.\n\n\"I...want...ALL...of...your...DICK!\" Erin gasped and screamed as Tyree suddenly began picking up the pace of his thrusts. His dick never entered past the 8-9 inch mark but he was thrusting very fast, in and out of her. His dick was reaching places she had never dared to fantasize about being explored within her. Bridget had been right. Her pussy was amazingly reshaping itself around his thrusting dick. A series of strong, face-contorting orgasms forced her to scream out her pleasure. \n\n\"AAAHHHHH...OOHHHHHH...UGGGHHHH...,\" Erin screamed as Tyree's dick nudged its way into her womb causing her entire body to convulse in an electrifyingly intense orgasm. She looked at him but could not speak. She could only moan. He was taking her to a place she could not fathom. Her pussy was sooooo alive and active around the thick stalk of his plunging cock! She had never realized just how many nerve endings there were in her pussy. \n\n\"AAAAAAHHHHHHHH...OHHHHH...MYYYYY...GGGOOOOODDD!!\" Erin screamed as she suddenly felt Bridget's tongue slowly licking around the rosebud of her asshole. Her pussy quaked and quivered in a microburst-like orgasm. She had NEVER felt anything like that in her life! Her brain flashed with images of her mother being pummeled by Tyree's big dick. She realized for the first time that ANAL could possibly be very pleasurable. He had her open and she was loving it! \n\nErin opened her eyes to see her cream completely coating 10 of Tyree's thick inches. She gasped inwardly when she realized she had taken THAT much dick! She silently congratulated herself. She saw Bridget's tongue, lips and nose. She noticed that her lips were glazed with the overflow of cum that was dripping in rivulets out and around the thick dick that was plowing itself even deeper into her pussy.  \n\nTyree had NEVER had a pussy this tight yet elastic! Her cunt cream was thin in its consistency, which enabled her to be reamed deep and hard. The longer they fucked, the wetter her pussy was getting! He could feel her fluids leaking down his balls and onto his thighs. Her stomach undulated along with the shimmy-shimmy of her breasts as Tyree suddenly pulled his dick out of her wet, clasping snatch. Bridget immediately licked her way upwards and around the gaping folds of her pussy. \n\nTyree reached out and grasped Bridget's hair in his hand and pulled her away from Erin's dripping cunt and guided her mouth to the tip of his dick. \n\n\"Clean me off, baby,\" Tyree ordered as Bridget moaned and slathered her tongue around the tip and sides of his messy dick coating her tongue white. Erin watched her transfixed by the amount of cream she had deposited on his large dick. Her pussy walls continued to squeeze and quiver as it took a minute for her body to register that his dick had been removed. \n\nChap. 15\n\nAfter throwing on some shorts and a halter-top, Eva walked across her lawn and headed towards Tyree's home. Her asshole was still a bit tender from the fucking she had received the previous night. She thought she would try the side door as she approached. Tyree often left his kitchen door open for her and Bridget's visits. She reached the door and tried the knob. What luck, the door was open. \n\nShe wondered why no one was downstairs in the home. She didn't call out, either, figuring she would just walk around until she found them. She walked through the kitchen, hallway, living room, den, and the sitting room. She neither saw nor heard anyone. She began to ascend the stairway to ask Tyree if he had spoken to or seen her daughter. As she reached the second floor, she went straight towards his bedroom. She heard smacking and sucking noises from the open doorway. She also heard moaning. Thinking that she was going to be able to eavesdrop on Bridget and Tyree, Eva moved close to the wall before peeking into the candle-lit room. \n\nShe saw Bridget madly licking and sucking the very wet and cunt-cream covered dick of Tyree. As her vision moved over the bed, she suddenly sucked in her breath and tore head from the door and leaned her back into the wall, breathing heavily. Her daughter was in that room! That was her daughter's cunt cream Bridget was licking off of Tyree's massive, Black dick! How had this happened? What should she do? Was her daughter in harm's way? Perspiration worked its way onto her face and under her arms. She was perplexed about what her next move should be! And then she heard...\n\n\"Look what your pussy did to my dick. Tell me what you want this dick to do to you,\" Tyree said deeply and sexily.\n\n\"I want that big, Black dick back inside of me! I want all of it inside of me! Every inch!\" Erin said confidently and smoothly.\n\nEva could not believe her ears! Her daughter was consenting to this act! \"That little double-talking BITCH! How dare her attempt to make me feel guilty for fucking Tyree while all the while she was probably planning to fuck him, anyway,\" thought Eva. \n\n\n\"Well, I hope Tyree gives it to her ass, GOOD!\" Eva thought as she moved her body closer to the open doorway, once again. She watched as...\n\nChap. 16\n\nTyree began stroking his hips back and forth sluicing his dick between Bridget's full lips. Erin's pussy tasted like dried honey on his dick. Tyree plopped his dick out of Bridget's mouth by moving his hips backward while pulling her off of his dick. She got carried away at times.\n\n\"Grab my dick, Erin. Put it inside of you,\" Tyree said.\n\nErin quickly reached out and took hold of his chunky dick and placed its tip near her splayed pussy lips. Erin spread her thighs further to welcome him back into her pussy again. The touch of his dick upon her heated flesh was cool and wet from Bridget's saliva. Her pussy made several squelching sounds as Tyree pumped his dick in and out till he was 10 inches deep inside of her quim. \n\n\"God...you fill me SOOOOO much!\" Erin moaned as Bridget moved towards her and reclined next to her head and began stroking her hair. Tyree's balloon-like tip could be felt deep within her stomach. As she gazed down the length of her body, she swore she saw the imprint of his dick under the skin of her stomach!\n\n\"Baby, wait until he gets ALL of that fat, Black dick inside of you...THEN you'll be full!\" Bridget said as she moved her hand down to stroke the perspiring face of the pleasure-wracked young woman.\n\n\"Mmmmmm...yessss!\" Erin gasped as Tyree bent forward over her and placed his hands on either side of her waist. His dick changed position within the confines of her cunt, seeming to invade her delicate insides much deeper. His dick was soon, once again, coated with her orgasmic secretions and could be heard throughout the room sloshing through the dense wetness of her pussy. Her quim occasionally made farting noises. Tyree's dick began to go deeper. One-half inch at a time.\n\nTyree looked down at their joining to see Erin's pussy lips drawn out when he withdrew, and collapsing in on themselves when he entered her. He had approximately 10 and a half inches inside of her. He watched her eyes roll up in her sockets as he marched mercilessly deeper into her snatch. He watched as her face contorted the deeper he thrust inside of her. She moaned constantly and loudly as Bridget moved her hands from her face to her neck and finally to her warbling breasts. She captured both of her nipples between her fingers and began tweaking them. \n\n\"AHHHHHHHH...OOOHHHHHHHH...AAAAHHHHHHH!\" Erin screamed as she came at the 11-inch mark. Her pussy began making very loud, farting noises as Tyree pushed her thighs back onto her breasts and began sliding his dick in deeply and withdrawing it to the tip, and back in again. His staying power amazed Erin. She had thought that he would have cum sooner with all the pussy clenching orgasms she had had on and around his wet, thrusting dick. But he seemed determined to stuff all 12 of his inches inside of her. He had already been deeper than ANY man she had before him by at least 5-inches! And still his dick continued to delve deeper into her stretched womanhood. The inner sleeve of her cunt felt like it was being pushed and pulled on each in-out thrust of his miraculous dick. She had never experienced a feeling like it in her life! To be dominated by big, BLACK dick! Her orgasm continued unabated.",
        "\"EEWWWWWWWW...SHIT!\" Tyree heard Erin scream as he pounded home the final inch of his dick into her sloppy, gaping pussy. He could see her inner lips tightly grasping and sliding along the length of his drenched dick. Cream began dribbling out of her pussy in a steady flow. As Tyree continued fucking Erin, more of her cream coated his dick and ran down the crack of her ass, making it easier yet to get his final inch into her cunt.  \n\n\"YYYYEEESSSSSS...OOOHHHH BABY! DO ME! GOD YESSS!\" Erin screamed as Tyree began piledriving her ass into the bed. She felt the lips of her pussy spread flat against his pubic bone on each deep in-thrust. Her pussy felt distended yet pleased beyond description! \n\n\"You got all this dick, babygirl! Now, it's time to start fucking!\" Tyree exclaimed as his hips and dick went into overdrive. Driving so hard into Erin that her still flowing pussy cream began to splash and spray everytime Tyree drove into her. She was squirting around imbedded dick! The feeling was incredible! Her entire body began to quiver and shake, uncontrollably as an unbelievably powerful yet peaceful series of orgasms washed over her body. Tyree had to withdraw his dick from her spurting pussy because the accumulated fluids were causing her pussy sheath to become unbearably tight. He watched as her nectar flowed out of her pussy in a gush.\n\n\"Wow! I've never seen that shit before!\" Bridget gasped as she gazed at Erin's pulsating pussy and Tyree's matted pubic hair, which was smothered in white cream. It was one of the most erotic and nasty sights she had ever seen in her adult life. \n\nTyree placed his dick back inside of Erin's boiling cunt and began thrusting deeply and purposefully. Erin grabbed his forearms and began shrieking uncontrollably. Her breasts swayed to and fro as her mind drifted off to a quiet relaxed place. Tyree was fucking her into another dimension!\n\n\"I...CAN'T...STOP...C-CUUUMMMMMIIINNNNNNGGGGGGG!!\" Erin screamed as the most powerful orgasm yet attacked her body and pussy, forcing both to contract violently. \n\n\"GATTT DAMMMMMNNNNN, this pussy is squeezing the shit out of my dick! You want this cum, don't you babygirl?\" Tyree asked breathlessly. Erin grunted her reply and shook her head up and down.\n\n\"Well, your going to get what you ask for!\" Tyree said as began slamming all 12-inches of his dick into Erin at a heated pace. He fucked her for five more orgasmic, body and pussyclenching minutes before he began to feel the white-hot rise of his jism through the thick stalk of his deeply embedded cock.\n\n\"AHHH...AHHHHH...AHHHHHH...GET IT, BITCH...OHHH SHIT, GET IT\" he screamed as torrent after torrent of his thick, viscous load shot into the deepest cavern her body possessed. \n\n\"AAAAHHHHHHHH!!\" Erin screamed as her last and final orgasm caused her to flex her pussy a few more times along the length of Tyree's orgasming dick. They both moaned in unison as they lay panting, holding each other tightly. \n\nAfter a few minutes, Tyree raised himself onto his hands and looked down at the droopy-eyed Erin. She looked beautiful. Her nipples were STILL rock hard! He slid his hips backwards and watched as his goo-covered dick withdrew from the tight confines of Erin's pussy. Her pussy squelched as his softening fullness retreated. His dick leaked their combined fluids onto her thighs. \n\nBridget immediately slid down the bed and between Erin's helplessly open thighs and dipped her tongue into her abused cunt. She licked her pussy similar to a cat licking milk out of a bowl. Her tongue both massaged and titillated Erin's pussyflesh. \n\n\"Squeeze your pussy muscles! I want some of this cum!\" Bridget said as she placed her mouth back on Erin's pussy and began thrusting her tongue repeatedly into Erin's sloshy, cum-filled cunt. Erin complied with her request and a steady flow of cum began to leak out of her folds and onto Bridget's simultaneously lapping/thrusting tongue. Erin was on the verge of another orgasm.\n\n\"I-I-I...don't think...I can...cummmm...again...OH NO...UMMMMM...YESSSS...AHHHHHHH!\" Erin screamed as another strong orgasm washed over her. Erin was dumbfounded. Her body had never reacted this way to sex! She looked up at him with awestruck eyes. Her father had been VERY wrong!   \n\nChap. 17\n\nEva had stood outside the room watching her daughter get fucked for approximately 45 minutes. She had lost count of the number of times had daughter had cum around Tyree's thick, Black dick! She had wanted to leave and talk to her daughter later at home. But something had held her there. She knew her daughter had never experienced a fucking from a REAL man...neither had she, until she met Tyree. She had been curious to see how her daughter would react to being invaded so deeply and forcefully. Not every woman could handle a fucking by a horny Tyree. He had not disappointed either one of them. He had fucked her into a jibbering, slobbering idiot! She had loved watching her daughter be tamed by a BIG dick. \n\nShe had watched as her daughter squirted her cream and screamed like a banshee along all 12 of Tyree's inches. That was a sight like no other she had ever seen or experienced. Shit, she was a little bit jealous! But then she remembered the pounding that Tyree had given her the night previous and smiled to herself. How the fuck could one man please three women (Eva, Bridget, and Erin) to such intense, erotic encounters time and time again? Eva shrugged her shoulders as she began walking down the hallway away from the bedroom. She would talk to Erin later. Let her recover for a little while. \n\nAs she exited Tyree's home and walked across her lawn towards her home, she noticed her neighbor, Shauna, carrying in some groceries. Shauna was a red head and approximately six feet tall. Her figure was stunning to say the least. Statuesque breasts coupled with a thick ass. Shauna waved that fake wave that neighbor's wave when they think they've caught you doing something you shouldn't have. Eva waved back. She didn't give a shit either way. She was getting dicked silly several times a week and she knew, Kip (Shauna's husband) was out of shape and laid up with a bad back. Shauna could do with knocking the wave off and getting to know her neighbors, particularly Tyree, a little better! \n\nAs Eva entered her home and closed the door, she relaxed her back against the door. She thought that when her daughter returned, there wouldn't be much to discuss after all...except how they were going to share Tyree's magnificent dick!\n\nThank you to all the peeps that emailed me and encouraged me to write Part 6. I'm genuinely sorry that it took this long, but a lot has happened in a short amount of time. I plan to resume writing at a regular pace (I hope) for the future. Once again, thank you all for your continued support of my posts! Please, don't hesitate to send comments to this piece!\n\nDedicated to Joe T. Cuz, you will be missed!  "
    ],
    "authorname": "Liclovely",
    "tags": [
        "black man",
        "big dick",
        "white women",
        "interracial drama",
        "interracial novella",
        "interracial threesome",
        "voyeur",
        "rough sex",
        "blonde",
        "black white sex"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-turnaround-part-6"
}