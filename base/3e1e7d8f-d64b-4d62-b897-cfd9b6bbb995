{
    "title": "Ashton Hill Siren",
    "pages": [
        "Authors note: Hello everyone. This story was written for an invitational Author challenge set by BlackRandI. The theme of the stories all published together is Siren's Song and I hope I have touched on that brief with this story. Although set in the same town as another of my stories this story is about different people within the town, though you may see cameos from past characters. Thank you once again to Paul and Kate for being my second set of eyes. I hope you enjoy this tale. ~ellie. \n\n*\n\nChapter 1\n\n\"Thank God, you're here!\" Mikayla exclaimed, reaching out and dragging her friend through the door into her apartment.\n\n\"I told you I would be here by five, and it's only quarter to five now,\" Ariel sighed. \"Tell me what the latest catastrophe is, and we'll see what we can do to fix it.\"\n\n\"I have nothing to wear to this party tonight! The dress I'd planned to wear is all wrong, and I had no time to shop today!\" Mikayla stomped into her room and threw her hands up in front of her huge closet, making Ariel roll her eyes in exasperation. \"Why can't we be the same size so you could lend me your turquoise sequined dress?\" she wailed.\n\n\"The one I'm planning on wearing tonight?\" Ariel raised her eyebrows.\n\n\"Yes, but if we were the same size you could raid my wardrobe for anything you liked,\" she said in a tone that sounded as if this would be a suitable compromise to making her best friend give up her favourite dress.\n\n\"I'll help you find something, then we can have a pre-party drink while we get ready,\" Ariel said, holding her tongue about her friend acting like a spoilt brat.\n\nThe two girls couldn't have been more opposite. While Mikayla was as slender as a reed, Ariel was curvaceous, and, while not excessively so, she looked large beside her friend. Mikayla was blonde; Ariel had chestnut brown hair that was tinted with auburn foils to lighten it a little. Mikayla was always over the top and confident with who she was and what she wanted, while Ariel was just starting to grow into the woman she wanted to be, instead of the good girl, the sweet girl, the girl who did everything right and still got blind-sided by life.\n\nShe looked into the full-length mirror as she approached Mikayla's wardrobe and saw the good and sweet country girl staring back at her. Neat and tidy in sensible clothes and shoes, she was the daughter, friend, and co-worker everyone expected her to be in her small hometown. Thank God she had Mikayla to escape to on the weekends. Even if Mikayla was busy, she let Ariel stay at her apartment and have fun away from the pitying looks and kind words of the people back home. Here she could be anyone she wanted to be, no one knew her aside of Mikayla, and her friend not only accepted her need for change but encouraged it whole-heartedly.\n\nAriel stepped into the wardrobe and began searching through the racks of clothes, helping Mikayla to find the perfect outfit for the party they were attending tonight. As she searched, she began to divest herself of her sensible shoes and jacket. By the time she emerged again, having found something absolutely perfect for her friend, she was in her underwear and keen to wash the country town smell from her body with a quick shower. It was her ritual... arrive, deal with the fashion disaster that always faced her friend, open a bottle of wine and debrief about everything that had happened during the week and then step into the shower to wash it all away. Tonight, though, she had debriefed while in the wardrobe and divested herself of her sensible outfit as well.\n\nThe women didn't feel self-conscious walking around in their underwear as they sipped the wine and chatted. They were close; closer than most friends, they assumed. They'd been through a lot together throughout school and university. While Mikayla had been a fun-time girl and enjoyed every minute of her adolescence, Ariel had been engaged to her high school sweetheart and avoided the big hook up parties and other adventurous freedoms of university life. After graduation, as the wedding loomed, however, her fianc\u00e9 had become distant and surly, accusing her of looking and acting like a frumpy middle-aged woman before her time and trying to make him that way. He had stood her up, leaving her alone at the altar on what should have been the happiest day of her life.\n\nShe'd been heartbroken and humiliated in front of her whole town, or it had seemed that way, and she withdrew from social life almost entirely. It took time, but eventually she realised she had wasted all of her young and carefree years on a man who had never truly loved her. Now she was making up for that lost time. She finished her glass of wine and disappeared into the bathroom to shower and start getting ready. The last vestiges of the regular life... her sad, pitiful life at home on the farm, washed away, and by the time she emerged from the shower she felt more like the weekend warrior woman she became when she was here with Mikayla. Adventurous, fearless and highly experimental, she knew what she wanted from the opposite sex now and how to get it.\n\nShe wasn't after a happily ever after sort of girl anymore. God knows she had learned her lesson the hard way. She wasn't looking for a boyfriend or contemplating a future bliss that didn't exist. She wanted nothing more than a good time and all the lovely endorphins that came along with flirting with handsome men and great sex. Once again, she was the opposite of Mikayla in that respect. Her friend had been the fun-time girl while at university and now looked at every man as a prospect for a long-term commitment.\n\n\"The transformation you make from good girl to naughty girl always stuns me,\" Mikayla laughed. \"I don't know if I will ever get used to it. So what are we looking for tonight? Cheesy pickup lines that make you laugh? Good moves on the dance floor? Tall, dark and dangerous?\"\n\n\"Can I have all three?\" Ariel grinned toothily.\n\n\"At once?\" Mikayla asked wide-eyed. She knew her friend was going through a prolonged sexual awakening, but three guys at once? That was just too much for her to even think about.\n\n\"Oh gosh, I don't think I could; could I? I mean, I've never... I meant, can't one guy have all three of those qualities?\" she laughed merrily and refilled their wine glasses, the thought of multiple partners intriguing her.\n\n\"I'll call us a cab, slowpoke,\" Mikayla downed her wine in a series of noisy gulps. \"Hurry up with that.\"\n\n\"Sure,\" Ariel said, and, following Mikayla's lead, gulped down her drink and stepped towards the mirror for a last look. \"Welcome back, Ari,\" she said to her reflection and smiled as she scooped up her bag ready to party the night away.\n\n\"So you're sneaking me into this party, why?\" Ariel asked, happy to be going to a lavish party on a yacht and not minding having to sneak in.\n\n\"They were trying to keep the numbers down, so no plus ones were allowed unless a wife or verifiable fianc\u00e9,\" Mikayla grinned. \"And, sorry, honey, but you're just not my type,\" she giggled. \"If anyone asks, just be vague, say you're new or something.\"\n\n\"Great, I can do the ditzy bimbo act, it's one of my favourites,\" she widened her eyes and looked vapid. \"Like, this party is, like, so boring. Wanna find somewhere quiet to get to know each other, like, better?\"\n\nMikayla rolled her eyes and shook her head at her friend and slid into the cab. They laughed throughout the journey there, and even though they were early so Mikayla could help with the set up of the entertainment, as predicted, the party had definitely started, and Mikayla's friends who were checking the guest list didn't even question them as they walked up the gangplank onto the yacht. Then Mikayla ran off to ensure everything was running smoothly with the band her PR department had hired, while Ariel went to get a drink.\n\nAriel sipped at her glass of wine and tried to suppress the urge to wrinkle her nose. Why did all of these corporate celebrations have to use such horrible wine? Surely they could come up with a little extra money to get something decent for this party. This was an investment firm holding this event for their staff, after all. Mikayla had told her the reason the staff were being rewarded, but she couldn't remember, so she was trying to keep a low profile.\n\n\"Don't like the wine?\" a deep voice asked, making her raise her head and a thrill of expectation run down her spine. The man standing opposite her was sex on legs. He wore a suit but no tie, his shirt open at the collar revealing the dark skin and hair of his chest. Her eyes travelled up his fit body to his face and Ariel drew a breath. Handsome didn't cover what she thought, as his lopsided smile quirked on one side showing a deep dimple there, and his eyes were deep dark pools that held her mesmerised momentarily.\n\n\"It's passable,\" she said unconvincingly once she had gathered her wits.\n\n\"I'll make you a deal. I will find you a decent bottle of wine, and you'll give me your number,\" he said it as a statement and smirked. He knew everybody who worked at the firm, and he had never seen her before, so felt unconcerned about possibly flirting with a member of staff, there was no ring on her finger, so no fianc\u00e9 or husband, so she must be part of the event team or entertainment. Possibly the band's manager, although she looked too young for that sort of role.\n\n\"If you can find me a decent bottle of wine I'll give you more than my phone number,\" Ariel laughed, openly flirting with the sexiest man she had been this close to in a while.\n\n\"More?\" he cocked his head to the side, his smirk remaining in place.\n\n\"Find me a decent bottle of wine, and then you'll find out,\" she purred.\n\n\"Challenge accepted,\" he grinned and walked back into the salon of the yacht and passed the bar. Ariel watched him go, admiring the width of his shoulders and the tapering of his hips highlighted by the cut of his suit. As far as hookups went, this one was promising, more so than anything else she had seen so far tonight, or the last few weeks, if she was honest.\n\n\"Oh my God! You have to help me!\" Mikayla raced over, obscuring her view of the man she didn't even know the name of yet.\n\n\"Calm down. What do you need help with? You know I will fix it if I can,\" Ariel turned her full attention back to her friend, seeing real panic on her pretty features for a change.\n\n\"The singer is yawning in technicolour over the rail. Apparently, he didn't know he would get seasick when they accepted this gig,\" she grimaced. \"My team is in charge of pulling this night together, you have to save me... us!\"\n\n\"I don't have any magic cures for seasickness. You don't expect me to sing, do you?\" Ariel asked, quirking an eyebrow, finally seeing where this conversation was heading.\n\n\"You can't let me down in front of my boss. Please, you have a better voice than anyone else I know. It will be just like one of our karaoke nights, except with a live band. Once you get everyone interested, we can ask people to volunteer to sing something as a team-building exercise. It will work out great. Please, Ari, you have to help me, please!\" She begged, using the name Ariel preferred when in the city, and began to pull her friend away from where she had been standing toward the small band.\n\n\"Fine, but just remember, I am more country than most city people like in their music,\" Ariel gave in and let her friend introduce her to the band. The band consisted of a guitar, a drummer and a double bass, much like a jazz trio, and Ariel breathed a sigh of relief. The band had been hired to primarily be background noise rather than a show, so they were prepared to do piano lounge or slower numbers that, luckily, Ariel knew most of, and she went through the playlist with the guys before going to visit the bathroom before they began.\n\nAriel rounded a corner on her way to the bathroom and ran straight into the hard body of the man who had offered her wine earlier and gasped. His hands wrapped around her waist to steady her and she placed both hands on his chest, enjoying the feel of hard muscle beneath his shirt. She slowly looked up at him, their eyes met, and a thrill ran through her.\n\n\"I thought you might like a decent glass of wine before you began your first set,\" the man said, obviously assuming she was here with the band the whole time. That suited her fine, and she smiled slowly, pleased that Mikayla sneaking her on board wouldn't be discovered if everyone thought the same.\n\n\"Thank you. But could you hold that thought for just a few more minutes? I need to find the bathroom before anything else,\" she said breathily, almost against his neck as they stood in such close proximity.\n\n\"Let me show you the way,\" he offered and stepped back to guide her with a hand in the small of her back.\n\nAriel didn't argue and allowed him to guide her further into the yacht and into what must have been the owner's private quarters. The bathroom was luxurious for being on a ship. She had assumed it would be cramped and small, and was pleasantly surprised. When she came out of the room, the man was waiting for her, just as she had left him, and she took a moment to drink him in again. If she weren't saving Mikayla, as usual, she would have jumped him right then and there. The man was made for fucking, and he moved as if he did it and everything else well.\n\n\"Thank you for waiting, but I am sure I could have found my way back on my own,\" she said as coolly as she could manage with all of her hormones raging.\n\n\"Ah, but then I wouldn't have had the opportunity to do this,\" he moved quickly and wrapped an arm around her waist, pulling her against his body and lowering his head to press his lips against hers. Surprised that she didn't resist and needed no coaxing to kiss him back, he deepened the kiss, enjoying the feel of her breasts against his chest and running his hands down over her curves.\n\nAriel could have cursed as he released her. A quickie right here, right now with this man would never do, and she hoped he would still be as interested when she had finished the set she had promised to sing while they found some Dramamine or Kwells for the seasick lead singer she was replacing.\n\n\"I need to go back,\" she said, not hiding her disappointment from the man, showing him she was willing, if not eager for more of his attention.\n\n\"I'll walk you back,\" he said in a husky voice. They walked up, but he detoured slightly to the bar and picked up a glass of white wine, handing it to her. \"The wine that promised more,\" he grinned at her.\n\n\"More, indeed,\" she grinned after taking a sip. \"It's lovely. Thank you. After the gig?\" she asked, indicating the band waiting for her.\n\n\"In the break?\" he countered.\n\n\"Do you really want to rush this?\" she indicated the space between them. \"Or take your time and savour the experience, because I imagine it will be quite an experience,\" she smiled softly, matching the soft lilt of her voice which had dropped in tone with her desire. He moved toward her as if to kiss her again, but instead slid his lips along her cheek.\n\n\"We will fuck tonight, that is not in question, whether it's in the break or after the gig or both will be your choice,\" he murmured into her ear. Then stepped back and let her go, and she moved off toward the band, looking over her shoulder with a grin at him.\n\nHer brain seemed to have melted in the short amount of time she had walked away from the band with Mr. Tall-dark-and-dangerous, and she thanked God for her parents love of music and their eclectic tastes as she stepped up to the mic, almost on automatic pilot as the first familiar chords sounded from the band.\n\n*****\n\nChess watched the woman walk away. She was cocky and confident, just the sort of woman he enjoyed bringing to her knees and making beg for what she truly wanted. It was rare for a woman to challenge him, but he got the feeling this woman was more than just a tease. As he watched her step up to the mic he readjusted his stance yet again as the sight of her running her hand up and down the mic stand did little to ease the hard-on she had already inspired from him.\n\nHer voice was deep and sultry as she took up the jazz feel of each song. He recognised some well-known songs that had been given a jazz style makeover, and in the glittering, turquoise dress she seemed to him like a siren coming from the sea to lure him in. He was not so easily caught, however, and he knew just how to turn the tables on her once he got her alone. He knew he wouldn't be able to wait for the party to end and the stragglers to leave, and he began to make plans to take her to a nearby hotel where he knew they wouldn't be disturbed by anything and he could improvise the things he would need to satisfy them both. Women rarely wanted a second date from him, despite his wealth and good looks. His particular form of fucking didn't appeal to many, and those that loved it never held the challenge he desired. This woman, he thought, could be dangerously different.\n\nHe looked up at her as she began to sing a sultry cover of Chris Isaak's of Wicked Games. It was as if she was speaking directly to his cock like the siren she was, and he groaned as the band stopped to take a break. He approached her and offered her another glass of wine from his own collection, which she gratefully accepted with a sultry smile that made his cock react even more.\n\n\"You were a fucking Siren up there. I need to fuck you now!\" he murmured close to her ear and wrapped his hand around her wrist as if to drag her away from the party. He had never wanted a woman as badly as he wanted this one, and he hated that his desire showed so openly to anyone bothering to look at him carefully.\n\n\"Wait! I can't just leave,\" she argued, keeping her voice down so as not to make a scene and attempting to pull her wrist from his grip.\n\n\"How long is the break?\" He asked in a low growl, looking around to ensure they weren't being overheard.\n\n\"Twenty, maybe thirty minutes, I guess,\" she whispered. They were still standing so close together no one would have noticed the tension between them or overheard the lascivious conversation. She nervously took a gulp of her wine as he stared into her eyes.\n\n\"Not ideal, but it will do for a warm-up,\" he muttered. It would at least show him if she were all she promised to be as she had stood there singing and luring him in by his cock. \"Come with me!\" he growled and tugged her away from the bar and the party-goers. He noted the band and the woman from the public relations department watching them, but at this point he didn't care, he needed some relief. Then reality hit him, and he paused, turning to her. \"Are you sleeping with one of the guys in the band? Someone who brought you here tonight?\" He eyes bored into hers.\n\n\"No, no one,\" she whispered, frowning. \"Is your girlfriend, fianc\u00e9 or wife about to follow us and make a scene?\"\n\n\"Smart mouth!\" he said gruffly. \"That would be why you don't have a boyfriend. Men like smart and feisty girls, but they don't like them to show it so much.\"\n\n\"That's because they want to think they're smarter and in control,\" she bit back at the rebuke. \"Just like you,\" she grimaced as she tugged on her wrist again and his grip tightened.\n\n\"Oh, yeah. I also like a woman who can challenge me. It makes...\" he held off telling her exactly what he wanted from her. What his particular kink involved. They didn't have much time right now, and, if this went well, he would have the rest of the night to explore that kink with her.\n\n\"It makes what?\" she asked.\n\n\"It makes for...\" he pulled her into the stateroom and slammed the door behind them. Chess pushed her up against a wall, grabbing her other wrist at the same time and pulling her hands over her head where his right hand clenched them both. With his left hand he gripped her throat, pushing her chin up to look at him, leaving her in doubt who was in control of this moment.",
        "\"It makes the conquering and punishment of sexy sirens like you, and the relentless fucking I will give you so much more gratifying!\" he growled and let his lips crash down onto her mouth, spearing his tongue against hers as she gasped at the assault.\n\nArousal flooded through Ariel, she had become more and more experimental with every new conquest of her own, and she knew she liked it rough, but this guy had a dangerous edge that thrilled her on a different level. She sucked on the tongue thrust into her mouth, showing her willingness to challenge him on his terms. It was as if he had not just stoked her inner fire, but poured gasoline on it. A moan sounded from her throat as they kissed for what seemed like an age but was literally only minutes.\n\n\"Take the dress off before I tear off!\" he growled, breaking the kissing and stepping back, his eyes glued to her. To his continued surprise and pleasure, she obeyed immediately. \"Slut!\" he growled as he saw that she was braless, her perfectly rounded breasts sitting up, showing tight, hard nipples without any support at all. She was even hotter than he imagined without the dress obscuring her figure.\n\n\"Bastard, you'll never make me cum at this rate!\" she growled back, knowing she should be offended by him calling her a slut, but she was so aroused already it only turned her on further.\n\nChess grinned devilishly, then he grabbed her and pulled her from the wall, spinning her around and pushing her over the tall back of a leather armchair. He placed a hand in the centre of her back until she bent over it almost double, her hands resting on the cushion supporting her weight and trying to balance as her feet practically left the floor behind the chair.\n\nHe was surprisingly strong as he held her in place with the hand in the centre of her back and ripped her panties from her with the other hand. The raw force of his actions ratcheted her arousal up to another level, and, as if reading her mind, she felt his hand connect with a hard slap to her upturned ass. Ariel whimpered hotly as she felt the heat of the slap seep into and mingle with the heat from her core.\n\n\"Fuck, I knew you'd be a hot slut just like this!\" he growled and began to spank her in earnest, peppering her ass and thighs until they glowed pink and hot. The noise she made only served to increase his need to fuck her, to take her like this, hard and deep. He stopped the spanking and slid two fingers into her, feeling just how wet and turned on she was from the way he was treating her. \"Fuck...\" he groaned again. \"That was for singing to my cock for the last hour! Making me so hard I couldn't think straight!\"\n\nAriel heard him unzip his pants and felt him step forward between her thighs an instant before he rammed into her, making her cry out. He felt huge, though she knew it was only her heightened state of arousal making her clench tightly around him that gave her the feeling of being painfully full of cock as he pounded into her, rocking the chair she was bent over.\n\n\"You like it rough, don't you, slut!\" he growled between clenched teeth, marvelling at how fucking tight she was. \"Answer me!\" he commanded and drew back to slap her ass before ramming into her again.\n\n\"Yes!\" she cried out breathlessly, her voice a high-pitched whimpering whine. His thrusts were steady, rough and mercilessly unending, and she felt herself begin to build toward what promised to be an incredible orgasm.\n\n\"Cum with me!\" Chess growled between clenched teeth. \"Cum with me now, slut!\"\n\nAriel cried out as she shook with the impact of her climax. She heard and felt Chess do the same and lost track of time and space momentarily from the sheer force of it. She was pulled from the armchair onto the floor with him, and he lay her gently on the floor as she recovered. He took her face in both his hands and watched her as her eyes came to focus on his intense gaze.\n\n\"You want more, don't you!\" he asserted.\n\n\"Yes,\" she admitted. She hadn't been with a man she wanted to see or fuck a second time since she had started coming to the city for the weekends. Especially not a man who could treat her like this and make her want to be fucked like this again. She couldn't deny, however, that she wanted more, more of him, more of his fucking, even more of his punishment. She wanted more. \"Yes, I want more, please... But after I finish the gig.\" She tried to take back a little of her control as she said it and the world righted for her again. She was going to spend the night with this guy, but then that was it. She didn't do repeat performances. She was over men and their lies to get what they wanted. She had no intention of giving up her freedom to date a man, not even one this sexy.\n\nShe came to her feet, teetering on her heels slightly. The fact that Chess was still fully dressed while she stood there naked but for her shoes was not lost on her, and she quickly pulled her dress on and looked despairingly at her ripped underwear.\n\n\"For what it's worth, it's going to kill me for the next hour knowing you are naked under that dress,\" Chess said unapologetically. He watched her, his eyes hooded with lust and need, wanting more of her as she went to the mirror and fixed her hair and make-up from the small evening bag she had carried with her.\n\n\"I wonder if I will have time to finish that glass of wine you keep offering me,\" she smiled, feeling herself come back to some form of normalcy.\n\n\"I will get you a fresh one, come!\" he commanded, and was pleased when she followed his lead and let him guide her from the stateroom at the far end of the yacht back to the more populated areas where the party seemed to have gone on quite happily without them.\n\nMikayla caught her eye and indicated the band area, and Ariel nodded, holding one finger up beside her hip where the man she was with couldn't see it. They still hadn't introduced themselves properly, which made her giggle. There was no way she was giving him her real name, this would be a one night stand, pure and simple, and then she would walk away.\n\n\"Thank you,\" she said in a husky voice as he passed her the wine. \"I have to go,\" she moved away from him, but he caught her arm, pulling her back.\n\n\"We are leaving after this set, let your band mates know they will be on their own,\" he instructed. Chess wasn't going to wait all night for this siren who had cast a spell on him with her sexy, soulful singing and amazing body.\n\n\"Okay,\" she said, finally meeting his challenging gaze with one of her own. As soon as he let go of her arm, she stepped away and said under her breath, but loud enough for him to hear. \"I'll see what I can do.\" Ariel knew she would be punished for that, but instead of being worried by the thought it only made her more aroused.\n\n\"Where have you been?\" Mikayla asked from her place behind a speaker and the double bass case where she couldn't be seen.\n\n\"Where do you think? He's hot, don't you think?\" Ariel asked.\n\n\"He's also my boss! Not just my boss, but my boss's boss! He owns the company, this is his party!\" Mikayla said harshly.\n\n\"Relax, no one knows I am here with you. As far as anyone watching can see you are just checking in with the entertainment, because that's your job tonight. I'll ignore you, and you can ignore me. The band thinks my name is Lucky, and if anyone asks about me after tonight they'll think I am just a gatecrasher who happened to be in the right place at the right time to fill in for the sick guy,\" Ariel said, thinking quickly and once again fixing the perceived disaster in her best friend's life. \"All good?\"\n\n\"Yeah, all good,\" she nodded. \"The singer is feeling better, but he'd like you to stay and do a few more, just in case, okay?\"\n\n\"Sure, it will all work out, Mickey. I promise I won't mention you, or even my real name to your boss's, boss's boss, or whatever. I don't even know his name at this point.\"\n\n\"Cesare Rousell,\" Mikayla supplied. \"Most people call him Chess. And, yes, he's hot, so I can't blame you for going there. But, seriously, my friend, you are going to have to start settling down one day instead of jumping into bed with everyone who offers when you are down here in the city.\"\n\n\"It sure beats not getting any at all,\" Ariel grinned. \"Trust me, that man over there,\" she peaked around the speaker. \"That man knows how to fuck!\" she fanned herself with a giggle.\n\n\"Fine, have fun, but just don't fuck up my job and life at the same time, okay?\" Mikayla warned her.\n\n\"Deal. I love you, Mickey. I would never purposely do anything to hurt you,\" Ariel said sincerely.\n\n*****\n\nAs Ariel sang, Chess went back to the stateroom cabin and unlocked the small cupboard of equipment and toys there. He packed a small bag and smiled to himself, knowing he would enjoy the challenge of testing this woman's limits and seeing if they matched his own. He ensured the room at the hotel was booked and that the concierge would have his key waiting for him to negate the check-in. Sometimes it was good to be rich, there was little money couldn't buy in the service industry. Discretion and preferential treatment being what he wanted tonight.\n\nAssured that everything was in place, he went back to the bar and watched the siren mesmerise half of the male population at the party with her singing. During this set, however, a male singer appeared with her from time to time, and at other times taking over the vocals entirely. He wanted nothing more than to go and pull her from the spotlight and take her to the hotel room that awaited him, but he ground his teeth, trying to be patient. When she finally finished the set, he was beyond frustrated and not in the mood to wait a moment longer. He approached the band where she chatted easily after the set.\n\n\"No, this was a once off, but thank you,\" he heard her saying, wondering if leaving early with him was the once-off occurrence she spoke about. He wasn't so sure it would be a once off event if all went according to his plan.\n\n\"Ready?\" he asked, interrupting her conversation.\n\n\"Oh, yes,\" she nodded. \"Thanks again, guys,\" she waved and let Chess lead her from the yacht towards a waiting car. She surreptitiously locked eyes with Mikayla, who stood next to the gangplank, and grinned before disappearing completely into the car. It shouldn't have surprised her that Chess had a driver, knowing now that he owned the firm that Mikayla worked for, but it did. Still, there were some wonderful possibilities in being driven like this. Possibilities that flirted with her new-found interest in the kinkier side of sex. The fact that the world moved around them outside of this car and that the driver in the front would be privy to all that happened in the back gave a delicious exhibitionist feel to what she was about to do.\n\n\"You look a little wound up,\" Ariel said huskily, as he slid into the car beside her. \"Maybe I can help ease the tension a little on the drive home,\" she purred into his ear, running her hand over his thigh to his crotch.\n\n\"Maybe you could,\" he said, reaching up and gripping the back of her neck, holding her still and turning his head so his breath fell on her face. \"You're such a hungry little slut, aren't you,\" he moved to claim her mouth, taking away any answer she may have given in response. Then he undid his belt and fly, moving his hips so that his cock sprang free. He would let her suck his cock, but she would do it on his terms, not her own. With his hand still gripping the back of her neck, he pushed her head down toward his aching cock and groaned as she kissed it lightly before he felt the feather-light flutter of her tongue around the head. \"Oh, fuck yes...\" he groaned in a long drawn out breath, keeping her head right there for long moments just to savour the feel of her.\n\nAriel strained against his hold on her as she kissed and licked at the tip of his cock, seeing it for the first time. Unable to move her head for the moment, she lifted a hand to stroke him up towards her waiting mouth. She liked the power sucking cock gave her over her partner. She loved the appreciative groans and the loss of control they felt as she took them to a high that was all their own. The initial groan he gave only fed her hunger, and she parted her lips, taking as much as she could of him when he finally began to exert slow downward pressure on her neck. She gurgled as his cock hit her gag reflex, and she adjusted slightly and swallowed hard, just as his hips bucked upward, forcing more into her mouth.\n\nLetting go of her neck, Chess wrapped his hands around her waist and moved her body so she sat on the floor of the car between his thighs where he could see her sucking him rather than just the back of her head. He then he brushed her hair back from her face, holding it above her ears and gripping her head to set the pace of her bobbing head and suctioning mouth. He groaned loudly, and she looked up at him, her mouth full of his cock, and drank in the sight of her.\n\n\"So hungry, little slut! Show me what a good little cock sucker you are then!\" Chess crooned the coarse words at her and pressed her head down onto him again, holding her down as she gurgled and swallowed, taking more of him. The sensation was fantastic, she was good, better than he had experienced for some time, and he revelled in the feeling of her mouth, tongue and lips. \"Oh fuck, yeah, baby! Suck me hard, deep, just like that! You love it, don't you!\" he continued to talk to her as he moved her head at a slow pace, holding her down on his cock for longer and longer periods of time until she was straining for air.\n\nAriel gurgled, gagged and nodded to his questions. She didn't know what it was about his dirty talk, but it pushed her to another level, and she wanted nothing more than to rock his world with the best blow job he'd ever had.\n\n\"I'm going to feed my hungry slut, and you are going to swallow it all!\" Chess commanded, gripping her head even tighter and bucking his hips up into her mouth as he mover her faster. When he came, it was thick and copious to the point that she had trouble swallowing it all, and drops leaked from the corners of her mouth. When he released her head, she licked at the drops while staring into his eyes, one finger scooping at the remains and placing them onto her tongue, and then she bent her head again and gently cleaned him of every remaining drop from his cock and balls.\n\nThey arrived at the hotel minutes later, and Ariel realised the driver had been trying to time his approach with the orgasm Chess had just fed her. He must have been driving around the block for their arrival to have been so coincidental. Once again in the public arena, Chess treated her like a princess. Gone was the dirty talking sex fiend who wanted to spank her and fuck her senseless. In his place was a perfectly mannered and solicitous man who walked her through the hotel lobby to the lifts, followed by the driver, who carried two small overnight bags as if they had genuinely come to stay rather than just being here to fuck each others brains out for the rest of the night.\n\n\"He's staying?\" Ariel asked quizzically as the driver followed them into the suite Mr-Tall-Dark-and-Handsome had booked.\n\n\"Yes, but he will only disturb us if it's necessary. This suite has several rooms, and he will be quite comfortable in one of them. Unless you want him to watch? We haven't talked about your kinks, though they seem to match mine so far,\" he grinned as he stepped forward and gripped the hem of her dress, drawing it up and over her head. \"It wouldn't be the first time he has been an unwitting voyeur, I am sure he enjoyed the sight of me feeding you my cum in the car tonight,\" he smirked, enjoying the small blush that coloured her cheeks, even though he had expected her to be more taken aback by his words.\n\n\"I think once tonight is enough to fill his spank bank for now, don't you?\" she said, sounding braver than she felt, especially as she stood naked in a room with two fully dressed men. She saw Chess nod to his driver and then turn his attention back to her.\n\n\"Come!\" he commanded, and took hold of her arm around the bicep. He led her to the dining table and helped her to lay back onto it. \"Hold the edges and widen your legs,\" he said, placing his hands on her thighs and pushing them apart, making her tight cunt open up like a flower to him. \"Most slutty girls who say they like it rough, or that they are curious about this lifestyle, even those who are experimental, tend to tell me what they think I want to hear,\" he explained. \"It's rare a that girl wants to come back after spending a night like this with me, even the true gold diggers.\"\n\n\"Considering I don't know you any more than you know me, and we haven't even had that conversation, I think that is a moot point, don't you?\" she said with an edge of hostility in her voice. She wasn't about to lie here and be called a gold digger, or whatever he was trying to say, no matter how good the sex was. \"I don't care about your job or your bank account, I assume you work for the firm who just threw that great party, aside of that I don't know anything about you, not even your name,\" she lied. But he hadn't introduced himself, and neither had she, despite being intimate twice already.\n\n\"True, perhaps anonymity is a bonus, for now. Still, this is usually the point where most women scream and bail on me, calling me a cruel bastard,\" he said, looking at her intently. \"Still think you're up for a fun night with me?\" He went to grab one of the small cases the driver had dropped in the living area and produced a crop. \"You know what this is?\"\n\n\"Yes, I'm not brainless!\" she said, feeling irritable now by his bluster. \"Look, bring it on or just forget it! You gave me a taste of your cruelty on the boat, and I am still here, aren't I?\"\n\n\"Yes, you are,\" he approached her, not ever having such a feisty and confident woman in this position before. \"Listen carefully, because I will only say it once then. If you let go of the table, if you close your legs, it's over. I'll call you a cab and send you home. Understand?\" He saw her nod while she eyed him sceptically. \"I want to hear that you understand. Say it!\" he commanded.\n\n\"I understand. You want me to grip the table and keep my legs open while you torment me with that crop, right?\" She asked to clarify exactly what he was doing.\n\n\"You can scream if you want to, the hotel has wonderful soundproofing and discreet staff. Most girls that have made it to this point with me do scream right before leaving and slamming the door behind them,\" he said with a half-smile, showing he was unconcerned by that behaviour. The challenge was always finding that limit and forcing himself to stop. \"Most girls baulk at the dirty talk, those that make it this far rarely go further. Most girls don't understand the fine line between pleasure and plain,\" he teased as he ran the crop over her perfect skin.\n\n\"I'm not most girls,\" she said with a stubborn set to her jaw, despite the thrills the teasing of the leather crop across her skin gave her.\n\n\"We'll see,\" he smirked. Chess guided the soft leather over her nipple, which hardened immediately, and he went to her other nipple, watching as the pink buds stood up from her chest, begging him for what he was about to do to them. He saw her readjust her grip on the edge of the table in expectation and brought the crop down across her breasts, making her gasp, and her eyes fly open even wider. \"More?\" he asked in a husky voice.\n\n\"More,\" Ariel sighed breathily before adding, \"Please.\" The next three strokes all landed on her breasts, and he caressed her body with the leather tongue of the crop, in between going lower and lower until he caressed her cunt, making her moan with pleasure.\n\n\"More, little slut?\" he asked, his voice deep and husky as he watched her carefully.\n\n\"Yes, please, more!\" she breathed each word on a pleasure filled sigh to him. Ariel gripped the edge of the table and cried out as the crop began to dance over her body, leaving pink welts in its wake. When she didn't move, even as he cropped her cunt, he began to crop her rapidly with more force until she arched up, crying out and gasping, but still not moving her arms and legs, as if she were locked in a battle of wills with him.",
        "Chess stopped, impressed with how much she had taken without any sign of giving up and running from him. He stepped to the end of the table and gently caressed the folds of her cunt before pushing two fingers into her, finding her hot and wet and willing. Her answering keening whimper was breathtaking as her cunt squeezed his fingers, making him want nothing more than to be in her right then.\n\n\"So the little slut wants to be fucked instead of spanked, does she?\" he teased. \"So needy and hungry for cock; my cock!\" he tormented her, forcing a third finger into her.\n\n\"Yes!\" she gasped and arched, again pushing her cunt down against his fingers which drove in and out of her now. He chuckled in a deep and husky voice, continuing to finger fuck her. \"Please,\" she added. \"Please, I want you!\"\n\n\"No!\" his thumb pressed down on her clit, rolling it in circles under the heavy pressure he exerted. \"Beg for what you really want, little slut!\"\n\n\"Please, I want your cock!\" Ariel begged, realising her mistake as she climbed towards her climax and her need built higher again.\n\n\"Not yet!\" he growled. \"Don't let go of the table!\" he warned, seeing her arms flex as if she was about to make a grab for him.\n\n\"Please fuck me, I need your cock inside me!\" she begged, again adjusting her grip on the table after his warning and needing to be fucked so badly she would follow any arbitrary rules at this point. The crop landed across her breasts, shooting pain into her body and lighting her up as her orgasm hit her. Her whole body shook and jerked as it threatened to overwhelm her.\n\nChess dropped the crop and grabbed her so that she didn't fall from the table in the thrashing and shaking of her climax. He was amazed at the strength of it, and more than pleased that he had been the one to give it to her. Unable to hold back any longer, he pulled her ass to the edge of the table and bent her legs back over her body, doubling her over, then drove his cock into her spasming cunt.\n\n\"Oh, fuck, yeah!\" he growled out and began to slam into her with all his might. Despite this being his third orgasm of the evening, he didn't last long, as her milking muscles only added to the sweet sensation of taking this woman. \"Fuck...!\" he cried out in a long drawn out sound as he came in her again. He had no doubt a slut such as this would have top-notch birth control, but he would talk to her about it in the morning. He couldn't believe he had been so carried away by the moment both times he had cum in her cunt that he hadn't donned protection. Picking her up, he walked with her to the bedroom and lay her down on the bed.\n\n\"Wow!\" was all she said, looking at him with sleepy eyes. \"Just... wow!\"\n\n\"Yeah, wow,\" he murmured. \"I want to make you cum until you pass out, spank you until you beg me to stop, I want to use you completely and introduce you to so much more,\" he said.\n\n\"Not going to happen,\" she gave a half smile.\n\n\"Challenge accepted,\" he chuckled, unsure of what part she had meant about but not caring very much. He thought he might have finally met a woman who would challenge him in the way he needed, and he wondered if she had another job, aside of singing with the band. \"I love a challenge, Miss...\" He lifted his head to look at her and realised from her slow, steady breathing she had fallen asleep already. Tomorrow, he reassured himself. He would find out her real name tomorrow. She couldn't possibly have been named Lucky from birth, could she? With that thought, he, too, fell asleep.\n\n*****\n\nChapter 2\n\nAriel woke feeling like she had barely slept at all, but slid as quietly as she could from the bed and looked down on the sleeping man who had rocked her world so completely only a few hours earlier. He was gorgeous, and she knew he would have no trouble getting another girl to play with as he had played with her. She was just one of the many that passed through the revolving door of his life. She didn't know why she felt so reluctant to leave him; Aside from the mind-blowing sex, that was.\n\nShe tiptoed out of the room, finding her shoes in the dining room and her dress and bag in the living area. Then she went into the bathroom to fix herself up as best she could before facing the big wide world again. Once dressed, she went to let herself out. It was best this way; she had promised Mikayla it would just be a once off thing. There was no way she would do anything to jeopardise Mikayla's job, or, more importantly, their friendship. Resolved to leave before anyone woke up, she walked out of the hotel suite and out of that man's life.\n\nShe gritted her teeth when the elevator doors opened, preparing to do the walk of shame and quickly headed for the exit. She had almost made it when the concierge stopped her.\n\n\"Can I get you a taxi, Miss?\" he asked politely, taking in her less than stellar appearance.\n\n\"I've called a cab,\" she said softly and held up her phone. \"It's only two minutes away, I won't be hanging around making the lobby look untidy or anything,\" she said apologetically.\n\n\"You came in with Mr. Roussel last night?\" he asked.\n\nAriel only nodded, praying for the cab to get there even quicker. She was mortified that she had no recollection of what his surname was before that point. She had an inkling Mikayla had told her, but she couldn't for the life of her remember if she had or hadn't. He'd just been the dominant bastard, and she had been his slut, it was a simple sexual encounter. There had been no need to over complicate it with names, had there.\n\n\"The cab is almost here, I might just go meet it outside. Have a great day,\" she said, smiling overly brightly, trying to brazen out the awful situation she had found herself in.\n\n\"There's no need, they can drive in and pick you up. It's easier that way in traffic, even at this time of the morning. It makes it easier to turn around if they have to go south again. Where are you headed?\" he asked curiously.\n\n\"Not far, I could have walked, really, but, you know, not really dressed to join the morning joggers,\" she laughed lightly. She was suddenly paranoid about all the questions she was being asked and why he was delaying her in the lobby when surely it would be best for someone who looked as well fucked and abused as she did to wait outside the hotel. \"Thank you for your concern though,\" she added, and made for the door, thankful that the cab pulled up just as she stepped through it. She slipped into the passenger's seat and put on her belt, noting the concierge still watching her.\n\nHe probably thought she was up to no good leaving at this ungodly hour. Still, it didn't hurt to be careful, she would get the driver to pull up at the hotel across the road from the block of apartments Mikayla lived in, just in case. She had no concerns that the man who had fucked her so divinely would want to see her again. He hadn't even asked her name, let alone her number, but the concierge had made her feel oddly paranoid.\n\nWhen she was sure the cab had left, she made her way up to the apartment and let herself in, going immediately to the guest room and collapsing on the bed, vowing to sleep the rest of the morning away.\n\n*****\n\nChess woke to an empty bed and frowned; women didn't get up and leave him in the middle of the night, at least not the women he'd slept with in the past. He got up and went to the bathroom before starting to look for her in the rest of the hotel suite. He would have liked the opportunity to explore more of the woman this morning, perhaps even over the entire weekend. To find her gone was a new experience for him. One he thought he would have been grateful for. With any other woman he might have been, but this woman was something special, and he wanted more of her.\n\nHer dress, bag and shoes were gone, so he had no illusions that she had gone to sleep in a spare room because he snored too loudly in his exhaustion. He went to have a shower, torn between the relief he knew he should feel that this wasn't a woman who would try to insinuate herself into his life just because they slept together once, and the fact that she had rocked his world better than anyone previously had managed to do.\n\n\"Did you see her leave?\" Chess asked his steward, Collin, as they rode down in the elevator to return home.\n\n\"No, I heard her leave at about five this morning. She seemed in a hurry, she was gone by the time I got up and made my way to the foyer. Is there a problem?\" he asked, showing a little concern.\n\n\"No, not at all. I'm just surprised she left while we slept,\" Chess said nonchalantly as if that was his only concern.\n\n\"It is quite unusual for a woman you have bedded,\" Collin said, trying to suppress a smile. \"Perhaps she wore you out rather than the other way around this time?\"\n\nChess gave him a sidelong look rather than responding, and shook his head disgustedly at the thought, all the while acknowledging that as much as he had pushed her last night she had risen to the challenge he had set her and exhausted himself in the process.\n\n\"I don't even have a proper name for her,\" Chess chuckled, a little shamefaced. \"I'm guessing she wasn't after me for my money, I doubt she even knows who I am in the business world. She said she didn't care about my job when I brought it up, like I worked for the company instead of owning it.\"\n\n\"That's a rarity almost mythical in proportion. I expect that without a name you didn't bother with a phone number or a way of contacting this mythical creature who didn't care about your fortune?\" Collin didn't bother hiding his mirth anymore.\n\n\"You're a very unpleasant man sometimes, Collin, you know that?\" Chess asked.\n\n\"That's because I will always tell you the truth whether you like it or not. And this time I am enjoying seeing you on the receiving end of a one-night stand,\" Collin chuckled.\n\n\"I trust everything was satisfactory with your stay, Sir?\" the concierge greeted Chess as they walked through the lobby.\n\n\"Yes, as usual,\" Chess answered shortly.\n\n\"Your guest left very early this morning,\" he commented as he presented the bill for Chess to sign.\n\n\"You saw her leave?\" Chess asked, finding he was curious to know if someone came to pick her up or if she caught a cab.\n\n\"Yes, she ordered a taxi from her phone,\" he nodded. \"She seemed quite eager to be away. I trust all was well.\"\n\n\"All was very well, thank you,\" Chess reassured the man in a clipped voice, seeing where he had been going with this conversation and reassuring him that the girl was neither a prostitute nor a thief that required any further input from the hotel staff about her whereabouts.\n\n\"Did you get the details of the car that picked her up?\" Collin inquired, knowing that Chess wouldn't and would kick himself later for not following up the information.\n\n\"I did, but if all was well...\" the concierge turned to face the older man.\n\n\"Mr. Roussel will only want to tip him extra for making sure the girl got home safely, I assure you. There is nothing to be concerned about,\" Collin said smoothly. \"The lady was quite beautiful, was she not? I am sure both Mr. Roussel and I will be very grateful to anyone who treated her well, and not like a criminal fleeing the premises, instead of a young woman attending an emergency call from a family member.\" Satisfied when he saw the concierge blanch at his words, Collin moved away to where the valet held the car.\n\n\"Nicely done,\" Chess murmured with a grin, and slid into the back of the car, reclining and closing his eyes. He was exhausted from the night before. As much as his reputation preceded him, he was not as sexually active as the gossip columnists would have the public believe, and he had managed to cum three times in one night with that woman, one right here in this car. The vision of her on her knees before him gagging on his cock made his arousal stir again, and he groaned softly at the thought. How had he not at least gotten her name and phone number?\n\n*****\n\nChess glanced at Julia, who sat beside him as the chairman of the charity event they were attending took to the stage. She was exactly his type. So why did he keep comparing her to a woman who obviously didn't want to see him again? It had been a week since he had fucked Lucky, and it was all he could think about. He'd waited for her to come to him. She loved the shit they did together, she had wanted more, had challenged him on the basest level, and then just disappeared. He couldn't fathom it. He had never had a woman sneak off while he was sleeping before and completely vanish. He was usually the one that did the vanishing act in the middle of the night, leaving them the hotel room with a complimentary breakfast, as well as whatever else they charged to the room.\n\nJulia, his date for the night, was beautiful and cultured, and had escorted him more than once to these types of events. She was the type of woman men lusted after on many levels. She was smart, sophisticated, independently wealthy and sexy as fuck. She was no novice in the bedroom, and didn't mind a small spanking in context, but after the delights of the Siren who had lured him in with her sultry voice and sexy body last weekend, even Julia seemed lacking.\n\nPerhaps he could at least talk her into giving him a blow job in the car on the way back to the hotel he had booked for them tonight to ease his need for the mysterious Siren. He smiled at the thought. Yes, that would ease the need he felt, at least if it didn't, he would enjoy the ride.\n\n\"Have I told you that you look beautiful tonight?\" Chess whispered in Julia's ear and placed a hand on her thigh.\n\n\"You don't have to schmooze me, Chess, I'm a given,\" she laughed lightly.\n\n\"Let's go now,\" he murmured in her ear, letting her know just what he thought of her statement.\n\n\"Let's not,\" she gave him a look that told him she thought he was crazy wanting to walk out during the speeches. His Siren would have left with him, eagerly and without question, he thought morosely.\n\nHe sat and endured the rest of the night, longing for the physical contact of the woman beside him to help dull the ache he had felt since last Friday night. He had to move on and forget about her. She obviously didn't want to see him again. He groaned inwardly that woman had really done a number on his head, perhaps she really was a Siren sent to drive him crazy. In the car, as they headed to the hotel after the event, Chess pulled Julia to him and kissed her deeply, drawing her hand down to his crotch.\n\n\"What's wrong with you, Chess? You're acting like a horny teenager!\" Julia laughed.\n\n\"I am horny,\" he grumbled at the rebuke, \"But I'm no teenager, suck me, Julia,\" he said huskily, gently drawing her head down as he unzipped his pants. \"Right here, right now, I need it!\"\n\n\"We can't do that!\" she looked meaningfully over her shoulder at Collin, but wrapped her hand around his cock and stroked him half-heartedly.\n\nIt was a compromise, Chess knew, but he didn't want to compromise right now. He wanted the woman who made him feel powerful and in control, he wanted his Siren, and no matter how hard he tried he just couldn't stop comparing the other women in his life to her and how she reacted to him as if he was the most important thing in her world. It was a heady experience, and right now one he would give anything to recreate.\n\nAt the hotel, they fell on each other. Julia was as enthusiastic as ever, but despite being with one of the hottest women on the planet, Chess became frustrated with having to hold back on his desires and needs and became rougher until she had to cry out and make him stop.\n\n\"What the hell is wrong with you tonight?\" Julia asked, pushing Chess slightly away from her.\n\n\"Nothing!\" Chess snapped back. \"I was just trying to liven things up. Don't you ever just want more?\"\n\n\"More?\" she asked. \"Why would I want more? We are great together already. Are you saying I'm not enough for you?\" She accused.\n\n\"Fuck!\" he sighed. \"No, you're great, you're hot as hell, and you're right, we're great together.\" It was true. He liked Julia a lot. They had the same outlook on life, and she never pressured him for a commitment, being just as happy to play the field and have discreet affairs as he was. She was rarely seen in public with anyone but him, and, likewise, he tended to invite her to events he had to attend. To the outside world it would look as if they were dating. Only they knew otherwise.\n\n\"But you want more?\" she asked petulantly. \"I'm not enough for you?\"\n\n\"The reason you and I work so well is that you're not clinging, like other women. You're strong and confident and independent. Don't start being a whiny bitch now!\" he growled, getting up from the bed and walking to the mini bar for a drink.\n\n\"Now I'm a whiny bitch?\" she shrieked at him. \"Why? Because I wouldn't suck your cock in the car? Because I don't like sex as rough as you obviously want it tonight?\"\n\n\"No, that's your right, and I'm good with whatever you want sexually, but this...\" he waved his bottle of water between the two of them. \"This 'am I not enough for you' bullshit... What do you want from me, Julia? Do you want me to say I love you just the way you are and profess my undying love, produce a ring maybe?\" he scoffed. \"That's not us; that's never been us!\"\n\n\"Maybe not in the beginning, but people change,\" she said in a quieter voice, making him look up at her in shock. This was not what he had expected at all. If she had pulled this stunt before he met the Siren he might have considered it. He liked her, they had matching life goals, they were friends, good friends. Marriage to Julia would have been bearable and something he would have seriously considered. Now, though, now that he had experienced what he truly wanted with a girl who made him feel amazing, the idea of settling for Julia was somehow repugnant.\n\n\"Maybe we have both changed, but not in a way that brought us closer,\" he sighed. \"Can you honestly say I give you everything you need both in and out of bed?\" He climbed up onto the bed beside her and took her hand. \"Julia, you don't want a future with a bastard like me, I would only make you miserable because you can'tbe everything I need.\"\n\n\"I thought we had a great thing here! I thought you cared about me, maybe even loved me a little! I thought we would eventually have a future together!\" her voice was becoming high pitched and shrill as she tried to pull away from him, but he held her in place at his side, his strong arms coming around her and bending his head to kiss her gently and silence her for a moment.\n\n\"Julia, let's just take tonight, for example. You wanted to come with me to be seen and to mingle with the who's who of elite society. I asked you to trade places with me during the first course, you said no, because god forbid we should mess up the boy-girl place settings. It's odd, don't you think, that you didn't even notice the woman beside me flirting overtly and keeping her hand on my leg and occasionally even my crotch throughout the dinner. I would expect that if you cared for me, as you say, you might have noticed how uncomfortable I was.\" He said it, not as an accusation, just fact.\n\nJulia stared up at him, speechless, guilt washing over her features.\n\n\"I asked you to leave with me early. Once again you said no, because we just couldn't leave during the speeches, how would that look!\" He chuckled mirthlessly. \"I knew you wanted more out of the night, and the paparazzi hadn't been in to take photos yet, so we stayed, and I endured the boredom and the roving hands of the woman to my right, whose husband was as uncaring as you seemed to be.\"\n\n\"I'm sorry,\" she whispered. \"I didn't realise, you never said.\"\n\n\"Two people who are considering a commitment like marriage shouldn't have to explain themselves. I knew your reasons you didn't care about mine. Just as you didn't care about my needs in the car, even though you could tell I was hot and horny. Then, here, when I finally try and assert some male dominance into the night, you push me away and act like I am the crazy one. You don't want me, Julia, you want a lapdog. I can put up with your selfishness now and then, but I need someone who is going to put me first, not because they have to, but because they want to,\" he said, finally knowing it was true.",
        "\"I wanted to spank you, tie you up and punish you when we got back here tonight. I wanted you to want that and enjoy it as much as I do. You have no idea how much self-restraint it took to hold back as much as I did,\" he added, letting her know just what he needed from her that he knew she would never give him willingly. \"I don't care that much about public perception, but here, alone in bed, I need to be the dominant partner, and you can't even let me have that. You need a man whose needs match your own, just as I need a woman who enjoys my desires.\" He knew he sounded petulant, but it was only his disappointment that she couldn't be the woman he wanted, and the woman he wanted didn't want him, that made him sound that way.\n\n\"I could try the things you like, here in bed,\" she offered weakly, her nervousness showing in the way she licked her lips.\n\n\"I don't want a life of compromise, and, if you are honest with yourself, neither do you. We both deserve to get what we want to be happy,\" Chess said softly, kissing the top of her head. \"We're friends, we like each other a lot, let's not head down a path where we make each other miserable,\" he sighed. The idea of her trying the things he wanted was everything he could have asked for from her, if only this conversation had have happened a few weeks ago. Now he knew that her lacklustre attempts to please him would only frustrate and disappoint him. So, he chose the friendship over the sex.\n\n\"Have you met someone who can give you what you need?\" she asked softly, and he could hear the hesitancy in her voice as she asked the question.\n\n\"Maybe,\" he answered honestly. \"You'll be happy to know she ran away like Cinderella after the ball and didn't even leave me her shoe or her phone number.\"\n\n\"But are you going to try and find her again?\" Julia asked.\n\n\"Yes, I'm going to try,\" he said softly, trying to gentle the words he knew would be hurting Julia. He knew now without a shadow of a doubt that he needed to find his Siren and make her see how good they could be together, or at least how good exploring what they could have would be. One way or another he needed to have her by his side, or he needed to fuck her out of his system. As they lay there silently for the last time together, he considered how to go about finding the woman he wanted, craved, needed.\n\n\"You will meet someone too, who blows your mind and rocks your world the way you need him to so completely that you will wonder what you ever saw in me,\" he chuckled.\n\n\"She rocked your world, and you didn't even get her phone number?\" Julia asked sceptically.\n\n\"She fucked my brains out, I had nothing to work with,\" he chuckled, despite himself, and was relieved to see Julia laughed softly with him, despite the sad look on her face.\n\n*****\n\n\"What do you mean, you're not coming this weekend?\" Mikayla demanded.\n\n\"Dad's still not well, and Brian has a thing with Heather's family on Saturday, so I have to be the responsible on-call vet here. I can't make it, sorry. You know you can always come up here for the weekend,\" Ariel sighed.\n\n\"I guess it's been a while since I was there, but I thought we could hit some clubs and blow off some steam. It's been a pretty tense week trying to blow off the mysterious singer who left halfway through the gig with the boss as a gatecrasher. There are so many rumours going around, but I think the gate crasher story is finally sticking,\" Mikayla confided. \"It should all die down in another week, if that is why you are staying away. I doubt any of my friends would recognise you.\"\n\n\"No, that's not why. And we don't hang out with your work friends when I'm there, so, it wouldn't matter,\" Ariel said. \"I've got to go, but think about coming up tonight or tomorrow, we could hang out in Kelly's with Lara and Jack. I think Carly and Harry are coming back this weekend too.\"\n\n\"Maybe. Is something going on there?\" she asked, knowing that nothing ever happened in Ashton Hill.\n\n\"I think it's their nephew's christening,\" Ariel supplied.\n\n\"Alright, I'll give Lara a call and see if she and Heather want to organise a girl's night or something,\" Mikayla gave in rather than trying again to change Ariel's mind.\n\n\"Let me know what you come up with, it's not like I'm going anywhere,\" she sighed again.\n\nThe truth was she was grateful to be forced into staying home this weekend. Her thoughts had been filled with her wild night since she left him sleeping like a replete sex god. She hated that she had promised her friend not to see him again. Maybe if she saw him just one more time she could get him out of her system and move on like she always did.\n\nOnce she ended her call she went to google him again. She typed in his name and saw the latest media headlines regarding him. He'd attended a charity event last night with a woman who was, by anyone's standards, drop dead gorgeous, and together they made the perfect looking couple. A rock formed in the pit of her stomach. She had been stupid to think that he had given her as much thought as she had given him. He was wealthy and good looking, of course he had women all dying to leap into his bed and do his bidding. She snapped her phone shut, refusing to torment herself with more than just the headlines. Chess Roussel was history, he had moved on, and so would she. It had been a one-night stand, and that was all.\n\nShe busied herself with work, so grateful she'd had a legitimate reason to not be in the city where she could have been tempted to find him and see him again this weekend. She needed to stay close to home where she felt safe and secure, and no one could get to her and make her feel awful ever again. This was what she wanted, after all. It was how she lived her life now; Lots of fun and little risk of having her heart broken. She was all about the experience now, not the romance. Just as she had talked herself into a good headspace, her world came crumbling down again as David walked into the practice with a wide smile of greeting for her.\n\n\"Hey there, Ariel, you're looking amazing, as always,\" he said as if he hadn't left her standing at the altar with a broken heart; As they were old friends, who hadn't seen each other for the last two years. As if he hadn't called her fat and frumpy and middle-aged. As if he hadn't run away and left her high and dry, a broken, weeping shell of a woman. She wasn't that stupid, weak woman anymore, she was a completely different woman now, and David was about to discover that first hand.\n\n\"Thanks, you look about the same,\" she said in a deadpan voice. \"What do you want, David?\"\n\n\"I wanted to see you, talk, maybe. I'm going to be moving back home,\" David explained. \"I thought maybe we could get all the awkward shit out of the way and, you know, maybe be friends? We've got a lot of history, after all. I wanted to see if you wanted to grab dinner with me tonight.\"\n\n\"No, David, we can't be friends. Acquaintances, maybe. I won't make a scene or trash talk you to anyone, but I do not want to be your friend in any way, shape or form. You are a coward and a liar, and if you need a Vet for any reason, go over to Cedar Creek or somewhere else, just not here,\" she said in an emotionless voice. \"I don't want to see you, not now, not ever, and you can't blame me for that. That is all your doing.\"\n\n\"Okay,\" he said, holding his hands up in front of him in surrender. \"I get it, but it's a small town, Ari, and we will have to see each other from time to time. It won't hurt you to give me a chance to make things up to you.\"\n\n\"You can't, David. You can't take back what you did to me or my family who put so much time and money into that wedding to make it a special day. Trust me, David; there is no second chance here. You can't undo the damage,\" she said, keeping all the hurt and anger inside as she spoke calmly. \"Please go.\"\n\n\"Okay, I'll go, but I'm not giving up on you,\" David said, as if she was over-reacting to what he had done.\n\nShe watched him leave the practice and felt tears well in her eyes. She picked up the phone and called Mikayla back, she needed a quick Wonder Woman speech from her best friend to get over this little hurdle, and then she would be fine. It was crucial now that Mikayla came to Ashton Hill this weekend.\n\n*****\n\nAfter a disastrous weekend, and yet another charity event where Chess had treated his date badly, Collin decided to take matters into his own hands. He had watched Chess attempt to find the girl through contacting the band, then through the people in the PR department and finding pictures of her on the CCTV footage of the night, all to no avail. Collin, though, had sensed something out of place, and, after watching the footage of the night of the party again, had gone back to the PR department to field a few carefully placed questions of his own with photos of the girl who had gone by the name of Lucky that night in his hands. It was by carefully watching his hunch that he made another discovery about Lucky's true identity and how she came to be at the party.\n\nCollin walked into Chess's office and slammed the door behind him, making Chess's assistant jump in her seat. Collin was doing his best to calm his temper, realising this conversation was long overdue, and he had let his friend and employer suffer for too long. The woman he had driven home in tears on the weekend had not deserved the treatment she had received from Chess. The woman today had just been flirty while trying to serve them breakfast on their way to work when he had turned on her. Chess was becoming a belligerent bastard with everyone, including himself.\n\n\"Ask me!\" Collin demanded, making the younger man look up at him from his desk with a surly expression.\n\n\"Are we talking in riddles now? You've already pointed out what a bastard I am lately!\" Chess snapped.\n\n\"Admit how much you want to see the girl again and ask me to find her before you attack anyone else who doesn't deserve it! What you said to that woman today was totally uncalled for by anyone's standards!\" Collin berated him again. \"How long have we been friends? Ten years? Twenty? I have never been disappointed in you the way I have been this week! Stop being a complete bastard and ask me to find her for you instead of making the half-hearted attempt you have made at locating her!\"\n\n\"I tried, and it's not like she has reached out to me either!\" Chess spat back before throwing up his hands. \"She wasn't with the band, they'd never seen her before that night or since, and the public relations department has no idea where she came from! if she wasn't a wife or fianc\u00e9 then she was a gate crasher! The cab dropped her off at another hotel! And who do I ask for there? Lucky? I don't even have a real fucking name! No one recognises her picture, and the guy I hired to look into it hasn't come up with anything to go on! She vanished into thin air!\"\n\n\"Her name is Ariel,\" Collin sighed and fell into the chair opposite Chess's desk. \"Now ask me nicely how I know that,\" he said in a smug voice, happy that Chess had already admitted to himself that he wanted to see her again, if not to anyone else.\n\n\"Collin? How do you know that?\" Chess asked through gritted teeth, his frustration with so many false leads and dead ends making him reluctant to believe this was any different.\n\n\"Because I can read people, and I watched all the same CCTV footage you did from the yacht,\" Collin shrugged. \"I went and confronted the girl in PR who arrived with your girl, not believing it was just a coincidence that they arrived together and just happened to mention she was a singer. She still denied knowing her, but she got a call while we were talking, and I stepped away while she took it. It was her friend, one that could come back to the city now that everyone was buying the gatecrasher story. That friend's name is Ariel.\" He failed to mention that she also sounded concerned about a man called David upsetting her friend last weekend.\n\n\"The woman in public relations?\" Chess flipped through his diary where he had made notes on the people he had spoken to, that woman being one of them. Then he picked up his phone and called the public relations department. \"Send Mikayla Sullivan to my office, please!\" he barked and hung up, glaring back at Collin, who shook his head at him disapprovingly. \"How long have you known?\"\n\n\"A few hours. You need to ask for help, you know. I shouldn't have had to go and do that on my own because you were throwing a tantrum like a two year who had lost his favourite toy,\" Collin grumbled. \"Be nice to this young woman, or she won't tell you anything. I have the feeling that's the way Ariel wants it.\"\n\nTen minutes later Mikayla Sullivan was ushered into the office. She took one look at Collin, and she knew for sure why she was there. He knew. She wasn't sure how he knew, but she knew he knew.\n\n\"Have a seat, Miss Sullivan,\" Chess indicated the comfortable sitting area at the rear of his office and walked with her toward the couches. \"I'd just like to ask a few questions of a personal nature, if that's okay.\"\n\n\"Mr. Roussel, I'm sorry about the woman gatecrashing your party! I can't say it enough, it won't happen again, I promise!\" Mikayla said, quickly trying to head off any further questions.\n\n\"Is that because Ariel doesn't want to see me again?\" he asked bluntly.\n\n\"How...\" she gulped and looked away, trying to gather her thoughts. \"I mean...\" she tried again and cursed, knowing that it was always Ariel who knew how to fix tricky situations like this. The gatecrasher idea had been working perfectly, no one had questioned it except the other man in the room... Collin, she thought his name was. How had they found out her name?\n\n\"How do I know you invited a friend to a company personnel only event?\" he asked and watched her nod slowly, feeling relief that Collin was right spread through him. \"I didn't know until just now,\" he let his small lop-sided smile show.\n\n\"But you knew her name!\" Mikayla accused, feeling like she had been tricked into revealing her secret.\n\n\"You were overheard talking to your friend, and it was a fairly educated guess. Would you like to explain why you lied when asked if you knew who the woman was?\" Chess asked in a much calmer voice.\n\n\"Oh God!\" Mikayla groaned, not sure exactly how to answer that. She didn't want to blurt out all her best friend's baggage, but she felt like her job was on the line here if she didn't say something convincing. She needed to talk to Ariel; she would know what to do. \"Look, I don't know what to say here. Ariel told me it was a one-night stand and that she wouldn't do it again when I told her that you were my boss. I love this job, and I don't want it complicated by my best friend fu... I mean, sleeping with my boss. You can see how complicated that might become, right? Especially if the other guys in PR find out,\" she appealed to him.\n\n\"I see. So I had no say in whether I wanted that night to be a one-night stand or not?\" he asked, his bad mood swiftly returning.\n\n\"What Chess is trying to say is that he would very much like to see your friend again, or at least have the opportunity to convince her to have another date with him, himself, rather than having even that much taken away from him,\" Collin said in a friendly tone, reasoning with the young woman.\n\n\"I don't want to be rude or anything, but if you wanted to see someone again, wouldn't you try to get their name and number while they were with you?\" Mikayla pointed out the obvious in her own defence.\n\n\"She fell asleep before I could ask her, and I am not inclined to go through a lady's purse looking for answers. She left before the sun had risen while I slept, without even a note to let me know she was okay. I have been concerned about why she would have done that,\" he answered honestly.\n\n\"Oh, shoot, I don't know what to do now. Could you just let me call Ariel and ask her to contact you, would that be enough?\" Mikayla asked, still fearful for her job.\n\n\"Enough?\" He asked curiously. \"You are not in any trouble here, Miss Sullivan. Your job does not rest on whether your friend will see me again. Much as I would like to have that sort of power, I would never risk a good employee for my own personal agenda. I just want to talk to her and maybe see her again, that is my only agenda here,\" he reassured her. \"Call her; ask her if I can have her number or if she would like mine.\"\n\nHe stepped away, giving her a small amount of privacy to make the call. Then he considered what he would do if she said no. Was he crazy enough to stalk her to find out where she lives and confront her? Take her against her will somewhere where they could talk and fuck? Yes, fucking was high on his agenda of things he wanted to do to Ariel. 'Ariel,' he smiled. The name suited the Siren who had driven him so insane he was about to crash and burn if he didn't find her again.\n\n*****\n\nAriel was daydreaming again as she sat beside the surgery bench watching the small puppy as she came out of the anaesthetic. The cone she wore around her head to keep her from worrying at the stitches would frighten her when she woke, so Ariel continued to stroke the young pup's fur softly and let her mind drift once again to her wild night with Chess Roussel. She wished for the hundredth time that she hadn't promised Mikayla that she wouldn't indulge in a repeat performance of that night. What Mikayla didn't know wouldn't hurt her, she reasoned for the same amount of times, and sighed, knowing she would never do that to her friend.\n\nNo, there had to be something wrong with her that being treated the way he treated her turned her on so much. The dirty talk alone should humiliate her, even though he spoke the truth. She was a slut for him. She couldn't believe how eager she was to suck his cock in the car knowing the driver could see and hear everything. She couldn't believe how much she enjoyed the spanking and the crop and the exquisite pleasure he gave her when he denied her his cock as she begged for it like a nymphomaniac.\n\nYet, if he walked in here today she would want to do it all over again, and more. So much more, the more he promised her with his challenge. God, there had to be something wrong with her to spend all her time thinking about him and that night rather than planning her next trip to the city with Mikayla. She was supposed to be going this weekend, but she had been prevaricating each time they talked. The thought of trolling the clubs for a one-night stand like those she had enjoyed in the past had lost its appeal now. She wanted the naughty kinky fun that came with men like Chess, but she had no idea where else to find it, and she wasn't silly enough to advertise online the fact that she wanted to be spanked and whipped with a crop. She could only imagine the types of responses she would get.\n\nShe pulled herself from her reverie and stood, walking around the table once, studying the puppy and wondering if perhaps they had used a little too much anaesthetic. She did not seem to be in any distress, but it was taking longer than she thought it should for the cute little thing to wake.\n\n\"Come on, Teddy, wake up,\" Ariel said to the sleepy puppy, nudging her a little more than necessary, feeling restless now.\n\n\"I'll take over,\" Heather, Ariel's sister-in-law and the veterinary nurse said. \"Mikayla is on the phone at reception, she says it's urgent, and to remind you that answering your mobile now and then in office hours isn't a crime,\" she laughed.\n\n\"Thanks,\" Ariel smiled and stood, stretching her body upwards onto her toes before moving into the reception area.\n\n\"Hi, Mikayla, what's the crisis this time?\" she asked good-naturedly.\n\n\"You not answering your phone, to start with,\" Mikayla said in hushed tones.\n\n\"Why are you whispering? I can barely hear you,\" Ariel frowned, wondering if something really was wrong.",
        "\"Because I am sitting in Chess Roussel's office and he is only a few meters away from me pretending not to listen to me talk to you,\" Mikayla explained, surprising Ariel.\n\n\"I think you might need to explain why you are calling me from his office. You were the one who said mixing my pleasure with your business was bad. What the hell are you doing? I thought the gate crasher story was working!\" Ariel felt a strange mix of panic and pleasure at hearing Chess's name from her friend.\n\n\"He knows you're my friend, and he knows your name. He wants your number, or he wants you to call him,\" Mikayla said in a calm, if very hushed voice.\n\n\"Are you okay with me possibly seeing him again?\" Ariel asked tentatively. \"I'd never do anything to hurt you, Mickey, or your dream job.\"\n\n\"Yeah, he said he would never mix his personal business with company business, and he said he knew I was very good at my job and wouldn't risk me leaving by demanding I do anything underhanded. I didn't even think he knew I existed,\" Mikayla said proudly. \"He just wants to talk to my friend, that's it, and probably try to fuck your brains out again,\" she giggled, knowing how rattled Ariel had been after that night with Chess.\n\n\"Okay, you can give him my mobile number, not the one here at the surgery. Just let him know I can't always get to my phone until after work,\" Ariel said, feeling her heart beat faster and her hands become clammy at the thought of talking to him and maybe seeing him again. \"But just give him my number. Try and hold off on telling him all my deep dark secrets, okay?\"\n\n\"Okay. But which ones are deep and dark again?\" Mikayla whispered in a teasing tone and giggled.\n\n\"You're hopeless, you know that? You're very lucky I love you,\" Ariel laughed. \"I have to get back to a patient. Give him the number, it's all good. I'd like to see him again, as long as you are fine with it,\" she admitted, making sure her friend was as fine as she sounded. \"Besides, with David here, it might be exactly what I need, especially after last weekend,\" she sighed.\n\n\"Yeah, David's a total douche for pulling that bullshit stunt. Come down this weekend and get away from that crap. I'm good. Plus, I saw you the day after you were with Chess, remember?\" she continued to whisper. \"I know you wanted an encore performance, and so, it seems, does he,\" she giggled softly, then spoke louder. \"Go back to your patient; I'll let him know not to call until after surgery hours. Love you.\"\n\n\"Love you too, don't get into any more trouble without me,\" Ariel laughed and placed the handset back in the cradle. She smiled at this turn of events and wondered when she would get to see him again, and if he did, indeed, want an encore performance as much as she did. She grabbed her phone from her bag and tucked it into her pocket. Then she went back into the surgical room to check on Teddy, who was now laying in Heather's lap, whining softly.\n\nA minute later her phone buzzed with a text, and she pulled it from her pocket. She didn't know the number, but guessing who it was from she opened the message.\n\n*Thursday, 7th June 2018. Thank you for the number at last. I will call at seven tonight. Chess. 3.23 pm.*\n\nShe smiled widely at the commanding tone she could hear in her head as she read the text and went to check over her patient, making Heather tilt her head at her curiously.\n\n\"Good news, I take it?\" she asked, indicating the phone.\n\n\"I hope so,\" Ariel grinned back.\n\n\"That's good, you know your brother and I were worried about you after last weekend,\" she said kindly.\n\n\"Just because David came back to the family and town he ran away from doesn't mean he gets to come back to the girl he ran away from too,\" Ariel sighed. \"No matter what shit he tries to pull now. He can blame me until the cows come home for what happened and tell everyone he forgives me and wants me back, but it's a small town, and people know what happened. It's the pitying looks I can't handle,\" she sighed. \"I'm the girl jilted at the alter all over again. Not that we ever made it that far.\"\n\n\"That's not pity, Ariel, that's empathy, and, trust me, Brian said more than a few harsh words in the warning he gave him. He won't get very far if he intends to harass you and your friends when you go out again,\" she reassured Ariel.\n\n\"Maybe it's my turn to have an adventure and move to the city with Mikayla for a while. I could pick up some locum contracts to offset getting someone in here to help out while I was gone,\" she tested the idea on Heather, who smiled encouragingly.\n\n\"I don't know what your folks would think, but maybe just for six months or so it might be some fun,\" she grinned as if they were planning a surprise party or something fun rather than defection from the family home and business.\n\n*****\n\n*Thursday, 7th June 2018. I am stuck at work for a little while yet. Could I call you when I get home? Ariel 6.46 pm.*\n\nChess grumbled to himself as he read the message. Glad that she had returned his earlier message at last, and had his concerns eased that he had been given the right phone number for her. Concerned that he would have to wait and that she may think better of it and not call at all. He drew a breath and replied.\n\n*Thursday, 7th June 2018. I'm sorry you are stuck at work. You can call me any time you wish to, you have an open invitation. Would you like me to call at nine, instead? Chess 6.51 pm.*\n\nChess waited impatiently for her reply, going over the small titbits of information he had managed to get from Mikayla. Ariel Aronova was a Vet, which was why she had been seeing a patient when Mikayla called. David was her ex, and Mikayla had not wanted to discuss that situation at all, but from her body language he could tell she didn't like David, and that there was something about him that concerned her. He also knew her phone number now, and he smiled as her answering text came through.\n\n*Thursday, 7th June 2018. Thank you for the open invitation. I should be home and settled in for the night by nine, so, yes, that would be good. Ariel 6.54 pm.*\n\nGreat, now he just had to occupy two hours of time. He went to find Collin and see if he wanted to shoot some pool to while away the time, because there was no way he could concentrate on work right now. He was lining up a shot just over an hour later when his phone buzzed to life on the table. Dropping the cue, he snatched it up.\n\n*Thursday, 7th June 2018. Would now be a good time for you? Ariel 8.24 pm.*\n\nChess immediately called her, taking a quick sip of his beer before lounging on one of the more comfortable chairs in the room, and Collin eyed him speculatively. She answered on the second ring, sounding unsure of herself.\n\n\"Hi,\" she said, almost like a question.\n\n\"Hi,\" he replied, unable to help the smile that spread over his face. \"I finally found you again.\"\n\n\"I wasn't exactly lost,\" she gave a nervous laugh.\n\n\"I need to see you again. I haven't thought of much else over the last few weeks, other than finding you and seeing you again,\" Chess said without trying to hide his eagerness. \"You left without saying a word, not even a goddamn note!\" he let the disappointment tinged with anger creep into his voice.\n\n\"I'm sorry,\" she said quietly. \"It was just... complicated.\"\n\n\"Mikayla told us about her concerns, but she is a good employee. All of her concerns were unfounded,\" he told Ariel the same thing he had told her friend. \"I don't let my emotions interfere with business. Whatever might or might not happen with us is totally separate from Mikayla and her work environment.\"\n\n\"She told me. She was quite excited that you even knew who she was, let alone knew she was good at her job,\" Ariel giggled. \"I think you made her day when you said that.\"\n\n\"She made my day when she gave me a way to contact you,\" he said sincerely. \"I meant it; I want to see you as soon as possible. I'd come over tonight or have you come here if you'd agree to it.\"\n\n\"That would be difficult. I don't live in the city. I stay with Mikayla when I go down on weekends, not that I can make it there every weekend,\" she admitted.\n\n\"You don't?\" Chess was surprised at the extra obstacle he had just found in his way in his quest to see this girl and make her commit to dating him exclusively. He had a lot to offer her, but the distance could kill them before they even started if she lived too far away. \"You must live reasonably close if you can drive down for a Friday night party on some guy's yacht.\"\n\n\"About two hours away, maybe less if you drive while wearing a lead boot and the traffic is good,\" she explained cheerfully. \"I quite like the drive, it gives me time to clear my head and dust off the small country town frame of mind and look forward to the fun of the city.\"\n\n\"So I guess tonight is out of the question,\" he chuckled. \"Tomorrow night then, we will come and pick you up in case you run late again.\"\n\n\"That's a long way to come and pick me up. Most of the date, if it is a date you want, would be spent in your car,\" she said as if he was crazy.\n\n\"As I recall, having you as my date in the back seat of the car opens up more than a few interesting possibilities,\" he, too, chuckled. \"You were quite eager, as I recall, to relieve some of my tension, and I have been tense for weeks since you left without a word.\"\n\n\"I've been thinking a lot about that night too!\" she admitted with a breathy sigh.\n\n\"What time do you finish tomorrow?\" he asked huskily, turned on by the mere sound of that breathy sigh.\n\n\"Barring any emergencies walking through the door, I could be finished by three, I have an early start in the morning, so my brother will cover the afternoon shift once he has picked his kids up from school. So it's probably more like three thirty before I actually get to leave,\" she explained in a rush of nervous words.\n\n\"Give me your address and I will be there!\" he commanded, using that tone for the first time in this conversation, but unable to stop himself any longer, as the possibility of seeing her and punishing her for leaving him the way she had loomed large in his mind. He wanted to spoil her and treat her well, he wanted to take her out and show her some of his favourite places, but his need to take her and use her willing body the way she had let him that first night overrode all his logic and charm at this point.\n\n\"I... umm...\" she hesitated, and Chess felt a small ball of fear that he had pushed her too far enter his gut.\n\n\"I will be nothing but a perfect gentleman towards you and your family while I am in your town,\" he reassured her.\n\n\"Oh no, it's not that!\" she said quickly. \"I never doubted that. It's just...\"\n\n\"Tell me!\" he ordered, the concern in his voice coming out in his commanding tone.\n\n\"My ex has just moved back to town and has been creating awful scenes whenever he sees me. If you rock up in your big black car with your driver looking all handsome and sexy, I can only imagine what the grapevine will sound like and what he might do in response,\" she said. \"Maybe it would be better if I just drove down to the city myself and met you somewhere. You could pick me up at Mikayla's place, maybe,\" she offered as an alternative.\n\n\"I think I would like to meet your ex!\" he growled. \"You still haven't given me your address, considering you think I am handsome and sexy and want to jump me again in the back of my car,\" he teased as he pushed her for the information he wanted.\n\n\"I never said that! You were the one who said it had interesting possibilities!\" she laughed.\n\n\"You don't want to jump me in the back of my car?\" he asked dejectedly.\n\n\"I didn't say that either!\" she laughed even more.\n\n\"Then give me your address and let people talk, you know they will just be jealous because I'm too sexy for my car,\" he chuckled. \"I'm happy to meet big brother while I am there, if you want, so people know who I am and can google me for the really good gossip. If you are going to date me you have to get used to that sort of thing,\" he warned her. \"It doesn't matter whether we are in the city or the country; there is always one madman with a camera. People are going to find out who you are dating eventually.\"\n\n\"Oh God, I hadn't thought of that! Maybe this isn't such a good idea. I mean, I'm more than a little bit country, and you are all rock and roll city life. I could never fit in with your friends, and Ashton Hill would be far too small and boring for you,\" she sighed.\n\n\"Ashton Hill,\" he smiled into the phone. \"I'll be at the Ashton Hill Veterinary Clinic tomorrow at three,\" he said, pleased that she couldn't back out now by withholding information from him again. \"Be prepared to talk tomorrow, I want to know everything there is about you and that little country town of yours. And pack light, you won't be needing much.\"\n\n\"Wait! What just happened?\" Ariel spluttered.\n\n\"We have a date, Ariel, and I am very happy about that fact. I have wanted to see you again so badly. You have no idea how much the very thought of you has driven me crazy over the last few weeks. I need you, not just want you, need you!\" he said, letting a little of his desperation creep into his voice.\n\n\"Okay,\" she said after a moment, a little overwhelmed by his heartfelt words. \"We have a date,\" she agreed.\n\n\"I'm looking forward to it. I'll see you tomorrow. Get some sleep, you will need it for tomorrow,\" Chess grinned, even though he knew Ariel couldn't see him, then looked up and saw Collin grinning back at him. \"Good night, Ariel.\"\n\n\"Sweet dreams, Chess,\" she replied, still sounding stunned.\n\n\"They will be now,\" he chuckled and ended the call.\n\n\"So, we're going on a road trip tomorrow, I take it?\" Collin chuckled.\n\n\"Hell yeah!\" Chess continued to grin at his friend. \"In the limo!\" he said, and burst into a loud chuckle. He would make sure everyone knew that Ariel was dating a rich and powerful man who was prepared to give her anything her heart desired in return for her kinky mind, body and heart.\n\nChess stood up and went to his office, followed by Collin. He had a lot of work to do to clear his calendar tomorrow, and possibly Monday if he could manage it, and ensure he had a long weekend to convince Ariel that he was the guy she was meant to be with. He also needed to make plans with Collin; he knew his friend would be more than happy to do whatever it took to make sure Chess succeeded in this.\n\nOutlining his ideas quickly, and taking into account Collin's suggestions, they each went to work, going to bed for a few short hours in the early morning before rising to complete the tasks they had set for themselves. Collin had been married once, he had found the love of his life once, then lost her to cancer, and he had no plans to taint that memory or put himself through similar heartache by loving so deeply ever again. He wanted that sort of love for his friend, however, knowing how truly good it was to find the other half of yourself; and he would move heaven and earth to make it happen for the man who was closer to him than a brother might have been.\n\n*****\n\nChapter 3.\n\nAriel checked her watch, it was just after eleven, and she had a few more hours before she had to make the dash home to change before Chess arrived to pick her up. It was ludicrous that he would come so far when she could have driven herself down to the city. She checked her patient and continued cleaning up after the simple but necessary dental surgery. The thought of what might lie in store for her tonight playing out in her mind. If he wanted her to beg him to stop any of the things he had done to her on that first night he would be disappointed. She knew she shouldn't want it as much as she did, but just the memory of it had fed her fantasies for the last few weeks. Hearing the door open, she looked up as Heather came into the operating room, looking flushed and excited.\n\n\"There's a man out there,\" she said quietly. \"He's... um...\"\n\n\"Scary? Weird? Carrying a chainsaw?\" Ariel asked teasingly, throwing the last of the waste into the specialised bins and noting the excitable expression on Heather's face.\n\n\"Hot! Handsome! Umm...\" Heather exclaimed, searching for a more fitting word.\n\n\"More handsome than your husband?\" Ariel laughed. \"You do remember you're married to my brother, don't you?\"\n\n\"Yes, but I can appreciate a hot man when he walks in,\" she laughed. \"He's asking to see you. Is there something you want to tell me?\"\n\n\"Asking for me?\" Ariel checked her watch again. \"What time is it?\" She tapped her watch as if it might be broken.\n\n\"Just after eleven. Why?\" Heather asked giving her a suspicious look. \"Brian will be back any minute if you need to take a break.\" She grinned knowingly.\n\n\"Shit! Brian!\" the thought of Chess running into Brian and introducing himself panicked her. She didn't even know what they were to each other, let alone how to introduce him. She hurried to remove the scrubs she wore, hoping to head off any such meeting and wondering why he would be here so early, if it was him. Sure, he was the only gorgeous guy she knew, it could be a new sales rep maybe, but then they wouldn't ask for her, they would ask for her Dad or Brian. She hurried out to reception.\n\n\"Chess? What are you doing here?\" she asked, coming around the front counter to greet him. He looked almost casual in tailored jeans and a white button-down shirt. He still looked expensive and amazingly delicious, but he wouldn't stand out quite so much in this town as he would have in an Armani suit.\n\n\"I couldn't wait until three, so I came to see if I could take you for lunch on your break,\" he pulled her close with one arm lightly around her waist and kissed her lightly. \"Hi, I missed you,\" he murmured.\n\n\"Hi,\" she grinned. \"It's good to see you too. I just did surgery on a puppy, so I really shouldn't leave for a little while, sorry.\"\n\n\"I'll just call Brian and see how far away he is, I'm sure you will be fine to go, I can keep an eye on Lucy,\" Heather said helpfully, picking up the phone to call her husband.\n\n\"Thanks, that would be great,\" Chess flashed Heather one of his winning smiles, then turned back to Ariel. \"Just lunch, then I'll explore your little town until you're ready to go,\" he said softly. \"I wanted to bring you flowers, but it occurred to me that I have no idea about what you like, anything that you like aside of white wine. I think we need to spend a little bit of time talking before I get you all to myself and get carried away with other things again.\" He looked at her intensely, and his voice dropped lower as he spoke of other things, making a thrill run up her spine.\n\n\"He's just pulling in now,\" Heather said brightly.\n\n\"Okay, what's the emergency?\" Brian said as he walked into the practice the siblings shared with their father.\n\n\"Your little sister has a spur of the moment lunch date, and you, my darling, need to cover the post-surgery care for Lucy,\" Heather announced as Brian turned to stare at Ariel and the tall, well-built man who stood beside her.\n\n\"Brian, this is Chess, Chess, my brother, Brian,\" she introduced the men, cringing at the way Brian squared his shoulders as if he was about to give Chess a big brother speech.\n\n\"Hey, good to meet you,\" Brian said, surprising Ariel, who breathed a sigh of relief. \"So, an hour or so, Ari?\" he asked Ariel. \"I have to get over to the stud just after lunch if you want me to pick up the kids and be back before you leave for the city,\" he explained why he was putting the time limit on her.\n\n\"Yeah, thanks, Brian. Lucy should be fine, it all went really well,\" she said, \"I'll fill you in while I grab my phone and bag.\" She left Chess alone to enter the back of the practice with Brian, leaving Heather in reception with him.\n\n\"Thanks for not being weird out there,\" she said after she handed over her notes on Lucy to Brian.\n\n\"I'm just happy you're not letting all the crap David is doing get to you. Chess seems decent enough, and at least now David might realise there is no hope for him and back off for good,\" Brian said gruffly.",
        "\"Let's hope we don't run into him,\" Ariel grimaced and grabbed her bag. \"Thanks, Brian, I'll be back soon.\"\n\n\"Ready,\" she said brightly, walking back into the practice reception.\n\n\"Let's go then,\" Chess said with an answering smile, guiding her out to his waiting car and Collin, who smiled warmly at her. \"You remember Collin?\" he asked.\n\n\"Yes, of course. Hello,\" Ariel said, a slight blush forming in her cheeks as she remembered what she had done the last time she was in a car with these men.\n\n\"It's lovely to see you again, Miss,\" he said in a quiet voice as he opened the door for them.\n\n\"You realise there isn't as much choice for places to eat here as there is in the city,\" Ariel said as they settled in the back of the car.\n\n\"It better be somewhere close, or I won't be responsible for what happens in this car,\" he pulled her close, kissing her, his hand skating down her side to her hip and squeezing it with increasing pressure until she whimpered into his kiss. Then he released her and smiled, \"Somewhere to eat?\" he prompted, enjoying the needy expression on her face.\n\n\"Caf\u00e9! Next to the bakery, in town!\" she said breathlessly, not knowing how this man had such a powerful influence over her.\n\n\"Got it,\" Collin said, and turned the car toward the centre of the town. He had talked Chess out of bringing the limo, choosing instead the big luxurious SUV that spoke of money and power without being so obvious about it in a country town.\n\n\"You left me without even a note to tell me you were okay,\" he murmured close to her ear. \"I was worried about you. You were so totally amazing that night, I couldn't believe you ran away because I scared you. You loved everything we did and wanted more. Did you change your mind?\" He asked, looking at her face intently for the answers he needed.\n\n\"No,\" she said quietly. \"It was like nothing I had ever experienced before. All of it, from what we did in here,\" she paused and glanced at Collin, \"to what we did in the hotel room. I loved it, wanted it, wanted you, wanted more,\" the words she had held pent up exploded in a rush. \"That wasn't why I left.\"\n\n\"Thank fuck for that!\" he breathed and kissed her deeply. He groaned as he ended the kiss. \"Tell me why you vanished then!\" he demanded.\n\n\"I promised Mikayla. She wasn't happy that I was flirting with you on the yacht. I shouldn't have been there in the first place, and when she saw me with you, she freaked out. That's her dream job, and I wouldn't do anything to hurt her. I promised that if she let me finish what we started, it would stay a once off thing,\" she tried to explain. \"I had no idea you would be worried. I just assumed... I mean, you do have a reputation... I just assumed you would be relieved that I was gone.\"\n\n\"I wasn't, but loyalty is a good trait to have. I understand not wanting to ruin anything for your friend, but that was never a possibility. I'm not so vindictive that I would fire your friend if things didn't work out for us,\" he shook his head, not understanding Mikayla's thinking.\n\n\"I probably would have left anyway, but I wouldn't have stayed away from you the way I have. I do want more, and the idea of a typical one-night stand with someone normal didn't interest me at all since being with you. I haven't wanted a relationship or commitment, and never wanted more of a guy since... well... for a long time until you, and what you did to me.\"\n\nThe car door suddenly opened beside her, looking around in surprise, she realised that she hadn't even noticed they had stopped moving and Collin had gotten out to open her door for her. Startled, she slid out, thanking him and waiting for Chess to meet her on the pavement.\n\n\"The caf\u00e9 is new, a friend of mine runs it,\" she said as they walked toward the counter to order something to eat.\n\nOutside of the car, Chess was sweet and attentive, giving no hint to the darkness behind his smile. They talked about the town and the people and themselves. He found out her favourite things, but subtly introducing subjects into their conversations. He assured her that he and Collin would be quite content to occupy their time until she finished work, despite his eagerness to see her today.\n\n\"I needed answers, and I needed to look at you when you gave them to me. You have a very expressive face, and I would know if you weren't as excited to see me again as I was to see you, or if you were not as eager to face the challenge we set ourselves last time as I was,\" Chess said. \"I needed to know that before I picked you up for the weekend I have planned for us.\"\n\n\"Do you believe me?\" she asked, worried that now that he had seen her in the middle of the day looking far from glamorous with her hair pulled back and not a scrap of make-up adorning her face. \"Have you changed your mind about me?\" Her anxiety crept into her voice as she asked the question.\n\n\"Far from it,\" he chuckled. \"I want you even more.\"\n\n\"Everything good?\" Lara asked as she cleaned the plates from the table.\n\n\"Amazing, as always, Lara,\" Ariel smiled.\n\n\"Yup, amazing,\" Chess agreed.\n\n\"You and I need to catch up, Ariel. I can't believe you've been hiding Chess from the town gossips,\" Lara grinned at Ariel. \"Not that I blame you with the way David's been acting since he got back.\"\n\n\"Ah, yes, the infamous David. I'm hoping to meet him while I'm in town,\" Chess said in a cheery voice, belying how he really felt about the man trying to bully and threaten Ariel into restarting their relationship after dumping her so publicly several years ago.\n\n\"Are you staying in town for the weekend?\" Lara asked.\n\n\"No, just until Ariel finishes work this afternoon. We have plans in the city tomorrow, but I imagine I will be back often enough to get to know the locals,\" Chess said easily.\n\n\"You will have to have dinner with Jack and me sometime then,\" Lara invited.\n\n\"Sure, I'd like to get to know Ariel's friends here,\" he agreed easily. \"I better get her back to work before her brother wonders if I've kidnapped her though,\" he chuckled and got up to guide Ariel back out to his waiting car. Collin appeared to open her door for her again, and she smiled, thanking him, as not only Lara but several locals watched on.\n\nOnce in the car, Chess pulled her into his arms and kissed her deeply and possessively, only breaking the kiss when once again she had whimpered breathlessly for him. Then he held her against his chest and spoke in low husky tones.\n\n\"I have never felt this way or wanted a woman like this after just one night,\" he admitted, letting her know just what an effect that night had on him. \"I want to punish you for leaving me the way you did, without any way of contacting you. I would never make you do anything you couldn't handle, but I believe you're going to love the punishment I have in mind and beg me for more,\" he murmured in a husky whisper. He sat back, tilting her face up to his so he could read her expression, and grinned after feeling a small tremor of anticipation run through her. \"We are meant to be together, you know that, don't you?\" he questioned, searching her face. \"This weekend will prove it to you if you have any doubts at all.\"\n\n\"I... umm...\" Ariel had only thought about seeing him again. She had no real thoughts about the future, and, by the way he was talking, it seemed he had given it a great deal of thought. The idea of committing to a man and giving him the power to hurt and humiliate her on an emotional level in such a public way made her feel ill. \"You're talking like you have thought about the future, and I am still marvelling at the fact we have a second date, not that the first time we were together was a real date or anything.\"\n\nChess could see the anxiety in her expression and hear the reticence in her voice and decided for now not to push her any harder right then. There would be time for that, and he could live in the moment for now. She was here with him and wanting all that he could give her. He smiled softly and stroked her cheek before bending and claiming her mouth again. Then the short ride back to the practice was over, and Collin was opening her door again.\n\n\"What will you do for three hours?\" she asked worriedly as he released her so she could leave the car.\n\n\"I have a few appointments, I'm going to meet with Paul Ashton, and possibly Grayson Ryde, if he is available,\" he said easily. \"I'm considering making a few investments that might bring me back here now and again if you continue to mesmerise me like the siren you are,\" he grinned lopsidedly at her.\n\n\"Seriously?\" Once again she felt the fear and anxiety of commitment looming over her. She had believed this was just about the sex... The mind-blowing awesome kinky sex that she wanted more of, but he seemed to be thinking long-term.\n\n\"I want you, Ariel. Not just your body, but all of you,\" he said softly and stroked her cheek. \"You will have the opportunity to know who I really am as well,\" he added, puzzled by the depth of her anxiety. \"Now go to work and call me as soon as you are ready to leave this afternoon!\" he instructed in his commanding tone, making her smile. Then they both got out of the car, and he walked her into the practice to deliver her back to her brother and sister-in-law.\n\n\"Thank you for lunch, that was a genuinely nice surprise,\" she leaned up to kiss his cheek; and he caught her with an arm around her waist and pulled her into a soft embrace.\n\n\"For god's sake, wear a dress or a skirt for the drive to the city unless you want Collin to get a full show,\" he murmured into her ear, chuckled, and kissed her chastely on the mouth before releasing her, pleased at the small blush that crept into her cheeks.\n\nAriel watched him leave and get into the front of the SUV with Collin, then walked back into the surgery to check on Lucy and let Brian know he was free to leave while trying to get a handle on her warring emotions. She wanted this, she wanted the experience that being with him brought her, but he was far more invested in a relationship with a future than she had even contemplated, and the thought scared her.\n\n*****\n\nChess walked into the real estate office and gave the receptionist a winning smile that left her flustered. He held up his phone for her to view and inquired about the lake house for rent. The house wasn't ideal, but it would do until he found something more suitable or could purchase it and make the necessary upgrades and renovations. His eyes scanned the room, finding the only man who could possibly be David Henning talking to an older man, his father, no doubt. His smile faded as he took in the man who tormented Ariel since his return to this town, and his features hardened.\n\n\"I'd like to see this property today, now, if possible!\" Chess said in a voice made hard by his feelings about David and Ariel.\n\n\"Certainly, if you will give me a moment, Sir,\" the girl said, batting her eyelashes at him and moving away from the desk, seemingly oblivious to his change of mood.\n\nChess watched as the two men looked up from their conversation and eyed him speculatively. It didn't take them long to register wealth when they saw it, and within minutes he was following the younger of the two men to the house he wanted to see. The pictures hadn't done it justice. It was modern and well appointed. It had great views of the lake, and he would have to do very little to the overall structure to make it a decent part-time home for when Ariel couldn't come to the city to be with him.\n\nHe liked that she had a career and a life of her own, and he had no intention of taking that from her. He did, however, plan to be with her as much as possible, and if that meant making compromises in his own life for now, then he was prepared to do that. He could work part-time from anywhere, as long as he made into the office for the important meetings and such, which he could schedule strategically to make being here possible. He could see that his future planning made her nervous, but he planned to change that for her this weekend. They would begin to learn as much about each other out of the bedroom as they were eager to do in it.\n\n\"It's great, I'll rent for at least a month starting today. Draw up the contract, I can play in advance, and I'd like to pick the keys up no later than three. Can you do that?\" he asked in a brusque business-like way.\n\n\"I'll need to contact the owner,\" David said, bristling at being given orders by this man. It was a rental, and the man hadn't even been approved yet.\n\n\"Certainly, I'm sure if you tell them Chess Roussel is interested in the property they will be fine with that. Better yet, why don't I talk to them myself,\" he suggested.\n\n\"I don't think that would be appropriate,\" David said, trying to maintain some authority in the face of Chess's commanding presence.\n\n\"Sure, you have to do your job, but let them know if I enjoy my time here I will consider buying it from them, at above the market price, of course,\" Chess said easily.\n\n\"You are thinking of settling here?\" David asked, curious now.\n\n\"Part-time, my girlfriend lives and works here at the moment. She has family here, so even if she moves to the city with me, I believe we would be back often enough to warrant a place of our own,\" Chess said casually as he stepped out onto the deck. \"The house needs some upgrades, but it's not in bad shape. I'd be interested to hear what the owner thinks of my proposal.\"\n\n\"Your girlfriend?\" David asked, wondering who the hell in this little town had snagged a guy wealthy enough to rent at exorbitant prices and make an offer to buy like this on a whim.\n\n\"Oh, that's right, small town and all, you probably know her,\" Chess chuckled. \"It will take me a while to get used to the small-town vibe.\" He turned, and watching David carefully, he told him exactly who his girlfriend was. \"Do you know Ariel Aranova? She's one of the local vets.\"\n\n\"You must be mistaken!\" David said, his whole body going tense and his fists clenching. \"She's my fianc\u00e9!\"\n\n\"No, Dave, I'm not mistaken, and she isn't your anything, and hasn't been for years. I don't know what's going on in your deluded little mind, but if you continue to harass her in any way, I will become your worst nightmare. Do we understand each other?\" Chess threatened in a deathly quiet voice as Collin moved steadily back toward him, as if daring him to argue with him. \"Now be a good man and call the owners so Ariel and I can move on with our lives together.\"\n\n\"I don't think you're the right tenant for this property after all,\" David smirked, thinking he was getting one up on the rich bastard who thought he could just waltz into this town and take what he wanted, including Ariel.\n\n\"Well, that's a shame,\" Chess said thoughtfully. \"Luckily I am not a man to be dissuaded so easily. Thank you for the tour, we can show ourselves out.\" He mentally checked two more things off his to-do list in his mind and climbed into the SUV with Collin.\n\n\"You couldn't be a bit more creative than using that old clich\u00e9?\" Collin grumbled as he slid into the car beside him. \"Your worst nightmare? Have I taught you nothing over the years?\" he rolled his eyes.\n\n\"It's a classic!\" Chess chuckled and sat back, checking his phone for emails and messages as they drove to their next appointment. He was the new player in town, and he meant to make his presence felt today.\n\nHe met with Paul Ashton and Jack Delany about the search and rescue helicopter team, pledging a sizable donation to the cause, then went to a late lunch with both men and Mike Carter from the town council. Over lunch, he lamented his harsh words with David, and subtly spoke of his wish to speak to the owner of the property. Mike had come back with the name and contact detail within ten minutes and offered them to him, quietly knowing he shouldn't, but then David had little right to refuse his clientele based on who he was dating. Chess called Grayson Ryde then, and was immediately welcomed to meet him at his offices.\n\nHe knew who owned the property all along, but as he was following his own business agenda as well, it was good to have a legitimate reason for having that information. He had been welcomed warmly, knowing that in the business world that his reputation preceded him. Grayson, too, was in that elite class of wealthy businessmen who owned and ran family empires with their siblings.\n\n\"I didn't realise you had a showroom here on site,\" Chess said, looking up as Grayson walked into reception to greet him.\n\n\"See something you like?\" Grayson asked curiously. These stones were large, perfect and very expensive, unlike those that went out to the stores; these were for buyers with discerning tastes and very large bank accounts.\n\n\"Yes. Do you have a jeweller on site as well, or do you just sell the stones?\" Chess asked.\n\n\"My sister dabbles in jewellery, but we sell the stones and make suggestions of jewellery designers who might be to the client's tastes,\" Grayson said easily. \"Stones of this quality need to be treated with a practised and delicate hand.\"\n\n\"I haven't come to talk about jewellery, although I must admit I have some ideas about this one,\" he pointed to a large aquamarine, \"Is your sister here? Perhaps she could give me her take on my idea once our other business is done?\"\n\n\"I can call and see if she is available. Would you like to come into my office?\" Grayson invited.\n\n\"Thanks,\" Chess strode through the doorway to the offices and took a seat opposite Grayson's desk. \"I won't beat around the bush here. I went to see your lake house today. it's exactly what I was looking for. The agent you have it with wouldn't rent it to me, nor would he offer you my proposal to purchase it because of who my girlfriend is. So here I am making the proposal myself.\"\n\n\"I see,\" Grayson frowned. \"And your girlfriend is?\"\n\n\"Ariel Aranova, the local vet, or one of them,\" he said easily. \"They used to be a thing when they were in high school apparently.\"\n\n\"Yeah, I know the story,\" Grayson sat back in his chair, considering the man before him. He could do a lot for this little town if he had a vested interest here, and the only reason he had been renting out the lake house was that the price range was out of reach of most locals, and outsiders rarely settled here or wanted a permanent holiday home to maintain. He would happily let go of the last vestiges of his time with Rheagan, but he had no intention of making it too easy for this man, who was obviously used to getting his own way. He hadn't taken no from the real estate agent, after all.\n\nIt was after three when Chess walked out with two stones, a simplified drawing of a bracelet and ring, as well as the keys to a house he was about to buy, all for Ariel. He took a breath, now he just had to convince her that they were meant to be, not just for a weekend every now and then, but into the future as well. She was amazing; she was exactly what he wanted in a woman... Intelligent beautiful, poised and sweet, but with a kinky streak that matched his own dark needs in the bedroom. He wanted her so badly, and he had occupied his mind with other things all afternoon so that he didn't attack her as soon as he had her all to himself. Though that was still a high possibility, he grinned.\n\nToday had gone well and only promised to get better. Chess felt happier than he had in months, maybe even years. The only thing that could have made today better was if he could have seen David's face when his father informed him that he had blown a million-dollar sale that Grayson had been forced to handle privately due to his lies and insults.\n\nHis phone buzzed in his hand, and he smiled. Ariel was ready and waiting for him, as if on cue. This day truly was perfect. Chess was still grinning widely as he stepped from the car and drew Ariel to him. She wore a knee-length dress with a full skirt and a fitted bodice held up with thin straps that ran over her shoulders. Yes, it would do perfectly for what he had in mind."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "spanking",
        "siren",
        "crop",
        "small-town",
        "siren song story"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashton-hill-siren"
}