{
    "title": "The New Principal Ch. 10",
    "pages": [
        "I thought about doing a quick walk through town, but that could keep until the weekend. I had enough food at home that I could throw something together quick and do some planning for the rest of the week. \n\nSo, a couple hours after leaving the office I was soaking in that huge clawfoot tub with my laptop sitting on a bath caddy. I was looking over Bright Hall's budget. It was bad, no doubt about it, but it wasn't a complete disaster. The big problem was enrollment. We were down to about 150 students. Several years ago, they were nearer to 300. If we could get a portion of that gap back, we could be okay.\n\nWith that in mind, I put together an outline for a new advertising campaign. We would need a totally new website, brochures, visits to local high school counselors, and a whole lot more. Money and more money, but it was necessary. We could start making the push to pitch Bright Hall as an exclusive pre-university option. I emailed Kimberly to put her in charge, but she responded at once suggesting that Veronica would be perfect to handle that. Turns out the librarian is a bit of a geek. If we could get her on board as librarian and tech guru, that would be a real coup. \n\nThe evening went quickly, but before I went to bed, I wanted to do a quick check of the cam room. I had a little more time to look things over, but I didn't learn much more than I already suspected. It was a fairly simple setup, just a shell with camera feeds coming in. It didn't seem like I could tune in any other feeds though. Kimberly's was still the only one I could access, but it was clearly set up for many more. But something seemed suspicious about Kimberly's. She was already asleep. Still adorable, but I felt even more like a creep watching her sleep in that weird green tinted screen. Did she just keep it on through the night? Did people pay for that? Was I paying for that? Or the school? I needed to take a closer look at the budget.\n\nJust add those to the long list of questions I couldn't answer yet. I cleaned things up down there and then went to bed. \n\nI didn't have another erotic dream like the night before, but I woke up very early and very horny. I wanted to get in to the office early, but I still had a few hours, and for some reason didn't feel tired at all, so I thought I would work off my horniness with a short run. I had to do something to burn off this energy so I didn't show up to the office packing wood and leering at ever pair of legs on campus. \n\nI used to run almost every day back in high school and college, but I fell out of the habit when I started working. Along with that, I started gaining extra weight. I wasn't too heavy, but I was rounder than I would like. New job, new life, new running habits. It seemed like a great opportunity to build a good habit. \n\nThe little town map that Kimberly had left on the coffee table in the dining room showed what looked like a nice trail that ran down to the beach and then up into the woods. I could cut some of the path out and get it done in a couple of miles. I thought that was about all I should do to start.\n\nGeared up with new running shoes sure to give me blisters, I opened up the front door and walked into the slightly chilly pre-dawn air. Perfect running weather.\n\nThe first couple blocks were rough. Getting my legs to remember how to work took some time. By the time I hit my stride, I was crossing through town. I only saw a couple of streets, some shops, a restaurant, and some other buildings that I couldn't identify. It was a tiny town. Very cute, but very small.\n\nThen I was on the beach. It was absolutely beautiful. I didn't know they had sandy beaches like this up here. There was a long stretch of pure white sand that slid under the light surf as it came in. The salty tang in the air filled my lungs and the sound of the waves lapping in was punctuated by the occasional seagull's cry. I could really get used to this.\n\nI was about halfway down the beach when I felt someone running up behind me. I glanced back and saw a woman catching up to me. She was short, but holy crap was she built. Longish brown hair tied back in a pony tail swooshed back and forth with each stride. It looked like her running gear was painted on. She was clad entirely in compression kit, so she was covered neck to toe, but nothing of her firm body was hidden. It was no surprise, but her legs were spectacular, firm and strong.\n\nI had to swing my head forward to watch where I was going, but wasn't as subtle as I should have been, and I'm sure she noticed me checking her out. Great, now there will be rumors about the new principal being a letch. Not untrue, but I needed to be more careful. \n\nI was nowhere near in shape, so I wasn't running anywhere near a decent speed, but I was still surprised at how quickly she overtook me. She only came up to about my shoulder as she sailed past me, but she moved with such grace. She glanced over at me as she passed and waved her hand a bit.\n\nI managed a \"mornin'\" as she flew by, feeling the shame of how I was panting, dripping with sweat, compared to her seeming as fresh as a daisy, pushing along at a casual trot. \n\nThe consolation prize was well worth it. As she moved ahead of me on the trail, I got a chance to worship those legs and the heavenly butt they led up to. I swear those leggings she was wearing must be sliding all the way up into her ass, because I could see every detail. With every foot strike, her legs took on the impact and then flexed powerfully to push off into the next stride. \n\nMoving up her body, I felt hypnotized by the swinging ponytail. I couldn't take my eyes off her. I must have sped up, or she must have slowed down for a while, because I had enough time to savor every inch. \n\nThere are basic rules for running after you haven't in a long time. Number one is not to overdo it. Run slow and short until you are back in shape. Number two is don't get distracted. \n\nStaring at her glorious ass, I stepped wrong on a rock or something and rolled my ankle. It wasn't so bad, but I had to pull up short and walk through it. No more running for me today. Sadly, the pretty runner had already pulled far ahead, but now she disappeared into the deeper part of the woods. \n\nCursing my stupidity and the way that I was led around by my dick into injury, I tried to keep flexing my foot and moved on. I thought of the map in my head, and figured I could cut off my route and go back through the other side of the woods and take another shorter way back home. \n\nThis trail was much less travelled, and a couple times I thought I lost it entirely, but the scenery put me at ease. The forest was beautiful and deep. Sunrise had come and the mist was being burned off. Huge evergreens and thick ground cover were everywhere. The pain in my foot went away and I was simply enjoying the views, hoping I was on the right track, but not worrying much about anything else. In this idyllic environment, my mind drifted back to the other beautiful scenery I had seen that morning. How wonderful would it be to hold tight onto those legs, have them wrapped around your waist? I was getting hard and didn't care at all, I just let myself enjoy the fantasy.\n\nI discovered I had gone slightly off the trail, but only because I could see the actual trail down below me. I was up on a little ridge, and the trail down there led to little clearing. As I moved forward, I noticed someone down there. It was the runner! With her speed she must have finished off the main trial and looped back around. I was looking for a way to get down from the ridge I was on, but as I got closer, I paused. What was she doing down there? Stretching? I slid behind a tree and tried to see what was going on.\n\nMaybe she had gotten a cramp. She was standing facing away from me, then went down to touch her toes. Ah, now this was perfect. As she held onto her ankles, bent fully in half, her legs were stretched tight. I could see the lycra clinging tight from her ankles, calves, thighs, and even a bit of a suggestive bump between those firm buttocks. \n\nBefore I even knew what I was doing, my right hand slid into my loose running shorts and grabbed myself. I had been thinking of her ever since I saw her on the beach, and nothing was going to happen while I was running, but once I started walking? Well, I was almost fully hard, and none of my morning horniness had been burned off by the run. Weird though, I wasn't totally hard, but I felt big. Really big.\n\nI stroked myself casually, staying behind the tree, but shifting angles to get a better look. She was so fit and so hot as she went through a routine of stretches. Yeah, it looked like maybe a thigh or calf cramp. I was going to get a good long look at those legs.\n\nI didn't think for a moment that I should cough, or walk down and introduce myself. That would have been the right thing to do. For some reason, I was turned on as hell. It was a little unsettling, I mean, she was incredibly hot, and the way she was stretching would get any man, and probably most women, going. And I'm not denying the excitement of watching her when she didn't know I was there. That's all true, and I'm sure I would have naturally been aroused, but this was a different.\n\nI went from mostly soft to fully hard in seconds, and more than that, I didn't feel my passion plateau. My penis got as hard as it could, but I still felt that my lust was growing. It was like the passion spread from my crotch through my entire body.\n\nShe moved to a tree for balance and lifted her right leg off the ground, grabbing the top of her foot with her hand. She leaned forward at the waist and bent her knee, pulling her leg tight up to her hip. The view was spectacular. From the back where I was watching, I could see her left leg, muscles firm all the way up, but the way her leg was bent back, I could see everything in between, nothing between that skin-tight layer of fabric and that absolutely unreal ass. And the way she was splayed out, I could just imagine walking up behind her and sliding one hand onto her thigh, then, feeling the taut muscles, drag it up to her hip so I could come in closer to her...\n\nAs I was nearly lost in my fantasy, I could see she was changing her stretch. She wasn't really stretching tight anymore. She was leaning more on the tree, and her right hand wasn't holding her foot. Now it was sliding up her thigh, just like I was imagining doing with my hand. \n\nEvery move she made was building the lust in me. It felt like my body was reacting to her hands. I could almost feel her tiny hands caressing my skin. I was on fire. It felt like my entire body was vibrating with sex. My hand slid faster over my engorged cock, now coated with precum, and I noticed my shorts were around my thighs even though I didn't remember sliding them down.\n\nShe kept her leg up and bent, but her hand slid from her thigh to her hip, then back further. Her fingers glided close the line that separated her cheeks. She paused for a second, then continued, tracing a line further down. She seemed to stop and break out of her reverie for a moment. She gave her butt a squeeze, and then pulled her hand away and dropped her leg to the ground.\n\nI was too far gone though. When her hand tightened over that ass, I felt my orgasm rising and there was no stopping. I stopped breathing. Something was wrong. I wanted to dive behind the tree so she wouldn't see or hear me, but I couldn't move. I was rooted to the spot, and the only thing that was moving was my hand, gliding faster and faster over my cock, and I couldn't stop that even if I wanted to.\n\nI came hard. It was like a full body orgasm, but it was more than that. I had felt like my whole body was vibrating, and as I tripped over, it felt like all of that sexual energy just pulsed out of me. I grunted out a heavy cry that had to be heard all over in this quiet part of the forest. Oh, fuck. She had to have heard that. My cum hit the side of the tree and went all over the leaves at the base. I shot a second time, then a third, each time a huge volume splattering all over.\n\nI looked down to the clearing, expecting to see at best, an angry glare and a potential incoming law suit. Then again, she might just come up here and beat the shit out of me. With that body she could take me hands down.\n\nBut it seemed like she hadn't heard me. She was standing there, still facing away from me, so I couldn't read her face at all. It seemed like she was just going to finish up her stretches and jog off. Maybe I was reading too much into the way she had been stretching.\n\nShe swung one arm horizontally across her body in a casual stretch, but then she froze.\n\nThen it was like her body was like she was hit by a gust of air. Her legs buckled a little bit, but she kept her feet. She glanced around nervously for a second when another gust seemed to move though her. \n\n\"OH fuuuck.\" She crumpled to the ground with a moan.\n\nI stood there, hand on my still-hard cock, with cum dripping all over. My first thought was still do run down and make sure she was okay. But fortunately, I held back and watched.\n\nShe had fell down into a fetal ball, but almost immediately rolled on her stomach. To my surprise, I saw her right hand dart into her shorts. \n\nRight then, she cried out in pleasure.\n\nI could only see the frantic movement of her arm, but there was no mistaking what she was doing. She arched her ass up a little bit, and braced her head on her left arm which was bent in front of her. Then she bit down on her arm as her cries got louder.\n\nEven muffled through her arm, she was loud. It looked like she had already cum at least once. She rolled over onto her side, but wasn't slowing down at all.\n\nWhat happened? I could only see her back. I couldn't have been my trick. I didn't even see her eyes at all, and I certainly didn't touch her. \n\nEven through my confusion, the scene was so incredible, this ball of fire, so caught up in her own lust, rolling around on the forest floor, frigging herself like there was no tomorrow. I couldn't help up start working myself up and down again.\n\nBut then I heard rustling behind me. Someone was coming up the trail! Luckily the sound was quite far down the trail, so I was able to pull up my shorts and stick my cock back in and wipe the cum off my hand before turning toward the noise.\n\nI glanced back to see that the runner was utterly oblivious, in her own world of sexual bliss.\n\nWhoever it was, I would hate to see someone stumble upon the runner woman with her hand knuckle deep in herself, cumming her head off. I paused at the image. No, no, that would definitely be bad.\n\nI checked myself quickly. I looked like I had been running, heartrate elevated and a bit shaky on my feet. The only giveaway was that my dick, even stuck back in my compression shorts, was still making an impressive and very visible lump. I'd have to risk it. \n\nI jogged back down the path a bit. My ankle reminded me how I rolled it earlier with a slight sharp pain. I pushed through it, making all the noise I possibly could. At a bend in the path, I ran into two girls, both wearing very stylish, clearly expensive running gear.\n\n\"Ah! Wonderful! I'm so glad I found you two.\" I was trying not to speak comically loudly, but as loud as I could get away with. \"I'm such an idiot. I think I got on the wrong path. Which is the quickest way back to town?\"\n\n\"Who are you?\" One of the girls said with barely disguised disgust.\n\n\"Oh, ah, right I'm new here. I'm Ben Lee, the new principal of Bright Hall.\"\n\nAt this both girls straightened up and the dislike in their faces was mostly hidden away. \n\n\"Oh, I'm very sorry Principal Lee. I didn't mean any disrespect.\"\n\n\"Yes, we didn't know who you were!\"\n\nWere they frightened of me? They must be students, but their reaction didn't make any sense.\n\n\"It's not a problem, girls. I just need to get back home and I could really use your help.\"\n\n\"Ok. Um. Well, the direction you are going will lead you to the beach. If you want the short way back into town, then you need to turn around. Once you get to the little clearing, you'll see a sign pointing to the town trail. We should show you the way.\n\nThe first girl nodded and they both moved quickly toward the clearing. I rushed to get ahead of them, awkwardly kicking any rocks I could, and knocking aside branches, hoping that the runner had heard something and broken out of her rutting fever.\n\nAs luck would have it when we broke into the clearing, the women was getting to her very unsteady feet. She looked like she had just run a sprint. Her magnificent athletic body was glowing, glistening with sweat, and she was actually still panting lightly. Her ponytail was in disarray, with leaves and even a twig sticking out. \n\nI finally got a look at her face. She was tanned, which seemed odd in a place like this, or maybe her skin tone was just naturally that shade? She had a high, aquiline nose and a powerful brow with heavy, dark, but well-groomed eyebrows. But her expression was dazed. I wonder how much warning she had before we showed up. \n\nI was standing there trying to figure out the best way forward when the girls saw her.\n\n\"Miss Lashgari! OHMYGOD! What are you doing out here? We never see you anymore!\"\n\nBoth girls squealed and run to hug her.\n\nWhen they embraced, the runner actually groaned a little bit. Had she not fully recovered? As they kept hugging the gradually more coherent Miss Lashgari, I tired to remember where I had heard the name. She was one of the teachers, right? But I knew I hadn't signed her hiring papers.\n\nWhen they broke the group hug. She turned to me. \n\nI put out my hand.\n\nOne of the girls nearly snapped to attention to make the introduction: \"Oh, Miss Lashgari, this is the new principal. Yeep! I'm so sorry. I don't remember your name. I'm such a ditz. I don't mean to be so disrespectful.\"\n\nThe girl was genuinely worried. There was something bizarre going on there, but I was focused on Miss Lashgari. \n\nAnd now I remembered her. Philosophy teacher. Kimberly was gushing about how great she was.\n\n\"The name's Ben Lee,\" and to the nervous girl. \"Don't worry about it. That's no sin.\"\n\nI turned back to Miss Lashgari.\n\nI realized I was still holding my hand out. Her face, still flushed from her exertions, had turned much colder.\n\n\"I see. Principal Lee,\" the title didn't sound like one of respect in her mouth. \"I'm Jennifer Lashgari. Welcome to Bright Hall.\" And that didn't sound like a welcome at all.\n\nShe finally reached up to shake my hand. A split-second before out hands touched, her face twitched in shock. I didn't realize why until I felt her hand, her right hand, was wet. And it certainly wasn't sweat. I felt a quick shock at our touch. \n\nShe pulled her hand back, very flustered and a bit confused. \n\nI was emboldened by feeling that little shock, and also by knowing that my hand was now coated in a light sheen of her juices. \n\n\"Miss Lashgari, it's a pleasure to meet you. Kimberly suggested that I meet with you as soon as I could. She seems to be a big fan of yours.\"\n\nShe was looking past me, down the trail a bit. Then we both noticed that the two students were standing to one side, clearly hoping to leave, but for some reason they weren't willing or able to just speak up.\n\nMiss Lashgari started. \"Oh, girls. Please feel free to move along. I'm sure you have more entertaining things to attend to.\"\n\n\"Thank you so much Miss Lashgari. We really do miss you so much. All of us do. Please come back to campus sometime. We could do a big dinner for you or something.\"\n\nThere was so much genuine respect and happiness in there faces. I couldn't figure out the relationship here. Was there something more going on here?\n\n\"Maybe. No guarantees. Ok, get out of here.\" She had an easy smile for them, if not for me.",
        "They responded in unison which sounded a little bit creepy. \"Goodbye Principal Lee. Goodbye Miss Lashgari.\"\n\nThey left us alone in the clearing. \n\n\"Well, Principal Lee. I need to be getting along too.\"\n\n\"I could walk you back to town? I did want to talk to you.\"\n\n\"I'm not heading to town. What did you want to talk about?\"\n\n\"Well, the short of it is that I want you to come back to teach for us. I've only been here a couple of days, and I'll be honest, the school is in awful shape. Kimberly says you're the best teacher they had.\"\n\nShe held up her hand stopping me. \"No, no, no. I am not going back there. I am not going in to the whys. The way this town works, I'm sure you'll find out soon enough. Suffice it to say that I am unable to work with the people there.\"\n\n\"Well, that's the great thing, then. Apparently, everyone was fired or quit. Right now, it's just me and Kimberly and a skeleton staff to run the exams. I find it hard to believe that you and Kimberly wouldn't get along, and I might be pretty awful, but you don't know that yet.\" I tried to add a little humor, but I couldn't tell if it helped or hurt.\n\n\"Wait. They haven't finished their exams? That should have been two weeks ago.\"\n\n\"Yeah. The previous guy seems to have gotten everything in the deepest mess, and then left right at the worst possible time. We're just trying to pick up the pieces.\"\n\nThis did seem to give her pause. \"What would I be coming back to do?\"\n\n\"Well, I think we've got the exams staffed and scheduled, so we don't need you there. And to be honest, I want to change things up a bit, including your role. We don't need to put everything down in writing right now. Think it over. If you came back, I would want you to build a new curriculum for what you think would work best for our students. I'm thinking something like a global thinkers series maybe, but it's not my field, and I'm sure you'd have better ideas. You would have all the leeway you need to do it up right. I can't promise money, but you'd have support.\"\n\nI stuck out my hand again. \"It was great to meet you. I do hope you'll come by campus soon so we can find out how to make this all work. And it really does seem like you've got at least two students who would love to see you again and catch up.\"\n\nAt the mention of the students, her face broke into a pure smile of happiness. I could see that she genuinely loved them. No wonder they lined up for her classes. \n\nShe reached out and shook my hand again. This time, she didn't pull back so soon. There was another little shock, and I took the opportunity to look her deep in the eyes. \n\nDeep was the word for it. Her mind looked very different than the others I'd seen. I still wasn't sure what any of it meant, but her mind seemed cavernous somehow. There were lights and sparkles all over, but naturally, the part that came in most clearly to me was her lust. I could feel it simmering, barely controlled. I could feel that she was still recovering from what must have been some real mind-bending orgasms. \n\nThere was something else. The orgasms had rocked her really well, but she was startled at her own boldness. She was certainly a sexual person, but she wasn't an exhibitionist. She loved the feeling of bringing herself off, and it was kind of exciting to do it in the forest. Maybe she'd do it again sometime. But it was simply something she wouldn't have thought of doing before today. She was really empathetic toward others, but usually had a good lockdown on her own emotions. Today, it just felt like her inhibitions dropped away, and so fast, too. She didn't understand that and that left her a bit defensive. \n\nShe had been just stretching out that little tightness in her leg, and it started to feel nice, rubbing her hand up and down her leg, but then the lust just overcame her, like a wave flowing over her. But the weirder thing was that it wasn't the lust that overwhelmed her. It was when she felt a second wave of something - something comforting and warm. It was like a feeling of acceptance and freedom.\n\nI broke off the connection. I didn't want to trip her off into another bout of passion. I was hoping that she would come back to teach, and I didn't want anything to complicate that. And of course, I still didn't know how to control any of this. I didn't know what to think about what I felt in her, but being confused was nothing new. \n\nShe was a little rattled as I finished shaking her hand.\n\n\"Hope to hear from you soon!\" \n\nI gave her a big smile and started jogging off down the path to town. My pride made me keep running through the slight jab of pain in my ankle. \n\n***\n\nI was behind schedule, so I had to rush through a shower, and I didn't have time for breakfast. \n\nSo, I ended up hungry with wet hair and as I walked into the administration building. \n\nNo surprise, Kimberly was already there. Her desk was covered in papers and she had her phone to her ear. I walked by and gave her a wave. She held up a finger and I stopped in front of her desk. She was in another basic shapeless dress with a high neck, but while she was focused on the phone call, I couldn't help but admire the way her curls framed that adorable face. Even her concentration couldn't take away from her beauty. I smiled and waited. \n\n\"No, that won't work at all, Mr. Clandon. We need to start the basic renovations by next Monday at the latest... No. We could work with the James', but I wanted to give you first shot at it... Mr. Clandon, you know that we don't have that kind of cash. We can work out a plan, but we... Ok, but get back to me by noon, or I need to start looking elsewhere... Fine... Good... talk to you then. Goodbye.\"\n\nShe hung up with a triumphant flourish. \"Tah-da! You owe me another raise already, Principal Lee. Clandon's going to call back with a quote on the dorm refurbishment, and we're going to be able to afford it. He's got a team of old craftsmen. It's be a bit slower than you hoped, but it's going to be the best quality we can get.\"\n\nI hadn't seen her in such good spirits. This wasn't the business face Kimberly, or the worried Kimberly. I really liked this Kimberly. I was almost expecting a high-five.\n\n\"Outstanding! Very well done.\"\n\nHer hand flashed to her mouth. \"OH, I'm sorry, Principal Lee. I didn't mean to... I mean I should have waited for your permission. I know I shouldn't...\"\n\n\"Relax. You did good. I told you that I'm going to need you to step up and take more responsibility here. And don't worry about being so formal around me. We're going to need to work close together and if we can't be comfortable, then it's going to make things more difficult.\"\n\n\"I... I'm more comfortable in a more structured, formal relationship. You're my boss. I will... try to take more responsibility, but... The previous principal was very firm with his rules. But I'll try.\"\n\n\"Actually, I ran into a couple of students out running this morning and they seemed terrified of me, like I was going to punish them right out on the running trail. Is that what that was about?\"\n\n\"Ah, well. Perhaps. Some students responded well to his rules and others didn't. Some students were, mmm... anxious about his punishments.\"\n\n\"What was this guy? What did he do here?\"\n\n\"We have a pretty full day today. You need to okay the testing schedule. Once you sign off on it, we'll set the times and fix the end of semester paperwork. That will all have to run off a special extraordinary budget rather than normal salaries. That's the only way I'll be able to get everyone in on short notice. Then we'll need to talk about what we're going to do over summer. You'll need to handle the stack of papers I put on your desk, and I'll see if I can wrangle the rest of those estimates you needed.\"\n\n\"So you're still not ready to tell me about him?\"\n\nShe smiled slightly and remained silent.\n\n\"Ok, one last thing. I also met Miss Lashgari on the running trail this morning.\" The smile spread wider across Kimberly's face at the mention of her name. \"With just that brief meeting, I tend to agree with your assessment. The students must love her. I told her to come by here if she wanted to talk about coming back on board. I think she might. So there's hope there.\"\n\n\"That would be great!\"\n\n\"I'm also going to try to visit Ms... was it Ms Rai?\"\n\n\"Yes, Veronica Rai.\"\n\n\"Right, you said she's in town, so I'll go visit her maybe over lunch. Sounds good?\"\n\n\"Sounds good. Let me give her a call first though to make sure she's there and to set things up.\"\n\nI went into my office, sat down in the obscenely huge chair, and went to work on the pile of paper that waited for me there. \n\nA few hours later, the pile was slightly lower, the critically urgent issues handled and signed, and I had started into reading though the faculty handbook and the student regulations. \n\nI walked out to Kimberly's desk.\n\n\"So, a couple of questions...\" She snapped her head up and assumed her professional attitude. \"We have a uniform?\"\n\n\"Yes, sir. That's a very old tradition here. It was revised, way back in the 70's I think, but we're back to the traditional uniform now.\"\n\n\"I've read the handbook, but I'm not sure I'm reading it right. Men in green jackets with crest and tie?\"\n\n\"Yes, jackets, trousers, and black dress shoes. There is a whole sheet on the specifics I can get you. The boys always have trouble with the tie. If it's too long or too short, they get demerits.\" \n\n\"Ok, the demerit system is the next topic, but the women's uniform is even more detailed.\"\n\n\"Oh, yes, the new girls have a rough time sometimes. The older girls have to train them. They've got the jackets, too. Full skirts no more than an inch above the ankle, with opaque stockings. That gets some of them, but there's the cravat style and the sleeve length that's a problem for just about everyone too. There are a lot of other regulations. It seems complicated, but they all get it eventually.\"\n\n\"So, this doesn't seem extreme to you?\"\n\n\"Well, it is quite conservative, but it's part of the atmosphere, and part of the history. There's a shared sense of purpose when everyone is in the uniform. No distractions either.\"\n\nDid she just look away from me when she said that?\n\n\"Ok, I guess I can see that side of things. Do I have authority over the uniform if I want to change it?\"\n\n\"Yes. I think so. If it's a big change, I think you'd want to run it by the Education Committee, just to make sure you have their support, but you could just change it if you wanted to...\"\n\n\"But?\"\n\nShe hesitated. \n\n\"When I was a student, it was a really powerful symbol. When you wore the uniform, you were really parta the school. I can't really splain it, but it means a lot to everybody. Well, maybe not everyone, but most everyone.\"\n\n\"Wait, you were a student here?\"\n\n\"'Course! Didn't you even read my resume? I came here right outta high school. I had some real issues to get through and I wasn't ready fer college...\" She stopped short and the southern accent retreated again. \"What I mean to say is that I wouldn't recommend getting rid of it right now. We could look into some small changes, but to drop it entirely would cause trouble.\"\n\nI looked at her with a smirk, enjoying her struggle between letting me know more about her personally and maintaining her professional fa\u00e7ade. It would be good if she could understand that she can be herself and still be an effective efficient administrator. A long term goal, perhaps.\n\n\"Ok, I still think it's pretty severe, but I think you understand this better. No changes there for now, but we'll revisit the uniform later. Now demerits?\"\n\n\"Oh, that's all in the handbook. We use them instead of an honor code. Faculty can issue demerits for just about anything. Uniform violations obviously, but insubordination, sleeping in class, failure to complete assignments or follow orders, cheating, copying, there's a long list. It's pretty comprehensive. Staff can recommend demerits, but only faculty or upper administration can issue them. There's a form they fill out. Anyway, enough demerits and the student starts accruing punishments. It starts with detention and essay writing, then there are several other punishments, and if you get enough, it's probation, then dismissal from the school.\"\n\n\"Is this another one of those traditions?\"\n\n\"Yes! In fact, I think it's one of the reasons we have so few discipline problems.\" She paused again, clearing thinking about how much to say. \"The previous principal might have... He took it too far. But the system is actually quite useful.\"\n\n\"Ok, that's two for two. I'm not sold on it, but I'll see how it works before I think about changing it. I assume that would require approval too?\"\n\n\"You wouldn't need approval, but I would think it smart to get it.\"\n\n\"Ok. Excellent. That's that. I'm going to head over to visit Veronica Rai to see if I can get her onboard. \"Were you able to get ahold of her?\"\n\n\"Yes... She's there.\"\n\nThat pause seemed ominous.\n\n\"Any thoughts? Advice?\"\n\nShe smiled wryly.\n\n\"To be honest, she didn't seem very interested in seeing you. Veronica is a genuinely good person. Some people say... Well, it's a small town, and she's got some rumors that follow her around, but I know she is a good person. She is not a people person though. Dropping in on short notice might be the reason she didn't sound happy, but it's hard to tell. She either likes you or doesn't, and her opinion is really hard to shift. She's... Well, she's hard to describe. I'll say this. Don't hide anything. She might not have been following the news about the school, but she'll want to know the real situation. Don't play games. She'll see right through you. We need her more than she needs us.\"\n\n\"I'm not sure if that helps or not.\" I laughed a little and she smiled. \n\n\"Ok. I need to get back at this. I should have some stuff for you to go over by the end of the day. Good luck with Veronica.\"\n\nI almost felt dismissed. She was getting better at this. \n\nA laughed again. \"Yes, ma'am!\"\n\nI caught a glimpse of her getting flustered as I turned to the door.\n\n\"Principal Lee! I didn't mean to...\"\n\nI glanced back and focused in on her eyes, pushing lust toward her just for the hell of it. \"No worries, you're good!\"\n\nAnd I was out the door. \n\nI swung by the Green House to grab a quick lunch and then I was right out on my way again. Google Maps did not cover Bright Hall well at all, but the address I had for Veronica Rai was easy enough to find. \n\nKimberly had mentioned that Veronica probably didn't need the paycheck, and that was reinforced as I got closer. \n\nJust on the edge of town, the building I was headed toward was an incredible modernist work with horizontal lines echoing the natural surroundings. It was partially built into a ridge, with what must be an incredible view over the water and the beach. It reeked of wealth spent casually for quality. \n\nBefore I could get anywhere near, there was a very modern-looking security wall with a high-tech console. I walked up to it and pressed the button marked \"Call.\"\n\nThere was a buzz, then a click and a clear resonant voice.\n\n\"Principal Lee?\"\n\nI noticed a small camera lens focusing in on me.\n\n\"Yes, that's me. Ms Rai?\"\n\n\"Veronica. You're early.\"\n\n\"Ah, yes. I wasn't sure how long it would take to walk here, so I left a little early.\"\n\nA pause. \"You came from campus?\"\n\n\"Yes. From campus.\" This was already not going well, and I wasn't even passed the threshold yet. \n\n\"Kimberly said you were coming.\"\n\n\"Yes.\" Was that a question? I wasn't sure what she wanted to hear.\n\n\"You're here to offer me my job back.\" A statement, not a question. \n\n\"Well, yes, if you are willing, but it would be a bigger job. I'm looking for...\" What the hell. Kimberly said to be straightforward. \"Listen. Can I come in? I want to talk this through with you. It's not really the same job. I want your help on some other things too.\"\n\nAnother long pause.\n\n\"Fine. Follow the paving stones to the right.\"\n\nThere was a click and a gate in the wall opened up. As I walked in, keeping to the paving stones to the right, I got a better view of the home. It really was striking, so graceful, and it was situated so well in the ridge wall with the tress. Before I knew it, I was at the door, and the door was being opened.\n\nAs soon as I caught sight of the woman opening the door, I stopped dead in my tracks. I had seen her. She was the woman in my dream that first night in the Green House. \n\nShe had that same flawless dark skin. South Asian? Maybe India? She had wavy hair, jet black, hanging down past her shoulders almost down to the peaks of the most perfect perky breasts a woman ever had. She was wearing a loose knit black top that didn't quite reach to the waist of her low-slung grey sweatpants. The teasing strip of flat toned dark brown skin between the shirt and sweats was painfully distracting.\n\nShe was thin, so much that even though her bust wasn't big, it looked impressive on her, and really pushed that top out into aggressive points. No bra? I pulled my eyes up to look at her face. Even though she was thin, her face glowed with active health. I was taken aback by her. Her face was angular, with a sharp jawline and high cheekbones. And her eyes... They were almost catlike. She couldn't have a touch of makeup on, but her eyes stood out like they were heavily lined, and her lashes pulled out wide to the corners. She could easily be a model. Stunning.\n\nThis was exactly the woman from my dream. She had sat on my face as I helped her into the most gorgeous orgasms. I remembered her labia clearly, how they hung down slightly, how she reacted when I nibbled down on her. Her animal moans... Oh shit. I had to pull myself out of this.\n\nI refocused and held out my hand.\n\n\"Ms Rai, it's a pleasure to meet you. Kimberly says the school just hasn't run right since you left.\"\n\nI realized she must have been as stunned as I was. She stood there with the strangest look of confusion on her face. It was only a split second, but we both realized it. Then in a flash, she put her hand out to shake mine. \n\n\"Have you been here in town long? We haven't met, have we?\"\n\nHad she seen me?\n\n\"No, I just got in a couple of days ago, and I've been in the office most of the time.\"\n\nShe cocked her head, then shook it. \"What I just said sounded like an awful come-on line. I'm not coming on to you.\" \n\nI stood there, unsure how to reply to that.\n\nShe turned around and waved me into the house. She led me to a table in the kitchen, which was a bit of a mess. \n\nShe sat down in a chair and motioned for me to sit.\n\n\"I'm sure Kimberly told you why I left.\"\n\n\"No, she was very reticent. Actually, she seems to be doing all she can to not tell me anything about the previous faculty or principals which is a real pain, to be honest. I do trust her though. She's incredible, and it's clear the school couldn't run without her, but I have to admit it's frustrating to not know how things got to be so bad here.\"\n\nVeronica smiled slowly. \"Well. Good for Kimmy. And good for you I think, too. This one's for free: if Kimberly wants to, she can shut down that school. If you are going to last here, you need to make sure not to make an enemy of her.\"\n\nAgain, I didn't really know how to reply to that. She had a real skill for making me feel off balance.\n\nShe didn't offer me a drink or anything, so I figured there wouldn't be much small talk. Honest. Straight to the point.\n\n\"Well, then. Thanks for at least hearing me out, Ms. Rai...\"\n\n\"Veronica.\"\n\n\"Ah, sorry. Veronica. Thanks. So, here's the thing. I can run the school without a librarian, but it's not going to be a proper school. We need a librarian, but not just one that runs the library. I need someone who can run research classes and maybe some other classes as well. Kimberly says that you are something of a technical wizard?\"",
        "No reply, but a sly smile. That's something.\n\n\"I looked at the last resume we had on file for you. It looks like you could run some coding and maker-space courses which would be ideal. But here's the thing. I need brilliant teachers, but they have to be able to teach, not just lecture or walk students through textbooks. I trust you've got the skills, but I don't know if you can teach.\" \n\nI paused, hoping for some kind of response. Nothing. \n\n\"And the final thing I need that I think you could do... We need to do a complete technical revamp of the entire school. Everything from a website that doesn't look like usenet, to an upgrade and expansion of internet access on campus, wifi, common space computers, the whole thing. I'm also putting together a new advertising campaign, and I want it to be mainly online. I asked Kimberly to head that up and she declined, saying you were the only one who could do it right. And,\" I sighed. \"I need someone who can do all of that fast and relatively cheap. Basically, I need a librarian who can moonlight as a geek superhero, rebuilding the school and teaching courses, but also running tech security, a new ad campaign, and keeping us cutting edge generally. We're going to try to move into more exclusive enrollment, and those families will want privacy and protection.\"\n\nThe whole time I had been talking she had been looking at me closely.\n\n\"I have seen you before. And here's the thing. I don't really remember people well. I don't really like people in general, and I've got some kind of that face blindness thing, too, so I don't remember people. Especially faces. Usually, I don't really care. But I know your face. Where have I seen you before?\"\n\nI hesitated half a second, but her reaction told me she could sense the hesitation had meaning. I thought she was supposed to be socially inept.\n\n\"You aren't telling me something. Why do I recognize you?\" There was more than a hint of growing irritation there. \n\nKimberly said to be honest, and I'm sure she's right. But I can't just say that I ate her out in a dream can I? \n\n\"I don't know how you recognize me. I said, I just got here. I've only been a couple places in town and on the running trail that goes to the forest. Where do you think you've seen me?\"\n\nShe ignored the question. \n\n\"Do you know me? Do you recognize me?\" Again, with her conversational jujitsu, she threw me off balance.\n\nI paused again. Her gaze turned icy, and I could feel everything start to fall apart.\n\n\"I...\" Fuck it. \"You look incredibly similar to someone I've seen before.\" That was not entirely untrue.\n\n\"So, you've seen me before?\" Her tone was very wary.\n\n\"Someone who looks like you. Maybe? I mean, she could have been your twin. But it couldn't have been you. Before today, the only thing I knew about you was what Kimberly said about you, and the stuff in your employment file.\"\n\nI sighed. I knew this was sounding stupider the more I said, so I shut up. \n\nShe looked at me hard for a while. \"So, no snooping in the dark, hiding in the shrubs and peeking in my windows as I shower?\"\n\n\"What?! No!\"\n\nShe snorted a hard laugh. \"No. I guess not. So where did you see this twin of mine?\"\n\nHonest. Straightforward.\n\n\"Uh... This is going to sound so idiotic.\" I didn't add that it was going to make me sound like a grade A pervert, too. \"It was...\"\n\nShe interrupted me. \"It was a dream, right?\"\n\nShocked, I jerked my head up and looked her in the eye and saw a quick flash. \"What? Yes. How...?\"\n\n\"I recognized you, too. When I saw you in the security camera, I thought you seemed familiar, but when I opened up the door and saw you, it all came flooding back... This is really fucked up.\" She breathed in deeply. \"I saw you in a dream two nights ago. Same hair, same eyes, same nose, same little scar on your left ear. It wasn't your twin, it was you.\"\n\nAs she was speaking, she got more flustered and distracted. Was her dream like mine?\n\nI encouraged the sparkle in her eyes, and I immediately felt her open up to me. Either I was getting better at this, or she was very receptive to the trick. She was almost as open to me as Kimberly was. Well, before she shut me out.\n\nWith Veronica, I was surprised that the immediate and overwhelming emotion in her mind was a roiling passionate lust. She was horny as all hell, but wasn't showing it on the outside. She had herself on lockdown. I wanted to try to get a better feel about who she was, but her emotions just pulled me in. And her desire was focused on me. From the moment she saw me in the doorway, she was thinking about trying to seduce me, but she didn't really know how. \n\nBefore I could even think about trying to pull back out and avoid the obvious danger, I found myself pulled in deeper and soaking in her lust. I felt it flow into my mind from hers, and because my erotic thoughts were never far from the surface, it echoed back from me into her. We seemed to feed off of each other, and when I finally gave up and focused in on her and gave her desire a push, a cross between a grunt and a moan came out of her mouth.\n\nThat sound pulled me back into reality, but I could still feel the waves of urgent craving streaming off her.\n\n\"Veronica.\" She almost shuddered when she heard me say her name, but she didn't respond. \"Veronica. Tell me about your dream.\"\n\nAs she brushed her hair back behind her right ear, her arm brushed up against her chest, and I could see the nipple standing out proud at the touch. She saw me notice and glanced over my shoulder, breaking eye contact. But her neck darkened in a flush.\n\nThe icy combative front she had been putting on was crumbling, and she stuttered as she worked though her own feelings. \"It's... It wasn't like a regular dream. I don't remember my dreams, but I remember parts of that one. Not everything, but... I want to tell you about it. Maybe you can help me... understand it. I need a drink. Let me get you a drink.\"\n\nShe abruptly stood up and turned to a cabinet and pulled out a nice bottle of whiskey. Quickly two tumblers were poured with a generous hand. She handed one to me and took a long slow pull on hers. Then she looked at me closely. She was already breathing heavily. She turned away and walked out of the kitchen, looking over her shoulder at me with a curious grin.\n\nI was no fool, I followed along. \n\nShe led me to what must have been the living room, and for a hopeful moment I thought she might keep walking, maybe to the bedroom? But she stopped and sat herself down on a long couch and took another sip.\n\nI walked slowly toward her, trying to catch her eye and stoke that fire in her even higher. By now, I wasn't thinking at all about what a colossal mistake this was. I was driven entirely by my desire for this lithe sex kitten who was now starting to stretch herself out on the couch. \n\nShe was looking into her drink.\n\n\"It was... the dream, I mean... It was a fantasy... I haven't... I'm not very experienced. I'm no virgin, but after college I came back here, and... God, you don't want to hear all this...\"\n\nI sat down on the couch next to her. Close enough that I could touch her legs as they stretched out if I wanted to.\n\n\"Tell me about your dream.\"\n\nShe smiled, clearly thinking about it. Then looked back at me. Her entire face was a mask of lust, but she was trying to stay in control.\n\n\"I don't remember all of it. Only little flashes, little scenes...\" She drank down the last of her drink and set the glass on a side table next to her. \"I remember you... your twin was there, but there was someone else too. It was...\" As she spoke, it seemed like she was remembering more. \"It was another woman. We were playing around without you. She kissed me... oh... she was kissing me. It was so good. She was so cute.\"\n\nHer eyes flashed in recognition and went wide.\n\n\"It was Kimberly, wasn't it?\" \n\nShe nodded, slightly confused, but maybe even more turned on.\n\n\"You were making out with Kimberly? I didn't know you two were together.\"\n\n\"We weren't! I mean we aren't. But it was so hot.\" Her voice wavered between confusion and whispered desire as the last remainders of her inhibitions started to fall away. \"She's adorable. And she kissed me so well... She kissed me and started taking off my clothes. She kissed down my neck, and down to my boobs.\" \n\nShe seemed unaware that she was now describing her erotic dream to a stranger. Well, not a total stranger. We had met that once before.\n\nAs she described how Kimberly kissed her and stripped her, her own hand unconsciously traced the places on her body where the dream Kimberly had touched her, tracing down her neck and lingering on her breast.\n\nI moved closer, still not touching her. \"Tell me. What happened then?\"\n\n\"It's fuzzy. I felt so hot and she was kissing me... everywhere... But then, I don't remember what happened, but then we were both nude and she turned me away from her. I didn't want to turn away from her, but she had those hands on me and so I turned. That's when I saw your twin... when I saw you. It really was you, wasn't it? You were there? But you were... You weren't wearing clothes and your... cock... was hard, and it was so big, like unreal. I watch porn, I watch a lot of porn\" she smiled at the thought, \"but you were just huge. Kimberly, she came behind me and hugged me. I could feel her tits... God I can feel them now, pressing up against my back.\" \n\nHer eyes closed at the memory, but then she opened them to look back at me.\n\n\"She hugged me tight and squeezed me, but then she pushed me forward... like she was giving me to you. I was so hot. I wanted you, and she was there handing me off to you, god that was even hotter. It was like she wanted to watch me with you.\"\n\nShe stopped talking and just sat there breathing heavy, reveling in the lust she was feeling. I didn't want to interrupt. She looked so incredible, sitting there, one leg folded under her, that knee very nearly touching my leg. She ran her hand through her hair and shook it out, making it flow down wildly over her shoulders and the back of the couch. \n\nShe looked back at me, fire in her eyes. She had to know where this was going now. Was she trying to decide what she wanted? Or was she trying to prolong the buildup?\n\n\"The next thing I remember, Kimberly came out from behind me and pushed you on the chest, knocking you down on the bed. She said that I wasn't ready for you, but that she would show me how to take care of you. I was angry for a second, but then I looked at you again... your cock. Maybe I wasn't ready? She got up on the bed and kneeled over you. I remember her, sitting there, almost on top of you. She twisted back and looked at me. Oh, god, the way her tits swung around... How can someone so cute be so hot at the same time? She reached out her hand and told me to come over and watch.\"\n\n\"I took her hand and came over and sat on the bed next to you. You were staring at me. You had this pale big-boobed goddess hovering over your cock and you were looking at me, you were both looking at me. I couldn't take it. I was already wet, but feeling your eyes on me... God... your eyes just boring into me like they're boring into me right now. I can feel myself... Kimberly reached down and grabbed your cock and held it up. She told me to watch but I couldn't resist. I grabbed onto you too. Holy crap you were big. How could she fit you inside? So hot, so smooth. I could feel your pulse... How could it have felt so real? She was flowing already... I could feel her flow all over my hand and your cock... And I could smell her. I could smell her excitement, but I could smell myself too. I must have been dripping... Then she just dropped down on you. Fuck...\" She shuddered like it was her and not Kimberly from the dream impaling herself on me. \"The sound she made... she was like an animal. I watched her going deeper and deeper with each thrust. I could hear you grunting and her moaning and crying out... holy fuck... Those beautiful boobs were bouncing and her hair, god, it was flying everywhere...\"\n\nShe trailed off and I thought she was trying to bring herself back under control. She pulled her legs up into her chest and rested her chin on her knees, wrapping her arms around her legs. \n\nShe took another couple of deep breaths. \"I don't know what it is about you. I'm horny as hell here. I'm... god, my panties are soaked. I want you so bad. I mean, I want to just jump you right here, right now. But I'm not... I'm not like this. I'm not a slut. I've only been with... I mean, it's not like I'm not sexual, you should see my toybox. Oh shit! Why did I say that?\" She laughed weakly and turned her head away, but then she looked back with hunger.\n\nShe looked so perfect there. Those wide, dark eyes full of the conflict she was feeling. The leg of her sweatpants had slid up and I could see the perfection of her leg, her ankle, and the gentle curve up her calf. She watched me look her over, still unsure.\n\n\"Listen Veronica. You are exquisite. I'm having a really hard time just sitting here listening to you talk about your dream. You can tell how much you've turned me on.\" Even without moving, there was no way she could mistake the bulge that was running from my crotch down toward my thigh. I spread my legs wider and watched her eyes widen and her mouth open. \"I was in that dream. I don't know how, but I was there. And I know what happened next.\"\n\nShe licked her lips slowly.\n\n\"But, Veronica. If this is not right for you, I'll just leave. We can talk about the job tomorrow or over email or something...\"\n\nLooking in her eyes, I knew that wasn't going to happen. She wasn't going to let me leave without having her way with me. She was very nervous, but it wasn't my influence that was making her want me. I was certainly amping up her desire and lowering her inhibitions, but her lust for me was all hers. She just wasn't used to acting on it. I wanted her to move first though, to be the aggressive one, to take charge of her passion.\n\n\"Do you want me to leave, Veronica?\"\n\nShe actually groaned at the thought. She shook her head ever so slightly. \n\n\"You need to either tell me to go or ask me to stay. If you ask me to stay, I'll stay.\"\n\nShe shifted her body, bringing her feet down to the floor. Then she stretched out toward me, reaching across my body to grab the whiskey I had been holding, untouched. She took the glass from me and drained it in one swig. Then she reached further over me to put the glass on the side table that was next to me. I leaned back into the couch and let her body stretch over me. She wasn't touching me at all, but nowhere was she more than a couple inches away.\n\nHer face was right over mine. I could smell the whiskey mixed with... toothpaste? Her skin was even more amazing up close. She wore no makeup at all, but there wasn't a blemish or flaw anywhere. The rich mahogany fell perfectly over those high cheekbones, and her mouth was opening just in a fraction of a predatory smile. Her full lips had a slightly reddish natural shade, and they glistened from her licking.\n\nI glanced down for a split second, between us. To my delight, her loose top hung down on my chest and I could see that she wasn't wearing a bra after all. I got a flash of her tits, not so big as to hang down, but tipped with the cutest little nipples and just a tight ring of darker areolae. I looked back at her to see her smiling knowingly. The skin of her neck and face had darkened even more in a flush of blood. Her eyebrow arched in a question. I smiled with hunger in response. \n\nStill, neither of us moved. I could tell this was getting her even more worked up. I could see her pulse rapid firing in her neck, and her eyes seemed to lose focus. Her right arm was on the armrest of the couch next to me, holding herself up. Gravity was pulling her down. But I still needed her to move first.\n\nFinally, with exquisite slowness, she moved her face toward mine. She nearly bumped into my nose with hers, but then grinned and tilted her head slightly. Our eyes locked together, but I tried not to lose myself in her mind. I wanted to stay in this moment, I wanted to watch her make the choice. I could feel her breath on my lips, and I licked mine in preparation.\n\nShe blinked heavily, slowly, then moved that final millimeter. \n\n\"I'm going to kiss you.\" Her voice was a low throaty whisper.\n\nOur lips touched lightly in a sweet, almost chaste kiss.\n\nBut that first touch of skin led to a wild spark. I couldn't control the power and urgency of the connection. \n\nHer eyes closed as we both moaned, and the kiss immediately deepened. Her hand went to the back of my head to pull me closer into her, and my arm shot up her back, under her shirt to do the same. Without the support of her arm, she melted onto my chest, but I pulled her even tighter. \n\nEverywhere our flesh touched, there were little lightning sparks flying. It seemed like the more we touched she hotter we got. \n\nHer eyes opened, and I could see the unadulterated lust in her. She wasn't out of control though, she was in command of herself. She was going to fuck me, and she was reveling in that knowledge and power. \n\nI pulled off her lips, holding her bottom lip for a brief second in my teeth, and nuzzled down onto her neck, kissing and nibbling all the way down. \n\nHer mouth now free, she gave herself over to moans as she used both hands to pull me onto her neck and lower. \n\nI took the hint and pulled back so I could take off her shirt. She raised her arms, almost in victory, as I slid the fabric over her head. \n\nI looked down to take in a full view of her beautiful little tits. They were perfect on her, and those tight hard little nipples just begged to be bitten. \n\n\"Stop staring and get to work!\" Her smile was blissful and wide as she pulled my head up to her chest, and I obeyed with pleasure, licking and sucking and nibbling. I listened close to her reactions. It was clear that her nipples were very sensitive. One nip would make her twitch and moan, and a long lingering lick would bring her to a ravenous growl.\n\nI tried to get my hands down to explore her legs, but sitting on the couch made everything awkward. She immediately felt my frustration. \"Screw it. We need more room to do this right.\"\n\nShe hopped up, topless in all her glory, and walked out of the room. \"C'mon! get your ass in here! This is me asking you to stay, ya dummy!\"\n\nI stayed on the couch to enjoy the view of her walking away, but I lost no time in following along. \n\nWhen I entered the bedroom, I vaguely noticed the lovely furniture and the giant windows that opened onto a view of the beach and water. My focus was on the red-hot woman sprawled out on her unmade bed. She still had her sweatpants on, but she had one hand under the waistband already moving slowly but with purpose. Her other hand was on her breast, fingers plucking at her nipple. \n\nShe was enjoying giving me a show, but she was clearly wanting more.\n\n\"God, you are incredible. I don't even know where to start.\" I walked slowly toward the bed. \"In the dream, I remember how wonderful you tasted. I think I need a second helping of that.\"\n\nShe closed her eyes and moaned at the dream memory we shared. I knelt on the bed and ran my fingers slowly down her sides, down to her hips and the waistband of the sweatpants. My fingernails tickled her slightly, but she just growled. When I got to the sweatpants, I fought the urge to just rip them off. I caught her panties together with the pants. Slowly peeling both down as she lifted her ass off the bed, I savored every inch of newly-exposed flesh. I could smell her arousal thick in the air. It was exactly as intoxicating as I remembered from the dream. As I uncovered her nicely trimmed pussy, I remembered how wonderful those labia felt in my mouth and how she had reacted to my ministrations. I kissed her lightly on the mound before sliding her pants down her legs, grazing down her thighs and calves with my fingernails. ",
        "I moved back down to start my meal, but she grabbed my head in both hands.\n\n\"Ben, I can't tell you how much I want you to... god... just spend all day down there. But right now... I'm just so worked up right now, I'm not sure I could take it. Right now... right now I just need to fuck you. I need your cock...\"\n\nWith this she spun me over onto my back and rolled on top of me. With a shocking speed and skill, she had my belt undone and my pants and underwear pulled down. \n\n\"Holy crap. That dream was no joke!\" She looked down and saw my cock, already leaking precum over my shirt and belly. \"I want to just hop on top of that thing, but lets just see how it goes... Slowly, okay?\"\n\n\"Slow is good.\" I said, kicking my pants completely off, and arranging myself so I could slide my cock over her, bumping into her clit as I rubbed back and forth.\n\n\"Yeah... That's exactly what I need...\"\n\nAs if the smell didn't give it away, I could feel how wet she was. Her dripping all over me, and the mix of her and my own precum were making everything a gorgeous mess down there. \n\nI put my hand on her lower back, just right above her butt, so I could push her down on me and feel the pace she was setting. Her legs slipped around me for support, and she slid back and forth for a while, rubbing herself off on my cock. As she started rocking back and forth, she unbuttoned my shirt, more urgently than she had hoped perhaps, but effectively. Then my t-shirt went over my head, and just like that, she leaned down so her tits were rubbing back and forth on my bare chest, getting ticked by my hair.\n\nHer eyes were closed in concentration as she started to speed up, and her face was the picture of ecstatic beauty. Her eyebrows were brought in tight and her mouth opened up and closed as the sensations rolled through her. \n\nThen in a flash her eyes shot open and her mouth locked in a huge silent O. I took the opportunity to push lust and ecstasy as I looked into her eyes. Her rhythm was lightning fast, but then erratic. Her entire body shuddered and her neck tensed and shot back as she looked up. She was totally silent for a couple of seconds, but then a low guttural scream broke out of her as she fell down on my chest. She tried to keep rocking on me, but her control was gone and she couldn't quite hit the right spot anymore. She tried to lift herself up a bit but the aftershocks were too much.\n\n\"Fuucck. Yheh... now... fuck me now... I can't...\"\n\nHappy to obey, I reached down to center her on me. With my other hand I held the back of her head so I could look her in the eyes. I wanted this to be epic.\n\nThere was a hint of anxiety there. She was still worried about my size, but she wanted this. Her entire mind was overcome with desire and me as its object.\n\nI took all of the lust and passion I was feeling, all of the energy in those little electric shocks, all of my excitement I felt in looking at this sexual goddess grinding on top of me, I took all of that and pushed it into her. I saw her react to the emotions as I fed them, and I pushed my cock up into her.\n\nI will hear her wailing in my erotic dreams until I die. It was like she was nothing but desire, and sex was coming off of her in waves. She was so tight, I could feel every inch of us. I felt her lips drag over me and the head of my cock as it pushed her open. Her voice cracked as she started to take control, pushing down on me further than I would have pushed. Then her head snapped back again and she lifted up. The sensation was maddening. I felt her gripping, sliding off of me. I almost fell out of her, but she just wanted to feel that sensation of being opened up again, and she slid back down. A few more repetitions and I was all the way inside her. She arched back and looked down at us.\n\nShe was panting, but her entire body glowed with the sexual pride. \"I got you... I got\" up and down again. \"all of you... You are splitting me... so gooood, ggggod... fuck... you are splitting me open.\"\n\nShe was clinging all around me so nice and tight. Went she hit bottom, I could feel her whole body come to rest on my hips.\n\nKnowing now that she wasn't hurting, I pushed down on her ass, forcing her even more fully onto my cock. She groaned and tried to pull back up, but I held her down. \"Grind on me, baby.\"\n\nShe eyes sparkled in excitement as she leaned forward and rocked back and forth. She was clearly a bit shocked by the way her clit was rubbing up against me. \"Oh yeah... that's incredible. Your cock and... oooo fuck... I want to keep going, but I'm... going to cum again... I don't know...\" Her body started twitching again and the shudders ran through her body. \n\nShe tried to keep me inside her, but I slipped out as she slid over in an orgasmic spasm.\n\nI was getting close too, and I could feel it was going to be a big one. So I flipped her onto her back and got on top of her. I looked her in the eyes, and she grabbed the back of my head to pull me down in a kiss. \n\nAs we were kissing she was mumbling in as much clarity as her cum-wracked brain could muster, \"fuckmefuckme get thatfuckingcock back into me fuck...ugh...get inside me fuuuuuck.\"\n\nBy this time, we were both sweaty, but she was soaked, and my cock was dripping with our combined juices. I slid back into her, pushing her open and spreading her legs wider as I slowly drove into her over again. \n\nI wanted to go slow and make sure to bring her over one more time, but I couldn't hold back. Looking down into her eyes which were wide in a cross between bewilderment and animal lust, I had to return what she was giving. Her hips were pivoting as I hammered into her, and each thrust returned a throaty grunt and another flash of need in her eyes. \n\n\"Moremoremore fuck me... ugh... god... this is... incredible... fuck... fuck me... give me more... harder... more...\"\n\nHer chanting was working me up like crazy. I wasn't going to last long at all, so I just gave myself over to my own lust. But she was keeping up, her hips twitching and her arms grabbing my back and pushing at my ass to drive me harder into her. \n\nSoon, I knew I was on the edge. \"I can't hold back... fuck, I'm almost...\"\n\n\"Give it to me! Fuck me!\" \n\nShe looked me directly in the eye and in our minds, I saw her cum in her mind right as I felt her pussy spasm on my cock. That was too much for me, and I immediately joined her. I thrust once more into her and shot off. She was lost in her own sensations, but felt me coming inside her and her groans turned to squeals. I reflexively kept pumping into her and the noises she made gradually turned from squeals back to groans.\n\nWith the last of my control, I aimed my collapse to fall next to her instead of on top of her.\n\nShe grabbed onto me and pulled me closer, then her groans turned into the cutest light snoring."
    ],
    "authorname": "shudai",
    "tags": [
        "fm",
        "athletic",
        "masturbation",
        "forest",
        "inhibitions",
        "voyeurism",
        "dreams",
        "persuasion",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-10"
}