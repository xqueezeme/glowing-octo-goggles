{
    "title": "Danielle",
    "pages": [
        "My relationship with a gorgeous young woman named Danielle, has been one of the most satisfying and unique in my life. \n\nA few years ago, I met a couple through mutual friends that I became quite close with. They didn't introduce me to Danielle directly, but what they had suggested to me set in motion an event that changed my life trajectory and my outlook on my personal life. I had met John and Casey at a party at my neighbor's house over the fourth of July. The fourth fell on a Friday that year so it became a weekend pool party. \n\nJohn and I struck up a conversation at the BBQ watching our host slow roast a gigantic pork butt. Many jokes were made about the \"size of that ass\" as we sipped beer and laughed loudly, as people who had just met and had been drinking all afternoon often did. John's wife Casey strolled up and smacked him on the ass\n\n\"You making fun of my butt?\" she asked, good-naturedly. John rounded spilling his beer. \n\n\"Of course! Always!\" Came his reply. Casey beamed at him a bit and turned to shake her shapely bottom at him; well really all of us standing there. She grinned over her shoulder at him. Her eyes flicked to mine for a split-second as well. \n\n\"Good answer.\" She hissed sort of sexually. And slid her arm around his waist, drawing herself into him, and closer to me a bit I noticed. \n\nJohn introduced her around. I shook her hand noting the firmness of her grip and the intensity of her gaze on me as we shook. She met all the eyes of the men she was meeting for the first time. I think we all took in the shape of her; fit and beautiful. \"Don't burn the butt.\" She told our host, jabbing him in the arm gently, teasingly. \n\n\"Smoke.\" He corrected. \"It's all in the smoke.\"\n\nThe party continued apace with the drinking and fun in and around the pool until late in the day. I couldn't help noticing how often Casey appeared at my side, both in the pool and out. She made no secret of the way her body was an object of her own intense focus; the tiny one-piece swimsuit did its level best to accentuate every perfect curve of her well-toned and obviously sculpted shape. She clearly worked out ferociously. John was no slouch himself, but was in a lesser class than Casey. \n\nAs the sun was preparing to set, I decided to head to my house, a few doors down, to change into other clothes for the evening. I had mentioned a bottle of KSB that I had waiting for just such an occasion as today, so John joined me to fetch it. We chatted about life in general and a bit more about my divorce a few years earlier. I had mentioned it earlier, but we got into some of the details a bit as we walked. John also told me a bit about his marriage to Casey, how they met, what they did, and a little bit of their intimate relationship. I thought this was a bit forward, but nothing too unusual; we'd all been drinking pretty heavily. I gave John the bottle and then headed upstairs to change. \n\nBack up the street the evening led to more drinking as we gathered around the cul-de-sac to watch the various groups that had brought fireworks, set them alight. Casey appeared yet again at my arm, whistling and cheering as the sky lit up time and again. Kids ran by with sparklers, threatening to set each other's hair on fire and we laughed and drank some more. \n\nMy neighbor and our host William, was known for going all out with parties, announced that tomorrow would be another round of games and fun, for those who lived close or wanted to stay over. Casey told me that John had played football all through high school and college and seemed excited about the game that was being assembled for tomorrow. They lived out of town but had decided to stay over; both for tomorrow's fun and because much booze had already been consumed. A number of other guests had decided the same. The kids would all be thrown together in a huge camp-out on the living room floor. This was always common in our neighborhood.\n\nCasey told me that she was sorry to hear about my divorce and asked whether we'd had any kids. I admitted not. I guess my mood fell a bit at this admission, because she took my arm, consoling me. Around midnight, the kids were all starting to go down for the night, and sleeping arrangements were being arranged. William's house was quickly filling up, so those of us that lived in the neighborhood began offering spare rooms to other guests. Casey turned to face me fully from about 12 feet away. Locking eyes with her we made a silent agreement for them to stay at my house. \n\nAround 2:00 AM we staggered down the street to my house, waving to others as they did they same. We sat in the living room for one last nightcap and quietly chatted about life and the demise of my relationship. I fixed us all one last drink and they sat on the sofa opposite me, as I flopped into my favorite chair opposite them.\n\nI was surprised how the conversation had turned to our sex life, which I admitted had been a bit stilted. My wife never really warmed to the idea of passionate sex. It was as if she felt the obligation but not the desire. I admitted to having wanted more from her. And that since the split I'd been with no one. \n\nCasey was surprised at my admission that I hadn't had sex in 19 months. \n\n\"Yeah, no! I'm definitely not like her!\" She admitted. \"I couldn't go for more than a couple of weeks.\" John chuckled.\n\n\"Very true, you.\" He added. \"Casey definitely has no issue expressing her desires.\" Casey winked at me. In that moment I suspected that this was an opportunity and an offer. \n\nThere followed a long, not-uncomfortable pause, which I took to be the opening for a deeper discussion into their intimate relationship. I shared a very long gaze with Casey, until she admitted that she had long been in touch with her own desires.\n\n\"I just always figured that if there was something that I wanted to do, I should follow my interest and go for it.\"\n\n\"Which is how she met me.\" John countered. \n\nThey both took turns sharing the story of their first encounter, which had been in the midst of a weekend party that had started not unlike this one. Casey had gone with a girlfriend who knew John from work. Late into the evening when the three of them were the last people in the Jacuzzi, things had become quite heated. \n\n\"John means 'heated between us girls'.\" Casey admitted. \n\nJohn leaned back grinning as Casey related that she'd had a couple of minor lesbian relationships before, and her girlfriend was very turned on and drunk. In the Jacuzzi, John just sat back and enjoyed the scene of these two girls making out heavily and then taking turns laying back on the Jacuzzi deck while they pleasured each other orally. Later they'd all three tumbled into bed together wherein the girlfriend passed out while Casey and John,\n\n\"...began a fucking frenzy that's never really ever ended.\" Casey concluded turning her intense gaze to her husband.\n\nBy now Casey was openly stroking John's impressive erection through his trunks. I recognized the wide-open invitation to join them sexually but was still a bit shy of delving in too deep just yet. \n\n\"Sorry if this is too...\" Casey began. \n\n\"No, no! Please. You two are guests in my home. Please feel free to indulge.\" I was feeling quite drunk. Casey grinned at me, John grinned at her. \n\n\"Yeah?\" She asked. \"You don't mind?\" I nervously shook my head, curious at what was coming next. I had to admit to myself that as hot as this was becoming, I really wasn't sure if I was ready.\n\nCasey kept her eyes on mine as she slid to the floor, continuing to stroke and tease John's substantial bulge. \n\n\"Well, like I said,\" John sighed contentedly, \"Casey definitely has no issue expressing her desires.\"\n\nHe and I both watched as she extricated John from his shorts, revealing a very impressive erection. I could tell he was watching me out the corner of his eye as Casey began to slip her gorgeous lips over the head and take him deep. She was obviously very aroused as well as talented at sucking. I felt almost out of my body as I watched her take his huge cock very deeply. She still in her bikini top and tiny shorts as she sucked him deeply and slowly. It was very erotic to watch her stomach lurch as she gently gagged on his considerable length.\n\nI had never watched anything like this in person and was intrigued at my growing interest. I was intrigued by their openness, her gorgeous body and, I reluctantly had to admit, the beauty of his massive penis. It was not that I wanted it, but I had to admit that it was very attractive. Casey slowly removed her mouth from him and turned to me. \n\n\"I'm very glad you don't mind\". She whispered. Her eyes dropped to the tent in my jeans with the obvious suggestion that I remove them. \n\nI drunkenly went through my hazy feelings about joining them for a threesome, the invitation being clearly, silently offered by both. After my long slow consideration she continued,\n\n\"Or, ... do you just like to watch?\" I slowly nodded at this idea. She cooed,\n\n\"Mmmmmm, I love to be watched!\"\n\nCasey then returned to the huge cock in front of her, taking it to the point of choking. She reached around her back to untie the bikini top, pulling it off and revealing gorgeous tight B-cup breasts. Her pecs were obviously toned but her breasts still had that sexy jiggle as she moved. I love natural breasts like hers! They both worked John's shorts off completely and his legs splayed widely for her. I continued to be intrigued about the size, girth and beauty of his penis. Casey's worked her shorts and bottoms off until she was also completely nude. \n\nI sat back and just watched this wild display in my own living room as she bobbed up and down with increasing excitement. She subtly moved so that her bottom and gaping pussy were facing me more directly. \n\n\"Oh John,\" she said wetly, \"I love this gorgeous cock lover!\" she moaned around a mouthful of his huge penis. \"And Calvin,\" she added to me, \"I don't want to push you, ... if you aren't ready, but If you like, ...\" I waited as she bobbed up and down some more, then turned to glance at me over her shoulder, \"... my pussy would love your cock!\"\n\nI flashed back to earlier in the day when we were all playing in the pool and Casey had \"accidentally\" grabbed a handful of my erection underwater. I had been immediately embarrassed at my erection. We were all playing in the pool, throwing the football and my having brushed past her, took her top with me, as we both scrambled for the ball. I know that she got a full and complete feel of my hard penis in her hand. I had forgotten it until now.\n\nJohn was watching me with a slight smile, knowing that the decision was completely mine to make; he was obviously fine with whatever I chose. Casey's incredible bottom waved at me enticingly, her labia smoothly shaved and wildly swollen. \n\nShe slowly released her husband and turned to me. Remaining on all fours she crawled very slowly to where I sat.\n\n\"I totally get that this might be a bit much, ... after all you've been through and would never want to make you uncomfortable or move too fast, but if nothing else I would love to see you in the nude.\"\n\nShe waited a long beat, before slowly reaching for my jeans. \n\n\"You don't have to do anything,\" she continued, \"but it would turn me on so much to have you watch us in the nude.\" I allowed her to unbutton my pants and then she retreated a bit. I stood and slowly removed my shirt and jeans, my aching penis bouncing straight out as hard as I can remember is being. Her eyes burned with desire.\n\nI glanced at John, who was watching intently. \n\n\"Like I said,\" she purred, \"It is for you to decide, and we are totally fine with whatever, ...\", she glanced at her husband, \"but you are very welcome to join us, ... and fuck me.\" This last comment oozed out of her mouth, with such passion I physically trembled. She slowly turned and at last returned her hungry gaze to her husband's fat cock and began to suck him again. \n\nCasey's beautiful pussy drooled for me, but I was still unsure about indulging my growing thirst for the tightness of her body. Finally, she let John slip wetly from her mouth and crawled up to straddle him. Her nipples were immediately in his mouth. I got a spectacular view of her pussy lips being stretched around his considerable thickness and she slowly dropped all the way down onto his cock with a contented sigh. \n\n\"Ohhhhh yessss! beautiful thick cock in my pussy!\" She began to ride up and down, back and forth. \"Oh Calvin, I love it!\" she whispered, addressing without looking. \n\nI couldn't help taking my cock in hand and stroking it, watching this erotic show in my own living room. After a short while Casey stood, turned 180 degrees and sat back down on John's glistening cock. They didn't even guide it. It found her opening without assistance. Her eyes were on me the whole time. Casey's body was heaven as I watched her fucking her husband. \n\n\"Oh yes, Cal. Stroke that gorgeous cock for me!\" she hissed watching intently. \"You have such a beautiful big hard penis sweetheart.\"\n\nI was dazzled at not only being allowed to see her completely nude, but the added thrill of John's cock appearing and disappearing into her. Her body was shining with sweat as she rode him. My hand was a blur on my cock as she watched me jacking off to her. \n\n\"I understand if it isn't for tonight, but if you ever want to,\" she cooed softly, \"I would love to suck that gorgeous thick cock! Take you down my throat! Feel you fuck me with it!\" \n\nI began jacking it furiously. \"Can I watch you cum for me?\" she whispered. I noticed John leaning around her to watch me as well. I heard him moan in the affirmative. They both were watching me, as she worked her hips on him.\n\n\"Cum for me Cal! Shoot it for me sweetheart!\" I realized that she was right in my line of fire. \"Shoot it all over me sweetheart!!\" Without even realizing it I rose from my chair, stroking my aching cock right in her direction. \"Yes! That's it baby! Stroke that gorgeous cock for me! I love it, I want it! Cum for me! Show me!\" I was so close.\n\n\"Cum all over us!!\" When I heard John's voice telling me to shoot my cum on them both, realizing his interest in it as well, my brain began its own fireworks; I was seeing stars. \"We both want your hot cum all over us!\" he repeated. I haltingly took a step closer, my hand a blur on my cock, my orgasm rising quickly to the surface. I watched as Casey's hand slowly reached out to cup my balls gently, and John pushed forward in his chair a bit. \"Let us both taste your sweet cum!\" His voice echoed in my head.\n\nThat sent me crashing over the edge. My load shot out forcefully in 4 long streams! It was covering them both. Casey pulled my balls closer until the head of my cock slipped between her lips, as she moaned loudly, her orgasm taking her. Her other hand took hold of my shaft and withdrew me from her mouth and guided me over her shoulder and into John's mouth briefly! His body was lurching as he began filling his wife's pussy with cum.\n\n\"Oh, what a gorgeous cock!\" he hissed, as Casey withdrew me from him and took me in her mouth again, moaning her agreement around my shaft. \"Your cum tastes so good, stud!\" he strained as his orgasm waned. Casey's hand under my balls pulled even tighter as she swallowed me completely down into her throat. \"Yeah! Swallow that beautiful cock, baby!\" he whispered to her, watching her. His hands were working both her beautiful tits, as her body continued to jerk in her orgasm. \"Your thick cock felt so good in my mouth Cal\" he whispered, his eyes glued to it. \n\nCasey pulled me wetly from her mouth, turning her gaze to me. \n\n\"Would that be okay baby?\" she asked me. I simply grinned at them both. She smiled and guided me back to John's sexy mouth. \"Show me lover.\" She whispered to him. \"Suck that gorgeous cock.\"\n\nI watched as John leaned forward to take my still fully erect penis deeply into his mouth. His eyes rolled closed at the feel of it. \"Oh yes, baby!\" she whispered \"You are so beautiful sucking big hard cock!\" Her voice reeked of hot sex! His hand slipped around me grabbing my butt and pulling me closer. The sensation of his mouth was so hot! I was so turned on watching a man sucking me.\n\n\"Mmm hmmm!\" He moaned around me. \"Oh fuck, Cal! I love your cock stud!\" he hissed, slipping me from his lips, but immediately taking it deep again. My hand found the back of his head, of its own accord; my hips began working. \"Mmm hmm, Fuck my mouth stud.\" I was happy to oblige, as Casey and I watched him give me delicious head. \n\n\"Oh Cal! I love sucking your gorgeous big hard cock, man!\" He continued as a grinning Casey looked up into my eyes. The was fire in her eyes. She was so fucking turned on. They began moving again, fucking. Casey returned her gaze to her husband's mouth completely filled with my thick shaft.\n\n\"Deep-throat him lover!\" she whispered. \"Let me watch you swallow every inch of that gorgeous thick cock!\" His eyes flashed to hers at that moment. He withdrew to just my silky cock head in his mouth, steeling himself and drawing breath through his nose, he then descended onto my shaft. His eyes squeezed tightly together as I felt the tight constriction at the back of his mouth; there were still 2 inches to go. \n\nI was in a trance-like state as I watched him adjust, felt his throat open and my cock descend into his tight throat. His tightly stretched lips pushed into my trimmed hair as he took all of me. Casey gasped as his stomach lurched. He made a sexy gurgling sound but held me deep inside. \n\nCasey's hand, which had been gently strumming her clit, became a blur as she came again, watching this. John withdrew me sputtering and gasping. \n\n\"Again! Fuck me, I love it!\" he coughed. \"Fuck my throat stud! I love it!\" he drew me in again and almost immediately down his throat. His eyes squeezed tight and he gagged heavily but guided me in and out, in shallow thrusts deeply in his throat. \n\n\"Oh fuck!\" he gasped, releasing me again. \"I'm deep-throating you! I love your cock! I love your huge cock! I can't believe I'm deep-throating you!\" My hand on his head guided him a few times, slowly taking me full length, from just the head in his mouth to all the way down deeply into his throat! I'd never felt anything like it!\n\n\"Yes! Take that cock baby!\" I whispered. I was surprised at my own words. John's eyes flew open to mine, burning with desire. They seemed to smile at the pure heat of the moment. \"Suck my big cock, you gorgeous stud!\" John's smiling eyes remained on mine as I slowly pushed deeply into his mouth. They rolled closed as it squeezed tightly into his throat. \"Yes! Deep-throat me you gorgeous cocksucker!\" I had both hands on his head as I gently fucked the last inch or two in and out of his tight throat. \n\nAt this last comment, Casey had jumped up and turned around, dropping to suck John into her mouth as he apparently began ejaculating again. \n\n\"Yeah?!\" I exclaimed. Yesss! Shoot your load as you suck my big cock you beautiful studly cocksucker!\" \n\nMy own orgasm rose and roared in me without warning. I suddenly began to cum into John's throat! He coughed hard, my throat filled with my shaft, which forced some of my cum out his nose. He responded by pulling me in deeper. \n\n\"Oh fuck! Take my cum you stud!\" I cried out. \n\nHearing this, Casey suddenly moved up to see what was happening. John was holding onto my ass with a tight grip as I continued to fuck his throat. \n\n\"Fuck!\" I squeaked again. \"Take my cum down your throat, lover!\" Casey watched as her husband held on for dear life as I thrust in and out, abusing his mouth and throat. His face was flooded in tears, sweat and cum, running out of his nose and lips. \n\nSuddenly way too sensitive, I withdrew from his mouth, leaving him gasping and sputtering. I was gasping for breath as well, standing legs wide apart, straddling them both. I looked down into his eyes, still burning with intensity, his face awash with my cum. Casey was simply gazing in awe. ",
        "Without a single thought I leaned down and kissed him passionately. I realized that I was kissing a man and cleaning my cum off of his lips, at almost the same moment that I realized that I didn't care. It took a millisecond for Casey's lips to join ours and we three shared a passionate three-way French kiss. John's hand found the back of my head and pulled me tighter to his mouth. My foggy brain was reeling with the craziness of this entire scene.\n\nWe finally had to back off, gasping for breath. I stood, moving off of them, his eyes glued to my still heavy cock. He reached forward slowly, gently taking my thick shaft into his gentle hand. Casey laid her head on his chest watching silently. \n\n\"Fucking beautiful!\" he sighed. \"Your cock is so fucking beautiful!\" Slowly his gaze rose to mine. \"May I ...? One more time?\" \n\nI moved closer and Casey and I watched as he softly kissed the head of my cock. \"Such a beautiful, beautiful cock.\" He whispered. His eyes turned up to mine as he slowly drew me in, the head touching the back of his throat. They closed again as he pushed forward swallowing me deeply in, one more time. No one moved as he just enjoyed the sensation of holding me deep in his tight throat. Casey's hand gently slipped up to caress his exposed throat, feeling the bulge my thickness created there. He moaned happily from somewhere deep down. \n\n\"Mmmmm!\" Casey moaned into his ear. \"My sexy deep-throat cocksucker.\" John moaned happily around me, the humming sound actually causing me to swell a bit. His eyes came open at that, and I slowly withdrew. \n\n\"That was unexpected.\" She purred, her eyes rolling back and forth between us. \n\nI staggered backwards slumping heavily into my chair, panting. We sat for a long time just replaying and rethinking all that had happened. Casey moved to lay down, her head on John's lap, idling caressing his thick, soft shaft. We sat in silence for a long time. I was slowly returning to sanity, realizing that I had just done more sexual adventuring than ever in my life. Hell, I had kissed a man! And tasted my own cum!!\n\nI glanced at the clock noting that it was now 3:45 AM. I suggested bed and we all slowly, shakily rose nude and headed for the stairs. I led them into the spare room and showed them the bathroom. As I was leaving them for my own room, Casey moved forward and wrapped her arms around me and kissed me deeply. \n\n\"We typically wake up early and fuck to greet the day. You are very welcome to join us.\" She reached down to cup my balls. \"My pussy would still love to feel this cock inside me.\" Her hand caressed the full length of my penis a she grinned at me. We all shared a long intimate look, then I bade them goodnight. Sleep was slow in coming, reliving the past few hours, but finally I drifted. \n\nI woke at 9:30, hearing my guests fucking loudly down the hall. The sound almost immediately caused a stirring in my cock. The entire evening flashed through my memory. I seriously considered wandering down and watching but realized that I would wind up inside both of them. I was unclear if I was really ready for that and chose a shower instead. The morning light, and a woozy head, made me reconsider getting more deeply involved with them; I had gone in deep enough for now. \n\nOver coffee and breakfast, no mention was made of last night's activities. It was as if the sun made such a discussion verboten. We talked about them, they're lives, his football past and the days game ahead. They continued to check in subtly throughout the day to make sure that they hadn't pushed me too far too fast. I assured them they hadn't. It had been a magic evening, everything had been wonderful, but a repeat was not in the cards any time soon, I didn't think. I was still in a place of needing to work out my life, my way. \n\nThey stayed at William's house the following night, creating thoughts in me about what might be happening there, overnight. I shook such thoughts away, not wanting to second-guess my neighbor's behavior. On Sunday Casey found me sitting quietly by the pool and joined me. Her sexy bikini and the memory of her nude body, creating a twinge in my swim trunks. \n\nShe suggested that I might enjoy a resort that they sometimes went to. It was in the mountains and was attended by a very fun, casual-minded group of people. When I asked what 'casual-minded' meant she admitted that it was clothing optional, and no one frowned on very public displays of very intimate affection. \n\n\"People fuck in the open?\" I asked.\n\n\"Well, sometimes yes. John and I certainly do, but no one is required to do anything. I fact no one is even required to be nude.\" She grew more earnest, turning to face me fully. \"It's just that the people there are so open and understanding. Most of them I think have been where you are now.\"\n\nShe gave me a little more of the details, which actually sounded a bit like a therapy gathering, without the earnest therapy. \n\n\"John and I have gotten to know the owners pretty well over the years. It isn't inexpensive, but Joan and Dale often have people come and help out, tend bar, serve food, so that they can stay for free, but still join in the activities. You might have to stay in a tent, but it would be like a camp out.\" I was still a little reluctant. \"Well, if you want to try it out, I can put you in touch.\" I agreed to call them.\n\nA couple of weeks later I was on the phone with Dale, having called to get more info. When I mentioned Casey and John he seemed to light up. The fact that I knew them, and they had passed on his number seemed to be code for: 'We like this guy. You might too.' By the end of the conversation I had agreed to join them in 2 weeks and tend bar in exchange for staying there. Dale reiterated that no particular activity or even nudity was required, but most found it enjoyable and freeing.\n\nTwo Fridays on, I was in the car driving up into the mountains. The day was gorgeous, and it took a bit of doing to find the location. It was wildly off the beaten path, in a very remote location near a high mountain lake. The parking was quite a distance from the gates, adding to further discretion I supposed. A gorgeous young topless girl arrived shortly in a 6-seater golf cart to pick me up. Suzy was as bubbly as she was lovely. Tan all over, wearing a silk wrap around her waist which covered nothing I realized as the breeze blew it aside often. \n\nShe parked at the front gate which was also locked, adding to the secure feeling of the place. I felt like it would be the kind of place where even celebrities would feel safe enough to get wild. Suzy bounced around showing me the place. The bar, where I would work, the disco, the commissary, the various hot tubs and the pool, various play areas where couples and others could play in public. She then walked me through the accommodations area, showing me the various rooms so I would know where to deliver drinks if they were ordered in the rooms, and finally to the tent area, where I was staying. She hugged me lightly then headed off to prepare for the guests; they were to start arriving in 2 hours. \n\nI set up my tent, stripped off my clothes, having decided to blend in straightaway, and wrapped a light wrap around me, my uniform for the weekend. I headed back up to the bar. Dale and Joan met me in the bar and introduced themselves to me. They were very friendly and fit for an older couple; they were both nude and tan all over. Joan seemed a true naturist, small soft natural breasts hung gently, and her slightly round tummy was displayed without a hint of self-consciousness.\n\nI felt the once over they gave me, Joan's gaze lingering on the swing and sway under my lightweight wrap. I arranged the bar as Dale filled me in on my duties, which were light, and then welcomed me to join in the activities as if I were a paying guest. Sunning by the pool, volleyball, volleyball in the pool, the tubs, all were open to me.\n\nBy sunset the place was hopping. Most of the women were topless, most with augmented breasts; not my fave, but to each his own. Some of the men were nude, advertising for Viagra, others dressed in similar fashion to me. Friday night was mostly a gathering of the crowd in a get-to-know-you way, regulars greeting newbies, swingers surveying the pickings. I remained behind the bar chatting with a few of the single women, most slightly older, always welcome, occasionally included. \n\nBy Friday midnight some regulars had paired off with longtime friends and partners, other sat around in the bar gathering courage for tomorrows 'unveiling'. It had become sort of apparent that virtually everyone would be nude this weekend, comfort aside. The last stragglers were getting ready to head to bed when Suzy came bouncing in the front gate with a late comer. She was mid-sentence about everyone already having headed to bed. \n\n\"No that's fine with me. Kind of like it that way.\" Her guest replied. \n\n\"Oh, come meet Calvin. He's working this weekend too.\" Suzy told her, in a voice that belied her appearance. When I'd first spied Suzy I had expected the high-pitched squeal of the typical airhead. The voice that came out of her was low and creamy, like someone meant for phone sex. It didn't match her small stature at all, sounding more like a seductive dominatrix. \n\n\"Calvin, this is Danielle. She's going to be lending hand this weekend as well.\" As she said this, she innocuously removed the wrap at her waist. This would be the last time I would see her in it the entire weekend. Her pussy was bare, with beautiful full labia that pouted. \"Danielle, you're in the last room on the veranda. Calvin, can you show her where?\" I nodded, wondering why she got a room as a volunteer, when I had to sleep in a tent. \n\n\"I'll see you two in the morning, as I have to get up at 4:00 to start the kitchen. Sleep good you two.\" She smiled warmly, then turned to leave. Her ass barely bounced when she walked like it was nothing but muscle. I briefly considered how fun she might be in bed. As she disappeared around the corner, we both realized that we both had watched her every step as she left us. \n\n\"Nice bottom.\" Danielle offered, shrugging at being caught watching. I just smiled in agreement. \n\nWe chatted a bit about what Danielle was going to be doing this weekend. \n\n\"Just helping serve in the kitchen and working the BBQ. I used to cook in BBQ restaurants down south. Deep south.\" She corrected. I sensed that she was a touch uncomfortable at having offered details about her life, even such mundane ones and have restauranted before.\n\n\"Maybe I could get some pointers.\" I told her. She was non-committal and distant but agreed. \"Is your uniform similar to mine?\" I asked, mildly interested. \n\nDanielle leaned over the bar to see mine, and recoiled just slightly. \n\n\"I hope not.\" She blurted, then caught herself. \"I just ...\" I was taken aback that she seemed so visibly uncomfortable at the prospect. \n\nNot that she didn't appear to have a very nice body, I thought to myself, but again to each his own. \"I'm just not 100% sure that this whole, ... scene is for me.\" She seemed more unsure about the whole idea now. I was very curious but didn't press. I continued arranging glasses and booze, slightly put off by her distant behavior. \n\n\"This your first time here too?\" she asked after a long silence. I nodded. I wasn't in the mood to offer up my life story to someone who seemed as shut off as she did. \"How'd you hear about this place?\" \n\n\"Mmmmm friends.\" I replied, distantly. Another long silence.\n\n\"Always so chatty?\" She asked, with a bit of a chill. I looked at her.\n\n\"Normally, almost always.\" I challenged, icily . \"You?\"\n\nDanielle turned from the dig to look out over the last light over the hills. \n\n\"Sorry.\" She said. And after a long pause, \"I don't really know why I agreed to this.\" She turned to face my obvious silent question about 'why come here then?'. \"My friend thought it would be good for me.\"\n\n\"Your one friend?\" I asked harshly, immediately regretting it. \"Sorry! That sounded really harsh.\"\n\n\"It was really harsh\". She responded even more icily than I. We shared a long, embarrassed look. \n\n\"And yes, she is my one, ... friend.\"\n\nWe stood facing each other across the bar and I took in the sight of her for the first time really. She was slight of build, with what looked like cute little titties and a tight little waist. She was almost my height, tall for a girl, and reminded me of some female volleyball players in had known in school. Her face was kind of long, but pleasant and her hair was sort of a long bob, a pretty brown color. Her eyes looked very big and pretty and a beautiful shade of greenish-brown. I realized I didn't want to have an unfriendly weekend around her. \n\n\"You have very beautiful eyes.\" I blurted, not really meaning to. Danielle bristled noticeably. \"Sorry. Didn't mean to upset you with a compliment.\" She shook herself out of her discomfort. \n\n\"No.\" she countered. \"I'm sorry. I just, ...\" She looked thoughtful. I realized that maybe she had issues in her head. \"I've just always had, ... well trouble with compliments from men.\" After a long pause she added, \"And women. Compliments at all I guess.\"\n\n\"Hey look,\" I said, moving to exit this whole scene. \"Forget I ever, ...\"\n\n\"No wait!\" she countered, stopping me. \"I'm sorry.\" She seemed to steel herself. \"I don't want to get off on the wrong foot.\" Then she added, repeating to herself, \"She said, having totally gotten off on the wrong foot ...\" She shifted her weight nervously. \"I'm really sorry. I don't mean to start the weekend like a total bitch. I'm just, ... and you, ... dressed like that, ...and, ...\" her voice fell off. After a long thoughtful pause, \"I'm just not very good with, ...\"\n\nI set down my rag and walked around the bar. \"Can we start over?\" I asked. She softened visibly. \"I'm Cal.\" I extended my hand. Her eyes dropped to it.\n\n\"I'm Danielle.\" She replied taking it with a slight, shy smile. \n\n\"Allow me to show you to your room.\"\n\nI helped her with what I finally noticed to be her considerable luggage and led her down the dark path to her room. The sounds of people in the throes of passion wafted up to us through the night air. The veranda was a bank of 5 rooms downhill of the main pool. As we walked its length, we passed a room lit brightly with candles wherein 3 couples and another female were entangled in a passionate orgy. When we got to her room, Danielle was visibly shaken. \n\nI set her luggage on the floor in what was a very pretty room. For a cabin it was really nicely appointed and dimly lit. Large king-size bed, nice chairs, love seat. Danielle stood just inside the door, not moving, taking in the room. I stood watching her for a long time then said,\n\n\"You wanna come in?\" Her eyes rose to mine but she looked stricken. \n\n\"I think I'm, ... totally in the wrong place.\" I just waited, wondering if I would have to schlep all this luggage back up the hill. And what of Suzy, long abed. Who would get this girl to the parking lot?\n\n\"I really don't belong here.\" She seemed about to cry, if she didn't seem so proudly dead set against the idea of crying.\n\n\"Well,\" I said, feeling a bit futile, \"It's kind of late at night ... The room is nice though.\" I said looking around. She seemed to agree, a bit. \"Look, if it's the people down the way, ...\" Her look seemed to indicate that this was a big part of it. \"You are under absolutely no obligation to, ...\" She just stood there.\n\n\"You wanna sit?\" She didn't look sure. \"Wanna go back to the bar for a drink?\" She considered. Then she gave me a soft look that asked if we could. \"Lets go to the bar. I'll fire up the heater, we can just hang.\" She looked a bit relieved. \"We don't even have to talk.\" At that Danielle chuckled slightly. I brushed past her, held the door and we hurried past the porno room. \n\n\"Whatdaya drink?\" I asked her. I poured us both some Makers and she sat and I stood on opposite sides of the bar. It was almost dark under the glare of the neon beer adverts, the hissing heater trying to drown out the crickets. \n\n\"Sure is a pretty night though.\" I whispered feebly.\n\n\"Cal?\" she asked, then added, \"What is that? Short for Calvin?\" I nodded. \"I like Calvin better.\" I shrugged as if to say, 'whatever you like'. Long pause.\n\n\"I'm really embarrassed we got off on the wrong foot.\" She said quietly. I told her not to worry about it. \"I think I really suck with people.\" My look asked her why. \"Past bullshit. Lots and lots of past bullshit.\" We shared a long soulful look.\n\n\"You remind me of a friend from school.\" I told her. \"Sort of. Only in your, ... manner with people.\"\n\n\"I had a roommate in college. In fact we were roommates for all 4 years of school. Halfway through our junior year, he had become, ...\" I gave Danielle a sheepish look, then continued. \"... all moody and sullen. Wouldn't go out, no parties. Not even in our flat. Finally, I pressed him one night about what the fuck was up with him. Even I didn't want to spend any time him. It led to a huge fight and the silent treatment that lasted for 2 weeks. I was thinking about moving out and told him that, and, ...\" My voice trailed off at the memory. I noted that Danielle was bristling a bit at this comparison with her, but she was listening patiently.\n\n\"I've never seen him cry that hard, ever!\" I finally added quietly. Danielle leaned in at that, looking intrigued. \"I always thought he was a total stud with the ladies. He had more girls coming around ...\" Danielle was rapt. \"He was gay. Had been for years. Fought it like hell in his own head, but finally, when he accepted that fact it sent him into some kind of tailspin. He retreated from, ... well from everything and everyone.\" Danielle wore a look of recognition. \n\n\"Most of all he was terrified of telling me! What I would think? What I would do, or say? Out him to the whole school?\" Danielle listened without blinking. \"At first, ... I admit, ... that I worried that he was going to tell me, ... that he wanted to be with me. Yeah, I know, I'm a stupid fuck, right? But then I realized that he hadn't told anybody! No one! Imagine the feeling of being gay but hiding that from everyone!\" Danielle's look was very sympathetic. \n\n\"Turns out I shouldn't have worried. Years later he admitted that I was never really his type.\" My feigned look of shock made Danielle smile for the first time. \"Can you imagine that? Me?! He told me that he preferred softer, more effeminate guys. I guess I can't blame him. I would too.\" We both grinned at this admission.\n\nAfter a long reflective pause, Danielle wore a neutral mask and quietly asked,\n\n\"And this guy reminds you of me?\" I was taken aback.\n\n\"No! Well, ... Kind of. I don't know.\" She calmly waited. \"There is something about you that reminds me of him when he was at his quietest.\" She thought about it for a while then slowly nodded.\n\n\"I guess I can see that. I just have a lot on my mind in the past few years.\"\n\nWe sipped our drinks in silence for a while, just listening to the sounds of the dark forest, and the quiet hiss of the gas heater. \n\n\"So,\" I finally began again. \"You wanna give the weekend a chance? Too late to head home now anyway.\" She tossed the last of her drink back and then nodded. \n\n\"As long as you'll be my bartender if I need to talk?\" I grinned and nodded that I would.\n\nI walked her back to her room. The orgy was apparently finished, the lights out. She turned and offered her hand in a handshake. I shook it and left for my tent.\n\nI awoke at first light. My sleeping bag was nice and warm, but the air on my face felt quite chilly. I lay there for a moment remembering that the closest bathroom was quite a distance. Unzipping my tent I tiptoed nude to the nearest tree and relived myself. \n\n\"Ah, the great outdoors.\" I whispered to myself, finishing. I wrapped the thin material around my waist, feebly against the morning chill and headed up to the commissary. ",
        "Suzy wore an oversized white apron over her otherwise naked body, her bare bottom completely exposed, as she worked in the kitchen. Danielle was busy setting the tables. She was wearing a pair of very short shorts, which revealed a very pretty bottom. She wore a tight this athletic tank shirt, which hugged her cute breasts closely. She seemed startled when she saw me, then looked more uncomfortable at my seeing her outfit. \n\nI shrugged my shoulders and gestured to my this wrap, shaking my hips a bit, which swung my penis slightly, as if to say, 'Yeah? If you think yours is bad? Check my tiny outfit.' A shy smile grew on her face and she turned from the inference. \n\n\"Good Morning.\" Suzy called from the kitchen, not turning. Her voice sounded sultry, again not remotely matching her tiny stature. \"Why don't you and Danielle eat before the others come. There's nothing to do at the bar, unless someone wants a Bloody Mary. But you could pop the champagne for Mimosas.\"\n\nDanielle and I got food and sat across from one another at a table, eating silently. \n\n\"Sleep well?\" I asked her. She said she had, once she finally dozed off. I commented that it had been years since I slept in a tent under the stars, and that the early morning had been quite chilly but,\n\n\"... overall, I think I slept better than I have in months.\" \n\n\"It's so quiet, so dark!\" she said wistfully. \"I miss the great outdoors.\" After a long pause she added, almost to herself, \" At least it was quiet and dark after my neighbors finished up.\" We caught each other's eyes with a conspiratorial grin, recalling the orgy room from the previous night. Danielle caught herself quickly, realizing we were both referring to sexual activity.\n\nThe food was excellent and shortly guests began wandering in. Danielle began servicing the guests needs and I began to dole out Bloody Marys to the bleary-eyed crowd. Shortly after eating most wandered off towards the pool or the Jacuzzis. It was still a bit cool out and I was at the bar mixing one last pitcher of Bloody's when Mike and Carol, obvious regulars invited me to join them at the grotto Jacuzzi. Their invitation for sex was pretty obvious, but I did feel like a nice soak and maybe they would play while I simply watched. They did, loudly and with vigor for an older couple. \n\nMike was in pretty good shape but Carol appeared to have been the subject of a great many pins and tucks. Her body was really quite lovely but had obviously had just about everything modified. Her breasts were oddly high and round for a woman in, what I guessed was, her late 60s. Her nipples though were absolutely magnificent. It made me want to join them just for the pleasure of suckling those beauties. They were puffy like the top of a soft-serve ice cream cone. \n\nI sat back and witnessed their lovemaking until I excused myself to return to the bar. I was surprised when I stood to exit, and my penis was as rock hard as I ever recall it being. Carol winked and ran her tongue around her puffy lips so exaggeratedly that it was somewhat comical. I winked back and simply wrapped up and headed out. I was going to have to tread carefully around her. She seemed the type to go after what she wanted. I was reminded of Casey, only without any of the subtlety. \n\nI spent the day attending to the bar, but splitting that duty with a swim, another Jacuzzi, some sand volleyball, until my bouncing penis began to distract me. I noticed several times that Danielle would occasionally wander by and smile in greeting. She made a point of bringing me lunch when I remained at the bar. It was very thoughtfully prepared, with a tid-bit of everything that had been on the lunch menu. She didn't know what I would like, so she brought a bit of everything. I thanked her for being very thoughtful.\n\nI was very pleasantly surprised that she had donned a very tiny bikini top, which barely covered her nipples. Her small breasts were high on her chest and set on her frame so as to point them slightly outward, away from each other. The underside of the curve of them was exposed by the minuteness of the fabric. The effect was very sexy! She smiled shyly as she noticed my interest. \n\n\"I borrowed this top from Suzy.\" She said quietly. \n\n\"It looks like something she might own.\" \n\n\"Yeah! I could never buy something like this for myself.\" She told me, looking down at the lack of overage. \n\n\"Really?\" I asked. \"Too bad! Its perfectly adorable on you.\" Then without really meaning to add, \"Almost sexier than if you were just topless.\"\n\nHer eyes flicked up to mine, with a look of, ... almost panic, but not quite. I had crossed some line with this last comment. I was about to apologize when her look softened and then she whispered, \"Sorry. I'm just not very good, ...\"\n\n\"I know, I know. 'Trouble with compliments from men. And women.' I remember\" I related from our conversation last night.\n\n\"Sorry.\" She repeated. \n\n\"Stop saying that. You needn't apologize. Not to me. I get it.\" A wan smile grew of her pretty lips. \n\nShe stood by me as I made Pi\u00f1a Coladas for a handsome youngish nude couple. They were so enthralled with each other they really paid us no mind. I felt invisible, like the hired help, which I guessed we were. They took their drinks and wandered off without even a thanks. After they rounded the corner, Danielle's eyes came to mine. \"Fuckers!\" she said bluntly. We both then laughed out loud. Her hand settled on my arm for just a moment, a friendly gesture, but then she retreated immediately, as if my arm were hot to the touch. I think she regretted jerking it away so fast. I could see that there were many thoughts rolling around in her mind. \n\n\"At the risk of getting in trouble, ...\" I started carefully, \"I want to tell you that I simply recognize the fact, ... that you are a very attractive young woman.\" Danielle steeled herself and resisted comment. \"It's my opinion yes, but actually, my opinion aside, it is a simple truth that I recognize.\" She made a face as if to argue. \"Hupupupup! You don't have to argue the point.\" Her mouth snapped shut. \"Just breathe.\" She took a deep breath. \"Relax.\" The tension in her shoulders eased. \"Close your eyes.\" This took a long time for her to do. I realized that this was pushing a profound trust boundary. She squared her shoulders and slowly closed her eyes. \n\n\"Just listen.\" I whispered. \"I am looking at you now.\" Her brow furrowed, but her eyes remained closed. \"I see you. And what I see is a very beautiful, sexy, ... not completely confident, ... but very lovely young woman.\" A thin smile grew on her lips. \"See? Not terrible to hear.\" Her eyes came open. \"Hupupupup!\" I repeated and they snapped shut. \"Starting from the bottom, ... you have really cute feet.\" Her toes curled under, trying to hide, her lips made a pained shape and her brow wrinkled but her eyes remained closed. \"You've got gorgeous legs.\"\n\n\"I do like my legs.\" She whispered.\n\n\"I'm very glad, but let me finish.\" She chewed her lip in anticipation. \"As I said, ... gorgeous legs.\" I repeated but with much more emphasis, which made her smile. \"Sort of narrow hips, but perfect on your frame.\" She was startled that I had begun to move around her as I spoke. She didn't move. \"From behind, well, ...\", I leaned in close to her ear for this. \"You have a gorgeous, sexy bottom.\" I noticed that she was trembling slightly. The tiny hairs on her body were standing up. \"Beautiful bottom!\" I repeated whispering. \"Beautiful strong arms, back and shoulders.\n\n\"And, ...\" I was now in front again, having come full circle, \"at the risk of causing you agony with this compliment, you have such adorable, perfect, beautiful, small breasts.\" She visibly quaked at this last comment but did not open her eyes. I leaned in closer to whisper, \"Oh yes! Perfect breasts! I love all breasts, but yours are absolutely adorable, sexy and perfect!\" After a pause, and a nice long look, I added. \"And, ... right now, ... your nipples look so hard and lovely!\" I expected this to bring her out of her trance, but she stood statue still, just listening. \"Plus you have a really lovely face, beautiful! Straight, regal nose, and you have very beautiful, greenish-brown eyes. I think I told you this last night. I'm very glad your reaction is different today.\" Her lips curled in a slight smile. \"Mmmm yes! There it is! You have a very pretty mouth! I know that can sound kind of creepy, ...\" She nodded, smiling at this. \"But your lips are very pretty and your smile, when you choose to, ...\" her eyes slowly opened at this. \" ... when you choose to smile it really lights up a room.\"\n\nWe stood quite close, just looking at each other, smiling. Out of the corner of my eye I was her hands come up and cup her breasts. \n\n\"Shit! They are kind of hard.\" I glanced down to see her covering her nipples. I could see her beginning to form an apology, but then didn't. \n\n\"They are very beautiful and sexy!\" We gazed into each other's eyes. I waggled my eyebrows at her. \"Show me?\" I whispered. She seemed to consider it a moment then slowly lowered her hands. I waited a beat with my eyes on hers and then slowly lowered them to look. \n\nThey were even harder now, pushing firmly against the tiny triangles of bright yellow material. I just moaned a bit out loud as we both took in the intimate sight. \n\n\"Oh my!\" I heard her whisper, then noted her gaze. Suddenly we were both now taking in the image of my completely erect penis wildly tenting the front of my wrap. \n\n\"Oh hey!\" I said aloud, moving to cover myself. \n\n\"No! Wait! No fair!\" she said giggling. \"I had to stand still for you.\" she countered. \n\n\"Close your eyes.\" She told me. I looked up to see that she wasn't kidding. \"Close your eyes.\" She repeated.\n\nI straightened and then closed my eyes. \"I'm totally looking at you now.\" she teased. \"You are also, ...\" She hesitated. I was thinking that this was probably as hard as taking a compliment, giving one. \"You are also, ... very good looking.\" I realized how difficult this must have been for her. Her wording 'also' included herself in her compliment. She was acknowledging what I had just told her and including that in her comment. I remained motionless, eyes closed. \"I'm looking at your, ... penis?\" She asked, somewhat comically. \"Penis seems a silly word for what I'm looking at right now. You are very erect!\" she whispered to me, then continued at a low whisper. \"You have a very big, ... cock. And you're so hard!\"\n\nWithout any help from me, and despite any attempt to prevent it, my cock jumped at the comment, and danced a bit against the light fabric. \n\n\"Very big, ... very hard, ... cock.\" Her voice sounded like it was coming from a very great distance, dreamlike. \n\n\"Danielle?\" Joan's voice brought us both wide awake. Our eyes flashed open as if we were coming out of hypnosis, as Joan headed towards us. \"I was wondering, dinner is about to be, ...bla bla bla.\" I lost the rest of Joan's words as I backed up behind the bar, gazing at Danielle, as they talked about Suzy starting the dinner prep. Danielle flashed me an apologetic smile as Joan led her away. I stood there flushed and erect as a group of guests were wandering up the path towards the bar. I tried to push down my insistent penis to no avail. I simply pressed closer to my side of the bar. \n\nThe afternoon into the evening brought most of the guests into the bar area and I was very busy making and dispensing drinks. One of the highlights of dinner was the BBQ ribs that Danielle had prepared for dinner. She had brought me a plate and was right to be proud of her work. She smiled at me as I made over the flavor of the sauces. I was happy that she had warmed enough to me to be somewhat friendly. We both stood, her erect nipples proud and out, as I quickly ate, before returning to work.\n\nBy evening I was again behind the bar, witnessing a pretty wild set of party games in the bar and on the dance floor. The games ranged from mild, a lap dance contest, a body-painting contest which brought out some of the more demure guests, (much painting of bare breasts), to wild, like blindfolded blowjobs, trying to identify which of the male guests one was orally pleasuring. I recall wondering if this was a particularly wild night, or was this really just a sex club.\n\nAt one point, Carol, our modified, lovely older guest from my soak this morning, and her magnificent puffy nipples, came round the bar to drag me onto the dance floor for a turn. She was wearing a matching wrap to mine, her firm breasts not bouncing at all in time to the music, which had been painted with animal faces, their noses poking out from her nipples. At one point she untied her wrap and swung it around me, capturing me to dance closer with her. My penis snapped to attention without any bidding, and battered her stomach as we danced closely. \n\n\"Mmmm, maybe later we can dirty dance together in our room. I love it from behind! Mike loves to see that!\" She may have thought she was whispering these suggestions, but with the volume of the music, she was actually loud enough for the whole front row to hear. \"This would make my night!\" she said over the music as she reached down to grab and handful of my thick penis. \n\nI glanced over to see Danielle watching from a distant vantage as she cleared tables from the dinner. She looked shyly shocked and a bit embarrassed. Her eyes flicked over to me and then she turned and was gone. I continued to wonder if she would ever relax here.\n\nAround 10:00, most guests had paired off and moved to rooms for more private fun. Here in the mountains, darkness feel pretty early. From the edge of the dance floor, I could look down into the woods to a play area set up below, where a number of couples watched a group of what looked like 8 or 9 people all writhing on a huge makeshift bed. The music did little to drown out the exaggerated sounds of passion and the occasional cheer from the crowd.\n\nThere was a minor late-night surge at the bar, then all fell quiet at around midnight. I stood behind the bar checking emails on my phone.\n\n\"Well, ...\" Danielle's voice visibly startled me from behind. \"Sorry! Didn't mean to sneak up.\" She told me. \"Well, I made it through the first day.\" I congratulated her on doing so, then thanked her for both the amazing lunch and dinner. She had also made a perfect brisket and a pulled pork that was so spicy people were gasping but couldn't resist eating anyway.\n\n\"Can I join you for a bit?\" she asked.\n\n\"Of course! Please!\" I was happy to see her, as she seemed really only one of the normal ones there.\n\nI made us both some Mules and we sat at the front of the bar and chatted for a while. She admitted to still being out of her element, and the abundance of sex everywhere made her a bit uncomfortable, but overall everyone was nice and the resort was really pretty. She taken some time for a nature walk around the perimeter of the camp. After a lull in our conversation, I sensed that she was feeling tense again. \n\nWe shared a look that expressed my unspoken question about what was up.\n\n\"I guess I'm just worried about tomorrow.\" She offered.\n\n\"What's up for tomorrow?\"\n\n\"I've had a number of people tell me that I look like a volleyball player.\" I told her that I assumed as much also. \"I did play a bit in high school, but, ...\" I simply waited to see what this had to do with tomorrow. \n\n\"Joan was hoping that I'd join them on their side, playing for the home team.\" I waited for the problem to emerge. \"Plus a bunch of other guests wanted me to join in as well.\"\n\n\"Yeah, I'd be worried too.\" I joked, but immediately regretted making light. She seemed very uneasy. \"And the problems is?\"\n\n\"They play in the pool.\" She said quietly, then added, \"They play in the nude.\"\n\n\"Are you, ... shy?\" I asked. Her answer was immediate.\n\n\"Yes! I'm shy! I'm, ... very shy.\"\n\n\"You don't have to be nude.\" I offered. It did little ease her worry. \"You don't have to do anything, ...\"\n\n\"I know, but, ...\" There was a long pause. She looked like she had the night before, when she wanted to just leave. I could sense her steeling herself to tell me something. \n\n\"I don't look like, ... I mean, I'm not like, ...\"\n\nI simply remained silent, waiting to hear what was up with her, that she would have such an issue, with the current situation. She heaved a heavy sigh and turned to gaze out into the night. Moaned and giggling wafted up to us from the darkness, people have fun, people having sex.\n\n\"I just wish I could, ... just go for it. Not care what people think, not be such a chicken, but, ...\" I waited patiently. She turned to face me, seeming to judge whether she could confide in me. After a very long pause she added quietly,\n\n\"I'm trans.\"\n\nI heard her clearly, but the meaning took a beat to sink in. 'Trans?' I thought, 'What does trans mean, .... Ohhhhhhhhhh!' my brain finally clicked with what she was saying. \n\nI did my best to maintain an even expression. Questions suddenly flooded into my head faster than I could arrange them. To her credit she watched impassively as I processed this information, my face likely revealing the whip-saw of thoughts that crashing into one another in my head. I was running through my stream of compliments earlier, searching for a mistaken comment, misleading assumption. \n\n\"Trans?\" I began awkwardly, \"Trans from, ... Are you? Were you? I mean, ...\" She just waited for my fumbling to end. I flashed on my story of my roommate, which suddenly seemed both spot on and wildly inappropriate. \n\n\"I'm sorry.\" I began again, then quickly caught myself with, \"thaaaat I'm such a, ... that I, ...\" I was stuck. \"I'm going to shut the fuck up now.\"\n\nHer look was unreadable. Was she sorry she told me? Glad it was out there? Worried at my reaction? Still worried about tomorrow? Stupidly I even questioned myself whether 'she' was actually a 'he'. Then chided myself for being such a Neanderthal. \n\nFinally she began again slowly. \"I'm sorry, ...\" She caught herself for apologizing again, shooting me a glance. \"I'm not sorry, ... that I didn't say anything earlier. I mean, what am I supposed to say? How quickly do I casually drop into a conversation, 'Hey by the way,...I'm a girl with, ...'. I was shaking my head. \"What?' she asked me, looking somewhat irritated at my head shaking.\n\n\"No.\" I said simply. She gave me a stern, questioning look. \"No.\" I repeated. \"You don't have to say, ... I mean, ... you are who you are.\" This didn't help. \n\nA long pause developed between us, wherein I thought she might bolt. To her credit, she stayed. A guest entered the bar asking for 2 beers. I simply motioned to the fridge on the bar. He quietly got them and exited. We just shared a long look. \n\n\"I'm sorry, ...\" I began. She was clearly not looking for an apology. \"I'm sorry that this is so difficult. I can't imagine that there was ever any easy way to start conversations like this. And I'm sure there are no rules about when is the best time to, ... convey this information.\" Another longer pause.\n\n\"But,\" I started as I slowly reached out to take her hand. \"I'm very glad you told me.\"\n\nShe simply watched, as if from a distance as I held her hand in mine. \"I can imagine how difficult this is, was, to tell me. And that, ... you telling me, ... means that there's a reason why you wanted to tell me.\" Her eyes flicked up to mine. \"You could have easily just not said anything and, ... gone home and, ... who would ever know?\"\n\nWe shared another long silence. \"But,\" I repeated. \"I'm very glad you told me.\" A slow sweet vulnerable smile grew on her pretty mouth. \"And everything, ... that I said before, ... all of it, is still completely true.\" Her other hand now settled softly over mine. For the second time in as many days, she seemed about to cry, if she didn't seem so proudly dead set against the idea of crying.",
        "\"And so, ... tomorrow.\" I said, returning to the problem at hand. \n\n\"And so tomorrow.\" She repeated. We both sat thoughtful about the implications, when I realized I didn't really know what I was supposed to imagine. I realized that the little bit that I knew about trans people made me woefully inexperienced to offer advice. The transformation of a man into a woman was likely a tale filled with numerous twists and turns. Also, there were a number who got halfway there and decided that was as far as they needed to go, I guessed. Fuck! I had no idea what I was talking about. \n\nReturning to her I said, \"Well, as far as being nude in public, you don't have to worry about being sexy and attractive.\" Her look immediately told me that that was not the issue. \"I mean, ...\" My eyes involuntarily fell to her erect nipples again. \n\n\"Really?\" she said mildly irritated. \"These? Gee thanks!\" she sat upright and indicated her breasts, as if to say, 'My tiny tits will save the day?'. Even worse my eyes, now even more involuntarily, fell to the junction between her fit thighs. They fell onto a fairly subtle yet obvious bulge that belied the fact that 'she' was in fact still a 'he' in some respects. \n\nThis was clearly not a helpful response in this moment, and she stood, turned and stormed off. I watched her walk away, reeling with the severity of what had just transpired. 'Holy Fuck!' I thought to myself. 'Am I really such an incredible dick as to worry about my sexuality for having showered such compliments on, ... a guy?!!'\n\nI sat for a long time revisiting all that we had discussed, all my thoughts about this sweet young 'girl'. Would my thoughts have been so different if he was a guy? Of course! My mind demanded. I wasn't sure why, though. They were totally true at the time, and he was a guy! I was developing a headache, my mind was buzzing so furiously. \n\nIt took a moment to reach some clarity. 'No', I thought, 'if Danielle truly sees 'herself' as a 'her', then she's a \"her', regardless of the possibility of a penis. Beyond the pure scientific description of that defining her gender, what 'she' feels is the reality. \n\nIt took another bout of frenzied thinking to finally come to a solid conclusion: Regardless of the existence of a penis, Danielle is a sweet, sexy, beautiful young WOMAN!\n\nMuch less thought was required to come to another solid conclusion: You are a complete asshole!! She came to you, and it must have taken incredible courage, to confide a deeply held secret. And you let her walk away hurt and angry. \n\nI jumped off my stool and headed for the kitchen. I found her elbow deep in dishwater furiously washing dishes and chatting with Suzy.\n\n\"... and I don't mind helping, but I just need to go!\" \n\n\"I'm sorry you feel that way. I really like you, but we'll get you to your car, no problem.\" \n\n\"You car?\" I asked alerting them to my presence.\n\n\"Yeah. Danielle has an emergency and needs to leave tonight.\"\n\nDanielle's eyes burned with anger at me, but she said nothing and returned to vigorously washing the pot in her hands. \n\nI just stood there watching these two working in the kitchen. I must have stood there for a long time until Danielle turned to me,\n\n\"What?!\" I just shrugged, wanting to say something but I had no idea what. \"What?!\" she asked again, a bit louder. Suzy, almost immediately put 2 and 2 together and then 3 and 4, excused herself to clear more tables. Danielle and I were left standing there with her hands in the water. \n\n\"Please come back to the bar.\" I asked feebly. \"Please come back so we can talk a bit more?\"\n\nDanielle sputtered something and angrily returned to her task. \n\n\"Please.\" I repeated. She shot me an angry look and then muttered,\n\n\"I'll think about it. \n\n\"Please don't leave.\" I muttered pathetically and left her.\n\nI returned to the bar, which felt devoid of life. There were still some quiet moans and sexy comments drifting up to me from below, but the night was quickly ending. I sat alone for what seemed like a very long time. I had a view of the front gate, so if Suzy was gong to take Danielle to her car I would know. Nothing happened for a long time. The lights in the commissary went out. All that remained were the few trail lights leading down to the rooms and my neon in the bar. \n\nThe rear door of the kitchen closed and Suzy walked towards me.\n\n\"G'night Cal. Sleep good. See you in the morning.\" She said as she passed me. \"Oh!\" she added turning to me. \"And thanks for all your help.\" I watched her head down the hill to her own cabin and realized that likely meant that she was not going to be driving Danielle to her car. I dared to think that this was a good sign.\n\nI turned to see Danielle slowly walking towards the bar. I watched as she came closer, coming around the bar to me and took one of my hands. She pulled me to the spot where we had stood hours before. She heaved a heavy, sad sigh. \n\n\"I was so happy, ... on this spot earlier today. Happier than I've been in, ...\" her voice fell off. I was afraid to speak a word. \"It is very difficult for me, ... well, you know, to take a compliment, ... but when you were, ... complimenting me, ...\" her shoulders drooped a bit with emotion. \"It, ... just made me very happy.\" Her eyes finally came up to mine. \"So, thank you for that.\" \n\nAfter another long pause and a heavy sigh, she continued. \"My life has been, ... I don't even want to talk about that.\" I was going to tell her that she didn't need to, but her look cut me off. \"I like you.\" She finally managed. \"and for a moment, I thought, ...\"\n\n\"And I really like you too.\" I managed. She just shook her head. \n\n\"I mean, with me, ...\" I reached out and took her other hand in mine.\n\n\"May I say something?\" I asked quietly. She silently hemmed and hawed and then relented. \n\n\"I see you.\" I began to repeat from earlier. \"And what I see is a very beautiful, very sexy, ... not particularly confident, ... but very lovely young, ... woman.\" For the second time a small smile grew on her lips. \"Not terrible to hear?\" For the first time, in what I suspected was a long time, a tear formed in the corner of her eye. I gently wiped it away. \"And I really like you too.\" I repeated. Now she chuckled a bit, a very good sign. \n\n\"And, ...\" I continued, reaching for a sweater that was hanging over a bar stool and wrapping it around her shoulders. \"... those perfect, gorgeous nipples are going to snap off if they get any harder.\" She hugged the sweater around her neck. \n\n\"Yeah, well, I don't know if it's the cold, or just your, ...\"\n\n\"Here, let's put this on you.\" I took the sweater back and began to hold it out for her to actually put on. \n\nShe looked into my eyes, took a tiny step backwards and slowly reached behind her to tug at the ties of the bikini top. I stood rooted to the spot as she very slowly untied the strands at her neck and let the tiny top fall into her hand. I stood with the sweater poised in midair, just taking in the perfect beauty of her small, perfect breasts. Her nipples were achingly hard and just as puffy and luscious as Carol's.\n\nIt's chilly, but not THAT cold.\" She whispered. \"If you don't mind it, I don't mind it.\" She told me setting the sweater on the bar. \n\n\"I have to admit that I don't mind it.\" She giggled at that, her hands coming up, almost self-consciously to cover her breasts, for a moment. \n\n\"They're not very big yet, ... but thanks HRT for a nice start.\" She answered my confused look. \"HRT. Hormone Replacement Therapy. It's a big part of what makes 'me', ... 'me'.\n\nAfter a long nervous pause, she glanced down to my wrap, her eyebrows going up. \n\n\"But I'm very glad you like them.\" I noted that looking at her had made me very erect yet again. \"And, ... as for me, ...\" She turned her gaze to her own slight swelling in her shorty shorts. \"Well, ...\" her eyes came to mine as if to put the obvious and most prominent subject squarely on the table. \"Work in progress?\" she whispered\n\n\"And that part, ... I assume, ... would be your main concern for tomorrow?\" I asked. Her concerned look returned and she chewed her lip but didn't shy away, merely nodded gently. \n\n\"Well, from what I can see you are ALL sexy girl, ...\" I started.\n\n\"But from what you can't see?\" She asked, indicating what was clearly growing in her shorts. I glanced around. All was quiet and quite dark. I untied my wrap and set it on the bar with the sweater. My penis was so hard it hurt. Danielle took in a nice long gaze at my very hard cock. \n\n\"Calvin you have, ... a VERY beautiful cock, but I can't, ...\" She looked a bit panicked again. I was about to apologize for pushing things too far, too fast when she continued,\n\n\"Not here, anyway.\" My eyebrow went up in the corner ...\n\nA short 10 minutes later we were in her cabin. I had grabbed the remnants of a Makers Mark bottle and we had tiptoed through the dark to her room. She had grabbed my wrap in her hand to carry it, ensuring that I could not put it on. The entire walk my cock was bouncing excitedly with each step. \n\n\"I'm sorry, ...\" she started, but my look stopped her mid sentence, about always seeming to apologize for something. \"Not, ... sorry.\" I smiled at the correction. \"But I am, ... very nervous.\"\n\n\"I'm the one that is nude and hard here.\" I told her, stating the very obvious. \n\n\"Mmmm yes!\" she said eyeing my cock. \"Very!\"\n\nI poured us 2 drinks, which we both downed in one gulp. \n\n\"So, ...\" I began. \"If you were, ... going to be nude in the swimming pool tomorrow, what would that look like.\" I immediately regretted the ham-handed segue, as she rolled her eyes and tried hard not to take offense. She gave me a playful shove and I plopped into a chair.\n\n\"I haven't been nude with anyone for kind of a long time.\" I gave her a sober look, returning to my thoughts about how hard this must be for her. \"The last guy I was with was such a, ...\" she wore a pained expression at the memory, \"creep.\"\n\n\"Dani, ...elle! I corrected quickly. I realized almost immediately my use of the name 'Danny'.... \"I'm sorry. I have a penchant for shortening people's names. It's a term of endearment. But I just realized that you may have been, ... Danny, in the past? ...\". She nodded. \"Oh fuck!\"\n\nShe quietly related the story that she had been, in fact, born 'Daniel' and that most people called her Dan. Her parents had called her Danny. \"With a 'Y'.\" When she began her gender transition, she had simply changed the pronunciation at first, to Danielle. It was just last year that she was granted the legal ability to check the 'Female\" box on official forms. Her parents had cut her off. Her brother claimed support, but became kind of distant. \n\n\"This.\" She indicated, her finger pointing back and forth between us, \"Is really kind of difficult for me. Trust has become kind of a scary thing.\"\n\n\"May I,\" I began, rising from my chair, \"before anything else, ... may I just give you a hug?\"\n\nHer look softened and we crossed the room towards each other, and she practically fell into my arms. I held her so tightly, supporting her from simply collapsing. For the first time she openly wept as I held her in my arms. We stood like that for a long time, so much warm skin touching, not sexy, not lovers, just people, human beings together. It took a long time for us to separate. My hands dropped to her hips and hers to my shoulders. We shared a long wet gaze. \n\n\"May I kiss you?\" I finally, quietly asked her. She had kind of a frightened look. It was clear that this evening was kind of heading in a definite direction. Down this path had lain serious hurt and disappointment in her past, it was obvious. Her slight nod gave me such a thrill. \n\nKissing her was heaven. Her mouth was as sensual as I had suspected earlier. Her hand came to the back of my head and held me close as her tongue very gently touched my lips. I responded immediately and our tongues gently, slowly caressed each other. Her body pressed even closer to mine and for the first time the insistence of her erection made itself known against me. \n\nOur mouths parted but I continued to hold her sweet face in my hands and I gently drew her forward until I sat back down in my chair. I gazed up at her intoxicated look and goofy crooked smile. She was so nervous! I was too. My hands slid down her tight waist, over her soft skin and came to rest on her hips. My eyes took in her gorgeous breasts and nipples, and then dropped to the bulge in her shorts. Again, she trembled uncontrollably in my hands. I looked back up to her.\n\n\"May I?\" I asked simply. She chewed her thumb and nodded. My hands found their way to her breasts. They were soft and supple, barely a B-cup but so pretty. Her nipples were exquisite, and I told her so. The areolas swelled from the outer edge of the change in color, to tips that stood proudly from the surrounding little hillocks. I pulled gently and she bent towards me so that I could suckle them gently. Her breathing and the slight moan were so sexy as I went back and forth with them. \"Sensitive?\" I asked. She nodded in a way to express, 'Oh yeah!!'\n\nMy hand traveled down her body to her tight bottom squeezing it with a full grip, my hand being so much larger. Finally, I released her, and she stood upright again. I slowly took hold of the button that closed her waistband. Her stomach sucked in a bit as the button came through the hole. I took hold of the zipper tab and pulled it slowly, the sound that the zipper made, as it came undone, was the only sound in the room. The gap in her shorts revealed a floral pattern on a pair of cute little boy style underwear. \n\nMy smile at this cute floral display made her flinch in discomfort or embarrassment for a second, until I told how pretty I thought they were. It took some doing to get the shorts over her hips and down her strong thighs. What was left was the most wonderfully obscene, most beautiful display of a large erection behind flowery cotton. \n\n\"Oh my goodness, Danielle.\" I whispered. Another flinch of embarrassment met my gaze at size of her. My eyes rose to greet her very concerned look. \"I love it!\" I whispered. Her look softened a bit. \"Your cock is huge, sweetheart.\"\n\n\"Sweetheart?\" she repeated softly. \n\n\"Sweetheart.\" I repeated. We shared a look that confirmed that the appellation was okay with her. \"Oh you beautiful, beautiful, sweet girl.\"\n\nHer big penis looked to be fully erect and forced to lay sideways in her little boy shorts. 'How the fuck had I missed this before?' I thought. My hands caressed the soft cotton fabric over her hips and tight round bottom. Again, I asked her,\n\n\"May I?\" Her thumb still in her mouth, she gently nodded again. She had a look of excited terror that I may at any moment, bolt from the situation, not wanting to trust that this was really happening.\n\nSlipping my fingers into the flower-patterned waistband, my heart pounding out of my chest, I began to slip her undies down. The tight waistband drew her penis downward until the root of her large penis became visible. She was completely shaved, or waxed, such that only smooth silky skin surrounded the base of her hard cock. I slowly drew the shorts down further and further until at last it jumped free of its confinement. I could almost hear the 'Tah dah' of its presentation. \n\nMy eyes remained glued to this magnificent specimen of gorgeous cock, as my hands worked her panties down and off her feet. She now stood before me, nervously, gloriously, beautifully nude. A spectacularly sexy young woman with a huge, hard, beautiful cock. It stood at a slightly upright angle, revealing a set of perfect large balls, as hairless as the rest of her. \n\nI had never in my life been this close to another penis before. The pink color of the silky-smooth head was lovely. Just behind the head, the shaft was every bit as thick and the head; not overly-veiny but nicely textured. Her scent was subtle, but filled my nostrils; her natural odor mixed with a slightly soapy smell. Her balls were tight but also quite large. A perfect pair hanging tightly against her body, framed by her strong, tan, athletic thighs.\n\nI finally tore my eyes away from this magnificent present to see her slight nervous grin as she chewed her thumb, the effect was thoroughly charming. She raised her eyebrows as if to ask, 'What do you think? It's okay?' \n\n\"Oh sweetheart! You are so gorgeous!\" I reached up to pull her face down close to mine. \"You are such a beautiful woman.\" I told her, then we shared another passionate kiss. Holding her face in my hands, I kissed one cheek , then the other. Then I whispered in her ear. \"My beautiful, sweetheart girl! Your body is exquisite, every part of you. Your penis is gorgeous!\"\n\nGazing into her eyes, I reached one hand up to cup her tight balls. They filled my palm nicely, warm and a bit heavy. I traced the backs of my fingers along the underside of her large shaft, then wrapped my fingers gently around the thick shaft. It was an exciting, odd sensation, touching another cock for the first time. Knowing intimately what mine felt like when I held it, but now the feeling was only in my hand, not my penis; I was holding someone else's penis. And what a lovely penis. Without thinking I said those words out loud.\n\n\"Yeah?\" She asked demurely.\n\n\"Oh yeah! Your penis is gorgeous! And so beautifully, ... big!\"\n\nI reveled in the sensation of touching another hard cock, for the first time, never before even dreaming that I ever would. The thought had simply never dawned on me. I had none of the hesitation that I thought I might. After my night with Casey and John, I had briefly wondered, 'What did that make me? Bi-sexual? Gay?!' I had come to the conclusion that it didn't really matter. It was an 'in-the-moment' thing and I had really enjoyed it. It didn't necessarily change who I was.\n\nBut now sitting right in front of this incredible girl, with an incredible cock, I began to think that maybe there was more to it. I also quickly realized that I wanted it. I wondered what it would feel like in my mouth. I had wondered about the sensation that John had enjoyed so much. The feel of my hand sliding gently up and down the thick shaft, at once so familiar, and so foreign. \n\nJohn's words returned to me in a rush, \"Oh, what a gorgeous cock!\" he'd said. \"Your cum tastes so good, stud!\" and \"Your thick cock felt so good in my mouth Cal\" he'd whispered to me. As he really got into it, he'd said, \"Oh fuck, Cal! I love your cock stud!\" and \"Fuck my mouth stud.\" And finally, \"Oh Cal! I love sucking your gorgeous big hard cock, man!\" I could feel myself growing similarly aroused, gently stroking this big beautiful cock. I loved just looking at it, feeling it, exploring it.I realized that I wanted it , to taste it, to pleasure it. \n\n\"May I suck your cock?\" I asked softly, nervous but excited. Her body quaked at the suggestion.\n\n\"Yeah?\" she asked quietly, pulling back to look me in the eye. \"You okay with, ... you want to?\" I smiled at her, kissed her again. She returned the kiss with more passion this time. \"I would love that Calvin.\" She whispered to me, body trembling, then stood again. I was presented with this incredible penis again, pulsing and dancing in anticipation. \n\nI gently caressed the full heavy shaft with my hand, gazing at its beauty. The head of her cock was glistening with a drop of pre-cum, it was so silky smooth. My other hand was full of her balls, beautifully presented in the soft hairless sack. My mind flashed on the fact that they might be filling me with cum shortly; the thought giving me a shiver of arousal. I leaned forward and gave a slow wet kiss to the head. I was really going to do this. I kissed it again. 'I'm touching my lips to another cock!' I thought to myself. 'And I love it!'\n\n\"Oh sweetheart. I love your cock!\" I whispered as I opened wide and took the large head into my mouth. As my lips closed around the first cock ever to be in my mouth, my mind flashed again to John, who was overwhelmed with the thrill of sucking on my cock that night. He was so excited to have my thick hard cock in his mouth and now I was sitting here taking a beautiful hard cock into my own mouth. ",
        "My tongue washed all around, over the silky soft cock head. It felt to large and smooth and warm in my mouth. The taste was completely new, not like the women that I'd eaten in the past; this was wholly new to me, and a thrill! Shortly, the sweet and salty taste of Danielle's precum coated the inside of my mouth. I was filled with the thrilling thought that I was sucking a cock; I loved the idea!\n\nI parted my lips to take in more. It was such a mouthful of sweet thick flesh! I began to work it in and out drawing her more deeply in each time. My mind was reeling; I'm sucking cock! Not truly a man's cock, but a wonderful large sexy hard cock, nonetheless. And I'm loving the feel and the taste and the scent.\n\n\"Oh Calvin.\" Danielle swooned, her thighs trembling. \"You're wonderful! You've done this before?\" She sounded slightly surprised that I might have. \"You give wonderful head.\"\n\n\"Never once.\" I gasped, drawing her shaft wetly from my mouth. But I really love doing this to you.\" I drew her back in.\n\n\"Never?\" she gasped looking down into my eyes. I shook my head around her shaft. \"Oh my god! Mine is the first cock ever to be in your sexy mouth?\" I nodded and winked\n\n\"Oh fuck!\" she whispered dreamily. \"That turns me on like crazy!\"\n\nI pictured my family and friends briefly, shocked at my sitting here performing fellatio on such a big penis. I flashed on my ex-wife, the shock of her seeing me like this. I decided I didn't give a rat's ass what any of them thought. I was loving giving oral pleasure to this new partner, regardless of her sex!! I wanted nothing more in this moment than to give wonderful, exquisite, oral pleasure to this beautiful girl! With the incredible cock! I was sucking a cock and loving it!\n\nI went back down deeply as her hips began to move slightly. \n\n\"Yes, baby! Oh yes, baby!\"\n\n\"Oh Calvin!\" Danielle hissed. \"You got me so close already.\" I simply moaned around a thick mouthful of smooth cock. I withdrew it for a second.\n\n\"Yeah? Is that okay?\" I asked her, panting. \n\n\"Oh yes, baby!\" she swooned again. \"But I'm gonna cum soon.\" She sounded a little alarmed at this last bit.\n\n\"Oh yeah! Please!\"\n\n\"Yeah?!\" She again sounded concerned. \n\nI pulled her wetly from my mouth again. \n\n\"Oh yeah. Please do! I would love that so much! I would love to taste you sweetheart!\"\n\nI immediately took her deeply into my mouth again, gagging a bit from the contact with the back of my throat. I only had two-thirds of her in my mouth! There was still so much more to go. Again, I flashed on John, deep-throating me. How did he manage? And how I wished I could do that as well right now!\n\n\"Oh Calvin, yes!\" Danielle hissed. \"You are going to make me cum love!\" I felt her gently caressing my earlobes. \"Oh baby, yes!\" she panted. \"Suck me love! Suck me! You've got so much of my big cock in your mouth! You look so fucking sexy doing this!\" \n\nHer hips were moving now, jabbing her hard cock into my mouth. I loved the feel of getting fucked like that! \"You want it?\" she asked. I nodded, not taking her from my mouth. \"Yes love? You want my cum? All of it?\" I nodded again. Her look turned kind of serious, \"I cum a lot!\" she warned. I nodded again. \"Well okay baby. Oh, Oh yes! Here it comes then. Get ready.\" Her hand slid around to the back of my head as she began to shake, not so much thrusting in and out as simple trembling in my mouth. \n\nHer trembling turned to vibration as she rose on the balls of her feet and then a moment of stillness right before her first massive spurt went down my open throat. I coughed a bit but swallowed it. Once more, the image of John coughing my cum out his nose, flashed through my mind. Now I understood how insanely aroused he'd been! More cum flooded me. The first spurts powerful and voluminous but then a continuing flood of cum. \n\n\"Oh yes love! Take my cum. Take all my cum!\" I gulped a huge mouthful loudly. \"Oh yes! You're taking my cum! You're drinking my cum aren't you?\" I nodded my eyes wide, surprised by the insane volume of her load. \"Oh fuck lover, you're swallowing my cum aren't you? Oh fuck! I know cum too much, but you swallowing all of my cum, aren't you?\" Danielle sounded deliriously surprised at this. I kept swallowing and gagging and drinking it down. I was in shock at how much sweet warm cum she produced. \n\nI was further shocked when I suddenly realized that my own cum was spurting all over Danielle's legs as I sat on the edge of my seat, sucking her. The thrill of drinking her insanely large load made me cum without touching myself. \n\n\"Oh my god!\" She exclaimed. \"Are you cumming too?!\" She glanced down to confirm that I was. My cock was standing straight out and spurting my seed all over her legs. \"Oh fuck!\" she hissed loudly and began a few more powerful spurts of extra cum.\n\nBoth her hands went to the back of my head as she began fucking my mouth in earnest. \n\n\"Oh yes baby! Please take it! Take it all love! Swallow all of my huge load!\" Her huge cock was ramming me deeply. I was choking as much as I was swallowing her endless load of sweet salty cum. \"Please take me lover. Drink it all for me! Love my sweet cum!\" \n\nI glanced up to see her tugging her nipples. \n\n\"Oh you doing it, aren't you? You sweet, sweet man! You're drinking all of my cum, aren't you? I love it!\"\n\nFinally, she withdrew from my mouth with a jerk, too sensitive to continue. She leaned forward at the waist and kissed me deeply, her tongue taking in the taste of her own seed, still coating the interior of my mouth. \n\n\"Mmmm I love that taste.\" She whispered. \"Now you, love.\" \n\nShe got down on her knees and drew my still sputtering cock into her mouth. \n\n\"Mmmm! Luscious cock, love!\" She took me deeply in. \"Mmm you cock is so wonderful!\" She pushed my chest gently, until I was laying back in the chair. \"I love your big cock in my mouth!\" she told me her eyes ablaze with arousal. She looked like she might eat me; literally! \n\nI watched as she easily swallowed me down, deep-throating me without struggle, I felt the tight turn at the back of her mouth, then down into her tight throat. I watched her rise and fall taking the entire length again and again.\n\n\"Mmmm perfect! I love a gorgeous big cock to fuck my throat!\" She returned to taking the full length and ramming in all the way down. I had never had anyone deep-throat me before John, and again the feeling of having every inch of me swallowed repeatedly and expertly was heaven. \n\n\"Holy shit!\" I whispered. \"I think I'm gonna cum again.\"\n\n\"Oooh please baby! Please let me drink you too!\" She whispered passionately to me with a huge horny grin. She returned to performing like one of those oil jacks, only in high speed, up and down, up and down, my full length going completely in and out on her tight throat. I combed her hair back to watch.\n\n\"Oh sweetheart, get ready. Here I cum!\" I whispered, hoarsely. \n\nMy butt actually came up out of the chair as I begin to shoot again. Danielle took me all the way in as pulse after juicy pulse of my cum went straight into her throat. She then drew me to the tip so that the last jets of my cum filled her mouth. She just cradled my sensitive head in her mouth as I filled it with juice, eyes locked on mine. Finally she released me, my heavy cock flopping onto my thigh with a smack. She moved her face closer to me with a look of supreme happiness and a mouth filled with cum. Her eyes locked on mine and I could see her tongue swirling in her mouth. I was overcome with arousal and desire for this incredible creature.\n\nI pulled her to me and with a somewhat surprised look on her face, I kissed her mouth. It took a second for her to realize, but then her lips parted and we French kissed around a mouthful of my warm creamy cum. Our hands were all over each other, caressing, as we kissed. \n\nWhen we finally parted, panting. She sat down on her heels and we shared a look that was long and luxurious. We were both coming down from an incredible sexual high, back to a place where we were trying to figure out our level of mutual attraction, and what might be coming next. There was always a fearful moment when you realize, 'Shit, I really want to get out of here.' Finally, I pulled her up from her knees to stand before me. Instantly I was presented with her very large penis again. She seemed instantly shy and went to move. I held her in front of me and leaned in to kiss the head of her huge, perfect penis. \n\n\"Fuck!\" I told her quietly, \"I really love your beautiful cock sweetheart.\" Her look softened a bit. I opened wide and took in another wonderful mouthful of her, my tongue swirling around it. \"So beautiful.\" I said after letting it fall from my lips. She moved back a bit and sat on the edge of the bed, with a 'Now what?' look on her face. A long thoughtful moment passed between us. We had come very far in no time at all. I realized the extent to which I had crossed over a number of sexual boundaries.\n\nI stood from my chair. I recognized that this was a moment of truth. Her gaze was very guarded, waiting for the possible, perhaps probable, rejection of a lover that had crossed a line and needed to flee. I stepped forward until our knees were touching. Danielle made a reflexive move to protect herself, as if I might strike her. Had this happened before, I wondered?\n\nMy concerned look slowly turned to a wide smile on my lips as I took in the exquisite beauty of this unusual creature. Her eyes never left mine, but her fearful look faded into one the was more relaxed, then a shy smile grew on her pretty face. \n\n\"This is typically the moment when most men flee.\" She whispered quietly, half expecting just that. \n\nShe crawled backwards on the bed until she was sitting against the headboard, one leg pulled up and her large thick, semi-erect penis laying heavily over her thigh, looking sexy and attractive. I had noted the sexy manner in which her adorable little titties had bounced and jiggled as she moved backwards, her nipples still so puffy and erect. \n\n\"Oh, my sweet, sweet Danielle.\" I whispered to her. \"You are so lovely!\" She demurely rolled her bent thigh over to cover her big penis and shyly crossed an arm reflexively over her breasts. After a long moment spent just taking in the exotic beauty of this young woman, (I realized fully in my mind that she was all woman, regardless of her wonderful cock), she whispered softly,\n\n\"I'm kind of worried you're gonna run.\" My smile grew. I asked, \n\n\"May I kiss you again love?\" She was thoughtful. \n\n\"If you agree to stay the night with me.\" She whispered cautiously. I think she was pleased by my even wider smile. \n\n\"We might not get much sleep though.\" I warned. She shyly put her thumb back in her mouth, chewing it gently. She looked so fucking sexy laying there. Slowly her leg opened again, displaying her thick, softening penis.\n\nI crawled forward, moving her long sinuous legs so that I could kneel between them. Her legs wrapped around me and her hands moved to my arms as I leaned in close. \n\n\"You are such a beautiful, ... woman.\" I whispered, smiling down at her. She had an unreadable look, but looked vulnerable. \n\n\"It thrills me to hear you say that.\" We kissed gently but deeply, truly like lovers. Her hands caressed my face as our tongues gently danced. \n\nI pushed up, sitting on my heels between her sexy legs, taking in the sight of her. \n\n\"You are so fucking beautiful in the nude!\" she smiled shyly. I looked very obviously down at the beautiful thick penis sleeping gently on her thigh. \"And you,\" I said addressing her penis directly, \"you are so fucking beautiful!\" I gently traced a fingertip lightly along the length of her fat cock, which jumped a bit at the touch. \n\n\"You've really never had a cock in your mouth before?\" She asked. I shook my head. I quietly related the story of my recent encounter with John and Casey at the fourth of July party, how John had sucked me, even my fleeting interest with John's penis, but,\n\n\"... no, never even thought about it until tonight.\" My eyes went to hers. \"I know what you're thinking, my mouth was a virgin until you.\" Her eyes burned with excitement as she nodded gently, grinning.\n\n\"You can't know how much that turns me on.\" My gentle finger touch became more of a firm caress, on her swelling, growing cock.\n\n\"I'm having an inkling.\"\n\n\"Well, for a first-timer, you were wonderful! Hell, you were wonderful regardless!\" We grinned at each other, at the thought. \"And I'm sorry.\" She continued, \"I should have warned you that I cum, ... a lot! I don't know why.\" Leaning closer to her pretty face I told her,\n\n\"I loved every delicious drop!\"\n\n\"Yeah? Really?!\" She seemed surprised. She responded to my questioning look. \"I was recently, ... well not so recently, I guess, ... with a guy who I, ... surprised like that, and he choked on it badly.\" Again, she had an unreadable look. \"He punched me in the face.\" I was shocked, then immediately pissed for her. \"Beat the shit out of me actually.\" I ached for her. \"Not a very nice guy, really.\"\n\nI moved to lay next to her and pulled her onto me, her head on my chest. \n\n\"It kind of thrills me that you cum that much. I really enjoyed taking it all for you. Well, taking it for me actually.\" She snuggled closer at this news. \"Honestly, I think the taste of your cum is really very delicious! I really love the taste of you.\"\n\n\"I've always liked it.\" She murmured quietly. \n\n\"You eat your own cum?\" I asked gently. She simply nodded. \"Fuck! That's kind of hot.\"\n\nWe lay like that for a long time. Softly she finally asked,\n\n\"Calvin, ... can I kiss you again?\"\n\n\"Of course!\" I immediately responded. Gleefully, she moved up to throw a leg over me, straddling me. The feeling of her heavy cock flopping onto my stomach and the sight of her pretty tits jiggling, thrilled me.\n\nWe shared a long soulful look, which thrilled me. She looked at last to be relaxed, at peace even; the first time since I met her just one long day ago.\n\n\"I feel like I've known you a long time.\" She whispered. I told her that I was just thinking that very thought. \n\nHer lips softly joined mine and we kissed softly and sweetly for a long time. She held my face, as if possessing me and moved her face from side to side, aligning our noses first to the left then the right. She kissed my right cheek, then my left. After a while I noted her hips beginning gently to move. Her cock was growing on me, weighing heavily.\n\nShe pushed up off me as we both took in the sight of her beautiful erection. She gently apologized. My hands moved from her thighs to her gorgeous penis and gently stroked and caressed her length and girth. \n\n\"You are so big, love. So Beautiful. So, ... suckable.\" She gave me a look that asked 'Yeah? You think?'\n\n\"Mmm hmmm.\" I moaned. Almost to myself I said, \"Who would've ever thought it, but I love sucking cock!\" My eyes went to hers. \"Well, ... I love sucking YOUR cock.\"\n\n\"I'm very glad!\"\n\nI slid down a bit and she rose to her knees.\n\n\"If that's the case, Calvin, lover, then feel free to suck my big, beautiful cock!\" I parted my lips and she pushed forward, easing her thickness into my mouth. \"Oh yes! Wonderful. I love being your first!\" She held onto the headboard and gently thrust in and out, my tongue swirling on her silky thickening shaft. \"Oh yes! Such great head, sweetheart. Suck that big hard cock!\" she was gazing down at me, blissfully. \"You look so beautiful, ... with a nice hard cock in your mouth.\n\nI withdrew her for a moment, \"I really wish I could swallow you, all the way down.\" Her eyes widened at this admission.\n\n\"Ooooh lover! I love to deep-throat!\" She gave me a thoughtful look. \"I think, ... maybe, ... someday you will! For now, this is heaven to me! Just to have you here! To have you in my bed. Making love like this.\"\n\nMy cock was now growing to full erection again. She reached around to feel it.\n\n\"Mmmm! I want to suck you again, too!\"\n\n\"No.\" I held her hips in place. \"Just stay right here! My turn. I'm loving sucking your cock lover.\"\n\n\"But, ... Calvin,\" she whined as if to complain. \"I think I might cum again.\"\n\n\"Mine!\" I told her, withdrawing her thickness, momentarily, \"I want to drink it down, all over again!\"\n\n\"Yes?\" she asked softly. \"You want to taste it again?\" I nodded, my mouth full. \"Ohhh! You want to swallow it again?\" She sounded a touch more intense. It was obvious that this was a huge turn-on for her. More nodding from me.\" Fuck!\" she squeaked, \"Will you? Will you swallow all of it again?\" I nodded and winked. \"Fuck! I have to admit that makes me crazy turned on!\"\n\n\"Oh fuck yes Calvin, lover! Take all of it! My huge load of sweet cream! I know adn I'm sorry that I shoot so much fucking cum, but you're going to drink all of it, aren't you?\" Her hips were moving, fucking my lips with shallow stokes. Her eyes squeezed shut as she approached the edge of her orgasm. \"Oh baby! Let me feed you! Let me feed you full of my rich, sweet, creamy load. I sometimes shoot into my own mouth and swallow it all. I swallow all of my huge load of cum, but now you are, aren't you, baby?\" Again her hips simply vibrated as she reached her peak. \"Oh yes! Here you go my love! Take it from me. Feed on my huge load of cream!\"\n\nAgain the first shot was powerful and massive. I was prepared and didn't choke this time, but needed to swallow and swallow and swallow, like milk from a glass. Her cum really was intoxicatingly delicious! Her head was thrown back, face to the ceiling, as she tugged her gorgeous nipples. Her thickness pulsed heavily in my mouth. \n\nI realized that I would really enjoy doing this, every single day. I could become addicted to this girl!\n\n\"Yes, sweetheart. Drink me! Drink me down! Drink my cum love!\" She gently caressed my face, as her spurts grew less in volume and force. \"Suck my big cock. Suck my big, beautiful cock.\" For the second time tonight I was swallowing an immense load of cum! I was actually feeling kind of full, like from a big meal! My belly full of her two massive loads.\n\nShe finally withdrew, my jaw aching from the stretching. We kissed deeply and she rolled off me, panting. \n\n\"Oh my god, Calvin! Where did you come from?\" I rolled towards her and cupped one of her perfect breasts. Her hand closed over mine and squeezed a bit. Her other hand found my erection and squeezed it gently as well.\n\n\"Fuck! I wanna suck your gorgeous cock again.\"\n\n\"Later.\" I whispered. \"Maybe tomorrow?\" Her concerned look that I might leave her returned. \"For now, let's sleep?\" She moaned in agreement, rolling away, but pulling me to her in a big spoon. \n\nShe turned out the light as I pulled up the blankets. We lay quietly for a long while.\n\n\"Can I admit something?' She asked softly in the dark, I nodded into her neck. \"You make me very afraid. In a way!\" she corrected quickly. \"In a way you thrill me beyond belief. No matter what happens.\" I hugged her tightly to me and sleep took us quickly.\n\nWe both jolted awake at her alarm. It was still dark out, and it took me a moment to recollect where I was. It had been quite some time since I woke up with someone else in bed. I was still spooning Danielle with her perfect, pliable breast in my hand. I kneaded it gently, as she pushed her bottom into me, My full heavy morning penis pushing into the small of her back.\n\nWe lay like that for a long time, quietly, each on our own thoughts. \n\n\"How are you this morning?\" she quietly asked. I had been laying there asking myself that very question and considering the answer. I had done things last night that I had never even imagined. I considered that I was quite possibly bi-sexual, having enjoyed the thrill of performing fellatio on a very large penis. I had even swallowed an extraordinarily voluminous load of semen; twice! \n\n\"I'm very good!\" I whispered into her neck, kissing it. I really was. Last night was incredible, she was incredible!",
        "She scooted even closer to me at this happy news. I suspected she did not get that answer very often. \n\n\"I'm very glad! I was kind of worried. Most guys freak out a little bit, the morning after.\"\n\n\"I'm very sorry for that.\" I told her. I suddenly felt very protective of this beautiful, young, vulnerable girl. Her hand reached back and gently pulled the back of my head closer to her. \n\nHolding her soft, silky skin was wonderful. On an impulse I stroked my hand down her tummy and softly took hold of her full sizeable penis. She froze a bit at this gesture, but only for a moment. She then moaned her pleasure at being touched. \n\n\"Be careful there. I may need more attention.\" I caressed her full round balls. \"You're going the right way for more of the same.\" She teased. \"And I have to get up and help Suzy in the kitchen.\" \n\n\"I know.\" I whispered. \"You are such a beautiful young woman, but your gorgeous cock is such a new and unique thrill for me!\"\n\nI rolled her to me and we shared a long look. I leaned and kissed her sweetly, my hand still softly stroking her growing erection. \"I would really love to explore you more later, though.\" She gave me a sad, surprised look, as if she had never heard anyone say this to her before. \n\n\"Sorry I haven't brushed my teeth yet, but, ...\" she said before kissing me quite passionately. \n\nI lay in bed another moment as she got up. \"And to think,\" she said playfully, as she brushed her teeth, \"I was really afraid, just yesterday, of you seeing me in the nude.\" As she said this, she moved her hips such that her length swayed back and forth in front of me. It was intoxicating how much I desired to have her cock in my mouth again. \n\nShe pulled up her shorty shorts, showing me that she was not wearing her panties under them, then pulled her tiny tank short over the top. We shared a look for a moment then she slowly, nervously removed the shirt again. She gave me a questioning look as to whether she should go out like that. \n\n\"Up to you.\" I told her. \"Just know how perfect your breasts and nipples are. I will never be far away, if you need me for support.\" Her grin lit up the room and she threw the shirt at me and strode to the door. She took a moment, for courage, and then flashing me a smile and a kissy mouth, headed for the commissary. I got up, wrapped my skirt and followed her. \n\nWe worked together setting up for breakfast. Suzy silently subtly watched us, I think having figured out what happened last night. I was constantly distracted by Danielle's bouncing titties, throughout breakfast. There were some nice, flattering comments for her from other guests. \n\nAfter breakfast, Mike and Carol, again invited me to join them at the grotto Jacuzzi. As Danielle was standing right there, I asked if she wanted to join us. She looked nervous and I told them we'd meet them there. Carol looked happy that I would join them, but also seemed to wonder about this sexy young girl joining us. \n\n\"I don't know,...\" Danielle began.\n\n\"Well,\" I told her, \"If there is any chance that we all might play volleyball together later, this might be a good chance to, ... get your feet wet?\" She made a pained face at the lame pun, but was again thoughtful. \"I think these two have likely seen it all anyway? I'd be shocked if they were not completely okay with all of it.\"\n\nDanielle grudgingly agreed, after I told her that as long as I was so into her, it didn't really matter what other's thought. I was beginning to believe the hype about this place being a safe place to explore and grow. I wondered to myself if this would put it to the test. We walked hand in hand to the grotto. Passing several people on the way, who took notice and smiled at our seeming to find each other. \n\nCarol visibly brightened when we arrived. I stood chatting and casually unwrapped myself as I had yesterday. They both took in the sight of me without outwardly making comment or gesture. I stood on the top step of the Jacuzzi, as Danielle unbuttoned her shorts. Stepping out of them, and displaying herself openly, both Carol and Mike took obvious notice of her, then knowingly, I think, turned their full attention to me. As I had suspected, they seemed to know when the person was nervous and how to act blas\u00e9 in a way as to take the focus off the nervous newcomer. \n\nI got into the tub and held a hand to help Danielle, who stepped into the tub, her large penis swinging gently. We took a seat, side by side, opposite our new friends.\n\n\"I'm so glad you two connected.\" Carol said breezily. \"I assume you two met just yesterday?\" We both agreed we had. \"Oh, what a thrill that is, first days together.\" She turned and kissed Mike passionately. \"Sorry.\" She said, \"Makes me kind of turned on, that thought.\"\n\nDanielle laid her head on my arm and we watched as they began they morning ritual of passionate kissing then obvious heavy petting under the water. Carol apologized for their behavior.\n\n\"No, please! Enjoy! It was a thrill to watch yesterday.\" Carol gave a sexy wink as she moved to sit on the edge of the tub. Mike moved smoothly between her thighs to begin eating her pussy. \n\n\"We just love an audience.\"\n\n\"I know what you mean.\" Danielle responded, squeezing my growing penis under the water. I looked at her to see her give me a suggestive wink. \n\nDanielle practically lifted me out of the water to sit on the edge and immediately began taking me into her mouth. \n\n\"Oh, how beautiful\" Carol sighed, watching. Mike briefly glanced over at her comment and gave me a quick smile before continuing on his wife. \n\nDanielle had me rock hard instantly and was taking me full depth in no time. Carol continued a soft quiet commentary, watching us. Her voice growing in passion as she approached orgasm. \n\n\"Do you both, ...\" She whispered, obviously curious about us, but suddenly seeming embarrassed at the question. Danielle withdrew me from her mouth and gave me a panicked look, her back to Carol.\n\n\"Oh, of course!\" I replied, almost without thinking. \"And its equally beautiful!\"\n\nI noticed that even Mike had turned to see, at his wife's question. In a impulsive moment, I drew a shocked, but willing Danielle out of the water to sit next to me on the edge. Her cock was impressively erect. I kissed her passionately as I took her thick hard shaft in my hand and began stroking slowly, gently.\n\nAll eyes were on me as I dropped slowly into the tub and took my place between her thighs. Giving a quick thought as to the audience, I gently turned Danielle to profile and leaned down to draw her gorgeous big cock deeply into my mouth. Danielle gasped loudly in surprise, as both Carol and Mike sighed with aroused pleasure. I moaned aloud around her thick cock in my mouth, and Danielle leaned back on one arm and brought her other hand to the back of my head. \n\n\"Oh fuck, baby! Oh! You suck me so good!\" Out of the corner of my eye I saw Carol, never taking her eyes off my mouth, pull Mike's head back into her pussy. \n\n\"Oh yes he does! Obviously!\" Carol sighed as Mike resumed. \"You two are so hot together!\"\n\nCarol came in no time and traded spots quickly with Mike, who wanted to be able to watch as well. \n\n\"Oh, Calvin!\" Danielle whispered loudly, \"You give the most wonderful head, baby! Suck that big cock sweetheart!\" There was a long sexy period where Carol and I both bobbed up and down our respective lover's large penises. \n\n\"Oh Daniele,\" Mike said, speaking at last. \"Cum with me! Let's give them what they both want!\" Carol and I both moaned the affirmative together. \"Oh yes.\" He moaned. \"Cum with me! Let's both cum at the same time!\"\n\nAs if by plan, they both did, quite noisily. Mike fed his wife, and Danielle unleashed another flood into my mouth. \n\n\"Oh, Calvin! Oh baby, yes! Take it from me. I love it when you take it all!\"\n\nI noticed that Mike was done and Carol lifted her head to watch me. All eyes were on me as I gulped and swallowed and drank Danielle's massive load. \n\n\"Oh my god, yes!\" Danielle squeaked, then told our friends, \"I cum so fucking much but Calvin takes it all! It turns me on so fucking much that he does!\"\n\nAs if to illustrate the point, I made much of my loud gulping as I drank her to completion. I could tell that Mike and Carol were amazed, trance-like watching. Intoxicated as I was with her sweet cum, I suddenly was overcome with my desire. I withdrew to the soft head, gathered breath into my lungs and pushed her back in deeply. I felt the pressure in the back of my throat but pushed harder. \n\n\"Oh! Baby!\" Danielle swooned, realizing my intent. \n\nI felt the head of her huge cock enter my throat. I gagged hard, which had the odd effect of opening my throat more. Flashing on John, I finally understood his burning need and pushed farther. Danielle's cock, once it entered, slid deeply into my throat. My stomach was lurching hard, trying to empty its contents and my eyes squeezed tears, but I held her massive cock deep in my throat in triumph!\n\nI felt my lips pursed around the thick root of her gorgeous cock, my nose firmly pressed into her tight tummy. I felt her cock behind my breastbone. \n\n\"Deep-throat!\" Carol sighed, amazed at my ability to take her all the way. \"How beautiful!\" \n\nDanielle finally pulled me off of her and gazed into my eyes, her look of concern so charming. \n\n\"Oh baby! You okay?\" I was coughing and sputtering, but had to giggle at her adorable display of distress. \"Oh my god!\" She panted. \"No one's ever, ...\" She wiped the tears from my face and leaned in to kiss me.\n\n\"Goodness! Calvin!\" Carol whispered. \"That's a lot to take! I'm very impressed!\"\n\n\"I'll say!\" Mike followed. Obviously impressed himself.\n\nDanielle slid back into the tub, never taking her eyes off me. She wore an expression of complete abandon. It was surprising to see her so unguarded and open. Her hands held my face and she continued to gaze into my eyes. I don't think she even noticed when Mike and Carol quietly got up and left us alone. \n\nFinally, a shy smile formed on her pretty mouth, as she shook her head gently, disbelieving. \n\n\"No one has ever, ...\" she started. I was still wiping my eyes. \n\n\"I can't believe, ...\" I started. I never finished as she planted her mouth on mine in a deep, passionate French kiss. We stayed in the tub for quite a while, just holding each other, not speaking. \n\nFinally, Danielle was the first to softly say, \"Well, we're certainly out now.\" I asked what she meant. \"Well, a good story like ours will travel very fast.\" I moved to look at her. \"I just think that most people will know about us by lunch time. I hope you're okay with that.\"\n\n\"Trust me.\" I told her, \"I'm okay with whatever anybody else thinks.\n\nDanielle wore a hopeful but somewhat guarded expression. \"Can I make you a mimosa?\" I asked grabbing both my wrap and her shorts in my hand and headed for the bar area. She stood, looking adorable in the Jacuzzi, the water right at the level of her waist. She looked like the most adorable girl, except for her lovely big penis floating at the water level. Her look then changed to express a bit of discomfort.\n\n\"I'm not sure that I'm ready to walk around like this.\" She looked down at nakedness. \n\n\"Just from here to the back stairs?\" I dared, knowing that no guests ever used these stairs. Danielle considered it, looking a bit stricken, but then smiled in agreement, taking my challenge. I reached out a hand to help her out of the tub.\n\n\"Why thank you kind sir.\" She said with a curtsy, looking cute. I pulled her into my arms, then gave her a serious look.\n\n\"You must tell me at once, if I push too hard. I love to challenge, I guess, but I don't want to go too fast for you.\" She smiled and kissed me in response. \n\nWe walked hand in hand, both penises swinging and swaying as we headed for the bar. We ran into Suzy rounding a corner and Danielle jolted to a stop. Suzy took a moment to give us the once-over, then quickly adjusted to this new paradigm. She moved gently to Danielle, arms open. I watched as she hugged my new, ... 'Friend'? I thought to myself. I realized that I hadn't thought that far ahead. We had had sex but, I realized I hadn't given a single thought to what might be ahead for us. In that moment I realized that I really wanted to spend real time with this girl. \n\nThey shared a real, earnest hug for a while. The Suzy reached out to include me. I stepped forward into their hug and the three of us stood like that for a long while. Danielle seemed genuinely happy for this honest display of affection and acceptance. \n\n\"I guess it's obvious that I heard about you two.\" She said softly as we hugged. Then she pulled back a bit, taking in the nude vision of Danielle's entire body. \"I assumed you were trans when I met you. I'm very glad to know the real you now.\"\n\nI retreated a bit, as they hugged anew. \n\n\"And I hope you'll come back to my little slice of heaven, ... all the time!\" Danielle gave her a quizzical look. \"Actually, I own this place. I have Joany and Dale play like they're the owner's, ... it's easier for me. I'm actually kind of shy with people.\" We both had surprised looks on our faces. \"Yeah. Actually, everything here,\" she gestured around us, \"I built, ... myself. I'm very good with construction. Better than with people.\"\n\n\"Wow!\" I started, \"That's a lot of work for a young woman of, ...\" I realized I didn't know how old.\n\n\"I'll be 40 next year.\" She added. Now we both gaped at her. \"Yeah, I know. I get that a lot from people that know my real age. Good genes, I guess.\"\n\n\"And a killer fucking body!\" Danielle added. Suzy struck a quick pose, with a wide smile.\n\nI suddenly realized that we must be rarefied company to be included in, what I assumed was, a small group of people that knew these private details. \n\n\"Enjoy yourselves, you two.\" She said breezily as she continued to wherever she was going. \n\nAs we continued towards the bar, I took in the encampment in a newfound appreciation for all that Suzy had built by hand. The construction was wonderful! We reached the back of the commissary and Danielle halted. We were about to round the corner into the bar area, where a few people were mingling. I handed her her shorts and she stood for a moment, considering. After a brief pause, she headed quickly, fully nude, to the bar and behind it. A couple of people turned to see, but most were oblivious. \n\nI joined her and we stood shoulder to shoulder looking out at the crowd. Matt, A heavy-set man in his forties, husband to a much older wife, possibly in her 60s, whose name I never got, came over to get 2 margaritas. His paunch hiding his penis as he walked. He gave Danielle's pretty breasts an obvious once-over, as I made the drinks; she pretended not to notice.\n\n\"Can you hand me, ...?\" I asked her, pointing to the strainer on the lower shelf. Dropping down to get it, she passed it to me without standing. Matt left and I realized that Danielle was now kneeling in the space below the bar, right in front of me. I was looking out at the crowd as her mouth slipped over my cock. I opened my legs to give her better access, as she continued to suck me deeply. I was rock hard in a moment. \n\nI tensed a bit as Janie and David, a nice older couple wandered up to get Mimosas. We chatted about how lovely this Sunday's weather was, how quiet it had been overnight, how excited they were about the volleyball game later. \n\n\"We're just so, ...\" Janie began conspiratorially, leaning in closer, \"happy for you and Danielle!\" she whispered. We just love her.\" She smiled. \"Of course I think I already knew that she was, ...\" She motioned with her shoulders, trying to convey that she knew our little secret. \n\nDanielle had frozen in motion, cradling my erection in her mouth, listening to this news.\n\n\"That she was what?\" I asked, putting her on the spot, making her voice her belief. David gave me a pained look, as if to say that he apologized for his wife's busybody nature. \n\n\"Oh, you know.\" Janie continued softly, shyly. \"That she was a transexual.\" She whispered this last admission so quietly, it sounded unintentionally kind of dirty.\n\n\"Oh, that.\" I said boldly. \"And beautifully so.\" I said proudly, realizing that news did indeed travel fast. I gave them a smile and a wink as I poured out the champagne. I then leaned in a bit and whispered secretly, \"She is so gorgeous in the nude!\" I winked again, nodding downward indicating lower. Janie gasped a bit and David's eyes widened at this news. \n\nThey both smiled and turned with their glasses. Under the bar, Danielle puffed out a little chuckle around her mouthful of my hard cock, then continued sucking me deeply. I leaned my chin into one hand and reached down with the other to caress all around her ear, as she bobbed on me.\n\nI pulled her up to stand again and kissed her deeply. I couldn't see, but suspected that all eyes were on us as we kissed. I realized that I really didn't care that everyone seemingly knew about our affair. I was very proud to be with this gorgeous young woman. After considering this I whispered all of it into her ear. Her eyes were moist after hearing this. \n\n\"Fuck!\" she finally told me. \"What a difference a day makes.\"\n\nWe hung around behind the bar, cooing and chatting, making the odd drink here and there. During a quiet lull, I made as if to search for another bottle of Champagne and knelt down to find it. We had been idly playing with each other under the bar and were both fully erect. I spun on my knees and took her gorgeous meaty dick into my mouth. I was surprised again, for the umpteenth time this morning how much I loved sucking her. \n\nI loved drawing her out of my mouth to simply gaze at the girth, the length and the beauty of her big cock. I loved giving her oral pleasure!\n\n\"Hey Danielle. Can I get 4 Bloody Mary's?\" came a voice at the bar. I froze with her thick shaft in my mouth. \n\n\"Oh. Well.\" She panted oddly, having been on the verge of cumming. \"Um, Calvin's in, ... um, I don't really know how, ... Calvin will be right back. He's um, ... in the basement.\"\n\nI was struck by this last bit; 'Basement?' what fucking, ...? Jumping suddenly to the same page with her, I slipped her from my mouth and crawled to the far side of the bar.\n\n\"Found it.\" I said, trying to sound far away. Ridiculously, I mimed walking up a non-existent set of stairs to the bar, coming up beside Danielle. \"Oh hey Joe.\" I said breezily. \"Good morning. What can I get you?\" Joe looked oddly confused that there was a basement behind the bar, but ordered the 4 Bloody Mary's again. \n\nDanielle, hid her giggle behind a hand as I maintained perfect composure and cranked out the Bloody Mary's. Joe thanked me and turned. We stood there trying hard to maintain before breaking out in a fit of giggles. I turned to gaze down at her gorgeous big erection, and told her, \"Hang on, I think I have to go to the basement again.\"\n\nShe burst out with a loud coughing laugh, tears in her eyes. \n\nI stood there watching her realizing how much I really admired this girl, how attracted I was to her, how very much I enjoyed her company. I suddenly realized how much I would love to spend way more time with her. What a revelation! \n\n\"You know what?\" I asked her. \"I realize that I know almost nothing about you.\" \n\nMy serious look, quenched her laughing jag and she grew more serious. I took her hand and led her cautiously out and around the bar. She had a tense, nervous look, but followed me. Around the front of the bar I pulled a stool out of her and we both sat, knees touching. I took her hands and we sat there for almost an hour, just talking about our lives, our pasts, our history. Everyone noted our serious conversation, and no one dared interrupt our intense chat. By the end of this hour the bar was empty. Everyone had moved down poolside. \n\nDanielle turned out to be 15 years my junior, was born in Kansas City, had come west right out of high school. Had known she was different and been born the wrong gender from a very young age. She'd hidden it all through school, even dating a couple of girls, one that was terrified at the size of her penis and ran home, one which bled terribly when 'he'd\" taken her virginity. ",
        "At her graduation ceremony, 'he' had gotten drunk and wound up with two, much older, men who had shared her huge cock between them, even getting 'him' to fuck one in the ass, while the other abused 'his' throat. They had discovered 'his' ability to shoot such a massive load of cum, that they made him shoot all over them, twice. In the end they rewarded my young Daniel, with a vicious beating for ejaculating on them. It was in this moment that she had discovered her fear of 'morning after' revelations. People would do all sorts of things when aroused and libidinous, but a minute after the come-down, would feel ashamed and lash out. \n\nWhen she first arrived in LA she'd supported herself partly by delving into the fetish world that centered around huge penises and massive loads of spunk. 'He'd' been passed around at parties, among groups, fed tons of drugs, and occasionally beaten and abused. \n\nHer only two real loves, if you could call them that, had been a trans-man, wherein sex was extremely rare and somewhat painful for both, and a much older, widowed and wealthy woman. She had been loving and supportive at the start, enjoying the pleasures that her studly young lover could provide. The moment her friends had met young Daniel, it was quickly dissolved. \n\nNow she worked 3 jobs, had a cat, took quite a few meds, HRT among them, and lived in a tiny flat in the city. I began to understand her fear of letting go with me. I sensed that she had quickly developed feelings for me, and with that the terrible risk of another crushing loss. My heart ached for her. Her nature had remained so sweet, so free of the bitterness that I would have expected from such experience. I burned to protect her from people that might hurt her. But I also realized that in her way, she needed no protection; she could take care of herself. \n\nJoan came striding towards us sitting at the bar. She walked up close, smiling wide. I noted that she took a quick glance into Danielle's lap as she arrived, noting appreciatively the size of her endowment. \n\n\"We're going to be starting the game in a half an hour, and I was still hoping that you play for us. Our secret weapon.\" I watched her jolt with the recognition of the double entendre of 'secret weapon'. Danielle, reflexively pressed her thighs together and chuckled. Joan amusingly fumbled with the gaffe and took another look at Danielle's penis, laying there thickly. \n\n\"Your height!\" Joan finally blurted out. \"Our secret weapon is your height! And the fact that you've played before, in school.\" We shared a glance at her recovery. Just then Suzy appeared from the commissary. \n\n\"Hey young lovers.\" She cooed. \"Danielle, don't feel obligated to do anything. The last thing anyone wants is to make you feel uncomfortable.\" \n\nDanielle unconsciously took my hand. I told her, \"I know that sometimes revealing yourself, ... completely can be a very scary thing! We never have control over what some people might think of us, but we can't make that our problem. That remains their problem.\"\n\nWe all shared a long meaningful look. Suzy continued, \"Whatever you choose, most of us here, are very supportive of you and your lifestyle, your choices, your choice of, ... partner.\" She finally added placing her hand gently on my shoulder. \"We all want to help and not hurt.\" She gave Danielle a sober look. \"You decide. We are all here for you.\" She leaned and they gently hugged. Joan and Suzy left and headed for the pool.\n\nWe sat there for a long moment and shared a deep look. I nodded in agreement at everything that Suzy had said. Danielle took a deep breath and then slowly let it out. After a long nervous pause of decision making, Danielle finally spoke.\n\n\"Shall we?\" she whispered, standing. Smiling my support, I stood, took my wrap from the bar and tied it around her waist. It technically covered her but did little to hide the significant bulge of her penis. We both chuckled at the sight of it. \n\n\"If at any moment you want to stop, or leave, we're out of there, right then.\" I told her. She simply nodded, gathering her nerve for this.\n\nStanding together at the pool people began to notice us and cheered our arrival. I immediately noted the unfriendly faces on the couple that had ignored us at the bar last night. Clearly, they were not on board with this. They were standing nude in the waist deep water on the other side. Suzy and Joan were standing in the water on our side and almost at the same moment said,\n\n\"Ready for this?\"\n\nI felt for poor Danielle as every eye in the place was fixed on her wrap. This must have been a wildly uncomfortable moment. It was bad enough for me, standing there nude, but most people had seen me by then. There wasn't a sound as all waited for the unveiling. I made a motion to step the to the edge of the pool and faked a slip. I grabbed Danielle for support and we both toppled into the pool. She came up sputtering with a 'What the fuck?!' look on her face but then immediately noticed that the unveiling moment had been alleviated. \n\n\"Oh shit! Sorry! You okay!\" I asked her feigning concern.\n\n\"Oh Calvin.\" Suzy said coming over. \"What a lovable oaf!\" She and Danielle shared a knowing look. Everyone chuckled at my klutziness. \"Let's play! So we can kick your asses!\" Suzy called out cheerily. It became immediately obvious that trash talk was the name of this game, and everyone chimed in.\n\nDanielle didn't disappoint with her prowess, even in the water. I spent most of the game trying my best but being distracted by the bouncing of Danielle's adorable breasts, not to mention the bouncing of her semi-erect penis. We shared a chest bump and long smile at winning a particularly impressive point. There were also many scrambles wherein we would fall into the water and hands were groping various body parts of all partners. \n\nThere were 8 players on each side and the grumpy couple got grumpier and more competitive with each point scored against them. He even went so far as to complain to his wife, lover, whatever, when she missed a serve. Our score was climbing above theirs dramatically, souring his mood even further. \n\nHe and Danielle were facing off at the net for one play, when they both jumped high, he to spike and she to block. Normally you would shoot around the person blocking you. He chose to fire the ball straight at her. As her face reached net height, he blasted it with excessive force, driving the ball straight into her nose with a resounding smack. The ball careened off her face to the side, scoring them the point. He jumped back up, arms raised in celebration as he turned to head back to the service line. \n\n\"Yeah! Yeah! Take it!\" he yelled loudly, not noticing that everyone had stopped to check on poor Danielle's crushed and bleeding nose. It wasn't until he reached the far side of the pool that he noted the quiet and total focus on her. He stood there waiting for the game to resume without realizing that everyone, even his wife, lover, whatever, were giving him hateful glares. He stood there dumbly, waiting the game to resume. Our entire team walked Danielle to the edge of the pool. \n\nDale who was watching from a chaise lounge, had jumped into the water near us. He was a doctor and moved in to examine her nose. Daniele was gasping, holding her hand over her face. \"Here. Here.\" Dale told her. \"Let me see.\" He gently moved her hand aside, noting the amount of blood there. He looked the doctor part as he gazed through the bottom of his bifocals at her nose. Gently he reached up and touched it. Danielle hissed at the contact. \"Sorry, sorry.\" He said quietly. He very tenderly felt around trying to ascertain if it was broken. It didn't appear so. \n\nSuzy arrived with a snow-white towel to staunch the blood. \"Oh, Suzy, no.\" Danielle told her. \"Not a white towel.\"\n\n\"Fuck the white towel!\" Suzy told her gently wiping her chin and mouth. I stood on the outer ring, feeling useless, but very glad so many people were concerned and helpful. I looked over my shoulder at the dickhead standing opposite, still waiting for the game to resume. I felt a flush as anger rose in me. I was beginning to feel murderous, when Danielle's hand reached out and grabbing my arm with painful strength. I looked into her eyes, with which she implored me to do nothing. I visibly relaxed.\n\n\"There's no break.\" Dale told us at last. \"But it feels like it's been broken before?\" he asked quietly. Danielle nodded. \"Same kind of asshole, but many years ago.\" She whispered very quietly. Her imploring look flashed back to me, with a tiny shake of her head. Everyone saw it and almost in unison, we all turned as one to look at the fucking guy still bouncing the ball on his fist. \n\n\"Okay then!\" Joan called out. \"Game called on account of unnecessary roughness.\"\n\nThe dickhead began to protest but noticed his wife, lover, whatever, already climbing out of the pool. She grabbed a towel and walked off without looking back. \n\n\"Hey! Sorry! But it's a rough game.\" He called out feebly. No one commented, no one even looked at him as we all just got out and the others headed for the bar. \n\nWe moved to a lounge and sat Danielle down to attend to her further. Joan brought a towel and demurely attempted to lay it over Danielle's exposed penis. Danielle gave her a sweet smile but took and instead dried her hair, laying it to one side. She had proudly crossed over a line and wasn't retreating back. Dale was a dear, gently attending to her, telling her that she might expect a 'helluva shiner', but no permanent damage. \n\nSuzy suggested I take her to her room and lay her down, but call if she needed anything. Joan took one arm and I the other, and we walked her to the room. I could sense that Danielle was thinking that she was made of tougher stuff, but she didn't complain at the care. As we walked, I flashed on her earlier story of having been savagely beaten before. \n\nAgain, my heart ached for this sweet young creature, who had been through so much and kept coming back for more. We gently laid her in bed, Joan cooing softly that if we needed anything, \"...anything at all, please just call the main desk.\" We assured her we would and she left, blowing a gentle kiss as she closed the door. \n\n\"That fucking asshole!\" she hissed, sitting up in bad, right after Joan closed the door. I was left kneeling beside the bed, as she went to view herself in the mirror. I got up and followed, again taking in the beauty of her nude shape as she stood there, turning her face this way and that. \"Fuck! Shiners for sure.\" She muttered, noting the already rising purple in the corners of her eyes. \"I took a shot like that I high school. Looked like a racoon for a week.\" She then turned to face me. \"You okay?\" she asked, concerned.\n\n\"Me?!\" I sputtered. I wasn't the one that took one straight in the kisser.\n\n\"You looked like you wanted to kill that guy.\" I slowly nodded. She grinned. \"I loved that you did.\" She told me smiling a bit but wincing at the pain of it. \"No one's ever looked like that, ... for me before.\" She said quietly returning her gaze to the mirror. I moved around behind her and wrapped my arms around her waist. Her hands settled on my arms. We shared a long look in the mirror. I kissed her shoulder. \n\n\"It's been so long since I felt that way about anyone.\" I whispered. Her hands softly caressed my arms. She took in a breath as if to say something, then didn't. \"I know, ...\" I started, our eyes locked in the mirror. \"I know its scary.\" Her eyes flashed the recognition that we were sharing the same thought. \"I haven't felt this way in a very long time. Over time, I was becoming worried that I might never, ...\" \n\nDanielle simply waited and watched for me to continue. Finally I did. \" I find you so very attractive, ... fucking sexy as hell, ... all of you. But, ...\" Her look turned very worried at this last word. I realize that sentences that contained the work 'but' usually ended badly. \n\n\"But, ...\" I continued, \"There's way more to this feeling. And it is kind of scary! For us both maybe.\" Her look was softening. She gently nodded. \"I don't know where we go from here.\" She began to gently tremble in my arms, her eyes were becoming moist, and they were becoming increasingly purple. \"But, ... I know that I want to go somewhere with you. I need more, ...\"\n\nWe shared a long gaze in the mirror. \"I want more. More of you. More time.\" I paused. \"I want more of your incredible body!\" My eyes flicked down to her perfect breasts. \"But, ... so much more than that.\" Both our eyes were wet now. \"I don't know where, ... this, ... goes. But I want to find out.\" Her hand reached back to touch my cheek. She simply nodded and smiled sweetly. She simply mouthed the words, 'Me too'.\n\nThere was a soft knock at the door. I led her out of the bathroom. She sat on the bed and I answered the door. It was Suzy with a bucket of ice and some more white towels.\"Oh, Suzy not more of your white towels.\" Danielle complained. Suzy tutted.\n\n\"By now the bleeding has stopped, and besides, I don't care. I just want you to feel better.\" We lay Danielle back in bed and wrapped ice in a towel and gently laid it on her face. Sitting at Danielle's hip she added, \"You relax. I'm getting Ray and Diane out of here to their car.\" She flashed me an angry smile. \"Not really our kind of people.\"\n\n\"Fuckers.\" Danielle added, completely muffled from under the towel. We all chuckled. \n\n\"But you two,\" Suzy said with a wide smile, \"are TOTALLY our kind of people!\" \n\nWithout looking Danielle reached out to touch her and wound up grabbing a handful of boob. She pulled back, but Suzy took her hand and returned it to her breast. \"It's okay. Anytime.\" She added, squeezing Danielle's hand around her soft flesh. She then brought Danielle's hand to her lips and kissed it. \n\n\"Let me know if you need anything else.\" She moved to the door then added, \"Everyone's leaving this afternoon, but you're both welcome to stay until tomorrow if you like. I can bring dinner down to you.\"\n\nAt this Danielle removed the towel from her eyes and sat up on her elbows. Tears were now openly flowing, she was utterly unguarded. She could only mouth the words, 'Thank you.'\n\n\"Oh, sweetie.\" Suzy said softly. \"I'm so glad to know you. Both of you.\" She added. We all shared a long look and then she quietly left us.\n\nDanielle spent a long moment gazing at the door, then to me. \"I never want to leave.\" I agreed. Then after a long pause, she added. \"I never want to leave, ... you.\" This last word she whispered so quietly, I almost didn't hear it. The import of this last word though was not lost on me. I moved around the bed and sat where Suzy had. I repeated Suzy's motion of kissing her hand. We shared a long smile between us. My fear and concern over how I might be feeling about the unique woman was melting away. \n\n\"I feel so warm and happy around you.\" I told her. She swooned a bit. \"My beautiful little, ... racoon.\" Her looked turned to alarm, and she covered her face. \n\n\"Is it getting bad?\" I told her not so bad, but then laid her back down. Very gently I moved in to kiss her lips. Then I lay the towel back over her eyes. \n\n\"You just relax a bit.\" I stood there gazing down at her body, still adjusting to the somewhat incongruous appearance of her utterly beautiful feminine body and the very large, also utterly beautiful, big penis lying heavily on her thigh. I never before would have dreamed that such a sight would arouse me so much.\n\n\"Can I get you anything?\" She said she was fine. Then after a long moment she added,\n\n\"Can I admit something very embarrassing?\" I told her of course. \"Right before I got hit, ... I was feeling so fucking horny.\" I glanced down to see her penis beginning to swell slightly. \"I'm still feeling, ...\"\n\nI placed my hand on the inside of her thigh and she trembled. I slid it slowly up and then teased her big balls, tight in their smooth sack. She shivered at the touch. I moved her thighs apart and moved to lay between them. I continued to tease her balls with a feather touch, watching her magnificent penis grow and swell. My fingers teased her thighs, her flat tummy, all around the root of her thick cock. It grew to its impressive proportions, making my mouth water for the taste of her. \n\nThe craving for a mouth full of cock was all new to me, but the desire was potent. I really loved sucking cock. I had always loved giving pleasure to my partners; they had always just been women before. Now the desire to give pleasure, by taking a big firm cock into my mouth, using my lips around it, my tongue to caress it, taste it, was intoxicating. Even the burning desire to force it into my throat was the biggest surprise.\n\nDanielle lay as still as she could for the next 15 minutes as I did all of that. Thrilling us both with the giving and receiving of pleasure. I simply took my time to enjoy such a new and unusual treat. I was bi, I was gay, I was an attentive and loving cocksucker and I was happy to be whatever I needed to be to enjoy this woman so thoroughly. Her tight belly was quaking, her cute tits were jiggling in the moments before she came. I cradled her wonderful firmness in my mouth and took her powerful, plentiful spurts of cum. I cupped and massaged her balls as she flooded my mouth, hips lurching. \n\nOut of a curiosity I allowed her warm creamy load to flow back out of my mouth down her shaft, in order to witness just how much cum she really produced. My tongue was coated with the sweet, salty taste of her warm cream, but it flowed down the shaft and pooled on her belly, flooded her balls and my palm cradling them. It pooled on the bed under her. Her thick cock lurched in my mouth with each spurt, her urethra pulsing against my tongue with each blast. \n\nAgain! Again the craving took me. The desire, the need, to utterly posses this gorgeous, huge cock. I pushed forward until the head pressed firmly against the opening to my throat. I gagged heavily once and backed off. I went for it again and felt it gently stretch my throat. 'Fuck! I want it!' I thought and pushed it all the way in. It was slick with her cum and slid in deeply. I again had the sensation of her thickness pressing against my chest from the inside, but I had her all the way!\n\n'Deep-throat!' I cheered in my mind. I never would have imagined it. I can deep-throat this huge, beautiful cock. Me! Calvin Andrews! I'm a deep-throat cocksucker!! What would me friends think? Fuck them, if they didn't still love me. If they didn't love me more. I can deep-throat my lover's huge cock!\n\nI withdrew and finally looked up to see her gasping and watching me in amazement. \"Fuck, baby!\" She whispered. \"Just, ... fuck!!\"\n\n\"I love how big your cock is! I panted. \"I love how much you cum! I love taking you down my throat!\" We shared a long passionate gaze.\n\n\"I think, ... I love you.\" I whispered quietly.\n\nHer look instantly changed to concern, fear, anger even.\n\n\"Don't! Don't, ... say that!\" She tied to move out from under me. I just held her down. \"Don't, ... say that!\" She repeated. She looked panicked.\n\n\"I, ... think I love you.\" I whispered again. \"Please don't be afraid.\"\n\n\"Don't say that if, ... you don't, ... mean it!\" She repeated.\n\n\"I think I love you. You don't have to, ...\" Her look softened a bit and she relaxed a bit. \"I just want to say what I'm feeling, and we can leave it.\" I silently questioned if that was alright. She seemed to agree. \"I know that's kind of scary to hear, but, ...\" She nodded. \"Please don't be afraid of that.\"\n\nSlowly I moved up between her thighs, sitting on my heels. \n\n\"Everything is fine.\" Very slowly I leaned forward and softly touched my lips to hers. Her eyes never left mine. I could plainly see how frightened she was of the potential for real, agonizing hurt here. I softly kissed her again\n\nThen we just stayed like that for a long time. ",
        "She rearranged her strong thighs around me. \"Can I ask you something.\" I nodded. \"Can I ask you to do something for me.\" Having just sucked her off and taken her cum, I assumed it wasn't something sexual. I simply waited. \"This is very hard for me.\"\n\n\"Anything you want.\" I whispered and waited.\n\n\"Would you, ... fuck me?\" She softly asked. I admit to stupidly not making the connection immediately. So looked as vulnerable in that moment as ever I'd seen. \"Only if you want.\" She added quickly. I just leaned and kissed her gently. We remained mere inches apart as I gazed into her eyes. \"I've only done that twice.\" She admitted softly. \"The first time, ...\" The pained expression on her face, related how unpleasant it had been. \"And the second time was with someone whom I thought I loved, but, ...\" \n\nI got the feeling that she had never really been 'made love' to. I leaned to kiss her again. \"But, ...\" she added quickly, \"I think I made need to take it kind of slow.\" We kissed softly; our tongues met again equally softly. I noted that both her black eyes were coming in nicely. I didn't want her to know and feel self-conscious about it. \"I mean, I may need lots of lube.\" I looked around, wondering if we had any. \"In the bathroom.\"\n\nI fetched her tube of lube and applied some generously to my achingly hard penis, then resumed my position between her legs. As she rearranged her legs around me I noted that she was growing again. I took her growing penis tenderly in my hand, gently stroking the length. I scooted back to take another taste of her.\n\n\"You don't have to, ...\"\n\n\"I just really love the taste of your sweet dick, baby.\" She smiled as she watched me wrap my lips lovingly around her thick shaft, humming as I went. \"Mmmm!\" I moaned around it. \"I really love taking your big dick in my mouth, lover.\"\n\n\"Then suck my big dick baby. I love to watch you take it in your pretty mouth and suck it.\" I did, slowly, deeply, gently. \"Yes! Suck that big dick, my sweet sweet man.\"\n\nI joined my hand with my mouth, stroking firmly as I took it in and out.\n\n\"Oh, Calvin. Oh, Calvin yes. Suck it baby, You suck it so good! Look at that big dick in your mouth.\"\n\nI withdrew her cock, but kept stroking it, as I moved down to kiss and lick her full round balls. They were too large to get both in my mouth at once, but I opened wide and drew one, then the other into my mouth, trying to lick them as gently as I could. I looked up to see her eyes roll shut, swooning. Holding her full testicle in my mouth, I pushed my tongue out and licked her perineum. \n\n\"Oh, yes! Right there.\" She moaned. \"I love that!\" I released her balls and moved to concentrate on tonguing her perineum. Her hips rolled up granting me further access to her. I worked my tongue all over her taint and began pushing her thighs back a bit. I wanted to eat her ass. She grabbed her legs and pulled them back. I released her fat cock and reached up to tweak her perfect hard nipples. My tongue began to swirl around her anus, then I made it pointy and gently stabbed it at her tight pink opening. \n\n\"Oh yes, Calvin!\" Oh fuck yes!\" I love that!\" she moaned loudly. \"Oh, baby! I want to feel your beautiful cock in me! I want you to make love to me!\" I continued for a bit. Come here baby.\" She hissed. \"Please come take me.\" I moved up and she wrapped her legs around me. Her eyes were burning with passion and need. \"I need you love! I need you in me. I want to give you my body for you to fuck!\" I leaned down to kiss her again, careful of her nose. \"Make love to me?\" She asked this so sweetly, that now I swooned. I finally had to admit that I really did love her.\n\nI squirted some lube onto her big cock so that I could stroke her, then I moved into position, on my knees, so that the head of my cock was stroking against her anus. \n\n\"Give me that beautiful cock, lover.\" I applied a bit of pressure. \"Ohhh! I want to feel you in me! I want you inside me!\". She hissed a bit when I applied more pressure. \"No! It's good. It's good. I just need you to go slow; get used to you. You have a big cock, Calvin. But it will feel wonderful once you're in me.\"\n\nWe worked at it for a while, until I was through the outer opening, just the head slipping in and out.\n\n\"You are so beautiful, sweetheart.\"\n\n\"Oh Calvin! It scares me, but, ... I think I love you too.\" I stopped moving for a moment, simply smiling. I shook my head for her not to be afraid. \"I can't help that it scares me, but you are such a sweet man! I want you! I want to be with you! I want to feel you in me.\" I began slowly to move again. \"Yes! Let me feel you in me. Give me that wonderful cock! Fuck me!\"\n\nA few more pushes and I slipped through the final constriction. She made a sound like it was painful, but then her eyes flew open and she smiled. I held still for a moment. We shared a long gaze as I gently slowly pushed the rest of the way into her. \"Ohhhhh! Yes, Love! You're in me. I feel all of you in me.\" She whispered. \"Fuck! Your cock is so big! But I love it inside me. You're fucking me lover.\" I grinned at her. \n\n\"Oh, my sweet Danielle! You've got all of my cock in you!\"\n\nShe pulled my face to hers to kiss me, bumping her tender nose hard. She winced in pain but giggled at the mistake. We kissed more gently. She pulled my ear to her mouth and whispered. \"You have all of me baby! I give my whole body to you! Take me. I love your cock in me! I give my whole body to you! Fuck me and make me your woman!\"\n\nI pushed up on my arms, looking down into her beautiful eyes.\n\n\"Yes, Danielle! Be my woman! I love your body! All of it. Give your sweet tight bottom to make love to! Take every inch of me!\" I withdrew about half of my cock and then pushed it to the hilt again. The look of pained-pleasure on her face was exquisite. I waited a beat then did it again. More pleasure than pain this time. \"Take me all the way in your beautiful bottom!\" Slowly, but firmly, I repeated the motion, less pause each time. I was keenly aware that I had plenty of lube; we were slippery as hell, but she was so tight!\n\nSoon I was pulling out to where just the head was in her and then easing the rest of my shaft up her tight ass. It became easier with each stroke. Her eyes were wide and her mouth formed a permanent 'O', her breathing was in short gasps. I took hold of her lubricated cock and began to stroke it tightly. She simply nodded to me. I began to move in her in earnest.\n\n\"That's it lover, Take my cock in you. Let me fuck you. I love it!\" She was gasping for breath. I sensed that she was close to shooting off herself. My hand was stroking the entire length of her considerable thickness, feeling so wonderful in my hand. She just kept gasping, her face a mask of intense pleasure.\n\n\"Oh, Danielle, your body is heaven! I love making love to you! I love you! I think I really love you! Feel my hard love, deep inside your body.\" She simply nodded, a faint smile. She was completely overtaken with passion! I was pounding her ass now, tightly jerking her wonderful huge dick! She had handfuls of the sheets. \"I love fucking you! Cum for me! Show me that incredible, huge load of sweet warm cream, lover. \n\n\"Oh, fuck! Oh Calvin! Oh, fuck!!\" was all she could manage, gasping! \n\n\"Oh! I'm gonna cum in you baby!\" I squeaked through gritted teeth. \"Take my cum in you!\" She looked to be in an agony of pleasure, nodding furiously!\n\nI glanced down at the massive hard, gorgeous penis in my hand as I began to cum inside her tight bottom. Feeling my cock jerking and lurching inside her, sent her crashing over the edge as well.\n\nHer intense cry would have woken the dead, as she began to spurt out yet another incredible load of her cum. I was pounding her with each pulse of my orgasm but was mesmerized watching the force with which her streams of cum ejaculated! Her first couple of streams went over her head onto the headboard of the bed, the next few arced perfectly onto her face and open mouth. Her eyes rolled closed at the intense sensation, but her tongue flicked out of her mouth capturing her load and drawing it in to taste it. More streamed out, coating her chest and pretty little tits. My hand continued to milk her lovely penis, coaxing more of her cream to spurt out of her. \n\nMy orgasm had basically completed, but my cock remained hard as hell and I was intoxicated watching her seed cover everything in sight! It was thrilling to watch my own thick shaft tightly embraced by her tight anus as I moved in her. Her eyes were clamped tightly together, as she slowly came back to earth. I slowed my movements until I thought she might be in need of a break and withdrew completely. Her eyes flew open it this, and she reached out for my hand. She looked afraid that I might suddenly just disappear. I crawled out from between her legs to lay beside her on the bed. I pulled her over onto my chest and we lay there as she gently began to quietly cry. \n\nMy arm was around her, holding her tightly to me as she let the tears flow. I shushed and caressed her back softly as I held her, just waiting for her to calm. I don't think I'd ever witnessed another human so thoroughly exposed and emotionally vulnerable. I lay there happier than I had been for many years. This unusual young trans-woman was so deeply satisfying to be around. Sexually she was incredibly intoxicating, but there was so much more to discover about her. Where did this go from here, I wondered. \n\n\"Where do we go from here?\" She quietly contemplated aloud, after a long silence. I was completely shocked when she said it. \n\n\"I was just wondering that very same thing just a second ago.\" I whispered. \"Great minds think alike.\"\n\n\"I wish.\" She whispered quietly. I was thoughtful at this. What did she mean? I asked her. \"I just, ... wish our great minds thought alike.\"\n\n\"Meaning?\"\n\nShe was thoughtful a long time. \"I was just thinking how much I really like you, ... well, ...love you, ...\" she spoke these last words in breath. \"And that I want to see more of you. Be with you. Have you.\" It was thrilling to hear her speak these word aloud. She couldn't see the imbecilic grin on my face. I couldn't recall such happy news. \n\n\"Boy, great minds really do think alike.\" I told her.\n\nDanielle processed this last comment for a while, seemingly confused. She then looked up at my face to check my meaning. \n\n\"Yeah.\" I told her. \"I want to see more of YOU. Be with YOU. Have YOU. Also!\"\n\nHer face broke into a smile so luminous it practically lit our darkening room. Tears came anew at this news. She moved up to gently kiss me.\n\n\"Mmmmm.: I moaned happily. \"My little racoon.\" I teased.\n\nWith a look of shock she climbing out of bed and dashed for the mirror.\n\n\"Oh my, fuck!\" she said aloud. I joined her in the bathroom as we stared at her image. She was shocked at the extent of both black eyes, now in full bloom. She covered her face with both hands. \"Why didn't you, ...?\" she exclaimed through her hands. I gently pulled her hands away.\n\n\"I said all that I said, in spite of your eyes.\" I told her gently, smiling. \"It's as true as ever. Regardless of the racoon eyes.\" I pulled her into my arms and simply held her tightly against me. \"Remember, great minds think alike.\" She playful hit me in the ribs, chiding me for not warning her how her hematoma had progressed. \n\n\"I can't got out like this!\" She said firmly.\n\n\"We don't have to. Suzy said she'd bring us dinner right here.\"\n\n\"What will we do in the meantime?\"\n\n\"I don't know about you, but I could use a nap. A real one!\" Danielle agreed and we walked to the bed, her still under my arm. As I laid her down, there was a knock at the door.\n\nI cracked it to see Carol and Mike, incongruous looking, having gotten dressed in clothes. \n\n\"We just wanted to check on Danielle. Is she okay?\"\n\n\"Fine, aside from the racoon eyes!\" came her reply from inside. Carol's hand flew to her mouth at this news. \n\n\"Not too bad, I hope?\" she asked under her breath. I felt a hand at my shoulder and stepped aside. \n\nDanielle joined me in the doorway, completely nude and showed them her eyes. They both gasped in shock. \n\n\"It hurts my pride more, I think.\" Danielle admitted. \n\n\"That guy was such a dick!\" Carol hissed angrily, funny to hear this from such a sweet looking old lady. Though I recalled having watched them both fucking 2 mornings in a row. \"I hope they might be better in a few days.\". Danielle thought more like in a week, at least, but,\n\n\"It is what it is.\" She told them.\n\n\"Well,...\" Carol began again, \"what we really wanted to say was, ... how happy we are, ... well, how happy you too seem together.\" Then she added kind of shyly, \"We were right next door and couldn't help, ...\" Mike rolled his eyes at his wife's audacity. \n\nNow it was Danielle's turn to be embarrassed. \n\n\"Oh my gosh! We're so sorry!\" she told them. \n\n\"Oh, not at all, darling.\" Carol whispered conspiratorially. \"In fact, it made us so hot, we got pretty busy ourselves!\" Again, Mike rolled his eyes at his wife's nerve. \"You two make a very lovely, ... passionate couple.\" Danielle turned to smile at me. \n\n\"We were just talking about that.\"\n\nWe all exchanged hugs and they told us that they really hoped, REALLY HOPED, to see us there again. We bade then farewell, and returned to our bed. We chatted a bit about how nice most of the people had been over the weekend, and how Danielle's unveiling had been fine in the end. She was very glad that she'd stayed. I agreed completely.\n\nAfter an hour relaxing, she called the desk and got Suzy. Again, Suzy offered to bring dinner to us, but then told us that everyone had left. It was just us 3 left. We were welcome to come up to the commissary for dinner, which ever we wanted. We decided to come up. \n\nSuzy made a delicious dinner, which we ate on the balcony, under a heater, sitting nude on towels. We didn't want the weekend to end just as it seemed to be getting started. I went to the bar and mixed us a pitcher of margaritas which we drank sitting together in the Jacuzzi that overlooked the downhill side of the mountains, the city lights faintly glimmering in the distance. \n\n\"What a magical place.\" Danielle sighed. \n\n\"Isn't it though?\" Suzy agreed. \"I just love it here.\" Moving closer to Danielle, she added, \"Oh sweetie! I'm so sorry about your face.\" She took her face in her hands and pulled her closer to look. \"In a week, you'll be good as new, I think.\" Danielle agreed. She then took Suzy's face in her hands as well.\n\n\"Thank you so much for having me. Having us.\" she corrected. She looked at me with a dreamy expression. \"I think I've met someone very special.\" \n\n\"I do too.\" Suzy agreed, reaching out to pull me close with them. \n\nWe three knelt together in the tub, holding each other for a long time. \n\n\"Well,\" Suzy began, intending to get out of the tub. \n\nDanielle reached up and turned her face back towards her. They shared a long gaze. \"May I, ... kiss you?\" Danielle softly asked her. Suzy smiled and moved gently towards her and they kissed passionately, but carefully. \n\nThere was a long moment where we all communicated silently our mutual attraction. Suzy slowly moved to me, giving the opportunity to abstain; I didn't. We shared an equally passionate kiss, then the three of us were sharing a three-way French kiss. Shortly thereafter I found myself sitting on the edge of the tub and both of these gorgeous women orally shared my cock between them. It was intoxicating to watch them take turns licking the shaft, while the other sucked me in, then watching them French kissing around the head of my cock. \n\nThe evening ended at the large bed down the hill, with Suzy occupying the middle position, turning and then turning again, while Danielle and I took turns fucking her mouth and her beautiful bare pussy. It was an exquisite languid fuck, that needed no orgasms to satisfy any of us. Danielle and I were both sort of orgasm' d out and Suzy loved the attention, more than the completion. We all wound up in a cuddle puddle and promised to continue at another future date. \n\nWe slept late the next morning, kissed our Suzy farewell and both headed to our own homes, and a hopeful but uncertain future together. Within a couple of months, Danielle had moved into my house. I think a couple of the neighbors suspect Danielle's gender, but no one is really sure and certainly no one is asking questions, yet ...\n\n \n"
    ],
    "authorname": "MacSwain612",
    "tags": [
        "bi",
        "big cock",
        "camping",
        "deep-throat",
        "swinging",
        "trans-woman",
        "ts",
        "verbal"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/danielle-18"
}