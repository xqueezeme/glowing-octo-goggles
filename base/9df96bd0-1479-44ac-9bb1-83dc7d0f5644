{
    "title": "Assplay",
    "pages": [
        "She's a freak little slut who likes to get kinky.\n\nI lean back on the sofa while she gets on her knees to suck my dick. She holds my cock in his hands, cups my balls, licks the tip, kisses it, flicks the underside of the head with her tongue, and then she takes it into her mouth. Oh, it feels good. She fucking likes it. She likes to have my thick cock in her mouth. She likes the taste. She likes to take it deep so it feels her up. She likes the power, because she sees how much it turns me on to see her fuck my dick with her mouth, suck it like a little whore. She likes to feel my thickness in her hand, jerk me off, feel the hardness under the skin. She looks up at me and smiles like a naughty bitch, then spits on my dick and takes it back in her mouth. Deep. Oh, fuck. She takes it deep and takes it out again. Takes it deeper and deeper every time until it's all slick and wet. She pushes my cock against her throat. She's been working on her gag reflex so she could take it down all the way. When she does it, she comes up smiling like she's proud, like she's accomplished something. Which she has. She's a good little cocksucking slut and I make sure I tell her that. Women need compliments, right?\n\nShe licks my cock everywhere, swallows it again, then she jerks me off while she licks down the side of my balls. She takes them in her mouth one by one. She knows it puts me on edge, makes me nervous, but she's gentle.\n\nShe works her tongue on my boys with love. She sucks my cock some more.\n\nThen she lifts my nut-sack and dives deep. Straight for my taint. Oh, yeah. She jerks my dick while she licks me down there, all around, teasing me, playing with me. I'm tense with anticipation. I slouch down some more on the sofa to give her better access.\n\n\"You like that, don't you?\" she says. \n\n\"You like that, you dirty boy?\"\n\nThen she licks my asshole. Oh, fuck. \n\nThat just makes me harder. Oh, shit. \n\nIf you've never had anybody stick their tongue in your ass, you don't even know what you're missing. She licks it until it's real wet, and then she rolls up her tongue and tries to push it against my ass, tries to get inside.\n\nShe goes back to sucking my dick and replaces her tongue with her fingers, playing with my ass, rubbing my hole, running her nails down the skin.\n\nI want it. I fucking want it, but I don't say anything. I let her go slow, tease me, knowing she'll do it without me having to ask for it.\n\nShe knows what I want. She knows what I like. She knows I fucking love assplay.\n\nFinally she takes my cock down her throat again and at the same time she pushes a finger into my ass. Just a little. She teases me with that finger, in and out, in and out, spreading her spit deeper into me, and then she pushes past the tightness at the entrance. Oh, yeah. Then she pushes her finger deeper into my ass and starts to fuck me with it while she's sucking my dick.\n\nThen she pulls it out and I want it back. She switches hands, holding my dick up with her left while she sucks on the fingers of her right hand. Then she sucks my cock while she sticks two fingers up my ass to fuck me harder.\n\n\"Oh, fuck,\" I moan. I'm in her power now.\n\nMy ass is so sensitive, but so horny to the touch. It's my weakness.\n\nShe goes deeper with every thrust of her fingers until she finds my male G-spot, my prostate, and then I'm in heaven, with the pleasure just flooding my brain, as she jerks and sucks my cock while she rubs me on the inside.\n\nIt's like there's a hot zone of sexual electricity radiating from that spot inside. I know that's where my cock truly begins, deep in my ass, at my prostate, which she's massaging like a pro.\n\nShe knows not to suck me too hard now or I'll explode too soon and spoil the fun of a long slow build-up. We both know where this is going.\n\nShe's got me by the ass now.\n\n\"Do you want me to get the toys?\" she asks.\n\nI nodded. \"Yeah, baby.\"\n\n\"I got a better idea. Let's go in the bedroom.\"\n\nShe takes my hand and leads me into the room.\n\nI lay back on the bed with the big pillows behind my head and shoulders. I get comfortable.\n\nShe takes out some toys and gets between my legs. She's smiling like a naughty bitch again.\n\nShe takes a pink butt plug and shows it to me. She licks it while she looks into my eyes. Then she sucks my dick, her lips tight and moving up and down my shaft. I'm breathing hard, and I know what's coming. She presses the tip of the butt plug against my ass and starts to push. It's goes in a little but I'm tight. She starts to play with it, in an out, stretching me a little move with each thrust. I try to push out to help it along because the anus is the only muscle that loosens when flexed.\n\n\"There you go, baby.\"\n\nWhen a large object, as thick as a butt plug, is being pushed into your ass, it tends to dominate your focus, and right then there was nothing else in this world except my girl sucking my cock and this fucking sex toy pressing deeper and deeper into the place where the sun don't shine. \n\nIt hurts a little to be stretched, but in such a good way, if it's done right, and my girl knows what she's doing.\n\n\"You like it up the ass, don't you, baby?\" she says.\n\nI nod and smile at her, breathing hard. \n\nShe doesn't push it, doesn't fuck with me about it. I like it, so she just does it for me, makes me feel good.\n\nThen she pushes in deeper and the broadest part of the butt plug pops into my ass. I feel a rush of both relief and pleasure as my ass accepts the toy.\n\n\"There you go,\" she says.\n\nShe pushes it deeper, twists it around, and then without warning, she pulls it out again fast and shoves it right back inside.\n\n\"Oh, shit,\" I groan, and I feel the pain but I also feel the endorphin run inside my head, and the pleasure in my ass.\n\nShe sits up and strokes my cock absentmindedly while she fucks me with that butt plug. \n\nThen she discards the toy and grabs another - a long slick vibrator.\n\nShe strokes my dick while she slides it deeper in my ass, deeper than the butt plug had been. I feel slide inside me until it touches my prostate gland, and then she turns it on. The buzz of the vibrator makes my eyes blur and I throw my head back against the pillows. I'm lost in pleasure.\n\nShe puts her head down on my dick and starts to bob up and down while she rubs the plastic vibrating toy against my P-spot over and over, pleasuring inside and out.\n\nI feel like I'm drunk and high.\n\n\"Do you want me to fuck you?\" she asks.\n\n\"Yeah, baby, fuck me,\" I say, nodding with desire.\n\n\"Good. Then don't touch yourself while you wait.\"\n\nShe leaves the toy vibrating in my ass while she pulls on the harness and attaches the strap-on.\n\nShe grins wickedly, looking so sexy standing there with her gorgeous tits bouncing and a big black plastic cock between her legs.\n\nI'm squirming from the vibrator's buzz.\n\n\"You want to suck it?\" she asks.\n\n\"No. Just fuck me.\"\n\n\"Oh, come on, baby. For me? Just a little bit. Just the tip. It'll turn me on.\"\n\nI relent and she comes onto the bed happily to kneel over me with the black dong in my face. She reaches down and takes my dick in her hand and rubs it gently to get it to full hardness again. \n\n\"Suck my dick, baby.\"\n\nI take the cockhead into my mouth and look her in the eye while I suck it the way I've seen her seen my dick, but only for a minute. This is too much for me. \n\n\"You want me to fuck you, baby?\" she asks. \"Say it.\"\n\n\"I want you to fuck me,\" I say.\n\n\"Tell me what you want me to do.\"\n\n\"I want you to bend me over and fuck me in the ass hard.\"\n\nShe takes a bottle of lube and oils up the big 8\" cock. \n\n\"Turn around and get your knees, bitch.\"\n\nI get on my knees and stick my ass in the air. Doggy style. The vibrator slips out and I feel empty, but not for long because then I feel her soft legs behind mine and I feel the thick tip of the plastic dick pressing against my hole.\n\n\"Tell me again,\" she says.\n\n\"Fuck my ass,\" I tell her. \"I want to get fucked hard.\"\n\nWith that, she pushes the cock into my ass. I feel the head pushing against my wet anus, I feel myself stretching around it, and I moan as my ass wraps around my girl's cock. She pushes it deeper slowly and I take a deep breath and wriggle around to adjust to the intrusion. It's fucking thick. It's filling me up. Then I feel her smooth legs and hips against my ass, and I know she's all the way inside me.\n\n\"I'm going to fuck you like a little slut,\" she says.\n\n\"That's it, baby, do it. Fuck my horny ass.\"\n\nShe starts to pump in and out, and I moan and groan at the mix of pain and pleasure, the sheer intensity of having something so deep inside me, ravaging my male fuck-hole. It feels so fucking good to get fucked. Right now I don't give a shit how it looks or what anybody might think, including myself. Getting fucked in the ass feels good, period. It doesn't make me any less of a man, it doesn't make me question my masculinity, it doesn't make me gay. It just means I like to get fucked in the ass, that's it. So I let go and enjoy it as my girl starts to really fuck me hard. She thrusts and shoves while holding my hips, my waist, and I fuck back. My hard cock is swinging between my legs, and I don't want to touch it because I'll come right away.\n\n\"Yeah, baby, take that thick cock deep in your horny tight ass. Enjoy it, baby,\" she says. \"Tell me how much you like it.\"\n\n\"I love it, baby, I love to have your cock stretching my ass, I love it when you fuck me like this. Do it to me harder.\"\n\nI'm moaning and groaning, but like a man, not like a bitch, like a man who knows what he wants and allows himself to have it all.\n\nShe's pumping away at me and then all of a sudden I feel the pressure building in my prostate and in my dick, and then without even touching myself...\n\n\"I'm fucking cumming,\" I say, and then the big wave washes over me as my cock spurts again and again onto the sheets.\n\nShe stops and I just kneel there on my knees, with that fake cock in my ass, awash in bliss.\n\nShe pulls out and I flop on the bed, lay down, relax, and she smiles wickedly.\n\n\"Does my ass slut feel good?\"\n\n\"Oh, yeah, I feel great, baby. Come here.\"\n\nShe lies down next to me and while the feeling lasts, I'm completely sated."
    ],
    "authorname": "TonyXxx",
    "tags": [
        "anal",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/assplay"
}