{
    "title": "Three Square Meals Ch. 077",
    "pages": [
        "\"What do you mean?\" Tashana asked, her face lighting up with hope. \"Do you know some way of recreating Valada's lost data?\"\n\nShaking her head Alyssa smiled as she replied, \"No, your sister's the software expert, I'm a telepath.\" She approached the confused Maliri girl and reaching out to her with her hand, she gently brushed her temple. \"Now just relax and open your mind to me. I might be able to recover the memory of what you've seen.\"\n\nClosing her eyes, Alyssa reached out towards Tashana's mind as the Maliri girl obediently lowered her defences, making no effort to try and resist her matriarch's mental intrusion. The psychic blonde had already delved into Tashana's subconscious before, so she knew the way around her map of memories. It didn't take her long to find the one she was looking for, and nodding in satisfaction, she withdrew her spirit-form and returned to her body. \n\n\"I'll need you too, beautiful,\" she said, beckoning towards Irillith who was hovering protectively near her sister. \n\n\"Is this going to leave me with a ringing headache?\" Irillith asked, arching an eyebrow as she glanced warily at the blonde.\n\nAlyssa shook her head and replied, \"Trust me, you'll be fine.\" Reaching out towards the second twin, her fingers caressed Irillith's temple and she purred, \"Just relax; this won't hurt a bit.\" \n\nFollowing those simple instructions, the tension left Irillith's shoulders and her face smoothed out as she relaxed. Alyssa concentrated as she channelled the memory through to Irillith, whose violet eyes flew open, filled with an inner purple radiance. A moment later, light blazed outwards, forming a projection in much the same way as she'd done so with the Progenitor schematics that had been locked in Dana's mind.\n\nThis image wasn't a blueprint though and Valada's familiar face filled the image, her expression cast in a violet glow. She was seated in a high-backed throne and wearing long, layered ceremonial robes, which were not too dissimilar from the style Edraele favoured. When Valada began to speak, it was clear that this once bright and cheerful girl was no longer the same effervescent young woman they'd seen before.\n\n\"My name is Valada, and I was once Matriarch to Mael'nerak,\" she began in a sombre tone, staring bleakly at the camera. \"I'm recording this message to warn future generations of the threat the Progenitors pose and my dearest hope is to save the Maliri from future enslavement.\"\n\nHer expression turned furious, her eyes flashing with anger as she continued, \"Mael'nerak is gone and it's been six months since we last saw him. He abandoned me when forced to confront one of his fellow Progenitors and I can only assume both were slain in the battle, ending the pointless and brutal war. Billions slain, whole planets obliterated... the Maliri must never be abused in such a way again!\"\n\nValada's eyes narrowed as she said ominously, \"Their nature is to enslave, conquer, and destroy, in an endless cycle of carnage that's been repeated for countless millennia. Mael'nerak told me that before he established what is now the Maliri Regency, there was a thriving civilisation that existed here. They were a peaceful people called the Achonin and while their mastery of technology was impressive, they were not a warlike species. Mael'nerak smashed the ill-prepared Achonin fleets, then proceeded to commit genocide on a vast scale, destroying entire worlds and slaying billions in the process. Their entire civilisation was exterminated, the last remnants facing a lingering death on scattered outposts.\"\n\nHer expression was haunted with grief as she murmured, \"Then it was our turn to witness that level of savagery and I can only pray that the Maliri are never again subjected to such terrible loss.\" She looked despondent as she continued, \"Mael'nerak and his ship have disappeared, taking his technological secrets with him. None of the Thrall vessels that accompanied him have returned, so I've ordered a vast shipbuilding program at Genthalas to replace our losses and ensure the Maliri are not left defenceless.\"\n\nAfter a lengthy pause for quiet reflection, she slumped back in her chair, her robes gaping slightly and revealing her heavily rounded abdomen. Valada let out a long sigh, running her hands over her pregnant belly as she said, \"I've recalled the outlying colonies, consolidating our people so that we might begin our recovery. Despite everything that the Progenitors have done to us, the Maliri will remain strong and resilient.\"\n\nWith that the memory ended and Irillith blinked rapidly to let her eyes recover.\n\n\"Are you alright?\" Alyssa asked, rubbing her back comfortingly.\n\nIrillith looked relieved and she replied, \"I'm fine, there wasn't any pain.\"\n\nTashana gave her sister a brief hug, then turned to look at John and said, \"I'm sure you can see how I drew the conclusions that I did. Valada was angry at Mael'nerak but only because he left her and not for the more obvious reasons.\"\n\nCalara nodded in agreement. \"The poor girl was grieving for him - she obviously loved him very much. Having the bond broken like that must have been horrendous for her.\" She looked sad as she continued, \"Having to bring up his child alone must have been heartbreaking.\"\n\nLooking thoughtful, Rachel said, \"Actually, considering her size at the end of her second trimester, Valada must have been carrying twins.\" \n\nThere was quiet in the room as everyone tried to process what they'd just seen and heard, until inevitably their eyes were drawn to Irillith and Tashana.\n\n\"So we really are related to Mael'nerak,\" Irillith said, sharing a searching look with Tashana. \n\nHer sister smiled at her and replied, \"At least we know he redeemed himself in the end; that he truly loved Valada and sacrificed himself to keep her safe.\"\n\nIrillith nodded, returning Tashana's smile as she drew comfort from her words.\n\n\"Oh! There was another recording!\" Tashana blurted out, turning to glance at her blonde Matriarch.\n\nAlyssa smiled at her and said, \"I know, I just wanted to check Irillith was okay. Are you both ready to do the same thing for the next one?\"\n\nThey both nodded and Alyssa reached out her delicate hands for them again, brushing her fingers through their hair as they waited patiently. The two Maliri girls relaxed at her soothing touch and Irillith's violet eyes were filled with light once more.\n\nWhen Valada reappeared it became obvious that this recording had been taken many decades later. She looked considerably older now, but despite the worry lines around her eyes, she was still a striking woman. Although she was no longer so tense and angry, it was clear that something else weighed heavily on her as she gazed at the camera.\n\nClearing her throat, she began in a confident and measured tone, \"My name is Valada, leader of House Valaden.\" She paused for a moment and looked slightly embarrassed as she added, \"Just for the record, it wasn't my choice to name this House or our homeworld after myself, but everybody insisted.\"\n\nLooking away for a moment, Valada frowned and said, \"Now, where was I? Oh, yes! I wanted to add to my previous message; the warning I left for future generations.\" Staring into the camera, she continued, \"There has been no sign of a Progenitor in well over a century, giving the Maliri time to rebuild and recover. Our borders are strong and well protected, our fleets mighty and unchallenged in this quadrant of our galaxy.\" \n\n\"I've taken steps to keep the nature of our people secret, ordering that the Maliri conceal their appearance from all other species. We've largely withdrawn from interactions with the Trankarans and Ashanath, so I can only hope that they forget about our history as the years pass,\" she said thoughtfully, tapping her finger against her pursed lips. \n\nValada frowned in irritation then as she growled, \"Unfortunately my fellow House leaders have annoyingly short memories. It's almost as though they've forgotten about the threat the Progenitors pose and have taken to playing politics, vying with each other for status.\" She narrowed her eyes as she continued, \"They've even started referring to themselves as 'Matriarchs' and seem to be intent on trying my patience at every opportunity.\"\n\nShe gestured off-screen and a tall glass of some dark coloured wine floated over to her outstretched hand. She took a quick drink, then winced, her other hand reaching for her temple. \n\n\"Are you alright, great grandmother?\" a young girl's voice said to her from off-camera. \n\nValada frowned at her and said, \"Stop fussing, I'm fine.\"\n\n\"Would you like me to get you some medication, revered Matriarch?\" another young woman asked, her tone polite and respectful.\n\nThe older Maliri woman groaned and replied tetchily, \"Don't you start all that 'revered Matriarch' nonsense with me, young lady!\" She paused, then smiled affectionately at her granddaughters, before turning to stare at the camera. Her expression was intent as she continued in a stern voice, \"Stay vigilant and be ever watchful for signs of a Progenitor's encroachment. I've gathered all the information I can in this repository, in an effort to help prepare the Maliri if they should ever return. I sincerely hope that is never the case, but if one does, you must avoid interacting with him at all costs. Our people are terribly vulnerable to a Progenitor's presence, rendered practically helpless at the mere sight of him.\"\n\nWith a final smile, she finished by saying, \"Good luck to whoever views this recording. I wish you a long and pleasant life, unburdened by the dark shadow of the Progenitors.\"\n\nHer smiling face faded away and Irillith closed her eyes for a moment, rubbing them with her hands as Alyssa checked she was alright.\n\nRachel had been fascinated by the images and she noted, \"She moved that wine glass using telekinesis! It looked like Valada was quite accomplished with her psychic abilities! They must have manifested long before this video was taken.\" She glanced at the twins and added clinically, \"From the way she reacted, it seems very likely that she was afflicted by the same kind of tumour as both of you and your mother.\"\n\n\"I wonder how that started?\" Jade asked, looking at the tawny-haired brunette. \"And why does everyone in her family line get these tumours?\"\n\nShaking her head, Rachel replied, \"The women in Valada's lineage have triple-helix DNA which is unique amongst the Maliri. This genetic abnormality was definitely triggered by Mael'nerak's influence.\"\n\n\"Perhaps it was to do with being abruptly cut off from the bond?\" Calara asked, glancing at Alyssa. She gave her a sympathetic smile as she added, \"I remember feeling how much that hurt you.\"\n\nAlyssa considered it for a moment then replied, \"Maybe. Perhaps Mael'nerak did a rush-job upgrade just before he left her, and fucked up somehow.\" She looked pointedly at John and added, \"Any thoughts, handsome? You're awfully quiet.\"\n\nHe gave her a half-hearted smile, knowing that she'd heard everything he'd been thinking and was just trying to get him to talk about it. He looked around at the girls and said apologetically, \"Sorry, I was thinking about something else entirely. I've no idea what could have caused Valada's tumour.\"\n\n\"What's wrong?\" Sakura asked, slipping her arm around his waist and looking up at him with concern.\n\nCalara wrapped her arm around him too and asked perceptively, \"You're worrying about who Jessica Blake found on Arcadia, aren't you?\"\n\nHe turned to meet her dark brown eyes. \"It looks like my father is either Mael'nerak, who slaughtered billions of Achonin, or he was this mystery Progenitor who was responsible for the deaths of billions of Maliri.\"\n\nBoth girls hugged him sympathetically and he put his arms around them, grateful for their support.\n\n\"You aren't anything like either of those Progenitors though,\" Rachel said firmly. \"I know Mael'nerak had a Damascene conversion after spending millennia with Valada, but you've always tried to do the right thing.\"\n\nEdraele's soft voice filtered through his mind. *She's absolutely correct. I find it astonishing that either of those Progenitors could be your father when you continuously hold yourself to such rigorous standards. If that is true, you've elevated yourself far beyond either of them.*\n\nAlyssa had been closely monitoring his bleak thoughts and nodded as she said, \"The girl has a point. It doesn't matter who your parents were, you're a good guy.\"\n\nThe other girls all echoed similar sentiments, gathering around him to give him a kiss or just to brush their hands along his arms. Faye murmured similar supportive words, trailing her holographic fingers across his shoulder with a wistful look on her face.\n\nJohn caught a flicker of amusement in Dana's eyes as she desperately tried to suppress a grin. Surprised by her reaction, he asked, \"What's so funny?\"\n\nShe glanced at the Maliri twins, and replied with a giggle, \"If your Dad really is Mael'nerak, it means Irillith and Tashana are like your half great grandnieces, or something.\" \n\nRachel rolled her eyes at her lover and interjected, \"Yes, with about another hundred 'greats' added to that title! That's if you assume an average age of one-hundred for the conception of each new generation.\" \n\nAlyssa couldn't help smirking as she said to John enthusiastically, \"That's great news! It means you're just ever-so-slightly related enough to make fucking them extra naughty, but when you knock them up, your kids won't have four heads!\"\n\nJohn tried to keep a straight face but he couldn't help laughing. \"You and Sparks are as bad as each other!\"\n\nRachel put her arms around Irillith and Tashana, then said reassuringly, \"Don't pay attention to Dana. If you followed my family tree back over a hundred generations, you'd probably find I'm just as distantly related to John and to every Terran girl here for that matter!\"\n\nIrillith smiled at Tashana and said, \"You get used to their outrageous banter eventually, they don't mean anything by it.\"\n\nTashana grinned at Dana as she said, \"It's quite alright, I know they're just being playful.\" She glanced at John and blushed before she added, \"Alyssa raised an interesting point. When do you plan on 'fucking' me, John? Your potential half great grandniece finds the idea intriguing.\"\n\nJohn had been relieved to see that Tashana had taken the Karron girl's salacious teasing in her stride, but he coughed when she put him on the spot like that. He saw the fiery look she gave him, accompanied by a feisty grin and he couldn't help laughing as Dana and Alyssa cheered on her bawdy response.\n\nHe raised an eyebrow as he smiled at Tashana. \"That sounds like a fascinating conversation for later.\"\n\nShe returned his smile and said, \"I look forward to it.\"\n\nFeeling much better already, he looked around at the gathering of beautiful women and said, \"Thanks for your support everyone. I can't tell you how reassuring it is, knowing you have my back.\" Looking at Irillith, he added, \"Someone told me I should learn to lean on you girls if I'm feeling down. It turns out she knew what she was talking about.\"\n\nIrillith looked delighted that her advice had been helpful and she stepped forward to give him a tender kiss. \n\nJohn returned it, then pulled Tashana into his arms and kissed her as well. Looking at each of the identical azure beauties in turn, he said, \"Thanks for the presentation, both of you. You've answered a lot of very important questions and raised some new ones too.\"\n\n\"It was my pleasure! I loved working with Tashana,\" Irillith said, smiling fondly at her twin.\n\n\"Me too!\" Tashana exclaimed, looking overjoyed as she grinned at her sister. Turning to smile at John, she added, \"It was incredibly exciting to finally find out the truth about Mael'nerak, as well as truly understanding what happened to Valada. I'm so glad I decided to join you!\"\n\n\"I'm very glad too,\" he agreed, squeezing her gently with his right arm wrapped around her. \n\nHe was suddenly very conscious that he held both sisters in his arms, and with the way he was pulling them to him, their impressive blue cleavage was squashed against his chest. They both sensed his sudden change in demeanour, but rather than be offended, they glanced at each other and shared a secret twin smile before kissing him softly on opposing cheeks.\n\nIrillith leaned forward to whisper in his ear, \"Soon... After you've been with Tashana.\"\n\nJohn glanced at her twin in surprise and she met his curious gaze with a burning look of desire. Tashana glanced at her sister, then her violet eyes fixed on his again as she slowly nodded, making it quite clear her viewpoint on the matter.\n\nAlyssa slipped her arms around both girls. \"Although I'm loving the sexual tension between you three, it's time for lunch.\" Running her hand around Tashana and feeling her flat, toned belly, she added, \"This little one needs you to give her a big round tummy full of your spunk.\"\n\nNodding as he saw that hungry gleam in Tashana's eyes, John glanced at Irillith and asked, \"Do you want to join us in bed? You might as well be nice and comfortable when she makes you cum.\"\n\nIrillith looked at him in shock for a moment, misunderstanding what he was saying. She suddenly remembered the strange empathic link she shared with her twin and blushed a dark shade of blue, nodding in reply, but not trusting herself to speak for fear of embarrassing herself.\n\n\"Have fun!\" Alyssa announced cheerfully, playfully swatting both twins on the bottom, and grinning when they both gasped in surprise. Turning and sashaying towards the door, she said to John, \"We'll bring you some lunch after Tashana's sucked you dry. Then I thought we could do a bit more psychic training?\"\n\nHe nodded and turning to Sakura, he asked, \"Would you mind showing Tashana the basics in the firing range after lunch?\"\n\n\"I'd love to!\" Sakura immediately agreed. \n\n***\n\nTashana and Irillith lay curled up in bed together as John leaned over to kiss each of the twins goodbye, lingering a moment to gently caress Tashana's curved abdomen. Tashana saw the look of satisfaction on his handsome face, and her heart fluttered as she remembered something Dana had told her during their flight down to Valaden, when they'd retrieved the Progenitor data crystals. The redhead had leaned forward and whispered conspiratorially, \"If John strokes your tummy, it means he's thinking about stuffing you full of cum. If he does it after you're loaded up, he's thinking about what it'll be like when you're pregnant!\"\n\nWith that advice in mind, she was overwhelmed by the thought of a beautiful blue baby in her arms, the vision intensely powerful and crystal clear in its clarity. She let out a contented sigh as she gazed up at him in a daze, yearning for that moment with all her heart.\n\n\"Good luck in the firing range, this afternoon,\" he said kindly, his touch electrifying as his fingers brushed over her skin. He smiled at her and added, \"Sakura's a lovely girl; she'll take good care of you.\"\n\nTashana nodded slowly, still reeling from her vision, but she had the presence of mind to smile back at him and return his wave as he left the room. When he'd left, she turned to look at Irillith who was watching her in amusement.\n\n\"What's making you smile?\" Tashana asked curiously, reaching up and gently tracing her sister's full lips with her fingers.\n\nIrillith kissed her fingertips and replied, \"You've fallen for him already, haven't you?\"\n\nHesitating for a moment, Tashana replied honestly, \"Yes, I think he's quite wonderful.\" Pausing to study her twin, she continued, \"Does that make me a terrible sister? Falling in love with the same man as you?\"\n\nHer sister's answering laughter was free and unrestrained and Irillith replied, \"Normally, I'm fairly sure that would be a recipe for absolute disaster, but our circumstances are special.\" ",
        "\"It seems the women in our family are destined to fall in love with Progenitors,\" Tashana said, her eyes sparkling at the thought. Then she faltered for a moment. \"What are we going to do when we get back to Valaden? Mother will be with John too...\"\n\nIrillith studied her sister for a moment, then leaned down to give her a tender kiss on the cheek. Their eyes met as she replied, \"Let's see how things work out between just the two of us and John first. We won't be back in the Maliri Regency for weeks.\"\n\n*The Maliri Protectorate,* Alyssa teased them both, an undercurrent of amusement in her voice. *Or perhaps that should be Maliri Kingdom...*\n\nTashana started at hearing the sudden telepathic voice in her mind and Irillith smiled at her as she said, \"You quickly get used to it. It's easier when you can talk back to her once you've bonded.\"\n\n\"Can you tell me a bit more about this 'bond'?\" Tashana asked, gazing at her sister in curiosity. \"It's been mentioned a few times but I don't really know the details.\"\n\n\"It's something unique to Alyssa as far as we know,\" Irillith explained, thinking it over. \"As you two get closer and you learn to trust her implicitly, then it'll allow you both to forge a stronger connection with your minds. As I just said, the bond will let you talk with her telepathically and building a more powerful psychic link with Alyssa makes John stronger too.\"\n\n*There's often a specific event that acts as a catalyst,* Alyssa explained, her voice both gentle and patient. *There's no rush, these things seem to develop naturally and you'll know when you're ready.*\n\nTashana nodded as she listened carefully, then looked at her sister and asked, \"What event acted as the catalyst for you?\"\n\nIrillith blushed furiously, quickly averting her eyes from her sister's curious gaze as she let out a nervous giggle.\n\nHer sister laughed as she realised it must have been something quite naughty, and she leaned in to kiss her on the cheek and said, \"Sorry, I didn't mean to make you embarrassed.\"\n\n\"It's okay,\" Irillith replied, her mouth twisting into a shy grin. She hesitated for a second before she added, \"My one bit of advice for you, little sister, is to keep an open mind. If you do, you and John will have lots of fun.\"\n\n\"Hey, you're only ten minutes older than me, Rill!\" Tashana grinned playfully.\n\nIrillith's violet eyes sparkled as she replied, \"Which still makes you the little one, Shan!\"\n\nThe two sisters hugged each other, laughing together as they did so.\n\n\"Thank you so much for coming to rescue me!\" Tashana eventually blurted out as they pulled apart. Her expression was one of wonder as she continued, \"I keep thinking this must be a dream! I can't ever remember being so happy.\"\n\n\"I know exactly what you mean, little sister,\" Irillith said affectionately, her own smiling face one of happy disbelief. She sat up, and looking thoughtful, she added, \"We have John to thank for all of this. Your rescue, fixing my mind so I'm not a horrible vindictive bitch any more, and he's even turned mother into a thoughtful and caring woman!\"\n\nTashana tried to sit up too, but the heavy weight she was carrying in her tummy made it slightly awkward, at least until Irillith took her arm and helped her upright. \"Thank you,\" she said gratefully, before taking her sister's blue hand in her own. Tashana squeezed it and added, \"We'll have to think of a nice way to thank him for everything he's done for us.\"\n\nIrillith smiled at her sister and said, \"Don't worry, I know there's something he'll very much enjoy.\" She leaned over and whispered in Tashana's ear, her twin's eyes going wide as she listened avidly.\n\n***\n\nThe glowing white telekinetic dart flashed towards John's head and he swung his arm up just in time for his buckler of blue hexagons to absorb the psychic attack. The shield trembled with the impact but held firm, knocking him back slightly with the strength of the strike. Alyssa made a twirling motion with the fingers of her right hand and a flurry of shimmering bolts materialised in front of her, before springing to the attack.\n\nJohn had to activate his psychic speed again to rapidly deflect them all but managed to block each shining telekinetic missile without getting struck. Alyssa stopped abruptly and stood there with her hands on her hips as she frowned with disapproval.\n\nHe gave her a guilty grin, and attempting to pre-empt a scolding, he said, \"Yeah, I know, 'make a bigger shield'. I've tried, but I can't seem to expand them the way you can.\"\n\nShe glided over to him and said, \"We'll just have to keep working at it.\" Shaking her head in confusion, she added, \"I can't offer you any more advice, I've already told you how I do it. I just think bigger and there it is!\"\n\nTo demonstrate her point, she summoned a shield of translucent white hexagons then instantly expanded it to twice the size.\n\n\"I must have only unlocked part of this ability,\" John suggested, rubbing his chin thoughtfully. He saw the gleam in her eyes and his voice was firm as he continued, \"Nope, don't even think about beating up Sakura again to try and unlock it.\"\n\nAlyssa grimaced and said, \"You're making it sound like I want to hurt her! Nothing could be further from the truth.\" She let out a frustrated sigh before admitting, \"I'm worried, John. Getting burned by Tashana was the closest I've come to losing you. If I hadn't been there to stop her, you would've been incinerated!\"\n\n\"She's on our side now, so I'll just have to make sure I'm extra nice to her,\" he joked, giving her a mollifying grin.\n\nShaking her head, Alyssa said, \"We can't afford to be complacent about this. The shields you can make are an excellent first step, but they won't be enough to face this other progenitor. If he sends waves of fire at you, you're fucked!\" She heard his thoughts, and waved away his protest as she continued, \"Yes, I know you could use speed to get out the way, but what happens if he tries to burn Dana and Rachel? Those forearm shields aren't big enough to protect you and you'll get torched trying to save them, I know it!\"\n\nWrapping her in his arms, he stroked her back as she laid her head against his chest. He could feel her trembling against him and asked gently. \"What's wrong, honey? I know you well enough by now to tell that there's something else bothering you.\"\n\nAlyssa glanced up at him and he could see the fear in her cerulean eyes as she replied, \"You saw Valada; she was broken after Mael'nerak left her. I don't know if I could go through losing you like that again.\"\n\n\"I understand,\" he said, brushing his hands through her golden hair. Leaning down to kiss her forehead he added, \"Seeing Valada like that must have dredged up a lot of bad memories. I'm sorry you had to go through that.\"\n\nTilting her head back so she could kiss John properly, Alyssa wrapped him in her arms as though never wanting to let him go. When their lips finally parted she said earnestly, \"I love you.\"\n\n\"I love you too,\" he replied, giving her a loving smile. He looked at her expectantly, and added, \"Shall we have another go with the shield training?\"\n\nAlyssa appeared torn for a moment, before finally conceding, \"Actually, I think we've probably done as much as we can for now. You're handling those small shields like it's second nature, but unless we try something dramatic, I don't think you'll be able to break through that wall in your mind.\" She gave him a rueful smile and added, \"I'm sorry I got frustrated with you, I was just worried, that's all.\"\n\n\"I'll keep working at it, I promise,\" he said sincerely. Smiling optimistically he added, \"You never know, it might just be a case of needing more time practicing.\" \n\nShe returned his smile and released him from her tight embrace. \"Actually, we might as well take a break, we've been at it a few hours. Calara wanted a word anyway, she's up in your Ready Room.\"\n\n\"I'll go and say hello then,\" John replied, giving her a brief kiss goodbye before striding from the Training Dojo.\n\n***\n\n\"Nice grouping!\" Sakura noted, grinning as she admired the tightly spaced collection of shots on the target dummy. The results of Tashana's initial round of shooting were faithfully displayed on a holo-image above the console in front of her. \"Either you're an absolute natural or you've been holding out on me. Are you sure you didn't do a stint in the Maliri military?\"\n\nTashana ejected the spent magazine from the ten-millimetre sidearm, the pistol feeling comfortable and familiar in her hand. She slowly shook her head as she slotted a new mag into the slot, watching her hands move deftly as if on automatic pilot. \n\n\"I was never interested in guns,\" she murmured, eyebrows climbing as she swiftly moved to a rock steady firing position and unloaded the magazine on the target in one fluid action. As soon as the magazine was empty, her hands moved through that same routine, ejecting it and placing it on the table.\n\n*Careful, honey,* Alyssa murmured to Sakura. *She had a lot of combat experience in the Unclaimed Wastes. It's probably muscle memory.*\n\nSakura gave the startled Maliri girl a congratulatory pat on the shoulder, and said, \"Well, gifted natural it is then! You'll be combat ready in no time.\"\n\nTashana looked pleased, and turning to her enthusiastic shooting instructor, she asked, \"What do I need to do to be considered combat ready?\"\n\nThe Asian girl paused for a moment as she mulled it over, then continued, \"John made me train for hours on the pistol before we moved on to the XR75 rifles.\" Leaning forward with a wide smile lighting up her beautiful face, she continued furtively, \"But it looks to me like you've already mastered the pistol! I think we can move on.\" She picked up her own sidearm from the shooting bench, checked the magazine had been ejected and the safety was on, before turning to walk back to the weapon racks to retrieve a rifle.\n\nTashana held her back though, lightly catching her arm with her slender blue hand. With a funny look on her face, she asked, \"Before you put that pistol back on the racks, could I hold it for a second please?\"\n\nSakura turned to look at her in surprise, and replied, \"Sure, be my guest.\" She handed over the second pistol to the Maliri girl, then watched her curiously.\n\nLooking down at both pistols in her hands, Tashana reached for two fresh magazines and carefully slotted them into each weapon. Despite the complexity of reloading a new magazine into a pistol while holding one in each hand, her fingers moved with sure, confident motions, as she expertly reloaded each weapon. Her thumbs moved to the selector switches on both pistols, turning the setting from semi-auto to fully automatic, before looking downrange at the solitary target dummy. Sakura tapped several buttons on the wall-mounted target control panel and four dummies sprang into place down the firing lane at various distances. \n\nRelying solely on instinct, Tashana raised both hands and squeezed the triggers, her toned arms keeping each weapon steady and level as she opened fire. The raucous chatter of both pistols chewing through their entire magazine was only interrupted by a split-second's pause as Tashana switched targets half way through, and when both pistols clicked, signifying that their magazines were empty, she slowly lowered the two guns.\n\n\"Holy shit!\" Sakura gasped, as she stared at the lacerated target dummies, all four hit with ten well-aimed rounds to the centre of their torsos.\n\nTashana stared at the two pistols in her hands and said dryly, \"I must be a natural...\"\n\n*Meet me in the bedroom, we need to have a talk,* Alyssa thought to her, her voice calm and soothing.\n\n***\n\nThe door to the Ready Room slid open with a swishing sound and John walked inside, finding Calara sitting at his desk and staring at a holographic projection. He smiled at her as he strolled across the room. \"Hey, gorgeous! Alyssa said you wanted a word. Have you found something interesting?\"\n\nCalara's grim expression wiped the smile from his face as she replied, \"I think the Ashanath are in serious trouble.\" She rose from his chair then stepped aside, gesturing for him to sit.\n\n\"That sounds ominous,\" he said, sitting as she had requested then staring at the holographic map projected in front of him. \n\nIt took John a moment to orient himself with the systems on the map, but when he spotted a reddish-orange planet tagged as Ashana, it all immediately became clear. There were dozens of red Xs dotted along the Ashanath border with Drakkar territory and he didn't need his tactical officer to explain to him that they signified battle sites. He glanced up at the Latina, seeing the anxious look on her face as she stared at the map.\n\nRealising that she had his complete attention, Calara turned to him and said, \"I've spent hours reviewing all these battles and the Drakkar Raiders aren't behaving as you'd normally expect.\"\n\n\"How so?\" he asked, wondering what she'd spotted.\n\nShe brought up some battle footage taken from one of the concealed sensor satellites that the Ashanath used to monitor their border. John immediately recognised the distinctive angular shape of a trio of Drakkar cruisers, their grey hulls ribbed with purple reinforced banding. The three raiding ships closed on a pair of Ashanath patrol cruisers they had interdicted, the silver craft shaped like perfectly symmetrical discs. \n\nThere was a furious exchange of Beam Laser fire, with the Ashanath ships focusing on the lead Drakkar cruiser. Red columns of energy arced out and stripped it of shields, the beams scoring deep glowing furrows in its heavily armoured hull before causing several explosions. However the bigger Drakkar Cruisers struck with a vengeance, knocking out the shields on both Ashanath vessels, before crippling and immobilising the Grey ships by destroying their engines. As he would have expected, the Drakkar then launched a wave of dropships which docked with the doomed Ashanath cruisers.\n\nJohn grimaced, knowing that the Drakkar were likely slaughtering and devouring the grey skinned aliens inside, the ravenous monsters considering them to be delicacies. Calara accelerated through the next couple of hours of data and the dropships disengaged from the silver-hulled patrol cruisers before returning to the Drakkar raiding ships.\n\n\"That's panning out how I'd have expected,\" John said, nodding towards the map. \"What are you seeing that I'm missing?\"\n\n\"Just wait a moment,\" she urged him, as the three cruisers began blasting the Ashanath ships with coruscating purple beams. As soon as the silver-hulled ships were destroyed, the Drakkar turned and jumped out of the system.\n\nJohn looked at her blankly, and said, \"Sorry honey, it looks like you'll have to give me the executive summary. I can't keep up with your brilliant mind.\"\n\nShe smiled at him for the compliment, but that faded as she glanced at the footage and replied, \"There are two things that really stood out and I've observed the same pattern in attack after attack along the border. Firstly, Drakkar don't normally bother to stop and destroy Ashanath military ships after they've eaten all the crew - they're in too much of a hurry to chase after their next meal. That leads me to the second more important point, which is that the raiders don't head deeper into Grey Space on the lookout for civilian ships to plunder. Instead, they turn around and leave Ashanath Territory!\"\n\n\"That does sound highly unusual,\" John said, nodding in agreement. He turned to look at the territory map. \"You've observed the same behaviour in every one of those battles?\"\n\n\"That's right,\" Calara replied, following his stare at the map of Ashanath Space. She looked bleak as she added, \"I don't think these are normal Drakkar raids at all. I think the Ashanath are being systematically weakened in preparation for a major invasion.\"\n\nJohn stared at the sobering holographic image for a moment then asked, \"What have their losses been like so far?\n\nCalara brought up a list she had compiled of destroyed Ashanath vessels, her mouth forming a grim line as she replied, \"They've lost lots of patrol craft; mainly corvettes and destroyers, but nearly fifty cruisers too. That level of attrition is unsustainable.\" Flicking back to the holographic territory map, she continued, \"Even more worrying, the dispersal of the preparatory strikes make me think that the Ashanath are being encouraged to split their forces. It looks like they're being goaded into protecting the more exposed periphery systems from assault. However, I'm certain that the Ashanath's border colonies are not the Drakkar's primary target.\"\n\nJohn frowned, his eyebrows climbing as he asked, \"So what is? Ashana?!\"\n\nShe nodded and replied, \"Yes, I believe so.\"\n\n\"It's possible some gifted Drakkar Warlord has taken control, but the Drakkar aren't normally that sophisticated,\" John reasoned, the holographic map looking more alarming by the second. \n\n\"We know someone else who is though,\" Calara prompted him, her frown deepening. \"He's worked with the Drakkar before, so why not again now?\"\n\nJohn thought that over for a second, then nodded and replied, \"You're right, it has to be the Progenitor pulling their strings. What could he want with Ashana though?\"\n\n\"I strongly suspect it's got something to do with whatever the Greys have got buried near that Progenitor monolith site. Do you remember how it was guarded by all those orbital defence lasers?\" she prompted him, her brown eyes tense with worry.\n\nJohn slumped back in his chair and said, \"Yeah, I remember, and I have a feeling this other Progenitor isn't interested in some stone monoliths.\" He thought over the best plan of action for a few moments then continued, \"I better speak to the Ashanath, give them some warning.\"\n\nHe sat up again and tapped a button on the console built into his desk, bringing up the comms interface. The holographic panel appeared and he searched through his list of contacts until he found Councillor Talari from the Ashanath High Council. Swiping his finger across the name, they waited in silence for the call to go through, John reaching out to take Calara's hand and stroke it with his thumb.\n\nEdraele had been as good as her word and his high-priority message was routed straight through to the Ashanath. The only problem was the vast distances involved, so it took nearly a minute to establish the initial comm channel. A bulbous grey head eventually filled the holographic image and his silvery robes identified him as an Ashanath High Councillor.\n\n\"Your call is unexpected, JohnBlake, but it is good to see you again,\" the Councillor said in his eerie murmur, staring at John with big round unblinking eyes.\n\nTaking a chance that this was Talari he was speaking to, John said, \"Good to see you too, Talari.\" Deciding to come straight to the point, he added, \"My Tactical Officer has been reviewing the battle data you sent us.\"\n\n\"Ah yes, Calara,\" Talari replied, in his odd whispery voice. \"Her mind was even more impressive than the spectacular curvature of her...\" The Grey trailed off then, blinking twice in embarrassment.\n\nJohn chose not to comment on Talari's appreciation of the Latina's physique, although he fully agreed with the diminutive alien. He nodded and said, \"Well, Calara's been analysing the attack patterns and she's made an alarming discovery. We think the Drakkar are preparing a major assault on Ashana itself.\"\n\nTalari began blinking rapidly and even his computer modulated translation device managed to sound alarmed as he said, \"Our analysts suspect a raid on the outlying colonies. We cannot risk the Drakkar landing a sizeable raiding force on any of our worlds, the consequences would be too terrible to imagine.\"\n\nWhen John glanced up at Calara they shared a knowing look; the Ashanath were being distracted by these probing attacks. Turning to look at Talari once more, John asked, \"Have you divided your fleet assets to defend those colonies?\"",
        "\"We have, JohnBlake. How did you know that?\" Talari asked him, his impassive face not moving a muscle.\n\n\"I've discussed it with Calara and she predicted you'd react that way. She believes these raids are a feint, luring away your forces and leaving Ashana vulnerable. I would strongly advise you to recall every ship you have to your homeworld,\" John explained, hoping the Ashanath councillor would listen to his words of warning.\n\nTalari was silent for a moment before he replied, \"I shall do my best to convince the High Council. However, I must warn you that Councillors from the border worlds will resist my efforts to reroute all fleet assets.\"\n\nLeaning forward, John said in a quiet voice, \"If they give you any trouble, tell them this: we suspect that there's a Progenitor masterminding these attacks. For some strange reason, he seems to be very interested in Ashana.\" He quirked an eyebrow and added, \"Do you have any idea why that might be, Councillor Talari?\"\n\nThe Ashanath visibly trembled, his eyes blinking as he raised a wavering hand to his grey head. His synthetic voice warbled for a moment, before he replied evasively, \"Thank you for this service, JohnBlake. I shall endeavour to convince the High Council of the wisdom of your suggestion.\"\n\nJohn smiled at him, and replied, \"You're welcome Talari, I'm always happy to be able to help my allies. Good luck and we'll be with you in just over a day.\"\n\nTalari stared at him mutely for a moment before replying, \"We eagerly await your arrival JohnBlake.\" With that he ended the call, leaving John staring at static.\n\nTurning to look at Calara, John shook his head in amazement as he said, \"Did you see how Talari reacted?! The poor guy looked like he was about to have a stroke and he's an Ashanath for God's sake! They never show any emotion!\"\n\n\"You couldn't have said anything to leave him more rattled,\" the Latina said, nodding her agreement. \"Whatever the Ashanath are hiding on their homeworld must be hugely significant.\"\n\nJohn smiled at her and said, \"Let's hope they're willing to let us take a look when we arrive!\" He pulled Calara onto his lap, and added, \"That was excellent work, Commander. Thank you for all your hard work, you were amazing as always.\"\n\nShe gazed at him adoringly, and said with a brilliant smile, \"I'm always happy to help, Admiral. There's no need to thank me.\"\n\n\"I know, but you're always there for me,\" he replied, staring into those enchanting brown eyes. \"We haven't really had much of a chance to discuss it yet but I've been meaning to thank you for everything you did with the Maliri. It was basically down to your work on the simulator that we managed to avoid a horrific catastrophe. Instead of getting drawn into a bloodbath, we've managed to unite the Maliri without a single person losing their life in the conflict. You helped me turn millions of enemies into faithful allies!\"\n\nBefore she could reply, his hand moved from stroking her cheek to draw her in for a passionate kiss. Calara responded immediately, moaning into his mouth as she pressed herself against him. They made out for a while, just enjoying the close physical intimacy before he pulled away, leaving her breathless. \n\n\"For a kiss like that, it was totally worth it!\" she laughed gaily, giving him a beaming smile.\n\n\"So you enjoyed a King's kiss, milady?\" he asked, his eyes twinkling with amusement. \"I can't wait to ravish my Queen with my royal sceptre!\"\n\nShe blushed, and exclaimed, \"I can't believe she told you that!\"\n\n*And you thought I couldn't get you to blush any more!* Alyssa teased her lover, delighted at Calara's reaction. Her voice turned lusty and she added, *To make it up to you, when you're playing King and Queen with John, I'll be your obedient servant girl. I'll have to follow all your royal orders and do whatever you tell me to.*\n\nCalara pounced on John and kissed him soundly, and this time it was him left breathless when they parted. She groaned with frustration as she panted, \"Waiting until Tashana's two weeks is over is going to be torture!\" Looking hopeful she continued, \"Is there any chance she might be interested in trying some different flavours with her meals?\"\n\nCatching on to her meaning immediately, John smiled as he slipped a hand under her shirt to stroke her olive-toned stomach then replied, \"I wouldn't be surprised. She seems quite intrigued by Terran girls.\"\n\nAlyssa spoke to John next and said, *I'm with Tashana now actually. She was brutally efficient at murdering target dummies with Sakura and that raised a few questions.*\n\n*Anything to worry about?* he asked, kissing Calara's wonderfully soft lips again.\n\n*I explained that she'd been involved in a lot of combat in the Unclaimed Wastes, but skirted around her being a pistoleer pitfighter with over a hundred victory kills to her name. She seems happy enough now,* Alyssa explained, sounding pleased. She sent him an impish telepathic grin as she added, *Although, that might be because I'm stroking her G-spot and sucking her clit. She's on her third climax at the moment!*\n\nJohn couldn't help laughing out loud at that, leaving Calara smiling at him in confusion until Alyssa briefly explained the reason behind his sudden mirth.\n\n\"We'll come down and join you,\" John said, grinning at the aroused Latina in his arms and knowing Alyssa would have heard their earlier discussion.\n\n*Send our sexy girl down here by all means, she can play with Irillith. Watching the twins go off at the same time is so much fun!* Alyssa immediately agreed.\n\n\"You only want Calara?\" John asked in confusion, speaking aloud so the brunette could overhear and knowing Alyssa was reading his mind.\n\n*Afraid so, handsome, but you should definitely load her up tonight! That was a great idea,* Alyssa agreed. *For the moment, you're needed down in the Medical Bay.*\n\nLooking alarmed John asked, *Medical? Is everyone alright?*\n\n*Yes, we're all fine but Rachel wants to discuss some exciting news with you,* Alyssa replied, sounding genuinely thrilled herself. Her voice was eager as she continued, *It's important, John. You know I'd never deliberately cockblock you without an exceptionally good reason.*\n\nHis quad was extremely unhappy at having to wait to fill up the stunning Latina in his arms, throbbing with a dull ache to voice its displeasure. John knew Alyssa was being truthful with him though and if she needed him down in Medical, there was bound to be an extremely good reason.\n\n\"Looks like we'll have to wait until later,\" John said to Calara, giving her an apologetic smile.\n\n\"You're always worth waiting for,\" she replied happily, kissing him one last time before climbing off his lap.\n\nShe grinned at the sign of his very obvious discomfort pitching a tent in his trousers, and reaching down she gently stroked his balls, and whispered, \"I'll take very good care of you later, boys. I promise.\"\n\nHer loving words did nothing to help John's tense state, nor did the alluring sway of her hips as she flounced out of the Ready Room ahead of him. Memories of hours spent plundering that perfect little bottom didn't help much either. Taking a deep breath he managed to get himself under control and strolled out of the Ready Room behind her, waving Calara goodbye as she stepped into the grav-tube.\n\n\"John, can you spare a moment?\" Faye asked, skipping down the Command Podium with her wings vibrating nervously in the air. Her luminous eyes looked huge as she gazed at him and he could tell she had something important on her mind.\n\nHe nodded and replied, \"Of course, Faye. Although Alyssa said I'm needed down in Medical, so I'm afraid we'll have to keep it brief for the moment.\"\n\nA light of understanding appeared in her eyes and although she looked disappointed, she smiled at him and said, \"Ah, I see! Not to worry then, I'll speak to you about it later.\"\n\n\"Are you sure?\" he asked, reaching out to stroke her purple arm when he saw the flicker of disappointment on her cute face. His fingers brushed through her holographic form and he looked down in surprise, before saying \"Sorry! I didn't mean to do that, I forgot.\"\n\nFaye looked positively delighted though and her sparkling smile was glorious. She let out a happy sigh and said, \"You don't need to apologise! I love it when you forget I'm a digital creature!\"\n\n\"You'll be happy to hear it's happening more than ever,\" John said with a smile. \"When Dana can make you some kind of physical presence, it'll be no adjustment at all!\"\n\nThe purple girl grinned at him and although she didn't say anything, she hoped there'd be one very significant adjustment he'd make for her if that happened. \"I won't keep you, you better head down to Medical then!\" she said cheerfully, before fluttering up to her perch on the command Podium.\n\nJohn watched her svelte naked figure as she hopped up onto his Command Console, and she blushed when she turned to look at him and caught him admiring her. They exchanged smiles, with the purple sprite looking more excited than ever, before he strolled over to the grav-tube and into the red anti-gravity field. He took a deep breath as he descended in that warm scarlet glow, trying to regain some measure of control over his raging libido. Having a crew of delectable young women at his beck and call was a dream come true, but trying to retain some kind of professional composure when they were teasing him incessantly was a real test of his will power.\n\nHe managed to calm himself down with a few quick focusing exercises, then stepped away from the anti-grav field into the corridor on Deck Seven with practiced ease. Remembering the look of surprise on Rachel's face a couple of days earlier, he was intently curious as to what kind of new revelation she'd stumbled across. Then there was her request to use Dana as a test subject and Alyssa's obvious excitement at whatever their doctor had discovered. The whole mystery had him quite intrigued.\n\nHitting the button to open the Medical Bay door, he strolled inside the large room, and stumbled to a halt as he laid eyes on Rachel and Dana. The redhead was oiled up and entirely naked, lying back on the medi-scanner with her legs parted and hands tightly restrained to the table as she moaned with lust. Meanwhile, the ship's doctor - who was fully dressed in her white doctor's coat and what appeared to be a tight skirt, stockings and very high heels - seemed to be intently focused on committing some very serious medical malpractice. Squatting down on her haunches, Rachel's tawny-haired head was between her test subject's spread thighs, with debauched lapping sounds accompanied by lusty female gasps filling the room.\n\nJohn shook his head in amusement, guessing that this was what had Alyssa so excited and strolled over to join his Chief Engineer and Doctor. \"This looks like fascinating research, Doctor,\" he said glibly, grinning at the two girls. \"Are you studying the female orgasm?\"\n\nDana's flushed face turned towards him and she groaned in frustration before replying tersely, \"I fucking wish! She's been teasing me for fucking ages!\"\n\nRachel rose with a poledancer's grace then turned to smile coyly at him, her flushed lips slick with the evidence of Dana's arousal. \"Your timing is impeccable, Admiral,\" she replied, stepping aside and moving around to the side of the medi-scanner. \"If you'd care to disrobe, I've got some intriguing findings to share with you.\"\n\nRaising an eyebrow at her, he began unbuttoning his shirt as he asked, \"And I need to be naked to hear these results?\"\n\nShe grinned at him and shook her head as she replied, \"No, but Dana's all ready for you, and I wouldn't want you to get oil on your clothes.\"\n\n\"I had noticed that. I thought that was a very nice touch by the way,\" he said with an approving smile, his hands moving to his belt as he admired the redheaded teenager's glistening bronzed body.\n\n\"I'm delighted you approve,\" Rachel replied, leaning over to tweak one of Dana's taut nipples and drawing a sharp gasp from her test subject. With her other hand, she pressed a couple of buttons on the medi-scanner, the device performing a full-body scan of her lover.\n\nJohn tore off the last of his clothes, then stepped forward, his cock throbbing with anticipation once more. Lining himself up Dana's sopping pussy, he nuzzled against her, swabbing his broad head with her juices to get himself nice and wet. He brushed against her swollen clit and she whined with need, desperate to get some relief after being tormented by Rachel for so long. When he started pushing inside her, he was able to slide all the way up to her uterus in one single, pussy-stuffing thrust, her pliant body eager to be filled.\n\n\"Holy fuck!\" Dana wailed, her bound hands clenched into fists. After adjusting to being impaled by his monstrous cock, her sky blue eyes gazing at him imploringly as she begged, \"No fucking around! Make me cum!\" \n\nRachel placed a cautionary hand on John's chest and advised him, \"If you want to really see her explode, just fully sheathe yourself inside her for the moment. Don't let her climax just yet.\"\n\n\"I'm going to get you back for this!\" Dana snarled, her chest heaving as John gripped her slick thighs and used the leverage to push deeper into her body. \n\n\"Shush now,\" Rachel murmured. \"Be a good girl and take his cock, we'll get you off eventually.\"\n\nDana's back arched as her malleable body yielded to John's insistent pressure, his blunt head penetrating deep into her womb. \"Oh God! That feels so good!\" she hissed, as her inner walls were stretched wide by his girth.\n\n\"There, that's perfect,\" Rachel noted, nodding with satisfaction and pressing a couple more buttons on the display.\n\nJohn grinned at the panting girl stuffed full of his cock, and said, \"I concur, Doctor.\" Dana was gripping him like a fist, and his heavy cum-filled quad was nestled against the deliciously smooth flesh of her rump. \n\nWith a final click on the console, Rachel summoned a holographic display before them, showing the impaled teenager's lower belly and her womb stuffed with John's flexing cock. Dana and John stared at the hologram in wide-eyed surprise, equally amazed to see his full penetration in all its glorious detail. John pulled back slightly, then watched in fascination as the holographic cock plunged back inside her, the tip just nudging the back of her womb and drawing a whimper from the redhead.\n\n\"That's a hell of a view,\" John said, glancing at Rachel. He smiled at her and added, \"Although I'm not sure what research you're revealing. Are we planning to just watch me fill her up with cum?\"\n\nDana groaned at the thought, bucking against him in an attempt to get him to fuck her. \n\nRachel placed a firm hand on her lover's toned belly, pinning her to the scanning table and preventing her from moving. She met John's curious gaze, and her grey eyes were stormy as she replied, \"All that talk of pregnancies and contraception on Genthalas... I've no idea how I missed it! My only guess is that my attention was deliberately diverted, in a similar way that none of us were aware of the effects of the Gift until they were pointed out to us.\"\n\n\"I don't follow, Rachel,\" John replied, trying to resist the urge to stroke in and out of Dana as he stared back at the excited doctor.\n\nCaressing Dana's abdomen, Rachel glanced down at her and murmured lovingly, \"Every time we swallow your cum... It resets us, restoring our wombs to peak readiness . We aren't on a menstrual cycle any more, we're always hyper-fertile and ready to be impregnated!\"\n\nJohn shared a shocked look with Dana, his cock twitching eagerly at the thought and he stammered, \"What about ovulation? How's that supposed to work?\"\n\nHer smouldering gaze met his and she replied, \"I believe you can trigger it. Whenever you want us to have your baby!\"\n\nHis eyes widened at the thought, and he glanced down at Dana's slim belly, the scanning holograph showing her ready womb and waiting ovaries. Everything Rachel just told him resonated in his mind and he knew her theory was unfailingly accurate. He glanced at Dana and saw she was watching him with a look of unrestrained joy, her stunningly beautiful face alight with hope and eager anticipation. \n\nIt would be so easy - he knew he'd simply have to extend his will and coax her nubile body to respond to him, then fill her with his potent load. Just like that, an instant guaranteed pregnancy and her fertile womb would be carrying his baby. The atmosphere in the room was taut with raw sexual tension as Rachel and Dana both gazed at him in awe, sensing that Dana was only moments away from impending motherhood. \n\n\"Why not?\" he mused to himself, gazing into Dana's sky blue eyes, the golden coronas quite visible around her pupils as they flared with her excitement. \"She's an incredible girl and you're hopelessly in love with her. She'll be a wonderful mother, so just give her what you're both yearning for.\"\n\nHe was sorely tempted by his lustful inner monologue, seconds away from carrying through on a whim as he was seduced by thoughts of Dana growing heavy with his child. He could imagine it now, her cradling a baby in her arms as she looked at him in wonder, sky-blue eyes filled with love and adoration. \n\nSomething held him back though and as much he dearly wanted to make that tantalising vision a reality, he knew he couldn't risk it. \n\n\"I want it so much, but we can't, honey, not yet. We're still in too much danger,\" John said to Dana, his voice thick with barely controlled lust.\n\nShe nodded her understanding, too awed by the moment to register her disappointment. Rachel had been holding her breath as she stood beside them, her grey eyes wide as saucers as she stroked her lover's tummy.\n\n\"I can't trust myself in your pussy, I'm too turned on at the thought of knocking you up,\" John said to Dana apologetically. Taking in her restrained state, and realising it would take too long to reposition her, he eased his way out of Dana, drawing a whine of denial as he pulled out. Turning to Rachel, he said bluntly, \"I need you.\"\n\n\"Of course!\" she gasped in understanding, shrugging out of her doctor's coat and staring at him owlishly as she started to unbutton her blouse.\n\nJohn pulled her to him, grabbing her blouse and ripping it from her in a shower of buttons, making her gasp in shock. Bending the brunette over her lover, he hiked up her skirt and found he'd been right with his guess earlier. She was wearing thigh-high stockings attached to a garter belt, which perfectly framed her pert little bottom. \n\n\"Lube?\" he demanded, before following Rachel's shaking hand towards a nearby cabinet. \n\nNodding with satisfaction, he grabbed the tube and brought it to her ass, Rachel helpfully grasping her cheeks and pulled them apart to reveal her barely used passage. Nudging the nozzle inside, he clamped down on the tube, squeezing the cold lubricant inside her and making her squeal. He casually cast it aside, then lined himself up and lunged forward, stretching her anus wide to take his broad shaft before plunging half way up her ass.\n\n\"Holy fuck!\" Rachel squawked, her back arching at the shocking penetration.\n\n\"Yeah, give it to her!\" Dana cheered him on, her face flushed as she writhed impotently on the scanning table, her hands lashed to the table.\n\nJohn placed his hands on Rachel's shoulders driving deep inside her until her trembling cheeks were pressed against his groin. \"You got me in this state, you naughty, clever girl,\" he hissed in Rachel's ear. \"You can help me get some relief.\"\n\nShe tossed her head to one side, sweeping her tawny hair out the way so she could stare at him with feverish eyes, and said, \"Fuck me hard! Make me your little butt-slut!\"\n\nHe blinked at her in surprise until Dana's giggle drew his attention. \n\n\"She can't stop going on about it! She's always asking me what it's like to get a real hard assfucking!\" Dana crowed, hooking her legs over Rachel's and cradling her lover between her oiled thighs. ",
        "\"Is that right?\" John asked, grinning at the bent over girl. \"You've been craving a real pounding?\"\n\nHe punctuated the last by pulling out and thrusting hard into Rachel's pliant rump, her cheeks quivering with the impact. She grunted at being stuffed full again and just nodded her head, too turned on to be able to speak. John smiled as a sudden thought came to him, and he moved his hands to her waist for a moment, lifting Rachel slightly and repositioning her so she was lined up, pussy to pussy with Dana, the redhead's legs forced back to accommodate her. \n\nTaking a firm hold of her shoulders again so she couldn't wriggle away even if she wanted to, he ground into her, drawing startled cries from both girls as their clits mashed together. As he buggered Rachel with a relentless powerful rhythm, he kept the teenagers pinned together, tribbing each other as he slaked his lust with Rachel's snug rear passage.\n\nDana had been teased for hours, and the sudden burst of sensation from Rachel's body rubbing against her clit had her gasping in ecstasy. \"Oh fuck me!\" she cried, back arching as she finally came, her body shaking violently as she bucked against the brunette.\n\nRachel had her arms straight, her back arched as she took his rough anal assault, the muscles in her back rippling as he pistoned his cock into her again and again. The sound of her tight bottom slapping against him filled the room with a measured debauched tempo, accompanied by the little mewling whimpers she made as he took her.\n\n\"Oh, yeah... yeah, Unh!\" she gasped with excitement, loving being fucked so savagely.\n\n\"You ready?\" John growled between powerful thrusts of his hips, his quad smacking into her pussy every time he buried himself inside her.\n\nShe twisted her head to stare at him over her shoulder, her mouth open as she moaned with heated arousal. \"Do it! Cum for me!\" she begged him, her grey eyes hooded with lust. \n\nHe stared into her eyes as he rode her to the finish, keeping the brunette firmly in place as he used her gloriously tight ring to bring himself off. It didn't take long, not as excited as he was, and with a final lunge he drove her forward so that she collapsed on top of Dana. She cried out as she felt the pulses of cum shooting up his shaft, her sensitive, tightly stretched ass clenching around him. John roared out his release, jerking forward as he tried to plunge deeper, her cheeks squashed against him as he unloaded his four balls up her ass.\n\nHe collapsed against her back when he was done, panting for breath after the frenzied exertion. The girls were just as exhausted after coming so hard, but they all recovered quickly, laughing in delight at the feeling of being so thoroughly sated.\n\n\"Now that's just what I needed,\" Rachel crooned, leaning back and twisting to one side so she could kiss John as he rested with his chin on her shoulder.\n\nHe returned her kiss, then reached around her with both hands to feel her cum stuffed belly, caressing her slippery oil-slicked skin with both hands as he smiled with satisfaction. \"Top marks for the presentation, Doctor,\" he said with a grin.\n\nBoth girls giggled at that, until Dana raised an eyebrow and asked with a smile, \"Can one of you naughty fuckers untie me now?\"\n\nJohn felt cool fingers tracing up his back, and Jade stepped into view beside them, having arrived unnoticed during their frantic coupling. \"Not just yet,\" the naked Nymph purred, taking in the titillating scene with flashing emerald eyes. \"You'll make a nice comfy pillow for Rachel while I'm having my dinner.\"\n\n***\n\nJohn strode into his bedroom, smiling at Alyssa as she sat up and waved at him. Just before he turned to walk towards the bathroom, he spotted the twins entwined in bed and tucked under the covers, the Maliri girls out like a light. \n\n*Poor things, Calara and I blew their minds,* Alyssa thought to him, her satisfied grin belying the sympathy in her voice.\n\nHe chuckled quietly to himself as he stripped off his clothes and walked into the shower, eager to wash away the layers of sweat and massage oil from his body. The warm water washed over him, and he closed his eyes and let out a low groan of contentment as the gentle cascade soothed his aching muscles. \n\n\"It looks like it wasn't just Rachel's ass that got a good workout,\" Alyssa murmured to him as she began soaping down his back, her skilled fingers kneading his tired muscles.\n\nHe felt a second pair of hands stroking his chest as Calara added, \"Alyssa told me what happened. I'm glad you didn't get left out.\"\n\nOpening his eyes, he smiled at her and replied, \"You're next tonight as long as you're still up for it?\"\n\n\"Now that's a silly question,\" the Latina replied, giving him a loving smile.\n\nJohn hesitated a moment, then glanced at Alyssa and asked, \"Did you tell her what Rachel discovered?\"\n\n\"That you're guaranteed to knock us up whenever you want?\" she asked, arching an eyebrow. Her eyes flicked to the brunette and she added, \"I think she quite likes the idea.\"\n\nThe soft look of yearning in Calara's eyes immediately confirmed Alyssa's suspicions and John turned so he could pull both of them into a hug. \"It's when WE want, not just me,\" he corrected her, kissing both girls in turn.\n\nCalara smiled at him as she hugged him fiercely and replied, \"You're very sweet, but it really is just down to you. All of us are already eager to get pregnant, probably Tashana as well.\"\n\nAlyssa nodded and grinned at him as she said, \"You can breed your entire harem whenever you like. We all want it.\"\n\nJohn could see how sincere they both were and he held them close as he said, \"I'd love that too, but I just know it would be a terrible idea.\" He quickly added, \"Until I'm sure I can keep you safe I mean.\"\n\n\"The Universe is a vast, dangerous place,\" Calara said, her big brown eyes gazing up at him. \"I don't think you're ever going to be able to guarantee our safety.\"\n\n\"I know, but I'm not trying to fob you off, I promise,\" he replied, before looking away, his eyes losing focus as he gazed into the distance. He sounded troubled as he continued, \"What we've been through already has been a cakewalk to what's coming, I can just feel it in my bones.\"\n\nThe girls went quiet as they hugged him for reassurance now, each of them feeling a shiver of fear run up their spine at his sombre tone. They stood in that warm cascade of water, a palpable sense of dread having suddenly descended on the trio of lovers as they all wondered what they might end up facing. \n\n\"Hello!\" Faye said brightly, her cheery voice sounding jarringly out of place. \"Sorry to interrupt, but I had some important news for you!\"\n\nJohn, Alyssa, and Calara all laughed with relief, never more glad to see the eternally upbeat sprite.\n\n\"Your timing's impeccable, Faye,\" John said with a grin. \"What news have you got for us?\"\n\n\"We just flew into range of the Terran Federation comms beacons!\" she announced, her luminous eyes going wide with excitement. \"You received just over twenty-two-million messages while you were out of contact in Maliri Space.\"\n\nHe balked at the thought and blurted out, \"There must be some mistake?! I got pranked by one of my marines years ago, but I only got a few thousand messages from spam-bots!\"\n\n\"They're all yours!\" she announced with a grin. \"Calara has the next highest, with thirty-seven.\"\n\n\"I do?\" the Latina asked in surprise.\n\nFaye nodded eagerly, and replied, \"Nineteen from your mother, eight from your father, each of your brothers have attempted to contact you several times, and you've been sent an invite to an award ceremony.\"\n\n\"Ah crap!\" Calara blurted out, suddenly looking guilty. \"I better give my mom a call!\"\n\n\"Go ahead, honey. Send her my regards,\" John said with a smile, giving her a quick kiss before she darted out of the shower. \n\n\"Any messages for the rest of the girls?\" Alyssa asked curiously.\n\nFaye nodded, and replied, \"I've already notified Rachel. There's been considerable interest in her medical breakthroughs and her father has been attempting to contact her too.\"\n\nJohn frowned as he asked, \"Let's go back to my overflowing inbox for a moment. What's going on?\"\n\n\"It appears the press discovered the Invictus' call routing ID, and the information leaked over the holo-net,\" Faye explained, a wide smile on her face. \"I've put all my available avatars on sorting through the messages and the vast majority seem to be from grateful Terran Federation citizens. Most of them are people thanking you for your intervention at Terra, although some were from military personnel involved in the Battle of Regulus.\"\n\nAlyssa smiled at the purple girl and said, \"Can you save up some of the nicest ones. I'd love to see them.\"\n\n\"Of course,\" Faye replied, giving her an accommodating grin. She looked thoughtful for a moment, and added, \"John has also been contacted by a significant number of people regarding business ventures, merchandising, and promotional opportunities. As his business manager, would you like to review those too?\"\n\nAlyssa grinned back at her. \"Yeah, I'll take a look, thanks!\" Turning to smile at John, she added impishly, \"I think you'd look great on the side of a soda can!\"\n\nJohn rubbed his face and said, \"Alright, how about messages from people on my contacts list? Anything else I should know about?\"\n\nFaye nodded, smiling brightly at him as she replied, \"Admiral Devereux wishes to arrange an award ceremony for you and the crew. She's been calling repeatedly to arrange a convenient date. Charles has left you a couple of messages too, related to the award ceremony and your activities in the Battle of Regulus.\"\n\n\"I better call them,\" John said, smiling at the digital girl in gratitude. \"Thanks, honey, you've been a life-saver. I can't think of anything more terrifying that having to search through all that lot!\"\n\n\"You're welcome!\" she replied, giving him a gleaming smile in response. \"I'll keep sifting through the messages to see if there's anything else urgent.\"\n\nJohn opened the shower door then smiled at Alyssa as he waved her through.\n\n***\n\n\"So, we've all been invited to another big award ceremony, but it's on Terra this time,\" John announced to the girls as they sat around on the bed, getting ready to turn in for the night. He stroked Calara's rounded tummy as she leaned against him, and added, \"They want to thank us for saving Terra and for the victory against the Kintark in the Battle of Regulus. What do you girls think?\"\n\nDana grinned at him and replied, \"Cheered on by adoring crowds again? Hell yeah I'm up for that!\"\n\n\"The last award ceremony was very exciting!\" Jade agreed, nodding eagerly.\n\n\"What about you, gorgeous?\" he asked Calara. \"The Admiral wanted to make sure you're going to be there.\"\n\n\"Hmm?\" she murmured distractedly, her hands cradling Tashana's head as she gazed into her violet eyes, watching the Maliri girl lapping at her pussy and sucking his spunk out of her. \n\n\"If she wasn't so close to cumming she'd be just as excited by the idea as Sparks,\" Alyssa explained, with a fond grin at the Latina.\n\nJohn smiled at the girls who hadn't spoken up yet and said, \"Do any of you want to keep a low profile and not be involved?\"\n\nSakura frowned and replied, \"I was still Shinatobe when you saved Terra, and I slept through the Battle of Regulus. I can't claim credit for helping you with any of that; I'd feel dishonest.\"\n\n\"You helped save Tashana though, that's well worth celebrating,\" John said, giving her an encouraging smile.\n\nAlyssa nodded her agreement and said, \"I'd like all of us to be there if possible. It'll make a bigger impact.\" She grinned at Sakura and continued, \"Besides, you'll looking stunning in a white lioness uniform!\"\n\nRachel hesitated for a moment, her desire to be a part of this with the crew warring with an entire lifetime of aversion to the public spotlight. \"I'm not sure,\" she faltered. \"It might not be a good idea.\"\n\nDana laughed and nudged her with an elbow as she said, \"Don't be daft, you have to come along! I want to see all those marines and navy guys drooling over you!\"\n\n\"Devereux was asking after you as well,\" John said with a smile. \"I think you left a lasting impression on the military with all the burn victims you helped.\"\n\n\"Besides, you'll be with two Progenitors and all the rest of us,\" Jade said with a grin. \"What's the worst that could happen?\"\n\n\"Alright, I'll be there,\" Rachel finally relented, sharing an excited smile with Dana.\n\nJohn glanced at Tashana, but she was far too busy filling her tummy, her blissful expression as she lapped away giving him the impression that she was oblivious to the conversation. Looking at Irillith next he added, \"What about you, beautiful? How do you want to play this?\"\n\nShe raised an eyebrow and replied wryly, \"It might be worth bearing in mind that I'll face a death sentence for appearing before non-Maliri without armour.\"\n\nHe nodded thoughtfully before finally replying, \"Fortunately I have a bit of influence with a few Matriarchs. I might be able to convince them to let you off with a smacked bottom.\"\n\n\"It seems well worth the risk then,\" she quipped, her angular eyes lighting up as she laughed. She stroked her sister's hair and continued on a more serious note, \"All joking aside, as long as we don't actually tell anyone we're Maliri we can keep the secret safe. Not including the Trankaran Chancellor and her advisors, no one outside the Regency has a clue what the Maliri actually look like, aside from all of you obviously.\"\n\n\"Why even bother worrying about that shit anyway?\" Dana asked, looking puzzled. She glanced at John and added, \"You're their King now or whatever, aren't you going to just throw the borders open to trade and all that stuff?\"\n\n\"I'm the 'Protector of the Maliri', not their King,\" John corrected her with a pious smile. \"I'm not in a position to make that kind of decision for the Regency.\"\n\nShe waved a hand dismissively, grinning at him as she replied, \"Is that right? Well, the Matriarchs rule the Maliri and you're already planning on knocking-up six of them. The rest will be sucking you off whenever they can, at least until they can convince you to start fucking them too. Call yourself what you like, but we all know who's really running the show.\"\n\nIrillith chuckled at Dana's choice turn of phrase, but didn't make any attempt to correct her succinct summary of the situation.\n\nAlyssa frowned at the redhead, then stroked John's arm and said soothingly, \"You're only stepping in to help out against external threats, aren't you, handsome? Keeping the Maliri safe against this other Progenitor, that kind of thing.\"\n\n\"Yeah, that's the plan,\" John agreed, narrowing his eyes as he glanced at Alyssa. He couldn't help noticing that Edraele had stayed suspiciously quiet during this exchange as well.\n\n*Sorry, John, I was just distracted,* Edraele quickly apologised. *I've been working on my relationships with the Young Matriarchs. They're surprisingly energetic.*\n\n*No problem,* he replied, smiling at the thought provoking image that conjured. *What're your thoughts on Irillith and Tashana attending this award ceremony?*\n\n*The council of Matriarchs hasn't made any changes to the law about keeping the Maliri identity secret, although a death sentence would now be commuted to imprisonment. I believe it's prudent to keep that law in place though, at least until you've dealt with this other Progenitor,* Edraele advised him. *With regard to the ceremony; as long as my daughters' species is kept secret, I don't see any harm in them attending.*\n\nDana shrugged and smiled at John as she said, \"Sorry, my mistake, I must've just let my imagination run away with me. I can't help it if I find the idea of you knocking up the Young Matriarchs really hot!\"\n\nThe rest of the girls all nodded eagerly, except Calara who was in the throes of climax and Tashana who was working hard to keep her there.\n\nJohn turned his attention to the perky sprite who had joined them on the bed, and asked, \"How about you, Faye? If Dana can make some kind of portable projector, I'm sure you could come along too.\"\n\nDana nodded and said, \"Yeah, I could rig up something like that for you, no problem.\"\n\nFaye shook her head firmly and replied, \"I really appreciate you wanting to include me in this, it's very thoughtful. I don't wish to attend though.\"\n\nThey were all surprised by her uncharacteristically sombre tone, and John asked, \"Why? What's wrong?\"\n\nThe purple girl smiled at him sadly and replied, \"The award ceremony is to recognise and celebrate you saving Terra from Nexus, a rogue AI. Even though we stopped him from destroying the planet, hundreds of thousands of people lost their lives on the Moon, and in all the ships and facilities his fleet destroyed in the Sol System.\"\n\nJohn nodded and replied in confusion, \"Sure, I know that, but why would that stop you from coming along?\"\n\n\"As another Artificial Intelligence, it would be in poor taste for me to be there,\" she explained patiently. Faye saw that he was about to object and she raised her hand, her voice firm as she continued, \"Families of his victims will be watching the ceremony. I don't want to risk upsetting them if my nature should accidentally be revealed - you know how Terrans react to AI, and their fears are entirely justifiable after what happened with Nexus.\"\n\n\"That's very considerate of you, Faye,\" Alyssa said quietly, impressed by the digital girl's selflessness.\n\nFaye looked forlorn as she replied, \"I've been watching hundreds of video messages from relatives of the people Nexus killed. They thanked John for stopping Nexus before he could do the same to others. The raw grief in their eyes is very moving.\"\n\n\"Alright, I understand,\" John said, giving her a sympathetic smile. \"I'd offer to give you a hug, but we'll have to wait a little while for that.\"\n\n\"I've had a few ideas about that,\" Dana said brightly. She glanced at Faye, and added, \"It's going to take me a while, though. Giving you some kind of responsive physical form complete with senses is going to be a hell of a leap from the maintenance bots.\"\n\n\"That's okay, I don't mind waiting!\" Faye replied, her luminous eyes getting bigger at the prospect.\n\nShe suddenly squeaked in surprise as the room was bathed in a violet glow, Irillith's eyes shining with a bright inner light. As they all watched in shock, a purple-hued projection of the Maliri girl stepped clear of her body and embraced Faye, wrapping her in a warm hug.\n\n\"You didn't enter the cyber-realm by a port!\" Faye blurted out, her eyes wide. \"How are you doing that?!\"\n\nIrillith's astral cyber-projection smiled at the stunned girl and replied, \"Just a little trick I stumbled onto in Underworld.\" She turned to glance at John and smiled at him as she added, \"It seems like I haven't reached my full potential yet.\"\n\nDana's eyes narrowed as she looked down at Tashana, before reminding John, \"Don't forget! I was the one who first called dibs on shooting fireballs from my eyes!\"\n\nThe Maliri girl sat up now that she'd finished her hefty nightcap, her slender blue hands gliding over her rotund, cum-stuffed belly. \"Sorry, I missed that. What were you saying about fireballs?\" she asked curiously, giving Dana a warm smile.\n\n***\n\nJohn was the first to wake up the following morning, feeling the comfortable, familiar weight of two girls draped over him. He did his best to stretch without waking his bedmates as a girl's voice spoke to him insistently, piercing through his drowsiness. \n\n\"John, wake up please! I've got an urgent message for you!\" Faye said again, leaning over him.\n\nOpening his eyes, he blinked a couple of times then said, \"Go ahead, Faye. What is it?\"\n\n\"It's Senior Councillor Ularean, he says it's very urgent!\" she informed him, her eyes wide with alarm.\n\n\"Put him through in here,\" John said, nodding towards the comms interface projector at the foot of the bed.",
        "Untangling himself from Tashana and Calara, John managed to sit upright without waking either of them, just as the Ashanath Senior Councillor's grey face appeared.\n\n\"JohnBlake, your predictions have proven uncannily accurate,\" Ularean said, visibly quaking with fear as he spoke in his whispering voice.\n\n\"Tell me what's happened Ularean,\" John asked, his tone steady as he tried to calm the severely rattled Ashanath leader.\n\nUlarean was so shaken by recent events that he didn't even react when the girls started to wake up, sitting upright in bed and giving him a breathtaking view of their spectacular curves.\n\n\"The Drakkar are i-i-invading,\" he replied shakily, his voice modulator warbling with his fright.\n\n\"How many ships?\" Calara asked as she leaned forward, her eyes suddenly sharp and alert.\n\nHis huge black eyes turned to face her and he stammered, \"A-a-all of them!\"\n\nJohn raised his hands in a calming gesture. \"Give us precise figures so we know what we're dealing with.\"\n\n\"They number in the hundreds, JohnBlake,\" Ularean replied in his eerie voice, the strange warbling making him sound even more disconcerting. \"Our sensor nets started picking up their fleets thirty-four minutes ago and their numbers continue to climb. We believed it to be another raid at first, until so many of their vessels appeared.\"\n\nCalara glanced at John then asked, \"Are they heading towards Ashana, Ularean?\" \n\nHis black eyes blinked rapidly as he turned towards the Latina, and replied, \"Councillor Talari informed us of your analysis, Calara. The previous attacks were actually feints, just as you predicted they would turn out to be.\"\n\n\"And did you recall all your forces to Ashana as we asked you to?\" John inquired, his voice hopeful. \n\nThe deathly silence that followed dashed those hopes.\n\n\"There was some resistance from the Council. Panic at the thought of leaving our colonies undefended...\" Ularean faltered, the diminutive grey alien quaking with fear.\n\nJohn gritted his teeth in frustration but managed to bite down his sharp retort. Taking a deep breath, he said in an even tone, \"No excuses this time, Ularean. You need to gather every ship in the Ashanath Collective to defend your homeworld. We can't face the Drakkar alone this time, we're going to need all the help you can give us.\"\n\nReading his thoughts, Alyssa glanced at the ship's chronometer and spoke up, \"We'll be there in just under twelve hours.\"\n\n\"You won't get here in time,\" Ularean murmured in a barely audible whisper, his small mouth sagging open in an uncharacteristic display of horror.\n\n\"Send me all the sensor data you can,\" Calara requested, sounding authoritative and confident. \"I need to review all the information on the Drakkar forces you can gather and I want you to give me a full listing of all the fleet assets at your disposal. I'll develop a battle strategy to face them until we arrive.\"\n\n\"We will do as you request, Calara,\" Ularean replied, his eerie voice warbling all the while. His bulbous head turned so he was looking directly at John and he continued, \"Our secondary colonies are small and lightly populated. Ashana is home to nearly one billion of my people... The survival of the Ashanath Collective hangs in the balance.\"\n\n\"Send that data Ularean as quickly as you can. We'll find a way to help,\" John said to him, giving the terrified Senior Councillor an encouraging smile.\n\nWith that, the Ashanath leader closed the call, his image fading away as the projection dissipated.\n\nSitting back, John glanced around at the girls who were all awake now and sitting on the bed, looking at him with worried expressions on their lovely faces. \"Looks like we're heading into a hell of a shitstorm,\" he muttered with a grimace. \"The Invictus is going to get a real baptism of fire.\"\n\nAlyssa's face was set in a bleak mask as she said, \"We might only arrive in time to witness a massacre. If the Drakkar crossed the Ashanath border thirty minutes ago, they'll be hitting Ashana in ten hours. We'll be two hours late to the battle!\"\n\n\"Let me take a look at the data from the Ashanath and see what we're up against. I'll try and come up with some kind of stalling tactic,\" Calara said, her beautiful face tense with worry.\n\nJohn nodded to her approvingly, then turned to Dana and asked, \"Where are we with those Sonic Cannon upgrades for the internal defences? The Drakkar love boarding actions and I don't want us getting caught with our pants down this time.\"\n\nGlancing at Jade who nodded at her, Dana replied, \"We'll get right on it!\" She turned to speak to Faye next, adding, \"We'll be working round the clock to get them all built in time. Can you get the maintenance bots to fit them for me?\"\n\n\"Of course! I'll begin programming them for the tasks immediately!\" the purple sprite replied, nodding enthusiastically.\n\n\"If we do get boarded, I think we need everyone combat ready,\" Sakura said, looking pointedly at Tashana. \"It's a big ship and we'll need all hands on deck if we have to repel boarders.\"\n\nTuning into John's thoughts, Alyssa smiled at Tashana and said, \"We can work with you on squad tactics. Ten hours is a stretch, but we'll be able to cover the important stuff.\"\n\nJohn turned to look at the Maliri girl his expression thoughtful. \"I heard you're already a great shot with pistols. Are you any good with rifles? Our primary weapons are the Punisher railgun and the Justice laser rifle.\"\n\n\"I'm sorry John, I've no idea,\" she replied, violet eyes widening in alarm. \"Up until yesterday I didn't even know I could shoot a pistol!\"\n\nHe put his arm around her and said reassuringly, \"Don't worry, we'll go to the firing range in a minute and see how you handle a rifle. If you struggle with that, we've got Punisher pistols you can use in the meantime - they pack a hell of a punch.\"\n\n\"I've come up with a design for a Justice laser pistol, but I haven't had a chance to build a prototype yet,\" Dana said, a rueful frown on her face.\n\nJohn thought about it for a moment then shook his head. \"Leave that for another day. The Sonic Cannons will be more useful for the moment.\"\n\n\"Yep, no problem,\" Dana agreed, before looking at him wistfully. \"If only we'd had a bit more time. We might have been able to get my secret project ready; it's nearly done!\"\n\n\"Maybe next time, Sparks,\" John said, giving her a sympathetic smile. He turned to look at Irillith next, and asked, \"Are you working on anything?\"\n\n\"I can program the Training Dojo to run simulated squad battles if that's helpful?\" Irillith offered, meeting John's gaze.\n\n\"Actually, I have an interesting idea for something which could be very useful. I could really use your help,\" Rachel said, looking at Irillith and smiling at her hopefully.\n\nIrillith returned her smile. \"Of course, just tell me what you need and I'll make a start.\"\n\n\"Alright then, we've all got work to do, let's get to it,\" John said, looking around at the girls. \n\nThey all nodded, filled with drive and purpose, with everyone getting up to begin their preparations for war. \n\n***\n\nSenior Councillor Ularean slumped in his high-backed chair, staring off into the distance. He didn't notice the rest of the Ashanath High Council as they filed into the spherical chamber and took their seats around the dais. \n\n*The Council is in session, Ularean,* Talari announced telepathically, his eyes slowly closing like the rest of the High Council.\n\nUlarean felt that welcoming pull into the collective consciousness and surrendered to their inviting embrace. His mind surged into their Astral Conclave and was the ninth to merge into their thought-cluster. When his image appeared before them, he acknowledged the eight other members of the High Council with a mental bow.\n\n*Greetings to you, my friends,* he began, sending out a warm surge of emotion to each of his colleagues. \n\nThey reciprocated at once, returning his pleasant greeting, the Council closely bound by decades of friendship and respect. He was loathe to disturb that feeling of serenity amongst his peers, but there were urgent matters to attend to.\n\n*We must heed JohnBlake's advice and recall all vessels to Ashana,* Ularean declared, glancing around the Council and facing down the Councillors who had previously objected. *We face utter ruin if we do not.*\n\nThree Councillors inclined their heads, deferring to his will on the matter. \n\n*I have already prepared the appropriate orders pending this decision,* Talari informed his fellow Councillors. *Our fleet assets will leave all outlying systems and will return to our homeworld immediately.* \n\nUlarean nodded his acknowledgement to the Security Division Councillor, then paused for a moment, studying his colleagues. He spoke quietly, his voice throbbing with emotion, *I believe we must place our full trust in JohnBlake, rather than the pretence of an alliance we share with him now. If another Progenitor has moved against us, we need his protection more than ever.*\n\n*We risk enslavement...* High Councillor Bimarni said, trembling with fear.\n\nShaking his head, Talari replied, *We scanned the mind of his Matriarch. You know that is not his goal.* \n\n*I believed that to be some manner of deception at first, but now I am unsure,* Ularean said quietly. His haunted thoughts wove through their thought-cluster as he added, *Besides, what choice do we have? We must trust in him to face the darkness that approaches.*\n\n*The Legacy is now complete,* High Councillor Rathus intoned, his voice as grim as his astral projection's expression. \n\nThere was silence amongst the High Council, the atmosphere in the Astral Conclave tense with fear and apprehension.\n\nUlarean squared his narrow shoulders, and declared, *Our hand has been forced. If JohnBlake was correct, another Progenitor is already aware of its existence.* Steeling himself, he continued, *I vote to harness its power to defend Ashana, no matter the unwanted attention it might bring to us.*\n\n*I second the motion,* Talari murmured, his eyes growing wider.\n\nCouncillor Rathus glanced around at the rest of the High Council, his expression an impassive mask. *The vote must be unanimous. Our ancestors demanded full consensus.*\n\nOne by one the rest of the Council nodded their agreement.\n\n*It is done,* Rathus said. *We will unleash the Legacy.*\n\n***\n\n\"Okay, gently squeeze the trigger,\" John said, watching Tashana as she aimed down the firing range with an XR75 rifle.\n\nTashana pulled the trigger then looked startled at the kick from the rifle, her single shot sailing over the target dummy's head and hitting the wall at the end of the range. She blushed with embarrassment, and turning to look at John and Sakura she said, \"Sorry, I wasn't ready for the recoil!\"\n\nHe gave her an encouraging smile, and gestured down the range again. \"That's quite alright. Squeeze off a few more rounds and take your time.\"\n\nThe Maliri girl took a deep breath then did as he asked, firing a score of shots at the target dummy, pausing to aim and control her breathing between each one. The polycarbonate mannequin vibrated with each impact, her well-aimed shots all striking the target this time. When she paused, John glanced at the holo representation of her shots before pressing the button on the wall-mounted panel, bringing the dummy closer for their inspection.\n\n\"Well, you landed all your shots on target,\" Sakura said encouragingly, while reviewing the haphazard array of bullet holes stitched across the dummy.\n\nJohn studied the wildly scattered impact sites, then strode over to the weapon rack and picked up a couple of ten-millimetre pistols along with a handful of magazines. He walked back to the firing lane, and placed them on the bench as he said, \"I understand you're more comfortable with these. Can you show me what you can do with the pistols?\"\n\nTashana looked downhearted as she placed the XR75 rifle next to the brace of pistols. \"My shooting was that bad?\"\n\nShaking his head, he reached out to rub her shoulder and replied, \"Actually, for your first time firing a rifle from a standing position you did very well. With a week or two of intensive training, I've no doubt you'll be as good a shot as the rest of the girls.\" He gave her a grim smile as he added, \"Unfortunately, we've only got half a day to get you combat ready.\"\n\n\"Okay, I understand,\" she replied, picking up the handguns and deftly loading fresh magazines into each one.\n\nJohn watched her dexterous handling of both pistols, her actions precise and well-coordinate despite the awkwardness of reloading with a weapon in each hand. He raised an eyebrow at Sakura, receiving a bemused smile and almost imperceptible shrug in return. Replacing the target dummy with a fresh one, he crossed his arms as he watched and waited for Tashana to ready herself to shoot. \n\nTashana clicked the fire selector switches to burst fire mode, then raising the twin pistols, she aimed downrange. The pistols chattered in her hands, a stream of ten-millimetre slugs pattering into the target dummy and sending polycarbonate splinters to the floor like a shower of confetti. She emptied both ten-millimetre clips then swiftly reloaded, before blazing away again in a blistering hail of bullets. A couple of clicks signified the emptying of her magazines, and she unloaded each pistol before putting the safeties back on and returning them to the firing bench.\n\nWhen he pressed the button to bring the target dummy closer, John shook his head in amazement as he got a clear look at her impromptu piece of bullet-art. Tashana had carved an uncannily accurate ten-millimetre engraving of a Drakkar's face on the target, complete with big eyes, downturned jaw, and distinctive hammer-shaped head.\n\nHe chuckled as he exchanged a grin with Sakura then exclaimed, \"Damn, honey! I can't even shoot like that!\"\n\nTashana smiled at him shyly, her heart skipping a beat at his praise and asked, \"I guess I'll be using pistols then?\" She glanced down at the two handguns on the table, her smile fading as she added, \"I just hope the Drakkar don't have heavy armour.\"\n\nShaking his head, John walked over to the weapon rack. \"You'll be using something with a little more stopping power.\"\n\nHe picked up a Punisher pistol and a magazine of crystal tipped ammo, then returned to the Maliri girl and handed over the weapon. She eagerly accepted it, turning it over in her hands as she stared at the heavy bore and brutal appearance of the pistol with wide-eyes.\n\n\"What does this switch do?\" she asked, pointing to the second selector on the sidearm.\n\n\"High-power and low-power,\" Sakura replied helpfully. \n\nJohn smiled at her and said, \"Stick to low power for now. We need to prep the firing range with armour plating before you can shoot on high-power mode.\"\n\nTashana nodded slowly, making the correct selection and handling the pistol with care as she slotted in the magazine. When John replaced the target dummy, she took careful aim and squeezed off a shot, the handgun whispering, \"VrmPkaow.\"\n\nShe lowered the pistol immediately, gaping at it in shock before looking down the range at the fist shaped hole she'd just blasted through the centre of the dummy. \n\n\"Go ahead, empty the clip,\" John urged her, an indulgent grin on his face.\n\nPolycarbonate chunks exploded out the back of the target dummy as she fired round after round of near silent railgun slugs downrange. There were only ten rounds in the mag, but they were more than enough to rip the dummy's torso to pieces. The perforated chest split down the middle then fell to the ground in two separate pieces when she ceased firing. \n\n\"This thing is unbelievable!\" she marvelled, her angular eyes gazing at the Punisher pistol in awe.\n\nJohn frowned as he cautioned her, \"Be very careful firing that inside a spaceship, especially if you're using High-power mode. It's strong enough to breach the hull with a missed shot.\"\n\n\"I will, I promise,\" she replied, staring at him with eyes as big as saucers.\n\n*Sorry to interrupt, but Calara needs you in the Briefing Room! She's been reviewing the data the Ashanath sent. She says it's urgent,* Alyssa informed him in a rush.\n\n*Alright, I'm on my way,* John replied, before turning to stroke Sakura's back. \"I need to speak to Calara. Please show Tashana how to get geared up in Paragon Armour then start going through some basic squad tactics.\"\n\nThe Asian girl grinned back at him. \"Of course! I'll also explain how Alyssa organises our fire team.\"\n\nHe smiled at her in gratitude, then said to Tashana, \"Sorry, duty calls. I'll rejoin you when I can.\"\n\n\"Don't worry about me, I'm in good hands,\" she replied, sharing a smile with her raven-haired firing instructor.\n\nJohn waved them goodbye, then left the Firing Range and jogged down the corridor to the grav-tube. It didn't take long to float up to the Command Deck and after greeting Faye with a wave, he strode purposefully down the ramp and into the Briefing Room. Calara was standing beside the long table, staring at a holographic Sector Map with a look of consternation on her face.\n\n\"What's wrong?\" John asked, moving to the Latina's side immediately and putting his arm around her.\n\nShe glanced up at him and replied, \"Ularean might have been exaggerating when he said all the Drakkar had invaded, but probably not by much! Just look at the size of their fleet!\"\n\nHe looked at the Sector Map, watching as a vast throng of Drakkar ships swarmed across the Ashanath border. There were too many to count at a glance, but he could only guess that there were at least several hundred warships in that formidable horde. Even more alarming was the number of capital ships numbered amongst them. Sharing her look of alarm, he asked, \"What about the Ashanath fleet? What have they got?\"\n\n\"Not nearly enough,\" she replied, her expression deeply troubled. Pressing buttons on the remote to change images, the projector displayed the list of Ashanath fleet assets at their disposal. They appeared to be outnumbered nearly two to one.\n\nCalara was waiting for the look of alarm to reach his face, and she said, \"It gets worse than that. We already know Drakkar vessels outgun their Ashanath counterparts for each ship class. It looks like they have another big advantage too.\" Clicking a few more buttons, she zoomed in on some footage taken from one of the Grey's sensor probes.\n\n\"Black armour,\" John muttered, staring at the scores of Drakkar vessels that had been upgraded with Onyxium armour plating.\n\n\"I'll try and slow them down long enough for us to get there,\" she said, before hesitating for a moment. He could tell by the tremor in her voice how worried she was as she continued, \"Even if we make it in time, I don't think we'll be enough to tip the balance.\"\n\nHe pulled her into his arms, holding her tight for a moment as he pondered their options. As much as he wanted to help the Ashanath, he refused to throw the girls' lives away in some noble but futile last stand. They were involved in a high stakes game and he had no intention of playing his hand without levelling the odds first. \n\n\"I'm not going to put all of you in danger if we've got no chance of winning,\" he said, his expression grave. \"Is there anything we can do to thin out the Drakkar before they hit Ashana?\"\n\nCalara slowly nodded then replied, \"There's something we can try, but there's a price. It'll mean sacrifices from the Ashanath.\" She quickly outlined her plan, John's expression darkening as he listened.\n\n\"We've no other choice?\" he asked, his voice tense.\n\nSpreading her hands helplessly, Calara replied, \"If we'd had time to prepare I'd have many more options, but on this short timeframe? No, I think this our only choice.\"\n\nJohn nodded and said in a solemn voice, \"I'll speak to Ularean.\"\n\n***\n\nThe vast Drakkar dreadnought known as \"The Defiler\" barrelled its way through hyper-warp, a sprawling horde of ships in formation around it. The Defiler's armoured hull was plated a sinister black, with dark-purple ribs along its length reinforcing and strengthening the superstructure. Amidst the serrated blades and evil-looking spikes that covered the hull were bristling gun decks, broad muzzled barrels hinting at the terrible firepower those weapons could unleash.",
        "Inside the vessel, Grand Overlord Vekrok sat atop his obsidian throne, staring out at the Ashanath territory map spread out before him. His fingers drummed on the skull lashed to his armrest, a huge black spike driven through its temple where it adorned the throne. The skull's owner, Itigrut, always was a smart one and Vekrok felt more intelligent when his burly fingers tapped out an insistent rhythm on his favourite trophy. Unfortunately for the previous Grand Overlord, Itigrut's allies betrayed him, leaving him alone to face Vekrok's eager challenge. The skull was a potent reminder of the power of a terrifying reputation in helping you take what you wanted.\n\nServos and actuators whined as he stood, his hulking bestial frame towering over his seven foot tall minions, who wisely backed out of his way as he approached the command table. Vekrok's black bulging eyes swivelled independently to examine every corner of their route towards Ashana, and he rumbled, \"No sign of the snacks in their little discs yet?\"\n\nShaking his lime-green head, his second-in-command Grukig swiftly replied, \"They have all fled in terror, Mighty One.\" His broad jaw snapped in excitement, revealing rows of long, jagged fangs as he added eagerly, \"With a fleet of this size and strength we could crush the Terrans before us as well!\"\n\n\"We'll gorge ourselves on Grey flesh for weeks when we conquer their homeworld,\" Vekrok muttered, his voice a deep bass echoing in his massive chest. He gave Grukig a fearsome toothy grin as he continued, \"Then we'll take our time with the Terran Federation. We'll feast on their males, and use their females to spawn our pods!\"\n\nSaliva dripped from Grukig's maw at the thought, green drool pattering over his onyx power armour and partially obscuring the strip of red lights that ringed his armoured neck. He glanced up at the Grand Overlord in admiration, and grunted, \"I still can't believe you managed to unite the clans. Such a thing has not happened since the days of glory.\"\n\n\"Such a time is upon us again,\" Vekrok growled, his four fists clenching at the thrilling thought. \n\nIt had been months ago that the Dark One had made his presence known and they had sealed their bargain. The Dark One had announced that he'd eliminated Overlord Okug as a potential challenger, removing one of the most dangerous thorns in Vekrok's side. Okug had been popular, well connected, and a strong warrior, which meant a challenge from him was risky on multiple levels. \n\nSince then, the Dark One's guidance had led Vekrok to a string of glorious victories, followed by rampant feasting for his growing band of minions. Uniting the clans had required the usual bribes and threats but the early triumphs and the promise to subjugate the Ashanath's homeworld had been decisive. The Dark one had supplied them with this wondrous new metal to plate their ships, even gifting Vekrok and his personal retinue with battle armour and weapons.\n\nVekrok's fanged maw spread into a vicious grin as he glanced down at the blackened plating protecting his hide. Truly he felt invincible now that he was armoured in such a fashion. Safe in the knowledge that there was no mightier being in the galaxy - except for the Dark One of course - he tipped his head back and roared in triumph.\n\n***\n\nJohn walked along the corridor on Deck Seven, a troubled frown on his face. \n\nEdraele's voice was sympathetic as she advised him, *I've been trying to think of alternatives, but I'm certain Calara's suggestion offers the Ashanath the greatest chance of survival.* \n\nHis answering reply was heavy with guilt as he said, *It's a grim reality of command, but asking good men to die was always the thing I struggled with the most.* He sighed as he added, *I just hope I never get used to it.*\n\n*I know you would never allow yourself to,* Edraele told him with absolute certainty in her voice.\n\nHe walked into the Engineering Bay and did his best to put his doubts behind him, knowing they still had vitally important work ahead of them.\n\n*Hey handsome!* Alyssa thought to him, already looking his way as he entered the room. She waved when they made eye contact, smiling sympathetically after having heard his conversation with Edraele. She was on the far side of the Workshop with a swirling white globe of crystal Alyssium floated in the air in front of her, streams of liquid metal pouring into the six long weapon barrels that slowly began to take shape. \n\nHe returned her wave, then glanced around the room in search of his Chief Engineer. He paused to look at Rachel and Irillith, who were standing on the Engineering Podium poring over what appeared to be autopsy results of a Drakkar. The holographic image of the four-armed alien neatly illustrated their unique physiology, with double sets of vital organs highlighted in its blocky torso. \n\n*She's over here,* Alyssa called out to him, pointing behind one of the Mass Fabricators.\n\nJohn strode over to join her, stepping around the stacks of components required to build the Sonic Cannons. Jade was kneeling next to a strange looking weapon casing with a multi-tool in her hands, a frown of concentration on her face as she slotted a peculiar eight-sided device into the casing. \n\n\"That looks complicated,\" he said with a smile, stroking her head as he watched her nimble green hands expertly attach the device. \"What is it?\"\n\nThe Nymph turned to look up at him and nuzzled against his hand before replying, \"Honestly, I have no idea. I'm just following Dana's schematics, see?\" She pulled out the holo-reader beside her which showed a clear blueprint of the Sonic Cannon, with this particular phase of its construction highlighted in green.\n\n\"It's the sonic resonance chamber!\" Dana announced, before poking her head out above the Mass Fabricator. \"It generates the sound waves that fuck up a target.\"\n\nJohn leaned down to give Jade a kiss goodbye, sharing a smile with her before leaving her to continue working on the Sonic Cannon. He walked around the blocky fabricator and said to the redhead, \"Are you working on something important right now?\"\n\nShe shook her head and pressed a green button on the machine, stepping away from it as it rumbled to life. \"Nope, I just finished setting up the last run of components. Now I've just got to help Jade build a shitload of Sonic Cannons. Why do you ask?\"\n\n\"We're going to need more guns,\" he said, gazing into her eyes.\n\nShe shrugged and nodded as she replied, \"We're making good time; we can build you some more Sonic Cannons, that's not a problem.\"\n\nShaking his head, he said, \"No, I mean bigger guns than that - a lot bigger. We need to get your secret project finished.\"\n\nDana looked overjoyed and she gasped, \"Really? You're not fucking with me?!\"\n\n\"All our resources are at your full disposal. Tell me what you need to get it done and we'll make it happen,\" he announced firmly. \"We've got just over eleven hours to get it ready for combat.\"\n\nHer beaming smile faded as the reality of what he was asking set in and she faltered, \"I don't know... there's still so much to do. It's still in bits in the Launch Bay!\"\n\nPulling her into his arms, he stroked her back as he said, \"Shh, just stay calm and think it through. Alyssa and I can do the heavy lifting to assemble it, and we'll armour plate it too. Is there anyone else you need?\"\n\n\"Definitely Rachel to finish the electronics in the cockpit and ideally Jade to assist with hooking up the weapons, power core and gyroscope. That would free me up to work on the calibration and fine tuning,\" she replied, her mind whirring. She looked worried as she added, \"It's going to be very tight but I could probably manage without Jade's help. She could continue working on the Sonic Cannons, but she's not going to be able to get all of them finished in time on her own.\"\n\nTurning around, John looked around for a camera and called out, \"Faye? Are you there?\"\n\nShe popped into existence beside him in a purple flash. \"Hey, John! How can I help?\"\n\nHe smiled at her and replied, \"We won't be able to get all the Sonic Cannons built in time. Can you speak to Sakura and ask her to come up with a prioritised list of defensive locations? Then just follow that list as you install each of the weapons.\"\n\nFaye nodded eagerly, then hesitated before offering with a bright smile, \"If you prefer, I could build the Sonic Cannons for you? I've already upgraded my boys with greatly enhanced fine-motor control and they should be able to handle the assembly tasks without any difficulty. I'll just program them to follow the instructions Dana provided for Jade and assign an avatar to each of them to check their work.\"\n\n\"Does that work for you?\" John asked Dana with a grin.\n\n\"Fuck yeah!\" she crowed, giving Faye a bright grin. \"You're awesome, Faye! Thank you!\"\n\nThe purple sprite looked overjoyed to be able to help. \"It's my pleasure!\" she gasped jubilantly.\n\nRachel walked over to join them and said, \"Alyssa tells me you need my help?\"\n\n\"We're all going to help Sparks get her new toy up and running. We're going to need as much firepower as we can muster,\" John explained. Glancing towards the Engineering Podium where Irillith's hands were a blur over her console, he added, \"Do you need more time with Irillith for whatever you were working on?\"\n\nShaking her head, Rachel replied, \"I already outlined what I had in mind and Irillith assures me she can get it finished on her own.\" Smiling at her auburn-haired lover, she continued, \"She doesn't need any more help from me, so I'm all yours!\"\n\nThe Maliri girl overheard their conversation with her sharp hearing and without taking her eyes from the console, she turned to give them a thumbs-up before returning to work.\n\nAlyssa smiled at the happy group, and said, \"I'll finish off the last of these weapon barrels, then join you down in the Launch Bay.\" \n\n***\n\nTashana stepped into the armoured Paragon boots, then slipped her hands into the armoured gauntlets. \"Like this?\" she asked warily, glancing up at the helmet lined up over her head.\n\nSakura was already fully armoured and she nodded while giving her a reassuring smile. \"Just feel for the thumb button in the right gauntlet, you should find it easily enough.\"\n\nFeeling around with her thumb, Tashana felt the bevelled surface of the button and pressed it lightly. She let out a startled gasp as robotic arms moved down to encase her body in glossy-white armour plating, before lowering the helmet down onto her head. \n\n\"Just breathe,\" Sakura urged her, reaching out to place a comforting hand on Tashana's shoulder. \"You're perfectly safe, there's nothing to worry about.\"\n\nLooking at her through the Paragon helmet's clear-crystal faceplate, Tashana did as she asked, taking steadying breaths as the tension easing from her shoulders. \"Sorry I panicked,\" she apologised, giving Sakura a shaky smile.\n\n\"That's okay, they do take a little getting used to. They're designed to be a snug fit which makes them feel like a second skin in combat,\" she said, gazing into Tashana's eyes to see how she was coping. \"If you feel happier now, press your left thumb to the palm of your hand and the armour will seal itself.\"\n\nNodding, Tashana did as she was asked, then jumped as she heard the rippling series of clicks as the tiny sets of teeth locked the armour into position. She walked forward and tried moving around experimentally, twisting her arms and torso before squatting and standing a couple of times. Turning to grin at the Asian girl, she exclaimed, \"You're right! It actually feels really comfortable!\"\n\n\"There you go,\" Sakura said with a smile, before walking over to one of the armour equipping frames to remove her Paragon suit.\n\n\"Hang on!\" Tashana called out, catching up to Sakura and peering at the emblem on her armoured pauldron. \"What's that black sigil on your shoulder?\"\n\nSakura grinned at her and replied, \"The Terrans call John the 'Lion of the Federation'. A Lion is a large and noble Terran animal, and a fierce predator. This symbol shows I'm one of his lionesses and it's black to match my hair colour.\"\n\nRaising her arm to take a look, Tashana smiled as she said, \"Hey, I've got a white one!\"\n\n\"The DNA reader has already been programmed for Irillith. It's probably getting you two mixed up,\" Sakura replied after thinking about it for a second. She smiled at the Maliri girl, and added, \"I don't blame it though, I can't tell you apart either! Well, physically at least, the two of you have very different personalities.\" Nudging her with an elbow, she finished, \"You're both equally lovely though.\"\n\n\"That's very kind of you to say,\" Tashana said, smiling at the raven-haired girl before walking back to her own armour equipping frame to take off her suit.\n\nSakura pulled her back and said, \"Stay in the armour for a moment, I'll explain how the GUI works.\" She returned the Maliri girl's smile, then asked curiously, \"What's it like having a twin sister by the way? Doesn't it feel weird knowing you have an exact double wandering around?\"\n\nTashana laughed at that and shook her head as she replied, \"We've always been each other's twin, so I don't know what it would be like without Irillith. We had lots of fun tricking people by dressing the same and swapping places when we were little.\" She faltered for a moment, then continued, \"Although, it was horrible when we grew apart. I'll never be able to thank John enough for bringing us back together.\"\n\nSakura nodded soberly and said, \"You've probably seen the video of me as Shinatobe and what I was like before John healed me. There's nothing I wouldn't do for that man; he literally gave me my life back.\"\n\n\"Let's take the armour off for the moment, it's time for a hug,\" Tashana said with a smile. \n\nSakura laughed and they both removed their armour to the sound of a duplicate series of rippling clicks. After stepping out of the armour frame the two women embraced, both enjoying the close physical contact. When they pulled apart, Sakura looked at Tashana curiously for a moment and was about to ask her a question before stopping at the last second.\n\n\"What is it?\" Tashana asked, seeing the indecision on the Asian girl's face.\n\n*Go ahead, you can ask her. Just be careful though, okay?* Alyssa murmured, her voice brushing through Sakura's mind.\n\nSakura raised her hand to gently stroke the side of Tashana's face and said, \"I know what happened to you in the Unclaimed Wastes and I know you asked John to wipe away those memories. I just wondered, what's it like?\" \n\nTashana's eyes widened in surprise, then she paused to think about the question before answering truthfully, \"It just feels like I've been asleep for those thirteen years. I've got memories of what happened back on Valaden, then memories of being here with all of you on the Invictus, but in-between the two is... nothing.\" She frowned for a moment then added, \"Although I sometimes get these weird feelings, like I'm afraid of things without knowing why.\"\n\n\"Thank you, that's good to know,\" Sakura said gratefully, a haunted expression flickering across her face as she looked away.\n\nStudying the pensive young woman before her, Tashana pulled her in for another hug and said gently, \"You look like you've got something on your mind. What's the matter?\"\n\n\"Something IN my mind, rather than on it,\" Sakura replied, leaning into their embrace. She let out a ragged sigh before she continued, \"I keep reliving memories from when I was a cyborg. Shinatobe did horrible things to hundreds of people and I can remember every last gory detail.\"\n\n\"Ah, I see,\" Tashana murmured, rubbing the other girl's back soothingly. \"So you're wondering if you should ask John to do the same for you?\"\n\n\"Not yet!\" Sakura blurted out, pulling away from the Maliri girl. Her expression grew cold as she added in a chilling voice, \"I need to make Mikaboshi pay for all those lives he took. For destroying my parents' lives and mine too!\"\n\nTashana reached out to stroke Sakura's cheek and smiled as she said, \"You only told me a few moments ago that John gave you your life back. Perhaps it might be time to let go of everything that happened in the past?\"\n\nSakura took a deep breath then replied quietly, \"I appreciate what you're trying to do, but I can't forgive Mikaboshi for what he did to my family. When I've had my revenge and Mikaboshi lies dead, then I can let these memories go, but not until then. The souls of all the people he made me kill need their vengeance to rest in peace.\"\n\n\"I understand,\" Tashana replied, her tone serious as she gazed into the other girl's brown eyes. She gave her an apologetic smile, and added, \"I'm very sorry I upset you. I shouldn't have pried, but you just seemed so sad.\"\n\n\"It's alright, I know you meant well. Like I said before, you're a lovely girl,\" Sakura said with a fond smile. She stepped away and changing the subject, she added, \"Let's get back to your training. We need to get you combat ready.\"\n\nTashana nodded, stepping into the armour equipping frame once again. She gazed into Sakura's eyes and smiled at her as the robotic arms lowered pieces of armour plating into place, not even flinching this time as she was encased in her suit of Paragon armour.\n\n***\n\nJohn and Alyssa had spent hours connecting the pieces of the four massive limbs together, making sure that all the pieces were securely attached before Dana had given each one the final seal of approval. He hefted the massive fifteen-metre leg, holding it steady as Alyssa guided it carefully into place. The crystal beam slid smoothly into position at the hip joint as cuffs rotated with the hum of hydraulics, locking the huge leg into the torso.\n\n\"Okay! We're good!\" Dana called out to them, turning away from the console on the maintenance gantry that overlooked the assembly area. She grinned at John and added, \"You can put it down now!\"\n\nHe nodded and gently lowered the limb, the enormous metal titan currently lying face down on the ground with both legs attached to its body. \"I'll grab the left arm. Same drill as before?\" he asked Alyssa, jogging over to pick up the next multi-ton appendage. Corded crystal fibres formed the familiar shape of an arm, but on a vastly larger scale.\n\n\"Sure, that works for me,\" she agreed, closing her eyes and swathing herself in a soft white nimbus of light. Alyssa gently lifted off the ground before levitating over to the mech's huge chest and landing gracefully atop it. She turned and squatted down above the gaping shoulder joint, smiling at John as she beckoned him forward.\n\nShe helped line up the crystal beam with the socket by applying gentle telekinetic pressure to make sure it was perfectly aligned. As soon as it was in position, John slid it home with a heavy sounding \"thunk\" then held still as Dana locked the limb into the shoulder joint. They repeated the same process with the right arm and slowly but surely the mechanical colossus took shape. The next stage was to connect the orbital insertion pack on the rear of the gigantic torso, the broad engines designed to slow its descent from an orbital drop. \n\n\"How's this thing going to handle in space?\" John asked dubiously, glancing up at Dana on the maintenance gantry. He heard the whir of servos and the whine of hydraulics as the long crystal bolts on the huge rocket pack were locked into place.\n\n\"It'll be much slower than the Raptor; more like the speed of a bomber,\" Dana replied distractedly, her attention on the glowing energy bars floating above her console.\n\nJohn frowned as he asked, \"Won't that make it a sitting duck out there?\"\n\nSmiling in satisfaction as the energy fluctuation readings matched her predictions, she turned to focus on him and replied, \"It's got retro-thrusters built into all of its limbs and its quite a bit smaller and lighter than the Raptor. It might not be as fast, but it'll be a lot more manoeuvrable - a bit like a huge version of the Paragon suits in flight mode.\" She grinned at him as she added, \"It might seem enormous to us, but it's not much bigger than a heavy fighter. Bad guys are going to struggle to hit it unless they're using point-defence weapons.\"",
        "\"Sounds good,\" he agreed, walking over to the first of the ten-metre long weapons. \"This one's next, right?\"\n\n\"Yep, attach it to the lower right mount, please,\" Dana replied, her eyes sparkling with excitement. \n\nJohn lifted the triple-barrelled laser weapon with ease, then carried it towards the prone mech where Alyssa was waiting to line it up with the rear over-shoulder mounts. It didn't take long for them to lock it into place and he walked back to retrieve its counterpart for the left mount, which they quickly attached to the body. They did the same for the upper weapons, making sure the full complement of quad Photon Lasers were securely attached to the mechs weapon deployment system.\n\nHe waited patiently until Alyssa was done, then turned to look at Dana and asked, \"Can you tell me a bit more about these lasers?\"\n\nThe redhead was completely absorbed by the power readings however, a frown on her face as her hands danced over the console. Alyssa whistled to him to draw his attention, then jumped off the Mech's torso into his waiting arms. He put her down on her feet and she grinned at him then leaned forward to give him an exuberant kiss. \n\n\"Sparks is a bit preoccupied at the moment, but I can tell you the basics,\" Alyssa said, enjoying the feel of his arms around her. When he nodded, she continued thoughtfully, \"They're an improvement over the original Maliri Beam Laser design but they fire in three short pulses. She hasn't come up with a name for them yet, but they basically hit twice as hard as the Invictus' Beam Lasers.\"\n\nJohn glanced at the four weapon mounts in shock and exclaimed, \"So that thing's packing eight Beam Lasers?!\"\n\nShe nodded and grinned at him as she said, \"Yep!\" Turning to point across the hangar at an enormous multi-barrelled cannon she added, \"Don't forget that monster as well.\"\n\nIgnoring the other weapon for the moment, John frowned and said, \"If we can fit double the firepower into the same space, why don't we just upgrade all the Invictus' Beam Lasers?\"\n\nDana leaned against the Balcony on the maintenance gantry and grinned at them as she interjected, \"Because those Pulsed Photon Lasers are as hungry for power as the Maliri twins are for your cum!\"\n\nJohn smiled at that, then raised an eyebrow. \"Is that what you're calling them then?\"\n\nShe grinned at him and replied, \"Yeah! Actually, just Photon Lasers for short!\"\n\nHe nodded thoughtfully, but looking confused, he asked, \"I thought the Invictus had loads of spare power? We could upgrade a few Beam Lasers to Photon Lasers, surely?\"\n\nShe frowned as she replied, \"These four guns have basically got a dedicated power core between them. I could upgrade a handful on the Invictus, but I discussed it with Calara and she said firing a mixed configuration of beams wouldn't really work very well. Unfortunately, we don't have enough spare power to upgrade the entire complement of Beam Lasers, as these new guns draw power like four of the old ones.\"\n\n\"No problem, I was just curious,\" John said with a shrug. He glanced over at the cockpit and called out, \"How are you girls getting on in there? Nearly done?\"\n\nRachel stood up and stretched with a groan before replying, \"I'll be finished in about an hour.\" She glanced back into the cockpit and added, \"How about you, Jade?\"\n\nThe Nymph stood up as well, taking a moment to stretch before waving at them cheerfully. \"I'm actually nearly done. I was just about to move on to checking the arm-mounted rotary cannon.\"\n\n\"We should probably get started on the armour plating then,\" Alyssa suggested to John with a heavy sigh. \n\nLooking around at the tired girls, he shook his head and replied, \"We've been hard at it for five hours. You girls look like you need a break for a few minutes.\"\n\nAlyssa grinned at him, a sudden gleam in her eyes as she reached down to take hold of his belt. \"I couldn't agree more! A quick break and a snack would perk us right up!\"\n\nJohn laughed as she dropped to her knees, soon eagerly accompanied by the other girls who jogged over to join them. As they all went to work on him his laughter quickly turned into groans of pleasure.\n\n***\n\nFrowning at the sector map suspiciously, Grand Overlord Vekrok's fingers tapped out a staccato rhythm on his predecessor's skull. They'd been travelling deeper into Ashanath territory for hours now, but they hadn't seen a single ship on their approach to Ashana. He knew that the Greys were cowardly little runts, but to not even bother to attempt even a token defence was craven even by their standards.\n\n\"Could they have just fled, Grand Overlord?\" Grukig asked, his jaw slowly opening and closing in confusion as he gazed at the map.\n\nVekrok shrugged his four shoulders and grunted, \"It wouldn't surprise me, but they haven't got enough time to evacuate their tasty civilians from Ashana. If their fleet has fled, we'll be able to sail in there and start our feast unopposed!\"\n\n\"Sir! We're picking up a lone Grey cruiser!\" his navigator announced, his putrid green jaw snapping with anticipation. \"It's heading straight for us!\"\n\n\"One cruiser?!\" Vekrok guffawed, tilting his head back and snorting with contempt. \"That ship must contain the only warriors with a spine in this pitiful little empire!\"\n\nGrukig cackled too, joining his Commander in his derisive laughter. Their laughter was abruptly cut short as the dreadnought juddered violently, klaxons wailing as Drakkar crew were knocked off their feet with the bone shaking vibrations. Grukig crashed into the command table before being knocked sprawling, his heavy armour making a loud clang as he hit the deck.\n\n\"What in the nine hells was that?!\" Vekrok bellowed as he clung to his throne, his mottled green skin turning puce with rage. \n\n\"A gravity well, Sir!\" the navigator quailed, staring in shock at the huge source of gravity that had appeared before them. He turned terrified eyes towards Vekrok, just in time to see a huge armoured fist crunch into his face, snapping his rubbery hammer-shaped head backwards with a sickening crunch. \n\nVekrok shook the viscous blue blood off his fist, while snarling in fury, \"Stupid, useless little shit!\" He towered over the navigator's broken body and roared, \"How could you crash us right into a system, you miserable cretin?!\"\n\n\"The gravity well, it's coming from the Grey cruiser!\" his engineer exclaimed, pointing at the Ashanath vessel.\n\nStomping back to the Command Table, Vekrok slapped a ham-like fist down on the comms interface, causing a spray of sparks from the table. \"KILL THAT FUCKING SHIP!\" he bellowed at his fleet.\n\nA score of Drakkar cruisers powered up their huge banks of engines and surged forward in a rush, all eager to slaughter this impudent Grey vessel that had unceremoniously dumped them from hyper-warp. The silver-coloured disc spun on the spot, retro-thrusters firing along its hull as it rotated around before accelerating away from the pursuing ships. The Drakkar ships were faster, but they still had to close the distance and the Ashanath led them on a merry dance. \n\n\"Jump into hyper-warp again!\" Vekrok growled at his navigator, before remembering he'd just battered him to death. His eyes narrowed in anger but the navigator's replacement rushed onto the Bridge on his stumpy legs before the Grand Overlord was forced to kill anyone else.\n\nThe engineer stared at the map, his bulging black eyes blinking rapidly. \"We're still caught in the gravity well,\" he declared, pointing at the big red sphere that covered half the fleet, centred on the fleeing Ashanath ship.\n\n***\n\n*Leader Camiri, our superstructure is failing! The gravimetric forces are tearing us apart!* Engineer Zinareus warned the cruiser's commander, his console a riot of red.\n\n*I know my friend, but we have played our part,* Camiri replied, a sense of pride filling her telepathic reply. She turned to face her engineer and navigator, her voice thick with emotion as she added, *With our sacrifice we can buy time for our people; hundreds-of-millions of lives are at stake.*\n\nPurple beams began raining down on the cruiser from the pursuing Drakkar, causing their shields to buckle under the onslaught. A tremendous explosion rocked the silvery disc, knocking the Ashanath crew to the ground.\n\n*It was an honour to serve with y-* Engineer Zinareus started to say, knowing their doom was at hand. \n\nHe never got to finish his sentence. \n\nA virulent purple beam slashed through their cruiser's armour and sliced a deep furrow through the hull. The Bridge was cut in half and the valiant Ashanath crew were sucked out into space in an explosive decompression.\n\n***\n\nFaye nodded with satisfaction as maintenance bot Beta finished assembly of the last of the Sonic Cannons. \"Good boy!\" she exclaimed in delight, patting him on his shiny armoured chest housing. \"Now take that to the security turret next to the aft grav-tube on Deck Five!\"\n\nThe robot grasped the two-metre-long weapon in its six-fingered hands then levitated silently towards the door. The rest of her team of four robots had already begun installation of the new defensive weaponry, with over a dozen installed already. Faye had started with the two turrets by the original aft airlock, then replaced the Gatling Lasers by the fore airlocks. After that, she'd been going deck by deck, removing the old weapons and installing new Sonic Cannons to each of the pop-out turrets.\n\nThree of her avatars were already personally overseeing the work of each robot and she allocated a fourth to Deck Five, waiting by the grav-tube for the smiling maintenance bot to arrive. With her construction tasks completed in the Engineering Bay, she reappeared in the Launch Bay then turned to look at John, waiting patiently for him to finish his conversation before interrupting.\n\n\"My plan is to link autopsy results to the targeting HUD,\" Rachel explained, turning to look at John over her shoulder. \"For example: If I've identified vulnerable areas in a creature - like the locations of a Drakkar's two hearts - they will appear highlighted in an overlay on any Drakkar you look at.\"\n\n\"That's an excellent idea!\" John replied, genuinely impressed. He was controlling a spinning white orb of Crystal Alyssium with one hand, while drawing out a steady stream of it with another, forming an armoured legplate for Dana's mech. Smiling at Rachel, he added, \"That'll be a big help, especially for the new girls who haven't fought the Drakkar before.\"\n\n\"Hello Faye,\" Jade greeted the purple sprite, her sharp eyes picking up the rapid motion of the digital girl's translucent wings in her peripheral vision. She turned to look at her properly and gave her a friendly wave with the multi-tool still clutched in her hand.\n\n\"Sorry, Faye, I didn't see you there,\" John said, turning to smile at the petite sprite. \"Everything going okay?\"\n\nShe returned Jade's wave then nodded enthusiastically to him as she replied, \"There's no need to apologise! I was going to say hello, but I didn't want to interrupt you or Rachel. I just wanted to inform you that the Sonic Cannons are now completed and the boys are half-way through their installation.\"\n\n\"Wow! You guys kicked ass!\" Dana blurted out, looking up from her console to give Faye a wild grin. \"Between you, your four bots, and Jade, I'm going to be out of a job!\"\n\n\"Don't worry, Dana!\" Faye said earnestly. \"No one could hope to replace you and your incredible designs!\"\n\nJohn smiled at her and whispered quietly, \"It's okay, honey. She knows that, she was just joking.\"\n\n\"Oh, I see!\" Faye replied, flushing a darker shade of purple and giving John a grateful smile. She immediately allocated one of her avatars to devote a portion of her memory and processing power to creating humour-detection algorithms.\n\nChanging the subject to save her further embarrassment, John asked, \"How much longer will it take to finish installing all the new Sonic Cannons?\"\n\n\"One hour, seventeen minutes and nine seconds,\" Faye replied, gazing at him with her big luminous eyes. \"I just wondered if you'd like me to start prepping the Raptor to mount Photon Lasers when I'm finished?\"\n\n\"Oh shit, yeah! We could definitely upgrade the Raptor, that's got a dedicated Progenitor power core too!\" Dana blurted out and this time it was her turn to blush. \"I've been so focused on the mech, I forgot the Raptor could support a couple of these new guns.\"\n\n\"That's great news!\" John exclaimed, looking delighted. \"That'll almost double the Raptor's firepower, won't it?\"\n\nDana nodded, but she looked conflicted as she glanced down at the console in front of her. When she looked up at him again, she replied, \"I don't think I'll have time to finish configuring all the systems on the mech, fabricate all the components and build two new guns.\"\n\n\"I can prepare the mass fabrication jobs for you!\" Faye offered, her face lighting up with excitement. \"That won't be hard at all! You've already drawn up a list of required components when you built the last Photon Lasers.\"\n\n\"I'll go make a start on the gun barrels!\" Alyssa quickly offered, finishing the armoured pauldron she was working on and lowering it to the deck. Smiling at John, she grinned as she lobbed her sphere of crystal Alyssium towards him. \"Hey, handsome, catch!\"\n\nHe looked at her in surprise and just managed to catch the wobbling orb of liquid metal before it splattered all over the deck. Frowning at the playful girl, he carefully merged it with his own sphere of the psychically responsive metal, stabilising it with his mind. He gave her a wry smile then as he noted, \"Anything to get out of armour plating, eh?\"\n\nAlyssa blew him a kiss then flounced out of the Launch Bay with a spring in her step.\n\nJade straightened up from where she was squatting on the back of the mech and said, \"I've just connected all the power feeds to the upper right Photon Laser. Do you want me to start on the left ones, or would it be more useful for me to go up to Engineering and start building the guns for the Raptor? I built the last four Photon Lasers, so I already know what I'm doing.\"\n\nDana shook her head and replied, \"It'll take Faye at least thirty minutes to finish fabricating the first set of components. Can you link up the power feeds to the mech's left Photon Lasers first?\"\n\n\"Of course,\" Jade agreed immediately, climbing nimbly over the orbital insertion pack on the back of the mech. She crouched down beside the lower weapon mount and removed the armoured maintenance panel, multi-tool at the ready.\n\n***\n\n\"I can send you one-hundred-and-fifty engineers to assist with the refits,\" Gaenna said, glancing through her roster of personnel working at House Baelora's orbital shipyard. She frowned and added, \"Although if I do so, I'll barely have a skeleton crew to carry out repairs on my own fleet.\"\n\nEdraele smiled pleasantly at her and responded, \"Your fleets will not be exposed to combat until they've undergone the same upgrades as the rest of our forces. Keep your own fleet near your homeworld until we call for them at Genthalas, that way they will require less maintenance.\"\n\nGaenna nodded thoughtfully and said, \"That makes sense, thank you Edraele.\" She hesitated for a moment before adding, \"But what of my border with the Brimorians? Am I to leave that undefended?\"\n\nLooking around at the wider group of Matriarchs, Edraele replied, \"We must start thinking as a single people, always working together to support one another for the greater good. House Valaden's ships have already undergone engine upgrades, making them faster and more agile in battle. With the new Tachyon Drives and Heatsinks installed, they'll be able to respond faster and hit harder than any of your vessels. As soon as House Valaden's fleets have completed their refits I will disperse every vessel under my command to begin patrols of the Maliri Regency's external borders. We will use my forces to protect us all until your ships have achieved parity. Then it will simply be OUR ships, and OUR forces.\"\n\nWith a light laugh, Gaenna said, \"To think that I'd end up entrusting the security of my external borders to Edraele Valaden!\" Shaking her head in amazement, she glanced at Tsarra and Kali then continued, \"I've already ceased patrols of my borders with Perfaren and Loraleth - these are exceedingly strange times we live in!\"\n\n\"But far more pleasant, don't you agree?\" Edraele replied with a smile.\n\nTsarra had been hanging on Edraele's every word and she blushed as she admitted, \"At the very least I've stopped biting my nails with worry!\"\n\nThe women around the table laughed at that, but it was meant kindly, with all of them having experienced similar levels of stress in the lead up to the confrontation with John.\n\nEdraele met the eyes of the recently recruited Matriarchs in turn, all of whom now had short white hair. \"I can't speak for your own experiences as Matriarchs, but I found the long decades of leadership to be a lonely business. I was always suspicious of everyone's motives and never dared to trust a soul, especially my own family.\" Looking pointedly at the Young Matriarchs she added, \"I have friends now, women who have proven themselves to be stalwart allies and who I trust implicitly. It's a comforting feeling and one I hope you will all eventually be able to share.\"\n\nKali, Nyrelle, Valani, and Leena all looked to Edraele with respect and affection, nodding their agreement. Those looks of open trust were not lost on the thirteen other Matriarchs seated around the table, an expression none of them were used to seeing. It was certainly an interesting revelation to ponder.\n\n\"Unless anyone wishes to raise another matter for us to discuss, I believe that concludes our business for today, ladies,\" Edraele said, looking around the group at each of the women in turn. Many of them were lost in thought, while the others gave her a tentative smile and shook their heads. Edraele rose regally from her chair and smiled as she concluded, \"In that case, I wish all of you a very pleasant evening.\"\n\nThe rest of the Matriarchs rose to their feet, chatting quietly to one another as they left the large meeting room. Leena paused by Edraele and gave her a coy smile as she murmured softly, \"Would you care to join us for another team building exercise this evening, Matriarch?\"\n\n\"That sounds like a wonderful idea,\" Edraele replied, reaching out to clasp Leena's hand and stroke it affectionately. She glanced at the doorway where Tsarra Perfaren was hovering anxiously then added, *Please start without me, I'll join you once I've spoken to Tsarra.* \n\nLeena inclined her head, her light-green eyes twinkling flirtatiously before she glided out of the room.\n\nEdraele followed her out and smiled at the nervous young woman waiting outside the room. \"Hello, Tsarra. Is everything alright?\" she asked kindly.\n\nThe House Perfaren Matriarch nodded, then replied in a hushed voice, \"I was wondering if I could have a word with you in private, Edraele?\"\n\n\"Of course. Please follow me to my study and we can speak there. We won't be disturbed,\" Edraele replied, turning left and gesturing for Tsarra to accompany her. \n\nTsarra did so, but remained quiet, darting nervous glances at the intimidatingly beautiful and elegant leader of House Valaden. They walked into the study and Edraele gestured to one of the chaise-lounges then sat next to her before turning to face the young woman.\n\n\"Would you care for a drink?\" she asked, glancing at the decanter of burgundy-coloured liquid and the glasses on the adjacent table.\n\nShaking her head, Tsarra replied, \"No, I'm fine thank you.\"\n\nSeeing that the nervous girl hadn't built up her courage to speak whatever was on her mind, Edraele turned her attention to Tsarra's short mop of snowy-white hair and said, \"The new colouring suits you. It brings out those lovely green eyes of yours.\"",
        "Tsarra blushed and brought her hand up to her head, running her fingers through her hair self-consciously. She met Edraele's encouraging, open gaze and replied softly, \"I was thinking of growing it long, like yours.\"\n\n\"You'll look stunning,\" Edraele said earnestly, before her full mouth turned up into a knowing smile. \"I'm sure John would love that.\"\n\nTsarra was quiet for a moment before suddenly blurting out, \"Will he be back soon?\"\n\nEdraele suppressed her worries for John and her daughters, knowing full well the dire predicament they currently found themselves in. She smiled at her guest and replied, \"He's busy saving the galaxy at the moment, but I know he plans to return here as soon as he's able to.\" She studied the young woman's face and having seen Ioelena with a similar expression of longing, she added leadingly, \"Why do you ask, Tsarra?\"\n\n\"I haven't had a chance to thank him yet for saving my life,\" she replied, hands twisting together anxiously. \"He'd already left by the time I'd woken up, after I'd...\" Her voice trailed off, her hand instinctively moving to her stomach.\n\nSmiling at her, Edraele leaned forward and whispered conspiratorially, \"Can I let you in on a little secret?\"\n\nLooking at her with big eyes, Tsarra nodded but stayed quiet, listening attentively. You could have heard a pin drop in the silence that settled in the room.\n\n\"Alyssa and I are John's Matriarchs and he lets us read his mind,\" Edraele confided in the young woman, with particular emphasis on the title to indicate the different meaning. She smiled playfully as she added, \"When he met you, he thought you were an exceptionally beautiful girl. I know he wants to meet with you again.\"\n\n\"Really?!\" Tsarra gasped, her face lighting up with delight. She managed to compose herself and added in a much more reserved manner, \"I'd like that very much.\"\n\nEdraele studied the House Perfaren Matriarch for a moment then said sympathetically, \"After the unfortunate events that befell your mother and sisters, I believe you are all that remains of your noble House?\"\n\nNodding in response, Tsarra faltered as she replied, \"I know I should be focusing on securing the lineage of my House.\" She winced as she glanced at Edraele and whispered, \"But the prized border males can be so obnoxious!\"\n\n\"It is very important to maintain your family line,\" Edraele agreed, her tone sympathetic. Inching forward, she held out her slender hand towards Tsarra's midriff and looked into her eyes as she quietly asked permission to touch her, \"May I?\"\n\nHolding her breath as she stared at her Matriarch, Tsarra slowly nodded, then gasped as Edraele gently caressed her slim abdomen.\n\n\"Can I ask you a favour?\" Edraele asked as she gazed into the younger woman's dark-green eyes.\n\n\"Anything...\" Tsarra finally breathed.\n\nEdraele's hand moved down a little so that she was stroking Tsarra's lower belly and she murmured, \"Would you consider holding off on pursuing one of the border males for a little while?\" She smiled at the entranced girl and added in a hushed voice, \"But only do so if you might be interested in a match with John instead. You'll find interacting with him to be a far more satisfying experience.\"\n\nTsarra could hardly believe her pointed ears and she let out a low moan of arousal as Edraele's delicate fingers lovingly caressed her fertile belly.\n\n***\n\n\"What are these irritating little maggots doing?!\" Grand Overlord Vekrok snarled in frustration as his Dreadnought was jerked out of hyper-warp once more. \"They're only delaying the inevitable!\"\n\nThis was the eleventh such interruption, each one dumping his armada into normal space and halting their relentless march towards Ashana. Every interruption only delayed his forces for a handful of minutes at least until the infuriating Ashanath cruiser was hunted down and destroyed. However, the incessant violent shaking as they were dragged out of hyper-warp was starting to give him a pounding headache. \n\nHe clenched onto his throne to keep himself stable, his weighty right paw clamping down on Itigrut's skull. Unfortunately, his power-assisted gauntlet crushed the skull like an eggshell, causing it to shatter in a cascade of bone fragments. Looking down at the remnants of his prized trophy in horror, Vekrok's hefty jaw twisted as he roared in incandescent fury. \n\nLurching from his throne, he thumped the Command Interface and bellowed, \"I WANT THOSE FUCKERS DEAD! ALL SHIPS HUNT THEM DOWN!\"\n\nHis armada of Drakkar ships surged forward as his furious orders were broadcast to every spacecraft in the vast warband. The Ashanath cruiser simply turned tail and ran, just as the other ten had before it. Drakkar ships were equipped with a multitude of engines and the horde of vessels were faster than the fleeing silvery vessel. It was blotted from sight on the map by the dozens of purple beams that lashed into its circular form, the shields overloaded in an instant. Skewered by those throbbing lances of energy, one of them slashed through the power core, triggering a reactor meltdown that blew the Ashanath ship into a million pieces.\n\nVekrok pointed an armoured finger at his latest navigator and growled, \"Get us back into hyper-warp. I will erase this pathetic species from existence!\"\n\n***\n\nJohn worked methodically, pouring more of the diminishing sphere of crystal Alyssium into each of the body plates that would armour the mech's torso and limbs. He had gathered sufficient experience at shaping to be able to form the armoured plates directly onto the mech, so Rachel followed after him, sealing them into place with crystalline mag-locked bolts.\n\nThey were about half way through when Irillith arrived in the Launch Bay, a satisfied grin on her face. \"Hello everyone!\" she greeted them cheerfully.\n\n\"Hello to you too!\" John said, returning her greeting with a warm smile. Taking in her happy grin, he added, \"You look like you've got good news?\"\n\nShe glided over to him, nodding as she replied, \"I finished the targeting HUD upgrade in the Paragon armour!\" She looked up at Rachel who was perched on the back of the mech's right leg and continued, \"Just upload any autopsy results in the format we discussed, and any vulnerabilities you identify will be highlighted on targets of that species.\"\n\n\"That's really excellent work, honey. Thank you,\" John said, smiling at Irillith appreciatively. He glanced up at Rachel and added, \"Same goes for you, beautiful! That was a great idea!\"\n\nThe brunette grinned and saluted him with the multi-tool. Looking down at Irillith, she waved the sophisticated device and asked, \"Do you fancy grabbing one of these and helping lock down the armour? I'm struggling to keep up with John.\"\n\nDana whistled from up on the gantry, drawing all eyes to her as she tossed a spare multi-tool to the Maliri girl. Irillith caught it easily enough and Dana winked at her, saying, \"Thanks! I owe you one!\"\n\nJohn watched Irillith clamber up the mech to begin working on the plates on its left leg, then turned his attention back to the rotating orb of Crystal Alyssium. He had to work on the arm plates now and on a whim, he decided to try forming both sets of plates at the same time. He remembered how Alyssa had shaped six plates at a time for the Invictus, but he decided to start small and just work on two. Focusing intently on drawing out twin streams of the liquid metal, he began to create a pair of identical plates which would be affixed to each of the mechs biceps. He couldn't help groaning with the strain, his head throbbing as he worked.\n\n*That's penta-shaped crystal Alyssium,* his blonde Matriarch warned him immediately. She channelled a quick burst of psychic energy over to him to help alleviate the strain, then continued, *Good effort, but you're not quite ready for shaping more than one of those at a time.*\n\nHe finished the psychic craftsmanship, letting both plates clatter on the floor as he reached up with a hand to massage his temple. *How the hell did you manage six at once?* he muttered, filled with a new sense of appreciation for Alyssa's psychic potency.\n\n*They were only quad-shaped, and it gets much harder the more times the metal's been reshaped,* Alyssa reminded him gently, but he could tell she was just being modest. Her tone turned playful as she continued, *Besides, I've had a shitload of practice at making armour for the Invictus! If I go to hell, I'll be doomed to shape armour plates for eternity!*\n\nJohn laughed at that and replied, *You better work hard at being a good girl then, hadn't you?*\n\n*Oh yes, definitely,* she purred in agreement. *Speaking of which, I've finished the second Photon Laser barrel for the Raptor. I'll give Jade a hand assembling them both, then we'll go and install them. Faye tells me her bots have removed all the relevant armour plating, I'll just need to pull out the old Beam Lasers.*\n\n*Sounds like you're making superb progress! Well done, honey,* he praised her, smiling when he felt the happy surge of pride from Alyssa after his encouraging words.\n\n***\n\nSakura sat next to Tashana in the Briefing Room, nodding approvingly as her attentive student recited back her advice on squad tactics. \n\n\"And I should watch my spacing, being careful not to group up too close to any of the rest of my fireteam, to avoid presenting tempting targets for area weapons like grenades,\" Tashana concluded, a smile forming on her face when she saw Sakura looking pleased.\n\n\"Yeah, you're getting it,\" Sakura said with a wide smile on her face, patting the Maliri girl on her azure shoulder. She looked thoughtful for a moment before she added, \"Also watch out for target fixation: it's very easy to just blaze away at your target, focusing solely on putting them down. Always keep an eye on your surroundings and stay wary for danger.\"\n\n\"Sounds like sensible advice,\" Tashana agreed, trying to remember that along with the dozens of other rules and guidance that the Asian girl had encouraged her to memorise.\n\nSakura sat back in her chair, appearing thoughtful as she said, \"I think that's about it. You'll learn a lot with experience, and I'm sure John and Alyssa will give you advice too.\" She suddenly thought of something, and sprang lithely from her chair. \"Oops! I better teach you this bit so Alyssa doesn't have to explain it mid-combat!\"\n\nWatching her curiously, Tashana asked, \"What do you mean?\"\n\nSmiling at her student, Sakura replied, \"Okay, well you remember how Alyssa is a telepath? When she's with a group of us, then she coordinates our fire to make sure we aren't wasting any shots.\" Walking over to stand by Tashana's side, she explained, \"We use the numbers on a clock face to call out positioning, and it'll always be from your point of view. I've no idea how she does it with five or more of us at once, but I've seen it in action. It's absolutely lethal.\"\n\n\"Could you give me an example, please?\" Tashana asked. She smiled apologetically and added, \"I've grown up using digital chronometers, but I am familiar the reference. I've heard Terrans use the term before.\"\n\n\"Oh right! From Terran holo-vids?\" Sakura asked, smiling when Tashana nodded. Pointing directly in front of them both she continued, \"It's pretty easy: straight ahead is 'twelve' then 'one' is thirty-degrees to your right. The numbers go up with each thirty-degree increment until you're all the way up to twelve.\"\n\n\"Okay, that's seems easy enough to follow,\" Tashana replied, looking relieved.\n\nSakura raised a cautionary finger and said, \"She also calls out high or low for targets at different elevations.\" Turning Tashana in her chair so she was facing away from the table, Sakura darted backwards, and added, \"Let's do a quick practice. Just call out the position of my fist. Are you ready?\"\n\nGrinning at her eager trainer, Tashana said, \"Sure, go ahead!\"\n\nSakura dodged around, holding out a fist to different heights and positions with Tashana calling out the correct instructions. She picked it up easily and earned herself a high-five when she got all ten correct.\n\n*Now let's try it for real,* Alyssa said, her telepathic voice caressing Tashana's mind and making her jump. \n\nTashana looked at Sakura in surprise and got a wink in response, letting her know the Asian girl was in on the next step of training. Sakura stood back with her arms folded across her chest, and said, \"Just point to the targets as Alyssa calls them out.\"\n\nNo sooner had Tashana nodded, then Alyssa began issuing commands in a firm, authoritative voice, *Twelve-low, three-high, seven-low, four-low, five, two, ten-high...* The list of instructions became a steady stream, with the Maliri girl quickly pointing out the various directions and elevations.\n\nSakura grinned at her when she was finished and said, \"Perfect! Well done.\"\n\n*You did brilliantly,* Alyssa agreed, sounding pleased. *I'll give you more detailed instructions where necessary, but those are the basics.*\n\n\"So I'm combat ready now?\" Tashana asked, looking hopeful. \n\nNodding enthusiastically, Sakura replied, \"You're all set!\"\n\n***\n\nThe Drakkar dreadnought began to shake violently as the sudden appearance of a gravity well right before their fleet brought them to another juddering halt. Grand Overlord Vekrok's flagship lurched out of hyper-warp, along with hundreds of vessels in his furious entourage.\n\nRubbing at his throbbing head with both sets of hands, he growled out an order under his breath, \"Kill those thrice-damned fuckers...\" Vekrok had found that bellowing in rage was aggravating his headache.\n\nThe armada of incensed Drakkar powered up to full speed, the thrust from their massive engines flaring a bright orange as they propelled their vessels forward. The thirteenth Ashanath cruiser to interdict the armada quickly spun around, the silvery disc attempting to flee from the ravaging horde that descended on it.\n\n***\n\nWith almost all of its systems powered down, the Ashanath destroyer hung silently in the velvety field of space. Essentially invisible to the Drakkar's sensors, it watched events unfold from a safe distance, using passive sensors to pick up a general positioning of the malevolent invasion fleet.\n\nLeader Barthean watched sombrely as the cruiser carrying the Gravity-Well Generator fled from the rampant Drakkar ships. There was only the bare minimum of crew aboard the retreating vessel, but it was still heartbreaking to know that such brave souls were about to sacrifice themselves for the Ashanath Collective.\n\nHis own crew watched the Holographic tactical map in silence, all eyes on the single vessel as it was chased down by hundreds. Seconds ticked by as the horde crept ever closer to the fleeing ship until the lead pursuers were within striking range of their harried target. The Ashanath cruiser didn't last long, perhaps another seven seconds before it winked out on the map, but every second was of vital importance. \n\nA soft sorrowful murmur echoed through the mind-cluster on the Bridge, the crew's telepathic voices lifted in a mournful lament. Amidst that cry for those slain heroes, Leader Bartean's voice was firm, as he gave the order. That same order was repeated amongst scores of watching Ashanath vessels, the fleet of hidden ships having spent the last ten hours preparing for this moment.\n\n\"Activate the mines.\"\n\nThe Ashanath minefield consisted of thousands of cloaked magnetic mines, the dense field prepared exactly as Calara had requested, in the precise coordinates she had specified. The suicidal cruisers had served two purposes. Firstly, they bought the Ashanath another forty-two minutes, every moment of which allowed the minelayers more time to drop their deadly cargo. The second purpose was to enrage the easily antagonised Drakkar. Just as she'd predicted, the furious horde chased the Ashanath cruiser right into that baited trap and fully half of the rampaging fleet was enveloped in that ominous cloud when they finally destroyed the fleeing cruiser. \n\n***\n\nGrand Overlord Vekrok waved three weary hands at his navigator and grunted, \"Get us into hyper-\"\n\nHe never finished the sentence, his mouth hanging open in shock as a huge red explosion flared on the tactical map. Then another one, and yet another, in a rippling cascade that bloomed across vast swathes of his armada. Magnetic mines were drifting into the fleet of hapless ships, drawn inexorably towards the metallic hulls of the Drakkar vessels.\n\nA colossal Drakkar battleship - well over a kilometre long - was just powering up its FTL drive, when the first magnetic mine struck its hull. The contact triggered the device, and the explosion blasted a cavernous hole through the bow of the menacing black-hulled leviathan. The ship trembled with the impact, a hundred-meter-wide blast crater torn through the front of the crippled vessel. Unfortunately for the terrified Drakkar crew, that was only the first mine that would strike the ship that day. \n\nThe second bumped into the lower right engine, the detonation shattering the blocky rear section of the ship and sending shards of debris over a wide arc. A secondary explosion tore free another damaged engine, sending the battleship listing to port, just as another mine descended on the missile batteries atop the doomed behemoth. The silvery sphere looked innocuous enough, until it made contact with the armoured topdeck and a colossal explosion ripped into the warship, the blast triggering the scores of missiles which retorted with their own detonations. One searing blast after another cored out the once-mighty ship, ten thousand Drakkar dying over the span of nine seconds.\n\nSimilar stories unfolded throughout the rest of the lead elements of Vekrok's forces, and he rose from his throne in stunned disbelief as half his ships were obliterated in a terrible act of pure destruction. His slower dreadnought remained unscathed, but the same could not be said for the ships that had led the charge after the Ashanath cruiser.\n\n\"No...\" he mumbled, his bulging black eyes frozen in horror, transfixed by the utter carnage unleashed on his forces.\n\n***\n\nAlyssa eased the second of the ten-metre-long Photon Lasers into the Raptor's shoulder mount, being careful to align the power feed couplings with the modulators on the weapon. \n\n\"That's perfect,\" Jade said, giving Alyssa a broad grin. \"I'll start locking it into place.\"\n\nShe nodded in reply, then turned her attention to Faye's bots, who were busy slotting the crystal Alyssium panels back into place over the first Photon Laser they had installed. \"We're making good progress,\" she said, as she watched the smiling automatons working at a furious pace.\n\nFaye nodded, smiling with a hint of maternal pride as her four boys quickly and efficiently bolted the armour plating back onto the hull. \"We should finish the upgrade with about twenty minutes left to spare,\" she agreed, noting two slight imperfections in the robot's positioning of the panel. The armoured plate still slotted in with a barely audible click, but that wasn't the point - she would have to correct their programming immediately.\n\nAlyssa turned to her and said, \"You've been a tremendous help today, you should feel proud of yourself.\" She smiled as she added, \"We would've had no chance of getting all this work completed if it wasn't for you. We'd have been forced to choose between the Sonic Cannons or finishing Dana's mech and then the Raptor upgrade was all your idea.\"\n\nThe purple sprite blushed with the praise but she looked delighted nonetheless. Faye returned the blonde's smile and suggested, \"I was thinking it might be a good idea to build more maintenance bots, perhaps bringing the number up to at least ten. That way I can be interacting with you, watching the Bridge, and still directly monitoring ten of the bots to make sure their work is perfect.\"\n\n\"You're just full of good ideas, aren't you, cutie?\" Alyssa said, laughing as she nodded her agreement. She glanced at the grinning AI and added teasingly, \"I don't think John will object. He's had a change of heart of late and seems to thoroughly enjoy synthetic company. I can't imagine how that happened...\"",
        "Faye blushed heavily this time, biting her lip as she glanced at her blonde friend.\n\nAlyssa leaned in towards her and whispered, \"I overheard you speaking to John the other day and I know you wanted to ask him something important. Would you mind telling me what it was?\"\n\nThe purple girl's blushing intensified and she stared at Alyssa with huge eyes, wracked with indecision. Finally making her mind up, she stood on tiptoe and whispered in the Terran girl's ear.\n\nCerulean eyes widening in surprise, Alyssa turned to look at Faye and saw the hopeful expression on her adorable features. She gave her a warm smile and said, \"I've just had an idea how we can help. John won't know what's hit him!\"\n\nFaye giggled with excitement, eight of her avatars rushing to enhance her custom programs as Alyssa explained her plan.\n\n***\n\nCarefully aligning the head-shaped cockpit with the spinal mount between the mech's broad armoured shoulders, John waited patiently for Dana to give him the all clear. \n\n\"Sure, take your time... It's not like this thing weighs ten tons or anything,\" he grumbled, as he hoisted the enormous sparkling white cylinder above his head.\n\n\"Twelve tons, actually,\" Dana murmured as she stared intently down at the joint and socket. \"Alright, drop it six inches and bring it three inches to your left, then you're good.\"\n\nJohn bent his knees a fraction, then pivoted ever-so-slightly to his left before pushing the long crystal bar into the spinal socket. It slid in with the sound of well-oiled metal against metal, before the familiar hum of hydraulics filled the air as the rotating cylinders locked it into place. \n\n\"How are you planning to get this thing upright?\" he asked, glancing up at Dana curiously.\n\nShe was sitting on the mech's shoulder, busy running through long lists of data on her holo-reader and she replied distractedly, \"Just help me into the Pilot's Chair in a minute and you'll see.\"\n\nRachel and Irillith stood beside him, the three of them watching Dana as she finished her final checks, making sure that the cockpit was now hooked up to the internal power grid. Her wild grin gave them all the confirmation they need.\n\n\"Alright then, how do you want to do this?\" he asked, eyeing the cockpit curiously. \n\nThe redhead climbed onto the back of the cockpit, then hung off one of the four sensor rods that swept back from the head. Pressing her hand down onto a panel on the side of the cockpit, the DNA reader scanned her genetic code then opened an oval shaped door in the side of the head. She swung in with the agility of a cat, then her hand reappeared a moment later waving him to follow her in.\n\nJohn chuckled at her enthusiasm, then stared at the smooth armour plating, trying to figure out how to clamber up to reach her.\n\n\"I'll give you a boost,\" Rachel said with a smile, clasping her hands together to form a stirrup.\n\nHe gave her a grateful kiss, then put his boot onto her waiting hands. \"On three,\" he warned her, then quickly counted down.\n\nRachel was surprisingly strong and she easily launched him into the air, giving him more than enough height to grab the lower rim of the door. \n\nDana grabbed his wrist and pulled him inside before pushing him over to the left. \"No standing on the weapon controls,\" she said with an eager grin, jerking a thumb at the console to their right.\n\n\"Considering the firepower this thing's toting... that's sound advice,\" he readily agreed. He glanced over her shoulder at the Pilot's Chair, and added, \"Are you ready?\"\n\n\"Yep, let's do this!\" Dana agreed, stepping over to the chair. \"Just lift me up so my back's against the chair, and I'll buckle myself in.\"\n\nJohn did as she asked, effortlessly holding her up, and gently positioning her against the back of the seat. He saw that the redhead's hands were shaking with excitement as she grabbed the safety harnesses and pulled them across her chest and into the locking slots.\n\n\"Shall I jump out?\" he asked, looking out of the clear-crystal visor at Irillith and Rachel who waved back at them.\n\nDana shook her head, and replied, \"Nah, just hunker down under that console then brace yourself. You'll be alright.\"\n\nNot entirely sure he agreed, John did as she asked and ducked down under the console then held himself steady. Dana was sitting directly above him and he saw the look of glee on her face as she stabbed her thumb down on the big green button on the armrest control. A throaty hum filled the cockpit as all the systems surged with power, lights flickering on around him as the consoles came to life.\n\nSome power chords boomed out, and a man's sonorous voice enthusiastically shouted, \"Let's get ready to rumb-\"\n\nThe voice and the music were abruptly cut off and Dana blushed furiously as she saw John looking at her with a raised eyebrow. \"Must've been some kinda glitch,\" she mumbled, hurriedly tapping away at more buttons.\n\nGripping the two control sticks with her hands, he saw her feet slip into some kind of pedal controls and that wild grin was back on her face again. He felt a sudden lurch and an unsettling sensation of movement, but tucked under the console it was difficult to see what was going on. He glanced up at Dana and as the mech abruptly shifted position again, he watched her long thick hair fall back against her shoulders instead of hanging straight down towards him as he dropped onto the cockpit floor. He swayed from left to right and then there was that same sinking feeling in his stomach as they rose higher until he felt the mech steady itself.\n\n\"All done?\" he asked, peering up at Dana from under the console.\n\nShe nodded gleefully and said, \"We're up and running!\"\n\nJohn climbed out and stood upright then peered through the canopy in amazement. They were now towering over the Launch Bay floor and he could see Rachel and Irillith running up the steps on the maintenance gantry to get to their level. He heard the hum of machinery in motion and glanced at Dana in surprise as he saw the muzzles of the Photon Lasers appear above the cockpit's visor. Walking around behind her, he saw the target reticle for the quad Photon Lasers appear in front of her, now that the four guns had shifted into firing position.\n\n\"Don't worry, I'm not going to fire them,\" she said, grinning at him as she tried shifting the targeting reticle, the long barrels following obediently. Letting out a rueful sigh, she added, \"It's just a shame we can't make a pit-stop to shoot up an asteroid belt.\"\n\nHe patted her shoulder and said, \"I've got a feeling they're going to get a very vigorous testing, but you'll be shooting Drakkar ships, not big hunks of rock.\"\n\n\"Are you really going to let me pilot the mech?\" she asked him, eyes gleaming at the prospect.\n\nJohn nodded and replied, \"You're the only one who knows how to control the damn thing!\"\n\nDana beamed at him in delight as she exclaimed, \"I'd hug you, but I'm strapped into this chair!\"\n\nShe pressed the button to withdraw the Photon Lasers to their dormant position and they could hear the loud sound of the ten-metre-long weapons being pulled back through the open door in the side of the cockpit. He watched her twist the control sticks and the mech crouched down, the sudden movement making him wave his arms around to keep himself balanced. The mech's huge robotic right hand reached out to slide through the arm mount for the rotary cannon and it grasped the handle securely before Dana stood upright once more.\n\n\"We got distracted earlier, what is that thing anyway?\" John asked, poking his head out of the cabin door to stare down at the ten-metre-long rotary cannon.\n\nDana's eyes sparkled with a devious light in the blue glow from the consoles and she replied, \"You're familiar with the Punisher railgun, right?\"\n\nHis eyes widened in shock. \"Is that...?\"\n\n\"A Punisher Gatling, but scaled up for a mech!\" she crowed, giving him a beaming grin. Dana walked the mech back a couple of steps, then hit the button to power the gigantic machine down again. As the lights around her dimmed, she began unbuckling her harnesses, freeing herself from the Pilot's chair. \"Come on! Let's go hook up that bad boy to the power couplings and ammo hopper!\"\n\nHe watched her step out of the cockpit door and onto the maintenance gantry, which now ran flush with the mech's shoulder. \"Wait a second!\" he called out to her as he followed the bouncing redhead through the door. \"Have you got a name for this thing? We can't just call it 'the mech'.\"\n\nDana flushed and looking shifty she replied, \"Yeah, I've come up with a few ideas...\"\n\n*We've been hailed by the Ashanath,* Alyssa interrupted, her voice urgent. *Calara's speaking to Ularean right now.* \n\n*Alright, tell her I'm on my way,* he replied, before turning and giving Dana an apologetic smile. \"Sorry, Sparks. The Ashanath just called, you'll have to tell me later.\"\n\n***\n\nGrand Overlord Vekrok glared at the burning wrecks and shattered remnants of once-mighty ships, standing in silence while readying himself to hear the scale of the destruction inflicted upon his fleet.\n\nGrukig scrolled down through the reports and continued, \"...along with the Defiler, which were all too slow to enter the minefield and survived unscathed. We lost practically all our destroyers and-\"\n\n\"I don't give a fuck about destroyers!\" Vekrok snarled, his four fists clenching in rage. \"What about my cruisers and battleships?!\"\n\nGiving the massive Drakkar leader a frightened glance, Grukig continued, \"Ninety-seven cruisers were destroyed, twenty-four are too crippled to fight and fifteen are damaged but spaceworthy. Five battleships were destroyed, eight are so badly damaged they'll have to be scuttled and twelve took damage but are ready for battle.\"\n\nHowling with rage, Vekrok looked around for something to vent his fury, his eyes finally settling on his throne. He slammed his fist into the back, neatly shearing through it and breaking the upper half off the imperious seat. \"How long until we're underway?!\" he bellowed, watching through squinting eyes as the remaining cruisers attempted recovery operations.\n\nGrukig read the report again, and answered nervously, \"At least three hours to transfer the survivors to-\"\n\n\"Fuck that! We've already been here an hour! We're done hanging around with our thumbs up our pod chambers!\" Whirling around, he slapped his brawny hand down on the comms interface and growled to his fleet, \"Prepare to jump in five minutes! We're going to slaughter all the little bastards who did this!\"\n\n\"But Sir! What about all the survivors?!\" Grukig yelped, shocked that the Grand Overlord would just abandon tens-of-thousands of elite troops. \n\n\"We'll come back for them alright,\" Vekrok said, his deep voice throbbing with rage. \"As soon as I've had my fill of Grey flesh and gone for a swim in their blood!\"\n\nGrukig nodded, knowing better than to question his fiery-tempered Commander a second time. \n\n***\n\n\"Your plan succeeded, JohnBlake. You have saved us,\" Ularean murmured in his whispering voice.\n\nJohn met the Ashanath Senior Councillor's unblinking stare and said regretfully, \"I'm afraid the fight's only just begun Ularean.\"\n\n\"But their losses... they were horrific,\" he said in his eerie, ghostly voice.\n\nShaking her head, Calara replied, \"I don't believe the Drakkar will run, not if they're working for this other Progenitor. We've helped even the odds, perhaps enough to give us a fighting chance now.\"\n\nJohn gave the quaking Ashanath a level stare and said firmly, \"You'll be fighting to save your species, Ularean. You're going to need to ready your people for a hell of a battle.\"\n\n\"I will do so, JohnBlake,\" the Senior Councillor replied. He blinked slowly and his whispering voice sounded ominous as he added, \"We have made preparations to meet the Drakkar threat.\""
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "cum inflation",
        "swallow",
        "blowjob",
        "maliri",
        "twingasm",
        "psychic",
        "anal",
        "oral",
        "bisexual"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-77"
}