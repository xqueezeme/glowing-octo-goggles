{
    "title": "Mason Ch. 11",
    "pages": [
        "Toni watched Mason walk away still in shock by the kiss on the cheek. There was nothing even remotely erotic about it but it felt nice. Toni closed the door, locked it and set the alarm before checking on Jamie, he was lying on his side sound asleep. Toni stood by his bed and watched him for a few minutes before going to her own room. She had been in the process of packing her personal belongings and decided to see how much more she could get done before morning. Her goal was to stay up as late as she could, take Jamie over to her parents and then she would sleep during the day in preparation for her shift that night.\n\nAs she packed, she found a box that was full of cards from James. She almost put them away and decided to read them. Most of them were typical James, cards that he thought were funny and were meant to make her laugh or smile. A few of them were serious and flowery revealing the romantic that he kept hidden except for special occasions.\n\nToni found herself teary eyed but not overly sad and to her, that meant progress. That she could laugh again and work again all indicated that she was healing. She put the cards back in the box and put them in her suitcase, she couldn't bring herself to throw them away. Her thoughts went to Mason; she wondered how his wife or significant other had died and how long ago she passed.\n\nShe didn't think that it was that long ago but maybe she was wrong. At any rate, she didn't know him well enough to ask. Toni packed until three before deciding to call it a night, she was tired and the first night of work after being off for a couple could be rough.\n\n******\n\nMason drove home in a good mood; Toni hadn't slapped him when he kissed her cheek although to be fair, he hadn't given her a chance to react. He wondered how she would act around him at work which led to another issue, Joyce. He had no doubt that the hospital wires were burning up and that by the time he and Toni got to work, the rumor mill would have them married with a baby on the way. \n\nWhen he got home, Mason turned on his laptop to see what was happening over the weekend that Toni and Jamie would enjoy. There was another ball game but he didn't think that Toni would enjoy it although Jamie would. The problem was finding activities that had evening hours. After searching for almost an hour, he came up with miniature golf, a movie or a kiddie arcade. He decided to present the choices to Toni and let her choose what they were going to do, he had no real preference.\n\nIt was still relatively early and he was almost sure that Ethan was still up, now would be a good time to find out how he told Katrina that he was a vampire. While he knew the story of how they met, he had never heard how he broke the news to her. Ethan answered on the first ring.\n\n\"How's the dating thing going?\" Ethan asked.\n\n\"Slowly.\" Mason replied. \"How are Katrina and the girls?\"\n\n\"They're all good, we're in the process of trying to decide whether to home school the girls or not. I think that they need to go to school but Katrina isn't so sure.\" Ethan said.\n\n\"There are pros and cons to both.\" Mason said. \"What are Katrina's concerns?\"\n\n\"I think that most of it has to do with her own experiences but you didn't call to help me figure out the education plans for the girls, so what's up?\" Ethan asked.\n\n\"How did you tell Katrina that you were a vampire?\" Mason asked not beating around the bush.\n\n\"Are things that far along?\" Ethan asked surprised.\n\n\"No but I just want to be ready.\"\n\n\"Good idea, as you know, I didn't have that luxury.\" Ethan said. \"I had to just spit it out because I was leaving to see Eustace. Needless to say, she didn't take it too well.\"\n\nMason was silent for several minutes before he spoke, \"I'm not sure of how Toni will react.\"\n\n\"But you have the opportunity of getting to know her before you tell her.\" Ethan said.\n\n\"True.\" Mason conceded, \"I suppose I'll know when the time is right to tell her.\"\n\n\"I think that most of our mates already know on some level that we're different but they don't know in what way. Just take your time and do as you always told me.....\"\n\n\"I know, follow her lead.\" Mason finished for him\n\nMason could hear the girls calling for Ethan in the background.\n\n\"I'll let you go; I can hear that you're being paged.\" Mason said.\n\n\"No problem, I'll talk to you soon.\" Ethan said and hung up.\n\nMason sat at the table for a long time after talking to Ethan; sometime soon, he was going to take Toni out without Jamie. They had to start spending time together and if they were seen outside of the hospital, then so be it but he was going to have a talk with Joyce about her contributions to the rumor mill when he saw her next.\n\n******\n\nToni had just gotten back from taking Jamie to her parent's house when the phone rang. She looked at the caller ID and groaned she really wasn't in the mood to talk to Gina but decided to get it over with.\n\n\"Morning Gina.\" She said politely.\n\n\"Morning Toni.\" Gina replied but didn't say anything else.\n\n\"Did you want something?\" Toni asked.\n\n\"Yes, I was wondering about that disc that you mentioned. I would like to see it.\"\n\n\"No.\" Toni said not offering a reason.\n\n\"But you said that you would show it to me.\" Gina said.\n\n\"I know I did and I've changed my mind. That disc was James' last gift to me and I don't have to show it to you or anyone else.\" Toni replied.\n\n\"I'm entitled to see...\"\n\n\"You aren't entitled to anything.\" Toni interrupted. \"You only want to see the disc because you think that I'm lying to you and to be honest, I could give a fuck whether you believe me or not. I want you to listen to me carefully because I'm not going to repeat myself. I loved James, I will always love James but he isn't here. He died and before he died he gave me one last gift, he gave me his blessing to love again if I chose to. I know that to you it would be a betrayal if I found someone else to spend my life with, but all that matters to me is that James would understand and would want me to be happy. Oh and one more thing, if you ever pull a stunt like you did last night in front of Jamie, I'll kick your ass.\"\n\nToni slammed the phone down now too agitated to sleep. She took a hot shower, climbed into bed and read until she fell asleep. She woke up around four to the smell of cooking food and Jamie lying on the bed looking at her.\n\n\"Gramma says supper is almost ready.\" he said.\n\n\"What time is it?\" Toni asked.\n\n\"I dunno.\" Jamie said.\n\nToni looked at the clock; it was only four, why was her mother cooking so early? She had another hour to sleep. She crawled out of the bed, went into the bathroom closing the door behind her. Toni looked in the mirror and grimaced at the dark circles under her eyes, she had only been asleep for three hours when she was woken up. She turned on the shower and began to mentally prepare herself for a long night, she gave thought to skipping supper and sleeping for another two hours but that would mean that she would miss supper with Jamie and that was unacceptable.\n\nShe took her time letting the hot water wash away the rest of her sleepiness. Never one to get dressed for work before she had to, Toni threw on her sweats and went into the kitchen.\n\n\"Mom, why are you here so early?\" Toni asked.\n\n\"I told you.\" Ben muttered.\n\n\"Oh shush already!\" Barbara said scowling at him. \"I thought that maybe I could make dinner without waking you up. We were in the area and instead of going all the way back home, we came here.\" she added.\n\nToni didn't quite believe her but let it go, she was up to something.\n\n******\n\nMason was up and dressed two hours before he had to be at the hospital. He got the coffee ready to brew and packed a lunch for two. While he rested he decided to ignore the rumor mill, if people thought that he and Toni were a couple then so be it, it might even help in the long run and keep any other interested males away although he hadn't heard about anyone sniffing around her. \n\nAn hour later, he was sitting in the office waiting for Joyce, he had moved into another office the week before and was much happier not hearing Joyce's incessant chatter about who was doing what and with whom.\n\n\"Mason! What are you doing here?\" Joyce asked. \"Miss me?\" \n\n\"No, but I do want to talk to you.\" he replied.\n\n\"Sounds serious.\" Joyce replied.\n\n\"It is, please sit down.\" \n\nJoyce raised her eyebrows at Mason's tone but sat down.\n\n\"Joyce, I want you to stop spreading rumors about me and Toni.\" Mason said.\n\n\"I....\"\n\n\"Don't bother to deny it.\" Mason said cutting her off. \"I heard the comments as I walked down the hall and the only place that the information could have come from was you. I don't care what they say about me but I do care when the gossip is about Toni.\"\n\n\"If there's nothing between you then why do you care so much?\" Joyce asked defensively.\n\n\"Are you so bored with your own life that you have to interfere with the lives of others?\" Mason asked ignoring her question. \"I'm only going to say this once more, stop spreading rumors.\" he said and stood up to leave.\n\nMason went to his office knowing that the rumors wouldn't stop but he worried about Toni more than he should have, had he heard about the talk that she had with Kim or the way that she had dealt with Gina, he would have realized that she didn't need that kind of protection.\n\n******\n\nToni parked and headed to the doctor's sleeping room that she would be using that night. She was grateful for her foresight in not scheduling her nights together. After tonight, she would off for almost a week and a half and she could hardly wait. She put the lunch for two that her mother packed in the fridge and laughed, Barbara was still trying to play match maker between her and Mason. After her talk with Gina that morning, Toni couldn't bring herself to be mad about it.\n\nToni put her stethoscope around her neck, checked her pockets to make sure that she had several pens and headed out to report. She was well aware of the looks and whispers as she passed by and assumed that Joyce had been at work. It frustrated her that adults acted like teenagers with the he said/ she said gossip but had decided it wasn't worth getting upset over, as long as there were institutions and people, there would be gossip and the rumor mills that would run nonstop.\n\nIt turned out to be a rather busy night with Toni admitting three patients with chest pain, two drug overdoses, two hip fracture patients and one burst appendix. It was past three before she made it to the doctor's lounge carrying the lunch for two. She found herself disappointed when Mason wasn't there but settled down to eat and browse through a magazine that someone left on the table. \n\nMason came in just as she was packing up to leave.\n\n\"Busy night.\" he commented as he sat down.\n\n\"I know me too.\" Toni replied. \"Thank goodness I'm off for the next several nights.\"\n\n\"You're moving Friday right?\" Mason asked.\n\n\"Yep, the movers have pretty much packed everything except for the beds.\" Toni replied.\n\n\"How about I bring dinner?\" Mason asked.\n\n\"You don't have to; we'll just order in Chinese or something.\" Toni replied.\n\n\"I really don't mind.\" Mason said. \"And besides, we have to talk about Saturday night anyway.\" he added.\n\n\"About that...\" Toni started.\n\n\"Are you reneging on our agreement?\" Mason asked half serious and half kidding.\n\n\"No but after moving on Friday I don't know about doing anything on Saturday.\" Toni replied.\n\n\"Alright, what about Sunday night?\" Mason asked.\n\nToni laughed, \"You're going to hold me to that agreement aren't you?\" \n\n\"I most certainly am.\" Mason replied with a smile.\n\n\"A deal is a deal so Sunday night it is. What were you thinking of doing?\" Toni asked.\n\n\"Miniature golf or a movie if you prefer.\" Mason replied. \n\n\"Tell you what, I'll ask Jamie what he would like to do and I'll let you know.\" Toni replied as she finished packing up her lunch.\n\n\"Sounds good, I'll see you on Friday around five.\" Mason said.\n\nToni went back to the sleeping room hoping for a chance to catch a nap; she had just barely closed her eyes when her beeper went off. Toni moaned when she saw the number, Kim. She hadn't seen Kim since she had that talk with her and wouldn't have cared if she never had to talk to her again but this was work.\n\n\"Yes Kim.\" Toni said as pleasantly as she could.\n\n\"What?\" Toni asked alarmed. \"How much digoxin did she get? That's four times the dose ordered, what's her heart rate? 28? Shit! Ok, I'll be there and get her ready to be transferred to ICU and call cardiology and let him know.\"\n\nToni put on her shoes and rushed to the floor.\n\n\"Where's the chart?\" she asked as soon as she arrived at the nurse's station.\n\nShe looked at the orders and saw a signature that she didn't recognize on the digoxin order.\n\n\"Kim, come over here a sec.\" she called.\n\n\"Whose signature is that?\" Toni asked.\n\nKim peered at the signature, \"I... I don't know who that is.\" she replied confused. \"Let me take the chart, maybe someone else recognizes the writing....\"\n\n\"CODE BLUE ROOM 352\" blared over the intercom. Everyone scrambled except for Toni. She sat frozen as someone grabbed the crash cart and someone else began to gather supplies. Kim ran by and doubled back, \"Dr. Jacobson?\" \n\nToni shook herself and forced herself to focus, when she first ran into the room she thought it was James laying on the bed and hesitated but it was a woman. The Doctor in her took over and she began to call out orders until the emergency room doctor arrived and took over. She saw the nurse of the patient huddled in a corner trying to answer the questions that were being shouted out to her. Toni made her way to the petrified nurse and put a hand on her back.\n\n\"Take a breath.\" she said softly. \"Now answer one question at a time.\"\n\nThe nurse nodded at Toni gratefully and pulled herself together.\n\nAfter the code was over, Toni went and sat in an empty room and shook. She had hesitated, she lost precious seconds because she couldn't move and then more seconds because she saw James on the bed instead of the patient. Fortunately, the patient survived but still...\n\nToni went back to the sleeping room and prayed for no more calls, she tried to rest but couldn't. She couldn't get over the fact that she had hesitated, she heard a soft tap on the door and got up to answer it. Kim.\n\n\"What do you need Kim?\" Toni asked tiredly.\n\n\"You left your stethoscope; I didn't want it to get lost. I know that Dr. Jacobson gave it to you.\" she added. Kim said holding out the stethoscope.\n\n\"Oh, thanks. You could have called.\" Toni said.\n\n\"I know but I was wondering if I could talk to you for a minute.\" Kim said.\n\nToni hesitated and then stepped back leaving the door open.\n\n\"What did you want to talk about?\" Toni asked.\n\nKim looked around as if to check if anyone else was there.\n\n\"Umm, I know that you don't like me much and that's ok but it's also the reason why I picked you to talk to.\" Kim said. \"It's about that dig order, I figured out who wrote it and....the same person has made other mistakes.\"\n\n\"Who are you talking about?\" Toni asked.\n\nKim hesitated and then said \"Dr. Myers.\"\n\nToni hesitated and then asked, \"What kind of mistakes are you talking about?\"\n\n\"Tonight was the worst one but last week, he ordered a beta blocker for someone who was allergic to them, but that wasn't the problem. When the nurse called him, he yelled at her and told her to just give the damned pill. A couple of weeks ago, he discontinued lasix for a congestive heart failure patient without ordering another water pill to replace it and then got mad at the nurse when she called him about it.\n\nI don't know how to say this so I'm just going to say it, I think that he's on something, drinking or maybe both but the changes started about a month after Dr. Jacobson died. At first it was just little things, nothing serious but it's been getting worse and now that you're back..... As far as the thing tonight, the nurse, the one that was so scared? She questioned the dose several times and got yelled at each time. She finally told Dr. Myers that she wasn't going to give it and that if he wanted the patient to have that much dig then he had to come give it himself or change the order. A little while later, he came up to the floor, asked for the med and pushed it himself.\"\n\nToni was sick. Kim was an opportunist but she wasn't a liar and she was a good nurse. The fact that she came to her spoke volumes.\n\n\"Do you have documentation to prove what you're telling me?\" Toni asked.\n\n\"I made copies of each order and even turned them in to the floor manager but nothing happened. As far as the other nurses are concerned, I told them to chart their asses off. I can only hope that they did but I can't swear to it and I made an extra set of copies of the orders and of all of the charting that I myself did. A couple of the other nurses are here tonight, I'll ask if they charted any of their conversations with Dr. Myers.\"\n\nAfter Kim left, Toni tried to lie down again but questions plagued her. Should she talk to Tom first or should she just go to the Director of Medical services? What if James really didn't have to die? In the end, she decided to talk to Tom; he had been a friend and deserved the benefit of the doubt. She took out her cell phone and went to her call list to be sure that she still had the number; she would try to call him before she left for home.\n\n****** Mason wondered it there was a full moon or something; all of the patients were restless with some of them requiring extra medications. It had been a long night and he missed his lunch time with Toni and like her he was grateful that he was off for several days after this shift, he would be at work for a couple of shifts that she was off but he was hoping that by that time, they would have progressed to talking on the phone.\n\nThere was another thing that he had decided, once they were officially a couple, he was leaving the hospital maybe even before that. Working here had done what it was meant to do and that was to get close to Toni, so there was no real reason to stay except for the lunches together. Joyce steered clear of him for the first four hours of their shift, partly because they were busy and partly because she knew that he was irritated with her. It wasn't until one when she tapped on his office door.\n\n\"Hey look, I'm sorry if I offended you in any way. My mouth does tend to run away from me but I promise to keep you and Toni out of anything that I say.\" \n\nMason hesitated and then spoke.\n\n\"Why say anything about anyone? This isn't high school and we're certainly not teenagers.\"\n\n\"You're right but rumor mills have been in existence for as long as people had the ability to talk but your point is well taken. Again, I apologize.\" Joyce said as she stood up to leave.\n\n\"Apology accepted.\" Mason said and watched her leave knowing that she wouldn't be able to help herself.\n\n********\n\nThe rest of the shift passed quietly for Toni. The patient that was sent to the ICU was stable and would probably be transferred back to the floor in a day or two. Toni took out her cell phone and called Tom Myers.\n\n\"Hey Tom, this is Toni Jacobson, where are you? Oh, ok, can we meet for a cup of coffee? Great! See you then.\"\n\nToni hung up and was packing up her things when Kim stuck her head in the door.\n\n\"Dr. Jacobson? I have those copies for you.\" \n\n\"Thanks Kim and thanks for coming to me, I'm sure that it wasn't an easy decision to make.\" Toni said taking the folder from Kim.\n\nKim gave her a small smile and walked away feeling proud that she had done something right.\n\nToni sat in the coffee shop and waited for Tom to show up. As she waited, she read through the papers that Kim had given her; they were organized chronologically making it possible for Toni to see the gradual changes in Tom's orders. Even the handwriting had deteriorated to the point where it looked nothing like the neat evenly signed orders of three years ago. Toni read the nurses notes and then rechecked the orders, Kim was right; the decline began soon after James died and then seemed to escalate when she came back to the hospital to work. ",
        "Toni folded the papers and stuck them in her bag when she saw Tom walk into the coffee shop. When he spotted her, he smiled and then waved before going to the counter to order his coffee. Toni watched him as he ordered the coffee noting that he seemed to be nervous. \n\nTom sat down across from Toni and smiled nervously.\n\n\"Hey Toni, I'm glad that you called.\" Tom said.\n\n\"Yeah, me too.\" Toni said. \"So how have you been?\"\n\n\"You know how it is, same shit different day.\" he replied taking a sip of his coffee.\n\n\"Tom, James dying wasn't your fault any more than it was mine.\" Toni said deciding to come to the point.\n\nTom played with his coffee cup but didn't respond.\n\n\"I still miss him and his goofy jokes and sometimes I find myself giggling at something that reminds me of the silly things that he used to do.\" Toni said.\n\n\"I miss him too.\" Tom said. \"He was like the brother that I wish that I had. That day when he... when he died was the worst day of my life and I know it was for you too. Toni, he loved you and Jamie so damned much and there was nothing that I could do to save him. I relive that day every time I close my eyes, Toni, I'm so damned sorry.\"\n\nToni reached across the table and took Tom's hand in hers, she knew then that James' death wasn't Tom's fault and felt for him. Tom had been doing the same she had been doing before she accepted James' death except that he was blaming himself to the point of being self-destructive and endangering lives.\n\n\"Tom, you know that if you were in trouble that I would do whatever I could to help you don't you?\"\n\nTom tensed and pulled away from her.\n\n\"Tom, you're in trouble, I see it in your mannerisms and.... I know that you've been making mistakes. You need to take a medical leave and get some help before you hurt someone, that patient could have died.\"\n\n\"Toni, I'm fine, it was an honest mistake.\" Tom said.\n\n\"If it were a one time thing I could accept that but Tom it wasn't and if you don't leave to take care of yourself you'll give me no option but to go to the Director of Medical Services.\"\n\nTom gave her an incredulous look, \"You... You wouldn't.\" he whispered.\n\n\"I don't want to but I will if you don't take a sabbatical or a leave of absence.\" Toni said her voice soft but firm.\n\nInstead of answering, Tom stood up and walked out of the shop without looking back.\n\nToni watched Tom leave and hoped that he got the help that he needed, he was too good of a cardiologist to throw his life away because of something that wasn't his fault.\n\n******\n\nJamie was waiting for her when she got home; he greeted her with a hug and then a kiss.\n\n\"Mom!\" He squealed.\n\n\"Hi to you too, what are you so excited about?\" Toni asked as Jamie took her bag from her and pulled her toward the living room.\n\n\"Jamie, wh.....\"\n\n\"Happy Birthday!!!!\" he yelled at the top of his lungs. \"Do you like it?\" he asked anxiously.\n\nToni looked at the plant holder that had obviously been made from a kit but lovingly painted by Jamie and cried.\n\n\"Baby, it's beautiful! And in my favorite color too!\" Toni said hugging him.\n\n\"Grampa helped me make it last night and gramma says that we can plant flowers in it when we move.\" Jamie said excitedly.\n\nToni had completely forgotten about her birthday, she actually had to think about how old she was. James was two years older than she was and he was thirty-seven when he died and would have been forty in a month so that made her thirty-eight and a widow. \n\n\"Happy Birthday!\" Ben and Barbara called as they came up from the basement each carrying card. \"We figured that we'd give you your gift when you got moved that way there's one less thing to worry about.\" Ben said.\n\n\"I don't need any gifts but thank you!\" Toni said hugging them.\n\n\"You go change and I'll make breakfast\" Barbara said shooing Toni to her room.\n\nHer cell phone rang just as she was taking her clothes off, checking the caller ID she recognized the number-Gina. Toni wasn't in the mood to fight with her but she answered the phone.\n\n\"Hi Gina.\" Toni said as she stripped out of her scrub bottoms.\n\n\"I just wanted to wish you a happy birthday and to apologize for my behavior these past few days. James wouldn't want us fighting and I... I was wrong to do what I did.\" Gina said.\n\n\"Thank you for the birthday wish and apology accepted, you're right, James wouldn't want us at odds with each other.\" \n\nToni hung up a few minutes later, finished undressing and was on her way to the shower when her phone rang again.\n\n\"Hello?\" \n\n\"A little bird told me that today was your birthday.\" Mason said.\n\n\"Did it now?\" Toni asked. \"Does the bird's name happen to be Barbara?\"\n\n\"I plead the fifth on that but I just wanted to wish you a happy birthday and I'll see you tonight.\"\n\n\"Tonight?\" Toni asked.\n\n\"Your mother invited me over for your birthday dinner.\" Mason replied.\n\n\"Oh, ok I'll see you then.\" Toni replied.\n\nToni hung up the phone and yelled at the top of her lungs, \"MOM!\"\n\n*******\n\nMason found himself wishing that he knew Toni a little bit better; if he did he would have gotten her something for her birthday. As it stood, generic flowers were going to have to do, he thought about roses but decided that roses would have been too intimate so he settled for mixed wildflowers with the predominant color being purple, Toni's favorite color; a little tidbit that he picked up from Jamie.\n\nJust from his own observations, Toni was unpretentious and very no nonsense. Maybe Ethan was right in saying that the mates usually knew that there was something different about them. Once Katrina had gotten over her shock, she took it upon herself to learn all that she could about vampirism; maybe it would be the same for Toni. Toni, he also noticed didn't take much at face value, when he told her what he was, she would want proof and that would be after she figured out that he wasn't kidding.\n\nThere was also the question of Jamie. That he would be loved and cared for as though he was a birth son was a given but Toni would have questions about his mortality. They had so much to talk about but first, they had to deal with their own relationship before talking about what it would mean for Jamie.\n\n\"Oh fuck it!\" Mason said as he picked up the phone to call the florist. When the phone was answered, he ordered a dozen red roses to be delivered to Toni's house. Neither of them were teenagers where they had to go through the whole looking for a mate ritual, it was time for him to start laying his cards on the table. Once the flowers were ordered, Mason laid down to rest. Tonight he was going to ask Toni out for an official date.\n\n*******\n\n\"What are you yelling about?\" Barbara asked although she already knew what the ruckus was about.\n\n\"Just what do you think you're doing?\" Toni asked when Barbara came into the bedroom.\n\n\"I guess you got a birthday phone call?\" Barbara asked smiling not in the least fazed by Toni's irritation.\n\n\"Yes little bird!\" Toni snapped. \"Will you stop with the matchmaking already?\"\n\n\"I'm not doing anything but....\"\n\n\"Doing what you promised that you wouldn't do-interfering.\" Toni interrupted.\n\nBarbara shut the door and sat down on the bed. Toni groaned inwardly, it was time for one of Barbara's woman to woman chats.\n\n\"He likes you.\" Barbara said, \"Actually, I think that he more than likes you.\" She amended.\n\n\"Mom...\"\n\n\"Jamie likes him and he is really good with him.\"\n\n\"Mom...\"\n\n\"I think that James would have liked him.\" Barbara said.\n\nToni didn't say anything, the truth of it was, James would have liked Mason. Had he lived, they would have made good friends.\n\n\"Alright, mom, look; I know that you're trying to help but please don't. I'm not looking to be involved with anyone right now no matter how nice they may be.\" Toni said as she sat on the bed.\n\nBarbara hesitated for just a moment before speaking, \"Toni, don't you like him just a little?\"\n\n\"It's not that I don't like him, I do but I think we're talking about two different kinds of like.\" Toni replied.\n\n\"Uh huh, if you say so.\" Barbara replied unconvinced. \"I'll let you shower while I make breakfast, dinner is at our place since you're place is packed up. I'd better call Mason and let him know.\" Barbara said standing up.\n\n\"Why do you like him so much?\" Toni asked as Barbara opened the door.\n\n\"I just do, I had a good feeling about him the first time I met him and I still do.\" Barbara replied. \n\nShe closed the door again and walked over to Toni and took her hands.\n\n\"Baby, if you decide to spend the rest of your life as a single woman, do it because it's what you want and not because you're afraid to love somebody again.\" Barbara kissed Toni's cheek and left her standing in the middle of the room.\n\nToni stood where she was for several minutes before going to the shower. She couldn't deny that there was some truth to that Barbara said and she did like Mason, but in what way? She had come to enjoy their lunch breaks together in spite of the rumor mill. She asked herself the hard question, what was she really afraid of? Was it like her mother said? What if she got involved with someone and they died? It wasn't unheard of for a woman to be a widow more than once or twice even.\n\nToni headed toward the shower and asked herself another question, how did she really feel about Mason Donahue? She liked him, he was a bit stuffy but that wasn't necessarily a bad thing and she felt comfortable with him. There was no pressure to be any more than just friends which was fine by her. In her heart of hearts, she was glad that he was going to be at the birthday dinner, she wanted to see if Gina would keep her word and behave herself, at least that's what she told herself. If not, she would have nothing more to do with her, she would allow them to see Jamie because he loved them and they him and besides, Robert wasn't the problem.\n\nBreakfast was ready by the time she was out of the showered and dressed, it was pretty much the same as the apology breakfast but with waffles instead of pancakes. Toni ate a little too much considering that she was going to be going to bed soon but it was so good. Jamie did his usual stealing from her plate when he thought she wasn't looking, it had become a game with them, one that was guaranteed to make him laugh which in turn made her laugh.\n\n\"What time is dinner?\" Toni asked.\n\n\"I told Mason six.\" Barbara replied.\n\n\"Dr Mason is coming?\" Jamie asked excitedly.\n\n\"He sure is.\" Barbara replied.\n\nJamie ran from the table and came back with a book that he had been reading from since the last time he saw Mason.\n\n\"I want to show him how good I can read!\" he said putting the book on the table.\n\n\"I'm sure that he'd like that.\" Toni replied yawning. \"If I'm going to be any good tonight, I need to be getting to bed. I'll see you tonight.\" Toni said standing up and Kissing Jamie on his head.\n\nOnce the house was empty and Toni was in bed, she thought about Tom Myers. For him to drink or whatever it was he was doing meant that he was in a lot of pain, she had her parents and Jamie but who did he have she wondered? When Toni thought about it, she couldn't remember Tom mentioning anything about family and she had never seen him with a woman. The only people that he did anything with outside of work was her and James and that changed once they brought Jamie home from the hospital and then they had become so wrapped up in each other that Tom had been left out in the cold. Toni felt a measure of guilt and made a sudden decision, she called Tom to see if he'd answer her call.\n\n\"I did what you wanted!\" Tom snapped as soon as he answered the phone.\n\n\"Tom, I was just calling to invite you to my birthday dinner is all.\" Toni replied realizing that calling him had been a mistake.\n\n\"Oh, I thought that you were checking up on me,\" Tom replied. \"Thanks for the invite but no, I'm leaving tonight for the 'Betty Ford Clinic' he added.\n\n\"Tom, I'm sorry that I wasn't a better friend to you after James died.\"\n\nTom didn't say anything for several seconds.\n\n\"Toni, this isn't your fault, it's mine for not going for help to deal with my grief and you were right to talk to me; I just wish that someone had the balls to do it earlier. Look, happy birthday and I'll call you when I'm back.\" Tom said and hung up. Maybe it hadn't been a mistake to call Toni thought as she put the phone on the table.\n\nShe was almost asleep when the door bell rang; she groaned and rolled out of the bed thankful that she had her pajamas on. She peeked through the window to see a florist van sitting in the driveway, who was sending her flowers?\n\n\"Toni Jacobson?\" The woman asked.\n\n\"Yes, that's me.\" Toni replied.\n\n\"These are for you and the gentleman requested that we tell you to read the card.\"\n\nToni took the roses and carried them to the kitchen; they were beautiful and smelled lovely. Toni sat the flowers on the counter and took the card out of the envelope and read it.\n\n\"Toni, once again a very happy birthday to you, I would be honored it you would go to dinner with me on Monday\" MD\n\nToni reread the card; it didn't mention anything about Jamie, Mason she realized, had just asked her out on a date in a very old fashioned way. That was the term that she had been trying to think of earlier, old fashioned but he couldn't be more than what? Forty? And that was pushing it. The question was what was she going to say? She already knew what her mother would say and her father too, even Jamie would say that she should go but should she?\n\nIt was just dinner, that's all she reminded herself as she looked at the roses and card again. What harm could there be in it? She asked herself as she walked back to her bedroom and climbed into bed.\n\n******\n\nMason had really hoped that Toni would have called him with a response but then he hadn't indicated that he wanted her to call. He would just have to wait until he saw her tonight, he didn't know how many people were going to be at dinner but he hoped to have at least a minute alone with her to ask her face to face to go to dinner with him.\n\nHe was gaining a whole new respect for what Ethan must have gone through although their situations were vastly different but the anxiety of waiting was the same. Mason lay on his bed and closed his eyes wondering it Toni liked the roses and then hoped he hadn't gone overboard.\n\nUnable to rest, Mason got up, turned on the television to the news channel that he always watched, he had to admit that he was nervous and he really didn't care for the feeling even though he knew that he would feel the so called \"rush\" if Toni said yes. It was time to ask himself the question that he been trying to avoid, was he in love with Toni? Not entirely but that was changing, spending time alone with her was going to be the key and dinner was going to be the start of that.\n\nHe almost called her but changed his mind, she might be asleep he realized as he paced the length of the bedroom restlessly. Tonight seemed a long way off.\n\n*******\n\nToni tossed and turned before finally giving up and getting up. She headed to the kitchen for a drink of water and caught sight of the roses and the card lying on the table. She reread the card and picked up the phone, if Mason was asleep, she would leave a message accepting the dinner invitation. To her surprise, he answered.\n\n\"Why are you still awake?\" he asked after greeting her with a warm hello.\n\n\"Couldn't sleep, how come you're still up?\" she countered.\n\n\"I couldn't sleep either.\" he replied. This was it, she was either going to accept or decline the dinner invitation. His stomach flipped as he waited for Toni to say something.\n\n\"Thank you for the roses, they're beautiful.\" Toni said.\n\n\"Beautiful flowers for a beautiful woman whose birthday happens to be today.\" Mason replied. \"Have you thought about my dinner invitation?\" he asked deciding to take the lead.\n\n\"I have and.... I would like to go to dinner with you.\"\n\nMason did a little jig while managing to sound calm. \n\n\"Do you like Italian?\" he asked.\n\n\"Italian is good.\" Toni replied not quite believing that she was actually saying yes to a date.\n\n********\n\nBarbara pulled out all of the stops for Toni's birthday dinner which included Toni's favorite dessert instead of the traditional birthday cake.\n\n\"She never did really care for birthday cake.\" Barbara explained when Mason asked about it. \"So we always have strawberry shortcake.\" she added.\n\nGina sat watching but not saying anything, she saw the little looks that Mason gave Toni and knew that his interest in her was far from platonic even though he acted otherwise, she was about to open her mouth when Robert kicked her. It was too damned soon, she thought as she clamped her mouth shut. Robert had warned her to keep her mouth shut going so far as to tell her that if she couldn't swear to it, that he'd leave her at home and make up an excuse for her absence.\n\nShe forced herself to smile and to join in on the conversation but she fooled no one, not even Jamie who was looking at her with a curious expression on his face.\n\nIt wasn't until later in the evening that Mason got a few minutes to talk to Toni alone.\n\n\"What would Jamie like to do on Sunday?\" he asked.\n\n\"There's some animated movie that he wants to see, I was thinking maybe the afternoon matinee.\" Toni replied.\n\n\"I'm good with the movie but I'm afraid the afternoon isn't a good time, anytime after five would be perfect.\" Mason replied.\n\n\"Oh, well alright.\" Toni replied. \"I think that there's a six o'clock showing, will that work?\"\n\n\"That would be perfect.\" Mason replied.\n\nThe evening finished with Jamie reading from the book that he and Mason had read from together the last time that they were together.\n\n\"That was very good!\" Mason complimented making Jamie beam with pride. \"The next time let's pick out something a little bit harder.\" Mason suggested.\n\nBarbara and Ben looked at each other and then at Toni sitting on the couch next to Jamie with Mason on the other side of him. They both wondered why Toni wasn't seeing what they were; Mason was falling in love with her and she, whether she was aware of it or not; more than liked him.\n\n*******\n\nThe evening ended shortly thereafter because Toni wanted to get a good night's sleep. The movers were coming early to begin moving things to her condo. Jamie was going to stay with James' parents so that her parents could help her finish any little odds and ends.\n\nMason once again insisted on providing dinner although everyone told him that he didn't have to.\n\n\"I really don't mind, I'll be at the condo by six. Are there any requests?\"\n\nChinese was the winner with Jamie requesting \"lots of egg rolls\"\n\nJamie kissed everyone including Mason good bye before leaving with Robert and Gina. Toni thought that he seemed to be a little reluctant but thought that it was her imagination.\n\nWhen Jamie was safely strapped in and they were on the way to Robert and Gina's condo, Gina noticed that Jamie was much quieter than usual.\n\n\"Jamie honey, don't you feel well?\" she asked.\n\n\"I'm ok.\" He replied.\n\n\"You're awfully quiet, are you sure that you're alright?\" Gina pressed.\n\n\"Gramma Gina?\" \n\n\"Yes honey?\"\n\n\"Why are you mad at mom?\" Jamie asked.\n\n\"I'm not mad at your mom.\" Gina said. \"Why would you think that?\"\n\n\"I dunno it just seemed like you were mad.\" Jamie replied and said no more.\n\n\"Out of the mouths of babes.\" Robert murmured just loud enough for Gina to hear.\n\nLater when Jamie was in bed, Robert had another talk with Gina.\n\n\"If a five year old picked up on your anger, then everyone else did as well and that includes me. Frankly, I've had enough of it. Toni has had a horrible three years and she's entitled to be happy and personally, I like that Mason Donahue and so does Jamie. Of all of us, you're the one that is still trying to keep her miserable because you are and that tells me something, you need to go talk to someone and I don't really care who it is.\"",
        "\"It's only been three years and I still miss him but the rest of you act as if he didn't exist. You all act as if... as if everything is normal and it isn't! His wife is gallivanting around with another man when she should still be mourning James and you all are encouraging it!\" Gina exclaimed crying.\n\nRobert sighed and then hugged her, \"Gina, there isn't a day that goes by that I don't think about and miss James but sweetheart, life does go on as it should. Toni is a beautiful young woman who has already come to grips with James' death and is ready to move on and I think that you need to as well. Tomorrow, call your therapist and make an appointment.\"\n\nGina nodded her agreement, Robert was right about everything, she had to let James go.\n\n*******\n\nThe movers arrived bright and early and were soon loading the truck with the things going to the condo, once they were done, Toni would come back and cover whatever furniture was left with sheets, set up the alarm system and leave. Toni walked around the house taking the time to spend a few minutes in each room remembering whatever events had taken place there. The last place she went was their bedroom; she picked up the box of disc, took a last look around and walked out. The saying 'today is the first day of the rest of your life' went through her head as she set the alarm and walked out.\n\nJamie was already at the condo with her parents when she got there eager to begin decorating his room. His box of new posters and whatever else that he was going to decorate his room with sat on the floor by his feet. He greeted her with his standard enthusiastic hug and kiss.\n\n\"Mom!\"\n\n\"Good morning to you too!\" Toni said returning the hug and kiss.\n\n\"Did you eat this morning?\" Barbara asked.\n\n\"Not yet but I will.\" Toni replied looking around. \"Where's Gina and Robert?\" she asked.\n\n\"Gina had an early appointment; they dropped Jamie off on the way.\" Barbara replied.\n\nAs soon as they were inside, Jamie took off to his room and shut the door so that he could decorate in private. Toni wondered what the big secret was but didn't ask. In a way, she was glad that Jamie was out of earshot, she wanted to ask her parents to baby sit in private.\n\n\"Mom, are you doing anything on Monday night?\" she asked.\n\n\"Not that I know of, your father will probably spend the evening looking at ESPN but I don't think that we're going anywhere. Why?\"\n\nToni took a deep breath.\n\n\"I'm going out to dinner with Mason and....\"\n\n\"I knew it!\" Barbara squealed. \"I knew it! Ben did you hear?\"\n\n\"I heard.\" Ben said quietly with a smile that Toni recognized as one of approval.\n\n\"Hold it you two, it's just dinner.\" Toni said trying to curb their enthusiasm.\n\n\"What time? No, better yet, Jamie can spend the day and night with us. He likes watching sports with his grampa.\" Barbara said. \"That way you won't feel rushed to get home. Where's he taking you?\"\n\n\"Mom, slow down.\" Toni said laughing.\n\nThe arrival of the moving truck curtailed any further conversation. As per their agreement, the movers started with Jamie's room so that he could start to unpack his things. While the unloading was happening, Ben and Jamie ran out to get food for breakfast giving Barbara a chance to talk to Toni alone.\n\n\"Robert says that Gina is finally going to get some help in dealing with James' and he wanted us to know that anything that Gina said or did was out of grief.\"\n\nToni didn't say anything at first, she wasn't completely convinced that grief was all that motivated Gina but in the interest of family harmony she accepted it.\n\n\"James' dying affected so many people outside of this family.\" she said and then told her mother about Tom.\n\n\"You don't think that it was negligence do you?\" Barbara asked.\n\n\"I would be less than honest if I said that the thought didn't cross my mind but no, I don't believe that it was negligence. We all knew that he could die at anytime; it just happened a lot sooner than any of us wanted, at least Tom's getting help and I need to be a better friend to him. I had my family but Tom had no one to help him through James's death, I should have been there for him.\" Toni said.\n\n\"You also had a full plate.\" Barbara reminded her.\n\n\"I know but if I had just reached out to him, he might not be where he is now.\"\n\nSeveral hours later, the movers were gone and the condo was full of boxes waiting to be unpacked. It reminded Toni of why she had always hated moving.\n\n*******\n\nThe day went slowly for Mason; he could hardly wait until it was time to go to Toni's. He was in the middle of making the fried rice when he had a thought, Dudley. He hadn't thought to tell him not to mention anything about him buying the condo. He turned the stove down and reached for his phone. Fortunately, Dudley was in.\n\n\"This is Mason Donahue calling, I bought th..... Yes. Oh congratulations, I'm glad that I was able to help you reach your goal.... Yes. The reason for my call is to ask a favor of you. I don't mind that you mention that the condo was sold but I would appreciate you not saying by whom. Yes I value my privacy and could you also make sure that your co-workers are aware? Good. Thank you and enjoy your Hawaiian vacation.\"\n\nThat done, Mason returned to the stove and finished cooking the rice. He turned the burner down to low and began to make the egg rolls. He hadn't asked Jamie what kind he liked so he was making some of every kind and creating a few as he went. He wondered if Toni liked to cook but suspected not, every time the subject of food came up, it was either Barbara cooking or takeout. If not then that was fine, he enjoyed cooking and didn't cook enough as far as he was concerned. The egg rolls were assembled and he began to work on the chicken lo mein and beef and broccoli, he knew that he was making too much food but it the leftovers would be good for lunches.\n\nBy four-thirty, the egg rolls were frying and the other food in airtight containers, the condiments were already packed and ready to go. By five, Mason was in his car and headed over to Toni's condo, the smell of the freshly cooked food making his stomach rumble. \n\nThe moving truck was already gone which freed up a parking space close to the condo, as soon as he got out of the car, he heard Jamie calling him.\n\n\"Dr. Mason!\" a few minutes later, Jamie was at the car offering to help carry something. Mason gave him the lightest thing that he could find and followed him up to the condo. Ben met him at the door and took a box from him.\n\n\"Where do you go that you get nice containers like these?\" Ben asked.\n\n\"I made dinner.\" Mason replied.\n\n\"You cooked all of this?\" Toni asked.\n\n\"I like to cook so it was no problem.\" Mason replied.\n\nAfter dinner, everyone was stuffed; Jamie took Mason to his room to show him the posters that he hung up. \"Dr. Mason, do you like my mom?\" Jamie asked out of the blue.\n\nThe question caught Mason off guard but he answered honestly.\n\n\"Yes, I like her, is that alright with you?\"\n\n\"That's good, I like you too.\" Jamie replied as he pulled out the next book that he wanted to read with Mason.\n\nThe book was a little advanced for Jamie but Mason didn't discourage him.\n\n\"That's a good book, how about we start it later?\" he said.\n\nGina and Robert had just arrived when they rejoined the others, although they had already eaten, Robert had to try Mason's homemade Chinese food.\n\n\"This is excellent!\" he exclaimed and offered a bite to Gina who declined.\n\n\"We just wanted to stop by and bring you a house warming gift.\" she said as she handed Toni a box. \"I know that you like candles so...\"\n\n\"Thank you Gina.\" Toni said as she opened the box to look at the candle. It was a beautiful deep purple that would look nice in the living room. \"It's beautiful.\" Toni said.\n\n\"It's one of those soy ones that are supposed to last a long time; I got myself and Barbara one too.\" Gina added.\n\nToni hugged Gina recognizing the candles for what they were, an apology but this time a sincere one. As she hugged Gina, Toni whispered in her ear, \"I will never forget James.\"\n\nGina hugged Toni tighter and then broke away sniffling. \"I think I will try one of those egg rolls.\"\n\nThe men and Jamie put the beds together while the women unpacked the kitchen, it was tense at first until Gina started laughing. Toni and Barbara looked at each other and then her.\n\n\"I don't know why I just thought about this but Toni, sweetie, why do you have pots and pans when you don't cook?\" Gina asked,\n\n\"Because... oh hell, I don't know! James would never let me near the kitchen.\" she replied seeing the humor in the whole thing.\n\n\"I was just asking.\" Gina said still chuckling.\n\nThe men heard the laughter and relaxed, as far as Mason was concerned, another piece had just fallen into place. He had the approval of Toni's parents, Jamie and now James' family although their approval meant nothing. He had approval from the people that he wanted it from, Barbara, Ben and Jamie. Now there was just Toni.\n\n*******\n\n\"Mom! Hurry up it's almost time to go!\" Jamie called into her room. \n\n\"Coming!\" she called back grumpily. \n\nIn less than an hour, Mason had taught Jamie how to tell time and now he was the official time keeper.\n\n\"Mom!\" Jamie called again this time his impatience clear.\n\nToni ignored him and glanced at the clock, she still had ten minutes before Mason got there. She stood in the large walk in closet and debated as to which top she should wear and finally decided on the mint green long sleeved top and then decided to change her shoes while she was at it. By the time she was done with her fashion revisions, it was almost five-thirty and she wondered why Jamie wasn't yelling for her to hurry.\n\nShe grabbed a jacket and rushed out of the room to find Jamie sitting on the sofa with Mason reading out loud.\n\n\"Sorry guys.\" she mumbled.\n\n\"No worries, I already have the tickets so that we won't have to stand in line.\" Mason said as he took the book from Jamie and closed it.\n\nJamie jumped up and grabbed his jacket, \"come on you guys!\" he said and ran out of the door.\n\nAs they walked by the condo next to hers Toni said, \"I heard that someone bought it but I haven't seen him yet.\"\n\n\"How do you know that it's a male?\" Mason asked.\n\n\"Because I asked.\" Toni replied. \"I want to know who my neighbor is but anyway; all that they would tell me was that it was a man and that he wanted no information about him to be given out. I find that kind of suspicious.\"\n\n\"I don't know.\" Mason said with a shrug, \"maybe he just likes his privacy.\"\n\n\"Then why buy a condo where you're going to have a neighbor?\" Toni asked.\n\nMason didn't reply as he unlocked the car doors and held the door open for Toni and then Jamie. He hoped that the conversation about the condo would be dropped and thanks to Jamie it was.\n\n\"Are we going to have popcorn and candy?\" he asked as soon as Mason was in the car.\n\n\"Popcorn yes, candy no.\" Toni replied firmly effectively ending the pitch for candy before it even started.\n\nThe line for the movies wasn't as long as Mason had anticipated which was why he purchased the tickets early. He led them to the theater, found seats and then left again to get the refreshments. Jamie liked his popcorn plain as did he but Toni was the salt and butter queen. \n\n\"Make sure that they fill the bag half full, put the butter on and then they can add the rest of the butter on the top. Don't worry about the salt, I have my own supply.\" she told him. \n\nHe watched in amazement as Toni pulled out a salt shaker that contained butter flavored popcorn salt and liberally doused the butter soaked popcorn.\n\n\"You're really going to eat that?\" he asked.\n\n\"Yep, want some?\" Toni asked.\n\n\"No, thanks.\" Mason replied as he watched her put a few of the kernels into her mouth.\n\nToni's eyes closed in bliss as the flavor of the popcorn, salt and butter exploded on her tongue. It had been months since she and Jamie had been to a movie although if he had his way, they'd be at a movie every week.\n\nMason watched Toni's reaction to the popcorn and got an idea of what she would look like as she was being pleasured. It wasn't a good thing to think about he realized as he felt his cock which hadn't been inside of a woman since Gretchen tingle. \n\nHe made himself stop watching Toni and turned his attention to Jamie.\n\n\"Do you need the bathroom before the movie starts?\" he asked.\n\n\"I think that maybe you should go.\" Toni said remembering the last time that she and Jamie were at the movies. He had to go soon after the movie started and then they had a hard time finding their seats again.\n\nJamie reluctantly agreed, sat his popcorn down and waited for Mason. The theater was almost full so when they left, Toni put her Jacket in Mason's seat and sat Jamie's popcorn in his. Several minutes later, a couple came in looking for seats that were together, spotting the two seats next to Toni, they edged their way in crawling over the people on the end.\n\n\"I'm sorry but those seats are taken.\" Toni said politely.\n\nThe man of the couple looked put out and was ready to leave but the woman stopped him.\n\n\"How do we know that they're taken?\" she asked.\n\n\"Come on babe, the lady says that their taken.\" the man said.\n\n\"But how do we know? She might be one of them who don't like to be touched or somethin'\" the woman said with a slurred voice.\n\n\"I assure you that these seats are taken.\" Toni said firmly.\n\n\"Mom?\" Jamie asked from behind the couple.\n\nThe woman turned around and looked at Jamie.\n\n\"Aren't you a cutie pie? I could just take you home with me!\" she slurred.\n\nMason finally reached the seats; he had to wait until everyone on the end got up so that he could get in.\n\n\"Toni is there a problem?\" he asked.\n\nThe man's eyes widened when he saw Mason. He took the woman by the arm and began to lead her away mumbling his apologies.\n\n\"Can't leave you alone for five minutes can we?\" he teased.\n\nThe previews began so Toni didn't get a chance to respond, if she would have, she would have been shushed by Jamie; the previews were his favorite part of going to the movies.\n\nThroughout the movie, Mason kept looking over at Toni and wondered what she was thinking. He wondered if she was beginning to feel more than the pull of mates and if she knew that he was developing feelings for her. Barbara and Ben knew that he was and even Jamie knew that's why he asked him if he liked his mom.\n\nAfter the movie, Jamie begged for ice cream. \n\n\"Not tonight.\" she said. \"You ate your entire bag of popcorn and drank all of your soda, add ice cream to that and we're talking a big stomach ache.\"\n\n\"But mom...\" Jamie started to say.\n\n\"Next time we'll go for ice cream alright?\" Mason said.\n\nJamie pouted but agreed. \n\nToni was surprised that Jamie had given in so easily, usually she had to get downright firm with him in order for him to give up. \n\nJamie was out of the car and running toward the building when Mason called him back. When Jamie reached him, Mason knelt down to eye level and took him by the arms.\n\n\"A man never leaves a woman, young, old, beautiful or not to get in or out of a car alone. A man escorts the woman to her door ensuring that she reaches her home safely. Do you understand?\" Mason asked.\n\n\"Yes Dr, Mason.\" Jamie replied.\n\n\"Good, shall we escort your mother to your condo?\" Mason asked.\n\nJamie nodded, went to the passenger side of the car and with Mason's help opened the door. He watched as Mason offered his hand to Toni and made sure that she was clear of the car door before closing it. Mason looked down at Jamie and gave him a wink as Jamie took Toni's free hand and walked to the condo.\n\nMason stayed long enough to wait for Jamie to change into his pajamas and to read a short story with him before saying his goodnights. At the door, he looked down at Toni, bent down and kissed her lightly on the lips before walking away without giving her a chance to respond.\n\nToni was surprised and then speechless. The kiss wasn't a platonic one by any stretch of the imagination but it wasn't erotic either, it was a simple statement. Mason Donahue was romantically interested in her."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "interracial romance",
        "interracial novella",
        "interracial drama",
        "drama",
        "bbw",
        "romance novella"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mason-ch-11"
}