{
    "title": "Sexual Positions for Lovers",
    "pages": [
        "\"Ouch!\" I cried.\n\n\"That hurts, does it?\" replied my chiropractor, a concerned look on his face.\n\n\"Sure does, doc, I...ouch!\"\n\n\"There too? Gosh, you've really wrenched your back, son. How'd you do it?\"\n\n\"Well, I...you see...my wife wanted to...that is we wanted to try...\"\n\n\"You didn't try fucking in the 'wheelbarrow' position did you?\" He said, cocking one eye. He was, of course, referring quite inelegantly to the position where the lady is supporting herself on her hands while I hold her legs in my hands like the poles of a wheelbarrow and, with great strength and finesse, pound her like day-old veal. \n\n\"As a matter of fact...\" I said weakly, wincing in pain as I tried to get up from the exam table.\n\n\"Take it slow there, buddy,\" he said knowingly. \"I know how much it hurts. I hate that position \u2013 but my bank-book loves it.\"\n\nAnd they say watching too many adult movies can't be bad for your health.\n\nIf there's one question I've been asked over and over, it's \"Can you tell me some good sexual positions?\" \n\nUnderstandable, really. Lovers do get bored with fucking in the same position time and time again, and if there's one aspect of sex that's not overly intuitive, it's positioning yourself or your lover during sex - predominantly intercourse. And its true, adult movies are not the best teachers. First of all, in order to get the best camera angles, the partner's faces usually are not close to each other. Second, and more important, it's not real life, it's a movie. Not that many people I know are fucking their girl leaning on a staircase, both standing, her leg over his shoulder. It looks fantastic, I admit, and is especially easy with his 10-inch cock enabling him to fuck her from another zip code. In real life, though, she'd need a half-hour of yoga stretching and he'd need a back suitable for moving furniture. There are some good standing positions, and we'll get to them later.\n\nAnother challenge of positioning is flow. You're in the middle of making love and you decide to switch positions to liven things up \u2013 just as she was about to cum. Can you say, \"knee to the groin?\" If your object was to give her an orgasm (and that's always my object \u2013 I'm very results oriented), you've just killed the flow \u2013 the lovemaking flow \u2013 and have to start back at square one. This does not make you popular. \n\nThere are a great many benefits to having a sizable repertoire of different positions, though. First, as I touched on, is the variety factor \u2013 not doing the same thing in the same way every time. This helps to keep sex fresh and unpredictable. It's like driving home a different way every time you leave work. You're still going to the same home, but varying the path enables to you see new scenery each day. Then, even your conventional path is nice to return to now and then. \n\nSecond, making love in different positions hits her orgasmic centers from different angles. Look, I'm a man and I write from the perspective of a man. When I make love to a woman, I want her to know she's been made love to. I want her to remember me. When she's had a clitoral orgasm because her clit was riding my cock and hitting my pubic bone, and then she has a shuttering, entire body G-spot orgasm because she was on top and I was stuffing her as full as a ten pounds of meat in a five-pound container, then I'm a happy guy. She doesn't mind, either.\n\nThird, and again this is from my perspective but it may be the same for her; I just love to see a lovely, naked female body from different angles. When you're on top, fucking like you've just been plugged in and her breasts are shaking, her mouth wide open with wordless passion...God, that's hot. When you're lying side by side, and you're not sliding in and out as much as you are up and down, your eyes meeting hers and perhaps your lips touching; it's very sensuous and intimate. And doggie style \u2013 my favorite \u2013 your cock feels like it's sliding down a mile-long tunnel, and you can hold her hips or her shoulders. I just love \u2013 absolutely adore \u2013 the view of her ass and back, her head hanging down. And if she turns around and looks in my eyes with that smoky, \"you like how that feels?\" look \u2013 I'm just gone. I can cum in her or shoot all over her back and ass. It doesn't get any better. \n\nSo there you have it; it's how it looks, how it feels, and how it presents variety. Now let's get to some specifics.\n\nI must say that it is jut not possible to describe every position in one article. There are far too many variations, and many I'm sure I've never heard of and would like to try and my phone number is...just kidding. It is beyond the scope of one person to try and tackle them all. I'd like to go over the most popular and favorite positions, though. And of course I would like to hear yours. \n\nOne more thing; positions are sometimes dictated by body types. If he's 6'5\" and she's 5'2\", it's kind of hard for her to put her legs over his shoulders unless she's double jointed or a yoga instructor. If both lovers are...how can I say...a little large, then missionary can be difficult but doggie style can work just fine. Otherwise, take your pick or try them all. Here we go:\n\n<P ALIGN=\"CENTER\">Missionary Position: A great place to start  Description: Well, uh, man on top! \n\nYeah, this is the one your parents and their parents used, but \u2013 it works well! You're on top of her, propped up on your elbows, sliding in and out and hey...it's all good. You can look into her eyes, talk to her, kiss her, hold her face \u2013 you name it. She can have her legs spread, or hooked over your calves, or even wrapped around you. This is perhaps the most intimate of positions and there are quite a few variations.\n\nYou can, for example, have your hands on her ass and pull her in with each stroke, or she can pull you in for maximum penetration. Here's a nice twist: Lie on top of her so that your bodies are in full contact from top to bottom. This has been called the coital alignment technique, and it works best when the guy is not 350 pounds, by the way. You slide a few inches higher up, or forward, from the typical missionary position. The base of your penis should naturally rub against her clitoris. Then when you're sliding up and down in a sort of rocking motion, rather than in and out, whew...it's a collect call to orgasm central for both of you. And it can take a while, which is always a good thing -- a really good thing. \n\nExperiment with different leg positions if you like; together, apart, wrapped around -- there's no wrong way. But keep this in mind (guys); when your legs are close together, you seem to cum quicker. I'm not sure why this is the case physiologically, but when you keep your legs together and tense up \u2013 whether you're on the top of bottom, you're likely to cum quicker. My point is this: if you want to last -- and who doesn't -- keep your legs further apart. My personal preference to illustrate this point is to position myself on my knees, my legs spread (picture a baseball catcher \u2013 but just for a moment!), and her legs wrapped around me. I can hold her legs apart by her ankles (very hot, believe me), or wrap them around me. I may hold her hips, hold her hands, play with her breasts \u2013 whatever. The point is, I can last for quite a while with my legs apart, and pound away to my \u2013 and her \u2013 hearts delight.\n\n<P ALIGN=\"CENTER\">Woman On Top: What a view!  There are so many good things about a woman being on top of you that I can't begin to describe it. In fact...name one bad thing! First of all, my God, what a view. Her face, her neck, her breasts, her stomach, her pussy \u2013 all in full view and shakin' on top of you, my friend. Feels great, looks great \u2013 man, I wish I was there to share this moment with you!\n\nWhen a women is on top, your hands are free to roam. Rub her sides, take your face tenderly in your hands, cup her breasts in your hands, hold her hips \u2013 just do what comes naturally (In my opinion, they ALL come naturally!)\n\nAt the same time, your cock is buried to the hilt inside of her, and she's moving her body at her own pace, her own rhythm. There are few, if any, positions where a woman can cum stronger and fuller than when she's on top of you \u2013 believe me. Your cock is probably hitting her G-spot, bumping her cervix and perhaps, if she is high up enough on you, smashing her clit (if not, she can rub her own clit to orgasm \u2013 easily \u2013 or position herself so that the base of your cock hits her clit better). \n\nOn top of you, your lover can use more of a rocking motion than an up-and-down pump, which keeps your cock inside firmly. At the same time, she can position herself to bring your cock in contact with her G-spot for the kind of full-body orgasm that will have her shaking from head to toe, calling you all sorts of great names or cursing like a sailor \u2013 and hopefully all three. She'll definitely want a return engagement.\n\nAs for you, my passive friend, you can let her steal the show, or use your arm strength to move her up and down like a piston on your cock. Or, speed up the pace by rocking her back and forth faster and faster, working her into a quivering frenzy. This is almost always a \"sure to cum\" position for her, so use and enjoy it. <P ALIGN=\"CENTER\">Doggie Style: Bring out the animal in you  OK, I admit it. Everyone has their favorite position and this one's mine. It's so hot, it's so raw, it's so...the essence of sex. She's on her hands and knees and you're pounding her like a machine, going impossibly deep, your balls slapping against her ass while she screams, \"God...yeah...fuck me like a ten-dollar whore!\" Alright, I made up that last part...or was I just remembering the last time I was with a ten dollar whore? No matter. I have heard some women say that they feel this position is somewhat subservient. Yeah...and what's your point? No really, it's not a matter or respect. No one loves and respects women more than me. So much so, that I revel in the idea of making them feel wonderful, and this position hits the target. Truth is, most women absolutely love it.\n\nSome men consider themselves leg men, others tit men and so forth. I personally like a great smile and a girl who loves to laugh...especially when she has great legs and tits. But I digress. Have you ever seen the dresses of movie stars from the back, how many are low cut to the point where they begin just a hair above the crack of their ass? That's because there is, and this is my honest feeling, nothing sexier than a nice back. I love a little definition in her upper back and shoulders. How her sides taper in to her ass. The lovely line down the center of her back. God, I love the way that looks. Now imagine it as you move your hips back and forth, filling her to the brim with hard cock. It's the bomb. Not to mention the fact that you get a great view of her ass and legs.\n\nFor women, this position has its benefits as well. First of all, as I said, they too love the semi-nasty \"fuck my brains out\" connotation of this position. There's something very primal about it. But there's a lot more to it. A man can easily go balls-deep in this position, shoving his entire five inches (making myself feel like a porn-star here) into her. Since the much talked about but hard to find G-spot is right behind the front wall of the vagina, fucking her in the doggie-style position has the right angle to seek and destroy, meaning another one of those shattering orgasms. Not bad, huh?\n\nKeep this in mind, too. You can stay relatively straight and hold her hips, or lean forward and hold her shoulders, which I personally like because you can really go deep this way. Or, use your hands to caress her breasts, rub her clit, or any other of a variety of other ways to make it even hotter. You haven't lived until she's so hot that she takes your fingers in your mouth and sucks on them while you...well, you get the picture.\n\nLastly, doggie-style is a natural for anal sex, for those of you who like that sort of thing, God bless you. A little lube, the right music, a glass of wine...don't get me started. Just do it.\n\nBy the way, nothing says that doggie style is reserved for the bed, floor or couch. Standing doggie is great, too. Bend her over the sink while she's putting on her makeup and you may just make her day \u2013 and yours as well. Over the back of a couch is good, too, because she can sort of sink in a bit \u2013 comfortably \u2013 while you deliver the mail (you think it's easy to come up with new ways to say it?)\n\nI'm sure you've heard the expression, \"There's a fine line between pleasure and pain.\" I'm not getting into a whole discussion of S&amp;M or the final points of anal sex here. What I'm saying is that often, that extra little bit of stimulation, such as squeezing her nipple or her ass at just the right moment, can have explosive consequences. In doggie style, you can gather her hair in your hand and hold it like a rein, if she likes it, then pull (not too hard!) when she's getting close to the big \"O\" and she may experience that pain/pleasure connection. Understand; I'm not talking about pulling her hair like a 5-year old does. I'm talking about gathering all of the lovely hair you can fit in your hand and pulling \u2013 firmly, but not so hard that you're pulling her head and hurting her neck. My motto, as you may have guessed, is that if you don't try it, you'll never know! <P ALIGN=\"CENTER\">Cowgirl: The ride of your life  Image yourself sitting on a couch, your legs naturally hanging off. A buxom female climbs on top of you, inserting your cock deep (and there's no other choice) inside of her. Now you're holding her hips while your cock does a dance inside her hot, wet pussy which is sliding all over your...am I dreaming? Maybe. But this is known as the cowgirl position, except that instead of riding a horse, she's riding your pole. If she were to turn around, giving you an exquisite view of her back, and allowing your hands to squeeze her nipples, cup her breasts, rub her clit \u2013whatever those playful hands want to do \u2013 this is called reverse cowgirl.\n\nEither way, the position is wonderful. First of all, you're so deep inside that you may be bumping up against her cervix and sending shivers throughout her. Second, when she's facing you, you can watch her face while she goes through the various stages of ecstasy leading to inevitable orgasm, and how hot is that? Ever see a girl throw her head back, her mouth wide open, while she's hit with a tidal wave of pleasure? Let me tell you... it doesn't suck. Makes you want to cum like a fire hydrant. \n\nHer too, because in this position, your cock is sliding up and down her clit with each thrust. And what does she see? She can look into your eyes, hold your strong (well, they should be) chest and shoulders and watch as you, too, go through the phases of passion that lead to your climax. As the expression goes, it's a win/win scenario.\n\nHer legs can be on the ground or on your legs. In reverse cowgirl, you can both watch a porn while you're making love! Is that fun?...God, yes. There's also reverse anal cowgirl of course, which is only as much fun as having your first drink after a week in the desert.\n\n<P ALIGN=\"CENTER\">Spooning: Your favorite Dessert  At last, a position named after a utensil. What'll they think of next...forking? Get it? Sorry.\n\nSpooning gets its name for the way two spoons fit together when you stack them. In fact, three spoons fit together just as well, so brings some friends and...\n\nPicture this. It's morning and you're both just barely awake and, of course, horny. There are few things and nice as using that morning hard-on. Puts a smile on your face until lunch, when it's time to go again. You're on your sides and cuddling, your cock gently nudging her ass. You kiss her neck...she stirs. You reach around her back and gently take her tits in your hands, lightly rubbing circles around her nipples. She moans, and her hips begin to buck slightly, grinding her ass into your willing cock. You move your hand to the inside of her warm thighs and tickle her clit with your index finger. Now she's beginning to really press into you, and her moans are unmistakable. She takes your cock in her hand and places it at the entrance to her now moist pussy and with one quick thrust, you're in heaven. Now you move with each other, your cock in her pussy, rubbing her clit as she wakes up to her first orgasm of the day...\n\nNow doesn't that sound like a great way to wake up? It doesn't have to be in the morning only, of course. Spooning is very nice, very intimate, with lots of body contact and your choice of holes, if you like. You can, naturally, make it an aerobics class by holding her hips and slamming into her like a professional wrestler, but I find doggie style more suitable for heavy pounding.\n\nLastly, spooning is not simply your chest to her back. You can be behind her on your knees, while her legs are together, and penetrate nicely. She can spoon you, by lying down on top of you, her back to your face and her legs up, as you guide your cock in and out of her. One of my personal favorites is when she's on top and I'm entering from behind, and she turns her upper body to face me as we fuck deeply. A combination of doggie and spooning is when she's lying on her back, legs together; you're on top of her, your legs on the outside of hers. Since her legs are together, her pussy so tight, it feels like...well, it feels good.\n\n<P ALIGN=\"CENTER\">Side-by-Side: The angle of the dangle  Side-by-side encompasses a variety of positions including facing each other, perpendicular to each other, scissors, etc., so let me explain them each. In its most basic form, you're facing each other, and she places her top leg over yours, giving you access to her pussy. Again, this is intimate, slow moving, eye contact love making. Very good for those in the first six months of a relationship. (Do I sound jaded? No...)\n\nNext, she's lying on her side, you're on your knees again. I swear, you've been on your knees so much, you might as well learn to lay carpet, not just your lover. Anyway, you're holding her leg in the air and straddling her other leg. This can be during the next six months, because you can do some serious fucking in this position. If she's flexible enough \u2013 love that yoga \u2013 you can bend her leg over to your face and kiss her shapely calves while you're plunging in and out of her...I think I need some water...Or rest her leg on your shoulder.\n\nHere's a winner. She's lying on her back, and you're lying on your side, perpendicular to and facing her. It looks like an \"X.\" Now, your legs are straddling her left leg, and her right leg is either resting on top of you or you can be holding it up by her thigh. You'll have a lot of fun in this position. You can look at each other, laugh, talk, curse, yell \u2013 whatever. It's also a great position if she wants to use a vibrator on her clit while you're sliding in and out. This is usually called the scissors position.\n\n<P ALIGN=\"CENTER\">Stand and Deliver  Standing and fucking is just plain cool. Whether you're in an elevator, against the wall, next to a couch, the bed, in a dressing room \u2013 anywhere. Standing intercourse says, \"I can't wait, fuck me here and now.\" One of the best standing fucks you'll ever see is between Tony Tedeschi and Melissa Hill in the adult film \"Bad Wives.\" She's leaning against the wall, her back arched and her gorgeous \u2013 and I do mean world-class - ass sticking high in the air as he just fills her full of cock and pounds away. An excellent example of just how hot a standing fuck can be.\n\nIf you're a leg man, like me, you can look down and see her calves and feet. If she likes, she can lean against the bed or couch for stability. How great does it feel to be standing in back of your lover, hands on her hips or wrapped around her back to caress her breasts while you take her breath away with steady thrusts? Too good to be true, that's how.",
        "If she is much smaller than you, she can be on her hands and knees on the bed while you make love. If she's nearly as tall as you or taller, her ass may be too high up for comfort, and standing at the edge of the bed works better. I've stood at the end of a couch while my (ex) girlfriend stuck her ass over the edge. As I pounded her into near oblivion, my cock also rubbed the armrest, which although I guess it wasn't great for the couch \u2013 was pretty great for me.\n\n<P ALIGN=\"CENTER\">Acrobatic Positions \u2013 No end in sight  As I mentioned in the beginning of the article, there is no shortage of creative ways (and places) to have sex. And I don't believe that one article can cover them all.\n\nIf she wants to support herself with her hands on the bed, while you hold her legs in mid air (the aforementioned wheelbarrow), it's great fun, and an aerobic workout as well.\n\nShe can also sit on your lap facing you, your legs around her and hers around you, holding onto each other or leaning back while your cock impales her.\n\nShe can sit curled in a \"C\" position, lying on her back with her legs bent towards her head, while you stand or squat above her and pushes your cock down into her. Sometimes called a piledriver.\n\nShe can lie on the bed with just her shoulders touching, her back arched and her legs wrapped around you, while you're on your knees inside of her.\n\nAgain \u2013 too many to mention.\n\n------------------------------------------\n\nI want to conclude with these ideas. Making love in different positions is a great way to keep things fresh. In fact, there are many different positions for oral sex alone \u2013 but that would be an entirely different article. You'll find your favorites, you'll invent your own, though the body can only be comfortably put into so many positions.\n\nBut it all revolves around how it feels to you. Does it hit her clit, or her G-spot? Do you like the view? Is it sexy enough for you, intimate enough, raw enough? \n\nMy friends, sex \u2013 good sex \u2013 is about desire. If you desire someone enough, the position doesn't matter much at all. But if you fuck enough (what's enough? Hmmm...) you'll soon grow accustomed to the same few positions and, as they say, familiarity breeds contempt. You'll grow stale, bored.\n\nIt just makes sense, then, to change up now and then. Or every time if you like! I hope that I've highlighted some new ideas for you. If you have any of your own you'd like to share, email me. Best of luck, and enjoy. Thanks for reading."
    ],
    "authorname": "BatsandGlamour",
    "tags": [
        "thing god",
        "cum quicker",
        "fucking position",
        "bumping cervix",
        "facing legs",
        "breasts rub",
        "cock hitting",
        "cowgirl position",
        "reverse cowgirl",
        "sexual positions"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/sexual-positions-for-lovers"
}