{
    "title": "Home for Horny Monsters Ch. 78",
    "pages": [
        "Hi all!\n\nHere it is, the exciting conclusion to book five! (Just this book, not the whole series)\n\nIt's always a process to share a story that takes the better part of a year to complete. Thank you to everyone who has stuck with me this far, and hello to those of you who are new. I appreciate every single one of you who have become invested in this silly tale of mine, and your enthusiasm has been such a huge part of my continued success.\n\nAt the end of this chapter, I have some thoughts to share, for those who like that sort of thing. Before you leave, make sure to leave me some stars, a comment, or even send me a nice letter. These are all things that help others find the story, and keep me motivated when I'm struggling to succeed.\n\nAs always, new chapter info will be in the bio. Hope you are all having a wonderful holiday season, wherever you are. This chapter is a bit longer than the others, I hope you enjoy it!\n\nA Caretaker's Resolve\n\nMike sniffed involuntarily at the sulfur cloud that surrounded him with Lily's disappearance. Her malevolent glee was so palpable he could almost taste it.\n\nIt had taken almost two hours at a blistering pace in the Underworld before Mike and the others had reached the edge of the dome-shaped pocket dimension his home had been tucked away in. It had formed an impenetrable barrier to the demonic denizens of the blighted landscape who were circling it hungrily. At the sight of the hellhound, they dispersed with harsh cries.\n\nMike had hopped off of Cerberus to place his hands on the solidified light. It denied his efforts, but he could feel the geas just on the other side. It reached out for him, as if to welcome him home, but the barrier opposed his efforts.\n\nThe geas built in power, concentrating magic just beneath his hands until it tunneled through the barrier, connecting to Mike's magic. Like turning a key in a lock, the protective shield burst apart to allow him entry. The thick mist had resisted his passage by curling around him and solidifying, but he had pushed through with the others behind him. He had arrived just in time to see the angel Mehkhkahrel try and scour Lily from existence.\n\nCold fury filled him as he commanded Cerberus to take down Mehkhkahrel. If anyone was a match for the angel, it would be them. Cerberus had tackled the angel into the mist, but Hellfire tore through the fog and revealed Mehkhkahrel on the ground. Its feathers smoldered as it tried to move back into the air. Every now and then, the shadows shifted and it looked as though the winged entity had unfolded terrifying limbs consisting of blades and spikes.\n\n\"YES!\" A bulky figure with red skin reached into the air and pulled out a large battleaxe. Mike assumed this was War, but didn't care what he was called. \"Let's do this!\" War cried as he charged toward Mike.\n\n\"Yuki.\" Mike knew the kitsune was right behind him. \"Freeze this turd.\"\n\nA gale of icy wind blew past him, slowing War's progress. The warrior howled, the veins in his neck bulging as he muscled forward, ice forming on his face and chest.\n\n\"Do you think I'm afraid of a little cold?\" He barked a laugh as the distance between them narrowed.\n\n\"You'll be afraid of this.\" Yuki's voice was full of contempt as a giant icicle, nearly fifteen-feet long, ripped through the air. It shattered just before impact with War when a yellow beam of light intercepted it.\n\n\"You will not stop me,\" Murray yelled, his voice crackling. \"I have spent too many centuries waiting for this moment!\"\n\n\"I'm putting you back on ice.\" Yuki dashed past Mike, her tails swishing behind her as she held up both hands, each filled with tarot cards. She cast them into the air where they transformed into giant silver goblets that poured water onto the ground. She summoned large icicles from the now moist soil, then launched them at Murray with a wave of her clawed hands.\n\nWar, no longer impeded by Yuki, ran at Mike with his axe held high.\n\nWith a bellow, Asterion emerged from the fog and slammed into War headfirst from the side. His horns penetrated War's thick skin as he lifted the horseman into the air.\n\nA horrible gnawing feeling took Mike to his knees, and he narrowed his eyes at the dark figure by the house who was pointing at him.\n\n\"You must be Famine,\" he muttered, then whistled and held up his hand. The mace, which had been circling them for the entire trip, appeared from above and landed in his hand. \"Beat this fucker's teeth in,\" he told the mace, then threw it.\n\nEven though the throw was clumsy, the mace took care of the dirty work and covered the distance between Famine and Mike in moments. It smashed into Famine's face, knocking the horseman onto the ground.\n\nMike's precognition triggered, and he leapt out of the way as a colony of insects formed into a humanoid and took a swipe at him.\n\n\"Mike Radley!\" Death had turned his head around with his hands to watch the battle, War's massive sword pinning him to the ground. \"You have come for me!\"\n\nMike didn't respond, his attention on the figure before him. Every fiber of his being screamed \"Danger!\" as Pestilence tried to get a hold of him. He imagined a single touch would infect him with every disease known to man, plus a few extra.\n\nLily emerged from above and flapped her wings, scattering the cloud of insects. When she landed, her tail curled protectively around Mike's waist.\n\n\"You make quite an entrance,\" she told him. \"What's with the arm?\"\n\n\"Got into a fight with a demon.\" He noticed that one of her arms was similarly wrapped. \"And you? Trying to match my outfit?\"\n\n\"Fight with an angel.\" She looked over her shoulder and smirked. \"We can compare scars later.\"\n\n\"Agreed.\" He grabbed Lily by the shoulders and pulled her back as a beam of golden light came from the gloom and passed less than a foot away. \"How do we end this?\"\n\nShe pointed to Death, who was still pinned in place. \"The bitch is afraid of him.\"\n\n\"Then let's give her something to be afraid of.\" He sprinted toward Death and slid to a stop just inches away. Grabbing the hilt of the sword with both hands, he let out a yell and pulled it upward. Pain flooded his busted arm, causing his hand to slip free.\n\nThe sword hadn't moved an inch.\n\n\"Only War can lift his own talisman,\" Death informed him. \"You must find another way to free me, Mike Radley.\"\n\n\"Fuck!\" Mike kicked the flat of the blade in frustration, then turned his attention to the others in time to see Murray summoning a ball of green light in his hands, his shining eyes locked on Beth.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBeth scrambled to her feet and ran to Kisa's aid. The catgirl was still unconscious, her body limp as Beth dragged her back into the house while the fight continued to unfold outside.\n\nSatisfied that Kisa was at least out of harm's reach, she pulled Tick Tock off Kisa's back and slung him over her own.\n\n\"It's time to do our part,\" she said, then ran back outside. Asterion and War were pounding the shit out of each other in a bare-knuckled brawl, their weapons forgotten. She was almost off the porch when a thick hand grabbed her by the shoulder.\n\n\"Noth tho fath!\" It was Famine, his face bloodied and several teeth missing. Behind him, his damaged scales had been wrapped around a mace that clattered to get free.\n\nA bony whip wrapped around Famine's wrist, drawing blood. He cried out in agony as Suly yanked on the other end, freeing Beth.\n\n\"Hands off the lady,\" the dullahan shouted from atop his horse. He took a bundle from beneath his arm and tossed it to Beth. \"Special delivery.\"\n\nFamine ripped the whip free from his arm, taking chunks of skin with it. Suly rode past Famine and scooped up Beth just as she picked up the bundle.\n\n\"I'm so glad to see you,\" she said, but Suly's response was lost as a blast of green light caved in his horse. The nightmare crumpled inward, making a screeching sound before it vanished with a loud pop. Suly wrapped his arms protectively around Beth as his horse vanished and they crashed, but his head was ripped free and rolled into the fog.\n\n\"SHITE!\" screamed the dullahan before his head disappeared completely.\n\n\"You're going nowhere!\" Murray's face was covered in blood, but there were no visible wounds. He raised the magic cock and pointed it at Beth.\n\nMike tackled Murray from the side, knocking him to the ground. Beth noticed that Yuki was now fighting Pestilence with freezing clouds. Lily was helping Asterion, the two of them struggling against a frenzied War.\n\n\"Use the sword,\" Mike called out. Beth looked at the bundle she had dropped, then pushed away Suly's arms as she crawled over to retrieve it. Unwrapping the blade, she marveled at the glistening edge.\n\nWithout wasting another moment, she charged toward Murray and swung the blade, cleaving neatly through his neck.\n\nBands of golden light emerged from the wound as Murray's head fell, connecting his head to his body. His head was yanked back into place, the wound vanishing before her eyes.\n\n\"This body is powered by the divine and controlled by chaos,\" he cackled, then punched Mike in the face, knocking him to the ground. Blood flowed freely from Murray's wound until it closed completely. \"A mere sword cannot hurt me.\"\n\nA cloud of acrid smoke emerged from Murray's hands, but he paused when a loud roar was followed by Mehkhkahrel flying backward out of the fog. Its spiraling wings generated winds that knocked everyone down as it fired golden light into the fog. Cerberus appeared, golden blood in their mouths as they dashed around the smiting attacks. A blast scorched a bloody trail along Cerberus' left leg, but the hellhound ignored it, leaping through the air and clamping teeth into the angel's body once again.\n\nEveryone had been scattered. Beth was near Mike, who was groaning and holding his head.\n\nThere was a bellow of alarm behind her, and she turned to see that War had Asterion in a headlock. He had pinned the minotaur from behind and was grabbing his horns in an attempt to break his neck.\n\nPanicked, Beth looked around for the sword, but it was lying almost twenty feet away. Knowing she wouldn't have enough time, she ran toward War and Asterion, pulling the backpack off of her arms and unzipping it.\n\nWar was much taller than she was. When she jumped, she lifted Tick Tock as high as possible and swung the bag over the top of War's head.\n\n\"Snack attack!\" she cried. They had come up with several silly code phrases, but this had been one of her favorites.\n\nWar's whole body tensed up as Tick Tock tried to devour his head, causing an immense amount of blood to gush from its open flaps. The mimic shuddered as War let go of Asterion and frantically tried to pull Tick Tock off of his head before it was bitten off.\n\nFamine came to his brother's aid, ripping Tick Tock free. Tick Tock sprouted a dozen blades that stabbed Famine repeatedly.\n\nWar groaned, his features covered in blood. He wiped his good eye clean as Beth ran for the sword. Pestilence manifested before her, but a violent gust of wind blew them away as Yuki ran up, holding a glowing seven of swords card in her outstretched hand.\n\n\"Should have brought a bug zapper,\" she declared, then hurled a ray of frost. Several hundred bugs were caught, falling to the ground in blocks of ice.\n\nBeth yelled her thanks and made it to the sword just as extreme hunger filled her body. She groaned and fell to her knees, suddenly too weak to stand.\n\n\"Oh, you are gon pah,\" Famine growled as he stomped toward her. Tick Tock had been bunched up and pinned beneath the bulk of his arm. One mechanical arm with a tiny blade stabbed him repeatedly in the belly, but Famine paid it no mind.\n\nMetal clanged nearby, and Beth saw that the mace was fighting to get free from the scales. Hoping it could help her, she crawled toward the mace and grabbed onto the scales with both hands and pulled.\n\nDespite their relatively small size, the scales were impossibly heavy. Touching them filled her with dread, and she felt the strength in her limbs sapped away.\n\n\"Thtupid girl.\" Famine was almost on top of her. \"Only a hortheman cah lif their own talithman.\"\n\nThe mace was practically spinning in place, but the scales had it pinned. Frantic, Beth tried to stand, holding the sword in front of her. She moved behind the scales and paused, her eyes on the gleaming edge of the blade. There was a weird little hook on the end, which seemed more cosmetic than useful.\n\nJust how sharp was this thing? Famine had bent the top bar of the scale around the mace, which meant that the metal itself couldn't be invincible. She placed the hook over the bent metal rod and gave the sword a good yank.\n\nNothing happened at first. She pulled a couple more times as Famine loomed over her, his fingertips glowing with a dark energy that had her gasping for air.\n\nShe wasn't sure if the fall came before or after, but the sword yanked free as the hook severed the metal loop holding the mace. It rocketed forward, smashing into Famine and making him drop Tick Tock. The mimic sprouted legs that slashed into Famine's tendons, sending the horseman to the ground.\n\nThe mace and the mimic reduced Famine to a bloody mess, the horseman thrashing about. War came running over, but was tripped by Lily's tail as she appeared next to him.\n\n\"Did you know there is no \"i\" in war?\" she asked, then gouged out his other eye with her tail. War cried out in pain and pushed himself to his feet, then ran out into the mist.\n\nA dark energy crushed Beth from above, and Murray descended from the sky. His body was covered in golden light as he came between them, the dick of Osiris pointed at her chest. In the fog, Cerberus yelped in pain and a heavy pressure filled the air as Mehkhkahrel hovered ominously overhead.\n\n\"Enough!\" Murray opened his mouth to say something else, but choked when Suly's thorny whip wrapped around his throat and yanked him backward. The golden light traveled down the bone whip and burned along Suly's skin.\n\n\"I ain't one of yers,\" Suly growled as his skin sizzled. \"Yer magic means little to the fae!\"\n\n\"You... all... are... dead!\" Murray's eyes were triumphant as a chorus of voices cried out from above. Mehkhkahrel's wings were spinning as the air filled with golden light. \"You just... don't...\"\n\nMike screamed, his body tense with rage as he directed his wrath at the angel. When his voice left him, it transformed into shards of blue light that ripped through the air and tore chunks out of Mehkhkahrel's wings. The angel's spell was disrupted, and it turned its attention toward Mike. Golden light built up behind Mehkhkahrel and it unleashed its magic.\n\nMike's voice tunneled into the light, and a protective barrier made of floating motes of light whirled around him. Bits of Mehkhkahrel's magic struck the barrier and pushed Mike back, but the blue light surrounding him coalesced into six spectral legs that spread wide behind him to prevent him from succumbing to the blast.\n\nA feminine figure clutched him from behind, both of her hands resting directly over his heart and her legs around his waist. Mike paused to take a breath, and then let out a cry that surpassed any frequency Beth could hear. The air rippled as the phantom woman held Mike in place, her legs bracing him against the onslaught of magic. He put his hands over hers, clutching tightly at something just under the fabric of his shirt.\n\nMurray was stunned by the sight developing before him. Beth took advantage of the distraction and brought the sword up and into Murray's wand hand.\n\nShe had been hoping to cut the magic dick in half. Somehow, she had managed to slice through his fingers. The golden light appeared and caught his digits before they hit the ground, but not before the dick of Osiris was smacked into the air.\n\n\"No!\" Murray backhanded Beth, knocking her down. He flew beneath the magic dick, his dark eyes following its trajectory.\n\n\"Tick Tock!\" Beth stuck out her hand and the backpack leapt to her side, the empty nylon loop now in reach. She grabbed onto the mimic and said a little prayer. \"Sausage party!\"\n\nWhen she threw Tick Tock at Murray, the mimic's flaps opened and launched several objects into the air. There were plates and knives, and even a few books. Those were just meant to be a visual distraction, because Tick Tock also spat out every single rubber dildo that Beth owned.\n\nIt had been a stupid idea, one that Lily had teased her about, but Beth had wondered more than once if they could swap something from her collection for Murray's pride and joy. At a glance, she recognized each and every one of them. They had been part of her most intimate moments, she had agonized over which ones to buy on the internet for hours. If she had to, she could identify them with her eyes closed.\n\nAnd right now, the one she wanted was headed her way.\n\nMurray looked confused as he was pelted by several dicks at once. He snatched one out of the air and flew up out of reach. As he spun around, he leveled the cock at her.\n\nThe words he spoke tore through the air, and the tip of the cock emitted a bright yellow light as it powered up. When he finished his incantation, he pointed the cock at Beth and then flinched when it exploded in a mass of sticky goo.\n\n\"What?\" He held up the remains of the dark blue cock and squinted at it. \"What is this?\"\n\n\"It was the Delightful Dragon,\" Beth told him as she held up Osiris' cock. She had grabbed it out of the air. \"You've got to start small and work your way up.\"\n\nMurray let out a scream of rage and held his hands out. Malevolent energy crackled along his fingertips.\n\n\"Fireball, motherfucker!\" Beth channeled the energy through Osiris' cock and was blasted backward as a ten-foot wide fireball erupted from its head. It crashed into Murray and knocked him out of the sky.\n\n\"Beth!\" Lily pulled Beth to her feet. \"Romeo isn't going to last!\"\n\nMike was on his knees now, energy crackling around him as the angel won out. Yuki had joined the fray, summoning a stream of magic that absorbed some of the impact, but she was gasping for air as her arms trembled.\n\n\"What do you want me to do?\" Beth asked.\n\n\"Point your dick at that windmill motherfucker!\"\n\nBeth held up the dick of Osiris like a wand, but nothing happened. She wondered if she should cast a spell out of it when Cerberus appeared from the mists. All three heads roared and sent hellfire into Mehkhkahrel, scorching his already blackened wings and diverting its attention. Over by the house, Murray was staggering to his feet, his clothing similarly scorched.\n\n\"Shit!\" Beth stuck the \"wand\" in her pocket and looked around. The sword was nearby, but she wouldn't be able to reach the angel with it. What was she supposed to do?\n\n\"No!\" Death's sudden cry shocked her, and she turned to see that he was staring directly at Mike, one bony hand outstretched toward the Caretaker. \"Please, stop! He's my friend! HE'S MY FRIEND!\"\n\nBeth picked up the sword and ran to the Grim Reaper's aid. She knew that nobody could lift War's sword, but Famine's scales had fared poorly against the sharp edge of her blade. Was her blade sharp enough to break apart War's weapon?\n\nShe swung the sword hard, driving it deep into War's blade and showering the ground with sparks. The first swing didn't do the trick, but it sank in a few inches. She hacked away at War's weapon, less than a foot over Death's torso. The tip of her sword snapped off, but she kept hitting, sweat pouring down her face and into her eyes.\n\nAsterion appeared, hefting his battleaxe. Seeing what she was up to, he struck the blade from the other side. His axe cracked, so he grabbed onto the hilt of the blade and pulled sideways in an attempt to widen the gap.\n\n\"C'MON!\" Beth screamed as she used what was left of her magic sword to sever the base of War's blade. Lily and Suly helped Asterion, pulling the sword sideways to make a notch for Beth to focus her efforts on. An eerie light formed over the surface of War's weapon that seemed to weaken in intensity every time she struck a blow.",
        "Screaming in rage, she swung one more time. A blast of light knocked her onto her butt and the others away as War's blade toppled to the ground and sent a cloud of dust into the air.\n\nDeath rose from the ground, the blade snapping open on his scythe as fury manifested in his eyes. He swung his blade, emitting a black wave of force that severed several of Mehkhkahrel's wings. The angel fell from the sky, landing hard on the ground while its eyes all looked around in panic.\n\nCerberus pounced on the angel, all three heads ripping flesh free and filling the air with scorched angel feathers.\n\n\"Can that thing even die?\" Beth asked.\n\n\"All things die,\" Death replied, then turned his attention to Murray. \"Especially you.\"\n\nMurray's eyes went wide in shock, but he turned his attention toward Mike. Mike was on the ground, his free hand clutching his chest as if in agony. Murray grinned and closed his eyes.\n\n\"Stop him!\" Beth cried. \"He's trying to possess Mike!\"\n\nMurray let out a cry of agony and clutched at his face.\n\n\"Didn't expect to meet that many people inside my head, did you, asshole?\" Mike stood, tears in his eyes. The ferocity there was terrifying to behold as he walked over, his magic gathering behind him. \"That beating they gave you was just the beginning. Where I am weak, they are strong. Where you are alone, we are many.\"\n\nMike's magic unfolded behind him like a pair of wings, and Murray stared in wonderment. The shimmering wings burst into tiny motes of light, revealing the looming specter of Death himself with fire in his eyes and grim determination on his jaw.\n\nDeath dashed past Mike and stabbed his bony fingers into Murray's eyes, causing him to scream. Light emerged from Murray's open mouth as Death stretched a diaphanous substance out of Murray, then ripped it free. Murray collapsed on the ground without a mark on his body as the filmy substance took form.\n\nIt was a woman with golden skin and a crown on her head. She stumbled around, staring at her translucent hands in disbelief.\n\n\"No,\" she whispered, then looked at the others. Her face distorted, revealing Murray's twisted features beneath the surface as his soul fought to break free. Sickly clouds of light swirled around her as she regained her composure and pointed a gnarled finger at Mike. \"NO!\"\n\nWhen she raised her hands, dark clouds formed at their feet. Beth watched in awe as the spell fizzled, due to the thorned, bony whip that had encircled Nesferisfet and now pinned her arms in place.\n\n\"Hurts, doesn' it?\" Suly yanked Nesferisfet off her feet, causing her to fall to the ground. \"Sorry I lost my head fer a bit. I'm ready to contribute now.\"\n\nBeth smiled. \"You contributed plenty,\" she told him, then planted a kiss on his cheek.\n\n\"Are the others inside?\" Mike asked with a raspy voice, his features pale. It looked like he had run a marathon, his cheeks sunken in. \"Nobody died?\"\n\n\"Yeah, we're all here. Except...\" Beth turned her attention out into the fog. It took her a few minutes of looking, but she found Opal's core where Lily had thrown it. The vial vibrated lightly in her hands as if saying hello, and she sighed in relief. \"Now we're all here.\"\n\nMike nodded, then sank to the ground. \"That's great news,\" he told her, then looked up at the house. \"Hey, the roof is intact. Not bad for your second time house sitting.\"\n\n\"Kids got rowdy,\" she replied, then sat down next to him. \"Threw an unexpected party. You okay?\"\n\n\"Nope.\" He pulled a pair of dogtags out of his shirt and gazed at them in awe. \"But I will be.\"\n\n\"I hate to interrupt your circle jerk,\" Lily interjected, her face stuck in a frown. \"But how the hell are we getting the house home?\"\n\nMike flopped onto his back and groaned. \"I just need a nap,\" he replied. \"I can barely think straight and everything hurts. But I do have a plan.\" He turned his attention over to Cerberus. Beth watched as the hellhound happily ripped off one of the angel's wings, causing two of the heads to fight over it.\n\n\"Speaking of plans, what about this one?\" Suly gave Nesferisfet a kick. She hissed at him and tried to roll away, so he yanked on his whip, causing the bone thorns to bite into her soul.\n\n\"Is Murray still in there?\" he asked.\n\n\"No.\" Death stroked his chin. \"The being known as Murray was consumed by this foul creature when they mixed together. She is a parasite.\"\n\n\"Fuck you,\" Nesferisfet cried.\n\n\"Can we feed her to Cerberus?\" Beth asked, scowling at Nesferisfet.\n\n\"Probably shouldn't,\" Lily replied. \"Despite what it looks like, the dog doesn't technically eat. I would hate to learn that this bitch will reappear someday and cause even more problems. And I can't do anything with her, either.\"\n\n\"So what do we do?\" asked Beth.\n\nMike stared at the ground as if lost in thought, then nodded solemnly. \"No more loose ends,\" he declared, then turned his gaze on Nesferisfet. His eyes flashed dangerously as he rose from the ground. \"I know exactly what to do with you.\"\n\nHis raspy voice became a growl, which sent shivers down Beth's spine. He gestured for Lily and Death to join him, then whistled for Cerberus. The hellhound padded over and laid down where Mike could put his hand on the center head's nose. Yuki stood back, her eyes on the mist around the house. It was already starting to thin, revealing dark shapes that shifted without.\n\n\"Here's what's going to happen. Cerberus?\"\n\nThe hellhound responded with a whine.\n\n\"You're my good girls, aren't you?\" He wrapped his arm around the center head's muzzle and squeezed while the side heads licked his arms and face. \"I need you to track down a gate to Hell.\"\n\nNesferisfet panicked and tried to fight her way free, but was properly secured by Suly's whip. She ended up falling down on her face, instead.\n\n\"Lily and Death, please go with her in case the horsemen are planning something. The barrier is down, so they're out in the Underworld now.\" Mike sighed and rubbed his temples. \"Not much help for that, I guess.\"\n\n\"Do this, do that.\" Lily grumbled as she walked over to Cerberus and started to climb up. \"When do I get told I'm a good girl? Never. No head pats, no thank yous...\"\n\n\"Once you find a gate, come back. We'll form a proper escort and shove this bitch in there.\" Mike jerked his thumb at Nesferisfet. \"She won't go easy, but I know you can handle it.\"\n\nNesferisfet howled at him, but Suly grabbed her from behind and clamped his hand over her mouth.\n\n\"The master is speakin',\" he whispered. \"Shut yer damn mouth.\"\n\nShe struggled, but Suly held her tight. Mike held his hand out to Beth, and she moved to join him.\n\n\"What do you need from me?\" she asked, her body suddenly sore. She had been knocked around so much during the fight that the adrenaline was already wearing off. Her back and sides hurt the most, and she wondered if she had bruised some ribs.\n\nHe moved close to her side until his lips were almost on her ear. \"I need you to help me inside,\" he whispered. \"Before I collapse.\"\n\nShe looped her arm around his waist and guided him toward the house. Nesferisfet was pulled toward the porch and strapped to one of the pillars while Suly and Yuki kept watch. The mace joined them, lying itself next to the front door as Asterion appeared from out of the mists. Beth hadn't even realized that he had left.\n\n\"The blind one got away,\" Asterion grumbled, then sat down on the steps with a grunt. \"His footsteps disappear not far from here. I am sorry.\"\n\n\"You have nothing to be sorry for,\" she replied as she pushed open the door. Mike stumbled a couple of feet as she helped him fall face down onto the nearest couch. Behind them, Tick Tock shut the door and withdrew his bladed limbs, once more a nondescript backpack.\n\n\"Are the others still alive?' he asked, slurring his words. \"Did I make it in time?\"\n\nShe looked around the room. Reggie sat on top of the nearest table clutching Jenny like a talisman against evil. Kisa was where Beth had left her, but was still breathing.\n\n\"I think so,\" she answered. \"Banged up but all here.\"\n\nMike mumbled something in reply, but she didn't understand it. As he slumbered, she sat next to him on the loveseat and pulled her legs up to her chest and let out a deep breath.\n\nWithin seconds, she was asleep too.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nIt was a beautiful spring morning. The birds in the garden chirped greetings to each other, their songs transforming into terrified squawks as the fairies chased them from their perches with child-like laughter. Mike was lying on the front porch bench, his eyes closed and his head in Cecilia's lap. Her thighs were soft to begin with, but she had figured out some trick with her spectral body that made her legs cooler and more comfortable then any pillow he had ever used.\n\nShe was playing with his hair, her cool fingers sending prickles across his scalp. He was lying down so that his right arm lay across his belly. His broken arm was wrapped in a fresh layer of spider silk.\n\nIt had been nearly a month since his return from the Underworld. After a four hour nap in his house, he had gone back to Naia and used her connection with the house to properly return it. Even though he was exhausted, Naia had been able to coax a strong orgasm out of him that had yanked the home back through the Underworld and placed it where it belonged. He couldn't be sure, but he had a suspicion that the house had been put back slightly crooked and several feet to the left.\n\nWhile he had been putting back the house, Suly, Lily, and Death had escorted Nesferisfet to the nearest Hell gate. Mike had wondered if he should ask her how to undo the sleeping curse, but strongly suspected that any help she provided would have ulterior motives. She had almost ended the world in a mad bid for power, and he fully expected to be double-crossed. Lily told him later that, at the end, she had begged for mercy as they pushed her between the one-way blades meant to ensnare souls.\n\nDeath had responded by using the butt of his scythe to shove her the rest of the way in. The demons on the other side, smelling a powerful soul, had dragged her away screaming.\n\nFortunately, once he returned the house to its proper location, Ratu had been able to undo the curse. His unique bond with Tink and Cecilia had allowed him to pull them out through the Dreamscape with Lily's help. Without such a connection, several of the slumbering rats died of dehydration in the process. Reggie had taken the loss hard, but understood that Ratu had tried her hardest to save them.\n\nOf Eulalie and Sofia, he had seen very little. The Arachne was already gone upon his return to the house. A decent population of rats had decided that Eulalie was their new leader during his absence, and she had convinced them to chew a portal to her home in Oregon. He had been surprised to discover that Sofia had gone with her. He hadn't wanted to pry into Eulalie's affairs out of respect for her sister, but had to admit he was curious.\n\nHe had wondered if she would stay there now that Velvet was gone, but she had come back to the house for a couple of days before announcing that she and Sofia had an important project to work on. For the last couple of weeks, she and Sofia had been holed up in the Library, and he had no idea why. The couple of times Eulalie had stopped by to visit him, she had stayed long enough to rewrap his arm while saying very little. His primary worry was that she blamed him or the others for Velvet's death, but Sofia reassured him that Eulalie had hyper-focused on some new task that would be revealed in time.\n\nTo say Zel had been upset about his injury was an understatement. She had yelled at him until she was red in the face, all while having Ratu reset some of his bones. The spell he had cast on the forest had created a spiral fracture in his radius and ulna, and his attempt to lift War's sword free had only made it worse. A series of long metal pins now held everything in place until his bones could fuse. Sometimes, when he was lying in bed, he thought he could actually feel his break mending.\n\nThe front door swung open, breaking his reverie. Mike heard soft footsteps approaching and smiled.\n\n\"Morning, Kisa.\" He could sense her by proximity now, their connection stronger than ever. He bent his legs, making room on the bench. \"Plenty of room for my favorite familiar.\"\n\nKisa snorted, then sat on the bench. After shifting around, she pushed his legs apart so that she could lie her head down on his stomach.\n\n\"I see how it is,\" the catgirl grumbled. \"Turn my back for one second and find you in the arms of another woman.\"\n\n\"You certainly didn't mind sharing me last night,\" he replied with a smile. When he had crawled into bed, Lily and Kisa had been waiting for him. The two of them had grinned in amusement at each other the whole time they were blowing him, as if partners to a secret. He didn't bother asking, he had been too distracted by the semi-rough texture of Kisa's tongue on the head of his cock while Lily had forked her own tongue to squeeze the base of his shaft. When he came in Kisa's mouth, Lily had pinned him down while the two of them kept sucking until he blew his load in her mouth again.\n\n\"Your head still feeling okay?\" he asked Kisa as he ran his fingers along the base of her ears.\n\n\"Mm-hmm,\" she replied with a purr. She had suffered a pretty bad concussion during the fight with the horsemen. It had affected her balance, and Tink had been mothering her all month. \"Wasn't last night proof enough?\"\n\nHe smiled, feeling the heat rise to his cheeks.\n\nThe three of them cuddled this way for nearly an hour when the front door opened again. It was Death, and he was holding a small tray with a pot of tea and biscuits.\n\n\"It is nearly time, Mike Radley.\" Death stared down at them for several moments as if waiting for a reply. \"For our appointment.\"\n\nMike groaned. He was comfortable, and fairly certain that Kisa had fallen asleep with her legs wrapped around one of his. It took him a minute to untangle himself, then he walked out into the garden with Death at his back.\n\nThe hedge maze was even larger than before. Luckily, it was no more than belly height, but Kisa and Tink could officially get lost in it. Fae creatures could be spotted moving through the underbrush, and there was a particularly grumpy gnome at one end who decorated his home with bottle caps that the fairies brought him from neighboring yards. The Jabberwock, happy to have its bigger yard back, guarded the opening closest to the front entrance. Anyone not paying attention would think it was some sort of concrete/topiary hybrid.\n\nMike allowed Death to lead him into the maze. They navigated the outer rim until they found a shortcut towards the center. A table and chairs had been set in a quiet location not too far from the sundial specifically for tea time. The metal table was held in place by thick roots that had sprouted from beneath. Mike took a seat just as Beth appeared several hedges over. Her hair was mussed, and there were a couple of sticks caught in it.\n\n\"Shit, is it that time already?\" She adjusted her outfit and cleared her throat as Suly stood up next to her. The dullahan grinned, and waved at Mike.\n\n\"We'll be out of yer hair soon,\" he said, then leaned down to pull Asterion to his feet. The minotaur appeared to be in a daze, but he locked eyes with Mike and nodded.\n\n\"We are all friends now,\" Asterion said, then guided Beth and Suly through the maze and toward the house.\n\n\"How the hell did I not see them?\" Mike wondered aloud.\n\n\"Because you did not have their consent to watch them,\" Death replied. \"Sorceress Bethany cast a concealment spell. It is one of the spells that she has been working on all week with Ratu. She is becoming quite good.\"\n\n\"I see.\" He had been so busy this last week that he hadn't had a chance to talk with her. Most of their interactions had concerned the slime girl currently living in his bathtub. Ever since getting blasted by the angel, Opal was having trouble holding a human form. \"I'm probably overdue for my own tutelage.\"\n\n\"It would serve you well.\" Death arranged the crockery on the table. \"You should learn a spell to reheat my tea for me. It would be most convenient.\"\n\nIn front of the house, a car door slammed. Cyrus appeared between the lions, his eyes darting back and forth as he carried a briefcase past the Jabberwock and into the hedge maze. It took him a couple minutes to wind his way toward them, but he came to a stop on the other side of a thick bush.\n\n\"I swear I had the route figured out this time,\" he mumbled while scratching his chin. A rough beard was coming in, but the scars on his face meant it would never be uniform.\n\n\"It changes,\" Mike replied. He touched a nearby leaf and made his will known to the hedges. The foliage parted, allowing a wide-eyed Cyrus to come through and sit with them.\n\n\"Was that you?\" he asked.\n\n\"Not quite,\" Mike replied. The roses around his house stubbornly refused his commands, so he was always siccing Suly on them. Some of the plants were manifesting personalities, and he could only wonder what he would have learned from the Mandragora if he could have spoken to it before it left so long ago. It wasn't so much that he made the bushes part--he had asked nicely and let them decide. \"Have a seat.\"\n\n\"I have made us chamomile,\" Death declared, causing Cyrus to flinch. \"It is a friendly tea.\"\n\n\"Thank you.\" Cyrus took his seat and accepted a cup from Death. \"I'm sorry I keep reacting that way, it's something about your voice.\"\n\n\"You and I have met on many occasions. It has never been friendly.\" Death winked at Mike, an action which caused one of his flames to temporarily go out. \"Until now.\"\n\n\"So what do you have for me today?\" Mike leaned forward, ignoring the cup of tea that Death put in front of him.\n\nCyrus pulled some papers out of his briefcase and slid them across. It was a coroner's report for Murray. They had brought his body back and slumped him over the toilet in his bedroom. The police found him a couple days later after Eulalie sent an anonymous email complaining about the smell.\n\n\"Positional asphyxia?\" Mike looked up at Cyrus from the document.\n\n\"They think he passed out on the toilet and suffocated while slumped over.\" Cyrus sipped his tea. \"This is really good, by the way.\"\n\n\"You are too kind.\" Death sat down and drank from his own cup. Cyrus watched with interest as the liquid disappeared in Death's mouth.\n\n\"Don't bother asking where it goes,\" Mike told him as he set the papers down. \"Did you find out that other thing I wanted to know?\"\n\n\"Angelic retribution?\" Cyrus frowned. \"For obvious reasons, there aren't any records on killing an angel and if God Himself will come after you.\"\n\n\"Damn.\" Mike picked up his cup and held it without drinking. After Cerberus had killed the Mehkhkahrel, it had slowly expanded in size. The damn thing was nearly the size of a mountain now in the Underworld, and scavengers were slowly picking it apart.\n\n\"Based on my experience, you can't keep thinking of the Great Almighty as some old guy who knows all and sees all.\" Cyrus set down his cup and crossed his legs. \"We know that other gods existed. Some still might.\"\n\n\"I just don't want one descending on my house.\" Mike looked at the edge of his property. The geas had been weakened by the angel's search for Death, and it seemed to be stuck that way. A couple of joggers had stopped to watch centaurs in the yard just yesterday. Lily followed one home and discovered that the geas made them see a child's birthday party where they chased each other on ponies.\n\nMike was having a privacy gate put up once the materials arrived.\n\nThe conversation steered away from the apocalypse and toward more mundane things. Cyrus asked plenty of questions about the Underworld itself, and provided Mike with anecdotal tales from his time in the Order. It was hard not to like the man, but Mike could tell that theirs wasn't just a casual relationship.",
        "It was part of the reason that he had Death with him. The Grim Reaper not only interjected at odd moments and provided a distraction, but Mike knew if the Order were to ever assemble a dossier on him, it would likely include the fact that the physical manifestation of Death itself was one of his best friends.\n\nAnyone who chose to fuck with him or his family while knowing that information deserved whatever fate they got, which brought him back to Leeds. The bastard was still locked down in Oregon, but the opportunity to escape would come eventually. That was a problem that required a unique solution.\n\n\"Mike Radley.\" Death loomed over him now, his eyes shining brightly despite it being midday. \"Your tea has gone cold.\"\n\n\"You're right. It has.\" He held up his cup. \"Top me off, would you? I promise I'll finish it this time.\"\n\n\"You seem distracted. Maybe it's something I could help with?\" Cyrus leaned forward, his eyes wide with excitement. \"I bet I can help. Please let me help.\"\n\nMike chuckled, then held his freshly filled cup to his lips.\n\n\"I could tell you the details, but then I'd have to kill you.\" He winked, causing Cyrus to groan. The man knew all about the incident with the horsemen, but it would be a cold day in Hell before Mike shared anything about Oregon.\n\nThat, after all, was strictly a family matter. By the time he bid Cyrus farewell, it was early evening and his stomach rumbled with hunger. Anticipating a large meal, he walked into the house and noticed immediately that the air lacked the familiar scent of dinner. Puzzled, he walked into the dining hall to find Beth and Reggie eating plain sandwiches and chips while going over some documents.\n\n\"Where's Sofia?\" he asked.\n\nBeth shrugged, then held up her sandwich. \"No idea. Looks like we're fending for ourselves tonight.\"\n\nWithout fail, the cyclops had prepared meals like clockwork for the entire time he had known her. Worried that something had happened to her, he grabbed a handful of chips from the bag on the table and then ran to his office to move the red book to its proper location. The world blurred around him as he was transported to the Library.\n\nWhat had once been a lonely space was now bustling with activity. Hundreds of rats scurried about in organized chaos, several of them pulling carts full of books across the lobby. A few stopped when they saw Mike, and a couple even waved.\n\n\"What the hell is going on here?\" He walked up to the front desk and saw that a golden bell had been placed on the counter. Curious, he hit the plunger. A ringing sound echoed along the colossal stacks for several seconds before disappearing.\n\nA platform loomed overhead, then sank down to the floor. Standing on it was Sofia, looking regal in her Head Librarian's gown.\n\n\"I must have lost track of time,\" she muttered, then stepped off the platform.\n\n\"Is everything okay?\" he asked. \"You never showed up for dinner.\"\n\n\"You know, it was never my job to cook meals for you.\" She narrowed her eye at him and frowned.\n\n\"That's not what I meant and you know it. I don't care that you didn't cook for us, but when someone breaks from their routine, I go check on them.\" He took a step forward and slipped his hands around her waist. \"So what are you up to? Anything I can help with?\"\n\nSofia kept a stern look about her, but her cheeks reddened. \"As a matter of fact, there is plenty of work to do around here. After the incident with the horsemen, it was discovered that we did in fact have some texts that pertained to our situation. The Library, first and foremost, is a repository of knowledge. It is time that I work to restore its function, which includes better cataloging and access to materials.\"\n\n\"That's great,\" he said. \"But it doesn't have to be something you do alone.\"\n\n\"And it isn't.\" Sofia sauntered away, her large ass swaying as she did so. She stood on the platform and tapped her staff. \"I have something to show you. Are you coming?\"\n\nNot yet, he thought with a grin. He stood next to her and grabbed onto the railing. \"Let's see what you've got going on.\"\n\nSofia stood stoic as the platform rose, her hair rustling around her as they lifted into the air. From up above, Mike could see the rats were surprisingly coordinated in their efforts. It seemed that they were gathering up books from distant stacks and moving them to an empty section of the Library.\n\n\"There's quite a backlog of incoming books,\" Sofia explained. \"The rats haven't learned to read yet, but the Library has a translation feature. While they don't completely understand the wording, they have been taught the difference between genres.\"\n\n\"That's great, but does Reggie know about this?\"\n\n\"It was his idea. Ever since the last incursion, he decided that his people would be safer in a more neutral territory. To that end, we put them to work for room and board.\" The platform was moving fast enough now that the breeze was pushing Mike's hair back. \"So what do you need from me?\"\n\nSofia looked over his shoulder with a grin. \"You'll see.\"\n\nThey traveled for a few more minutes before landing on a giant stack that had been hollowed out. Most of the books had been removed, leaving behind what looked like a bundle of networking cables that looped around the structure.\n\n\"Is that...\" he stepped off the platform in disbelief. \"Did you guys build a giant server room?\"\n\n\"The biggest on Earth.\" Eulalie descended from above, her hands and front legs clinging to a braided web. She dropped the last ten feet and tumbled, landing in a crouch, the dog tags jingling around her neck. \"Well, not Earth, technically. These cables are connected to secret locations across the planet. Do you know what's better than using a VPN? Actually using routers on different parts of the planet.\" The Arachne was smug as she dropped a bundle of cables from her arms. \"The rats can nibble these really tiny holes, just big enough for a cable. Even if the router is discovered, all they will ever find is a mysterious hole in the wall. Any attempt to widen it will disrupt the portal, and then poof!\" She clapped her hands together. \"All evidence is erased.\"\n\nMike nodded appreciatively. \"I admit, that's pretty cool. But what is it for?\"\n\n\"This place is a sanctuary for information. We are pulling information from some of the most protected areas of the Earth.\" She patted the floor beneath her. \"We're not just connected to routers, you know. If you ever want to use a supercomputer or experimental AI for anything, you just let me know.\"\n\n\"To what end, though?\"\n\nEulalie smiled. \"You let me worry about that.\"\n\n\"I have to admit, this is really cool. How are you powering it?\"\n\n\"We got Zel to agree to some solar panels in the Greenhouse. She and I actually had a very enlightening discussion about many things. I think we may actually be friends now. Also may have tapped into the electrical grid in places.\" Eulalie wiggled her eyebrows, which made it look like her lower spider eyes were blinking. \"If you hear about rolling brownouts, it might be us.\"\n\n\"So this is what you need help with?\" Mike gestured at the array of cables. \"I mean, I can help with some stuff, but I kind of feel like it would take you longer to explain to me than to just do it yourself.\"\n\n\"Never have you spoken truer words. You're here to pick me up, that's all.\" Eulalie walked onto the platform, followed by Sofia and then Mike. It sank down through the Library, then veered down a narrow corridor full of stacks of books.\n\nIt was another ten minutes before they got to their destination. They arrived at a large stone column with a solitary arch nearly a hundred feet off the ground. A trio of rats stood guard, standing at attention the moment Eulalie stepped off the platform.\n\n\"Good job, guys.\" She made sure to pat each one on the head, then walked inside.\n\n\"So what is this place?\" he asked.\n\n\"It was used to store dangerous texts,\" Sofia replied. \"But for now, it's Eulalie's home.\"\n\n\"Home?\" He hadn't spoken to Eulalie about living arrangements, but had figured she would move into the house.\n\n\"I'm going to live here,\" Eulalie said, moving into a cavernous space. A small bank of monitors was still being assembled along the walls, and small pockets of webbing had been scattered around the ceiling. A hammock dangled in one corner with a pillow inside it. \"Since I am going to be the assistant librarian, it only makes sense.\"\n\n\"Assistant?\" He looked at Sofia. \"You've got help now?\"\n\n\"Yes. We are planning to get this place back up and running.\" Sofia smiled. \"It'll take some time, but we'll get there eventually.\"\n\n\"Which brings me to why you're here.\" Eulalie moved to the back wall of the room and stuck her hands through a thick band of webs. She removed something and walked back over to him, the object concealed by her arms. \"I think you should see this.\"\n\n\"What is it?\" Mike held out his hands as Eulalie handed him the object.\n\nThere was a faint pop as the object shocked him. The odor of the woods filled his nostrils, followed by the smell of hot springs. Jumbled thoughts were tossed through his mind, most of them just sounds. Eventually a single image burned bright in his mind. It was Velvet, standing on a cliff with the wind in her hair. She turned around to smile at him as the memory faded.\n\nThe object warmed in his hands, sending a pleasurable buzz throughout his body. It was a thick ovoid with red and blue swirls across its surface. It looked like a gemstone, but radiated a lifeforce that he immediately recognized.\n\n\"Velvet?\" He ran his fingers across the pebbled surface of the egg, then clutched it to his chest. It hummed in time with the beating of his own heart. The ramifications of what he held raced through him, and he chose to immerse himself in the moment. A small part of her still existed, and he didn't care how or why. During the fight with Mehkhkahrel, he had felt her presence, but he couldn't be sure if it had been her or just his magic trying to meet his desires. It was almost like she had been holding him up as he unleashed every ounce of energy.\n\nLater, he would ask Cecilia if it could have been her. The banshee had shrugged and explained that the Underworld could be a strange place in terms of spirits and what they could accomplish.\n\n\"My dad had a saying.\" Eulalie placed her hand on his shoulder. \"Nobody is ever truly gone. When she died, I wasn't sure what to do when I found out she had laid an egg. I don't have her instincts, and I'm not cut out to be a mother. I debated having it smashed and just ending the Arachne once and for all, but the moment I touched it...\" She shrugged. \"It was almost like seeing her one last time. If she spared it, she had good reasons to do so.\"\n\n\"We're going to raise it here,\" Sofia announced. \"The house is no place for a child. This place is safe from outside threats. It's possible her upbringing could be difficult, but we are up to the task. And someday, when she is old enough to leave the nest...\"\n\n\"Then we will let her decide what comes next.\" Eulalie squeezed his shoulder. \"The egg will have to leave the Library on occasion, because time doesn't pass in here. That will be one of your jobs, to help us grow and hatch it by taking it for walks outside these halls. Bring her with you when you aren't busy hunting demons or arguing with magical royalty.\"\n\n\"And once she's here, I'll help raise her. Or try to, anyway.\" Mike ran his fingers over the surface of the egg in awe. So many feelings begged for his attention, and he couldn't focus on any of them. This wasn't just about Velvet's legacy, but his own.\n\nHe was about to become a father, but he was also reminded that Velvet was gone. These thoughts and ideas would take some time to absorb, and he promised to focus on the positives. The others would help, because that's what family does.\n\nAt the very least, he would be a better parent than his own mother had been. \"Does she have a name?\" he asked.\n\nEulalie and Sofia smiled at each other.\n\n\"That depends on you,\" Eulalie replied. \"What do you want to call her?\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nCyrus turned onto the unmarked road off of Highway 104, the tires on his rental kicking up giant clouds of dust behind him. It had been almost an hour since he had seen another car, which included the fact that he had been forced to turn around after missing his exit.\n\nThough he had not seen anyone, he had no doubt that he was being watched. For almost half an hour, he slalomed along the road through the sagebrush covered plains, making sure to keep his windows rolled up to keep out the heat and dust. The air conditioning was doing its best, but the car was emitting a high-pitched whine that threatened to test the limits of the engine.\n\nAnyone following would have been surprised to see him gun the engine and drive straight into a large boulder. It was a security precaution, a spell that would only allow someone to pass if they were going faster than twenty-five mph. White light sizzled along the exterior of his black Nissan, and then a dull building the size of a garage popped into existence on the other side of the boulder. The sky was cast in grey, as if filtering out any color from the outside world.\n\nBy the time he came to a stop, there was a small group of men and women assembled outside the entrance of the building.\n\nUpon exiting the car, he sensed the barrage of spells meant to verify his identity. He leaned against the car and stretched while they scanned him. It had been a long drive and his legs were stiff.\n\n\"Master Cyrus.\" A woman broke away from the pack and handed him a visitor's badge. \"If you would wear this please.\"\n\n\"A badge? Really?\" He put it over his head. \"Seems kind of redundant now that you know who I am.\" Though he had never visited this facility, protocols were fairly standard across the world. The badge felt oddly heavy, but he assumed it was spell related.\n\n\"Let's just say the badge is a necessary precaution.\" The woman handed him a small stone. It had a groove in it, and he recognized it as a worry stone. \"Also, keep this in your pocket while inside the building. Don't lose it or you may be subjected to termination with prejudice.\"\n\nHe frowned at the rock, then looked at the woman. \"What the hell is going on with the Order?\" he asked.\n\nShe shook her head. \"I'm not permitted to give you that information, sorry.\"\n\nHe waved his hand dismissively. \"I understand. I suppose I have people I could ask.\"\n\nRelief crossed her face and she nodded. \"Shall we?\" She gestured behind them and the others opened the door to the building. He noticed that they all watched the surrounding land as he walked inside, then backed into the space one at a time. Whatever was going on had them spooked bad.\n\nThe garage-like building housed a single elevator. Once everyone was inside, two of the men grabbed onto a pair of silver rods along opposite walls. Their magic flowed into the motor, allowing the elevator to descend. The trip was long, but Cyrus was simply grateful not to be sitting anymore.\n\nAt the bottom of the shaft, the group disembarked, then took their positions in a room overlooking the opening to the elevator. There was a good chance it was the only entrance to this place.\n\n\"Right this way.\" The woman turned away from him, and he realized that he didn't know her name. Typically, members of the Order would identify themselves upon meeting to avoid confusion. Whether this was an oversight on her part due to the new security precautions or something else entirely, he had no way of knowing.\n\nStill, the woman's identity didn't matter. He had come to see someone else.\n\nAt the end of a long corridor, they came to a circular door embedded into the stone. She placed her hand on a scanner and the door slid open.\n\n\"He's been expecting you,\" she said, stepping aside. \"For a couple of months now. Demanded we keep his calendar clear for today.\"\n\nCyrus nodded. It wasn't a surprise that he had been expected. After all, the Oracle often saw things long before they happened.\n\nWhen he walked into the room, a red light turned on above the door once it shut behind him. It was like being inside of an extra large dark room for developing photographs, only the center of the room was occupied by a giant glass cylinder filled with mist. The cylinder itself was nearly a hundred feet across and five stories high.\n\n\"Master Cyrus.\" The voice spoke to him from a mechanical grill at the bottom of the tube. Somewhere inside the glass, the Oracle was speaking into a microphone.\n\n\"I like the new housing unit.\" He had been with the Order when they had first captured the Oracle. Originally, the creature had been contained in a metal box not much larger than a coffin with a vent at the bottom. Good behavior over the years had allowed it substantially more freedom. Attracted to tragedy like a moth to a flame, the creature had a flair for prophecy that had resulted in its imprisonment rather than destruction. There was still significant doubt that the Oracle hadn't caused the Silver bridge collapse of '67, and so it remained somewhere it could be safely studied.\n\n\"Prison,\" the Oracle corrected as if reading Cyrus' mind. \"You may use fancy words for it, but it is still a prison.\" A dark shape moved behind the mist as the Oracle came near the glass. \"It has been many years since we last spoke in person.\"\n\n\"It has.\" Cyrus licked his lips, which had suddenly gone dry. \"I have a question of a delicate nature.\"\n\n\"Indeed.\" The Oracle shifted in his enclosure, his glowing eyes visible through the mist. \"Just think of the journey it has been to bring you to this point.\"\n\n\"So you know the question I want to ask?\"\n\nThe Oracle chuckled. \"Perhaps. But I am not ready to answer it yet. Indulge me. I would hear about your reasons for asking it.\"\n\nCyrus frowned. \"You can't see what brings me here?\"\n\n\"There are many places on this planet that obscure my vision.\" The swirling mists parted, briefly revealing a pair of damaged wings. \"You have recently steeped yourself in such a place, like a fine tea. I would hear of it that I may taste such a place for myself.\"\n\n\"I have taken an oath not to share the details,\" Cyrus replied.\n\n\"Ah, still a man of your word.\" The Oracle made a clicking sound, then disappeared into the mists. \"Instead of details, maybe you can summarize? It'll be like old times.\"\n\nCyrus nodded, understanding at once what the Oracle meant by old times. The Oracle and anyone who spoke with him used to be under heavy surveillance shortly after his capture. This extra attention had waned over the years once the Order was confident that the Oracle wasn't going to possess someone's body or manipulate them. Cyrus had developed these gestures to gain the Oracle's trust, and had never once abused it.\n\nHowever, things had obviously changed for the Order. They were being listened to, and what he had to say was for the Oracle alone. To anyone listening, it sounded like he was rambling, talking about a man who had discovered a treasure trove of magic. However, the Oracle watched him closely as he made innocuous hand gestures that conveyed additional meaning. Certain signals meant that he was lying, others implied that he was selling it short.\n\nFor example, when the Oracle interrupted to ask about how powerful the inherited magic was, Cyrus had shrugged while scratching his chin. \"No more than anyone else who comes into magic,\" he said, but his actions told the Oracle the opposite. There were no monitors in the Oracle's chamber--any cameras that watched him only captured static.\n\nThe Oracle listened quietly, occasionally moving back into the mysterious mists of its prison. Some of the top minds of the Order had tried to study the mist's composition, but anytime they managed to capture a sample, it would somehow disappear. When questioned on it, the Oracle tended to dodge the question. It liked to talk, but refused to elaborate on what it was or where it had come from. The mist didn't come from the Oracle, but somehow manifested whenever the creature was confined.",
        "Finished with his tale, Cyrus moved to sit on a seat that had been carved into the wall. He had been grateful to stand after such a long time driving, but now his legs hurt and he needed to sit. Furniture of any kind wasn't allowed in the Oracle's chamber. For the longest time, it was feared that the Oracle was telekinetic and could free itself with a heavy enough object. Ever since the day of its capture, however, it had shown no talent for telekinesis.\n\nHowever, Cyrus was not alone in the idea that the Oracle was simply playing a long game where each move was decades in the making. Not knowing how long the Oracle would live, it was simply better to take extra precautions.\n\n\"You weave a good tale, Master Cyrus.\" The Oracle turned around, his large wings brushing against the glass. \"But for the life of me, I am uncertain what this has to do with your question.\"\n\nCyrus felt a yawning pit in his belly and he swallowed the lump in his throat. \"While I was...a guest of this household, there was a woman there.\"\n\n\"Maybe I don't know your question after all.\" The Oracle snorted, causing the mists to swirl. \"Could it be love after so many years?\"\n\n\"Do you remember when you would answer all my questions with stupid poems? I far prefer that to your sense of humor.\" Cyrus tightened his lips. \"The woman who held me captive...her voice was familiar. And she wouldn't let me view her, never directly. I suspect that she isn't what she said she was.\"\n\n\"Surely it couldn't be the woman who gave you those scars.\"\n\nCyrus touched his face and shivered. Hundreds, if not thousands of spiders had attacked him at the command of an Arachne he had hunted back in the early seventies. He had lost his partner in the fight, but the creature had been destroyed.\n\nOr, at least, so he thought. While wiping down Murray's house, he had discovered odd footprints that had raised all of the hairs on his neck. If the Arachne had survived, she would be well over eighty years old, which was far older than one should live.\n\nWhich meant she had reproduced.\n\n\"It couldn't be her,\" he replied. \"But what if she had offspring?\" If Eulalie really was an Arachne, that also meant that her sister who had died was probably an Arachne herself. Was Mike Radley hiding a nest of them?\n\nThe Oracle tsked at him while tapping a long digit against the glass.\n\n\"I can only see what is or what will be,\" it replied. \"If you want answers about the past, then open a history book.\"\n\nCyrus stood and smoothed out his shirt. \"Fine, then. I'll be direct. Are the Arachne gone or do they still walk the Earth?\"\n\n\"And what would you do with this information? Would you gather a holy crusade and set forth to stomp them out? Or perhaps your new perspective would give you pause?\"\n\n\"It shouldn't matter to you what I do,\" Cyrus retorted angrily. \"What we do with the answers to our questions is none of your damned business.\"\n\nCrimson eyes glowed brightly in the fog as if studying him. \"Maybe what you do with yourself matters more than you could ever know, Master Cyrus. Perhaps your new...enlightened state gave me a false sense of familiarity.\"\n\n\"You're stalling.\" Ultimately, it didn't matter. If the Oracle chose not to answer, he wouldn't. During those rare occasions, he would either go quiet or simply refuse. As long as the Oracle kept talking, it meant an answer was coming.\n\n\"Then here is your answer.\" The mists thickened and pressed against the glass as if trying to pass through it. Some of it squeezed out of the mechanical speaker. Cyrus made a mental note to mention it to maintenance once he was done. \"You fear the past, but your time is better spent looking to the future. But you will never fulfill your destiny as long as you continue looking over your shoulder.\"\n\nDestiny? Cyrus snorted, but said nothing.\n\n\"On the fate of the Arachne, know that not a single Arachne walks this Earth.\"\n\nCyrus frowned. \"That's only a half answer. That could mean that several Arachne are alive and well, and you know it.\"\n\nThe Oracle sighed. \"I tire of this topic, but fine, I shall humor you. At this very moment in time, no Arachne nor its eggs exist on Earth. Does this please you?\"\n\nCyrus could hear the sneer in the Oracle's voice. It would bother him more, but he was so flooded with relief that he didn't really care how he was spoken to. More mist drifted from the speaker, curling in on itself like a snake.\n\n\"This is good news,\" he replied, then turned to walk away. \"I'll let them know you behaved.\"\n\n\"Like the animal I am, right?\" There was a coldness to the Oracle that Cyrus hadn't heard in a while. \"Tell them I want more mystery novels this time. I'm tired of action books, they're too predictable.\"\n\n\"I don't know how you read with all that shit in there.\" Cyrus put his hands on the door.\n\n\"And you assume that we only see the best things in life with our eyes.\" The Oracle slapped a hand against the glass. \"Master Cyrus?\"\n\nCyrus paused, then looked back at the Oracle. \"What?\"\n\n\"I have a question for you.\" The anger was gone, and the mists had thinned out. \"If this Caretaker you spoke of were to find such a wretch as myself, do you think he would have locked me away?\"\n\nCyrus shook his head in frustration and moved to leave.\n\n\"Please, answer me!\" The Oracle slapped on the glass again, desperation in its voice. \"Does such a human exist that could see past all that I am? Would he sit with me as you do, yet without these walls to confine me?\"\n\nCyrus paused, then let out a sigh. When he turned around, he was surprised to see that the Oracle had pressed itself against the glass, as if to see him better. It was a hideous sight, seeing all of the creature at once. It looked to be in poor shape, but Cyrus knew better.\n\nThe damned thing seemed to shapeshift at times, but never in a measurable way. It was always a humanoid with a pair of large wings and glowing eyes, but that was where similarities ended. Sometimes the antennae would be much longer and thin, or short and furry. Its wings would droop and drag behind it on the ground, but now they stuck out and fluttered as it moved. Decades of researchers had studied this demonstrable evidence of the Mandela Effect, but progress was greatly hindered by the fact that files and pictures would alter themselves to match the current variant they could see. Any sort of research based solely on shifting memories and opinions would inevitably lead nowhere, but the Order was determined to keep trying.\n\n\"I don't know,\" he replied. \"Not because I think less of you or him. But if I were to guess...I think he's a good man. Better than you or I deserve, that's for certain.\"\n\n\"I see.\" The Oracle sounded relieved as it moved back from the glass. \"If given the opportunity, I would so love to meet him.\"\n\n\"Fat chance,\" Cyrus muttered as he let himself out. His escort waited for him outside, and they led him to a room where he could spend the night before setting out in the morning. As sleep came for him, he kept going over his conversation with the Oracle.\n\nNo matter how many times he replayed the words, he knew the Oracle had gotten the better of him. He just couldn't figure out how. As he tried to tease out what he had missed, a random thought surfaced.\n\nHe had forgotten to mention the broken speaker to maintenance. Shaking his head, he reached for the nearby landline to let someone know.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe forest was alive in a manner that Abella had never experienced in her centuries of life. The trees rustled their branches at her in greeting as Nirumbi children circled their base, playing a game that involved two sticks and a stone. Up above, a tiny cluster of sprites watched with great interest.\n\nEver since Mike had awakened the forest, fae creatures had returned to the land. Some of them had been in a state of hibernation, surviving deep within the soil. Others had migrated over from the fae realm with the blessing of the Queen. It was part of a treaty he had signed with the Queen, allowing her people a place to stay outside her realm as long as she devoted defenders to the border. A tribe of rock trolls now patrolled the edges of his property and reported directly to Bigfoot.\n\nWalking past the fairy glade, she approached the large spider's web in the middle of a clearing. Ensnarled twenty feet above, Leeds glared down at her with a malice that nearly radiated heat.\n\n\"You look comfortable,\" she told him.\n\nLeeds spat at her, only to be zapped by one of the many sprites supervising him. The sprites were humanoid in shape, and carried little rods that fired bursts of magic that caused a terrible burning sensation. Leeds flinched, his lips curling up in pain.\n\n\"So is today the day?\" he asked. \"After so many weeks, has the Caretaker decided what is to become of me?\"\n\nAbella shook her head. \"I'm just here to move you,\" she told him, then nodded to a group of nearby gnomes. They gave her a salute and scrambled up the trees that supported the web. Using sharp blades, they cut the ropes in a manner that had Leeds sink to the ground as if in slow motion. Once he was within reach, Abella slapped a silver collar around his neck.\n\n\"What is this?\" he asked.\n\n\"You tell me,\" she replied. Ratu had made it to keep him from ducking into the shadows and escaping. Suspending him in the air had prevented this, but keeping the area well-lit every night had been a time intensive endeavor.\n\nLeeds regarded her with anger, then grunted. \"You know I can't read your mind, don't you?\"\n\nAbella nodded. She had wondered for a long time why he had taken special care to remove her before the fight. Originally, she thought it had been her strength he feared. But after much discussion with the others, it was the fact that she had figured out that he couldn't read her thoughts. Without knowing what was going on in her head, he couldn't predict her actions, nor use them against her.\n\nIt was also the reason she had been sent to move him.\n\n\"This way.\" She grabbed him by the scruff of the neck and pulled him to his feet. The webbing that Eulalie had wrapped him in lasted for a few days at a time. These strands had another day of use at most, and a couple ripped free. Grabbing hold of a loose (but strong) strand, she pulled him forward.\n\nIt didn't surprise her when Leeds fell onto the ground and went limp.\n\n\"If you expect me to behave, you are wrong,\" he explained.\n\n\"Suit yourself.\" She grabbed him by the tail and dragged him through the woods. Just beyond the clearing was a tiny shed without any windows, and she stopped just short of the door.\n\n\"Is this to be my new home?\" he asked sarcastically. \"You are locking me in a porta-potty?\"\n\nWhen she opened the door, a blast of cold air blew across her skin. Leeds recoiled at first, then tilted his head for a better look.\n\n\"I don't understand,\" he said.\n\n\"You will.\" Abella grabbed him by the wings and threw him through the portal on the far wall. When she followed, she found him biting at his bonds in a last-minute bid for freedom. They now stood in a small yurt with no windows and a flap for a door.\n\n\"Where have you brought me?\" he demanded.\n\n\"I'll let the Caretaker explain.\" With a smirk, she wrestled Leeds onto a nearby gurney made of steel. Ratu had enchanted the cuffs to clamp down on his limbs, and Abella was soon pushing him through the leather flap and outside. They were on a rocky trail, surrounded by steep cliffs.\n\n\"Where is he?\" Leeds snorted and fog billowed from his lips. \"I would have him see me like this! Come see your own cruelty, dammit!\"\n\n\"Oh, he's busy. Sorry, I almost forgot.\" She knelt below the gurney and turned on the speaker that sat on the bottom. It was plugged into an old mp3 player that had been duct-taped to the back of it.\n\n\"Hello, Leeds.\" Mike's voice crackled to life through the speaker. \"I'm sorry I couldn't be there in person to see just how wretched you are, but I have been busy with important things.\"\n\n\"He lies!\" Leeds laughed hysterically. \"He is afraid of me and cannot bear to watch my execution! Not that it will work,\" he hastily added.\n\n\"I will try to keep this brief,\" Mike continued. \"You see, you took something from me that can never be replaced. You were inside my head, saw how much she meant to me, maybe even how much we meant to each other.\"\n\n\"Kiss my ass, Caretaker. Wait, where are we?\" Leeds craned his head to look at the rocky overhang that blotted out the sun. The overhang became a cave, eight feet tall and cut in a perfect circle. It descended at a gentle angle, and Abella clicked the button on the side of the gurney that turned on the headlights that Tink had made for her.\n\n\"You are a complicated man, Leeds. Brought into this world and cursed with a human soul while wearing the body of a hideous beast. If I had been cursed as you, would I have done the same? Would I have gone out of my way to cause pain and suffering? It's not something I can answer, but I will say this: if I had, then I deserved whatever I had coming.\"\n\nLeeds struggled against his bonds as Abella knelt down to pause the audio.\n\n\"Why don't you just dip me in holy water and get it over with? Oh, that's right, I'll be back in a couple of days,\" Leeds yelled. \"You had a chance to destroy me, do you know that? YOU COULD HAVE ENDED ME! I felt all that dark, beautiful power, and you WASTED IT!\"\n\nAbella winced once the shouting was too loud. She slapped Leeds hard enough that the gurney teetered.\n\n\"You are too noisy,\" she told him. \"Now it's my turn to speak, and you're going to listen. Understand?\"\n\n\"What the fuck are you about?\" Leeds asked, one wing popping free. Abella paused long enough to clamp it down to the gurney, then continued her descent. \"I don't give a shit what you have to say.\"\n\nAbella raised a hand in warning, and Leeds became quiet.\n\n\"When you trapped us in that cave, I thought my life was over. In the process of trying to save someone, I nearly died,\" she said.\n\n\"I wish you ha--AAA!\" Leeds cried out when Abella hooked her fingers into his nostrils and pulled.\n\n\"My wing was busted, I could barely move. I slipped in and out of consciousness from the pain.\" Abella relaxed her fingers a bit. Satisfied that Leeds would be quiet, she continued.\n\n\"Velvet and I had a brief but complicated relationship.\"\n\n\"I'm aware.\" Leeds replied softly. \"I could see inside her head.\"\n\n\"That's right, you could.\" The house had discussed Leeds' ability to read minds. In their discussions about what to do with him, they knew that he would try to manipulate them using their own thoughts. However, it had been brought up that Leeds needed to feel superior to whoever he was dealing with. At best, he was a narcissist, and they would use that to break him.\n\n\"If she had left me behind, maybe she would have made it out and lived. It's not really my place to say.\" Abella kept her gaze on the stone walls of the corridor. She was afraid that if she looked at Leeds, she would be unable to continue speaking. \"I know that I wouldn't have survived. My kind aren't invincible.\"\n\n\"Does this discussion have a point?\" he asked.\n\n\"She spent the rest of her life dragging me free of that mountain. I owe her my life, and that's not a debt that's easily repaid. Maybe it's a kind of poetry that I am pushing her killer down into a mountain.\"\n\nLeeds groaned. \"Please don't tell me you're about to get weepy.\"\n\n\"I am not.\" In fact, she wanted to say more on the subject, to tell him that her path to salvation was about to become his path to damnation.\n\nBut she knew better than to ruin the surprise. He would have plenty of time soon to contemplate this conversation. The subject of Leeds had been hotly debated, and Mike's plan had been complicated.\n\n\"I don't understand,\" Eulalie had argued early on. \"Why can't you just force him through a hell gate, like you did with that priestess lady? He could suffer for all eternity in there, why go through all this extra effort?\"\n\n\"Because Leeds is a demon,\" Lily replied. \"His soul will suffer while he's there, but he could be summoned back someday. It could be never, or it could be next week. Is that a risk we want to take?\"\n\nAfter some more back and forth, Eulalie had finally realized the brilliance of Mike's plan and agreed. Since she was constantly securing him in her webs, Ratu had used an amnesia spell utilizing a glass jar and some marbles to steal those memories away. They didn't want Leeds extracting the information from her.\n\nAbella arrived at the end of the corridor. Leaning against the wall was Ratu, a glowing light hovering overhead as she paged through the Grimoire.\n\n\"What do we have here?\" Ratu kept her face solemn with the greeting, her scales shifting over her skin. \"Is this that little troublemaker I've heard so much about?\"\n\n\"Please.\" Leeds started laughing. \"You can act tough, but someday, I'll come for you, too. I'll come for all of you! Maybe it'll be when you're asleep, or maybe I'll wait until that little egg of yours hatches! That's right, I know the sister has it!\"\n\nAbella jammed her thumb into one of Leeds' eyes. While he screamed in pain, she knelt down to hit play on the mp3 player as she stopped squeezing his eye.\n\n\"Leeds. I want you to understand something about me. All my life, I've been told that forgiveness is the answer. I should forgive my mother, I should forgive my ex-girlfriend, I should forgive that friend in college who stole my credit cards. You should be aware by now that humans make entire movies about the power of forgiveness.\"\n\n\"Oh, please forgive me, Caretaker, I need it so bad!\" Leeds jerked his head away and tried to spit on Abella. \"Did he forgive you for failing?\"\n\n\"There was nothing to forgive,\" she replied, then held up the player and pressed play again. The next part of the message was too important not to be heard.\n\n\"They say that you should forgive, but not forget,\" Mike continued. \"That there's a lesson to be learned from all of this by the people on both sides. But you know what? I'm so fucking tired of being the better person. I'm tired of living with the pain of your deeds, and being expected to measure up to a higher standard.\n\n\"So here's what I'm going to do. Since I can never forgive you, I'm going to forget you. We all are. Once this message is done, I am meeting with a man from the Order and he is going to wipe away our memories of you.\"\n\n\"Wait, what? The Order?\" Leeds looked from Ratu to Abella. \"There's no way you have contacts inside the Order, those guys are assholes. If they knew you existed, they would come down on you and...\"\n\n\"A deal was made,\" Abella replied. \"It doesn't matter if you believe it or not. Once we're done here, we will forget you as well.\"\n\nIn fact, there was no such deal. Mike had no intention of cheapening Velvet's death by erasing his memories of her killer, but that wasn't the point. They needed Leeds to believe he had been forgotten, because it would make what came next a thousand times worse.\n\n\"You can't forget about me!\" Leeds puffed up his chest on the gurney. \"I'm the Jersey Fucking Devil! So that's it, you all are going to lock me away? In a cave? You're all insane if you think this won't stop me.\"\n\nAbella noticed that Leeds' collar had flashed a couple times, and now glowed as if heated. She hit play on the mp3 player and then helped Ratu remove Leeds from the gurney.\n\n\"There are so many things I want to say to you,\" Mike continued. \"But why bother? In just a few minutes you will mean nothing to me. Reduced to little more than a Wikipedia page and shitty truck stop merch, nobody will ever give a fuck about you ever again.\"\n\nThe speaker went silent as Ratu and Abella shoved Leeds up against the wall.\n\n\"You can't do this to me! You can't...what's your story?\" Leeds asked, looking at Ratu. His eyes glowed, but his face faltered. \"You're...different. It's like you're hollow inside.\"",
        "\"My mind is a mirror,\" Ratu replied. \"So all you will see is a reflection of your true self.\" As a demi-god, she was easily capable of thwarting a simple mindread.\n\n\"I am not hollow!\" Leeds struggled against his bonds. \"I am not just a footnote in history!\"\n\n\"Maybe not today. But soon.\" Ratu shoved Leeds into the smooth alcove behind them with surprising strength. The Jersey Devil fought and screamed as they pushed him in and forced him into the fetal position as Ratu shrank the stone walls around him.\n\nLeeds shrieked at them from his stone prison as the walls closed in.\n\n\"He needs to come see me!\" he screamed, his voice echoing down the tunnel. \"I deserve better than this! I will come for him, and I will come for his daughter! You haven't seen the last of me!\"\n\n\"Do you know what I think?\" Abella moved her face closer to the shrinking hole in the wall. Leeds shifted his face around so that he could see her. \"I think you're about to get the one thing that your mother never gave you.\"\n\nLeeds' eyes went wide in fury.\n\n\"A really long hug,\" Abella told him, then backed away. His response was drowned out as the stone closed around him, but she could already hear his screams. The silver collar would keep him from escaping for now, but he would have plenty of time to remove it. Lack of food, air or water would make him extremely uncomfortable, but definitely wouldn't kill him.\n\n\"Let's roll.\" Ratu sat down on the gurney, her legs splayed to either side as she held the Grimoire in her hands. Abella pulled the naga up the tunnel as Ratu performed a complex spell that generated tons of granite behind them.\n\nThe plan had been devious. Mike and Ratu had located a mountain in the tower world that the centaurs would never have a use for. The area wasn't suited for agriculture of any kind, and the cliffs were unclimbable. The terrain was treacherous enough that no path even existed within miles of the area.\n\nFor two weeks, Ratu had used the Grimoire to scour the entire mountain free of its cave network and replace its composition with granite. This pocket dimension had no plate tectonics, and they had placed Leeds deep beneath the world. In the eons to come, even if the winds scoured the world free of mountains, he would remain beneath its lifeless surface, screaming for all eternity.\n\nOr the world would collapse and destroy him. Abella didn't care which came first. But the most important thing was to make him believe he had been forgotten, that nothing he had done had even mattered to Mike.\n\nIt was slow work as Ratu filled in miles of tunnel with more granite, pausing occasionally to drink a tea she had brought to replenish her magic.\n\n\"Why do you need the book to keep using that spell?\" Abella asked during one of the breaks. \"I figured you would have it memorized by now.\"\n\n\"The spells in this book are very special,\" Ratu replied. \"And their cost is forgetfulness. Once the book is closed, the forgetting begins. A simple mistake on my part could spell the end of us, or give Leeds a way out.\"\n\nAbella nodded. Even if Leeds regained his ability to move through the shadows, there was over a mile of solid stone in every direction. With no hollow spaces, he would be forced to teleport or even resurrect in his own personal hell.\n\nIt was the Mother's Embrace taken to the next level. Death would never come for Leeds, and Ratu had embedded sigils made of metal all over the mountain to ensure that he could never be summoned away. It was an eternal prison of their own making, and it was the perfect place for him to be alone with all his thoughts--forever.\n\nWhen they left the cave, Mike stood there with Eulalie and Bigfoot. It was clear that tears had been shed, and the Arachne held hands with her uncle as Abella and Ratu emerged into the light.\n\n\"It is done?\" Bigfoot asked.\n\n\"It is.\" Ratu turned around and erased the cave opening from existence. There was no sign that they had ever been there, save for the structure built to establish a portal.\n\n\"With his misery, my healing shall finally begin.\" Bigfoot turned to Mike and put a hand on his shoulder. \"And let us never speak of this place.\"\n\nMike nodded, then let Bigfoot pull him in for a hug. Eulalie said nothing as she fingered the dog tags around her neck, then hugged Mike as well. Ratu led the others through the portal, leaving just Mike and Abella behind.\n\n\"Thank you,\" he told her. \"I couldn't have done this without you.\"\n\n\"Nor I, you.\" When she hugged him, she buried her face in his shoulder and inhaled his scent. She had worried for the longest time that he would hold Velvet's death against her, but it never came up. He was too good for that, maybe even too good for her.\n\nStill, being able to be the instrument of Leeds' burial was cathartic. Burying Leeds alive had been her idea, and the others had been all for it. \"He was panicking as we left,\" she told him. \"Freaking out that we weren't taking him seriously any more. I could still hear him screaming through the rock for a bit after we left him there. He was more upset that you didn't come than anything else.\"\n\nHe nodded. \"That was Jenny's idea. I'm debating therapy for her, but think she would break the therapist.\"\n\n\"Maybe she's fine the way she is. We all have our quirks, after all.\" She ran her fingers through his hair. \"I like it now that it's getting long,\" she told him.\n\n\"Been too busy fucking for a haircut,\" he told her, then turned toward the portal. \"Did you still want to do the honors?\"\n\n\"Absolutely.\"\n\n\"See you soon.\" He gave her a kiss on the forehead and then left through the portal.\n\nShe watched him exit the shed on the other side, then walked back out of the hut. Staring at the wall of the cliff, she thought of the wretched being entombed inside for all eternity and found herself smiling.\n\nWith that, she summoned her heartfire and burned down the hut. It didn't take very long, and she was careful to spread the ashes with her tail, grinding them into the shattered rocks beneath her feet. Satisfied that the evidence was removed, she stretched her wings wide, stopping briefly to admire the glittering silver veins that ran throughout her left wing. Emery had done a phenomenal job patching her up.\n\nWith a powerful burst, she launched herself into the air, circling higher and higher until the cliffs were far below her. In the distance, she could make out the valley where the centaurs roamed, and the vast ocean that surrounded the island. Up on one of the highest mountain peaks, a single tower glistened in the sun, watching over the land. She could sense him already, her Caretaker, like a shining beacon guiding her home.\n\nKnowing that Mike was waiting for her, she soared through the clouds, leaving the darkness of the Jersey Devil behind.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nMike stood on the bluffs overlooking the greenhouse's jungle. Down below, the centaurs had finally cleared enough land to establish the beginnings of full blown agriculture. In the distance, he could see the thunderbird as it soared toward the horizon, creating a fresh storm behind it.\n\nAcross his chest, he wore a special bag that Tink had designed for him. Inside, the egg thrummed against his chest. It had been nearly a month since Leeds had been entombed, and his world had finally reached a state of calm.\n\nMost of his time recently had been spent clearing out the Vault. After Beth had sealed it away, the entities inside had made a mess of the place in their attempts to escape. Ratu had helped them with identifying, relocating, and sometimes destroying dangerous objects that might have caused trouble in the future. Now that the naga was feeling better, she had taken custody of both the Grimoire and Osiris' magic cock for further study.\n\n\"There you are.\" Quetzalli came through the greenhouse door, her skirt catching briefly on the latch. Grumbling, she fixed her outfit and closed the door. \"Naia said you would be here.\"\n\n\"I sensed him.\" He waved his hand at the thunderbird. \"I was out in the garden with Amymone when I felt the thunderbird's presence.\"\n\n\"Your senses are getting stronger.\" Without warning, she flicked a stone at him, boosting it with a powerful shock from her fingertips.\n\nHis precognition activated, and Mike willed the stone away from him. His magic reacted, swatting the stone away with a burst of static when it was inches away.\n\nWith so many powerful magic users, it had been a difficult choice picking someone to train him. His magic relied heavily on instinct, which made early lessons with Ratu and Yuki difficult to follow. Naia and Amymone had been able to show him some basics, but it was nowhere near the level of control that Beth already showed. It didn't surprise him how quickly she took to her new abilities.\n\nIn fact, during her tutelage, she had discovered that the cabin was actually a better place for her to learn elemental magic. The hot springs in particular gave her insight into earth, fire, and water, but that was above Mike's head. Oregon was still a difficult place for him to visit, so when Beth asked if he would mind if she stayed there for a while to develop her magic, he agreed on the condition that she try to help Bigfoot organize the forest children. While the forest children respected him, the sasquatch lacked leadership skills and planning that Beth could provide.\n\nThat, and if the gossip he heard from the fairies was true, Beth was indeed discovering just how good of a kisser Bigfoot really was. It made him smile to know that she was living her own dreams, though he did miss having her in the room next door. The two of them had been bonding over their newfound magical abilities, but Beth had soon eclipsed him.\n\nAfter weeks of frustration, a chance encounter with the Fairy Queen had given him the solution to his magic problem. Titania had explained that his magic was simply too wild. Whereas Beth was learning how to manipulate the elements using spoken words and gestures, his magic acted on will alone, both conscious and subconscious. He was a force of nature, and needed someone with experience handling vast amounts of destructive power.\n\nQuetzalli the storm dragon had been an unexpected, perfect fit. Mike's magic was very much like a stormcloud, building in power before releasing all at once.\n\n\"Reactions are getting better.\" She walked up by his side and leaned her head onto his arm. \"I checked in with Bigfoot this morning. He's been teaching English to the Nirumbi. It's mostly the children for now, they're the easiest. He's been reading them books that the girls grew up with.\"\n\n\"That's wonderful.\" He debated asking if Bigfoot would save those books for him, but decided not to. Eulalie had warned him that his daughter might be a danger to him in the first couple of years. She had bitten her father a couple of times by accident, and Velvet had broken Darren's wrist. It wouldn't be simple being a father to a child with eight legs and fangs, and things would never remotely resemble normal ever again. By the time it was safe to cuddle up with his daughter and read her tales about the Poky Little Puppy, she would probably be past those storybooks.\n\nBesides, Ratu was already working on an artifact that would allow his daughter to age naturally in the Library. He would have every book at his disposal if he wanted to try reading to her. If he broke a few limbs along the way, it wouldn't be the end of the world...right?\n\nHe put his hand on the egg and let out a sigh. While he couldn't wait to meet her, he knew things were going to change. He was a target, and there would be times when the best thing to do would be to keep his child at arm's length. While the others understood, how would he tell his daughter that he was too busy not being murdered to play with her?\n\nHe held out his hand and concentrated his magic. Lights danced along his fingertips as it formed into the shape of a spider. It was a great spell to work on when he needed to take his mind off his worries.\n\n\"That's neat.\" Quetzalli contemplated his design. \"What are you planning to do with that?\"\n\n\"It helps me talk to them.\" He had the little lightning spider wave. Despite Velvet's death, he had discovered that he could still communicate with spiders. Many of them feared humans, but the illusory spider seemed to break the ice. It was another thing Velvet had left behind, something that was just for him. He dismissed the magic, then sighed. \"Some days are easier than others.\"\n\n\"Agreed.\" She rubbed his back through the fabric of his shirt. \"Speaking of easy...what would you say to finding somewhere private for a bit? Dana has been having more issues with her emotions, and time for us has been...sparse.\"\n\nQuetzalli was likely understating it. Ever since the fight in Oregon, Dana's emotions had been all over the place. It was like the emotional side of her brain had been restored, but never properly synced to the rest of her body. She would laugh at inappropriate times, or sob uncontrollably while she went about her business. Ratu's theory was that it had to do with all the magic that Mike had poured into her, along with the Nirumbi flesh she had devoured. The naga was working hard on figuring out a possible fix for the issue. Despite the potential meaning of Dana's new behavior, her soul was still very much locked to her body.\n\n\"We could make some time,\" he told her with a smile. \"I know of a pretty waterfall nearby if you want to go for a swim.\"\n\n\"Can that wait for a little while?\" Zel walked up on the path from the valley below with a small retinue behind her. \"I saw you up here and have some important things to discuss.\"\n\n\"Sounds serious.\" He saw a weird look on Zel's face. \"Everything okay?\"\n\n\"To start with, we have some news.\" She reached into a pouch around her waist and pulled something out. \"What does this look like?\"\n\nShe tossed it over, and Mike snatched it out of the air, then nearly dropped it in surprise. It was a thick vine with wilted leaves, but he recognized them immediately. They were the same vines that had once dragged him through the jungle to what was almost a very messy end.\n\n\"I thought the Mandragora left,\" he said.\n\n\"So did I.\" She made a face. \"Some of our livestock went missing, and we think this is the culprit. Maybe it came back, or was just dormant for a while. We found this stuck under a fence that collapsed.\"\n\n\"Well, we know who we can ask.\" He stuck the vine in his pocket, planning a conversation with Amymone once he returned. \"Just make sure it doesn't snatch anyone up.\"\n\n\"Nobody has disappeared yet.\" She looked over her shoulder at the centaurs with her. At some unseen signal, they turned around and went back down into the valley. \"I wanted to have a word with you in private.\"\n\n\"Say no more,\" said Quetzalli as she sat on a nearby rock. When Zel stared at her, the dragon laughed. \"I'm just fucking with you. I'll be in Oregon when you need me. I prefer the skies there.\" She stood and went through the door of the greenhouse. The path to Oregon was through a small cabin, somewhat like a playhouse, that Tink had built by the wrought-iron gate. The portal inside went to a room in the new barn that had been built in Oregon.\n\n\"What's up?\" he asked once Quetzalli was gone.\n\n\"I have a confession to make.\" Zel made a face as she paced by the side of the cliff. \"You see, I had a choice a while back, and I don't know that I made the right one.\"\n\n\"Life is full of choices and hindsight is twenty-twenty.\" He walked up behind her and put his hand on the small of her human back. \"I'm willing to bet that you thought long and hard before making it.\"\n\n\"I did. But a conversation with a friend has been playing itself over and over in my head.\" She looked at the egg pouch and smiled. \"How long until it hatches?\"\n\n\"No idea. I take her for walks, talk to her, that kind of thing. As for keeping track of time...\" He shrugged. \"I'm trying to enjoy the moment is all.\"\n\n\"You and I once enjoyed a moment here. Do you remember?\"\n\nHe smiled. \"How could I forget? It was quite the moment.\"\n\nZel looked at the ground while pawing at the dirt with a hoof. \"About that. I need you to know that what happened that night was probably one of the most important things that has ever happened to me. It validated me as a person. You made me feel special, accepted in a way I never thought would happen.\"\n\nHe pulled Zel toward him, then wrapped his arms around her waist. \"Believe it or not, it's one of my favorite memories. I've been thinking a lot lately about not just how my magic works, but my heart. I have so many cherished memories with all of you, it's hard to pick a favorite. But that one? No argument.\" He could still hear the music from that night, see Zel smiling in the moonlight as they made love beneath an alien sky. It was a nice change of pace to lose himself in a happy memory.\n\n\"Uh, Mike?\" Zel stiffened in his arms.\n\n\"Shit, sorry.\" He let go of her and stepped back. \"I got nostalgic is all. I wasn't trying to put moves on you, I promise. I definitely don't need to start a fight with the centaur in your life, and we certainly don't need a repeat of the Orion incident.\"\n\nZel made a sound like a balloon deflating as her shoulders drooped. \"It's not that. I enjoy your touch, but I don't deserve it, not when you hear what I have to say.\" Her face scrunched up as she took a calming breath. \"Mike. There is no centaur in my life. I made him up. There's only ever been you.\"\n\n\"But I don't get it. What about...\" He gestured toward her equine belly, his lips suddenly numb.\n\nThe look on her face spoke volumes. She turned away from him, her arms crossed her stomach. \"I lied. That was the choice I made, and I regret it.\"\n\nSo many questions raced through his head, he couldn't figure out which to ask first. \"How?\" was the best he could manage.\n\n\"Humans and centaurs can't interbreed. But I was using a potion to make myself human, remember?\" She shook her head, the feathers in her hair fluttering wildly in the breeze. \"My best guess is that we crossed whatever line that separated us biologically. The child won't be human or centaur, but something in between.\"\n\n\"But why keep it from me?\"\n\nShe shrugged. \"Fear. Not for you, but for our child. I had become a leader to my people, which comes with responsibilities. You are the Caretaker. How many times have you almost died? How many times has the house been attacked?\"\n\n\"You spoke with Eulalie about this, didn't you?\" He thought back to what the Arachne had told him. Zel was saying a lot of the same.\n\n\"She figured it out on her own. Snuck into my home in the middle of the night and confronted me where nobody else could hear us. Scared the crap out of me when she dropped out of the shadows.\" Zel shivered. \"It was a heated conversation at first, because I tried to deny it. She had plenty of evidence, then told me about the egg, so I finally caved and admitted it. All my thoughts and fears came spilling out that night. It was the first time I had told anyone the whole truth of the matter.\"\n\n\"So why wait until now? Why not tell me sooner?\"\n\nShe sighed. \"I wanted to see how you reacted to the news about Velvet's egg first.\"\n\n\"Why, to see if I would be a good parent?\" He felt his anger rising as he cradled the egg protectively. \"I mean, yeah, I'm essentially doing the egg-baby project from middle school, but I think it's real shitty that you were trying to vet me before informing me we're having a child together.\"\n\n\"That's where you're wrong.\" She moved toward him and put her hand on his chest. \"I wanted to see if you would force traditional human customs on Eulalie. Make her give the egg to you, demand that your daughter live in the house full-time instead of taking her advice. I can't blame you for holding to human norms for child-rearing, but our foal will require their connection to the herd. The herd raises all offspring together, it's the centaur way. Yes, we have parents, but this child will have hundreds of parents watching out for them, all day long. If you made them live with you in your house, they wouldn't have that direct connection to their own tribe, and would never be more than a visitor.\" She paused for a second and smiled wistfully. \"It would also be hell on your wooden floors.\"",
        "Mike contemplated her logic, his anger at her deception fading. The realization that Zel's choice had been more about the child than him tempered his feelings. His own damaged childhood had been the result of destructive selfishness, and he had vowed long ago to be different.\n\n\"I still don't like that you lied to me,\" he muttered. \"You make good points, but I really wish you had more faith in me as a person. I don't know the first thing about being a parent, especially one that isn't fully human. I would have deferred.\"\n\n\"And for that, I'm truly sorry.\" She moved her hand to his cheek. \"And I want you to be there for our foal, but we both know you can't be around full-time. You're the Caretaker, your role is so much bigger than either of us realize. After what happened with the horsemen, I can't help but feel you have a bigger destiny waiting for you.\"\n\n\"I certainly hope not.\" He patted the egg. \"I've got enough excitement in the near future as it is.\"\n\n\"In just a few more months, actually.\" Her lips were now next to his. \"That is, if you can forgive me.\"\n\nWhen Zel moved close, he felt the egg vibrate against his chest. Waves of heat traveled through his chest to his hands.\n\n\"Oh!\" Zel's flanks rippled and her eyes widened in surprise. \"It just kicked! Want to feel?\"\n\nHe paused, taking in the excitement in her eyes. Nothing about his life was ordinary, and it never would be again. As waves of heat pressed into his fingertips, he shifted to the side so that he could place his hand on Zel's horse-stomach. A sharp poke hit the palm of his hand, like a high-five.\n\nA feeling of recognition radiated from the egg in response.\n\n\"We're going to be parents.\" He took Zel's hand in his and squeezed. \"I'll try not to fuck it up.\"\n\n\"So you forgive me?\" Her eyes were full of shimmering hope.\n\n\"We're both going to make a lot of mistakes.\" He placed his hand on the egg and smiled. \"Maybe forgiveness is a great thing to have in common.\"\n\n\"Thank you.\" She kissed him lightly on the cheek.\n\n\"Do you want to hear something funny?\" A small grin broke through his lips.\n\n\"I would love to.\" She hugged his arm and laid her head on his shoulder.\n\n\"I'm going to have two kids with a total of twelve legs, yet will never have to spend money on socks, shoes, or pants.\" He waved his hand dramatically at the sky. \"Just think of the savings.\"\n\nShe rolled her eyes. \"I thought dads were supposed to be funny,\" she said.\n\n\"I've still got a lot to learn about being a dad,\" he replied with a grin. \"But I'm looking forward to the challenge.\" It was going to be hard, but worth it. He stood there with Zel, their gazes on the horizon as the egg pulsed in its carrier, filling him with love and light.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe steady thump of rain on the roof was punctuated by distant thunder that made the old plantation house's bones creak. Moonlight reflected in the dozens of puddles that had formed in the front yard, making it look as if hidden creatures watched the home in anticipation.\n\nA cry of agony fluttered down the hall, making Elizabeth shiver. She ran her hands down the long braid of her hair and turned her attention away from the window toward the small figure who sat across from her reading a book. It was a young man with bleach-blond hair and a tattoo on his wrist. The skin around his hairline was peeling away to reveal gray patches underneath.\n\n\"You're going to need a new body soon,\" Elizabeth said. \"That one doesn't have much time left.\"\n\n\"Tell me something I don't know.\" Sarah's voice was husky, a result of male vocal cords. She adjusted the glittering stone that hung around her neck. \"With this weather being so shitty, my options have been limited, Mother.\"\n\nThere was another cry of pain, but Elizabeth put it out of her mind. There was nothing that could be done for Amir in his current state, but now that he had a mouth, his regeneration was quite unnerving. It was why they were using a property that had been abandoned long ago. While they could afford to stay somewhere nicer, the screams would be hard to explain.\n\nAmir shrieked, causing the lights above them to turn on spontaneously and then flicker.\n\n\"Shit.\" Elizabeth walked over to the nearest lamp to unscrew the bulb, but it continued to glow in her hand.\n\n\"At least we know he's still as powerful as ever,\" muttered Sarah. \"Would hate to go through all of this and--\"\n\nElizabeth summoned a spectral hand and slapped her daughter with it.\n\n\"He may not have ears yet, but he has ways of hearing us,\" she warned. \"Unless you want him to make a pig wear that necklace, I suggest you shut the fuck up.\"\n\nSarah rolled her eyes. \"Fine,\" she muttered, setting down her book. \"I just hate what we've been reduced to. We were once the most powerful men and women in the world, and now we're... this.\" She gestured at herself in disgust. \"And let me tell you something else. I've been--\"\n\nSomeone knocked on the door, cutting Sarah off mid-sentence.\n\nElizabeth scowled, then walked toward the front door. There was absolutely no good reason for anyone to be on the property in the middle of a rainy night, so she summoned shadowy tendrils around her body as she walked. Once at the door, she started weaving a spell that would allow her to see through it when the knock came again.\n\n\"You can forget about using your magic,\" a voice warned her through the thick wood. \"At best, you will need a new door. It has been a long journey and I am tired.\"\n\nCautious, Elizabeth opened the door, wondering if someone else from the society had survived. As far as she knew, it was just her, Amir, and Sarah, but stranger things had happened.\n\nThe dark figure on the porch was pale with a cruel, bloodless smile on his lips. He took off the hat he wore and placed it over his stomach as if getting ready to enter church.\n\n\"The hour is late,\" he informed her. \"I have words I would discuss with your master.\"\n\nElizabeth frowned, then opened her mouth to ask who he was, but no sound emerged. She clawed at her throat, gasping for air.\n\n\"I don't speak with underlings,\" he declared. \"Unless you were going to invite me in?\"\n\nShe gasped and nodded, beckoning the man inside.\n\n\"Thank you.\" He stepped across the boundary and handed Elizabeth his hat. \"Show me where he is.\"\n\nStunned, she obeyed without a second thought. The stranger followed her through the house, pausing long enough to hold his hand out at Sarah.\n\n\"You can sit there and be quiet,\" he commanded.\n\nSarah obeyed, panic filling her eyes.\n\nElizabeth led him further into the home, and then down into the basement. In a dimly lit room, what was left of Amir had been strapped to an old, wooden chair. Large parts of his body were simply missing, though his hands and feet were connected to his torso by thick tendrils of darkness. His head had only formed up to his upper lip, and Elizabeth winced as he cried out in pain.\n\nA patch of darkness stained the air over Amir, and bits of ash drifted down across his body. If she stayed and watched, she might see one or two of them ignite and stick to his body.\n\nIt had been months since Amir had been pulled into the mirror world and destroyed. Immune to harm, his magic had been forcing his body through gaps in time and space to return here to Earth. Not only was the process long, but it was apparently very painful as he was reassembled on a molecular level. From where she stood, she could see veins and arteries, as well as some of his internal organs. She imagined the pain came from having severed nerves exposed to the air, but it was a guess at best.\n\n\"Now, now, this simply won't do.\" The stranger pulled a small black doctor's bag from nowhere and opened it. \"By my estimates, it will be a better part of a decade before he comes all the way back.\"\n\n\"A decade?\" Elizabeth looked at Amir. \"By the looks of it, maybe a couple of years?\"\n\n\"The process starts fast, ends very slow.\" He pulled a pair of syringes from his bag and jammed one into Amir's neck. A blue fluid disappeared, and Amir relaxed.\n\n\"You stopped the pain?\" Elizabeth moved closer to see what the man was doing.\n\n\"No. I paralyzed his vocal chords. He still suffers, but now I don't.\" He grinned and used the other syringe to draw blood. \"I believe I can speed up the process, maybe have him back together in a few years. But it will take time and resources.\"\n\n\"Who are you?\" she asked. When the man looked at her, she felt her whole body tense up as he appraised her.\n\n\"You can think of me as a collector of sorts.\" He reached into his bag and pulled something out. \"I'm here regarding this.\"\n\nHe tossed something to her and she caught it. It was a figurine holding a staff, but its features had been charred away.\n\n\"I don't understand.\" She looked at the man as he rose from a crouch.\n\n\"And I don't expect you to.\" He held out his hand and the figurine shot toward his outstretched palm. \"You see, this piece in particular was very precious to me. It took me a lot of years to get it exactly where I wanted it, and now?\" He squeezed the figurine into ash. \"And now it's useless.\"\n\n\"What do you want from us?\" Elizabeth didn't know why, but she was suddenly afraid.\n\nThe man grinned, then took the syringe and squirted Amir's blood on his tongue. He licked his lips and made a sour face.\n\n\"I want your master back in one piece. We have much to discuss, after all. Until then, I suppose we shall have to find other things to talk about.\" He walked closer to Elizabeth, his eyes shining with malice.\n\n\"Tell me everything you know about Mike Radley,\" he whispered, his voice like broken glass. He placed his long fingers around her neck and squeezed hard enough that she knew it would bruise. \"And leave nothing out. After all, we've got plenty of time.\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nAnd with that, Book 5 is officially at a close!\n\nI hope you've enjoyed this installment of HFHM. It was so much fun for me to write, even though parts of it were very difficult. I probably learned more about my own abilities from this book than any previous installment, and where I want to take the series from here.\n\nThe darker tone of this novel was in direct response to an oft-repeated criticism about Mike and how he always seemed to either get lucky or fuck his way out of trouble. I wanted to create a situation where mistakes were made and a price was paid.\n\nVelvet ended up being a very divisive character for many reasons. Some of you couldn't see past her morphology, others disliked how she became a focus for Mike, and many of you fell in love with her. This has always been a story about seeing past what's on the outside, and I took great joy in seeing how many of you were able to do just that with Velvet.\n\nKilling her was a difficult decision, but this has always been a tale about hard truths. Mistakes were made, and someone died. It wasn't something I did lightly, and it bummed me out for months as I wrote of the joy that Mike and Velvet found in one another. Maybe it was just a crush, or maybe something more, but I'm afraid we'll never know for certain.\n\nMany of you have theorized the paternity of Zel's baby since the end of last year, so well done on your part! The clues were there, but I wanted just a bit of uncertainty. Some of you may not agree with the way she handled it, but no character in this tale is perfect.\n\nOne of the biggest lessons for me from this book was how difficult it is to manage and maintain such a large cast. It was important to me (from mid-way through Book 4) to find a way to separate the household into separate locations. Having the natural boundary of Oregon/House/Library not only enables me to tell better stories, but to allow me the freedom to explore stories in those locations outside of the house itself. You can expect better cast organization from me in future installments.\n\nSpeaking of future installments, the tone of Book 6 will be significantly lighter in tone. I wanted to recapture some of the whimsy from the first couple of books, and early reader feedback says that I am hitting that mark quite nicely.\n\nOn the topic of writing, despite some (random and weird) feedback telling me to go away or wrap it up, the story isn't done yet, and I'm not going to let anybody tell me when to stop. It does have an ultimate conclusion I am working toward, and I will not be convinced to squeeze everything together into a final, very rushed story just to make someone who is tired of the story happy. When all is said and done, the ultimate tale of Mike and his family will have a very definitive, satisfying end. I look forward to sharing it with you eventually, but Rome wasn't built in a day and I can only write so fast in my spare time. You lucky bastards reading this in the future probably know exactly how many chapters are left and won't know the struggle of waiting weeks between chapters (future kids and yer damned hoverboards, grumble grumble).\n\nAnyway, my musings are over. Thanks to my beta readers, particularly TJ Skywind, for all their help over the last year. They've been there to catch me when I fall. Thanks to everyone who has rated/commented/subscribed, because you help me stay visible on this platform.\n\nBut most of all, thank you. A writer is only as good as their readers, and you all make me feel so awesome!\n\n~Annabelle Hawthorne\n\nP.S. Fuck Leeds"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "harem",
        "monstergirls",
        "angels and demons",
        "cerberus",
        "grief and loss",
        "jersey devil",
        "some egg love",
        "monstergirl breeding",
        "low sex high face punching chapter",
        "what are tags even"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-78"
}