{
    "title": "Box Shaped Heart Ch. 25",
    "pages": [
        "Chapter Twenty-Five -- Blue Pill, Red Pill\n\n\"Are we playing mime?\" Carter was the first to speak again, seeing that the other was busy expressing his outrage just by standing there, petrified, with an expression of absolute horrified surprise on his perfect face. \n\nAlex scrunched his nose and pulled the chair brusquely, taking a seat without being invited to. Carter felt the need to say something and point out the rudeness, but he could bet that little mishap was going to pale in comparison to what Alex was going to say and do.\n\n\"So, Carter,\" Alex began again.\n\n\"I thought we have already been over the introductions,\" Carter interrupted the other. \n\n\"I cannot believe it! You are just so damn obnoxious! Seriously, I don't understand what Aron sees in you ...\" Alex trailed off, but, by the way Carter grinned at him, showing teeth, it looked as if he understood without words what must have transpired between the two old friends. His cat-like eyes narrowed, and he continued. \"Anyway, what the hell,\" he spoke the words, enunciating them carefully, like he was at a diction contest, not in a private conversation. \"Aron expects me to top, Simon tries to drag me to some ... leather bars, I have an Instagram account, I'm posing for stupid lingerie, and, did I forget something? Oh, sure! I have a sex tape?!\"\n\n\"Technically, not a tape,\" Carter raised one finger.\n\nAlex rolled his eyes. \n\n\"Really? And I heard it was stupid Aron's fault.\"\n\nCarter could feel his jaw hurting, as he clenched his teeth.\n\n\"Don't call Aron stupid,\" he said. \n\nAlex leaned back and looked at Carter through his perfectly curled eyelashes. How could Aron fall for this guy? Carter could not comprehend.\n\n\"I'll be damned ... So, you needed this body,\" Alex gestured toward himself like he was the most prized exhibit at the Museum of Modern Art, \"to get him to sleep with you? Was that the deal?\"\n\n\"The deal? What deal?\" Carter asked, feeling that something was amiss.\n\nAlex leaned over the table again, and spoke to Carter in a hush-hush voice.\n\n\"You know, with those guys ...\" Alex said slowly, his eyes darting around, as if he was expecting to be jumped by the secret service at any moment. \"By the way, I'm not allowed to talk about that. Yet, somehow, I know it's all your fault. Creep,\" he added, after straightening up again.\n\n\"So ... you were, like, inside my body this whole time?\" Carter carefully attempted the question that was plaguing his mind.\n\n\"Not ... exactly,\" Alex preferred to remain vague. \"Just so you know. It was no fun trip, like the one you had. Really, do you have any idea how much you screwed up my life? All kinds of nobodies try to hug me now because apparently I'm allowing it,\" he began rotating his hand, like he was trying to get rid of flies in the most inefficient manner possible. \"Also, you canceled my barre class? Are you nuts? And what did you eat all this time? My face is so greasy,\" Alex complained, touching his face for a fraction of a second and only with the tips of his fingers.\n\n\"Your face is perfect, stop complaining,\" Carter sighed. \"But now that you're here, why on earth do you keep lying about the accident? You know well I didn't push you.\"\n\nFor a second, Alex appeared to look guilty, but that was pushed away as a speckle of dust on a piece of designer clothing. \n\n\"So, what's your version then?\" Alex smiled sweetly. \"Aron says you don't remember,\" he added quickly.\n\n\"He told you that?\" Carter said bitterly.\n\n\"Yes, that, and the fact that you refuse to be friends with him again. See, he does tell me everything. He's MY husband,\" Alex said triumphantly, pointing towards his chest in a manner that clearly underlined his words. \n\n\"You're cheating on him,\" Carter pointed out, pretending the crack in his heart could be fixed with Flex Seal. \n\nAlex shrugged.\n\n\"Marriage is so boring,\" he explained.\n\n\"Then why the hell did you get married?\" Carter asked. \n\n\"Hello, he asked me,\" Alex taunted while flaunting the hand with the wedding ring.\n\n\"Yeah, but why did you say 'yes'?\" Carter continued.\n\nAlex seemed to ponder for a little while.\n\n\"I was bored,\" he said in a tone that could just as well belong to a petulant child.\n\nCarter could feel his head hurting.\n\n\"You were bored, and decided to get married. And now you're bored because you're married,\" he tried to understand Alex's line of reasoning.\n\nAlex yawned and rolled his eyes again, while patting his open mouth with one hand.\n\n\"I cannot believe you,\" Carter shook his head with bitterness. \"Then why don't you leave Aron now? Since you're so bored?\"\n\nAlex stopped and this time, his face transformed, his lovely features turning icy and a tad ugly, if that was possible. A man of many faces, a thought crossed Carter's mind.\n\n\"And let you have him? No way.\"\n\n\"Why?\" Carter asked simply.\n\n\"So you don't deny it?\" Alex's voice was now void of the affectation from before.\n\nCarter was fascinated, for lack of a better word. Alex was the perfect actor. Now he no longer looked like a miffed preteen, but like someone who was bent on destruction in his path. It was like the temperature in the room had just dropped. Also, there was something cold and calculated in his hypnotizing eyes.\n\n\"Deny what?\" Carter asked.\n\n\"That you want Aron,\" Alex said.\n\n\"No, I don't deny it.\"\n\n\"Does Aron know?\"\n\n\"No.\"\n\n\"So what do you want exactly? Why should I leave Aron?\" Alex's eyes filled with unmasked hatred. \"Why should I give you something that's mine?\"\n\n\"Someone. We're talking about a human being here,\" Carter said through his teeth.\n\n\"Yes. About my husband. Was that homophobic rant at my wedding nothing but an act then?\" Alex questioned further. \n\nCarter shrugged. He could not help but notice how Alex had nonchalantly claimed the wedding as only his. As if Aron hadn't been the other party involved. As if Aron didn't matter. His heart clenched painfully. But he could not break down right now. He could not let this man see him like that.\n\n\"I don't know.\"\n\n\"It's funny, though,\" Alex started, as if he was just starting to realize something. \"How quickly you went from a piece of homophobic shit to screwing your best friend. Hmm, so you had no remorse while doing it? What did you like best? For him to fuck you, or the other way around?\"\n\nThere was an ugly glint in Alex's eyes as the guy spoke. Carter decided that he was not going to let himself riled up any further.\n\n\"You don't want Aron. I don't ask you to leave him so I can have him. I'm asking you to leave him, so he can be free. And happy,\" he said.\n\nAlex began laughing and clapped his hands together.\n\n\"Ah, this is so precious,\" he returned to his act from before, in a fraction of a second. \"That is just so noble of you, isn't it? For your information, since you don't seem to get it, Aron is loaded. Yes, I did my research before I said 'yes'. He buys me stuff, stuff that you can't even imagine, with that big head of yours that Aron seems to admire so much I have no idea for what reason.\"\n\nBig? Like big how? Do we have a big head?\n\nOh, you're awake, what a nice surprise.\n\nHe's insulting us.\n\nHush, let him speak.\n\n\"I distinctly remember Aron telling me about other body parts he likes in me,\" Carter crossed his arms over his chest.\n\nWell, he hadn't been in the body of a diva and learned no lessons. Two could play that game.\n\n\"Really?\" Alex grimaced, but Carter could tell he had just managed to strike a nerve with the guy. \"I don't remember that. He must have lied.\"\n\n\"He had no reason to. Now, seriously, how many things do you need? Aron bought you a frigging luxury car, you're squeezing Simon for all he has ... and you wanted to suck off that guy in Accounting for what?\"\n\nAlex turned his head to stare at Carter so fast that bone cracking could almost be heard.\n\n\"Bernie. What did you do about him?\" Alex asked slowly.\n\n\"I told him to fuck off,\" Carter said, just as slowly.\n\n\"Oh, fuck,\" Alex murmured. \"Now I'll have to ... Really, couldn't you be more polite? I could really lose some serious money!\"\n\n\"Like how should I have been more polite? By getting on my knees and sucking the guy's dick?\" Carter asked.\n\nAlex waved. \n\n\"No, you thick-headed bull. Really, you're dumb as a brick. And I wasn't going to give that guy a blowjob, what the hell? I'm much more expensive than that.\"\n\n\"I bet,\" Carter said wryly. \"But he was pretty certain you were going to blow him dry.\"\n\n\"I would have just given him a handjob,\" Alex shrugged. \"But, now, thanks to you,\" he reproached Carter, \"I will have to do better than this.\"\n\nCarter could feel getting sick to the stomach.\n\n\"Are you at least using protection?\"\n\nAlex glared.\n\n\"You're not my mother. Yes, of course I use protection, don't be stupid.\"\n\nCarter exhaled.\n\n\"Good.\"\n\n\"Anyways,\" Alex said brusquely, \"the only reason I put my foot in this dump to talk to you is to tell you this. Stay away from Aron. I mean it.\"\n\n\"Stay away from Aron? You can't forbid him to see me,\" Carter said.\n\n\"Luckily, I didn't have to do that. You did a mighty good job at pushing him away. By the way, bravo,\" Alex clapped two times.\n\n\"He will know you're cheating on him,\" Carter spoke.\n\n\"Are you threatening me? By the way, I am extremely careful, and you have no proof. He won't believe a word you say ... so, how exactly do you plan to let him know that? If it's one thing you seem to have done right this time while being me is that you managed to convince Aron that I'm madly in love with him. Poor thing,\" Alex shook his head, \"I think he was almost this close to believe me when I told him you pushed me in front of that car.\"\n\n\"Fire truck,\" Carter corrected the guy. \"And Aron didn't believe you. I know it.\"\n\nThat seemed to give Alex a small pause.\n\n\"Regardless,\" he replied. \"Now he's eating out of my hand, and the only annoying thing is that I will have to steer him gently towards how things were before. Well, that's concerning Aron. Because you definitely made other things impossible for me. What's with Simon and all his obsession with BDSM all of a sudden? What did you do to him? Thank heavens you didn't screw him, too,\" Alex linked his hands together and looked at the ceiling, as if the said heavens were about to descend from the sky and told him he was right to be so upset about the whole deal.\n\n\"That kid is in love with you. Don't you at least want to treat him fairly?\" Carter spoke.\n\n\"Why should I? Men are easy,\" Alex shrugged. \"Messy in their emotions and annoying.\"\n\n\"You're a man, too,\" Carter pointed out.\n\n\"Yes, but a much clever one than your whole lot,\" Alex gestured around as if he was speaking about the entire male population of the planet, save for him.\n\n\"What is that supposed to mean? Why are you tormenting Aron and Simon? And ... oh, fuck, is there someone else ...\"\n\n\"Don't be silly,\" Alex spoke. \"My mother used to say that a husband and a lover are enough. Anything more than that becomes a complication. Well, except for occasional side gigs, of course.\"\n\nAlex's mother. Just one of the mysteries Carter could not get a hold of.\n\n\"Did your mother teach you how to play men, then?\" Carter asked.\n\n\"Yes, of course, and how to keep them unhappy, because,\" Alex smiled, seemingly completely satisfied with himself, \"if they are happy, then there's nothing else they need. And if they don't need anything, they don't feel like they have to give you anything. So, I'm not giving Aron sex, but I stay married to him, and I'm getting my fix from Simon, while I'm not giving him what he wants either,\" the man explained, obviously satisfied with his strategy.\n\nCarter shook his head in disbelief.\n\n\"That's a toxic way of thinking,\" he spoke.\n\n\"No way!\" Alex exclaimed, in that fake exaggerated way of his that seem to be one of the roles the guy enjoyed playing. \"You're a shrink, too, now? Not that I won't need one after this stupid body exchange or whatever this was. And I'm sure it's going to cost me a fortune.\"\n\n\"So, you're not allowed to tell me about what the hell happened, but you're going to tell a shrink?\" Carter asked in disbelief.\n\n\"As much as I would love to torture you with this, no, I won't tell my shrink, either. But I'll come up with something. Aron has to pay for all this time he spent fucking you.\"\n\n\"And being happy,\" Carter added, with a tinge of regret.\n\n\"Yes, that, too,\" Alex sighed. \"I cannot believe you did it. I mean, you were a homophobe, and while I was stranded ... well, I thought that nothing could ... would happen. And to return to a husband who now expects to have sex almost every night ...\" he shook his head.\n\n\"I won't leave Aron alone,\" Carter interrupted.\n\n\"Say what?\" Alex straightened up, taking a more aggressive stance now.\n\n\"I won't let you ruin his life,\" Carter added. \"He is my best friend.\"\n\n\"He won't screw you, now that you're ... you,\" Alex pointed at Carter's body with what could only be read as disgust in his eyes.\n\n\"I don't need him to screw me,\" Carter said shortly.\n\nWe don't?\n\nNo, we don't. We need to save Aron from this guy.\n\n\"He is and will always be my best friend,\" he added.\n\nAlex's face turned to ice again.\n\n\"So you're willing to go to war against me?\"\n\n\"Not particularly. But I'll do what's right by my best friend, and if this is what it takes, so be it,\" Carter said simply.\n\nAlex stood up brusquely and clutched his man purse while looking down at Carter.\n\n\"Then I think it's on. You won't have Aron, I promise,\" Alex said and turned on his heels.\n\n\"You know what, Alex?\" Carter felt compelled to say something back. \"That dirt in your soul won't cover with concealer.\"\n\nAlex huffed and walked away. Yet, for a second, something happened in the green eyes, and Carter wondered if it was pain he saw.\n\nWhat the hell are we going to do now?\n\nI have no idea. But I need to do something. I cannot leave Aron to be used like this.\n\nAh, damn, something hurts.\n\nDon't think about it, just don't.\n\n***\n\nSo, it was down to apologizing to Aron and trying to get back together as friends. This was hard enough, as it was, Carter thought. But how was he going to go about the fact that he needed to let Aron know Alex was cheating?\n\nHe could not just say it directly. Aron was going to think that he was just a major homophobe again. Hire a private investigator? Go to the press? Alex had said that he was very cautious, and Carter believed him. That was not an easy thing to do. \n\nBut, he needed to take the first step, and just talk to Aron again. It was no longer only about him now and what he was feeling. \n\nThe phone rang and rang. It was nine o'clock in the evening, so Aron could not be sleeping. Okay, the guy wasn't picking up. Maybe he was in the shower.\n\nMaybe he's fucking his husband.\n\nShut up, don't go there.\n\nWhy not? You know it's true.\n\nAron is my best friend. This has nothing to do with anything.\n\nExcept if it makes him happy ...\n\nSometimes I think you're working against me.\n\nHe waited for 20 minutes, looking at the seconds going one by one. How long could a shower take? This time, Aron picked up after several seconds. His voice was raspy, and sounded like he had been running.\n\n\"Carter?\" Aron asked, like he could not believe it.\n\n\"Yeah, I'm ...\"\n\nThere was a small giddy laugh in the background, and Carter could feel his hand moving on its own accord to cut the conversation. He ground his teeth and after a second, he spoke.\n\n\"I'm calling to ... say that I'm sorry, and to ask if you would like to hang out. Sometime. Not right now.\"\n\nWhy was he suddenly so challenged when he needed to speak to Aron?\n\n\"I ... yes, baby, it's ... Carter,\" he heard Aron speaking, a bit away from the phone. \n\nAh, great, now Alex was going to forbid Aron from seeing him. All right, he was prepared to beg.\n\n\"I'll call you, is that okay?\" Aron spoke quickly into the phone, this time. \"Now, let's just say that it's not the ... ahem, right moment.\"\n\n\"Okay,\" Carter said slowly.\n\n\"Okay, bye, and good to hear you, buddy,\" Aron added, before cutting off the conversation.\n\nDamn, how was he going to go about this? There was no way in hell he could let Aron in the clutches of that douchebag. The guy had no regrets about cheating, no remorse, and he was clearly bent on continuing like before. And Aron had no idea and ...\n\nJust now he had sounded happy. So happy that Carter could swear his heart was hurting bad, so, so bad. \n\nWhat he needed to do was to keep himself busy until Aron was going to call, or until he was going to call Aron again. A good idea was to investigate the circumstances of the accident. He had no idea what had happened, but Alex seemed to know and was just bent on spewing lies. At least he needed to correct that. He didn't want Aron to believe that he could do such a horrible thing.\n\nStop it with that. Aron didn't believe a thing.\n\nYes, but Alex can screw with his head, and that's not right. I can stand him not loving me back ... but I won't stand him hating me.\n\nFair enough.\n\nHe began by searching online for all the information he could find on the accident. Unfortunately, everything pointed out to just what he already knew. Or better said, what he didn't know. But there was the matter of the witness, and his hopes were hanging on that. Maybe that pony tail girl was going to emerge with news on how the accident had occurred. Yet, his hopes were slim. So far, the police's appeal had remained unanswered. \n\nSuddenly, there was ruckus at the door, and he stood up. Was that ... barking? The doorbell chimed, taking him even more by surprise. Who could be at the door at that hour? And with a dog in tow? If the person was a serial killer of some kind, it would have been highly unlikely to have a dog with him, right?\n\nHe shrugged and went for the door. The person standing there must have been the last he was expecting. But he felt a surge of something pleasant the moment he saw his late evening visitor.\n\n\"Hi Mark,\" he said.\n\n\"Hi boss,\" Mark replied cheerfully. \"May I come in?\"\n\nBoss? Wait, Carter's brain finally caught up with him.\n\n\"What did you just call me? And how on earth do I know you? I mean how do you know me? I mean how ...?\"\n\nMark raised one hand to placate Carter's mumbled questions. He needed the other to hold still a beautiful golden retriever that continued to express his happiness of being there in short barks. Well, at least Carter thought the doggy was happy, because his thick tail was wagging to a rhythm only he could hear.\n\n\"I will explain everything, I promise,\" Mark spoke. \"Could we come in? Taz is just so happy to see you I don't think I can hold him much longer.\"\n\n\"Happy to see me?\" Carter spoke, feeling like a parakeet. \"I've never seen this dog before in my life!\"\n\nMark laughed.\n\n\"He is your dog, after all. But let's get inside, okay?\"\n\nCarter made way for his guests to step into the small apartment.\n\n\"I'm batshit crazy, right?\" he asked, after carefully closing the door behind them. \"Please, sit down,\" he gestured towards the sofa.\n\nMark was happy to take a seat, stretching his legs with a satisfied groan. He spoke something into the dog's ear and then released the leash. That allowed the dog to make a small leap and hurry into Carter's arms. \n\nThere was no other thing he could do but deal with the furry creature that seemed bent on reaching his face to lick him. Well, touching the thick fur was pleasant. But he needed to solve a little problem right now, like how insane he was at the moment.\n\nThe golden retriever seemed satisfied with being scratched behind the ears and sat next to Carter.\n\n\"Can I get you anything, Mark? Is your name Mark? Are you really an assistant?\"\n\nMark patted the place next to him.\n\n\"I know you must have a lot of questions. I will try to answer them all without breaking the rules.\"\n\nCarter could swear his head was starting to hurt. But he sat down, and the dog placed his head right away in his lap.",
        "\"Yes, my name is Mark, well, at least, the name I use when I get down here for field work,\" the guest explained. \"Yes, in a way, you could say that I am your assistant. You did give me quite a fright with the accident, though. Until then, I think you were my most no-nonsense charge. But I suppose that was to be expected,\" Mark added the last words, like they were directed at himself rather than his host.\n\n\"Ah, so you're like my ... guardian angel?\" Carter barely managed to get out the words.\n\nIt was clear. He was insane. He was going to go to sleep, and the first thing in the morning he was going to get himself checked in a nice facility with padded walls where nice people in white were going to try to understand what the hell was wrong with his brain.\n\n\"There is nothing wrong with your brain,\" Mark spoke.\n\n\"Can you, like, read my mind?\" Carter whispered. \"Are you really my guardian angel?\"\n\n\"That is quite a pompous name, don't you think?\" Mark smiled. \"We are created to watch over ... you. But let's not waste precious time with definitions and whatnot. I'm here for something else, now that you are back into your own body.\"\n\n\"To tell me how the accident happened?\" Carter asked, feeling hopeful.\n\nThe dog made a small whiny sound and looked at him. \n\n\"You're a nice doggy,\" he patted the animal's warm head.\n\n\"Not exactly,\" Mark said. \"I will tell you about the accident if that is what you wish ...\"\n\n\"Yeah, I would like to hear about that freakish accident,\" Carter said. \"Alex says I pushed him ... Oh, no, please don't tell me I pushed him!\"\n\nMark smiled.\n\n\"It is uncanny how little you seem to know yourself sometimes, Carter Malis. But please let me finish. I am here to offer you an alternative. The one you choose will decide how your life will be from this point forward.\"\n\n\"That sounds serious,\" Carter mumbled.\n\n\"It is,\" Mark said. \"So please listen carefully, so you make the choice you think it's right for you.\"\n\n\"Aren't you going to point me out to the right one?\"\n\n\"No,\" Mark shook his head. \"It is not my place to do that. You have free will, Carter, there's no invisible hand that pushes people to do right or wrong.\"\n\n\"Aha,\" Carter said, for lack of a better word. \"So, what are the alternatives? And really shouldn't I bring you anything? A glass of juice, at least? I feel like this is important and I don't ...\"\n\n\"Don't worry about a thing,\" Mark waved. \"Now, pay attention. I could tell you how the accident happened and you will get all the memories from that particular event back. But each choice comes with a price. If you pick this one, you will forget everything that happened during the body swap. Actually, you will wipe clean all that happened.\"\n\n\"Can I do that?!\" Carter exclaimed. \"Wait, so I will forget everything? About Aron? About ...\"\n\nHow we made love and ...\n\n\"Ah, sorry,\" he added quickly, remembering that Mark had no troubles reading his mind.\n\n\"No problem,\" Mark said brightly. \"The answer is yes, you will forget about everything that happened between you and Aron.\"\n\n\"Ah, damn,\" Carter mumbled. \"What's the other choice?\"\n\n\"It's simple, just the other way around. You get to keep all the memories about the body swap, but I cannot tell you about the accident, or give you back the memories from that event.\"\n\nCarter stared blankly in front of him.\n\n\"No memories of how I kissed Aron?\" he mumbled. \"Not one thing about how he used to crush on me when we were 14 and all that?\"\n\n\"No,\" Mark shook his head. \"I'm sorry. These are the rules.\"\n\n\"Then the choice is easy,\" Carter spoke. \"I won't forget about Aron. Screw the accident,\" he shrugged.\n\nMark smiled.\n\n\"Okay then,\" the guest spoke.\n\n\"Wait, was that it?\" Carter asked, surprised. \"Aren't you going to give me to choose between a blue pill and a red pill? Do I stay in Wonderland? Just like that?\"\n\n\"Do I look like Morpheus to you?\" Mark joked. \"No pills. You cannot believe how many jokes we say about that movie ...\"\n\n\"Do you watch Matrix in heaven?\" Carter asked, more and more confused.\n\nMark waved.\n\n\"We know everything. It's a bit too much, really, and most things are redundant, but well, sometimes, something happens and it's no longer a boring day at the office,\" Mark said. \"But I do need to make sure that you understand your choice. Not knowing what happened during the accident will have consequences. You already know what Alex is saying. He could poison Aron's mind, you know?\"\n\nMark looked at him as if he was expecting Carter to reconsider his decision. But Carter just shook his head.\n\n\"That's a risk I'm willing to take. Aron won't believe Alex. And I could not have pushed him. I just know it, even though I don't remember a thing.\"\n\n\"Are you sure? Aron loves Alex. Love can make people blind,\" Mark insisted. \"What if Aron begins to see you with different eyes? What are you going to do?\"\n\nCarter could feel his heart getting heavy with each of Mark's words.\n\n\"Aron won't do that.\"\n\n\"He did think you were a homophobe and didn't speak to you for two years.\"\n\n\"I didn't speak to him for two years either,\" Carter replied. \"And I was wrong. And Aron ... He was always there for me, for so many years. Even if he never talks to me again, ever, even if he believes Alex, I don't care. I won't forget the fact that I lo ...\"\n\nHe swallowed the words. Mark sighed, but didn't protest against his charge's cowardice.\n\n\"Then your choice is made?\"\n\n\"Yes,\" Carter said loud and clear. \n\n\"Then my job here is done,\" Mark said with satisfaction. \"I should get going. If I can say so, I'm glad for you, Carter, and I hope that you won't need me again, until when you're very old and grey and we'll meet again.\"\n\n\"Wait,\" Carter spoke, expecting his visitor to disappear into thin air. \"I just have so many questions.\"\n\n\"Well, you can ask me anything, but I won't promise that I can answer them. Go ahead.\"\n\nCarter pointed toward the dog.\n\n\"You say he is my dog. How?\"\n\n\"You invented Taz. He was your imaginary dog while you were a kid,\" Mark began. \"And since you were the type of kid never asking for too much, it was a common decision we reached that Taz should exist. I took him from the shelter the moment I got here, on earth, and could not wait to hand him to you.\"\n\n\"Oh,\" Carter replied. \"So if I were to choose to remember the accident, then Taz ...\"\n\n\"I'm afraid he was going to need another home,\" Mark confirmed.\n\nTaz barked, to confirm the guest's words.\n\n\"And that day, at the office, when you didn't want to hug me, like everyone else ... What was that all about?\"\n\n\"Ah, we are not allowed to touch humans too much. There is a risk to reveal our true nature. When I came into your office the first time, and shook hands with you, you saw something, right? I could read it on your face, although you didn't think much about it,\" Mark replied promptly.\n\n\"Your eyes ...\" Carter murmured. \"They were like all kinds of colors.\"\n\nMark nodded thoughtfully.\n\n\"Anything else?\"\n\n\"Yeah, I'm sorry, I still need to know ... What about that ... scandal? Why were you saying you were sorry? About the video that leaked ...\"\n\nHe was talking to an angel or a heaven assistant, whatever the guy was, and he was talking sex tapes. Great. Way to go making an impression on his guardian angel.\n\n\"It is your right to know,\" Mark stopped his train of thought. \"It was my fault for not paying attention. The next day I was still focused on you to notice what was happening with Aron's phone. Ah, and there goes a point on my record,\" Mark shook his head with mirth.\n\n\"Ah, damn, I'm so sorry,\" Carter whispered. \"And thanks for telling me you weren't watching me and Aron ... Oh, but why did you come here?\" he changed the topic, feeling his cheeks ablaze. \"I mean, if you're not supposed to intervene ...\"\n\n\"I had to watch over you, so that you don't end up in trouble by trying to tell someone about who you really were. Also, to offer my guidance, should you have asked for it.\"\n\n\"Ah, that's why it seemed as if you were waiting for me to ask for help!\" Carter exclaimed. \"Oh, wait, that e-mail to Aron ... That was you? Penis enlargement pills?\" he said without thinking.\n\nMark laughed.\n\n\"It was a pretty good joke, wasn't it?\" the guest said.\n\nCarter nodded.\n\n\"Yeah, I guess it was. Aron didn't think so, though.\"\n\n\"Of course, he has a more stern personality. You should see the guy in charge of him,\" Mark laughed.\n\n\"Does Aron have a guardian angel, too?\" Carter asked, feeling like he was on the cusp of finding something amazing, but he was busy asking about trifle things.\n\n\"Everyone does, although this is not the correct term,\" Mark spoke.\n\n\"But how come there are still so many bad things happening in the world?\" Carter finally found his brain and the courage to ask a really important question, for once.\n\nMark's face clouded.\n\n\"The world is not a perfect place, and we are not perfect either. We do have flaws, and sometimes we're overworked and ... But don't let me bother you with this,\" Mark said quickly. \"In the end, people make their own lives, and sometimes, their choices influence the others. That is why accidents still happen, and other bad things, as you say. We do not control everything. There is, sometimes, too little we can do, but, in your case, I needed to step up and ask to be sent down here, and watch over you for a little while.\"\n\nCarter felt like he only had more questions now. But he knew he could not insist on this.\n\n\"But the body swap? Why did it happen?\"\n\nMark smiled fondly.\n\n\"That was something quite unexpected. And it was, you know, caused by your most ardent wish.\"\n\n\"My most ardent wish?\" Carter mumbled.\n\n\"Don't ask me what it was. You know it much better than I do. And now, if you don't have any other questions, I should hurry back. I have a ton of paperwork to file in.\"\n\n\"Wait, is Alex given a choice like mine? I mean, he seems to remember the accident and ...\"\n\nMark smiled again.\n\n\"That is between he and his, as you say, guardian angel. That is when that guy will return from his pleasure trip. And just to give you a hint, since I like you,\" Mark laughed, \"Alex doesn't know what happened during the accident, either.\"\n\n\"He doesn't? Then why is he spewing all those lies?\" Carter asked.\n\nMark shook his head slowly.\n\n\"It is up to Alex whether he learns something from this experience or not.\"\n\n\"Wow,\" Carter expressed what he felt inside. \"That's ... I mean ... I guess I should say 'thank you'. You saved my life, right?\"\n\nMark's face filled with warmth.\n\n\"Carter Malis, I hope you will have a great life,\" the visitor said. \"Now I really need to get going.\"\n\n\"Are you going to fly out the window? Or just disappear?\" Carter questioned, curiosity gnawing at him.\n\n\"I'm afraid I just need to catch a certain train. Passing from this world to the other is nothing as glamorous as some people make it to be.\"\n\n\"Okay,\" Carter mumbled and stood up to see his guest to the door.\n\n\"Just for the record,\" Mark said, \"I did want to hug you that day.\"\n\nHe felt warmth, all engulfing, as his ex-assistant/not exactly guardian angel embraced him. All right, he thought. It was all going to be all right.\n\nTBC\n\nAuthor's note: Thank you for reading and I hope you enjoyed seeing Mark again :)"
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay novel",
        "gay romance",
        "body swap",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/box-shaped-heart-ch-25"
}