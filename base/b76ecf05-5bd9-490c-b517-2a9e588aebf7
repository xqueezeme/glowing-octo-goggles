{
    "title": "The Wrong Cot",
    "pages": [
        "This is a story about a seven day rafting trip down the Grand Canyon and how an innocent mistake on a pitch black night sparked a chain of events that led three couples on a journey of sexual discovery.\n\n***** \n\nDAY 1: Launch \n\nAs we stood at the launch point at Lee's Ferry, ready to begin our seven day rafting adventure down the Colorado River and through the heart of the Grand Canyon, I surveyed the group we'd be spending the next week with. There was of course my wife, Ady (short for Adrienne), who was looking both incredibly beautiful and very apprehensive. While I'd grown up rafting, hiking, fishing, camping, she'd never really done any of those things. It was only the enthusiasm of our other friends, Lori in particular, that had eventually persuaded her to agree to this trip. We had come with two other couples who were close friends of ours, Jason and Allyson and John and Lori. Both couples lived near us and had kids similar to ours in age. Five out of the six of us (everyone but Ady) had either recently turned 40 or would within the next year, and this trip was how we chose to celebrate. None of us had ever been away from our kids for this long and it had been a long time since any of us had attempted a vacation this ambitious. \n\nWe were part of a larger group of 10 couples who would be split among two rafts, with two river guides on each. We had agreed that if we were going to do this without our own kids, we didn't want to be around anyone else's either. The package we eventually signed up for was billed as a \"couples only\" trek, geared for people who were in reasonably good shape and capable of long hikes, canyoneering, and other more advanced outdoorsy activity. As I surveyed the people around us, it became clear that we were actually on the older side. Most people looked to be in their 20s or, at most, early 30s, though there was one couple that was clearly older, probably late 40s. \n\nThe four guides were all very young, college age or thereabouts. And in keeping with the theme of the trip, they too were \"couples\" - one man, one woman per boat - though I doubted they were actually romantically involved. They all wore khaki colored button up shirts with short sleeves, with the tour company logo on the front. It made them all look a little like scout leaders. As we gathered by the two rafts, one of the guides, a guy with long black hair and scruffy facial hair who looked like the lead singer of a 90s grunge band, addressed the group.\n\n\"Hi everyone, my name is Arlo,\" he spoke in a very calm, friendly voice, \"I'm going to be one of your guides on this adventure. This here is Samantha.\" He motioned toward the short, red-haired guide standing to his right. \"But you can call her Sam. She's my copilot and is also one helluva good camp cook. You're lucky to have her on this trip.\" Sam was strikingly pretty in a pixie-ish sort of way, very petite and fit looking. She waved and smiled.\n\nArlo continued, \"and this big guy over here is Tom. He'll be captaining the other raft.\" He motioned toward a tall, well-muscled man with wavy brown hair and a beard. The guy reminded me of Magnum PI. \"Tom is from New Zealand and can teach you all sorts of cool Kiwi phrases.\" \n\n\"Right you are,\" Tom said with a very pronounced Kiwi accent and a broad smile. \n\n\"And to Tom's right is Serena, who, in addition to being an experienced river guide, is a world class rock-climber and canyoneering expert. She'll be leading most of the side excursions.\" Serena, who I would later learn was of Filipino descent, took a step forward and waved to the group. She too was very attractive, with darkish skin and long black hair pulled back in a tight pony tail. All four of the guides looked to be in incredible physical shape. \n\nArlo continued, \"we've got a whole bunch of rules and safety tips to go over before we actually get on the rafts, but before we get into all of that, there's one thing I want say to the whole group. This is a long trip and it's one without a lot of privacy. I know. I've done it dozens of times now. We're going to be sleeping out under the stars, bathing in the river, and generally spending a whole lot of time in close proximity to one another, whether it's on the rafts, in camp, or on the various side hikes we'll be doing. You're going to get to know the people around you very well before this is done, and that's great. This is a helluva bonding experience. But it's hot out there this time of year. And there are no walls. No changing rooms. No showers or baths. And with no kids around, I think you'll soon find that modesty is one of the first things to go. I'd encourage you to embrace that and not let it bother you. We're all adults here. We know what adult bodies look like. And you'll have a better time if you're not too self-conscious all the time.\" \n\nI glanced briefly at Ady. She looked even more apprehensive than she had before. She wasn't a shy person. In fact, she was very outgoing. But she had never been the type to dress in skimpy clothes or show much skin. This trip was going to be a real test for her. \n\n...\n\nIt was late July, so by mid-morning, it was already roasting hot out on the river and most of us had peeled off several layers of clothes. The women had generally stripped down to tank tops, and in some cases, bikini tops. Among the latter group was Allyson, who had, over the past few years, become one of Ady's closest friends. Ady and Allyson had very similar figures. Both were about 5'4'' and very slender and fit. But where Ady was naturally olive-skinned, with long curly brown hair, Allyson had milky white skin and jet black hair, which she had pulled back into twin pigtails, like a schoolgirl, a look I'd never seen from her before. She, like Ady, was very attractive and could pass for much younger than her actual age. She was wearing a bright blue bikini top that showed plenty of cleavage (her breasts were quite a bit bigger than Ady's). As she was sitting right in front of me on the raft, it took considerable effort not to get caught staring at her chest, even with the remarkable scenery all around me. \n\nThe rafts were large pontoon style boats with a motor in back that was manned at all times by one of the guides, so there was no need for us to paddle or otherwise assist in the navigation of the rapids. We sat along the pontoons on either side. Lori, John's wife, was on the opposite side of the raft from me. She, like Ady, had not yet stripped down to her bathing suit, though it was visible underneath her white tank top. We called her \"Kelly Ripa\" behind her back because, in addition to the physical resemblance, she was an energizer bunny of woman, the kind of person who ran eight miles a day and somehow had enough time and energy leftover to be in everyone's business all the time. She, of course, had been the one who came up with the idea of doing this trip and had then browbeat all the rest of us into coming along. But as annoying as I sometimes found her, I had to give her this much; she too was a very good looking woman who kept herself in fantastic physical shape. She had her straight blond hair tied back in a neat braid, and she was wearing a tiny pair of jogging shorts that showed off every possible inch of her well-toned legs. \n\nNIGHT 1: Open Sky\n\nBy the time we pulled the rafts onto the bank to make camp for the night, any apprehension I'd had about the trip was gone. Between the beauty of the river and the canyon, on the one hand, and the women around me, on the other, I was almost euphoric. It was the perfect antidote to the daily grind, the tedious routine of work and family life. I felt more alive than I had in a very long time. \n\nAnd I could tell that Ady was in a similarly euphoric mood. It took her a while to loosen up, but by mid afternoon, when an intense water gun fight had broken out between the two rafts in the middle of the river, Ady had been one of the more aggressive and vocal combatants, all the while wearing nothing but her bikini top and shorts. I hadn't seen her so loose and carefree in a long time. \n\nBut that was out on the river. As we walked along the bank, looking for a place to set up our cots for the night, I could see some of her earlier apprehension returning. She'd never really been camping before, much less slept outside under the open sky. But it was a beautiful, warm night and there were no mosquitos or any other kind of biting bugs in the canyon to worry about. We eventually found a spot in the sand with some bushes on either side that provided some small buffer between us and others couples' cots. \n\nAs I lay there on my cot, much later that night, staring up at the beautiful starry sky, I suddenly found myself with a powerful erection. It was as if all of the images of beautiful, bikini-clad women from earlier in the day suddenly caught up with me all at once. And then it dawned on me just how difficult it was going to be to have any sex on this trip. Truth be told, I had wondered about this very question for months prior to the trip, but it had been hard for me to picture exactly what the sleeping situation would be like. But now that I was here, and saw what it was actually like, the logistics seemed daunting. There was just very little physical separation between us and the various couples in our vicinity. And between the light of the stars and the crescent moon overhead, there was enough visibility to at least make out the silhouettes of the people a few cots over. And even if it were darker, there were still the sounds to worry about. While the flow of the river provided some amount of background white noise, it wasn't enough to drown out the creaking of cots whenever anyone nearby moved. \n\nGetting Ady to fool around under these conditions was going to be hard. But I wasn't about to give up. My erection would just have to wait. With that thought, I closed my eyes and eventually fell asleep. \n\nAt one point, in the middle of the night, I awoke to what I thought were giggles and the creaking of cots somewhere in the camp. But the sounds were faint and the source not particularly close to us. I tried to listen for a bit but eventually gave up and went back to sleep. \n\nDAY 2: Birthday Suits\n\nThe next morning, I awoke near the crack of dawn, badly needing to urinate. We had been told it was okay to pee directly into the river (that doing so was actually preferred by the park service, for sanitary reasons, to peeing in the bushes), so I stumbled down to a portion of the bank away from any cots and let loose. As I was peeing, I began to wake up a little more and suddenly realized that two people were standing knee high in the water about 30 feet upstream. It was a man and woman, and I immediately noticed that both were naked. They were both bent over and splashing the cold river water over themselves, clearly attempting to bathe as best they could under the circumstances. It took me a moment to recognize that the man was Arlo and the woman was his fellow guide, Sam. Sam looked absolutely stunning in the dawn light, water glistening on her small, firm breasts and tight little ass. \n\nBefore I really had time to process what I was seeing, both of them had glanced over in my direction and casually waved at me, neither showing even the slightest self-consciousness about being seen naked or concern that my cock was hanging out in full view. I waved back awkwardly as I used my other hand to finish peeing and pull up my shorts. Arlo really wasn't kidding about modesty being the first thing to go. They'd clearly done this trip dozens of times and just didn't give a shit anymore. I wondered if the rest of us would be like that by the end of the week.\n\n...\n\nAfter breakfast, we set out again on the river and soon hit our first major rapids of the day, House Rock Rapids. It was the biggest one we'd hit so far on the trip, a seven on the canyon's ten point scale, and was exhilarating to go through. \n\nBy late morning, we stopped to make a short hike up a narrow side canyon called North Canyon. While the canyon walls were very narrow, the sun happened to be directly above us, so there was little shade to be had the entire hike. By the time we arrived at our destination, a beautiful reflecting pool fed by a small creek, we were all sweaty and hot. I was staring up at the canyon walls, snapping a few pictures, when I heard the first splash. I looked around to see that both Arlo and Tom, our intrepid captains, had jumped into the pool to cool off. Both were shirtless, having apparently stripped down before jumping in. The reflecting pool wasn't particularly large, just big enough for a handful of people to dunk themselves in at any one time. As Tom pulled himself out, he said \"come on, folks, don't be shy. You're gonna want to take a dunk in here before we hike back down in that sun.\"\n\n\"Easy for you to say,\" replied a woman named Kara, with curly blonde hair, who I'd met briefly the night before, \"not all of us can just take off our shirts.\" \n\n\"Nonsense,\" countered Tom, \"we're all adults here. Sam, Serena, am I right?\" As he said this, both Sam and Serena were in the process of stripping down. Serena was wearing a bikini underneath her shorts and guide shirt, but it soon became apparent that Sam was not. Under her shorts, she was wearing just panties, and when she unbuttoned her guide shirt, the sight of her bare breasts left most of the group stunned. I personally would have been floored had I not already seen her naked just hours earlier. Ady squeezed my arm and I could sense the \"oh my god\" reaction she was having. \n\nBut before long, almost everyone, man and woman alike, was stripping down and dunking themselves in the pool. Ady, Lori, and Allyson all had the foresight to wear their bathing suits under their clothes, but several of the other women did not. Two of them chose to jump in with just their bras and panties on, and I couldn't help myself from staring at their water-soaked, see-through garments as they emerged from the pool. One woman with very short brown hair and a pierced nose - who I later learned was named Amy - stripped down completely naked before jumping in and didn't seem the slightest bit shy about it. She was very tan all over, with no obvious tan lines, so I figured this was not her first time going au naturale. Her breasts were full and round, a real sight to behold. \n\nI was one of the last to jump in and as I was treading water in the pool, I watched as Kara, the curly blonde who'd asked Tom the question, quickly pulled off her tank top and hopped in. She, like Sam, had no bra or bikini on under her shirt, which explained her initial reluctance. And I could tell that, unlike Amy or Sam, she was very self-conscious about being naked, which was why she had waited until almost everyone had already headed back down the trail. But she had no reason to be embarrassed. She had a nice body; her breasts, like Ady's, were on the small side, but not everyone could have Allyson's breasts. I smiled at her while trying not to look like I was ogling her naked body. On my way out of the pool, I tried to hide my semi-erection. \n\nOn the hike back down to the rafts, with images of beautiful, naked women still dancing through my mind, I wondered again how and if I would ever get any intimate time with Ady on this trip. \n\nI needn't have worried. \n\nNIGHT 2: Moaning in the Night\n\nThat night was one I won't soon forget. At some point during dinner, a bank of clouds rolled in. I didn't think much of it at the time, as I was busy chatting and getting to know the various people in our group. Most of us sat around a collection of electric lanterns in the common area of the camp until well after dinner, drinking alcohol and laughing and telling stories. It wasn't until Ady and I wandered off to brush our teeth and use the bathroom (there were two camp toilets set up in strategic locations around the campsite) that I realized just how dark it had become. Between the high canyon walls and the cloud cover, there was absolutely no natural light. With my flashlight off, I couldn't see my own hand in front of me. \n\nTwenty minutes later, virtually everyone, including us, had made their way to their cots and the camp had grown quiet. I was starting to doze off when I heard it. It was the sound of a cot nearby creaking with a consistent rhythm. I focused on the sound. It continued, for much too long to be someone merely tossing and turning. We soon got confirmation of our suspicions in the form of a woman moaning. There was no question that a couple was having sex, and they couldn't have been more than 20 feet from us. Ady rolled over onto her side, touched my arm, and whispered \"oh my god\" into my ear. \n\n\"I know,\" was all I said back, as I reached inside my sleeping bag and grasped my rapidly growing cock. The sounds grew louder and the moans and vocalizations more frequent. I couldn't tell from the voice who the woman was, other than it wasn't Lori or Allyson. But whoever it was was building toward a spectacular orgasm, and it was enormously arousing to listen to. I couldn't help but stroke my cock. \n\nI wasn't doing it for long when I felt the top of my sleeping back being pulled down. Ady's hand grabbed ahold of my cock and took over. Moments later, the woman belted out \"oh god, oh god, oh god\" before trailing off, clearly in the throes of an orgasm. Ady stopped stroking my cock to listen, whispering \"holy shit\" in my ear. \"Who do you think that was?\" she finally asked.\n\n\"No idea,\" I whispered back, trying to hide my disappointment that it was over. But no sooner had the sounds of the mystery couple died down than more sounds began, this time on the other side of us. More creaking of cots. More heavy breathing. And then there was more noise, coming from a wholly different direction. Over the next few minutes, sounds of sex slowly emerged from all over the camp. It was as if everyone had, all at once, realized the kind anonymity the cloudless sky provided and was determined to make the most of the opportunity. \n\nAdy and I were no different. I felt her climb onto my cot. She must have taken her shorts and panties off while we were listening because, as soon as she was straddling me, I felt her guide my cock into her already very wet pussy. She gasped audibly as I entered her and within seconds was rocking up and down on my cock and kissing me furiously, our cot creaking loudly with every movement. After a few minutes, she began to moan and sigh loudly. I sat up and gently lifted off her tank top, followed by my own shirt. It was so dark that I still couldn't really see anything. But we were now completely naked, our sweaty bodies sliding against each other in the warm pitch black night, and all around us were the sounds of other couples having sex. It was completely intoxicating and surreal.\n\nAt one point it dawned on me that Jason and Allyson, who had set up their cots less than ten feet to our right, were making loud slapping sounds. While I couldn't see them, I pictured Allyson getting fucked doggy-style and it was almost too much too take. The sounds were so loud throughout the camp that I was pretty certain every couple there was engaged in some kind of sexual act. It was like a Roman orgy in the dark. \n\nAdy was clearly incredibly turned on by the whole experience. She was never the most vocal lover, usually only making any real noise toward the very end, as she neared climax. But this was different. She was moaning and sighing loudly from the beginning, with an occasion \"oh god\" thrown in for good measure. Eventually, she seemed to completely lose control and started bucking her hips frantically. When she finally came, she nearly screamed. And the funny thing was, her scream barely stood out amidst the sounds everyone else was making around us. \n\nOnce she was done, I flipped us over until I was on top of her and drove my cock into her hard and fast until I came as well. For a quite a while thereafter, we just lay there, panting and catching our breath as we listened to the sounds of people coming all around us. I was particularly focused on Allyson's voice, which was close by and easy to recognize. When she finally came, she squealed \"oh god, I'm coming, Jase,\" and I suddenly felt my erection return. Ady felt it too, and she responded by rolling over onto her side, facing away from me and sticking her ass out toward me. Within seconds, I had turned on my side and my cock was back inside her, my chest pressed against her sweaty back and my arm wrapped around her, fondling her breasts. ",
        "We took things slower the second time around, soaking in the sounds rather than contributing to them. While some of the couples had grown quiet, there were still a few who were actively and vocally fucking each other. And as I continued to slide in and out of Ady, other couples began to join back in, clearly on their second go around, like us. After a good long time and a slow build up, we were again both nearing orgasm. Ady was actively stroking herself, something she rarely did under normal circumstances. At the very end, I rolled Ady onto her stomach, pressing her into the cot as I plowed into her from behind. \n\n\"Oh god, oh god, oh god, Jake, I'm coming again,\" she panted as I kissed her ear, grunting as I came too. \n\nBy then we were so exhausted, emotionally and physically, that we both fell asleep on top of our sleeping bags, still naked.\n\nDAY 3: Can It Be Night Already? \n\nWhen I woke near dawn, needing to pee, I stood up groggily, forgetting that I was completely naked. It was light enough at that point to see around us and I immediately noticed that several other couples were still in various states of undress. To our right, Allyson was only half covered by her sleeping bag and I could see one of her large breasts hanging out. A voyeuristic thrill coursed through me. \n\nAfter enjoying a good, long look, I pulled on my shorts and walked in the opposite direction, toward the bank. On my way to the river, I passed by Amy, the one with the short hair and the nose ring. She was lying naked on top of her bag, as was her boyfriend, Keith (I had learned the night before that they weren't married). It occurred to me that they were lying in roughly the place where all the sounds seemed to originate the night before. Picturing Amy as the mysterious moaning woman somehow made the memory even more powerfully erotic. \n\n...\n\nBreakfast that morning was a fascinating study in group psychology. There was no question that the craziness of the night before was on the forefront of everyone's minds, to the point where it made normal chit-chat and small talk nearly impossible. But no one felt comfortable acknowledging the elephant in the camp. So most of us just sat there and drank our coffee in silence. \n\nThat is until Arlo strolled up from the river with a big grin on his face and said, \"did you folks save any energy for the river today? I mean, damn, when I said that modesty would be one of the first things to go, I had no idea. You guys are animals.\" We all started laughing, with sheepish grins on our faces, while glancing around awkwardly at each other. But acknowledging the craziness of the night before did seem to ease the tension. \n\nI spent most of the rest of that day thinking about the night before and hoping we could replicate some of that magic once the sun went down. Based on the frequent looks and occasional touches I was getting from Ady, I knew she was thinking the same thing. And lest there be any doubt, as we were disembarking the raft at the confluence of the Little Colorado River that afternoon, Ady leaned over and whispered in my ear, \"I'm going to fuck you so hard tonight.\" Then she winked and walked ahead to catch up with Allyson and Lori. You've gotta understand, my wife never says anything like that. I couldn't remember a single time she had ever said the work \"fuck\" to me in a sexual context. Something about this situation had really brought out another side of her.  \n\nAnd it wasn't just her. We all hiked some distance up the Little Colorado, admiring its stunning turquoise water. Eventually, the guides stopped us and Tom and Sam jumped into the river to demonstrate how to body surf down the miniature rapids. Perhaps not surprisingly, Sam again chose to go topless, something that didn't even seem all that odd in light of everything else that had happened. But what was surprisingly was how many of the other women chose to follow her lead when their turn came. Serena, the other guide, also went topless. As did both Amy and Kara, both of whom had done so the day before, though Kara seemed much less self-conscious about it this time around. But a few others did as well, including Lori, whom I'd always wanted to see naked. Her breasts weren't large, but they were firm and sexy. Both Ady and Allyson kept their tops on, despite Lori's best efforts to convince them to join her, but I could tell they both at least considered taking them off, which is something I never would have believed even a day ago. \n\nMost interestingly, none of the women who took their tops off appeared in any hurry to put them back on once they got out of the water. It was only when we got back to the rafts and risked being seen by other raft groups that the bikinis and tank tops came back on.\n\nNIGHT 3: The Wrong Cot\n\nThat evening, once we arrived at the campsite, Ady and I carefully scouted the terrain. As there hadn't been a cloud in the sky all day, we were looking for a spot that offered at least some visual privacy but was not too far from everyone else. We found what seemed like a perfect spot, near the center of camp but with some bushes blocking the view on three sides. There were several of these little bush-encircled \"alcoves\" at the site, and we noticed that Lori and John took the one just upriver from us and Jason and Allyson the one just downriver. \n\nAs it turned out, visual privacy wasn't an issue, because, like the night before, a bank of clouds rolled in during dinner. By the time we all turned in, it was again pitch black. We were now in the heart of the canyon, with its looming walls blocking out most of the night sky and the clouds blocking the rest. After brushing my teeth and taking a leak in the river, I made my way back to our cots. Ady, who preferred to use the camp toilet, told me she was going to go get in line for it. Before she left, though, she grabbed my crotch firmly and said \"don't you dare fall asleep before I get back. I'm not done with you.\" And then she left me alone in the pitch black. \n\nAs I lay on my cot, waiting for her to return, I listened for the sounds of intimacy we'd heard the night before. It didn't take long. It was intermittent and hard to pinpoint just where it was coming from, but I heard what was unmistakably a woman's moan. I couldn't be certain, but it sure sounded a lot like Sam, our river guide. In my mind, I pictured her straddling Arlo (or maybe Tom?), her guide shirt unbuttoned and falling to each side, her breasts exposed. In a matter of seconds, I had a raging erection. The night was still so warm that I was lying on top of my sleeping bag, not inside of it. Nevertheless, I slid off my shorts, confident that the darkness would hide me. I lay there stroking my cock, soaking in the sounds, waiting for Ady to return. \n\nA few minutes later, I heard steps approaching, accompanied by the bouncing beam of a flashlight. I wondered momentarily if I should cover myself, in case it wasn't Ady and the flashlight's beam happened to shine down on me and my exposed cock. Before I could act on that impulse, though, the flashlight switched off. I couldn't see Ady as she approached the cots, but I heard her footsteps. She stopped just in front of the cots and stood silently. The sounds of sex in the camp were unmistakable by now, and they seemed to be coming from at least two locations. I could tell Ady had just noticed the sounds and, like me, was trying to figure out who was making them. I continued to stroke my cock with my right hand, but with my left, I reached up for Ady, finding a leg and then moving slowly up her thigh. When I eventually reached her pussy, I felt her hand already there. She was touching herself. A moment later, her hand pulled away, and I felt her sleep shorts slip down to her feet. \n\nShe stepped out of them, and I felt her lean toward me. Her hand touched my leg first and then quickly worked its way up to my cock. If she was surprised to find it already exposed and rigid as a flagpole, she gave no indication verbally. She wasted no time. I felt her swing her leg over me and climb onto the cot, straddling me, and then guide my cock inside her with her hand. Something felt odd, and it was only when I reached out for her that I realized she was facing away from me. My hands touched her back just as hers reached forward and touched my thighs. Now, Ady and I have a pretty good sex life, but I couldn't remember the last time we'd had sex in this position. It just wasn't in our normal bag of tricks. But damn if she's wasn't good at it. She slid up and down on my cock effortlessly, rolling her hips rhythmically as I gripped them with my hands. I could tell that she'd resumed touching herself with her hand. \n\nAs she gradually picked up speed, she began to moan softly. That was when the first twinge of disorientation hit me. I was lost in pleasure and distracted by the unusual surroundings and sounds around me, but I wasn't so far gone that I didn't notice how unusual Ady sounded. Why was she acting so strange? Was she pretending to be someone else? Was this some kind of role play fantasy for her? Whatever it was, it was incredibly arousing. I sat up, pushing her forward onto all fours, while I disengaged briefly and got up onto my own knees behind her. Then I drove my cock back into her and began fucking her doggy style, my hands firmly planted on her hips. She whispered, \"oh yes, fuck me.\" I reach around and grasped her tits through her tank top. They felt large. As my blood-diminished brain tried to make sense of that, she whispered again, \"fuck me, Jason, just like that.\" \n\nI stopped cold, the sudden realization hitting me like a ton of bricks. \"Allyson?\" I managed to say. She must have recognized my voice because, in a heartbeat, she had pulled away, scrambled off the cot and was fumbling in the sand for her shorts, muttering \"oh shit. Oh shit. Oh my god.\" And then finally, she asked, \"it's you, isn't, Jake?\" She already knew the answer.\n\nI was too stunned to respond at first. After a long, awkward moment, I said, \"yeah, it's me, but I swear, Allyson, I didn't know. I thought you were Ady.\"\n\n\"Oh god. I've gotta go.\" And with that she was gone. I collapsed back onto my back, my stiff cock still in my hand, my mind racing. I was still in a state of stunned disbelief when Ady finally stumbled back into our campsite. It couldn't have been more than a minute after Allyson had stumbled away.\n\nAfter listening to her rummage through her bag a little, I felt her sit down on her adjoining cot. She said, \"sorry it took me so long. The toilet line took forever.\" Then she leaned in and whispered in my ear, \"listening to all that moaning made me horny as hell. I couldn't wait to get back.\" With that, she reached over and I felt her hand grasp my cock.\n\n\"Whoooaa, big boy! Looks like you're ready to go!\" I thought I should stop her, be honest with her, tell her what had just happened. But before I could even begin to formulate the right words, she was straddling me, guiding my cock inside her. And while my encounter with Allyson had left me shaken and confused, it had also left me incredibly turned on and desperate for release. So I just went with it and didn't say anything.\n\nAdy, for her part, was more locked in than I'd ever seen her. Like the night before, she made no effort to be quiet. She rode my cock aggressively, despite the loud creaking noises the cot made with every up and down motion. She was clearly getting off on the thought that others were hearing her and wanted to put on a show. And she wasn't alone. The sounds of sex coming from around the camp had only intensified, and I was pretty sure some of that noise was coming from Jason and Allyson, whose cots were no more than 20 feet away. \n\nJust before Ady climaxed, she belted out \"oh god, I'm coming, Jake!\" loud enough for much of the camp to hear. At that point, I sat up, lifted her off of me and maneuvered her onto all fours. As I got onto my knees and thrust my cock inside her, the memory of being inside Allyson, in the exact same position, less than 20 minutes earlier, was disorienting. But it was powerfully arousing as well. I grunted and came hard. \n\nAs we lay there afterwards, thoroughly spent, Ady kept kissing me on the cheek and whispering things in my ear. \"I can't believe how fun this is! Who knew this trip would be such a constant turn-on?\" I didn't say much back. I just kept thinking of the mishap with Allyson and its repercussions. Had Allyson told Jason? Did she plan to? Should I tell Ady now? Should I wait until I could talk with Allyson about it? In the end, I decided not to ruin the moment. I'd sleep on it and try to talk with Allyson in the morning. \n\nDAY 4: The Talk\n\nI had a hard time sleeping that night. I kept playing out imaginary conversations in my head, trying to imagine how I would tell Ady, how she would react, whether she'd be able to forgive me or move past it. On the one hand, it hadn't been my fault. I genuinely thought it was Ady up until the last second. On the other hand, would she believe that? Would she believe that I couldn't tell I was fucking another woman? And even if she did, would she be able to get over the fact that I had my penis inside another woman's vagina? And how would she react to learning that, instead of telling her right away, I just went ahead and fucked her? Ady had always been a perfectly reasonable person, but no matter how I played things out in my mind, I couldn't envision the conversation going well. And I knew that the longer I put it off, the harder it would be. \n\nBut I had to talk to Allyson first. That morning, I got up early, hoping she would too. But she didn't. The first time I saw her was during breakfast, when we made some brief, awkward eye contact. I wasn't able to get her alone until just before we climbed back in the rafts for our first river run of the day. I was brief and to the point, knowing we didn't have long: \"I've gotta know. Did you tell Jason? Are you going to?\"\n\nShe looked completely mortified, almost white. After an awkward pause, she answered \"I think I have to, Jake. I don't think he'll take it well, but I think this will eat away at me if I don't. I swear to god, Jake. I didn't know. I thought you were him. I just wandered into the wrong area. It was so dark...\"\n\n\"I know, Allyson. Believe me, I didn't know either. I thought you were Ady until the last second...\"\n\n\"I believe you too.\" She looked up at me with her puppy dog eyes. She really was very beautiful. \"Are you going to tell Ady?\" \n\n\"I think I have to. I'm scared how she'll react, too, but the longer we wait, the worse it'll be. Maybe we should try to do it at the same time, though?\" \n\n\"Yeah, agreed. Maybe lunch?\"\n\nJust as she said that, Ady and several others walked up behind us. I gave Allyson one last look of understanding. The moment of truth would be at lunchtime. Then we all hopped on the raft.\n\nI was so distracted during our morning river run that I very nearly fell out of the raft during one particularly big set of rapids. After what seemed like forever, we beached the rafts on the bank and our guides began preparing lunch. I watched as Allyson grabbed Jason by the arm and pulled him off into a shaded area. Reluctantly, I did the same with Ady. \n\nIt was one of the most awkward conversations I'd ever had, particularly because it took far too long for Ady to even comprehend what I was telling her, and then even longer for her to realize that I wasn't joking. I'm sure the way I was telling her didn't help. I was nervous, fumbling over my words the entire time. When the reality of what I was saying finally sunk in, the tears started. To her enormous credit, her first instinct was not anger. She seemed to believe my assurances that this was purely a mistake on both of our parts, and that we were both mortified. But that didn't change the fact that I was her husband and I was talking about having fucked one of her closest friends. It was a traumatizing thing to hear.\n\nAfter her initial flurry of questions - she wanted to know every detail of what happened - she was quiet for some time, lost in her thoughts and tears. Eventually, she broke the silence with another question: \"does Jason know?\" \n\n\"He should by now,\" I answered. \"I spoke briefly with Allyson this morning. We agreed that we would tell you both at the same time.\" \n\nAdy frowned at me, \"so you planned this out with her?\" She didn't seem to like that thought.\n\n\"Not really, Ady. We just spoke for a minute this morning. I assured her that I didn't know it was her, that I thought she was you. She said the same. Then we agreed we should tell you both at the same time, so you didn't hear it from the wrong person.\" Ady's face was still pained, but her nod seemed to indicate she accepted my explanation. \"Ady, I'll do anything to make this right. I just hope you can find a way to forgive me. Forgive us, really. I know Allyson didn't mean for this to happen, either. She feels horrible.\"\n\n\"Jake, I know you. And I know Allyson. I believe you. Honestly. But your real problem - our problem - isn't me, it's Jason. I'll get past this, eventually. But he's a guy. You screwed his wife. Put yourself in his shoes. How would you react to this?\"\n\nShe was right. I had been so worried about how Ady would react that I hadn't given much thought to how Jason would react. Would he believe Allyson? Would he believe me? How could I even look him in the face? It wasn't like he and I were close personal friends. We were friendly and got along just fine, but our connection was that our wives were such good friends. \n\nEventually, we decided to head back to the group and see if there was any lunch left. By then, Ady was remarkably composed. No one would have known anything was wrong. As we walked toward the group, we caught sight of Allyson and Jason. They were down by the water, still talking. They weren't yet looking our way. Ady took my arm and interlocked it with hers. I looked at her, puzzled. \n\n\"He needs to see that we're okay, that I believe you.\" I understood instantly. She was doing what was best for everyone, for me, for Allyson, for our entire group of friends. She knew it was a fragile moment, that years of friendship and marriage could be torn apart, and that her reaction would influence how others reacted. She was such a remarkably perceptive woman.\n\nWhile we nibbling at some sandwiches, Jason and Allyson finally rejoined the group. Allyson and Ady made eye contact, and I could see the apology in Allyson's eyes. Jason, however, couldn't bring himself to look at us. His expression was one of barely disguised anguish. \n\nShortly thereafter, we boarded the rafts again. That afternoon, we stopped for another side hike. We let Jason and Allyson go ahead of us while we lingered toward the rear, but after twenty minutes or so, we came across Allyson, by herself. She had clearly been waiting for us. She wanted to talk to Ady, so I walked up ahead to let the two of them have some privacy. \n\nI kept my distance but kept them in sight. They talked for what seemed like forever. It was an animated conversation. While I couldn't make out the words, I didn't get the sense they were arguing or angry. Allyson was definitely doing most of the talking. After a hour or so, we had come full circle back to the rafts, down a different trail than the one we had climbed. I noticed Jason sitting on a rock by the bank. He was Asian-American, his parents having immigrated from Taiwan. He was on the shorter side, but very athletic, with muscular thighs and calves. We made eye contact just briefly, then his gaze shifted quickly to our wives as they came into view. They were just wrapping up their marathon conversation with a hug.\n\n\"How'd that go?\" I whispered to Ady as we took our seats on the raft.\n\n\"Let's talk tonight\" was all she said back.\n\nLuckily I didn't have to wait too long. We didn't have much of the river left to cover that day. We reached our campsite by 5:30. While the guides were setting up camp and making dinner preparations, Ady and I found a secluded spot upriver to talk.",
        "\"So,\" I asked, \"what did she say?\"\n\n\"I'm not even sure where to begin.\" Ady had an inscrutable look on her face. \"Not surprisingly, Jason is not taking this well. I think he believes it was an honest mistake - on both your parts - but he just doesn't understand how Allyson could have let it happen. She said he kept asking her things like 'why didn't you use your flashlight?' and 'why didn't you talk to him sooner?' He's just really hurt and upset and he kept telling her he's not sure how he can get past this, how he can ever look at her the same.\"\n\n\"Jesus, that's not good.\"\n\n\"No. But I get it. Part of me feels that way too, but I'm also not a guy. I get that this might be even harder for him.\"\n\n\"Yeah, I've been thinking all afternoon about how I'd react if I were him. And honestly, I'm not sure I would be any different. I'd like to think I'd be as mature about this as you've been, Ady, but I don't know...\"\n\n\"What would it take for you to get over it?\"\n\n\"I really don't know. Honestly, part of me would want to get even somehow...\" I stopped myself right there. I had a feeling I'd just walked into a trap. \n\n\"You know, it's funny you should say that, Jake. Apparently, Jason said almost the exact same thing.\" I wondered where she was going with this. \"He told Allyson that the only way to make it right was for him to sleep with me.\"\n\nI just stared at Ady for a full five seconds, waiting for her to say something else. Then it hit me. \"Wait, are you serious? Is that what Allyson was trying to talk you into that whole time? She's okay with that insane idea?\"\n\n\"I think she'd do anything to make it up to him, to get him to forgive her.\"\n\n\"Are you telling me you think that's a good idea?\" I asked incredulously.\n\n\"I didn't at first, no. But we talked about it for a long time. And to be fair, it wouldn't be anything more than what you've already done.\"\n\n\"You know that's not true,\" I bristled. \"We're talking about you and Jason having sex, knowingly, with full awareness of what you're doing. I had no idea I was having sex with Allyson. The whole encounter was brief. It wasn't even a completed act. It was nothing like intentionally sleeping with another person.\" I paused to catch my breath and gather my thoughts. \"That wouldn't be making us even. It would be going much further than Allyson and I did.\"\n\n\"I guess that's fair,\" she said in a measured tone. \"So what if you did get to finish what you started? What if you spent the night with Allyson while I spent the night with Jason? And when it's done, we call it even.\" \n\nI just stared at her, not believing what I was hearing. Was this really my wife talking? Could she really be on board with this idea? \"This is the solution you and Allyson came up with, isn't it? And you just led me right into it...\" \n\nAdy smiled in the way she always did when she'd out-maneuvered me. This was what it was like being married to a lawyer,\n\n\"So you're really serious about this?\" I finally asked. She nodded. \"How did Allyson convince you?\"\n\n\"It took a while. But she just kept saying 'the damage is already done; the line's already been crossed.' And I think she's right about that. We can't undo what's happened. But maybe by taking things just a little further, we can at least make sure no one comes away feeling like the victim here.\" \n\nI had to admit, she had a point. But was I really okay with letting my wife sleep with Jason? And did I actually have a choice? \"When would this happen?\" I finally asked. \n\n\"Why not tonight? Let's just rip the bandaid off, get it over with, and hope we can move on with our lives. Otherwise the rest of the trip is guaranteed to be awkward and unpleasant.\" \n\nNIGHT 4: The Swap\n\nSo that's how I found myself, no more than four hours later, lying on a cot, getting ready to spend the night with one of my wife's best friends. It was surreal. We had deliberately waited until everyone else in the camp had retired to their cots, not wanting to draw attention to the partner swap that was about to occur. There was no cloud cover, so it wasn't quite as dark as the night before. The stars were out, at least those that weren't blocked by the towering canyon walls. So when Allyson approached, I could actually see who she was, at least once she got within a few feet of me. \n\nWithout saying anything, she lay down on top of Ady's sleeping bag on the cot next me. She was on her side, facing me. We stayed like that for a while, somewhat awkwardly, neither of us knowing quite what to do or say. But, by agreement, we had two hours, so there was no need to rush anything.\n\n\"Are you really okay with this?\" I finally asked. \"I mean, with Ady and Jason, you know...\"\n\n\"Fucking each other?\" she finished, \"no, not at all. But it's the only way he's ever going to get over this. And I deserve it; I'm the idiot who can't find my way back to my own damn cot, who ends up hopping on someone else's cock.\" Despite the bitterness in her words, there was some playfulness in her tone too. Allyson was a sarcastic person by nature.\n\n\"You shouldn't beat yourself up over it. It was a crazy thing, but it could have happened to anyone.\"\n\n\"Yeah, anyone in a badly written porn movie.\" She gave a half smile. \"Don't take what I'm saying the wrong way, Jake. I don't want to make it sound like it wasn't fun, at least while it lasted. It was pretty hot, actually. And I really should have known sooner...\" She trailed off.\n\n\"What do you mean? What gave me away?\"\n\nShe hesitated, \"I...shouldn't say.\" I raised my eyebrow in curiosity. She didn't answer immediately. \n\n\"Fine,\" she finally answered, \"let's just say that you felt a little...bigger...you know...down there...than what I'm used to.\"\n\nI couldn't help but smile at that. \"You know, I should have known too. What you were doing, facing away, moving your hips like that, that's not something she does. The funny thing is, though, if you'd been facing me, I would have known instantly. Your breasts are twice the size of Ady's.\"\n\nShe smiled at that. \n\nIt was then that I leaned in and kissed her. We kissed slowly at first, gently, with just our lips, our hands still at our sides. But her hand soon moved to my chest and mine to her thigh. For a long time, we did little more than kiss, but the intensity of our kissing continued to grow. And then the clothes started to come off. It started with my t-shirt, then her shorts, leaving her in just her panties and a tank top. She had no bra underneath.\n\nAfter some more kissing and groping, she pushed me onto my back, crawled on top of me, and continued kissing me urgently. I had one hand on her ass and with the other I reached up and moved the strap of her tank top down her right shoulder, freeing her right breast. A moment later, it was in my mouth and she let out a sigh. \n\n\"Oh god, Jake, I want you inside me again.\" \n\nIn a matter of seconds, I'd shimmied my shorts and boxers down and freed my cock. Defty, she slid her panties to the side without taking them off and guided my cock inside her. She was so wet that I slid all the way in smoothly. Though my cock had been inside her just the night before, this felt different. Knowingly being inside someone other than Ady, for the first time in 15 years, felt surreal. Allyson moved gracefully, guiding her hips up and down in a rolling motion, as my mouth moved between her breast and her lips. We continued like that for quite some time, slowly building our pace. By then, we could hear the sounds of at least two other couples who were similarly engaged, though I was pretty sure neither were Jason and Ady, who'd intentionally set up their cots on the far side of the encampment. \n\nAllyson made no attempt whatsoever to be quiet. She was moaning audibly from nearly the beginning, and the longer we went, the louder her vocalizations became. With her hands planted firmly on my chest, she ground her hips into me with increasing urgency, clearly building toward orgasm. When she finally got there, she screamed \"oh god, Jake!\"\n\nAlmost as soon as the words escaped her lips, she seemed to realize her error. She froze and and her eyes opened wide, as an alarmed look came across her face. She ducked down, as if hiding, and whispered urgently in my ear, \"oh shit. Oh Shit. Shit. Shit. They're all going to know now aren't they? They'll know I was fucking you, not Jason. Why am I such a fucking idiot?\"\n\nI tried to think of the right thing to say, but my ability to concentrate was impaired by the fact that my still rock hard cock was inside a woman who was not my wife. Eventually, and somewhat pathetically, I whispered back \"I doubt anyone will put the pieces together. Lots of people are making noises.\" The last part at least was true. I could make out the sounds of at two different couples still going at in the near vicinity. What I didn't mention was that, by the sound alone, I could easily tell who those couples were (Amy and her boyfriend Keith to our right and Kara and her husband Jim to our left). \n\nAllyson raised her head and looked directly in my eyes, as if trying to gauge whether I was being sincere. Apparently she was thoroughly unconvinced because a moment later she lowered her head and whispered, \"you're a good fuck, but a bad liar.\"\n\nIt was only then that she seemed to realize that I was still inside her, that from my perspective, our encounter had been interrupted prior to completion. She nibbled my ear and whispered, \"I'm sorry, Jake. In my panic, I totally forgot about finishing you off.\" With that, she began to move her hips again, slowly pistoning up and down on my cock. \n\nWanting a change of position, I reached around to brace her back and slowly rolled us over onto the other cot until we were in the missionary position. Once we were in position, Allyson raised her legs high, and I began to move faster. Between the slapping noises and the creaking of the cot, we were making quite a ruckus. Sensing my impending orgasm, she blurted out, perhaps a little more loudly than she had intended, \"don't come in me, Jake, just in case.\" \n\nShe said it just in time for me to pull out. As I did, she grasped my cock with one hand and lifted up her tank top with the other, exposing most of her belly. In the dim light, I could barely see the ropes of cum shooting out and landing near her belly button. \n\nAfter we'd cleaned ourselves off, Allyson crawled into my sleeping bag with me and lay down with her head on my shoulder. We had agreed that Allyson and Ady would return to their cots at midnight and it wasn't yet 11:00. Allyson finally broke the silence. \"So do you think I've made things worse tonight? How do you think Ady and Jason are going to react if tomorrow everyone in camp knows what we did tonight?\"\n\n\"I don't know,\" I answered honestly. \"But even if they know, maybe they won't say anything. Jason and Ady may never know that they know. Right?\"\n\n\"I guess.\" \n\nI must have dozed off after that, because the next thing I knew, my watch was vibrating. It was midnight. I woke Allyson, who had dozed off too, and she gave me a final kiss goodbye before heading back to Jason. A minute or so later, Ady walked quietly back into view. In the dim light, her expression was hard to read. I had no idea what to say to her. She didn't seem to want to talk either, but, reassuringly, she crawled into my sleeping bag with me and curled up onto me, her arm draped across my body and her head resting on my chest. We both promptly fell asleep.\n\nDAY 5: Everyone Knows\n\nDuring breakfast the next morning, Ady and I kept getting weird looks. At first I thought I was imagining it, but when Jason and Allyson walked into the center of camp and I saw the way others were looking at them and whispering, I knew something was up. \n\nIt didn't take long to get confirmation. Lori, true to form, was plugged in to every bit of gossip within the group, and before everyone had even finished their morning coffee, she had dragged Ady and Allyson off into the brush to confront them with what she'd heard. \n\nAdy came back about 10 minutes later, shaking her head as we made eye contact, but not looking terribly upset. She pulled me aside. \"Good news, Jake. Everyone knows about last night and they all think we're kinky swingers,\" she said with a deadpan delivery. \"Apparently neither of us are as discreet as we thought. According to Lori, Terra and Frank actually saw Jason and I in the act. Oh, and apparently both Kara and Amy heard Allyson calling out your name last night when you too were going at it. Allyson's hoping that detail doesn't make it back to Jason.\"\n\n\"Oh man. What the hell did we get ourselves into? How did Lori react to all this?\" \n\nAdy smirked a little. \"Honestly, I think she was totally unnerved. Not necessary by what we did, but by the thought that we might actually be swingers and somehow she didn't know about it until now.\" \n\n\"I assume you explained the situation.\"\n\n\"Yeah, we gave her the quick version. Assured her this was a one time thing. And I swear to god she looked disappointed. I really wonder about her sometimes.\"\n\nWe were interrupted by the guides calling everyone to come down to the rafts. As I was heading down to the water, Jason and I made eye contact. Unlike yesterday, he didn't try to avoid it and seemed to be in a much better place. He nodded at me, as if to say \"we're good; no hard feelings,\" as we stepped onto the raft.\n\n...\n\nThat afternoon, we stopped at the incredible Havasu Creek. Words don't even begin to describe the surreal beauty of that place: pristine turquoise water, like the beach in Tahiti, picturesque waterfalls and countless tranquil pools. It was like paradise. I'd never seen anything like it. And it seemed to have an intoxicating effect on everyone. The usual suspects (Sam, Serena, Amy, Kara) were all topless almost immediately. But what really shocked me was when I turned around and saw Ady's breasts. I never, in a thousand years, thought I'd see Ady go topless in front of other people. Never. But as I looked around, all I saw were breasts. Everyone was topless. \n\nAdy looked at me and shrugged, \"when in Rome, I guess. I didn't want to be the prude one.\" She smiled, \"and now I've got a reputation as a swinger to uphold.\" \n\nAdy seemed a little self-conscious at first, but before long, neither of us thought anything of it. We each took a few jumps off of a decent sized waterfall into a large pool below and everyone clapped and cheered. After a while, though, we decided to venture off upstream and explore some more secluded areas. Several times, one of us pulled the other into an embrace and we kissed. I even took the opportunity to fondle her breasts a few times. We seemed to be in a good place, but neither of us asked the other any questions about the night before. I wondered how long that would last. \n\nWe reached a point where the creek forked off in several directions. We clung to the left wall of the canyon and followed the water around the bend to where we could hear another small waterfall. Up ahead, Ady had stopped and was peering over a small bush, toward the waterfall. I came up behind her. It was then that I realized why she had stopped. Under the small waterfall, I saw a man's back, with two legs sticking out by each hip. I looked closer. It was Tom, our muscle-bound New Zealander guide and the legs belonged to Sam. He was standing in the creek. She was seated on a rock just behind the small waterfall. By the way his hips were moving, it was clear that they were fucking. He had his arms around her hips, supporting her on the rock as he thrust into her. \n\nI grabbed Ady by the hips and motioned for her to move forward. We got closer, so we could get a better view, though we were still 15 to 20 feet away from them, with a large rock to provide us some cover. From my new vantage point, I could see Sam's face and breasts. Her eyes were closed, lost in passion. It was the most erotic sight I'd ever seen, and despite all the sex I'd had over the last few days, I was instantly hard. And I could tell Ady was just as transfixed by what she was seeing.\n\nWe were standing in a portion of the creek with very warm water that came up to our mid thighs. Ady was directly in front of me, wearing nothing but a skimpy bikini bottom. Reflexively, I reached out and grabbed her hips, rubbing my erection against her ass. She sighed, offering no resistance. As we continued to watch, I lowered my trunks and began rubbing my bare cock up and down the crack of her ass. She pushed her ass up against me and sighed again, continuing to watch Tom and Sam. I reached down and moved her bikini to the side, exposing her pussy, and a second later I was inside her.\n\nFor what seemed like a long time, I slowly thrust in and out of her, both of us continuing to watch the scene in front of us, silently. At one point, Tom lifted Sam off the rock and into the creek. He spun her around. She put both hands on the rock and extended her ass toward him. In an instant, he was back inside her, fucking her aggressively from behind, his huge arms wrapped around her, groping her. \n\nBy this point, Ady had begun fingering herself and I could tell she was getting close to orgasm. As much as I'd enjoyed the show, I'd seen enough by that point and I wanted to focus on Ady. I pulled out of her and spun her around. Then I reached down, lifted her up and gently laid her down on the sandy bank of the creek. She spread her legs, welcoming me, and I wasted no time plunging my cock back inside her. I dug my hands into the wet sand below her thighs, propping her legs up high and wide, maximizing my penetration. We kissed passionately as my balls slapped against her over and over. \n\nAfter a few minutes of this, we were both nearing orgasm. It was then that Ady's eyes suddenly went wide. \"Jake! Jake! Stop!\" she whispered urgently, putting her hands on my chest to stop me. \"They're watching us.\" \n\nI stopped thrusting and looked back over my shoulder. Tom and Sam were standing in the creek, about 15 feet behind us. They were no longer screwing but were just standing there, casually watching us, smiles on their faces. My brain was telling me I should stop. But I was so close to coming, so desperate to get my release. So instead I turned back toward Ady, looked her right in the eyes, and began thrusting again, urgently. \n\nAdy looked shocked, but after a few seconds, I could tell that her lust had regained control. Her fingers shot back down to her clit and she began fingering herself frantically. Her eyes soon grew wide again and she started saying \"oh god...oh god...oh my god...oh fuck, I'm coming, Jake!\" Her eyes closed and she threw her head back into the sand as she climaxed, her hips shaking and her pussy spasming, pushing me over the edge as well. I'm not sure quite what came over me, but instead of coming inside her, I pulled out at the last moment and watched as my cum shot across her belly and up onto her chest and face. Feeling the droplets hit her, she opened her eyes again and lifted her head. She smiled and shook her head, as if chiding me for acting like a porn star. But she was all smiles, basking in a post-orgasmic glow. \n\nBy the time we stood up to wash ourselves off in the creek, Tom and Sam were gone. \n\nNIGHT 5: Putting the Cots Together \n\nThat night, during dinner, Ady ditched me to join Allyson and Lori. With some amount of trepidation, I went and sat next to John and Jason, who were sitting by the bank, drinking beers. As we spoke, it quickly became clear that Lori had already filled John in on our \"swap\" and the circumstances that led to it. John was a doctor and former army field medic and he had a very direct way of speaking; he was never one to beat around the bush. Within seconds of me sitting down, he was peppering both Jason and I with questions. He asked us how we felt about what had happened, how we thought Ady and Allyson were handling it, etc. It was awkward to talk about, particularly in front of Jason, but in a way, I was hugely thankful to John for making us get it all out in the open. It was like a group therapy session. And by the end of it, Jason and I were in a much better place, once again friendly and relatively at ease with each other. ",
        "Eventually, the conversation turned from \"the swap\" to a more general discussion of the sexually charged atmosphere of the last few days: the loud, ubiquitous sex at night, the increasingly frequent nudity on display each day. Though I'm almost never one to kiss and tell, I found myself telling John and Jason about our experience at Havasu earlier, stumbling upon Tom and Sam and then having sex in the creek. As it turned out, both Jason and John had similar stories to tell. John told us that he and Lori had snuck off and had sex at the creek as well. And Allyson had given Jason a blowjob after they'd watched Amy and Keith going at it. \n\nAt one point, I commented that I hadn't had this much sex since I was in my 20s and expressed some doubt that I could keep up this pace for two more days. Jason nodded in agreement. It was then that John excused himself briefly, heading back toward his cot. When he returned, a minute later, he reached into his pocket and took out a handful of what looked like individual packs of aspirin or ibuprofen. He gave several to both Jason and me. It took a moment for me to realize what they were: Viagra single packs. \"This should do the trick,\" John said. \"One of the perks of being a doctor. I don't use these much, but they're kinda fun once in a while. I'm planning on taking one tonight.\"\n\nI'd never taken Viagra or Cialis or anything like that before, but I had always been intrigued. The night had suddenly gotten more interesting.\n\nIt got even more interesting after dinner, when Ady told me that she and Allyson and Lori had, after some discussion, agreed to rearrange our cots, moving all six of them into the same little clearing that originally just held ours. Intrigued, I walked through our sleeping area on the way back from a bathroom break. The cots were all packed into a sandy area about 15 feet in diameter. While each couple's cots were spaced out on the perimeter of the circle, they were all close enough to each other that, with any amount of starlight, it would be easy to see what the other couples were doing. And no doubt that was intentional.\n\nOnce I'd made my way back to the communal area, I sat down next to Ady. She looked at me immediately, clearly wondering what I thought of the sleeping situation. I raised my eyebrows and then whispered into her ear, \"not much privacy there. Are you sure you're okay with this?\"\n\n\"Not really,\" she whispered back, \"but I can't stop thinking about what we did earlier, how they were watching us. Is it weird that I kinda got off on that?\" \n\n\"Not at all. But we don't really know Tom or Sam and will probably never see them again. But Lori and Allyson...we see them all the time.\"\n\n\"So do you think this is a bad idea?\"\n\n\"I don't know. I guess we've already across more significant lines with Jason and Allyson. This is actually kind of tame by comparison. But Lori...\"\n\n\"Yeah, I know. She's a piece of work. She was actually hinting at more than just watching. While she won't admit it, I think she's kind of jealous of the whole 'swap' thing we did last night. Like we left her out or something. It was actually Allyson who suggested this arrangement tonight, and I think part of her thinking was that maybe it would appease Lori, make her feel included, and maybe that can be the end of it.\"\n\nI raised my eyebrows again, conveying both my skepticism of Allyson's logic and surprise that Ady found it at all convincing. But whatever my reservations about where this was headed, I had to admit that I was intrigued by it all. When Ady wasn't looking I popped one of the Viagra and washed it down with my beer. \n\n...\n\nThe six of us were some of the last to leave the communal area and head off the bed. Twenty minutes later, we had all brushed our teeth, made our respective trips down to the toilet or river, and were lying on our cots under the stars. Once the flashlights were off and my eyes had adjusted to the dark, it was clear just how intimate a setting this was. There was more than enough starlight for me to clearly see Lori and Allyson on their respective cots. Both, like Ady, were wearing tight fitting tank tops and skimpy sleep shorts. As I lay spooning with Ady, my hand on her hip, both of us facing inward toward the other cots, I very quickly found myself with a strong erection.\n\nWith her ass pressed up against me, she noticed too, and she slowly reached her hand back to rub it through my shorts. I began to kiss Ady on the neck. By this time, the other two couples had maneuvered into similar positions and looked to be similarly engaged in cuddling and very light foreplay. This continued for quite some time before anyone dared to up the ante. Like previous nights, what ultimately prodded us on were the sounds coming from elsewhere in the camp. Just behind us, on the other side of some bushes, a couple had clearly begun to have sex. I knew from my surveying of the scene earlier that the cot on the other side of the bushes belonged to Serena, the beautiful Filipina guide. I wasn't sure who she was having sex with, though, which somehow made it an even bigger turn on. There were at least two other couples already going at it in other parts of the camp.\n\nBy this time, I felt like my erection was going to burst out of my shorts. I was desperate to escalate what we were doing. So I took it upon myself to make that happen. Gently, I reached down and began to slide Ady's shorts down her hips. She gave no resistance. I then slid my own shorts down, freeing my cock. I lined it up and plunged it inside Ady, who was already dripping wet. She gasped audibly as I entered here, which alerted the others to what we were doing, if they hadn't noticed already. \n\nAs I began slowly thrusting in and out, I watched as Lori and then Allyson were slowly disrobed by their husbands. Following my lead, both soon removed their wives' shorts. And Jason pulled down the strap on the left side of Allyson's tank top, exposing her left breast. He caressed her breast with one hand as he slowly thrust into her from behind. Seeing this, Lori sighed and sat up. She pushed John over onto his back and quickly got on top of him, lowering herself onto his cock. She then reached down and pulled her tank top up over her head. Now completely naked, she placed her hands on John's chest and began to really ride him. It was an incredible sight to behold. \n\nBefore long, Allyson followed suit, but instead of facing Jason, she straddled him facing his feet, as she had with me that fateful night in the pitch black. Almost as soon as she'd slid onto his cock, he pulled down the other strap of her tank top, letting the whole shirt fall down to her waist and exposing both of her incredible tits. \n\nAdy and I opted for an entirely different position. She rolled over onto her stomach, temporarily breaking the connection. Keeping her head and shoulders on the pillow, she got onto her knees, thrusting her ass high off the cot. Taking the hint, I got onto my knees behind her, grabbed her firmly around the hips, and re-entered her. She gasped loudly as I did so. \n\nBefore long, the sounds coming from just our corner of camp were incredibly loud. It was like we were all trying to outdo each other. We all shuffled through several different positions, as if wanting to put on the complete show for each other. Eventually I found myself lying on my back, with Ady riding on top of me. She liked to finish in that position because it was easier for her to orgasm without using her hands. I finally took the opportunity to remove her tank top, leaving her completely naked. She was so lost in passion that she barely noticed. \n\nIt was then that I noticed that there were people standing around the perimeter of our camp area, watching us. It was too dark to make out more than their silhouettes, but there must have been at least six or seven people standing around. And there could have been more that I just couldn't see from my vantage point. Ady hadn't noticed them yet, but when I looked around, I saw that both Lori and Allyson had noticed. Lori was on all fours, getting drilled from behind by John and moaning wildly. Allyson, like Ady, was riding on top of her husband. When I looked in her direction, we briefly made eye contact and she grinned at me. \n\nWhen Ady finally opened her eyes and noticed the audience we'd generated, I saw a flash of self-consciousness pass across her face, but it was quickly replaced by a wide eyed look of pure lust. A few seconds later she screamed \"oh god\" and came hard, shaking and quivering on top of me. \n\nThe rest of us all came soon thereafter, one after another, and when the show was over, our audience silently dispersed. \n\n...\n\nI awoke a little before dawn, desperately needing to pee. There was just enough light that I didn't need to bring a flashlight with me as I made my way down to the river. On my way back up, I nearly crashed into Allyson, who had apparently just made a bathroom run as well. I was startled not just because of the unexpected contact, but by the fact that Allyson was wearing only a pair of sleep shorts. She reflexively moved one of her arms up to cover her breasts, before smiling sheepishly and letting it drop again. \n\n\"I guess it's silly to cover up at this point,\" she said, sleepily. Her straight black hair was all disheveled and fell down onto her perfects breasts. She looked so beautiful. Without even really thinking, I reached out and grabbed her arm, gently pulling her toward me. I leaned down and kissed her and she kissed me back. \n\nI'm not sure what I was thinking. I probably wasn't thinking. But at that moment I wanted so badly to touch her. The feeling seemed to be mutual because she practically melted into my arms and before long we were kissing passionately. I'm not sure if it was the Viagra still in my system or the eroticism of the moment, but my cock reacted almost immediately, poking through my shorts. Allyson felt it and immediately reached for it.\n\nThe rest happened very fast. I yanked her shorts down as she did the same to me. We were standing right near one of the beached rafts, so I picked Allyson up and sat her on one of the raft's pontoons. A moment later I was inside her, my hands gripping her hips. It was a fast, almost animalist fuck. There was nothing gentle or tender. We just wanted each other and didn't care about anything else. She came surprisingly quickly, her eyes growing wide as she mouthed \"oh god\" and I felt her spasm on my cock. A moment later I pulled out and ropes of cum landed on her tummy. \n\nWhen it was done, neither of us said anything. We just kissed a final time, found our shorts, and then wandered back to our cots. \n\nDAY 6: Getting Ready for the Finale\n\nI couldn't fall back asleep once I was back on my cot. I just kept replaying my encounter with Allyson in my mind. Did I just cheat on Ady? Did the fact that I'd already had sex with Allyson twice in the last few days, with Ady's knowledge, mitigate things at all? Why did it feel so right in the moment?\n\nAfter an hour lost in my thoughts, it was truly dawn and there was some movement around the camp, most likely some early risers getting up to bathe in the river. Since I couldn't sleep, I decided to join them. When I got down to the river, towel over my shoulder, there were already seven or eight people in the water, all of them in various states of undress. None of them seemed a bit self-conscious about it either. What a difference a week had made. \n\nJust as I'd stripped down and entered the cold water, Allyson appeared on the bank. She looked startled at first to see me. But she didn't turn away. She'd clearly come down to wash off too. Before long, we were both naked, standing in knee deep water about five feet apart from each other. I finally broke the silence, speaking in a soft voice so as not to be overheard, \"should we talk about it?\"\n\nShe sighed, replying, \"I don't know, Jake. I'm not sure what's going on anywhere. This is all so strange. Do you think we can just have a 'what happens in the canyon, stays in the canyon' rule?\" \n\nI chuckled. \"Yeah, I'd vote for that. Not sure it will work, but...\" I trailed off, not sure what else to say. After a bit of silence, I finally asked what I'd been meaning to ask: \"So should I assume from your answer that you're not planning on telling Jason about what happened earlier?\"\n\nShe looked at me for a moment before replying, \"not yet. Maybe when this is all said and done. I don't know. I just have a feeling that we're not done with the craziness. We've still got another day and night of this, and if I'm gonna have to confess my sins, I'd rather do it all at once, when we're all home and away from this craziness.\"\n\nI was so glad she said that. It was exactly what I was thinking. I knew there would likely be a reckoning at some point, but I just didn't want to face it out here, where there was no privacy and so much craziness. And selfishly, part of me really wanted at least one more chance to be with Allyson. \"Okay,\" I said. \"I won't say anything to Ady, either. At least here in the canyon.\"\n\n...\n\nThe rest of the day went by relatively uneventfully, at least from an interpersonal standpoint. We had a lot of river to cover, including some major rapids, so we spent the vast majority of the day in the boats, only stopping for lunch and for a brief pitstop in the afternoon. There were no side excursions or other opportunities for mischief. But the guides really built up anticipation for the evening. Being our last night in the canyon, the guides were planning a major luau type feast where we would use up the remaining food and alcohol. They said there would be music and dancing and that we should change into our best remaining clothes for the occasion. \n\nNIGHT 6: The Grand Finale\n\nThe final night was one I will never forget as long as I live. \n\nAlmost as soon as we'd beached the rafts, people began changing into nicer clothes. Because most of us had stayed at least one night in Vegas at the beginning of the trip and many planned to stay there a night or two afterward, just about everyone had something other than river clothes packed deep in their bags. I opted for a polo shirt and khaki shorts, as did most of the other men. \n\nBut the women really put us to shame. Most wore skimpy dresses or short skirts and plunging tops, the kind of outfits that women somehow feel compelled to wear when going out for a night in Vegas. It was quite a sight after a week of river attire. Ady looked gorgeous in a skimpy red dress that laced together in the chest area. Lori wore a sexy summer dress with a floral pattern. And Allyson opted for a short skirt and sleeveless top that showed a ton of cleavage. The other women in the camp looked amazing too. Sam, the guide, was wearing a cute little romper outfit that clung to her petite frame. Amy, fittingly, wore a backless dress that looked like something a flower child would have worn during the Summer of Love. Kara, perhaps most shockingly, wore a top with a neckline that dropped well below her breasts, exposing an absurd amount of cleavage. She'd really come a long way since the beginning of the trip.\n\nAs we all started drinking beer and wine and waiting for the food to cook, I couldn't help noticing several of the men pulling out Viagra packs, which they must gotten from John. I discreetly did the same, chasing my pill with a swig of beer.\n\nIn the center of the camp's common area, where all the food was being cooked, the guides set up a cluster of lanterns, as they typically did, as well as a large portable speaker. None of us had heard any music since the trip began, so when the music started, it had an almost hypnotic effect on everyone, particularly those of us who had already had a few drinks and were feeling buzzed. There's really no feeling quite like that initial buzz of the night, particularly when you're outdoors in a beautiful setting.\n\nThe feast was incredible. There were all kinds of freshly grilled meats and vegetables, deliciously seasoned and cooked to perfection by Sam, who wore an apron over her her skimpy outfit. Something about eating outdoors, particularly somewhere so beautiful, has a way of making everything taste just a little better.\n\nAfter dinner, as the sun began to set, Tom, who was playing DJ, turned up the music and led us through an eclectic playlist, one that had something in it for people of all musical tastes. \n\nAfter a while, he paused the music. There was some tapping of glasses, and Arlo stood on top of a cooler to address everyone. \"Guys, this is our last night. Tomorrow we only need to go a few miles down the river before we'll get to the spot where the helicopters are gonna pick you up and take you up to Bar Ten Ranch for lunch and well-deserved hot shower.\" The group cheered at the mention of the hot shower. Arlo smiled and continued, \"but that's tomorrow. We've still got tonight, so let's live it up.\" Another cheer from the group. \"I can tell you truthfully that this has been a trip unlike any other I've been on. I don't know if there's something in the water or what, but ya'll are crazy.\" He smiled as he said that. \"Normally, I'd encourage the group to dance and live it up, because you might never have an experience like this again. But I don't think this is a group that needs any prodding. Anyway, it's been a helluva trip and I'm gonna miss you guys when it's done.\" He raised his beer in the air, making a toast, \"to us!\"\n\nEveryone cheered back in unison, \"to us!\" and, with that, the music began playing again. \n\nWe'd all had a decent amount to drink by that point and still had a fair amount of energy, given we'd done little all day other than sit in the rafts. So before long, nearly everyone was dancing, barefoot in the sand. Everyone was very loose and playful from the beginning, and we were all so familiar with each other by this point in the trip, that we didn't just pair up with our spouses. In fact, it was Lori who first pulled me off my seat and onto the sandy dance floor. She wrapped her arms around my neck and shuffled up close against me, being very flirtatious. Out of the corner of my eye I noticed that Jason and Ady were dancing together, also very closely. She was whispering something in his ear and smiling flirtatiously. The intimacy and familiarity of their body language caused a momentary flash of jealousy. Then the rational side of my brain reminded me that I had fucked her best friend, Jason's wife, that morning and therefore had no right to be jealous. \n\nLori caught me looking at Jason and Ady. It prompted her to stand on her tiptoes and whisper in my ear, \"I know what you did last night...on the raft.\" Taken aback, I looked down at her, pretending my best to look like I had no idea what she was talking about. She smiled mischievously and then leaned forward to whisper again, \"I was awake and I saw you guys. It was hot!\" \n\nNot knowing what else to say, I leaned forward and said \"please don't tell Ady. I haven't told her yet.\"\n\nShe leaned in again and said \"oh don't worry. I think we'll all have things to confess when this is all said and done.\" Then she reached down and grabbed my crotch area. \"Oh, and before tonight's done, I'm gonna fuck your brains out.\" Then she kissed me quickly on the lips, flashed a devilish smile, and darted off to find a new partner. \n\nI stood there for a while, stunned. I was rescued from my thoughts by Allyson, who put her arms around me and began to move her hips slowly to the music. She looked gorgeous. \"Have you seen our spouses recently?\" she asked casually. I glanced over. Jason and Ady were still dancing closely together, like a couple would. \"I'm inclined to let that play out as far as they want to take it tonight. It's only fair. And that way I won't feel as bad about what we did.\"\n\nI swallowed, trying to push away the jealousy that thought triggered. \"Yeah, I guess so,\" I finally replied. ",
        "\"But on the bright side, that might give us one more chance to be together. That wouldn't be so bad.\" She smiled at me seductively. \n\n\"No, it definitely wouldn't,\" I said back, smiling, \"though I think you may have some competition. Lori seems pretty buzzed and she just told me she was going to...how did she put it?..oh yeah 'fuck my brains out.'\"\n\n\"Holy shit!\" Allyson said, stifling a laugh. \"I'm honestly not all that surprised, though. You should have heard some of things she's said to me and Ady. She claims she's joking, but basically she's been lobbying for an orgy.\" \n\n\"What do you think's going to happen tonight?\" I asked.\n\n\"I have no idea. But my guess is it's either going to get pretty wild or really awkward soon. Maybe both. Just do me a favor and don't forget to find me later.\" I nodded, smiling. With that, she leaned in and kissed me gently on the lips, not for terribly long, but for long enough to get a rise out of me. \n\nAfter a couple more drinks and few more dance partners, I found myself dancing with Ady. She was looking beautiful and was very talkative and affectionate, the way she gets when she's pretty tipsy. She leaned in and said, \"this is all really crazy, Jake. I don't know where the lines are any more, especially the ones we've already crossed.\"\n\nI just nodded and said \"I know.\"\n\n\"Is it bad if I want to cross some of them again?\" she asked with a real uncertainty and vulnerability in her voice. \n\n\"No,\" I responded, \"that's just human. Look, Ady, let's just see where things go, but if you want to be with Jason again tonight, I'm okay with that.\"\n\nShe looked up at me earnestly. \"Really, Jake?\" \n\nI nodded again and then leaned in to kiss her. We kissed for a while and before long I had a raging erection in my shorts. It was around then that we heard a deep voice with a thick Kiwi accent ask \"do you mind if I have a dance?\" It was Tom, our guide, asking to dance with Ady. He had been dancing with Sam, who, once Ady accepted Tom's offer, threw her arms around me.\n\nThe music was slow and she pulled in close, a grin on her face. Before long, she reached in and spoke into my ear, \"just want you to know that what I saw yesterday at Havasu, that was one of the hottest things I've ever seen.\" When she leaned back out, she had a wicked smile on her face. If the lighting weren't so dim, she would have seen me blushing.\n\nI leaned in to reply: \"we felt the same about you guys, you know, under the waterfall. You...inspired us.\" \n\nShe smiled back, clearly pleased with my response. \"This is my 20th trip down the river, and I've never seen a hornier bunch. Being around you guys...we just couldn't help ourselves.\" With that she reached around and grabbed me in the ass, while pressing herself closer against me. To my embarrassment, my Viagra fueled hard on roared back to life, unmistakably pressing against her hip. When she felt it, she looked up and flashed that same wicked grin, but didn't say anything else.\n\nIt was around that time that I first noticed Amy. She and her boyfriend, Keith, were really going at it. She had her eyes closed and her back pressed up against him. He was kissing her neck and had one hand under her dress and another fondling her breasts on top of her dress. A number of us were staring at them but they clearly didn't care. As Sam watched, I felt her press even closer against me. \n\nOver the next few minutes, things escalated quickly with Amy and Keith. Keith hiked up the bottom of Amy's dress so that her bare ass was pressed up against him. It was clear from our vantage point that she was not wearing any panties. Before long, he was fumbling with his fly and it was clear what was about to happen. Sure enough, in short order, he had freed his cock and buried it deep inside of Amy, all while they continued to sway to the music. \n\nAs they continued their love-making, oblivious to everyone around them, more and more of the rest of us stopped dancing and just stood there watching. Sam gave me a quick grope, feeling my hard on, before smiling again and wandering off, perhaps to find Tom. A few seconds later, Ady reappeared, sliding her arm around my back as she watched Amy and Keith, who had by this point moved toward the center of the circle, clearly aware that they were putting on a show. \n\nAmy then pulled away, letting her dress fall and leaving Keith's cock exposed for all to see. Within seconds, though, she was on her knees in the sand, in front of him, and she took his cock into her mouth. Ady and several others let out involuntary gasps as this scene played out in front of us. While Amy was sucking Keith's cock, she skillfully undid his shorts and pulled them down, enabling him to step out of them entirely. After several more minutes of well-executed felatio, Amy stood up and gently pushed Keith down, until he was seated in the sand. Then she climbed on top of him and lowered herself down until he was once again inside her. \n\nAs she began to ride up and down on him, she reached back and undid the strap around her neck that was holding her dress up. It immediately fell down to her waist, revealing her spectacular breasts. Within seconds, Keith was leaning forward, propping himself up on his elbows, and taking her breasts one by one into his mouth. Amy now had her eyes open and was surveying her audience, looking for the the lust in their eyes and clearly getting off on it. \n\nIt was at this point that some of the audience began to do more than watch. I first noticed Kara and her husband, Lance. They were standing toward the outer edge of the crowd, but on the opposite side of the circle from Ady and me. Much as Amy and Keith had started, Lance was standing directly behind Kara and had pushed her skirt up over her ass. He began fumbling with his zipper and a few moments later, I could tell by the reaction in Kara's eyes that she had just been penetrated. \n\nMeanwhile, just to our right, Lori was attempting to free John's cock from the confines of his shorts and struggling a bit. When she finally succeeded, she immediately dropped to her knees and took him into her mouth. By this point, Ady was rubbing my cock through my shorts, but we were both content to watch, at least for the moment. Jason and Allyson also seemed largely content to watch, though from my vantage point, it was hard to tell just what Allyson's hand was doing to Jason. For all I knew, his cock was out and she was stroking it. \n\nI noticed that at least one couple, Kevin and Janet, had disappeared, presumably headed back to their cot or to somewhere more secluded. And just as I was noticing their absence, I saw Serena take Arlo by the hand and lead him out into the darkness. I had assumed they'd been sleeping together since I heard Serena moaning the other night, but this was my first confirmation. They'd been pretty discreet up until that point.\n\nBy now, Kara was on all fours getting fucked vigorously by her husband as they both continued to watch Amy and Keith, who were still putting on a show in the center of the circle. The show, however, was clearly nearing its climax. Amy was moving her hips back and forth rapidly, grinding against Keith, her loud moaning leaving no doubt that she and Keith had been the mystery couple on that first pitch black night. \n\nAs Amy came loudly, it was clearly too much for John, who shook and said \"oh god.\" Lori moved her mouth off his cock but left her hand to finish him, as his load shot out into the sand. \n\nWith the main event over, Ady grabbed my hand and led me back toward our cots. Allyson and Jason followed. \n\nBefore we even got to the cots, which were arranged much like the night before, I was unzipping the back of Ady's dress. Before I could get it off, though, she'd turned around and was playing with the button on my shorts. As soon as she got it undone, she yanked them down, along with my underwear, exposing my rock hard cock. Almost immediately, she was down on her knees and had my cock in her mouth. As I stood there, I watch as Jason undressed Allyson a few feet away. It dawned on me, as I stared at Allyson's breasts, that it was much lighter than it had been the night before. I turned and realized that Lori and John had followed us back to the cots, and John was carrying one of the big electric lanterns from the common area. \n\nAdy noticed them but continued what she was doing. But then something interesting happened. While John sat down on his cot, Lori came over to us. She came within a foot of me, but didn't touch me. She just stood and stared down at my cock. Ady, her lips still around my cock, looked up at Lori, undoubtedly wondering what she was up to. But the fact that she didn't stop or say anything seemed to embolden Lori, who slowly reached a hand out to touch my ass. Her hand then moved over to caress my balls. It was then that Ady finally stopped and rose to her feet. But rather than tell Lori off or push her away, Ady took Lori's hand and guided it up until it was grasping my cock. Lori clearly took this as some sort of blanket permission to do whatever she wanted because a few seconds later, she was down on her knees and had my cock in her mouth. \n\nAs I looked over, I realized that Jason and Allyson had stopped what they were doing and were watching us. Both were now naked, and Allyson was stroking Jason's cock, but otherwise, they were just watching us. When Ady saw this, she left my side and walked over to them. She stopped in front of Jason and then wriggled out of her dress, letting it fall into the sand. Then, after looking briefly at Allyson, she stepped forward and put a knee down on either side of Jason's waist, straddling him. She reached back, grabbed his cock, and guided it inside her. \n\nI was so stunned by Ady's boldness that I momentarily forget how surreal it was that Lori was sucking my cock. At that point, I reached down and lifted her up and began kissing her. She kissed back passionately. Taking control, as I knew she would, she spun me around and guided me back onto one of the cots. Then, like Ady had done with Jason, she climbed onto the cot, straddling my waist, and guided my cock inside her. She felt much different than Ady or Allyson, somehow tighter, and very wet. I reached around her neck and untied the strap holding up the top of her dress. It fell forward, exposing her perky little breasts and washboard stomach. I leaned in and began kissing her breasts, while keeping an eye on what was happening on the other cots. \n\nWhile Ady continued to straddle Jason, pistoning up and down on his cock, Allyson sat just to Jason's left, watching them. She was sitting on the cot with her legs spread wide and her hand stroking her clit. All this time, John had been been sitting quietly on his own cot, watching the action around him. But he was now stroking his cock through his shorts, his erection evidently returning. Allyson was now looking at him too and I wondered if she might initiate something. \n\nShe didn't have to. A few seconds later, John was standing and he let his shorts fall to the ground, exposing a rather healthy sized erection. He walked over toward Allyson and as he did so, she slid off the cot and onto her knees in the sand. Then she turned away from him, leaning over onto the cot and thrusting her ass up into the air, clearly beckoning him to take her from behind. John wasted no time. Within seconds, he was on his knees behind her and had driven his cock in as far as it would go, causing her to squeal in delight. It was such an erotic sight that it took nearly all of my concentration not to come inside Lori that second. \n\nJason wasn't as lucky. The sight was apparently too much for him, as a few seconds later I heard him say \"oh god, I coming.\" \n\n\"It's okay, come inside me,\" I heard Ady reply, and I watched as Jason shuddered and Ady eventually came to a stop. It was soon thereafter that I heard footsteps and saw two more people walking into our camp area. It was Tom and Sam, and both were completely naked. I confess that my eyes were immediately drawn to Tom's cock, which even in its semi-erect state was quite large, just like the rest of his muscular 6'5'' frame. He towered over Sam, who was no taller than 5'1''. Sam was looking right at me with that same wicked smile she'd had when we were dancing earlier.\n\nWith his distinctive New Zealand accent, Tom said, \"I hope you don't mind if we join you.\" He said it as casually as someone might ask to sit at your table in the cafeteria. No one said said anything, but heads all turned, including Ady's, who had just now noticed them. \n\nWith an incredible boldness, Tom walked straight over to Ady, who had just dislodged herself from Jason. He reached out a hand and she took it, standing up slowly and turning toward him. He leaned down and kissed her. Almost reflexively, she reached out with her hand and grasped his enormous cock, which almost instantaneously hardened into its fully erect state. As we all watched, in stunned silence, Tom picked Ady up, like she weighed nothing, and lifted her up to his own height as he continued to kiss her. Ady wrapped her legs tightly around him as he expertly lowered her down right onto his cock. Ady gasped loudly as he entered her. Tom just stood there for several seconds, holding her up, lifting her up and down on his cock. Then he slowly turned around, got onto his knees and lowered Ady gently down onto the sand on her back, all the while maintaining the connection. They were now in the missionary position, Tom on top, with Ady's legs splayed wide. \n\nAs Tom began to drive his huge cock into Ady, Lori suddenly shuddered and cried \"oh fuck, Jake\" as her orgasm gripped her. Somehow, I was able to hold back. Almost as soon as Lori had come to a stop, Sam approached. Lori, sensing what she wanted, slowly got to her feet, kissing me one final time as she did so and then walked over to sit down by Jason. No sooner had Lori left than Sam leaned in and kissed me, reaching down to stroke my cock as she did so. Then she slowly turned around to face Ady and Tom, while lowering herself back to sit in my lap. I guided my cock right into her opening as she did so and a second later she had fully impaled herself on me, her hands resting on each of my thighs. I kissed her neck as I reached around and fondled her breasts. She moved up and down on my cock as we continued to watch the scene in front of us. \n\nMeanwhile, John and Allyson were still going at it, but had moved into a similar position as us, with Allyson sitting on John's lap, facing outward, presumably so as to get a better view of Ady and Tom. As Sam slid her lithe, sweat-soaked, 22 year old body up and down against me, it occurred to me that she was the third woman I'd had sex with that day, and none of them were my wife. Meanwhile, my wife was a few feet in front of me, getting ravaged by a 21 year old dude built like a lumberjack. And she was loving it. I'd never seen her so utterly lost in the throes of passion. At that moment she wouldn't have noticed or cared if a thousand people were gathered around her watching. And I have to admit, flashes of jealousy were at times overpowering my own lust. \n\nIt didn't take much longer for Ady to come. Arching her back and gripping the sand with both hands, she screamed, \"oh fuuuuuck!\" and her eyes bulged. As she was writhing in pleasure, Tom pulled out and let loose an absolutely massive rope of cum that splashed across Ady's stomach and up onto her breasts. She didn't even look like she noticed. It was a powerfully erotic sight.\n\nI was so turned on that I lifted Sam up and pushed her gently down onto her hands and knees on the sand. I moved with her, staying inside her, until I was on my knees behind her. I then grabbed her hips and began thrusting into her hard and fast. To our left, I heard John say that he was going to come. Not wanting him to come inside her, Allyson jumped off and quickly spun around, moving her breasts underneath John's cock. A second later, he unloaded on her, soaking her tits with cum. That, in turn, seemed to trigger Sam, who shuddered and squealed. I couldn't hold out any longer. Not knowing if it was safe to come inside her, I pulled out and let go. My cum shot across her ass and up onto her back. \n\nFor the first time in a long time, there was no longer anyone fucking or fooling around. We were all just lying or sitting there, catching our breath or cleaning ourselves off. I'm not going to lie. It was more than a little awkward. No one had any idea what to say. Tom was the first to rouse himself, kissing Ady on the forehead and saying \"you're lovely\" before standing up. Sam gave me a peck on the cheek before getting up to join him. The two held hands as they walked away into the night. \n\nAs the rest of us were returning to our respective cots, John switched off the lantern. Just before it went off, plunging us all into darkness, Allyson and I made eye contact. I had wanted so badly to be with her one last time, and by the look of regret in her eyes, I sensed the feeling was mutual. Had we missed our last chance?\n\nIt turns out the answer was no. A few hours later, as I lay on top of my sleeping bag, next to Ady, I was awoken by a kiss. I assumed it was Ady, at first, but as my eyes adjusted, I realized it was actually Allyson leaning over me. I turned to my right and saw that Ady was still asleep. By this time, Allyson was tugging on my shorts, pulling them down and then off entirely. And then, before I had time to even think about what was happening, she had her lips around my cock. Within seconds, I was hard. She didn't spend long down there, just long enough to get me good and ready. Then she slowly climbed onto my cot, straddling me. She had a tank top on but nothing below the waist. Once she was in position, she reached back and gently guided my cock inside her. Of all the multitude of sexual encounters I'd had on this trip, this was the first where we were actually trying not to make noise. And it was refreshing in that way. Allyson was moving very slowly, very delicately, silently gliding up and down on my cock. Remarkably, Ady had still not woken up. \n\nAfter a few minutes, I reached up and gently pulled down the straps of her tank top, pulling the entire thing down to her waist and freeing her breasts. She leaned into me, dangling her breasts over my mouth. I sucked on her nipples, first one, then the other. Then she leaned back, sitting upright as I reached forward with both hands, fondling her breasts. Her hips were now moving a little faster, grinding against me. It was at this point that Ady finally stirred. As she opened her eyes, I could tell that she was having trouble processing what she was seeing. Allyson reached over and put a hand on her arm. She leaned in and whispered, \"I'm sorry, Ady, I didn't get my chance earlier. I hope you're not mad.\"\n\nI held my breath, not really sure how she'd respond, but all she did was smile and roll over onto her side, facing us. Taking that as permission to continue, Allyson resumed her slow movement, her hands now resting on my bare chest, her breasts squeezed together between her arms. Ady was watching us intently and, to my surprise, I saw her hand move down into her shorts. I turned my head to face her and for a moment our eyes locked. Then we were kissing, gently at first, but then very passionately. Allyson seemed to get off on this. The more Ady and I kissed, the more urgent Allyson's movements became and the closer she got to orgasm. When I knew she was getting close, I turned back toward her and leaned forward, propping myself up on my arms and burying my face in her tits. As I sucked her nipple into my mouth, Allyson suddenly and silently came, her whole body shuddering. \n\nWhen she'd stopped shaking, I gently pushed her off and rolled over onto Ady's cot. I was on my knees, facing Ady, who was now lying on her back, looking up at me. I reached down and pulled off her shorts. Then I pulled her toward me until my cock was resting on her pussy. Gently, I reached down and moved the tip of my cock against her clit in a circular motion, teasing her. I did it again and again, causing Ady to moan softly. As I was doing this, Allyson moved around behind me and I felt her breasts press up against my back and her arms reach around me. At first she just touched my chest, but her hands soon made their way lower and lower until they were touching my cock and balls. She stroked my cock a few times and then lined it up with Ady's opening. I leaned in and buried my cock inside Ady. It felt so comfortable and familiar, like finally sleeping in your own bed after a long trip. Ady was now stroking her clit with her finger as I slowly thrust in and out. We didn't try to draw things out. Neither of us had the energy. In less than a minute, we were both there. It felt so amazing to come inside her, to orgasm right at the same moment she did, her eyes bulging the way they always did just as her orgasm washed over her. ",
        "When it was done, I kissed Allyson one last time. She smiled at Ady and then got up and returned to her cot, where Jason remained asleep. \n\nDAY 7: What Happens In the Canyon, Stays in the Canyon\n\nThe last day was somewhat anticlimactic. There was no more sex (at least that I was involved with). No more nudity (no need to bathe in the cold river when hot showers awaited). And no one really seemed to want to talk about the sexual escapades of the last night (or the entire week for that matter). We rafted the last few miles and then were helicoptered out of the canyon in small groups. At Bar Ten Ranch, we all showered, shaved, and changed into clean clothes. It felt wonderful, but as we sat down to eat lunch, it already felt like everything that had happened in the canyon was something that happened in another life. I knew it wasn't something that would or could continue. It was unsustainable. And it needed to be contained if we wanted to return to some semblance of normalcy in our lives. We didn't even need to discuss it. We just all knew.\n\nThat was six months ago and nothing even remotely like those nights in the canyon has happened to us since. Ady and I have returned, at least for now, to our normal, monogamous marriage. But though we rarely talk about what happened, we haven't forgotten about it either. The memories, powerful as they are, will always be there, waiting for the right opportunity to lead to mischief."
    ],
    "authorname": "Sanomiya",
    "tags": [
        "group sex",
        "loving wife",
        "voyeurism",
        "exhibitionism",
        "cheating",
        "couples",
        "group"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-wrong-cot"
}