{
    "title": "Sholan Alliance - AU Bk. 02 Ch. 07",
    "pages": [
        "Author's note: Sorry it took so long for the previous chapter and this one. I had finished six and could have sworn I posted it. When I checked I was horrified to realize I hadn't and it had been almost two weeks since I had posted it on the other site. In any case I finished this one and hopefully it will post by the end of the week.\n\nAll sexual relationships are 18+.\n\n*****\n\nBilly and Tasha were relaxing in the main room and quietly talking when Dani and Z'Marl came out of the other room. For a brief moment Billy's eye brows went up as he sensed the feelings from them. He glanced at Tasha and gave her a questioning look. *Did what I think happened? Not that I have a problem but I am a bit startled.* He glanced back at them. \"About ready to meet Vangie and Sally? We were going to meet at the front gate and we need to get going.\"\n\nDani barely managed not to blush when they walked out of Z'Marl's room. She yawned and stretched before answering. \"That is why we are up you know? He did mention that there was a stop he needed to make before we head out to his house.\" She had to wrinkle her nose since that was going to be rather interesting to watch.\n\n*I think I would have to say yes. Does it bother you?* Tasha snorted since she had a good idea what was going through Dani's mind. \"Just don't tease them to much Dani. This is going to be awkward enough for the two of them. Now later we can tease the daylights out of them.\" She shared a grin with the other two females.\n\nBilly had to grump at her. \"Be nice to my oldest or you will be sleeping on the couch woman.\" He lightly poked her in the side before standing up and offering her a hand. When she stood he wrapped his free hand around her neck and pulled her head down and gave her a loving kiss. \"My lovely Leska, it feels so good to be able to touch, hug, and hold you.\"\n\nSatasha snickered at him and his threat. After standing when he drew her down for a kiss she closed her eyes and leaned into it. Her ears lowered at his words and she looked rather shy for a moment. \"My lovely Leska as well and not having to worry about hurting you just by sleeping next to you is wonderful as well.\"\n\nDani smiled as she leaned against Z'Marl. She still couldn't believe the changes in her daddy. Maybe if she had been there from the start they wouldn't have seemed quite so drastic. After watching them kissing for a while she coughed to get their attention. \"So are we leaving or not?\"\n\nBilly turned and smirked at Dani. \"I was wondering how much longer I was going to have to hold my breath before you interrupted.\" He winked at her for good measure. \"I am sure you know that their kisses can be rather enjoyable right?\" He didn't change expression as he offered his good arm to Tasha and headed out of the room.\n\nDani turned quite red and buried her head in Z'Marl's shoulder and sighed. \"Sometimes I hate my father.\" She leaned into Z'Marl as they walked out of the room.\n\nGetting to the entrance didn't take too long and they found both Vangie and Sally there. Vangie had been brushed till he gleamed and Sally's hair was very nicely braided. Both looked good and Z'Marl gave them a light whistle. \"Goodness you two look good together. Your fur contrasts very nicely with her hair. I would say I am almost jealous but I have Yilly so it's all good.\"\n\nAll of them laughed and started down the street. They knew that both Vangie as well as Z'Marl had some things they wanted to pick up. Thankfully the store wasn't that far but Billy was still puffing some when they arrived. \"God this is driving me nuts. I am going to wait here and lean against the bus sign post and catch my breath.\"\n\nVangie and Z'Marl walked into the store and it only took a few minutes to pick up what they had ordered. \"Sorry you had to hold on to them for so long. Most of us came down sick and this is the first day we have left the guild property.\" Vangie informed him.\n\nThe jeweler waved his hand at them. \"Not a problem and don't worry about it. I just hope you like the job I did so I might have some more business with you.\" He took a minute to give everything a good polish before putting the necklace and bracelet in separate silken bags and handed them over.\n\nWith thanks they started to walk out. Billy was leaning against the pole with his good shoulder and the females were sitting on a bench. As they started to move out of the doorway there was some shouting and rapid movement through the crowd.\n\nBilly was facing the wrong way to see what was happening and ended up getting hit but one of three students who had been running. Since his bad shoulder was in the way that was the part the male student hit and Billy went down like he had been poleaxed. \"Oh fucking hell.\" He curled around the arm and was trying to both catch his breath and avoid barfing due to the pain.\n\nVangie turned and bellowed at the students. \"Freeze you three and come here now.\" His voice was cold and hard as he spoke. When they turned around all they saw was a warrior with his hair starting to stand up. \n\nIt was obvious the male was not pleased for whatever reason and they froze just long enough for him to bellow again. \"Get your tailless asses over here now or you will regret it. Don't even consider trying to run away. I have your images and will find you.\" He was snarling as he spoke.\n\nSatasha was curled up as well since she had felt the impact and blazing pain from the contact. Z'Marl was trying to help her as Sally and Dani headed to their father to see if he was okay. If it was just pain that was one thing but if they had damaged the reconstruction that was totally different.\n\nThe three males slowly came over and they had their ears flat against their head and their tails were hanging. \"How can we help you warrior?\" The first one asked.\n\nVangie didn't hesitate when he grabbed a fist full of the boy's robes and jerked him close. \"First off you know better than to run in a crowd like that and I don't give a fuck why you were. Second when you hit Commander Madlax who also happens to be an Ambassador from Earth you didn't stop to apologize. Third Commander Madlax just had reconstructive surgery on the shoulder you hit while running. If there is any damage to him you are facing a trial since he and Lt. Commander Satasha are both telepaths. What you did was at the very least assault and might end up assault with grievous bodily injury.\"\n\nThe boy's ears flattened even further against his head. His pupils were dilated and it was obvious he was terrified of the warrior. \"I am sorry warrior. We shouldn't have been running. Commander we apologize to you as well. How can we help you?\" \n\nBilly slowly stood up with the help of his girls and grabbed the pole with his good hand for support. His face was laced with pain from being hit as well as fury. \"You are going to walk back to the guild and you are going to report to whoever is in charge of you. You will not leave your rooms except for meals and training. When I have calmed down I will decide what punishment you deserve. Now get out of my sight-without running either.\"\n\nThe three boys nodded and hurried away from the two furious adults. The sooner their tails were out of sight the better for them.\n\nA small crowd gathered around to see what had happened. All of them were curious about the aliens but stayed back. A middle aged Sholan female moved forward. \"I am a doctor and can check your injuries if you want. I am just a general practitioner but I can tell if there was any obvious damage.\"\n\nBilly grabbed Vangie's arm for support and moved over to the bench and sat down. \"Please do. We are expected somewhere and I don't want to have to cancel unless there is damage.\" He was still going to need to see the doctor either that evening or the next morning.\n\nShe moved forward and out of a bag she was carrying she pulled a portable scanner. She carefully scanned the front, top, and back of his shoulder. Once done she checked the results. \"It looks like you have some swelling but nothing obvious was re-injured. You should see your surgeon as soon as possible. Do you have some pain meds? If so I would recommend taking them and for swelling and nausea, it will help your Leska as well.\"\n\nVangie nodded. \"We have meds for him and thank you for your assistance doctor. You have a good day.\" He pulled out an autoinjector and gave Billy a quick acting short term pain med. \"Take your pills and this will take care of the pain while they kick in. Do you feel up to going to my house?\"\n\nBilly had tossed down a couple of pills right before Vangie zapped him. \"I will be damned if some stupid teens are going to keep me from going. Pain is pain and it will die down soon enough. How about a public air car instead of the public transport, I don't feel up to it right now.\"\n\nVangie nodded and called for one. By now Satasha was feeling better since she had applied the filters to the bond. She also felt better once the pain meds kicked in. She still had a burning ache in her shoulder but it was down to a manageable ache. Now that she was able to breathe she scooted over to Billy and sat next to him. \"God that was awful. I want to find those three and claw some fur off them now.\"\n\nBilly leaned against Z'Marl since she was on his good side and shuddered. \"Tell me about it. All I saw was stars and the urge to blow chunks on the sidewalk.\" When Satasha pressed her hand against his leg he started to relax from the contact. \"I am more pissed about you having to feel that more than anything else.\"\n\nDani and Sally were on the outside of Z'Marl and Satasha. \"Are you feeling better daddy? Should we take you back to the hospital?\" Dani's first urge was to take him back even kicking and screaming but that wouldn't happen.\n\n\"No sweetie though I will go either this evening or first thing in the morning. It will depend on how I feel later.\"\n\nOnce Vangie had called for the air car he had gone to a vender and picked up a cold sweet drink to keep Billy from going into shock. When the vendor gave it to him for free he gave the man a questioning look.\n\n\"Sonny those three students are a pain in the ass and are always running around. We have yelled at them and yelled but they just laugh it off and keep doing it. It is a pleasure watching them get pulled down a peg or two.\"\n\nVangie raised an eyebrow and nodded. \"I am glad to know that and will mention it to Yilly. I am sure he will find it simply fascinating to know that.\" He winked and walked over and gave Billy the drink. \"It is on the sweet side but you need it.\"\n\nBilly waited for Vangie to take the top off and took a sip. It was sweet but also had a bit of a tang to it. He had swallowed down about half the bottle when the air car arrived. He gave it to Z'Marl to recap and had Tasha help him stand. When the others went to help he waved them off. \"I am feeling fairly sensitive right now and if you touch me I will feel your anger and I really don't need that.\"\n\nSatasha helped him into the air car and belted him in before she settled down. It only took a few minutes for everyone to be belted in. Once the air car detected everyone was belted in it lifted off and headed to the address Vangie had provided.\n\nBilly leaned back against Tasha for the flight and closed his eyes and was taking slow deep breaths. *God that hurt Tasha. I almost lashed out with my powers. Thank god the pain was so bad I couldn't focus them. If I had I don't know what might have happened.*\n\nShe stroked his hair and sent him her love. *I understand and it would have been classified as self defense. It is still good that you didn't.* Satasha comforted him all the way to Vangie's house. Once they arrived two females came out.\n\nVangie stepped out. \"We are going straight in. Yilly had some stupid snots run into him and jarred his shoulder. He needs to sit down and recover for a time.\" Satasha and Z'Marl helped him out of the vehicle followed by his two girls.\n\nBilly was looking rather pale still but he did nod. \"Thank you for having us over and sorry about this. I should be better soon.\" Satasha wrapped an arm around his waist for support and they walked into the house. Once inside he had Satasha help him take the tabard off. \"Check and make sure there isn't any bleeding or damage to the bandage.\"\n\nWhen he did that the two females eyes got really wide and they gave a quiet hiss of sympathy. The younger came over and knelt down close to him but not touching. \"That looks really painful. Are you doing okay? I see you have a drink but would you like some c'shar?\" Her ears were pricked forward and her fur was an interesting mix of the gray of her father and dark brown of her mother.\n\nBilly gave her a lopsided smile. \"I will say this much, if you ever get a chance to be shot don't. It really sucks big time. As far as something to drink that would be fine and thank you.\" He looked over at Z'Marl and she rolled her eyes at his sad eyes he was trying on her.\n\n\"Yilly that doesn't work on me normally but since you are a poor short man in pain I will get the instant coffee out for you.\" Just for good measure she ruffled his hair as she walked past to get the powder from his bag. When she continued past him she felt him lightly tug on her tail so she hissed at him just for good measure. \"Bad human, bad, shame on you. Not pull kitty tails since kitties have claws.\" She hissed again.\n\nVangie snickered at the two. \"Behave you two or I will have to separate you. Oh, this is Signey's mother Holla. Holla this is...\" He introduced everyone till he got to Sally. \"This is Yilly's oldest girl and my companion Sally.\" He even managed to say that without twitching his ears or tail.\n\nSally walked over to Holla and gave her a good hug and rubbed her cheek against Holla's. \"I am pleased to meet Vangie's former bondmate. He is a lovely man and very caring. Thank you for training him well.\"\n\nHolla snickered at her as Vangie made an annoyed sound. \"I am pleased to meet you as well Sally and he already came mostly trained. I just had to polish one or two rough edges.\" When Vangie made a choking sound she grinned at him and winked. \"Would you mind helping me in the kitchen? We can trade stories.\"\n\nVangie rolled his eyes. \"Women are a pain in the tail but we can't live with or without them. Just for that someone might not get the surprise I have for her.\"\n\nAs Sally and Holla walked away Sally simply snickered over her shoulder at him. \"I will simply have to hunt for it then.\" She walked into the kitchen and started to look a bit embarrassed. \"It feels sort of odd to be introduced to his former bondmate and daughter.\"\n\nHolla laughed at her comment. \"Relax Sally, it is okay. We share the house but have separate rooms. We have both have had the occasional lover over and it normally isn't an issue.\" She gave her a look and had a sly smile on her face. \"So how old are you? I get the feeling that Vangie is robbing the cradle.\"\n\nSally blushed a bit more. \"It isn't a common thing where I come from and I am still getting used to the Sholan culture.\" When asked her age she really blushed. \"I think I would be about twenty one by Sholan standards.\"\n\nHolla looked slightly startled and then came over and gave her a good hug. \"So Vangie robbed the cradle huh? Well so far I like what I have seen of you and I have a feeling you will keep him on his toes.\" After rubbing Sally's cheek with hers she turned back to the stove. \"Dinner is mostly done and mostly needs to be taken out to the table. If you can grab those trays and take them out I would appreciate it.\"\n\nSally returned the cheek rub and then gave her a shy grin. \"Well if it helps my pa is about 40 and Satasha is 28 or so and Z'Marl about my age. I guess robbing the cradle runs in both families.\" She grabbed the trays and carried them out to the table. Whatever was on them smells really good and her stomach was rumbling.\n\nWhile they were doing that Signey had made a fresh pot of c'shar and pulled out a tray and placed some sweetener and cream on it. Once she was done she carried it out to the Human. He was still looking rather pale and she could see traces of pain in his face. \"Here you go sir. I hope you enjoy it.\" She put the tray down on a small low table next to him.\n\nBilly was leaning against Z'Marl when Signey came out and he opened his eyes and smiled at her. \"Signey please call me Billy. The only people I expect to call me sir or Commander or even Captain are in the military or have really annoyed me. I am sure a pretty girl like you wouldn't annoy me so just use my name.\"\n\nOnce she had put the tray down Vangie came over and wrapped his arm around her and licked one ear. \"He is telling the truth. Most of the time he expects to be called Yilly, if he doesn't want you to he will tell you.\" He smiled down at her and stroked her ears. \"She is a very good young lady and her mother has done an excellent job raising her when I am not around to help.\"\n\nSigney gave Billy a shy smile. \"Yes Yilly I will call you by your name. If I didn't my father might paddle my tail and I really hate that.\" She leaned into her father's petting and almost preened. She had really missed him but knew why he was gone. \"Thanks for bringing him back with you. He sent a number of messages and they were complimentary about all of you.\"\n\nBilly was listening as he carefully spooned the instant coffee into the cup and added the sweetener and whitener. When he noticed her frowning slightly he smiled at her. \"C'shar is a decent drink but I need my coffee fix and mixed together they make for an interesting taste. Before you ask to try some talk to your father.\"\n\nSatasha snickered at him. \"True since we don't need any drunk Sholan's here.\" She went on to explain what she meant. As Billy sipped on the drink she could feel him starting to feel somewhat better. She could feel his tiredness as well and figured he would be going to sleep early. That was unless he decided to go back and get seen.\n\nThey settled down around the low table as the food was being brought in and were chatting. Billy and Vangie deliberately kept it casual and other than brief mentions of the time together they didn't discuss that at all. Most of it was Vangie catching up with his daughter and Holla. With Dani she was asking questions about what she liked to do and places to go. That ended up with Dani calling later in the week to see about making some plans for the upcoming weekend.\n\nDinner was casual and served from several central dishes. There was something similar to a rice pilaf with a nice spicy bite to it. The meat was strips that had been marinated in heaven only knew and was tender and tasty. With the meat was some rounds of a crusty bread with a sort of garlic spread on it. The last dish was a variety of diced up fruits and veggies.\n\nDani had cautiously taken a bit of everything but when she took the first bite of the meat and bread her eyes widened. \"Oh man this is good. Daddy can I stay here and learn her cooking?\" She polished off the food on her plate and went back for more.\n\nHolla smiled at her. \"I am glad you enjoyed it Dani and if you want when you come over we can cook some pastries. You can take them home with you and go from there.\" It would be nice to get to know Dani and indirectly her father and sister.\n\nDani grinned back. \"Oh my yes and I will dig up a few of my recipes as well and bring them along. We can compare notes. If I didn't cook daddy would have starved years ago. I watched him cook an egg once and one side was burned and the other runny.\" She started giggling and giving her father a sly look when she said that.\n\nBilly settled for a growl at her since he was enjoying the food entirely too much. Once he finished the bite he also complemented Holla. \"Oh my, that is darn good and thanks for having us over. As far as the giggling child over there ignore her. She can't grill a steak to save herself. Now that is man's work. Let the women do the inside cooking.\"",
        "Satasha lightly smacked the back of his head. \"I will tell Jenna and Sandi that and you will be stuck with the food dispenser...\" She had to nibble on a nail for a few moments. \"Then again that is better than that dried stuff you call food aboard your ship. That wouldn't be much of a punishment. I guess you will simply have to sleep on the couch till our next link day.\"\n\nThat got her stared at by Holla and Signey and then they looked at Billy. They finally noticed the Leska pin and their eyes got even wider. \"Oh my gosh, how did that happen? You aren't even Sholan...\" As soon as Signey said that she dropped her ears in apology. \"Please excuse that question and comment.\"\n\nHer mother had almost asked the same thing and as bad as it sounded she was glad Signey had. \"Next time think before you engage your mouth hun. I know that might have startled you and I have to admit I was a bit surprised myself. You still need to contemplate what you want to say and see if it is the right thing.\"\n\nVangie leaned over and stroked her hair and ears. \"Yes they are Leska's and no Yilly isn't Sholan. If he was I would have to wonder who shaved him and dropped him on his face.\" He grinned when Satasha hissed at him.\n\nBilly snickered at both Vangie and Tasha and he took sympathy on the young Sholan. \"Relax Signey and I don't blame you for being shocked. You should have seen my reaction to our link. I didn't quite freak but having all of Tasha's memories being rammed down my throat was most definitely not pleasant.\" He grinned at Tasha as she grunted in agreement. \"I am sorry but there are some things about females we males simply do not want to know.\"\n\nSatasha poked him in the side. \"Brute! How did I end up with some old fogy like you?\" She shook her head. \"Honestly we aren't sure what caused the link but they are working hard to find out why. It is something that we need to find out.\" She leaned over and gave him a gentle nuzzle. \"We both had wanted to bond which we did before this ever happened. We love and care for each other and the only thing we regret is I can't have his children.\"\n\nThat discussion went on for several minutes before they changed the subject. About then Vangie gave Sally a sly look. \"Wanna know what the kitty has? What is it worth to you to find out?\" There was a definite burr in his voice and Holla rolled her eyes.\n\n\"I know that tone Sally and you might want to consider making a break for it... He used that tone just before I became pregnant with Signey. He can sweet talk you into almost anything when he does that.\" She grinned at Vangie when she said that.\n\nSigney covered her face. \"Mom there are some things I just don't need to know about. Please don't torment me that way.\" Just for good measure she shuddered.\n\nDani snickered at her as she wrapped an arm around her. \"Tell me about it. Watching daddy making out with Tasha the first few times was horrifying. It didn't matter that Tasha was Sholan only that my daddy was acting like an overgrown teenager.\" She had to shudder as well before sticking a tongue at her father when he snickered and started nibbling on Satasha's ear.\n\nSally leaned forward and rested an elbow on the table. \"Would you like some coffee Vangie? I can make you a nice strong cup for you...\" She even went so far as to give him an innocent look when she said that.\n\nVangie laughed at her and held the bag up so she could only see part of it. \"I should at least get a kiss from you before I let you look.\" His ears were pricked forward as he was teasing her.\n\nShe growled at him before standing up and stalking around the table. \"You are so going to get it tonight you bad kitty. No kitty nip tea for you.\" She settled down in his lap and wrapped her arms around him and gave him a good kiss finished with a nibble to his lower lip. Just for good measure she started twirling a finger in the fur of his chest. \"Now do I get to see the yummy surprise you have for me?\" As she was talking she was looking up at him through her eyelashes while looking demure.\n\nHis daughter was watching the antics in horror and one ear was twitching as if her mind was melting down. Her mother covered her eyes. \"There hun now you don't have to see your father in his dotage.\" Her voice was laden with concern and caring though it was patently false.\n\nDani rested her forehead on her hand and sighed. \"Now you see what I have had to deal with only it is my father that does that sort of thing.\" She saw a smile starting to cross his face and she growled at him. \"Don't you even think about it father or I might scream in frustration.\"\n\nSince Sally and Kingie were still having a bit of fun with the kisses and nibbling she turned to Signey. \"Assuming our plans work out this weekend do you happen to know some normal boys our age? At least that way I will know what to expect.\"\n\nSigney snickered at Dani. \"Sounds like a deal. I know several cute guys of which I have my eye on one or two.\" That was deliberately said for her father's sake.\n\nVangie stopped and growled. \"Names and addresses before anything happens and I am going to borrow one of Yilly's shotguns. I will be sitting at the table cleaning it.\" He scowled at Signey for the teasing.\n\nSince he was distracted Sally snatched the small silk bag and opened it. When she poured the necklace out Sally turned pink and looked shocked. \"Oh Vangie this is lovely. Thank you so much. I love it.\" She threw her arms around his neck and hugged him. The chain was slinky; almost serpentine that had polished sections as well as brushed sections. As it moved the polished sections reflected the light almost if there were tiny diamonds. The dangle was a lovely semi-opaque whitish stone in an elegant golden cage.\n\nVangie returned the hug and kiss. \"I am very pleased you like it Sally. You are one of the most enjoyable companions I have ever had. Even if I am just an ignorant lout compared to you, Dani, and your father.\"\n\nSigney tilted her head at that statement. \"What do you mean dad? Why an ignorant lout that is?\" She could tell he was being serious when he said it.\n\nSatasha snorted. \"Because us merely mortal humans are ignorant louts compared to them. Yilly is both a theoretical and practical physist majoring in hyper engines. He has a minor in computer hardware and programming. He is currently redesigning the standard hyper engine they use on Earth. Sally is working on a dual degree in xenopalentology and xenobiology. Dani is working on becoming a doctor at one of the most prestigious training centers in her country. They are all classified as genius level brainiacs.\"\n\nBilly gave his down home smile that had a sort of 'aw shucks' look to it. \"I's not overly edjumacated, just raised with a bit o' common sense.\" Tasha snorted and poked him again.\n\n\"Oh and incase I forgot ignore that pretty and innocent look that Z'Marl does so well. She is only a little bit less intelligent than Yilly. Can you say geek speak foreplay?\" She shuddered though she did grin at Z'Marl who simply looked innocent.\n\nZ'Marl took that as an invite to give Billy her gift. \"I hope you don't mind Satasha and Billy but I got a gift for you as well.\" She didn't bother with any of the playing of the other two. Now she was looking and acting her age-a shy young woman. As she was talking she handed a pouch to Billy and a last second purchase she had made to Satasha. \"I hope you like them.\"\n\nBilly had to raise his eyebrows at the weight of the pouch. \"Z'Marl could you open this please, I am a wing short of being able to.\" He handed it back to her and held one hand out.\n\nShe had to smile at his joke but took the pouch back and opened it and placed the bracelet in his hand. It wasn't in anyway a bonding bracelet such as he and Satasha had but it was heavily engraved bronze with silver chasing. Once he had looked at it she put it on his other wrist.\n\n\"Oh love it is beautiful and thank you so much.\" He pulled her towards him and gave her a good kiss and hug. \n\nSatasha joined in the hug as well. \"That is a beautiful bracelet Z'Marl and it was very nice of you to get it for Yilly.\" She opened her pouch and it was a smaller version of Billy's and obviously designed for a female. It hadn't required any modification since Tasha was Sholan. \"Oh this is lovely and you should get one as well. We will go to the jewelers tomorrow or the next day to get one made.\"\n\nThe rest of the evening was spent chatting about this and that. Signey had to ogle the jewelry at one point and sighed since she didn't have anything like that. Eventually they went to bed and after breakfast the next morning they headed back.\n\n~~~\n\nThe morning of his next surgery and after their link day he was lying in bed looking at the ceiling. Satasha was curled up on one side and Z'Marl on the other. She had snuck in at some point during the night and curled up with them and fell asleep. He had to smile some since if she had been much earlier she would have been drawn in by the sexual draw of the link. Billy had a feeling that wasn't something she would normally do and would have been appalled.\n\nHe took a moment or two to contemplate the last two weeks. They had been back to Vangie's house once as well as to Kingie's parent's house. That was a very enjoyable visit since Crystal was obviously flourishing under their care and love. She had been more outgoing, giggly, and comfortable with casual touch. That wasn't saying it was all bunnies and pink unicorns for her. If you moved to fast near her she tended to flinch. With touch she had to see you first. If you came up behind her and touched her she would jump and twitch. Overall she was doing better and she and Amahs were obviously getting along well.\n\nHe had to start smiling as he continued to remember the visit. Kingie's little brother was a darling handful and had seen all the new people as being there just for him. He lap swapped, cuddled, played, and had a great time. Billy had caught Tasha with a wistful look on her face as she watched the little boy playing. It was obvious that she did want children eventually. That was frustrating since he wouldn't mind at all. As far as the genetic drift they were still evaluating it and how wide spread the effect was going to be.\n\nWhat rather pissed him off was the same or similar was happening to the rest who had gotten sick as well. Due to that they were also in the process of dissecting the new strain of the virus. They were mostly done with that but were researching the structural make up of the DNA of the virus. There were some hints of the human DNA being part of the makeup. That they couldn't explain at all. Even Vartra's Priesthood was looking into their records as well.\n\nHe forced that out of his mind or it would make him most definitely grumpy. Instead he changed memories to dealing with those three idiots. Now that had been fun and enjoyable. His mind traveled back to the morning after they had run into him.\n\n~~~\n\nThat morning when he woke his shoulder was still bothering him more than it had been. Billy hadn't been too concerned since he figured it was mostly due to inflammation of the tissues. He wasn't going to chance it though and the first stop was at the hospital to get seen. It had taken the doctor some time to get to him since he had been working on another patient. When he did he settled down and asked Billy what was going on.\n\nBilly had explained what had happened the afternoon before and before he knew it he was in a scanner again. The doctor reviewed the results for several minutes before having a nurse remove the dressings. \"It doesn't look like much other than inflammation due to the impact but we are going to change your dressing and verify that.\"\n\nBy the time Billy had a new dressing and had been released it was almost lunch time and he was angry, sore, and tired. Since he knew better than dealing with this now he went back to the suite to relax. As he was thinking he came up with the perfect punishment. He was going to humiliate them to death for what they had done. He sent a brief message to the three male's main councilor requesting a good time to talk to the three. Billy had made sure to tell him he wanted to talk to them in class.\n\nThe councilor wasn't sure of that but Billy pulled rank on him. Between that and a casual mention of going to the guild master if he needed to gained him a time to talk to the class the next morning. When Satasha had come back from dealing with some paperwork at the local space navy branch he was smirking. He knew that she had felt what he was doing and her thoughts were even worse than his. \n\nHe pulled her down in his lap and nibbled on and ear and along her jaw to help her relax. \"Don't worry Tasha since they will be hating life for a week or two. The embarrassment of the punishment will be burned into their mind for a long time.\" She hissed in anger but let him seduce her into relaxing with him on the couch.\n\nHe had contacted both Kingie and Vangie for assistance in the punishment. When he informed him of what he was planning on doing both males started laughing. Crystal joined in the conversation and was giggling as well. She did tell him he was a stinker and mean but in a good way.\n\nThe next morning he had showered and had Tasha help him get looking his best. With a grunt he added a handful of medallions and a torque indicating he was an Ambassador. Just for good measure he also strapped a massive bowie knife on his right side. Once he had his barbaric splendor on he let Vangie and Kingie know that he was heading to the class room. He met them outside the door and as soon as the instructor called the class to order the three of them stepped into the doorway.\n\nThe instructor was waiting for them though he didn't approve of the idea. \"Students we have several visitors. Please come in gentlemen.\" He stepped off to the side as the three of them walked in. Both warriors were in their full uniforms and looking rather dangerous. Billy almost had to smile when a number of the females almost started drooling. He let his eyes wander around the class till he identified the three young men. All of them were looking shocked and horrified.\n\n\"Good morning students. My name is Billy Madlax. I am the captain of the SS Sandi, Captain in the Terran Space Corps, Commander in the Sholan military, and ambassador from earth. These are my warriors Senior Vangie and Junior Kingie. I am here to have a brief talk about proper etiquette. Several days ago my friends and I were standing at a public transport stop. While there three students came running through the crowd. They were not looking where they were going. One student ran into my injured shoulder.\" He pulled his tabard back and showed them the dressings.\n\nWhen he did he jarred my injury bad enough it put me on the ground and I almost vomited from the agony. Added to that my Leska had the dubious enjoyment of feeling my agony which almost put her down as well. If the pain had been even slightly less I would have used my powers to defend myself. Chances are good that would have left said individual with gray matter bubbling out of his ears.\" His eyes were cold as they swept the class. As he focused on each boy he hardened his face.\n\n\"Technically I could have them arrested on a number of charges including assault on a telepath, assaulting a Leska pair, assaulting senior officer in two different military's and finally assaulting an Ambassador from a new species. I discussed this with some legal experts and some of the worst punishments included personality modification and a rather impressive number of years behind bars.\" He took a sip of the coffee he was carrying.\n\n\"After a great deal of consideration and discussion with my Leska and bondmate we chose not to. She personally wanted to take the one who hit me to a challenge circle and give me his tail as a trophy. Instead what we came up with is the three instigators will stand at the temple entrance and hand out a brief document on why running isn't always a good thing. If asked why they are there they are to tell the story of what happened. Once this is done each of the three are going to go to the shopping area where this happened and apologize to all the vendors and shop owners they caused problems with. They will have a list of owners and they will have to get a signature from each and everyone. My warriors and a few others will be watching at various times. If you are caught slacking or not taking this seriously you will be turned over to the protectorate for prosecution.\"\n\nHe nodded to Vangie who stepped forward and gave the three an emotionless stare. \"I personally talked to a number of the shop owners about this issue and I have a number of complaints. They are willing to forgo criminal charges if the apologies are made and this doesn't happen again.\" He called out the names of the students who came forward. Their ears were back and tails dragging. There was some snickering in the class though they were trying to keep it quiet.\n\n\"I have the documents you will use as well as very detailed instructions. Follow them to the letter or I might just allow Kingie to challenge you so he can impress his family. I will check your work at the end of each day. Sign and go back to your seat.\" He stepped back.\n\nBilly looked at the instructor. \"Thank you for your time and I will leave you to your lessons.\" He nodded slightly and stalked out of the room.\" Once outside a very evil smirk crossed his face. \n\nKingie looked at his expression and shuddered. \"Remind me not to get on your bad side. You have a very cruel and sadistic streak.\" He scratched at one ear. \"I loved it though.\"\n\n~~~\n\nRight about the time he was done snickering at the memory he heard a knock and then the door opened. The nurse had to blink since last night there had been only one Sholan and now there were two. \"Interesting, well it is time for them to wake up and for you to go to surgery. Everything is ready and before I take you I will administer the pre-med.\"\n\nBilly sat up and yawned and lightly stretched his good arm before gently nudged both women. Z'Marl woke first and gave him a good hug and kiss before heading to the bathroom. Satasha had been harder to wake recently as well as an occasional bit of nausea and it had him somewhat concerned. He had finally nagged her enough to make an appointment. She had and it was for this morning while he was in surgery. \"Come on sleepy head or I might have to lick an ear.\"\n\n\"No wanna wake up.\" She sighed and stretched till her stomach indicated she needed to stop. \"Okay I am up though not happy about it.\" She stood and headed towards the bathroom as well. \"I am going to take a shower and I will be out shortly.\" Tasha stopped and walked back to him and gave him a good hug and kiss. \"Just in case you are gone when I get done.\" *Love you my silly human.*\n\nBilly sat up and returned the hug and after the kiss licked her nose. *Love you too my sexy female alien.* He let her go and watched her go into the bathroom. \"Well let's get this show on the road.\" He stood as she lowered the floater so he could settle in it. Once he did she made sure he was secure and then injected the pre-med. \"Relax and when you wake you will be back here.\"\n\nShe turned and pulled the floater out the door.\n\n~~~\n\nAs she figured Billy was gone from the room. She had needed the shower after last evening. A sensuous smile crossed her face. Every time they made love on their link days it was like the first time all over again. She also loved the feeling of it being US instead of Tasha and Billy. She had definitely fallen into a deep love with him.\n\nAs she was thinking she pulled on a tabard and then brushed her hair and made sure she was looking good. Billy might not mind looking like a, what did he call it, oh yes, a hick but she saved that for her loafing around days. Once she was sure she had everything she stepped out of the room and went down to the waiting area. Everyone was there and she walked over and leaned over and gave Crystal a hug. \"Oh my someone is looking pleased with herself. I think I won't ask and just wonder.\"",
        "Kingie gave both women a disgruntled snort. When he had woken this morning Crystal and presumably Amahs had very carefully braided is hair and tied it off with cute little pink bows. When he had walked into the bathroom and glanced in the mirror he was aghast at what he had seen. Even worse was when he finally noticed the bell on his tail. \"Evil woman!\" He was studiously ignoring them.\n\nVangie was snickering at his expression and annoyance. Below that he could feel a sense of accomplishment as well. Whatever Crystal had done was something that she wouldn't have a few short weeks ago. \"We can go and get an ale later and commiserate. My former bondmate wants to redecorate the living areas. She told me that we have had it long enough that it is starting to drive her nuts and she wants to modernize it.\" He wasn't going to mention the colors she wanted to use and the options she had shown him. She was aiming for a girly looking interior.\n\nSally simply snickered at him as she sat in his lap before starting to nibble on his ear. \"Is the purr widdle boy kitty being pussy whipped?\" She pretended to sympathize with his problem.\n\nAs soon as she said 'pussy whipped' Dani had to groan. \"You just had to go there didn't you? What are you going to come up with next?\" She rested her elbows on her knees and covered her face with her hands as she leaned against them. \"I might tell daddy that and see what he has to say.\"\n\nEveryone was staring at the two girls with a completely perplexed stare. \"Um, what did she say that is so bad?\" Tasha asked the room. When Sally simply smirked Tasha glowered at her.\n\nJenna and Sandi were flopping around on the couch they were on like fish out of water. They both were trying not to howl with laughter. They were going to be of no use since Dani knew they wouldn't say just to put her on the spot. \"Evil human females. I will let Tasha ask daddy and she can tell you if she wants.\" She crossed her arms and looked completely miffed.\n\nTasha snickered simply due to the put upon look. She gave Dani a hug and peck and then gave the others. \"Once I am done with the appointment I will be back.\" She left the room with her tail swaying lightly. She knew that if anything happened they could easily get a hold of her but she would have preferred to remain.\n\nWhen she reached the clinical side of the building she walked up to the desk. The woman behind the desk gave her a nice smile. \"Good morning Lt. Cmdr. Verzilon. I have you checked in and the doctor will be with you in a minute.\"\n\nSatasha thanked her and after getting a cup of cshar she settled down and contemplated the last couple of weeks. So much had happened and so much had changed as well. Heck she could look back maybe six or so months and her entire world had been tossed into a blender. She was still contemplating the changes when a nurse came for her. When her name was called she stood and walked to the door.\n\nThe nurse greeted her and handed her one of the notorious cups and was asked to provide a sample. Satasha thought it was rather silly since she hadn't been with a Sholan male since before her cruise had started. It was part of the routine since there were a few other things they checked for so she went with it. Once she was done she walked out of the bathroom and handed the sample over.\n\n\"Okay, follow me this way please.\" She headed to a nearby exam room and once inside strapped the diagnostic unit on Satasha. Once she was done with the vitals she asked a number of questions and made notes on the tablet she was using. Once she was done she looked up and smiled. \"The doctor will be in once the lab results are back. That shouldn't take more than fifteen or twenty minutes.\" \n\nSatasha grumbled after the female had left her in the room. Since she had nothing better to do she picked up a magazine viewer and settled down to read something that was as old as her mother. That was another thing they had scheduled for after Billy was released. She leaned back in the chair and closed her eyes since she was still tired from last night.\n\nWhen the doctor knocked and walked in she twitched from her nap and was confused for a moment and then realized where she was. \"Sorry doctor, our link day finished around midnight.\" She gave him a wry grin as she said that. She covered a yawn. \"So do you want to do the exam or tell me what the results are?\"\n\nHe had to smile at her comment. \"So I noticed and hope it was a good link day. Well I think I have a good idea of what is going on and it isn't anything dangerous or contagious.\" He had glanced down at the tablet and then back at her. This was going to be rather interesting. \"After reviewing all the lab tests it appears you are pregnant Lt. Commander.\"\n\nSatasha was prepared to be told she had a stomach virus or something like that. What he had to say totally and completely blindsided her. Her ears folded down and back and her tail froze. The only thing she could say at the moment was, \"huh? How did that happen?\" She had only been with Billy since he found her.\n\nThe doctor raised an eyebrow at her shocked expression. \"The usual way I assume. I know you are linked with Commander Yilly but have there been anyone else you have been with?\" That would explain the pregnancy since As far as I know humans and Sholans are not fertile together.\" He kept his eyes on her to see what her reaction to that question.\n\nSatasha frowned at him for the reply and then snickered for a moment. She contemplated the following question and shook her head. \"I haven't been with a Sholan male for almost a year. The last one I was with was before my aborted scouting mission.\" She looked him dead in the eyes. \"I swear this on Vartra's name. Yilly is the only male I have been with since I crashed on his farm.\"\n\nThe doctor had mentally touched the surface of her mind and what she said was truthful to the best of her knowledge. He leaned back some in the chair he was in and scratched one eyebrow as he was thinking. \"Thank you for being honest with me. I know that was a personal question but it needed to be asked. I am going to schedule you for a number of tests in the next week or two. They will be sent to the neural implant.\" He pulled a bottle out of a pocket and handed them to her. \"Here are some prenatal vitamins and the dosage to take on the label. You are free to leave Lt. Commander.\"\n\nThe doctor stood and opened the door and left it open as he left the room. He needed to make some calls and report this. They needed to know why and how as soon as possible. Once he reached his office he set up a number of tests for her. There was an ultra sound, full body scan, brain scan, and a number of others. Once that was done he called and left a message with the surgeon in charge of Billy's care.\n\n~~~\n\nSatasha could only sit there in shock for several minutes before she stood and after pocketing the bottle left the room. She didn't really remember the walk back to the waiting area. Once she plopped down on a couch she sort of came to since the others were asking questions. She was most definitely having trouble focusing.\n\nZ'Marl was shocked when Satasha walked in the room. She looked almost out of it, a good way to describe it was as if she was shell shocked. As soon as Tasha had sat down Z'Marl moved over to the couch and settled down next to her. Before she did anything else she shushed everyone since they were all asking questions. Once the room had quieted down she wrapped her arm around Satasha. \"Hey love what is wrong? You have all of us worried now. Will you please share the results? If needed we can go to Yilly's room and use it so you can tell me in private.\"\n\nWhen Satasha turned and looked at Z'Marl her eyes had a really shocked and confused look in them. \"I ah... I ah... Um, it appears that I am pregnant.\" When she said that the room was filled with shock and silence. \"It appears to be Yilly's since I haven't been with a Sholan since I met him.\"\n\nAll of the ones who had been sick traded looks since they had a feeling it was related to the Ni-uzu virus. The same question was going through their minds as well. Could I get/make her pregnant? That was followed by-Can I still have children with my own species? The room was in total silence for several minutes as they digested that.\n\nZ'Marl was still holding Satasha close even though she was shocked as well. She knew her friend needed the hug and to lean on her for a time. \"Oh my, not really sure what to say about that. Did you get any information on how it might have happened?\" She didn't expect her to have gotten any since it had been discovered this morning.\n\nSatasha shook her head and ended up curling up with her head on Z'Marl's lap and eventually fell asleep. The others briefly discussed what she had said and the room settled into silence.\n\n~~~\n\nWhen Billy woke up he was back in his room and his surgeon was waiting for him to awake. \"Good afternoon Commander. How are you feeling?\" He had just been notified of Satasha's status and was definitely more than shocked though he hoped he was managing to hide it from Billy.\n\nBilly looked at the ceiling and did little things like wiggled his toes, fingers, and muscles. \"Not bad though my shoulder aches more than it had been. I rather expected that so I am feeling decent for the most part. So what all did you do?\"\n\nThe doctor glanced at his tablet and then back to Billy. \"Well as far as the actual surgery it went relatively smoothly with very little problem. We did end up using some of the various tendons, ligaments, and muscle tissue we had grown. All that work went well and the grafts look to be starting to take. As far as the skeletal structure as you know the worst was your shoulder blade. We did some minor reconstruction of the clavicle and used some of the bone we had grown as well. For the most part it the surgery went smoothly.\" He did one last check of his tablet. \"Do you have any more questions?\"\n\nBilly listened carefully and nodded at all the right points. Once the doctor was done he couldn't think of any other questions on the surgery. \"So now that you have finished the majority of the repairs what is next?\"\n\nThe doctor had to grin at Billy. \"You are not going to get out of my clutches that easily.\" Just for good measure he waggled his eyes at Billy. \"Actually if you are showing as not having any problems with the reconstruction then you will probably be released tomorrow. Just remember no punishing students with your bad shoulder...\" When Billy frowned at him in thought the doctor laughed. \"As far as any further possible surgeries I will evaluate you the day after your second link day from now. If I do need to do anything further surgically it will mostly be minor things such as adjusting a muscle and such. If you are showing as progressing without the need I will forward you to the physical Torture department. Oh, I do want to see you before the next link day. I might be able to remove some of the dressings.\"\n\nBilly was still thinking. \"Well I guess that leaves the rest of my body I can use to discipline recalcitrant children.\" He gave the doctor a brilliant grin.\n\nThe doctor rolled his eyes and muttered something. \"I will have Satasha sent in first. She was asleep when I came to talk to you.\"\n\nBilly snickered at the doctors mumbling. \"I could tell that when I came in. Thanks for all of the hard work doc.\" He raised the head of the bed and honestly was feeling much better than he had for quite some time. It was the light at the end of the tunnel aspect he figured. It would take a while but he could almost see the end.\n\n~~~\n\nSatasha hadn't been asleep when the doctor checked on them but she was meditating on what she had been shown. To most anyone they would think she was sleeping. When he came back and she went to go in, well that scared her. Billy knew she hadn't been with anyone since every five days their memories merged and transferred. She was worried about that aspect but how would he react knowing that it appeared he was going to be a father of some sort of half breed child? Even scarier was how the baby would look. Was it going to look Sholan? Human? Some horrifying mixed breed?\n\nShe felt someone move over to her and squatted down and started running her fingers through her cheek fur. Satasha knew it was Dani from the scent at first and then the mental impression. She turned her head slightly since it felt good.\n\n\"Satasha I know you are not asleep and I wanted to talk to you for a few minutes.\" She kept stroking till Satasha sighed and sat up. Dani gave her face a good look and frankly she looked terrified. Dani stood slightly as Crystal slid a foot stool over and then sat down. \"I don't know exactly what you are thinking but I do know my Daddy. He might be startled at first but it won't change how he feels about you. He will be by your side the entire time however it turns out.\"\n\nSatasha leaned into the touch and had to close her eyes before she cried. In Dani's eyes she could see some sympathy over the shock of what she had been told. She could feel her concern and caring as well as from the rest of the room. \"I\", she hesitated for a moment, \"I am not scared of any change in Yilly's feelings towards me. I know what I feel from him and I know he loves me. I am scared about what the baby will look like. What if it won't survive birth or...\" She leaned forward and wrapped her arms around Dani and settled her head on her shoulder.\n\nNext to her Z'Marl was giving Dani a pleased smile for what she had done. It really had needed to come from one of his girls. She was stroking Satasha's back as she was listening. She watched Crystal shiver a bit and then straightened up and walked over and settled down next to Satasha.\n\nSatasha glanced at her and wondered why she came over and sat down. It only took a few moments before she knew. Crystal pulled one of Satasha's arms around her and leaned against her and Satasha could feel some fear but also a determination to face the world. \n\n\"Satasha I can't really say much except that I can, in a way, understand your fear. For me it was fear of becoming pregnant by one of those pond scum. Till they gave me the all clear on that and a few other fears I had to latch on to someone that represented strength.\" She flashed a grin at Kingie. \"All I am trying to say in an awkward way is you have the most important thing needed now. You have a Leska who is your bondmate and left his home world to take you back. Lean into his strength and let him help and support you. You have done many things for me as well. All of us will be there and support you no matter what happens.\"\n\nSatasha listened and sniffled some before someone handed her a tissue. She turned to Crystal and gave her a good hug. \"Thank you Crystal for that. I am sure that was hard to say but it really helped. Again thank you.\" She stood up and adjusted her tabard before smoothing it out. Right about then the doctor showed up. \"I assume I can see Yilly?\" When he nodded she swept out of the room looking relatively composed.\n\nOutside the door to the room she paused for a moment and took a deep breath before walking in. Billy was sitting up and his legs were crossed and he was facing her. His expression was fairly calm and composed. Satasha walked in and stopped in front of him and squatted down and looked him in the eyes. \"I went to the doctor's appointment as you asked and I was duly informed it wasn't an illness.\" She paused and took a deep breath. \"What they told me was that I am pregnant and with your child.\"\n\nBilly's eyebrows shot up and his jaw dropped and his brain fizzled out for a few moments as he tried to process what she had said. Unfortunately every time it reset it came back to the 'She's Pregnant' before having to reset. Eventually he was able to speak. \"Pregnant? But how?\"\n\nThe End\n\n~~~\n\nThere for those of you who were wondering if she was going to get pregnant now you know. I also tossed in a few other possible plot twists. Hope you enjoyed it. Please ensure you vote and add a comment if you would like. Comments make an author's heart beat in happiness. (grin)"
    ],
    "authorname": "maxd01",
    "tags": [
        "alien felines",
        "relationships",
        "pregnancy",
        "punishment"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-02-ch-07"
}