{
    "title": "Cindy Called Back",
    "pages": [
        "If you haven't read \"They Said SURE!\" yet, you need to go back and read that one first. This one will make better sense. See, I put on a show for two of my fellow conference attenders one evening after our conference ended.\n\nI'm a teacher in Arkansas and at a professional development conference one summer I acted out a fantasy of mine with Jennifer and Cindy. Samantha went home that evening and missed the show, but she'll never know what she missed....unless she reads \"They Said SURE!\"\n\nIt all started at dinner after the first day of the conference. We had talked about work and family and such, but eventually the conversation somehow turned to our fantasies. Well, maybe I encouraged the conversation to go there...a little.\n\nWell, it ended up with me stripping and masturbating for Jennifer and Cindy in my room. It was the most intense thing that ever happened to me...until Cindy called back.\n\nSee, Jennifer asked if I could do it again and I told her not without motivation. She asked what that would be and I answered if they would masturbate for me. Jennifer put a kibosh on that in a hurry. She was 46 and...kind of wide, with extra padding and figured I wouldn't want to see her naked. Now Cindy, a brand new teacher, was 24, blond, cute as a button, and body that I wouldn't mind looking at.\n\nBut the party was over. I walked them to the door kissed them each, each one grabbed part of me, and I grabbed Cindy's ass...such a nice ass.\n\nAs they walked down the hall I heard them giggle. \"\"Can you believe that?\" Cindy asked Jennifer.\n\nWell, I couldn't believe that either. I had lived out one of my fantasies. I had a CFNM experience and it was HOT!\n\nI laid back down on the bed and relived the evening. My cock started rising again and I began stroking.\n\nThen the phone rang.\n\nI answered. \"Joe?\" a sweet voice asked. \"This is Cindy.\"\n\nMy cock got harder. \"Hi Cindy. Did you forget something?\"\n\nUm....no. I was wondering,\" she questioned. \"Can you get it up again?\"\n\n\"It's already up,\" I laughed. \"But the show's over. You guys didn't want any more.\"\n\n\"I do.\"\n\nMy cock got even harder. \"I told you what I needed for a repeat performance.\"\n\nShe was quiet. \"OK,\" she whispered.\n\nThis time I was quiet. I wanted her to come over and watch me again, but I had told them both the conditions.\n\n\"I would like that,\" she whispered again.\n\nHuh? What did she just say? What did she mean?\n\n\"You would like what?\"\n\n\"I'd like to masturbate with you.\"\n\nI thought for a minute. Another of my fantasies. To masturbate live with a woman. \"Do you mean naked?\"\n\n\"Of course,\" she laughed. \"That's the only way to masturbate.\"\n\n\"You'll get naked with an old guy like me?\"\n\n\"You're not so old. And I loved watching you cum...and I want to see that again.\" She skipped a beat. \"And I'd like for you to watch ME cum.\"\n\nI think I've died and gone to heaven! \"Well come on over! I'm already naked so I shouldn't come to YOUR room,\" I laughed.\n\n\"I'll be right there,\" and she hung up.\n\nI was SO excited! Cindy, naked, masturbating, with me. My heart was beating fast again. My cock was fully hard again.\n\nIn about two minutes there was a knock on my door. I went to the door and looked through the peephole. I didn't want to open the door for just anyone, I laughed to myself.\n\nThere was the pretty Cindy, smiling.\n\nI opened the door, stark naked, smiling, hard!\n\n\"I see you're glad to see me,\" she laughed.\n\n\"I am that!\"\n\nShe came to my arms and kissed me, grabbed my cock and led me into the room.\n\nWe got to the bed. \"Sit,\" she ordered. I obeyed.\n\nShe moved to the radio and turned it on and searched for a good music station. She found a light jazz station and returned to standing in front of me.\n\n\"I need music to strip by,\" she laughed. And she started to sway to the music.\n\nShe was wearing a jacket over a white silk blouse. She had changed out of her jeans to a nice pleated skirt. Not too short, not too long. Nice legs!\n\nShe was a good dancer, she knew how to move her body. She teased me for a while, moving, swaying, turning. I wasn't complaining. It's not every day that an old guy like me can blatantly watch a pretty young lady. \n\nShe began to unbutton her jacket. She opened it up and turned her back to me. She looked over her shoulder and winked at me.\n\n\"I see you like what you see,\" she said, looking at my cock.\n\n\"Very much so,\" I replied. \"A guy like me doesn't get to watch a young woman take off her clothes,\" I laughed.\n\n\"You like watching me take off my clothes?\" she asked.\n\n\"Well, so far nothing has come off,\" I smiled.\n\nShe quickly lost her jacket and threw it to me. She wasn't going to be as neat as I was, I thought to myself. Not that I'm complaining. \n\nShe turned to me and I saw for the first time that she had small boobs. Not that I'm complaining. They looked the right size for such a tiny girl.\n\nShe continued to dance. She walked closer to me and began to unbutton her blouse. She looked me right in the eyes and stepped between my legs, separating them and rubbing her thigh on my cock.\n\nShe separated her blouse, revealing a white lace bra, closed it back and stepped back, once again turning her back to be, opening her blouse again and slipping it off her shoulders. Not a blemish on her back. Beautiful!\n\nShe threw the blouse at me as she turned back to me. I caught it and laid it next to me on the bed. I could see the nubs of her nipples poking through her bra. \"If I had known I would be doing this for you I would have brought a sexier bra,\" she said, modifying my line from earlier in the evening.\n\n\"It's perfect,\" I said.\n\nShe danced to me, between my legs, leaned over, giving me a good look at the top of her boobs. I leaned forward to kiss them, but she backed away. \"No touching. That's the rules you made.\"\n\n\"But you both touched me!\" I complained.\n\n\"We'll see. We'll see.\"\n\nOh, I wanted to get my hands on that body! She waltzed away from me and unbuttoned her skirt and let it fall to the floor. She turned back toward me and kicked it to me.\n\nShe kicked off her shoes and continued to dance in just her bra and panties. Sexy panties, but not a thong. What an ass, though, even with her bikini panties still on. I knew it wouldn't be long before she was naked for me, as naked at I was. I was lightly stroking my cock, watching her.\n\nShe walked sexily toward me, then backed between my legs again and lowered her ass and ground my cock.\n\n\"I thought there was no touching,\" I retorted.\n\n\"I can touch you,\" she returned. \"I'm making the rules,\" she laughed.\n\nShe continued to grind my cock. I wanted to feel her skin on my cock.\n\n\"Unhook my bra,\" she ordered.\n\nI was able to quickly unhook her bra. Whew! She danced away from me, holding her bra to her breasts, slipping her arms through the straps. She strolled around the room, holding her bra in place, then went and stood in front of the curtains and dramatically removed her bra and threw that at me.\n\nHer bra hit me in the face. She laughed as I pulled it off, taking in her beautiful breasts. She had small nipples, but they were extended almost a half an inch. I think she was excited.\n\nShe danced between my legs again, bringing her boobs close to my mouth, teasing me. I played the gentleman and followed her earlier instructions. But I REALLY wanted to lick them. \n\nShe grabbed my hand and put it on her mound. \"I'm SO wet.\" And she was! Soaking.\n\nShe stepped back and turned her back to me again. \"Would you like to take my panties off,\" she asked.\n\n\"I'd be delighted,\" I replied.\n\nMy hands went to the waistband of her panties. \"Slowly,\" she instructed.\n\nI complied and slowly lowered her panties, revealing an inch at a time of her amazing ass. When it was halfway down, she turned around. \"The front.\"\n\nI lower the front. No pubic hair yet. \"Clean shaven?\" I asked.\n\nShe nodded. \"Stan loves that.\"\n\nAs her slit became visible, I said \"I like it too.\"\n\nI continued to slowly lower her panties, revealing a true camel toe. Awesome!\n\nShe quickly lower her panties the rest of the way, stepped out of them and draping them over my head. I took them off as she pushed me back on the bed. She stepped onto the bed, straddling my body and slowly walked over my body, giving me a great look right up her cunt. This girl knew how to show off her body.\n\nShe kicked the pillows into position again, one at the headboard, moving the one for her ass closer to the head. She's much shorter than me. I admired the most beautiful ass I've ever seen.\n\nThen she picked up the third pillow and threw it at me. \"That's for you. You lay with your head at the foot of the bed,\" she ordered.\n\nI did as I was told as she stretched out at the head of the bed, leaning on the headboard. I fluffed the pillow up and doubled it and put it under my shoulders, so I could watch her properly. As I stretched out I realized that I needed to put my legs on either side of her body.\n\nShe spread her legs, extending her knees over my calves. \"Spread your legs too,\" she ordered. \"Now place your feet so that our soles touch.\"\n\n\"I thought we couldn't touch,\" I retorted.\n\n\"Just do what I say!\" she smiled. I did.\n\n\"There, that should make for good viewing angles,\" she whispered.\n\nThen she ran her fingers down her slit. \"Come on, masturbate for me,\" she ordered.\n\nI started to stroke my cock as she slid her fingers up and down her pussy. She opened up her pussy and I almost came when I saw her pink slit and how wet she already was.\n\n\"You surprise me,\" I commented.\n\n\"How so?\"\n\n\"I didn't picture you as bold as you are.\"\n\n\"And what you did wasn't as bold?\" she asked.\n\n\"I guess it was,\" I laughed.\n\n\"Yes, it was. I was shocked when you proposed what you did. I thought, Joe? Nice, clean-cut Joe? He's gonna masturbate for us? Now THAT was a shock!\"\n\nIt was so cool masturbating with a woman and just talking to each other as we did it. I had done that on cam a few times. It was something, talking about kids and even grandkids as we masturbate on cam together. But this was WAY hotter. Cindy had a great body, and she was right here, our feet touching, our eyes locked on each other's genitals. Wow!\n\nCindy slid two fingers inside her cunt, raising her ass a little, pushing against my feet. Her other hand was playing with her nipples. She was SO beautiful, stark naked, really aroused, starting to breathe heavily, concentrating on my cock, concentrating on her own feelings. \n\nI could feel my own excitement building, but as I saw her close her eyes and lean back her head. I just watched as her orgasm came closer and closer.\n\n\"Oh....oh, oh,\" she panted. Her pussy was squishing, her asshole winking at me while she got closer and closer. \"I wanna cum! I wanna cum!\"\n\nHer ass was rocking. She started rubbing her clit with her thumb. It didn't take much longer as her whole body tightened up and she raised up. \"I'm cumming! I'm cumming! Watch me cum Joe!\"\n\nI did. The most exciting thing I've ever seen. Cute little Cindy, arching, spasming, panting as her orgasm washed over her. It seemed to go on for a long time as she continued to frig her cunt and clit. I watched her ass clench, her asshole spasming. Her face contorting in pleasure.\n\nAs she was coming down I started stroking my cock in earnest. I got up on my knees. She felt that and opened her eyes. \"My turn, babe,\" I told her.\n\n\"Come closer. Cum on me,\" she ordered. I slid up between her legs and stroked harder. She licked her lips, as she watched me. \"Cum for me baby.\"\n\nMy orgasms tend to start in my ass and sweep up my back. I felt it coming. I raised up some more, aiming my cock at Cindy, at her pussy, at her belly. I knew this was also going to be a hard orgasm.\n\nI was panting, stroking, looking at Cindy's awesome body, her legs spread, toying with her nipples, watching my cock...and my face.\n\n\"Here it comes,\" I groaned.\n\n\"Shoot that thing at me Joe. Soak me with your cum.\"\n\nI did. My cock started shooting streams of cum all over her. The first shot was the longest, hitting her in the cheek, and the rest slowly moved down her body. The last little bit dribbled on her pussy. She started rubbing my cum all over her smooth skin.\n\nI collapsed backwards on the bed. She was still recovering from her orgasm. \"I came again watching you cum,\" she said. \"Just a little one, but it was great. YOU were great!\"\n\n\"No, you were great,\" I said as I stretched out my legs over her legs. \"You are so beautiful, and watching your tiny body cum was the most amazing thing I've ever witnessed.\"\n\nShe gave a shy smile. \"Thank you.\"\n\nWe both relaxed a bit, both close to dozing off.\n\n\"Joe?\" she asked eventually.\n\n\"Yes\"\n\n\"Would you do something for me?\"\n\n\"Anything,\" I answered.\n\n\"I sucked on your cock earlier.\"\n\n\"Yes, you did. And it was nice.\"\n\nShe hesitated for a minute. \"Would you....could you....lick my pussy?\"\n\nOh, did I want to lick her pussy!\n\n\"Just for a little bit,\" she offered.\n\n\"I guess that would mean I would have to touch you,\" I laughed.\n\n\"I told you I'M making the rules,\" she laughed back.\n\n\"Well, if you insist.\"\n\n\"I insist,\" she smiled at me.\n\nI got to my knees, turned around and slide between her legs. I lowered myself and stretched out before her pussy. She spread her legs further. \"Put your hands under my ass.\"\n\nMy privilege, I thought. Who would argue about holding Cindy's ass?\n\nI slipped my hands under her ass and lifted her pussy up closer to my mouth. I breathed in her essence. What a sweet smelling pussy.\n\nShe slid her legs over my shoulders. I leaned down and kissed her pussy lips. First the right side, then the left. Then I licked each pussy lip. I spread her lips with my fingers and licked up her slit. She moaned. \n\nI stuck my tongue inside her cunt and slowly tongue fucked her. She sighed.\n\nI let my nose put pressure on her clit. She pushed her pelvis toward me.\n\n\"Oh, my! You keep doing that and I'm gonna cum again,\" she sighed.\n\nI lifted my mouth from her pussy. \"Do you want to cum again?\"\n\n\"Oh yes! Don't you DARE stop. I wanna cum all over your face!\"\n\n\"OK, let's switch up a bit. I want you to sit on my face.\"\n\n\"Oooo...I like that.\"\n\nWe switched places. I lay down on the bed in her place and she slowly straddled me, face first, over my chest first, then slid up.\n\nI reached up and grabbed her ass and pulled her over my mouth. The view was awesome, looking up her body, see her small tits with her very hard nipples. She was rubbing her boobs as she looked down at me. \n\nI began licking up and down her slit. She arched her back and closed her eyes. \"That feels SO good. You really know how to lick a pussy.\"\n\n\"It's a beautiful and sweet pussy.\" She flushed a little. \"Are you embarrassed?\" I asked?\n\n\"Yeah, I know. Why would I be embarrassed, riding your face, stark naked, your hands on my ass, your tongue in my slit? You've already seen everything,\" she laughed.\n\nThen I moved up her slit and tongued her clit. \"Oh!\" she moaned. She pushed her pussy harder onto my face. Her head was thrown back as she rode my tongue. I speeded up my tongue action, pulling her ass tighter to my mouth, squeezing that exquisite ass, rubbing it as she rotated it on my face.\n\nHer breathing was really heavy, her head was thrown back, her chest was flushed, her hands working really hard on her nipples. She kept fucking my mouth, moaning, panting. Then a low growl started from deep within her body. It built into a high-pitched scream and her body started to spasm again. Her legs tightened around my head, she pushed her pussy into my face. I couldn't breathe, but I didn't stop.\n\nShe finally pushed my head away and fell back on my chest. I took a big breath and lifted up slightly so I could watch her.\n\nHer hands were gripping her tits, not moving. Her chest was heaving, her pussy opening and closing, her asshole clenching, her ass was shaking. It was an awesome sight.\n\nShe laid there for a bit, catching her breath. \"Mmmmm. That was awesome,\" she whispered.\n\n\"Yes it was,\" I answered.\n\nSuddenly she flipped over and grabbed my cock. It was once again hard. I couldn't believe I could still get hard after cumming twice tonight. But the motivation was staring at me. \n\nShe took my cock in her mouth and started some serious cock-sucking. Her ass and pussy were staring me in the face and I couldn't help it. I sat up as best as I could, slid back with my back against the headboard and pulled her small body to me. The angle was perfect. She could still suck my cock and I could lick her pussy. \n\nWe both started some serious licking and sucking. It felt like we were trying to get each other to lose our place. And at times we were successful. She would lay her head on my belly as she enjoyed my nibbling on her clit. Then she would take my cock back into her sweet mouth and make me lose my place for a bit.\n\nBut she came first. With a groan, she let my cock slip from her mouth. She pumped her pussy on my mouth and I felt a stream of cream come out of her pussy. She soaked my face as she moaned like never before. \n\nThen she lifted her pussy off my mouth. \"ENOUGH!\"\n\nShe took my cock back into her mouth and sucked me like I've never been sucked before. It didn't take long for me to unload into her mouth. \n\nFor a little girl, she was able to take all I had to give. But I'm sure that this being my third orgasm of the night I didn't have much cum left.\n\nWe rested on each other's bodies for a bit and then she got off me and slipped next to me on the bed. I slipped my arm around her shoulders and let my hand rest on her left tit. And we fell asleep.\n\nIt was about 5:30 when I woke to a hand on my cock, stroking it. I couldn't believe that it was getting hard again.\n\n\"Again?\" I asked.\n\n\"I would love to but my pussy is sore\", she laughed. \"I need to get back to my room before anyone's up and sees me walking out of your room looking like I've spent the night fucking you.\"\n\nI laughed. \"Well, we didn't fuck but that was the most awesome night I ever spent.\"\n\n\"Thank you. I thought it was pretty awesome myself.\"\n\nShe got up and I watched her naked ass as she rushed to the bathroom. I heard the toilet flush in a minute and she came out looking beautiful. Stark naked, her hair a mess, her pussy lips red, but beautiful.\n\nShe quickly put on her skirt and blouse. No underwear. \"What happened in this room stays in this room?\"\n\n\"It better,\" I laughed.\n\nI walked her to the door, took her in my arms and kissed her. She knelt and kissed my cock.\n\n\"Tonight?\" I asked.\n\n\"Maybe.\" She pinched my ass and left the room. "
    ],
    "authorname": "secret_admirer72116",
    "tags": [
        "strip",
        "mutual masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/cindy-called-back"
}