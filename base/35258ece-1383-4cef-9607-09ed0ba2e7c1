{
    "title": "Temporary Roommates",
    "pages": [
        "Fire sucks. I just wanted to say that from the start and get it out of the way. There's no way to describe coming home from a long day at work to see fire jetting out of your apartment windows. To make a long story short ..... electrical fire. I guess you could say I was lucky though. Not everything burned, and I was able to save about half of my clothes and a few other odds and ends. And trying to look on the bright side of things ...... I guess that's what renters insurance is for, right?\n\nMy immediate concern of course was to find a place to crash. After a few nights in a motel, I realized something ...... I'm not a wealthy man. No kitchen to cook in equals eating out three meals a day. Add that to rent and the cost of coin laundry .... Well, needless to say, something had to give. I'd be getting a nice fat check from the insurance company, but you know how those things are. Takes time.\n\nI guess things were starting to get to me a little bit the next day at work, and I might have been whining a little bit. I'm not usually one for self pity but I guess it's only natural when things have been going the way they had for me.\n\nI had taken a smoke break and was outside puffing one down when the door opened up behind me. Turning around I saw that it was Sonya, our receptionist. I couldn't help but smile when I saw her. She just has that effect on people. It also doesn't hurt that her and I have been friends since about the 10th grade. And if you want honesty, the fact that she's drop dead gorgeous also works in her favor. She has this long, thick, almost jet black hair, and the prettiest pair of piercing green eyes I've ever seen. Add to that the fact that she has a slim waist, a set of legs that go on for miles, and an ass that could stop traffic. And her tits! Oh my god they looked incredible today. Well, every day actually but the tight turtleneck sweater she was wearing today made them look even more fantastic than usual. It was impossible not to notice how gorgeous she was, but like I said, we had been friends for years, and nothing more. Still, when she walked out and grinned at me, it brought a much needed smile to my face.\n\n\"Hey stud,\" she said. \"How about letting a girl bum a smoke?\"\n\n\"You got it hot stuff.\" I replied.\n\nThis kind of casual flirting had been going on for years between us. Nothing to it really. It was just our way. We chatted while we were smoking and I happened to mention that I was getting strapped for cash and about to be sleeping in my car. \n\n\"Well, that's not good,\" she said. \"When is the insurance company going to come through with your check?\"\n\n\"I don't know,\" I replied. \"They're sure taking their own sweet time.\"\n\n\"Well why don't you bunk in at my place while you wait?\"\n\n\"That's a sweet offer honey, but I couldn't intrude. Besides, I think your boyfriend may have something to say about that. Didn't you two move in together a couple months ago?\"\n\n\"Yeah we did,\" she said, \"but he won't mind. He knows we've been friends for a while now, and he likes you anyway. Besides,\" she said, \"he knows I'd never cheat on him.\"\n\nWell, I still don't know. I hate to intrude. Maybe we should just forget the ... \"And that's as far as I got before she cut in again, insisting that I come to stay. After a couple more minutes of my half hearted objections, I finally realized she wasn't going to take no for an answer, and I agreed to come. \n\nAfter I got off work, I went to the motel I'd been staying at and gathered up the little bit of stuff I still had. Stopping in the front office to turn in the key and settle the bill, I headed out. Figuring that I needed to do something to show my gratitude, I stopped off at the store and picked up some steaks and a rather decent bottle of wine. I figured that if they were nice enough to let me couch surf for a few days the least I could do was fix them a nice dinner tonight, and see how I could make myself useful.\n\nI headed over to Sonya's place and parked by the curb. Gathering up my bags and the bottle of wine I went up and knocked on the door. Sonya answered and ushered me inside relieving me of a few of the bags and hustling them into the kitchen.\n\n\"So where's Colin?\" I asked. \"He working late or something?\"\n\n\"No\" she told me, \"He had to head out of town for a couple of days for work. Last minute emergency down south somewhere.\"\n\nI knew that he worked for one of the major car companies as a claims adjustor or something so sudden trips weren't uncommon for him. Still, I didn't think too much of it. Sonya and I got started on dinner, and that bottle of wine, and within minutes we were having a great time. Between having a few drinks, cooking and kidding around in the kitchen, dinner was ready before we knew it. We sat down to eat and continued with our joking and conversation while we caught up on things. Like I mentioned we had been friends for years but with us both busy with our own lives we didn't get much chance to hang out. After dinner was done and we had cleaned things up we headed into the den to watch a little T.V. Almost as an afterthought I brought the bottle of wine in with us. We kept up the chit-chat as we had another couple of glasses each. \n\nLooking up at the clock on the wall I realized that it was getting pretty late and asked if I could use the shower.\n\n\"Sure,\" she said. \"Follow me and I'll get you settled in.\"\n\nWe made our way up the stairs, and I couldn't help but watch her great ass as she climbed them ahead of me. Despite myself, I felt my cock twitch in my jeans. Only natural though I guess. Opening a door at the top of the stairs that I was expecting to be the bathroom, she led me into a spare bedroom. This was a nice surprise as I had been expecting to sleep on the couch. I mentioned this to her.\n\n\"No silly. I wouldn't put you on the couch like that. We keep this spare room set up as a guest room for when my mom visits. Unfortunately though it doesn't have its own bathroom so you'll have to use the one down the hall.\"\n\n\"No sweat,\" I replied. \"This is so much better than that cheap motel I was in. I wish there was some way I could thank you more.\"\n\nGiving me a sultry wink she said, \"Oh I'm sure we could think of something, if only I wasn't attached!\" We both laughed at this, knowing it was just more of the teasing that we always pulled on each other. Pleading the need for a shower as well, she left me and headed to her own room just down the hall, after showing me where the towels were. I gathered up some supplies and headed for the shower myself. Passing the door she had pointed out as her room I noticed that she had left it about half open but didn't see her. I did notice that I could see across her room and into the master bathroom. More specifically I noticed that I could see the mirror in the master bathroom which gave me a view of most of the rest of that room. \n\nI headed on to the next door and went in, locking it behind me. Stripping down, I started the water running and jumped in. The hot water felt great as I stood there letting it beat down over me. I could feel muscles relaxing that I didn't even know were tense. Not wanting to take up all the hot water though, I cut the shower shorter than I normally would have, and stepped out. I got myself dried off and shrugged into my old terry cloth robe and headed out to the guest room. Walking past her room I glanced into it again and once more I saw the bathroom door open. Catching sight of that mirror, I stopped dead in my tracks. Staring back at me were the most magnificent set of tits I've ever seen in my life. Sonya was just getting into the shower, apparently having given me time to finish mine so we'd both have water pressure. I truly didn't mean to stand and stare like some peeping tom, but I literally couldn't move. She was absolutely incredible. I couldn't imagine why she wasn't a model, since she certainly could have been. Feeling a bit of a draft, I managed to tear my eyes away and look down to see that my cock had gotten so hard that it had pushed between the opening of my robe and was standing tall and proud for the entire world to see. I think it was realizing that I was standing there with my dick sticking out watching an old friend of mine run her hands through her hair, which of course just showcased her chest even more, that brought me back to my senses. Pulling my eyes away from her mirror, I headed for my room.\n\nOnce inside though I still couldn't get the sight of those phenomenal breasts out of my mind. Having been a little busy lately being basically homeless, I hadn't gotten laid in several days and after the sight I had just seen I defiantly needed some release. Letting my robe fall open I laid back on the bed and took matters into my own hand. Visions of those perfect breasts flashed across my minds eye as I stroked my hard cock. I couldn't remember ever being this turned on before. I lay there and stroked my cock from base to tip and I knew I couldn't hold out for long. I was just too horny and too focused on what I had seen. \n\nFrom the base of my nuts I could feel the cum boiling and getting ready to blow. I stroked harder, flicking my thumb against the head of my dick on every upward stroke. I could feel it! My load was coming. I let out a guttural growl as I neared the point of orgasm ... hearing myself made me realize the animal lust I was feeling an this only spurred me on ever more. The sound I was making was guttural. It was intense! It was primal! It was .... Replaced by the sound of Sonya opening the door and walking in .....\n\n\"Are you settled in yet john ......\" That was as far as she got. Talk about a compromising position. Here I am lying on a bed with my cock sticking straight up in the air and my fist still wrapped around it, just seconds from cumming. \n\nSonya turned about eighteen shades of red. \"Oh my god! I'm so sorry John! I was just checking if you .... I mean, I wanted to see if you needed ..... ummmmmm .... Oh shit!\"\n\nWith that, she turned and fled. What didn't help matters any was the fact that when she turned, her rube billowed out around her and I got a look at that perfect ass, covered only by some plain white cotton panties.\n\nI lay there for a few seconds, still in shock. Realizing that I may have greatly offended her though, I jumped out of bed and ran out of the room. I looked into her room but she was nowhere to be seen. Likewise for her bathroom. After this I made my way downstairs and found her sitting at the dining room table.\n\n\"Sonya, I'm so sorry! I should have locked the door. I just wasn't thinking.\"\n\nShe looked up at me and there was a look in her eyes. She was also still blushing. \"No john its ok. I should have knocked instead of just barging in like that. It won't happen again.\"\n\n\"Still, I didn't mean to embarrass you. Look at you hot stuff, you're still blushing. I really didn't mean to embarrass you like that.\" I myself was pretty red at this point. Despite the awkward situation we were in I was still hard as a rock, and I just couldn't get what I had seen of her out of my mind. The breast had been enough to fuel my masturbatory fantasies for a long time to come, but I was a certified ass man and the glimpse I had caught of hers when she ran out of the room had really locked itself in my mind.\n\n\"Can I do something to make it up to you?\" I asked? I could see her struggling with something, but it was almost like she couldn't quite get the words out. \"Go ahead hon. Something you want to say?\"\n\n\"She looked at me and tried to stutter it out for a few seconds before she finally got the words out. \"Were you thinking of me?\" That kind of caught me off guard really, since it wasn't what I was expecting. I almost told her no, but I decided that I owed her the truth at the least. I told her all about how I had glanced into her room and saw her reflection in the mirror. I made sure to let her know that I wasn't some kind of perv that got off on peeping like that, but it was just happenstance that I saw her. She was quiet through all this. When I was done I told her that I was sorry and I'd go get my stuff together and hit the road.\n\nShe looked up at me quickly as I stood up and said \"No, John. You don't have to leave.\" \n\n\"I really should Sonya. I mean I know I've made you uncomfortable. You're still blushing for god's sake.\"\n\nLooking at me very intently, she then dropped a bombshell on me. \"Did you cum?\" She asked\n\nFor a few seconds I was stunned and didn't know what to say. I opened my mouth but no sound would come out. I guess she took my inability to answer as reluctance, because she repeated the question. \"Did you cum John? Did you get off thinking about me?\"\n\nStill, I didn't know what to say. Mutely I shook my head.\n\n\"You should finish John,\" she told me. \"You looked like you were so into what you were doing, that it's a shame to leave it undone.\" Again I was stuck not knowing what to say. And that's when something came to me. She wasn't blushing. She was flushed. She was turned on. I decided to throw caution to the wind and just come out with it.\n\n\"Let me know if i'm overstepping my bounds here hot stuff ..... but seeing that made you wet didn't it?\" She just looked at me and nodded silently. \n\nThis is when I made a decision that I still kick myself for. Looking at her, I said \"As much as I'd like to see where things could go with this, you know we can't. You have a man that you love. I can't come in between that. And I don't think you could live with yourself if you did either.\" She looked up at me, and then looked higher as I stood up. \n\n\"I know we can't. But that doesn't mean you can't finish. And that doesn't mean I can't watch if you'll let me.\"\n\nI debated with myself for .... Oh I'd say around 3 seconds before pulling the belt off my robe and letting it fall open. My rigid cock sprang out like it was shot from a cannon. I could see her eyes go wide as she stared at it. I finished taking my robe off and sat back down and placed my hand on my dick and started to stroke it so slowly that my hand was barely moving. Her breath started to come in shallow gasps as she watched this and I could see her start to squirm in her chair. Again the images of her naked breasts and that scantily clad ass flashed in my minds eye, and I could feel my balls starting to boil with the cum that would soon be blasting out. Thinking of what I had seen just made me want to see it all the more so I decided to try and push my luck a little.\n\n\"You know,\" I said, \"I could sure use some inspiration about now.\" With wide eyes she looked up away from my hard cock and asked what I wanted her to do. \"I want to see you cum too. Take off your robe and rub your cunt for me!\" She looked at me for a few seconds and I could see the hesitation in her eyes. \"I promise I'll keep my hands to myself. You won't cheat.\" That was enough to decide her. She stood up and her robe hit the ground. I had to stop stroking my cock right away because the sight of her standing there in a pair of simple white cotton panties and nothing else was almost enough to make me blow my load right then. She knew how hot she was too. She got a little half smile on her face as I drank in the sight of her naked breasts staring me in the face from only about two feet away. It was all I could do not to reach out and cup one in my hand but I knew that this was not that kind of encounter. I do have to say though ..... she had amazing breasts. Most guys aren't much of a judge of size and I'm no exception but I'd have to say they were a large C or a small D, if you can call any D small. And unlike most large tits, her areolas were small and so palely colored that they were almost invisible against the rest of her skin. She had those perfect nipples that aren't too large and not too small, but very pronounced. Like I said ..... gorgeous. I was so fixated on her tits that it came as a shock to me when she hooked her thumbs in the sides of her panties and bent over quickly pulling them to below her knees, where she let go and let gravity take over. When she stood back up I could see that she was shaven except for a thin strip of hair across her pussy mound, stopping just above her clit. She let me look for a few seconds then she really turned on the heat by sitting back down and spreading her legs so I could see into her very core.\n\n\"What are you waiting for stud,\" she said, as she played with her clit right in front of me. \"Start stroking that monster!\" I took my cock back in hand as I watched her play with her cunt, hoping I could hold out for at least a few minutes. I wasn't thinking my chances were too good on that one though considering how turned on I was. I was proven right a few seconds later when I could feel the pre cum leaking out of my cock onto my hand, giving me the lubrication I needed to really get things going. Seeing this must have driven Sonya even closer to the edge of her own orgasm because she let out a guttural growl and spread her already wet pussy lips with one hand while she started driving two fingers in and out at the same time with the other!\n\n\"Cum for me Sonya!\" I growled. Hearing this gave her just the push she needed, because almost as soon as the words left my mouth she let out a scream and I could see the juice squirt out of her pussy! I had often heard of this but this was the first time I'd actually seen a squirter. I had to immediately let go of my cock so I wouldn't come yet. I kept my eyes glued to her as her orgasm continued and I swear she came for days! Her juices were coating her entire pussy and the insides of her thighs. When the waves finally subsided she opened her eyes and looked at me through that fog that women get after a good orgasm, and got the sexiest little half smile on her lips.\n\n\"Your turn stud.\"\n\nOn an impulse born of sheer mischief, I reached to the floor and picked up her panties before I started stroking my cock again. Standing up in front of her, and I took myself back in hand and looked down at her and said \"Sorry if this is too far.\"\n\nWith that I started stroking my engorged dick like a man possessed, knowing that I want far off. I think she knew what I had planned because she pushed her tits together and up as if in invitation. This is all it took and I exploded! My first stream of hot cum splashed across her perfect tits and her neck, and the second hit her in the face right across her lips. She was surprised but in the instant before my next stream I could tell that she loved it. \n\nRaising my left hand, I shot the remainder of my load into the crotch of her panties. When I was finally done with the biggest most intense orgasm I've ever had, I looked down ant her and smiled.\n\n\"Stand up hot stuff,\" I said. She looked at me for a second and then complied and as soon as she was on her feet I handed her the soaked panties. She took them and looked at me for a few seconds like she didn't know what I wanted so I just smiled and told her to put them on. She looked at me with wide eyes for a second and then she smile and complied. The look on her face was priceless when she pulled them up and my still hot cum came in contact with her already soaked pussy.\n\n\"Thanks tiger,\" she said and turned and walked up the stairs.\n\n\"Hey Sonya,\" I called when she reached the top. She turned and looked back down at me.\n\n\"Same time tomorrow?\" I asked.\n\nShe winked and said, \"It's a date.\" "
    ],
    "authorname": "Fallen_76",
    "tags": [
        "mutual masturbation",
        "panties",
        "voyeur",
        "watching",
        "masturbating",
        "squirt"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/temporary-roommates"
}