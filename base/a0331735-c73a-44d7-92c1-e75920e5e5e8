{
    "title": "Master! Master! Pt. 03",
    "pages": [
        "Part 3:\n\n\"Momo! Momo!\"\n\nSonja and I were wandering around the property, calling out her name. It was getting dark and she still hadn't come, and every minute that passed was making me more worried. Had she gotten lost? Had she eaten something poisonous? Had she tripped and sprained her ankle? Had people found her and taken her?\n\n\"Master, over here!\"\n\nI followed Sonja's voice to the front of the house, where she was crouched down, her noise to the ground.\n\n\"What is it?\" I asked.\n\n\"Momo was here, I can smell her.\" She then began to crawl, keeping her head down and moving along the driveway. \"She went this way, towards the road.\"\n\nFrom where Momo had stood, I turned to the house and could see into the bedroom. She must have seen us and run off. Good thing Sonja was originally a dog; she may not have been a bloodhound, but her nose must be hundred times stronger than mine. \"Can we follow her?\"\n\n\"Yeah! Come on, Master!\"\n\nShe started running towards the road with me chasing after her. I wanted to get into my car and follow Momo's trail that way, but I knew Sonja wouldn't be able to pick up the scent. We would have to go on foot. We reached the road and Sonja paused, moving from side to side with her nose low.\n\n\"That way!\"\n\nShe pointed down the road and we both started running, hoping that we were moving faster than Momo was. Minutes passed, my low stamina soon taking effect. I wasn't fat, but I spent all my time on either on the couch or in the office, and after moving all my stuff and having sex with Sonja, what little strength I had had been used up. Regardless, I pushed myself to keep up with Sonja, running ahead of me with her fluffy blonde tail bouncing. Every kilometer or so, Sonja would stop and smell the ground, making sure that we hadn't skipped over any place where Momo might have turned and gone the woods. She was moving consistently alongside the road, but no matter how far we ran, it seemed like there was no change to it. The woods on either side stayed the same without any sign of the growing distance.\n\nI was just glad that no cars passed by us. This area wasn't between anything important and I was the only person for miles around. I had to hope that no one did come down this road before we started chasing Momo. Hopefully she was still wearing her clothes, and anyone driving by would be going too fast to see her tail. I just had to keep on hoping, but that hope was running out. The sun eventually set, but with the cloudy overhang, we lost the light before it even reached the horizon. Miles from home, the mosquitoes biting us, we were forced to the slow down. Even Sonja's canine energy reserves and fit body couldn't maintain such a pace. Soon enough, the last stroke came, a drop falling from the sky and landing on my nose. I looked up as the summer storm began, a slowly building deluge. On one hand, the rain was welcome, cooling us down and quenching our thirst, but on the other hand, it was a whole new problem.\n\nKneeling on the ground, Sonja turned to me with a worried expression. \"I can't follow Momo's scent, the rain is washing it away. Master, what do we do?\"\n\n\"We keep going. I don't care if I have to follow this road until sunrise, I'm going to find Momo.\"\n\nSonja looked at me and smiled. \"Right!\"\n\nWe continued moving, trying to return to our original pace. Summer storms in Maine are beautiful but fierce, with warm winds pushing everything over and thunderous downpours drowning the land with grape-sized raindrops. The gales made us struggle to keep our balance and so much rain hit our faces that it was like we were staring down the nozzle of a garden hose.\n\n\"Master, I think I see her!\"\n\nI looked ahead, past Sonja, and saw something dark on the side of the road. \"Please let it be her.\"\n\nWe rushed over, finding Momo sitting on the side of the road, hugging her knees to her chest, her hood pulled over her face. I crouched down and pulled back her hood. \"Momo, what are you doing here?!\"\n\nShe gave me one look and pulled her hood back over her head. \"Go away!\"\n\n\"Momo, do you have any idea how worried we were about you?\"\n\n\"Why do you care?\"\n\nI paused, flabbergasted (yes, flabbergasted) that she really didn't understand. \"Because I love you, you furry little idiot.\"\n\nShe looked up at me, her face wet, but with tears or rain, I couldn't tell. \"Master loves Sonja. Momo saw you two.\"\n\n\"Yes, I love Sonja, but I love you just as much. How could I not love you? You're like family to me.\"\n\n\"But Master likes playing with Sonja more! Momo knows Master likes her big boobs!\"\n\nGoddammit, why must she make me laugh at such a tense moment?\n\n\"Ok, you're right, she's got a big pair of rockin' tits, but yours are great as well. Momo, if I didn't love you, would I really have come running all the way down here after you? Come home with me.\"\n\n\"No! Master and Sonja can go without Momo! Momo will be fine!\"\n\nAt that, tearful Sonja threw her arms around Momo and held her close. \"But I looooooooooove Momo!\" Held to Sonja's chest, the look on Momo's face was one of shock. \"Don't leave, Momo! I don't want you to go!\" Sonja wailed.\n\n\"See? Sonja loves you too, just like I do. All this time, you've thought of her as a rival or even just an annoyance, but she's loved you from the day you two met.\" I then wrapped my arms around them, sandwiching Momo between Sonja and I. \"And I love you too. Momo, no matter where you go, you'll never find anyone who loves you as much as we do. Weird as it may be, the three of us are family, and that tiny cabin is our home. Please, don't leave us.\"\n\nMomo began to tremble, and over the pouring rain, I could hear her cry. We stayed there like that for several minutes, Sonja and I shielding Momo from the spray, letting her cry it all out. Finally, the rain began to lessen and so did Momo's sniffles. She soon stopped and we all stood up, cold and wet, but happy. Exhausted from the long day, we began the trek back home, the girls on either side of me, my arms over their shoulders. It took over two hours to walk what we had run, the forest road so dark that we almost passed by the entrance to the driveway.\n\nStepping inside, we shed our soaked clothes, sighing in relief. Wordlessly, Momo and Sonja went to the kitchen, each grabbing a can of cat food and dog food respectively. Looking half dead with exhaustion, they opened the cans and ate the meaty mush inside with their fingers. I was certainly in the same boat, only having enough strength to pour myself a bowl of cereal. They finished eating before I did and went upstairs to brush their teeth and go to bed. I finished soon afterward and left my bowl in the kitchen sink. Heading upstairs, I went into the bathroom and brushed my teeth, my red toothbrush next to a pink one smelling like mint and cat food and a yellow one smelling like mint and dog food.\n\nMore exhausted than I had been in a long time, I stepped into the bedroom, desperate to fall asleep, but stopped. In the center of the bed were Momo and Sonja, their naked bodies interlaced and their foreheads pressed together, sleeping soundly. It was such a sweet sight, I almost didn't want to disturb them. But of course, I climbed into the bed and pushed them over so I too could get under the covers.\n\n----------------------------------------\n\n\"Sonja, you left the door open again!\"\n\nIt had been a quiet Sunday afternoon, when without warning, Sonja saw a squirrel outside and rocketed through the door to chase after it. Closing my laptop, I sighed and got up to find her. She was outside, jumping up and down next to a nearby tree and yelling at the squirrel.\n\n\"Who are you?! What are you doing at my house?!\" Her tail then dropped. \"Please come down! I want to run around and play!\"\n\n\"Sonja, come over here and close this door!\"\n\n\"But Master, there's a squirrel! He looks tasty! I want to lick him!\"\n\n\"Leave the squirrel alone! You left the door open! Now come over here and close it!\" Sonja trotted over with a pout and closed the door. I patted her head, making her feel better. \"Listen, I'm glad you can go out whenever you want, it's why I bought this place. But you have to remember to close the door every time. When the door is left open, mosquitos can get in, and since you're always naked, they'll eat you alive. Not to mention that winter will be coming and we'll need to keep the heat in. Got it?\"\n\n\"Yes, Master.\"\n\nI wanted to believe her, I really did, but we had had this conversation almost six times already. Tomorrow, I was planning on going to the hardware store and seeing if they had any springs or mechanisms I could use to have the door shut automatically. \n\n\"Good, now do you want to come back inside or stay out here?\"\n\n\"I'll come in.\"\n\nI let her back in and we returned to the living room, where a movie was playing on the TV. Actually, it can't really be called a living \"room\", more like the living quadrant. We took our usual positions on the couch, me in the middle with the girls on either side. Momo had taken advantage of us leaving the couch and stretched out, showing her true cat nature. A few pats on the thigh got her to move and we sat down.\n\n\"Master,\" asked Sonja, \"since I couldn't lick the squirrel, can I lick your cock instead?\"\n\nI couldn't help but grin. \"Of course, baby, anytime.\"\n\nI removed my manhood from its denim prison and stood it upright, letting Sonja crawl over and take it in her mouth. Her head started bobbing and I groaned in bliss. As she worked, I rubbed her ears to thank her. Beside us, Momo watched with slight interest, but not the jealousy she had before. In the weeks since I deflowered Sonja, the relationship between the three of us had greatly improved. Momo no longer tried to keep us apart and didn't seem to mind sharing me. I had made it clear that I loved her just as much as I loved Sonja and that I would always keep her with me, and every day, I proved that. I always gave the two of them plenty of attention, letting the sexual barriers become more fluid. Sometimes she would still get jealous, though, especially when it came to \"playing\". I would pull out of Sonja and Momo would demand I fuck her next. But on the plus side, her relationship with Sonja was definitely better. They started being affectionate with each other, Momo aloof but open and Sonja a limitless geyser of love. They were even starting to close the distance in the bedroom.\n\nAll in all, everything was going great. With this new place, I no longer had to worry about the girls being discovered. They finally had the freedom they wanted, often spending as much time outside as inside. I had fully settled in to my manager position at work and was enjoying the big new paycheck, giving me enough money to take care of the girls and pay for the mortgage. \n\nNow my thoughts were starting to drift to the long term. How long could I keep this hidden? What would happen to them if I died? Without me to look after them, they could starve to death, or someone could snatch them up, either held in captivity by some pervert or spend the rest of their lives in a lab somewhere. Women typically outlived men, so I would need to figure out a way for them to be safe in their old age after I was gone. Maybe we could move to some remote village in a developing nation, where we would be worshipped as gods or something, somewhere that no one from the outside world would ever find them.\n\nThat also brought up the issue of their lifespans. Did they age like humans or animals? Sonja had experienced two winters before meeting me, making her almost three years old, but in dog years, that could put her in her late teens or early twenties, which certainly matched her appearance. Did that mean she would only live another ten more years? Was it the same for Momo? \n\nAlso complicating matters was the fact that they didn't appear to experience menstrual cycles. When Momo first turned into a human, I'll admit, the idea of her having a human period was definitely an unsavory thought, especially since she was always naked, but no such thing had happened so far, for either of them. I had looked up menstrual cycles for both cats and dogs, but Momo and Sonja never showed any symptoms, meaning that they likely weren't ovulating. That was certainly a blessing for me, as pregnancy would open up a whole new can of worms. I had originally operated under the assumption that Momo was still spayed from when she was a regular cat, but I had doubts that the same was true for Sonja, considering the kind of home she came from. Perhaps her previous owners did it simply to avoid having more dogs. Hopefully the two of them were sterile in their humanoid forms, sort of like how animal hybrids like mules and ligers can be born but they themselves can't reproduce.\n\nMaybe it was about time to try teaching them life skills so that they wouldn't always have to rely on me. I had tried before, making Momo more humanlike, but it didn't quite stick. But hopefully if I taught them skills rather than rules, it would work this time. \n\n\"Master, can Momo have a turn?\" the feline asked, sitting up and leaning over.\n\n\"Sonja?\" I asked.\n\nThe blonde beauty sat up, wiping the saliva from her lips and grinning. \"'Kay!\"\n\nMomo then crouched down and began sucking me off, lapping up Sonja's spit without any kind of hesitation. There's just something wonderful about pulling your dick from one girl's mouth and then sticking it in another. Like with Sonja, I rubbed Momo's ears as she worked, making her purr and her tail curl. After a minute, she gave it up so that Sonja could have another turn. She started slurping on it with gusto, as if Momo's saliva added an extra deliciousness to it. Again and again, they switched the job between them, the turns growing shorter and shorter, as well as the girls working harder and harder, even using their hands. They were really trying to coax an orgasm out of me, perhaps even trying to see who could get it first. My lap was becoming a wet and sloppy mess, but that is just proof of the heaven I had reached.\n\n\"Girls, I'm about to cum.\"\n\nMomo and Sonja closed in, pushing against each other to win their gooey prize. Pulled free from their mouths, my cock released a white geyser, splattering on their faces. With their salty dessert having missed their mouths, they simply sat up and licked it off each other's faces. Considering their animal personalities, it was quite expected and innocent, but of course sexy as hell at the same time.\n\n\"Ok girls, when this movie is done, we're going to try something new.\"\n\nThey both looked at me with curious excitement.\n\n\"A new kind of playing?\" Sonja asked with her tail wagging.\n\n\"No, I'm going to teach you both how to read and write. It will help you understand things and let me trust you with tasks.\"\n\nMomo's ears dropped. \"This isn't going to be like eating with a fork, is it? Momo likes having her bowl on the floor.\"\n\n\"No, no, it won't be like that. Think of it as a good way to pass the time when I'm at work. It's an important skill to have.\"\n\nOnce the movie was done, I brought the girls into the kitchen and sat them down at the table. Gathering some pencils and paper, I started out by writing out the alphabet and showing it to them.\n\n\"See these? These are letters. When you put them in order, they form words and can be used to save messages and information.\"\n\nMomo made some small swipes at the paper, daring the letters to show this amazing ability I had mentioned. Sonja just smiled and wagged her tail, dumb as a rock.\n\n\"Each letter has a name, which helps tell you what it sounds like.\" I put my finger on the paper and moved it down the line. \"Their names are A B C D E F G H I J K L M N O P Q R S T U V W X Y Z. Say those with me.\" \n\nI read through the list again, saying each letter and having the girls repeat me before I moved onto the next. We did this almost a dozen times, making sure they had the names memorized. Then I started picking letters at random and having the girls give the names. It took a bit of time, but they soon figured them out.\n\n\"Ok, now, how about I show you how to spell your names? Momo, look at these letters and try to guess which ones are used. Sound it out.\"\n\nI slid the paper over to her and she squinted at the letters. \"Hmm... oh... mmm... oh.\" She looked through the list, trying to remember their names. \"Is it... M-O-M-O?\"\n\n\"That's right! Very good!\"\n\nI wrote her name down at the bottom of the paper. She stared at it, her eyes full of wonder and her ears twitching. \"Momo is Momo,\" she whispered.\n\n\"Me next! Me next!\" Sonja exclaimed.\n\n\"Your name is a bit harder and the letters sound different. Try and guess the first three letters, the \"Son\" part.\"\n\nI gave her the sheet and she looked through it. It took her a moment, I could see her mouthing her name over and over again. \"S-O-N!\"\n\n\"Very good, your full name is S-O-N-J-A.\" I wrote her name down and she held up the paper proudly. \"I'm Sonja!\" she announced.\n\n\"That's right. Now, I'm sorry to do this, but I have to complicate things further. I told you that each letter has a name that hints to its sound, but not all letters sound like their name. Some can even have two sounds.\" You could almost see smoke coming out of their ears. It was impressive enough that they had gotten this far in one sitting. \"Actually, how about we go for a quick walk, let you two air out?\"\n\nSonja jumped up and rocketed outside, the idea of a walk making her drunk with happiness. Momo followed at her own pace, just glad to have a break. We set out into the woods, taking a path we had figured out since moving in. As usual, Momo and Sonja were naked, enjoying the summer air and sunlight. They didn't even mind being barefoot, walking on sticks and leaves as if they were wearing hiking boots. Right now, they were happy, but soon they would be begging for the clothes they hated so much. A part of me eagerly awaited the satisfaction of seeing them have to suck it up and face the cold with pants and sweaters. Though I would certainly miss seeing those bouncy titties 24/7.\n\n\"So why does Momo need to read?\" the feline asked, walking alongside me as Sonja orbited around us.\n\n\"Well, I'm sure you get bored waiting for me to come home. If I could get books for you, you could read them during the day. I could get you books about cats.\"\n\nHer ears twitched at the idea. \"Hmmm, Momo isn't sure. Momo is busy during the day.\"\n\n\"Playing with yourself all day doesn't count as being busy.\" She looked at me as if I had just spoken in gibberish. \"Besides, I'd like it if you and Sonja could start helping around at home. You know, I could leave you a list of things to do during the day. Maybe I could teach you two how to cook so you could make dinner.\"\n\nMomo groaned. \"That sounds like a lot of work.\"\n\n\"And that's why I'm asking you for help, because I can't do it all myself.\" I wrapped my hand around hers and kissed her forehead. \"We're family after all.\"\n\n\"Hmmm, it's not fair when Master asks like that. Ok...\"\n\n\"Good, then let's head back. Sonja, ready to go?\"\n\nSonja was down on all fours, trying to fit her head into a hollow space under a tree. \"Just a second!\"\n\nAs hilarious as it was to see her bare ass sticking out with her tail standing like a lightning rod, I had to pull her away to spare whatever poor creature she was bothering.\n\n----------------------------------------\n\n\"Ok, so what are the letters of the alphabet?\" I asked, having returned with the girls to the kitchen.\n\n\"A B C D E G I J K N M O P Q R S T U V Z!\" they chanted.\n\n\"Close, but not quite right. Now, for the sounds of the letters.\" I went back through the list, sounding out each letter and having them repeat it. We did this over and over again, drilling the alphabet into their skulls.\n\nAfterwards, to give them another break, I simply had them point things out or pick words and I would spell them. I would put sentences together using the simplest words I could and have them read them out. They were certainly fast learners; I couldn't remember how long it took me to learn to read when I was a kid but they had definitely swept past me. But once again, when it seemed like smoke was going to start pouring from their ears, I stopped.",
        "\"Ok, girls, now how would you like to help me prepare dinner? We're having meatloaf tonight.\"\n\nTheir tails stood on end and they jumped from their seats, wanting to do whatever they could to help hasten the arrival of dinner. After turning on the oven, I brought them over to the kitchen counter, where I had already set out the meat upon returning from hour walk. By now, it had hopefully warmed up.\n\n\"This time, the two of you will be making it, I'll just give you instructions. First, take all the meat out of their packages and put them in a big metal bowl. You can find it in the cupboard above the fridge.\"\n\nMomo retrieved the bowl while Sonja tried to tear open the meat packages. Luckily the cat came over with the sense to use scissors. Ground beef, pork, and turkey were dumped into the bowl, the girls staring at them with their mouths watering.\n\n\"Oh, I almost forgot. The two of you need to wash your hands since you're going to be touching the meat.\" \n\nThey obeyed, ready to sell their souls if it meant getting close to all that raw meat. While they washed their hands, I got out some eggs and a small bowl.\n\n\"Now I'm going to show you how to crack open an egg. You take an egg, tap it against the edge of a bowl to create a line of cracks, and then you gingerly pull it open.\" They had seen me use eggs plenty of time before, but this time they got in close and paid attention. They tensed as the eggshell fractured, as if they were watching a horror movie, and then gasped when the gooey insides poured out into the bowl. They were so amazed by something so simple, it made them look even more adorable than usual. I poured my egg in with the meat and gave the girls their turn.\n\nGiven her egg, Momo brought her face as close to the small bowl as possible and began making small taps on the shell, as if trying to speak in Morse code. Wanting to get this done before dying of old age, I clutched her hand in mine and helped her break it open. I then gave the bowl and an egg to Sonja, hoping that she would do a little better. Squealing in joy, she crammed the egg in her mouth and began chewing on it with goop running down her chin. Honestly, I had been expecting her to just smash the egg into the bowl and make a mess.\n\nI pushed her over to the sink. \"No! No! You spit it out! I'm not paying for any Salmonella treatments!\"\n\nSonja pouted and gave in, regurgitating a slimy, fragmented mess into the drain. We would have to try this again some other time, maybe for scrambled eggs.\n\n\"At least now we can get to the main part. You've put all the meat together and added an egg. Now you have to mix it up with your hands. Both of you reach in there and start mashing it up with your fingers. I think it's something you might enjoy. But don't eat any of it!\"\n\nSonja and Momo started mixing the meat together like toddlers with Play-Dough. I could see their mouths watering as they worked, their predatory instincts telling them to dig in. Anytime they tried to eat some of the meat, I would tap them on the head with a wooden spoon. Maybe this was a little cruel, but learning to do these things was for their own good. I added some ground garlic to the mix and then had them shape it into a loaf. After dropping it onto a glass pan, I pushed in some lumps of mozzarella and then put it in the oven.\n\n\"Good work, girls! I'm very proud of you! You've just made your first meatloaf. Before long, you'll be able to do it without me here.\"\n\nMy praise made Sonja wag their tail and Momo purr, though that might have been the smell of the meatloaf cooking.\n\n----------------------------------------\n\nI'll never get tired of it, never get tired of watching them eat. Crouched down on all fours, completely naked, their faces buried in their food bowls, their heads bobbing while they chewed... it's just such a strange and entertaining sight. Momo no longer kept her distance from Sonja, now letting her canine counterpart eat right next to her. Every few mouthfuls, one of them would move to the water bowl between them and take a drink. I was sitting at the table, eating my own dinner and watching them. It was mesmerizing. \n\n----------------------------------------\n\nThat next morning, as I was making breakfast for the girls, an idea came to me. While they were eating, I brought my laptop into the kitchen and set it on the table with the charger hooked up, as well as gathering the pencils and paper from yesterday. Going to YouTube, I looked up 'learning to read and write' and found a channel with a full playlist of lessons. I set the playlist to autoplay and repeat and started the first lesson, pausing it at the beginning. Once the girls had eaten and I had gone through my morning routine, I showed them the computer.\n\n\"Girls, pay attention, because I have a task for you. While I'm at work, I want you to watch these lessons and do whatever they tell you to do. This will be your homework.\" I had never let them use my computer before, so they looked at it with unease and confusion. I had already disabled the sleep function, so it would stay on this page all day. \"You can pause it and start it anytime you want, so feel free to take breaks, but I want you to get as much of it done as possible. See? Just do this.\" I pressed the space bar, showing them how to start and stop the video. \"And if you do this for me, I promise you a big reward.\"\n\nThey both perked up at the sound of a reward, standing on their toes with their ears and tails erect. \"A big reward!\" they squealed.\n\n\"That's right. Now, I'm off to work.\"\n\nOn cue, they each stepped forward and gave me a long kiss, full of love. Love and tongue.\n\n----------------------------------------\n\nAfter going back to bed and napping for a while, Momo and Sonja took their seats in the kitchen, the computer in front of them. It took Momo a second to remember which key I had pressed, but she got the first lesson going. It was a woman in a classroom with a whiteboard behind her. She gave an introduction, an overview of what she would be teaching, and then began the basics. Thanks to my lessons, the first video was little more than a recap. \n\nThe girls did I as I told them, following the instructions of the video and writing everything down. Their penmanship couldn't really be called that, as they held their pencils in their fists like children, leaving their letters scrawled. After the first half hour, Momo set her head down on the table.\n\n\"Momo's tired,\" she grumbled.\n\n\"Come on! Master will give us a big reward if we do this!\" said Sonja, trying to get her back up.\n\n\"Master also said we could take breaks. Let's take a break.\"\n\nSonja wanted to argue, but she did want to go outside.\n\n\"Ok, we'll rest for a while.\"\n\nSonja paused the video and then zoomed outside to frolic in the woods. Momo was nearly knocked out of her chair by the blonde beauty rocketing past her. After, of course, closing the door behind Sonja, Momo went upstairs for a catnap. She entered the bedroom and wormed her way under the blankets, purring as she relished being enveloped in her master's scent. \n\nAn hour passed, Sonja eventually returning inside. Already knowing where Momo was, she went upstairs and found the feline tossing and turning in bed, her hand between her legs and her face flushed. Sonja was used to seeing Momo do this, it was how she spent much of her day, but the longer she watched, the more curious she became.\n\n\"Is it really that fun?\" she asked.\n\n\"Uh-huh,\" Momo replied, rolling over onto her knees, ass in the air and face in the pillow, fingering herself like she was digging for the last tic-tac in the pack.\n\n\"Can I try?\"\n\nMomo didn't reply, too engrossed in her own pleasure.\n\nTaking that as a yes, Sonja jumped onto the bed, nearly bouncing Momo off and onto the floor. The cat scowled at her in annoyance. \"Just use your fingers to tickle yourself and imagine it's Master.\"\n\nSonja watched Momo pleasure herself, studying the movement of her fingers. Deciding to just wing it, she tried it on her own, running her fingers across her lips. She shivered from the sensation, her mind flashing back to the last time \"playtime\". She thought back to what it felt like to have body stimulated, played with, the intimate touching and caressing. She began to pant, her fingers becoming more ordered in their movements, especially once she found her clitoris. Lying side by side, Momo on the right and Sonja on their left. The two girls moved like mirror images, their hands vibrating between their legs while their breasts jiggled from every movement of their bodies. Their voices reached the same pitch while the same redness in Momo's face spread to Sonja.\n\nAs she writhed and twisted, a thought popped into Sonja's head. She had felt this exact kind of simulation before, back when she and Momo had first showered together. Maybe they could do it again. She reached out and jammed her right hand under Momo's, playing with her slit the way she had her own.\n\n\"What are you doing?!\" Momo hissed, feeling Sonja's fingers penetrate her.\n\n\"It's just like the shower! I'll do you and you do me!\"\n\nMomo growled but gave in, resting her left hand between Sonja's legs and stirring her sleeve with her fingers. A new level of intensity had been reached, the girls moaning louder than before as they played with each other. Having someone else touch them in this way magnified the sensations, so much so that they were bucking their hips and stretching. They rubbed each other's clits like it was a race to induce an orgasm. \n\n\"Ah! I'm cumming! AROOOOOOOOOOO\" Sonja howled.\n\nShe spread her legs wide, screaming in bliss as she came again and again, soaking Momo's hand. It took several seconds for her to settle, at which point she rolled onto her side, snuggling up against Momo, her right breast pressed to Momo's left. She changed hands, now rubbing Momo's clit with her left, able to get much more control and elbowroom. Momo moaned and cried, overwhelmed with the strength of Sonja's rubbing and the sensation of their nipples kissing.\n\n\"ROOOOOOOOWR!\" she hollered, experiencing her own orgasm and drenching Sonja's fingers.\n\nAfter a couple minutes to catch their breath, they got up and returned downstairs to continue their lessons.\n\n----------------------------------------\n\n\"Girls! I'm home!\"\n\n\"MASTER! MASTER! MASTER! MASTER! MASTER!\" Sonja hollered, rushing over to me and wrapping her arms around me. Momo came a few moments later, much calmer than Sonja but showing just as much affection. There's nothing like two beautiful naked women welcoming you home after a long day at work. Unfortunately, I couldn't hug them back because I was carrying two big plastic bags.\n\n\"Yes, yes, I missed you too. Now, have you girls been good today? Did you get a lot done?\"\n\n\"Yes, we did! We did a ton!\" said Sonja.\n\nFrom the table, she grabbed several sheets of writing exercises, showing that the girls had been busy. Their penmanship was still sloppy and childish, but in a cute way.\n\n\"Good girls! I'm very proud of you!\"\n\nI checked on my laptop, seeing how far they had gotten in the playlist. They hadn't done as much as I had hoped, but considering their intelligence and that I wasn't here, they had made realistic progress. I set the bags down on the table and the girls stared in interest, remembering that I had promised them a reward. I poured out the bags, sending out packs of crayons, markers, colored pencils, and a few other arts and crafts materials. I didn't get paints or glue, simply because I couldn't yet trust them not to make a mess.\n\n\"Master, what are these?\" Momo asked, picking up a carton of colored modeling clays.\n\n\"These are for you. I actually should have gotten these a while ago. I bet you girls are probably bored out of your minds while I'm working. Well, now you can draw pictures, you can make statues and figurines, and I'll get you more stuff later so that you can make whatever you want.\" The girls didn't quite understand. \"Here, let me show you.\" I grabbed a piece of paper and a few markers. It was just a quick doodle and more cartoonish than I would have liked, but I drew a picture of Momo and Sonja. \"See?\"\n\nThey stared at it like it was the Holy Grail.\n\n\"Master, that's so good! How did you do that?!\" Sonja exclaimed.\n\n\"I'll show you in a bit. For now, I just want to relax on the couch with my girls.\"\n\nWe retreated to the living room where I took my place in the middle of the couch, snuggled up between two naked babes. We watched the evening news, me on my laptop, the Momo and Sonja butting their heads against me so that I would pet them, the three of us just enjoying the serenity. I soon had to give up on using my computer and simply gave the girls what they wanted, but in the way I wanted. I was working my fingers between Momo's legs, making her purr, and massaging Sonja's melon-like breasts, making her whimper. As usual, I got hard pretty quickly and they immediately noticed, fighting over who would get to suck me off first. \n\nSonja won the argument, managing the spring my rod free, only to immediately imprison it in the soft confines of her mouth. After a few minutes, Momo took over and managed to get the drop on Sonja. Instead of blowing me, she swung her leg over my lap and settled on it, using Sonja's saliva as lubricant to slide me into her. Momo started to bounce on my lap, moaning as I kissed her breasts. Every day spent in my office was a day spent waiting to come home to play with my girls. Every few minutes while sitting at my desk, my mind would drift back to the wonderful sensation of penetrating them, of stirring myself in their wet cunts, of making them moan and cry out. Now, I was where I belonged. Life was good. \n\n----------------------------------------\n\nAfter the news, I brought the girls back into the kitchen and showed them how to use everything I had gotten them. I showed them how to properly hold pencils and markers and drilled into their minds that the caps always had to be put on when not in use. As I prepared dinner, Sonja and Momo were seated at the dinner table, doodling with big grins on their faces and markers flying.\n\n\"Master! Master! Look what Momo drew!\"\n\nShe rushed over to me, holding up a crudely drawn picture of the three of us on the couch. Funny thing though, she drew her and Sonja as a dog and a cat. It looked like it had been made by a first-grader, but I still loved it.\n\n\"Very good, very good! It's beautiful! I'm hanging it right up on the fridge!\"\n\nI rubbed her head to congratulate her, relishing the sound of her purring.\n\n----------------------------------------\n\nAfter having dinner, the girls watched as I reached into one of the bags of art supplies and pulled out a label maker.\n\n\"What's that?\" asked Sonja.\n\n\"This is to help you learn to read,\" I said as I cut away the plastic packaging. \n\nAfter failing to get it working and having the swallow my pride and read the directions, I started printing off labels for everything in the kitchen. They soon started following me around the room, reading off things as soon as I tagged them.\n\n\"Cab-i-nets...\" said Momo, opening and closing the overhead door over and over.\n\n\"Close, it's 'cabinets'.\"\n\n\"Refri-ger-a-tor...\" said Sonja, wagging her tail in front of the stainless-steel box.\n\n\"Refrigerator,\" I said. \n\n\"K-nife,\" Momo mumbled, examining the cutlery.\n\n\"Nope, just knife. The k is silent.\"\n\n\"Ap-plee,\" said Sonja, a piece of fruit in her hands.\n\n\"Nope, it's pronounced app-el, just like table.\"\n\n\"Lig-ht...\" Momo said, squinting at the light switch.\n\n\"Light,\" I replied.\n\n\"Why are these words so weird?\"\n\n\"Oh honey, it's because English is stupid. It's a horribly conceived language that mooches off of other languages for bits of spelling and grammar.\"\n\nThen with a smile on my face, I printed off a small label and stuck it to Sonja's forehead. As expected, she frantically started spinning around, her eyes rolling all the way back as she tried to read what it said. \n\n\"What's it say?! What's is say?!\"\n\nMomo came by and read it. \"Dog.\"\n\n\"That's correct,\" I said, Then I put a label on her own forehead.\n\n\"Sat,\" said Sonja.\n\n\"No, she's a cat. In this case, c sounds like k.\" Then, on a roll, I printed off more and more labels and stuck them on their bodies, naming all of their parts for them. \"And now, onwards through the rest of the house.\"\n\n----------------------------------------\n\nAfter taking showers to wash off the sweat of the day (and those labels), the three of us made our way to the bedroom.\n\nMomo was laid out on the bed, stunningly beautiful. She blushed as I held myself over her, blowing on her bare skin to tease her. Between breaths, I would lean down and kiss her body, dotting her naked form at random points. Climbing up onto the bed, I let my lips join hers. She spread her legs, inviting me, and I answered by plunging into her. She moaned as I explored her deepest recesses, often breaking our kiss to let her voice echo through the house. Her legs wrapped around my waist, her tail twisting like a corkscrew. The strength and speed of my movements grew with the passing time, the whole bed soon rocking back and forth as I thrust into her. Her breasts jiggled with each impact, her nipples skating across my chest.\n\nBeside us lay Sonja, playing with herself as she watched us, desperate for her turn. What could it be called, the anticipation she was experiencing? She did not understand sex the way normal humans did, did not have a lifetime of experience in the modern age to define it in cultural terms and her apply her own moral values. To anyone watching this, her behavior could be considered naughty to say the least, depraved, but in truth, it was purely innocent. In many ways, lust was almost animalistic, the desire to mate being so basic and overwhelming that it directly opposed human logic and reason, but it was still so different for Sonja, who pretty much was an animal. To her, it was innocent enjoyment and excitement, the movements of her fingers in her slit about as naughty as the tossing and turning of a sleepless child on Christmas Eve. To her, it really was simple playing.\n\nLeaving Momo thoroughly satisfied, I moved over to Sonja. She too received me on her back as I slid into her, still slick from Momo. Now it was Momo's turn to watch us, her fingers tentatively probing her flower as Sonja and I sucked on each other's tongues. I ended our kiss as my speed increased, instead deciding to play dirty. I lowered my head to her side and started nibbling on her right ear. It was much easier to do with Sonja than Momo, since her canine ears hung down rather than stood.\n\n\"Oh Master!\" Sonja cried out, the added stimulation driving her over the edge. Whether cat or dog, nibbling the ear was always a winning move. For some reason, their ears just became a hundred times more sensitive during sex.\n\nAfter a couple minutes, I pulled out of her, sitting up to catch my breath. Loudly purring, Momo crawled over and sniffed my manhood. I'm sure I could probably make a cat and fish smell joke, but that would be in bad taste. Showing none of the hesitation or concern that a normal girl might feel in this situation, she opened her mouth and began blowing me, cleaning me of Sonja's essence. \n\n\"Good girl,\" I hummed, rubbing her ears. \n\nShe looked up and purred, then turned around and pointed her ass at me, something that would have greatly annoyed me if she were still a normal cat, and while Sonja won in the breast department, Momo certainly had the cutest ass you had ever seen, heart-shaped and luscious. I leaned over and kissed her cheeks, something that confused her but still made her feel good.\n\nThen, I got up behind her and mounted her like an animal, making her moan in happiness. Gripping her by the hips, I began rocking back and forth, thrusting into her as hard and fast as I could. Momo's voice became a continuous feline whine, a sound that I had long-since learned was a sign that I was on the right track. With ripples moving through her ass from each thrust, her tail seemed to curl and scrunch up, while her beautiful face made an expression almost similar to crying, but was really a reaction of sexual bliss. As I slammed into her again and again, Sonja came up from behind me. She was on her knees like I was, wagging her tail to try and get my attention. I once again started kissing her, freeing up one hand from Momo's hips to squeeze her breasts.",
        "\"Master! Momo is cumming! Momo is... ROWR!\"\n\nMomo released her signature cry, signaling that she had just climaxed. I fell back, exhausted but still erect. Seeing an opportunity, Sonja got in between Momo and I and took her turn to suck me off, slurping up the taste of Momo. I closed my eyes and relished the sensation, letting Sonja work hard to satisfy me while I regained my strength. After a couple minutes, she sat up and moved onto my lap, letting me spear her through. She gasped as I penetrated her and then started to rock back and forth, using me to stir her up like a whisk.\n\nWhile Sonja bounced on my lap, Momo crawled over and kissed me. After licking each corner of my mouth, she hefted her breasts in my face, telling me where she wanted attention. I smiled and let her smother me, sucking on her nipples while she purred above me. I moved back and forth between her breasts, pulling on her areolas with my lips and running my tongue across her skin to sample her body's flavor. Her purring increased in volume the longer and harder I played with her, soon prompting her to hold herself up with only one arm so that she could use her free hand to play with herself.\n\nSeeking greater stimulation, she swung her leg over my head and lowered herself onto my face, straddling me with her back to Sonja. She grinded her lips against me, moaning as I licked her honeypot. Behind her, Sonja was bouncing on my cock like my lap was a trampoline, her giant tits heaving and her facing blushing as she cried out in bliss. I was in absolute nirvana, having one beautiful girl sitting on my face and letting me gorge myself on her sweet nectar, and another riding my manhood like it was rodeo bull.\n\n\"Girls, I'm going to finish. Move off me.\"\n\nThey did as I told them and I instructed Sonja to lie down on her back. Expecting me to again fuck her in the missionary position, she was surprised when I got on my knees over her, my cock between her breasts. She blushed as I squished them against my manhood and began to thrust, sliding between them with the liquid from her pussy acting as lubricant. I'll be honest, it was almost better than regular sex. It was a different kind of softness, the resilient bounciness of her tits drawing out a kind of instinct in me, almost sadistic, where I wanted to slap them around with my dick. It was sort of like holding a balloon and having that evil desire to pop it.\n\nSonja didn't understand what I was doing, but it felt great, the stimulation of her breasts and the sensation of my dick charging between them like a battering ram. It excited her in a way she didn't quite understand, a perplexing desire that sent shivers of bliss up her spine, even more refined than when we had been playing normally just seconds ago. She had her eyes on the head, shooting from her cleavage to touch her chin and then receding, and was using her hands to help hold her breasts together so that my member was completely enveloped.\n\nMomo watched us with wide eyes, wondering if her assets were large enough to do that kind of thing. She wanted to play like that too, this new kind of playing that felt... almost naughty.\n\nA grunt from me told Sonja to open her mouth, letting her catch a stream of semen on her tongue. I moved off her, shooting out more white ropes onto her chest. With me out of the way, Momo crawled over and lowered her head. She licked my cum off of Sonja's tits, easily one of the sexiest things I had ever seen. I couldn't help but laugh, drawing the girls' attention.\n\n\"I swear I'll never get used to this.\"\n\n----------------------------------------\n\n\"Master! Master! Look at what I made!\" said Sonja, greeting me at the door as I returned home the next day. In her hand was a small tree, made of green and brown clay from the packs I had bought.\n\n\"Oh, very nice. We can put it in the oven so it will harden.\" My praise and a pat on the head made her giggle and wag her tail. I looked at the kitchen table and saw many more clay figures, shaped into trees, people, animals, and houses. All of the clay had been used up, giving her a tiny village. \"My, you've been busy today. Where's Momo?\"\n\nSonja led me into the living room, where Momo was lying on her stomach on the floor, crayons and pictures scattered around her, her tail bobbing as she drew on a piece of paper. Seeing me, she got up and scurried over, holding out her newest creation. \"Momo drew Master!\"\n\nI took the drawing and gazed at it like a proud parent. Little by little, her skills were improving.\n\nI pulled her in and kissed her cheek. \"Good girl, very nice work.\" In reply, she buried her face in my neck and purred.\n\nAs we did every day, we plopped down onto the couch, me breathing deeply in the bliss that work was over and I could relax. \"So, girls, how did your lessons go today?\"\n\nMomo twisted around onto her back, her head in my lap. \"Good, we did the work that the lady told us to.\"\n\n\"And are you getting it?\"\n\n\"Yuh-huh.\"\n\n\"Good, then soon I can start getting you books. I already need to get you more clay.\"\n\nUnable to resist, I tickled her belly, and her hands clamped around my arm like a bear trap. Once a cat, always a cat. I looked out the window into the woods. It was now September, and while the leaves were still green, that wouldn't last much longer.\n\n\"Now that I think about it, I need to get you two a lot more stuff. You're going to need clothes for when it gets cold. We're going to need to get wood for fires. This will be our first winter together like this. I should also probably get you two some toys.\"\n\nAt that, Sonja slammed herself against me. \"TOOOOOYS!\" she cheered.\n\n----------------------------------------\n\nThe weekend came, and I decided it was time for us to get some work done and prepare for winter. I had already ordered the girls more clothes and some shoes online, and they stood before me on a warm Saturday morning, dressed and... willing. Sonja was eager to do whatever I told her, but Momo was slouched over and had her eyes closed as if I had pulled her out of bed just moments ago.\n\n\"Masteeeeeeer! It's too early! Momo wants to go back to beeeeeed!\"\n\n\"I know it is, but better we do it now than in the afternoon when it's too hot. I'm not asking you for much. We'll do what we can for now and then relax. Now, I want the two of you to search the forest for dry sticks and tree branches. I don't want to spend even a penny on heating oil if I don't have to. Look for stuff that is dry and not rotten, namely stuff that isn't on the ground. I also want you to collect birch bark, that peeling stuff on the white trees, like paper. We'll use all that for kindling. Get as much as you can and stack it in the tool shed.\n\nAlso, keep your eyes peeled for any dead trees, hopefully not too rotten. I'm going down to the hardware store to get some tools. Luckily, the guys who built this place left a few things in the shed, but not enough. When I come back, I'll start cutting down the dead trees. We'll stop at lunch. Ok, let's get to work.\"\n\n\"Yay!\" Sonja hollered, running off into the woods to complete her task, her fluffy tail poking out through the hole in her shorts and wagging as she moved. Momo grumbled and trudged after her. \n\nWatching them, I couldn't help but feel glad that I had grown up in a rural area. I wasn't a survivalist or farmer or any stuff like that, but I at least knew how to split wood and maintain a house.\n\n----------------------------------------\n\nSonja rushed through the woods, eyes swerving and nose twitching as she searched for firewood. Behind her was Momo, carrying most of what was found like a pack mule. For once, she was glad to be wearing a shirt. All of these dry branches and sticks were rough on her skin.\n\n\"This is perfect!\" Sonja hollered, picking up a stick that looked no different from any of the others she had found. She gave it to Momo and grabbed another stick ten feet away, exactly the same. \"This one is even better!\"\n\nEvery time they filled up their arms with wood, they would carry it back to the house and load it into the tool shed. Momo at least had the sense to try and stack it properly to minimize the space used. In an old trash bin left by the builders, they stashed all the birch bark they could find.\n\nI returned an hour later, bringing with me several new tools from the hardware store in the nearby town. Among them were a log-splitting axe and the cheapest chainsaw I could find. Both girls were dirty, Sonja as happy as could be and Momo still grumpy.\n\n\"How have you girls been?\" I asked.\n\n\"Good! We got lots of sticks!\"\n\n\"Thank you, that'll help keep us warm this winter. Now, can you girls show me to any dead trees? Momo, you can go inside if you want.\" Now both girls were smiling. \n\nI fueled up the chainsaw and followed Sonja into the woods. She pranced around me, overjoyed for the two of us to be together on such a beautiful day. Many of trees she showed me were pretty punky but would still burn ok, just not quite as hot. Most of them were in pretty good shape, still hard and dried out from the summer sun. \n\nWe arrived at the first tree and I gave Sonja a pair of safety goggles and told her to stand back while I put on my own. This wasn't my first time using a chainsaw, but it always made it nervous.\n\n\"Ok, this is going to be really loud. Just keep your distance, and whatever you do, don't stand under the tree once it begins to fall.\"\n\nI started up the chainsaw, making Sonja wince and cover her floppy dog ears. The motor roared and whined as the chain met the side of the tree, sending up clouds of sawdust and wood chips. Two slow cuts sent the tree falling, busting through the canopy of its healthy brethren and shaking the woods upon its landing. I then went down the line, cutting it up into sections to be split. Our house had a woodstove in the living room, but it was pretty small, fitting for our little cabin. It may be possible to simply heat the house with only the sticks the girls had found, but I wanted something with a little more girth. I just had to make sure they could fit. \n\nWith the tree diced up, I began chopping up the sections with the axe, first setting them onto the stump and then making a few heavy swings. Damn it, I had forgotten how much I hated splitting wood. It always takes ten times more energy than you think, a lot of which is wasted on bad swings. But I had Sonja with me, watching in awe as I worked. Who knows? Maybe I was even turning her on.\n\nBy the time I had finished chopping the wood, the afternoon had already started and the September heat was sapping my strength and leaving me drenched in sweat. I had hoped to get a few more trees done, but there was always tomorrow. Compared to the girls, I had gotten barely anything done. Oh well, once we reached fall, I would be much more productive.\n\n\"All right, we'll haul this wood back to the shed some other time. Let's head back and relax.\"\n\n\"Ok!\"\n\nSonja pranced through the woods with me behind her, still trying to figure out if we would have enough wood for the winter. Winters in Maine were rough, and I only wanted to use gas heating to keep the pipes from freezing. We would have to keep the stove going almost nonstop. But once we got back home, I put those thoughts away with my tools and followed Sonja inside. The first thing we did was drink like racehorses. I should probably get some water bottles.\n\nI looked into the living room and saw Momo sound asleep on the couch. Since coming in, she had stripped down and taken a shower, but her hair was almost dry from the heat. \n\n\"Come on,\" I said to Sonja, \"let's get cleaned up.\"\n\n----------------------------------------\n\nI settled into the tub, sighing in relief. The bathwater was just over lukewarm, cool enough to not add on to the summer heat, but hot enough to still feel amazing. On my left side, the shower wall was a large window letting in the natural light, but was made of blurred glass so on the off chance someone was outside, they couldn't see anyone who might be in the bathroom. On my right was Sonja, eager for her chance in the water.\n\n\"Come on in, the water feels great.\"\n\n\"I don't know if there is enough room for me,\" she said, moving her gaze from one end of the tub to the other.\n\n\"Sure there is, just pretend I'm a couch.\"\n\nGetting the idea, she smiled and stripped down. Regardless of all the collected hours I had watched her walk around naked, the release of her breasts still made me rock hard in an instant. She turned around and backed herself into the tub, lowering herself on top of me. Her tail batted my face a couple times, but she managed to get it out of the way and settled herself into the water. She hummed in bliss as her body was submerged and fell back against me, my manhood nestled in her butt. It was an amazing feeling, our naked bodies pressed together but not in the way as if we were having sex. Her skin was smooth, and her body was so soft yet so toned. It would have been perfect if not for her tail pressed against my inner thigh.\n\n\"This feels really good!\"\n\n\"It really does. I've always wanted to take a bath with a girl like this.\"\n\n\"Has Master been with other girls besides me and Momo?\" \n\n\"Yeah, a few, but they were all normal humans.\"\n\n\"Did you play with them?\"\n\nI laughed. \"Yeah, we played.\"\n\n\"Well why aren't they here now?\"\n\n\"Things didn't work out. It happens with people. We would get along for a while but eventually get sick of each other.\"\n\n\"Is Master gonna get sick of me?\"\n\nI wrapped my arms around her. \"Of course not. I could never get sick of you. But you really need to learn to close the goddamn door when you go outside.\"\n\nShe giggled. \"Ok, Master!\"\n\n\"Now that I have you here in this tub, it's impossible for me not to play around with these...\" My hands cupped her breasts, making her ears perk.\n\n\"It feels really good when you rub them!\"\n\n\"I'm glad. They're so big and soft, I can't resist squeezing them like this.\"\n\nI began playing around with them the way I usually would, now using the bathwater as a lubricant to let my hands slide across them. The longer I groped her, the more excited she became, an aroused pant passing her tongue as she licked her lips.\n\n\"And I know it feels even better when I touch you here.\"\n\nI moved one hand down, sliding my fingers between her legs. She automatically spread them, inviting me in. My fingers slipped into her pussy effortlessly, the plump lips softer than latex. She began to whimper and her cheeks turned red as I played with her, her body soon writhing in bliss. In a strange way, it was almost better than regular sex, not physically of course, but the sense of smug satisfaction that came from knowing I could drive her wild with such simple touching. Then, to push it even further, I started nibbling on her ears, making her climax almost immediately and sending her canine howl through the house.\n\nAs soon as her body settled, Sonja turned around and straddled my lap, letting my cock drive up into her. She started gyrating her hips, while behind her, her wagging tail splashed water everywhere. While my cock stirred her pussy, I leaned forward and kissed her breasts, putting extra attention into her pointing nipples. Just pulling on them with my lips was enough to make her gasp. I looked up at her and our lips met, as well as our tongues. We licked the insides of each other's mouths, all while I had my hands on her ass, shifting her around like a joystick while I whisked her cunt like pancake batter.\n\nMy \"patience\" was already diminished from the time spent simply lying with her in the tub and fingering her, and I came sooner than I would have liked, flooding her with my seed. Sonja dismounted me and I moved out of the water, sitting up on the edge of the tub. As if excited by the flaccidity, Sonja buried her head in my lap with my limp noodle rolling around in her soft mouth. I groaned as I felt her lick up the semen, as well as suck out any rounds that had not been fired. As always, I rubbed her head as she blew me and watched her wagging tail.\n\n\"Master!\" I looked over at the door, seeing Momo, clutching her stomach. \"Momo's hungry!\" she whined.\n\nSonja leaned back with a thread of saliva bridged between my cock and her lower lip. \"Master, I want food too!\" she whined. She had been in full sex mode just seconds ago and had now returned to being an animal. Oh well, I wasn't one to judge, especially with how my stomach was growling.\n\n\"Ok girls, let's go have lunch.\"\n\n----------------------------------------\n\nWe started earlier the next day, wanting to beat the heat as much as we could. I set out with my axe and chainsaw, feeling very rugged and manly, with the girls leading me to dead trees. I'd cut them down and chop them up, all while the girls continued searching for dry sticks. We were filthy with sweat and dirt by the time morning turned to noon, with piles of wood scattered through the forest. We stopped for the day and returned home. \n\n\"Ok, girls,\" I said, standing in the kitchen and making them sandwiches, \"this week, I want you to go back and collect the wood I just cut up. Stack it up in the shed, but leave enough room for tools. Any extra wood we have can be stacked up on the porch.\"\n\nMomo, of course, whined at the prospect of more work, but Sonja was as happy as could be.\n\n----------------------------------------\n\nSeptember turned to October, and my home became an island in a sea of autumn leaves. It was beautiful beyond words, being able to wake up and come home while gazing upon waves of yellow, orange, and red. With the start of fall, the weather started getting colder, though just at night. The girls insisted on remaining naked, simply waiting for the late morning before finally rising out of bed and going outside. I started testing out the woodstove, making fires in the morning and evening to keep away the chill. It took only a few pieces to heat the whole house, a very good sign that our wood supply would last the winter.\n\nOne afternoon, I found myself just standing on the front porch, looking out on the leaves covering my yard. It was actually something I was not used to, both my childhood home and my rental house not surrounded by trees, at least anything but pine, birch, and swamp maple. I hadn't really paid much attention to the lawn since coming here, too focused on other things or simply not seeing the point in getting nitpicky, though something was nagging at me to rake the leaves. \n\nMaybe in the spring, I could start a vegetable garden to help cushion our food expenses, as well as teach the girls responsibility. I could gather up all the leaves into a compost pile. I had promised myself I would get as much done as possible once the weather cooled down, so I might as well keep myself busy. \n\nThe weekend arrived, and I bought three cheap rakes. The girls and I were once again standing in front of the house, me facing them like a staff sergeant examining two new recruits. As usual, they were naked, Sonja smiling with her never-ending reservoir of canine joy, and Momo scowling from the knowledge that she was going to have to exert effort.\n\n\"Girls, today, we are going to rake the yard. We are going to gather all of the leaves into one big pile. This is going to be an ongoing project, we'll do it every weekend until the leaves stop falling.\"\n\n\"Masteeeeer, Momo doesn't want to do thaaaaaat.\"\n\nWhen she was still a cat, she would whine with that same tone whenever she was hungry. \n\n\"Momo, this is important. We're going to grow plants in the summer and these leaves will help. Besides, when we're done today, I'll show you something really fun to do. It won't take long. Now, when you're raking, I want the two of you to avoid any spots with animal crap. Your noses are way better than mine, so just watch out and ignore any leaves that are dirty.\"\n\nI handed them the rakes and we started working, scattering around the house to take care of different areas. Momo was silent as she raked, her feline laziness slowing all of her movements. Sonja, of course, was having the time of her life, even singing some kind of gibberish. The leaves had just started to fall, but there were so many trees around my house that I was almost wading through the downed foliage. Regardless, we got it done, grouping all the small piles together into one giant pile, about the size of the woodshed. ",
        "\"Good work, girls. We'll take a break and then start stuffing the leaves into trash bags for compost. But before we do that, we can play for a bit.\"\n\n\"Momo prefers to play inside.\"\n\n\"Not that kind of play. Just watch.\"\n\nI walked to the end of the yard, turned around, and sprinted past the girls before jumping into the leaf pile. I was swallowed up, sinking into an ocean of orange leaves, every breath more autumn-y than a white girl with a pumpkin spice latte and UGG boots. Man, I haven't done that since I was a little kid. The nostalgia was overwhelming. Good thing I had asked the girls to avoid raking any leaves near animal crap.\n\n\"MASTER! MASTER!\"\n\nThe girls were screaming in terror, thinking I had vanished from the universe. Once again, they proved that they were still animals. I poked my head out of the pile and looked at them as if from a hot tub.\n\n\"Come on in.\"\n\nThey looked at me in uncertainty. Were Sonja still a golden doodle, she would probably be circling the pile and barking at it to let me go.\n\n\"Girls, it's just a pile of leaves. Run over and jump in.\"\n\nThey looked at each other, still unsure of what to do. Sonja managed to gather her courage, starting a cautious run to my position. Buck naked with tits bouncing, she charged across the lawn and jumped, disappearing into the pile just as I had. She stayed submerged for a few seconds then burst up, throwing leaves into the air.\n\n\"YAY!\"\n\nShe then dove back down, writhing and twisting in the pile like a husky savoring the last pile of snow in spring.\n\n\"See, Momo? We're having fun. Come and join us.\"\n\nMomo gingerly strode over, taking her time. Still a cat at heart, she leaned over the pile as much as she could without touching it, her nose twitching as she sniffed the leaves. She began petting the leaves as if looking for something, the same way a cat would check a surface before jumping on it. Deciding to give her a little push (or technically a pull), I grabbed her hand and sent her falling into the pile. \n\n\"ROWR!\"\n\nSwallowed up by the leaves, she let loose a cry of shock and flailed her limbs as if she was drowning. I reached into the foliage, wrapped my arm around her, and pulled her into the surface, her hair filled with debris. \"You're such a drama queen.\"\n\nShe wrangled herself out of my embrace and crawled over to the side, trying to find someplace comfortable. We were a good two feet off the ground, sitting on this leafy mattress, and the uneven platform and poor footing did not agree with her. Beside us, Sonja jumped out of the pile and ran to the end of the yard. Turning around, she sprinted back and leaped into the pile, cheering in happiness with a big goofy grin on her face. Diving under the leaves, she surfaced on the other side and repeated the run. Momo finally found an even spot in the pile and curled up, trying to keep warm in the sun.\n\n\"Are you sure you don't want to play like Sonja?\" I asked.\n\nMomo rolled onto her back and closed her eyes. \"Nah.\"\n\nSeeing her lying there in the leaves, completely naked with the sun shining on her breasts, I was starting to get aroused. If Momo wasn't in the mood for fun, I would just have to get her in the mood. I reached out and started playing with her labia, making her squirm. She wouldn't be able to fall asleep if I kept this up. I toyed with the plump lips, pinching them between my fingers or just tickling them with soft strokes. She began to moan and roll from side to side, neither resisting nor going along with it. Once the stimulation made her wet, I was able to slip my fingers inside her. She spread her legs, at last getting into the mood. I continued fingering her, palm facing upwards, simply brushing up on the fundamentals. Her pussy greedily enveloped my fingers, as if trying to bite them off, her soft insides just begging for further stimulation. Her moans grew in volume and I knew she was ready. \n\nI unzipped my pants and whipped out my cock, then grabbed Momo by the ankles and pulled her over to me. She finally opened her eyes as I forced myself inside her. She released a shrill whine of bliss as I began to move, diving into her confines with deep strokes. Her legs were in the air, her toes curled, and her breasts were jiggling with every movement. I didn't bother trying to hold myself back and simply emptied everything I had into her. Momo purred as she felt me flood her pussy with my seed, and I pulled out, leaving her with a foamy creampie.\n\nAs I returned my snake to its den, Sonja dove into the leaves for the umpteenth time. \"Hey, Sonja.\"\n\nHer head perked up. \"Master?\"\n\nA big smile on my face, I grabbed a handful of leaves and threw them at her. Hit with a leafy bukkake, Sonja laughed and retaliated, gathering up a pile of leaves and throwing them at me. She missed, hitting Momo instead. Of course, Momo shot back, hurling a bundle at Sonja, who managed to hit me with her second shot. Back and forth, we engaged in our leaf battle, enjoying the rest of the day.\n\n----------------------------------------\n\nAs the sun began to set, we hurried with the second part of the composting. We gathered all the leaves together and stuffed them into black trash bags, perforated to let air and moisture through. After adding some water and shovelfuls of dirt to provide the microorganisms, we tied up the bags and left them in a nice sunny spot to cook. Next week we would repeat the whole process, and hopefully, we would have plenty of good fertilizer by next summer.\n\n----------------------------------------\n\nIt was an average morning; I was getting ready for work, Momo was dozing on the couch after eating her breakfast, and Sonja had gone out, her restlessness trumping the cold.\n\nAs I was filling up my travel mug, the door swung open and Sonja rushed in. \"MASTER! MASTER!\"\n\n\"What is it? Did you find another squirrel?\"\n\n\"No, there's someone in the shed!\"\n\nPart 4 will be up next week! Please comment! "
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "romance",
        "comedy",
        "cute",
        "bisexual",
        "animal girl",
        "neko"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-03"
}