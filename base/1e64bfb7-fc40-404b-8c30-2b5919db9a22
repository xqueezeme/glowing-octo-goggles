{
    "title": "The Choosing Ch. 08",
    "pages": [
        "She would not meet my eyes. I brought her back into the shelter of the cave until the worst of the rain had passed. I felt her eyes upon me as I searched Bandar's satchel for dry clothes. Each time I turned in her direction she shifted her gaze\u2014afraid of me.\n\nI too had cold fear chilling in my veins, not at what I had done but at what I had discovered in Bandar's belongings. The leather satchel held bindings, knives and instruments that I could not name but I knew to fear. Sharp, ugly\u2014made for pain. There was food and several changes of clothes. He had planned to stay for some time. To torture us perhaps for days.\n\nSadistic and insane\u2014and yet she feared me.\n\nI dressed quickly in Bandar's clothes, using the binding from his satchel to fashion a belt. I tied it off with shaking hands. \"As soon as the worst of the rain has passed we'll leave.\"\n\nShe nodded. Her face turned from me. I bundled up Bandar's belongings, binding the satchel flap twice, just to keep my hands busy. \"Leia, you need not fear me.\"\n\nTears swam in the fear filled eyes that finally met mine. \"I know sister that you would never seek to hurt me, but the lightening...it came from your hands...it burnt, it...\" She shook her head, unable to finish her sentence.\n\nI swallowed hard and pulled the satchel up onto my shoulder. \"I'll check outside, we'll leave soon.\"\n\n\"To Askel? Should we go...\"\n\n\"No!\" She jumped at my shout.\n\nShe feared me but not Askel? That thought stung like a slap. The one responsible for bringing me to Bandar. I cleared my throat. \"Askel cannot save us sister. He is part of the problem.\"\n\n\"He would not hurt me.\"\n\n\"No I do not think he would hurt you, but he would use you to get to me. I can't risk it Leia.\"\n\n\"All right.\" She nodded and squared her slight shoulders. \"We'll go then. Wherever you say.\"\n\nShe did not sound so certain, but her words gave me some comfort. \"Thank you.\"\n\n\"Where shall we go?\"\n\nIt wasn't until she asked that my decision was made. \"The Night Palace.\"\n\n\"To the Dark Masters? But...\"\n\n\"To the Dark Prince and his son. We shall seek refuge there.\"\n\n\"Will you willingly tether to him?\"\n\n\"I'll tether to no one sister. We shall not mention it again. There is no need for the Master's to learn of the tethering.\"\n\n\"Askel said if you...\"\n\nI raised a hand and cut her off. She flinched again, cowering like a dog hit once too often. I lowered my hand to my side and clenched it in a tight fist. \"Askel said many things. What I say goes now. We'll not mention the tethering again. I can no longer hear the rain. Come let's go.\"\n\n* * * *\n\nI kept a brutal pace. Leia struggled, but kept it with me. Her breathing labored at times, I slowed but she shook her head and pushed on. Before the evening started to fall we paused to rest. It was the third such night we had done so. The cold dropped quickly like an icy shroud, I made a shelter but did not risk a fire.\n\nLeia huddled beneath the rounded hut I had fashioned out of tree branches. Autumn stripped, the low lying branches were fairly easy to break from the trees. I bent them into an arch, weaving them together for strength. As soon as I had the basic structure I shepherded Leia inside. I continued to cover the frame with branches and vines for insulation. The night was bound to be cold.\n\n\"How do you know the way sister?\" Leia spoke slowly, wheezing in breath between each word. The sound made me cringe.\n\n\"To the Night Palace?\"\n\nShe nodded.\n\n\"When we fled from the Palace Hatha taught me how to navigate.\"\n\n\"Your handmaiden?\"\n\nI started to nod and then shook my head. \"No, my friend. My guide.\"\n\nShe coughed, it shook her whole slight body.\n\nI crouched down. I had avoided this for days but it seemed I could do it no longer. \"Leia.\" She looked up at me with big deep blue eyes. \"You are sheltered well here. I need to leave you now. You need wortroot. I'll go now before it is too dark and find some. I'll brew it for you. Your cough will ease.\"\n\nShe grabbed my arm as I tried to stand. \"Be safe sister.\"\n\nI stroked a hand across her spun gold hair smoothing it down. \"I will sister.\"\n\nBefore I left I camouflaged the shelter with leaves. If she could tamp down her cough she would be well hidden.\n\nWe had passed a stream not a mile back. If I searched I would find the wortroot there, hidden between the damp rocks. I cursed myself that I had not thought to stopand collect some when we passed.\n\nIt was not as easy as I thought to find the root and by the time I had made my way back to camp with the meager offerings I had collected darkness had fallen. The copse I had secreted my sister in was silent. I called out softly as not to scare her with my approach. I heard nothing in return. I called out once more, louder this time. Nothing again.\n\nI broke into a run. I tore apart the shelter, scratching my arms on the twigs and branches as I cleared away the cuttings.\n\nShe was gone.\n\nGone.\n\n\"Talia.\" The voice deep and warm blanketed me in heat as it filled me with fear.\n\nRoth.\n\nI had expected to see him\u2014I was on my way to beg his protection for my sister\u2014but on my terms, not deep in the forest with him holding my sister. I spun around meeting his black eyes with shoulders squared for battle.\n\nHe smiled. The corner of his beautiful mouth hooked up in bemusement.\n\n\"Where is the girl who sheltered here?\" I did not name her sister in the hope that perhaps he had not made the connection.\n\n\"Your sister?\"\n\nI cursed, slumping my shoulders. \"Yes. My sister.\"\n\n\"She is safe.\"\n\n\"I am to trust you?\"\n\nHe took a step towards me. A wave of heat came with his movement. My knees gave slightly. \"Have I lied to you my Chosen?\"\n\nI planted my legs, standing stiff and swallowed hard. \"By omission Master, yes, you have.\"\n\nHe laughed. A rich sound that rolled over my skin. \"By omission. What exactly have I omitted my Chosen?\"\n\nIt was now or never. I had no more artifice, no strength for subterfuge. So I spoke the truth. \"That I am The Vessel. That you wished to use me to bolster your forces against the Queen.\"\n\nHe inclined his head, his hip cocking slightly forward as he did. \"You speak treason my Chosen. Tread carefully.\"\n\nMy heart pounded, thumping up to my throat. \"Where is my sister?\"\n\n\"Safe.\"\n\n\"With who? She needs medicine.\" I held up the wortroot still clutched in my fist. \"She is frail.\"\n\n\"She is safe little warrior. She is safe.\"\n\nThe tether mark began to make time with my heartbeat, throbbing under the bandage. I raised at hand to press against the hurt and quickly thought better of it, dropping it down to my side.\n\n\"How did you find me?\"\n\n\"How did you come to be here?\"\n\nNeither of us answered. We stood staring, daring each other to break. The tether mark hammered as if freshly beaten into my skin. It could sense him. Feel his power and yearned to harness to it.\n\n\"Talia. My Chosen.\" He stepped forward, gliding with his Master's grace. \"I can help you.\"\n\nI shook my head. On my terms. I wanted to come to him on my terms, not be rescued like some hapless maiden.\n\n\"Stubborn,\" he murmured taking my chin in his fingers. \"So stubborn.\"\n\nHe brought his lips to mine. A blast of heat. A surge of power sparked like that of the lightening strike. White hot. The smell of burning light filled the air. I could smell it, taste it on his lips.\n\nHe felt it too. \"What have you done?\" he asked, drawing back to look into my eyes.\n\n\"What I had to,\" I whispered.\n\nHe asked no more, simply nodded and drew back from me. \"Come. I will take you to your sister.\"\n\nI followed him without question. Tired. Too tired to fight.\n\nFour tents stood in a small clearing ten minutes walk from where Roth had found me. He had not come alone, three Vandarran Guard were waiting a respectful distance from our reunion. They circled behind me, acting as a walking prison cell.\n\nLeia was seated at a fire. Clean and dressed in new clothes, she drank from a metal cup, carefully sipping the steaming contents. As soon as she saw me she threw the cup with complete disregard and ran to me. My heart swelled to bursting at the sight. There was not fear in her eyes, only relief that I was all right.\n\n\"Talia.\" She threw her slight arms around my waist and nestled her head against my chest.\n\n\"Shhhh, Leia. It's all right. It's all right.\" I pushed her away so I could check her over. \"You've been treated well?\" I asked as I looked from head to foot checking for evidence of maltreatment.\n\n\"I'm good. Better than good. A handmaiden gave me a tonic. Listen, I'm breathing better than I have had for days. Weeks even.\"\n\nShe breathed in deep and I was surprised to hear no wheeze. \"That's wonderful, who helped....\"\n\nBehind Leia came Hatha. I moved to embrace her and then noticed her face. It was bruised from forehead to chin. A swollen streak of purple black skin. I turned on Roth, stalking forward to point my finger in the center of his chest.\n\n\"Who did this? Who harmed Hatha? Was it you? Did you dare? Dare touch her!\" My voice lowered, resonating in a powerful bass. Anger coursed, hot and heavy. Roth looked surprised; he stepped back, looking at me with a mix of horror and fascination.   \"Did you? Did YOU?\"\n\nIt was Hatha who stopped me. The calm press of her hand to my cheek and the soothing croon of her murmured hum in my ears.\n\n\"Calm.\" Was the only word that I made out in her hum. I sank into the comfort, letting the anger seep away with the sound. When I emerged from the angry fugue I saw my finger pointed at Roth's chest and I recoiled in shock. I blushed. A heated flush coursed up my chest to my forehead.\n\n\"Sorry Master,\" I said snatching my hand away from his body. No one ever questioned a Dark Master, let alone poked him.\n\n\"He did not hurt me Mistress,\" Hatha said, \"It was not the Dark Prince.\"\n\n\"Oh.\" I felt a flush of shame at the accusation. \"Please, Master, forgive me.\"\n\nHe laughed as he so often had at my breaches of propriety. \"Oh, little warrior, you have many tricks don't you? How quick you are to protect those you love. I will not punish you for that.\" He reached forward and tucked an errant lock of hair behind my ear. \"You love big, don't you My Chosen.\"\n\nHe lowered his lips to mine. No burning this time, just a slow warmth that flowed like warm molasses. Thick and sweet. Drunk from his kiss I was slow to open my eyes and as I did I saw him, standing silver tall and proud behind his father watching us kiss.\n\nNadar.\n\nMy dark angel.\n\nHe met my eyes and quickly looked away. \"Father, the guard has returned from reconnaissance.\"\n\nRoth pulled me closer, pressing his hips against me so that I felt the bulge of his erection. He lowered his mouth to the beat of my pulse. I arched my neck, even knowing that Nadar's eyes were upon me did not stop my craving his father's bite. A fang scraped along the pulsing vein. I sighed. My nipples beaded hard against the soft cotton of Bandar's shirt. When he sank into the vein I cried out, my knees buckled and it was only Roth's hold that kept me from sliding to the forest floor.\n\nMy spine melted to wax as he sucked from my blood. My sex throbbed hot and wet in time with the painful beat of the tether mark. The pain, the pleasure and the suck of his mouth set me off to the first release I had had in almost a week. It rolled gaining momentum as the pain and pleasure grew until I wailed out an orgasm that shook the trees around us.\n\nRoth released me to Hatha's arms. She cradled me as I watched him lick his mouth clean and walk away with Nadar.\n\n\"Oh Hatha, what have I done?\"\n\n\"Shhh Mistress. All will be clearer when we have you clean and fed. Be calm. Let me take care of you.\"\n\nShe cared for me. While I was hale and whole and she bruised and battered. She cared for me. Soft hands removed Bandar's filthy clothing and somehow, through some wondrous magic a hip tub of steaming scented water appeared beside two staked lanterns. Bathing in the woods with Hatha's gentle touch made me feel like a wood nymph. I laughed, scoffed at the thought. What wood nymph could fry a man with her hands?\n\nThe thought of Bandar, ashes at my feet rolled my stomach. I had wanted him dead, needed him dead and yet I could not shake the pain that it was I who had done the deed. What hypocrite did that make me? Happy was I to see Roth strike him down, but not myself? Weak, foolish hypocrite.\n\n\"You think too much Mistress.\"\n\n\"There is much to think about Hatha.\"\n\nI rested my chin upon my knees I had pulled up to my chest. Hatha brushed aside my hair, her fingers skimming the edge of the tether bandage. I heard her sigh.\n\n\"You knew?\"\n\n\"I suspected,\" she said as she carefully peeled back the tattoo covering. \"It will need to be changed.\"\n\n\"What happened Hatha?\"\n\n\"When you dismissed me...\"\n\nI turned, reaching up to grab her forearm. \"I'm sorry. I'm so...\"\n\nShe stilled my hand, gently lowering it back into the tub to rest it on my knees. \"There's no need Mistress. It is done.\" She sighed and continued her story as she peeled away the bandage. I was glad for the soothing sound her voice, the pain was near unbearable. \"I knew that it was wrong that the Mother had called you to the tattoo room. You had not been assessed, your powers not yet catalogued, how could they then be marked upon your skin? I went to seek the Mother and instead found Audhild and Haakon.\"\n\n\"They hurt you?\" Rage spilled out over the pain. My skin grew hot. The water in the tub began to steam with my fury.\n\n\"Calm. Mistress, be calm. I am fine. A little hurt no more. There is no need for this display.\"\n\n\"I can't, I can't control it. I have...Hatha I have...\"\n\nShe placed her hand across my mouth. \"I know. I can smell it on you. The fire. The ash. The death. I know. You are not cruel Mistress. What you did. I know...No! I am sure was done because it was needed.\"\n\nI scrubbed at my skin. \"Will the smell leave me?\"\n\n\"It will, that's why we clean you now. You shall rise from this tub a new woman. Clean and whole.\" Her voice became that of the Hatha I had first met, a woman who would brook no nonsense. \"You will not worry on it again.\"\n\nThe last of the bandage came off, I gasped, exhaling slowly trying to ease the painful throb.\n\n\"The mark is bad. Isn't it?\"\n\nShe did not answer straight away. I knew if I turned my head I would find her, head inclined weighing her words carefully. \"It is not good. Not as bad as I thought. But, yes Mistress it is not good.\"\n\n\"They planned to give me to Malchard.\"\n\n\"I suspected as much. The Queen's power is waning. She fears all, she has descended in solitary madness, she barely leaves her Chambers. Malchard rules as her proxy.\"\n\n\"What would Malchard do with me?\"\n\n\"Feed Beatrix. Give her physical strength and use your powers to feed his greed for more land and power.\"\n\n\"My powers. Like the one that...\" I could not say the words. I did not have to, Hatha replied quickly, \"Yes. That one.\"\n\n\"I don't want to be an instrument of death Hatha.\"\n\n\"We can't always get what we want Mistress. Sometimes we just have to make do with what we have.\"\n\nShe came before me took my hands and drew me up out of the water. She said with a wicked little smile, \"Come, I have a surprise for you.\"\n\nI stepped out of the tub; she toweled me down and draped a fine soft cotton robe across my shoulders. I followed her, with no hope of a surprise that could lift my spirits. What surprise could do that? I was a tethered, broken instrument of death. Feared and desired only for what I could not control. Nothing could ease the lonely ache that consumed me as I carried the burden of that dark knowledge.\n\nShe lead me to a round tent, so lavish it could almost be a permanent structure\u2014no oil cloths for the Dark Prince. A guard opened the flap and I entered. It was bright inside, my eyes took time to adjust from the darkness outside and when they did I saw her.\n\nThe girl. From the bathing chambers.\n\nAn offering.\n\nShe lay splayed on a pallet of rugs and furs. Blonde, curved perfection. So clean, so sweet, my mouth began to water as if she were the finest sweetmeat offered to a starving man.\n\n\"Hatha?\" I questioned, not turning my head away from the sight before me.\n\n\"Mistress Vessel I give you Corina. She has felt the call to be your handmaiden.\" Hatha sounded amused. \"Do you feel it too Mistress?\"\n\nI felt a throb wet and hot between my legs. I felt pain, burning hot and aching at my tether. I felt need, surging hot and heavy in my belly. I wanted. I wanted.\n\nCorina came up on her knees. Her breasts bobbing as she did. Her hair loose about her shoulders flowed down to brush the rosy tips of the pert mounds.\n\n\"Please Mistress. I ache to service you.\" She moved on her knees to me and nestled her sweet mouth between the slit of my robe. Kissing me first she then lay her cheek on of slight swell of my stomach. She circled the softness of her cheek on my skin her moans vibrating against me. I threaded my hand in her hair and she purred, like a kitten well pleased.\n\nI looked up to Hatha as I thrust my hips forward, rocking my mound against the pillow of her cheek. \"Come to me.\"\n\n\"Mistress?\"\n\n\"I want you. Come to me.\" I heard the compulsion in my tone. Low it sounded like the sweet deep pluck of harp strings. She came, uncertainty in her eyes. I clasped the back of her head as soon as she was close enough to touch and brought her mouth to mine. She groaned at my lips, a sound that charged through me, sparked like the crack of the lightening.\n\nI widened my stance and with the hand still threaded in Corina's hair I brought her lips to my mound. Her sweet tongue lapped with exquisite precision. It would not take long. I wanted, no, needed this first release, quick hard and fast so that I could concentrate on what I truly wanted.\n\nHatha's pleasure.\n\nI wanted her moans. Her begging gasps for release. I wanted the taste of her cum on lips, on my fingers, coated on my tongue.\n\nCorina's clever mouth rocked me quickly to orgasm. She cried out in pleasure as I spurted on her lips, it took both hands to remove her hungry mouth from my mound. She would not have stopped had I not pulled her away.\n\n\"Later,\" I murmured lovingly stroking her young flushed cheek\n\nHatha stood beside me, chest heaving as she recovered from the ferocity of my lips. She backed away but I shook my head. I was not yet done.\n\n\"Strip her,\" I ordered Corina who stood, and like the compliant little handmaided she was went quickly to work on Hatha's clothes.\n\n\"Mistress,\" Hatha protested, attempting to bat away Corina's nimble fingers.\n\n\"You are mine. Pledged to me Hatha. Mine to take. Mine to pleasure.\"\n\nCorina had opened her bodice, it gaped revealing the large round circles of her areola dark deep pink beneath her sheer chemise. \"It is not necessary, truly Mistress.\"\n\n\"Oh.\" I took a step forward, rocking my hips as I stalked towards her. \"It is so very necessary.\"\n\nI watched with hungry eyes as Corina knelt to remove the skirt revealing Hatha's lush body. Curved and strong she stood naked and tattooed before me.\n\n\"Gorgeous,\" I sighed.\n\nShe shook her head. I came to place a finger at the centre of her chest. \"You do not get to say. I am the Vessel. I am the one who gets to say and I say gorgeous.\" I trailed the finger down her stomach, circling her belly button and then down to the naked lips of her sex. She had no hair there. Who shaved Hatha? A vision of being on my knees with a straight razor at Hatha's spread pussy lips sent a surge of wet heat to my own.\n\nI cupped the damp heat of her sex rocking the base of my palm hard against her clitoris. She rocked back, seeking the pleasure, unable to stop herself. She sank against me, lowering her head to my shoulder.\n\n\"No Hatha.\"\n\nShe looked up.\n\n\"I will see your face as you come. I will see your eyes as I take you over.\" I kissed her gently, sucking in her bottom lip, releasing it with an audible pop. She shuddered before me.",
        "I had not pleasured many women\u2014only Corina who had ridden my face during the magic of spell. I was uncertain of what to do, I played between the soaked lips of her sex, watching her face intently as I did. Each time I made her gasp I repeated the action. Over and over I slid my finger just to hear that sweet gasp. She shuddered at my touch, moaning, her eyes flickering closed a moment and then locking on mine once more.\n\nI saw the very moment she went over, the second she lost herself to her release. The release I gave her. Her pupils dilated,\u2014wide and dark\u2014as the syrup of her orgasm clenched and gushed on my hand.\n\nI brought the release to my lips, licking clean the fingers that had made her come. Corina who still knelt at my side was the one to catch her as her knees buckled, easing her down onto the soft fur of the rug.\n\n\"Mistress,\" she sighed, reaching up to cup my chin as I came to kneel beside her.\n\n\"I have not yet finished my friend.\" I kissed her deep and long, the taste of her cum mingling on our tongues. I cupped a breast, kneading the soft weight before pinching the pearled tip of her nipple.\n\n\"Mistress. Mistress. Mistress.\"\n\nI ignored Corina, lost too lost in the taste of my Hatha to break free.\n\n\"Mistress, the Prince!\"\n\nI looked up expecting to see Roth, instead finding the silver gaze of Nadar upon me. His eyes flicked between the splayed form of Hatha and my swollen lips. He cleared his throat, such a strangely human sound to come from one who looked so otherworldly. \"The Dark Prince seeks you. There is a War Council. You are needed.\"\n\nI pulled myself up on my knees. I drew back my shoulders and nodded regally, as if my face was not slick with the juice of my lover and my breasts bared to all. \"Then I shall find him. Give me a moment to dress and I will follow you.\"\n\nHe too sounded stilted and formal. \"Take all the time you need Mistress Vessel. I'll leave a guard to escort you.\"\n\nAnd without leaving me a chance to protest he left. Sweeping the flap of the tent closed with a thump as he did. It was hard to slam the door of a tent, but that's just what Nadar had done.\n\nHe was not happy and I was about to join him\u2014as the instrument of burning death\u2014and his father at some kind of War Council. I looked down at the flushed face of Hatha, she shot me a knowing look. My brief interlude was over. There was no more time for pleasure.\n\n<br /> * * * *\n\nThe War Council was held at Roth's tent. Not surprisingly it was three times the size of my own. As the guards drew back the tent flap to let me in I saw Roth, Nadar, Astrid and Valco. Two others, both men also sat at the table. I knew neither their names nor their faces.\n\nI barely listened as Roth introduced his Generals to me; I had eyes alone for Nadar, who had yet to look in my direction.\n\n\"Why is she here?\" Astrid asked as I took my seat.\n\n\"We need her,\" Roth answered.\n\n\"Yes Sire we do, but should she sit here amongst us?\" Astrid looked so incredulous at the thought of me joining her at the table that I snapped, \"Should I sit on the floor then Astrid? Like a pet dog?\"\n\nAstrid rose to the bait. \"That would do fine. You are little more than a pet. Chosen.\"\n\n\"Enough!\" Roth did not yell but his tone was harsh enough for us all to understand the argument was now over. \"She stays because I say so.\"\n\n\"Yes Sire,\" Astrid demurred with a deferential nod of her head.\n\n\"With no further interruption.\" Roth gave a pointed glance at Astrid. \"We begin. He nodded down the table. \"Report.\"\n\nThe uniformed General at the end of the table rose to speak. \"The prisoner has offered no further information. He is stronger than he looks.\"\n\nPrisoner?\n\n\"Bring him forth to me now. Let's see how strong he is at the hands of a Master.\"\n\nTwo of the guard flanking the table left to get the prisoner. The man at the end continued his report, talking of troop numbers in provinces that I had never heard of, I only half listened, watching Nadar instead.\n\nHe was intractable. His face a mask of intent calm. Despite my attempt to get his attention he remained fixed upon the proceedings.\n\nLight danced from the guards' lanterns as they reentered the tent. Shadows cast on the canvas walls opposite of a man dragged on his knees. I shifted in my seat to look as Roth stood and strode over to the prisoner.\n\nA flash of blond was all I saw as Roth dragged the prisoner to his feet. He held him up in one hand as if he were the weight of an infant and bared his teeth. His fangs descended and his face became a chilling mask of pain.\n\nIf it wasn't for the grin I would never have recognized him. His face was so badly battered it resembled a side of beef more than the fresh young beauty of a teenage Sarran.\n\n\"Askel!\" I jumped to my feet and ran to him. I was faster than the guards and had my hand at his arm before they dragged me back.\n\nI batted away their hands. \"Release him. Release him at once.\"\n\nAstrid joined the guards holding me back. She stabbed a finger at me and then towards Askel. \"See why she should not be here. She worries for this Sarran pig when if she were truly loyal she would join us in his torture and get the information we need.\"\n\n\"Torture? You will not. You will NOT torture him.\" The glassware on the council table shook with the force of my voice.\n\nRoth dropped Askel and the young Sarran crumpled in a heap at his boots. Fangs still pointing over his snarling mouth, he turned to me. He did not speak, instead he stared at me. I watched the rise and fall of his chest, unable to meet his black eyes.\n\n\"You do as she demands? Is she in charge now?\" Astrid tried to reach me but was held back by her brother.\n\n\"Forgive her Sire. She still suffers from what happened to our Mother.\"\n\n\"What happened?\" I asked.\n\nValco looked at me. \"We lost her at the hands of Lord Malchard after she refused to divulge our whereabouts.\" His head dropped down. \"We are told it took a week for her to die.\"\n\nI shook my head, incredulous. \"She was tortured? Tortured to death and you do this now to him? What makes you any better than Malchard? Any of you who stand by and watch this happen. Let this happen.\" I directed the last of my words to Nadar who was still seated at the War Council table. He briefly met my angry glare and then looked away.\n\n\"Who is this Sarran to you?\" Roth asked, his fangs had receded and he seemed calm. The cool indifference of his features worried me more than his snarl. \"We found him with the seal of the Queen. With her consent to enter the Palace. Who is he?\"\n\nI did not know how to answer. If I told the truth there was no way Roth would stop hurting. If I admitted what Askel had done Roth would kill him. I did not get a chance to answer. From swollen, blood cracked lips of Askel came the answer I had been unable to give. \"I took her from the Sarran. Abducted her from the Coven Keep to give to Lord Malchard.\"\n\n\"You what?\" Roth's rage was low and vicious. His face did not change, no outward sign did he give of his fury but the anger pouring from him was palpable. I could taste it like the cold bite of metal.\n\n\"I took the Vessel to her Uncle and cousin; they had the links to take her to Malchard for Beatrix.\"\n\nRoth had Askel's shirt held in his fist in the blink of an eye. \"What did Beatrix want with my Chosen?\"\n\nI was not certain until that point that Roth did not know of my tethering mark. He would never have asked such a question if he knew. Askel knew it too. He looked at me. Held tight in Roth's grip he swung like a marionette as his bruised face tried to turn to mine.\n\n\"Look at me,\" Roth hissed, but Askel refused to heed his words and turned to face me. I saw the question in his swollen eyes. I answered with an almost imperceptible shake of my head.\n\nAskel turned back to face Roth. \"I do not know.\"\n\n\"He lies. He lies.\" Astrid came forward, struggling free of the guards who held her to plant a vicious kick at Askels legs. \" He knows. He is in league with the Sarran bitch. Kill him.\"\n\n\"No. No don't. Please Master.\" I fell to my knees. It was the first time I had willingly done so for Roth. He dropped Askel, letting him fall to the packed earth floor with a thump.\n\n\"You beg for his life my chosen? Why? As I heard him just confess to abducting you I must admit I find your pleas for mercy most confusing.\"\n\nI came up to my feet and stepped forward. \"Yes, he did take me from the Sarran with the knowledge that I was to be delivered to Beatrix, but he did so to bargain for the freedom of his people. It was foolish. It was wrong, but I find it hard to judge him for his motives. He was good to me. Never cruel and my sister...\"\n\nAskel broke in, \"Leia. How fares she? Is she well?\"\n\nI smiled down at him. \"She is well. Better than well. My handmaiden has eased her cough. She breathes easily.\"\n\n\"I'm so pleased. So pleased to hear that Mistress.\" He smiled. Bruised and battered, in fear of his life, his first thought was to the welfare of my sister, and myself. He had not revealed the tether mark. He could have sought to barter his freedom with such information. Instead he protected me.\n\n\"Oh, this is all so touching my Prince, shall I call for tea and cakes?\" Astrid's voice dripped with sarcasm. She moved to kick Askel once more. I caught her foot before she did and pulled her off balance. She toppled to the ground.\n\n\"You bitch. You dare!\" Astrid did not get the chance to rise. A nod from Roth to the guards had them surrounding me in the blink of an eye. As Roth took a menacing step towards her, I reached through the phalanx of my guards to grab his arm. He turned to me. I mouthed, \"Mercy.\"\n\nHe stared at me for some time before finally nodding and moving to stand before the prostrate Astrid. He looked over the top of her, directing his words to her brother, \"Valco, control your sister.\" Valco nodded and Roth looked down at Astrid. \"Take your seat now Astrid. See how I show you mercy? Remember this. Do not speak again or you will regret it. Make a move on my Chosen once more and you will leave without your hands. Do you understand?\"\n\nAstrid, released from the fog of her anger, realized the mistake she had just made. On her knees she bowed so low her forehead scraped the dirt. \"Forgive me my Prince. Forgive me.\"\n\nValco came behind to help her up. He dragged her up against him. She rested her head on his chest a moment before taking his arm to walk back to the table. I had a brief stab of envy at their mutual comfort and then chided myself for such an indulgence.\n\n\"Remove the prisoner.\"\n\nI was still closeted in the circle of guards, their arms held out in defensive position. I batted away their hands and tried to get to Askel. \"Where? Where will he go?\"\n\nNo one answered me and as Askel was taken from the tent I repeated, \"Where has he gone?\"\n\nRoth still did not answer me, moving to sit back at the head of the table. I too went back to my place but did not sit \"Where do you take the prisoner Master? Will he be safe?\"\n\n\"I will not have him killed.\"\n\n\"Not killed? Will he be hurt? Will you let my sister tend him?\"\n\n\"Enough Chosen. Be seated.\"\n\nI did not sit. Roth did not answer my questions. We remained locked, two stubborn souls staring, waiting for the other to concede. \"Sire, please.\"\n\nNadar ended the standoff. \"Talia, he will be safe. I will take Leia to him later.\"\n\nI looked at Roth to check if Nadar's words were true. He gave a slight nod. I sat.\n\n\"Sire,\" Valco spoke, his hand laying gently on his sister's arm. \"While Astrid did not comport herself well, I must also add my concerns for the Vessel's loyalty. Her affection for the Sarran is not a good sign.\"\n\n\"It is a perfect sign.\" It was Nadar, not Roth who answered Valco. \"The Vessel was never meant to be a tool. She was always a balance. A voice of reason, of truth of integrity. I think we have seen that today, have we not Father?\"\n\n\"We have seen enough,\" Roth answered cryptically. Nadar's words seemed to end the meeting. \"The Council is dismissed.\"\n\nI watched open mouthed as Roth left the room with his guard and the two Generals from the end of the table.\n\n* * * *\n\nWhen I returned to my tent I was surprised to find Hatha waiting for me, fresh faced and clear of all bruising.\n\n\"Hatha...your face?\"\n\nShe smiled. \"I think we can add instrument of healing to your repertoire Mistress.\"\n\nI stroked a finger in wonder across the smooth skin. \"Askel,\" I whispered.\n\n\"Askel? What of him?\" Hatha said with a frown.\n\n\"He is here. Badly beaten. Close to death I suspect. I just stopped Roth from killing him.\"\n\n\"Why?\" Hatha's stern face reminded me of the menacing bat I had once thought her to be.\n\nI laughed. \"I stopped him because it is not right. And you know it. Askel was just a foolish boy Hatha. A tool of Haakon and Audhild. He does not deserve to die for it. He kept Leia safe from Bandar. I owe him his life for that.\"\n\n\"Fine then. Let him have his life, but stay in pain.\"\n\nI laughed again. \"Oh you are an angel of mercy aren't you my handmaiden?\" I took her in a hug.\n\nI was holding her to me, kissing her newly healed cheek when I heard Nadar's voice from the door. \"Oh, I'm sorry, I'm interrupting, I didn't realize...\"\n\nHe was blushing. He held a lantern at his chest and I could see the bright flush of embarrassment on his pale face. I released Hatha, who gave me a slight nod and shifted to the door to slip past Nadar.\n\n\"You're not interrupting. Please. Come in.\"\n\nHe entered, placing the lantern on a stool beside the opening of the tent. I motioned to the pallet of rugs. \"I've nowhere to sit, but we could, if you wanted...\"\n\n\"It's fine. Yes. I'll...\"\n\nI sat down. He broke off his stuttered polite sentence and sat opposite me, cross legged. The soft leather of his breeches stretching tight across his muscled thighs. We stared at each other, neither speaking. I drank him in, from the soft fall of his silver mane down to the supple leather of his black boots. Everywhere but his eyes. I did not risk falling into those silver rimmed pools.\n\n\"Did you have a message from Roth?\" I suddenly asked, desperate for this awkward meeting to be over. It was of course the wrong thing to say. He stiffened, his shoulders jerking and tensing. I briefly looked up and saw the anger and hurt etched on his face.. \"Nadar, I did not mean...\" I broke off and looked away.\n\n\"I know. Talia.\" He sighed. \"I know you are for my Father. I know this.\"\n\nIt was the wrong thing for him to say. I bristled at the assumption. \"I am for myself. No one else Nadar. I will make my own choices.\"\n\n\"Will you?\" The soft yearning of his voice compelled me to turn to him and at once I was lost in those eyes.\n\n\"Nadar...\n\nHe was up on his knees and leaning over me before I could speak. Not that I knew what I was going to say. There was something about him that dissolved my conscious thought, that removed the world and filled me only with him. His mouth came over mine and his hand cradled the back of my head. Before he kissed me he just looked, looked at me with such wonder and reverence that I thought my heart would melt and seep out through my skin.\n\n\"I am lost,\" he murmured, \"Lost.\"\n\nI was lost with him, the moment his lips slid over mine. No burning heat, no magic in this kiss, just comfort, warm deep comfort. I felt as if I had known him for all time, as if we had kissed for centuries. His taste I had always known. It was mapped in my blood, in the tracks of my veins.\n\n\"Talia,\" his lips played my name like a revelation.\n\nDissipated I sank. I felt myself dissolve, melt down to the rug to lay beneath his hard body. He rocked against me. Hard against soft. Stiff against wet. I spread my legs. The soft fabric of my skirts riding up my calves with each thrust of his hips. I was close, close to release when he backed away. I felt the loss of his body like a blast of cold air.\n\n\"Nadar?\" I pulled myself up on one elbow, rolling on my side to look at him as he backed away in a crouch.\n\n\"I came to talk. Just to talk to you.\"\n\nI cleared my throat. \"Then talk.\"\n\n\"You are The Vessel.\"\n\nI nodded.\n\n\"You are my father's Chosen.\"\n\nI nodded again.\n\n\"You were on your way to the Night Palace when you were found. Were you going back to him? Will you submit to him? Will you become a Vandarran Vessel?\"\n\n\"Do you ask? Or do you ask for your father?\"\n\n\"Does it matter?\"\n\nIt did. We both knew it did.\n\n\"You have no choice but to submit.\" It seemed to me that he spoke not to convince me, but himself.\n\n\"What do you want Nadar? What do you want with me?\"\n\n\"I want a free Vessel. My mother gave up her power for love. I cannot ask that of another.\" He shook his head. \"I will not claim that of another.\"\n\nClaim? Did he wish to claim me? Joy and fear struck in equal parts. \"Does it have to be that way?\"\n\n\"It is the Vandarran way.\"\n\nI sat up, shifting forward on my knees to lean into him. \"But you are Sarran too.\"\n\nHe stood. \"Not Sarran enough,\" he said with bitterness. \"I have to go.\" Nadar paused at the tent flap, lantern in hand. \"Askel is housed in the stable tent. Your sister tends him this night. She has asked that you come to them both in the morning.\"\n\n\"Will you take me there?'\n\nHe shook his head and gave a bitter laugh. \"I can take you nowhere. Nowhere.\"\n\nBefore I could ask his meaning he had left. It was only after he had gone and I felt the twinge of my tether mark that I realized I had felt no pain in his presence. I wondered on it, meaning to ask Hatha on her return, but instead lost the battle with exhaustion and fell into a deep sleep."
    ],
    "authorname": "darcysweet",
    "tags": [
        "roth",
        "lesbian witch",
        "nadar",
        "vessel",
        "voyeur",
        "sarran",
        "hatha"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-08"
}