{
    "title": "Flower Girl Ch. 07",
    "pages": [
        "Antonio helped Tracy with the bouquet and center pieces she was making for Saturday's wedding. It wasn't a big enough job to warrant calling in \"Antonio's Harem\", made of up his wife and her sisters, but it was a big enough task to keep him and Tracy busy for several hours. Antonio caught on that Tracy must have a boyfriend because of the giant smile that spread across her face every time she looked at her phone. \n\nShe was unusually quiet, humming to herself as she stuck the stems of day lilies into a foam base. \"These lilies are extremely potent!\" Tracy commented. Antonio didn't think so, but he didn't argue with her. \"I don't think I have ever smelt a stronger lily,\" she went on. Antonio could smell them without putting his nose close, but that was always the case with day lilies. \"This is why I never use these lilies for Mrs. Hillson, who by the way, needs another center piece this weekend!\" \n\n\"How's the new guy working out?\" \n\n\"Oh, I think he's going to be great! He was really interested in my resin jewelry and asked if he can make something himself.\" \n\n\"You said okay?\" \n\n\"Of course! I am curious to see what he does. He's an artist, you know. I found him at my old school, recommended by my professor.\" \n\nAntonio took the lilies from her hand and handed her the roses. \"Does he know flowers?\" \n\n\"Not yet, but he's motivated and a quick learner.\" \n\nTracy stopped placing roses and sat down with one hand on her stomach. Had she eaten anything unusual that day? No - just oatmeal and a banana, her typical fare. She did have sushi with William the previous evening. She took a bagel from her lunch box to see if that would help settle her stomach. \n\nAfter finishing up the arrangements, Antonio said goodbye and Tracy got to work on the computer, setting up delivery for the flowers and sending the bride and her mother confirmation emails with photos. She couldn't decide if she was still hungry or queasy, but then a video call from Beth came in. She gave Beth the update on William, the new intern, and how Nana was doing. Beth told her about Charlie and his new tooth that was keeping them both awake at night. \n\nAfter hanging up and processing a few online orders, it was close to six and Tracy felt like she might be ill, so she texted William before she left Petals, \"Feeling kind of sick. Are you okay?\" \n\nAs she gathered her belongings and shut down her computer, William called. \n\n\"Oh, what a pleasant surprise. I thought you'd be busy.\" Tracy answered. \n\n\"Never too busy for you. I am sorry to hear you are not feeling well. What's wrong?\" \n\n\"My stomach is bothering me a bit. Are you okay?\" \n\n\"Yes, I feel great.\" \n\n\"It must just be me, then. Probably caught a virus from a customer or something.\" \n\n\"I'm sorry. Is there anything I can do for you?\" \n\nTracy smiled. \"Oh, I am not too sick to have naughty thoughts about you, Mr. More.\" She laughed. \"There is plenty you can do for me, but I will save those suggestions for tomorrow.\" \n\nWilliam laughed and replied, \"Well my offer is good tomorrow, too. Or any day after that, Kitten.\" \n\nTracy sighed softly into the phone, \"Well, I guess I better just go home and take it easy.\" \n\n\"That sounds like a good idea. Will you call me later?\" William asked. \"I don't want to wake you if you are sleeping.\" \n\n\"You are so sweet. Okay, I will call you later. Bye-bye.\" \n\n\"Goodbye. Feel better.\" \n\n* * * * * \n\nThe next morning, Tracy sat at her desk in stunned silence. She shook her head in disbelief, called Beth, got her answering machine, and had to resort to a text saying \"Call me as soon as you can!\" She sat immobile behind the counter at Petals and didn't even bother checking her email or her phone, just stared straight ahead waiting for Beth. She remained frozen, not really sure how much time passed, but then Beth showed up on a video call. \"What's going on?\" \n\nTracy didn't answer. Instead she held up the pregnancy test so that Beth could see it. Both women stared and neither spoke. Tracy let out a big exhale and said, \"So much for the IUD. It must have come out. Remember how I had that really horrible period after I had it put in?\" \n\n\"I don't . Sorry.\" \n\n\"Well...\" Tracy didn't know what to say. \n\n\"Have you told him?\" \n\n\"No,\" Tracy said firmly, then her voice cracked as she said, \"No, no, no, oh my god, I can't believe I have to ...\" and then she started crying. \n\nBeth put her own face in her hands because it hurt to see her twin cry when she couldn't hug her over the computer. They sat quietly for a few minutes, Tracy silent, but crying and periodically shrugging her shoulders until she could finally speak, \"I felt sick yesterday. I thought it was just something I ate or maybe the flu, but I never actually threw up. This morning I still felt the same way, and on the way to work I decided to just stop and get a test to rule that out. I thought I would just clear my mind and make sure. Beth, I never expected it to be positive!\" \n\n\"Do you think you should take another, just to be sure?\" Beth was grasping at straws. \n\n\"There were two in the pack! I didn't even have to wait for it to change, as soon as I peed on it, the cross came up instantly.\" \n\nBeth took a deep breath herself and said, \"I don't know what to say.\" \n\n\"You don't need to say anything, Beth. Just... don't tell anyone, okay? Not even Mark. Promise?\" \n\n\"You know I won't. I never told him last time.\" \n\nTracy paused before saying, \"I don't know if I can do that again, Beth.\" \n\n\"Well...you don't need to decide today. You need to just sit with this for a while and ...talk to William...\" \n\nBeth watched as Tracy dropped her head back and made an audible groan. Just then a customer walked into Petals and Tracy said, \"I'll call you later,\" and hung up. \n\n* * * * * \n\nWilliam looked around his apartment and decided to leave it just the way it was. In the past, he used to mess up his apartment before someone came over to give it a more lived in look, much the same way most people straightened up their homes when guests were expected. William did not want to draw attention to his orderliness, but he had made the decision to be completely authentic with Tracy. He discovered it was easy with her, and smiled at the memory of lunch with her grandmother as he realized being non-judgmental must be a family trait. Perhaps tonight he would tell Tracy about his own family. Speaking of which, his sister had left a rather urgent sounding message, so William decided to call Kate before Tracy arrived. \n\nKate was having some issues and needed to talk, so when he heard Tracy rap on the door, he asked her to just hold on for a minute and went to answer. \n\n\"Hey Kitten,\" he greeted Tracy with a kiss at the door, \"I'm talking to my sister. Do you mind?\" \n\n\"Oh, of course not. Take your time!\" Tracy whispered and gestured to the book in her hand and took a seat on the couch. \n\nWilliam went back to the phone and said, \"Okay, go on. Yes, Tracy just arrived. No, she is comfortable, go on.\" William smiled at Tracy admiring her long legs crossed on his couch. It was the first time he had seen Tracy wearing shorts and he was getting an eyeful of leg as she had her nose in a book. \n\n\"Oh, really? Oh no, that is awful. I'm sorry, Kate...Well yes, exactly...mmm, hmmm.\" \n\nTracy had a foot bouncing up and down as she was reading and William saw that she was wearing her anklet today. He wanted to touch it, but knew he'd better finish the phone call first. \n\n\"Really? Well, of course...Yes , that is just one of the many reasons I will never have children. ...I know, I know. Well, no I have not changed my mind. Why would I? Those facts remain.\" \n\nWilliam tried to catch Tracy's eye to let her know he was almost done on the phone, but she didn't look up. He assumed it was a very captivating novel. \n\n\"Well, maybe Thanksgiving or Christmas, but definitely not both!...Okay, we'll talk about it...yes, I want you to meet her too. Okay, we will...you too. And give my regards to Frank.\" \n\nWilliam hung up the phone and expected Tracy to look up, but her nose was still in her book. He decided to sit at her feet and have a closer look at that anklet. With Tracy's ankle firmly in his grip, he began kissing the inside, planning to work all the way up. He looked up at Tracy and expected to see her sexy grin as she tried to ignore his affection, but instead he saw that she wore a pained expression and even had tears in her eyes. William immediately stopped and asked, \"What's wrong?\" \n\nTracy shook her head and said, \"I'm not feeling well William. I'm sorry. My stomach has been bothering me.\" \n\n\"Oh, why didn't you say so? I would have come to your place!\" \n\n\"Well, it comes and goes and I thought I was doing better.\" Tracy was still looking at her book and not at him, but William could see her eyes were full of tears that had not spilled over. He sat next to her and took her in his arms and she rested her head on his chest and he could tell by the way her shoulders moved that she was crying. He stroked her hair gently until Tracy excused herself to the bathroom, where she remained for six minutes. When she returned, she looked fine but said she felt horrible. \n\n\"I think I'd better just go home, William.\" \n\n\"You can stay here. I'll take care of you.\" \n\n\"I think I would be more comfortable in my own bed,\" she answered. \n\nWilliam paused before saying, \"Well then, I will escort you home.\" \n\n\"No, no, no, you don't need to do that William. Really, I don't want you to see me get sick or anything. We have not known each other all that long.\" \n\nWilliam felt a sting at the comment, for he thought that they both felt the length of time was transcended by the comfort they felt in each other's presence. But he shrugged it off and attributed it to Tracy feeling ill. She wanted to be strong and independent, but needn't be. \"Well, allow me to at least get you a cab. I can't bear the thought of you taking the subway in your condition.\" \n\nTracy winced, and then agreed. \n\nWilliam walked Tracy downstairs when the cab arrived and insisted on paying the driver, and then asked Tracy to call him when she got home. \"Mind if I just text if I don't feel like talking?\" \n\n\"Of course not.\" \n\nHe felt helpless as he watched the cab drive away, Tracy's head in the back seat not turning to see him wave good bye. \n\n* * * * * \n\nWilliam sat at a table with a beer in front of him waiting for John to show up. He checked his phone, but still no reply from Tracy, just one from John stating \"five minutes\". He waited patiently and did not touch his beer until John finally burst through the door and slid into the booth across from him. \n\n\"Whew. What a day. But a good one! How are you, my friend? I see you already have a drink,\" a cocktail waitress appeared to take John's order. \"So how's everything?\" \n\n\"Everything's good,\" William replied, \"Oh, except Kate is having some issues with her pregnancy. She should be fine, but is put on bed rest, pretty difficult with a toddler about. She said to tell you 'hello', by the way.\" \n\nJohn's face turned earnest as he said, \"It is unfortunate that she can't expect any help from your mother.\" \n\n\"Yes, well...Frank's mother is very helpful to her. How are you anyway?\" \n\n\"Very good. I am going to London on business, so I won't be around next week.\" \n\n\"Ah, you do love London.\" \n\n\"I do,\" John agreed, pausing to nod to the waitress as she put his drink on the table, \"how are things with Tracy?\" \n\n\"Um, good. I mean, it was going extremely well, but she is sick right now so I have barely heard from her these past two days. Some kind of stomach virus, I guess, but she has not been as eager to see me lately.\" \n\n\"Well of course not, William. Nausea? Diarrhea? Not sexy.\" \n\nWilliam smiled, feeling reassured. \"Well we did have another amazing weekend. She wanted to go to an art opening-a friend of hers from school was having a show. You should have seen her, John! She wore a red dress that zipped up the back instead of down. The whole night I starred at that zipper, wondering if it would work its way up higher. In fact, that zipper had more than a few men in a frenzy,\" William laughed at the memory, \"and there were a few women there who know me from the library, including Patricia. Do you remember Patricia?\" \n\n\"I am not quick to forget a woman who wears leather boots up to her thighs.\" \n\n\"Damn, I loved those boots,\" William sighed and John laughed. \n\n\"But not Patricia,\" John remembered. \n\n\"No. She makes a great first impression, but... Patricia was extremely forward, as usual, and very touchy. But Tracy...well, it was quite refreshing to be with a woman who is so confident. Instead of becoming jealous or insecure, she simply watched with a grin on her face until she had seen enough, then she came over and was so witty and charming that it wasn't long until Patricia was flirting with Tracy and I became the wallflower!\" William laughed. \n\n\"That's hot,\" John said. \n\n\"Yes, it was. And Tracy was...well, the whole evening had her in quite a state. She works a room and flirts like mad, but then makes it perfectly clear that we belong to each other and ...well, it felt like hours of foreplay.\" \n\n\"Damn, you are one lucky man. Does she have any friends?\" \n\n\"I told her about your dilemma and she mentioned that she met a woman in her writers group who you will certainly find pleasing to the eyes. She is single and intelligent and does not have the characteristics of a gold digger. She is a teacher, English, in fact.\" \n\n\"A naughty teacher I hope.\" \n\n\"One can hope, John.\" William laughed again. His mood had certainly lifted since meeting with John. He needed a laugh. He missed Tracy, but it wasn't just that she was sick. Her last few texts and emails had been very brief. He really hoped she would feel more like herself soon. \n\n* * * * * \n\nTracy filled her orders and straightened up the shop, sweeping, then mopping, then checking her email again. She had made up her mind, but she was not at peace with her decision. Instead, she distracted herself and stayed busy with work, even making jewelry in her spare time, but the smell of the resin made her nauseous. \n\nBeth video called as she promised, as soon as she got Charlie to sleep. \n\n\"Traaaaaay - Ceeeeee!\" she squealed into the screen, being more jolly and cheerful than the situation called for. \"How are you feeling today?\" \n\n\"Eh. You were right about the crackers. That helps.\" \n\n\"Well? You said you made up your mind?\" \n\n\"Yes. I am having the baby.\" \n\nBeth nodded and starred back at her twin, allowing her to go on. \n\n\"I mean, I just can't go through that again. I can't justify it. Every time I see a six year old child I think, I wonder what my child would have been like ... and I just feel different this time Beth. I can't explain it.\" \n\n\"You don't have to explain to anyone Tracy. This is your choice.\" Beth emphasized the word 'choice'. \n\n\"Yes, well...I suppose it sounds incredibly irresponsible of me, bringing a child into the world without a partner, but...I would not have planned it this way, but I know I can do it.\" \n\n\"Yes, I know you can too. With Nana's help and more help in the shop. Of course you can, Tracy. It won't be easy, but you can do it.\" \n\n\"Yeah...hey, can I see Charlie?\" \n\n\"In a minute. We need to talk about William.\" \n\nTracy made a face like she was irritated to cover her sadness. \n\n\"You have to tell him.\" \n\n\"Actually, I don't, Beth. I don't see any reason why I have to tell him.\" \n\n\"Because he has a right to know and because it's the right thing to do.\" \n\n\"Yeah? Then what? He doesn't want kids, Beth. So what happens next? He goes along with it but resents me? Or he gets pissed and doesn't want anything to do with me? Either way, I lose. But I don't need his help and I don't see any reason to tell him.\" \n\n\"So you are going to break up with him and not tell him the truth?\" \n\n\"Oh, I'm going to tell him the truth. We are incompatible. And he won't know or ever have to feel responsible for this baby.\" \n\n\"But he is responsible, Tracy. You are having his baby. Besides, don't you miss him?\" \n\nTracy didn't answer. Instead she looked up at the ceiling so she wouldn't cry, but she couldn't stop the tears from coming. She grabbed a tissue and dabbed her eyes and took a breath. \"It doesn't matter, Beth. He doesn't want kids and I do, so we were doomed anyway.\" \n\nBeth sat quietly, not sure what to say. \"I'm sorry Tracy.\" \n\nTracy sniffed, wiped her nose and nodded at the screen. \n\nBeth went on, \"But ... well, now Charlie will have a cousin. And you are going to be a great mom and...\" \n\nTracy nodded through her tears. It was a bittersweet concession. \n\n* * * * * \n\nThe pain was physical. William felt like he had been stabbed in the chest and he was hyperventilating. He paced around the room, before rereading the email. He had been so happy to see her name in his inbox, little did he suspect that she would deliver such a swift blow: \n\nHi William, \n\nI know you are probably wondering why I seemed so distant these past few days. I should be having this conversation in person, but I have my reasons. I can't deny the physical chemistry between us, and I am sure that would be a huge factor in my ability to tell you what I need to say. So I have to write it. \n\nIt has become obvious to me that we are incompatible. I know you might wonder why I think this or how I know, and you just have to trust me on this, William. I do know. And I don't like it and it hurts like hell, but I know. \n\nI don't know what else to say, except I really am sure about this and I am going to ask that you respect my wishes and don't contact me. I do find you irresistible, but I don't want to feel worse pain later. \n\nTracy \n\nWilliam couldn't breathe. He couldn't think straight. He texted John, \"Can you come over?\" \n\nJohn didn't ask why, but texted back \"Thirty minutes.\" \n\nWilliam went into his spare room and paced. How could she? Why did she? Fuck, he did not see this coming. Perhaps if they were fighting, if things went on for a while...it didn't make any sense. William gasped, realizing he had not been breathing. He jumped on the treadmill and started counting his steps. By the time John knocked on the door, William had counted six-thousand and forty paces and his heart was broken. \n\nJohn showed up with a baseball glove and William took his own out of the closet and followed him back into the spare room. William had two marks on the floor that were 127' apart, the distance between third and first base, but he liked to start in the middle of the room until his arm warmed up. \n\n\"This is the real reason you bought this place, isn't it?\" John joked, attempting to lighten the mood, but William did not respond. John decided to just return the ball and wait until William was ready to speak. William was counting his throws and when he reached twenty, he paused and quoted the email he had memorized to John. Then he threw the ball again. William had backed up almost to the mark by this time and his throws were coming hard and fast. \n\nJohn didn't count the throws, just caught and returned them, although he could not match William's velocity. The two men were silent and William was distraught. He focused on making each throw hard, fast, and accurate. \n\nFinally, William stopped and walked towards John. \"Thank you for coming over. That helped. I know you are busy and I appreciate you taking the time.\" \n\n\"That's it? Don't you want to talk about this?\" \n\n\"I don't know. Is there anything to talk about?\" \n\n\"Well...yes. First of all, do you know anything you aren't telling me, or were you completely broadsided by that email?\" \n\nWilliam scratched his beard and thought for a moment, trying to attempt an honest appraisal. \"Broadsided.\" \n\nJohn nodded, thoughtfully, \"Women are a mystery, aren't they? Well, I don't know what your plans are, but I think you should talk to her.\" ",
        "William shook his head and quoted the email, \"Respect my wishes and do not contact me.\" \n\nJohn nodded again. This would not be easy given William's experience being on the receiving end of stalking. He paused for a moment, then started thinking aloud, \"There is something incomplete in that email, William. Even I can hear it. She mentioned your chemistry twice, but in the middle some vague notion of incompatibility.\" \n\nThey were back in the main living area and William took two beers out of his fridge. He looked completely calm, but then he spoke. \"I am extremely angry. We have been forthright with each other from the beginning and if there was some concern, she should have spoken to me about it. It feels so incomplete and for her to just cut off communication because she decided...\" William shook his head and took a drink of his beer. \n\n\"You should talk to her.\" \n\nWilliam gave one slow nod in agreement. \"I can't imagine not talking to her again. That feels incredibly unnatural. But I will admit...I am reluctant to hear what she might say.\" \n\n\"Women. They sure do like to complicate things, don't they?\" \n\nWilliam didn't answer, just continued staring into space. \n\n\"Have you eaten? I'll go to your pizza joint if you want.\" \n\nWilliam shook his head. \"I really don't feel like eating. Sorry.\" \n\nJohn nodded and slowly drank his beer. He wished for something witty to say, but he didn't know what. He felt like he was going to miss Tracy too, and he could only imagine what William was feeling, but he couldn't leave his friend in this state. \"Do you want to see if there's a game on?\" \n\n\"John, you don't need to stay. I know you are busy.\" \n\n\"Nah, not at all.\" John sat down on the couch and took the remote and found a baseball game and William slumped on the couch and stared, but not at the TV. \n\n* * * * * \n\nPetals was full of customers, but luckily Antonio was there to help make two bouquets while Tracy scheduled an appointment for a bride, then rang up two customers. Tracy was glad for the business because it demanded her to focus on work instead of William and she could actually forget that she was pregnant for a few moments at a time. Devin, her new helper, showed up, set his things down and immediately started helping customers. Tracy smiled, thinking how lucky she was to find him, although she didn't actually find him. She had asked her favorite professor for a recommendation and he said he knew just the right person. \n\nTracy compulsively checked her email, acting like she was busy with work, but she still secretly longed to see something from William every time she looked. She was disheartened that he didn't put up a fight about not seeing her anymore, but at the same time she was relieved because her resolve felt flimsy. She knew that being pregnant changed everything and she couldn't have back what they had before anyway. The relationship would become too serious and she would be a drag, a burden. He may not even want anything to do with her. No, this was better. Better to leave with her self-esteem still intact. \n\nOnce the store cleared out, the three looked at each other and let out big sighs. \"Whew!\" Tracy spoke first, \"that was a rush! I am so glad you both were here.\" \n\n\"Yes,\" Antonio said, \"but look at the rose stock. I hope you don't get any more online orders today.\" \n\n\"Yes, but we have still have some red. Those are the customers that want what they want,\" she explained turning to Devin, \"customers are more flexible about the other colors.\" \n\nAntonio said goodbye and Tracy started showing Devin how to check orders on her online jewelry shop. \"I don't have any orders now, but at Christmas time, if it is anything like last year I am really going to need your help. I sold fifty-five necklaces last year; the pansies were the most popular. Hey, did you make something with that resin you took home?\" \n\nDevin looked embarrassed and said, \"Yes.\" \n\n\"Well, how did it turn out?\" \n\n\"I like it.\" \n\n\"Well aren't you going to show me?\" \n\nDevin looked reluctant, but then took his phone out and showed Tracy a photo. It was a silver belt buckle with the background painted white, then a piece of mistletoe suspended in the resin. \n\nA smile widened across Tracy's face as she realized the connotation, \"Kiss me under the mistletoe? Devin! You naughty boy! You brilliant naughty boy! How do you feel about adding these to the 'Flower Girl' collection?\" \n\n\"Do you think anyone would want them?\" Devin asked, a smile starting to curve up on his lips. \n\n\"Uh, I dunno. Let's try something.\" Tracy asked Devin to send her the photo, then she texted it to Pierre and waited a few seconds until a text came back that said, \"I must have one! Where did you find it?\" \n\nDevin smiled widely and his enthusiasm only grew as Tracy unveiled her plan, \"Women might buy them. Men probably wouldn't. Gay men will for sure. I want you to do a google search, find some novelty shops for sexy gifts and ... we need to get these out before Christmas. I'm going to order some blank belt buckles right now. Oh, and we should do some female buckles too. Maybe a 'his-and-her' set too.\" Then Tracy jumped out of her seat and threw her hands up exuberantly and said, \"This is a brilliant idea Devin!\" And she did a little excited dance to mask her pain and then even startled Devin by hugging him, but he laughed and quickly joined in on her excitement. Tracy was grateful that Devin had given her something to keep her mind busy, because she could not stop missing William. \n\n* * * * * \n\nThe library was a hub of activity that afternoon, but William sat at his desk staring at the computer screen pretending to read. He noticed Melissa had started hovering about, coming a bit closer but not actually talking to him. But he wasn't concerned about her, he was thinking about Tracy. It had been eight days since he had received her email. He had seen her once since then, but she had not seen him. He had broken his resolve and went to the flower shop to speak to her in person, but there were people in the shop. He felt like a creepy stalker, but he really didn't want to walk in until she was alone, so he waited, hoping the guy would leave. He watched as Tracy spoke animatedly, and then she even jumped up and did a little dance and was laughing and smiling, and she hugged the guy. It looked like a friendly hug, but that is when William realized she wasn't even sad. He felt devastated and Tracy looked like her usual exuberant self. And so he left. \n\nAfter what felt like the longest weekend in his memory, he was trying to focus on work, but he knew he had to talk to Tracy. At the very least, maybe she would say something cruel and he could learn to hate her. He could not remain suspended in this purgatory. \n\n\"Hey William!\" \n\nWilliam looked up from his screen to see Ray, a welcome distraction, \"Hello Ray. How are you this afternoon?\" \n\n\"Good, man. Just came to get a book. You know there's a library closer to my house but I just wanted to say hello.\" \n\n\"Very nice of you to come by, Ray. What have you been reading?\" \n\n\"Oh, I had to read some stuff from Alicia's therapist, so aside from that, just Tracy's story. Hey, did she ever come up with a title? Alicia and I just call it 'The Vera and Andy Story,' although I thought it should be called, 'Make a Hoe of a Housewife'.\" Ray laughed and William smiled. It was funny, but it would take a lot get a laugh out of him right now. Ray assumed William didn't get the joke and explained, \"Oh, that's a rap song, man. 'Make a Hoe of a Housewife'? Dr. Dre?\" \n\n\"Yes, of course,\" William continued the lyrics, \"A bitch is a bitch, but a dog is a man's best friend.\" \n\nRay looked stunned for a second and then said, \"Man, you are an enigma, you know that?\" \n\nWilliam sighed, \"Yes, I've heard. I like pizza, I play baseball, and contrary to popular belief, I am not a hoe.\" \n\nRay looked confused for a moment, and then asked, \"You okay William?\" \n\nWilliam looked at Ray and didn't answer. He wasn't sure himself. \n\n\"Tracy?\" \n\n\"Yes,\" William answered. \n\n\"What happened?\" \n\n\"I don't know. That is the problem. I thought ...no, I know things were going fantastic. Then suddenly she says we are not compatible and won't talk to me.\" \n\n\"Brutal.\" \n\nWilliam nodded at the perfect adjective, then inhaled and tried to change the subject to books, but he couldn't even muster up any enthusiasm for literature. Fortunately, he had a book set aside for Ray and pulled it out, \"Someone returned this recently and when I saw it, I thought of you. It is not new, but it is...it is a really good book.\" \n\nRay thanked him and took the book from William but was stunned. A really good book? Ray thought to himself. Coming from William that was a shockingly blas\u00e9 book review. \n\n* * * * * \n\nRay stopped by the flower shop and found Tracy sitting behind her computer screen crying. She quickly tried to wipe her eyes and smile when she saw Ray, but he said, \"Tracy! What's going on?\" \n\n\"Oh, nothing, how are you?\" Tracy answered, trying to sound normal. \n\n\"Bullshit, Tracy. Tell me what's up? Yesterday I saw William and he looked like hell, now here you are crying?\" \n\n\"I had something in my eye,\" Tracy gave a fake smile, and then bit a cracker. Then she asked, \"You saw William?\" \n\n\"Yeah, and the dude is not himself. Why don't you make up with him?\" \n\n\"It isn't that simple, Ray.\" \n\nRay stood staring at her. He wasn't going to let her off that easy. \n\nTracy relaxed her shoulders and rolled her eyes. \"I'm having health issues, okay? I don't want him to feel sorry for me or feel obligated to stay with me or anything.\" \n\nRay was thoughtfully quiet for a moment, obviously weighing something in his own mind. \"Tell him. Whatever it is, tell him and let him decide. I don't know what I should tell you about my own situation, I'll have to ask Alicia, but she had, well she has a health issue. It's much better to know. Let him decide for himself how to deal with it.\" \n\n\"But...I don't want to be a burden, Ray. I'd hate for William to stay with me because he feels sorry for me.\" Tracy bit another cracker. \"Besides, he didn't put up much of a fight when I told him not to contact me.\" \n\n\"You told him not to?\" \n\nTracy nodded and Ray put his hands up in exasperation. \"This is ridiculous, Tracy. You're a mess, he's a mess. You need to call him right now.\" \n\nTracy stared in stunned silence. She had been fighting the urge to call William non-stop, now having someone standing in front of her demanding that she do so was almost a relief. Tracy looked at the clock and said, \"He's at work.\" \n\n\"Text him,\" Ray insisted, \"I'm not leaving here until you text him.\" \n\nTracy made a dramatic sigh and bit another cracker. It wasn't just Ray. She was about to crack anyway. She picked up her phone and wrote the truth, \"I can't stop thinking about you,\" and pressed 'send.' \n\nRay smiled and said, \"I'm not going to hang out and wait for him to text back. I need to get back to work. But you better be smiling next time I see you.\" \n\n\"I hope so, Ray. Hey, take some flowers for Alicia.\" Tracy was grateful for the push, but was now scared to death about opening the door for William to reject her. \n\nAfter Ray left, Tracy checked her phone and email, but heard nothing. She sat and ate crackers wondering if she just made a huge mistake. It hadn't occurred to her that William simply wouldn't reply, but now that felt like a very real and very frightening possibility. \n\n* * * * * \n\nWilliam stood on the stoop to Tracy's apartment, hoping she planned to come straight home right after work. He already knew he was going to contact her and wasn't sure what approach to take, but once she sent a text that opened the door just a sliver, he decided to come see her in person immediately. He spotted her from pretty far away, since her bold dress and black hair and determined gate made her stand out from the crowd. But she wasn't looking for him and it gave him a chance to study her. When she stopped at the corner, she took her phone out of her purse, looked at it and made a pouty face before putting it back. William's heart melted, knowing she was hoping to hear from him. \n\nShe didn't see him until she was almost to the steps, then she reacted like a child at Disneyland who just spotted Mickey Mouse. She literally leapt in the air and shouted \"William!\" and ran straight into his arms, nearly knocking him over. And then she went soft in in his arms and made little cooing sounds in his ears and started whispering how much she missed him, kissing him near the ear, along his cheek, and to his mouth. William was overwhelmed. He hadn't known what to expect, whether she would be cold, angry, or standoffish. Instead, she acted like he had just returned from a long vacation. But of course he returned her kisses and asked if they could go upstairs. \n\nTracy did not let go of his hand the whole time, almost as if she expected him to run off. She even maintained her grip as she dug in her purse and took out her keys, and as soon as they were inside, she smothered him with hugs and kisses again. William could not properly enjoy her affection because he didn't understand what happened, what had changed. \"Tracy, hold on. I think we should talk.\" \n\n\"Can we talk later?\" They were now seated on the couch and Tracy had her hand on his belt buckle. \n\n\"Why?\" \n\n\"Because I really missed you and I want to get close to you.\" \n\n\"I meant, why did you do that, Tracy? Why did you put me through nine days of hell? Is this how you expect it to be? On again off again? Because it is too taxing, too painful.\" \n\nTracy removed her hand and sat back on the couch, looking like a child who had her hand slapped or was told \"no.\" \n\nWilliam sat in silence. He was kind of surprised at himself. He could have waited to have the talk after sex, but he couldn't just pretend, so he spoke, \"I need to know what prompted you to cut me off, and what your concerns are about our compatibility.\" \n\nTracy was silent. \n\nWilliam waited. There was no logical explanation for her behavior and this sort of thing exasperated him. What if she didn't have a reason? Could she just be flighty or dramatic? She seemed so ...authentic up until nine days ago. What changed? \n\n\"Tracy...is there someone else?\" \n\nTracy would not look at him, but she bit her lip and slowly nodded. William felt like the floor suddenly split open and he was sliding down a pit. He had not expected that answer and was just grasping at straws. He put his head in his hands and then heard Tracy speak. \n\n\"Yes...yes, there is someone else William. And I have been scared to tell you. So scared I thought it would be better to end it than to have to tell you.\" Tracy paused and swallowed. \"William, that someone else is a baby. I'm pregnant.\" \n\n\"What?\" William looked up at her and Tracy removed her glasses to wipe her eyes and put them back on. \"Tracy, how can this be? Were you telling the truth about the IUD?\" \n\n\"Yes.\" \n\n\"Then...how...oh my god,\" William put his head back in his hands. \"Tracy - you do not want to have my baby, trust me!\" \n\n\"What!\" Tracy stood up, ready for a good fight, her face immediately changing from trepidation to anger. \"Who are you to tell me? I am having this baby William. I don't need your blessing and I don't need your help.\" \n\n\"Hold on Tracy, let me think for a second,\" William remained seated. \n\n\"What do you need to think about? It's my decision!\" \n\n\"But you are making a decision without having all the facts.\" \n\n\"What's there to know? I'm pregnant. I don't want to have an abortion. You don't want kids. End of story!\" She threw up her hands in finality. \n\nWilliam sat quietly thinking while Tracy fumed, and started pacing. \"I am not having an abortion, William. My mind is made up. You don't have to stay with me, you don't have to help me in any way, and you don't even need to know the baby. I'm not asking you for anything.\" \n\n\"Why not?\" \n\n\"Because you didn't ask for this.\" \n\n\"Neither did you.\" \n\n\"Well...\" Tracy softened and sat down in the chair. \"I do have the ability to end it. But I don't want to, William. I had an abortion when I was in college and ...I can't do it again. That was totally different, I was young and couldn't support myself, plus I wasn't even in love with that guy.\" \n\nWilliam looked at Tracy to see if he just heard right, but Tracy just went on as if stating the facts. \"I am old enough now and know what I want out of life and I want to be a mom. I didn't mean for it to happen so soon, but I can't ...I can't do it William.\" William stood up enough to take Tracy's hand and pull her onto his lap when she burst into tears, \"I'm sorry,\" she said, \"I didn't mean ...to make things get so tough.\" \n\nWilliam kissed her forehead and wiped her tears, \"I thought I was having the worse week possible, but you were trying to do this alone? Tracy, you don't have to. And honestly, you have tried to make a decision without knowing all the facts. I am sure you will feel differently if I tell you my reasons for not wanting children.\" \n\nTracy slid off his lap and looked at him seriously, expecting him to continue. \n\n\"Tracy, I am...genetically flawed. My mother is schizophrenic and my father is an alcoholic. My sister had a severe eating disorder and you know about my OCD, but you don't know how bad it was in the past.\" \n\nTracy saw the pain on William's face, but knew it was time to probe, \"Will you tell me about your mother?\" \n\nWilliam took a deep breath. He anticipated this conversation sooner or later, but he hated the way the words tasted coming out of his mouth. \"Well...she is mentally ill. Sometimes she puts on a great front, but she is unpredictable. My father works from home so he can keep an eye on her, but he is ill too. He is what you would call a 'functioning alcoholic'. Most people would be shocked, for he never appears to be drunk, but in reality, he is never actually sober. He built an office out in the garage and hides out back there, he hides his drinking and he hides the car keys. I've just made him sound horribly fearful, but in fact he is a very practical man. People like him. He watches the house and make sure my mother doesn't take the car, although she has been known to sneak away on foot occasionally. Oh, he doesn't keep her captive. You need to understand that the voices sometimes tell her to do things; highly irrational things.\" \n\nTracy nodded and stroked William's hand, but didn't speak. \n\n\"Growing up was...well, some people have it worse. I don't want to sound as if I am full of self-pity, but certain things were...difficult. Kate and I were very close and we would have friends over, but only a select few that ...wouldn't violate our trust. Kate was tough, though. She's older, you know. She would explain to any friend I brought over what the situation was. She had this little speech, 'Our mom is not right in the head, but if you ever talk badly about her or William, I will personally kick your ass.'\" \n\nTracy laughed. \n\n\"Well, yes, she said that to everyone until I was about twelve, then she said I was too big and my friends were too big, so I better just tell them myself.\" \n\n\"Did you?\" \n\n\"Hmmm...I became less social.\" \n\nTracy nodded and said, \"And what about your mom? What is she like?\" \n\nWilliam paused, \"I wish she was horrible all the time. It would be much easier not to love her. Instead, she vacillates between hot and cold, normal and crazy. Her 'episodes' as we call them have been subdued by improved medication over the years, but she is thoroughly convinced that...\" William exhaled before going on, \"someone is trying to communicate to her through food labels.\" \n\nTracy's eyes got big upon hearing this, and William continued. \n\n\"This is just one manifestation of her illness, but she removes the labels off of cans and saves them. She compares them over the years, for example, Del Monte Corn - they have changed the label three times in my lifetime. My mother compares the labels and thinks that the missing letters or word is a code to her personally. So she has file cabinets full of labels and...my dad says leave her alone because it keeps her busy, but when I was a teenager I spent an exorbitant amount of time trying to reason with her. I tried to use logic on her insanity and it drove me insane...I was institutionalized when I was sixteen.\" ",
        "Tracy was crying now, her heart breaking for the young William, but he just stared straight ahead and continued. \n\n\"So I lost it, my sister lost it, my dad drank, and my mom has numerous organized files on things that don't matter while her children fell apart. And, well, I don't mean to go on about this Tracy, but our house was...very cluttered. Items were put where they didn't belong. Except our bedrooms. Kate and I put locks on our doors and our father allowed us to do that because he understood we needed some space that wasn't crazy. We had a bathroom that connected our bedrooms, so we would stay in there most of the time or be outside.\" \n\nTracy wiped her eyes and silently thanked God for Kate. \n\n\"She wasn't mean or abusive to us, Tracy. She loved us. She still loves us. She is a very sick woman and it hurts to see her in so much anguish. That is one thing I learned from my own mental break. The psychologist was able to help me see my mother as a sick person. I used to get so angry at her for not acting as a mother should, or for being illogical. Well, as you probably understand now, I decided long ago not to have children of my own. I am not opposed to having a family, but always thought I would adopt or...use a sperm donor.\" \n\nTracy laughed, and William looked at her questioning. \n\n\"Oh William, you don't understand. Everything you just told me was intense and sad and heartbreaking because I felt bad for what you went through. But it doesn't scare me one bit. I was terrified that I was going to lose you over this, because I got pregnant and you wouldn't want me. But you know what I thought to myself? Well, at least I will have his baby. I will always have a part of William now, even if he doesn't want me. Because I will always love you, William, no matter what you decide. I love you and I love your baby and I am not scared of any genetic disorders. Knowing what I know now, I would pick your sperm over anyone else's at a sperm bank, because I happen to think you are amazing. Other men, sperm donors, may not have your family history, but they would lack all of your good qualities that I am hoping this child gets from you.\" \n\nWilliam stared at Tracy in disbelief and said, \"Tracy, don't you understand? All those disorders have a genetic predisposition.\" \n\n\"So what.\" \n\n\"So what?\" \n\n\"Yeah, so what. Your sister has one and one on the way, right? Quit being a scaredy cat.\" \n\nWilliam looked at Tracy and slowly his expression changed from bewilderment to serious. \n\n\"Scaredy cat?\" \n\n\"Yes. I almost said 'weenie', because that is what I was thinking. You are brave in so many ways, but you are scared because this is something you can't control, but guess what William - no one can. Talk to my mom about biology and genetics. It is a crap shoot for everyone; you just think you know some of the odds. This baby could have Down syndrome or Tourette's or ...well, it couldn't be ugly coming from me and you,\" Tracy laughed, \"But my point is, I am going to love this baby if it is healthy and even if it isn't.\" \n\nWilliam was smiling now, \"You sound like Mother Theresa. If Mother Theresa was a sex kitten and called people 'weenie', that is.\" And then he hugged Tracy tightly and kissed her face over and over. \"We still have a lot to talk about, you know. But I think I am ready to take a break.\" Tracy shrank at those words, and William quickly corrected himself. \"I mean from talking! Not a break from each other. Tracy - it is going to take me some time to get used to this baby idea, but last week made one thing very clear: I love you and I want you in my life.\" \n\nTracy leaned in and kissed William lightly on the lips and ran her hand along his short beard while looking into his eyes. William stroked the side of her face and tucked her hair behind her ear, studying her face, thinking how he thought he had lost her forever. He didn't want to talk anymore, just wanted to look at her, but she spoke, \"I'm sorry to put you through that, William. It was hell for me too. But it feels so good to be back in your arms.\" \n\nA devilish grin crept onto his face. \n\nTracy took off her glasses and raised her eyebrows at him, wondering, hoping that he was feeling amorous. \n\n\"You were very sassy,\" he said, \"first calling me a scaredy cat and then almost calling me a weenie.\" \n\nTracy grinned back at him. \n\n\"In fact, I think your behavior qualifies as 'petulant brat.' If I didn't know better, I would think you were asking for a spanking.\" \n\nWith deliberately wide eyes, Tracy drew her breath in. \"You wouldn't spank a pregnant woman, would you?\" \n\n\"Oh, I most definitely would, if she deserved it.\" \n\nTracy squinted at William, and then very slowly stuck her tongue out and drew it back in. William abruptly stood up and pulled Tracy up by her hands, and then he bent over and threw her over his shoulder and picked her up. Tracy squealed and giggled as he carried her to the bedroom and tossed her down on her back, then pinned both of her hands above her head as he lowered himself down on top of her, between her legs which immediately wrapped around him. He kissed her on the mouth and his free hand felt the back of her thigh and up to her butt and began squeezing her bottom firmly. \n\nTracy moaned into his mouth and then William lowered his mouth to her breast and stopped rubbing her butt long enough to pull the front of her dress down and free her from her bra, and began slowly, teasingly, flicking her nipple with his tongue. Tracy wiggled and tried to get her hands loose, but William brought reinforcement with his free hand to hold her in place. Tracy did not want to fight it anyway, so she tried to relax as William continued to slowly torment her nipples with his tongue, lips, and teeth, until she was whimpering \"please, please, please,\" which made him slow even more. Then he suddenly became aggressive with her breasts, kissing them firmly, over and over. Tracy loved the back and forth dance of gentle and aggressive, not knowing what he would do next. He sucked harder and removed one hand to begin massaging her breast, feeding more and more of it into his mouth, and then backed off again, flicking the tip of her nipple with his tongue, and she felt such a yearning between her legs she thought she could cum just from the friction of his waist pressing down on her pelvis. \n\nHe is torturing me, Tracy thought to herself. I thought he was going to spank my bottom, but instead he is going to torture me by not touching me below the waist. Tracy loved what William was doing to her, but she could hardly take it, and squirming and moaning was reduced to begging, \"Please William?\" \n\n\"Please what, Kitten? What do you want?\" William whispered in a sexy voice and looked up at her long enough for her to see the sadistic grin on his face. \n\n\"You know,\" Tracy whispered back, \"you know what I want.\" \n\nWilliam shook his head and went back to lightly flicking her nipple in a slow methodical manner. Tracy felt a pulsating yearning down below and could feel her own wetness in her panties. \"Aaaah, please?\" \n\nWilliam sucked a nipple hard and rhythmically, like he had no interest in doing anything else, still firmly holding Tracy's arms above her head. Tracy was squirming and rubbing into him and could feel his hardness on her thigh and never wanted anything more, \"Please?\" She was getting louder, but William continued to ignore her pleas. \"William, I'm sorry I called you a scaredy cat! Please, please, please?\" \n\nWilliam gently bit her nipple before calmly ignoring her requests. \n\nTracy moaned, her pussy was clenching from all the nipple stimulation, \"Please forgive me? Please fuck me?\" she gasped. \n\n\"I have forgiven you completely,\" William smiled and slowly licked her nipples. \n\nTracy tried to squirm her way loose, but it was pointless. Her squirming, fighting, and begging had no effect on him, William was going to do what he was going to do, when he wanted to do it, which apparently amounted to sweet, teasing torture. Tracy was practically in tears of frustration, for she had never been denied or played with to this extent, yet it was sweet blissful ecstasy to be William's plaything. She knew it was pointless to fight it, but she couldn't keep from grinding into him from below. The pulsing between her legs was unbearable, she felt like if he touched her, even through her panties, she would cum. But he didn't. Instead he finally kissed his way up to her neck, to her ear and then across to her mouth, but Tracy could hardly kiss him back because she was panting so hard. At least now she could feel him, hard and stiff pressing against her mound through his pants and her panties, she could feel the heat between them. \n\n\"You want me bad, don't you?\" William whispered into her ear. \n\n\"So bad,\" Tracy conceded. \n\nWilliam ground himself into her, but still kept her arms pinned above her head. Tracy teetered on the verge of crying out in frustration and started to wonder if he wasn't just playing with her, if he was paying her back for hurting him. \"Please William? I have to have you inside me.\" \n\nWilliam leaned up and grinned, and finally let her arms free. Tracy immediately wrapped her arms around him tightly and moaned in great relief, and then pulled a hand in front of him to get his pants off. \"Uh-uh. Be patient,\" William warned. Then he backed up to his knees and unbuckled his belt. He didn't unbutton his pants, instead he pulled the belt all the way through the loops and folded it in two, holding the ends in his hand and looked down at her with an intense expression. Tracy gulped and her eyes went big as she thought oh my god, I thought he meant with his hand. \n\n\"Do I need a 'safe' word?\" she asked. \n\n\"I think a simple 'stop' will do,\" William answered as he rolled her onto her stomach. William took the two sides of her black panties and slowly lowered them all the way down her long legs, gently dragging his fingers along her skin as he did so, leaving Tracy trembling from excitement rather than fear. He stopped at her ankles and pulled one foot through, then took the free foot and placed it through the same opening so that her feet were lightly bound together, then he pulled her dress up above her waist exposing her bare bottom and the entire length of her legs. Tracy wiggled her bottom, a very sassy move for a woman in such a position, but William resisted the urge to smack her butt right then. \n\n\"Nine days, Tracy. But my belt is not punishment. It is reward for coming back to me. Do you want your reward, Kitten?\" \n\nShe almost muttered a sincere apology, but realized she wanted to feel the sting of the belt. The bottom half of her body ached for William and she needed some relief, some contact, even if it were swift and stinging. She wiggled her butt at him one more time. \n\nSmack! \n\nTracy felt the first sting of the belt on her right butt cheek, but did not cry out. \n\nSmack! \n\nThe second caused a whimper to escape her lips. \n\nSmack! \n\nAnd the third lash of the belt caused Tracy to cry out, \"Oh!\" \n\nWilliam gently stroked her sore bottom with his hand. Tracy lay panting, wondering what he would do next. The worst torture she could imagine was if he denied her. She wanted to feel him, wanted him to take her, she wanted to get on with the spanking, hoping he would enter her finally, but instead he seemed content to gently tickle her butt cheek with two fingers. \n\n\"That was only three,\" Tracy whispered. \n\nWilliam laughed and rolled her over on her back, and kissed her mouth, hungrily. \"I can count, sassy. The rest will come when I have my cock buried deep inside you so I can feel your little butt cheeks tighten up.\" \n\n\"Oh my god William! Fuck me, now! Please?\" \n\nWilliam stood up and Tracy nearly cried thinking he might not grant her wish. Her dress was still bunched up around her waist, her feet still bound by her panties, her tits led out and her hair was a mess, but William was fully dressed except for his belt, grinning confidently. He started to unbutton his shirt, slowly. Tracy stared at him, breathing with her mouth open. \"God, I missed your body,\" she murmured spontaneously as he removed his shirt. When he finally unbuttoned and unzipped his pants, Tracy was making little whimpering sounds again, not looking at his eyes any longer, waiting to see his manliness, his beautiful cock that was hard and straight, and glistening with precum. \n\nTracy threw her head back in delight, wiggled a foot out of her panties and spread her legs. \n\nWilliam was equally delighted by the sight before his eyes, he could see her wetness coating the inside of her legs. It was time. He knelt between her legs, put his cock at the entrance, and could feel the heat radiating off her. He couldn't help but think how feral she looked, while he felt entirely in control. She looked up at him with pleading in her eyes, her expression saying more than any words could convey. \"I am yours,\" he said, as he finally parted her sweet wet pussy that felt as tight as glove, hugging him from all sides so that he had to actually work his way in rather than slide. He kept eye contact as he slowly slid back out, her lips dragging and squeezing his shaft, then he plunged back in, marveling at the tightness. She was incredibly slick and already pulsating on him and he knew that she would be cumming soon and that he would not join her this time. She was already clenching on him, squeezing and bucking and she hooked her ankles behind his back, but William was feeling very particular about what he wanted at this moment. He reached back and grabbed an ankle and pushed her leg straight up in the air so that he could take longer, deeper, strokes that would slow her down just a moment, but still result in her satisfaction. It barely took a few strokes before Tracy was cumming and William took immense pleasure, not only in the sensation of her squeezing his cock, but in watching her face, her expression so erotic as it went from intense squinting, a tortured or pained look, then her eyes rolled back and her mouth opened, and her groans changed to a giggly sound as her face relaxed and a smile spread over her face. William had her leg up over his shoulder and was still moving in and out of her slowly as she looked up at him smiling, then she closed her eyes again and William smiled too. \n\nThen he slowly withdrew and rolled her over, Tracy now like an exhausted rag doll instead of being wound up. She was completely compliant, lying face down on the bed, presenting her ass to him with her knees together. She had three red stripes on the pale skin of her butt cheek, and William stroked them tenderly as he entered her from behind. Tracy cooed, sounding like a contented cat purring, wiggling back into him with her eyes still closed and a smile remaining on her lips. \n\nWilliam enjoyed the deep plunge attainable at this angle and relished the sensation of sliding in and out, Tracy actively moving back into him with each thrust as they met half way. He loved the sight of her like this, the wild sex kitten, narrow waist, perfect round moons of her ass, watching his cock slide in and out, her pussy hugging him, squeezing him with each thrust, as if it didn't want to let him go. But he would take and give, take and give, take and give to her relentlessly. Tracy added to the feeling by rocking her hips to the side with each thrust and the increased sensation was becoming overwhelming. Rather than give into the feeling, he slowed a bit and smacked her ass. \n\n\"Oh!\" Tracy yelped, having forgotten to expect the swats she had coming to her. William felt the desired effect as her muscles clenched with each swat, smack-smack-smack- but it was more than that, he felt increased wetness and realized she was going to cum again, so he smacked her ass firmly but a little harder each time until she yelled, \"Aaaah! More, more, more!\" and he smacked her greedy little ass while driving into her in rhythm until Tracy lifted her head, arched her back and William could feel her cumming again and this time he could not restrain himself, but pushed into her deeply, smacked her one more time, then pumped into her with abandon as they came and came and came, and William shuddered and felt a tingle run throughout his body that made him tremble, before he withdrew and collapsed at her side. \n\nThey were both panting now, covered in sweat, and William leaned over and moved the strand of hair that was stuck to Tracy's cheek. She smiled with closed eyes and brought his hand to her mouth. She kissed the back of his hand and held it there, as he continued to stroke her hair with his other hand, feeling overcome with love for her. Tracy sighed. She wanted to apologize for the pain she caused and she wanted to apologize for being pregnant, although she knew William wouldn't want to hear that. But she needed to say something. \"William? Promise me you won't stay with me out of obligation. I wouldn't want you to. I can do this alone. I don't want to, I want you with me, but nothing scares me more than the thought that you will not want me but feel obligated. Nothing scares me more than the thought that you might resent me for getting pregnant.\" \n\nWilliam continued to stroke her hair, choosing his words carefully. \"I told you how I feel about you Tracy. I love you. I realized I love you before I knew you were pregnant, but now that you are...well, it does change things. It means we both have an incentive to make this work and not just for ourselves. It means you can't do that again, Tracy. You can't exert your independence and cut me off without talking to me. You must give us a chance to talk about things. One of the things I fell in love with was how you spoke your mind, but then you suddenly closed up and turned your back on me. We have to communicate, Tracy.\" \n\nTracy sighed and rolled on top of William, taking his face in both hands and looking him square in the eyes. \"You are right. And in case I did not communicate clearly, I love you William.\" And she kissed his lips. \n\n***** \n\nThank you for your votes, comments, and emails. There are two more chapters to this story and they will post right away."
    ],
    "authorname": "DonnaBeck",
    "tags": [
        "love",
        "romantic love",
        "romantic sex",
        "romantic novella",
        "novel",
        "spanking"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/flower-girl-ch-07"
}