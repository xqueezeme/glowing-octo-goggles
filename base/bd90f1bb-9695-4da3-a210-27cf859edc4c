{
    "title": "Five Minutes and Forever",
    "pages": [
        "\"It should only be a few more minutes now,\" the well-dressed blonde who had been introduced to them earlier as Lisa said, adjusting the wireless headset she was wearing. \"If anyone needs to make a last minute trip to the bathroom, it's right across the hall.\"\n\n\"Thanks, but I'm fine,\" the sandy haired eighteen year old sitting in the easy chair to her left said.\n\nLisa turned to the equally young couple on the couch to her right to check with them, but they seemed oblivious to her presence. They'd been canoodling practically from the moment they'd gotten here and seemed not to hear, or care, as twice, Lisa loudly cleared her throat. Thinking they were hardly the worst she'd seen on her six months on the job, she shrugged and turned back to her left.\n\n\"If you have the chance you might want to hose the two of them down,\" she smiled at the cute young man. \"Otherwise just relax and I'll be back in a jiffy.\"\n\nNicholas Porter watched as the Administrative Producer stepped through the door and out into the outer hall. He couldn't help but contrast the way she dressed and acted with that of Hillary over on the couch. He at least had made sure he brought a suit with him for tonight, while the dark haired brunette was dressed as if it was just another Friday night at the local clubs.\n\nAfter taking a brief moment to consider how much fun it might actually be to dump a bucket of cold water on those two, Nicholas took another long look around the room to try and permanently record every feature of his surroundings to memory. Part of him wished he had brought his camera with him, but another had decided that would only mark him as a hick from the sticks and he'd left it back at the hotel. \n\nThe room was actually rather ordinary, he had to admit, resembling a living room much like the room in his parent's house back in Cherrywood Falls. Aside from the chair he was sitting in, a duplicate of which sat just across the way, there was a large couch and an equally long coffee table. The latter of which doubled as a sort of buffet table and was filled with snacks and drinks. None of which Nicholas had dared to touch for fear he'd spill something on his suit. Hillary and Roger, the couple on the sofa, however, had devoured a large portion of the repast as if it were a last meal. \n\nTo the far left of where Nicholas sat stood a wide screen television monitor, tuned not to any station but to an area elsewhere in the building. It was the image on the screen that made this simple room important. \n\nIn a week of pretty amazing events, it was the call from the booking agent for \"The Midnight Hour\" that really stood out in Nicholas' thoughts. The Tonight Show it wasn't, but the syndicated talk show was seen nationwide and constantly ranked among the top five in the ratings. Even before he had said that he would appear on the show, the agent had promised that, even thought he only lived a few hours drive north of Los Angeles, they would fly him down to the city. In addition, they would put him up at a hotel for the entire weekend, even though the show they wanted him for was on Friday night. With an offer like that, it was almost impossible for Nicholas to say no. Which of course he didn't.\n\nThen, the other shoe dropped and they told him the price of the ticket. Once he had agreed to come, the booking agent mentioned that they were also going to ask Hillary Parks to come as well. It wasn't so much having to put up with his co-worker that bothered him, it was the fact that she would undoubtedly ask Roger Mills, her boyfriend, to come along too. To say that Roger, whom he had known since grade school, and he didn't get along, would be the biggest understatement of the year. Still, not even that prospect was enough to cause a change of heart. \n\nArriving at the hotel from the airport shortly after lunch, Nicholas had been surprised to find a message that said they had to be at the studio by five o'clock to tape the show. Evidently, even though it ran at midnight, it was taped six hours earlier. In retrospect, that made a lot of sense but Nicholas wished he'd know that earlier. In anticipation of having to stay up half the night, he'd done so the night before and only gotten out of bed a half hour before they had to leave for the small county airport outside of town. With the show over at eight at the latest, he was going to have a hard time getting to sleep tonight.\n\nOn the television monitor, Billy Lee Young, the host of the show, was wrapping up the previous segment with some actress promoting her new movie. Nicholas hadn't really been paying that much attention to what they'd been saying until the white haired entertainer announced to the studio audience who his next guests were. Even after all the places his name had appeared this last week, it gave him rush to hear it on television. \n\nAs if on cue, which was precisely what it was since she'd been listening to the show on her headset, Lisa appeared at the door and said they should follow her to the soundstage. That, Hillary heard loud and clear, quickly disengaging herself from Roger and rising to her feet. In a flash, she produced a small compact mirror and checked her face. Confident that all was as perfect as it should be, she snapped it shut and headed for the door. Right behind her followed Roger, until he was stopped short as Lisa stepped in between him and Hillary. \n\nGuessing that he expected to go along with the dark haired girl, Lisa had been ready. After physically blocking him, she said he would have to wait here in the green room. \n\n\"You'll be able to watch the taping here on the monitor,\" Lisa assured the young man.\n\n\"But I thought, was hoping, that he could come with me,\" Hillary implored once she realized that he wasn't.\n\n\"Sorry, but that would be against the rules,\" Lisa said with a patented smile. \"Only guests actually booked on the show are allowed on the set.\"\n\nTruth was, that only applied to non-celebrities, but she wasn't going to tell them that. Just like she wasn't going to mention the other waiting room down the hall with more elegant trappings and buffet for more important guests. \n\nHillary pouted for a moment, then deciding that she wasn't about to miss her chance to be on nationwide TV, kissed Roger good-bye. At the same time, she shot Nicholas a nasty look that said she wished he were the one staying behind. Not talking into account the fact that if not for him, she wouldn't be here at all. Or anywhere else for that matter. \n\n-=-=-=-\n\nStepping onto the soundstage, Nicholas continued his interest in the world of television, taking in every little thing. He found it fascinating the way they took a set that was not much larger than the room they'd just come from and made it look so much larger on the screen. Even the backdrop curtain, where Young did a short monologue at the start of the show, was only a few feet from his desk, whereas back home it had always seemed to be on another stage entirely. The magic of television he mused.\n\nA stagehand took over from Lisa and, after clipping small wireless microphones to their clothes, guided them where to sit. Hillary was a little miffed when she was relegated to just window dressing for Nicholas' story and assigned a place on the couch next to the actress from the previous segment. Nicholas, had been placed in the chair between the couch and the desk. \n\nA minute later, Billy Lee came back from offstage where he'd had a quick readjustment of his makeup. In the few moments before they resumed taping, he welcomed the young couple, telling them to just relax and enjoy being on the show. As a casual remark, he said they made a cute couple, causing Hillary to immediately say that they weren't anything of the kind. Billy Lee didn't seem to hear as the director yelled five seconds at the same moment and the host quickly moved back behind his desk. \n\nAfter welcoming his as yet non-existent home audience back from a commercial break that would later be inserted, Billy Lee began to talk about how the only time you seem to hear stories about teenagers these days was when they were in trouble or did something particularly bad. Well, the other day he was reading the paper, he told the studio audience, which was at least real, and came across a story quite the opposite. That an intern whose job it was to look for interesting stories in small town papers had brought the story to his attention was left out of his narrative. \n\nThe story, he went on, told of how a young man in a small town upstate had, at the risk of his own, saved the life of one of his co-workers. A propane gas explosion in the kitchen of the dinner where they both worked had, in an instant, filled the small restaurant with flames and smoke. Patrons and staff quickly fled to the safety of the street, but once they were all there, a headcount showed them one short.\n\nHillary Parks, who had been working the register right next to the kitchen, had evidently been left behind. With the local Fire Department not yet on the scene, and the smoky inferno growing worse by the minute, Billy Lee went on to say, Nicholas Porter, who had working at the diner as a waiter during his summer, took in upon himself to brave the flames and rescue her.\n\nThe veteran host paused for a moment to let the camera pan over to Nicholas so that everyone at home would be able to get a good look at him before he finished the story. To both the studio, and later the home audience, the young man seemed an unlikely hero. Standing only five six and a hundred and forty pounds, he looked more like the kid next store who mowed your lawn. Then again, as Billy Lee was quick to remind them all, what was a hero but an ordinary man propelled into extraordinary circumstances, and rising to the occasion. \n\nAfter a few more beats, he again picked up the story and told how Nicholas, despite the choking smoke and heat, found Hillary unconscious on the floor beside the register and carried her to safety. \n\nThe camera panned over to Hillary, the damsel in distress as Billy Lee referred to her, giving her the fifteen seconds of glory that was all she was going to get. A brief span that she wasted as bored by all the talk about Nicholas, she hadn't really been paying attention. Finally, she realized that her face was on one of the monitors spread around the stage and she opened her mouth to say something, hoping to draw herself into the narrative. However, the moment was already past as the camera panned back to Billy Lee and then pulled back to include Nicholas too. \n\n\"First of all, I have to say it really is an honor to meet a brave young man like yourself,\" the fifty-eight year old said as he reached over the desk to shake the younger man's hand. \n\n\"I really don't consider myself that brave,\" Nicholas replied as he shook hands, feeling a little embarrassed by all of the attention. It was one thing for people he grew up with to say that, it was another to have it said on national television he realized. \n\n\"Well I'm sure our audience would disagree,\" the host responded.\n\nAs if to agree with him, the studio audience burst into applause. Taken by surprise, Billy Lee thought it a nice touch that the director had the foresight to light up the \"applause\" sign at that moment. Standing on the other side of the set, the director thought that would've been a nice touch too, if he had thought to do it. \n\n\"I know I would've had second, or even third thoughts about running into a burning building like that,\" Billy Lee added. \"I think most people would.\"\n\n\"That's just it, I really didn't think about it,\" Nicholas tried to explain. \"If I had, I probably would've waited outside with the others for the fire department. That would've been the smart thing to do. But all I knew was that I couldn't wait there while Hillary might be hurt or worse. I acted without thinking, that doesn't make me a hero.\"\n\n\"Well,\" Billy Lee smiled, \"since from what I understand, the ceiling over where Hillary had been came crashing down less than a minute after the two of you got out of the building, I'm going to have to really disagree with you there. She's really lucky to have a caring boyfriend like you.\"\n\n\"He's not my boyfriend!\" Hillary abruptly cried out from the couch. \n\n\"Excuse me?\" Billy Lee said, not used to being interrupted on his own show. \n\n\"I said he's not my boyfriend,\" she repeated with a tone that said, as if she would ever date someone like him. \"My boyfriend is back in your green room and he ...\"\n\n\"My error,\" the genial host apologized. Before they went on the air, he'd heard Lisa say that Hillary and her boyfriend were quite a pair and had mistakenly assumed that Nicholas was the one she had been talking about. Then, just as quickly, once again to Hillary's disappointment, he turned his attention back to Nicholas, picking up where he'd left off. \"The bottom line, however you see yourself young man, is that you are indeed a genuine hero and I just wanted to have you here so that people could see that not all today's kids are what some parts of the media like to portray.\" \n\nNot wanting to offend the host, and mindful of the fact that they did bring him down from upstate and arranged for him to stay the weekend, Nicholas decided not to belabor the point. They continued to chat for a few more minutes about other aspects of his life, and then before he knew it, his segment was over as well.\n\n\"You did good, kid,\" Billy Lee said as the red light on the camera's went off after he told the invisible home audience that they'd be back with their final guest of the evening after a few words from their sponsors. \n\nAt the stagehands direction, Nicholas relinquished the chair and headed for the couch. Still miffed at being overlooked, Hillary refused to move over, wanting to stay in the coveted spot next to the chair within camera range. Feeling almost a little sorry for her, Nicholas moved to the far end of the couch and sat at that end instead. \n\n\"I agree with Billy Lee,\" the actress who'd been his earlier guest said to Nicholas after he sat down next to her. \"You are a hero, even if you are a bashful one.\"\n\n\"Oh my God, you're Tiffany Adams,\" Nicholas exclaimed as he finally realized who had been sitting across from him during the short interview. \n\n\"If you say so, then I must be,\" the black haired woman smiled warmly.\n\n\"I've seen every movie you ever made,\" Nicholas gushed.\n\n\"Then you must've started when you were still in diapers,\" the forty-year-old actress laughed.\n\n\"No, I really mean it,\" Nicholas retorted. \n\nActually he hadn't, since Tiffany had appeared in nearly seventy-five films, a large number of which were B Movies or ones in which she'd only had a bit part. But the voluptuous actress had played pretty much the same character in each of them, a not too bright bimbo. It was a role she had raised to an art form, one she'd made so much her own that she could list an Oscar nomination among her credits. Well aware that she wasn't the most versatile of actresses, Tiffany had parlayed a little girl voice and a very grown up bust into a career that outlasted most of her peers. One still going strong with Tiffany convincingly playing roles written for much younger women. \"Well if you're really that much of a fan, then I'm even gladder to meet you,\" Tiffany offered as she took Nicholas' hand in hers.\n\nSitting so close to her, and now reminded of all the times he watched her on the tapes and DVDs piled up in his room, Nicholas couldn't help but be painfully aware of how much of her celebrated cleavage Tiffany had exposed in the tight fitting dress she was wearing. The pain aspect resulting from the fact that her anatomy had a highly noticeable effect on part of his. With the advent of years, the actress had certainly put on a few more pounds, but they seemed to fall in all the right places. \n\n\"I can't believe how stupid I am,\" Nicholas went on, trying to divert attention away from his predicament. \"How could I be sitting a few feet away from you and not recognize you?\"\n\n\"You were nervous,\" she reassured him, \"it happens all the time.\" \n\nTiffany paused for a moment, then leaned even closer and whispered low enough that only he could hear her.\n\nIt's okay, you can look if you want,\" she smiled softly, \"everyone does. I don't mind. If it wasn't for these babies, I wouldn't be where I am today.\" \n\nNicholas was saved from further embarrassment by the director's unexpected announcement that they had a small technical problem and they were going to have to delay taping the last portion of the show. He said for everyone to just stay where they were and they should be back in business in a few minutes. \n\nHis admonishment for everyone to sit tight didn't apply of course to Billy Lee, who promptly walked off the set to wait out the delay in the comfort of his dressing room. As he crossed the stage, he made eye contact with one of the interns working for the show over the summer and a wordless exchange passed between them. The girl waited until Billy Lee passed her by, then after passing her clipboard to one of the other girl's, followed after him. \n\nThe exchanged had been caught by the director as well as he swore under his breath that the taping was now going to be delayed even longer. His only consolation was that these days, Billy Lee's mid-show dalliances didn't last as long as they used to. \n\nThe host's abrupt departure from the set proved a disappointment for Hillary as well. She had hoped the delay might give her a chance to talk to the star. The man might've been even older than her father, but he was, after all, still in show business. Given a chance, she was sure she could've convinced him of her worth. \n\nDeciding that the big-boobed actress on the couch was better than nothing, she turned to talk to her instead, only to discover that she was already engaged in conversation with Nicholas. Well she could put a stop to that easily enough.\n\nUnfortunately for Hillary, Tiffany didn't seem to be that interested in talking to her. Not even when she flashed her own not unimpressive bust practically in the woman's face. She couldn't understand it, hadn't she read that that most of these Hollywood types went both ways. \n\nAngry that she was being ignored, Hillary fell back on her previous complaint that Roger had to wait backstage during the show. Moreover, as she did with so many things, she twisted it around so that somehow it was all Nicholas'fault. \n\n\"You could've at least insisted they let Roger come out too,\" she said, interrupting Nicholas in mid-sentence. \"After all, he did come all the way down here with us.\"\n\n\"He came all the way down here with you,\" Nicholas pointed out, finally losing his patience with Hillary for possibly blowing his only chance to talk to a real live actress, \"not me.\"\n\n\"Roger would be the boyfriend you mentioned before?\" Tiffany asked, having already gotten the message that he wasn't any friend of Nicholas.\n\n\"Yes he is.\"\n\n\"Well it's a pity that he wasn't there the day of the fire,\" Tiffany said, \"then maybe Nicholas wouldn't have had to risk his own life to save yours.\" \n\nIt was only at the last second that Tiffany thought to substitute \"yours\" for \"your worthless ass.\"\n\n\"Oh Roger was there,\" Hillary boasted. \"In fact he was standing on the other side of the counter talking to me when the kitchen blew up. He ...\"\n\n\"Wait a second,\" Tiffany said, cutting short anything else Hillary was about to say. \"He was standing right next to you and he didn't make sure that you were okay before getting his own ass out of there?\"\n\n\"What are you saying?\"\n\n\"What I'm saying,\" Tiffany said in a tone far removed from the quiet, sultry voice she normally used, \"is that he doesn't sound to me like much of a man, much less a boyfriend if he just left you and ran.\"\n\n\"My Roger is all man,\" Hillary protested, \"and he did save me. He called the fire department as soon as he was outside.\" ",
        "Nicholas smiled as he watched the verbal exchange between the two women. That Roger Mills, football star and all around jock was a horse's ass before he decided to save himself above all else was something Nicholas well knew. It was nice to see Tiffany come to the same conclusion without ever even meeting him. If it wouldn't seem like gloating, he would love to mention that when they realized that Hillary was missing, Roger declined to go with him back into the diner to find her. \n\nLater on, after the fire department had arrived and administered oxygen to Hillary, Roger did nothing to dispel her first thought that he had indeed rescued her. At least not until the next day after she had been released from the hospital and thanked him properly. By the time she found out it had been Nicholas who carried her to safety, Roger had already reworked the story so that it seemed like the smaller teen had actually endangered her life by rushing in there rather than wait for the fire department. \n\n\"Alright folks,\" the director called out as he spotted Billy Lee reappearing on the set, \"lets get back to business and put this puppy to bed.\"\n\nAs Billy Lee settled into his seat, the director also spotted the intern who had followed him into his dressing room. He had to suppress a laugh as he watched the girl she had left her clipboard with pull a tissue from her pocket and wiped the corner of the intern's mouth. Then, holding the tissue with two fingers, she dropped it into a nearby wastebasket. \n\nThen last guest turned out to be the author of some book that Nicholas had never heard of, but evidently one Billy Lee had enjoyed. Whatever it was about went right by the teenager as he spent the entire interview torn between the choice of watching Hillary stew or checking out Tiffany's boobs. In the end, he decided that he'd always have plenty of future opportunities to again see the former and concentrated on the latter. \n\nFinally, after a few more minutes of conversation with his last guest, Billy Lee brought the show to a close. As soon as the director yelled clear, he stood up and thanked first his guests and then the studio audience. Then, just as quickly, he was off to his dressing room to change. This time, the intern knew better than to follow. \n\nTiffany took Nicholas by the hand and said it had been very nice to meet him. Then she too was gone. \n\nStill curious about how the show ran, Nicholas watched attentively as the crew broke down the set and hoped he might get the chance to ask a few questions. A chance he wasn't going to get as Lisa reappeared from off stage and said she'd walk them back to the green room. The implication was clear if unspoken. It was time to go.\n\nReluctantly, Nicholas followed Lisa and Hillary back through the long corridor to the green room. Roger was standing outside in the hall and as soon as Hillary saw him, she ran up and jumped into his waiting arms.\n\n\"Baby, did you see me on TV?\" she gushed as she kissed him deeply.\n\n\"I sure did, honey,\" Roger said as he returned the kiss, making a grab for her ass at the same time. \"And you really looked hot!\"\n\n\"You think so?\" the brunette asked as she playfully pushed his hand away.\n\n\"Really hot,\" Roger repeated, knowing that being told that really turned his girlfriend on. \"In fact, I doubt anyone even noticed that old actress on the couch after you came on.\"\n\n\"Oh baby, you say the sweetest things,\" Hillary purred as she pulled Roger closer, pressing her breasts into his chest.\n\n\"Well I hope you enjoyed your visit to the Midnight Hour,\" Lisa said as she hid her amusement at the juvenile dialogue, \"and as soon as you're ready, the car will be waiting outside to drop you off back at your hotel.\"\n\n\"In other words,\" Nicholas thought with a smile, \"don't let the door hit you in the ass on the way out.\"\n\nNevertheless, the young woman was only doing her job, he reminded himself and he took the time to thank her for her time and attention. Roger and Hillary failed to do so as they bumped and ground against each other. \n\n\"Hey Nick,\" Roger finally said as he came up for air, ignoring the fact that Nicholas hated being called that. \"Do you think you could find your way back to the hotel on your own? Hill and I would really like to ride back by ourselves, have a little privacy. You can get a cab, right?\"\n\nIf Nicholas hadn't always thought Roger had a lot of nerve, this would certainly convince him. Asking if he wouldn't mind trading a ride in a plush limousine for the back seat of a cab, just so Roger could ride alone with Hillary was a pretty lousy thing to do. Especially since he was the reason they were there and more so why they had the weekend in the city. Something one of the people on the show had went out of the way to tell him wasn't the way it was normally done. Billy Lee had been genuinely impressed by what he'd done and had arranged for mini-vacation as a sort of reward. \n\n\"Okay, you two can have the car,\" Nicholas replied, as much to his surprise as theirs. \n\n\"Thanks pal,\" Roger said in a voice oozing insincerity.\n\nHillary didn't bother to even thank him, whispering instead something in Roger's ear and then racing down the hall toward the parking lot. Roger just sort of smiled at Nicholas, then ran after her, quickly disappearing around a turn in the corridor. \n\nTaking a deep breath and slowly shaking his head, Nicholas wondered why he had done that. The answer came quickly enough. He simply couldn't put up with the two of them pawing each other in front of him another minute. If he didn't see them before it was time to leave on Monday morning, it would be fine with him. \n\nWith that behind him, Nicholas considered what now. He could head back to the hotel himself, or ask someone to suggest a nice restaurant in the area. The quiet rumble in his stomach reminded him he been too nervous to eat at all today. Then after dinner, maybe a little sightseeing. \n\n\"What do you think,\" a soft voice behind him asked, \"do you think they'll make it back to the hotel first or is she just going to get down on her knees and blow him in the back of the limo?\"\n\nNicholas turned to find Tiffany Adams standing behind him. He'd been so lost in thought he hadn't heard her come up behind him.\n\n\"Excuse me?\" Nicholas asked, sure he'd heard her wrong.\n\n\"For my money, I'd bet on the blow job,\" Tiffany smiled, proving he had indeed heard her right. \"Hillary doesn't strike me as the kind of girl who has a lot of patience, much less self control.\"\n\nNicholas wasn't sure how to answer, even though he knew the actress was right on the money. He'd lost track of all the times he'd watched Hillary and Roger, and a few boyfriends before him, sneak off into the back storeroom in the middle of the day. Hillary always claimed he was helping her with the inventory, but the sounds coming out of the room when he was curious enough to put his ear near the door were unmistakable. \n\n\"So what are you going to do now that you've given away your ride?\" Tiffany asked, sensing that Nicholas wasn't going to give an opinion on her first question.\n\n\"I'm not sure,\" he admitted. \"I thought I'd ask if there was a nice restaurant I could go to in the area. That or just go back to the hotel and order room service.\"\n\n\"Either way, it hardly seems such a great way to spend your first night in LA,\" Tiffany commented, knowing too well what kind of hotel the show had probably put Nicholas up in. Nice enough, but definitely low budget. There were limits to the show's generosity. \"Not much of a reward for a hero.\"\n\n\"I really wish everyone would stop calling me that,\" Nicholas said, the impatience in his voice coming through. \"It was bad enough back home, but here it's really beginning to bother me.\"\n\n\"Then why did you say you say you'd come on the show?\" Tiffany asked out of curiosity.\n\n\"Well, it was a chance to see how a TV show was made and, well I guess I really didn't think that much about it. It all happened so fast.\"\n\n\"That's understandable,\" Tiffany smiled, having been on the end of the full court press of a determined booking agent herself. \"But if you don't mind my saying, you shouldn't throw off that mantle too readily before you see what you can get out of it.\"\n\nNicholas gave her a look that said he didn't quite understand.\n\n\"Well for one thing, some women find things like that really sexy,\" Tiffany grinned. \"Maybe not your friend, Hillary, but again, she doesn't strike me as the appreciative type. At least not towards those who really deserve it.\"\n\nThis time, Nicholas understood half of what she meant but before he could ask her to clarify it, Tiffany changed the subject.\n\n\"Do you like Italian?\"\n\n\"Food?\"\n\n\"No, sports cars,\" Tiffany quipped.\n\n\"Yes, I like Italian.\"\n\n\"I was planning to swing over to this really great place down in Marina del Ray that makes the most incredible Abbacchio alla Romana,\" she went on. \"It's only about a half hour from here, would you like to join me?\"\n\n\"Are you kidding?\" a surprised Nicholas asked.\n\n\"Honey, do I look like I kid about food?\" Tiffany laughed. \n\n\"I'd love to,\" he finally managed to say, thinking that none of his friends back home were ever going to believe this. \n\n\"Great,\" Tiffany replied with a smile that could melt butter. \"I'm parked in the private lot on the other side of the building, shall we go?\"\n\n-=-=-=-\n\nWhatever lingering disappointment Nicholas might have felt over giving up his last chance to ride in that luxury limo totally faded when he saw the car Tiffany led him to. It was a 1967 Ferrari 275GTS in mint condition. His jaw dropped when he saw the cherry red, two-seat convertible. \n\n\"This is your car?\" he asked in disbelief.\n\n\"What can I say,\" Tiffany grinned. \"I grew up with four brothers and a Dad who owned a car restoration business. Some of that sort of rubbed off.\"\n\n\"Can I drive it?\" Nicholas said without thinking.\n\n\"Maybe we should leave that until later,\" Tiffany offered, mentioning the value of the car should the newly licensed driver damage it.\n\n\"I think you might be right,\" Nicholas admitted as that number hit him like a bucket of cold water. \n\n\"Well just don't stand there, climb in and I'll show you what it can do,\" Tiffany laughed. \n\n-=-=-=-\n\nThe traffic on the 405 was just light enough at this time of night for Tiffany to do just that, much to Nicholas'delight. With the setting sun disappearing beneath the Pacific only a few miles away, they raced down the Interstate and made it to the restaurant in what had to be considered record time. \n\n\"Wow!\" Nicholas exclaimed as he looked out on the magnificent vista as the last rays of sunset faded beneath the horizon, its last remnant painting hundreds of boats a golden yellow. \n\n\"I take it you don't have anything like this back in Cherrywood Falls?\" Tiffany asked rhetorically, watching the sheer enjoyment on his face. \"Well we'll have to see what else we can find to make your trip memorable.\"\n\nOnce the sun had finally set, Tiffany led Nicholas across the road to a small, out of the way bistro. It didn't look like much from the outside he thought, but once they were inside, it was as if they'd been transported to a small village in Italy. At least from what he'd seen of pictures of such places.\n\nThere didn't seem to be an empty table anywhere, but Tiffany remained unconcerned. She patiently waited for someone behind the small counter in the corner to spot her, then smiled as a short, rounded man came rushing up to her. \n\n\"Buona sera, Miss Adams,\" the middle-aged man said with great enthusiasm. \"It's so nice to see you again.\"\n\n\"Good evening, Mario,\" Tiffany smiled back. \"I can see you have what looks to be a full house tonight, but do you think you could manage to find a small table somewhere for two hungry travelers?\"\n\n\"For you, anything,\" the restaurant owner smiled back, \"if you'll just follow me.\"\n\nMuch to the chagrin of the long line of people waiting in line behind the velvet ropes, Mario opened one of those ropes and let the pair thought the first floor of restaurant and up a flight of stairs to a small balcony. There were a few tables spread across the terrace and half of these were still empty. He showed them to one at the far end, one with a perfect view of the marina. \n\n\"I'll have someone come right up to take your order,\" Mario said after they'd taken their seats. \"Might I send up a nice red wine in the meantime?\"\n\n\"That would be fine,\" Tiffany answered, \"and perhaps a Coke for my guest.\"\n\n\"Excellent,\" Mario said, relieved that Tiffany had taken the initiative and ordered a non-alcoholic drink for the young man who was obviously under the legal drinking age. Not all of his celebrity patrons were that understanding and expected deferential treatment.\n\n\"I guess it must be great that you don't have to wait on lines and such,\" Nicholas remarked after Mario went on his way. \"One of the advantages of being a celebrity.\"\n\n\"Oh, that's not why we didn't have to wait,\" Tiffany laughed in that helium filled voice that had made her career. \"If you took a good look, there were plenty of famous people on that line. Just being in the movies doesn't count for a lot from Mario.\"\n\nSurprised, Nicholas gave Tiffany a look that seemed to ask why then.\n\n\"The one thing a man like Mario values above all else is loyalty,\" Tiffany replied to the unspoken question. \"He's very old world in that regard. I've been coming to his place since almost before you were born, back when he was just trying to get his business going. Eventually, the right people discovered just how good the food here really is and it's been wall to wall guests ever since. But Mario had never forgotten the people who came here when he was still struggling and always holds a place for them.\" \n\n\"That's pretty cool,\" Nicholas replied.\n\n\"Yes it is,\" Tiffany agreed. \n\nAs Mario had promised, a waiter appeared a few moments later, carry both their drinks and ready to take their dinner order. Tiffany ordered for both of them, asking Nicholas to trust her on that one. To which he readily agreed. \n\nThe food was indeed as good as Tiffany had promised and at one point, she even surreptitiously refilled his soda glass with some of the wine. Their conversation over diner proved even more enjoyable.\n\nTiffany asked about his life back in Cherrywood Falls, commenting that it didn't sound all that much different from the small town in Indiana that she'd grown up in. They also talked about his plans for the future and she seemed genuinely impressed that he had won a full scholarship to California Southern State. \n\n\"So what are you planning to study once you're there?\" Tiffany asked.\n\n\"I'm not sure yet,\" Nicholas replied, \"but if I can make the grades, I've been giving some thought to teaching.\"\n\n\"You're kidding,\" Tiffany laughed.\n\n\"Why is that so funny?\" Nicholas asked, thinking that she was making fun of him.\n\n\"Oh I'm not laughing at you,\" she quickly corrected him as she correctly interpreted his tone. \"I just thought that was funny that's all.\"\n\nA long moment passed then she explained why.\n\n\"Air-headed bimbo typecast to the contrary,\" Tiffany said, \"I have a bachelors degree in education science. Before I got the acting bug, I was working as a junior high school teacher.\"\n\n\"I never knew that,\" Nicholas said in surprise.\n\n\"Well, that's not the kind of sexy secret that usually makes the gossip columns.\" Tiffany grinned. \"Believe me, the image most people have of actors actually being the characters they play is rarely true.\"\n\n\"I guess not,\" the young man agreed.\n\n\"Now, wasn't this better than room service back in that box they call a hotel?\" Tiffany asked, changing the subject.\n\n\"Most definitely,\" Nicholas agreed.\n\n\"So what's the story with you and Hillary?\" she asked unexpectedly.\n\n\"What do you mean?\"\n\n\"You have the hots for her, don't you?\"\n\n\"Well...\" Nicholas hesitated, \"yes and no I guess.\"\n\n\"Yes and no as in, she's a girl you really want to fuck but can't stand her otherwise.\"\n\nNicholas turned bright red with embarrassment as in one sentence Tiffany summed up what he had thought was a complex relationship.\n\n\"Don't be embarrassed,\" Tiffany said understandingly. \"You're hardly the first young man to feel that way. Bad girls attract, it's that simple. If it wasn't I wouldn't have a film career.\" she added with a small laugh.\n\n\"I guess not,\" Nicholas laughed as well.\n\n\"You'd think she'd be more appreciative of the fact that you'd saved her life,\" Tiffany remarked. \"I know I would've been.\"\n\n\"Well, like you saw back at the studio, Hillary doesn't always see things the way other people do.\"\n\n\"Well that's not hard to do that when you're always looking up at the ceiling,\" Tiffany retorted, leaving no doubt as to what she meant by that. \n\nTheir conversation was interrupted right then as an older, blonde haired woman walked up to their table and said hello. If Nicholas had to guess, he'd say she looked no more than sixty and would be surprised to discover that he was a decade short in his assumption. Standing right behind her was a smartly dress brunette in her twenties, who had obviously just finished dinner with the seventy year old.\n\n\"I hope I'm not intruding, Tiffany,\" the woman, who also seemed familiar to Nicholas, said, \"but when I saw you I just had to stop and thank you for all the help you've given the foundation in raising money for the East LA Education Fund.\"\n\n\"Not at all, Abigail,\" Tiffany replied, making it clear that she knew the woman. \"I'm always glad to help good causes like that.\"\n\n\"Well if I had a few more helpers with drive like yours, we could double our contributions,\" Abigail replied. \"So I just wanted to thank you personally and hope we can count on you in the future as well.\" \n\n\"Think nothing of it,\" Tiffany insisted, knowing that the only reason Abigail even acknowledged her contribution was that she wanted her to devote even more time to the cause. The actual cause being the adoration of Abigail Anderson, not helping some poor kids get a better chance in school. \"Might I introduce you to my escort for the evening, Nicholas Porter.\"\n\n\"It's nice to meet you, Nicholas,\" Abigail said as she finally acknowledged the young man's presence. \n\n\"Nicholas and I were guests on \"The Midnight Hour\" earlier this evening and I thought I'd see to it that he at least had a really good meal on his short visit to LA,\" Tiffany offered in way of explanation. \n\n\"Well you certainly brought him to the right place for that,\" Abigail remarked. \"What did you do that earned you a place on Billy Lee's couch?\" she asked, familiar with the way the show operated.\n\n\"Why don't you just tune in tonight and find out,\" Tiffany quickly said, seeing the look of discomfort that flashed across Nicholas' face. \"It's a very interesting story, believe me.\"\n\n\"If I have the time, I certainly will,\" Abigail promised, leading Tiffany to believe that the thought would be forgotten before she even got out of the restaurant. \"Well, I do have to get going, it was nice seeing you again, Tiffany, and meeting you as well, Nicholas. Come along, Laura.\"\n\nThe young lady, who had been standing a respectable distance from the table, immediately fell in step behind Abigail and followed her toward the stairs to the lower level. \n\n\"You didn't recognize her, did you?\" Tiffany asked.\n\n\"She seems very familiar but I really couldn't place her.\"\n\n\"Abigail Anderson,\" Tiffany said, presenting the woman's whole name. \"You'd probably recognize her right away if you saw a picture of her as a younger woman, say thirty years ago. \"\n\n\"Carson's Crew,\" Nicholas burst out as the name helped him place the face. \"She played Mrs. Carson on Carson's Crew.\"\n\n\"You got it.\"\n\nCarson's Crew had been one of those super sweet, totally unrealistic family sitcoms of the seventies. Abigail had played Mom to a large combined family in one of those \"yours, mine and ours\" shows. Not as popular as the Brady Bunch, to which it had often been compared, it had nevertheless earned Abigail a place as one of those perfect TV Mothers. A doting image she had carefully cultivated ever since, creating in fact a charitable foundation around it.",
        "\"You didn't seem to happy to see her,\" Nicholas offered.\n\n\"No I wasn't,\" she replied.\n\nNicholas was tempted to ask why not, since it was obvious that the two woman had a common interest in education, but then figured that if Tiffany wanted to tell him, she would.\n\n\"It's just that I won't be doing any more fund raising for the foundation,\" she answered after a moment's consideration. \"She already knows that, and was just trying to put me on the spot.\"\n\n\"Why is that?\" Nicholas asked, now that the subject had been brought up. \"It sounds like it would be something you'd be interested in.\"\n\n\"Oh it was,\" Tiffany replied, \"at least until I found out that Abigail is now in bed, so to speak, with one of those right wing religious groups who want a big say in how that money is going to be spent. I can't believe how hypocritical she is, cozying up to people like that.\" \n\nNicholas' expression seem to ask why and Tiffany went on. \n\n\"Lets just say that if you wanted another example of people being totally unlike their public persona, Abigail would certainly be one,\" Tiffany said, venting her momentary anger.\n\n\"Why is that?\" Nicholas asked, just a little bit confused.\n\n\"Well, it's not like it's a really big secret, at least not to anyone who's been around for a while,\" Tiffany said, thinking that perhaps she shouldn't have brought it up in the first place, but now that she had. \"Do you remember all those stories that came out about the actor who played the Dad on the Brady Bunch?\"\n\n\"You mean that he was actually gay all that time?\"\n\n\"Exactly.\"\n\n\"Well, lets just say that if people looked a little harder at Carson's Crew, you'd find the same kind of stories.\"\n\n\"Kevin Wells was gay?\" Nicholas asked, visualizing the actor who had played Mr. Carson.\n\n\"No, but you're real close,\" Tiffany smiled.\n\nThen the realization hit the young man.\n\n\"And that girl she was with?\" Nicholas asked out of curiosity.\n\n\"Well let's just say that if I believed she's just one of her assistants, then I'm probably just as dumb as some of the characters I play.\"\n\nOn that high note, dinner came to an end and the two of them headed back to Tiffany's car. It was already after ten and they'd have to get going if she was going to drop Nicholas off back at the hotel in time for him to see himself on the show. Normally, she never watched her own appearances on talk shows. \n\n\"I had a really great time,\" Nicholas said as he strapped his seat belt tight. \"I almost wish it wasn't over.\"\n\n\"I'm sure you must be exhausted after such a long day,\" Tiffany pointed out.\n\n\"Actually, I'm more wide awake than I was during the show,\" Nicholas answered, explaining how he had stayed up the night before thinking the show had actually been on at midnight.\n\n\"Well, in that case, I have another idea,\" Tiffany quickly offered. \"My beach house is probably a whole lot closer than your hotel. If we watched the show there, we could record it on my DVD recorder so that you could take a copy home with you.\"\n\n\"That sounds fantastic,\" Nicholas instantly replied. \n\n-=-=-=-\n\nThere were few cars on the road to the shore this late and Tiffany made the most of the emptiness. So much so that it was less than a quarter hour later that she coasted the sleek convertible into a small garage on the overlook. Locking the door behind them, she led Nicholas down a narrow, long wooden staircase to the beach below. There, only a few hundred feet from the bottom of the slope, stood the beach house. \n\nAs they walked the planked path between the stairs and the house, Nicholas looked down the beach, taking note that the next closest house was at least a quarter-mile distant. Obviously, Tiffany or her neighbor owned the property between their homes because it was too prime a spot not to have put another house there. \n\nTiffany's house was a small, split-level design, with a good-sized deck facing the beach. Most of the upper floor seemed to be windows, the largest of which included a door that opened onto the deck. Climbing up the stairs just below it, Nicholas followed Tiffany into the house by that route. \n\n\"Well, here we are,\" Tiffany smiled as they walked into the main room.\n\nThe house had, Tiffany said as she have him a quick verbal tour, the one large all purpose room, that took up the upper floor. Down below stood a small kitchenette, the utility room, a bathroom and a walk-in shower. \n\nIn the center of the main room was a long, L-shaped sectional, in front of which sat a plasma screen television, much like the one he had seen back in the studio. There were only a few other pieces of furniture, mainly a couple of bookcases, a large chest and two oversized dressers. On the back wall were a collection of photographs, a few of the subjects instantly recognizable as people Tiffany had worked with over the years. \n\n\"We still have a few minutes before the show starts,\" Tiffany said as she took the remote from a compartment in the couch and turned on the television, \"why don't you run down to the kitchen and get us something to drink while we watch? There's beer and soda, help yourself to whichever you want. I'll take a bottle of Heineken.\"\n\nNicholas found the kitchen easily enough, deciding to also have a beer. After all, who was going to see him drink it here. Curious, he stuck his head into the other two rooms and saw that aside from a propane water heater, the utility room had a small washer/dryer combination and a bookcase sized food pantry. The last room was a walk in shower with twin showerheads on opposite walls. \n\nClimbing back up the stairs, a cold bottle in each hand, Nicholas almost dropped both drinks when he reached the top and saw Tiffany standing with her back to him a few feet away. For a fleeting moment, just before it disappeared beneath a short, thin robe, he had a perfect view of both her ass and the side of her left breast. In that split second, he had also noted a small, elegant design tattooed across the small of her back. \n\n\"I just had to get out of that dress and into something more comfortable,\" Tiffany said as she ran one hand across her short hair while reaching for the beer with the other. \"I'll slip into some jeans later on when we have to take you home.\"\n\n\"Okay,\" Nicholas said as Tiffany popped off the top of the bottle and, tilting her head back took a drink.\n\nNicholas' mouth dropped open as the flaps of her rope opened far enough to display even more of her bust than the low cut dress she had discarded. A small amount of beer spilled out of her mouth and slid down across her chin, tracing a wet trail down between her breasts. Lowering the bottle, Tiffany slid her hand between her mounds and wiped the liquid with her fingers, bringing them to her mouth afterwards and sucking them clean.\n\n\"The show's starting,\" she said as the familiar theme came over the television, ignoring what she had just done as if it was a common, every day occurrence. \n\nSitting down on the edge of the couch, Tiffany tucked her legs up beneath her and took another shorter taste. Nicholas took a seat on the other end, wondering after he did if he picked that spot to keep a respectable distance or to just afford himself a good view of her breasts. \n\nWith the image of her fingers running across them very much fresh in his mind, Nicholas stole a few surreptitious glances in her direction. Then, discretion took hold and he transferred his attention to the version of Tiffany now appearing on the screen. \n\nNot having paid that much attention to her interview while it was being recorded, Nicholas found it interesting. Especially now that he had gotten to know her a little. \n\nTiffany made a few comments about her interview, as well a couple of jokes about Billy Lee. Nicholas laughed at the jokes, out of both politeness and the fact that some were actually funny. \n\nThen Billy Lee announced his guests for after the commercial break and a thrill raced through Nicholas as he heard his and Hillary's names. Taking a drink, he wondered for a second if Hillary had remembered to watch the show or if she and Roger were too busy fucking their brains out to turn on the TV. \n\nNicholas felt the same wave of embarrassment that he'd experienced earlier as he listened again to Billy Lee telling his story. The view of the camera panned over to Hillary and as he watched her brief appearance, Nicholas realized how bad her clothing choice, a pair of jeans a size too small and a leather vest with nothing beneath it but her charms, had really been. Evidently, Tiffany had much the same thought.\n\n\"I hate to say this,\" Tiffany pointed out, \"but your friend dresses more like she's open for business on Sunset Boulevard than appearing on national television.\"\n\n\"Yeah, that's Hillary,\" he had to agree.\n\nThe program continued and, now from the perspective of onlookers rather than participants, both of them could see just how inappropriate Hillary had behaved. She kept trying to get Billy Lee's attention, flashing as much of her gems as she could. \n\n\"That sort of thing might work back in Cherrywood Falls,\" Tiffany laughed, \"but you have to do a lot more than flash a little flesh to get anywhere with Billy Lee.\"\n\n\"Oh she's willing to do a lot more than just show a little,\" Nicholas said without thinking, remembering that Hillary's trips to the storage room actually dated back to their first year of high school and that the restaurant owner had been the first one to go back there with her. \n\n\"Even so, there's a long line of girls ahead of her,\" Tiffany added, remembering the Intern she had watched follow Billy Lee off the set, \"and some of them even have talent in areas actually related to show business.\" \n\nTheir interview ended and Tiffany picked up the remote and clicked off the television. The segment with the author had been boring enough the first time around. \n\nOverall, Nicholas had enjoyed watching the program, especially comparing what he seen live and how it compared to the edited tape. He still felt a little funny about being called a hero in front of all those people, but what was done was done. \n\n\"Tired yet?\" Tiffany asked as she laid down her now empty beer.\n\n\"Actually, I probably should be,\" Nicholas replied as he realized how own bottle was also empty, \"but I feel more wide awake now than I did a few hours ago.\"\n\n\"Adrenaline rush,\" Tiffany offered, \"I get that myself at times.\"\n\nHe nodded his head, thinking she was right.\n\n\"If you're not in a hurry rush to get back to the hotel,\" the dark haired woman asked, \"how would you feel about a walk on the beach. It's really beautiful at this time of night.\"\n\n\"That sounds great,\" Nicholas instantly replied, thinking this night couldn't get any better. \n\nThe beach was indeed beautiful, stretching almost fifty yards from the house to the edge of the water. Having left his jacket and tie up in the house, Nicholas now took off his shoes and socks , rolling up his pants so that he could follow Tiffany across the wet sand. \n\nWater from the incoming tide splashed across their feet as they watched the full moon hang high in the night sky. A warm Pacific breeze washed over them as Tiffany played with the sand with her toes.\n\n\"You know what would feel really good right now?\" Tiffany asked rhetorically. \"A midnight swim.\"\n\n\"I don't have a suit,\" Nicholas answered automatically.\n\n\"Well, I wasn't planning to go back up to the house to get mine,\" Tiffany smiled mischievously. \"Haven't you ever gone skinny dipping? Come on, it'll be fun.\"\n\nWith that, she dropped her robe to the beach and, after standing totally naked in front of the young man for what seemed like an eternity, splashed into the surf. Nicholas stood there for what seemed like a second eternity, then began to pull off his own clothes. \n\n\"No one, absolutely no one is ever going to believe this,\" he said to himself as he dropped his underwear next to her robe and followed into the water. \n\nIt only took a few strokes for Nicholas to catch up to Tiffany. Looking over her shoulder to be sure he'd done so, the older woman began to swim in earnest, inviting her guest to keep up with her. Despite being half her age, Nicholas had to give it his best to do just that.\n\n\"I guess I should've mentioned that I was on the girl's swim team back in high school and college,\" Tiffany laughed as she stopped and turned around to face Nicholas.\n\n\"Now you tell me,\" he laughed in response, looking about and realizing that they had gone pretty far out.\n\n\"Nervous?\" she asked, seeing the concern on his face.\n\n\"A little I guess,\" he admitted as he treaded water.\n\n\"Don't be,\" Tiffany assured him. \"The bottom's only about six feet this far out and besides, I still have my Red Cross certification as a lifeguard. You'll be fine.\"\n\n\"I didn't know that,\" Nicholas said, thinking that he'd never have imagined half the things he'd learned about Tiffany tonight.\n\n\"There are a lot of things about me that I think would surprise you,\" Tiffany said as she suddenly stopped the motion of her legs and dropped beneath the waves.\n\nBefore Nicholas could react, Tiffany swam the short distance between then and resurfaced with a splash, practically on top of him. She closed her arms around him and, pulling him closer, kissed him hard enough to literally take his breath away. \n\nThe kiss complete, Tiffany released her hold and backed off a few feet. Floating again, she was just low enough for Nicholas to make out her nipples in the moonlight as her breasts bobbed in the water.\n\n\"I guess you're wondering why I did that,\" she grinned. \n\nThe feel of her lips against his was still too fresh for Nicholas to do anything but listen.\n\n\"Let me tell you a little story,\" Tiffany went on, \"one that I've never told anyone, at least not since I came to Hollywood.\"\n\nNicholas moved a little closer as if to give her more privacy, metaphorically if not physically. That she was naked no longer seemed to matter, he realized. \n\n\"Back when I only a few years older than you, I was trapped in a fire at the school where I worked,\" she confessed. \"The details of the how and why aren't that important, except that I was sure at that moment that I was going to die. And die horribly.\"\n\nNicholas was almost holding his breath, not wanting to interrupt her story with even the sound of his breathing.\n\n\"Obviously, I didn't die,\" she said, the momentary dark look on her face morphing into a lighter one. \"And the reason I didn't is because someone risked their life to save mine. A man I didn't even know and never even got the chance to thank.\"\n\nListening to the story, Nicholas could feel himself, if only for a fleeting moment, back in the diner. With the heat of the surrounding flames replacing the coolness of the ocean water against his skin. \n\n\"That man was a hero,\" Tiffany said, \"just like you.\"\n\nThis time, Nicholas was too engrossed to blush.\n\n\"And I don't want to hear again how you aren't,\" she said with conviction. \"Someone much wiser than me once said, a hero is no braver than an ordinary man, but he is braver five minutes longer. If that's really the case, I owe the last twenty years of my life to those five minutes.\"\n\nOf all the things Nicholas had heard said about heroism in the last week, he had to say that made the most sense. \n\n\"And I think, no I believe, a hero should always be rewarded,\" she concluded as she again moved closer so that their bodies were practically touching.\n\n\"Thank you,\" Nicholas said, thinking as rewards go, this hadn't been bad.\n\n\"Oh I'm not finished,\" she smiled as her breasts rubbed against his chest and her hand slipped down between his legs.\n\nNow it was once again impossible for Nicholas to be unaware of her nudity. Not with her fingers wrapped around his cock.\n\n\"Do you remember back at the studio when I said some girls find heroes sexy?\" \n\nHe nodded yes.\n\n\"Well, I find you a lot more than sexy,\" she said in the tiny, yet high pitched voice that had spawned a thousand hard-ons, even as her fingers continued to work his cock, adding one more to that list. \n\nA long minute passed, then two, by which time Nicholas realized that if she kept playing with his cock, he was going to come. A few seconds more and that thought became reality as he exploded into the warm waters around them. \n\n\"Oh shit,\" he gasped.\n\nTiffany lifted her hand up out of the water, glancing down at the diluted whiteness clinging to the palm of her hand. She smiled and washed it off. \n\n\"That was just to show you that I was serious,\" she assured him. \"If you want to see just how grateful a woman can be, meet me back at the house and I'll be happy to show you. Like I said, I never got the chance to thank my hero, but I like to think he must've been a lot like you.\" \n\nIn the short time it took for her words to sink in, Tiffany was already halfway back to shore. Nicholas was quick to follow, telling himself to be careful as he did because this would be the absolutely worst time in his life to drown. \n\n-=-=-=-\n\nReaching the shore, Nicholas didn't bother to get dressed. Instead, he just grabbed his clothes in a bundle and started after Tiffany. She had waited just long enough to make sure he made it in, then raced, also naked, toward the house. Running as hard as he could, Nicholas could see Tiffany open the ground floor entrance and disappear inside. \n\nBarely taking the time to lock that door behind him, it only took a second for him to realize where she had gone. The sound of running water in the shower was pretty much a dead giveaway. Dropping his pants and shirt next to where Tiffany had left her robe, Nicholas stepped inside the small room.\n\nDespite an almost two-decade career playing buxom vixens, Tiffany, unlike many of her peers, had done so without ever appearing nude. Like many of the stars of early movies, she had vamped her way with innuendo and just a tease of flesh. A practice that made her just that much more alluring to her fans. So, now faced with his first good look at her naked body, Nicholas was sure she would understand his, at least momentarily, inability to do anything but stare. \n\nWatching her stand under the dual showerhead, her hands spreading soapy water all over her body, Nicholas remembered reading in a magazine that the five foot five actress had a 36C bust. That simple fact in no way gave justice to the magnificence only a few feet in front of him. Without looking down, he knew that his cock had already shaken off the numbing effects of the late night swim and was in fact rock hard.\n\nTiffany's hands continued to spread body wash across her skin, playing with her breasts as her fingers caressed her large, dark pink nipples. From there they slid down across her thighs, grabbing the cheeks of her ass as she carefully washed herself there. Moving back upward, she again cupped the undersides of her breasts, pressed them together, vigorously rubbing the slippery flesh of one each against the other. Letting go after a few moments, her hands dropped down to converge on the thin patch of hair between her legs. She angled her body so that the stream of water washed it clean, then massaged it just as enthusiastically, her fingers reaching deep inside her self.\n\n\"Fuck!\" was all Nicholas could manage to say, and even that was in a barely managed whisper.\n\nFaster and faster her fingers moved, sliding in and out of her pussy. Finally, with her eyes tightly shut and her head arched back, Tiffany let out a long, soft moan that told Nicholas that, for the first time in his life, he'd just seen a woman have an orgasm.\n\nLost in her own world, Tiffany stood under the steaming water for a few moments more, then opened her eyes and for the first time acknowledged Nicholas' presence. \n\n\"In case you haven't noticed,\" Tiffany said in her most sultry tone, \"this shower was built for two.\" \n\nSnapped out of his contemplation, Nicholas quickly stepped under the shower with her. Tiffany put her arms around Nicholas, pulling him in close. Their lips met and they began to kiss. The kisses started out slow and gentle but soon grew more passionate, her tongue exploring the deepest recesses of his mouth.",
        "Filling her hands again with scented body wash, her fingers closed around his cock, sliding back and forth, gently massaging it and the balls beneath with sensual care.\n\nNicholas lifted his own hands and embraced her celebrated breasts, running his fingers across the lathered flesh. Her nipples grew hard at his touch, a shiver racing through his body. At the same time, he could feel her body react to his touch, her heart racing as her pussy again grew moist. \n\n\"Not that it matters,\" Tiffany asked as they finally broke their long, intense kiss, \"but have you ever been with a girl before? I mean, you're not a virgin, are you?\"\n\n\"No, of course not,\" Nicholas replied with all of the sincerity he could muster. \"Well, not really,\" he amended his reply. \n\n\"What does not really mean?\" Tiffany asked.\n\nThe truth was, Nicholas confessed, he was practically a virgin, having only gone all the way that one time with Cheryl Russell last Christmas. Technically, he had lost his virginity since he did get it inside of her, but he'd climaxed almost before they'd even got started. \n\nHe'd tried several times for another at bat, but Cheryl wasn't interested. She'd just grown tired of all the rigmarole everyone seemed to attach to losing their cherry and decided to just get it over with. Now with that out of the way, she could concentrate on more important things.\n\n\"Well, I'm certainly not going to call you out before you get a hit,\" Tiffany smiled. \"In fact, I think that with a little help, you could easily go for extra bases.\"\n\nNicholas was relieved that Tiffany wasn't put off by his inexperience. He never imagined that to some women, that was actually a turn-on. \n\n\"Just do what feels good,\" Tiffany reassured him, \"I'll let you know if you're on the right track.\"\n\nNicholas might not have had a world of experience to draw upon, but he did have one hell of an imagination. More importantly, unlike any of the girls back home, Tiffany was willing to let him try anything he wanted. Too many girls his own age played that game of, yes, I like to fuck, but then acted as if they still wore virginal white. He'd even once overheard Hillary, of all people, when asked by a girlfriend about sex, actually claim she wasn't that kind of girl. \n\nFiguring the best thing to do was to follow Tiffany's advice and just let his instincts guide him, Nicholas lifted one of Tiffany's mounds and closed his mouth around her enlarged nipple, feeling it harden. A soft moan slipped from her lips, telling him his instincts were right on target. \n\nTiffany moaned even louder as Nicholas started to suck on her nipple in earnest. Encouraged by her response, he began to suck a little harder, taking more of her breast into his mouth. The tip of his tongue lightly circled the rigid nub, teasing it as he placed a hand on Tiffany's other breast and began to caress it. \n\nTiffany's whispered encouragements continued as, after a few minutes, Nicholas shifted to her other mound, again teasing its nipple with his tongue before taking it between his lips. Simultaneously, he used both hands to squeeze and caress her large globes. In response to which the actress pressed her breasts harder against Nicholas' hand and mouth.\n\nAlternating soft kisses with gentle, and some not so gentle bites, Nicholas moved back and forth between the celebrated mounds. Tiffany ran her finger through his short hair, wrapping his locks around her fingers as she helped guide him to her more sensitive areas. \n\nReleasing his hold on her breasts, Nicholas took a half step back and turned Tiffany around so that he was now behind her. He ran his hands down the length of her back and across her ass, parting her legs so that his fingers could slide between her cheeks to brush against the hairs of a mound, trimmed so close as to be almost bare. The few girls he'd gone this far with had all been au natural in that regard. Not having to work through a tangle of hair certainly made it easier to find his way. \n\nA goal that once again the volume of Tiffany's cries helped lead him to. His fingers found her excited clit and he began to massage it. As with her breasts, gently at first, then with increased vigor.\n\nHe could feel her wetness around his fingers, assuring him that he was still on the right path. But from here on, he was pretty much in virgin territory, so to speak. Even Cheryl had only let him put his fingers, and then his cock between her legs.\n\nUnlike some of the guys he'd heard talking about it back in school, Nicholas had no reservations about going down on a girl. After all, he certainly wanted her to do the same for him. The big problem had been to find a girl to practice on. For some reason, all three of the girls that had performed oral sex on him had declined his offer to reciprocate. He was pretty sure, that wasn't going to be a problem with Tiffany. \n\nStarting at the base of Tiffany's back, moving down across the soft cheeks of her ass, Nicholas kissed his way down to her pussy. There, he paused for the longest of seconds, appreciating the beauty of that which he'd only seen under the dim light of his car's backseat. \n\nBreathing deeply, he drew in the fragrance of her aroused womanhood, a scent he found intoxicating. He kissed her clit, running his tongue up and down her mound tasting the sweet honey that coated it. A delight he instantly decided was to his liking.\n\nTiffany continued to loudly moan as Nicholas kissed and licked her pussy. For someone who had never done this outside his dreams, Nicholas was getting Tiffany more and more excited. She spread her legs wide as he pressed his tongue deep inside her, giving him as much room as possible. \n\nBringing a hand into play, his fingers sought out her clit, rubbing gently against it as he coaxed it between his lips. Following the example of what had worked on her nipples, he played her clit in a similar fashion. \n\n\"Oh yes, right there,\" Tiffany cried out as a pleasant electric jolt rippled across her body. \n\nSupporting herself against the tiled wall, Tiffany closed her eyes and let Nicholas lick her pussy to his heart's content. A task he went at with ever-increasing zeal. \n\nTiffany was moaning even louder now, pushing her hips against Nicholas' mouth. Nicholas stuck his tongue harder and deeper into Tiffany's pussy, twisted it everyway he could. He was a man with a mission, to pleasure her the way he always imagined a woman should be. He licked and sucked, taking her clit into his mouth repeatedly. Using short quick strokes, he brought her to the brink of climax.\n\nA brink she went hurdling over a half dozen heartbeats later, her body quaking with excitement as the forces he'd unleashed ripped across her trembling form. It wasn't the most powerful of climaxes, he knew, but it would be the one he would forever be the most proud of having delivered. \n\nOnce she had recovered from her unexpected orgasm, Tiffany stood and turned, kissing Nicholas and tasting her own fruits in his mouth. She hadn't been exactly sure where this night was going to go when she'd invited Nicholas to dinner, having acted on emotion rather than reason. Now, she was absolutely certain what came next. \n\nDropping to her knees, Tiffany fondled his balls and stroked his length with her fingers. Then, wrapping her lips around his cock, she ran her tongue across his crown. Slowly, she dragged her mouth and tongue up over his hardness, savoring every inch. \n\nNot lost to Nicholas, despite the absolute delight spreading from his loins, was the fact that this was Tiffany Adams sucking his cock. Not some horny cheerleader, or frustrated housewife, but a real, honest to God, movie star. This was beyond his wildest fantasies. \n\nTwirling her tongue again around the tip, she slowly lowered her mouth down his shaft, deep-throating in a way no girl back home had ever done.\n\nA sly smile formed on the corner of Tiffany's mouth as she listened to the sighs of satisfaction filling the air. She knew how good a cock sucker she was, a talent formed over twenty years of staying in a game where there was always someone younger and sexier nipping at your heels. That she was doing it now solely to bring this young man pleasure only added to her own. \n\nHer mouth felt unbelievable, Nicholas thought, and it was only getting better. She sucked, licked, kissed and caressed every inch of his manhood, enjoying every reaction his body gave. For ten long minutes, she centered his universe on his cock and her wondrous mouth.\n\nTiffany's head bobbed up and down on his erection, her hand keeping time as she continued to hold him tight. Deep inside, Nicholas could feel a familiar surge building. Along with a sudden fear that it was going to be Cheryl Russell all over again. \n\n\"Tiffany, ... I ...\" he started to say in warning. \n\nBut years of experience had her way ahead of him. She could read his body's response almost as well as he could and had already toned down her efforts. This time, mighty Casey was not going to strike out.\n\nLetting his still hard cock fall from her mouth, Tiffany stood up and kissed Nicholas hard, pressing her breasts tight against his chest. Her kisses continued down his neck and across his chest, paying careful attention to the small nipples that like hers, were quite receptive to stimulation. \n\nTwisting around in his arms, Tiffany pressed her ass against his cock, massaging it with her cheeks. Taking his hands in her own, she placed them squarely on her breasts, inviting him to play with them again. \n\nShort minutes passed as Tiffany kept things on simmer, then decided it was time to bring them back to a boil. \n\nGetting down on all fours, Tiffany stretching out on the long shower mat, and motioned for Nicholas to get down behind her. Getting down on his own knees, the young man followed her instructions. \n\nReaching back between behind her legs, Tiffany took hold of his cock and aimed it at her pussy, rubbing the head against her wetness. Softly she moaned. Hard as it might be for some to believe, it had been a while since she'd last been with a man. Pressing backward, she forced the head just past her folds.\n\nThere she paused, to give Nicholas a chance to get comfortable. Glancing over her shoulder, she smiled at her young lover and gave him a slight nod. Then she lowered her head, resting it on her folded arms, slightly lifting her rear at the same time, inviting him to enter her.\n\n\"Fuck me!\" Tiffany practically ordered him as she pressed against his cock. \"I want you to think about how hard you wanted to fuck Hillary and then fuck me ever harder!\"\n\nWith that, Nicholas leaned forward and effortlessly slid into her. As amazing as his cock had felt in her mouth, that paled when compared to the tight warmth now engulfing his manhood. \n\n\"Oh God!\" He gasped as two became one.\n\nHis much too brief encounter with Cheryl washed away in that second. In years to come, when he thought of losing his virginity, this would be the moment he remembered. \n\nWith a firm grip on Tiffany's hips, he soon developed a firm rhythm. One that Tiffany quickly matched, timing her gyrations to meet his forward thrusts.\n\nThe pace quickened and Nicholas' thrusts became more pronounced, each drive penetrating deeper than the last. He would pull his hardness almost all the way out, then press forward in a furious forward motion. Each time he looked down at the beautiful woman stretched before him, he was reminded of how many times he and his friends had watched her on the screen and fantasized about her. \n\n\"Fuck me, Nick, fuck me harder!\" Tiffany cried out in that sexy voice which had enthralled her legions of fans. \"I want you to make me come!\"\n\nThat she had used the hated diminutive of his name didn't make a difference, all that mattered that he help her reach the climax she craved. \n\nDrawing on all his youthful vigor, Nicholas drove into her, his cock slamming against her pussy. Tiffany met him with, if not equal strength, equal resolve. Their coupling grew more intense as they neared what both knew would be an explosive moment. \n\nReaching down between her legs, Tiffany's fingers found her clit, adding her own skills to the mix. The dual pleasures brought by her hand and Nicholas' cock drove her to the edge of bliss, needing only the gentlest of touches to push her over that edge. A touch that was akin to a match dropped in a pool of gasoline as a veritable explosion ignited every nerve in her body. \n\nThe walls of her pussy constricted around his cock as Nicholas exploded inside her, the force of her climax triggering his. Time stood still as their bodies rocked in orgasmic ecstasy.\n\nAt that moment in time, he was just a man and she just a woman. With the pleasures they shared as old as life itself. \n\nDrained, Tiffany collapsed on the wet floor, followed a heartbeat behind by Nicholas. The heat of their passion slowly cooled as did the water showering down on them. Tiffany pulled Nicholas to her, kissing him softly on his lips. \n\n-=-=-=-\n\nNicholas didn't get back to the hotel until Monday morning, barely twenty minutes before they were scheduled to leave for the airport. Quickly packing his bag, he was just closing the door behind him when he ran into Hillary and Roger coming out of their room across the hall.\n\n\"Hey, look who finally showed up,\" Roger said as he spotted Nicholas.\n\n\"Like you really missed me?\" Nicholas shot back as he double-checked the door to make sure it had locked. \n\n\"Not really,\" Hillary put in, \"we were just worried that if you didn't show up, the car might not take us to the airport.\"\n\n\"Right,\" Nicholas said with a smile.\n\n\"So where were you all weekend?\" Roger asked out of curiosity while they waited for the elevator.\n\n\"I just decided to do a little sightseeing,\" Nicholas replied, unable to ignore his curiosity in the narrow confines of the elevator.\n\nActually, that was the truth, if not the whole truth. He had spent the last two days seeing much of what interested him in Los Angeles. Tiffany had even arranged for him to take a personalized tour of one of the local film studios, where this time, his guide was more than happy to answer all of his questions. \n\nWhat was left out of his answer was the fact that every night he went back to Tiffany's place and shared her bed. He lost track of how many orgasms they'd shared, or the number of new positions he'd learned. He'd come to LA pretty much an innocent, but he was going home a much more experienced man.\n\n\"Well I guess that was better than sitting in the hotel room eating room service and watching pay per view,\" Roger laughed as the door opened on the lobby.\n\n\"Not that we had much time to watch TV,\" Hillary chimed in, drawing attention to how they'd spent the last two days. \n\nIf she was waiting for a hurt reaction from Nicholas, as she usually was, this time she was disappointed. Much to her surprise, he just smiled a knowing smile and walked out the elevator.\n\nThey barely said a word to each other all the way to the airport, and sat in different rows on the small plane. His mind was on more important things, among them the DVD of \"The Midnight Hour\" and an autographed photo of him and Tiffany taken at dinner last night. Closing his eyes, he could see the inscription Tiffany had scrawled across the print Tiffany had given him when he kissed her goodbye early this morning.\n\n\"To Nicholas, my hero,\" she had written, \"if five minutes is worth a lifetime, then two days are worth forever.\"\n\nAnd forever would be how long he would remember these last two days. \n\nEND"
    ],
    "authorname": "Ann Douglas",
    "tags": [
        "straight",
        "intergenerational",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/five-minutes-and-forever"
}