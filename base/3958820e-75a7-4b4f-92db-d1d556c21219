{
    "title": "\u00c6gir\u2019s Bride Ch. 10",
    "pages": [
        "Kirsty sipped her morning tea as she watched Monika swing. The storm had finally chased them back to the house after dark last night, but even then she knew Bjorn was reluctant. She was reminded once more of a couple of teenagers sneaking in after curfew. They had stopped downstairs only long enough to raid the refrigerator. \n\nEven at breakfast this morning, the usually jovial Bjorn had remained withdrawn and sullen. Only in her arms had he been the man she had come to love. Even then though that shadow remained. They had made love a couple more times once they made their way to her room. And it was making love, no kinky stuff at all. Well almost none, the man's kisses were lethal after all. Each time though, he had been almost paranoid about pulling out of her before he came. That still hurt, bothered her. Even if she had agreed to give it, him, time. \n\nOf course, Sven had only made things worse with his equally sullen attitude over breakfast that morning. He had barely spoken three words the whole time, but he was constantly sneaking glances in her direction when he thought no one was looking. She was not certain what to make of that...or him for that matter. He had been the one that woken her, sent her to Bjorn, so why the attitude. Other than their 'fight.'\n\nShe smiled...fight. It was not like her actually. She tried to remember a single argument with Raj, but she could not. She frowned, was that because neither actually cared enough to disagree? She shook her head. What did it matter now? He had his wife and the baby she was expecting. And she had her...three husbands. She laughed aloud at the idea.\n\n\"What's so funny?\" Mikael's baritone caressed her mind.\n\nShe turned and smiled up at him around the brim of the mug, \"The idea of three husbands actually.\"\n\nHe nodded, but she noticed the cloud that passed over his face as he ignored her comment, \"How is she doing?\" He frowned as he ran his hand through his darker blonde hair, \"I really do appreciate all you are doing with her...with us. She seems so much more...I don't know...relaxed. Thank you,\" he stammered.\n\nKirsty saw the tension written all over his face, his stance. Something was wrong, very wrong. If it had been Bjorn, she would have simply asked. But though she and Mikael had a truce, she still was not confident talking with him except when it came to his daughter. So she stuck to that and hoped he would reveal whatever was bothering him in time. \n\n\"She truly is a wonderful little girl, Mikael. All of you have done so well with her. I am sure that you would have found some way to reach her even if I had not come,\" she began.\n\nHe shook his head, \"No, we could never have done this...not as quickly, not like you have. I just wish...\" he trailed off. Kirsty noticed him clenching and unclenching his hands at his side, \"Odin be damned Sven, why now?\"\n\nKirsty frowned at him, \"What do you mean, why now? What has Sven got to do with anything?\"\n\nMikael turned to her, his face dark and sullen. \"Sven insists on going back to sea.\"\n\nPanic rose inside of her. Why she was not completely certain? Was it that this place was still so new, that she could not imagine it without them? Of course, she would miss Bjorn and Mikael. But maybe it was Petrine's stories that niggled most at her mind. Lars. Whatever it was, she was not going to over-react. 'Never let them see you cry.' \"Why? When?\"\n\nMikael sighed heavily, \"He wanted to leave today, but Bjorn and I insisted we wait until tomorrow morgan at least. As for why? Do you think the great, high and mighty captain shares that with us?\" \n\nThe vitriol dripped from each of his words. For the first time, she thought about what it must truly be like for them, for Mikael and Bjorn. It was not like they got to choose their career, they were born to it. What's more the very order in which they had been born placed Sven over them. Not skill or merit, though she did not doubt that he had those. But so too did both of his brothers. It seemed intensely unfair somehow. \n\n\"We'll just see about that,\" she said as she placed her hands on her hips and turned to storm through the woods for another confrontation with the man. \n\nMikael shook his head and reached for her. His hand wrapped about her upper arm and brushed innocently against her breast. The way her body flamed to life though was anything but. She sucked in a deep breath and bit back a low moan that escaped as a whisper anyway. \n\n\"Sorry,\" he mumbled as he cast his eyes towards the ground. That drew her own eyes downward as she noticed the thickening in the front of his jeans. She smiled at the knowledge that truce or no, she could still have some effect on her bad boy. His voice too was husky as he asked, \"Where are you going? What do you think you can do?\"\n\n\"I am going to give him a piece of my mind, that is what I am going to do. Who does he think he is to kidnap me and then just dump my ass here all alone after less than a week? I barely know this place. And while I like your mother and father, even she admits that big bed is lonely. Hell, no, what is the man thinking?\" she raged uncharacteristically.\n\nMikael inhaled deeply, \"We already pointed all that out to him, Kirsty. He said that this was our life and you had better get used to it.\"\n\n\"He said what?\" she fumed until she feared that she looked cartoonish with wisps of smoke curling out her ears. \"Take over here. I have a few things to say to Mister Cool.\"\n\nMikael shook his head and tightened his grip on her arm, \"Leave it for now, please. Bjorn and I will ask my father to try speaking to him after dinner tonight. I promise.\"\n\nShe jerked her arm away, \"No, enough is enough. He can't do this. If \u00c6gir's Captive is going back to sea, I will be on it. If being abandoned like this before I even know my way around is how it is going to be, you can take me back now.\" Even as she said the words, her throat constricted, tightening until she would have sworn she felt Bjorn's hand on her throat.\n\nBut it was the dark look on Mikael's face that kept her frozen to the spot as much as his painfully tight grip, \"No, no, we will not. You fucking belong here. You are ours. And if I have to fucking tie your ass to that bed again, you are not going anywhere. I have lo...\" \n\nMikael turned his head away as he released her, \"What about her? What about my daughter? She is coming to care for you already.\"\n\nShe heard the tightness in his voice and though he did the best to keep his back to her she thought perhaps his eyes glistened a bit brighter in the morning sun. 'Yes, but do you?' she wondered. The fact that his friend fa\u00e7ade had cracked enough to release her 'bad boy' if only momentarily was a good sign...she thought. \n\n\"I have to try,\" she whispered as she turned and walked towards the woods that lead to the dock and the boat. This latest turn of events weighed heavily upon her. Was this Sven's way of punishing her for their argument yesterday? \n\nAnd if it was, what then? She might have boasted to Mikael that they could take her home, but his threat of tying her to the bed was far less binding than the tightness she felt in her chest at the thought of it. The thought of leaving this place...leaving them. She was not even certain that she could.\n\n***\n\nSven watched her rage out of the woods. He did not need to guess what was on her mind. The only question was which of his brothers was he beating to a pulp for telling her before he could. He shook his head. He knew how this must look to them, but the truth was that they all could use a bit of breathing space. \n\nHer included. For the past week, she had been passed from brother to brother like a bone among a pack of wild dogs. She needed time to think, time alone to learn this place, their way of life. And if his mother insisted upon sharing family secrets, she could educate the woman on just how much of the time she would have on her own. \n\nAt least until she had other things to occupy her mind. Things like a baby. He inhaled as she stormed up the deck towards him. He plastered a smile in place. Let her begin this one, \"God morgan.\"\n\n\"God? There is nothing good about it. What do you mean you are going back to sea?\" \n\nHe loved the way her ears matched her hair then. He focused on that as he began, \"We are fishermen. That means we fish. Fish are found in the sea. Thus we must go to sea...often.\"\n\n\"I get that, but why now? Why so fucking soon after dumping me here?\"\n\nIt was the same question, he had been asking himself all morning. Yes, they needed the money. Their little bride expedition had not been cheap either in time or the money they invested in those false documents. \n\nThen too a few days at sea might give him and his brothers an opportunity away from her to get some things straight...one way or another. He could certainly use the chance to release some of this tension by smashing his baby brother's pretty face to pieces. \n\nBut the honest truth was that he simply needed to get away. Away from her for a few days. Some time to think. To clear his head and come up with a plan. Their argument yesterday had shaken him. To begin with, he was not used to arguing with women. Period. His lovers never dared such things. Oh, they might try whining or cajoling but even then he simply moved on to the next one. \n\nBut not her. As submissive as she was, she still found the back bone to stand up to him. Hell, his brothers had rarely done that. \"Are you such a mouthy brat with my brothers?\" the words were out of his mouth before he could censor.\n\n\"No, it just seems to be you that angers me so damned much,\" she replied with her hands on her hips.\n\nHe nodded as he picked up a length of rope. His cock hardened at the thought of all the things he could do to her with it. \"Lucky me,\" he chuckled. \n\n\"And you did not answer my fucking question. Why now?\" she demanded with hands on her hips, which only emphasized her hour glass figure. \n\n\"I am the captain. I decide when, where and for how long we fish. I certainly don't owe you an explanation,\" he growled when she would not drop it.\n\nShe squared her shoulders and took a step forward, \"That might work with your brothers, but I am not a member of your fuckin crew. I am your wife.\"\n\nSven had had enough as he tossed the rope about her waist like a lasso and pulled her forward into his arms. He was fully hard the moment her body touched his. He tightened the rope even more, making sure she had no doubt about his reaction to her. \n\n\"Wives have less say than crew, Kirsten. What is the problem? Haven't you had enough cock in the past week? Little Miss Prime and Proper, who went six years in a relationship that was most asexual, you got addicted to it now? Was baby brother too upset last night to fill that tight, greedy pussy with enough come?\"\n\nHer eyes flamed, but there was a glint in them that told him he had hit a nerve. Any other time with any other woman, he would have been smart enough to withdraw while he was ahead. This woman did something to him. Got under his skin. Made him throw caution to the wind. \n\nOne hand slipped between them and between her lush thighs. His fingers dug into her jeans that covered liquid heat that scorched them even through the rough material. \"No more pants. I will make certain that baby brother orders you new clothes before we leave. Or I will fucking do it myself. I want this sweet cunt bare and ready any damned time I want it from now on.\"\n\nShe struggled in his arms, fighting the rope. \"Fuck you, Sven. I'll wear what I god damn want. And here is something else for you to remember: I decide who I fuck and when. I am the one that chooses who comes to my bed. And for the record, don't expect it to be you any fucking time soon.\"\n\nHe laughed, \"Maybe you decide who spends the night in your bed, but that is not the same as who fucks that sweet pussy. You are in my territory now, sweetheart. On this boat I am captain and I do what I fucking like.\"\n\n\"So you would rape me?\" she challenged.\n\nHe shook his head as he laughed, \"Was it rape the first time I took you, sweet wife? No, challenge me like that again and I will show you exactly what I can do. I will make you so fucking hot and horny and you won't give a gods be damned. I'll have you so fucking mindless that you'll beg me to fuck you. To fill your greedy little cunt with my come and that cute belly with my baby.\"\n\nHe was in no mood to continue this argument so he shut her up as effectively as he could without a gag ball. His lips covered hers, swallowing whatever smart ass comment she was going to make. She continued to push and pull, fighting to get away as he tightened his hold on her. \n\nBut by the time, his tongue wrapped about hers, those movements were less about breaking free and more about the way that her body moved in perfect time to his. 'Fuck' he cursed as he weighed his options. He was in no mood to be disturbed by either of his brothers, but right now he needed to bury himself deep inside his wife. To relieve some of the frustration he had been feeling since their last argument. \n\n'Fuck it,' he cursed once more as his fingers moved up and tore at the button and zipper on those damned tight jeans. Screw baby brother, he would order her clothes his own fucking self. And if Bjorn did not like it, well, one more excuse to re-arrange his face. Arrogant little prat, why had he chosen her? \n\nBut even as he thought it, he remembered her words...she was right. He had had the final say. He had been the one that brought her on board \u00c6gir's Captive. He was the one that captured her. And to hell with all of them, he would find a way to keep her. He would. \n\nHis hands shoved the rough material down her legs as she suddenly realized what was happening. She renewed her struggles as he spun her around and shoved her against the railing of the boat. \"What do you think you are doing?\" she demanded though her voice was low and throaty. That and the pink stains across her cheeks told him that she was not totally unmoved by his love making. \n\nHe slid his hand between her thighs, spreading them as wide as he could with the jeans about her ankles. His fingers found her slick folds. His sweet wife was most definitely not as unmoved as she pretended to be. \"What a husband does with his wife...taking what is mine,\" he growled.\n\nHer blue eyes flamed as she turned to face him, \"I am not yours. And I never will be,\" she spat defiantly.\n\n\"Really? You want me to show you, sweetheart? You forget how easily I made you call my name. Mine, Kirsten!\" To prove his point, his fingers found her g-spot and he sent her spiralling over the edge of a mindless orgasm. He did not let up either. He pressed and massaged the bundle of nerves until she was whimpering and moaning. Her hips were moving in circles to greet and draw his fingers deeper with each stroke. \n\nStill he would not stop. Still he pushed her higher. He added a third finger, stretching her even more. He felt her cunt tighten around his fingers as he pressed incredibly deep inside of her. Her back arched and she opened her mouth to scream, but his covered it as he swallowed her cries. He felt the wetness as it gushed in a stream about his fingers. \n\nHe growled into her throat as his wife's sweet cunt squirted around his fingers. He had been with other women that squirted, some far easier than this, but none fucking sweeter. He ripped at the button of his jeans, tore open the zipper and moved forward filling her pussy with his cock before her body even came down from the powerful release. \n\nIt was going to be fast and furious. He knew that. And he did not give a fuck. Whether it lasted a minute or five, all he wanted was to empty his balls in her tight cunt. To seed her again. He slammed forward, burying himself fully before withdrawing almost completely. \n\nIt was rough and fast, but the way her cunt squeezed and milked his cock he knew he need offer his wife no apologies. Despite her protests to the contrary, she wanted him. Wanted this. Maybe even needed this roughness as much or more than baby brother's sweet promises and gentle ministrations. \n\nHe pounded away at her wet depths as his fingers bit into the ample soft flesh of her hips. He moved hard and deep. He lasted far longer than he thought he would, but that was only by sheer will. But when his orgasm did come it was shattering. It too lasted longer than he would have thought, rolling on and on in waves until he collapsed against her back driving her forward against the rail. \n\nIt was a long moment as he continued to kiss those sweet lips, drink her moans and whimpers, until finally he broke the caress. He drew his head back just a bit, but was greeted with tears glistening in her eyes, \"I hate you. I really hate you,\" she whispered as she pushed backwards, sending him sprawling against the hard wooden deck. \n\nBefore he could respond, she pulled up the jeans and was running down the plank. Damn it. Why did she always get under his fucking skin? Why could she make him lose control as no other woman ever had? Worse yet...what the fuck was he going to do about? He stood up and pulled his jeans back together, it was a too tight squeeze as his cock was still fully hard, but he finally managed to zip them back up.\n\nHe was about to go after her when the one person he least wanted to see at that moment appeared out of the woods. His baby brother stared at him, \"What the fuck do you think you are doing? She's our wife, not your whore.\"\n\nSven opened his mouth to argue with Bjorn's assessment, but what could he say? The look of anger and pain in his little brother's eyes mirrored his own disappointment in his behavior. He would have apologized but his brother held up his hand, \"I'll go after her. I don't want to hear whatever the fuck you were about to say. Just stay the fuck away from her, Sven. I mean it.\"\n\nSven nodded...that had been the plan. To get back to the sea...to what he knew. And away from the wild whirlwind of emotions that she always stirred in him. Maybe Ran would hold the answers he sought. Maybe he could find some way to wipe her taste from his lips, her sweet surrender from his mind. But he doubted it. \n\nOh, he might acquiesce to baby brother's demand...for now. But not for long. Only long enough to figure this damned thing out. He was determined. He was going to find some fucking way. Some way to reach her. Because screw Bjorn, she was his wife too. His, just as much as baby brother's or even Mikael's. His.\n\n***\n\nBjorn took the stairs two at a time. He was about to knock on her door when he heard the shower running. He knew it would be her so he did not bother to even knock as he opened the door and stepped into the hazy, steam-filled room. \n\nShe stood beneath the spray, her face lifted to it. The water must have been intensely hot from the overpowering warmth that filled the whole room, it had been transformed into a sauna almost. The pink blush that covered her curves from head to toe only confirmed his assessment. \n\nHe stripped out of his own clothes and without a word joined her beneath the pounding water. It almost scalded him before he turned it down a bit. Then he gathered her in his arms and drew her against him. If the shower had been hot on his skin, her tears that fell on his chest were hotter still as her body shook in his arms, a torrent of them cascading down her cheeks and mingling with the water from the shower head. \n\nIt was several long moments before she finally stirred in his arms. Her smile was incredibly weak as she stared up at him, her words haunted him, \"Why?\" All he could do was shake his head. He had no answer to offer her. \n\nHe had never understood his oldest brother. At just twelve, Sven had been practically a man when he was born. His brother had always been gone more than he was home. Bjorn had been closer to Mikael, though even that was short lived as his middle brother too took to the sea. For the most part, it had been just him and Mama with the occasional 'visit' from his father, uncles and brothers. But he had never minded.",
        "By the time, he had finally joined them in the family business, he had felt more like the outsider than a part of it all. Maybe that was why he had taken to his computers? Hell, even his own father had seemed disappointed that he had been so enamoured of books and learning. Sometimes he even wondered if the man had not liked Sven more than him. \n\nHer eyes were puffy and the whites so lined with tiny red blood vessels that they looked more pink. \"Why does Sven treat me like this?\" she whispered. \n\nBjorn shook his head and tried to smile, but that question had him just as stumped. Sven had always been cold almost with his subs. Complete control was his brother's thing. What little he had seen of the way he had lost that control with her, both angered and frightened him. He was damned glad he had not seen more or they may well have come to blows. Feeling her still trembling in his arms, he knew they might yet. \n\n\"Did he hurt you?\" he forced the question past his lips even though he did not really want the answer.\n\nShe shook her head, \"Not like that, no. It is just that...\" She shook her head as she wrapped her arms about his waist. \"Just hold me, okay?\"\n\nHe frowned as he leaned his chin against the top of her head, \"Of course, I will, baby. You know I love holding you. Anytime you need me, I am here.\"\n\n\"No, no, you won't be. Not tomorrow,\" her voice was low as it seemed to force out the words. \n\nHe inhaled and forced himself to remain calm. It was the same fucking thing that had been bothering him since the moment that Sven announced this sudden trip. They had all agreed that they would give her at least two weeks...maybe a month to settle in before they went back to sea. Spend time with her, help her to adjust to their way of life. Now less than a week and they were back to fucking sea. What was his brother thinking?\n\nHe hoped Mikael would have better luck talking with his father. Perhaps the two of them could convince Sven to change his mind. It was for certain he was not the right one to 'speak' with the man. The only conversation he wanted with his eldest brother was fist to fist. \n\nHe did not have an answer, not a good one anyway to give her. So he did the only thing he could do, he lifted her face and kissed her sweetly. The moment his lips touched hers though, he was as lost as he always was. The kiss went on and on as they stood beneath the spray of water that was turning cold. \n\nHe was determined after what had happened in the woods and what he had seen on that boat, damn his brother, that he would keep it light. Just kisses and touches to comfort her, perhaps heal a bit of the damage that they had done.\n\nHe frowned as a thought occurred to him...was that it? He knew that Kirsty could get under his skin so fucking easily, but had she gotten to Sven too? It was not something he would have even thought possible. Or anything he wanted to consider because in order for her to have that effect on his brother that meant the man had to...he fumbled over the word in his mind. Sven had to love her just as he did. \n\nHe came face-to-face with his new demons once more. It was one thing to share her with his brothers. It was quite another to think that they might care for her as he did. That they too might want and need to possess her as he did. It had seemed so simple when he had come up with this plan, when he had been fighting both of them just to go along with the tradition. Sven would get his sons. Mikael would have a new mother for Monika. And he would have a wife. \n\nThe fact that his brothers might want or need something more from her than just practicalities was not a thought he had entertained. Honestly, he did not want to know either. Especially now with her beginning to make those soft mewing sounds in the back of her throat as she rubbed against him.\n\n\"Please\" she whimpered as her too soft hands wrapped around his cock as she slid to the hard tile floor at his feet. He was instantly lost in the depths of her blues eyes as they stared up at him. She ran his half hard cock back and forth across her cheeks until it stood at full mast. \n\n\"Fuck, baby. What are you doing?\" he groaned as he reached out to brace his hands against the shower walls. \n\nThat smile lit her face from within as her wet pink lips and tongue began to caress the head of his cock. \"Just getting in a bit more practice before you leave, Master.\" She had barely finished the statement before those lips parted and she swallowed half of his length in a single stroke. \n\n\"Shit,\" he cursed as it was his turn to fight back the urge to lose control once more. For a Nano second he could even have some sympathy for Sven. The woman could drive him fucking insane with the need to possess her. \n\nEspecially with those blue eyes looking up at him, their gazes never parting as she began the steady up and down sucking on his hard cock. Each time she tried harder, went a bit deeper, until all except a couple of inches was buried in her hot mouth and throat. \n\n\"Kirsty,\" he moaned as he fought for control. Did she have any idea what she was doing to him? The way that those lips curled into an almost innocent smile around just the head of his cock told him that she knew exactly what she was doing...and liked it. \n\nOne hand released its steely grip upon the wall and laced through her wet hair. He used it to control her movements, to set the pace that he knew would take him over...but not just yet. But as good as she was getting at this, and she was, it was not what he wanted. \n\nHe let go of the wall and reluctantly drew her pretty face away from his cock. He held out his hand to her and whispered, \"I want to take you like I did that first night in the shower.\"\n\nHe saw the play of emotions upon her face, the indecision was written there. It reminded him of the pain he too was inflicting on her. Damn, the woman could hide nothing in those intense blue eyes. \"Please,\" he whispered.\n\nShe shook her head slowly as he watched tears, ones that he and not his brother put there, slip from the corner of those eyes. \"I want that too,\" she whispered. She dropped her head and he had to strain to hear her next words over the pounding of the water. \"But not like...not the way things are between us now.\"\n\nWhen she lifted her head and their eyes met, he saw more tears. \"I'm sorry,\" she whispered. As if it were actually her fault, as if he insecurities were her own. \n\nShe forced that smile, the one that he hated more than anything because he knew it was a lie and they had promised there would be no lies between them. She reached out her hand and began to tenderly caress his still hard cock. \"Please, just let me...\" She bit her lower lip as she bent and licked the tip. \n\nHe was a fool. A fucking fool. She was right, of course. This morning proved that. Was he really going to make it that easy for his brothers, especially Sven and his gods be damned need for a son? If she was going to take those risks, hell, wanted to even, then gods be damned let it be his...his baby. He shook his head as he drew her up from the cold tiles. \"You win.\"\n\nHer hand caressed his cheek, \"No, I promised you time. I understand.\"\n\nHe laughed, even now, it was about him, about what he needed, how he felt. \"Shut the fuck up and turn around. You know the position, sweetheart. But be fucking warned, that pretty little mouth of yours is too quick a learner. I am already on the edge. So as much as I want to go slow and show you everything I fucking feel for you, it ain't happening this time.\" \n\n\"I am going to fuck your tight cunt hard and fast. Then I'm going to fill it with such a big load that it will be dripping down those soft thighs of yours the rest of the day.\" He heard the soft catch in her breath, knew that his dirty talk once more had her perched right on the edge. \n\nHe did not wait for her obedience as he pushed her against the cool tiles. His hands went between her legs, forcing them apart as he shoved two fingers deep into her cunt. She started to come almost immediately, but that too was not how he wanted it. He withdrew his fingers before her orgasm could get going. He chuckled and slapped her ass at the whimper that tore from her throat. \n\n\"You have become a greedy, spoiled little cunt, haven't you, my sweet wife? Tell me, Kirsty. Tell me what you fucking need. I want to hear every fucking dirty thing you want me to do to that sweet, tight pussy of yours.\" He knew he was upping this game. They might have discovered her little fetish for dirty talk, but in comparison her own language had been tame. He knew how hard this was for her...his good girl. \n\nHe pressed his body fully against hers, rubbed his hard cock between the cheeks of her ass. \"If you want to truly win this one, sweetheart, get me so fucking worked up with that sweet mouth, the same one that is learning too damned quickly how to suck my cock dry, use it to excite me in other ways, baby. Make me lose that control I have been trying so fucking hard to keep with you. Make me forget it all. Make me need to come in that fertile cunt of yours, make me, Kirsty.\"\n\nWith his chest pressed tightly to her back, he could feel what his dirty challenge was doing to her, how quickly she was breathing. He knew that he would find her so incredibly wet, that she would come immediately, even before he was fully inside of her. He toyed with those words, but he wanted, needed, this to be her choice. He would not use that level of persuasion on his sweet Freya. Not this time.\n\nNeither would he let the tortured whimpers nor frantic movement of her hips against his hard cock sway him. \"Damn it, Bjorn, fuck me. Fuck me hard and fast. Fuck me and fill me with your...\" Her fingers clawed at the tiles and those whimpers turned into groans as she pushed back against him as hard as she could. \"Please...fucking please...fuck me and fill with your jizz.\"\n\nHe cursed under his breath as he fisted his throbbing cock and slid it into her as gently as he could manage, which was not all that gentle. The word 'jizz' on his innocent little wife's lips was almost better than having those lips wrapped around his cock, especially when combined with the tight, wetness that welcomed and embraced it now. \n\n\"Come for me, my sweet Freya,\" he commanded as he slammed deeply and frantically inside of her. He felt her muscles squeeze his cock so hard that for a moment he feared she would actually push him out, but he was having none of that. Not now, not when he was so fucking close to coming. He pushed his cock as deep and as hard in her as he could. He held it there as his teeth snack just as deeply and hard into the soft flesh where her shoulder met her neck. He held her there as he felt his control slipping. \n\n\"Yes, damn it, yes, fucking come inside me, Bjorn. Fill me with your jizz. Your seed. Your baby,\" she screamed as she turned her head to the side, giving his teeth even better access to her soft flesh, offering herself up fully, completely, wholly to him. He could do no less in return as he felt his come boiling from deep inside of him, jetting into her. \n\nThe water was fucking freezing as he came slowly back into his mind and body, but not even that could shrink his still hard cock that was buried in the furnace between her legs. His head rested against her back as he noticed the blood that trickled down her shoulder. He would feel guilty, but maybe that was exactly what they both needed, the reassurance of his mark upon her body. \n\nHe reached around her for the body wash, his cock never leaving her cunt as he softly washed the wound. When he was finished, as certain as he could be that it would heal without becoming infected, he bent and placed a tender kiss upon it. But even that caused her to jump in his arms, \"You have my word, sweetheart. I will be home, back to you, before this fades.\"\n\nThe smile that spread across her lovely face as she turned to her head and kissed him lightly was all the response he could ask for. \"I'll hold you to that, my loving husband.\"\n\n\"If Mikael and I have to tie Sven up and throw him in the hold with the damned fish, you have my word, sweetheart.\"\n\nHis cock slipped from her wet folds as they both broke out in laughter at the image of his oldest brother sleeping among the dead fish that had always been his biggest passion. Though Bjorn feared that too might be changing. Question was...could they all come to terms with this new, old way of life...before they killed one another. \n\n***\n\nMikael was soaked, head to toe, as his daughter splashed happily in the bath and used her finger to draw in the shaving foam that covered the wall. He could almost recognize a flower in her art work, or he thought so any way. \"Bath finished,\" he signed. He smiled as Monika shook her head side to side. She had come so fucking far in such a short time. Thanks to her. Thanks to Kirsty. \n\nIt was he, who shook his head then. What was he going to do? There was no doubt, at least from his perspective, that Bjorn had definitely chosen the right woman. The way she had just stepped into his daughter's life stopped his heart sometimes. 'And how sweet her pussy tastes when you make her come all over your face has nothing to do with anything, right?' He cursed that voice in his head that was far too close to the truth for comfort. \n\nShe had totally captured his baby brother's heart. The kid had it bad. Not that he could blame him. She was pretty special. But it was his older brother he was worried about. He was running. Hard and fast from whatever vice the woman had his nuts in. \n\nNot even his father had been able to change Sven's mind about this sudden and unexplained need to return to the sea weeks ahead of schedule. Mikael supposed he and Bjorn could simply refuse to go now, but he was not sure that even that would stop Sven now. His brother might simply pick up an extra hand or two for the trip...or worse yet, attempt it alone. No, his brother knew they were both too loyal to call his bluff. \n\nSo first thing tomorrow morning they took to the sea once more. But he and Bjorn had discussed it, this was going to be a short trip. No more than one week, less if they could manage it. She did not deserve being left alone here with just their parents and his daughter, not this soon after bringing her here. She was still adjusting and that meant she should have one of them to share that huge bed every night.\n\nNot that it was going to be him tonight, he sighed as he tried once more to persuade his princess that bath time was over, before she turned into a prune. No, he was certain that it was baby brother, whom she would want to hold and comfort her this night. And that was fine by him, he had his daughter to get to bed and then... \n\nThen what? Lay in bed thinking about how sweet her tight cunt tastes? Her soft, cries as she approached her orgasm. Her screams when it traverses her body, curling her toes and making her hips arch to meet his tongue. The way her juices flooded his mouth then, making him so damned hard that he was afraid his cock would split open the front of his jeans. \n\nThinking about all those things until he could fight it no more and his hand wrapped around the little traitor, but not even when he came would he go soft. No, it was never enough, never satisfying. Maybe when they were made port in Amsterdam or Copenhagen, he would visit the red light district once more. Relieve this itch without any complications as he had been doing for over two years now.\n\n'Except you know you fucking won't,' asserted that voice. 'You don't cheat on your wife. You never did, even when Greta turned you away, even when you knew she was screwing other men, even when she propositioned your own brothers, you remained faithful.' He cursed his damned conscious, because he knew it spoke the truth.\n\nBesides if the truth be told, it was not some pro, whose services he wanted. He wanted his wife. He wanted to just fucking give in and sink his cock deep inside that tight hole that he had tasted on his lips, tongue and fingers. His cock was tired of missing out on all the fun, it wanted to feel that cunt wrapped tightly around it too. \n\nHe bit back a virulent curse as he reached for the towel. What was he even doing thinking about it? He was sure that she and baby brother were already safely ensconced in that damned dungeon that passed for the bride's chamber in this fucked up family. And he had his little girl to get to bed, that was how it should be. \n\nMonika fought him as he tried to wrap the towel about her. But at least, she took his mind off of her...and all the things she might be doing with Bjorn behind those damned doors. He was still struggling to keep Monika in his arms as he opened the bathroom door. His daughter could be far stronger than her tiny frame looked. He frowned as he ran into something. Looking up, he saw the woman that had divided his attention from his responsibilities for the past half an hour. \"Sorry,\" he muttered. \"I was just giving Monika her bath before bed.\"\n\nShe nodded with a smile as she signed something to his daughter with a wink. \"It's okay, I was just coming looking for the two of you. Thought you could show me her bedtime routine since...\" she sighed as that smile disappeared. \"Since it will be just me and the princess for a bit.\"\n\nHe shook his head once more, \"I am sorry, Kirsty. You have to know we have all tried. I think even Mama gave it a shot, but Sven has always been stubborn.\"\n\nShe forced a smile as she looked up at him, \"It will be fine. As he says, I have to get used to it sometime I guess. I mean I know that your parents will be here with us, but I just thought it may make things easier on her if we did this together tonight. Assuming you want me to take over some of the responsibilities from your parents?\" she blushed.\n\n\"Of course, I mean you are great with her. I guess I just don't want you to feel like you have to do it all. Like I, we, are just dumping all this on you, and...\" he knew he was stammering, but for the first time he realized how truly overwhelming all this must be for her. Especially this added responsibility of his child. \"I mean, you don't have to you know. Mama and Papa usually manage all right when I am away.\"\n\n\"No, if you are okay with it, it will give me something to do. Hell, I might even end up sleeping in her room.\" She turned and smiled at his daughter, who even though she did not look at the woman, had ceased to struggle as much. \"Will you let me, princess? If I promise to read you lots and lots of stories, can I stay in your room for a while?\"\n\nMikael's felt the lump rising higher in his throat as she smiled at his daughter. \"I'm sure she would like that, Kirsty. I was just about to get her ready now, but you really don't have to join us. I will leave written instructions. Have Mama or Papa walk you through it tomorrow night should be good enough. I don't want to keep you from Bjorn. He must be getting anxious already.\"\n\nShe chuckled and shook her head, \"Silly man, will you ever get used to it?\" She stood on her tip toes and brushed a soft kiss on his cheek. Then those deep blue eyes stared right into his, \"I choose you this night.\"\n\nThat lump grew to the size of a grapefruit. He gripped his daughter even tighter to keep from dropping her in shock. \"But I thought...\" he stammered. His voice was barely audible but then again he was surprised that any sound came out at all.\n\n\"Bjorn needed me last night.\" Her face scrunched up and her ears turned scarlet, \"And Sven can go...\" She smiled at Monika and shook her head, \"Your brother is not welcome at all right now. So you are stuck with me tonight.\"\n\nStuck with her? Considering the happy dance his cock was doing in his jeans at the moment that was not the terms he would use for this unexpected turn of events. A part of him still wanted to argue. After all that had happened, considering how close her and baby brother had become, maybe he should insist that this final night for a while be spent with him. But he knew damned good and well that he was not that fucking noble...or that stupid. \"It will be my pleasure,\" he whispered as they turned down the hall towards his daughter's bedroom."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "shower sex",
        "outdoor sex",
        "sexual intercourse",
        "non-consent",
        "dirty talk",
        "blow job",
        "fellatio",
        "rope",
        "romance",
        "love"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgir-s-bride-ch-10"
}