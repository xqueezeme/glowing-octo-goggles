{
    "title": "Linh Ch. 02",
    "pages": [
        "Thanks to all for their kind words and great feedback. I had originally intended for Linh to just be a \"throw away\" story so I could get my feet wet. However, reader response, as well as my own thoughts, made me want to turn this into a series. As one author recently said on this site, writing sequels is surprisingly difficult. I assumed it would just be a continuation, but it really is tough to do.\n\nTypical Disclaimers: this is a work of COMPLETE fiction. The characters only exist in my twisted mind. No animals were harmed during the writing of this story (except one ant; that little fucker kept walking across my keyboard).\n\nAll characters engaging in sex are over the age of 18. Well, not really, since they don't actually exist. But you get the gist.\n\nAnyway, enough bloviating. I humbly present to you, dear readers, part 2 of the exploits of Jim and Linh. I hope you enjoy.\n\n*****\n\nI woke up with a coughing fit. After a few moments, I was able to control the hacking and took a deep breath. That explained why I was coughing; the air in my room was cold and dry. Blowing out the breath made my nose wrinkle. Ugh...cheap Scotch. Where the heck was I? I ran my tongue around in my mouth a few times, the inside completely dry.\n\nIt took me a few minutes to come to my senses, as the cobwebs started clearing. This happened every time I traveled. I'd forget if I were home in New York or in a hotel somewhere. And, if in a hotel, it still took me some time to remember what city--or even which country--I was in. I'm sure the booze from the previous night didn't help. The cold dry air in the room let me know I was definitely in a hotel. I always dropped the temperature as low as I could when I traveled. Finally, it dawned on me that I was in California for my routine visit back to the office.\n\nSuddenly, my eyes flew open, and I turned my head to look next to me in the bed. Even with very little light, I could see I was alone. I closed my eyes again and sighed. Damn, I had dreamed all that about Linh. The bar, the sex, the massage, the sex, the shower, the sex...all of it had just been the best damn dream of my life. I blew out a frustrated breath. Fuck, I really needed to start laying off the Scotch when I was already so tired from traveling. It was beginning to affect my hold on reality. That dream had been that vivid.\n\nGroaning, I sat up and rubbed my eyes, my legs hanging over the side of the bed. I had no clue what time it was--since I didn't have a bedside clock at home, I never thought to even look at it when I was in a hotel--but the sunlight filtering in told me it was time to get up. As I stood up on unsteady feet, I chastised myself. I always kept the bathroom light on with the door slightly ajar. I did this for two reasons. One, just so I had enough light to figure out where I was.\n\nBut I also did it so I wouldn't kill myself getting up in the middle of the night to pee; every hotel was different. Before I started doing the 'nightlight' thing, I would constantly run into tables, chairs, even the wall. But only a very small sliver of sunlight was making its way through the crack in the drapes. I assumed I had turned the restroom light off at some point last night.\n\nJust as I was about to move toward the bathroom, I heard the toilet flush. Then the sink started running. Shit! I guess it hadn't been a dream after all? God, I hoped not. Last night had been amazing. One of the best nights of my life.\n\nThe water shut off, and a few seconds later, a very naked and very sexy Linh appeared, leaving the bathroom light on. She walked to her side of the bed and collapsed on her pillow, regarding me with one slightly opened--and bloodshot--eye. I laid back down next to her and grinned.\n\n\"Good morning, Linh.\" I reached over, cupped her cheek and stroked it with my thumb. Unable to resist, I leaned over and kissed her forehead. \"Did you sleep OK?\"\n\nShe closed her eyes and sighed contentedly. \"Oh, Jim. That feels very nice.\" She reopened her eyes. \"Yes, I did sleep well. But I feel terrible this morning. I just had to--what is word--for getting sick?\"\n\nShocked, I asked, \"Vomited? You mean you threw up?\"\n\nShe closed her eyes again and groaned. \"Yes. That is it.\" She blew out a breath, smelling of minty toothpaste and stale Scotch. \"I have a very upset stomach and head.\"\n\nI felt bad but had to grin a little at her. \"I am so sorry, sweetie. I knew I should've cut you off after your first drink last night.\" I raised my eyebrows at her. \"But, you seemed determined.\"\n\nShe chuckled softly and reached up to softly pat my cheek before dropping her hand. \"Yes. You chose well. I would not have appreciated you telling me what to do.\" Then, she got a tired, but still very sexy grin on her face. \"Well, that is not true. I think we both know I like you telling me what to do.\"\n\nI had to laugh at that, being careful to do so quietly. I imagined her head must have been pounding. \"Yes. I think we've come to that conclusion.\" Then, I took on a sympathetic look. \"You need to drink some water and we'll get you something to eat.\"\n\nShe squeezed her eyes shut and grimaced. \"Ugh. Oh, Jim, I do not think so. I can not even think of eating or drinking right now.\"\n\nI studied her face and finally said, \"Hmmm. No. Sorry; I know what I'm doing here.\" I grinned. \"If nothing else, my Navy training taught me how to deal with a hangover. Trust me.\" I smiled at her.\n\nShe giggled a bit before groaning again, holding her head in her hands. \"Oh. I hurt so much. It even hurts to laugh.\"\n\nI kissed her forehead again and got up. I picked my phone up from the bedside table to check the time. A little after 6:00. Good. That gave us a couple of hours before we needed to get to work. I switched my alarm, set for 7:00, off. Walking into the bathroom, I started the shower, adjusting its multi-function head to the strong massage jets. After relieving my full bladder, I turned on the sink. I washed my hands and then brushed my teeth to get rid of my cottonmouth. I'd neglected to take my own advice from last night and drink water before going to sleep.\n\nAfter checking the water temperature in the shower, I returned to the room, going to Linh's side of the bed. Reaching down, I lifted her out of the bed, my left arm holding her upper body and my right under her knees. She wrapped her arms around my neck and put her head against my chest, sighing again. She was shivering a bit and it dawned on me I needed to stop turning the air conditioner down so low. Now that we were going to be sharing a room, I wanted to make sure she was comfortable.\n\nI made my way into the bathroom and carefully placed her on her feet next to the shower. Making sure she was steady, I released her and said, \"Go ahead and get in. Just sit down in the tub and let the water run over you.\"\n\nShe looked at me, a little bleary-eyed. \"Are you not getting in with me? I need you.\"\n\nI smiled again. \"Yes, little one. I'm getting in too. I just need to grab something.\" I watched as she climbed in and sat down, a little shakily, my hand holding hers to make sure she didn't fall. She let out a long happy sigh as she relaxed and the hot water started warming her up.\n\nWalking back into the room, I went to the mini fridge and grabbed a bottle of water. I returned to the bathroom and closed the door to keep all the steam trapped in the room. I knew the steam would work to help her feel better; at least, it always did for me. Setting the bottle beside the tub, I climbed in and sat down behind her, pulling her into me, with my legs spread and overlapping hers. The tubs in this hotel were a lot bigger than most, but it was still a bit of a tight fit.\n\n\"Oh, Jim,\" she said softly, leaning her head back into my chest, turning slightly so her cheek was pressed against my chest. \"This feels wonderful.\"\n\nI had my arms wrapped around her stomach, my hands clasped together. After a few minutes of luxuriating in this amazing feeling, I started lightly rubbing her stomach and kissing the top of her head. She mewled a little and settled further into me.\n\n\"Mmmm,\" I moaned at her. \"Let me know when you're ready and I'll wash your hair.\"\n\nHer head immediately moved to face me, her bright green eyes wide. \"You...you would do that? Wash my hair for me?\"\n\nI chuckled. \"Of course. You have beautiful hair and I would love to wash it.\"\n\nHer eyes stayed on mine for a moment, watering a bit. Finally, she looked away and said, \"I would like that. Please wash my hair. I am ready.\"\n\nI reached for her shampoo and squirted a bit of it in my palm. Closing the bottle and setting it aside, I rubbed my hands together, lathering up the slick substance. Once done, I put both of my hands on her head, digging my fingers into her hair and working the soapy mixture in. She moaned her approval as I worked her scalp. I then moved on to grabbing locks of her hair and rubbing the shampoo in. Her hair was very long, almost to her ass--oh, that wonderful wonderful ass--so it took some time. I didn't mind. The smell of the shampoo reminded me of some exotic flower I had never actually smelled. But, mostly, it just reminded me of her.\n\nOnce done, I gently pushed her forward. Lowering her face, she brought her head under the spray of water and I watched as the lather was sluiced away, lightly rubbing her back the entire time. She started moaning again as the water beat on her scalp. The moaning was just because of that feeling, I knew, but it was having a decidedly different effect on me. As much as I was trying to avoid it, my cock started getting hard. The moaning, coupled with her perfect ass pressed against me...it was just too much.\n\nShe giggled and leaned back, pressing her head against me again, now that the shampoo had been rinsed away. \"You are getting excited, I can feel.\" She turned her head to the side so she could consider me with a sideways glance. \"I am, too. As awful as I feel, I am still horny. Would you like me to sit in your lap and make love to you?\"\n\nFuuuuck. That was very tempting. But, I was worried an orgasm would actually make her feel worse. I know if I had one with a bad hangover, my head would be absolutely pounding. And, even if she weren't hung over, we needed to set some boundaries. So, I told a half-truth.\n\n\"That would be amazing, Linh. But, I'm afraid we don't have time.\" She blew out a frustrated breath at that and faced forward again. \"I'll definitely take you up on that offer later, though,\" I assured her.\n\nShe was obviously annoyed, as she crossed her arms and said, \"Fine. I think I could get you to have an orgasm very quickly, but OK.\"\n\nI grinned, even though she couldn't see me. \"OK. Now, do you use conditioner, as well?\"\n\nWithout a word, she reached over and grabbed the conditioner, leaning back to hand it to me. I repeated the process of gently working the conditioner in her hair, again massaging it into her scalp. This only served to cause her to begin moaning and softly whimpering again. Then, she reached up with both hands and started pulling at her hard nipples, and her moans increased in volume. Damn! I could only take so much, and I was quickly reaching my limit.\n\nSo I stopped and gently pushed her head under the spray again. She didn't resist, even though I could tell she was frustrated with me. Once she was rinsed, she again leaned back into me, this time turning her face and bringing her hand around to touch my cheek. \"Please make love to me,\" she breathed out.\n\nGroaning, I started to stand. \"Linh. Sweetie. Really, we don't have time.\"\n\nShe brought herself up on her knees and turned around to face me. \"We can make the time,\" she said, looking up at me with those jade green eyes, clouded over with lust.\n\nI was extremely tempted but was also getting a bit frustrated with her. \"No, we can't,\" I said firmly. I reached my hand down. \"Now, get up so we can get you all washed off.\"\n\nThen, she started playing dirty. Instead of taking my hand, she placed hers on her thighs and used her arms to squeeze her C cup tits together, emphasizing their size. She got a naughty grin on her face, and said, \"But, I am already on my knees...where I belong...sir.\" She looked at my very erect cock, which was throbbing in time to my increasing heart beat. \"I am in place so that I can take your,\" she paused briefly to lock her eyes on mine again, \"cock...in my mouth.\" She reached out with one hand to start slowly stroking my dick. \"Or, would you prefer to put this in my,\" another look at me, \"very wet pussy...or my very tight ass, sir?\"\n\nFuck! Fuck fuck fuck! She knew that language was going to drive me up the wall. I was so tempted to just step forward and shove my cock in her mouth. I was already close to coming. But, I had to maintain some semblance of control. I also didn't want to make her hangover feel worse.\n\nGroaning with frustration, I took her hand from my cock and used it to bring her up. \"All of those options sound amazing. And I plan to do all of them.\" She smiled at me. \"But not now. Later. I promise.\"\n\nShe got an annoyed expression on her face again and blew out another frustrated breath. \"Fine. You win. But, I still think that you are being unreasonable. We can make the time.\"\n\nI grinned. \"I promise. Tonight.\" Stepping under the spray, I wet my hair and then lathered up with my own shampoo. She soaped her body up while I was doing this. I cracked an eye open to watch, but luckily, she wasn't doing anything overtly sensuous.\n\nAfter rinsing off, we both got out of the shower and toweled off. I handed her the bottle of water and told her to drink it. She silently took it from me and opened the cap, swallowing about half of it down, avoiding my gaze the entire time. She was clearly pissed off at me, but I ignored it. From experience, I knew a bad hangover could heighten emotions. I wasn't about to add fuel to the fire by saying something stupid, even if she was acting like a spolied brat.\n\nI quickly brushed my hair (it was short enough that I didn't have to do more than towel it mostly dry), put on deodorant and left the bathroom, closing the door behind me. I went over to my suitcase and retrieved boxer-briefs, socks and a clean white undershirt. After putting those on, I opened the small closet and grabbed a dress shirt and slacks. I was just finishing pulling my suspenders in place (what can I say? I like the look) when she came out of the bathroom, her hair blown dry.\n\nI could tell she was still annoyed as she opened her bag and brought out fresh underwear and a bra. Facing away from me, she bent to put her panties on, and I stared at her bubble butt as she did so. Bent over like that, I was again treated to the sight of her pussy peeking out from below. Fuck, I wanted to just go over there and grab her hips and slam my cock inside her! But I shook my head to clear it and started pulling on my shoes.\n\nStill maintaining silence, she went to the closet and retrieved a blouse and skirt. She was quickly dressed in those, with her shoes and matching jacket added next. Tersely, she said, \"OK. I am ready.\"\n\nI looked at her for a few moments. Her head was turned a bit to avoid looking at me, and her arms were crossed again. I reached my hand out. \"Linh.\" Nothing. \"Little one.\" That caused her to at least turn her head to me, the annoyed expression still in place.\n\n\"What?\" she asked brusquely.\n\nI sighed and dropped my hand. \"Look. I get it. You're pissed off at me.\"\n\nHer arms still crossed, she turned and regarded me. \"I just do not understand. It is barely 7:00. We have time to make love.\"\n\nI sighed again. \"No, we don't. You need something to eat or you're going to feel awful all day. We have a lot going on today and we...I...need you at your best.\"\n\nHer expression at last softened at that. After a second, she uncrossed her arms and reached out to me. I took her hand and smiled at her. She returned the smile, albeit slightly, and squeezed my hand. \"I am sorry. I was pouting. I like that you take care of me, and that is what you are doing.\" She regarded me for a long moment, chewing her lower lip. I could tell she wanted to say something else, but she just leaned over and kissed my cheek.\n\nWe grabbed our computer bags and made our way out to the elevator. While waiting, she asked me, \"Are we eating downstairs?\"\n\nI shook my head. \"No. You need something a little more substantial than a bagel. Let's go across the street.\" Even though the restaurant downstairs offered quite a bit more than just bagels, I knew what would help her feel better.\n\nShe smiled weakly. I could tell the hangover effects were still wreaking havoc on her, but, to her credit, she didn't complain. We stepped into the elevator, joining a few other people dressed in casual business attire, and descended to the lobby. Walking across the tiled floor and through the automatic doors, she took a deep breath. After holding it in for a minute, she sighed it out, her eyes closed. \"Oh. The fresh air is so nice.\" She started to reach for my hand but quickly pulled it away, realizing we were in public.\n\nShe gave me a wry grin. \"This is going to be more difficult than I thought. I want to be all over you and let everybody know I am your girlfriend.\"\n\nI returned her grin. \"I want that too. Patience, little one. That will come in time.\" There wasn't a rule against dating a coworker, but everyone was under the impression she had a serious boyfriend, which is why she had moved to Arizona. She had admitted the truth to me last night that her 'boyfriend', Tom\u00e0s, was actually gay. They put the illusion of their relationship on so they could get married and he could get his citizenship. The last thing I wanted was for someone to see us being intimate and think she was some cheating slut or something.\n\nTogether, we crossed the street to the small strip mall. We could have driven over, but it was a short walk and I knew the exercise would help us both. Leading her, I grasped the door to a taqueria and held it open for her.\n\n\"Oh, Mexican food. That does sound good,\" she said happily, as she stepped through the doorway. The wonderful smells hit me and my stomach grumbled a little.\n\nAfter being led to a table, a waitress I knew well, Paola, came over with waters. \"Good morning, you two,\" she said, setting the glasses down and taking out a pad and pen. \"What can I get you?\"\n\n\"Dos menudos, por favor,\" I said in my horrible Spanish accent. That earned me a smile from Paola.\n\n\"Muy bueno. Your Spanish is improving.\" Then, pen to paper. \"Anything besides water?\"\n\n\"How about some juice? A bit of a rough night drinking,\" I grinned.\n\nShe laughed and started walking away. She had seen me more than once the morning after a rough night and always brought me something that would help. \"Coming right up.\"\n\nAfter she was gone, Linh looked at me with raised eyebrows. \"You are learning Spanish?\"\n\nI laughed. \"Oh, just enough to get by.\"\n\n\"What is it you ordered for us?\"\n\nI shrugged. \"Just some soup. Trust me; it'll help.\"\n\nWe chatted about the upcoming day, going through what meetings we already had scheduled and what else was needed. Soon, Paola returned with two steaming bowls of soup and two large glasses of orange juice. She also placed plates piled with foil-wrapped warm tortillas and condiments, including lime wedges, raw onion slices and fresh cilantro. Linh leaned down and inhaled a noseful of the rich broth's scent and steam. \"This smells wonderful.\" She looked up at Paola and asked, \"What is in it?\"\n\nPaola quickly flicked her eyes in my direction. Seeing the almost imperceptible shake of my head, she returned her eyes to Linh. \"Oh, just some hominy and stuff like that, Hon. I recommend squeezing some lime on it and soaking the tortillas in the broth. Oh, and if you like spicy, add some hot sauce. Enjoy!\" With that, she walked away to another table to begin taking other orders.",
        "Tentatively, Linh brought up a spoonful of the broth and sipped it. After a moment, her eyes got wide and she slurped the rest from her spoon. Squeezing some fresh lime into the bowl, she looked at me. \"This is so good! Please pass the hot sauce.\"\n\nI grinned, passing her the small bottle after shaking a lot of the sauce onto my own soup. After dressing it to her liking, she was dunking pieces of corn tortilla in the broth with one hand and rapidly spooning the soup in her mouth with the other. She was ravenous, and I had to grin at her again as I watched her wolf down her food with both hands. Somehow, even though she was practically inhaling her food, she made it look dainty. She quickly drained the bowl but tipped it on its side and tried to scoop more of the remnants into her mouth. Finally, she dropped her spoon into the empty bowl with a clatter and leaned back with a sigh.\n\n\"Oh, Jim. That was amazing. How have I never had this before?\"\n\nLaughing, I said, \"I don't know. But it's one of my favorites.\" I grinned at her. \"I know from personal experience it's great for a hangover. Be sure to drink your juice, too.\"\n\nLike she had forgotten about her drink, her eyes lit up and she reached for the glass, slurping a third of it down through the straw. She sat back again, a sleepy look on her face. \"That was yummy. I could eat this every day.\"\n\nWe finished our meals and I paid, leaving a generous tip for Paola. It wasn't my money anyway, since we had a meal allowance. Sometimes I felt bad for getting a drink or leaving a large tip on the company's dime, but that feeling would always pass quickly. There were some people that took advantage and spent the maximum daily limit, but I never did that. I didn't exactly limit myself to the value menu at McDonald's or anything, but I kept everything reasonable. I figured as long as I ordered stuff I would've ordered even if I were paying, I was OK.\n\nWe walked back to the hotel, getting in my rental car. Out of habit, I opened the door for her, earning me another affectionate smile. She of course had a rental of her own, but neither of us had meetings at any of the other facilities today, so we didn't need separate transportation. Starting the car, I backed up and headed to work. We were quiet for a minute before she finally spoke up.\n\n\"I would still have liked to have made love this morning. I think the 'not enough time' was just an excuse.\" She turned to face me. \"Did you just not want to have sex with me? You can be honest.\"\n\nLaughing but never taking my eyes off the road, I said, \"Oh, Linh. I'm a guy. Morning sex is always awesome for a guy. And you're an incredibly beautiful and sexy woman. Of course I wanted to have sex.\" I shot my eyes to the side to see her blush at my words. I faced forward again. \"It's just...\" I blew out a breath. We stopped at a red light, so I was able to turn to her. \"It's just, we really need to be careful here.\" I grinned. \"Believe me, if I had my way, we would have both called in sick or something and I would've done many many many filthy things to you all day...and night.\"\n\nShe laughed at that. \"Yes, I would like that.\"\n\nMy look turned serious as I refocused on the road, the light having turned green. \"But, we can't let this affect work. Don't get me wrong, had you been feeling better, we would have made love this morning. But, I needed to make sure you were going to be at your best today, so I wanted to focus on that. Taking the extra time to have sex would have made us late.\"\n\nSilence followed for a while, before she finally sighed. \"You are correct, of course.\" Out of the corner of my eye, I saw her shake her head. \"I am again sorry for being so upset about it. It is only...\" She took a moment to collect her thoughts. \"It is only that this is new to me,\" she finally said.\n\nI was confused. \"What do you mean? What's new to you? You weren't a virgin before yesterday or anything.\"\n\nShe chuckled but then turned serious again. \"No, I am not a virgin. But...\"\n\nShe was obviously wanting to say more, so I let her go at her own pace, staying silent. Finally...\n\n\"Yes, I have been with other men. And, I have had boyfriends.\" She took a deep breath, held it for a moment, then sighed it out. In a rush, like she needed to get the words out before she changed her mind, she said, \"But, I have never felt this way before. With the other men, I had sex because I enjoy sex. But with you,\" another deep breath and sigh. \"With you, I want to have sex because it is with you. I want to make love to you. Do not get me wrong; with the other men, I enjoyed the sex. But, it was never even close to what I felt last night. Everything you and I did was so...intense. And I want more. It is almost like I need it.\"\n\nThe silence returned. Damn. I knew the emotions were heightened due to the hangover, but I had felt her strong feelings last night. It wasn't in the massage. It wasn't in the blowjob or the sex. It wasn't even in the shower when I took her virgin ass. No, it was in that first kiss...and the next one and next one. Chuckling inwardly, I felt like an addled schoolboy. I was reminded of the Brady Bunch episode where Bobby had his first kiss and saw fireworks. I had kissed a lot of women over my 40 years, but nothing even came close to what I felt when I kissed her. It was like...fireworks.\n\nShit. Where the hell did that come from?\n\nAfter a bit, I cleared my throat and spoke. \"It was different for me too. Better than ever before. But, we just need to be careful. I don't want anyone knowing about us.\" I heard her sharp intake of breath and knew she was about to say something, so I cut her off. \"Let me rephrase; it isn't because I don't want people knowing about us. It's because it would complicate things for Tom\u00e0s. When the two of you get married, you'll have to go through the process of getting his citizenship. The immigration officer that gets assigned to the case can, and likely will, interview friends and coworkers to make sure the marriage is legitimate.\"\n\n\"Oh,\" she quietly said. \"Yes. I had not thought of that. You are correct.\" She blew out a frustrated breath with a small growl, which only served to make my cock twitch. \"But, this will be very difficult. You have no idea how much I would like to have my head in your lap right now, giving you oral pleasure.\"\n\nFuck! Now I was getting hard. \"Jeez, Linh. You gotta watch that kind of talk,\" I grinned to let her know I wasn't serious. I loved the sexy talk, still so out of character for her. \"I can't walk around work with a hardon all day.\"\n\nShe laughed a throaty laugh. \"Well, had you let me take care of you in the shower, you would not have that problem. It is your own fault.\"\n\nI laughed at that. \"Oh, little one. You could have given me three orgasms this morning, and I'd still get hard being around you.\" I turned briefly to smile at her and saw her look of affection.\n\n\"I like that you call me 'little one'. I do not know why, but it makes me feel warm.\" She gave a lopsided grin. \"Warm and wet, actually.\" She laughed again when I groaned. \"Sorry,\" she got out between fits of giggles. \"That was mean.\"\n\nI managed to get us to work without causing an accident, even though my concentration was not on driving. We removed our computer bags from the trunk and made our way inside. Very soon, my mind was forced to focus on work, both of us pulled in different directions to cover morning meetings. I was in charge of three of our bigger projects, all of which were on track.\n\nAll three of the teams were good, working diligently to ensure deliverables weren't delayed. As such, the three hour-long morning meetings were pretty straightforward and more of a formality. The tone of each was jovial. It'd been almost a month since I'd been in the office, so a lot of the meetings were just catching up on a personal level. These were my coworkers, but many were also friends, after all.\n\nLinh was also managing three projects, albeit smaller ones. She was very good at her job but was still comparatively inexperienced. My third meeting ended about 20 minutes early, so I went downstairs to the cafeteria. I bought a small bottle of cranberry juice and went back upstairs. Linh was in her cubicle with her headset on, a remote meeting on her screen. One of the projects she was leading was actually being run in North Carolina, at one of our manufacturing facilities. I set the juice on her desk and received a bright smile and a mouthed 'thank you'. She then turned her attention back to the meeting.\n\nIt was an extremely innocent response from her, and one I had received before when I would bring her something. But, this time, I saw that mouth a little differently, and my dick lurched in my pants. She had thick lips and I'd imagined more than once how they would feel wrapped around my cock. Now that I had actually felt that, I was hooked. She may not have had as much experience as other women I'd been with, but she was more enthusiastic about giving head than any of them. Not that I ever thought any of the others didn't like it, it was just Linh was...I don't know. Really into it.\n\nRemembering how I had fantasized about her before made me think. I would love to say that I was completely professional at work. I'd love to say that, in every meeting...in every conversation, I was focused solely on what was being discussed. But, I can't say that. I've always been a...well, a horn dog. As much as I tried not to, any time I was listening to a remotely attractive woman, I was mind-fucking her. Don't get me wrong; it wasn't like I would be obvious about it. And, I still managed to maintain focus and would pay attention to the topic at hand. But, I'd think nasty thoughts and would feel a little guilty about it afterward. I never wanted to be 'that guy' who only thought of women as sex objects. Nearly every woman--and man--I worked with was extremely bright and great to work with.\n\nI considered that as I made my way back to my desk. In hindsight, I realized there were times when Linh would be speaking to me and I actually would lose focus enough that I had to have her repeat something. And my fantasies about her had often been...different. Sure, I'd imagined those sexy lips wrapped around my cock. I'd fantasized about her bent over, with me taking her from behind. But, I was surprised to realize I'd also daydreamed about just hanging out with her away from work.\n\nShit. Did I actually love this girl? I shook my head to clear it; the time to dissect that little morsel would have to wait.\n\nPulling my mind back to work, I returned to my desk to update each of my project's 'one-pager'. I found these to be invaluable any time someone from senior staff stopped me in the hall and asked me for the status of a project. I could briefly update them and immediately follow up with an email with the one-pager. This was so well received, it was something I instilled in all of our project managers. It was one of the many positive changes I brought to our group, to the great delight of my bosses. I had been approached more than once to apply for the director position any time it came open. Although tempted, I always declined; I knew I would miss being on the ground, directly involved with teams.\n\nI had just finalized updating everything when I glanced down and realized it was almost noon. At that moment, Linh stopped outside of my cube and leaned against the opening. \"Hello, Jim.\"\n\nI smiled at her. \"Hey, Linh. How's your day going?\"\n\nShe returned the smile. \"Very well, thank you. Did you already have plans for lunch today? I thought maybe we could discuss one of my projects over food.\"\n\nThis, of course, was mostly for show. People could overhear our conversation, so there wouldn't be any eyebrow raising at seeing us leave together. In the past, she and I had often had lunch together. I took everyone from our staff out every now and then. So the facade probably wasn't necessary. But better safe than sorry.\n\n\"Um, sure. That sounds good.\" I rose from my chair and asked, \"Where to? What do you feel like having for lunch?\"\n\nIt was a very innocent question, but I immediately regretted my phrasing. I saw the gleam in her eye and her biting off a smirk. \"Oh, I do not know. Something to just fill me up.\"\n\nCrap! Another lurch in my pants. \"Um, OK. We can discuss it in the car.\"\n\nWe made our way down to the car, completely composed, and I opened the door for her. After she was in, I shut the door and went to the driver's side. As soon as my door was closed, she burst out laughing. \"I am sorry,\" she got out in between coughing fits and laughter. \"I had to say that.\"\n\nI grinned at her and chuckled as well. \"Yeah. You got me. I'm lucky I could form a sentence after that! You are very very naughty.\"\n\nShe looked around to make sure no one was looking. The parking lot was devoid of people. She turned to me with a gleam in her eye. \"Yes. Yes I am. And I should be punished.\"\n\nI groaned and then chuckled again. I started the car and left the parking lot. \"OK, seriously. Where to?\"\n\n\"Hotel,\" she immediately said.\n\n\"Linh, we can't--\" but I was cut off.\n\n\"I said 'hotel'. Now.\" She had her arms crossed and was looking forward.\n\nI sighed. As much as I wanted to be firm in my 'let's be just coworkers during normal work hours' stance, I was extremely horny. I was just thankful the morning had been so busy and I hadn't had time to think about her. \"OK. Just this one time.\"\n\nWithout the morning traffic, the hotel was only a few minutes away and we were quickly parked and making our way upstairs. As soon as we got to our room, however, we stopped short. The door was wide open with the cleaning cart blocking the entry. I sighed and turned to her. \"Sorry, sweetie.\"\n\nLuckily, she was thinking more clearly than I was. With a growl, she grabbed my hand and said, \"Come on.\" She practically dragged me to the elevator where we took it down two floors. Right! She also had a room. In my lust clouded brain, I had forgotten that. We were soon in front of her room, her hands shaking as she fumbled with the key card. Twice, she dropped the card and had to retrieve it with trembling hands. Eventually, she placed it correctly in the slot and the light on the locking mechanism turned green. She threw the door open and yanked me in, slamming the door shut behind her. Her hands immediately pulled me down for a passionate kiss. I had the presence of mind to reach back and throw the lock before she guided me to the bed, her lips never leaving mine.\n\nI pushed her down on top of the covers. She regarded me with lusty eyes and reached down to hike her skirt up. Tearing my eyes from her face, I looked down between her legs. Holy shit! She didn't have anything on under her skirt!\n\nWide eyed, I said, \"Um, Linh...where are your--\"\n\nShe cut me off. \"Less talking; more love making.\"\n\nGiving her a grin, I quickly pulled my suspenders down from my shoulders and loosened my fly. Dropping my pants and boxer-briefs to my ankles, I stepped out of them and lifted my shirt up a bit, just to get it out of the way. She was raised up on her elbows the entire time, her right leg hanging over the side of the bed, the other bent at the knee with her foot on the bed. Her legs were spread and I could see she was already soaked. Her breathing was ragged.\n\nI growled at her. \"You look good enough to eat,\" and started to lower myself down to the ground so I could feast on her gorgeous pussy.\n\nBut she stopped me. \"No. We have time for that tonight, and I look forward to you pleasuring me with your fingers and tongue.\" Her look was intense and her hands started rubbing her tits through the blouse and bra, pinching her nipples. \"But I need you inside me. Now.\"\n\nI was immediately on top of her. As much as I had wanted to go down on her and taste that delicious pussy, I needed to be inside her as much as she needed it. I entered in one thrust, causing her to yelp, her eyes wide. But, if I thought I was being too rough, she set that to rest. Using her hands to pull me into another passionate kiss, she wrapped her legs around my waist. Her strong thighs squeezed and brought me in deeper before relaxing the grip long enough for me to start fucking her.\n\nIt was an intense and urgent fuck. We both needed this. Bad. My hands went around her back and I took each of her shoulders in my grip, guiding her so I could get as deep as possible while I continued pounding into her. Our tongues never stopped wrestling each other, the kissing only intensifying.\n\nShe suddenly pulled her head away, her eyes squeezed tightly shut and a sexy grimace was set on her face. Her thighs once again gripped me and her fingers dug painfully into my back, even through my dress and under shirts. I watched and held her tight as she worked through an intense orgasm, her body trembling as she came.\n\nEyes still closed, she relaxed her grip on my back and thighs, panting. I had stopped fucking her, just keeping my cock buried in her tight sheath. She opened her eyes a little and touched my cheek. \"Oh, Jim. That was amazing. But, please keep going. I am not done.\"\n\nI grinned before leaning down for a quick kiss. Lifting back up so I could look into her eyes, I started slowly fucking her again. Her hands went to the sides of my face, holding me and locking her eyes on mine. Her mouth was open and her panting was intense as I drove myself in and out of her tight pussy. She was so damn sexy! I couldn't believe I was fucking this gorgeous woman.\n\nAfter only a few minutes of this, her eyes again squeezed shut and her body trembled through another orgasm, more of her juices coating my stomach and cock. This time, though, I fucked her during her orgasm, and was confused by the nonsensical words softly coming out of her mouth. Slowing my thrusts a little, I asked her, \"Are you OK, sweetie? What are you trying to say?\"\n\nHer eyes opened again, and she looked drugged. She actually had difficulty focusing on me and it took several seconds for her to regain her senses. A small smile played on her lips, and she said, \"Oh, I am sorry. I kind of...forgot...where I was. I was asking you to keep fucking me in Vietnamese.\"\n\nWell, that did it. No way I was going to hold back now! I had never heard her use the word 'fuck' before, and it had an immediate reaction on me. I gave her a few more urgent thrusts and then felt the inevitable orgasm approaching. I softy cried out as I started filling her with cum. My body bucked into hers, shooting my cum into her incredibly tight pussy. After what was one of the most intense orgasms I'd ever had, I collapsed on top of her, my breathing coming in gulps and my cock still buried inside her. She had her hands on the back of my head now, stroking my hair and murmuring softly in my ear in Vietnamese. She may have been saying 'Get the hell off of me, you fat bastard', but I didn't care. It was amazing.\n\nAfter a few minutes, my breathing calmed and I raised up to look at her. She placed her hands on the sides of my face again with an affectionate look in her eyes, which watered a bit. Then, she fixed me with a crooked grin. \"I had meant to ask you to not finish inside of me.\"\n\nCrap. This was the conversation I always had to have with women I dated. But, for some reason, I really wasn't looking forward to Lihn's reaction. \"Um...are you worried about getting pregnant? Because--\"\n\nHer soft throaty chuckle cut me off. \"Oh, Jim. No. I am on birth control. I just did not want your semen to be leaking out of me all day.\" Her grin turned very sexy and a gleam came to her eye. \"Plus, it is lunchtime and I wanted something to eat.\" Her eyes then got wide and a surprised reaction crossed her features. \"Oh! You just twitched inside of me! You are getting erect again.\"",
        "Truth be told, I had never really lost my erection. It had gone a little soft, but her sexy talk quickly remedied that. I grinned down at her. \"Well, the sexiest woman in the world has that effect on me. Especially when that woman says something so naughty.\" I leaned down to kiss the tip of her nose and brought myself up, dislodging my cock from her pussy. I stood and started to reach for my slacks when she stopped me.\n\n\"No,\" she began. \"Do not get dressed yet.\" She quickly glanced toward the bedside alarm clock. Turning back to me, she said, \"We have plenty of time. It is barely past 12:30. I will be right back. Do not move.\" She abruptly got up and headed to the bathroom, her hand cupping her pussy. She disappeared into the bathroom, and a few minutes later, I heard the toilet flush. After washing her hands, she came back into the room. She had straightened her blouse and skirt and looked presentable once again, although her hair was still disheveled.\n\n\"Now,\" she said as she lowered herself to her knees in front of me. \"What do we have here? It looks like a very messy penis that needs to be cleaned.\" She didn't bother teasing me; she just swallowed my sticky cock into her mouth in one gulp. Since I was now almost completely soft, she was able to take it all and she began sucking on me and licking my shaft clean of our combined juices. She really took her time, worshipping my cock and balls with her tongue. Softly, she said, \"Oh, Jim. I love your penis. It is perfect.\"\n\nAs I started to get hard, she increased her sucking, now stroking my shaft with one hand and fondling my balls with the other. She then released my sac and grabbed my hand. Just like she had done last night with that amazing 'good night' blowjob, she brought my hand to the back of her head, looking up at me. She said it with her eyes, those sexy green eyes. I knew she wanted me to start fucking her mouth. So, I did. Slowly at first before gradually increasing my rhythm. The hand that had been stroking me grasped my cock so her lips would stop with about three inches of my length inside her mouth. As much as I knew she wanted to, she simply couldn't take all of me. Her other hand disappeared under her skirt and she began rapidly rubbing herself.\n\nThe room was soon filled with the sounds of her sucking, my grunts, her muffled mewls, and the wet sound of her pussy being fingered. After about ten minutes, I once again felt the tingling in my balls. \"Oh, Linh...little one. I am going to come!\" Just as she had done last night, she pulled back and created a vacuum with her mouth, the head of my cock captured between her lips and both hands now urgently stroking me. Soon, I cried out and she jacked me off into her warm orifice, gulping down my semen as I pumped rope after rope of it into her mouth.\n\nMy knees started to give out, so I pulled my cock out and shakily made my way to the bed, collapsing on top of the covers. She really did give the best blowjob I had ever had. I could only imagine how much better it would get as she learned to deepthroat me. Panting for a while, I finally got out, \"Fuuuuck. Damn, little one. You are amazing.\"\n\nGiggling, she joined me on the bed and kissed my cheek before leaning back to regard me with a grin. Without hesitation, I pulled her down for a soulful kiss. She melted into it and moaned into my mouth. We kissed passionately for a few minutes before she pulled back, glancing at the clock again.\n\n\"Oh! We need to get back to work. We have a meeting at 1:30, and I need to get my updates for you done; I still have one one-pager to revise.\"\n\nWith a groan, I got up and started getting dressed. \"Damn,\" I muttered as I looked down at my dress shirt. \"I made a little mess.\" There was a large wet spot on the bottom of my shirt. Tucking it into my pants hid it; I just hoped I didn't smell like pussy. She had only brought one change of clothes and toiletries upstairs to our room last night, so her suitcase was still open and sitting on the chair in her room. She dug through it for a clean pair of underwear.\n\nAs she bent a bit to pull them up, I grinned at her. \"Why weren't you wearing your panties?\"\n\nShe returned the grin. \"They were very wet. I started the day turned on, as you very well know. But, my first meeting this morning only made it worse.\"\n\nA little jealous, I still maintained my grin. \"Oh? Some hot guy in the meeting I should watch out for?\"\n\nThat caused her to laugh out loud. \"Oh, Jim, no. There is no other man for me.\" Her grin returned, as she straightened back up. \"Before the meeting started, I was chatting with Susan and Tim and we talked about what we all had for breakfast.\" The grin got wider. \"Tim told me what is in menudo.\" She arched an eyebrow and crossed her arms. \"Is there a reason you did not tell me that--what is word--for cow stomach?\"\n\nI gave her a sheepish smile. \"Tripe.\"\n\n\"Yes. That is it.\" The eyebrow raised again. \"So, why did you not tell me I was eating tripe?\"\n\nAfter a second, I blew out a breath. \"I knew you needed something filling. But most people won't eat stuff like tripe.\" I shook my head. I gave her an apologetic look. \"And, menudo is probably the best hangover food I've ever had,\" I offered weakly.\n\nHer expression changed to a look of affection again. \"That is what I thought,\" she whispered, uncrossing her arms. \"You were protecting me, in a way. As soon as that occurred to me, I--what is word--gushed? Yes, I gushed in my underwear. It was very uncomfortable, so I went to the restroom and removed them. That is also why I needed you to make love to me so badly. I could not wait for tonight. I was too horny.\" She grinned again. \"But, in case you have forgotten, I am half Vietnamese. I grew up eating many things you silly Americans would never touch.\"\n\nI laughed at that. \"Fair enough, little one. I should've known you were more adventurous, even if you are half 'silly American'.\" I glanced at the clock. \"Damn, look at the time. I can't believe we didn't get anything to eat.\"\n\nWalking past me toward the door, she muttered, \"Speak for yourself. I just had a very yummy meal.\"\n\nDamn it! How did she do that? My cock once again twitched in my pants. Groaning, I joined her at the elevator to see her grinning saucily at me. She giggled softly. \"That was amazing, Jim. Thank you. I can now focus on work again.\"\n\nI returned the grin. \"Me too. I was talking a good talk about being good, but...\" I shook my head and blew out a breath. \"But, I was about to burst. It took all of my self control to keep my hands off of you this morning. If I'd known you weren't wearing underwear, I may have just taken you to some closet and...I don't know.\" I blew out another breath. \"That is so sexy.\"\n\nThe elevator doors slid open and we stepped in, the only two people in the carriage. Once the doors hissed shut, she reached over and grabbed my hand. She squeezed it gently and turned to me. I returned the squeeze and leaned in for a lingering kiss. Stepping back, I smiled at her and said, \"You've got 'fuck hair'.\"\n\nHer eyes went wide and then she laughed. Taking her hand from mine, she raked it through her hair several times, looking at herself in the small mirror on the side of the elevator car. After a few minutes, the elevator stopped at the lobby and we got out. \"How do I look?\" she asked.\n\nI looked at her and grinned again. \"Sexy.\"\n\nShe snorted. \"I was hoping for 'professional', not 'just fucked' or something,\" she said low enough that only I heard.\n\nI laughed, even though my mind reeled at her dropping the F-word again. \"Seriously, Linh. You look fine.\" I guided us through the lobby, passing by the hospitality desk. I stayed at this hotel all the time and knew there would be some form of complimentary snack there. Snagging a couple of blueberry muffins, I gave one to Linh and we headed to the car.\n\nOn the way back to the office, we ate our muffins and chatted. I had finished eating as we started getting close to work. She shocked me by reaching over to brush crumbs off of my shirt, lingering a bit on my chest. Her hand then moved down to clean any crumbs from my lap. Looking around to make sure no one was watching, she gave my cock a squeeze.\n\nI groaned. \"Oh, little one. That feels nice.\" I turned to her briefly and shot her a half-smile. \"I want to return the favor, but we're too close to work. I don't think it'd be a good idea for folks to see me groping those beautiful tits or burying my hand in your skirt.\"\n\nShe laughed at that. \"That is OK. I did that without even thinking. I need to remember to be more careful.\" She growled a bit and sighed. \"My brain is still a little foggy and I am not thinking clearly. I feel like I could stay in bed with you all day.\"\n\nAfter parking, though, she immediately transformed her face into that of a professional. We made our way upstairs to our desks. I used the 15 or so minutes before the meeting to answer emails. The meeting was specifically to update me on all of the projects we supported.\n\nEven though I didn't take on the director role, I was still very senior. I actually reported directly to our vice president with a dotted line to the director, rather than to one of the two managers in our group. In addition to my normal role of leading several teams, I was tasked with providing senior support to all of the project managers and their teams.\n\nIt didn't happen often, but there were times when I needed to step in and take control. Generally, I avoided that at all costs; I never wanted to usurp the authority of anyone in our group. In order to help ensure things didn't get to that point, my normal cadence when I traveled to the office was to meet with the teams I led on a Tuesday morning. Then meet with half of our project managers to get updates on their projects in the afternoon. This was followed with me meeting with the other half Wednesday morning to catch up on the status of the remaining projects. Wednesday afternoon was then booked with me providing these updates to our director and vice president.\n\nFinally, Thursday was the senior staff update, where I would present the one-pagers of the critical projects, as well as a brief overview of the remaining ones. This meeting was for each department's vice president and director, as well as our general manager. Sometimes, someone from Corporate would show up, but that was generally only when one of the more business-critical projects was slipping.\n\nIf a specific project came up on the agenda, I would ensure whoever was leading it was present at the senior staff update. Even though I would be able to address any questions, I always wanted to ensure 'face time' for the team, so that the members of senior staff would get to know them. I had never been disappointed in any of the presentations by the leads.\n\nThis Tuesday to Thursday schedule certainly meant I didn't get much actual work done. Between all of those meetings, as well as the other ones that inevitably popped up, I tended to be booked six or seven hours each day. But it provided me the flexibility to travel on Monday and/or Friday in case I had weekend plans back home. Since travel days were so long for me, I didn't get any work done on those days.\n\nA little before 1:30, I made my way to the booked conference room and plugged my laptop into the projector. Soon, four project leads filed in, taking seats around the table and setting their laptops down. I had a fairly strict 'no open laptops' policy during meetings I led, just to make sure everyone was paying attention. But I still urged people to bring them in case I asked for something that needed to be looked up.\n\nLinh sat on my right side but a few chairs away from me. Samira sat next to her, and Ted and Sidd settled into chairs on the other side. Finally, with an apology for being a couple of minutes late, Tamara, their manager, took a seat after shutting the door behind her.\n\n\"Hey guys,\" I began. \"Good to see everyone. Everybody doing OK?\"\n\nWith that, the team started chatting about their weekends and work in general. After a few minutes, Sidd, who had an obvious crush on Linh, gushed, \"Hey Linh. What did you do to your hair?\"\n\nLinh blushed a little and again raked her fingers through her hair. \"Oh. It is not a change. I got caught in a gust of wind at lunch time.\"\n\nSamira smiled at her. \"I like it. It looks great on you.\" Samira was an attractive woman from India that had worked with us for about seven years. She was one of the best project managers we had.\n\nSidd nodded enthusiastically. \"I agree. You look...different.\"\n\nI cleared my throat to bring everyone back on track. I then turned to their manager. \"You ready to get started?\" I asked.\n\nTamara chuckled and nodded. \"Yes, please.\"\n\nSo, we began. I had each lead go over the one-pagers they had emailed to me, projecting each on the screen as we discussed them. I would ask questions where needed and urge them to go back to the team any time I felt like something was slipping. Each person knew what I wanted to see and always provided the information in their summaries. Sidd went last, and his was the only project with delays.\n\n\"OK, Sidd, I see the packaging test report is about a week late. Please explain,\" I said.\n\n\"Brandon came down with the flu. I know the testing is done and everything passed, so I thought it was OK if I just waited for him to get well. I know he'll still finish drafting the report and send it out for approval. It'll just take a couple of weeks more than we planned.\" He regarded me with a questioning look. \"Was that a mistake?\"\n\nI thought about that for a minute. Then I shook my head. \"No. Well, maybe. But if it's a mistake, it's one I would've made, too. I agree. It doesn't affect anything else, so no impact to the overall timelines.\" I gave him a paternal smile. Sidd was our newest member, having only started about nine months ago. \"Good job, Sidd.\" He blushed a little but grinned. Like most of the people in our group, praise went a long way.\n\nI glanced at the wall clock. 2:45. We still had about 15 minutes but had covered everything. I turned to Tamara. \"You have any other questions?\" I asked.\n\n\"Nope,\" she shook her head. \"Everything looks good.\" She then focused on Sidd. \"And, I agree with Jim. Nice job, Sidd. I think you're ready to take things over on your own. Unless you want me or Jim to continue shadowing you, I think we can let you leave the nest.\" She smiled at him, causing his blush to deepen.\n\nHis eyes lit up. \"Thanks, Tamara. I think I'm ready.\" He knew we were always there to support right away. Even the more seasoned leads ran into problems they needed help with.\n\nWith a \"Remember we have a team lunch tomorrow\" reminder from me, everyone shuffled out of the room. I unplugged my laptop and returned to my desk. The rest of the afternoon was spent reading and replying to emails. I sighed as I saw another meeting scheduled for tomorrow. But, since I was the one that requested it, I couldn't exactly be upset.\n\nA few minutes after 6:00, Linh stopped by my cube again. \"Are you ready to leave?\" she asked, her computer bag clutched in one hand. Even though her mannerisms and appearance were completely professional, her voice trembled a little when she spoke.\n\nI smiled at her. \"Yup. Just shutting down now.\" I put my laptop into my bag and grabbed my bottle of water, standing up. \"Let's go.\" I was actually shaking a bit. I knew tonight was going to be amazing and I'd been looking forward to it all afternoon. Even shooting two loads in this beautiful creature earlier hadn't taken the edge off. Actually, I thought of that. I may have been completely useless this afternoon had we not had that lunchtime tryst.\n\nOpening the car door for her, I waited until she was seated and buckled. I then shut the passenger door and quickly made my way to the driver's side, getting in. I started the car and we were soon on our way to the hotel. She was breathing hard and wiped her sweaty hands on her skirt.\n\n\"I can not believe how turned on I am,\" she breathed out. \"I have never been so excited to make love.\"\n\nI blew out a breath. \"Me too, little one.\" I briefly turned to smile at her before returning my attention to the road. \"Tonight is going to be amazing.\"\n\nParking the car, we retrieved our bags and made our way up to the room. As before, she immediately grabbed the front of my shirt and aggressively pulled me into a passionate kiss. She was shaking with need. But, I had other plans.\n\nPulling back, I gave her a hard look. Her eyes went wide as she saw my change. As gruffly as I could manage, I said, \"Strip and get on the bed, my pet. I'll be back in a minute. And don't you dare touch yourself, or I'll have to tie you to the bed.\"\n\nStill wide-eyed and panting heavily, she stammered, \"Y-y-yes, sir. I will do as I am told.\" With trembling fingers, she began unbuttoning her blouse. I grabbed the empty ice bucket and left the room. After filling up the container from the ice machine, I made my way back to the room, placing the Do Not Disturb sign on the outside handle.\n\nAfter closing the door, I set the bucket down and turned the corner to see her lying on the bed. My God! She was equal parts beautiful and sexy. She was on her back, completely nude, her exceedingly perfect body on display. Her C cup breasts rose and fell rapidly with her panting. She had both hands above her head, gripping the pillow tightly, I assumed to keep from touching herself. Her perfect legs were rubbing together as she writhed a bit on the bed, her long dark hair fanned out around her. Her eyes were shut, and she softly whimpered with desire.\n\nStruggling to remain in character, I stood on the side of the bed. I reached down and tugged on her right nipple, which was completely erect. \"Good, my slut. Very good.\" She whimpered again, louder, opening and focusing her eyes on mine.\n\n\"What...what do you plan to do to me,\" before quickly adding, \"sir?\"\n\n\"Whatever I want to do, of course.\" I reached over and tweaked her other nipple, eliciting a slight yelp. \"You know you're mine, right, my pet? That you're here for my personal pleasure?\"\n\nHer panting increased. \"Y-y-yes. Please. Please do whatever you want to me. I...I am here for you to use however you wish.\" The words came out in a whispered rush. Her thighs continued to rub together, squeezing and releasing alternately.\n\nI stripped to my undershirt and boxer-briefs. I returned to the side of the bed, now holding the bucket of ice. Setting it on the ground, I grabbed one cube of ice and sat on the bed. Holding the cold object in my right hand, I brought it to her face, running it along her full lips, her panting increasing even more.\n\nA thought occurred to me then. Even though I didn't have any intention of actually fucking her right now--this was going to be all for her, I had decided earlier--I wanted to make sure she felt safe. Momentarily slipping from my persona, I smiled at her. \"Remember your safe word, little one.\"\n\nShe got wide eyed and gasped. \"Y-y-yes,\" she stammered again. \"I remember. Please...please take me.\"\n\nI took the ice cube and returned it to her face. Starting on the left side, I ran it along her cheek and then across her voluptuous lips, her tongue coming out. I slowly slid it back and forth a few times then raised my hand a little, causing a drop of the melting ice to drop on her nose, earning me a small giggle.\n\nI placed the cube on her neck, and she let out a soft yelp. Running it along her graceful neck, I moved down until I was at her incredibly erect right nipple. Twirling the ice around that turgid point, I saw it actually harden more. I ran it over the tip of her nipple several times and then around her areola. After a few minutes of treating that perfect breast to my attention, I moved the ice to her left tit. I treated the twin to her splendid right breast with the same loving experience.",
        "I continued moving my way down, working the ice along her stomach to the top of her mound, rubbing it sensually in her trimmed pubic hair. Ignoring her whispered begging, I bypassed her pussy and slowly worked the slowly-melting cube down her right thigh and then up her left one. She gasped audibly and her eyes flew open once again when I finally rubbed the frozen piece along her slit, pressing gently against her clit.\n\n\"Use your hands to raise your legs, my pet,\" I softly told her. She immediately grasped the backs of her knees and brought her legs up. I ran the cube down to her now-exposed asshole, pressing against it and earning another sharp gasp from her. I ran the cold object along the back of her left thigh to where her hand held the back of her knee before moving it to the same spot on her right side. I reversed my movements, running the ice down the back of her right thigh, once again settling on her asshole, causing it to flex. I slid it up a little to her pussy and inserted the tip inside her.\n\nHer legs immediately straightened and came down, trapping my arm underneath. Her eyes again opened wide, and her mouth flew open but no sound came out. Suddenly, her eyes closed tightly and she shuddered through a small orgasm. I looked down but she hadn't squirted. Taking my arm from underneath her right leg, the ice still grasped in my fingers, I ran it back up her stomach, slowly circling around her belly button a few times; the melting ice formed a small pool of water in the indentation. I then slid the ice along her flesh up to her tits and briefly treated each nipple to another cold shock, continuing on until I reached her panting mouth.\n\n\"Enjoy, my pet,\" I said, as I put what remained of the ice into her mouth. She immediately sucked it in and allowed the rest of the cube to melt in her sensuous mouth, her lust-clouded eyes never leaving mine.\n\n\"Now,\" I began, as I moved up to straddle her, my face even with hers. \"Time for my treat.\" Eliciting another yelp from her, I placed my mouth on her neck, lightly sucking and kissing her there. Following the same pattern I had used with the ice cube, I moved my lips and tongue from her neck down to her right nipple. I grasped it in my teeth and lightly bit and sucked her hard nub. It was still cold from the ice! After moving on and treating her left nipple to my ministrations for a few minutes, I worked my way down, kissing and sucking her flesh the entire way.\n\nI paused at her belly button, licking up the water from the ice that had melted and gathered there. Continuing down, I avoided her pussy but spent a lot of time kissing and nibbling her right thigh, the heat from her crotch radiating on my cheek. I slowly worked my way down, raising her right leg in the air so I could pay attention to the back of her knee. The smell of her pussy was strong and my nostrils flared as I took in her scent. Rather than going to her other leg, as I had with the ice, I continued down that shapely right calf until I reached her foot. Kissing and applying light bites to her dainty foot, I moved to her perfectly-manicured toes.\n\nShe couldn't suppress the giggles as I sucked each toe into my mouth. After popping her last toe out, I grabbed her left foot and repeated my sucking, spending time on each digit before moving on to the next. I again reversed my ministrations, raising her left leg up to pay special attention to the back of that knee. Moving my way up, continually sucking and gently biting the inside of her left thigh, I was soon in front of her pussy. The insides of her thighs were absolutely drenched, and her juices had run down the crack of her ass and formed a pool of moisture on the sheets.\n\nBut, I needed to tease her some more. I blew a light breath on her pussy, causing her to gasp. I once again started kissing and applying light bites on the insides of her thighs, going back and forth between them. I slowly progressed each wet kiss closer and closer to her pussy. She was really moaning now, and I could tell she was becoming frustrated at the teasing. \"Please,\" she whispered, panting. \"Please sir. Please let me come. I am begging you, sir. Please. I have been such a good...slut...for you.\" She was pushing her pussy toward me ever so slightly.\n\nGrinning, I figured I had put her through enough. I stuck out my tongue and started at the bottom of her swollen left outer lip. Her moaning increased as I ran it to the top. Avoiding her clit, which was peeking out, I moved my tongue to the top of her right lip, savoring the taste of her juices as I made my way down. I then took her by surprise, causing her to yelp, as I quickly grasped her clit between my teeth. After sucking hard on that pearl for a moment, I released it and ran my tongue up and down her outer lips a few more times.\n\nBringing my right hand up, I pressed my middle finger against her opening. I slowly slid my finger inside her incredibly tight and hot pussy, her moans increasing in volume. Turning my hand a bit, I curled my finger inside her, seeking that bumpy-feeling patch that signaled her g-spot. Pressing against that, I resumed sucking her clit. Her legs snapped shut, squeezing my head between her strong thighs.\n\nHer scream was not quiet this time and I feared the hotel staff was going to come running. Loudly, she yelled out, \"Yes! Yes! Please do not stop!!!\" and my face was soon drenched with her pussy juice, her ejaculation more than the previous night. Her hand briefly went to the back of my head before she remembered the role playing. She pounded her fists on the bed as she worked through her orgasm, bathing my cheeks and chin with her tangy juices as her legs shook. After a few seconds, she screamed out a squeak, her body stiffened, those thighs again painfully squeezing my head, and she sprayed my face a final time. After that, she went limp and silent.\n\nLooking up from between her legs, I softly asked, \"Linh? Are you OK?\"\n\nNo answer. I started to get a little concerned until I heard a soft snore as her chest rose in a deep breath. I grinned. Getting up, I made my way to the bathroom to clean up. Looking in the mirror, I was surprised at how coated my face was with her juices. Holy shit, had she come a lot! I could see her juices not only on my face but my neck, as well. The front of my white undershirt was absolutely soaked around the neck and chest. I turned the sink on and washed off.\n\nAfter removing my shirt and toweling dry, I went to the mini fridge and retrieved a bottle of water. Twisting the cap off, I returned to the bed and got in next to Linh. I gently shook her, but that just caused her to turn over on her side, toward me. She placed her left hand on my shoulder and snored again softly. My goodness, was she cute!\n\nI decided to let her get in a cat nap. I knew she must have been exhausted, a remnant of the effects of the hangover. I left the bottle of water on the nightstand next to her and gently removed her hand from my shoulder. Getting up as quietly as I could, I started getting dressed again, bypassing an undershirt this time. I was pulling my suspenders back up when she softly spoke up.\n\n\"What is going on? Jim, where are you going?\"\n\nI turned to smile at her. Her eyes were half open and she again looked drugged. \"I was going to let you sleep a little more. I figured I would go downstairs and get us something to eat.\" I went back to the side of the bed and touched her cheek, eliciting a happy sigh from her.\n\n\"What happened?\" she asked softly.\n\nI grinned at her. \"'What happened'? Apparently, I'm not very good at eating pussy. You fell asleep on me.\"\n\nShe lifted up, her head and chest raised a little as she turned and propped herself up on her elbows. Her eyebrows furrowed in confusion for a moment. Then, she shook her head. \"Sleep? No. I did not fall asleep. I remember your finger touching somewhere inside of me, and I saw stars. Then, everything went black.\" She shook her head again and slowly raised up to a sitting position, wrapping her arms around her knees. She blew out a breath. \"I think I passed out.\" She then looked up at me with wonder, a lopsided grin forming as she laid her head on her knees. \"You are amazing. That has never happened before.\"\n\nIt was a first for me too. Don't get me wrong. I knew I was pretty good at cunnilingus. With very few exceptions, I was able to get a woman to come while going down on her. But, I couldn't remember one ever passing out on me before. My first thought was being pleased for her; it always made me happy to see a woman enjoying what I was doing. And, I'd be lying if I said it didn't stroke my ego. But getting a woman to pass out? It was like a voice in my head was saying 'Damn, dude. You are the man!' with an image of a guy pumping his fist in the air.\n\n\"Believe it or not, it was good for me too,\" I honestly told her. \"I like going down on a woman and making her come.\"\n\nShe chuckled sleepily, shaking her head again. \"You and I will get along very well, then.\" She grinned at me. \"I would cheekily say you can continue practicing on me as much as you want, but you do not need the practice.\"\n\nI returned the grin. \"Well, now you know what to tell a guy you like.\"\n\nHer face flashed, a hard look joining a frown. Just as quickly, though, it changed back into a smile. \"We will see. Anyway, it is my turn to pleasure you.\" With that, she started to reach for me, but I stopped her.\n\n\"Oh, little one. Plenty of time for that later. We need to eat.\" As if on cue, my stomach growled. We both laughed out loud, and she actually looked a little relieved. I imagined she was still recovering and needed time to do so.\n\nI indicated the door. \"OK, what would you like? I'll run down and grab something to go.\"\n\nShe thought about that for a minute before shaking her head again. \"No. I would like to have dinner with you downstairs.\" She blushed and gave me a coquettish grin. \"Like a date.\" She straightened up. \"Give me a moment to pull myself together; I am still a bit foggy.\"\n\nI decided brushing my teeth was a good idea. So, I went to the bathroom and did that, checking my breath to make sure I didn't still smell like pussy. Looking at my reflection, I noticed my hair was a little messy, so I ran my fingers through it; this caused me to grin. I was acting like a high school kid going out on his first date. I wanted to look my best. I really liked this girl.\n\nI went back to the room to find her dressed in her work outfit again, but she was now pulling her hair into a ponytail, tying it in place with a band. I shook my head at that; why did it always seem a woman could make a hair tie appear out of nowhere? I started for the door but she grabbed my arm. I turned to face her, my eyebrows raised in a question.\n\nShe looked up at me, her eyes dancing back and forth a bit. She had her lower lip captured between her teeth, and I could tell she wanted to say something. Finally, she just reached up and gave me a quick smooch on the lips. Stepping back a little, she simply said, \"Thank you. You are an amazing man.\"\n\nI grinned. \"I have my moments.\" My stomach growled again, causing her to giggle. \"Now, I really need some food.\"\n\nShe reached up and tenderly touched my cheek. \"Yes you do.\" Her look then turned saucy and she growled, \"You will need your energy tonight. I am going to do many things to you and absolutely wear you out.\" Grabbing my shoulder, she pulled me down toward her. I thought she was going in for another kiss but instead she placed her lips next to my ear and whispered, \"Look on top of the bed.\" I darted my eyes to the bed; they widened once I saw what was there. Just to verify, I ran my hand back to rub her perfect bubble butt through the skirt. Yup; no underwear. She continued, as she breathed huskily in my ear. \"That is correct. I think maybe I should earn your permission to wear those from now on.\"\n\nStanding back, she laughed at my wide-eyed look. She then took my hand and dragged me toward the door. She had to; I was about to push her back in the bed. Holy crap, was this girl hot!\n\nWe left the room and made our way down to the hotel restaurant. We sat ourselves at a small circular booth and pulled out menus from the center rack. While I was trying to decide between a burger and a chicken sandwich, I heard, \"Jim? Is that you?\"\n\nI looked up to see a man sitting at one of the tall tables several feet away. It took a second, but I soon recognized him and smiled. \"Oh, hey, Michael. How's it going?\"\n\nHe got up from his table, a drink in hand and came over to us. \"Good, thanks,\" he said, reaching his free hand out to me. I shook it and he then turned his attention to Linh. He offered his hand to her and said, \"I'm sorry...is it Linh?\"\n\nShe smiled at him, taking his hand in hers. \"Yes, that is correct. It is nice to see you again, Michael.\"\n\nHe gave her his thousand-watt smile and then looked back and forth between us. \"Mind if I join you?\"\n\nAlthough I wanted nothing more than to be alone with Linh, I didn't want to raise any suspicions, so I just nodded and said, \"Of course. Please do.\" Linh also nodded, still smiling at him.\n\nHe sat beside Linh, and she scooted to make room for him, now seated between us. He immediately took charge of the conversation. It wasn't anything rude; it was just part of his personality. After only a few minutes, he had us laughing loudly while regaling us with stories about dealing with customers. We paused long enough to place our orders when the server appeared, but quickly returned to his horror story of one particularly demanding physician.\n\nLaughing, I said, \"Oh, man; I could never do that. You're head of sales in the Midwest, correct?\"\n\nHe gave me a self-deprecating smile. \"And the East Coast now.\"\n\n\"Wow,\" Linh said. \"That sounds like a lot of responsibility. You must be very busy.\"\n\nThe lopsided grin never left his face. \"Nah. I have a great group. My staff is amazing and I just take the credit.\"\n\nI knew that was a lie. Yes, he likely had an amazing group of people, but I knew from experience that didn't mean everything was easy. Linh, along with everyone in our group, was great. It didn't mean they didn't need a prodding every now and then, sometimes pushed to the background momentarily so someone with more experience could take over and set things on track. I knew Michael was a hard worker that put in a lot of hours to meet--and exceed--business goals.\n\nWe continued chatting over dinner (I opted for the sandwich) and drinks. I had my Scotch-neat, Michael a gin-and-tonic, and Linh was nursing a glass of white wine. After finishing our meals, Linh sighed and said, \"I am sorry. But I need to visit the ladies room. Could one of you gentlemen please let me out?\"\n\nMichael immediately got up and offered his hand to her to help her up. She took it and gracefully slid from the booth, thanking him. As she walked to the lobby's bathroom, her gorgeous ass swaying seductively, Michael blew out a breath. \"Damn. That is one beautiful woman. And those lips...wow.\" He shuddered a bit, as he watched her glorious backside.\n\nMy face grew warm, but I maintained my composure. \"Yeah,\" I forced a grin. \"She's pretty great, alright.\"\n\nHis face shot to mine. His lips twitched to an imperceptible smile as he regarded me. \"Yeah...too bad I'm married. Maybe she'd be better off with someone else.\" Noticing my blush, he quickly added, \"So, Project Parakeet. We really need that to go forward. How's that one going?\"\n\nHe sat back down, and I began going through the familiar process of providing an overview of a project to a specific audience. As a member of the sales force, I knew he was only interested in timelines and revenue projections; I knew he didn't care about testing updates and such. Project Parakeet was one of the projects Becky was leading. I'd get a full update from her tomorrow but I knew enough about the status.\n\n\"It's on track,\" I began. \"We'll be able to make the manufacturing update sometime next week, I hope. If we do, you should start seeing the increase in revenue by quarter end.\" I went on, citing specific numbers. Parakeet was a cost-savings measure to lower one of our supplier's prices. Making the products cheaper, while maintaining our prices, was a 'low hanging fruit' kind of change. It was relatively easy and inexpensive to find a way to cut costs on incoming components and inflate our profit margins.\n\nHe nodded as I went through the updates, stopping me to ask questions a few times. He looked up to see Linh approaching and once again stood, offering his hand to her. She took it and sat back down.\n\n\"Are you discussing Project Parakeet?\" When I nodded, she continued. \"Becky and I were talking about it this morning. She is quite excited to finish her first project.\" She regarded us with her beautiful smile and captivating eyes in turn. Michael actually blushed.\n\nHe turned back to me. \"I'm actually in town so I can attend Thursday's meeting, covering for Sudhir.\" Sudhir was a senior director in sales, responsible for all of North, South, and Central America. \"Will you be presenting?\"\n\nI nodded. \"Yes. That's why I'm in town, too. Trying to present the updates remotely is difficult.\" That was true. I had hoped to have the flexibility to run the monthly updates from New York, but the one and only time I tried that, it was not well received. I didn't care for it either. Eye contact and body language were an underrated benefit when presenting to people. Seeing someone fidget, look away, or glaze over was a quick indication of 'move along, Jim' without anyone having to actually say it.\n\nI continued. \"I'm going to have Becky present Parakeet, though. She knows the nuts and bolts better than I do.\" While that wasn't really true, I still liked seeing our folks get the opportunity to do it. Presenting to senior management could be very intimidating, and I urged each of our junior members to get that experience as early in their careers as possible. Plus, when it was good news being shared, I liked seeing them directly receive the praise. It just seemed better than me passing it along.\n\nHe nodded, then turned that smile on Linh. \"And you, Linh? Will you be there?\"\n\nShe nodded enthusiastically. \"Yes. I will be providing an update on Project Tweety Bird. We hope to have some good news to share.\"\n\nHe grinned. \"Tweety Bird?\"\n\nShe laughed out loud, the sound melodic. \"Yes. The R&amp;D engineer on the project is apparently a very big Looney Tunes fan.\"\n\nWe all laughed at that. When I first started with the company, I brought a few ideas that I had picked up at college. I would kick off a new project by asking the team to come up with some goofy or funny name for it. This allowed everyone to make a joint decision as soon as the project was kicked off, helping to engage everyone with a sense of ownership. It was also a lot of fun, reading out everyone's ideas so we could all vote on the winner. We'd often even get shirts or something made with a logo. The teams all loved it and the tradition continued.\n\nMichael leaned out of the booth a bit and raised his hand to get the bartender's attention. \"Let's get another round. Linh, you're one behind,\" he grinned at her.\n\nShe blushed. \"Oh, thank you, Michael. But, I must politely decline. I have some work to finish tonight.\"\n\nHe stood and again offered his hand. After she was up, Michael sat down with his phone in his hand. \"Well, it's been nice catching up with you, Linh. I look forward to your update Thursday.\" He again gave her his brightest smile, before his focus went to his phone. \"Apologies, guys. I need to text my wife.\"\n\nWhile he looked down, his fingers flying on the virtual keyboard, Linh looked at me with one eyebrow raised. I flashed two fingers followed by turning my fingers into a 'zero'. I mouthed 'twenty minutes' and she nodded.\n\n\"Good night, gentlemen. Maybe we can all meet for breakfast tomorrow morning?\" she asked.",
        "Remembering my schedule, I grimaced. \"Oh, sorry, Linh. I have an early conference call.\" Her eyes immediately got a bit wider, the pupils dilating. Just as quickly, she was back to normal. I was confused by that reaction but obviously didn't say anything.\n\n\"Yes, sorry,\" Michael said, looking up from his phone. \"I have to be at the office by 6:30.\" He grinned again. \"No way am I asking anyone to get up in time for breakfast before that.\"\n\nShe laughed. \"OK. Maybe Thursday morning. Good evening, gentlemen.\" With that, she turned and sashayed out of the lobby toward the elevators. Michael glanced up from his phone once again, watching that perfect butt.\n\nHe flicked his eyes to see that I noticed him checking her out, an amused expression on my face. \"Sorry,\" he grumbled, a blush creeping up his neck. \"That was inappropriate. But,\" he began and blew out a breath, shaking his head. \"Not only is she beautiful, she is incredibly smart and has a great business mind.\"\n\nI laughed. \"Oh, man. Don't worry about it. She really is pretty awesome.\" I raised an eyebrow. \"Her boyfriend is a very lucky guy.\"\n\nHe regarded me for a moment, a gleam in his eye. Finally, he just shrugged and said, \"Indeed he is.\"\n\nWe quickly turned the conversation to updating each other on our personal lives, sipping our refreshed drinks. He and his wife, Susan, were expecting their first child in about two months, and I could tell he was very excited. The server placed the check on the table, which I reached for. Michael grabbed it before I could. \"Nope. It's on me. We talked business, so this has technically been a business meal.\" He smiled again. After paying, we finished our drinks, and he glanced at his watch.\n\n\"Well, this has been great. But it's getting close to bedtime back in Chicago, so I need to call home and wish Susan a good night.\" He looked at me. \"Thanks for the update, Jim. I have a business dinner tomorrow, but maybe another drink before we head home?\" I nodded my agreement. Standing, we shook hands. I made my way to the elevators while he walked outside, his phone at his ear.\n\nSoon enough, I was unlocking and opening the door to our room. I didn't see or hear any sign of Linh and thought maybe she had stopped by her room to grab clothes for tomorrow. I walked in and retrieved my computer from my bag. Turning it on, I started taking my suspenders off. I typed my user ID and password into my computer and turned to start getting undressed. I froze with one hand on the top button of my shirt. I had walked right by her without noticing.\n\nHow I had missed her, I'll never know. She was on the floor next to the bed, completely naked and her hair no longer tied back. Just like she had done in the shower this morning, she was sitting on her knees, both hands on her thighs squeezing her ample bosom together. Her mouth was open in an 'O'. I couldn't even form a sentence and she noticed, momentarily breaking character to grin. Then, a pout as she looked up at me demurely.\n\n\"It was very wrong of me to disobey you this morning, sir. I am ready for you to teach me a lesson. Please, sir, punish me as you see fit.\" A squeeze of her arms to further accentuate her tits. \"I deserve it.\"\n\nChrist! If I weren't hard before, this would've done it. Luckily, I was already mostly erect, just thinking of fucking her during dinner. Hell, even after only an hour following our lunchtime fun, I was daydreaming of the things I wanted to do to her. If I had been completely soft, I imagine I would have fainted due to the quick loss of blood to my brain. As it was, it still took a few moments for my mind to come together long enough to slip into character.\n\n\"Oh, little one. You are right.\" I reached over and ran my thumb along her lower lip. Leaning forward just a little, she took it in her mouth, closing her eyes and moaning as she sucked my digit. I sighed in mock annoyance. \"You were extremely naughty. I'm afraid I'll have to teach you a lesson about obedience by fucking all three of your slut holes.\" She moaned around my thumb again. This only increased when I added, \"You understand you deserve everything I'm about to do to you, don't you?\"\n\nRemoving my hand from her face, I unzipped my dress pants. Tugging down my underwear a little, I pulled out my very erect cock. Almost immediately, a drop of pre-cum formed on the tip. She saw that and licked her lips. I stepped up to her and placed my right hand on top of her head. \"Open up, my pet. Time for your first lesson.\" She started leaning forward, but I stopped her by grasping her hair. \"Yes, slut. Once you're properly broken in, I will be able to just fuck your mouth and throat. But, you are still learning. Wrap your hand around my cock.\" She reached up to grasp my cock, once again placing it so that I would only be able to fuck in as much as she could handle.\n\nLetting go of her hair, I placed both hands on the back of her head and pulled her forward. She eagerly took me in her mouth, moaning as she tasted my pre-cum. I started slowly but gradually increased my thrusts. Within about five minutes, I was fucking her mouth at a pretty good rate. \"Look up at me, pet.\" She looked up, the most beautiful green eyes in the world now smoky with lust. Struggling to keep from coming at that sexy sight, I focused on my talk.\n\nMy voice trembling a little, I said, \"Yes. That's it, my pet. Show me how you are learning your lesson. Let me see those cock-sucking lips of yours wrapped around me. Don't you see? You can't disobey me when your mouth is full. Maybe we should keep your mouth stuffed with my cock all day; what do you think of that?\" She mewled around my cock, her eyes squeezing shut as her body trembled with a small orgasm.\n\nShe then used her free hand and placed it on my abdomen, stopping my face-fucking. Returning her sultry eyes to mine, I watched as she slowly slid the hand grasping my cock down another inch or so. Holy shit! She dropped her other hand from my stomach before reaching back and placing it on my ass, pulling me in. Taking the hint, I slowly fucked my cock into her mouth again, this time adding another inch. She grimaced and shut her eyes but didn't stop me.\n\nRepeating my earlier pattern, I slowly started fucking her mouth before gradually picking up the pace. This time, however, after only a few minutes, she pulled back and began coughing. I saw a huge amount of drool on my shaft and her hand, some of it dripping to the floor in long strings.\n\nOnce she regained control of her breathing, she again reached to take me in her mouth. And, as much as I knew she'd keep trying until she took it all, I didn't want to gag her. So, \"That's enough of that hole, slut. But don't be sad; I'll use it some more later.\" I slapped her cheeks a couple of times with my soaked cock, eliciting gasps and moans from her. \"On the bed, pet. Assume the position.\"\n\nShe scrambled to get on the bed as quickly as possible, immediately getting on her knees and dropping her head down. Unlike last night, however, she also reached back with both hands and spread her ass for me. Crap! Damn, was this woman hot! She was completely exposed to me, her extremely wet pussy spread a little so that I could see her darker inner lips. Above that, her dusky-colored asshole winked at me.\n\nOnce again struggling to maintain control, I sat on the bed behind her. \"Good my pet. Very good.\" I ran the index finger of my right hand up her right thigh until I got to her pussy. I slipped the finger in in one thrust, causing her to moan softly. I finger-fucked her tight little pussy a few times, then moved it to her even-tighter asshole. I stopped short, my eyes going a little wide. She had lubricated her ass already!\n\nClearing my throat to hide my shock, I asked her. \"Did you already prepare your tight little backdoor for me, slut?\"\n\nA breathless \"Yes\" answered me.\n\n\"How, my pet? How did you get yourself ready?\"\n\nShe turned her head to the side so she could look at me. \"I-I-I used my--\"\n\nI cut her off. \"No, my slut. Show me; don't tell me.\"\n\nHer eyes went wide and rapidly moved back and forth a few seconds. Finally, she breathed, \"Yes, sir.\"\n\nShe raised herself just enough to get on her elbows. She reached to the nightstand and grabbed the small bottle of lube she had brought. Using her left hand, she squirted some of the slippery stuff on her right palm. Closing the lid and setting the bottle aside, she began rubbing her right hand together to spread the lube on her fingers. Once again dropping her head to the bed, she placed her left hand on her left ass cheek and spread herself. Without preamble, she moved her right hand to her ass and shoved her index and middle fingers up her ass past the second knuckles.\n\nFuck! I needed to get undressed before I stained my pants; I was that close to coming. Standing and maintaining a calm authoritative voice, I started getting undressed, saying to her, \"Very good, pet. Every good slut should show initiative.\" She mewled again. \"But remember. You do not masturbate or come without my express approval. Do you understand?\"\n\n\"Y-y-yes. Yes sir. I promise I did not come...umm...without you here.\" I grinned. Always one to make sure the full truth was told, she hedged her comment, knowing full well she'd already had an orgasm while I was fucking her mouth.\n\n\"Good, slut. You have my permission to finger fuck your perfect ass while I watch.\"\n\nShe sighed happily at that and began slowly fucking her two fingers in and out of that tight orifice while I watched, removing my clothes quickly. After getting my dress shirt off, I looked down and started on my shoes. I heard a slight gasp and looked up to see her now sliding her ring finger into her backdoor. She was soon fucking all three fingers in and out, her moans increasing.\n\nScrambling to remove the rest of my clothes, I quickly brought myself up to my knees behind her. \"Get ready, pet. It's time to teach your other holes a lesson.\" I grabbed her hips and placed my tip against her hot pussy. She removed her fingers from her ass and grasped that right cheek, trying to spread it open.\n\nThe next few seconds were almost comical. Her right cheek kept releasing from her slippery hand and I could tell she was getting frustrated. So I whispered, \"It's OK, slut. You are spread enough for my liking. You have my permission to use your hand to play with yourself.\"\n\nWhimpering, she moved that hand to her clit. She started rubbing as I started sliding my painfully erect cock inside her tight pussy. Slowly, I buried myself completely in that hot sheath, savoring the exquisite feeling of her insides gripping my throbbing shaft. After staying still a few moments, I slowly pulled back until half of my cock remained. I then started slowly fucking her, repeating the pattern I had used on her mouth, gradually increasing my rhythm until I was frantically fucking her.\n\nI was really pounding into her. So much so that I was actually pushing her forward a little with each thrust. She had to remove her left hand from her ass so she could brace it against the headboard. Placing the palm firmly against the wooden headboard, she started pushing back, allowing me to continue hammering into her. She was grunting the entire time and furiously rubbing her clit, her nails occasionally scratching along my balls. After about ten minutes, she let out a squeaky scream, went rigid and came, coating my balls and thighs once again with her juices. Instead of going limp, however, she just continued pushing back against me, urging me to keep going.\n\nI was starting to get pretty winded, however, and knew I needed to slow down. Slowly sliding my cock out of that wonderfully tight pussy, I aimed my sights a little higher. \"What about this hole, my pet?\" I asked as I ran the head of my dick up and down the crack of her ass, pressing against her asshole. \"You ready for your final lesson?\"\n\n\"Y-y-yes, sir. Please,\" she breathed out, her voice urgent with need. \"Please take my bum again...your bum again. It belongs to you. Please hurt me and make me understand my place.\" She was almost frantic with desire. She was pushing back against my cock, trying to take it in her ass. \"Please, sir. Do not go slow. Punish my...ass. Punish me.\"\n\nFuck! Trying to control myself, I started pressing forward. Even though she had asked me to just take this tight hole, I wasn't about to do that. I slowly applied pressure until the head of my cock went in. I had briefly considered lubricating myself, but between the lube already in and around her ass and the large amount of pussy juice coating my shaft, I figured I was wet enough. She gasped as the head entered her ass, taking it in past the crown. I wanted to give her time to adjust, but she pushed back against me. Hard. In one push, her unbelievably tight asshole took me in all the way to the balls.\n\nThis proved to be a mistake on her part. Her head immediately came up, her eyes wide. She let out a startled squeal; this was followed by a string of words in rapid-fire Vietnamese. I started to pull back, but she quickly reached her hand back to press against my stomach. \"N-n-no, Jim--ohhh, it hurts--no, Jim. Please do not move. I...\" her eyes squeezed shut in a grimace of pain. She panted hard for several breaths. Then, \"I...I am getting used to it. Just please...please stay where you are.\"\n\nRemembering my advice from last night when I took her anal cherry, she dropped her hand to her pussy again and began masturbating, slowly at first before increasing the pace. Soon enough, I felt her asshole start relaxing a little. Or maybe it was just that my cock had gone a little soft. That, however, was quickly remedied as her groans of pain started turning into moans of pleasure. Once I heard that, coupled with looking down at my cock buried in the most perfect ass I'd ever seen in my life, my cock rapidly hardened again. She must have felt it, as her moans increased.\n\nSo, there we were. I had all 7 inches of my thick cock buried in her ass while lovingly stroking her back with my fingers. She had one hand rapidly fingering her soaked pussy while her asshole continued alternately squeezing and relaxing, her moans intensifying. Suddenly, her body tensed, she grew quiet and her asshole clamped down painfully on my erection. Her body gave a slight shudder and she came. It was a small orgasm, but it allowed her tight hole to relax as much as it was going to.\n\nAfter a few minutes, her breathing finally started to calm. She looked back at me and seemed determined to continue the role playing. \"Please, sir. Take my ass.\" She gave me a few sexy moans. \"Make me yours. Please do not go slow; I do not deserve your kindness.\" She bit her lower lip and regarded me with those sultry eyes, which were glazed over with lust.\n\nJesus, it was all I could do to not come! Once again grabbing her hips, I decided to take her at her word. I didn't bother starting slow, instead pulling halfway out before slamming back inside. Listening closely for any sign that I was hurting her, I was instead greeted with louder moans and soft pleading to keep going. So, I did. I tightened my hold on her hips and really gave it to her, once again fucking her hard enough that I was pushing her up on the bed. She moved her left hand to the headboard again to push back. Her right hand returned to furiously stroking and fingering herself, squishy sounds filling the room.\n\nAlthough the mood had temporarily been killed after her reaction to my initial entry, I was quickly on the brink of coming again. The entire evening had been a slow build-up and my balls were ready to finally burst. Knowing I wouldn't be able to hold out long, I went back to the dirty talk. \"Very good, my pet. Your tight back hole is all mine now. I plan to use it often, slut,\" I managed to get out between grunts as I pounded into her. Her moaning and whimpering only increased.\n\nHer insistent pleading was also elevating. \"Thank you, sir.\" More moaning. \"All I want to do is please you--ohhhh--please you with my holes. Please use your slut's...ass...for your pleasure.\" Her fingering became frantic once again, her body starting that tremble I was getting used to. She squeaked out, \"Please, sir. May I come with you? Will you please allow your pet to--ahhh!--come for you? Pleeeeease?\" she drawled out as her body started to really quiver.\n\nI barely got out, \"Yes, slut.\" More grunting as I was absolutely slamming into her, that gorgeous ass shaking with each thrust. \"Come for me. Let me know how much you--oh God!--appreciate my cock in your tight little ass.\"\n\nThat was as much as I could handle. My eyes squeezing shut, I gave her a few more frantic thrusts and buried myself deep, firing my massive load in that tight ass. I held her hips tight as I kept coming and coming. That pushed her over the edge, as well.\n\n\"Oh! I can feel you coming inside me...Oh! It feels so good!\" Her body shuddered before going completely stiff, her asshole clamping down on my spasming cock. I was again bathed in her juices as she squirted on my balls and thighs. She let out a barely audible squeal as she sprayed me again. She then surprised me by trembling one more time and squirting once more.\n\nAfter that third time, though, her legs gave out. Her knees slipped down and she was now laying flat on her stomach, with me collapsing on top of her. Figuring I must be crushing her, I rolled over and landed on my back, my cock leaving her ass with a popping sound.\n\nWe were both panting hard, trying to recover from our exertion. She turned her head toward me, a tired smile on her face. She whispered, \"Please kiss me, Jim.\" Using what little strength I had left, I scooted closer to her and turned on my right side. I brought my left hand up to cup her cheek and then leaned over to give her a few gentle kisses on the lips. I moved up and kissed her nose, which she wrinkled, giggling softly. I then kissed her forehead before again collapsing on my back.\n\nAs we both continued to regain our breathing, she moved a little and placed her upper body on my stomach. She put her arms on my chest and placed one hand on top of the other. She then put her chin on her overlapped hands, looking me in the eyes with adoration. She was still smiling tiredly at me and said, \"That was wonderful, Jim. Thank you for doing that.\"\n\nI snickered softly, as I brought my left hand back to her cheek. She leaned into my palm, sighing and closing her eyes. My right hand went to her back to lightly stroke her soft skin. \"Oh, little one. That was amazing. You are an incredible lover.\"\n\nShe opened her eyes slightly to look at me again. Suddenly, she stiffened and popped up a little, her eyes going wide. \"Oh! Excuse me a moment. I will be right back.\"\n\nWith that, she practically jumped out of the bed and ran to the bathroom. I heard the door shut and the exhaust fan go on. She then started the sink. At first confused, a small smile played on my lips once I figured it out. I had fucked enough women in the ass to know a vigorous fucking like we had just done would inevitably push air inside. But, Linh was obviously not comfortable letting that come out in front of me. Instead, she decided to have as much background noise as possible to cover the sounds of air escaping her freshly fucked ass. I had also pumped a lot of cum up there. That too would come out.\n\nAfter several minutes, I heard the toilet flush. A little later, the water was shut off and she opened the door, turning off the exhaust fan on her way out. She came back into the room with a deep blush on her chest and face. She was avoiding looking at me. Sheepishly, she climbed back into bed next to me, burying her face in my shoulder. Her right hand resting on my chest, she gave my shoulder and chest some soft kisses. \"I am sorry about that, Jim,\" she said softly, returning her head to lay on my chest.",
        "I chuckled. \"No apology needed, little one. I pushed a lot of air inside you. I should have warned you what was going to happen, especially since I also came inside your gorgeous butt.\" I kissed the top of her head, causing her to giggle a little and snuggle in tighter. \"It's OK to do that in front of me. It's very natural.\"\n\nShe turned her head and raised it a little to regard me, her brows knitted together in thought. After a few seconds, she shook her head. \"Hmmm. No. It is very unladylike. I do not want to do that in front of you.\"\n\nI laughed out loud at that, causing her to furrow her brows again. After controlling my laughter, I looked down at her with a lopsided smile. \"Oh, little one. You are so cute.\" She gave me a questioning look. \"You just spent the last hour or so begging me to do all kinds of dirty things to you; that isn't exactly ladylike.\" I quickly added, \"Not that I'm complaining at all. You are the sexiest woman I have ever known.\" I lifted my head up to kiss her nose again.\n\nShe wrinkled her nose at my words and the kiss. \"That is not the same thing, and you know it.\" She tried to look a bit stern, but the smile pulling at the corners of her lips negated it. \"That is sexy pillow talk. Well...\" she began, giving me a little smirk. \"It is also so you know exactly what I want and when I want it.\" She once again placed her hands on my chest, her chin rested on them. \"I have never spoken like that before. Never have I used those...words. Not in the bedroom or outside of it.\" She blushed a little and smiled at me. \"I like it, though. It makes me feel very naughty.\" Her eyes then got a little wider and she raised up just a bit. \"You are OK with my talk, correct?\"\n\nI gave her another chuckle. \"No, I wouldn't say I'm OK with it. I absolutely love it!\" She relaxed and put her chin back on her hands. \"Seriously, Linh,\" I continued, \"you have no idea how sexy it is to see you transform from such a...delicate flower? Hmmm. No, that's not right.\" I thought it over. \"I never thought of you as delicate. You are an extremely strong woman, which I have always found very sexy, by the way.\" She blushed at that and gave me a warm smile.\n\nI struggled to find the words. \"Maybe pure? Innocent? Anyway, to see the transformation from the only side of you I knew before yesterday to...\" I shook my head and blew out a breathy growl. \"Jesus, Linh. You are beautiful, sexy, and the most amazing lover I have ever had.\"\n\nShe was still smiling at me and her eyes expressed a very strong emotion. She then smirked. \"I can not believe how strong I orgasm from you being in my bum.\" She closed her eyes and shook her head a little. Looking at me again, she said, \"The strongest orgasm I have ever had was when you gave me oral pleasure at lunch. But the bum sex...that is a close second.\"\n\nI grinned before turning a bit more serious. \"It really hurt when I first put it in tonight, didn't it?\"\n\nShe rolled her eyes and chuckled softly. \"Yes. Yes it did. Very much.\" Seeing the expression on my face, she quickly continued on, \"That was my fault. I was not thinking clearly, because I was so horny and I was trying to get prepared for when you came back up from the restaurant. I remember you using three fingers on me last night before you took my bum. I was not thinking straight when I assumed I could use three fingers as well. It was lost on my brain that your fingers are twice as big as mine.\"\n\nAlthough I hated that I had hurt her, I gamely grinned at her. \"Well, lesson learned, little one. I'm just glad you're OK.\" I reached out and again cupped her cheek and stroked it with my thumb. \"You do seem to like a little pain, though.\"\n\nShe laughed again. \"Not that much, though. Yes, it is true I like some pain, but that was a lot of pain. Maybe someday, I will like you to hurt me more. We will see.\"\n\n\"It's up to you, little one. I'll go as slow or fast as you want.\" I continued stroking her cheek with my thumb, my eyes lost in hers. Her eyes watered a little before she blinked it away.\n\n\"Well, in that case...\" she started as she adjusted herself a little and started running her right hand down my chest and stomach toward my cock. I quickly removed my hand from her cheek and gently grabbed her wrist. She shot me a slightly surprised questioning look.\n\nI grinned at her. \"I need to go wash off before we do anything else.\"\n\nShe blushed deeply as soon as she understood why. She gave me a shy grin. \"OK. Would you care to join me for a shower, then?\"\n\nNot even bothering to wait for a reply, she sat up and grabbed my hand, pulling me out of the bed. Soon enough, we were stepping into the warm spray. She had wrapped her hair into a loose bun to avoid getting it wet. It was the first time I'd ever seen her hair like that; if possible, she looked even sexier, with her graceful neck exposed. I reached for my soap, but she stopped me.\n\n\"No, Jim. I will wash you.\" She grabbed the bar of soap and brought it to my chest. She gently washed me, starting at my chest and stomach. \"You have a very nice body, Jim. A muscular chest and flat tummy.\" She moved the soap up to my right shoulder, washing that one before moving to my left. \"Very broad shoulders,\" she began as she worked the soap down my arm. \"And large muscles.\" She looked up at me. \"Do you exercise?\"\n\nI blushed and gave her a grin. \"A little. I have a couple of machines at home. Nothing fancy. Just a bike, a treadmill, and a Bowflex machine.\" My grin got bigger. \"Usually, I work out in the gym downstairs before going to work. But someone's been working me out pretty hard the past couple of days.\"\n\nShe chuckled at that before growling sexily. \"Oh, Jim. You have no idea how hard I plan to work you out.\" Her hand, still holding the soap, then slowly made its way down my abdomen to my cock, which was starting to harden. After washing all around my cock and balls, she wrapped a soapy hand around my now-stiff dick and started stroking me. Her eyes never left mine while she did this. I leaned down to kiss her, bringing my right hand up to cup her cheek. We kissed passionately while she continued stroking me.\n\nAfter a few minutes, I reached down and removed her hand from my straining cock and took the soap from her. Grabbing her in a hug, I ran the soap down her back to her ass. I lovingly washed her backside, running the soap all over her ass and in between her cheeks, causing her to giggle in my mouth as we continued kissing.\n\nShe leaned back and smiled at me. \"That tickles,\" she giggled again.\n\nI grinned. \"Sorry, little one. I want to make sure I get all that lube washed off.\"\n\nShe gave me a sexy grin. \"Hmmm. No, I think that is just an excuse. You just want to touch my bum, you naughty boy.\" She yelped in surprise and laughed out loud as I smacked her on the ass.\n\n\"OK, you caught me.\" I dropped the soap and squeezed both cheeks in my hands. \"I love this perfect butt.\" Her shrieks of laughter continued, her head thrown back, as I started lightly smacking her ass with both hands. After a few minutes of this, I moved my hands to her lower back and pulled her in for another kiss. Her laughter died to a small chuckle as she returned my kiss. We stayed like this for several moments, gently kissing each other.\n\nShe finally pulled back with a smile on her face. I gave her a lopsided grin and raised an eyebrow at her. \"Oops,\" I said. \"Looks like I dropped the soap. I wonder who should get it?\"\n\nGiggling, she dropped to her knees. She reached between my legs and grabbed the soap, placing it in the built in crevice on the wall of the shower. \"Hmmm,\" she began, placing a finger on her chin. \"As long as I am already down here, I wonder if there is anything else I can do?\" Tilting her head up slightly, she looked me right in the eyes as she leaned in. Her tongue came out a little and she licked the tip of my cock, causing it to lurch. She giggled at that but then dove on my dick and sucked hard on the head a few times. She then dipped her head down and lapped at my balls before taking each into her mouth to suck on for a few seconds.\n\nShe leaned back and reached up to slowly stroke my cock. She blew out a sigh. \"I want you in my bum again,\" she began. I started to object, but she beat me to it. \"But, I am far too sore.\" Looking up at me again, she licked the tip a few more times. \"I do not suppose you would be willing to take this,\" she said as she gave my cock a light squeeze, \"and make love to me all night?\"\n\nI reached down and pulled her up, once again bringing her in to my body. I kissed her lightly on the lips and then whispered. \"Exactly what I was thinking, little one.\"\n\nI turned the two of us around to let the spray wash away the soap from her ass, careful to keep her hair out of the water. I held her close, and she snuggled into me, making soft cooing sounds as I rubbed my hands all around her ass to get the soap off. Once done, I shut the water off and we were soon out of the tub, toweling dry.\n\nShe turned the sink on and started brushing her teeth, her firm breasts jiggling enticingly while she did so. I leaned against the shut door, crossing my arms casually while I watched her doing such a mundane task. In addition to her perfect tits, her bubble butt also shook a little as she vigorously brushed her teeth. She caught my eye in the mirror and smiled around the toothbrush.\n\nShe removed the toothbrush and spit in the sink. Cupping one hand under the water, she brought it to her mouth and rinsed before spitting again. One more rinse satisfied her, and she then rinsed off her toothbrush and turned the water off. Shaking her wet hands in the sink before reaching for the hand towel, she gave me a slight grin in the mirror. \"I hate spitting. It is so much better to swallow.\"\n\nI couldn't stop the laugh from coming out, earning me a smile. \"Yes, little one. I'm figuring that out,\" I got out after my laughter stopped. She grinned at me again, and then I was treated to the sight of watching her lotion her entire body, working it everywhere. I briefly considered offering to do it for her, but frankly, watching her do it was way sexier. And, I had the impression that bending over at the waist to lotion her calves and feet wasn't even done for my benefit...but I certainly appreciated it, anyway.\n\nAfter she was done, she walked up to me and placed a hand on my chest, reaching up on tiptoes to give me a soft kiss. Dropping back down, she asked, \"Are you ready for bed?\"\n\n\"In a second, little one. I need to brush my teeth.\" She smiled at me and left the bathroom, shutting the door behind her. I went to the sink and brushed my teeth. After that, I ran my fingers through my hair to straighten it a bit.\n\nI went into the room, leaving the bathroom light on and the door cracked open just a bit. As I stepped out of the bathroom, which was warm from the hot shower we had just taken, I was reminded of how cold I kept it in the room. Turning the corner, I saw Linh sitting up in bed, reading a book she had brought. Noticing me, she set the book down and smiled. She was so sexy, sitting in bed, her bottom half under the covers while her upper body was completely exposed. Her hair was out of the bun and tousled. \"It is about time,\" she said as she reached out to me.\n\nI grinned, grabbing her outstretched hand. I brought it up for a kiss, eliciting a giggle, and said, \"I'm sorry for how cold I keep it. I'll turn it up a little.\" I started for the wall-mounted thermostat but she stopped me.\n\n\"No, Jim. I like it cold.\" I turned back to regard her. She smiled, \"It gives me an excuse to snuggle up to you.\" She reached out to me again. \"Come along, Jim. It is time to get to work.\" Her smile turned into a sexy grin.\n\nChuckling, I got into bed with her. \"Well, I guess a guy's work is never done.\" I started to lean over and kiss her when my eye caught the cover of the book she was reading. Looking at her with a lopsided grin, I grabbed the book. Holding it up, I arched one eyebrow and said, \"Really, Linh? This is what you're reading?\"\n\nShe blushed deeply and tried to grab the book from me. She laughed as I kept it out of reach. \"Jim, you were not supposed to see that! That is my dirty little secret.\"\n\nLaughing, I got out, \"I'm just a little surprised. Romance novels? Really?\" I had the book in my hand way above my head and out of her reach. Using one hand to bat her away gently, I was reading from the back cover. \"'His ripped muscles made him strong. Their love made him even even stronger'. This is awesome!\" I looked down at her as she struggled to grab the book from me. \"Is this what you want? A muscular guy with long blond hair that walks around without a shirt all the time?\"\n\nHer laughter was joining mine, and she finally gave up trying to grab the book. \"Oh, Jim. I know these books and the dialog are--what is word--for making your eyes roll?\"\n\nI grinned. \"Cheesy?\"\n\nShe returned the grin, her blush still present. \"Yes. Cheesy. I know these books are cheesy.\" She regarded me with a raised eyebrow. \"But that is where I get my pillow talk. And you enjoy that, yes?\"\n\nI looked at her with a surprised expression. \"Really? This is where you get all that dirty talk?\"\n\nShe tried to maintain a serious expression, nodding in response. Then, she laughed again. \"No. I do not use the same language they use. I have never--and will never--refer to your penis as a 'love muscle'. My sexy talk is...\" she trailed off, lost a bit in thought. Finally, she just shook her head. \"I do not know where that talk comes from. It just...comes out of me when we are doing those things.\" She cocked her head a little and gave me a lopsided grin. \"I guess you bring out the best in me.\"\n\nI laughed. \"Well, I don't know about 'the best', but I certainly enjoy that side of you, little one.\" My face turned serious, as I gave her back her book. \"You keep asking me if I'm OK with your talk. And I am. But what about you?\" I took her hand in mine. \"You know I don't think you're a slut or anything, right? And the rough sex and stuff? That isn't like me.\" I smiled at her. \"I'm doing that for you.\"\n\nShe arched an eyebrow, a look of slight concern crossing her features. \"Do you not want to do that stuff?\"\n\nI shook my head. \"That's not what I'm saying.\" I blew out a breath. \"And I'm not saying I don't enjoy it, either. But...well, I enjoy it more because you enjoy it. I love pleasing you. I love doing the things you fantasize about.\" I grinned at her again. \"And, it was me who started the whole role-playing thing as soon as we got out of work, with the ice and me going down on you.\"\n\nHer pupils dilated and she gave a low growl. \"Yes, that is true. I can not believe how much that excited me. To have you do that--take charge--without me asking...\" She shook her head a bit. \"That was amazing, Jim. And, although I had no idea what you planned doing to me, I knew I could trust you. That allowed me to just enjoy everything without being scared.\" She gave me a sexy grin. \"Well, maybe I was a little scared. But it was a 'good scared'.\"\n\nI returned the grin. \"Well, I really enjoyed it, too. And, I wanted to tease you a lot longer than I did, but I was getting really hungry.\"\n\nShe laughed. \"Yes, your tummy was very loud before we decided to go downstairs. Missing lunch did not help.\"\n\nI took her hand and gave it a little kiss. \"Oh, little one.\" Another kiss. \"You misunderstood.\" A third kiss. \"It wasn't food I was hungry for.\" A final kiss. \"Your pussy is delicious and I really needed a taste.\" I laughed at her wide-eyed reaction. \"Seriously, Linh,\" I began, giving her a warm smile and reaching down to cup her cheek. \"I just want to make sure you know how I feel about you...that I don't in any way think of you as a slut or something. You are...special.\"\n\nShe leaned into my palm, returning my smile. Her eyes watered a bit and she straightened up. She looked at me for a long moment, her eyes dancing in thought. \"Jim, I...\" Her voice trembled and she cleared her throat. \"I...\" She trailed off again and blinked a couple of times, bringing her hand up to wipe away a tear that had fallen. She looked at me again. \"Please make love to me,\" she said softly.\n\nSo I did. Climbing under the covers beside her, I pulled her to me for a passionate kiss. She cooed into my mouth as we kissed, her hand on my chest. Slowly, that hand made its way to my back, and she gently pulled me into her body, rolling on to her back. Taking the hint, I climbed on top of her, our mouths never separating from that kiss. As soon as I was on top, her hands went to my back and her legs wrapped around my butt. She broke from the kiss to give me a sultry smile. Removing her right hand from my back, she reached down between us and grabbed my hard cock, guiding it to her soaking wet pussy.\n\nShe closed her eyes and moaned, throwing her head back as I entered her tight sheath. I leaned down to kiss her exposed throat and worked my way down to her tits, lightly biting and sucking on them before capturing her distended right nipple in my teeth and sucking on it.\n\nShe was moaning, running her hands through my hair and breathing heavy. \"Oh, Jim. Yes. Please kiss my breasts. Mmmm...bite them gently. Ohhhh...\" She squeezed her legs a little tighter, urging me to start fucking her. I slowly did so, withdrawing and driving back in at a slow pace. I continued my ministrations on her tits and nipples, alternately kissing and sucking her right and left breasts. She began murmuring softly, encouraging my movements.\n\nI moved up to start kissing her again. Her hands went from my head to my back, lightly rubbing my shoulders and upper back. I moved to kissing her neck again, and she was soon moaning in my ear. I was gradually increasing my thrusts, but still maintained a gentle rhythm. This wasn't an urgent fuck; we were both satiated from our earlier orgasms. No, this was sweet and slow. Passionate. This was making love. And it was amazing.\n\nI had been with a lot of women. And I'd fucked a lot in my lifetime. One night stands, 'oops; we shouldn't have done that' with friends after drinking too much, long-term relationships...well, relatively long-term; I had never dated a woman longer than about a year (I just wasn't the settling down type of guy, I guess). Hell, I even had a couple of 'fuck buddies' back home. And the sex was always great. Sometimes it was a furious fuck, sometimes more passionate...but it was never like it was with Linh. It was hard to pin down, but it was like before, with the other women, I was fucking them with my dick. With Linh, it was like I was fucking her with all of me.\n\nWe were like this for about 20 minutes. I was gently fucking her while I alternated between kissing her mouth, neck, shoulders and breasts. She was running her hands all along my back and through my hair, her legs wrapped around me the entire time. She was moaning and whispering to me, sometimes in English and sometimes in Vietnamese, urging me along. She shuddered through small orgasms twice, her pussy gripping me tightly each time.\n\nSurprisingly, I felt an orgasm approaching. I had thought we would just have sex until she was satisfied; I didn't think I'd be able to come again. But, I felt that familiar feeling in my balls. So I let her know.\n\n\"Oh, Linh. Sweetie,\" I started as I continued gently fucking her. I had lifted up so I could look into her eyes. \"I'm going to come. Do you want me to try and hold off for a while?\"\n\nShe removed her hands from my back to hold my face. \"No, Jim. Do not hold back,\" she whispered to me. \"I want to feel you finish inside of me. Pleeeease...\" she trailed off as she brought her hands back to my neck. Squeezing me a little harder, she ran her nails from the back of my neck down to my ass.\n\nMy thrusts increased a little in intensity as I felt my balls start to throb with my impending orgasm. Linh's moans rose in volume and she really started squeezing me with her thighs and her hands, pulling me in as deep as possible. After only another couple of minutes, I buried my face in her throat and cried out her name as I started coming in her hot pussy. She gave out a squeal as her sheath clamped down on my cock and she shook through another orgasm. This one was much bigger than the previous two, and I could feel my cock and stomach getting bathed in her spray.",
        "I stayed on top of her, panting into her neck. She was also breathing hard as she relaxed her legs and brought her hands back up to my head. She ran her fingers through my hair as she softly whispered to me in her native tongue. I gave her neck gentle kisses, my breathing calming. Hers started to return to normal, as well, and I felt her body start to shake a little while she continued whispering in my ear. She then gave a sniffle.\n\nI brought my face up to look at her, surprised to see her crying softly.\n\n\"Are you OK, little one?\"\n\nShe moved one hand from the back of my head to hold my cheek, stroking it lightly with her thumb. \"Oh, yes, Jim. I am more than OK.\" She gave me a loving smile. \"These are tears of happiness.\"\n\nI returned the warm smile and leaned down to give her a gentle kiss on the lips. Raising back up, I shifted so I could bring my right hand up to wipe away her tears on one side. \"What is it that you were whispering to me?\"\n\nShe blushed at that. She bit her lower lip for a few seconds before finally saying, \"Oh. Just that I am so happy. And that I enjoyed that very much.\"\n\nI knew she wasn't being totally honest with me, but I didn't say anything. She pulled me in for a small, but passionate, kiss. After that, I rolled off of her, my softened cock leaving her pussy with a wet sound. That made her giggle. She got out of bed and quickly made her way to the restroom to clean up. She soon returned to the room and sat on the edge of the bed next to me.\n\nShe smiled at me, but the look soon turned to a naughty gleam. \"You know, I promised to massage you every night after work. If you would be so kind as to turn over, I can massage your shoulders.\"\n\nInstead, I pulled her down to me for a kiss. Leaning back, I gave her a very sincere look. \"I don't know what you're talking about, Linh. You already gave me a massage.\" Her face took on a look of confusion. My mock sincere expression then turned into a grin. \"You have massaged my love muscle several times today.\"\n\nThe transformation from confused to 'eye-rolling at the terrible joke' look on her face was worth the smack on my shoulder. I was laughing pretty hard as she narrowed her eyes at me. \"Ugh,\" she said. \"Do not use that term.\" But, I knew she wasn't upset; the smile pulling at the corners of her mouth told me that. Soon, she broke and joined in my laughter.\n\n\"Seriously,\" I said, once my laughter was slowing. \"No need for a massage. But, I will definitely take you up on that offer on the days I travel. I'm not the biggest guy in the world, but those airline seats are not made for anyone bigger than you.\" She shrieked with giggles as I picked her up and brought her up and over me, setting her down on her side of the bed.\n\nShe was soon under the covers, snuggled up against me with her head on my chest. \"Good night, Jim,\" she said softly.\n\n\"Good night, little one,\" I said as I kissed the top of her head. \"See you in the morning.\" I didn't realize how exhausted I was, and my eyelids started drooping and sleep was soon washing over me. I fell asleep with my arm around her, breathing in her wonderful smelling shampoo, as she softly murmured in Vietnamese."
    ],
    "authorname": "assman37",
    "tags": [
        "anal interracial",
        "asian",
        "interracial",
        "submissive",
        "asian female",
        "asian anal",
        "aw/wm",
        "asian woman white man"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/linh-ch-02"
}