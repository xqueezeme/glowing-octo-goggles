{
    "title": "Tumbleweed Ch. 02",
    "pages": [
        "The story of Jacob Hightower continues. Please read chapter 1 to follow the flow and story line. \n\nConstructive comments, critiques, and emails are appreciated. \n\n******************** \n\nChapter Two \n\nJake was at the stable at 6 AM. He saddled his horse and going to the locked tack room got two additional pistols and a three of boxes of 45 caliber shells to take with him. Two of the weapons had the 7 \u00bd barrel and one was in the five inch style. The shorter pistol and one of the longer ones were blued and the other 7 \u00bd was nickel. \n\nHe packed the extra pistols in his saddlebags. Gonna need the extras cause De La Vega and maybe some of his men will want to shoot the Colts, he thought. And no one but me shoots my gun. Shortly Senor De La Vega joined Jake and they rode out of El Paso by 6:30 on a sunny morning. \n\n\"We will take the road along the Rio Grande and stay on the American side,\" De La Vega told Jake as they rode. \"The river makes a bend and it would be a shorter trip if we cut across through Mexico, but we will take the river road on the American side.\" \n\n\"Why ride the long way around Senor?\" \n\n\"There are banditos all along northern Mexico near the borders. There is no need to face them to save a few miles.\" \n\n\"I understand,\" Jake replied. \"I ran into a few on my way to El Paso.\" \n\nThe land they rode through was mostly level but with a slope up from the Rio Grande. Close to the river it was lush with tall reeds at the water's edge and cottonwood trees lining the bank, but higher up the grade it was desert like with mesquite, palo verde, and several types of cactus. The areas between the cottonwoods were covered in a coarse grass which made it good land for grazing stock. \n\nIt was early summer and the west Texas heat was still a month or so away. It was pleasant riding near the Rio Grande but later in the year the sun would begin to bake the desert like areas on each side of the river. They crossed the river and as they rode away from the life giving water, the trail began to wind through some small rises and hills. The vegetation had abruptly changed to the desert plants. \n\nAt the two hour mark Jake asked, \"When will we get to your estancia?\" \n\n\"We have been on my land for the last 20 minutes,\" De La Vega answered. \"You can see my hacienda from that rise,\" he added and turned his horse off the trail and toward the small hill. Stopping at the crest of the rise he pointed. \"There is the hacienda. We'll be there in within an hour Senor Hightower.\" \n\nOn the horizon Jake could barely see a bump that must be the ranch house. \"That's got to be another 10 miles or so,\" he said. \"How big is your estancia?\" \n\n\"It runs along the Rio Grande and eastward for many miles,\" De La Vega replied. \"I have title to 4100 hectares; that's about ten thousand of your acres.\" Pointing to a large green lush area surrounding the house, De La Vega explained, \"The hacienda was built over a deep water spring called Aqua de Dios. That means...\" \n\n\"Water from God,\" Jake translated. \n\nPointing to the abundant green areas, De La Vega explained, \"We enclosed the spring with a wall and use a bucket to get water for the hacienda, much like a well. The runoff from the spring is diverted into underground channels that are used to irrigate the gardens. We grow many things and only buy supplies such as flour, grain, and other staples from the mercantile.\" \n\nThe men sat and looked over the land for a few minutes, giving their horses a breather. De La Vega led the way down the far side of the hill back to the trail. Three men rode from behind another hill and blocked the trail so De La Vega and Jake had to pull up. \n\nJake had a habit of riding with his right hand close to his pistol. Before stopping his horse, he slipped the safety strap loose to free his weapon. Then he sat with his right hand on his thigh, just in front of his holstered Colt. \n\n\"We want our money De La Vega,\" one of the men yelled across the 30 feet that separated the two groups. He was speaking Spanish but Jake understood him. Jake had learned \"Mex\", as they called it in Texas, over the three years he'd done business in east Texas. \n\n\"I owe you nothing Juan,\" De La Vega replied. \"Nor you Neto and Carlos.\" \n\n\"We're due our wages for last month.\" \n\n\"The money you got from the cattle you stole was more than your wages. Ten head wasn't it? Consider yourselves fortunate that I did not have you jailed.\" De La Vega slowly moved his hand toward his pistol. \n\n\"They hang rustlers in East Texas,\" Jake offered. \"Don't reckon it's much different around here.\" \n\n\"This is none of you business Senor,\" Juan said. \"It would be best if you stayed out of it.\" \n\n\"You made it my business when you blocked my trail,\" Jake replied. \n\n\"They also hang rustlers in this country Senor Hightower,\" De La Vega said. He spit toward the three men. \"But you three weren't worth the trouble at the time. Perhaps I should reconsider.\" \n\nJuan screamed his anger and pulled a pistol. Before he got the weapon clear of the holster, Jake's Colt barked and the man fell from his horse holding his shoulder. Neto wasn't as lucky; he went down as Jake stopped him as he tried to bring his rifle to bear. The man was dead before he hit the ground. Carlos raised his hands into the air. \n\n\"Madre Dios,\" he yelled as De La Vega pointed his pistol at Carlos. \"Don't kill me.\" \n\n\"Get your friends and get off my land,\" De La Vega ordered. \n\nCarlos dismounted, helped Juan back onto his horse and draped Neto across his saddle. He rode away leading the other two horses and glancing over his shoulder to make sure De La Vega and the gringo didn't shoot him in the back. \n\nJake waited until Carlos was over a hundred yards away before reloading his Colt. \"Reckon we can go see your horses now Senor De La Vega and I'll give you a demonstration of the Colt.\" \n\n\"I believe you should call me Enrique after our little adventure together and I shall call you Jake.\" De La Vega smiled and added, \"And I've already seen what your fine pistol can do. You are very fast.\" \n\n\"Hit that fellar Juan just where I wanted to,\" Jake said. \"But I've got to admit the second man hurried me a mite; didn't have time to place my shot.\" \n\n\"That speed must have come in handy in face offs while you were Deputy Sheriff,\" Enrique remarked. \n\nJake shook his head. \"Truth is most times men shoot from behind cover or try to get around behind you. That stuff about showdowns at high noon is hogwash. The dime novels make up those stories to sell magazines. Don't usually happen that way.\" \n\n\"Never the less, you are very skilled Jake,\" Enrique replied. \n\nIt was just over an hour later that the two men pulled their horses to a stop in front of the hacienda. Before either man could dismount a groom came to take the mounts. Enrique motioned Jake through the gate leading into the house. \n\n\"Come, we will have something to eat and then I will show you the horses I have for sale. Take care of the horses please Juanito,\" Enrique asked. \n\nJake followed his host through a court yard with a garden of flowers to the rear section of the house. The hacienda surrounded the court yard on three sides. The thick adobe walls of the building gave the interior court yard cool relief from the very warm spring weather. In the corner, next to the rear wall, there was a well with built up rock sides and a bucket hanging over the opening. \n\nAs Enrique and Jake entered the house, a young man brought a wash bowl, a pitcher of water, and two towels so that Jake and Enrique could clean the trail dust off their face and hands. Washed and refreshed the men entered a large dining room. The same young man and a young woman served the food when the men sat at the huge dining room table. After the meal, Jake showed Enrique the three pistols he'd brought with him. \n\n\"I think I would like the long barrel one with the nickel finish,\" Enrique said. \n\n\"That pistol is $50,\" Jake said. \"I will telegraph your order as soon as I get back to El Paso.\" \n\n\"Perhaps the type of mount you're looking for will be here Jake.\" Enrique asked as they walked to the corrals that joined the stables. There were ten horses in the fenced area. \n\nJake perched on the top rail of one of the corrals and looked over the horses for sale. He listened as Enrique talked about each of the animals; praising their strengths and being honest about any short comings. After several minutes, Jake had sort of decided to look closer at two of the horses. He was sure they were good animals but they really didn't reach out and grab him. Hell, I'm looking for a good saddle horse not a thoroughbred, he thought. \n\nA big horse charged out of the stable door with a groom following him and losing ground. \"Stop him,\" the stable hand yelled as he tried to grab a rope trailing from the horse's halter. Jake jumped off the rail and stepped in front of the charging horse, catching the lead rope. The stallion reared up on his hind legs and got ready to attack this latest obstacle to his running. \n\n\"Easy, easy,\" Jake said in a low soothing voice. Talking softly, he was able to walk a step at a time up to the horse's head. He slowly held out his hand so the animal could get his scent. The animal tossed its head a couple of times and then extended his nose to smell the human that had stopped his getaway. Jake continued to talk and was able to stroke the horse's nose, forehead and scratch its ears. As he calmed the animal he took a closer look at this whirling dervish. \n\nThe horse's coat was a deep black, gleaming in the sun. Its mane and tail were thick and full; flowing and longer than the average horse. The animal was about 16 hands at the shoulder and was strongly built and compact. Its neck was long and broad, the chest was massive and the hindquarters were strong. The big black had an air of elegance as if the hoopla surrounding him were nothing. \n\n\"Bet you could run all day and most of the night,\" Jake said in admiration as he stroked the horse's neck. \n\nThe stable hand finally struggled up to Jake and the horse. \"Diablo negro,\" the man said in anger and reached for the lead rope. \"Wait until I get you back in the stall.\" \n\nJake pushed the hand away and glared at the groom. \"You're not a black devil are you fellar,\" he said to the horse and led him to the corral. \n\n\"Enrique, pardon me for intruding but I don't believe this horse should be punished for just being a horse,\" Jake said. Pointing to some marks across the animal's rump he continued, \"Those are whip marks; the horse was just trying to get away from a bad situation.\" \n\n\"Diego, have you been whipping this horse?\" Enrique asked the groom in an angry tone. \n\n\"Patron, it was necessary. The animal is very head strong and must be made to do as he is ordered.\" There was no apology in the man's voice. \n\n\"I've warned you before Diego; I do not want my horses to be beaten while you are training them.\" \n\n\"I have broken many horses Senor. I know my job and will do it as I see fit.\" \n\n\"Then do your job on another estancia Diego. You are dismissed,\" Enrique said with a grim smile. \"I will be back at the hacienda shortly to pay what you are owed. You can pack your things while you wait for me.\" \n\nDiego had a look disbelief on his face that plainly asked how dare anyone tell him how to do his work? He stomped off toward the bunk house; muttering what Jake was sure wasn't kind things about the Patron. \n\n\"I'm sorry Enrique,\" Jake offered. \"Didn't mean to cause a problem.\" \n\n\"No, no Jake. This has been coming for a while. Diego and I disagree about horses. He believes you must break an animal but I think you must train them; almost like children.\" Enrique smiled. \"And since I am El Jefe, my way is the way it will be done.\" \n\n\"This is a beautiful animal,\" Jake said as he tied the lead rope to the top rail of the corral. \n\n\"Yes he is. He is an Andalusian pure bred. His sire and dame were brought to this country from Spain. I bought him in California last year.\" Shaking his head Enrique continued, \"I may have wasted my money though. He is very high spirited and hard to train.\" \n\nJake was still stroking the big black horse. He carefully ran his hand over the horse's chest, withers, and over the rump. Jake also looked at the legs and hoofs. This is a strong animal, he thought. \n\n\"Come Jake, I will show you some other horses I have for sale,\" Enrique said and started to walk away from the corral. \n\n\"I've found the animal I want Senor,\" Jake replied. He placed his hand on the Andalusia's neck and leaned against its shoulder. The horse nickered and lean back into Jake. \"That is if I can afford him,\" Jake added. \n\n\"You are a good judge of horse flesh Jake. If you can train him he will be an excellent mount.\" Enrique looked thoughtful for a minute. \"I am in your debt so I will make you a present of the Andalusia.\" \n\n\"Thank you but no Enrique. I could not accept. This horse has to be worth $600 or more.\" \n\nThinking for several seconds, Enrique smiled. \"As your country men would say, I'll tell you what I'm going to do.\" Jake smiled at the salesman's comment. \"I will take your horse in trade for the Black. In addition, I will take one of those fine pistols of yours and $200. You may pay the $200 at your connivance.\" \n\nJake started to object but just then the horse pushed its head into Jake's hands, wanting him to continue scratching its forehead. Whispering into the big black's ears, Jake asked, \"You going to let me train you big fella?\" \n\n\"I'll take your generous offer Enrique,\" Jake said and extended his hand to shake on the deal. \"And gracias.\" \n\n\"Perhaps you should stay here at the estancia for a few days so that you two can get to know each other,\" Enrique suggested pointing at the horse and Jake. \n\nJake thought for a minute as he stroked the horse's neck. \"I think that is a good idea. Thank you for your hospitality.\" \n\n******************** \n\n\"So you are leaving us this morning,\" Enrique said as Jake saddle the Andalusia. \n\nThe afternoon that he arrived and for the next two days, Jake had been with his horse almost constantly. He used the gentling tactics he'd learned as a boy to gain the trust of the big black. Jake slowly introduced his horse to a saddle and a bit and got the animal used to the weight and feel of the saddle on his back. He finally mounted and rode the horse on the third evening of training; first around the corral and then for a short distance from the hacienda. \n\n\"Yep, it's time for me and Viajero to head back to El Paso,\" Jack answered. \n\n\"You told me you had named your horse. But why El Viajero?\" \n\n\"Viajero is Mexican for Traveler,\" Jake replied. \"And that's what we're gonna be doing; traveling from town to town.\" \n\n\"I understand,\" Enrique said. \"It's a meaningful name.\" After Jake mounted Enrique shook hands with him. \"You and Viajero are always welcome at the estancia. Vaya con Dios.\" \n\n******************** \n\nAlthough the trip back to El Paso normally would have taken only till midday, Jake and Viajero didn't stop in front of the stable until just before dusk. Jake had stopped several times along the trail to continue training his horse. He began to teach the horse to neck rein, react to knee pressure and the shifting of Jake's weight in the saddle and different gaits; especially the canter. \n\nFeeling the way Viajero moved, Jake knew the horse could go all day at a canter. All during the training he talked to the big horse. After moving at a canter for a couple of hours, Viajero fought Jake a little at the slow gait. Jake smiled and few miles from El Paso, he let the horse have his head. \n\nThe big black horse stretched his neck out and ran. Jake knew the horse was powerful but he was surprised at the speed of the gallop. As they came into the edge of town, Jake pulled Viajero down to a fast walk. He patted the horse's neck and calmed him down after the run across the desert. \n\n\"Take it easy Via,\" Jake said in a soothing voice. Although the weather was still less hot than it would be later in the summer, it was still very warm. Via's coat was covered with sweat and trail dust. \n\n\"Hi Jake,\" Jeremiah said as he ran out of the stable. Jeremiah's eyes opened wide and he stopped. \"You got a new horse,\" he exclaimed. \n\n\"Howdy Jeremiah. Yep, sure did. This is Viajero,\" Jake replied as he stroked the horse's neck. \"I call him Via for short.\" He followed the boy into the stable and put Viajero into a stall next to his pack horse and unsaddled his mount. Motioning to Jeremiah he said, \"Come say hello.\" \n\n\"Wait,\" Jeremiah said and went into the office. He returned with an apple. Jeremiah offered Via part of the apple. Sniffing at the offered treat, Via picked the apple from the boy's palm. Jake and Jeremiah brushed and cleaned the trail dust off the horse then left for Ma Stewart's boarding house. \n\n\"Ma, look who's back,\" Jeremiah said as he and Jake walked into the dining room. \n\nEmily was putting the serving dishes on the sideboard and turned as she heard Jake make his way into the dining room. \"Welcome back Mr. Hightower,\" she said with a smile and pointed to a place at the table. \"You're just in time for supper.\" \n\nMrs. Stewart came from the kitchen. \"I've held your room for you Mr. Hightower.\" \n\n\"Thank you ma'am. I'll pay for the days you held it.\" \n\n\"No need; Mr. Bishop is the only other guest.\" \n\n\"Howdy Mr. Bishop,\" Jake said to the salesmen. Bishop had a mouth full of food; he just waved and nodded. \n\nEmily quickly put two pork chops, a piece of corn on the cob, and a large serving of mashed potatoes and gravy on a plate and brought it to the table. \"You must be hungry after your long ride,\" she offered as she sat the plate in front of Jake. \n\nHe nodded and she sat down across the table from him and watched him eat. Mrs. Stewart watched Emily watching Jake and smiled. Young man has made an impression on the girl, Stewart thought. \n\n\"Hi Ma, hi Aunt Amanda. Would have been here sooner but Jake came in with his new horse.\" The boy had washed up outback and as with most boys, his hands were still wet and he dried them on his pants as he came into the dining room. The boy hurriedly filled a plate and sat down. \"You should see Jake's new horse Ma. He's really something.\" \n\n\"What are you gonna do now Jake?\" Jeremiah asked. \n\n\"Jeremiah!\" Emily protested. \"Mr. Hightower's business is his own.\" \n\n\"It's fine Mrs. Santee. Jeremiah and I are business partners in a way.\" Looking at the boy, who had a big smile on his face, he said, \"Reckon I'll set up a place here in town that I can use to get deliveries from the factory; probably the general mercantile. Then I'll start riding my new route, demonstrating and selling the Colts.\" \n\n\"Where will you go Mr. Hightower?\" Emily asked. She was impressed and interested in this well spoken man and didn't realize she was being nosey just like Jeremiah. \n\n\"I'll head over to Santa Theresa, then up to Canutillo, and on up to Las Cruces.\" He did some quick addition in his head. \"That's close to 60 miles one way. On later trips, I may head on over to Deming; it's a bigger town. Should get more customers there. Might head over to Fort Bliss,\" he added with a smile. \"This first trip should put me back in three weeks or so.\" \n\nJake looked at Mrs. Stewart. \"Like to stay here when I come back Mrs. Stewart. If that suits you ma'am.\" \n\n\"I think we can arrange that Mr. Hightower,\" she responded. Amanda Stewart liked the young man. He was soft spoken but not shy, he treated her and Emily with respect, and was polite and friendly. His parents raised him right, she thought. \n\nIn the days before Jake hit the trail, he sent telegrams to the towns he was going to visit. The messages told newspapers, in the towns that had them or the owners of general stores and a few saloons that he would put on a demonstration of the Colt Peacemaker and take orders for the pistol. ",
        "Three days later, Jake was up at first light. He put the sawbuck saddle on his pack horse and filled the panniers with his Colt samples, shells, and trail gear. The he saddled Via, which took a little more time. The spirited stallion had to be calmed before he would accept the saddle. Once saddled, he seemed anxious to hit the trail. \n\n******************** \n\nSanta Theresa, New Mexico looked like a sleepy little town as Jake rode into it. According to the sign at the outskirts of town, there were just under 200 people living there. He knew that although the town wasn't much there were several prosperous ranches in the area and cattlemen and cowboys were always good customers for firearms. Jake had made the nearly 13 mile ride from El Paso in time for a mid day meal. \n\nHe had lunch at a Mexican cantina and let the barkeep know about the demonstration he planned for the next day, which was Saturday. Saturday was come to town for supplies day for most of the ranchers and a shopping day for the town folk. \n\nJake found a few boys playing around the stables and paid them to hand out flyers he'd had printed in El Paso; it was a practice he would repeat in most of the towns he visited. The flyers told people where and when he would show what the Colt Peacemaker could do. \n\nSanta Theresa didn't have a hotel as such, just a boarding house, and Jake didn't like the looks of it. He was used to the clean well kept house that Amada Stewart ran and this place didn't stand up to the comparison so he slept in the stable with Via and his pack horse. \n\nAnother reason he slept with his horses was that he wasn't impressed with the security at the stable; he'd hate like hell to lose Via. Probably fewer bed bugs here than at the boarding house, he thought as he spread his bedroll in an empty stall.  \n\nThe next morning on the edge of the town, Jake set up a few targets and a table he'd gotten from the cantina. About 10 AM, people began to gather for the show he'd promised. He waited until the 50 or so people settled in and then began the demonstration. \n\n\"Gentlemen,\" he greeted and then noticed a few women in the crown. \"Excuse me, and ladies,\" he added. Picking up one of the Colts from the table he said, \"This is a Colt Single Action Army in .45 caliber; also called the Peacemaker.\" \n\nJake showed that the pistol used metal cartridges and how quickly and easily it could be loaded and reloaded. He explained the different barrel lengths and finishes. \n\n\"Now I'll show you what this weapon can do.\" As he finished speaking he turned, drew the pistol, and fired. Jake hit each of the six targets he fired at. Then he invited the watchers to examine the guns more closely and shoot them. After almost an hour the show was over. \n\n\"I'll be in town until mid day Monday to take your orders,\" he told them. Jake sold ten pistols that afternoon. Since the general store was small, and Jake didn't like the looks of the owner anyway, the pistols would be shipped to El Paso. Jake would deliver the weapons to their new owners on his next trip through Santa Theresa. \n\nCanutillo, Texas was another small town but almost twice the size of Santa Theresa. Jake had left Santa Theresa at mid day on Monday and rode into Canutillo in a little over two hours. He used the same tactics as he the first time; letting the saloon owner and the owner of the general mercantile know about his show and again hired some boys to hand out flyers. People, mostly men, gathered at Jake's location shortly before dusk on Tuesday evening. He sold twelve Colts before he left town on Wednesday morning. This time Jake was able to set up the delivery of the Colts with the owner of the general mercantile. The owner would be paid a commission for handling the deal. \n\nJake had close to thirty miles to Las Cruces and he pushed Via and his pack animal until mid day. The distance was a hard day's ride and he didn't want to spend the night on the trail. He found a shady spot by a water hole about half way and stopped to let the horses rest for almost two hours. Jake watered and fed his animals and rested himself. \n\nLas Cruces was larger than the other two towns combined; having over 2000 residents. He was able to find a nice hotel that had its own stable and got a room. Jake planned to stay a week in Las Cruces and do at least three demonstrations. He sold thirty guns on this trip to the bustling town with promises for more business. \n\nThe only problem in Las Cruces came when one of the ranchers decided he wanted to take one of Jake's guns instead of waiting for a delivery. \"Reckon I'll take this one,\" the ranch, one Japer Bowden by name, said as he hefted a nickel finished Colt with a 7 \u00bd inch barrel. They were standing in front of one of the numerous saloons in Las Cruces. \n\n\"Can't let you have one of my samples Mr. Bowden,\" Jake replied. \"Need them to show people and make sales. I'll have your weapon to you in about three weeks.\" \n\n\"You don't understand sonny. I said I'll take this one.\" Jake could tell by Bowden's look and attitude that he wasn't used to people saying no to him. \n\nBowden was larger than life. In earlier times he would have be a mountain man; he still had that same wild unkempt look about him. Jasper had a big bushy moustache and long hair, hanging down to his shoulders. The man was about 50 years old, although it was hard to tell his age because of his weathered face from years spent working on the range. Bowden was a man of means as seen by the way he dressed. And unusual for Texas this close to the Civil War, he was a Negro. \n\n\"I'm sorry Mr. Bowden, but you're the one who doesn't understand; you can't have that gun. You'll have to wait.\" \n\n\"Sonny, I'm not someone you can order around. I'm a free man and I usually get what I want.\" Bowden held the Colt in question in his left hand and his right slowly dipped toward his holstered gun. \n\n\"Well, Abe Lincoln may have freed all men Mr. Bowden, but Sam Colt made em equal,\" Jake replied. \"Do you really want to tangle with me?\" His own hand hovered over the butt of his own Colt. \"Don't do it; I'd hate to have to shoot you.\" \n\n\"Jasper, are you plum loco?\" The bartender from the saloon asked; he'd come to the door when he heard the big man's loud voice. \"You saw this boy shoot; Hell, he's faster than a thought. You'd be dead fore you more than touched your gun.\" \n\nBowden looked at the bartender, then back at Jake and lifted his right hand away from his pistol. Shaking his head, he said, \"Pardon me Mr. Hightower. Don't know what I was thinkin. Sometimes I get too cantankerous for my own good.\" Handing back the Colt he paused and added, \"I'll wait for your delivery.\" He then walked to his horse, mounted, and rode back toward his ranch. \n\nJake relaxed, nodded at the bartender and finished packing away his sample Colts. \n\n******************** \n\nAnother day and I'll be home, Jake thought. He laughed at himself. Who thought I'd find so much in El Paso? There's a good job, selling something I believe in, and then there's something more important. He was thinking of Emily and Jeremiah: even Miss Amanda crossed his mind. \n\nOver a four month time span, Jake had made several of his sales trips and not only over the same route each time. Several times he rode east and spent a few days at Fort Bliss demonstrating his Colt and selling to the soldiers and the townspeople. \n\nAfter each trip, no matter where he traveled, he couldn't wait to get back to El Paso. He now thought of Miss Amanda's boarding house as his home. Emily and Jake had started to spend time together after supper. First they would sit on the porch. On the Sundays he was in El Paso, they went to church together and sometimes on picnics afterwards. Emily and Jake grew closer with each of his trips 'home'. \n\nAmanda Stewart also thought of her place as Jake's home. She liked the young man's manners, his willingness to do man type work around the house; but most of all she liked the way Jake was with Emily and Jeremiah. That girl has had problems enough in her life, Amanda thought. And he and the boy get along real good. Hell, if I was 30 years younger I'd set my sites on Jake. \n\nJeremiah and Jake were getting closer too. Jeremiah had liked the new comer because from the first, Jake never treated him like a child. Jake was impressed with Jeremiah's adult type attention to business and yet the boy was still a boy. The boy shows a maturity that not many youngsters could, Jake thought. Then he chuckled, remembering boy's excitement and then dedication in taking care of Viajero. \n\nJake leaned forward and patted the big horse on the neck. \"I think you've made a friend Via,\" he said. \"You get brushed every day even when I don't ride you and he always brings you an apple or carrot.\" \n\nVia pulled on the reins. The slow lope they were traveling at didn't suit him; he wanted to run across the desert. \"Take it easy big guy, we got a ways to go yet,\" Jake soothed his horse. \"I'll let you run when we get closer to home.\" \n\nTo Be Continued."
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "drama",
        "action/adventure",
        "romance"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/tumbleweed-ch-02"
}