{
    "title": "Lady in Red Pt. 02 Ch. 11",
    "pages": [
        "\"Let's respond to your questions one at a time,\" suggested Gwen as she studied the photos. \"First of all, I'm not running for office, so I certainly won't be withdrawing. I never entered the race. These photos are real, and the quality is excellent. They were taken on our July 4th Ride for American Pride five years ago.\n\n\"Jared is a dear friend and yes, we were naked as we climbed into the hot tub with several others. No one had sex in the tub. I've never been intimate with any man other than Steve. I've never gone farther than kiss any man but Steve. In high school, Jared pulled me out of the line of fire of a crazed terrorist. Then he held me and turned his back on that horrible man. He took two bullets in the back and saved my life.\n\n\"I consider him a true friend and Steve thinks of him as a brother. Jared is a man of honor. He would sooner take another bullet than harm his friendship with Steve. So yes, we were naked in a hot tub and someone somehow managed to photograph or video us that evening.\n\n\"Obviously, Steve did have the very voluptuous Naomi on his lap, and he appeared to enjoy it a lot. However, I am the only woman he has ever made love to, and he has no intention of changing that. I've appeared nude in movies, so this shouldn't shock anyone that knows me. So has Steve. We aren't self conscious about our bodies. Steve just now asked me if he could get copies of these photos. They're quite remarkable.\n\n\"Jared and Naomi are extremely fit and attractive, but these pictures blow me away. What I see here is an incredible pair, and Jared doesn't look too bad either! If voters are upset that I would climb into a hot tub naked with some very close friends, they really need to vote for someone that wouldn't do that, if they can. They have choices, as do I. I choose to trust my friends and enjoy private moments with them. No election is more important to me than these people that went to Iraq with me to find and bring back Steve and Chip. I'm actually proud of these photos. The electorate has the final decision on how they feel about my conduct when they enter the voting booth.\n\n\"I do have a favor to ask of the public, regardless of their political preferences. For years, Naomi has claimed that my ass is bigger than hers. This is the perfect opportunity to correct that misconception. I'd like to ask everyone to study these pictures on the internet and then let me know which ass is bigger. I'm quite confident that public opinion will be heavily in favor of my little tush being much smaller. It's quite obvious to me in these photos. Are there any more questions?\"\n\n\"Are you really telling us that you're more concerned about who has the bigger butt than you are about what voters think of you being seen naked with a man other than Steve Hammer?\" asked a female reporter.\n\n\"That pretty well sums it up. This 'not running for office' is really quite liberating!\" laughed Gwen. \"I could arrange an interview with Steve, me, and some friends naked in a hot tub if you'd like to join us. You could report on how well behaved we are. You could even sit on Steve's lap while you asked him questions. It would have to be audio only since seeing naked people upsets some folks.\"\n\n\"You'd give me an exclusive?\" asked the reporter quickly. \"Could I wear a swim suit?\"\n\n\"You seem to have trouble with the term naked,\" chuckled Gwen. \"Too bad for you. Sitting between Steve and Jared naked is a treat few women get to experience. Any more questions?\"\n\n\"Aren't you treating this situation awfully lightly?\" asked a female reporter for a major network. \"This sort of thing can destroy a political career, yet you're asking people to compare derrieres and suggest that is more important to you than being photographed naked with a man not your boyfriend.\"\n\n\"Is it that obvious?\" countered Gwen. \"I really don't want people to vote for me if they're uncomfortable with me or my lifestyle. As I've stated numerous times, I've had one lover in my life. I have several very dear friends. You may think you have close friends, but mine take bullets for me, or at least risk it. Now that's a friend!\n\n\"These pictures are real. They were taken without permission, and posted without permission. Jared is really buff. Steve is, well... he's Steve Hammer. I have to admit that Naomi looks like a goddess. \n\n\"People need to decide what is important to them when they vote. I'm half way thought Stanford Medical School. I work very hard to help veterans and children. I'm successful in movies and music. My best friend and lover is a U.S. Navy SEAL and a graduate of the Naval Academy, and quite accomplished in international diplomacy. I'm totally transparent, maybe too much so for some people that see these photos. \n\n\"Everything I do and all that I am is out there. People can decide for themselves, but I'm not going to lie, and I'm not going to apologize. I love my friends, but this amazing guy standing behind me is my man, and the only man I want or need in my bed. I think most females can understand my feelings on that account. Any further questions?\"\n\n\"No one has told us how Steve escaped his captors and if the state department deliberately or accidently dropped the ball,\" pressed a male reporter from a major newspaper. \"The last we saw on the internet, you were in the hands of the terrorists and they were preparing to behead you. Then Gwen goes to Iraq and brings you home. There's a lot left unknown. Can you tell us anything more?\"\n\n\"I'm not going to say anything I do know not for a fact to be true,\" replied Steve carefully. \"I will say that my very good friend, and fellow SEAL, Chip Martin, saved my life. He was the difference. He was badly injured in the process, but he's recovering now. I will never be able to repay him for the tenacity, intelligence, and courage he displayed finding me and pulling me out of a very bad situation!\"\n\n\"Do you blame the state department, or the CIA, or both for your near death at the hands of terrorists?\" asked the reporter in a follow-up question.\n\n\"I haven't learned enough to blame anyone for anything,\" responded Steve. \"I willingly agreed to be exchanged for those students. There are a lot of questions about what led up to that exchange and what was done to remedy the problem afterward. \n\n\"What happened to the man that held the sword to your throat and promised to behead you on the internet? Is he still at large, or was he captured?\" asked another reporter.\n\n\"Neither,\" answered Steve with a straight face. \"We're done here, everyone. We have appointments to keep. Thank you.\"\n\nOnce Gwen and Steve were back at the Anderson's, Gwen asked Steve, \"Do you think I need to start taking these stupid accusations more seriously. First, it's you and Mom having an affair. Now it's me and Jared and you and Naomi doing the dirty. Should I protest more, or be more indignant?\"\n\n\"Not even a little bit,\" insisted Steve. \"You handled it perfectly again. It really ruins these attempts to discredit you when you laugh at them rather than become defensive. The headlines will be about how you don't really care about the pictures and you're not running for office. Your approach to this election thing is so foreign to voters and reporters, it has them totally confused. I wish everyone knew as much about all candidates as is known about you.\"\n\nBilly had been listening to Steve and Gwen discuss the situation while he perused the photos. \"These pictures are great! I was there and I still can't believe how great Gwen and Naomi look. Never mind who has the bigger ass, I'm wondering which girl has the bigger...\"\n\n\"Never mind!\" interjected Charlotte. \"If you recall, you awarded that title to Naomi that evening. Are you starting to waffle?\"\n\n\"Well, I'm looking at the pictures and Gwen sure doesn't have to be embarrassed or ashamed of her big ...\"\n\n\"Once again, I caution you!\" warned Charlotte as she pounded Billy's arm. \"We're all aware of your admiration for Naomi and Gwen's attributes. It's too bad that Lisa and Jordan didn't make any impression on you that night.\"\n\n\"Now that you mention it, there must be pictures of you and me naked, along with Jordan, Charlie, Lisa, and Jason. I wonder if we could find them someplace on the internet. Do you think we'll be blackmailed or something?\" wondered Billy.\n\n\"How can they blackmail us if we're proud of our bodies and the pictures, like Gwen was? Their attempt to bring Gwen down failed miserably. I do wonder who released those pictures. They aren't our friends. That's for sure,\" observed Charlotte.\n\n\"Look! I found a site where people can vote on Gwen and Naomi's relative ass size!\" exclaimed Billy as he waved his smart phone around. \"Go to www.gwenssweetass.com . There are six thousand votes in already. It seems to be pretty well divided. Thirty two per cent think Gwen's ass is smaller and twenty six percent believe that Naomi's ass is smaller, while forty two per cent feel it's a tie. I'm going to vote, and then search to see if there's a boob voting site!\"\n\nJust then Naomi and Jared came through the door. \"You're voting for my ass being smaller, right, Billy? I just saw the news where the reporter asked Gwen about pictures of us on the internet. I couldn't believe it. How did they get photos from that night? I called Mom to try to explain how that all happened.\n\n\"She asked me if Steve was really naked when I was on his lap. I told her that he was. Then she told me I had nothing to explain! I think she was a little jealous! It's a little weird that my mother is so turned on by Steve, isn't it?\" asked Naomi rhetorically.\n\n\"Not if my mother is anywhere near normal in that regard,\" stated Jordan as she entered the room. \"She paraded around topless in front of him and tried to get him to tell her how nice her tits were.\"\n\n\"Really? I can't wait to tell Mom about that,\" chuckled Naomi. \"That'll really make her jealous. When I told her about Chip's sleep talking, she was extremely interested. She kept asking me if Steve's really seen all of those woman undressed. I told her I couldn't really be sure, but everyone acted as if he had, so I'd guess he did.\n\n\"She was especially interested in hearing about Paula, Diane, and Jordan's mother. I think she was disappointed that I couldn't tell her more. Is it possible she's thinking of teasing Steve a little? I don't know what Dad would say about that.\"\n\n\"That would be awesome!\" blurted Billy. \"Let's have her visit sometime when we're near a hot tub. Your mom has some seriously nice...\"\n\n\"Billiy! You've got to learn to filter the thoughts in your head before they slip out your mouth,\" scolded Charlotte. \"It isn't polite to keep referring to the anatomies of our female friends the way you do. That goes double for their mothers. And even if Naomi's mom felt like giving Steve a little peek, it doesn't mean that you'd be included. I'm sorry, Naomi. Billy has a one track mind.\"\n\n\"I can't wait to tell Mom what Billy said,\" laughed Naomi. \"I bet she'll smile like the cat that ate the canary. I think when women hit their forties, they need to prove they're still attractive and desirable, and can still attract the eyes of younger men.\"\n\n\"If I'm around when she gets in the hot tub, I'll be all eyes!\" promised Billy. \"Your mom is hot!\"\n\n\"I thought you had a thing for my mother,\" pointed out Gwen. \"Now we find out that you're attracted to Naomi's mom, too? What's wrong with you, Billy?\"\n\n\"He's pretty normal, except he keeps blurting out what he's thinking!\" complained Charlotte. \"That's the problem. Steve and Jared are just sitting there, acting like they'd never even think about your mothers' unusually nice figures, but they're just as perverted as Billy. They just have more couth.\"\n\n\"That gives me a great idea!\" announced Billy. \"When we build Valhalla, we need to be sure there's a giant hot tub installed. We'll use it to unwind after saving a small country or making a block buster movie. We'll have Kate, Jordan, Becky, Ashley, Naomi and her mom, Paula and Diane and ...\"\n\n\"I think we get the picture!\" laughed Jordan. \"With all of those boobs in there, you'll feel right at home. Naomi and her mom won't have the biggest boobs in the tub with you there, leering at us ladies, you big boob! Poor Charlotte. He must molest you endlessly.\"\n\n\"I have to admit that he seems to enjoy my B cup boobs pretty well for all of his talk about big ones,\" agreed Charlotte. \"I think Gwen's right when she says that men like all breasts and all sizes.\"\n\n\"Jared and I didn't stop in to discuss my mother's chest, although you'd never know it from the conversation,\" continued Naomi. \"What should we do about those pictures on the web? If they were taken off videos, there can be an endless stream of photos of us naked coming out the rest of our lives. It's a bit of a rush to have so many people vote for my ass, but guys like Billy will be starting a web site to vote on our breasts pretty soon. No offense, Billy.\"\n\n\"None taken!\" retorted Billy immediately.\n\n\"Let's call Ashley and have her figure this one out,\" suggested Jordan. \"She'll know who to contact to get to the bottom of this. We know the pictures are from the night we stayed at that log cabin. Now that I think about it, there could have been cameras in our rooms, as well! We could have sex tapes coming out on the internet!\"\n\n\"Oh no!\" groaned Jared. \"I never thought about cameras in our rooms!\"\n\n'What are you worried about? You were alone that night. I didn't sleep with you back then,\" recalled Naomi.\n\n\"Yeah, I know. I was in a hot tub with five of the sexiest naked women on the planet and I went to bed alone. Don't you think I might have had a little pressure built up that needed release?\" asked Jared.\n\n\"Oh, no!\" exclaimed Naomi with a blush. \"I was a bit stimulated after seeing all of those naked men. I sure wouldn't want anyone to see videos from my bedroom that night either. We'd better hire a hit man or something to get the bastard with the pictures, and soon!\"\n\nIt was decided that some of the wealth and connections of Lady in Red Productions were to be devoted to finding out who had possession of the videos, and either securing them or litigate until the perpetrator was broke, and then secure the videos. \n\nThe next day the group traveled to the site of Asgard. A new road was being built into the area but was nowhere near completed, so they used SUV's to access the lake and the building sites over a winding dirt road. Steve was impressed that two foundations were already poured and a crew was setting forms for a third.\n\n\"That one is where Lisa and Jason and their daughter will be living,\" explained Ashley. \"The contractor promised their home would be done before the baby was born. Over there is Charlie and Jordan's home. The contractor couldn't guarantee that it would be finished when they return from their honeymoon, but he's going to try.\n\n\"Ted and Paula will be here and should be the third one completed. All of these houses will be over four thousand square feet and have five bedrooms since we don't know how many kids everyone is going to have. We want to be sure that they're big enough.\"\n\n\"Why would Gwen's parents want such a big house,\" asked Billy. \"Their kids will be moved into homes of their own.\"\n\n\"I think I can answer that one,\" responded Paula. \"It appears likely that Ted and I are going to be blessed with more than a few grandchildren and we want room for them when they stay with us. Our daughters also have some very good friends that will be having children and may want us to babysit them while they're off to strange lands doing who knows what. The plans allow for an addition to the house if it appears that we're going to need more room.\"\n\n\"Steve and I have picked out a spot over on that hill,\" revealed Gwen. \"Valhalla will be over near that huge oak, and it'll take up most of that knoll. It'll have twelve bedrooms with private baths, a banquet hall, an industrial sized kitchen, an indoor pool, a media room, an exercise room, and a big game room with pool tables, table tennis, and other games. \n\n\"There'll be a huge hot tub where my sisters, Jordan, Naomi, Charlotte, Mom, Aunt Dianne, Becky, Ashley, Jen, Nadiya and I will be naked most of the time. We'll have a direct video feed to Billy's home, just in case he's too tired to come over and watch us in person,\" finished Gwen as she fought to maintain a straight face.\n\n\"Oh, man! You really had me going!\" admitted Billy. \"I was visualizing everything as you were naming the ladies that would frequent it. No need for the live video. I'll make sure I get over there in person every day.\"\n\n\"We'll probably have to have a full time security guard to keep an eye on Billy keeping his eyes on everyone else,\" teased Jordan. \"They already started building the huge fence that's going to surround the property. The irony is that Billy will be fenced in with us. That's like having the fox watch the hen house.\"\n\n\"Hey, I've always been a perfect gentleman when you're naked, haven't I?\" questioned Billy with a crooked grin. \n\n\"Actually, you have,\" agreed Jordan. \"Your eyes get awfully big and drool runs down your chin, but that's kind of flattering in a strange way. The other guys don't even give me a second look.\"\n\n\"I don't think that's too accurate, at least with Steve,\" disagreed Kate. \"He can describe every inch of your body. If he could paint, and it really wouldn't surprise me if he could, he'd have nudes of all of us hanging on his walls. Billy might act like the pervert, but Mr. Hammer is always looking, even when it seems like he isn't! He just conceals it while Billy stares and grins.\"\n\n\"That's my boyfriend you're calling a perv,\" pointed out Charlotte. \"He just happens to have a lot of testosterone pumping through his veins. He's all male and he really appreciates attractive women with long legs, great smiles and...\"\n\n\"Big hooters!\" finished Billy. \"I'm just manlier than these other guys. I would never want to insult a naked woman by ignoring her. I was raised better than that!\"\n\nAs Billy finished speaking, Ashley arrived to join the group. \"I've asked investigators to approach the situation about those photos from both directions. We have some super computer geeks trying to determine where the server is that hosts the web site the pictures are on, and we have guys visiting the owner of the cabin. Most of the folks I've talked with seem to think that they'd be happy to have pictures like that on the web if they looked like you guys.\"\n\n\"As you know, that isn't the point,\" replied Gwen. \"This was done with the intention of hurting us, or at least hurting me. It's illegal and it's wrong. Plus, there could be videos of a more intimate nature circulating at some future point. I love Steve and I don't care who knows it, but I don't want the world watching it. Unless, of course, they're buying tickets in a movie theater, or renting it on Blue Ray, and even then they don't get to see the whole repertoire!\" \n\n\"As far as hurting you goes, your poll numbers are up!\" revealed Ashley. \"The Democratic candidate pulled out and offered his meager support to the Republican. Polls out this morning show that it isn't easy to get Democratic supporters to go Republican. Your support went up almost ten per cent after those photos came out. It seems that every dirty trick they try backfires on them.\"\n\n\"I think that goes back to what Steve and I learned when that woman sneaked into our hotel room and took pictures proving we had spent the night together,\" replied Gwen. \"We decided then to simply tell the truth and it's worked for every situation we've encountered since then.\"\n\n\"Except for your temporary insanity with Jack Timberline,\" recalled Lisa. \"You were a mess that day, but Steve, Naomi, and Nadiya made it all look like part of the plan. You really have some great friends.\"\n\n\"Ashley, would you walk with me for a ways?\" asked Steve as he led Ashley away from the group so no one could overhear what they were saying. \"I know that you've heard that the guy you met wasn't really Mark Neary. He was an imposter, and I was the one that told you he was an okay guy. I can't tell you how much that bothers me. Maybe I'm not the one you should ask about men. You're a beautiful, accomplished woman and hardly need me screwing things up for you.\"",
        "\"I heard all about how he impersonated the real Mark Neary,\" admitted Ashley. \"He wasn't who he told us he was, but it doesn't mean that he can't be a good guy. You liked him, Steve. I could tell. He was a gentleman with me and I think he really did like me. I'm reserving my opinion until we know the truth about the situation. He could have been misled, or tricked, just like we were.\n\n\"Don't blame yourself and please don't stop looking out for me. I like it. I don't have a dad and it feels really good that a strong, capable male has my best interests at heart. I don't know what I'd do if something happened to our friendship. Gwen's very lucky to have you, but I think I'm doing pretty darn good having you for a close friend!\"\n\nKate nodded toward Steve and Ashley as they spoke privately. \"I thought I was in deep over Steve, but Ashley worships him. Look at her eyes when she talks to him. You're very trusting, Gwen. Don't you ever worry about her seducing him? I love her like a sister, but she's another woman in love.\"\n\n\"I understand what you mean. The short answer is that I do trust them. I know Ashley loves him deeply, but so do a few of my sisters that shall remain nameless. Look how you were able to transfer some of that emotion you had for Steve to Chip. Jordan found Charlie. Lisa has Jason. I've noticed that loving Steve allows my friends and relatives to find very good men for themselves. \n\n\"I couldn't be prouder of the guys you three have found. In the beginning, I was a bit nervous about Steve having woman fall over him all the time, but now I understand how it all works. When Ashley finds the right guy, she'll love him unconditionally. She's learning what to look for in a man, and she'll find one. In the mean time, she can lean on Steve. His shoulders are broad. And Steve feels bad about the guy we thought was Mark Neary turning out to be someone else. He's apologizing about that right now.\"\n\nThe next day, Steve and Gwen received a phone call telling them that Senator Chatham wanted to meet with them on the following Friday. Curious about the significance of her wanting to see them, they agreed to meet with her in a private room at LiR CPA.\n\n\"It's good to see you both again!\" schmoozed the senator. \"You've been doing some remarkable things since we last met. I knew you were both headed for great things after our trip to Russia.\"\n\n\"Thank you, Senator,\" replied Steve. \"We appreciate your high opinion, but we know you didn't come here to tell us how fond you are of us. What can we do for you?\"\n\n\"You don't waste time getting to the nitty-gritty, do you?\" chuckled the Senator. \"We have a PR nightmare going on in Washington. The fact that you willingly traded yourself to save those kids and the U.S. government didn't appear to care in any way is causing a serious shit storm in D.C.\n\n\"When Gwen made mention of the state department and the administration failing you the night she brought you back makes it even more damning. Add in the fact that she, along with some very special friends, managed to go to Iraq, find you, fight for you, and bring you back to safety really leaves those of us in leadership positions looking very poorly. I just don't see how we can shine this so it doesn't look like shit,\" stated Senator Chatham frankly.\n\n\"And just where do we come in?\" asked Gwen. \"The truth is that the government did fail Steve badly. We aren't going to pretend it never happened. Quite the opposite. We're looking for answers and will go where the evidence leads us. If it's you, the President, the Secretary of State, or the CIA, it won't deter us. How does that fit with your mission here today?\"\n\n\"It makes me more determined to get this right,\" responded Senator Chatham. \"We're trying to get to the bottom of this mess. At the time, I didn't even know that Steve had gone to Iraq. It's my belief that President Hanson had no knowledge of it either. It seems that you were led to believe the state department wanted you to go, but that wasn't the case. We don't negotiate with terrorists, and we felt that sending you to the scene would only add fuel to the flames. Someone had different ideas. I strongly suspect the CIA, but can't find anything to link them to the debacle.\n\n\"The possible motive is pretty easy to determine. The CIA has been urging the President to send more troops into Iraq and to consider bombing Iran, since many of these terrorists are bleeding across the border from there. If a terrorist that trained and was based in Iran had managed to behead Steve Hammer and post it on the internet, all hell would have broken lose. The public would demand justice, which would include the bombing of terrorist strongholds in Iran. \n\n\"When you and your friend managed to escape those radicals, you also managed to keep the U.S. from being dragged deeper into an already untenable position. I can't tell you how relieved President Hanson and the state department were when Gwen somehow managed to show up in Sparta with you and your friend.\n\n\"Of course, we felt about as foolish as possible. We'd all been convinced by the CIA that they were hot on your trail and would have operatives rescue you any minute. Then they had a drone drop a hellfire missile on a warehouse north of Baghdad and, as it turned out, several miles from where you were rescued. We were told that their intelligence reported that you had been beheaded, so they retaliated by killing about nine terrorists in the drone attack. There was so much explosive material there that the explosion destroyed almost all human remains. No bodies were found, just a few charred pieces.\n\n\"We were in a high level meeting discussing retaliations when we were notified that Gwen Anderson and friends had returned to Sparta with Steve Hammer in tow, and he was alive! That's when the meeting became interesting. The Director of the CIA seemed genuinely surprised. President Hanson was ecstatic. The Director was ordered to draw up a report on its actions concerning your situation. It was delivered to Hanson two days ago and there are a great many questions left unanswered. They had no idea why you went to Iraq, how you got there, and who ordered you to go. A guy that had recently been promoted to the position was in charge of the search for you in Iraq, and he screwed the pooch with his efforts.\n\n\"That's all very interesting, but how does it change anything for us?\" asked Gwen. \"It sounds like you know the CIA was behind this aberration. Can't you just water-board them until they admit their duplicity?\"\n\n\"It isn't that easy. There appear to be some rogue cells in the CIA and the Director has no idea who they are or what they're doing. We need to methodically follow the progression of events. The Senate Select Committee on Intelligence wants you both to testify after Labor Day, when Congress is back in session. We need to be open and transparent about this. You'll be given a public forum to explain what you did, and why, as well as answer questions that will help Congress understand what happened.\"\n\n\"Will we be allowed to present any evidence to back our responses when we're asked questions,\" quizzed Steve. \"I know how those things go. Some of the senators will call us liars and challenge everything we say. There's a few of them that think along the same lines as the CIA. They'll try to keep the Agency clean and drag us through the dirt.\"\n\nSenator Chatham nodded in agreement. \"I keep forgetting the depth of your understanding of the government and politics. You're absolutely right. You'll be insulted and attacked by a few members of the committee. They'll accuse Gwen of grandstanding to get elected to Congress, or to sell more music, or movie tickets. They'll question your honesty, integrity, and patriotism. So, will you do it or do they need to subpoena you? It would look better if you both appeared willingly.\"\n\n\"Sure, we'll do it!\" chuckled Steve. \"You're so persuasive. We can't wait to be called liars, traitors, and thieves. You need to be prepared for the truth, because that's what we'll be bringing. It may not be common in Washington, or well accepted. That won't stop us from delivering it.\" \n\n\"I would ask that you be sure anything that you tell the committee is accurate. As far as the individuals members are concerned, treat them with the same respect they show you. Be polite as long as they are.\n\n\"There's another subject I wanted to broach. You'll be transferred to Washington when you're recovered and able to report for duty this fall. There has been a surprising amount of discussion about where you would be most useful. After this Iraq debacle, some higher ranking people in government felt you should be buried in some far away location. Others still wanted to take advantage of the amazing press you garner wherever you go, even if may become unflattering to portions of the government.\n\n\"To that end, I have used my considerable influence with the president to have you assigned as my aide. It isn't unheard of for a member of the Senate Foreign Relations Committee to have a military attach\u00e9. I have seen enough of your style to know that if you don't want to work with me, I'll be the one to pay the price. I simply need to know if you feel that you can serve the government by working as my aide, or is that asking too much?\"\n\n\"I have great respect for your service in Washington. You've often crossed party lines on important issues. I will not, however, support any political party, or anything that remotely looks like I'm stepping into politics. You also need to know that I fully expect Gwen to be elected to Congress this fall. I will be supporting her anyway I can when she reaches Washington. If the specter of having an aide that's in love with a freshman Congresswoman and supporting her every way possible is upsetting to you, I suggest you reconsider. I won't be persuaded to abandon Gwen for any reason, on any issue.\"\n\nUpon hearing Steve state his allegiance so strongly, Gwen smiled broadly and reached out to take his hand and squeeze it. Senator Chatham looked from one to the other and nodded her head.\n\n\"That loyalty of yours is one of the things that the American public finds so inspirational. I'll be using that good will and popularity you'll be bringing to Washington in many ways. It can't help but keep me in the public eye. I won't ask you to take any position on an issue. You'll be free to support Gwen. I realize how foolish it would be for me to try to turn you away from her. If we should find ourselves on different sides of an issue, I ask only that you both treat me with respect and we remain friendly. I have many good friends on the other side of the aisle. We can disagree and still be professional and respectful.\"\n\n\"What about those pictures of Steve and me that came out last week?\" questioned Gwen. \"Will that make a difference in Steve's treatment in Washington? Will there be any fallout from them?\"\n\n\"I assume you're referring to the photos where he's naked with Lieutenant Naomi Wilson?\" asked Senator Chatham. \"Yes, they'll make a difference. You didn't hear it from me, but it's highly likely that she'll be assigned as an aide to Senator Elizabeth Mason of Maine. Ms. Wilson is closely linked to you two, and especially to Steve, so that makes her a rather hot commodity. Her looks, her education, and her skills will get her a long ways. Sitting naked on Steve's lap will bring her fame. Senator Mason is a big advocate of women's rights and Ms. Wilson appears to be an independent thinker, and very much a woman. Envy will be the only negative emotion created by those photos. They were remarkable.\n\n\"I do marvel at your uncanny ability to turn what on the surface appears to be a public relations nightmare into a positive. I shudder to think of what would happen to my career if I were photographed nude and in the arms of a man not my husband. Of course, I wouldn't be nearly as photogenic as you are, but the press would feast on me until there was nothing left.\" \n\nThe meeting with Senator Chatham ended a short time later. Gwen and Steve returned to the Anderson home. Steve was pleasantly surprised to find Chip sitting in a wheelchair by the pool in the warm summer sun. Steve sat down next to him and the two men chatted easily. Chip had finally been released from the hospital and Kate was going to be his main care giver.\n\nAs the two men chatted, the kitchen door slid open and Kate's voice sounded from behind them. \"Would you guys like a cold beer?\"\n\n\"Yeah, as long as it doesn't screw up my medications,\" replied Chip as Kate stepped in front of them holding two beers.\n\n\"Oh! Wow! You're beautiful!\" blurted Chip as he studied Kate standing before him. She was topless! \n\n\"So you think I look okay? Do I look as good as Steve described me to you? Are you disappointed after the way Steve bragged me up?\" asked Kate with a smirk.\n\n\"Kate, you're the most beautiful thing I've ever seen!\" marveled Chip. \"Steve didn't begin to do you justice. How did you know what Steve said about you? Did he tell you about that?\"\n\n\"How about some chips to go with the beer?\" asked Gwen as she walked into view wearing a small red thong, and nothing else. \"Did Steve describe me accurately? Sometimes he exaggerates a little. Are you okay, Chip?\"\n\n\"There's something going on here. I'm not sure what it is, but I hope it never ends. Did Steve tell you about our conversations while we stumbled through the desert? You look great, Gwen! Did I die already? Is this heaven?\"\n\nBy this time, Steve realized what was going on with the girls. Chip was about to learn that he talked in his sleep, a lot! He had to admit that they were letting Chip know in the nicest possible way.\n\nThat was when Ashley strolled out and stopped next to Steve. She had on a little pink boy shorts. Her breasts were high and firm. \"Paula asked if you'd come back into the kitchen for a moment to help her with something. We'll chat with Chip while you're gone.\"\n\nSteve grinned to the girls as he stood and headed for the house. When he got there, he saw all of his friends standing inside. The girls all had bikinis on and were giggling a great deal.\n\n\"We're welcoming Chip to the group and thanking him for what he did for you,\" pointed out Lisa. \"Do you think I look too fat to go out there topless? Jason insists I look good, but he's prejudiced. What do you think?\"\n\nSteve looked at Lisa's slightly swollen stomach and her pregnancy enlarged breasts and gulped noticeably. \"You are sexy as all hell, Lisa. Jason is one lucky guy!\"\n\n\"Thanks, because it's my turn,\" laughed Lisa as he pulled her top off very ample bosom and handed it to Steve. \"Keep an eye on this for me, would you?\"\n\nSteve watched Lisa saunter out by Chip and chat with him. Jason stepped beside Steve as he watched out the window. \"What did we get ourselves into when we fell in love with those girls?\" wondered Jason. \"I keep telling her that the more pregnant she gets, the sexier she looks. I take it that you agree?\"\n\nBefore Steve could respond, Jordan tossed her top to Charlie and headed out the door. Once again, all the men stood silently and watched as a beautiful, topless woman walked out to visit with Chip. \n\n\"Jared, will you do the honors?\" asked Naomi as she turned her back to Jared. He grinned as he reached up and untied the strings that held her top up and slowly removed it. \"I hope Chip isn't disappointed after the way Steve described me to him.\"\n\n\"He won't be!\" assured Steve as he once again had the opportunity to see Naomi's large, firm breasts. All the men watched Naomi walk across the kitchen floor and step outside.\n\n\"Jared, you're one lucky SOB!\" squeaked Billy as he stared at Naomi's backside.\n\n\"Hey, did anyone notice that I already took my top off?\" asked Charlotte as the men turned to gaze at her. \"That's better! I expect you to be drooling and telling Billy what a lucky guy he is once I step outside.\"\n\n\"Why wait?\" asked Steve as he studied Charlotte as she stepped in front of him. \"Billy, this girl of yours is sexy as hell, but she'd better get moving out of here. There are a lot of worked up men in this room. I can't promise she'll be safe much longer.\"\n\n\"Thanks!\" grinned Charlotte as she pulled Steve down for a quick kiss. \"Billy needs to know how good he has it. These babies are high quality!\"\n\nAs Charlotte joined the other women milling around Chip, the guys lined up by the patio doors watching. Steve noticed that Paula was watching from a window by the sink and went over and stood behind her. He leaned ahead and whispered into her ear.\n\n\"You're not going to join them? These guys would love to see you doing your best to cheer up Chip.\"\n\nPaula remained still as she watched out the window. \"Those girls are all so beautiful and firm. I'd embarrass myself, and my daughters. Poor Chip would be scared to death.\"\n\n\"Your breasts do have a strong effect on men, but believe me, fear is not the emotion they create,\" chuckled Steve. \"I apologize if I embarrassed you by telling Chip about you. I was sincere when I told him how beautiful and sexy you are.\"\n\n\"That's another reason I'm keeping my clothes on around you, Young Man,\" replied Paula. \"You're the only man that's ever made me have second thoughts about my vows. I'm not going to put myself in a position where I make a fool of myself. I know I can trust you, and all of the men here, but I don't always trust me. I'm so happy for Gwen to have you to love. I marvel at what you two have. Look how much you've accomplished already. Now I'm looking forward to a house full of grandkids, so start thinking about making an honest woman out of my daughter.\"\n\n\"We've discussed marriage, but feel we should wait until Gwen has completed med school and I'm out of the service. I can't make a career out of being the Navy's poster boy. You'll be my mother-in-law in a couple years and holding our child in your arms within a year of that. That's the best I can promise,\" responded Steve as he watched the girls tease Chip mercilessly.\n\nPaula swung around and lightly kissed Steve's cheek. \"I look forward to it. That first day you came to our pool after that Lady in Red dance, Diane predicted that you two would create the most beautiful children, and I'm sure she was right.\"\n\n\"I think we've given Chip enough time to be properly cheered up!\" declared Billy as he started for the door. \"We need to get out there and cheer ourselves up!\"\n\nThe guys weren't willing to let Billy go out without them, so they all followed him out to the pool deck. Steve grinned as Gwen and Naomi winked at him and then snuggled up on each side of Billy and placed their arms on his neck. Then they leaned in and kissed his cheek as their full breasts pressed against his chest. \n\nJordan and Kate stepped in as soon as Gwen and Naomi stepped back. Then they were followed by Lisa and Ashley. \"It looks like I may have to revise my opinion again,\" grinned Billy. \"Lisa's now in the lead!\"\n\nSteve took Gwen's hand and took her with him as he approached Chip. \"Steve, I didn't realize I was blabbing so much in my sleep. I swear I never meant to say anything about what you told me. I apologize for that, but I'm pretty happy about how it all turned out.\n\n\"I've never seen so many beautiful, topless women in my life! Every one of them is beautiful beyond belief. Steve has mentioned you a lot over the past couple of years, Gwen, but you're an absolute goddess. He's a very lucky guy.\"\n\n\"I have a special place in my heart for guys that save my life, or Steve's,\" responded Gwen as she leaned down and kissed Chip lightly on the lips. \"You've moved to the top of the list with everything you endured in Iraq to help Steve. We're connected now. I'll never forget what you did.\"\n\n\"So now that you've seen my sisters, Jordan, Charlotte, Naomi, and Ashley, do I do anything for you at all?\" asked Kate as she kneeled down next to Chip and hugged him.",
        "\"Kate, you do it all for me. When can we get married? I want to start those babies you promised my mother right away!\" teased Chip.\n\n\"There won't be any babies before I finish law school, you reconcile with your father, and I have a band on this finger,\" declared Kate. You'd better make sure that you do what you can to make everything happen.\"\n\n\"I can't make my father listen...\" Began Chip before Kate placed a finger over his lips.\n\n\"Do you see me, Chip? Are you really looking? I wouldn't think you'd let your dad stand between you and this body. You need to get your priorities figured out. If I'm not on the very top of that list, I'll help you get well and then say goodbye.\" \n\n\"Okay, I'll reconcile with my father, no matter what it takes,\" agreed Chip as he looked into Kate's eyes. \"You already mean the world to me, Kate. You're the only real priority I have any more.\"\n\nKate gave Chip a big smile, but was interrupted before she could say anything. \"Okay, girls! Here are all of your tops. Please put them back on now. I think Chip, and every other male here, has been cheered up. I allowed this as a special welcoming for Chip, but now it's time to cover up. You'll be on the internet again!\" chided Paula as she handed out the tops to the girls. \n\nThe next day two FBI agents came to the Anderson residence and spent hours taking statements from everyone that had come into contact with the man they had thought was Mark Neary. Ashley was questioned closely since she had spent a lot of time with him. Steve and Chip were asked a lot of questions as well, since they were the reason the real Mark Neary was supposed to go to Sparta. After about eight hours of questioning, the FBI men left with extensive notes, but few answers to their most pressing questions.\n\nJared and Naomi had to report the following week. Jason was required to return to active duty in two weeks. He was fully recovered from his injuries in Colombia and was doing the paperwork to be discharged. With a baby on its way, he and Lisa decided that his most important duty was to his family.\n\nThat was also the week that Becky made it back to Sparta. She strolled out to the pool late on a Wednesday afternoon. \"Hey, Steve, Gwen, Kate, Ashley! How's everyone? Anything happen while I was off filming in New Zealand?\n\n\"Seriously, I heard all about it. You guys are followed very closely in New Zealand and Australia. They were always asking me about you. I was thinking of flying back when I heard that Steve had been exchanged for those kids, but what then? If I'd known that you were going to Iraq to kick some butt, I would have met you there. I'm sure glad you're okay, Steve!\"\n\n\"I never knew her to be so talkative,\" laughed Ashley as Becky wrapped her arms around Steve and gave him a smoldering kiss. \"She didn't use to be so forward either. Remember when we asked Steve to try to bring her out of her shell? Now look how she's doing. TV shows, movies, and promotions are all in a day's work for her.\"\n\n\"Well, it's Gwen's fault for being so generous with her guy. If Steve thought I looked okay, I knew other guys would, too. It's great to be back and to see all of you, even though Steve looks a little banged up. At least he kept his head. That would have been worse than losing a hand!\" \n\n\"Another beautiful, famous woman?\" observed Chip as he wheeled across the pool deck. \"I recognize you from the movies! You're Becky Summers!\"\n\n\"And I recognize you from the news reports I've been watching. You're Chip Martin. I've also heard that I had better not get too interested in you or Kate will be all over me. It's great to meet the guy that saved the guy that pretty much saved me.\"\n\nOver the next couple of weeks, Gwen began to worry about their annual July 4th bike ride. Steve had a cast on his arm and his ribs weren't healed entirely. Chip was not walking yet and riding a bike was out for some time. Lisa and Jordan came up with the solution to the dilemma.\n\n\"I'm getting pretty fat, Steve is bunged up, and Chip has months of rehab in front of him before he's back to where he was,\" pointed out Lisa. \"We were thinking it might be nice to have July 4th here in Sparta. We have some serious military heroes here in our home town. We could invite bikers and everyone else to ride here and help us celebrate. Lady in Red supplies free burgers, hot dogs, and drinks and this town celebrates.\n\n\"That's a great idea! We can make floats and have a nice parade. Let's speak to the town council and see if they'll go along with it!\" enthused Gwen.\n\nTalking the town into having a big celebration for the Fourth was a simple thing, especially once Lady in Red Productions promised to cover all expenses incurred with the event. The parade was set for noon with a free concert given by Gwen, Jordan, Charlie, and Steve scheduled for six in the evening. Steve would not be playing guitar with his arm in a cast and his ribs still tender, but he would be able to sing.\n\nLady in Red Productions had an even dozen floats made with different themes for the parade. The close friends were each allowed to design their own float with the company then having it built and readied for the big day.\n\nWhen word was released about the concert and parade, people began streaming into town days before the Fourth. Once again, all hotels, motels and bed and breakfasts were filled. Two campgrounds that had recently opened were also at capacity. Billy's father along with Ralph Smith, stopped in to thank the group while they were dining at Marsh's on July first.\n\n\"The town is doing a land office business!\" declared Ralph as he shook Steve's hand. \"Your company has been a lifesaver for the local merchants, businesses, and labor force. I can see it every day in the savings accounts and mortgage payments being made at the bank. You've given people good jobs with generous pay and benefits. You're the attraction that lures so many tourists to town.\"\n\n\"Sometimes we seem like we take it all for granted, but we don't,\" added Billy's father. \"We've been able to expand this business and have Billy join us because you folks have put us on the map. Giving a free concert and supplying so many floats for the parade has really drawn people in. You stayed with this town when a lot of people would have moved to Hollywood or New York. Thanks, guys.\"\n\nPoliticians and local dignitaries were eager to participate in the parade. Senator Chatham came and rode in a red convertible, waving to the crowd of spectators. The Republican candidate for Congress even came to town to walk in the parade and have his supporters pass out pamphlets. While very few people were rude enough to jeer him, the spectators were noticeably quieter when he marched past them, waving and smiling to the crowd.\n\nAs the parade wound down, Gwen and Jordan moved close to the huge American flag waving over the LiR CPA. There was a huge crowd that filled the street in both directions, as well as the park across the street. The jumbotrons had been on, broadcasting the parade. They now focused on the girls as they sang the National Anthem. The applause and cheering lasted long after the girls ended the song. Then Senator Chatham stepped up to the microphone.\n\n\"I won't ruin this great day with a long-winded speech,\" promised Senator Chatham. \"I'd simply like to point out that we're celebrating our nation's birth. It was built on the principles of service, sacrifice, courage, discipline, and honor. No town in the nation better exemplifies these qualities than Sparta! You have the mother lode here! Thank you all for showing what America can be, and what we all need to strive toward. I am humbled to be here today and I thank you all for being the kind of citizens, parents, siblings, sons, daughters, and patriots that you are. Thank you, Sparta for leading the way and showing the rest of the country the best of what we Americans can be!\"\n\nThe applause was long and loud as the crowd was pleased with the praise from the senator. Then a chant began for Gwen to speak. As a politician, Senator Chatham immediately sensed the mood of the huge audience. She motioned for Gwen to come forward. Gwen blushed slightly as she accepted the microphone from the senator.\n\n\"Thank you! The Spartan Nation has been tested over the years and has endured! We've grown closer and prospered together. We've seen incredible courage overcome senseless hatred. We've seen how much we can accomplish when we work together to help those less fortunate. This is a wonderful country and the Spartan Nation is the very best of the best! \n\n\"I'd like to acknowledge all of our service men and women here today. They're heroes. Thank them today when you see them. Be proud of them. They've earned it. I've already been cautioned about mentioning any names for fear of leaving some out. I'd never want to do that. We have hundreds and perhaps thousands of vets in Sparta for the holiday and we thank each and every one of them. \n\n\"And to put rumors to rest about our next movie, it's going to be filmed here in Sparta! Steve is recuperating, so we had to tweak the script a little, as well as keep him close to his doctors and the hospital. We'll try to not upset traffic or daily routine too much, but we'll be filming on the streets and in some businesses in town. Please be patient with us. We'll need extras for some street scenes and will appreciate those of you that are willing to fill in when needed. Filming starts next week and we hope you'll like the movie when it's done!\" \n\nThe concert was a huge success. Steve actually sang a few more songs than usual since he wasn't able to play guitar. He teamed with Jordan on several and with Gwen on half a dozen. New jumbotrons had been placed in several strategic locations on Main Street to allow people farther removed from the event to see the show. Merchants were given live feeds so that their patrons could watch and listen while shopping and eating. The evening was a huge success and the town fathers were delighted. After all, how many towns across the country could claim that the top acts in the music industry not only lived there, but used their talent and time to promote local tourism and business?\n\nThe new film project was Ashley's idea and was fully embraced by Lady in Red Productions. Having seen posters of Gwen as Wonder Woman, Ashley had drawn up a rough outline for a movie. It was obvious to Ashley that Gwen was the prototypical Wonder Woman. She knew that men would buy tickets to the movie just to see Gwen perform various stunts in her scanty costume. If the movie involved romance and Steve Hammer, females of all ages would pay to see it. Add some action and several more beautiful women and handsome guys and it would be a success. If it had a good plot, was well written and performed, it would be huge. \n\nThat summer, it became fairly common for the citizens and tourists to see Wonder Woman on the streets of Sparta. Much of the filming was done in local businesses and familiar locations in the Spartan Nation. Hotels and motels within a hundred miles were filled to capacity all summer as tourists flocked to Sparta to see the Amazon Queen and her friends make their film.\n\nThe scenes that had Steve and Gwen interacting in public were the most popular. Steve wore his cast through the first few weeks of filming so his broken arm was written into the movie. Jordan, Kate, and Naomi, who managed to get a month off from the Navy, were Gwen's trusted lieutenants and wore similar outfits as Gwen, except their outfits had no red, which in the Amazon world, was used to signify royalty.\n\nThe town fathers hated to see the movie end filming, but they needn't have worried. Jordan and Charlie's wedding was scheduled for the next weekend and the town once again began to fill up in anticipation. Jordan and Charlie had sent invitations to personal friends and family, but also invited the public to join in the celebration.\n\nBy Saturday afternoon, when Steve, in his Navy Dress uniform, walked the incredibly beautiful bride down the aisle at LiR CPA, a crowd estimated at a hundred thousand watched from vantage points all over Sparta. Jordan and Charlie sold the rights to broadcast the wedding to a cable channel for several million. That money was immediately donated to charities helping veterans acclimate to civilian life by finding homes, jobs, and medical care for them. \n\nThe group had several different bands play at the reception as Jordan and Charlie did their best to dance with as many people as they could. Steve and Gwen were in great demand as well. Chip was using a cane and although doing very well in his recovery, was unable to take to the dance floor. Kate danced with her friends and family, but for the most part, remained close to Chip.\n\nIt was almost midnight when a limo pulled in front of the building and Jordan and Charlie waved to the crowd as they headed for the door. Charlie gave Gwen a hug and kiss while Jordan kissed Steve long and hard. Then she smiled to the crowd, grabbed Charlie's hand and climbed into the limo.\n\nThere was still a huge number of people enjoying the food and drink, so Gwen and Steve changed into more comfortable clothes and joined the band that was performing at the time. They sang their hits, both duets and singles. Gwen had a fair number of big hits to select from by that time. For their last song, Steve sat at the piano and motioned for Gwen to join him.\n\nHe started playing as Gwen watched. Then he began singing the Bryan Adams song 'Please Forgive'. The lights were dimmed except for a soft light on Steve and Gwen. There was no doubt possible for those that watched that Steve was singing for Gwen alone. His voice would quaver slightly with emotion as he sang. Gwen's eyes misted over as she smiled broadly. As he ended the song, Gwen leaned into him and kissed him gently on the lips. The audience roared its approval as Steve and Gwen bowed one last time before leaving the stage. Several weeks later, when the song was released with a video, it became a huge smash. It rivaled Gwen's recent 'Woman in Love' for air play and sales. \n\nTen days after Jordan's wedding, Gwen and Steve traveled to Washington to appear before the Senate Select Committee on Intelligence. The media coverage, both as they entered the Capitol Building, and as they testified was intense. The committee chair was a lady Senator from California. She introduced Steve and Gwen and then allowed the vice chairman an opportunity to speak.\n\nHe wasted no time questioning the validity of whatever Steve and Gwen would have to say. He insisted that there was no way they could know what the intelligence community was trying to accomplish, nor how they were going about it.\n\n\"In fact, aren't you here to campaign for the House of Representatives, Ms. Anderson? You've made a career and a great deal of money from exposing yourself in movies and in risqu\u00e9 music videos. Why would anyone even take you seriously?\" finished the pompous senator as he looked down on Gwen from his position on the podium in front and above her.\n\n\"Senator, you're engaged in a very difficult reelection campaign of your own,\" began Gwen as she glanced at the notes she had brought into the chamber. \"In fact, aren't you here in an attempt to garner votes by pandering to your base? You impugned me, Sir, by suggesting that I am looking for votes, and that since I appear in movies and music videos, I should not be taken seriously.\n\n\"Allow me to suggest that a man in as highly a respected and important position as you are, should not be getting assistants pregnant and then paying them to have an abortion! How could anyone take you seriously, Sir?\" demanded Gwen hotly.\n\n\"Order!\" insisted the lady chairman as the room suddenly came alive. \"You're here to answer questions, Ms. Anderson! You cannot come into these chambers and make malicious and slanderous statements!\"\n\n\"Madam Chairman, are you telling me that only United States Senators are allowed to slander and attack citizens in this forum? That we have no recourse? I responded in kind to the Senator's question and I'll continue to do so. If you ask us civil questions, we will attempt to answer them. If anyone feels the need to enhance their questions with insults and personal attacks on us, we will respond in kind, as allowed by the constitution of this country. The very constitution that Steve has shed blood to preserve and protect, I might add. \n\n\"We will not sit here and be treated like criminals, or second class citizens. We have earned respect, and we demand it! Can the members of this committee say the same? As you all know, Steve and I have considerable resources at our disposal. We used some of those resources to delve deeply into the backgrounds of the members of this committee. We will not hesitate to divulge anything our people have uncovered, if we feel it is incumbent upon us to do so.\n\n\"We are prepared to offer substantial proof of any, and all accusations we make. We're also prepared to go to court if it should become necessary. We love this country and we will not sit idly by while justice and truth are ignored simply because lies are more convenient.\"\n\n\"Are you threatening this committee, Ms. Anderson?\" questioned the incredulous chairman.\n\n\"If this committee finds that the truth is threatening, than it would appear that Steve and I are doing exactly that. We're here today to tell the truth. You tell me, Madam Chairman, does this committee find that threatening?\" asked Gwen seriously. \n\nThe lady chairman studied Gwen for a few moments as she composed her thoughts. An aide leaned close to her and whispered something. \"It appears that we have gotten off on the wrong foot. I will ask that the members of this committee remain focused on questions for our witnesses and resist the urge to politic, grandstand, or attack. You've seen what can occur if you go that route. Do you wish to ask any more questions, Mr. Vice-Chairman?\"\n\nThe vice chairman was sweating profusely and his face was a deep shade of red. He simply shook his head in the negative and looked down at his notes.\n\n\"Thank you,\" responded the lady chairman politely. \"Senator Burrow, from the state of North Carolina is next. Please proceed.\"\n\n\"That was a rather ingenious method to avoid personal questions about your character and actions,\" began Senator Burrows as he watched Gwen flip through her notes. \"We are not here to lobby for my character, or yours, Ms. Anderson.\n\n\"When you miraculously returned from Iraq with your lover, Mr. Hammer, you made the statement that the State Department or the CIA dropped the ball. The CIA had committed a great deal of time and resources to finding Mr. Hammer, even though he lacked the judgment and foresight to report that he was traveling to Iraq and that he would foolishly exchange himself for those hostages. Do you realize that the CIA had a drone fire a missile into the warehouse stronghold of the terrorists, killing at least nine known terrorists? This only occurred after painstaking efforts on the ground and through the airwaves to determine where these men were hiding. Does that sound like the CIA was apathetic to Mr. Hammer's plight?\"\n\n\"Does it 'sound' apathetic?\" repeated Gwen carefully. \"No, Sir, it does not. It sounds good, but it's only sound, and not fact. That report is not accurate.\"\n\n\"You're claiming that you know better than the CIA about what occurred in that warehouse?\" marveled Senator Burrows. \"Obviously, Mr. Hammer wasn't there, or he wouldn't here right now. Are you stating that the CIA drone did not destroy that building? That those dead men were not terrorists, or maybe that it wasn't a drone that fired that missile?\"\n\n\"Steve and I are disputing the statement that the Hellfire Missile killed those men. They were in fact terrorists, but they had been dead for hours before the missile struck. The CIA only learned of the warehouse when it intercepted an email that Steve sent to me, and they then destroyed that building thinking that Steve was still in it!\" declared Gwen with a great deal of passion. \"The CIA tried to kill Steve to further its goal, which was to persuade the United States to engage in war with Iran.\"",
        "Once again the meeting room became unruly. There were gasps of shock and surprise at Gwen's statements. Several senators tried to speak at the same time. Reporters were buzzing with the new developments.\n\nThe chairman began hammering the gavel. It took a couple of minutes before the room once again became quiet and she addressed Gwen. \"You're aware that you'll not go unchallenged when making wild accusations like that, are you not?\"\n\n\"We're here to spread the gospel, Madam Chairman. Everything either of us states will not only be true, but will have hard evidence to support it, unlike the CIA!\" retorted Gwen with emotion.\n\n\"Then, to continue my line of questioning, I'll ask the question that everyone is certainly expecting. Would you be so kind as to prove your accusations to the committee members?\" sneered Senator Burrows.\n\n\"I'll let Steve handle this part since he was a participant. I want to warn you that what you're about to see and hear is graphic, crude, and not suitable for children, or queasy adults. The language used by Steve and Chip Martin is the language of men under stress, and is not condoned, or used by either in ordinary conditions.\"\n\n\"When the exchange was made for the children, my hands were cuffed behind my back,\" recalled Steve. \"I was struck at least twice in the head and rendered unconscious. What I am about to show you is video from the very camera used by the terrorists that day. When you see the content, you will have no doubt of the validity of my statement. As Gwen has already stated, this is pretty graphic.\" \n\nLady in Red Productions had asked for, and received permission to install several large monitors in the meeting room. What they had not told the committee was that the monitors would be controlled by their employees only. When Steve finished speaking, lights dimmed and a video began playing on the monitors.\n\nFifteen minutes later, the lights brightened and the monitors went blank. Silence ensued for the next minute or so. Many of the people in the room were visibly shaken by the video that had just played.\n\n\"You two were in possession of this video and did not turn it in to the government?\" asked the stunned chairman. \"How do you justify that?\"\n\n\"We don't trust the government, or at least parts of it, at the moment,\" replied Gwen. \"You saw the email Steve sent to me and several friends. It never reached any of us, but within two hours of its transmission, a Hellfire missile targeted that warehouse. It's our belief that the CIA, or at least some of its employees and staff, wanted Steve dead to further its agenda. That is not the sort of thing the country we love, honor, and serve would ever do. We'll gladly give you a copy now. I should mention that a few minutes ago, it was forwarded to every news organization we could think of. This is going to be difficult to cover up, or put a 'shine on' now, wouldn't you say, Madam Chairman?\"\n\n\"Ms. Anderson? Mr. Hammer?\" began the furious lady chairman. \"I'm recommending that you both be found in contempt for concealing evidence from this committee! I'm instructing the Sergeant at Arms to take you both into custody.\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "iraq",
        "terrorists",
        "cia",
        "congress",
        "senate committee",
        "wedding"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-11"
}