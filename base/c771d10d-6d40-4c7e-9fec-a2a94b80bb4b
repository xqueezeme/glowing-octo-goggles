{
    "title": "Saving the Company Ch. 03",
    "pages": [
        "\"You're really quite bad,\" Brad said as we reached for the drinks the bartender dropped in front of us. \n\n\"You say that every time,\" I sighed as I lifted my glass to my lips. \n\n\"I know,\" he added with a shake of his head. \"But you would think that you'd get better as time went by. You're actually getting worse! I think today might be a personal low for you.\" \n\n\"That you've seen,\" I replied. We looked at each other for a moment before Brad slapped me on the back and burst into laughter. I grinned. \n\n\"I've never been any good at golf,\" I shrugged. \"I'm sorry if I'm embarrassing you in front of your club friends.\" \n\n\"Don't worry,\" he replied with a grin. \"Any embarrassment here falls directly on your shoulders.\" I took his teasing without getting offended. After all, he was right. \n\n\"Maybe I should give up playing?\" I offered. \n\n\"Now there's no reason to overreact,\" Brad replied quickly. \n\n\"I thought you'd say that,\" I said knowingly. \"How come my playing doesn't seem to bother you any other time except right after we play? You never comment about it during the week.\" \n\n\"What exactly are you trying to say?\" Brad asked with an innocent look. \n\n\"It's simply enough,\" I said with a shrug. \"I think you're afraid I'll quit if you tease me all week. You enjoy trouncing me too much to let that happen.\" Brad fought off a smile. \n\n\"Well, there are so few men left that a man my age can actually beat...\" he began, trying to make his voice sound sad. \n\n\"Bull!\" I interjected. \"You could probably still take half the pros at this course!\" His eyes twinkled as he finally smiled. It was an exaggeration and we both knew it, but not by as much as you would think. \n\n\"We'll continue to work on your game,\" he said after we both downed some more of our drinks. \"You can't be a good CEO with such a poor game.\" I looked at him with a raised eyebrow. He nodded slightly, confirming his decision. \n\n\"I thought you weren't going to choose a new CEO for at least another three months?\" I asked carefully. \n\nIt's not like I didn't want the job, but Brad was a dynamo and I was learning quite a lot from working with him. At my age it was a bit of a shock to find someone I considered a mentor. At least Brad had me by twenty years. It helped. \n\n\"You think I should give it to Karl?\" he asked with a raised eyebrow. I snorted. \n\n\"Don't even joke about that!\" \n\n\"So then, what's the problem?\" Brad asked. \n\n\"Nothing really,\" I replied with a shrug. \"It's only been a few months since you came out of retirement. Are you ready to go back again so soon?\" \n\n\"Not really,\" he grinned, taking another taste of his drink. \"But Cherie isn't happy. For some strange reason she likes having me around. I keep putting her off, but she isn't the most patient woman.\" \n\n\"Oh,\" I said glumly. I really liked Brad. I was going to miss him. \n\n\"What the matter? Don't you want the job?\" he asked with a frown. \n\n\"Sure,\" I smiled. \"But if you go back into retirement, who is going to help me improve at golf?\" \n\nBrad looked at me carefully. I watched as the real reason for my hesitation dawned on him. It was amazing how close Brad and I were in such a short period of time. He smiled and patted me on the shoulder. \n\n\"Oh don't worry, Cherie or no Cherie, I still plan on finishing out the year. I just don't see the point of playing games with the CEO position,\" he replied. \"Besides, she'll calm down once she hears that I've named a successor.\" \n\n\"So, I'll still get a chance to improve my game?\" I asked with a smile. \n\n\"A chance,\" he replied. \"But I wouldn't hold my breath.\" We both laughed again. \n\n\"When are you going to announce your decision?\" I asked. \n\n\"I'm tempted to walk in and do it on Monday just to see Karl's expression,\" he said. If anything, Brad disliked Karl more than I did. \"But I think I'll wait until I decide on who to promote in his place.\" \n\n\"You think Karl will quit when you name me CEO?\" I asked. \n\n\"That or you'll fire him when you take over,\" Brad replied with a shrug. \n\n\"There is that,\" I said, nodding slowly in agreement. \n\n\"You know, I think he'll actually be surprised when he hears. He really is in his own little world,\" Brad sighed. \n\n\"Just out of curiosity,\" I began. \"How come you don't fire him now?\" Brad frowned. He was a direct man who seldom hesitated, but he did so now. \n\n\"Well, partly because I honestly would be happier if I had his successor in place first,\" he said, but then he sighed and forced himself to add, \"And partly because Brad junior and Karl really are good friends. I don't understand it, but at my age I'd rather not take a chance at causing a rift between Bradley and me.\" \n\n\"So, I get the fun job of pissing off your son,\" I said bluntly. \n\n\"Delegation is key if you want to be a good CEO,\" he replied. I just rolled my eyes, causing him to laugh yet again. \n\n\"How are things going with Bethany?\" he asked, changing the subject. \n\n\"How should I know? She refuses to even talk to me anymore unless it's work related,\" I sighed. \n\n\"You really need to get your personal life in order.\" \n\n\"Tell me about it,\" I grumbled. \"Bethany can be an extremely stubborn woman.\" \n\n\"Yes, she can, can't she?\" Brad asked rhetorically, his eyes once again twinkling. \n\n\"You know, you could enjoy my misery a little less obviously.\" \n\n\"True, but where's the fun in that?\" he said, and then changing the subject again by adding, \"By the way, did you get the email from Judy on the Pertol sale?\" \n\n\"Yes,\" I answered. \"You know, my opinion of her has gone up traumatically in the last few months. Pertol was a tough sale.\" \n\n\"She's coming along,\" Brad nodded. \"Judy was always a survivor, but she really is blossoming in the team environment we're developing. I think she'll be happier than you seem to be when I announce your promotion.\" \n\n\"I am happy,\" I insisted, but he just grinned. We ordered another drink and sat for a while longer. \n\n\"I guess it's time for me to go,\" Brad eventually said with a sigh as he looked at his watch. He finished his drink and added, \"I promised Cherie I'd be home in time for an early dinner.\" \n\n\"I'll see you Monday morning,\" I replied. He nodded as he stood. \n\n\"By the way,\" he said just before turning to leave. \"You need help if you're going to break through the barriers Bethany has set up.\" \n\n\"Are you offering?\" I asked. \n\n\"Heaven forbid!\" \n\n\"Well then, thanks for nothing!\" I growled. He laughed and shook his head. \n\n\"Try Jennie.\" \n\n\"Bethany's daughter?\" I asked in surprise. \n\n\"I hear she and her daughter Molly are coming for lunch on Tuesday. It's for Molly's birthday.\" \n\n\"Hmm, that's an interesting thought,\" I said aloud, more to myself then Brad. He just smiled and left. \n\n********** \n\nThe phone rang and I picked it up. \n\n\"They're here,\" a voice whispered secretly. I rolled my eyes. \n\n\"Thanks Sally,\" I replied. Sally was the receptionist and a friend of Bethany's. She was also queen of the rumor mill and the company yenta. \n\nSally visited me a week after Brad's return to ask me if there was anything she could do to help with Bethany. I wasn't sure how she heard about what was going on between us, but at least Sally thought it was a good match. \n\nI didn't initially take her up on her offer, but Brad was correct. I needed help. So I visited Sally earlier in the day and asked her to let me know when Jennie and Molly arrived. I'm not sure how smart that was based on her reaction, but so be it. I was beginning to get desperate. \n\nI stood to go intercept Jennie, but hesitated a moment longer. I still wasn't sure what I was going to say to Bethany's daughter. \n\n'Excuse me, you don't know me, but I like your mother and I was wondering if you wouldn't mind helping me get a date with her?' just wouldn't cut it. On the other hand, I didn't have time to say much else. My thoughts were interrupted by a knock on my door. \n\n'Damn!' I thought, hoping that whoever it was wouldn't take up too much time. I only had a small window of opportunity. I sighed and said aloud, \"Come in.\" \n\nThe door opened and my eyebrows rose in surprise as a younger version of Bethany and a beautiful little girl entered. At first I thought Sally had done more than simply call me, but it didn't make sense considering the stage whisper she used over the phone. \n\n\"Mother was right,\" Bethany's daughter Jennie said without preamble. \"You are handsome.\" \n\n\"Thank you,\" I said carefully. Her directness was a surprise. \n\n\"So, what's going on between you and my mother?\" she asked. \n\n\"Pardon?\" I almost stammered. \n\n\"She refuses to talk about you anymore and has for months,\" Jennie replied. \"But every time I mention your name I can see something in her eyes or hear it in her voice.\" I looked at Bethany daughter and frowned. I needed a moment to gather my thoughts so I turned to the little girl holding Jennie's hand. \n\n\"You must be Molly,\" I said with a smile, ignoring Jennie for the moment. \n\n\"Hello,\" Molly replied. She looked bored. \n\n\"I hear it's your birthday?\" I asked. This brightened Molly significantly as she nodded. I smiled and asked, \"How old are you now? Thirteen? Fourteen?\" \n\n\"Six, silly!\" she giggled. My smile turned into a grin. \n\n\"Wow!\" I said. \"Happy Birthday!\" \n\n\"Do you have a present for me?\" Molly asked, surprising even her seemingly unflappable mother. \n\n\"Molly!\" Jennie snapped, but I cut her off. \n\n\"As a matter of fact, I do,\" I replied, causing Molly to cry out happily and clap her hands while her mother frowned. I handed Molly the bag on top of my desk. She pulled it open and found a wrapped present. \n\n\"I hope you like it,\" I said. \"I haven't shopped for a little girl in years. Not since my daughter was your age.\" Jennie was looking at me oddly as Molly tore through the gift-wrap. \n\n\"She's beautiful!\" Molly exclaimed once she saw the doll I bought for her. I sighed to myself in relief. It was nice to know that it was still a safe bet to buy a little girl a doll. \n\n\"Isn't it a bit presumptuous to buy my daughter a present?\" Jennie asked as we both watched Molly sit at my desk and immediately start playing with the doll. I couldn't tell if Bethany's daughter was really offended or not. \n\n\"Possibly,\" I shrugged. \"But your mother is being rather stubborn and I could use all the help I can get.\" Jennie looked at me carefully for a moment longer before smiling. \n\n\"So, what do you plan on bribing me with?\" she asked. \n\n\"What will it take?\" I asked in reply. Her smile turned into a grin. \n\n\"Oh, this is going to be fun!\" she laughed. \n\n********** \n\nBethany tried not to grimace as she knocked on the door to her daughter's house. Her son-in-law Bob opened it and smiled when he saw her. \n\n\"Are you ready to enter the fray?\" he asked as he kissed her cheek and took the packages she was carrying. \n\n\"Not really,\" Bethany sighed. \"But let's get going. I'm sure Jennie could use all the help she can get with twenty little girls running around.\" Molly had insisted that every girl from both kindergarten classes be invited to her birthday party. At best it was going to be a zoo. \n\n\"It's not that bad right now,\" Bob laughed. \"But the clown is just about done with his show.\" \n\n\"Oh, joy,\" Bethany said soberly. Bob shook his head. \n\n\"We have your hair wrapping stuff set up next to the face painter,\" he said. \n\n\"Face painter?\" Bethany asked in surprise. She hadn't heard about Jennie hiring one of those. \n\n\"Just a friend helping out,\" Bob replied. He avoided looking at his mother-in-law. He wasn't sure Jennie was doing the right thing by getting involved with Bethany's love life, but he knew better than to say so. \n\n\"You know,\" Bethany sighed, thinking about the coming hours. \"I never really liked wrapping hair. I learned it from one of Jennie's friends who worked at an amusement park years ago. Jennie was having a sleep over in high school and I helped wrap the other girls' hair. It became almost a monthly task after that for Jennie and her closest friends.\" \n\n\"You're worried that Molly will like it and ask you to do her hair every time you come over?\" Bob grinned. \n\n\"I don't have a problem doing Molly's hair. She is my granddaughter after all,\" Bethany smiled. \n\n\"Of course,\" he said, nodding sagely. \n\n\"It's all the other little girls. It tires me out just thinking about the possibility of Molly inviting girls over so grandma can wrap their hair,\" Bethany sighed. \n\n\"In that case, you should have said no when Jennie asked.\" \n\n\"To your wife?\" Bethany said incredulously. \n\n\"You mean your daughter,\" Bob replied. They looked at each other and laughed. \"I'll see you later. I'm supposed to be checking on the food.\" Bethany nodded and went to the back door. She looked out and stifled another sigh. \n\nIt was Saturday and she should either be resting or catching up on some of the work that was piling up. Having Brad around again was great, but tiring. \n\n\"Grandma! Grandma!\" Molly cried as she saw Bethany standing by the door. \"Do you like my face?\" \n\n\"It's as beautiful as always,\" Bethany replied with a grin as she forgot about work and resting. Today was her granddaughter's special day. It was only right that she be here to be part of it. \n\n\"I mean the paint!\" Molly frowned, causing Bethany to laugh. \n\n\"Oh yes, it's quite becoming,\" she said, kissing her granddaughter on the top of her head. Whoever had painted the hearts and stars on Molly's face was actually pretty good. \n\n\"Can you wrap my hair first?\" Molly asked. Bethany did an admirable job of hiding her grimace. She was even was able to force a smile on her face. \n\n\"Of course,\" she said. \"You are the birthday girl after all!\" Molly grabbed Bethany's hand and dragged her across the yard to where the hair wrap supplies were set up. \n\n\"I already know what colors I want!\" Molly exclaimed. Bethany was about to reply when she saw who was painting the children's faces right next to where she was set up. She froze. \"What's wrong grandma? Come on!\" \n\n\"You run along Molly,\" Bethany said in a tone that brooked no argument. \"I just need to have a word with your mother first.\" \n\n\"Okay,\" Molly moaned. \"But please hurry!\" \n\nBethany found her daughter clearing plates. Jennie looked up at Bethany and sighed when she saw her expression. \n\n\"Don't start mother,\" Jennie said quickly. \"He volunteered to help out when I visited you at the office on Tuesday and Molly was ecstatic about having someone to paint faces at her party. You have to admit. He does a very good job.\" \n\n\"Jennie,\" Bethany said softly. \"Did you ever tell Bob about that concert you and Sandy went to your freshman year of college?\" Jennie looked at her mother in surprise. \n\n\"Mother, you wouldn't!\" Jennie cried. \n\n\"What was that gentleman's name? Harry? Henry? Harper! That's it, Harper!\" \n\nJennie looked at her mother carefully and realized just how mad Bethany really was. She had to be to bring up the Harper fiasco. It was not one of Jennie's better moments. Bob knew about it, but Jennie's hadn't gone into much detail, at least certainly not the detail that her mother's look promised to share. \n\n\"Mother, this is a rather ugly side of you,\" Jennie said. \n\n\"Nonsense,\" Bethany replied calmly. \"I just think that I could help your relationship with Bob if I described some of your more colorful outings.\" \n\n\"You wouldn't!\" Jennie said. Bethany smiled for the first time. It wasn't pleasant. It was the same one Jennie remembered from her youth when her mother was planning on making a point to her about something she did wrong. \n\n\"I would,\" Bethany replied. \"I think it's only fair that I get involved with your love life now that you think you can get involved with mine.\" They locked eyes until Jennie finally looked away. \n\n\"Okay mother, you win,\" she sighed. \"But he really seems like such a nice guy.\" Bob arrived with a tray of food, but both women momentarily ignored him. \n\n\"He is,\" Bethany replied. \"But that's not the point.\" \n\n\"It's your life,\" Jennie grumbled. \"But just keep in mind that not many men as busy as he is and at his age would be willing to come to a six year old's party and paint little girls' faces for a couple of hours.\" \n\n\"Your point?\" Bethany asked with a frown. \n\n\"It's simply enough,\" Jennie replied. \"Stop being so stubborn and don't blow it! He must like you a lot.\" \n\n\"Jennie...\" Bethany began, but Jennie cut her off. \n\n\"I know, I know,\" she sighed. \"Mind my business!\" \n\n\"Exactly,\" Bethany replied succinctly and then turned and walked away. Jennie watched her mother make her way toward Molly and the hair wrapping area. \n\n\"That was unpleasant,\" Bob said tactfully. Jennie snorted. \n\n\"Actually, it went better than I expected,\" Bethany's daughter replied. \"Shemust really like him.\" \n\n\"Didn't I just hear you promise to stay of out it?\" Bob asked. There was something in Jennie's tone that made him nervous. \n\n\"Yes,\" she agreed. She turned toward him and smiled. Bob sighed. He knew that smile. \n\n\"Just leave me out of it,\" he said. \"I don't want to get on your mother's bad side.\" \n\n\"We'll see,\" she said, not committing to anything. Bob stifled a groan. \n\n********** \n\n\"Hello,\" I said carefully as I continued to paint the little girl's face. I wasn't sure how Bethany would react to my presence, however I wasn't really surprised when she just nodded stiffly and refused to look at me. I sighed and thought to myself, 'Maybe coming here wasn't such a great idea.' \n\n\"Grandma, I want purple, pink, yellow, orange and...\" Molly, who had been waiting impatiently for her grandmother, said excitedly. \n\n\"Molly,\" Bethany interjected. \"Let's limit ourselves to two colors for today and see how it looks.\" I smiled as I watched the two negotiate. They eventually agreed on three colors. \n\nBethany started slowly. She took a few strands of Molly's long straight hair and started wrapping it in one of the colors her granddaughter chose. After a few minutes she began moving faster. \n\nShe quickly drew a crowd of little girls. They made appreciative noises as they discussed the colors they would choose when it was their turn. I saw Bob organize them into another line similar to the one of little girls waiting for me to paint their faces. I was curious on how Bethany learned to wrap hair, but figured asking her now would be a mistake. \n\nI finished painting the little girl's face and another girl sat in the chair. I rinsed the brush and shook my hands to relax them. They were getting stiff. I hadn't painted faces in years. The arthritis didn't help. It sucked getting old. Thankfully it wasn't really bad today and mostly affected the wrist of my opposite hand. \n\n\"So, what does a beautiful little girl like you want me to paint on her face?\" I asked. \n\n\"I like bats and spiders!\" the girl exclaimed. \"Scary ones!\" \n\n\"Oh,\" I said, trying to hide my surprise. I could see Bethany smile slightly out of the corner of my eye. \n\n\"Ill!\" a couple of the nearby girls cried. I tried to dissuade the little girl, but she insisted. Bethany even jumped in and tried to help. \n\n\"Bats and spiders are for Halloween. This is a birthday party! How about a unicorn or carrousel horse?\" she put in. I looked at her and sighed. She wasn't picking easy stuff. The girl turned Bethany's ideas down flat, but some of the other girls seemed very interested. I sighed again. Bethany's smile grew wider. \n\n\"I can't put a spider or bat on such a beautiful face,\" I said, and then asked, \"How about I put a nice scary spider on your arm?\" \n\n\"Okay,\" the little girl said, holding out her right arm. I smiled and reached for my brush. A bat would have been easier, but I preferred spiders. In truth, neither was traumatically hard, just harder then the hearts, stars and moons I'd been getting away with so far. \n\nIt didn't take particularly long to make a 'Scary' spider, even with a web as the background. Bethany was still working on her granddaughter's hair. She was moving fast, but at this rate she'd never finish all of the girls. ",
        "\"Nice spider,\" she said almost grudgingly as she glanced at the little girl's arm once I was done. \n\n\"I just hope no one else wants something like it,\" I replied as the girl walked away and another sat in the chair. This one already had a smiley face on one cheek. \"I have mostly pastels. The black was supposed to be used for an occasional outline.\" \n\n\"I want a unicorn!\" the little girl interjected excitedly. I looked at Bethany with a raised eyebrow. She laughed. \n\n\"I only do unicorn heads,\" I replied. The little girl nodded in acceptance so I rinsed my brushes and reached for the pastel colors. I started on the horn first. It came out pretty good. The head wasn't bad either. \n\n\"Thank you!\" the little girl cried as she looked in the mirror. \n\n\"You're welcome,\" I smiled. \n\n\"That's very nice.\" I turned toward the voice and saw Bethany's daughter standing there. I also noticed that Bethany's was just finishing up Molly's hair. \"You both do a good job.\" \n\n\"Thanks,\" I said. Bethany's just nodded at her daughter the same way she nodded to me when I said hello. I found myself hoping I didn't cause any real damage to the mother-daughter relationship. My concern must have been plain on my face. \n\n\"Don't worry,\" Jennie said with a grin. \"She can only stay mad at me for so long.\" \n\n\"We'll see,\" Bethany snapped. \n\n\"Oh come on mother!\" Jennie grinned. \"I've done much worse then this and you've forgiven me.\" I could see Bethany fighting off a smile. \n\n\"I could leave if you like?\" I offered to Bethany. \n\n\"And disappoint all of the little girls who want their faces painted?\" Jennie quickly put in, frowning at me. She obviously wasn't happy I offered to leave. I ignored her and looked at Bethany. \n\n\"It wouldn't be fair to the girls,\" Bethany finally said. I smiled, and surprisingly she met my gaze and smiled back. The connection between us sparked. Her daughter saw it. \n\n\"I knew you liked him!\" Jennie crowed quietly. The look Bethany shot her daughter was frightening, but Jennie just laughed. \n\n\"I'm thinking that I may be too busy at work to visit for a while,\" Bethany said pointedly. \n\n\"You'll never last that long,\" Jennie grinned. \"Maybe if it was just me, but are you really willing to pass up seeing Molly?\" \n\n\"Maybe,\" Bethany insisted, but I could see her weakening. \n\n\"That's okay,\" Jennie said with a wink at me. \"Bob's mother is due up from Florida in a couple of weeks anyway.\" \n\n\"Ouch!\" I said in surprise. \"You don't fight fair!\" \n\n\"No I don't,\" Jennie agreed. \"I'm a lot like my mother.\" The two women exchanged looks. It was a mother-daughter moment, although I not sure it was a particularly pleasant one. \n\n\"We have customers waiting,\" I prompted Bethany. She looked at the little girl in her chair and smiled. I did the same to the one in my chair. \n\n\"I actually came by to see if either one of you needed a drink,\" Jennie said as we both started working on the girl in front of us. \"I have beer, wine and soda.\" \n\n\"Soda for now,\" I said. Bethany nodded in agreement. \n\n\"Something to eat?\" Jennie added. Neither of us accepted. Jennie disappeared and returned moments later with our drinks. \n\nI finished the girl in front of me a while later and was surprised to see that Bethany was almost done with the girl she was working on as well. It only took a moment to see that she only wrapped a couple of inches at the bottom of this girl's hair. It actually looked pretty good and the girl seemed happy enough with it. \n\n\"I was wondering how you were going to get through all of the girls today with the time you spent on Molly,\" I said with a smile. \n\n\"Well, since it's Molly's party I figured I'd give her the full treatment,\" Bethany smiled in return. \"The rest of the girls will have to settle.\" \n\n\"It seems only fair,\" I said with a shrug. \"I'm sure they'll be happy. You do a good job.\" \n\n\"You're pretty good at face painting as well,\" she said. \"Where did you learn to do it?\" \n\n\"I've been doing it for years,\" I smiled, remembering. \n\n\"What? Is it a side job?\" she asked with a raised eyebrow. \n\n\"No,\" I laughed. \"I only do it once a year.\" \n\n\"For what?\" \n\n\"The Special Olympics,\" I replied, still smiling. \"I started out as a clown.\" \n\n\"And they promoted you to face painter?\" Bethany asked with a grin. \n\n\"Only after years of hard work,\" I explained. We exchanged looks and laughed again. \"So, where did you learn to wrap hair?\" \n\nShe told me and we started swapping stories of the trials and tribulations of raising a teenage daughter. It was particularly funny at times because we had to be careful how we said things. After all, we were still painting and wrapping the hair of impressionable little six-year-old girls. I lost track of the number of face paintings I did as we talked. \n\n\"So, your daughter Carla moved in with you when she was fourteen?\" Bethany asked with a shake of her head. \"That's a hard period in a girl's life.\" \n\n\"I know,\" I sighed. I was sharing far more then I expected to, but I realized that I didn't mind telling Bethany. \"She was boy crazy at the time and was dating a real winner. I think it had to do with her mother's life style.\" \n\n\"What did you do?\" Bethany asked. \n\n\"Well, first I spent two or three months fighting with her to clean up her act. It was pretty much a losing battle until I had some dumb luck. I walked in one day and found her watching a woman's soccer game. I suddenly remembered that she used to play when she was a kid.\" \n\n\"You convinced her to start playing again?\" Bethany asked. \n\n\"Eventually,\" I smiled, and then explained, \"I enlisted the help of a friend of mine. He came by with his daughter who played for the local high school. The three of us started kicking a ball around when I was expecting Carla home.\" \n\n\"Did she take the bait?\" Bethany asked. \n\n\"Hook, line and sinker,\" I grinned. \"It was a month before school started and Carla decided she wanted to try out for the girls soccer team. She had me out every day after work. I think I got in the best shape of my life!\" \n\n\"What happened with the boy she was dating?\" Bethany asked. \n\n\"He wasn't thrilled with Carla new focus on soccer,\" I replied, and then frowning added carefully, \"I think it had more to do with her no longer partying the way she used to.\" Bethany met my gaze and thankfully nodded in understanding. I had no intention mentioning in front of little girls the fact that Carla came home drunk or worse often enough before joining the soccer team. \n\n\"How did you get rid of him?\" Bethany prompted. \n\n\"I didn't,\" I replied innocently. She just looked at me until I laughed and added, \"I did introduced her to Frank.\" \n\n\"Frank?\" Bethany said in surprise. \"Isn't her husband's name Frank?\" \n\n\"Exactly!\" I grinned. \"He was a boy who went to her school. He was also a varsity lacrosse player and a heck of a kid. I met him when one of my neighbors recommended him to mow my lawn. He was a hard worker. I liked him. I still do.\" \n\n\"Wow, that's quite a story,\" Bethany said. \"You did a amazing job.\" \n\n\"No,\" I sighed. \"The only amazing things were the luck I had and Carla. It could have fallen apart at any time.\" I had friends who weren't as lucky as me. One particular came to mind and I sighed. I still remembered the funeral. \n\nWe fell silent for a time. I hadn't planned on opening up so much, but there was just something about Bethany that made me feel comfortable. It didn't stop me from also feeling a little embarrassed about how much I said. Bethany seemed to realize this and left me alone for a while. I finished painting another girl's face and saw that the one with the spider on her arm returned. \n\n\"You want the bat too?\" I asked. The little girl nodded and I grinned. \"Okay, give me your other arm.\" \n\nInstead of doing a quick and simply bat, I decided to do a cave with two or three bats in it. It probably took longer than it should have, but there was something about the little girl that suddenly reminded me of my daughter Carla. \n\n\"Wow!\" the little girl grinned once I was done. Bethany looked over and raised an eyebrow. \n\n\"Remind me to invite you over to paint Molly's face for Halloween,\" she said appreciatively. \n\n\"I'll come over any time you ask,\" I replied carefully. Bethany looked at me and shook her head slightly. She knew exactly what I meant. I almost sighed aloud in relief when she smiled as well. \n\n\"Time for cake and candy!\" Bob called and the little girls went scurrying. Jennie came by as we started packing up. \n\n\"Don't worry about that now,\" she insisted. \"Go wash up quickly. We're going to sing in a few minutes.\" Jennie was gone before either or us could say anything. \n\n\"Follow me,\" Bethany said, leading me to the house. We used the kitchen sink to wash up. I actually needed it more than her. She finished first and waited for me. \n\n\"Hurry!\" she said. \"We don't want to miss the cake.\" \n\n\"You go ahead,\" I grinned. \"I'll be there in a few minutes.\" \n\n\"Worried about having to sing?\" she teased. I nodded and grinned. She laughed and added, \"I'll meet you outside.\" There was no way she was going to missing her granddaughter's cake. \n\nI watched her go. I loved the way she moved. She did things to me. \n\n\"You'd better hurry,\" Bob said from beside me. I was staring at Bethany so intently that I didn't notice him entering the room. \n\n\"Almost done,\" I replied as I washed my forearms. \n\n\"Jennie's lighting the candles,\" he said as he went back toward the living room. He stopped just before entering and added, \"They'll be plenty of time to look at Bethany later.\" I shook my head and he laughed as he reentered the living room. Busted! \n\nI finished washing and dried my hands quickly. I just barely beat Jennie and Bob out of the house. It actually took both of them to carry the big cake. Everyone started singing. \n\n\"Get my camera!\" Bob said to me and pointed with his chin. I looked where he pointed to and saw his camera. I quickly picked it up and started taking pictures. Thankfully, it wasn't one of those complex ones. \n\nIt was digital so I didn't worry about snapping too many pictures. I just kept taking another shot every time the flash recharged. Bob must have put new batteries in recently because I was able to take quite a few pictures. I was carefully to make sure I got one of Molly blowing out the candles. \n\n\"Thanks,\" Bob said taking the camera from me. \n\n\"How many pictures did you take?\" Bethany teased. \"I think it will be hours before my eyes adjust after all those flashes.\" \n\n\"Hey,\" I replied with a shrug. \"They'll be lucky if even one of them turns out any good. I'm not much of a photographer.\" \n\n\"Actually,\" Bob said as he looked at the pictures on the screen in the back of the camera. \"You got a couple of nice ones.\" \n\n\"Just lucky I guess,\" I shrugged. \n\n\"You seem to be lucky in many things,\" Bethany said, remembering our earlier conversation about my daughter Carla. \n\n\"All but one,\" I replied pointedly. Bob laughed. \n\n\"He means all but love,\" Bob explained needlessly. \n\n\"I know,\" Bethany said with a roll of her eyes. \"I'd better go help Jennie dole out the cake.\" \n\n\"It's hopeless,\" Bob said to me with a sigh as she left. \n\n\"Not really,\" I replied. \"It's just going to take a little time.\" \n\n\"Haven't you already known her for almost half a year?\" he asked. I laughed. \n\n\"Bob, you're still a young man,\" I replied. \"As you get older you'll find that some things take time.\" \n\n\"Does age also make it easier to wait?\" he asked. \n\n\"Harder,\" I sighed. \"Much harder.\" Bob burst out in laughter. \n\n\"I hope it works out,\" he finally said once he regained control of himself. \n\n\"Thanks.\" \n\nThe party ended not long after that. I stayed and helped clean up. It took some time. We sat outside at a table once we were done. Jennie opened a bottle of wine. She poured four glasses. Molly was inside playing with her new presents and her best friend who was sleeping over. \n\n\"Good party,\" I said to Bob and Jennie. \n\n\"Every year you go a little crazier,\" Bethany sighed. \"What on Earth are you going to do next year to top this?\" \n\n\"You'll just have to wait and see,\" Jennie replied. Bob groaned. \n\n\"I shudder to think what Molly's sweat sixteen part will be,\" I teased. \n\n\"Thank God we only have one child!\" Bob cried. \"We'd be broke otherwise!\" \n\n\"Um, Bob,\" Jennie began tentatively. My eyebrows rose considerable. I could tell where she was going by her tone. Well, that and the fact that I noticed she hadn't touched her wine. \n\n\"What?\" he asked nervously. He hadn't figured it out yet, but he could tell something was up. I looked over at Bethany. She wasn't really paying attention. I smiled. This was going to be fun. \n\n\"Remember how you were disappointed when we found out Molly was girl?\" Jennie asked. \n\n\"I wasn't really disappointed,\" Bob insisted, but he was a terrible liar. My smile turned into a grin. \n\n\"Well, you've got another chance at having that son you've always wanted.\" \n\n\"What!\" he nearly shouted, but then he laughed and pulled Jennie to him. This brought Bethany focus back to the conversation. \n\n\"What did I just miss?\" she asked in annoyance. \n\n\"Nothing much,\" I teased. \"Just that you're going to be a grandmother again.\" \n\n\"What!\" she cried. \n\n\"That's what Bob said,\" I laughed. Jennie joined me. \n\n\"I was going to wait another couple of weeks before telling you both,\" Jennie said. \"But Bob left such a perfect opening I couldn't resist it.\" \n\n\"Congratulations,\" I smiled. Jennie nodded, but Bob still looked stunned. I refilled his glass of wine. \n\n\"Thanks,\" he said, snapping himself out of it. \"But I think I need something stronger. Would you care to join me?\" \n\n\"No thanks,\" I smiled. \"I have to drive.\" \n\n\"I'll take something,\" Bethany put in and then turned to her daughter and added, \"I thought you were only planning on having one child?\" \n\n\"I was,\" Jennie said. \"Bob and I agreed.\" \n\n\"And?\" Bethany asked. \n\n\"And, I changed my mind,\" Jennie shrugged. Bob returned with two shot glasses and a couple of different bottles. \n\n\"What will you have?\" he asked Bethany. \n\n\"Whatever you're having,\" she replied. He poured two drinks. Father and mother-in-law then toasted Jennie's pregnancy. We chatted for another five minutes before they made another toast. On the third one Jennie stood. \n\n\"You two are not going to do this to me again,\" she said, picking up the bottles. \"I'm not going through what I went through the night I told you I was pregnant with Molly again. I'm too tired.\" \n\n\"Sorry,\" Bob said sheepishly. Bethany frowned, but nodded. \n\n\"Speaking of being tired,\" she said. \"I should probably be going.\" \n\n\"Me too,\" I added. \n\n\"Mother, you just had a glass of wine and three shots,\" Jennie said. \"You're not going anywhere.\" Bethany opened her mouth to argue, but then thought better of it. \n\n\"You're probably right,\" she sighed. \n\n\"I can give you a ride home if you'd like?\" I offered. Bethany looked at me and frowned. \n\n\"It's either that or sleep over. I'm sure Molly and her friend will fall asleep eventually,\" Jennie said pointedly. I looked at her and nodded thankfully. She winked. \n\n\"Maybe I should stay to help with the girls,\" Bethany surprised us both by offering. \"You really need your sleep.\" \n\n\"So do you mother,\" Jennie insisted. \"Bob will stay up until the girls fall asleep.\" Bethany looked at Bob. \n\n\"It's not like I'm going to be able to sleep tonight anyway,\" he said with a half smile. \n\n\"Okay,\" Bethany finally agreed. I smiled and refused to let out the whoop of triumph that threatened. \n\nWe said our goodbyes and congratulated them one more time. I was driving for five minutes before she finally spoke. I don't think it was my presence that was keeping her silent. \n\n\"I feel old,\" she said. \n\n\"I'm not surprised,\" I shrugged. \"Between being tired from wrapping hair all day and the news that you're going to be a grandmother again, it would be a surprise if you weren't feeling that way.\" We fell silent again until my stomach growled. Bethany turned toward me and grinned. \n\n\"Hungry?\" she asked with a raised eyebrow. \n\n\"Yes,\" I acknowledged. \n\n\"I'm a little hungry myself,\" Bethany admitted. \n\n\"We could get something to eat?\" I offered. She looked at me and smiled lopsidedly. \n\n\"I'm not cooking for you again,\" she said. \n\n\"Not tonight,\" I said in agreement. \"But there will be other nights.\" \n\n\"You hope,\" she teased. I could tell that the alcohol was affecting her. She wasn't drunk, but she also wasn't acting so tense around me either. \n\nWe were stopped at a red light so I took a moment to look at her. I don't remember moving, but suddenly we were kissing once again. It was just as amazing as I remembered. \n\nSomeone beeped from behind us and we reluctantly broke apart. At least I did it reluctantly. I think Bethany wanted to continue the kiss as well, but with her I never could tell for sure. \n\n\"Wow,\" I said as I focused on driving. I could feel Bethany's eyes on me. \n\n\"I don't feel so old anymore,\" she said, watching me carefully. \n\n\"Or tired,\" I said in agreement, and then added, \"Where would you like to eat?\" \n\n\"Your choice,\" she said in a way that made me look at her once again. \n\n\"How about my place?\" I asked, surprising myself. Bethany smiled. \n\n\"Can you cook?\" she asked. \n\n\"Do you like Chicken Marseille?\" I asked in reply. \n\n\"You know how to make Chicken Marseille?\" \n\n\"I already have the ingredients at home,\" I smiled. I usually made myself something special on the weekend. \n\n\"I don't think a man has ever cooked for me,\" she said, almost to herself. \n\n\"There is a first time for everything,\" I said carefully. \n\n\"And a second,\" she said cryptically. She was brushing her fingertips across her lips. I found myself wondering what she was thinking, but I knew better than to ask. That didn't stop me from hoping. \n\nWe arrived at my house and I gave Bethany a brief tour that ended at the liquor cabinet. \n\n\"Do you mind if I take a quick shower? I smell of sweat and paint,\" I asked. She shrugged and I added, \"Make yourself comfortable.\" \n\nI jumped in the shower and washed quickly. I was out and dressed in less than fifteen minutes. I left my room and heard music. I smiled to myself as I realized that Bethany found my stereo and my collection of CDs. She chose one of the Sinatra disks. That was a good sign. \n\n\"Here,\" she said when she saw me. She was holding out one of the two glasses she held. I tasted it and smiled. It was vodka with just enough cranberry to add a little color. \n\n\"This new grandchild must be hitting you harder than I thought,\" I said. Bethany smiled and shrugged again. She also took a long pull on her drink. I frowned. I cared for Bethany. I didn't want to watch her get herself souses. \n\n\"Why don't you take a quick shower before we eat?\" I offered. \"It will make you feel better.\" \n\n\"I could certainly use one,\" she agreed, remembering her long day in the sun wrapping little girls' hair. \"But what will I use for clothes?\" \n\nI smiled as I thought of one possibility. She looked at me and knew exactly what I was thinking. Bethany didn't look really annoyed, but she did shake her head. \n\n\"You can borrow some of Carla old stuff,\" I said quickly. \"She won't mind.\" \n\n\"Are you sure?\" Bethany asked. \n\n\"Of course,\" I replied, showing her Carla's room. I gave her a towel and pointed toward the bathroom just before making my way back to the kitchen. I heard the shower go on a few minutes later and smiled. \n\nI started dinner. Bethany took her time in the shower. I was just finishing the chicken when she came out. She was wearing one of Carla's old white tee shirts and a pair of blue sweats. She wasn't wearing any makeup and her damp hair was up in a tight ponytail. She looked amazing and I couldn't help tell her so. \n\n\"Thanks,\" she smiled. \"I could do with some makeup.\" ",
        "\"Nonsense!\" I snapped, causing her smile to widen. \n\n\"Is dinner ready?\" she asked. \"I'm famished.\" \n\n\"Yes, it is,\" I smiled. \"What would you like to drink with it?\" \n\n\"Just water for now,\" she said, and then looked at me meaningfully and added, \"Thanks for offering the shower. It helped.\" I shrugged. \n\n\"I hope you like dinner,\" I said. \"It's my mother's recipe.\" \n\nWe sat down and I served the chicken. Bethany took her first taste and her expression turned to one of surprise. \n\n\"This is very good!\" she said. \n\n\"Don't sound so shocked,\" I said with a frown. She grinned. \n\nThe rest of the meal went smoothly. I was surprised to find that we ate almost all the chicken I cooked. We must have both been very hungry. \n\n\"I have some ice cream for dessert,\" I offered. Bethany groaned. \n\n\"I can't even think of eating another thing!\" she cried. \n\n\"Me neither,\" I smiled. \"Let's go sit on the couch.\" We moved to the living room. There were two couches. I kicked off my shoes and laid down on the longer one. \n\n\"Getting comfy?\" Bethany asked. \n\n\"Join me?\" I asked in reply lifting my arm in welcome. Bethany hesitated, but then shrugged and joined me. We spooned and I smiled. \n\n\"You smell wonderful,\" I said as I gave her a squeeze. \"Let's take a little nap.\" She just snuggled closer. It wasn't long before we both fell asleep. It was still early, but we both needed the rest. The music and good food helped. \n\n\"Joe, it's late,\" I heard Bethany say as she gently shook me awake. I looked at my watch and frowned. \n\n\"I'll say!\" I agreed. \"It's nearly three o'clock in the morning.\" \n\n\"So much for our little nap,\" Bethany sighed, and then asked, \"I don't suppose you are willing to give me a ride home now?\" \n\n\"Wouldn't you rather climb into bed and sleep?\" I asked. \n\n\"Like you'd let me sleep,\" she said sarcastically. \n\n\"Eventually,\" I smiled. She shook her head and went to the bathroom to freshen up. I went into the bathroom in my room to do the same. \n\n\"Joe?\" I heard her call. \n\n\"In here!\" I yelled back. \n\n\"There you are,\" she said and then noticed the hot tub. \"Nice tub.\" \n\n\"I like it,\" I replied. \"Care to soak with me?\" \n\n\"I don't think so,\" she replied, but I heard her hesitation. \n\n\"Okay,\" I sighed leading her out of the bathroom. I then added playfully, \"In that case, I guess the bed will have to do.\" \n\n\"What!\" she cried, but I had already pushed her onto the bed. I jumped in afterward and started kissing her. She was too busy laughing to fight at first. By the time her laughter stopped, she was kissing me back. \n\n\"We aren't going to do this again!\" she insisted, but she didn't push me away. \n\n\"Of course we are,\" I said. \"We've both been dreaming about doing this again since the last time.\" \n\n\"You're wrong!\" Bethany insisted. My lips moved down to her neck and continued to kiss. \"I'm serious!\" \n\n\"Bethany, tell me you don't feel more alive this minute then you have in the three months since we were first together and I'll give you a ride home right now?\" I asked. Bethany looked at me and then sighed loudly. \n\n\"I can't,\" she finally said, admitting the truth. \n\n\"Then just let go and enjoy yourself!\" I said. \n\n\"I shouldn't,\" she argued, but my hand was already under the tee shirt she was wearing. I caressed her breasts and she bit her bottom lip. \n\n\"But you will,\" I smiled. \n\n\"Just for tonight,\" she finally gave in. My lips found hers and we kissed deeply. \n\nOnce she committed, Bethany was every bit as amorous as she was that first night. We both shed our clothes without thought or hesitation. I let my lips travel down her body. I gently tasted her nipples before continuing lower. Bethany gasped when my kisses reached her inner thigh and groaned even louder a moment later. \n\nShe tasted delicious! I continued until her fingers were tangled in my hair, holding my mouth where it needed to be for her to cum in intense pleasure. \n\n\"Oh yes!\" Bethany cried as her body shook. I didn't stop using my tongue until she was done. \n\n\"You sir, are depraved!\" she giggled once as I moved up and lay next to her. \n\n\"You have no idea,\" I replied with a wink. \n\n\"Oh, I think I do,\" she grinned in return as she reached out and took my cock in her hand. I felt her other hand caress my balls. \n\n\"Stop teasing me!\" I laughed. \n\n\"I guess I should return the favor,\" Bethany smiled and began to lower mouth toward my cock, but I surprised us both when I pulled her to me and kissed her instead. Our tongues danced for a few moments. \n\n\"I can't wait any longer,\" I moaned when we finally broke apart. \"First, I want to...no, I need to...\" \n\n\"Me too!\" Bethany cried as she lay on her back and pulled me between her legs. The head of my cock touch her fiery center and we both moaned. I pushed in. Bethany bit her top lip this time and wrapped her legs around my waist. It felt so good to once again be inside of her! \n\n\"Deeper!\" she cried. \"I've been thinking about doing this again for months!\" \n\n\"I thought earlier you said that you didn't dream about me?\" I asked. She grabbed my ass and pulled me deep. \n\n\"I lied!\" she cried as our pelvises bumped. I slowly started working myself in and out of her. Bethany groaned and added, \"You make me feel so good!\" \n\n\"You? I didn't think two people could fit together so perfectly!\" I moaned as I started using long, deep strokes. Bethany's legs squeezed me tighter and tighter as she neared her second orgasm. \n\n\"Come on!\" she half order and half begged. \"I want to feel your cum deep inside me again!\" I was moving quickly now. I leaned forward and gently bit her nipple. Bethany gasped and I applied more pressure. \n\n\"Yes!\" she cried as she came for the second time. I smiled briefly as I watched her before losing control and joining her. We both shuddered for a few moments. I rolled off of her afterward. We lay looking at each other. \n\n\"What now?\" Bethany grinned as she fought to catch her breath. \n\n\"Well, you do owe me, but first I think we should try the hot tub,\" I said as I got out of bed and made my way to the bathroom. I turned on the water and made sure it was the right temperature. I returned to the bedroom to find Bethany lying there looking amazingly sexy and relaxed. \n\n\"Come here,\" she said and I moved to the side of the bed. She turned on her side facing me and took my cock into her hand. She pulled me closer until her mouth could reach my balls. I groaned as her tongue snaked out. I stood there taking as much as I could before pulling away. \n\n\"Where are you going?\" Bethany teased. \n\n\"Well, one of two things was going to happen if I didn't pull away right then. Either I was going to cum and probably fall on the floor, ruining the rest of our night, or I was going to get in bed and forget about the hot tub. I really don't feel like cleaning up the water spill,\" I sighed. \"You still want to try the hot tub or should I just shut it?\" \n\n\"Let's go,\" she said, getting out of bed. Bethany looked like a goddess! I was unable to resist. I pulled her to me and our naked bodies touched as we kissed once again. \n\nWe were both throwing off a lot of heat and my hand drifted down her back to her ass. My cock was rubbing against her stomach so I reached down between us with my free hand and moved it between her legs. She was very wet already. \n\nBethany lifted one leg and wrapped it around me, giving me better access to her pussy. I groaned and slipped into her once again. She wrapped her arms around my neck. \n\n\"What about the hot tub?\" she asked with a sexy grin. \n\n\"I'll clean up the mess later,\" I replied causing her to laugh. \n\nI used both hands to lift Bethany. She raised her other leg and also wrapped it around my waist. I was holding her up as she slowly sank down the entire length of my cock. It wasn't the most comfortable position, but I was too horny to stop now. At least I was able to move us so that her back was against a wall. That helped. \n\n\"Don't you think we're a little old for this type of craziness?\" Bethany said, but she was groaning as I moved back and forth. \n\n\"Speak for yourself, grandma!\" I teased. \n\n\"You bastard!\" she whispered in my ear hotly. \"You'll pay for that!\" \n\n\"Promises, promises!\" I laughed. Bethany went after my ear with her teeth and tongue. I'd always known my ears were sensitive, but not that sensitive! I started driving up into her as the combination of her tongue at my ear and her pussy on my cock drove me wild. \n\n\"I'm going to cum!\" I finally cried. \n\n\"That's it, Grandpa! Fill me with your cum if you're up to it!\" Bethany cried. I was too close to even bother grinning. \n\n\"Oh, I'm up to it!\" I growled as I slammed poor Bethany against the wall and came again. She grunted as she continued to focus on my ear. I could feel her orgasm take her. \n\nBethany's hot fluid washed over my cock and down my thighs as her legs dropped to the floor. We stayed there, leaning into each other and the wall as we regained control of ourselves. \n\n\"The hot tub is probably overflowing by now,\" Bethany said between pants. \n\n\"Damn!\" I returned and forced myself away from the wall and toward the bathroom. Bethany was laughing behind me. \n\nI walked into the bathroom expecting to see a flood by now, but instead saw that the water wasn't much higher than normal. I looked carefully and saw that the hidden drains the guy who sold it to me told me about were actually working. I'd never tested them before. \n\n\"How bad?\" Bethany called from the bedroom. \n\n\"Not bad at all,\" I replied. \"The emergency drains worked perfectly.\" \n\n\"All that worry for nothing,\" Bethany added as she entered the room. \n\n\"Who was worried?\" I grinned. Bethany laughed for a moment, but then frowned. \n\n\"I think I'm going to have a nasty bump on my head from you banging me against the wall that last time,\" she said as she gingerly used one hand to probe the back of her head. \n\n\"Serves you right for calling me grandpa,\" I replied. \n\n\"I wasn't the one who had you pinned against the wall!\" she snapped, but I could tell she wasn't really angry. \"Besides, you called me grandma first!\" \n\n\"We did go at it a little crazily,\" I sighed. \n\n\"Like we were twenty again,\" she grinned and then winced in pain. \n\n\"Maybe,\" I shrugged. \"But I never went at it like that when I was twenty.\" \n\n\"Me neither,\" she mumbled, and then changed the subject. \"Maybe we should just go to bed?\" \n\n\"And not use the hot tub?\" I asked with a raised eyebrow. \"We're going to be achy enough tomorrow as it is.\" \n\n\"Okay,\" she sighed. \"My body could probably use the soak.\" \n\nWe climbed into the tub and both sank to our necks in the water. I turned on the jets and we moved around until we were both comfortable. It was a big tub, but in the end we were lying next to each other. I took Bethany's hand in mine. After a while she rolled toward me. Her face was sweat covered. \n\n\"This feels amazing!\" she said with a smile. \n\n\"You look amazing,\" I replied. \n\n\"You're crazy!\" she said. \"I'm an old lady.\" \n\n\"Weren't you the one who said that you were comfortable with your age the last time we were together?\" I asked. \n\n\"That was before my daughter got pregnant again,\" she groaned. \"And before Brad returned and started giving me so much to do. I'm tired all the time now.\" \n\n\"And you love it,\" I said knowingly. \"All of it, both Brad overworking you and Jennie's pregnancy.\" Bethany looked at me and laughed. \n\n\"So then why am I feeling so old?\" she asked with a raised eyebrow. \n\n\"It could be because your birthday is next week,\" I grinned. \n\n\"How did you know that!\" she cried, but I ignored her question and asked one of my own. \n\n\"So, twenty-nine again?\" I teased. \n\n\"I'd settle for thirty-nine again,\" she snorted. \n\n\"You look amazing no matter how old you are or feel,\" I said. \n\n\"You said that already,\" she smiled, and then laughed and added, \"But that doesn't mean you shouldn't be reward for it!\" \n\nHer hand slipped under the water and caressed my balls. I leaned forward and kissed her, allowing my own hand to slowly massage her thigh. We stayed in the hot tub for quite a while. \n\n\"That feels great!\" she sighed as my hands continued to rub her thigh. \n\n\"Come on,\" I said suddenly and stood. I held out my hand and Bethany frowned in curiosity. She hesitated a moment longer before standing and taking my hand. We left the tub and I used a towel to dry her. \n\n\"What exactly are we doing?\" she asked. I just smiled and led her back to my bedroom. I pointed toward the bed and started drying myself. She lay down and looked up at me as I used the towel to dry my hair. \n\n\"Roll over onto your stomach,\" I said once I was done. Bethany shrugged and moved. I sat next to her and started gently rubbing her back. \n\n\"Oh! That feels nice,\" she sighed. I smiled and continued to knead her muscles. I think she expected that I was only going to massage her back for a few minutes, but she was wrong. \n\nI took my time and started applying more pressure as she relaxed. My hands traveled up and down her spine. I worked out to the edges and back again. I shifted to her shoulders and neck once her back was relaxed enough. I moved slowly until I could feel the muscles there loosen as well. \n\nBethany draped her arms over her head when I started on them. I smiled as I watched her. She was so relaxed that she almost forgot to swallow. I took one of her hands in mine and kneaded it. \n\n\"That was wonderful,\" Bethany said when I finished with her second hand. \n\n\"I'm not done yet. Roll over,\" I replied. I moved back to her shoulders and started rubbing them again. I moved to her arms and then to her chest. I didn't focus on her breasts, but on the muscles underneath them. Bethany sighed again. \n\n\"You're relaxing muscles I didn't even know I had!\" she groaned. I kept switching hands and rested one while the other worked on Bethany's muscles, occasionally using both. \n\nI moved down her body to the front of her thighs. They took a while to loosen up before I moved to her shins. I didn't stay there long before shifting to her feet. Bethany moaned again. \n\n\"Roll over once more,\" I ordered. Bethany didn't even bother replying. She simply did as I said. I started at her feet again and then drifted to her calves. \"Wow! You're calves are tight as hell!\" \n\n\"That's from the heels I wear,\" she mumbled. I spent quite a while on them, working at unknotting the muscles there. I skipped her thighs and moved to her lower back and hips. She groaned when I started kneading the muscles in her ass. I used a slow, deep motion. \n\n\"I'd offer to give myself to you in payment if you hadn't already had your way with me tonight twice,\" she groaned. She really enjoyed having her ass massaged. I chuckled gently. \n\n\"Spread you legs a little,\" I said. Bethany did so without a word. I straddled her calves and gently started rubbing her thighs. I let my hand drifting to the sensitive area on the insides. Bethany gasped. I smiled when I smelled her musk a moment later. I continued for a couple more minutes before lifting her ass slightly. \n\n\"Oh yeah!\" Bethany cried when I rubbed her most private spot. \"I don't care what happened earlier! I want you inside of me right now!\" \n\n\"Soon,\" I smiled and leaned forward and tasted her once again. Her pussy was almost steaming. I continued to rub her thighs, but I wasn't sure it mattered anymore. Bethany was arching her back and giving me full access. \n\n\"I'm going to cum again!\" she finally cried. I smiled and drove my tongue as deeply as it would go. Bethany all but screamed as she came. I continued to use my tongue until she was completely done with her orgasm. She lay spent under me. \n\nI moved up her body and pushed my cock into her soaked pussy with one smooth thrust. She gasped into the pillow and tried to lift her hips higher to give me better access, but I was slamming into her so hard that it made it all but impossible. I grabbed her hips as my own became a blur. \n\n\"Oh my God!\" Bethany cried as she started shaking in orgasm again. I continued to slam in and out of her and she didn't stop cumming. \n\n\"That's some orgasm,\" I said, half to myself. \n\n\"I can't stop!\" Bethany gasped out as she continued to shudder. \n\n\"Good!\" I growled. Her orgasm stretched out and I tried to make it last as long as humanly possible. I was pretty sure she must have had more than one because it continued for quite a while, but I couldn't tell where one ended and the next started. \n\n\"Please stop! I can't take anymore!\" Bethany yelled. \n\n\"Sure you can,\" I insisted. \n\nMy balls were slapping her clit with every stroke. Bethany was now sobbing from the pleasure. Her pussy suddenly seemed to clench around my cock. It wasn't the first time, but it certainly was the strongest. It was almost painful to break free, but I didn't want to stop riding her. \n\n\"Cum in me!\" she nearly begged. I grunted and slammed into her one last time. \n\n\"You wish is my command!\" I cried as I had the best orgasm in my life. \n\n\"Oh yes! Thank you!\" Bethany sobbed as my cum leapt from me and into her. We finished and I could hear her gasping for air, but it still took me a couple of moments to roll off of her. I was that spent. \n\n\"I don't have any words to describe how that felt,\" I said after a while. \n\n\"For a moment, I thought I was going to die and I didn't care,\" Bethany said, describing her thoughts on what happened. \"That's never happened to me before.\" \n\n\"Shush,\" I smiled. \"Close you eyes and we'll talk later.\" Bethany nodded in agreement. Her eyes were already shut. I looked at her for a few minutes and sighed. The truth was hard to face, but even I had to admit it eventually. \n\nI was in love and there was no hope for it. \n\n********** \n\nI woke up and stretched. I found myself smiling as I rubbed the sleep from my eyes. I looked around and saw that Bethany was already awake and out of bed. I stumbled about half awake and threw on some clothes. \n\nShe was on the couch holding a pillow. The television was on, but she seemed oblivious. \n\n\"Good morning,\" I said with a smile. \n\n\"Good morning,\" she replied, but it didn't sound like she was having a particular good one. \n\n\"What do you want to do today?\" I asked. \n\n\"I should be getting home,\" she sighed. I looked at her and shook my head. \n\n\"Absolutely not,\" I said. \n\n\"I can go home if I want,\" Bethany insisted. \n\n\"You could,\" I said in agreement. \"But do you really want to?\" I moved next to her and kissed her before she could reply. It lasted a long time and despite Bethany's words, she returned it. I smiled to myself. She didn't really want to leave. It was just her head getting in the way. \n\n\"Joe, please,\" she said. I looked at her and saw that she was serious. I lost my smile for the first time since I woke up. \n\n\"Bethany,\" I sighed. \"Last night was incredible! You can't tell me it meant nothing to you?\" \n\n\"It meant a lot,\" she replied. \"But that doesn't make it any less of a mistake.\" \n\n\"Are you telling me you're sorry it happened?\" I asked in amazement. She ignored my question. \n\n\"What will Brad say if he finds out?\" she asked instead. \n\n\"He'd be happy for us,\" I replied. Bethany looked at me and frowned. \n\n\"How can you be so sure?\" she asked. \n\n\"Two reasons actually,\" I replied. \"First, I had to give him a reason why I missed our weekly golf outing.\" \n\n\"You told him what you were doing yesterday?\" \n\n\"Of course, I didn't see any reason to lie,\" I said with a shrug. \"Besides, it was Brad's idea that I enlist your daughter's help.\" \n\n\"He didn't!\" Bethany said in shock. \n\n\"He did,\" I sighed. \"But you're daughter came and found me before I could seek her out anyway.\" \n\n\"That sounds like Jennie,\" Bethany said, shaking her head. \"Was it last Tuesday when she visited?\" \n\n\"Yes,\" I replied. \"It was actually pretty funny.\" \n\n\"What was?\" \n\n\"Well, I had Sally inform me when Jennie and Molly arrived. I was still trying to figure out how to approach Jennie when she knocked on my door,\" I grinned. ",
        "\"Sally knows!\" Bethany groaned. \"That means everyone in the company thinks...\" \n\n\"Probably,\" I agreed. \n\n\"This is ridiculous!\" Bethany finally sighed. \n\n\"I agree,\" I said. \"Since everybody knows, why try and deny it or keep it a secret?\" \n\n\"Because you work for my boss!\" Bethany snapped. The words sounded hallow. She couldn't still be using our working together as a reason to keep us apart? Could she? At this point that would be crazy. \n\n\"And he's doing his best to help us get together!\" I argued, trying to figure out how last night turned into this morning. I was too old to be in this much pain over a woman! \n\n\"I think you should take me home,\" Bethany said again. \n\n\"Bethany,\" I said, using my hand to move her chin gently until she was looking at me once more. \"I've fallen in love with you.\" \n\nShe had to return my love. No two people shared the type of night we had without there being love involved. Did they? \n\n\"Take me home!\" Bethany cried, her denial of my love plain to see on her face. It was not the reaction I hoped for considering she was the first woman since my ex-wife that made me feel this way. I really was unlucky in love. \n\n\"So, last night meant nothing to you?\" I asked one more time. \n\n\"I already answered that question. Now are you going to take me home or do I call a cab?\" she snapped. I looked at her carefully and watched as her eyes darted around the room. The truth suddenly hit me. \n\nI kept telling everyone that I would just be patient until she saw the truth. The problem was she already knew it. I loved her and deep in her heart I thought she loved me. I'd finally met someone more afraid of love than me. Her denial of that love physically hurt! \n\n\"Fine,\" I said coldly. \"Get your clothes.\" I had enough. I wasn't going to beg her to stay with me! It wasn't like I was short of company if I wanted it. \n\nThe trip to her house went by in complete and total silence. I couldn't remember being so angry in my entire life, not even when my ex-wife left me. We arrived at Bethany's house in record time. I frowned as I realized that I couldn't remember much of the drive over. \n\n\"Joe...\" Bethany began. \n\n\"Yes?\" I interrupted. My anger was barely suppressed and it surprised me more than it did her, but that surprise did nothing to lesson it. \n\n\"Thanks for dinner and the ride,\" she said. \"Thanks for everything.\" I grunted. Bethany stepped out of the car and shut the door. I hit the gas before she had time to turn away. I noticed her through the rearview mirror. She was looking at my car as I drove away. \n\n\"You finally got what you wanted,\" I growled. \"I hope it makes you happy.\" \n\n********** \n\nSally frowned. She knew something had happened between Joe and Sally, and that it wasn't good. Joe had stomped into the office early. He spent five minutes and then stomped out. \n\nIt should have surprised Sally when Bethany walked out of the office a few minutes after she arrived as well, but it didn't. Sally didn't know what was going on and she found that extremely frustrating. She was tempted to call Bethany's daughter Jennie to find out if she knew what was going on. \n\nBrad walked in late, which was an oddity for him. Cherie had set up a doctor's appointment for him to have his heart checked. It was silly because Brad's heart was as sound as a man half his age, but it was just another of Cherie's little reminders that he was getting old. She did that when she was mad at him. Maybe he shouldn't have spent the last few Sundays at the office. \n\nThe management meeting was supposed to start in a couple of minutes. He ran to his office and dropped off his coat. He was surprised to see that Bethany had left his status folder on his desk instead of bringing it to the meeting. \n\n'Oh, well,' he thought. 'She must have heard about my part in trying to get her and Joe together and decided to show her displeasure. The women I care about are going to be the death of me yet!' \n\nHe walked to the conference room. The door was open, but he saw that only Karl and Judy were present. He walked in with a frown. \n\n\"Have we heard from Joe or Bethany?\" he asked. \n\n\"I haven't heard anything,\" Judy said with a frown. \n\n\"Me neither,\" Karl shrugged uncaringly. \n\n\"It's not like either of them to be late,\" Judy said in a worried tone. \n\n'Unless of course they are together and decided to take a long weekend,' Brad thought to himself hopefully, however it didn't sound right. He called the reception area. \n\n\"Sally, any word from Joe or Bethany?\" \n\n\"They were both in earlier and left,\" Sally replied, and then added carefully, \"Separately. Neither looked particularly happy.\" \n\n\"Thank you,\" Brad said and hung up. \"I guess we should get started without them.\" \n\n\"Sounds good to me,\" Karl said jovially. Brad frowned. Karl was enjoying their absence far too obviously. \n\nBrad opened his folder and groaned at what he saw. The minutes from the last status meeting were there, but on top of them was an envelop with his name printed on it. It was clearly in Bethany's handwriting. Brad was afraid of this. He removed the envelope and opened it, reading it carefully. \n\n\"Is everything okay?\" Judy asked. \n\n\"It seems that Bethany has resigned,\" Brad replied in a monotone. \n\n\"Oh no!\" Judy said. Karl shrugged. He didn't see what the big deal was. Bethany was just a glorified secretary anyway. \n\n\"I can have my secretary call and get a temp in for this afternoon if you'd like?\" he offered and then wondered why Brad turned red and Judy gave him an odd look. \n\nBrad let out a long breath. Now wasn't the time to let Karl's stupidity get the better of him. He reached for the copy of the minutes that Bethany had obviously placed in his folder this morning before she quit. Underneath he found another envelop facing down. He flipped it over and once again saw his name. This time it was written in Joe's handwriting. He was stunned. Brad opened it and read it carefully. \n\n\"What is it Brad?\" Judy asked. \n\n\"Joe's resigned as well,\" he replied. His heart was strong, but a day like this was almost too much anyway. \n\n\"You're joking?\" Judy asked in disbelief. \n\n\"I wish I were,\" Brad replied. \n\n\"This is horrible news for the company,\" Judy groaned. \n\n\"No it's not,\" Karl said, sounding happy and truly satisfied. He didn't know what brought on Joe's resignation, but it probably only saved him a couple of months of employment anyway. He smiled as he added to Brad, \"I was planning on firing him when you made me the CEO anyway.\" \n\nJudy was looking at him oddly again. This time she was also shaking her head, but Karl didn't care. Her time would come soon enough as well. She should never have sided with Joe on so many issues. \n\n\"Karl?\" Brad said, getting the COO's attention. \n\n\"Yes?\" Karl asked. \n\n\"You're fired.\" \n\n\"What?\" Karl said. Brad couldn't be serious! \n\n\"I was willing to put up with you for Bradley's sake, but with Bethany and Joe gone this company has far too many problems to let you continue to coast. I can't afford to keep you no matter how close you are to Bradley,\" Brad sighed. \n\nJudy watched the disbelief dawn on Karl's face. If he were smart, he'd get up and simply walk out, but Karl could never be accused of being that. She watched and waited for the explosion. She noticed that Brad had already dismissed Karl from him mind. He was taking the loss of Joe and Bethany badly, but who could blame him? She wasn't exactly ecstatic over what happened. What could possibly have happened for both of them to quit? \n\n\"You need me old man!\" Karl finally snapped. \"I'm the only one that can save this company! You all but destroyed it by coming out of retirement! That's probably why Joe and Bethany quit in the first place!\" \n\nJudy's eye grew bigger at Karl words. The most frightening part was that he actually believed them. \n\n\"Get out!\" Brad growled, barely controlling himself. \n\n\"I'm not going anywhere!\" Karl replied stubbornly. \n\n\"Oh yes you are!\" \n\nJudy reached for the phone and called security. "
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "hot tub",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/saving-the-company-ch-03"
}