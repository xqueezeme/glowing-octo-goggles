{
    "title": "Duplicity Ch. 06",
    "pages": [
        "Author's note: Immensely grateful for all the feedback. Hope you continue to find this little story amusing and fun. As I may have mentioned, this chapter is not strictly noncon/reluctance but I kept it under this category for continuity. Hope you continue to enjoy the efforts of this amateur writer. Please do send your thoughts and feedback. \n\nCheers all!\n\n***************************\n\nLord Davenport scooped up Evelyn, limp and exhausted, in his arms and carried her to a sofa by the fireplace. The fire had burnt down to smoldering embers. He laid her down and cover her with her wool shawl and brushed a lock of hair back from her adorable sleeping face. \n\nAh, the young! Full of energy one minute, quickly fatigued the next. \n\nHe smiled warmly as he brushed the back of his fingers over the curve of her smooth cheek and swiped the tip of her little nose. Her long thick lashes fluttered for a moment, but her eyes remained shut as she sank further into a deep sleep. \n\nHe left her there to gather up the crumpled leaflets of papers scattered at the foot of his desk. One sheet in particular caught his attention and he laid the rest aside. There wasn't enough light to make out what was written on that sheet, but he didn't need to read it to know its content. It was a neatly itemized list of Lady Evelyn's worth. A stunning dowry that, even with his already considerable wealth, made Lord Davenport catch his breath a bit. \n\nHe remembered the moment Prince Edward produced the list. \n\n\"I trust a man of your stature will neither be intimidated nor corrupted by all this,\" Prince Edward said with a chuckle. \"A lesser man will find excess unavoidable.\"\n\nLord Davenport gave the list a brief glance. What he felt he kept to himself as he kept his eyes tracked on the prince as he tucked the list into the breast pocket of his jacket. \"And what's to be expected from me, Highness?\"\n\nPrince Edward either didn't understand his meaning or feigned ignorance. \"It's yours my lord! Your bride's dowry. Do with it as you like. Hell! Throw it all on a game of cards if you'd like as we both know you're plenty rich.\"\n\n\"And what's do you expect from me in return?\" Lord Davenport asked again. \n\n\"Why, you're simply the best match for my little sister. We share some distant blood do we not? I believe your lineage trace back to the Conqueror. I simply couldn't find another man with your fortitude to suit Evelyn!\"\n\n\"Here I was so certain it was my charming disposition,\" Lord Davenport replied wryly. \n\nThe young prince shrugged off the remark. His expression suddenly turned serious and solemn for once. \"I think the villain who attacked Evelyn might have acted out of sheer opportunity and drunken lunacy, is what I think.\"\n\nLord Davenport's chin jerked and his jaw clenched tightly at the mention of that fateful night.\n\nThe prince nodded in agreement to what he saw on the Marquess' s face. \"Can't be sure of anything though can we? With all the migrants flowing in from the country daily... the ones too drunk and useless to work in those hulking factories they have up north now. They'll happily slit anyone's throat to feed their disgusting appetites. You could hardly blame the filthy animal any more than you can blame blame a dog for biting, seeing a young lady, out alone at night- .\"\n\n\"I assume this ties in with the proposed reform measures somehow,\" Lord Davenport guessed.\n\nPrince Edward held up a hand. \"I'm not one for politics,\" he protested. \"My sole concern is for Evelyn. While part of me is certain it was just some crime of opportunity, I can't be entirely certain can I? Can you, my lord? She'll be yours after all.\"\n\n\"Measures are in place. She's safe in my care,\" Lord Davenport said.\n\nThe prince nodded, but something else still troubled him. \"My little sister is very beautiful as I'm sure you've heard. Well, I don't need to tell you, you know how women are. Like nearly all beautiful women she can be willful and stubborn with a childish streak. Her curse being she's awfully bright too so I must urge you to protect her and keep her safe, even- no! ESPECIALLY from herself. \"\n\nLord Davenport had lowered his chin but flicked his steely gaze up to the prince again. \"Do you propose I cage her, Highness?\"\n\nPrince Edward's expression brightened once more and he chuckled humorously. \"I see I'm on dangerous grounds. I wouldn't presume to tell any man how to handle his own affairs. I'm merely- well I feel it my duty to make you aware of certain facts.\"\n\n\"Speak plainly, sir! Is she prone to madness?\"\n\n\"Not at all! But! Evelyn may from time to time get it into her pretty head to go looking for her mother. I don't need to tell you the litany of reasons why she wasn't successful and won't ever be successful. I think you can guess why such a thing would not be in anyone's interest.\"\n\n\"No doubt,\" the Marquess replied. \"While I can keep her physical person from harm, how do you propose I should keep a daughter from seeking her own mother?\"\n\n\"Lord Davenport ought to have no trouble controlling his wife, I should think. But, I've been told nothing occupies a woman's mind better than children of her own!\"\n\nSome remnants of a shattered cut-crystal tumbler crunched under Lord Davenport's boots, pulling his mind back to the present.\n\n\"Fuck!\" he cursed then looked over at the sleeping Evelyn a short distance away.\n\n\"Nothing is ever done without forethought\" he whispered at her. \"We're all pawns in some great scheme aren't we?\" \n\nLord Davenport sought out a fresh glass and poured himself a splash of deep amber colored whiskey. He looked at the list again, then back at the sleeping young woman before shutting the sheet away in a drawer. With one hand hooked in the waistband of his trousers, he held the whiskey tumbler before him and lightly swirled the amber liquid within the crystal glass. \n\nThe air was permeated with the smell of smoke wafting from the smoldering embers in the fireplace. The lateness of the hour, the smoke mixed with the tangy smell of sweat and sex invaded his senses and made him feel more intoxicated than he ought to. His tired, sore eyes looked around the heavily shadowed room. Nothing seemed real. Nothing... except for her!\n\nEvelyn was all feminine curves and angelic beauty. She slept on her side with her delicate little hands clasped together and tucked beneath the curve of her dewy cheek. Her hair, like ribbons of black silk, fanned around her alabaster skin. The shawl that covered her slipped down her shoulders. Every short breath she took, the swells of her breasts pushed up against the crook of her folded arms. With some effort, he fought the urge to lean down and flick his tongue over her supple globes and suck on her pretty pink nipples. Instead he sat down and laid her slender little feet on his lap. Just then, her lips parted and her little wet, pink tongue darted out to lick her lips. That little motion filling his mind with a vision of two streams of tears roll down the side of her flushed face as he plundered that hot little mouth! His fervent imagination had him imagining her hot breath... her wet tongue... when she wrapped her beautiful, ripe lips around his cock! \n\nHe dragged his free hand over his mouth and shifted on the sofa to relieve the pressure from his aching cock. Not even a larger mouthful of the sharp, liquid fire could quell his primal hunger. \n\n\"There's no telling if it will be just us in this marriage!\" he reasoned with himself. \"One wrong move- should I upset her in any way, she might go running straight to her brother. She hasn't so far- but there's no telling what she might do in future.\" \n\nBy law, not even the king can interfere in the affairs between a man and his wife. That doesn't mean that a displeased father and brother, especially a royal father and brother, can't make life quite unpleasant for a errant husband. \n\nHe set aside the empty whiskey glass in his other hand and took hold of her slender little feet as he watched her sleep. His desire grew as he rubbed each of her icy cold feet in turn, first her long slender toes, then the hollow of of her arches, in slow circular patterns that made her breath catch in her arched throat. Oh those lips-! He nearly tore her gown as he pinched her flesh and caressed the length of her bare legs. When he discovered crusted trails of his dried fluids on her inner thighs he was hard enough to drive nails through a wooden plank!\n\nEvelyn turned over. Her shawl fell away when she flung one arm over her forehead. Her shapely breasts, her smooth stomach and rounded thighs was splayed out for him. He felt the heat emanating from her before he felt her wiry patch of fur and dipped a digit easily into her sopping folds. Her heady scent was simply intoxicating! Yet, he didn't go further. Instead he pulled back and took a deep whiff of her aroma on his slick fingers. \n\n\"Evelyn? Evelyn, wake up.\"\n\nSlowly her thick curly lashes fluttered and her deep blue eyes, sparkling in the dim light, reappeared. \"W-what's happened? \" she asked, groggily, as she sat up and looked around with her sleepy, unfocused eyes. She was jolted fully awake when suddenly became aware of the large man sprawled on the sofa beside her. With her heart pounding and her face ablaze she quickly drew her legs under the hem of her gown. \n\n\"You fell asleep. Not the ideal place for that,\" he said, casually as he scrutinized whatever it was he was rubbing between his fingers. \n\nEvelyn's eyes widened and her lips formed an O. \"Is it morning? The servants will be up- Oh! If I'm discovered like this-! With you-!\" \n\n\"Well damn all that,\" he replied casually \"The fire's gone out. You might be more comfortable sleeping in your own bed.\"\n\nEvelyn suddenly noticed that her fingers were like ice. Somehow it didn't matter. \"And you?\" Evelyn asked in a small, shaky voice.\n\nHis lordship reached out to cup Evelyn's chin so she couldn't look away. \"I'd like to join you, believe me... but it's simply impossible at the moment.\"\n\nA chill tingled down Evelyn's spine under the intensity of his piercing gaze. Then his eyes darkened with desire when his glance dropped to her lips and lingered there. The thrill she always felt when he gave her that look was overshadowed by sudden self-awareness. She had given herself to him! The evidence formed dark stains on her night gown and left a dry, crusty trail between her stiff and aching thighs. There was no going back! Even so Evelyn blushed and turned away just as he swooped in for a kiss. The kiss landed on her ear. He seemed to find her bashfulness amusing as he tilted her chin till she faced him again.\n\n\"Why so bashful all of a sudden, hmm?\" he asked, scanning her face when she wouldn't meet his gaze. \"Where's that fierce Lady Evelyn I first met who could upbraid me with a single look, hmm?\"\n\nEvelyn looked past him to look pointedly his desk. \"What we did, sir- \"\n\n\"What have we done?\" \n\n\"You can't expect me to say it!\" she said, mortified! \"How I must look to you!\" She quickly gathered her shawl from the floor and flung it over her chest. \n\nHis large firm hands closed over her trembling ones and started to methodically rubbed the cold from her fingers. \"You look-rather ravishing. Then again, you were designed to - well, to make men weak, aren't you?\"\n\nHer blush deepened. Again he wouldn't allow her to simply look away or let her pull her hands from his warm grasp. He bend down till his deeply set, steel-blue gaze, so pale and piercingly bright in the dim room, were level with her own. \"Don't turn away, Evelyn. Let me see those alluring eyes... they hide so much from me.\"\n\n\"What could I possibly hide from you? You've seen me- had me- like some savage thing!\" she croaked. \n\nHe let her hand go but, only to lean forward so his lips and his breath brushed hers. Every goosebumps on Evelyn's body rose up. \"We both know how well you guard your secrets. Eventually I'll know them all. Every thought that crosses you mind will be revealed to me- my beautiful little savage!\"\n\n\"Please, sir! Don't call me that!\" \n\nHe expression was almost playful when he tugged on his lower lip with his teeth and pulled her shawl aside. \"What? Call you savage?\" The shawl feel away. \"Your word. Not mine. But I like how savage you look with your hair free. I even like this useless little gown that shows every curve of your body. Don't blush! There's no need to be bashful with me! You know you're beautiful! In future I shan't admire you too much, too often or you'll grow too proud and vain. But tonight, I want to look at you freely! My God! I can hardly fit one of these succulent breasts in the palm of my hand-!\"\n\n\"Oh please! Don't tease me, sir!\"\n\nHe chuckled deep in his throat. \"Don't tease you? Are you sure? Your nipples seem to like it!\"\n\nEvelyn swallowed hard and looked up at him with smoldering desire. \"Then do what you like sir. Only- stop saying these things to me!\"\n\n\"Saying what things?\"\n\nShe squeezed her eyes shut. \"Please don't talk of my looks- and such...\"\n\nHe pulled her closer to him. \"What? You don't like compliments? Well, that's just contrary to everything I know of your sex. Do you hate pretty clothes and jewelry too?\"\n\n\"I-!\" She lowered her fans of thick lashes. \"I'm glad that I please you, sir. I just- find it hard to accept compliments for something that was not my doing-\"\n\nSomething about her response made his smile broaden. \"What curious thoughts must run through your head!\"\n\nThis time when he dipped down to her, Evelyn allowed him to kiss each of her dimpled cheeks, her forehead then her lips. She loved the bitter taste of whiskey on his lips and it sharp fragrance on his breath. She even loved the feeling of his scratchy whiskers across her skin. When he pressed her back on the sofa and forced his enormous body between her thighs, it was the most natural thing in the world for her to spread her legs to him. There was no need for words. Speaking was pointless when his mouth could make her feel like this! \n\nHe was everywhere! With one arm cradling her, his other hand traveled down the length of her in search of her pussy as his tongue chased hers. She clung to his shirt and kicked her legs against the sofa seat. The faint sloping sound his digits made as he worked them in and out of her were in perfect concert to her throaty moans. They can both smell her growing desire, thick, potent, permeate the room but she no longer cared as he uncoiled all her emotions and sent waves and waves of unbridled ecstasy surging through her. \n\nEvelyn utter a cry in protest when he suddenly released her and backed away. To her relief, then alarm, he started to undress! Her heart thundered loudly in her ears at her first glimpse of a man's body... His body! And he was glorious! She thought he resembled a carved statue come to life in that pre-dawn hour. A black-haired, blue-eyed, Greek statue! The silvery moon light even make his skin, rippling with muscles, appear marble-like if not for the short dark hairs covering his strong limbs and chest that tapered into a thin line down his hard, flat stomach to... \n\nThen Evelyn caught a glimpse of his manhood, jutting out from a mass of dark, curly hairs! She quickly looked away but the image of it was imprinted in her mind. It stood proud, nearly the length and thickness of her forearm and... obscenely beautiful!  \n\n\"Do you find me savage too?\" he asked with a playful twitch of a dark brow as he pulled her on his lap.\n\n\"I-\" \n\n\"What?\"\n\n\"I want to please you!\" she said, her voice hoarse and foreign sounding. \n\n\"Good! Because I must have you again. My Evelyn-,' he murmured hotly against her lips. \n\nRather than pushing her down as she had expected, he merely repositioned her on his lap so that her gown bunched up around her waist and her thighs were spread till she sat astride him. He stroked the length of his manhood before aiming it at her scorching, drooling little pussy!\n\nThen he pulled her hips towards him just as he thrust his hips up! Evelyn uttered a deep cry in pain and pleasure when her tender and raw body was forced to stretch around his length and girth once more. \n\n\"Look at me, Evelyn!\" He speared into her again. \"I want you to know it when I'm fucking you!\" \n\nEvelyn did manage to open her eyes with her heart squeezed into her throat. So many indescribable emotions welled up in her and poured down her cheeks as hot tears. Somehow he seemed to understand what she needed! He pushed deep into her in forceful, deliberate strokes. For her the waves and waves of the pain and euphoria didn't lessen. That was what he was to her: agony and ecstasy! \n\n\"Oh-my god,\" she moaned out loud, half out of her mind as his thrusts turned more forceful.\n\nHe growled deep in his throat as his tempo grew more intense. Before too long her legs were starting to cramp and felt like her joints would split apart from being wrapped around him.\n\nAgony! \n\nJust when Evelyn thought she couldn't take anymore, he palmed her supple buttocks and rolled with her till his body covered hers. With great control he teased her and drove her to distraction by alternating his speed, even the force of his strokes. Fast! Shallow. Then deep and slow. When he placed her hands on his hard buttocks and urged her to pull him into her at her determination. He was telling her how to control his movements! Evelyn pulled him in and urged him on! Harder! Faster!! \n\nSuddenly he pulled out of her and had her on her knees! Evelyn gave a little shriek and grabbed at the sofa cushions just as he pulled her hips back to spear himself into her again. She cried out in pain when he gripped her by the neck and around the waist as he drilled into her with a singular purpose. There was little she could do but squeeze her eyes shut and endure as he lost all control! His heat rolled off of him in huge droplets and drenched her hair, her face.\n\nPain! Such sweet pain!\n\nWith a lusty cry he unleashed a torrent of deep, wild, thrusts deep into her! Just when she didn't think he could last much longer, he had one foot on the ground, and reached over her head to grab hold of the sofa and road her with a fury that made the sofa thump and creak. It started to slide back on the floor and Evelyn wondered wildly if the whole thing might collapse under them! \n\nSuch pain! \n\nSuch indescribable pleasure! \n\nThen, she felt him shudder violently just as he uttered a final deep, shout and collapsed over her.\n\nThen, bliss!\n\nBeyond the windows a bird started to chirp it's pre-dawn song. In Lord Davenport's study, the only sounds were that of their labored breaths, panting out of union. Evelyn pushed her mane of hair from her face as she turned her face from the sofa seat, still buried beneath him. She looked behind her and greedily drank in the sight of his muscled back, that rose and fell with his every breath. He always made her think of a great, magnetic, beast. Even in his repose, with his eyes closed, there was still something taut about him. His energy coiled just beneath the surface, as if he could never truly be at peace. But perhaps, momentarily, she had tamed the beast. \n\nEventually Evelyn uttered a tiny moan that roused him. With his eyes closed he shifted his weight from her a bit till they laid with their heads side by side. He was so large he would have crowded her off the narrow seat if he hadn't kept a powerful arm tightly wrapped around her.\n\n\"I should go,\" she whispered after a while. \n\nHe mumbled something indiscernible in response that made Evelyn bite back a chuckle. She leaned up on one elbow and followed her exploring fingers over his broad back as far as she could reach. Her fingers traced over several scars, newer ones over layering older ones on his shoulders and back.\n\n\"So many scars!\" she said, breathlessly. She leaned closer and grew bolder in her exploration. \"They say you were very brave in the war and single-handedly fought off several mercenaries. Is this their doing?\"",
        "His reply was casual and he didn't bother to open his eyes. \"Hmm? Or my rambunctious childhood. Who remembers?\" \n\n\"Some of these appear fresher than others and - so, so -deep and brutal!\" she observed with a shudder. \"I didn't think you had any imperfections.\"\n\nHis eyes remained shut but a corner of his lips curled up. \"That'll change soon enough.\"\n\n\"Not physically,\" she replied with a bashful, adoring smile as she continued to run her fingers, over his body. \n\nHe merely uttered a \"Hmm\" and remained still.\n\nEvelyn heard the chirping bird again. She still made no move to go though she knew she ought to. With her whole heart she wished that this night would never end. Everything's changed between them now. Yet a part of her feared that should she leave him, come morning, he'd return to his cold, cruel self. \n\n\"Will it always be like this? Between us I mean?\"\n\n\"I certainly hope not!\" he said with feigned horror. He yawned loudly, stretched out his arms then propped up on one elbow. \"There won't be much left of me within a month,\" he said through another yawn as he raked his free hand through his tousled hair. \n\nHe reached for her face and ran the pad of his thumb over her lower lip. He eagerly scrutinized her expression when he pressed down to part her lips. On reflex Evelyn darted her tongue around his thumb and beckoned it into her hot little mouth. Her silky tongue caressing his digit, elicited a deep moan from him. He pulled his thumb from her mouth with a pop with a regretful sigh.\n\n\"Never mind,\" he said, at her surprised look. \"I wonder, what sort of life did you have? Before I mean? Where did you live? What sort of company did you keep?\"\n\n\"My lord?\"\n\n\"I want to know about you.\"\n\nIt wasn't a question Evelyn had expected. \"I suppose I had an ordinary upbringing,\" she started. \"For many years it was just Edward and I with our tutors and governesses and servants of course. We wanted for nothing.\"\n\n\"Were you treated well?\"\n\nEvelyn laid her head against his chest and twirled the short dark hairs there between her fingers, while he stroked her hair from above. \"I thought of our old cook just now.\"\n\n\"Tell me.\"\n\n\"She was a pitiful thing. She was such an ugly old thing that everyone said it was a blessing her husband was blind or he would surely run from her in terror. But he loved her so dearly. He sat in the kitchen while she worked and they would talk and laugh for hours. Years later I learned that he wasn't always blind. He once made very good sketches and watercolors. Cook showed me some sketches he drew of her. She was just as ugly, flat-nosed and stout in those sketched as she appeared in life. So you see, he knew what she looked like and still he loved her. Lately, my thoughts often return to them - how happy they were. If I should be half as happy, I think- I think that would be so lovely.\"\n\nLord Davenport felt a strange tightness in his chest as he listened to her story. She didn't see his dark scowl or how his Adam's' Apple Bob in his throat.\n\n\"Then it's a pity you're not her,\" he said evenly. '\n\n\"Sir?\"\n\n\"If only you were ugly and stout then you might have found yourself a blind beggar and you would have been happy in abject poverty too.\"\n\n\"You're teasing me again!\" she said with an uncertain smile as she looked up at his face.\n\nHe leaned back and scrutinized her beneath an arched brow. \"Teasing you? Not at all. I'm simply giving you what you want. It's pity that you want isn't it? Somehow you've romanticized this couple in your mind as the pinnacle of the perfect love. So I pity you that you will never get to experience what they had. I pity you for your youth, your stunning beauty, your every advantage in life. What a curse it is to have every man you meet fall over himself to worship you!\" \n\nEvelyn sat up and pulled away from him. \"You ask me to tell you about myself! I thought you were sincere.\"\n\nSome part of him recognized that his anger was irrational, that he was being unjustly cruel but he couldn't help taunting her. \"And I thought you might have something more interesting in that head of yours! How disappointing for you that you won't have your own noble, blind, lunatic for a husband!\"\n\n\"No!\" Evelyn shouted back. \"How disappointing that YOU'RE to be my husband! Cruel and heartless man! So- so - changeable from moment to moment. ANY man would be more bearable than you!\" She regretted her anger instantly and clasped a hand over her mouth. \"I beg your pardon sir. I didn't mean - let's not quarrel!\" \n\nLord Davenport sat up and planted his feet on the cold floor. For some reason he had flash of Philip's face in his mind's eye. He leaned forward with his elbows on his thighs and dragged his hands harshly over his face. \"We've dawdled long enough. The house will be awake at any moment.\"\n\n\"My lord-!\"\n\n\"Quite alright my dear!\" he spat out as he found his trousers at his feet and quickly pulled them on. \"I'm at fault, really, for asking a woman what she's thinking post coitus. I ought to know by now it's all just a jumble of nonsense in those pretty little heads.\" \n\n\"Sir!\"\n\nHe turned around to stare down at her coldly. \"So I'm cruel and heartless, am I? After, what was it, three or four orgasms? I'll save my efforts from now on for a lady more grateful for my efforts!\" \n\nThen it was his turn for regret. Those words, as soon as he uttered them, felt like the swing of a blade that destroyed whatever amity they had just built. Even in the darkness, Lord Davenport could see her grow ashen. \n\nHis expression and tone softened. \"Evelyn-\" he started to say as he reached out a hand to her to reclaim their easy warmth. He winced when she violently jerked away from his touch. \n\nEvelyn's felt the sting of his words as sharply as if he had struck her! It took her a moment to force back her tears and catch her breath. There could be no mistaking his meaning!\n\n\"I see,\" she whispered breathlessly. \n\nHow stupid she had been! Theirs wasn't a love match. The beast wasn't tamed. Not by her! He had done this with others!... Countless others even and will continue after they're married! Hadn't Lady Ann alluded to as much? In the heat of their passion Evelyn somehow made herself believe - what? That he felt as she did? \n\n\"Sweetheart-,\" he tried again.\n\nEvelyn's anger weltered up and broke through her pain. \"I understand you perfectly. As you said, I'm merely a consolation- here to provide you with an heir. That is all. Marriage is often an arrangement for such a purpose. And once the duty is done, husbands and wives often take lovers do they not? Isn't that what you mean by having a separate life? So we too shall follow the prescribed path, do long as I'm discrete and don't cause you too much embarrassment-\"\n\nWith more roughness than either of them expected he lunged for her and gripped her by the shoulder. If she hasn't been so hurt and angry he might have frightened her. He was on the verge of shouting at her but he abruptly released her and backed away again.\n\n\"Regrettably you'll have to wait a bit!\" he spat out, sardonically. \"Then again, you may already be with child. Let's hope it's a son, shall we? Then we need never trouble each other again!\"\n\nThis time he didn't stop her when she fled from the room and flinched when the door slammed shut behind her. \n\n*********************************************\n\nUrgent business took Lord Davenport from his home just as the rest of the household was rising. \n\n\"Men are impossible you know!\" Mrs. Charlotte Fields complained to her brother and her husband and eyed each of them with an accusing eye. \"-and with the wedding so close-.\"\n\n\"The Whigs and Tories won't simply be set aside their dispute because Lord Davenport is getting married,\" Philip replied dully. \"But don't worry dear Charlotte. He'll arrive at the church on time, as he had said.\"\n\n\"One must do what one must,\" Mr. Field added, banally. \n\n\"Poor Lady Evelyn must feel so neglected,\" Charlotte grumbled. \"Rude man! And I fear she's still not fully recovered from her ghastly ordeal. Have either of you noticed how pale she appeared at breakfast? I urged her to spend the rest of the day in bed till at least teatime. Hopefully those dark circles beneath her eyes will be gone by the wedding.\"\n\nHad Charlotte not been so fixated on her young friend, she would have noticed Philip looked rather pale and sullen as well. He muttered something about being needed elsewhere. Then, to Charlotte's chagrin, he soon left the house too.\n\n\"What could possibly be of such importance?\" Mr. Field said in agreement with his wife with a shake of his head. \"I can never understand the ways of Londoners.\"\n\nLord Davenport, however, did not stay away too long and returned home shortly after Philip rode away from the house. He entered the house with one hand fingering something that he quickly slipped into the breast pocket of his coat. Then he went looking for his household. He found everyone gathered in the drawing room with some maids huddled around Charlotte and Evelyn looking over several polios of fabrics and patterns for the two ladies to look at. Mr. Fields was relegated to a corner, quietly reading the day's papers close up to his cherry red nose.\n\nEveryone looked up when Lord Davenport's large, imposing figure darkened the doorway. His lordship barely greeted his cousins before his attention fell on Evelyn. He had a flashing vision of her in her nightgown with her hair free. But she was the picture of elegance in a grey silk dress with her hair fastened back. She dipped into a sweeping cursey with her eyes cast downwards, her expression serene, but her porcelain skin was flushed to the roots of her hair. \n\nCharlotte had been anticipating this moment with bated breath. She looked upon her cousin and his fiancee and imaged, with romance in her heart, some sort of charming reunion between the handsome couple. All her hopes were dashed when the usually mannerly Lady Evelyn greeted his lordship rather coldly with barely a hello before she returned to her seat. On his part, Lord Davenport barely had time to react when he notice for the first time another woman in the room. \n\nLord Davenport froze! His eyes widened in shock as he came face to face with Lady Ann Seymour! \n\n\"How do you do Lord Davenport?\" his former paramour greeted him, her cat-like eyes gleaming as she came towards him with her hands outstretched. \"You must excuse my intrusion on your household like this but I had to come and wish my dear friend Lady Evelyn well. Allow me to offer you my congratulations as well!\"\n\nLord Davenport darted a quick look at Evelyn then back to Ann again. \"I wasn't aware you were acquainted with each other,\" he said tightly, his voice sounding unnaturally strained to his own ears. \n\nLady Ann inclined her head, gracefully. \"Well,\" she said with a brilliant smile. \"You know with our lot. Sooner or later we'll all become acquainted -or related!\" \n\n\"How true,\" Mr. Fields agreed. \"Hard to meet a stranger in this set.\"\n\nWith Lady Ann occupying Lord Davenport's attention, Charlotte leaned towards Evelyn. \"You've been so pale and withdrawn all day my dear,\" Charlotte said in a low voice full of concern. \"Are you sure we shan't send for a doctor?\"\n\nEvelyn answered with a weak smile, her lips paler than ever. \"Just a bit tired.\"\n\nCharlotte nodded in understanding. \"It must be all the excitement. I remember feeling violently ill before my own wedding. The anticipation! The excitement! But, I assure you there's no need to fear! With time it will all seem quite natural.\"\n\n\"Will it?\" Evelyn asked with her deep doubt written across her face. \"Will being Lady Davenport ever feel natural to me?\"\n\n\"Of course it will! Especially after you've had your first child.\" Charlotte leaned forward to give Evelyn's hand a warm squeeze. \"Then all you'll feel is deliriously happy! \"\n\nEvelyn didn't appear happy though as she cast a quick glance towards the tall, erect figure of the man in question, still engaged in deep conversation with Lady Ann. Actually Lady Ann talked and Lord Davenport fixed his attention on the mantle clock. Evelyn felt her eyes burn and and her chest squeeze oddly to see him standing with another woman. Evelyn remanded herself for being foolishly jealous of her own friend. She quickly looked away again. \n\nCharlotte was still speaking. \"I have no doubt Cousin John will make a wonderful husband and father. All men of fortitude-\"\n\n\"You've been most diligent in telling me of his good qualities, dear Charlotte,\" Evelyn said quickly. \"I don't doubt you at all as I see them for myself. I do have to wonder sort of life we shall have together. Will I be enough for him? How will I bear the responsibility of being his chatelaine? If he should find me wanting-\"\n\nCharlotte reached out to give Evelyn's hand another deep squeeze. \"You dear thing. I know what's brought this on. I assure you life is not a romance where two people fall in deep passionate love at first meeting and everything simply falls into place. Every marriage take times to develop into true companionship. In the meantime, make up your mind to love him, understand him and - forgive him for any of his transgressions. As for the wedding night, I'll come up to your room later.\" Charlotte gave Evelyn a knowing wink and stopped speaking when Lady Ann returned to sit with them. \n\nTea was served and Lord Davenport found himself on the far side of the room with Mr. Fields, while the ladies sat together engaged in soft pleasant conversation. Lord Davenport fixed his gaze on Evelyn and watched her every interaction with Lady Ann closely. Their softly spoken words did not carry over to him, but by their easy manners and warm smiles, he could detect no awkwardness or distress... until she happened to look up and see him! Then her gaze would drop away quickly as a rosy flush passed over her porcelain complexion. \n\nUnable to remain seated a moment longer, Lord Davenport rose to his feet. \"I have some documents I must retrieve before I go out again,\" he explained to the inquisitive looks. He fingered something in his breast pocket. \"I won't be back for supper. My apologies but it can't be helped. Evelyn, may-\"\n\n\"But why? Where are you off to now?\" Charlotte interrupted in dismay. \n\n\"Has it started to rain again, I wonder,\" Lady Ann remarked. \"The roads will be awful.\"\n\n\"I so dislike the smell of the city when it rains and the gutters overflow,\" Mr. Fields added.\n\nCharlotte was near pleading with her cousin. \"Everyone is expected-!\" She gestured to Evelyn Evelyn to join in her entreat.\n\n\"-Matters that couldn't be put off, I'm afraid.. I won't bore you with the details,\" replied Lord Davenport with an apologetic smile. He flicked his glance at Evelyn but she remained stubbornly silent with her eyes cast down on her folded hands in her lap.\n\n\"Important business then?\" Lady Ann asked affably.\n\nLord Davenport could only nod as his attention remained fixed on Evelyn. \n\n\"What could be of such grave importance at this hour?\" Mr. Field asked with a grunt. \"I say, I will never be use to life in town.\"\n\n\"Do you not enjoy it here, Mr. Fields?\" Lady Ann asked. \"There are so many diversions.\"\n\nMr. Field puffed up his chest in self importance. \"Quite! Quite! But I'm a simple creature. I have no head for government or commerce. Speeches bore me. Business galls me. I much prefer the cleaner air of the country and no one is in such a hurry. One can truly appreciate every aspect of life!\"\n\n\"I'm sure all your farm hands are equally at leisure,\" his lordship noted drily, trying not to let his impatience show. \n\nWhether Mr. Field heard him or not, the self-satisfied smile didn't waver from his face. \"I say, half of these important business are just harebrained schemes for charlatans and conmen. I tell you I laughed heartily when I hear some mad fools plan to dig a tunnel beneath the Thames. Dig beneath a navigable river! Indeed! There's sure to be quicksand and God knows what else! And there are those who actually speech of investing in such a venture! More money than brains I tell you!\"\n\nLord Davenport finally dragged his gaze from Evelyn to level his gaze on the rotund little man. \"I've looked into the scheme myself actually,\" he said quite casually \"...among other foolish ventures.\"\n\nMr. Field blew out his cheeks then threw back his head and laughed heartily. \n\nAnn spoke first. \"Is such a thing possible? The force of the river currents will flood any progress in such a feat.\"\n\n\"Is it necessary?\" Mr. Fields asked. \"Are bridges out of fashion?\"\n\nLord Davenport noticed that Evelyn was listening intently on their conversation, her interest peaked. He was suddenly less eager to be off and sat down again, with his long legs stretched out before him. \n\n\"I agree that the accepted designs I've seen are fundamentally flawed. However, I recently encountered an architect who showed me his designs for a rather impressive shield that would push against the water.\"\n\nBoth Mr. Fields and Lady Ann laughed incredulously. \n\n\"A shield?\" Charlotte asked with a blank look on her face. \"Why, that would have to be enormous!\"\n\n\"Does this inventor intend to shield the entire length of the river?\" Mr. Fields laughingly scoffed. \"Who would even think to patent such a thing let alone allow it to be built?\"\n\nLord Davenport rested his elbows on the arms of his chair and steeples his fingers beneath his chin. He stole another glance at Evelyn, whose interest was fully engaged now. \"I'd rather think the whole thing, if possible would be a feat of engineering marvel. The shield's design was inspired a shipworm's shell that are quite adept at boring through submerged wood,\" he said mainly for her benefit,\n\nJust as Evelyn was about to ask something, Mr. Fields spoke up again. \"I simply mean that you seem overburdened, Cousin, if you're being pestered with schemes built on shells and other such nonsense. When you're a man of wealth and influence, every Tom Dick and Harry has some new, nonsensical scheme that will last years, require endless resources and will never amount to much I tell you.\"\n\nLord Davenport flexed his steepled fingers impatiently.\n\n\"Many such projects generally do take years and several false starts,\" Lady Ann agreed.\n\n\"How does one dig underneath a river?\" Charlotte asked, still perplexed. \"How could one even know how deep to dig, or even where to dig without it flooding over immediately? Are the bridges not serviceable anymore?\"\n\n\"It's a hare-brained idea,\" Mr. Field said firmly. \"This is what I mean though. You meet all sorts of tricksters in town, you won't encounter in the country. It's an idiotic risk, too high of a risk! It will just leave the financiers holding useless scraps at the end of the day. Mark me!\"\n\n\"When have there ever been a reward without risk?\" Evelyn finally spoke up \"Much of our modern innovations, even our realm, wouldn't exist if not for risk-takers, the explorers. Those who risk all, do so on the hope to better our world and explore our human capabilities. There's no guarantee that any of it will succeed, but then again nothing in life is guaranteed.\"\n\n\"Well said, my dear!\" Lady Ann said with a smile and patted Evelyn's hand. Lord Davenport merely studied her over his steepled fingers, in his usual impenetrable manner \n\n\"Better keep a keen eye on this one,\" Mr. Field said with a hearty laugh to the stone-faced Lord Davenport. Then the ruddy faced man leaned towards Evelyn and winked. \"Well my dear, I can assure you that your life will be without worry or risks once you're Lady Davenport. As a future duchess you needn't worry your pretty little head even if your husband were to throw handfuls of gold sovereigns out the window each morning.\"\n\nLord Davenport straightened in his chair and looked pointedly at Mr. Fields. \"The future Marchioness of Davenport shan't ever suffer condescension from those beneath her.\"",
        "Mr. Field was visibly flustered. The three ladies could only stare. Lord Davenport wasn't interested in the other man's sputtering reply. \"I only mean to warn you that you won't see a return on your investment!\"\n\n\"If I were to fund the thing, I wouldn't do with the expectation that it'll make me money,\" Lord Davenport said. \"I'd have the shield built just to see that it can be done. Chalk it up to a test of man's ingenuity. If I'm to lose a fortune, better it be on something more worthwhile than a game of cards.\"\n\n\"Oh, but you never lose,\" Charlotte said with a reassuring smile for her cousin. \"If you want to build tunnels under the ocean, I'm certain it will be a great success.\"\n\nMr. Fields, having lost interest in the subject, moved on to more interesting topics related to some new tree he had planted in his yard. \n\nLord Davenport took that moment to leave his chair and move the short distance to Evelyn. She flinched slightly when she felt him lean over her and his hot breath touched the back of her neck. How was it the others didn't feel this scorching heat? \n\n\"Can we speak?\" he asked softly enough that only she could hear him. \n\n\"Aren't we speaking now?\" she replied with her nervous attention fixed on anything else but him.\n\n\"I mean - will you come through to the study with me?\" He touched his hand to his breast pocket again. \"You might find it more comfortable to talk in there.\"\n\nFor a moment her resolve wavered and she thought about going with him but her heart still ached from their last private conversation.. \"I'm comfortable where I am.\"\n\nHis piercing blue eyes plead with her from beneath his heavy dark brows, but Evelyn was determined to remain unmoved. \"Evelyn, I want-\" \n\nShe looked pointedly at the others who took deliberate efforts to not notice them. \"Please don't ask that of me!\"\n\nAfter that no amount of entreaty could make Lord Davenport stay longer. He was still seething when he shut himself away in his study. It was the wrong place for him to put Evelyn out of his mind. He recalled with vivid detail the evening before. Where she stood... how she looked draped across his desk, on that damn sofa... He impatiently rifled through some papers before he finally tossed them aside again with a curse when he realized he was merely shuffling them in his hands without taking any notice of their content. \n\nJust then, the door opened again. \n\n\"What do you want?\" he asked tersely when Ann slipped inside.\n\nAnn pouted playfully. \"Don't be surly, John! You're quite frightening sometimes!\"\n\nHe glowered at her as she pressed her back against the closed door. Ann tilted her head back with an coquettish gaze and slowly ran her fingers down her milky white cleavage to where the scoop of her neckline barely concealed her long, dark nipples. His brows remained furrowed but his eyes grew soften as he followed her fingers down it's path. She had his attention! Then in a slow deliberate movement Ann pushed herself forward and swanned towards him. His gaze followed her swaying skirts.\n\n\"Your cousin Charlotte tells the most charming stories about your boyhood. Hard to imagine you were ever a lanky, awkward schoolboy.\" She turned her head to look back at him over her shoulder and smiled when she caught his lingering gaze! Ann batted her lashes and dragged the tip of her pink tongue across her upper lip. \"Just look at you now!\"\n\nA corner of his lips curled up. \"Did you tell tales of your own?\" he asked smoothly, as he leaned forward with his fists on the surface of his desk. \n\n\"Oh goodness!\" Ann scoffed with girlish giggle. \"Is that why you think I'm here? A bit beneath me to act as the scorned woman don't you think?\"\n\nHis expression didn't change.\n\nAnn twirled around the room and took note of the walls of books and frescos on the vaulted ceiling. \"No silly!\" she stated casually with boredom in her voice. \"No one here knows our history with each other as it was so brief it hardly bears mentioning, don't you think?\"\n\nLord Davenport turned his attention to some papers again. \"Then why are you here?\" he asked with equal disinterest.\n\n\"I know what you're thinking. It was plain on your face when you saw me in there. But no I'm not here to disturb your domestic bliss. You ought to know the way our set works. An friendship and alliance with Lord and Lady Davenport is most beneficial to me. Our dalliance... well, no one knew of it and no one will, not from me. At this point it would do me more harm if your wife finds out and decides to exercise her influences against me. So no, I won't be the one to tell her about our dalliance and upset things... as I'm sure all your former mistresses too will keep your secrets, whoever they may be. We're all attuned to way of these things.\" \n\nHe backed away her when she inched close enough to run a hand over his chest to feel his hard body beneath his jacket. Ann gave a careless shrug as she too took a step back. \"And I do like her, truly I do. Your lady is a kind and sweet, a delightfully simple girl, beneath that stunningly beautiful facade.\"\n\nLord Davenport made no reply as he turned to shuffle through a pile of papers on his desk. \n\n\"Society can be quite daunting for new comers, but you wouldn't know about that. You also may not have noticed that your new wife hides a painfully reticent nature beneath her regal exterior. But I quite like her and I can be useful to the poor motherless girl. With a few words of friendly encouragement, she might be more receptive in her wifely duties. You're not easy to please you know. Poor thing may become quite hysterical by how- well, demanding you can be!\"\n\n\"She knows,\" he blurted out without thinking as he took a seat behind his desk. \n\nThat's when Ann pressed her hands against her belly as though she had a sudden sharp pain there. \"Oh... I see!\" she said, quickly recovering her feigned brightness. \"You simply couldn't resist plucking so fragrant a flower could you? Was the nectar sweet indeed? Did you have to force her or did she come freely on her own?\"\n\nLord Davenport lowered his eyes and absently ran his fingers lightly over the smooth wooden surface. \n\n\"There's nothing quite like the charms of a fresh young ingenue, I suppose, \" Ann continued with her brightest smile. Had he looked up at her then, he would have seen a dangerous glint in her bright eyes. \"Though at one point you weren't so keen on the idea of a- what did you call them- a simpering virgin? Well I can't image there's a man alive who could remain detached from Lady Evelyn's charms.\"\n\n\"Ann-\"\n\nLady Ann was speaking quickly and rather frantically as she tried her best to regain her composure. \"Won't you indulge my curiosity for a bit longer? That's all I ask. I'm of course curious about the woman who replaced me. You must allow me that as you and I never properly marked the end of our liaison.\" \n\nWhen he leaned back in the chair and thoughtful stroked his chin, Ann didn't hesitate to dropped to her knees at his feet. She pressed her face against the back of his hand on the armrest and asked. \n\n\"I know you and u and I weren't meant to last. But I will always have a softness in my heart for you, poor lamb. You're quite obvious with your devotion to her you know, no matter how hard you try to hide it.\"\n\nHe remained silent.\n\nAnn held onto his hand. \"Don't admit to anything then. I know you followed her into her carriage after that dinner some weeks ago. I can't say I blame you. She is most alluring with her aura of mystery. Did you keep her virginity in tack? Not that it matter which door you knock, it's your soon or later. And those lips! So red, so plump! They're made to give pleasure. Tell me, was she eager when you showed her how you love to be adored by a woman, or did she feign disgust at first? They all do don't they? Did she choke on you the first time or did she tilt back her head like a good girl... open her mouth and throat wide to give you unfettered access... like I use to... swallow you, like I use to...\"\n\nHe leap from the chair like a man on fire and backed away from her in disgust. \"You're embarrassing yourself, Ann! Show some dignity!\"\n\nAnn laughed her deep throaty laugh. \"Oh come John!\" she laughed even as she brushed the tears streaming down her cheeks. \"Don't be cross, my beautiful boy! I was just having a bit of fun! You brought it on yourself! If all former lovers looked upon me as you did when you first saw me, why I'd say we'd never have a gathering or more than two or three in any salon in London! You know my humor, how I adore being shocking!\"\n\nHe cursed under his breath, then turned his back to face a window.\n\n\"Temper, temper!\" Ann clucked her tongue at him as she stood up again and brushed off her skirt. \"You'll frighten the poor girl with your surliness, you know. You may not believe that I come to you in genuine friendship, but I offer it to you anyway-\"\n\n\"Lady Ann, I find your idea of friendship extraordinary. You and I did not have a long standing arrangement. And if I recall correctly you've since replaced me with young Henry Wilkes. So I have no sympathy for whatever outrage you may feel you're entitled here. Do you want money? Have your gambling debts caught up to you? If that's the case I'll have my banker-\"\n\n\"Oh my lord Davenport!\" she cried with another bright chuckle. \"Really? You're offering me money of all things? I've plenty of my own, thanks. It is comforting to know your generosity can be counted on should I ever need it. No, I was merely having a bit of fun with you, you silly sod. We had some great fun together, for as long as it lasted. Soon we'll forget it all together, I'm sure.\"\n\nLord Davenport looked as though he was about to speak, but then he merely sighed and rubbed a hand over the back of his head and neck wearily. \n\nAnn continued. \"But, we'll still be forced into each other's society. How are we to get along? You've handled ended affairs before, you ought to know the essential need to keep up appearances. For my end, I intend to regard you as an old dear friend. And as an old dear friend I must tell you that you've grown jaded. Surly. Brooding. It's quite appealing in a lover. But no woman wants to live with a bad-tempered husband, even one as handsome as you!\"\n\nAnn watched his jaw working in tune to a series of unfettered emotions cross his expressive brows. \"So you'll advise me on how to keep my wife happy?\" he asked her with searing sarcasm . \n\n\"Oh you'll need no help there. She'll be happy because you'll tell her she's happy. You'll bend her to your will till she lives simply for your pleasure. Truly, it's what all women want, a powerful man to exert his power over her.\"\n\nHe sneered at that. \"And like a truly formidable women, you're quick to betray your own sex.\"\n\nAnn shrugged off the remark. \"What do it matter what I betray when we all know men truly hold all the power? You do us no favors when you pretend we have any hold over you. It simply gives us a false sense of security. Oh there's plenty of men who claims women have the true power. Some men may even fall under the spell of youth and beauty for a time. But that power lasts for as long as our looks last. Sometimes, even before the first bloom starts to fade, you would have replaced us with something newer, fresher. So in the end, who holds the true power?\" \n\nWith that Lady Ann took her leave. It took Lord Davenport several moments before he noticed she had left the door wide open after her. He had just reached the entryway and was about to shut the door again when Evelyn descended the stairs from the floor above. \n\nTheir eyes locked. \n\nLord Davenport stepped forward with a hand held out to the dark-haired, porcelain beauty before him. \"Won't you say hello to me?\" he asked her. \n\nEvelyn clung to her hurt and anger but her resistance crumbled when her own body simply refused to obey. What last bit of hurt she clung to, melted when his fingers laced through hers and he pulled her into his arms again. \n\nAbruptly, he took her by the hand and lead her purposefully down an empty hallway. There wasn't a soul in sight. Evelyn had to run a little to match his long stride. He had a look of determination about him when, with a quick glance around, he reached for an invisible latch in the wood paneled wall that clicked open to reveal a small closet of sorts. \n\n\"My lord?\" Evelyn had time to utter when she was ushered into the small cramped space. They were suddenly plunged into near darkness and he was on her in an instant! \n\n\"I thought of this all day!\" he said harshly as he held her and buried his face against her neck. \"Oh Evelyn! My l-\" \n\n\"Please!\" she squeaked her protest. \"What if we're found out-?\" \n\nHe tightened his hold on her in response. So many different thoughts fired through her mind. Did he use this closet often for this purpose? Who were those nameless, faceless women? Then his kisses successfully emptied her mind of all thoughts in that warm, musty darkness, and she gave into him. Their ragged breaths sounded primal and deafening in the dark. Surely the sound would have reverberated through the house and someone would come looking for the source soon. Yet, no one did.\n\n\"We haven't much time,\" she heard him mutter. \n\nLord Davenport's urgent fingers tugged at her neckline and his rough fingers palmed and kneaded her naked breasts. She felt his head dip down a moment before his hot, wet tongue drag over a breast, then sucked her nipple, hard! It wasn't long before he rudely spun her around to face away from him and her hands instinctively reached up to brace herself against the rough wooden wall. \n\nHer whole body quivered and turned to liquid when he pulled her hips back firmly against him. For a brief moment he simply kneaded her soft rounded bottom as he pressed forward to grind into her that forced a deep moan of frustration and satisfaction from her. Evelyn didn't have long to wait before he swiftly made his way past her skirts over the sound of his trouser unfastening. \n\nShe cried out loud when he dragged his hard, swollen member the length of her slick gash. A second push had his long, smooth, turgent flesh took her breath away. She was still so tender and sore from their couplings before. At least now she knew what to expect from him. At least she thought she did. There was another dimension, however, to his urgency when he rutted her in that dark little closet. She was barely able to hold her outstretched arms steady to keep herself from being knocked against the wall. \n\nSuddenly, he stopped as they both heard the sound of more approaching footsteps, followed by Charlotte's voice recounting how the flowers had all arrived save three arrangements. All the rugs had been moved.. Now there was just the food... \n\nEvery muscle in his body tensed and he held her tight. They both held perfectly still as they listened to the pitch and fall of Charlotte's voice. He did not keep still for long though. She jumped when his soft lips kissed the top of her shoulder blade. He kissed her smooth skin again then brushed his lips up the side of her neck before he sucked an earlobe into his mouth. \n\nJust outside the door, they could hear Charlotte say to her silent companion: \"-I don't quite understand his urgency to be at Keswick Hall so soon... even wealthy tradesmen are taking wedding trips! Mark my work he'll regret it when she won't be coaxed to her wifely duties at night after he's spent all day galloping about with his land agents and farm hands-!.\"\n\nEvelyn bit back a little giggle. Little did she realize she had squeezed her thighs and slick inner walls around him. He reached up for a handful of her hair and pulled her roughly against him till her head feel back against his shoulder. He muffled a throaty groan in the back of her neck. \n\nLuckily, Charlotte and her companion soon shuffled away. \n\nStill holding her by a fistful of wavy curls in one hand, his other hand made its way between her legs and pressed his finger tips on the flap of flesh there. She wept openly, mindless of anything else but the overwhelmed sensations that engulfed her. Then his fingers massaging her in deep, slow circles, coupled with the feeling of him surging deep into her body made Evelyn so weak that had he not held her, she would have fallen to her knees. He quickly untangled his fingers from her hair and clasped his palm over her mouth to keep her screams muffled as Evelyn climbed the highs towards a blinding, white - hot explosion! \n\n...Evelyn could not recall how much time had passed before she was forced to squinted her eyes against the sudden ray of light when the little closet door opened again. He had straightened his clothes and appeared as he always did: urbane, self-assured. .\n\n\"Wait!\" he called out when she started to leave. He came towards her and smoothed her skirts, then brushed a few stray strands of hair behind her ears. \n\n\"I seem to have a talent for saying the wrong things to you,\" he said to her. \n\n\"I-\" Evelyn didn't trust herself to speak. \n\nJust then he reached into his breast pocket and took out something. She could only blink hard when he slip an enormous pale blue diamond ring on the fourth finger of her left hand. \n\n\"My mother's, this,\" he explained, as he held her hand in both of his. \"Given to her by my father when he asked for her hand. I might have liked the chance to ask for yours- but then you would have refused me.\" He gave a little smile.\n\nShe was at a loss for words, at the ring, at him!\n\nHis dark brows furrowed and his jaw tightened as he studied the sparkling diamond, seemingly uncertain of what to say. \"I told you I won't be an overly indulgent husband but neither ought I be deliberately cruel. Yet I think I have been. Cruel that is. I blamed you for things not in your control.\"\n\nEvelyn still couldn't speak. \n\nHe continued, slightly more hesitant. \"I do want you to be happy. As much as you can with me. I'm afraid I'm a bit set in my ways... Evelyn, I'm trying to apologize!\" . \n\nHe flicking his piercing, icy-blue gaze up to meet hers and caught her once more in their spell. \n\nWhatever he saw in her expression made his confident smile return. He lightly stroked the curve of her cheek with the back of his knuckles once. And just like that, he turned on his heels and walked away.\n\nEvelyn sank into a nearby side chair when her knees gave out from under her. It took quite a bit of time before her pounding heart returned to normal. \n\n*************\n\nSpring was late to arrive but many of the bon ton were eager to remove to their country estate for a respite. Lady Ann had only been at her own country seat for a fortnight before she grew restless again. Thankfully her friend Lady Warwick was thoughtful enough to send her sister Mary to keep Lady Ann company for a bit. To Lady Ann's further delight, Mary brought with her a party of bright young people, that included the newly married Henry Wilkes.\n\n\"I thought you'd be on your wedding trip,\" Lady Ann said in an aside to her young lover.\n\n\"My wife continues on her wedding journey with her mother,\" Henry replied with a shrug. \"I could only stand so many European museums and dress shops. Besides, my father simply couldn't do without me for much longer.\"\n\n\"And where is your father pray?\"\n\n\"In Bath, nursing his gout and glad to be rid of me, surely.\"\n\nThey exchanged a mischievous smile.\n\nHenry took it upon himself to introduce the other two members of their party. Lady St. James was tall and fair and quite pleasing to look at. However, it was her sparkling personality, so open and artless, that when she smiled her broad infectious smile, her whole face lit up and she immediately delighted everyone around her. The other was a Mr. Ainsley Elwood, a remarkably handsome young man, of medium height and stature. His face was almost too beautiful to be masculine if not for his slightly crooked nose and a faint scar dividing his left brown down the middle. He effected the usual fashionable air of indifference but there was underlying intensity just below the surface that marked him as a libertine.",
        "\"Mr. Elwood and I were at school together,\" Henry explained to Ann later. \"Lady St. James is my wife's younger sister. You're surprise I see. The older one, meek, plain and sheltered by a convent upbringing really has nothing but her wealth to recommend her. The younger sister, as you see, possessed the good looks and an easy spirit that guaranteed her an advantageous marriage to my friend Elwood's older brother, Lord St. James. And his lordship's fortune is ever increasing as he's a great favorite at court and a close companion of Prince Edward's. Of course we all know Mary through some connection or other, but who cares about that!\"\n\nLady Ann nodded approvingly. \"As I've often said, in our circle, we're all connected somehow.\" So which of you are bedding Lady St. James then? You or her other brother-in-law? \"\n\nHenry chuckled. \"Neither of us would dare break such familial bonds! But truly, it's not impossible to make her break her marital vows. Like all the low-borne, she's still quite keen to observe the order of precedence and make beneficial connections. I'd say it would take nothing less than an Earl's... or a Marquess' coronet to make her spread her thighs. But, patience my dear, there's a purpose to this little gathering... with the possible exception of poor Mary that is. Soon, all will be revealed to you.\"\n\nAfter supper Lady Ann decided to learn all there was to know about the tall, fair-haired Lady St. James, or Bess as she insisted on being called. Bess was a gentlemen's daughter, who raised herself considerably by marrying the young Viscount St. James. \n\n\"How difficult it must be for you to be without your husband by your side. And no children to comfort you, you poor dear,\" Ann said sympathetically. \"But to be in service to Prince Edward, it's an incredible honor!\"\n\nBess pressed her pretty lips together as her lovely eyes rolled around to think of an appropriate answer. \"Well... His Highness simply couldn't do without my husband's political acumen. Great men are often called to make sacrifices. I've learned to make due with the company of my dear friends like Mary and my family. In fact, after our visit with you we travel to my father's.\"\n\n\"Your childhood home will be different now, after you've been exposed to so much culture,\" Ann said nonchalantly.\n\n\"Luckily our county boasts of several first rate families,\" Bess replied with another broad infectious smile. \"Why my father's land joins the northwest corner of the Marquess of Davenport's country seat. He's often invited to dine at Keswick Hall when Lord Davenport is in residence. I shan't lack for culture or elevated company. \"\n\nLady Ann arched a brow at Henry from across the room in silent salute, then turned her attention once more to Bess. \"You are friendly with Lord Davenport! How wonderful!\"\n\n\"Uhm, good wine, this! And yes, to your question Lady Ann, in a way. Before I was married, Lord Davenport would often ride past our house during the summer months and on occasion he would stop in to call on us. I dare say he's a great favorite with my mother.\"\n\n\"How is it -?\" Lady Ann wondered out loud, then intentionally held a hand over her mouth.\n\n\"Pardon?\" \n\nAnn waved a hand dismissively. \"I often let my thoughts get carried away. You must excuse me my dear. I simply wondered if Lord Davenport had a purpose for visiting your father's home so often. He must have felt it keenly when you married. How could he not when he lost his chance with such a beauty as yourself\"\n\nBess modestly shook her ringlets of golden curls, laughed again and took another sip of wine. \"I heard he's recently taken a wife\" she said instead. \"My father says everyone in the country is most eager for a glimpse of her.\"\n\n\"What's this about Lord Davenport?\" ask Mr. Elwood as he and Henry joined them with Mary following them closely, as eager as a puppy. \n\n\"We were remarking on Lord Davenport's recent marriage-\" Ann replied\n\n\"My father is thrilled to have a proper lady as his neighbor,\" Bess added with a little bounce..\n\nMary chimed in then. \"It just so happens Lady Davenport and I are as close as sisters! I'm happy to answer any of your curiosities about her.\" The last was said with an eager smile at Mr. Elwood, which Mr. Elwood ignored.\n\nA whist was set up and Mary opted to sit and watch, positioned between the two men. Lady St. James cut the cards and passed the stack to Ann who dealt. \n\n\"I saw Lord Davenport once,\" Mr. Elwood was saying with cards cupped in both hands. \"Rather a tall fellow, if a bit too grim. Where was it that I saw him- blimey! I can't recall!\" \n\n\"Elwood here just returned from a long sojourn abroad,\" Henry explained to the ladies, laying down a card to follow the trick. \"He's been away so long he's quite forgotten everything to do with any of us.\"\n\n\"Sojourn?\" Mr. Elwood laughed, rocking back in his chair. \"Good God man! I wasn't on an extended holiday. I don't think we need to hide the fact that I was forced to leave.\"\n\n\"I don't believe I was aware of that,\" Lady Ann replied.\n\n\"Chalk it up to a misspent youth but yes, quite the black sheep of the family, me!\"\n\n\"Did you do something horrid?\" Mary asked eagerly. \n\n\"Absolutely!\". Henry answered for Mr. Elwood to Mary's shriek of delight. \"Now he's forced to return after some devilry with an Italian belladonna was it not? I can proudly say my dear chap here hasn't learned at all from his exile.\"\n\n\"We really shouldn't speak of such things,\" Bess said nervously. \n\nMr. Elwood's sparkling eyes glittered with good humor at his sister-in-law's discomfort. \"What things?\" he asked wiggling his brows at her. \n\n\"Oh don't stop on my account!\" Mary cried.\n\n\"Let's just say, Henry and I share a common predilection that plagues all younger sons. Too much time on our hands and not enough interests to fill the void. While Henry took it on the chin and married- well, ugh-hm! I went another route.\"\n\nHenry played his highest card. He leaned towards Ann. \"Elwood's father, unlike mine, is quite keen to fund his debaucheries. I really ought to increase my wagers on this game!\"\n\nThe conversation soon turned to marriage again. \n\n\"Why haven't you remarried, Lady Ann?\" asked Mr. Elwood. \"It's such a waste for a woman of your beauty, grace and intelligence to remain widowed.\"\n\nAnn studied her cards intensely and looked over the other cards laid out. \"I prefer not to fall under coverture again. Besides my children will want suitable marriages when they leave school. My focus will turn to that. I am quite content with my lot.\" \n\nHenry coughed loudly into his fist.\n\n\"I can't wait to be married and set up my own house,\" Mary said with a wistful sigh towards Mr. Elwood. No one paid her any attention. \n\n\"I say its prudent not to marry unless its absolutely necessary,\" Bess spoke up then and gestured for a footman to pour more wine. \n\n\"Yours is the happiest of marriages!\" Henry protested. \"You have a spouse who loves you so much he is happy to be away months on end so you may never grow tired of him.\"\n\nBess slumped in her chair a bit as she laid down a low card. The wine had made her cheeks rose and her her whole carriage soften. \"I suppose I married for an adventure. Only he's been the only one free to explore-\"\n\n\"Explore what?\" asked Henry playfully. \n\nMr. Elwood's eyes narrowed all of a sudden but then just as quickly he raised his brows and pushed back playfully till his chair tattered on two back legs. \"No need to mince words on account. My brother and I enjoy a cordial relationship, but I wouldn't call us friends. Pretend I am anyone else but your husband's brother and tell us the truth!\"\n\n\"What are you talking about?\" asked a very confused Mary. \n\n\"It just think my sister-in-law has thoughts and feelings she's withholding from us.\"\n\nLady Ann cringed inwardly when Bess burst into another peal of nervous laughter.\n\n\"Don't be rude ol' boy!\" Henry admonished his friend. \"Look, you're making poor Bess quite nervous.\"\n\n\"Marriage is a complicated matter,\" said Lady Ann observing Bess through the corners of her eyes. \"Even in this modern age when every one of the gentry seem to fancy marriage to be based on love.\"\n\n\"As it ought to be!\" Mary declared.\n\n\"Perhaps, but what if Cupid's arrow struck on a lowly porter, Mary? Would you lower yourself and suffer poverty for him?\"\n\nMary's mouth pressed shut.\n\n\"When there are titles and vast fortunes at stake one can't simply reply on love to be the compass,\" Mr. Elwood added.\n\n\"Unless...\" Henry mused. \"one happens to be so powerful and rich that one could simply live in a menage a trois with one's wife and one's true love under the same roof!.\"\n\n\"Such a thing wouldn't be tolerated!\" Bess interjected with her eyes wide and her mouth agape.\n\n\"Wealth and power being key necessities behind such an arrangement!\" Mr. Elwood grinned impishly as the two men exchanged a knowing grin.\n\nMary cried out in scandalized delight. \"I saw that play-what's the name?! Still, I can't imagine anyone doing that! It wouldn't stand, I'm sure!\"\n\n\"I prefer if we changed the conversation to more pleasant topics,\" Bess interjected.\n\nMr. Elwood played his hand and won the next trick. \"Speaking of marriages, I'm sorry I returned too late to see Lady Davenport for myself. Much has been made of her beauty and wit. Though one gash is the same as another- Oh! Pardon me ladies! Blimey! How many points was that?\"\n\n\"Well, they're all quite pretty when they're young and fresh.\" With that Henry played his card.\n\n\"Evelyn does have a peculiar disposition!\" Mary chimed in again. \"I almost felt sorry for her as she didn't seem particularly accomplished at anything musical, though I suppose she does dance rather well. Not as well as me. In fact, my sister, Lady Warwick, was most worried Evelyn would never catch a husband with her odd disposition.\"\n\n\"Then you must be so relieved your dear friend did catch a husband,\" Lady Ann said with a casual smile. \n\n\"They were precontracted,\" Mary' said with a sniff. \"...Luckily.\"\n\nBess won the next trick and she mulled over her remaining cards for a long time before finally tossing one down with a shrug. \"I'm determined to like her and look forward to being received by her at Keswick Hall.\"\n\n\"How exciting,\" said Lady Ann with an even smile. \"When did you receive her invitation?\"\n\n\"I haven't- yet, but I go to my father's in a few days and I expect we'll all be invited to dine with them. Henry, I wish you'd come as well with my sister.\"\n\nHenry gave his sister-in-law a slight bow from his chair. \"I'm afraid I must attend to my own affairs. You must all carry on without me. Do give my regards to Lady Davenport. She was quite charming towards me on the few occasions we met.\"\n\n\"I'd love a chance to meet Lord and Lady Davenport,\" Mr. Elwood said casually. \"Perhaps I'll come for a visit on my way to the seaside. What do you think, Bess?\"\n\n\"You can't mean for that man to play a part in our scheme!\" Lady Ann said later to Henry. \"Your friend is certainly handsome and charismatic but he's crude and looks on every woman as if he means to devour them! Evelyn will not like him.\"\n\nHenry shook his head. \"Have faith. Ainsley Elwood has a proven record to wretch destruction and destroy hearts wherever he goes, believe me!. And since I can't get the job done myself .-\"\n\n\"After that stunt you pulled at the club, I doubt Lord Davenport would let you near his county let alone his wife!\"\n\n\"Sadly, Philip Mallory proved to be a disappointment. Where's he been hiding since his cousin's marriage anyway? Do give Elwood a chance. He can be quite charming when he wants to and he'll serve our purpose well. Trust me.\"\n\nLady Ann wasn't so convinced. \"And have you spoken to him of our purpose?\"\n\n\"Of course not! I'm not stupid you know. I'm learning from you to set the scene and let nature take its own course.\"\n\nLady Ann grimace and she quickly glanced around to be certain they weren't overheard. \"Perhaps not. It seems Lord Davenport isn't satisfied the attack on his wife was a singular, isolated event. He's quietly dispatched a squadron of skilled agents to discover everything there is to learn of that creature you hired. They're meticulously going over every part of that filthy creature's life. Are you quite certain there's nothing in the dead man's possession that might link him back to you... or me?\"\n\nHenry sucked in a breath through his teeth as sweat started to bead across his forehead and roll down his temple. He thought long and hard. \"There's nothing. I swear it! I made certain he never knew who hired him. Since dead men tell no tales-\"\n\n\"He might have mentioned something to someone.\" Ann shook her head. \"We can't take chances. What makes the Marquess of Davenport a dangerous foe is his dogged determination when he's set his mind to something.\"\n\n\"Perhaps he only claims to be investigating the matter to appease his nervous wife?\" Henry asked hopefully. \n\n\"She's quite ignorant of what he's doing.\"\n\n\"How do you know this?\"\n\n\"I have my ways, Henry. Lucky for us that I do. We can't leave things to chance. He must be diverted!\"\n\nHenry didn't take but a moment before a wide smile spread across his face. \"Then I think my sister-in-law will prove plenty useful.\"\n\n\"Don't be stupid! Lady Bess St. James is a pretty girl but she has a marble in the place of a brain. That laugh!-\"\n\nHenry shook his head. \"You sometimes overestimate what attracts a man. But I wasn't thinking of THAT! Let me acquaint you with the often absent Lord St. James-\"\n\nHenry spoke quickly and quietly into Lady Ann's ear. It took but a moment for Ann's feline eyes too to sparkle. \"Then I think we have what we need! But Henry, we must be even more careful for if we do this and we're discovered, we'll be inviting a much more dangerous and catastrophic enemy than even Davenport! \"\n\nHenry clasped his hands together gleefully. \"Then let the games begin!\"\n\n****************\n\nKeswick Hall sat proudly on the high bank of a river that fed into several ponds. It was surrounded on either side by expansive gardens and parkland, and backed by wooded, rocky hills. The structure of the house itself was a fine example of centuries of ever evolving style and tastes. The current outer shell of simplistic English baroque with it's elegant lines, white urns and Corinthian porticoes, belie an inner web of interlocking gothic galleries and Tudor niches. An entire far wing was cordoned off and under scaffolds for more renovation. \n\n\"The Master often invites the brightest young minds to pursue his collections and share with him their discoveries and inventions,\" explained the head housekeeper, Mrs. Evans, with a stone face as impassive as her master. \"That part of the house will be used as a laboratory of sorts.\"\n\nEvelyn's shaky speech to the staff assured them she wouldn't interfere with the mechanics of their day to day. And from the reception she received she had a feeling none saw her presence as the new mistress as a threat or disruption. Every part of the house and estate was impeccably maintained with military precision by a well-trained staff with the singular devotion to the Marquess of Davenport's desires and tastes. \n\nIn her letters to her brother Edward, Evelyn spoke of nothing but the lush surrounding lands with it's hills and ponds where there was plenty of game and fish. To Charlotte, Evelyn praised Keswick Hall with platitudes of praises for the art collection, the beauty of the whole place. To her friend Lady Ann, Evelyn allowed herself to let some of her uncertainty and loneliness seep through. \n\nEvelyn wrote in her letter to Lady Ann: \"Country life is not as peaceful and idyllic as one might think. There's a litany of building projects all around. I won't bore you with the details of every building project here at the Hall or down at the village. I can't pretend to understand the work behind irrigating farm lands. Suffice to say everything is done under my husband's direction and scrutiny. He seem to thrive in the midst of chaos, so I've made it my duty to simply stay out from underfoot.\"\n\nThat letter was written and rewritten till Evelyn was satisfied it wasn't full of self pity. She told herself she simply had no right to complain. In the month they'd been married, Lord Davenport kept his word and never once spoke harshly to her. Then again, he rarely had an opportunity to speak to her for any length, when he was home at all. \n\nThree days after they arrived at Kenswick, he was called back to London for a fortnight. When he returned for a mere week, he was called away again. The days he spent at Keswick, compounded matters at the house or in the surrounding lands required nearly all his attention. In heavy rain or fog, he would ride out early and wouldn't return till late at night. In the short intervals that he was home, he in constant motion, marching in and out of the house dispensing orders to the butler or his own valet. Land agents, solicitors, bankers were constantly streaming in and out of the billiard room or his lordship's study. Several times, after Evelyn had dined alone, she would walk past the billiard room to hear the rumbling of a rousing conversation. Through the crack in the door she saw her husband always with one or two men, under a plum of cigar smoke, cracking a cue across the table. \n\nEvery now and then Evelyn caught him staring at her with his inscrutable steely-blue glare through that door, or from a window of his study while she was out walking the gardens. That look never failed to set Evelyn's heart aflutter and made her inside turn to liquid. She lived for that brief hour, late at night, when he finally came to her bed. That was the only place when they were together, uninterrupted where no words were needed. For a brief time she had his full attention on her. But just as soon as he was finished with her, she could see his mind wander elsewhere. Those moment when he gave her a final caress and left her bed for his own were the worst for Evelyn. The feeling of abandonment was palpable. More than once she cried herself to sleep, but at least, when he was in the house, she slept. \n\nThree days after they arrived at Keswick, Lord Davenport left again. Almost immediately, Evelyn had the eerie feeling she was being watched constantly, even when she knew she was alone. At night, when the last scullery maid had gone to bed, the foreboding silence took ghostly shapes that lumbered past her chamber doors. When Evelyn called out and flung the doors open, there was no one there! \n\nThat night, Evelyn had a dream. It was a recurring dream from her childhood. Against an angry dark crimson sky, a giant, bald oak tree spread out it's mass of snarling bald branches over a hill of slug and slim. Beneath it stood a lone woman dressed all in black, her face shrouded and obscured beneath a veiled of dark netting. When Evelyn saw the woman, she felt an instant rush of longing. Evelyn would always run towards the dark lady, only her legs would not move. She looked down realized that her legs had sunk into the marsh with tall reeds wrapped around her ankles to keep her in place. As Evelyn watched, terrified, the dark lady, turned to leave. Evelyn screamed and screamed with her whole heart to call the woman back! But no sound came from her throat. And no amount of tears could make the woman turn back! \n\nThe moment Lord Davenport returned after a long fortnight, the house cast off its gloom and filled to the rooftop balustrade with life and light again! But even his intensely overpowering presence could not stave off her nightmares. That first night of his return, after they had made love, Evelyn dozed off immediately. The dark lady rose up before her underneath that same old oak tree. Once more Evelyn tried to run to her, but once more her legs wouldn't move. When the dark lady turned to go, Evelyn waved her arms wildly to call her back. Suddenly the giant oak's branches descended upon her! It's giant branches reached out and told ahold of her arms. Evelyn screamed in terror and fought back. The branches turned into massive strong hands that was pushing her down into the marshland at her feet. Evelyn cried out again and tried to tear herself from the beastly grasp! ",
        "\"Evelyn! Evelyn, wake up!\"\n\nEvelyn forced her blurred eyes open and looked up into Lord Davenport's crystal blue eyes. It was his hands holding her by the arms. His arms that drew her against him enfolded her into his warm embrace. With lingering terror and sudden relied, all she could do was cry against his bare. broad chest as he stroked her hair and shushed her.\n\n\"Oh what am I to do with you? Hmm poppet?\" he asked. His word were playful but his voice was gentle and soothing. \"Still having nightmares like a child? Come! No more tears now. I'm here!\"\n\nEvelyn clung to him as he rocked her as if she truly were a child. \"It's always the same,\" she whimpered against him as an image of the snarling oak flashed before her. \"Always the same...\"\n\n\"Tell me about the dream.\"\n\nShe hesitated, certain that he mock her, but he was quite determined to have her tell him every detail of the awful dream..\n\n\"You've had this dream before. When you were first brought to my house in town, you were feverish for two days. I've heard you repeatedly calling out to some lady to stay awhile. Is it the same dream?\"\n\nEvelyn's overwrought mind tried to make sense of what he said. Lord Davenport at her sick-bed? He was there? Did Charlotte or Philip ever mention it? But her present terror soon pushed all other thoughts from her head. \"Yes. I've had the same recurring dream since childhood. \"\n\n\"This veiled woman, is she someone known to you?\"\n\n\"I think so. I can't be certain.\"\n\n\"Evelyn, do you think she's perhaps your mother?\" he asked quietly. \n\nEvelyn bite her lips and slowly nodded. \"I believe so but I have no clear memory of my mother or even a likeness to confirm it.\"\n\n\"Ah but you do,\" he said to her as he cupped her face in his palms and looked upon her admiringly. \"You see it every day in the mirror. Except for the color of your eyes and those dimples, there's no other resemblance to the king that I can see in you. I think you know this. Is that why you don't like compliments to your beauty?\"\n\nThat struck a deep core in Evelyn and her face crumpled. \"How can anyone feel pride for resembling a whore,\" she choked out and hide her face. He will surely say something horrible to her now and she steeled herself again it.\n\nLord Davenport merely stroked her hair gently. \"Is that how she was described to you? Listen to me Evelyn. Sometimes, in life, certain things happen- between men and women it- defies simple explanation. I wouldn't be so harsh on a woman whose face you can't remember, who you've never known.\"\n\nHer voice was small, hesitant but hopeful. \"Is it possible, after so long now- is it still possible to find her?\" She quickly looked up at him. Her large oceans of dark blue pleading with him. \"If you would help me, it may be done more discreetly and no one will ever know. I just - I have to- its hard to explain why but I need to know, at the very least her name.\"\n\nHe knew she would make the request, had anticipated that it would come, so he knew exactly what his reply would be. \"There's no way of knowing what is possible and what isn't until an attempt has been made. I think you've attempted to find her several times already. You, asking me this now means you've made no discovery yet.\"\n\nEvelyn nodded. \"There's not a letter, no memento to go on - no trace at all.\"\n\n\"And there may never be. And if there were, what if her discovery brings you no peace because she's in a worse than what you can imagine?\" \n\nShe looked up at him with large, brimming eyes. \"Do you think-?.\"\n\n\"I don't know,\" he admitted to her. \"I'm merely floating the possibility that her discovery may cause you more pain. If she lives, you discovering her may cause her pain as well. Perhaps, the past is not something she wants revisited.\"\n\n\"But it may not!\" she insisted. \"I can't know for certain, as you say. The past shouldn't be so painful... not for everyone!\"\n\nHe took her hands and kissed her fingers. \"Life is still full of hope and infinite possibilities for you isn't it? Cynicism hasn't touched this unblemished brow.\"\n\nEvelyn glanced over to his bare shoulders and let her fingers trace the faint indent of an old scar there. \"And that's why you won't speak of your past?\"\n\n\"I seem to recall telling you quite a bit,\" he gently reminded her.\n\n\"Briefly, and in broad strokes.\"\n\n\"Stiff upper lip sweetheart. Revisiting unpleasant memories in detail serves no purpose, Evelyn. I've not reached the time in my life for reminiscing.\"\n\n\"Not even to ease your mind and relieve whatever burden it is that you carry in your heart?\"\n\n\"Too many men I know fall into the deep abyss of wallowing, till they can't crawl out again. Simply because they've convinced themselves that the past weighs too heavily on them to carry forth.\"\n\n\"Your free will not let you be hampered by a bit of introspection,\" Evelyn argued. \"Our past may inform our future even. I think by not exploring the paths we've traveled, the choices moving forward is much too limited, don't you think?\"\n\nHis gaze drifted from her eager upturned face to her pressed pressed up against his chest then up to her glossy, pillowy mouth that hung slightly open. \n\n\"I think that was the very speech Pandora gave too,\" he said with a little smile. \n\nThe air crackled with the sudden surge of carnal energy when he leaned down to urge her lips apart with his tongue. He leaned into her for a bruising, breathless kiss then backed away slightly to nibble on her lower lip. From her trembles and moans, he knew she wasn't thinking of anything but what he was doing to her.\n\nThat night, he stayed with her and held her till she fell asleep again. He stayed the following night too. Till the fifth night Evelyn slept through the entire night without disruption.\n\nThen he was to leave again and Evelyn nearly flung herself at him to beg him to stay or at least take her with him. But she didn't. He had been so kind and gentle with her since they married, but she didn't trust that his old self wouldn't return. Instead, Evelyn watched him ride off down the gravelly path on his magnificent grey steed with a great lump in her throat and tears brimming in her eyes. \n\nLuckily the weather started to warm up and all the flowers in the rolling fields blossomed into a carpet of rich colors. Evelyn took to taking long walks beyond the gardens to the fields near a fishing pond. \n\nOne day she happened upon a young nobleman, with his hat in hand, watering his large chestnut steed the pond.\n\n\"Hello, Ainsley Elwood!\" she called out as she drew nearer.\n\nThe young man turned and his handsome face broke into a wide smile. \"Lady Davenport!\" he shouted back and greeted her with a deep, courtly bow. \n\n\"Such formalities between old friends?\" Evelyn asked and stretched out her gloved hands. \"I'm so very glad to see you again, I could barely keep from running from the house when I got your note. How long have you been back dear Ainsley?\"\n\nMr. Elwood winked at her as he held her hands to his lips. \"Remember, I'm not the sort of man any reputable Lady should call her friend., Evie. Not in public.\"\n\nEvelyn's smiled happily. \"Luckily I've always believed true friendship trumps reputation.\"\n\nMr. Elwood squeezed his eyes shut as he pressed another firm kiss on the back of her hand. \"My dearest lady. You're a good girl, Evie. The best I've ever known. I wish I were a better man, worthy of you.\"\n\nEvelyn openly laughed at him. \"Worthy-! Oh Ainsley! Still such a rake!.\" Evelyn went to the dark chestnut colored horse to pet it's mane. The horse turned its neck to nuzzle her a bit then returned to the water again.\n\nMr. Elwood turned to rub his horse's mane too as the beast continued to drink. \"All in service to my king,\" he said cheerfully as he brushed some hay out of the beast. \n\nEvelyn grew somber and bit her lower lip. \"Are you still? When I heard you've returned home, I assumed that's all behind you.\"\n\nThe man beside turned to her and smiled roguishly. \"Were you worried for my safety, sweet Evie?\"\n\n\"Don't flirt!\" she retorted. \"I know better than to worry about you. You've always been resourceful. Still I don't have to like the nature of what you do, always in the shadows, always dancing on the edge of danger. And no, I know nothing of the specifics of what you do. Just tell me you've returned for good!\"\n\nAinsley Elwood donned his hat again and looked out onto the rippling water, suddenly quite serious. \"Well, I don't know if that part of my life could ever be behind me. I'm more useful to his majesty as a drunken libertine rather than who I am. But who am I? There's no clear line between the man and the facade anymore. ... Gosh it's good to see you Evie! I won't tell you you're more beautiful than ever as I know you hate that, you odd little thing. And now you are married! I'm terribly pleased for you- Should I be pleased for you? Is he good to you? \"\n\nEvelyn turned away to wiped the horse hairs from her gloves on her skirt. \"Do you know my husband? Have you met him?\"\n\n\"I've not been formally introduced but I know him on sight and by reputation. Not a bad sort. He is amongst a few whose support is key to both the Tories and the Whigs on this new reform measure. I saw him several times at his club in London, always in the middle of some heated debate.\"\n\nEvelyn studied his way closely. \"Is that your way of telling me, he hasn't deserted me for someone else?\" Evelyn quipped. \"I'm sure it's common knowledge he's often away from home.\"\n\nMr. Elwood merely folded his lips inwards into a sheepish smile. \"The thought has crossed my mind that - you might worry. He's away too much for a newly married man. Still, I'm sorry if I offended you with my insinuation. Uncovering secrets are almost second nature to me now. But, I can happily report legitimate business keeps your husband from you, not some over-tressed tart.\"\n\nEvelyn nodded and exhaled deeply. \"I know you always have my interests in mind.\" She lowered her eyes to the ground briefly before looking back up at him again. \"And about that matter you and I spoke of - is there any news?\"\n\nMr. Elwood shook his head, no. \"Certain matters are of public record, but other things are kept well hidden. I've tried Evelyn, but even Edward thinks its pointless to pursue it further. Your mother, whoever she may be, simply does not wish to be discovered.\"\n\nA deep blush rose up in Evelyn's cheeks but she nodded gravely. \n\n\"I should go,\" Mr. Elwood said as he pulled his horse from the water's edge and swung himself up on his saddle. \"It would be terribly hard to explain this if we're seen.\"\n\n\"Then you must come up to the house and pay a proper call!\" Evelyn said, smiling up at him brightly once more. \"I won't have you ride off without offering you tea.\"\n\n\"Sweet Evie! Perhaps another day. I suppose I wouldn't mind if you told your husband about our friendship, if the need ever arises. But to others, well - you know why. Oh! I came today with another purpose! Has Edward written to you? Do you know where he's set up?\"\n\n\"I've sent him a few letters to the usual places. They're usually forwarded but he's yet to reply. You know how erratic Edward can be. Why?\"\n\nMr. Elwood glanced around with one hand shaded over his brow line to block out the bright sunlight and to keep Evelyn from seeing the worry in his eyes. \"I'm not certain. Just a feeling of mine that maybe I ought to join him for a bit, wherever he may be. Perhaps being back home, and now seeing you again, makes me long for the old days.\"\n\n\"Have you contacted your own brother?\" Evelyn asked carefully. \n\n\"We don't- correspond. But if you happen to learn Edward's location, will you send word to me? I'm staying in town.\"\n\n\"Then you must come for a visit!\"\" Evelyn urged.\n\n\"Perhaps. Good bye for now!\"\n\nFor the rest of the day, Evelyn felt a lightness in her step. Mr. Elwood's visit cheered her to no end and she spent the rest of the day humming softly to herself and imagining a visit with her brother and Mr. Elwood together. She wondered how her husband would get on with the two men. Evelyn's good mood continued when she sat in a hot bath that night. She barely leaned back in the tub before her maid, Martha rushed in.\n\n\"His lordship's back my lady and he's asking for you!\" the young maid announced excitedly. \n\n\"His lordship! \" Evelyn bolted up and sloshed water out of the tub. A drizzle from the tub hit the marble floor in a steady stream. It exacerbated the pounding in Evelyn's heart and head. \"Here? Is he in my bedchamber?\"\n\n\"No my lady, he's asked for you in his rooms.\"\n\n\"He's never asked me to his rooms,\" Evelyn said half to herself. \"Then again, I can never expect predictability from him!\" \n\n\"My lady?\" Her maid queried, anxiously. \"What should I say? Will you go to him?\" \n\n\"At once!' Evelyn replied. \n\nA footman was waiting for her Evelyn when she emerged from her rooms. She had hurriedly through on a chemise and wrapped herself in a robe. They entered a part of the house Evelyn had yet to explore. Before a set of large gilded doors another footman stood at attention. The first joined the second to part the doors for her and bid her to enter.\n\nIt took Evelyn a moment to take in a sitting room she entered. It almost resembled a library of sorts with nearly all the walls lined with books and nautical maps of sorts. To her right was another set of doors, that lead to what she could only assume was the sleeping chamber. Something made her turn to her left where a cozy fire burned in a massive marble fireplace. \n\nThere, her husband sat still in his traveling clothes, thoughtfully stroking his chin as he stared into the orange glowing fire. \n\n\"M-my lord?\" Evelyn called out hoarsely and felt her heart sink to her feet when he neither moved nor gave any indication he felt her presence.\n\nA minute ticked by. He lifted a glass of wine to his tips and tossed it back.\n\n\"My boots are tight,\" he said after a while holding out his empty glass to her. \"Will you remove them for me?\"\n\nEvelyn obedienly went to him ad set his glass de before kneeling at his feet. She set pulled his boots off and was about to stand again if he hasn't trapped her body between his thighs. The look in his eyes was indescribable. It sent a shudder, not out of lust, but out of true fear, down Evelyn's spine.\n\nWhen he spoke, his voice was soft and strangled somehow. \"And how are you, Evelyn? Haven't been missing me too much have you?\"\n\nShe replied with a more steady voice than she felt. \"How long will you stay this time sir?\"\n\nLord Davenport leaned back into the chair. \"I know I've neglected you. It simply can't be helped. Believe me-\"\n\nEvelyn tried to extricate herself but he wouldn't budge. \"I think you're angry with me sir, and I'm not sure why.\"\n\n\"Am I angry with you? Do I sound angry?\"\n\n\"No but- \"\n\n\"Do I have reason to be angry pet?\"\n\nA ringing alarm sounded in Evelyn's head. \"If there's nothing else my lord, I'll leave you to rest. You've had a long journey,\" she said quickly and tried to push at his hard, immovable thighs.\n\n\"I did have a long journey,\" he agreed as he leaned towards her, his intense gaze fixed upon her.. \"I rode non-stop to get back to you, Evelyn. Won't you stay with me for a bit?\"\n\nHer head snapped up with surprise. She was even more surprised when he kissed her lips. It was a passionless, soft kiss, tinged with sadness. His melancholy washed over her and made tears spring to her eyes and she couldn't explain why. \n\n\"What's the matter Evelyn?\" he asked as he pressed his forehead to hers. \"Tell me what you're thinking.\"\n\n\"I-I'm terribly lonely here,\" she blurted out without thinking..\n\nHe pulled away from her. There was no mistaking his sadness. \n\n\"I'd like to send for my friend Lady Ann, but you've forbidden my friendship with her!\" Evelyn continued, \"And even Philip has been sent away-\"\n\n\"I did not send Philip anywhere!\" he interjected with a tightening of his jaw. \"Philip is not a gentleman of leisure. What income he has, he has from me. In return he attend to interests of mine, wherever they may be.\" \n\n\"But what of Lady Ann?\" Evelyn insisted on knowing. In her fervor to plead for her friend, she missed Lord Davenport's the slight grimace. \"Why would you forbid me to see her?\"\n\n\"It's not for you to question my decisions,\" he said flatly. At Evelyn's determined look, he relented a bit. \"We'll invite Charlotte's entire family here for the summer-\"\n\n\"Charlotte is a wonderful friend, and I'm glad to have her,\" she replied. \"But she has her own family, her own household to look after. Edward says I'm too aloof, too cold to make friends easily. But Lady Ann offered me her wisdom and friendship without purpose or agenda when when I had the most need for kindness. I can't forget the service she rendered me! Not ever! You may banish her from my life, but you can't banish her from my heart.\"\n\nLord Davenport was gripped by her passion and sincerity. His expression softened as caressed her cheek . \"You're loyal to your friends.\" \n\n\"It's a necessary ingredient to friendship,\" she replied.\n\nHe nodded slowly. \"I agree. You may - invite Lady Ann to visit if that makes you happy. Someday, perhaps you and I too may share such a friendship.\"\n\nIf his words sounded odd, Evelyn didn't notice. Her cheeks dimpled and she leaned forward to kiss his cheek in gratitude. He leaned into her to breath in her soft fragrance. She felt his need rise but rather than kissing her again, he pulled away however reluctantly. \n\n\"You're right Evelyn,\" he said looking past her at the fire again. \"I am rather tired. Go back to bed now and we'll see each other in the morning. \"\n\nLord Davenport turned away from Evely's look of shock and disappointment to continue to stare into the fire. Sometime after she left, a large man bearded in a long overcoat silently entered Lord Davenport's room. \n\n\"Tell me again,\" said his lordship, his eyes never leaving the dancing flames.\n\n\"Lady Davenport met the young man down by the fishing pond this afternoon,\" said the gruff man. \"Their meeting last a full five minutes and then the gentlemen road off again. They appeared to know each other as I heard her call him by his Christian name and twice I heard him refer to her as 'Evie\"-\"\n\nHis lordship gestured for the man to continue. \"On two occasions he kissed her hands and they stood quite close. He did not touch her in any other way. But as your earlier question, yes they do appear to know each other very well, though it's hard to judge how intimate-\"\n\n\"What did they speak of?\"\n\n\"As I said before , I was too far away to hear their conversation, my lord. After he returned to town where he's taken rooms at the Inn. He paid for just two nights.\"\n\n\"This Ainsley Elwood, he's related to the Banks family, you say?\"\n\n\"Brother-in-law to the former Miss Banks, now Lady St.James. She's recently arrived to visit her father and Mr. Elwood came too. He dined at the Banks house this evening.\" After a brief pause, the large, gruff man cleared his throat. \"As for Mr. Elwood, sir- He's, the last several years he'd been traipsing across the Continent-\"\n\nLord Davenport held up a hand. \"No need. I know all about Mr. Elwood!\" \n\nHe dismissed the manservant with a nod and continued to sit and stare into the fire for a long time.\n\n********************\n\nAll night, Evelyn tossed and turned. If she dreamed, she had no memory of it. She was restless, feverish. Her whole body screamed with aching need. \n\nWhy did he send her back to her room without touching her? Not even an attempt to part her robe! Has he tired of her already? \n\nThe last time he returned after a journey away, he came bounding up to her boudoir and tore into her with such hunger, that the memory of it made Evelyn flush and tremble every time she thought of it. Then her mind made a fast visit to each and every one of their slow lingering couplings, to the more urgent ruttings. ",
        "Why didn't he want her?!\n\nThe touch of her own fingers on a tender nipples sent a ripple of shivers down her spine. She remembered clearly how his mouth and tongue felt when he suckled her... how he's knead both breasts and squeezed them together to lap and suckle on one then the other. God, how he seemed to enjoy straddling her chest to slide his turgent member between them... Evelyn choked back a strangled moan that would certainly have woken her maid. She bit down on her curled fingers while her other hand felt her own heat and wetness flowing between her legs. \n\nOh God! Her fingers were coated with her own wetness! The very same wetness he insisted on lapping at just before he rose over her and stuffed her till she nearly couldn't breath. Her own fingers were simply unsatisfying by comparison even as she urgently pumped them in and out to mimic his movements. The best thing she could compare this feeling to was a fall she took as a child. The scab on her knee itched so badly beneath it's bandage but yet she couldn't scratch at it. So she scratched around it. Somehow she found some relief and made the itch worse all at once. Only this was ten times worse! \n\nEvelyn buried her face in her pillow and screamed in frustration as she writhed on the bed. Then she glanced around the room wildly. For some reason a statue on the mantle caught her eyes. It was from the orient and carved from ivory of a exaggerated figure with a doomed head and flowing robes. It was the right height and width... as him!\n\n\"I couldn't! \" Evelyn chided herself at the ludacris thought. She fell back on the bed once more. Her hand returned to her hot, gushing gash. The ache, the itch was unbearable and drove her out of her mind. She rolled over to look at the statue again, then shut her eyes as she recalled how hot, smooth and so very hard he was when he urged her to wrap her little hands around him and stroke his length. For some inexplicable reason her mouth watered to see the purplish, angry head of the thing and smell how distinctly masculine he was. Whenever he left her bed, Evelyn always buried her face and nose where his body touch to catch just another whiff of his distinct aroma. \n\n\"He's enslaved me,\" she realized with acceptance. \"My body needs him as much as it needs food and water to exist.\"\n\nShe must have slept for she woke with a jerk several times. Her mind must have imagined hearing a familiar tread at her door. For once, the house made no sound at all. She was met with just a deafening, taunting silence.\n\n*******************\n\n\"What is this?\" Evelyn asked. \n\nShe barely took two steps into the portico of Keswick Hall before she stopped short at the sight of Lord Davenport, staring up at the clear morning sky. Beside him stood a smart little chaise carriage, harnessed to a magnificent black stallion. He was clean-shaven and appeared more well-rested than Evelyn. \n\nHe smiled a thin, cheerful smile and gestured to the carriage. \"Will this do, or would you be more comfortable in the barouche?\"\n\n\"Where-where am I going?\" she asked with growing excitement. It was a pleasant day for a drive. She had yet to venture further than the grounds of the estate. \n\n\"I thought you and I could have a brief holiday by the sea,\" he said. \"I thought I'd drive us in the chaise. I had a small bag packed and loaded for you. We won't be gone too long. Just a night or two. What say you, wife?\"\n\nJust the two of them! Evelyn felt too giddy and terrified for words as she climbed on board. Thrilled that he wanted to be alone with her, but terrified by what mood she might find him. \n\n\"You're very quiet,\" he shouted over the sound of the rumbling carriage after they've traveled for awhile.\n\n\"I can't think of a thing to say,\" she replied honestly. \"You were in such a humor last night. So different from you are now. I guess I'm simply trying to guess what you are thinking, my lord.\"\n\nHe appeared not to hear her and they drove on for a distance. \"I suppose I must seem awfully strange to you. We're separated by what, over a decade in age? You're new to the ways of the world and I suppose I've grown accustomed to being a jaded old bachelor.\"\n\nAt his calling himself old, Evelyn smiled broadly. \"I'd hardly call you old, though jaded is fitting to describe you.\" \n\nHe briefly glanced at her with a slight crooked grin of his own, before returning his attention to the road again. \"Is that all you think of me then... if you think of me at all?\"\n\nWas he flirting with her? Evelyn wondered as she glance over at his regal profile. Once glance at that heavy brow, straight nose that was almost too long and strong jawline was enough to send her heart aflutter. In Evelyn's mind she saw herself moving closer to him in the small chaise and place her gloved hand in the crook of his bulging bicep that strained the seam of his jacket sleeve. She could even image how his arm would feel, so light and strong. She did not move though. Instead she kept her hands folded neatly in her lap and swayed to the rhythm of the carriage. Not even when he turned slightly to cock a inquisitive brow at her, could she utter the words that hung on her silent quivering lips.\n\n\"From your silence I gauge you haven't formed a very favorable opinion. I suppose I desire it,\" he said. \n\n\"No!\"\n\nHe smiled his crooked smile with his eyes fixed on the galloping horse pulling them and the road ahead. \"But perhaps I can change those earlier impressions of me. Perhaps, in time, we may become friends even.\"\n\n\"Friends-? I'm your wife-\"\n\n\"Ah but marriages where the husband and wife share friendship and trust is best, don't you think?\"\n\n\"True friendship can only exist between equals,\" Evelyn replied with her brows furrowed in confusion. \"I don't think such equality can exist between a husband and his wife.\"\n\nLord Davenport's upper lips curled into a slight smirk. \"Why ever not? Haven't you learned that our lot may do as we wish. We set the example that others follow.\"\n\n\"And you wish us to be friends?\" she asked, carefully. \"And how should a husband and wife, as friends, behave?\"\n\nHe ducked his face towards her to dragged his admiring gaze brazenly from her thighs up her breasts. \"However you like,\" he said invitingly before turning back to the road again. \n\nEvelyn grew thoughtful as she gazed out into the passing countryside. \"Then you will be indulgent after all?\"\n\nHe arched a brow to be reminded of his own words. \"I made that oath before I knew what it was to have a wife. So far you've not asked a single thing of me. Not a single new frock. No complaints of my being away from you as often as I am. I'd like you to freely express yourself your needs and desires to me -\"\n\n\"Then I desire to seek out the woman who was- is, my mother!\"\n\nLord Davenport stiffened beside her and audibly sucked in a deep breath. \"Why now?\" he asked, sternly. \"Why do this now?\"\n\n\"I've tried for several years to convince Edward to help me. There are certain places I cannot go alone. Certain avenues I can't pursue. But with you help now-\"\n\nHe cast another sideways glance at her, to where her hands were clasped in her lap. \"Evelyn for more reasons than I can enumerated I can't allow it. Please trust me.\"\n\n\"I see. Are we still to be friends then? Or are you once more my lord and master?\"\n\nHe cursed under his breathe, but his tone remained calm, reasonable. \"I will always be your husband and protector if I think you'll come to harm.\"\n\n\"You do not trust that I wouldn't harm myself,\" she replied with equal calm. \"Because you question the soundness of my judgement.\"\n\n\"Need I remind you what your judgement nearly cost you?\" he shouted over the rumbling of the carriage wheels. \n\n\"Then why would you propose we'd be equals?\" she asked. \"You'd never adhere to it. And I don't believe Lord Davenport would ever stand for his veracity to be questioned.\"\n\nThat made his lips tightened. \"I was proposing an amity-!\" He blew out his cheeks, exacerbated. Instead of becoming angry as Evelyn expected, he actually chuckled and shook his head. \"You're simply impossible to please aren't you? You don't like being complimented. You won't accept friendship. I've even had my banker bring you my family jewels and you've sent them all right back-\n\n\"My lord, it was most generous of you-\"\n\nFinally he was vexed. \"Its not generosity, my wife! Those belong to the women of my family and now yours by virtue of our marriage. Keep them, throw them away. I care not!\"\n\nEvelyn quietly observed his side profile as he fumed in silence. She finally placed a delicate gloved hand on his arm to console him. \"Please- don't be upset. I don't want to anger you. I only thought such precious things- maybe in a few years-\"\n\n\"What shall I do huh?\" He barked the questions at the trees they were driving past. \"How can I please you? Tell me? - Oh! Right! That one thing I can't consent to!\"\n\n\"No my lord, I won't ask again,\" Evelyn assured him, soothingly with a small shake of her head. She chewed on her lower lip a bit. \"I won't question your reasons for it for I'm sure you have very good ones. I will only thank you for what you have granted me. My friendship with Lady Ann. I've written to her and invited her to visit. So, beyond that I can think of nothing I want. I desire nothing at all-!\"\n\nHe pulled the carriage to the side of the road and pulled in the reins for the horse to stop. Before Evelyn could grasp what he had done, he had her around the waist and pulled her sharply against him for a deep, lingering kiss. His tongue couldn't be satisfied as he drank her in. One hand wrapped around her back. The other gripped her head for better access. Her own small hands could only clutch at his jacket lapels.\n\n\"Not even me?\" he asked huskily when he pulled his lips away. The hand on the back of her head grabbed a fistful of her hair and tugged her slightly. \"Hmm?\"\n\n\"I-!\" she squeaked. Her heart pounded loudly and she couldn't take her heated, tormented gaze off his sensuously curved lips, red and glistening from their kiss.\n\n\"I want your desires to be for me!\" His penetrating gaze pierced her soul! His warm breath, richly timbered voice washed over her and took her will. Evelyn was left with her thighs soaked through and through. \"I want it all to be for me!\"\n\nTo be continued..."
    ],
    "authorname": "wws_wws",
    "tags": [
        "historical",
        "romance",
        "intercourse",
        "lord",
        "lady",
        "firm grip"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/duplicity-ch-06-1"
}