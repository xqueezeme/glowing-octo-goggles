{
    "title": "That Little Spark",
    "pages": [
        "<p align=\"center\">THAT LITTLE SPARK</p>\n\nThis one is for the Valentine's Day 2022 Contest. As always, your votes and comments would be much appreciated.\n\nWishing you all a wonderful Valentine's Day!\n\nWe'd just got home, and I put the two heavy bags of groceries down on the counter and turned to help my son Brayden with his coat.\n\nTipping up his chin, dropping a kiss on his forehead, I told him, \"Sweetie, you're going to have to put your valentines down so we can get your coat off.\"\n\nHis big green eyes gleaming with excitement, he blinked up at me, clutching his little package of treats and cards. \"But did I tell you that I got one from everyone in my class, even a big heart-shaped one from Miss Davis?\" Then he sighed, his eyes lighting up with his smile, hand over his heart, looking all swoony and so over the moon happy. \"And Megan Kowalchuk put a whole bunch of X's and O's on hers! Do you think that mean she likes me, too?\"\n\n\"I'm sure it does,\" I told him, ruffling his hair, because who wouldn't love my son.\n\nHe looked so much like his father, with his pale blond hair, complete with a matching untamable cowlick sticking up at the top of his head. Same expressive emerald green eyes, and adorable dimpled smile.\n\nTimes like this made my heart clench when I thought of how much his father would have loved to have been able to watch his little boy growing up.\n\nRealizing he was experiencing his first crush, reminded me that my son wasn't a baby anymore. Though he'd always be my sweet little man.\n\nLooking up at me, his expression suddenly earnest, he asked, \"Mom, how do you know when you love somebody?\"\n\nWow, I didn't see that coming, and wasn't even sure what to say. After thinking on it for a moment, I smiled down at him waiting expectantly for me to answer, and told him all I knew about love. \"I think you just know when you meet the right person, Brayden. When you're in love it makes you feel good inside when you're with them, like you never want to be apart. Which is why people get married, so they can spend their lives together.\"\n\nHe nodded sagely as he thought that over. His expression serious, he looked back up at me. \"Well, then I think I'd better wait a while to ask Megan to marry me, 'cause I'm only five years old and I don't even have a job yet.\"\n\n\"Yeah, probably a good idea to wait then,\" I agreed, doing my best to keep a straight face.\n\n\"And you remember that my friend Nathan's coming for a sleepover tonight, right?\" he asked, tugging off his boots and putting them on the tray by the back door to dry.\n\nAs I put the milk and eggs away in the fridge, I vaguely remembered him telling me on the way to school in the morning that he wanted to have a sleepover with his new best friend. But I didn't know they'd planned it for tonight.\n\nBefore I could say anything, the doorbell rang, and I rolled my eyes. I hadn't had time to change out of my office clothes yet, and still had to put away the rest of the groceries. No idea what to make for dinner, I just hoped Nathan wasn't fussy, because he was going to have to eat whatever I gave him. Or, eyeing my cell phone sitting on the counter, maybe, I could just order pizza. Never met a kid who didn't like slice of plain cheese, so I figured that was a safe bet.\n\nI opened the front door with what I hoped was a welcoming smile. Then my eyes popped and I froze.\n\nI don't why, but I assumed that Nathan's mother would be with him, and not the gorgeous hunk of a man who stood staring at me just as intently.\n\n\"Hi,\" he finally said, with his sky-blue eyes locked on mine and a flirtatious little smile playing on his lips.\n\nFeeling a little overwhelmed just from the look in those eyes, my voice wavering, I responded, \"You must be Nathan's dad.\"\n\n\"His uncle, actually.\"\n\n\"Oh.\" Finally remembering my manners, I stepped aside and pulled open the door. \"Well, come on in, it's cold out there.\"\n\nI took a quick look outside once they'd stepped in. Just to make sure this wasn't a prank dreamed up by my sister, who'd been nagging me like crazy lately to get back in the dating scene. Though I hadn't really given it much thought. But now, coming face to face with a sweet hunk man candy like him, sure had me tempted.\n\n\"Sorry, I didn't have your phone number or I would have called to double-check. But Nathan assured me that you were okay with the boys having a sleepover tonight,\" he said, with Nathan already tugging off his coat.\n\n\"Of course.\" I smiled down at the little cutie and shook his hand. \"Nice to meet you, Nathan.\" He'd only been at the school for a few weeks, since they were moving into the area, but he and Brayden had become best friends, so I imagined he was a pretty nice kid.\n\nDark haired and blue-eyed like his uncle, he looked so adorable smiling up at me with his front tooth missing. \"Nice to meet you too, Mrs. Winters. And thank you for having me.\" Then he looked up curiously at his uncle, obviously wondering if he'd said it right.\n\nI loved the way he smiled at him and gave him a wink, looking pleased that he'd remembered his manners.\n\nEnjoying their little interaction, I held out my hand to his uncle. \"I'm Kaitlin, Brayden's mom.\"\n\nSmiling into my eyes, he covered my hand with his and kept hold. Then in a warm, deep voice that did funny things to my insides, he said, \"And I'm David.\"\n\nIt was the oddest thing. I actually felt an arousing little spark the moment our hands touched. That I knew had nothing to do with static electricity, because that wouldn't explain the way he had my lady parts starting to tingle. And there was a definite hum in the air, which had me wondering if I was the only one feeling it.\n\nThe look in his eyes was so playful, that I smirked right back, still holding his hand. \"Nice to meet you, David.\" I couldn't believe we were actually flirting, considering we'd only just met.\n\nOnce we finally let go of each other, it struck me that this was the first time since I'd lost my husband Kevin, that I'd felt attracted to another man. But then of course it wasn't every day that a tall, dark handsome stranger came and rang my door bell, sending goosebumps racing down my spine the moment he touched me.\n\n\"The pleasure's all mine,\" he said, still wearing that teasing smile.\n\nGeesh, I wanted to fan myself, he'd got me so hot, just from shaking his hand. And I could already tell he had a naughty streak, which a little part of me was dying to explore.\n\nWalking us all into the kitchen, I said over my shoulder, \"I was just going to order pizza for dinner, if that's okay.\"\n\nJust as I'd hoped, I noticed Nathan flash a big wide-eyed smile at Brayden the moment he heard the word pizza. Naturally Brayden instantly asked, \"Mom, can we eat in the tent?\"\n\n\"Of course, you can,\" I told him, as I picked up my cellphone. David looked a little puzzled, considering it was freezing out and still snowing pretty hard. \"Oh, Brayden has a little tent set up in the family room that he loves to play in,\" I explained, and he nodded looking relieved.\n\n\"Come on Nathan, I'll show you. It's really cool,\" Brayden said, nodding at the other room. The boys raced off to the family room, leaving the two of us alone in the kitchen.\n\nDavid tried to hand me his credit card when he noticed I had the phone to my ear, ready to order our dinner. I shook my head and whispered, \"No, it's okay, I've got this,\" as the woman came on, to ask what I'd like.\n\n\"Then my treat next time,\" he said, putting away his card. Which had me turning my head away from him and smiling like crazy, thrilled to hear there might be a next time.\n\nHoping he'd stay, I ordered two pizzas: plain cheese for the kids, and another with hot sopressata, olives and mushrooms, along with a Caesar salad for us. When David saw me getting four plates out of the cupboard, before he could say anything, I turned to look at him. \"I hope you don't mind staying to keep me company. I can't imagine trying to squeeze into the tent to have dinner with the boys, especially in these heels.\"\n\nHis face breaking into a sly grin, he took his time looking me over. Letting his gaze slide from the top of my white blonde hair, stopping for a moment to caress my breasts in my body-hugging dove gray suit. Till eventually, his eyes slid all the way down to my toes, encased in my sexiest four-inch heels. Of course, sending a fresh wave of shivers racing through me.\n\nAfter that careful inspection, the heat in his eyes when he lifted his gaze and looked into mine, was nearly enough to melt my panties.\n\n\"I'd be happy to stay,\" he murmured, with a devilish smirk, making my breath hitch as I reached into the fridge for some juice for the boys and a nice bottle of cold Chablis for us grownups. I was tempted to press it against my forehead, he'd got me so damn hot, just from the look in his eyes.\n\nThough I never drank much, I kind of wanted to celebrate the rarity of having dinner with another adult, especially one that was so very nice to look at.\n\nBesides, nothing like a little liquid courage to prepare me for dinner with Nathan's uber hot uncle. Considering the fact that I hadn't been on a date since I first met my late husband, over seven years ago, when I was only twenty-one, and fresh out of college. I was a little out of practice.\n\nAfter he slipped off his trench coat, letting me see how incredible he looked in his dark suit and tie, he went ahead and grabbed everything to set the table, while I got down the wine glasses from the cupboard. I liked that he already seemed comfortable, at least around me.\n\nComing up behind me, just barely brushing his front against my backside when he went to get some napkins off the counter, had me sucking in a shaky breath as I breathed him in, reveling in the heat of his body. No surprise, he smelled as good as he looked, kind of musky with a hint of spice. Nothing too over-powering, but I liked that he smelled like a man should smell.\n\nOnce he'd opened the wine and poured us both a glass, his gaze on mine, he pulled out my chair and waited till I was seated before he took the chair beside me.\n\nSmiling into his eyes, I decided he'd already scored a few brownie points in my books, especially by pitching in to help without being asked. But the fact that he'd held out my chair for me, really impressed me. Sometimes it was the little things that showed what a man was like, more than any big lavish gesture.\n\nBeing on my own raising my son for the past five years, it felt nice to have a man in the house, even if just for one night.\n\n\"So, what is it you do, Kaitlin?\" David asked, reaching for his wine.\n\n\"I work as a paralegal, hoping to get my law degree one day, if I can ever find the time to study.\"\n\n\"I take it you're on your own?\" he asked, carefully eyeing my rings.\n\nHeaving a sigh, I nodded and put down my wine glass. \"I lost my husband to cancer five years ago, just three few months after Brayden was born. And now there's just the two of us.\"\n\n\"I'm really sorry to hear that. I lost my sister Val, Nathan's mom, to breast cancer almost a year ago.\"\n\n\"Oh, how sad for both of you. How is Nathan coping with the loss of his mother?\"\n\nHe shrugged, looking a little uncertain. \"He still cries sometimes and asks why God took her, when she was still so young, at only thirty-five. I don't really know what to tell him, because I can't understand it myself.\"\n\nI reached for his hand and covered it with mine. I'd had five years to try and heal, and knew the pain must still be pretty fresh for both of them.\n\nAfter a few moments of silence, I asked what he did for a living, he lifted his gaze and managed a smile. \"I'm an architect. And luckily, I work for a firm that's been pretty understanding about me working from home, and the time I've had to take off. First with my sister being sick, and now for different things I've needed to take care of for Nathan, after she passed away.\"\n\n\"So, you're helping out with him now?\"\n\n\"Actually, he lives with me, and I'm hoping to adopt him. My sister put in writing before she died that she wanted me to raise him. But there are some legal things we've got to get through before it's finalized.\"\n\n\"Well, if you get busy, he can stay with us anytime. I should give you my number so you can call me if you need any help.\"\n\n\"That's really kind of you, Kaitlin. Thank you,\" he said with his eyes warm on mine.\n\nWe smiled, looking at each other for a moment, neither of us saying a word, but there was definite crackle in the air.\n\nJust then the boys came running into the kitchen, with Nathan carefully cradling my son's hamster, Hammie, in his hands. \"Wow! Check this out, Uncle David. Brayden's even got a hamster. Isn't he cute? And he doesn't even bite. He has a wheel he runs around on, and it's so much fun to watch him.\"\n\nWhile they giggled over the hamster crawling up Nathan's arm, I leaned in and quietly whispered to David, \"It was either the hamster or a puppy. I finally agreed to something that wouldn't mind being alone all day, while he's at school and I'm at work. That would also never need walking.\"\n\nNodding his head, David smiled at me as he stroked a finger over Hammie's little brown head. \"He is pretty cute,\" he agreed, turning his attention to his nephew. \"But remember buddy, once the new house is finished, we're going to be moving. So, I think we'd better wait till we've moved in before we talk about getting a pet.\"\n\nLooking a little disappointed Nathan sighed, but didn't put up a fuss. \"Yeah, I know. And Brayden said I could play with him whenever I come over.\"\n\n\"Of course, you can,\" I told him. \"And I've got some treats you can feed him, too.\"\n\nOnce they got the treats, they ran back to put Hammie in his cage to watch him fill up his cheeks with the little nuggets.\n\n\"At nearly forty-three, never having been married, I had no idea what went into raising a kid,\" David confided, shaking his head. \"But we're learning together. And luckily, he's been pretty good at helping me understand what's involved, without testing me too often. I think he gets it that I'm kind of new to this whole parenting thing, and he's doing his best to try not to make it too hard for me.\"\n\n\"From what I can tell, he seems fairly well adjusted, so I'd say you're doing a pretty good job.\"\n\nHe shrugged, and I think he even blushed a little when he flashed me a smile and said, \"Thanks.\"\n\nThe doorbell chimed, and I hopped up to answer. Passing by the family room, I told them, \"Okay guys, you'd better wash your hands before you eat, after handling Hammie.\"\n\nI laughed at the way the pair of them raced to the bathroom to wash up now that the food was here, and noticed that David went in to give them a hand.\n\nAs I thanked and tipped the driver, I realized I could get used to having a man around the house, especially one that was so incredibly thoughtful.\n\nBack in the kitchen, I got out the little bed tray that Brayden used whenever he ate in the tent. Once I had the pizza slices on plates and the juice poured, David picked it up. \"I'll take it into them.\"\n\n\"Thanks,\" I said with an appreciative grin.\n\nIn addition to being easy on the eyes, I still could hardly believe how helpful he was. Normally, I took care of everything, and it was nice that he was the type that just pitched right in.\n\nI guess since it was Valentine's Day, David dimmed the lights in the dining room, nodded his head and suggested, \"Why don't we eat in there... by candlelight.\"\n\nNow I was the one feeling a little swoony, as we sat together side by side, bathed in the romantic glow of two thin tapers that he'd lit for us in the center of the table. Munching on pizza and salad, drinking a little wine, we laughed and talked about everything under the sun like we'd known each other forever. I began to realize, that the more we talked, the more I liked him.\n\nI even confided in a whisper, that my son thought he was in love with his classmate, so he'd know it wouldn't be long till his nephew noticed the opposite sex. \"Brayden came home, first day of school, and said, 'Mom, there's this girl in my class and she has the most beautiful green... shoes.\"\n\nDavid sputtered his drink, laughing. \"Her shoes? That's the first thing he noticed?\"\n\n\"Yeah. I had to fight so hard not to laugh. I thought he'd say it was her eyes that caught his attention, but apparently he loves her taste in footwear.\" I leaned in and whispered, \"I just hope this isn't the start of a foot fetish, especially at his age.\"\n\nLaughing together, I realized he was just so easy to be with, I kind of hated the idea that once we were done, that he'd be heading home. And this would probably be it, with no idea if we'd ever do this again.\n\nFor all I knew he had a girlfriend, who he doted on, much like he was doting on me now. If true, I envied the lucky little witch, whoever she was.\n\nWe were quiet for a moment, and David chuckled, tipping his head and said, \"Listen to those two.\"\n\nI could hear my son coaching his nephew. \"Nathan, whatcha gotta do is ask for something even bigger than what you really want, like a pony. Then, he'll probably give in and get you a puppy. But if you ask for something little, like a hamster, you might end up with a goldfish that you can't even play with.\"\n\nWe laughed at the two them conspiring together, considering they were only five.\n\n\"You're going to have to learn how to negotiate, David, unless you want to wind up with a horse in your backyard.\"\n\n\"Thanks for the warning,\" he said, still chuckling.\n\nFor a moment we just sat, smiling into each other's eyes, sexual tension crackling like a live wire in the air between us. Then he reached out, and brushed back a few stray hairs from my cheek, and tucked them behind my ear. With his eyes locked on mine, he leaned a little closer. I leaned in too, letting my eyes drift shut, my heart fluttering with a sense of anticipation. Inside my head, I was saying, 'Oh, yes please,' at the thought of being able to share a kiss with such a charming man.\n\n\"Mom, can we watch a movie?\" Brayden suddenly asked from the doorway, making me almost jump out of my skin.\n\nDavid straightened up and sat back in his seat, and I looked at my watch, and then back at David. \"If Nathan's uncle doesn't mind, you can put on a short one.\"\n\nDavid nodded that it was okay, and Brayden smiled. \"Thanks, Mom.\" I could hear him run back and put the TV on, which gave David and I a little more time to spend together.\n\nThough we smirked at each other over almost getting caught, I think the spell was broken. We still talked and laughed, but he didn't try to get any closer. I guess realizing the boys could walk in on us any second, he didn't want us to be doing anything that they'd wonder about.\n\nWe'd just finished our dinner, when David jumped up and said, \"I'll be right back.\"\n\nHe came back in with a bakery box and explained, \"I nearly forgot, I picked up some cupcakes for dessert.\"\n\nI made coffee, and we each enjoyed a delectable red velvet cupcake with little white cupids and hearts piped on the pink cream cheese frosting. The boys were thrilled with the two they had, along with a glass of milk. \"Pizza and cupcakes! Wow, this is best dinner ever!\" Brayden declared as they scarfed down their second little treat, making us laugh at how excited they were sharing a fun Valentine's dinner.\n\nFinished with dessert, side by side in the kitchen, exchanging coy little smiles, David and I cleaned up together, like we'd been doing it forever.\n\nWith everything put away, as we passed the sliding glass doors that overlooked the backyard, I turned on the outside lights. The glimmering flakes just looked so pretty, drifting to the ground, turning everything into a snowy pristine white.\n\n\"It's really coming down,\" David remarked, standing close enough behind me that I could feel the heat of his body, as he stroked a hand over my back, sending a fresh wave of shivers skittering through me.",
        "If we were on our own, I would have turned, captured his face in my hands and kissed him. But knowing the boys could walk in, I just enjoyed the sensual feel of his hand, gently stroking up and down along my back.\n\nTheir movie finished; the boys walked into the kitchen yawning. Seeing they were ready for bed, I leaned down, and whispered to Brayden, \"Do you want me to tuck you in?\"\n\nHis eyes flared, looking mortified, he shook his head and whispered back, \"No, Mom, not tonight.\"\n\n\"Then make sure you brush your teeth and wash your face and hands.\"\n\n\"We will,\" Brayden promised. After they'd said goodnight to us, with two quick hugs, the pair of them made their way upstairs.\n\nDavid and I were walking to the front door, already dreading that he was about to leave. Reaching for my hand, he said, \"It's been really nice meeting you, Kaitlin. Thanks for having Nathan over, and for inviting me to stay for dinner.\"\n\nI couldn't stop grinning as I looked into his eyes, and told him, \"It was wonderful meeting you, too.\"\n\nThen we turned our heads when we heard Nathan just behind us, plaintively asking, \"Uncle David, could you stay too, please?\"\n\n\"This is his first sleep over,\" David quietly whispered against my ear, so only I could hear. \"And I guess he's a little nervous about me leaving. Since he's lost his mom, I think he's afraid of losing me, too.\"\n\n\"Well, you know you're more than welcome to stay. I've got a guest room with a queen-size bed, so you wouldn't have to sleep on the couch.\"\n\n\"You're sure you wouldn't mind?\"\n\nI couldn't hold back my smirk, thrilled at the thought of him staying, too. \"Of course not. I don't want him to feel scared, especially the first time he stays at someone else's house.\" And I really didn't. I could feel for the little guy, being left alone with us so soon after losing his mother, had to feel a little scary.\n\nDavid nodded at his nephew. \"Okay, Nathan, I'll stay.\"\n\nLooking relieved, Nathan gave him a big gap-toothed smile, ran over and hugged him. Racing back up the stairs, he called back, \"Thanks, Uncle David.\"\n\nUpstairs, I gave David a tooth brush and got him settled in the guest room with an extra pillow and blanket, just in case. Then the two of us stood awkwardly eyeing the empty bed, trying to keep a straight face. Deciding it was time I left, so he could get ready for bed, I told him, \"The bathroom's just next door. And if you need anything else, my room's right beside it.\"\n\n\"Thanks for letting me stay, Kaitlin,\" David said, gently smoothing his hand down over my arm.\n\nLooking up at his face, I could see the look of longing in his eyes; pretty sure that I was looking at him, with the same needy look. Just the thought of us connecting, had my nipples starting to pebble and everything south of the border starting to get steamy. I knew then that I'd better head to my room, before we wound up doing something crazy, like falling into bed together.\n\nIt took me a while to finally doze off, since I couldn't get him out of my head. Imagining him in bed in the next room, I wondered if he slept in the nude.\n\nI'd just fallen asleep when an anguished, \"Mom!\" had me shooting out of bed and racing barefoot down the hallway to my son's room.\n\nThe room was so dark I could barely see. But I could tell from the night light between the beds that it was Nathan tossing and turning in his sleep, crying out for his mother. I carefully sat on the edge of his bed, and he opened his eyes, squinting up at me. \"Mom?\"\n\nStroking a hand over his head, I whispered, \"No, sweetie, I'm Brayden's Mom. And you're staying with us tonight, remember?\" He looked around the room, saw Brayden asleep in the other twin bed, nodded his head and seemed to relax.\n\n\"How about I get you some water?\" I suggested.\n\nHe gave me a little smile. \"Yes, please.\"\n\nWhen I got up to get the water, I saw David standing in the doorway, nearly naked in just a pair of black boxers. And I almost tripped over my feet. Holy Hannah, he had a nice body.\n\n\"I'm just getting him some water,\" I explained, once I remembered how to talk, while he nodded and went over to check on him.\n\nDavid was talking to him in a soothing voice, telling him that he was okay, when I walked back in with his drink.\n\n\"Here you go,\" I said, handing him the glass. David helped him to sit up. Nathan thanked me, had a quick sip, smiled at us, then settled back down and closed his eyes.\n\nThe two of us walked back out together, both taking a look back, to be sure that he was settled.\n\nOutside the guest room in the dimly lit hallway, David reached for my hand and gave it a squeeze. \"Thanks for checking on him, Kaitlin.\"\n\nIt suddenly occurred to me that we were standing together barely dressed. I never thought about putting on a robe, I ran in there in such a hurry.\n\nClad in just my pink silky boy shorts and thin little tank top, of course with no bra, sure he had to be able to see my nipples poking at the fabric, I felt pretty exposed.\n\nI noticed David's nicely muscled chest had a dusting of dark, sexy hair, trailing all the way down over his rock-hard abs, into his clingy black boxers, leaving very little to my imagination. I had such an urge to touch him, and ruffle that dark, curly hair with my fingers. Glancing down, I noticed that even his slightly hairy legs looked toned and fit.\n\nThe way his gaze was slowly sweeping over me, I thought I'd better explain why I'd run out of my room, barely clothed. \"I heard someone yell, 'Mom' and I woke up and ran straight into Brayden's room. But I think Nathan will be okay now that he knows where he is.\"\n\nNodding his head, David touched his hand to my hip, leaned in and pressed a soft little kiss, just at the edge of my mouth. \"It was still nice of you to check on him, and calm him down,\" he whispered against my lips.\n\nI could feel my breathing getting ragged, with the warmth of his hand on my hip, and him hovering so close. Gazing up into his eyes, feeling more than a little spellbound, smoothing my hands across his chest, I leaned in, pushed up on my toes and kissed him back, right on the lips.\n\nThe feel of his thumb stroking a path over my hip bone just felt so sensual, like he was igniting a flame, as our lips parted and we deepened the kiss. Both of us softly moaning as our tongues began to tangle.\n\nAfraid the kids might hear what we were up to, our lips still locked, I walked him backwards into the bathroom, that conveniently also adjoined my bedroom.\n\nMy heart began to pound when David kicked the door shut behind us. Desperate for more, I circled my arms around his neck, tugged him against me, and chest to chest, we just kept on kissing.\n\nIt had been so long since I'd enjoyed the feel of a man in my arms, I'd almost forgotten what it was like. Especially having the pleasure of sharing such an incredible kiss, with such a gorgeous hunk of a man.\n\nHis arms wrapped around me stroking my back, I ran my hands over his body, enjoying the feel of burrowing my curious fingers through his chest hair, and down over his abs. He just felt so deliciously warm and hard in all the right places. Capturing his face in my hands, I slid my fingers through his hair, drawing him closer. His hair felt so soft, I just couldn't stop running my hands through it. And the taste of him was surreal. I realized then, how much I'd missed this.\n\nEventually, I pulled back, trying to catch my breath, as sanity kicked in, when I realized where we were headed. \"I'm not sure if I can do this,\" I told him, sounding a little shaky. \"I haven't been with anyone in almost five years, since I lost my husband. And I'm a little out of practice.\"\n\nPressing a kiss to my forehead, he ran a gentle hand down over my back, shook his head and reassured me. \"It's okay. We don't have to do anything.\"\n\n\"But we could still get in bed together and cuddle,\" I suggested, hoping he'd agree.\n\nHis lips curling up in a smile, he brushed his lips against mine and whispered, \"I'm good with that.\"\n\nFeeling a little lightheaded after that kiss, I took his hand and walked him into my bedroom. Making sure to lock both the bathroom and my door behind us. Just to ensure that no one would walk in and find us together in bed.\n\nThough we could still hear them through the monitor on my night stand, I was glad they wouldn't be able to hear us.\n\nIt was one thing for the boys to be having a sleepover, but I didn't think it would be such a good idea for them to see us sharing a bed, enjoying our own kind of grown-up fun.\n\nJust seeing him in my room, suddenly had me feeling giddy, like I'd just won a prize. While David was patiently waiting; I think to see what I'd do next.\n\nI didn't even have to think, eager to feel him wrapped around me, I slid onto my back, and tugged him down onto the bed with me. Soon, both of us were moaning, and getting right back into it. Relishing the feel of making love with our mouths, while our hands cautiously ghosted over our bodies, gently exploring.\n\nWith no love life, I didn't need to be on the pill and didn't have any condoms, so I knew we'd just have to enjoy the feel of each other without stepping over the line. Though by this point, I wanted him so badly, it was kind of crazy.\n\nLost in the taste and feel of each of each other, as we kept kissing and touching, I could feel him growing hard against my belly, while he had my poor little puss almost beginning to weep. Wrapping my legs around him, I drew him against me. Whimpering as he notched himself between my thighs, and began teasing my clit with the most amazing long, slow strokes, hitting me just where I needed him.\n\nHoly smokes, who knew it could get this hot, still with our clothes on?\n\nHis eyes on mine, sliding his hands up along my waist, I shivered as he cupped my breasts in his palms. Gently massaging and tugging at my nipples through my top, every inch of me deliciously tingling, he had me nearly crawling out of my skin.\n\nHardly able to catch my breath; I was getting so close, I swear I could almost taste it. My heart nearly pounding out of my chest, going into a full body shiver, gradually I could feel myself beginning to reach the summit.\n\nThe way he was groaning, stroking up and down against me a little harder and faster with every flex of his hips, I could tell that he was almost there, too. His weight on his hands, chest heaving, he sank his tongue into my mouth. Desperate to taste him, I sucked on the tip, twirling with my tongue, and shivered at his deep hungry growl.\n\nPulling back, the moonlight shining into the room was just enough to read the look of awe on his face, as he watched me shudder as a little ripple raced through me. Smiling down at me, he whispered, \"I just love the way we cuddle.\"\n\nBreathlessly, I chuckled. \"Yeah, me, too.\"\n\nGod, it just felt so good, the way he kept trying to push me back over the edge, stroking his erection against my throbbing clit, making me see stars as I shivered right down to my toes.\n\nLowering his head, kissing each nipple in turn, right through my top, the wet heat of his mouth sent the most amazing little zaps right through me, like a live wire shooting straight to my sex.\n\nSliding my hands through his hair, whimpering, I shuddered as he pulled a nipple between his lips, eagerly sucking and teasing me with his tongue.\n\nThat bit of breast play was all it took.\n\nTossing my head from side to side on the pillow, I cried out, \"Oh, David... that feels so good, I can't hold back.\"\n\n\"Then don't, Kaitlin, just let go,\" he whispered.\n\nSliding down my body, getting his head between my legs, he gave me just what I needed to send me crashing right over the edge into the abyss. Cupping my ass in his hands, latching onto me with his mouth, he suckled my clit right through the fabric of my little silk shorts, making me come so hard, I could hardly see straight, much less breathe.\n\nAs I quaked and shivered, David followed right after. Back up on his hands, with a few more long hard strokes, his jaw clenched, he threw back his head and groaned. And as he began to erupt, he desperately dove for the tissue box on the nightstand.\n\nWatching him shudder as he came, I could almost feel his elation. His chest rising and falling as his eyes fell shut, my head fell back and he reached over and squeezed my hand. Neither of us able to utter a word, we were both too overwhelmed to speak.\n\nOn our backs, side by side, our fingers entwined, staring up at the ceiling, our chests were still heaving pretty hard. Slowly, I could feel myself coming back down to earth as he soothingly stroked his thumb into my palm.\n\nTurning our heads, smiling into each other's eyes, quietly absorbing the amazing connection we had just shared, I just couldn't find the words, though my mind was racing.\n\nLifting my hand to his lips, David pressed a kiss to my fingers. \"That has got to be the hottest thing I've ever done, especially with my clothes on.\"\n\n\"You and me both.\" We quietly laughed together.\n\nAlthough we'd almost, but not quite, stepped over the line, it still had to be the most erotic thing I'd ever done. Making out, and reaching the most mind-numbing climax I'd ever experienced with my clothes still intact, almost felt surreal.\n\nNow he had me wondering what he'd be like, if we were to actually make love, with nothing between us.\n\nIn the morning, I felt David press a kiss to my cheek and quietly murmur, \"I'm going to get a shower. You stay in bed and get some more sleep, and I'll take care of the boys.\"\n\nI think I might have nodded that I heard him, but then I was out again, off in dreamland.\n\nAfter the wild night we'd shared, figuring out all the fun ways we could explore each other, while still keeping ourselves mostly covered, and coming more times than I could even count. By the time we both dropped off to sleep, I don't think I'd ever slept so well.\n\nHours later, I woke up with a start, when I opened my eyes, looked at the clock on the bedside table and gasped when I saw it was quarter to ten. I never slept this late, and wondered what was happening with the boys, and how David was coping.\n\nI got dressed in a flash. Twisting my hair into a messy bun, I tugged on a pair of black yoga pants, and little off-the shoulder white sweater that barely skimmed my waist, not even bothering with a bra.\n\nI'd just got down to the kitchen and stopped in the doorway and bit into my lip, smiling at the sight that greeted me.\n\nDavid at the cooktop in the center island, was making pancakes with the boys. Looking hot at hell in his suit pants and white dress shirt. The sleeves rolled up to his elbows, showing off his sexy, darkly matted forearms. The boys beside him, carefully adding blueberry and chocolate chips to make the eyes, noses and mouths for the big-eared Mickey Mouse pancakes he'd managed to create.\n\nHe looked up, saw me standing watching them and gave me the most teasing smile I'd ever seen. As our eyes met, I could feel my heart begin to flutter, like a butterfly beating in my chest. He was just such an amazing man; I knew it wouldn't take much to find myself falling for him.\n\n\"I made us some coffee,\" he said, nodding at the pot on the counter with my cup beside it.\n\nBefore going to the fridge to get some cream, I came up behind them to get a closer look.\n\nI don't think I'd ever seen anything as cute. \"Wow, how cool. How did you learn to shape them like that?\"\n\nHe smiled down at his nephew. \"The two of us took a few classes to learn how to cook together, eh, Nathan.\"\n\nNathan nodded, flashing a gap-toothed smile at his uncle. Touched by how sweet that was, I took a step closer. Breathing in his fresh from the shower scent, with his hair still a little damp. I slid a hand down over David's back, and gave his backside a teasing little squeeze. Then I walked over to the counter and got my coffee. Looking over his shoulder at me, he gave me a playful waggle of his eyebrows, making me laugh.\n\nIf the boys weren't in the kitchen, I had a feeling we'd have been kissing each other silly, and probably dragging each other down to the floor.\n\nWe'd had such an incredible night together, though we hadn't even had sex. Well... at least not technically. What we had shared together was still so insanely hot, it gave me a pretty good idea how good things would be, if, or maybe when, we actually got naked together.\n\nThe four of us sitting around the kitchen table, the boys eyeing the hot pancakes and fresh sliced strawberries artfully arranged on their plates, they grinned as they both dug in. Glancing out at the snow-covered backyard, I cut into one, took a bite and actually moaned out loud, they were just so incredibly tender and moist. Especially coated with melted butter and real maple syrup, dotted with the tang of fresh blueberries, and creamy melted chocolate. Clever man, even took the time to grill some bacon, that went perfectly with the pancakes.\n\nDavid looked a little sheepish, as he admitted, \"Hope you don't mind, but once they decided on pancakes, the boys and I raided your fridge.\"\n\n\"Oh, no complaints from me. Everything's just so good, you can help yourself any time you want. Getting a chance to sleep in, and then coming down to this amazing breakfast, is like a fantasy come true.\"\n\n\"And next time we're having a sleepover at Nathan's place,\" my son informed me, reaching for his milk.\n\nNathan flashed me a smile. \"And you can come too, if you want, Mrs. Winters.\"\n\nTrying to keep a straight face, I looked over my coffee cup at David who just shrugged, though I could see his eyes were dancing with mischief. It looked like the two us would be having another sleepover, too.\n\nOne of the reasons I'd been reluctant to try and get out and meet someone new, was because my son had to come to first. But seeing as David and I were in the same boat, and had boys the same age, at least we understood what it meant to try and be close to someone with children involved.\n\nWhen the boys had finished their pancakes, Brayden asked, \"Mom, can we go out and play in the snow?\"\n\n\"Sure you can, once we've cleaned up.\"\n\nAs soon as I said that, they both dashed over to the sink with their plates and cups making the two us laugh at how fast they moved. \"All done,\" Brayden said, after they'd washed their hands. \"Now I'll go get my snow pants.\"\n\n\"I think we've got an extra pair that should fit you, Nathan, and some waterproof mittens, too.\"\n\nHearing that, his eyes dancing with excitement, he smiled at his uncle. We were lucky to have a big back yard. Since he'd been living in a condo, he looked pretty happy about getting to go outside to play, especially in freshly fallen snow.\n\nThe boys were dressed at the back door waiting to go out, and Brayden stopped and asked, \"Mom, can we have some colors, too?\"\n\nLoading the dishwasher, David looked at me, confused. \"Colors?\"\n\nI went to the cupboard under the sink and got out a couple of empty dish detergent bottles. \"I just add a little food coloring to some water, and they can paint their snowman, adding a scarf or suit, or just draw pictures in the snow.\" I looked over at my son as I got down the box of food coloring. \"So, what colors do you two, want?\"\n\n\"Um...\" Brayden looked at Nathan to see what he thought. \"Red? And maybe blue and green?\" When Nathan nodded his approval, Brayden elbowed him and laughed. \"Cause we can make our own yellow snow, right?\"\n\n\"Yellow snow?\" Nathan wrinkled his forehead, till he got what he saying, and they both started giggling like mad.\n\n\"Boys,\" I said rolling my eyes, as the two of them went outside, still laughing. \"And guys, please don't make or eat any yellow snow,\" I called after them, with David chuckling behind me.\n\nWe stood and watched them trudge through the snowy yard. Then both of them dropped their bottles, flopped onto their backs to make snow angels on the blanket of fresh snow. Eyes closed, with their mouths open and tongues out to catch any drifting snowflakes, they just looked so cute side-by side with their arms and legs going up and down, making angels, I just had to get a picture.",
        "\"How cute is that?\" I said, pointing my phone at them.\n\nDavid got a few pictures, too, and then we just watched them. \"Wouldn't it be great to live that carefree?\"\n\n\"Yeah, the life of a five-year-old, sure looks like fun.\"\n\nBoth of them laughing, they rolled onto their knees and got busy and started rolling some snow balls on the ground, to build their snowman. Seeing they were fine and having fun, David took me by the hand and pulled me away from the glass doors.\n\nTaking advantage of being on our own, smiling into my eyes, he wrapped me in his arms, then surprised me with just a teasing little rub of his nose against mine. We both stood grinning at each other, until he began feathering a few soft, little kisses across my lips, before he gave in, let out a groan and really kissed me.\n\nAs we deepened the kiss and I wound my fingers into his hair, the heat of his hands sliding up along my waist under my sweater had me sucking in a breath. Stroking his thumbs along the bottom of my bare breasts, he had my nipples growing hard and my breath hitching in my throat, and I could feel my sex responding, getting all warm and tingly.\n\nHis lips twitching, he cocked an eyebrow. \"Someone's not wearing a bra.\"\n\nDavid chuckled when I said, \"I think that might be me. When I saw it was nearly ten and I was still in bed, I dressed so fast I just threw on whatever was handy, and didn't even think about putting on a bra.\"\n\nTeasing my nipples with his thumbs, making them tingle like crazy, he gave me the naughtiest smile. \"Oh, I'm not complaining.\" Sliding his hands around me, he squeezed my backside, and whispered against my lips, \"So, are you wearing any panties?\"\n\nI had to think for a minute, and finally I shook my head. \"I don't think so.\"\n\nLetting out a strangled groan, his eyes rolling skyward, I could feel how hard he was growing against my belly, just from running his hands over my body.\n\nHis little exploration had got me so wet, I knew I needed go out and buy some condoms, because we couldn't just keep hugging and kissing forever.\n\nJust in the nick of time, before we got too carried away, my phone chimed, and I picked it up off the kitchen counter, where I'd forgotten it last night.\n\n\"Oh, hey, Mom,\" I said, when I saw who it was.\n\n\"Happy Valentine's Day, sweetheart,\" Mom said, laughing. She was always so bubbly, she had me laughing, too.\n\n\"Thanks, but I think that was yesterday.\"\n\n\"Well, just think of it as Valentine's weekend, a weekend for people in love.\" Looking over at David, I smiled when she said that, realizing again, just how easy he'd be to love. \"So, is my grandson all packed and ready to come over to his Gran's, for another fun-filled sleepover?\"\n\n\"Oh, shoot, Mom. I forgot. Brayden has a friend over from school. They had a sleepover last night. And now they're out playing in the snow in the yard.\"\n\n\"Well, he can bring his friend along. I got him the latest Disney movie that he wanted to see. And baked him a chocolate heart-shaped Valentine's cake, knowing how much he loves chocolate. Got a little basket of treats for him, too, filled with all his favorite goodies. There's more than enough for the two of them, and I don't think Brayden will mind sharing with his friend. I've got a pot of meatballs simmering on the stove too, because it wouldn't be a sleepover without his favorite spaghetti and meatballs for dinner.\"\n\nI winced, looking over at David. \"I'll have to ask his uncle, to see if it's okay.\"\n\nTalking in a whisper, I told David what was happening. He nodded. \"If she's okay with Nathan staying too, I think he'd be alright as long as Brayden was with him. But we should ask them first.\"\n\nI told my mother I'd phone her right back, and we went and called the boys. Leaving their garishly-colored snow man almost finished, their cheeks all rosy, they waded back through the snow, to the deck. I reminded Brayden about his sleepover at his grandmother's, and told him that Nathan was invited, too.\n\nHearing that, Brayden turned to his friend and gushed, \"Oh man, it's so much fun there, Nathan. She always makes us popcorn, and we watch movies. We play bingo for candies and toys, too. She's even got a really friendly old cat who likes to fall asleep in my lap, and he'll probably let you hold him, too.\"\n\n\"Is it okay if I go, Uncle David?\" Nathan asked, as soon as he heard how much fun Brayden would be having.\n\n\"Sure, you can. As long as you know you'll be staying there overnight. But you know you can always call me if you change your mind.\"\n\nAfter thinking on it for a second, Nathan nodded. \"I really liked staying here. So, I think I'll be okay at his grandma's, as long Brayden's there.\"\n\nI phoned my mother back and told her we'd bring the boys by as soon as they were changed and we'd shoveled out the driveway. She laughed. \"Then I guess I'd better get the bingo game out and start putting together some prizes.\"\n\n\"She just loves spoiling him,\" I told David as we all went into the garage, to get out the snowblower. \"Probably because he's her only grandchild.\"\n\nThen it occurred to me, I think at the same time as it occurred to David. With the boys gone, we'd have the house to ourselves. I couldn't look at him, or I knew I'd start laughing. Judging from the way he was avoiding my gaze I think he was trying just as hard to hold it together.\n\nThough I was feeling a tiny bit guilty at the way my poor heart was thumping away in my chest. Already imagining all the naughty stuff the two of us could get up to, once we were on our own, with the boys away at my mother's.\n\nAfter he'd cleared out the driveway, David drove us to my mom's little bungalow only a ten-minute drive from my place.\n\nWhen she ushered us in, mom automatically pulled both boys in for a hug and kiss on the cheek. I noticed Nathan didn't seem to mind, the way he smiled back at her, as she took hold of him by the chin and said, \"Aren't you a cutie?\"\n\nWhen I Introduced her to David, the way she looked him over kind of wide-eyed, and then shot me a sly little smile, I could just imagine what she was thinking. Especially when she pointedly asked, \"So, you're not with your wife this weekend, David?\"\n\nWhen he looked at me, smiled and said, \"No, ma'am, I'm not married,\" I thought my mother was going to break into a happy dance right there in the hallway. She looked so giddy, seeing that her daughter had arrived on her doorstep with a handsome single man. She even elbowed me and rolled her eyes, when David turned to help Nathan with his coat.\n\nI knew she wanted me to start dating again, she'd told me often enough. Now seeing me with David had her smiling from ear to ear, like her wish had finally been granted.\n\nThough I had no idea what would happen with us next, I hated to get her hopes up, if this was only meant to be a Valentine's fling.\n\nMom nodded at her kitchen, filled with the delectable aroma of simmering meatballs, and said to them, \"Come on kids, Gran's going to show you how to make a jungle for lunch.\" Then she smiled at us, and gave us a little wave. \"There's some meatballs for you in that container on the hall table. Now you two go and enjoy some time to yourselves, the boys will be fine with me.\"\n\nWhen we got out to the car, my mom's care package in hand, David asked, \"What did she mean, about them making a jungle for lunch?\"\n\nI laughed, thinking about how much fun they'd be having, dreaming up fun little scenes. \"Mom was a kindergarten teacher, until she retired last year. She just loves working with kids, and has loads of different ways to keep them entertained. No small wonder Brayden loves coming to see his Gran.\n\n\"She uses these colorful sectioned plates to build little edible scenes, like a jungle or a zoo, with hummus and other dips, and veggies like broccoli or cauliflower that look like trees. I think they have as much fun designing them, as they do finally getting to eat them. It's a good way to get them to try different things, and eat a little healthier, too.\"\n\nChuckling, David looked across the car at me, shaking his head. \"I think I should be taking notes. I thought I was doing okay, just keeping Nathan clean and fed and getting him to school every day. The two of you are so good with kids, you could write a book on how to keep them happy and occupied.\"\n\n\"Well, I've always loved kids.\" Suddenly, I felt a wistful thinking back to when my boy was born, looking down at him cradled in my arms, I was so happy I cried. Even now, I had to clear my throat to get the words out. \"I think the day I became a mom had to be the happiest day of my life. Even if I'd known that I would have to raise Brayden on my own, if I had it to do over, I wouldn't change a thing.\"\n\nStopped at a red light, David looked over, studying me intently for a moment. Then he reached for my hand, lifted it to his lips and pressed a kiss into my palm.\n\nSuch a sweet gesture, it really touched me. After nearly five years without a man in my life, I was sure enjoying being with one that was so affectionate.\n\nAfter that tender little kiss, we were quiet for a while, till I pointed out a drug store, remembering what I needed to buy. \"Do you think we could stop in there?\"\n\nLooking across at me, he nodded. \"Yeah, I should go in, too.\"\n\nOnce we got inside, we went our separate ways. I headed down the feminine products aisle, pretending to look for something. Then carefully peeking around to the next aisle, seeing where they kept the condoms, I rushed over and grabbed two packs -- just in case.\n\nAt the checkout, I turned my head and couldn't believe that David was right behind me. We laughed when we saw we were buying the same thing. Only he was buying four big packages!\n\nI don't know what he had planned for us with the kids away, but I don't think it involved anything outside of the bedroom.\n\nBack in the car, I looked around noticing we were heading south instead of going north to my place. Until David mentioned he needed to go home and change. He'd been wearing the same suit since yesterday morning, because of our fun little sleepover.\n\nWe eyed other, smiling as we took the elevator to the top floor to his beautiful, modern condo. Gazing out from his floor to ceiling living room window, I also noticed he had an incredible view overlooking a park with the misty skyline of the city in the distance.\n\nDressed in perfectly fitted jeans and black sweater, he came up behind me, wrapped his arms around me, and with his chin on my shoulder, he looked out, too. \"When the weather's good, Nathan loves to go down to the park and throw a ball around. It gets him out for some fresh air, so he's not always cooped up in here. The new house I'm building has a good size back yard. And he's already dropping some not too subtle hints about maybe having a tree fort.\"\n\nI turned my head, smiling at him. \"I'm sure he'd love that. Just don't tell Brayden, or that'll be on his wish list, too.\"\n\nSettling his hands on my hips, he turned me around to face him, touching his forehead to mine. \"So, Mrs. Winters, where would you like to spend the night, your place or mine?\"\n\nI must have pulled a face, because he pulled back, looking surprised. \"What's wrong?\"\n\n\"It's actually kind of embarrassing, but I don't even know your last name,\" I admitted, feeling a little awkward, since we'd spent the night together.\n\nI could see the amusement in his eyes, when he informed me, \"It's Sommers.\"\n\nI blinked. \"You've got to be kidding.\"\n\n\"Yeah, I thought it was kind funny when Nathan mentioned that you were Mrs. Winters. But I'm Sommers, with an O. So... now that you know who I am... where would you like to stay tonight?\" Then he brushed a feather light kiss across my lips, making my knees go weak, when he slid a hand down over my backside and drew me against him.\n\nOh damn, was he ever hard. Since we were alone in his apartment, with no chance of anyone walking in on us... Lifting an eyebrow, I nodded at his bedroom door, deciding we might as well enjoy each other while we could.\n\nThat decided, I laughed at his playful little growl, when he lifted me off my feet, wrapped my legs around his waist, and walked us back to his room. Now we could finally do something more than just kiss.\n\nThough it had been so long for me, I just hoped I still remembered how.\n\nHe surprised me though, he was so gentle, taking the time to sit me down on the edge of the bed. Considering, at this point, I wouldn't have objected if he tore off my clothes and tossed me onto my back, and dove on top of me.\n\nWe'd already established that we had something pretty good together, so there wasn't any reason to try and pretend that we both weren't dying for this to happen.\n\nStill, I loved the way he knelt on the floor, carefully removed my high-heeled ankle boots, and with his eyes on mine, slipped my socks off my feet. A little shiver went through me as I watched him cradle my feet in his hands, drop his head and press a kiss to the top of each foot.\n\n\"Since I plan to kiss every inch of you, thought I might as well start with these pretty feet.\"\n\nOh, wow. I knew it was going to be good with him, but had no idea, just how good. He already me tingling with anticipation, though all he'd done was kiss my feet.\n\nMy breath hitched in my chest as he slid my pants down over my legs. I watched his eyes go wide when he got his first look at me -- without any panties. \"Well, you're definitely a real blonde.\" He chuckled, smiling at the little nest of curls sitting over my mound, before he drew me against him, breathed me in, nuzzling me with his nose, and making me shudder.\n\nWhen he got to his feet, I reached for his fly, looking up into his eyes, I slowly pulled it down. Even through his black boxers I could tell from the outline, that he was hard as a brick. Sliding my hand up and down his length, I wiggled my eyebrows making him laugh as I admired the size of his hardware.\n\nFive long years had passed since I'd touched a man, and I couldn't believe I was lucky enough to get to experience this, with someone as kind and sweet, and as amazingly well-endowed as he was.\n\nNot that he was freakishly long, or overly thick, but he was just big enough that I knew he'd be a nice tight fit.\n\n\"Kaitlin.\" Sounding a little breathless, he slid his hand into my hair. \"We need to get our clothes off, or this is going happen really fast, especially if you keep stroking me like that.\"\n\nI nodded, and pressed a kiss to the pulsing tip, through his boxers. Then gathering the hem of my sweater, I tugged it over my head and tossed it aside, letting my breasts bounce free.\n\nI almost laughed out loud at the way his mouth fell open when he got his first look at my girls. Not that I'm huge. But thankfully, even after having my son they're still pretty perky, a full C cup, with dusky pink nipples, that right now, were hard enough to cut glass, he had me so aroused.\n\n\"Wow, you are one gorgeous woman,\" he murmured, lifting his gaze to my eyes.\n\nImpatient to see him without his clothes, I pushed up his sweater. He got the hint and pulled it over his head, baring his chest. While I was busy admiring his rippling muscles, he tugged down his jeans and boxers and kicked them aside.\n\nWow! Now it was my turn to drool, getting an eyeful of him totally naked for the very first time. Holy Hannah, was he ever ripped. I imagined he had to work out, to maintain a body like that. Everything just so nicely defined, I needed to feel those muscles sliding under my hands.\n\nDavid's chest heaved, and his nostrils flared, staring down at me breathless as I reached out and ran my fingernails through the dark hair adorning his chest, teasing his erect nipples with my thumbs.\n\nI could feel him tremble as my hands slid down over his body and across his abs. Smoothing them over his muscular thighs, softly moaning, I kissed him from hip to hip. Smiling against his flesh, I lashed my tongue down each beautifully defined 'V' muscle than ran along his groin, till I'd captured my prize in my hand.\n\nSmirking up at him, with a wiggle of my eyebrows, I thought I should remark about out delectably long and thick he was. \"Nice,\" I murmured, stroking him up and down and making him chuckle.\n\n\"Thanks,\" he said, with a bit of a grin. \"How about we get in bed now,\" he said, pulling back the sheets, interrupting my exploration.\n\nThough I didn't complain when he slid me onto my back, cupped my face in his hands, slipped his tongue between my lips and made sweet, sweet love to my mouth. Oh, this man really knew how to kiss.\n\nHe had me feeling so needy, all I could think of was getting him inside me. Still, it felt so nice to be sharing such a sensual kiss, that as much as I wanted to get busy with him, I kind of hated for it to end.\n\nHis eyes locked on mine, David pulled back, pressing his lips to my chin. Slowly, he trailed kisses along my neck, across my collar bone, and all around each breast, till finally, he did what I was aching for, and drew a nipple between his lips and began to suck. Oh wow! I thought I'd bounce right off the bed. A few teasing tugs with his teeth had me so wound up, it was nearly enough to send me right over the edge.\n\nI loved that he took his time lavishing attention on each one, relentlessly licking, lapping, sucking and teasing me with arousal little nips, till he nearly had me crawling out of my skin.\n\nDigging my fingers into his hair, I could barely catch my breath as he kissed his way over my tummy, licking into my navel, and pressing a hot open-mouthed kiss to the top of my mound. I felt like I was burning up, he was getting me so hot.\n\nThen he slid down between my legs, and kissed me, right where I really needed him most. The heat of his tongue lashing across my puss, nearly had me melting.\n\nTwisting his hair between my fingers, as he made love to me with his mouth, I got so carried away, he let out a yelp. \"Sorry,\" I said, releasing his hair. He just shook his head and laughed. He had me so wound up, I couldn't help it, convinced I'd never felt anything as good.\n\nUndeterred, David dove back in, dragging his tongue along the length of my puss, over and over, till he had my whole body deliciously tingling. \"You're just so sweet,\" he whispered, as he pushed his tongue inside me, then added a finger, making me stars, as he worked me over like I'd only ever dreamed of.\n\nI could feel my eyes rolling back in my head, wondering if they'd ever roll back. Whatever that thing was he was doing with his tongue, felt like absolute heaven. I tried to hold back, but I started to quake like mad, when he focused his attention on my clit, circling with his tongue, sucking, and licking relentlessly, till he had me tossing back my head, squealing like a crazy woman. \"Oh, David,\" I whimpered, \"that feels so good, I can't stop shivering.\"\n\nSmiling against me, he didn't stop, and kept it up till my hips shot off the bed, and he had me screaming his name. \"David, I'm coming so hard!\" I cried out. I was never noisy in bed, but what he was doing to me felt so insanely good, I just couldn't keep it in.\n\nKissing his way back up body, smiling into my eyes, he captured my face in his hands, slid his tongue between my lips and kissed me, long and slow.\n\nIf I thought I was falling for him before, I knew I was over the moon in love with him now.\n\nSlightly shivering, still feeling little aftershocks, my heart nearly thumping out of my chest, I watched as he sat up and reached for the box of condoms on his night stand. When he plucked one out, lifting an eyebrow I held out my hand.\n\nNow it was David's turn to roll his eyes. Tearing the wrapper open with my teeth, carefully fitting to the swollen tip, I rolled it down the length of him, smoothing it up and down with my hand, making sure to secure it right down to the base. When I pressed a kiss to his pulsing crown and gave him a little lick, the way he shuddered, I could tell that he was pretty close.",
        "I tugged him on top of me, he sank his tongue into my mouth and we kissed as he slid my legs around his hips, fisted himself in his hand, and slowly began to nudge his way inside me.\n\nI had almost forgotten how incredible this felt. To be this closely connected to someone, especially someone I really cared for. I don't think I'd felt anything as perfect.\n\nFor a moment he didn't move, both of us slightly trembling, he just held me, letting me get used to the feel of him stretching me inside. It did feel a little snug, but still felt so incredibly good to be this close, I wanted more. Digging my heels into his ass to make him move, he laughed, and thrust a little deeper.\n\n\"Mmmm, you feel so good,\" he whispered, pulling back and thrusting in again.\n\nI smirked. \"And you feel like... heaven.\" Racking my brain, I couldn't think of another word, for what I was feeling. I just felt like after so many years of being on my own, to find myself like this with him, was almost too amazing to be real. Snuggling into his neck, I kissed his throat, his jaw and then licked his earlobe making him laugh and shiver.\n\nI think he knew I was a little overwhelmed, because I couldn't even express how good he was making me feel.\n\nAlready, this felt like way more than just sex, and I hoped he could feel it, too.\n\nTunneling in and out of me harder and faster, he clutched my ass in his hands. I whimpered and shook as I felt myself beginning to crest. David threw back his head and groaned, and I could feel him pulsing inside me as he came. Clenching around him, as we rode it out together, he dropped his head and kissed me. Whispering breathlessly, \"Remind me to get your mother some flowers.\"\n\nI laughed and ruffled his hair, both of smiling, I nodded. \"Yeah, I think I owe her a great big thank you, too.\"\n\nThe next few weeks were like magic. The boys were so happy spending so much time together, but so were we. Usually we stayed at my place, because the kids loved to play outside.\n\nOne Friday night, I'd just got off work, and I smiled when I saw the text from David. \"Don't forget, sweetheart, sleepover's at my place tonight.\"\n\nNathan was so excited to have Brayden over at his place, he gave me a quick wave and said, \"Hi, Mrs. Winters.\" Then he said to Brayden, \"Come on, and I'll show you my room. I got stars on the ceiling that glow in the dark, and new Star Wars sheets on the beds. And I even got a new Batmobile Lego set we that can build together, too!\"\n\nI smirked when I saw we were standing in David's kitchen, by his walk-in pantry, that I'd never noticed before. \"Oh, you've got a pantry. Care to give me a tour?\"\n\n\"I'd love to.\" His lips twitching, he took me by the hand, and led me inside, closing the door tight behind us.\n\nThen he pulled me into his arms and kissed me like his life depended on it, the two of us clinging to each other as our tongues began to mate. Seemed like every time we got together, it was like this.\n\nNow that I had him wrapped around me again, I let out a little sigh, sliding my hands down over his back till I was clutching his nice tight ass. \"Hmm, I love your canned goods,\" I murmured, making him laugh as I gave him a squeeze.\n\n\"Yeah, nice buns,\" he teased, squeezing me right back.\n\nWe pulled back for a moment, and the way we looked into each other's eyes, I almost blurted out, \"I think I'm falling for you.\" But I held back, realizing it might be too soon, especially if he didn't feel the same way about me.\n\nAt home the next night, I heard my phone chime and smiled when I saw it was David. Just knowing it was him, had my heart skipping a beat. At least until he said those fateful words: \"Hey, Kaitlin. I uh... I think we need to talk.\"\n\nI stared at my phone, feeling sick. I'd never heard him sound so serious, and had a pretty strong feeling, just from the tone of his voice that we were done.\n\nThough I had no idea why.\n\nWe'd just enjoyed such a good time at his place, hanging out with the kids, and later in bed, once they were asleep. At least I thought we did. Now I wasn't so sure.\n\nClutching my phone, I listened with my heart in my throat as he told me what was happening.\n\n\"You know I've been going through the process of adopting Nathan.\"\n\n\"Yes, I know,\" I said, nodding my head, forgetting he couldn't see me.\n\n\"I thought because my sister had put in writing that she wanted me to raise him, that there'd just be some paperwork involved, and that would be it. But now his father, who's never had anything to do with him from the time he was born, has decided that he wants his son, now that he found out my sister's gone.\"\n\n\"But can he do that? I mean, if he's never even been in his life? Can he just walk in and say I want my son?\"\n\n\"Apparently, because he's his father, he can try and convince the court that being his dad, trumps me being his uncle, even if my sister did put down in writing that she wanted me to have him.\"\n\n\"But, does he at least seem okay? Have you met him?\"\n\n\"No. We were supposed to meet him tonight. I was told it would probably be a good idea for Nathan to meet him on his home turf. But his father never showed.\"\n\n\"You've got to be kidding. He never even showed up to meet his son?\"\n\n\"No, he wasn't there. The address they gave me was for the grandparents' place. They've got a tiny little townhouse in this sketchy part of town, and it was pretty bad. We knocked on the door, that was half-kicked in, and the grandmother came and had to unbolt about four different locks to let us in. Then as soon as we stepped inside, I could tell they were heavy smokers. We couldn't even see across the room the air was so thick with smoke. Right away Nathan started coughing, and I couldn't believe what we'd walked into. I had an uncle who smoked, but he always took it outside.\"\n\n\"Oh, that must have been awful, especially for Nathan.\"\n\n\"Yeah, it was pretty bad. The grandfather was sitting in a ratty lazy boy recliner, in a wife beater t-shirt, covered in stains, without any pants, just in boxer shorts. After he lit a cigarette, and sat it on his overflowing ashtray, he reached for his beer, glaring us down, and didn't even bother to nod, when I said hello. I could tell he wasn't overly thrilled about meeting his grandson. Ignoring us, he went right back to watching this violent movie he had playing on his big-screen TV, that I couldn't imagine letting Nathan watch.\"\n\n\"Poor Nathan, walking into that.\"\n\n\"I was thinking the same thing. I tried to think of what to say so we could leave, when I looked down at Nathan. He was looking up at me wide-eyed, whispering, \"Please, Uncle David. Don't make me stay here.\"\n\nI felt so sorry for the poor kid, he looked so terrified, I decided that we were going to turn around and walk out. But before I could move, this little black dog ran out of the kitchen and came at Nathan, snapping and snarling. I had to pick him up before it sank his teeth into him. The grandmother didn't seem to care, she just laughed and said, \"Don't be such a baby, Ethan, Rocky won't hurt you.\"\n\nI couldn't believe that she didn't even know his name. I told her that his name was Nathan and she just shrugged and said, \"Does it really matter?\"\n\n\"And they expected you to leave him there?\" I couldn't believe what he was saying, it sounded like a nightmare.\n\n\"Well, I knew there was no way I could leave him alone with those two, no matter what family services had said.\n\nThen out of nowhere, Nathan said, \"Uh, Oh,\" and I could see he looked kind of panicked.\n\n\"What happened?\" I asked him, hoping the dog hadn't bit him. When he didn't answer right away, I said, \"Buddy, what's wrong?\"\n\nHe winced and said, \"I think I just pooped my pants.\"\n\nI was so shocked, I said, \"You what?\" He's never had an accident. So, I wondered if their dog might have literally scared the shit out of him.\"\n\n\"Do you think that's what happened?\"\n\n\"I did at first. Till I noticed he was trying to keep a straight face, because he'd figured a way to get out. Playing along, I said to the grandmother, \"I guess I'd better take him home and clean him up. Unless, you'd rather do it.\"\n\nShaking her head, she held up her hands, and said, \"No, no, you go ahead and take him home.\"\n\nThe dog was still growling and snapping at us as we got to the door. The grandmother unlocked the door for us, looking a little disgusted, she said, \"Isn't he a little too old to be doing that?\"\n\nI just shrugged and told her, \"He's only five, so it still happens every now and then.\"\n\nWhen we got out to the car, while I was helping Nathan with his seat belt, trying to not to laugh, I said to him, \"So, you had an accident, did you?\"\n\nThinking it was pretty funny, he broke out laughing, and told me the truth. \"No. But at least it got us out of there.\"\n\nHoping they weren't watching us laughing like idiots in the car, I ruffled his hair and told him, \"I'm just glad you thought of it, so we had an excuse to leave.\"\n\nOn our way home, we went through a drive-thru, and I got him a burger. While he was eating, I called my lawyer and told him what had happened. He couldn't believe that his father didn't show up. He said he'd get us a hearing with a family court judge, so I could explain the whole situation to him.\"\n\n\"Well, I think any judge who heard what you two went through, would automatically decide to leave Nathan with you.\"\n\n\"I hope you're right.\"\n\n\"David, what I can't understand, is if Nathan's father has never shown any interest in him before, why he would be coming forward now and saying that he suddenly wants to be his dad.\"\n\n\"Well...\" Heaving a sigh he explained. \"My sister was pretty comfortable. When my mother died a few years ago, she left everything to the two of us, since my father died when we were still in high school. My sister was also a successful artist and writer, and lectured at a few universities. She owned a house and drove a nice car. I'm sure Nathan's father was aware that she had money, when they were together. She had a pretty big insurance policy, too, that paid out when she died. I put everything in trust for Nathan. But I've got a feeling that his father thinks he can get at the money, if he can get his hands on his son.\"\n\nI couldn't believe what I was hearing. \"How awful, to only want him for his money. I'm glad you put it all in trust, so it'll be harder to get at.\"\n\n\"Yeah, I wanted to secure his future, because I'm not getting any younger, especially since he's only five, and has his whole life ahead of him. I know my sister wanted to make sure that he got an education, and that he'd been taken care of, after she was gone. I'm sure she wouldn't be too happy to know that his dad is trying to get his hands on her money, through her son.\"\n\n\"Is there anything I can do to help?\"\n\n\"That's the other reason I'm calling. I really didn't want to get you involved in this, but I decided you should know what's going on.\n\n\"The lawyer said until this is over, I'm going to have live like a monk, knowing they'll be checking me out, to see what type of life I lead. So, he said, no bar hopping, no one night stands, and no drugs or heavy drinking. I told him I'm home every night with Nathan, and I don't do any of that stuff. Then he also said... 'And no lady friends sleeping over... Kids are pretty impressionable, and the court wouldn't think too much of you having overnight guests.'\"\n\n\"Oh.\" Now I really knew we were done.\n\n\"Yeah. He said if I was married or even engaged, obviously it would be different, because I'd be raising Nathan in a two-parent household. And sleeping with my wife, or fianc\u00e9e wouldn't be out of line. But being his bachelor uncle hoping to get custody of him over his own father, isn't going to be as easy as I thought, so I'll have to be careful.\"\n\n\"David, if there's anything I can do, even if you just want to drop Nathan off with us if you get busy, you know I'm here for you.\"\n\n\"Thanks, Kaitlin. I really appreciate it.\"\n\nAfter we hung up, I just sat and stared outside into the darkness, feeling utterly bereft. Curling my feet under me on the chair, I hugged my knees to my chest, gave in and cried. I was so in love with him, and knew we had something good. But there was no way I wanted to jeopardize his chances of adopting his nephew, just so we could be together.\n\nWhen I finally went to bed, with so much going on in my head, I tossed and turned so much I barely slept.\n\nBleary-eyed, brushing my teeth in the morning, I looked at myself in the mirror, and my diamond engagement ring caught the light and shone back into my eyes. Then it hit me, that I might have a solution.\n\nI ran back in the bedroom and phoned David, busy getting Nathan's breakfast ready, and packing his lunch.\n\n\"Hey,\" he said. \"I'm really sorry I dumped all that on you last night. I just needed someone to talk to, after meeting Nathan's grandparents and realizing what a mess this whole thing is.\"\n\n\"It's okay. You know you can call me anytime, even if it's just to vent. But I have an idea, that might help.\"\n\n\"At this point, I'd be game for almost anything.\"\n\n\"Okay, this might sound a little crazy, but what if we pretended to be engaged? Nathan knows me, and we get along great. All I'd have to do is...\" I looked down at my wedding band on my hand, that I'd never taken off, wondering if I could do it.\n\n\"All you'd have to do is what, Kaitlin?\"\n\nI took a breath and said in a rush, \"All I'd have to do is take off my wedding ring. And we could use my engagement ring to pretend we're engaged, and tell the judge that we're planning to marry. Then at least Nathan would eventually be living in a two-parent household, at least as far as the court would know.\"\n\n\"That's really sweet of you. But I can't ask you to take off your ring. I really didn't mean to drag you into this.\"\n\n\"You're not dragging me into anything, David, I'm offering. I care about Nathan. We've become pretty close, with how often we're together. I really do want him to be with you, and not his father, who he's never even met. Or his grandparents, that wouldn't even know how to care for him, from what you've said.\"\n\n\"It's nice to know you care. And you're right, it could work. If they believe we're together.\"\n\n\"I think we could convince them. We've gotten pretty close, so it's not like we're strangers.\"\n\nI could hear the smile in his voice when he chuckled. \"No, we're definitely not strangers. But if this is going to work, I think we'd better go out and get you a ring, because everyone has to believe we're getting married, if we're going to try and pull this off.\"\n\n\"David, I already have an engagement ring. You don't have to buy a new one. I can just polish mine, and make it look like new.\"\n\n\"Yeah, and I'll bet the women you work with know what it looks like, too. I don't think anyone would believe that I'd ask you to marry me, using the ring you already have.\"\n\nHe did have a point. Looking down at my pear- shaped solitaire sparkling on my finger, I remembered how many ladies in the office had admired it. \"You could be right. Women do notice things like that. Our receptionist just got engaged, and all the women in the office were gushing over her cushion cut diamond ring.\"\n\n\"Exactly. Kaitlin, if we're going to have any hope of pulling this off, then we'd better do it right. We could take the boys out for dinner, and go ring shopping after.\"\n\n\"You want to go ring shopping with the boys?\"\n\nHe chuckled. \"Yeah, it'll be fun to hear what they have to say. Remember, they'll have to believe it, too. When they question Nathan, I can't have him telling the judge that we're pretending to be engaged.\"\n\n\"I guess you're right, the boys will have to believe it, too.\" Then I thought about my mother and cringed, knowing how ecstatic she'd be to hear that we were engaged.\n\nAt least until we weren't anymore, once David hopefully got custody of his nephew.\n\n***\n\nI couldn't believe how excited the kids were about helping us find a ring.\n\nThe instant we set foot in the jewelry store, I noticed a dapper looking older gentleman standing behind the counter, in an immaculate black suit with a crisp white shirt and bow tie. He looked so startled, his eyebrows shot up to his forehead, the moment he realized that were walking into his store with two kids in tow.\n\nKeeping an eye on old Scowly Face, I whispered against their ears, \"Boys, don't put your hands on the glass, okay?\" I also added, \"Or your faces.\" The two of them nodded that they understood. But they were staring so intently at all the beautiful diamond rings artfully displayed in the showcase, I didn't want them leaving any smudges, if they forgot and put their hands against the glass. Sure that he'd have something to say about it, if they did.\n\nI was relieved when a pretty young lady with shoulder length dark hair came over smiling at us, and remarked to the boys, \"Oh, aren't you two, precious?\" Then she nodded at the two of us and asked, \"And how can help you today?\"\n\nDavid took my hand in his, smiled at me and said, \"We're looking for an engagement ring.\"\n\nShe grinned. \"Then you've come to the right place.\" Waving her hand over the showcase, she asked, \"Do you see anything you'd like to try on?\"\n\nI was eyeing the smaller ones, while David and the boys were at the other end, checking out some pretty big rocks.\n\n\"Oh, I like that one that looks like a butterfly, it's just so sparkly,\" Nathan said, nodding at a big garish ring.\n\n\"Yeah, that is pretty,\" I agreed. But not something I'd ever want to wear on my hand, though I'd never tell him that.\n\nI whispered quietly to David, \"Let's just get something small, okay?\"\n\nThe moment I said that, my son overheard, looked up at me and said, \"Mom, if they all cost the same money, then you should get a big one.\"\n\nSmirking at David, I said, \"Sweetie, they're not all the same price, the bigger ones cost more.\"\n\nThe saleswoman was smiling at how cute that was, before she kindly gave the boys a quick lesson on diamonds. Telling them about color and clarity and of course the size of the stone, that determined how much each one was worth.\n\nWhile she had them occupied, I quietly asked David, \"Which one do you like?\"\n\nHe led me over to a smaller display of what looked like very expensive rings. \"I like that one,\" he said, pointing at a big, gorgeous oval solitaire with a slender diamond encrusted platinum band.\n\n\"That is a beautiful.\" In fact, it was so pretty, I felt a little mesmerized just looking at it.\n\nDavid smiled at the saleswoman, pointing down at the one that caught his eye. \"She'd like to try on that one.\"\n\nWhen he slipped it onto my finger, I couldn't believe how beautiful it looked shimmering under the lights. And the way he looked into my eyes as he slid it into place, made it feel almost real, like we were actually getting engaged. Though, I knew it was all for show.\n\nNathan smirked at the way his uncle was looking at me. \"I think you like her, eh, Uncle David?\"\n\nDavid shook his head and said, \"No.\" When I looked at him surprised, with his eyes fixed on mine he said, \"I love her.\"\n\nJust hearing him say those three little words, whether he meant it or not, had me swallowing pretty hard and blinking like crazy.\n\nWithout even thinking, I stroked a hand across his cheek and told him, \"I love you, too.\"\n\nFor a moment we just stood gazing into each other's eyes, till the sales lady, probably wondering if we were going to be staring at each forever, cleared her throat to get our attention. Nodding at the ring, she said, \"That's a new design, just came in this morning. Simple and yet elegant, it really suits you.\"",
        "\"We'll take it,\" David said and got out his wallet and handed her his credit card.\n\nI whispered against his ear, \"Why don't I pay for it, and then I'll keep it after, to save you having to bring it back.\"\n\nSmiling, he kissed my cheek. \"No. I'm buying it. And it's yours to keep.\"\n\nWe would talk about this later. I wasn't going to let him buy me a ring, especially such an expensive one. I was only expecting him to get some cute little thing, just to make it look like were engaged. The jaw-dropping sparkler he'd just slipped on my hand, made it look like we were intending to stay together forever. Which we both knew, was not the case.\n\nI just hoped, once this was all over, that he could get his money back.\n\nWalking together arm in arm back to the car, I thought he seemed to know what he was doing, when he chose the ring, that was now shimmering on my finger. So, I asked him, \"Have you ever shopped for an engagement ring before?\"\n\nHe nodded. \"Yes. Once. But it never went anywhere, and we never got engaged.\"\n\nWe were crossing the parking lot, and I took Brayden by the hand and he held onto Nathan. I didn't think I should ask him what happened, though I would have loved to heard that story, wondering what woman in her right mind would let a man as wonderful as David slip away.\n\n***\n\nThe next morning, when we got in the small interview room in the courthouse, we noticed we were the only ones there. Nathan's dad, true to form, hadn't even bothered to show up, and neither had his parents.\n\nWe had just sat down and the judge walked in, and we stood again as he nodded hello to the three of us.\n\nHe took a moment to read over the case file, then the proceedings got underway.\n\nNathan was asked to go up and take a seat beside the judge, an older man with thinning graying hair, and a kind smile.\n\n\"Nathan,\" he asked him, \"if you could live anywhere you wanted, where would you like to live?\"\n\nFocused on his hands in his lap, for a moment he didn't say anything, till finally he looked up at the judge, and said, \"Anywhere?\"\n\nHe nodded. \"Yes, anywhere.\"\n\n\"Well, if I could... I'd really like to live with my mom. But since she's in heaven, the only other person I'd want to live with is my Uncle David. He's a really nice uncle and he said after he adopts me, that I can call him Dad. If I can't have my mom anymore, I would love to have a dad, because I never had one before.\"\n\nThe judge cleared his throat, and his voice sounded a little ragged when he said, \"Thank you for being so honest, Nathan.\"\n\nHe looked up at him, hopefully. \"So, do I get to go home with my Uncle David now?\"\n\n\"Not quite yet, young man. But if you'd like to go back and sit down with him, I have a few more questions to ask before I make my decision.\"\n\nNathan came and sat between the two of us. I watched David take his hand and give him a wink, while Nathan flashed him a big smile.\n\nI noticed the judge watching their interaction was smiling, too, which I took as a hopeful sign.\n\nLooking back at his notes, the judge addressed David next. \"Mr. Sommers, I understand since you first requested custody of your nephew a few weeks ago, that you've recently been become engaged to be married.\"\n\nDavid looked across at me and smiled. \"Yes, your honor.\"\n\nHe lowered his glasses and looked at me. \"I assume this is the lucky young lady?\"\n\nGrinning back at David I said, \"Yes, your honor, I'm his fianc\u00e9e.\"\n\n\"Exactly how long have you two known each other?\" The judge asked me, carefully looking back and forth between the two of us.\n\n\"We actually met on Valentine's Day. Nathan and my son are classmates and best friends, and the boys arranged a sleepover at my house. When David came to the door with Nathan, the moment I saw him... I just knew.\"\n\nHe chuckled. \"That fast?\"\n\n\"Yes, actually. I felt a little spark the moment our eyes met.\" I smirked, looking over at David. \"And we've been together ever since. When David asked me to marry him, I didn't even have to think, I said yes.\"\n\nThe judge looked pensive, studying the three of us.\n\nI didn't feel too anxious. I had told him the truth, except for the part about us planning to get married. I honestly did feel a connection the moment we met, and could still feel it now, as I looked over at David, looking back intently at me.\n\nThen I noticed the judge's eyes went wide when he looked down at the ring David had put on my finger. Now I understood why he'd chosen such an expensive ring. It made it look more real. If he'd bought me the tiny one that I had pointed out, he probably would have seen right through us.\n\n\"Mr. Sommers, I would like to have a word with you in private,\" the judge said, nodding his thanks and dismissing the two of us.\n\nReaching for Nathan's hand, I whispered to David, \"We'll wait outside.\"\n\nSitting outside on a bench across from the interview room, wondering what was taking them so long, I started to feel anxious. I kept looking at my watch, trying to imagine what they could be talking about. I just hoped the judge wasn't accusing him of showing up with me to try and pretend that Nathan would have two parents, when we both knew that David had no plans to marry.\n\nAfter about an hour, Nathan started to yawn, and curled up against my side. Stroking a hand over his head, I told him, \"I don't think your uncle should be too much longer, sweetie. Then we can go home.\"\n\nHe nodded, looked up at me, and made my heart clench when he said, \"I really like you. And I'm glad you and my uncle are getting married, 'cause you'll be like my mom then, won't you?\"\n\nI had to blink back tears. He was such a sweetheart, I wished he really could become my son.\n\nHearing a commotion, and a few people muttering and swearing, I turned my head. A shady looking guy in jeans and a leather jacket with a man bun and scruffy beard, tatted up to his ears was rudely pushing past the people standing around in the hallway. My heart jumped as I realized that he was coming right at us. When I heard him mutter, \"Where the hell's my son?\" I felt the hair on the back of neck stand on end, knowing he had to be Nathan's father.\n\nBusy checking the numbers over the doorways, he hadn't spotted us yet. I whispered to Nathan, \"Why don't we go get a hot chocolate in the coffee shop downstairs?\"\n\nI was pulling him to his feet as he nodded, and said, \"Okay,\" looking confused, probably wondering why I was in such a hurry.\n\nClutching Nathan's little hand in mine, quickly hustling us away from him down the hallway, I ducked behind a pillar when I heard the man saying something. Standing in front of a young clerk leaving the interview room we were just in, he gruffly asked her, \"Is this the hearing room for the custody of Nathan Sommers?\"\n\nWhen she said, \"Yes, it is.\" I saw him nod, then watched him brush past her, pull open the door and rush inside.\n\nHalfway down the staircase on the way to coffee shop, I said, \"Just a moment, Nathan.\"\n\nStanding on the landing off to one side, my fingers trembling so hard I could barely hit the keys, I texted David: \"Nathan's father just showed up, and he's headed into the interview room. I'm taking Nathan downstairs to the coffee shop. We'll wait for you there.\"\n\nHe texted back: \"Thanks!\"\n\nSitting waiting for the verdict, I was a bundle of nerves, but was glad Nathan was oblivious to what was being decided upstairs. Smiling up at me, happily munching on a big oatmeal raisin cookie and sipping at his hot chocolate, he had no idea that at this very moment, a judge was deciding his entire future. A judge who had the unenviable task of trying to determine if he'd better off staying where he was with his uncle. Or, if he should be sent away to live with his father. A man he'd never even met.\n\n\"How's the cookie?\" I asked, stroking his back.\n\n\"It's really good.\" He held it out to me. \"You wanna bite?\"\n\nSuch a sweet boy, I pressed a kiss to the top of his head, smiling down at him. \"No, thank you, honey. You just enjoy it.\"\n\nSmiling back up at me, he nodded and took another bite.\n\nI checked my phone again, praying with everything I had that Nathan wouldn't be taken away from David, and be forced to start over with people he didn't even know.\n\nI had a bottle of water sitting in front of me, anxiously peeling at the label, when David came walking into the coffee shop. My heart leapt when I saw him, trying to see from the look on his face if the news was good or bad.\n\n\"Hey, we're done,\" he said with an encouraging smile.\n\nGetting to my feet, I whispered over Nathan's head, \"How did it go?\"\n\nDavid shook his head, pointedly looking at Nathan, who was looking up between us, curiously.\n\nI nodded, knowing he'd tell me later. Though my stomach was in such a knot, wishing he could tell me one way or the other what was going to happen.\n\nWe were driving back to his condo, and David looked back, and saw that Nathan was asleep in the backseat.\n\nLifting my hand to his lips, he smiled and whispered, \"The judge said he's got a good home with me, and doesn't see any reason to move him.\"\n\n\"Oh, my god. Really?\" I wiped at my eyes, so relieved, the tears just flowed.\n\nDavid chuckled. \"Hey, it's okay. He said he's staying where he is, and I'll tell you the rest when we get home.\"\n\nI nodded, taking a few deep breaths, to try and calm down, and stop the stupid tears. I was so happy for them, well, for all of us really, that Nathan wasn't going to be taken away from us.\n\nWe picked up some dinner on the way home. Watching him trying to eat his chicken and salad, we noticed Nathan was having hard time keeping his eyes open.\n\nDavid lifted him into his arms, and pressed a kiss to the top of his head. \"You've had a long day buddy, and I think it's time for bed.\"\n\nI made coffee while David was helping him get ready. When he came back, we sat in the living room, and I couldn't wait to hear what happened.\n\n\"So... what did the judge say?\"\n\n\"Well, I brought everything he'd asked for. He checked over my financials, and read the letter from my boss, and references from my friends. He made a copy of everything, and really took his time studying the letter my sister wrote, saying that she wanted Nathan to live with me. He remarked after he'd read it that he wished she would have gotten it notarized. But said he understood when I told him, that there wasn't time for that, because she died the next day.\"\n\nI squeeze his hand, when he swallowed a few times, I guess thinking about his sister's passing.\n\nHe blew out a breath and told me the rest of what had happened. \"I also told the judge that I own this place outright, and I've got a house being built, so that Nathan will have a big back yard. I had Nathan's report card. And his teacher sent a letter and said he's doing really well, and he seems pretty happy and well-adjusted. I told him that I'd put every cent my sister left for Nathan in trust for him, too.\"\n\n\"Did he ask about us?\"\n\nHe nodded. \"He did. First thing he did was ask about the difference in our age, I guess realizing that you're quite a bit younger than I am. I told him the truth, that you're 28, and I'm about turn 43, but it didn't matter to us, because we're happy. Then he looked me in the eye, and said he hoped we hadn't gotten engaged just to try and pretend that I had a partner, who'd be helping to raise my nephew.\"\n\n\"And what did you say?\"\n\nSmiling, David tipped up my chin, kissed me and whispered against my lips, \"I told him that what we have is real, and we're in love. And as soon as Nathan's custody is settled, we plan on setting a date and getting married.\"\n\n\"You said that with a straight face?\"\n\nThough his eyes were dancing with mischief, he didn't say anything else. But I felt a little rush, as I thought how wonderful it would be, if it was actually true.\n\n\"But what happened when Nathan's father walked in?\"\n\nDavid shook his head. \"Honestly, I don't even know why he bothered to show up. He reeked of beer. As soon as he sat down, the judge asked him if he'd been drinking. He just shrugged and said, 'I had a couple of beers with lunch, so what?' The judge did not look too happy when he said that.\"\n\n\"No kidding, if he was that disrespectful.\"\n\n\"When the judge asked him if he was gainfully employed, he had to think for a minute and he finally said, 'Depends on what you mean by gainfully employed. I don't work nine to five anywhere, but I do enough to get by, doing this and that.'\n\n\"Oh, my god. He actually said that, and didn't even pretend to have a job?\"\n\n\"Guy had an attitude you wouldn't believe, and he just kept shooting his mouth off, while the judge kept glaring at him. Then when the judge asked where he was living, he shrugged and said, 'Sometimes I live with my parents, and sometimes with friends.' \"The look on the judge's face was priceless, like he could hardly believe what he was saying. Then he asked him, 'If you were to get custody, where do you plan to live with your son, Mr. Jones?'\n\n\"And what did he say to that?\"\n\n\"He said that Nathan would be living with his parents, and he planned to visit him as often as he could. The judge just shook his head, looking disgusted. And that's when he made his decision, and told him that without a full-time job, and no permanent residence, he couldn't in good conscience, move his son from a safe and happy environment with me, to a life of uncertainty with him.\"\n\n\"How did he react when he said that?\"\n\n\"Oh, he was pissed. He shot to his feet, pointed a thumb at himself and said, 'I'm his fucking father, and he's coming home with me.'\n\nI gasped. \"I can't believe he'd say that.\"\n\n\"Neither could the judge. He picked up the phone, called security, and told me I was free to go. And said he'd be sending me the paper work, about his decision.\"\n\n\"You know when I first saw him in the hallway, pushing his way past everyone, I knew he was trouble. Which was why I ran downstairs with Nathan. I was afraid if he saw him, and realized who he was, that he might try and snatch him away from me.\"\n\nDavid reached over and squeezed my hand. \"I was glad you texted me and told me what was happening, and that you got him somewhere safe. Now let's just hope, we've heard the last of him.\"\n\nI really hoped he was right.\n\nDavid pulled me against him, and kissed my cheek. \"I was really glad you there for us today, Kaitlin. What you said to the judge about the two of us, I'm sure helped sway his decision. And I can't thank you enough for the way you took care of Nathan when his dad showed up, and got him out of harm's way. I might not have even had a chance to talk to the judge, if he'd managed to run off with him before he'd even made his decision.\"\n\n\"Well, he would have had to drag me away with him too, because I wouldn't have let him go. He's such a sweet boy, he's captured my heart. And I couldn't imagine him being handed over to that sorry excuse for a father.\"\n\nDavid stroked his hand across my cheek, with his eyes on mine. \"I knew the night we met at your place on Valentine's Day, that you were something special. You were just so good with the boys. I haven't really been dating, since Nathan's come to live with me. Mostly, because I didn't think it was fair to him, to meet someone who might not realize that the two of us come as a package.\"\n\nI smiled when he said that, because I knew it was true. \"Well, I think it's wonderful that treat you him like your son, and make him feel secure.\"\n\nHe smiled when I said that. Then he let out a long slow breath, and decided to tell me about the woman he'd almost married.\n\n\"I was seeing someone, and things were getting kind of serious and we were talking about getting married. Then my sister got sick, and Steph kept asking me how my sister was doing, pretty much every day. I just thought she cared about her, and thought it was kind of sweet. Until I found out that my sister wasn't going to make it, and I had to move her to a hospice.\n\n\"Then Steph asked me what I intended to do with Nathan when my sister passed on. I wondered if she was serious, because obviously the only option I had was to take him in and raise him as my own. With my parents both gone, I'm the only family he's got. And I've been involved in his life since the day he was born.\n\n\"Steph told me though she didn't mind Nathan, she didn't really kids, even had her tubes tied to make sure she'd never have any. Though she never thought to tell me, while we making plans to get married.\"\n\n\"You must have been devastated, when she told you that.\"\n\nHe nodded. \"I was pretty upset. But I was glad she told me how she really felt, before we went any further. When she gave me an ultimatum and said I had a choice, either I could be happily married with her. Or, if I chose to take in my nephew that we were done.\"\n\n\"What a choice to have to make. How could she expect you to turn your back on your nephew?\" I didn't know the woman, but already knew I didn't like her.\n\nDavid shrugged. \"It wasn't that hard to decide. I just told her, 'Then I guess we're done.' \"She was pretty shocked. And even said, \"Isn't there some kind of place where they send children like him, who've lost their parents?\"\n\nI said, \"You mean like an orphanage, or a foster home?\"\n\nShe nodded and said, \"Yeah, someplace like that. I'm sure they'd take good care of him, and you could probably arrange visits with him, so you wouldn't lose touch.\"\n\n\"Oh my god David, was she serious? She actually wanted you to send him away?\"\n\n\"She did. She really showed me who she was, when she said that. I just said goodbye and walked out. She's called me a few times since then, by I don't bother answering when I see it's her.\"\n\nI didn't even know what to say. Though I could understand now, why he was single, after going through something as awful as that.\n\nDavid lifted me onto his lap, wrapped his arms around me and hugged me really hard, and whispered against my ear, \"That's why I was so happy when I met you. You've got a really good heart, Kaitlin. And we're in the same boat, raising these kids on our own, and we understand each other, like no one else probably could.\"\n\n\"Nathan's just so loveable, I can't even fathom what she was thinking, asking you to walk away from him.\"\n\n\"Neither could I, which is why I've been on my own since my sister died.\"\n\nWe just sat, and hugged for a while, till David said, \"I should get a shower, and let you call your mom to check on Brayden.\"\n\nWhile he was gone, I called her to see how he was doing, and to share the good news about Nathan.\n\n\"Oh, thank goodness,\" she said. She got all choked up, and started to sob, and got me a little weepy, too, just hearing her cry. \"I knew there was no way they'd take him from David, when he's so good to him.\"\n\n\"You're right, Mom. They're like father and son, they're so close.\"\n\n\"I'm just glad it worked out.\"\n\n\"And thanks again for watching Brayden, Mom, I imagine he's asleep by now. So, I'll pick him up in the morning and I'll tell him the good news, that his friend is staying with his uncle, right where he belongs.\"\n\n\"Well, you know Brayden is fine with me. And I wouldn't mind if you wanted to leave him with me for another day. I already told him that tomorrow, we were going to make soup with little animal shaped pastas, and I was going to teach him how to make brownies for dessert.\"\n\nI laughed, knowing how much the two of them enjoyed each other. \"Okay, Mom. Then I'll come and get him later on tomorrow, and you two have fun.\"\n\nAfter I'd had a quick shower, David and I were in bed, just holding each other, mulling over everything that had happened. Seeing how pensive he looked, I cupped his face in my hands, and kissed him. \"I am so glad everything worked out the way it did today, and that it's finally over.\"\n\n\"Yeah, I was pretty relieved when the judge gave his verdict, knowing it could have gone either way.\"",
        "He looked around the room. \"Now I can focus on getting us moved into the house. It should be finished soon. So, I'd better get busy and start packing.\"\n\n\"That'll be nice for Nathan, to have a house with a yard, so he can run outside and play anytime he wants.\"\n\n\"Yeah, we're both looking forward to having more space.\" He kissed me and flashed me a naughty grin. \"But I'm more interested in having a nice big master bedroom, that's big enough for a king size bed.\"\n\nI laughed and smoothed my hand over his chest, and down over his abs, and smiled as I looked down and noticed something pretty impressive was starting to poke at the sheet.\n\n\"Well, before you leave here, I think we should enjoy cuddling in this nice comfy bed, at least a few more times.\" Then I threw back the sheet, and my eyes popped, surprised that he was already fully erect. \"Wow, somebody likes to cuddle.\"\n\nHe laughed, pulled me on top of him and kissed me. With his arms wrapped around me, he said, \"Yeah, I do, when I've got this gorgeous, sexy woman in my bed to cuddle up with me.\"\n\nI parted my thighs and slid myself up and down along the length of him, enjoying the way his eyes rolled back and he started to groan as I teased him.\n\nDeciding to give him a little more to enjoy, I wiggled out of his embrace. Keeping my eyes on his, I slid down till I was circling him in my hand, and slowly began to slide my tongue over him from base to tip.\n\n\"Oh man, Kaitlin, that feels so good,\" he murmured, his eyes dropping to half-mast.\n\nWhen I drew him between my lips and started to suck him back, he sank his hands into my hair, and looked so blissful as I worked him up and down. I was just happy to give him something even half as sweet as what he'd so generously given to me, every single time we'd made love.\n\nReally getting into it, licking all around him, his hips nearly bouncing off the bed, I could tell he was getting so close.\n\nThen I yelped, shocked, when he pulled me up under the arms, reached for a condom, rolled it on and lifted me back on top of him.\n\nSmirking, as I sat up high and rode him. I loved the way we cuddled, too.\n\nOoh, he felt so snug this way, I had to take my time and ease myself down. With my hands on his chest, I pulled back up, and then thrust back down, gradually picking up my pace. The heated look in his eyes, as he clutched his hands around my waist and flexed his hips up to meet each of my thrusts, was almost enough to melt me.\n\nSliding his hand up to my breast, he had me moaning, teasing my nipples between his fingers with arousal little tugs and twists. Till he had me throwing back my head and trying not to squeal too loud as I came in blinding rush, and he let out a deep groan, pushed up inside me one last time and froze.\n\nClenching my inner muscles around him, I could feel him pulsing, like second heart-beat inside me. Slipping his hand around my neck, he tugged me down and kissed me, both of us smiling into the kiss as we mated with our tongues.\n\nI was just so blissfully happy to be with him like this, I closed my eyes and sighed. David pulled me to his side and curled his body around mine. Completely sated and utterly content, we drifted off to sleep together, warm and safe in each other's arms.\n\nIn the morning, blinking my eyes, I looked over at the clock, and noticed he'd let me sleep in again. I still took a quick shower, before I got dressed and joined them in the kitchen.\n\nDavid in a nice pair of jeans and T-shirt was at the stove, scrambling eggs with Nathan beside him carefully trying to butter toast. I dropped a kiss on the top of Nathan's head and murmured, \"Morning, sweetie,\" and he turned up his face and smiled, before going back to his task.\n\nI pressed a kiss just below David's ear, and whispered, \"Thanks for letting me sleep.\"\n\nHe turned his head and kissed me back. \"You looked so peaceful I didn't want to wake you.\" Nathan was grinning as David snagged me around the waist and went in for second kiss.\n\nWith Nathan watching, we didn't get too carried away. Though I could tell from the look in his eyes that David would have been happy to turn off the stove and finish what we started, probably on the kitchen floor, or even up against the fridge. He was just such a sensual man. I knew if he ever changed his mind about marriage, the woman he chose to be his wife, would be one lucky woman.\n\nFinishing our coffee after breakfast, I suggested that we could start to go through the boxes of his sister's things, that he had stored in his guest room.\n\nHe nodded. \"Val always kept a journal from the time she was a kid. But I don't really think I should be looking through all the personal stuff she wrote. If you wouldn't mind taking a look, it might help me to decide what this little guy might be interested to read about his mom, when he's a little older.\"\n\nEyes wide, Nathan perked up. \"You have things my mom wrote?\"\n\n\"I do. I've got all of her journals in boxes.\" Smiling down at him, David touched the end of his nose. \"But some of it your mom might have wanted to keep private. Kaitlin can take a look and see what she wrote, and decide what your mother would like you to read.\"\n\nAfter we'd cleaned up the kitchen, I got a bottle of water from the fridge and headed for his guest room.\n\nTaking a seat on the floor, I opened a box and started to read the first one I grabbed, and I could tell she was a writer. Even as a girl, everything she wrote was just so interesting, and expressive. I got so engrossed, I didn't realize I'd been reading for hours, till David came and knocked on the open door and laughed when he saw me sitting on the floor. \"Wow, you're really buried in there aren't you?\"\n\nI shrugged looking around at journals I'd stacked around me, by date. Realized that they did look a little like a fort surrounding me. \"I'm putting them in chronological order, so they'll make more sense. When he's old enough to read them, Nathan can start from when she was little to... the last things she wrote.\"\n\nDavid nodded. \"If it's too much, don't feel like you have to read them all. I'm bringing them all to the new house, so we can finish looking at them later. I really appreciate you going through them and sorting them out, though. I'm not sure I'm ready to read about her life just yet.\"\n\nI nodded. \"I know.\"\n\n\"I just wondered if you wanted to take a break for some lunch? I made some sandwiches, and a fresh pot of coffee.\"\n\nI put down the journals in my lap, in the current stack. \"You know David, after everything I've read, though I've never met her, I feel like I know your sister. These journals really make her come to life.\" I pointed at the ones I still had to go through. \"I was just going to read some of the later ones, where she probably expressed her feelings about being pregnant with Nathan.\"\n\n\"Oh, I'm sure he'd love to see those, at least when he's old enough to understand.\"\n\n\"These are the ones I haven't read yet. I'll finish them later,\" I said, putting the last few back in a box, so I would know that they weren't read. I got up and dusted myself off. \"I'd better call my mother, too, to check on Brayden, to see if she's willing to part with him yet. And before we go, I'll box them up again, and mark the different years on them.\"\n\nDavid chuckled. \"I told Nathan we're going to pick up Brayden at his Gran's. And he got all excited and said, 'I love going to Gran's!\"\n\nSince Nathan never had any grandparents, he was probably happy that my mother had claimed him as one of hers.\n\nWhen we pulled up at my mother's house, I saw my sister's car parked in the driveway. \"Looks like my sister's here. And she is going to be thrilled to meet you.\"\n\nDavid looked across the car at me. \"Have you told her about the engagement?\"\n\nI shook my head. \"No. We haven't had a chance to talk. She's been away. She's a flight attendant, and her job takes her all over the world. We usually just text to keep in touch. I'm sure she's heard about us from my mother, though. So, brace yourself, because she is going to have a lot of questions.\"\n\nI went inside, while David opened the trunk to get the floral arrangement that he'd got for my mom, to thank her for helping out with the boys. Funny, she never let me buy her anything, but she was tickled pink whenever David brought her flowers.\n\nI'd just stepped inside, and my sister came flying out of the kitchen, and pulled me into big body-crushing hug, murmuring in my ear, \"Ooh, it's so good to see you!\"\n\nDavid came in behind me, and I laughed at the way her mouth fell open and her eyes popped when she got her first look at him. \"Holy shit!\" she blurted out loud, her eyes going everyone at once, raking him over.\n\nDavid laughed and so did I. Gesturing at my sister, I introduced them. \"David, this is my potty-mouthed sister, Jessica.\" I smiled into his eyes as I said, \"And Jess, this is my fianc\u00e9, David.\"\n\nHe held out his hand, and said, \"Pleasure to meet you, Jess.\"\n\nJess laughed, and batted his hand away. \"Are you kidding? We're family now. I want a hug.\" After she'd given him a big hard squeeze, she let go and looked back and forth between us. \"So how did I not even know you were dating, and now you two are engaged?\"\n\nI smirked at David, and told her the truth. \"We just clicked.\"\n\n\"I guess you did, if you're already talking marriage. Now let me see this ring mom's been gushing over.\" She reached for my hand, looked down at the big sparkler on my finger and blurted, \"Holy shit! That's some rock!\"\n\n\"Jess, is that all you know how to say?\"\n\nShe looked at me, wide-eyed. \"Well, I'm a little shocked, I mean, this is a lot to take in.\"\n\nDavid looked back and forth between us. \"You're not the only one. Kaitlin said she had a sister, but never mentioned you were identical twins.\"\n\nJess laughed. \"Well, we're not exactly identical.\" She grinned and flipped her long blonde hair over her shoulder, batting her eyelashes at him. I've always worn my hair longer.\" She grinned at me. \"And I'm the fun sister, and Kaitlin being seven minutes older, has always been a little more serious than I am.\" I tried not to groan when she rolled down her yoga pants, exposing her bare hip and pointed. \"And, I've also got a little heart-shaped birthmark, on my left hip.\" She wrinkled her nose at me. \"So, my sister likes to say that she's unblemished.\"\n\n\"Do you think he really needed to see that, Jess?\"\n\nJess shrugged, pulling her pants back up. \"Well, at least he knows now, in case he ever has to tell us apart.\"\n\n\"With our clothes off? I don't think so.\"\n\nJess looked at David and said, \"I'm not even looking at her, and I can tell she's giving me an eyeroll, am I right?\"\n\nDavid chuckled watching us, playfully bicker, like we always do. \"You're right, she is. So, do you two have that telepathic thing some identical twins have?\"\n\nJess looked at me and nodded. \"We do. Sometimes I can feel when something's wrong. I phoned her once from Japan. I couldn't get to sleep, because I had this awful feeling that something was going on. And I was right. Kaitlin was in the hospital with pneumonia. Mom didn't want to worry me, so she didn't call. But I knew, because I could feel it.\"\n\nI nodded. \"Yeah, I've felt it, too. From the time we were kids. I'd feel pain sometimes when she'd get hurt, and find out later that she'd hurt herself, right where I'd felt the pain.\"\n\nThen I noticed Jess was kind of looking at me funny, then she looked at David, who was looking past us into the kitchen. I had a feeling that she sensed something wasn't right. I just hoped she couldn't tell how much I was dreading the day that David told me it was over, and he didn't need me to pretend that we were engaged anymore.\n\nNone of us noticed Nathan rush past David into the kitchen, so he could see Brayden. When the three of us walked in, my mom already had the two of them sitting at the kitchen table. The boys were having a mug of soup and some milk, with a little plate of brownies in the middle of the table, the two of them were eyeing, obviously eager to finish their soup.\n\n\"Hey, mister,\" Jess said, to Nathan, \"You ran in here so fast, I never even got a chance to meet you. And I'm going to be your Aunt Jess, once these two are married.\"\n\nBrayden whispered against Nathan's ear, loud enough that we could all hear him, making us looking at each other and laugh. \"Aunt Jess is funny, you'll like her. And she always brings something from far away.\" He dug into his jeans pocket and pulled out a small model of jumbo jet, and said, \"See, she just brought me this, isn't it cool?\"\n\n\"I've got one for you, too, Nathan,\" Jess said, ruffling his hair. \"I couldn't forget about my new nephew, now, could I?\"\n\nWhen she handed him the little plane, his eyes lit up and he said, \"Thanks, Aunt Jess.\"\n\nAfter she'd said, \"You're very welcome.\" She smirked at us, wrinkling her nose. \"'Cause I'm their auntie, I get the fun of spoiling them.\"\n\nThough we all laughed, I just hoped Nathan wouldn't be too upset, when he wasn't part of our life anymore, once David and I were done.\n\nWe all watched my mom's face light up when David handed her the flowers, pressed a kiss to her cheek and said, \"Just a little something to thank you for helping out with the guys.\"\n\nShe turned about three shades of pink as she admired the blooms, smiling back at David.\n\n\"I'll be back,\" he said, \"I've got to get to the moving store to get some boxes, and packing material.\"\n\nJess told him, \"I can drive them home later David, so you won't have to rush back.\"\n\nHe thanked her, and dropped a kiss on my cheek before he left. After he'd gone, I noticed my sister was staring at me again. I wondered if it was starting to show on my face, that I knew it was almost over.\n\n\"He's moving out of his condo, and into his new house,\" I explained. \"And he's got to start packing.\"\n\n\"But if you're getting married, won't it be your house, too?\"\n\nI scrambled trying to think of what to say. \"It's just that... he designed it himself, so it's kind of his baby.\"\n\nJess nodded, but didn't look too convinced.\n\nI was glad my mom had made tea, and told us to come and try the brownies, so we could talk about something else.\n\nWhile we were laughing watching the kids gush over the warm, chocolate brownies, Jess got a text from a friend. Her eyes dancing, she showed it to me. Knowing she was excited about having a girls' night out with her old college friends, we didn't stay too long.\n\nWhen she drove me home, I kissed her goodbye, and she reached for my hand and told me, \"If you ever need to talk, just call me, okay?\"\n\nI nodded, and said, \"Sure,\" because I couldn't really tell her what was happening, when I didn't know myself.\n\nA week later, David called and told me the house was ready and he had the movers lined up to move him in.\n\nWhen we pulled into the driveway, I thought it was such a big beautiful house, stone fronted and two stories high. There were still a lot of boxes around, with things to unpack. But once we'd stepped inside his gorgeous new house, and I got my first look, I just loved it. It was beautiful, with soft gray walls and dark floors, and it seemed he'd thought of everything. But amazingly, he'd still managed to make it feel homey.\n\n\"So, what do you think?\"\n\n\"It's beautiful, David, I love it.\"\n\nHe smiled. \"I'd hoped you would.\" I was a little shocked when he handed me a key, till he said, \"In case you ever need to get in, if I'm late.\"\n\nI nodded, and thanked him.\n\nThe boys were running around, all excited. David said, \"Hey come here, guys,\" and took them to the sliding glass doors in the kitchen and showed them the huge back yard. He told them he had plans made to build a tree fort as soon as the weather warmed up and said they'd better start thinking about the type of fort they wanted. Like a pirate ship, or even a space ship.\n\nThe boys squealed, they looked so happy. And I just hoped that maybe we'd still be together like this come spring.\n\nA few days later, David called to tell me he had to work a few extra hours on a project, but promised to bring home dinner for the four of us.\n\n\"Well, I'll pick the boys up from school, and take them to your place, so I can try and read the last few journals.\"\n\n\"Thanks, Kaitlin, you're a lifesaver. So, how does Chinese food sound?\"\n\n\"Sounds good to me. I'll give the kids a snack when they get home, so it won't matter if they eat a little later.\"\n\n\"And I'll be there as soon as I can.\" Then he lowered his voice and asked, \"Are you staying over tonight?\"\n\nI smiled at the tone of his voice. \"Would you like me to?\"\n\n\"Always.\"\n\nI laughed. \"Okay, you twisted my arm, I'll stay. See you soon.\"\n\nWhen the boys had finished their cheese and crackers, and veggie sticks, I told I them that I had some reading to do. Luckily, they said they were trying to build a city out of Legos so they were going to busy, too. And if they needed me, I'd be just next door in David's new guest room, finishing off the journals.\n\nSitting cross legged on the hardwood floor, I was going through the last few entries Val had written before she got sick. I felt sorry for her, she sounded so sad, after the long-term relationship she'd been in, ended badly. Back to being single, she said she could hear her biological clock starting to tick, like a time bomb waiting to go off, ending her chances of motherhood. Since she'd always hoped to have a child, she was considering the idea of doing it on her own.\n\nI sat up straight when I read on, about the party she'd gone to, where she'd drank too much and hooked up with a guy. A guy she would never have dated if she were in her right mind. After they'd shared way too many drinks, Mick Jones, a friend of a friend, talked her into going into one of the bedrooms. When she woke up in the morning, he was gone and she was naked, with a raging hangover.\n\n\"Oh my god!\" I couldn't believe what I was reading. There was no relationship between them, it was just a drunk hook-up. I knew he must have found out about her child, through their mutual friends.\n\nThen I read on, and what I read next, had my jaw almost hitting the floor.\n\nI was still blinking, trying to absorb what I'd read, when my cell phone rang. I saw it was David, and I answered. Almost in the same breath, we both said, \"You're not going to believe this.\"\n\n\"Okay, you go ahead, then I'll tell you,\" I said, hoping there was nothing wrong.\n\nHe sounded upset. \"I just got a call from Mick Jones, Nathan's so-called father. He offered to disappear and never bother us again. Providing, I gave him fifty thousand in cash. Can you believe that? I knew it was always about the money, and he never cared about Nathan, but I was still surprised that he was that blunt. I don't even know how he found out where I work. The receptionist put him through to me.\"\n\n\"Oh, that is pretty low. But I have some news, you're are definitely going to want to hear. I'm so glad your sister kept journals, otherwise I would never have found out.\"\n\nI listened, and the boys were being really quiet, probably concentrating on their building. Knowing they might be able to hear me, I whispered, \"I'll show you later, when we're in bed, once the boys are asleep. They're right next door in Nathan's room, so I can't say anything.\"\n\n\"Now you've really got me curious.\"\n\n\"As soon as the kids are asleep, I'll show you what I've found.\"\n\nWe'd just finished dinner, and we smiled at each other when the boys started yawning. \"Looks like bed time guys,\" David said, and went to help them get ready.\n\nI was in bed, my whole body practically humming, holding the two journals I wanted him to see, when he came in, peeled down to his boxers and said, \"So, what did you find out?\"\n\n\"Read this,\" I said, as soon as he crawled in beside me, showing him the passage about the hookup at the party.\n\nHe pulled a face as he read it. \"You know I wondered how a woman as intelligent as my sister could ever have hooked with a guy like him. But it makes sense if she'd had that much to drink. I remember the guy she broke up with, too, a professor at one of the universities. I thought they were close, and assumed one day they'd get married, but it never happened. And I knew she was pretty broken up about it.\"",
        "\"But that's not the whole story, David. Now read this passage.\" I pointed to the one in the next journal, that really made my eyes pop.\n\nI watched him read the part about his sister, thanking her lucky stars after that fateful hookup, when she got her period a few weeks later, right on time. She was so relieved that she hadn't gotten pregnant after passing out that party, especially with a man she didn't even know.\n\nDavid looked over at me. \"But if that's true. Then Jones isn't Nathan's father.\"\n\nI smiled. \"Apparently not.\"\n\n\"Does she mention who his father is?\"\n\n\"Read this,\" I said, pointing out another passage. \"It explains everything.\"\n\nAfter he finished, he just stared across the room, looking shocked. \"Val never told me she went to a fertility clinic to conceive. She never mentioned who Nathan's father was, so I never asked. When that idiot showed up and said that he was the father, I think everyone just believed him. Now I wished I'd thought to ask for a DNA test.\"\n\n\"Well, the good news is, everything is in writing. The name of the clinic, her doctor. That Nathan was conceived on the first try and was born almost exactly nine months later.\" I squeezed his arm. \"I was so happy when I read that; and now you can show it to your lawyer, and you can adopt Nathan, just like your sister wanted.\"\n\nDavid smiled over at me. \"Kaitlin, I'm so glad you took the time to read these.\"\n\n\"And I'm glad that you and Nathan will have seen the last of that Mick Jones character, and you can get on with your lives, with him out of the picture.\"\n\nHe nodded blowing out a breath, looking relieved.\n\n\"So, I guess...\" I looked into his eyes. \"We don't have to pretend to be engaged anymore.\"\n\nHe shook his head. \"No, we don't have to pretend anymore.\"\n\nI knew our little fantasy engagement would be over once he was sure that Nathan would be his to raise, but it still stung to hear him agree that our engagement, even if was never real, was over.\n\nI was so close to tears, I had to get up and get out of the room, or he'd wonder if I was crazy, crying over the end of our fake engagement.\n\nI slipped out of bed and grabbed my robe, and told him, \"I'm just going to check on the boys.\"\n\nStanding in the doorway of their room, watching them sleep, like two little angels, tears were running down face. Wiping at my eyes, I wondered if David and I were done, too. And if we were, he might decide to not even let the boys get together anymore.\n\nI wandered downstairs, stood at the back door and looked out over the snowy yard, with the full moon shining down, it looked like a perfect winter night, though my life was turning out to be pretty far from perfect.\n\nI knew David and Nathan would be happy here, it was such a beautiful house. I thought of the tree house David planned to build for Nathan, and knew the boys would have loved to have played up there together.\n\nBy the time I finally made my way upstairs, I was out of tears and had stopped crying, resolved to the fact that what we had, might very well be over.\n\nDavid was sound asleep, and I didn't want to wake him, so I was careful getting back into bed.\n\nI felt so worn out and tired, it didn't take long to fall into a deep sleep.\n\nIn the morning, I awoke alone in bed, and saw that David was gone. Lifting my head, I took a look at the bedside clock and saw it was almost ten o'clock. He'd let me sleep in again, probably because he knew I was up most of the night.\n\nAfter I'd showered and dressed in jeans and a sweater, when I got downstairs to the kitchen, the boys were eating scrambled eggs and hashbrowns. I saw there was a pot of coffee made, with a cup for me on the counter. When Brayden saw me, he said, \"Morning, Mom. Mr. Sommers said to tell you that there's a plate in the oven for you.\"\n\nI looked around, \"Where is David?\"\n\n\"He went outside,\" Nathan, said, pointing at the back doors.\n\nThen I noticed them getting up on their knees, craning their necks looking at something in the yard. \"You see that?\" Brayden said to Nathan. \"He's writing something in the snow with a bottle with red color, like we do. Only it's curly writing so I don't know what the letters say, do you?\"\n\nNathan shook his head. \"No, I don't know what it says.\"\n\nCurious, I put down the coffee pot to go and take a look. My heart literally squeezed in my chest, when I read what he had written in the snow in big red letters:\n\n<p align=\"center\">I Love You Kaitlin</p>\n\n<p align=\"center\">Will You Marry Me?</p>\n\n<p align=\"center\">(For Real)</p>\n\nI could feel tears running down my face, even while I was laughing, hardly able to believe what he'd done.\n\nDavid was standing looking back at me, with his hand out, pointing at what he'd written, waiting to see what I'd say.\n\nI opened the back door, gave him a watery smile, and said, \"Yes, I would love to marry you, David.\"\n\nIt was comical, the way he almost tripped trying to run back to me through the snow. When he got up on the deck, he picked me up and spun me around and kissed me, both of us laughing. Then he set me down on my feet and said, \"You're sure? I know I've got a few years on you. And before we do this, I really want you to be sure.\"\n\n\"Hey,\" I said, \"You just did something really romantic, and I said yes. And I meant it. I would love to marry you, and make the four of us a family.\"\n\n\"I hoped you would. I was thinking of proposing to you in bed last night, but then I heard you go downstairs after you'd looked in on the boys. And I figured you were thinking things over. So, I took a shot, and tried something a little crazy, that I'd hoped you'd find romantic.\" He smiled, and put his forehead against mine. \"And it worked.\"\n\n\"It sure did. Because now we're getting married.\"\n\n***\n\nWe had both boys as ring bearers at our wedding. My cousin's adorable little red-haired daughter Maya, tossing flower petals up the aisle ahead of us, didn't notice Nathan elbowing Brayden as he smiled at her wide-eyed in her pale pink dress with little rosebuds in her hair. It looked like Nathan had a crush on someone now, too.\n\nI looked up and saw David waiting at the altar. Our eyes met, and we both started grinning. I honestly don't think I'd ever felt as happy. He looked so handsome in his classic black tux, and crisp white shirt, I could hardly wait to get up there, and say our vows, so we would be man and wife.\n\nThe minister mentioned to the congregation that we'd met on Valentine's Day, and thought cupid must have played a hand in our coming together, as both man and wife and as a family. Which of course had everyone tearing up, especially my mom who was beaming at us, wiping at her eyes as we said our I do's.\n\nOut in front the church, my sister Jess and maid of honor, gave us both a big hug, and whispered against my ear, \"I'm so glad it worked out for the two of you. I had a feeling there might have been a little trouble in paradise. But whatever it was, I'm just glad you got through it and you two lovebirds did the deed and got married.\"\n\nI was glad I could tell her the truth about one thing. \"Today I got everything I could ever wish for, Jess. I've got my husband, and two beautiful sons, I don't think I could ask for anything more.\n\nA little over nine months later, we were blessed again, though. After my water broke in the middle of the night and David rushed me to the hospital, looking more panicked than I'd ever seen him. Luckily, after a short labor, our adorable little daughter was born, at a minute after midnight, on February 14<sup>th</sup>, a year to the day from the day we'd first met, on Valentine's Day.\n\nThe boys were so excited, they both wanted to hold her and kept touching her tiny little toes. My mother, no surprise, was delighted to have a little granddaughter to spoil.\n\nMy sister Jess was gushing over her, too. Stroking her little pink cheek, asked us, \"What are you going to name her?\"\n\nI'd thought all along that I was having another boy, because I was carrying low and all in front, like I did with Brayden. We'd really only thought about boy's names. I looked at David and said, \"We're not sure yet.\"\n\nGrinning, Jess said, \"I've got an idea.\" How about Autumn?\"\n\n\"Autumn Sommers? Are you kidding?\"\n\n\"Well, if you wanted to hyphenate her last name, so she'd share the same last name as her brother Brayden, she'd be Autumn Winters-Sommers.\"\n\n\"Yeah, that's a great name Jess, if we never wanted her to speak to us, because she'd think we were crazy for giving her a name like that.\"\n\nJess laughed, and I knew she was just teasing, until she said, \"Or... since she was born on Valentine's Day, how about Valentina?\"\n\nI thought of Val, David's sister, and it would be way to honor her, too. \"Actually, Valentina is kind of pretty. What do you think, David?\"\n\nAlready totally besotted with his new little daughter, he kissed the top of her head and smiled when she wrapped her tiny fingers around his. \"I like it. With those little pink cheeks, it suits her, too.\"\n\nEveryone seemed to agree, so it was decided, we had the perfect name for our little Valentine baby.\n\n***\n\nFirst day of spring was mild, so we got in our new SUV, with room enough for three kids, and drove to the city to get some exercise and do a little window shopping.\n\nBoth boy's eyes lit up when they saw the Lego store, so I wheeled the three of us inside, with Valentina in her stroller while David went next store to the florists. Nearly every day, he was buying me flowers, writing romantic little things on the cards, reminding me that he loved me, especially since I'd had the baby. Though I still had about ten pounds of baby weight to lose, he didn't seem to mind.\n\nWe were just coming out of the store, the boys each holding onto to the sides of Valentina's stroller with a precious new Lego kit in each of their bags, both saying \"Thanks, Mom.\" Which always made me smile that we were'mom and dad now to both of them.\n\nI almost stumbled when I saw a woman throw her arms around David's neck, and kiss him right on the mouth. I was sure glad when he pulled back and stepped away, looking shocked.\n\nWhen he saw us, his face lit up. Then he introduced us to the gorgeous woman with the long dark hair, big brown eyes and a body that I used to have before I'd had our new baby.\n\n\"Sweetheart, this is... an old friend of mine, Steph.\" He slipped his arm around me, smiling and said, \"And Steph, this is my wife Kaitlin, our two sons, Brayden and Nathan and our new baby Valentina.\"\n\nEyes wide, she looked horrified, staring at our three kids, like she could hardly believe it. \"Oh, my god, I am so glad I never married you. You've got three kids?\"\n\nShe kept mumbling as she walked away, and we both laughed. David touched a kiss to my cheek, handed me a bouquet of roses, took my hand and pushed the stroller and we walked on with the boys beside us. \"At least she won't be calling me anymore.\"\n\n\"Then I'm glad we bumped into her,\" I said, and he chuckled.\n\nI decided that day, I really did have it all. I had the most thoughtful, affectionate husband, three healthy children, and I couldn't have asked for more.\n\nTill one day after the kids were in bed, sitting outside on the deck together, David took my hand, looked at me and said, \"You know the night we met, you said you were hoping to become a lawyer. And I've been thinking, you should do it. I want to see you fulfill your dream. I can handle the kids, when you're studying. I just don't want you thinking years from now that wished you'd done it when you could have.\"\n\nI couldn't believe my ears, I kissed him and said, \"Thank you.\" I'd kind of put my dream aside, but obviously he'd never forgotten.\n\nIt wasn't easy, but six years later I walking across the platform, shaking hands with the Dean of Law accepting my diploma.\n\nFront row center, I could see my mother wiping at her eyes, and surprisingly so was my sister. The boys were waving, and David looked so proud, I got little teary-eyed, too. And our little daughter was smiling from ear to ear, blowing me kisses.\n\nThe big surprise was the second honeymoon David planned for us in Fiji to celebrate my graduation.\n\nI had always thought those little secluded huts I'd seen in travel looked pretty romantic. Imagining how nice it would be, to be alone together in a warm sunny place like that, doing almost nothing but making love.\n\nAnd that's exactly what we did.\n\nWe'd have dinner at the resort, walk hand in hand along the beach, kiss under the stars and then we'd wander down to our own little out on the water.\n\nInside, David would smirk, peel me out my sundress and drop a kiss on my shoulder then carry me off to bed.\n\n\"I love it here,\" I told him.\n\n\"I wanted to bring somewhere special, after you worked so hard to get your degree. And I've missed this with you,\" he said, tracing a finger around my breast.\n\nWe'd both been so frazzled with me in school, and both trying to take care of the kids' needs, that we got a little side-tracked. But this was our time now. The kids were in good hands with my mother and my sister.\n\nAnd... I was with my sexy husband, who I noticed was now fully erect, and harder than I'd ever felt him.\n\nI got a little breathless as he slid down over my body kissing his way lower, until he licked me, making me nearly bounce right off the bed. Twisting my hands into his hair I whispered, \"Oh, yeah, right there.\"\n\nSmiling against me, he licked me again, dragging tongue slowly over my folds, \"Here,\" he asked with a smile in his voice, circling my clit with his tongue.\n\n\"Yessss,\" I hissed as he made me shiver. \"Oh, yes, David, yesss.\"\n\nI came so hard, I was seeing stars. He got up on his hands, looked into my eyes and whispered, \"I love you,\" and then he kissed me, and sank himself into my body. I just clung to him as we made slow, sweet love.\n\nI was so glad now that the boys had connected at school, and arranged that Valentine's sleepover without even asking. Or I'd never have the life I have now. So happy and oh, so in love with the man of my dreams."
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "kissing",
        "oral for her",
        "her on top",
        "breast play",
        "oral for him"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/that-little-spark"
}