{
    "title": "Klaatu Barata Nikto Ch. 03",
    "pages": [
        "\"Did you pick up a job application for me, Mom?\"\n\n\"I did but they also mentioned something about a hiring freeze. Funny nothing was said until I told them you were my son and half Martian besides.\"\n\n\"I'm sure it was just a coincidence,\" Klaatu replied. \"Thanks anyway.\"\n\n\"Did you call White and Wong?\"\n\n\"I did but I can't touch any of that money until I'm 25 years of age unless it's for college expenses. It's some kind of trust.\"\n\n\"It sounds like some kind of lack of trust to me,\" Betsy replied. \"I'll speak to your father about that. In the meantime, why don't I just give you the money? Will fifty be all right?\" Klaatu almost laughed out loud. Fifty dollars wouldn't buy him a one way fare to the next big city much less Europe.\n\n\"I appreciate the offer, Mom but I don't want you to dip into your savings. I got myself into this mess and I'll have to deal with it myself.\"\n\n\"It's from the money I mentioned yesterday. Let's call it a loan, okay?\" Klaatu watched his mother write out a check. He decided to take whatever money she loaned him and put it in a savings account so she could have it back whenever she needed it. The young man's eyes goggled when he looked at the check Betsy handed him.\n\n\"I think you put in too many zeros, Mom. This check is for fifty thousand dollars.\"\n\n\"That's how much money I meant to give you, Klaatu.\"\n\n\"But...you don't have that much money lying around.\"\n\n\"I most certainly do and there's a lot more where that came from. Your father made some very wise investments before he left Earth and told White and Wong how to run them. I've never had to draw any money of it out before but now seems like a good time.\"\n\n\"But...if you've got all this money, why are you working at the department store when you don't have to?\"\n\n\"I work there because I like my job and I'm good at it.\"\n\n\"You could have traveled or done a ton of other things you talked about doing.\"\n\n\"It was only talk. I would've done them if I really wanted to. The only things I've really wanted to do were to raise you...and have your father with us.\" Betsy wiped away a tear and smiled. \"But the fate of the galaxy is in your father's hands and that comes first.\"\n\n\"I guess you're right,\" Klaatu replied. He looked at the check again. \"I won't need nearly this much...but I guess I'm flying to Europe.\" Well, he wouldn't get his hopes up until the check cleared.\n\n\"I'll help you pack. Don't forget your passport.\"\n\n\"Uh, I don't have a passport.\"\n\n\"Well, you'd better get one,\" Betsy replied. \"I was never very good in geometry but I'm pretty sure Europe is in another country entirely. You can correct me if I'm wrong.\"\n\n\"I'm pretty sure you're right about Europe. I'd better apply for a passport right away.\"\n\nKlaatu's money troubles seemed over but he had more hurdles to jump. He quickly realized that getting a passport issued to him so he could travel could take a while. It didn't seem like he'd be able to meet Wanda in Europe after all but Klaatu decided to go ahead and apply. \n\nKlaatu picked up an application at the local post office and then walked across the street toward a shop that advertised passport photos in their front window.\n\n\"Look, Momma,\" exclaimed a young boy standing nearby. \"That man is turning green just like Maya. Now he's turning even greener.\" Things like this happened to Klaatu all the time but he never got used to it.\n\n\"Hush, Jacob,\" said the woman with him. \"You're being rude. I'm sorry,\" she told Klaatu.\n\n\"It's all right,\" said Klaatu.\n\n\"Are you sick,\" Jacob asked.\n\n\"I'm half Martian,\" Klaatu replied. \"All half Martians turn green on occasion.\" He never would have offered this explanation before meeting his father but the young man now felt proud of his Martian roots. Still, Klaatu smiled to send the message he shouldn't be taken seriously. \n\n\"Maybe Maya is half Martian too, Momma. Are you packing a ray gun? Can I take a ride in your flying saucer? Are you invading Earth?\"\n\n\"Jacob, you know we're not supposed to...please don't pay any attention to him. As you can tell he has quite an imagination.\"\n\n\"Who's Maya?\" Klaatu's curiosity was suddenly piqued. There was actually someone who turned green like he did?\n\n\"Maya's--\"\n\n\"It's no one,\" the woman blurted and started dragging her child away.\n\n\"Relax, ma'am,\" said Klaatu in as soothing matter as he could. \"I'm your friend. You trust me completely. Isn't that right?\" The woman stared at Klaatu for a moment and then visibly relaxed. His hypnotic command seemed to be taking effect.\n\n\"I can trust you. You're my friend,\" the woman replied and smiled.\n\n\"What did you do to my mom, mister? Did you hypnotize her? Are you going to have sex with her? Can you make her bark like a dog?\"\n\n\"I...I didn't do anything. I'm just talking to her.\" Klaatu thought maybe he should put the kid in a trance too.\n\n\"You must have done something because she's always nervous when meeting strangers. I hope she stays like she is now.\"\n\n\"Tell me about Maya and I'll try to help you with your mother.\"\n\n\"Tell him anything he wants to know, Jacob,\" said his mother. \"He's our friend and we can trust him.\"\n\n\"There's not much to tell. Mom visited this friend after she divorced Dad. The friend lives in this town in the middle of nowhere. That's where I saw Maya.\"\n\n\"Apparently her mother got involved in devil worship,\" said the lady. \"She was supposed to have had sex with Satan himself. Her daughter turning green is part of God's punishment. The mother is a total nutcase from what I've been told. You seem like a nice man. Your mother never worshiped the devil, did she?\"\n\n\"No ma'am, I'm pretty sure my mother never worshiped the devil.\"\n\n\"Anyway, the people at the church there are trying to save their souls. They asked us not to mention Maya to outsiders so they wouldn't come to town just to see her and try to turn her into a carnival sideshow attraction. I'm sure you understand.\"\n\n\"I understand,\" Klaatu replied. There had been times when he'd felt like a carnival sideshow attraction. The devil worship theory was a new one to Klaatu so far. Still he knew he wanted to meet Maya even if she didn't have a drop of Martian blood in her. He'd have to ask his father if he knew of any other Martian descendants on Earth. Klaatu asked where this town could be found and then told Jacob's mother she would always feel more relaxed when meeting strangers. Jacob wanted Klaatu to turn his mother into an obedient slave to her son but the half Martian politely refused and wished them well. After getting his photos taken, Klaatu deposited his check and returned home.\n\n\"Mom, are there any other kids on Earth with Martian parents?\"\n\n\"You know, I asked that very same question of your father,\" Betsy replied. \"I thought it would be real neat if we exchanged names and addresses, visited each other, attended each others birthday parties and had reunions; stuff like that. Does that answer your question?\"\n\n\"I think so.\" He decided to ask his dad later.\n\n\"I found your birth certificate.\"\n\n\"Oh, yeah? Let me see.\" It was the first time he'd seen his original birth certificate.\n\n\"You'll need it for your passport application.\"\n\n\"Why did they put 'unknown' under father?\"\n\n\"I can't understand why they did that, Klaatu,\" said Betsy. \"I filled out the information properly so all they had to do was copy it: Nicky Neptune, father and birthplace, Mars.\"\n\n\"I guess the typist got lazy,\" said Klaatu.\n\n\"I guess so.\"\n\n\"Mom, my passport is going to take a while to get here so I was thinking about taking a road trip...unless you need me to stick around.\"\n\n\"I think I can spare you. It sounds like fun. Where are you thinking about going?\"\n\n\"I'm thinking about going to New Mexico.\"\n\nKlaatu had never been on a long road trip before. It would be a new experience for him; his first solo outing without his mom or anyone else. His father wasn't aware of any other Martian descendants on Earth. His love affair with an Earth woman had been against strict orders by his superiors and he would have faced severe discipline on his return from Earth if he had not been very ill.\n\nAfter assuring his mother that New Mexico was part of the US and he could travel there without a passport Klaatu set out on the road a few days later. He didn't pay much attention to the sights. The young man was intent on meeting and talking to the mysterious Maya, a woman who turned green occasionally just like Klaatu. \n\nKlaatu's destination was not too far from Roswell, New Mexico. He heard about it being near the location of a UFO crash a few years after World War II. The US government had maintained it was a weather balloon that had crashed and not an alien spacecraft but there were still plenty of believers. Klaatu wondered if Maya and the UFO were somehow related.\n\nThe town wasn't too far off an interstate so it was easy for Klaatu to find a motel room. Now that he was situated it was time to find Maya. But how? The town's citizens seemed friendly enough although asking outright about Maya was not to be done if what Jacob's mom told him was to be believed. Klaatu supposed he had plenty of time. It was a small town and one of the women might suddenly turn green in front of him. That would be Maya. \n\nKlaatu got lucky his second day in town. He was eating breakfast at a local restaurant. He caught the tail end of a conversation when he heard Maya mentioned. A lady was complaining about having to watch Maya out of turn because someone else was having guests from out of town. The waitress nodded in sympathy to the older woman's problem. Klaatu wondered why Maya would have to be \"watched.\" Was she a nutcase just like her mother? Klaatu was having second thoughts about intruding into someone else's personal affairs but since he'd come this far he decided he might as well see it through.\n\n\"I'm on my way over there now,\" he heard the woman say.\n\nKlaatu bolted down the rest of his breakfast and waited out in his car. He didn't have to wait long before the lady came out, got into her car and drove off. The young man let the lady get a block ahead before following. Traffic was light and he doubted whether he would lose track of her.\n\nThe woman parked on a side street and walked inside a house. A few minutes later another woman walked out; the changing of the guard. Klaatu waited a few minutes to screw up his courage before walking up to the door and knocking. A young woman about his age answered the door. She looked at him curiously but didn't say anything.\n\n\"Are you Maya?\" The woman turned a slight shade of green and Klaatu knew he'd struck pay dirt.\n\n\"Who are you?\" She sounded annoyed.\n\n\"My name is--\"\n\n\"Excuse me,\" the woman from the restaurant interrupted from behind Maya. \"Let me take care of this,\" she said and pulled Maya back from the doorway. \"Who are you and what do you want?\"\n\n\"My name is--\"\n\n\"I don't care who you are or what you want. You're not welcome and I demand you leave immediately.\"\n\n\"I'm your friend, ma'am,\" Klaatu replied. \"You know that. You trust me completely.\"\n\n\"I...trust you...completely,\" said the woman.\n\n\"May I come in for a few minutes?\"\n\n\"Of course,\" said the woman. \"You're my friend and I trust you completely.\" She stepped away from the door and allowed Klaatu to enter into a darkened living room. Once he got used to the darkness Klaatu could see Maya looking at him like he was a ghost.\n\n\"How did you do that?\"\n\n\"It's a trick,\" the young man replied and shrugged his shoulders. \"I don't want to frighten you. I'll leave if you want me to but I just had to see you and talk to you.\"\n\n\"You mean you just had to see the girl who can turn green at the drop of a hat or because I'm the spawn of Satan?\" She twirled in place. \"There's not much to see so I hope I haven't disappointed you.\"\n\n\"I don't believe any of that Satan stuff but when I heard about you I thought you and I might have something in common.\" He thought back on one of the many humiliating moments of his life and heard the girl gasp.\n\n\"You...you're turning green...just like me. But how?\"\n\n\"I'll answer your question but I'd like you to answer my questions first. Is that okay with you?\" Maya shrugged her shoulders and nodded her head.\n\n\"What has your mother told you about your father?\"\n\n\"She's told me just what I told you; that he was Satan and I was the result of having sexual relations with him.\"\n\n\"That's all she told you?\"\n\n\"Well, she also tells me she hates me and wishes I'd never been born.\"\n\n\"Is it possible to speak with her?\"\n\n\"All she does is sit in her room and read the Bible.\"\n\n\"Where does she live?\" Maya pointed down a narrow hall.\n\n\"You won't get anything out of her except some vague mumbling. The only time she's clear is when she's telling me how much she hates me.\"\n\n\"I've got to try.\" He looked at Maya's watcher. \"You look tired. Take a nap.\" The woman sat down on a sofa and was sleeping moments later.\n\n\"If you succeed using that trick of yours there are a couple of questions I'd like to ask her. Her name is Sarah Gilbert.\"\n\nKlaatu entered the bedroom and saw a woman sitting in an easy chair with a Bible. She didn't acknowledge Klaatu's presence by word or deed. She only stared. Klaatu knelt down beside Sarah and just stared back for a while. There was still some beauty left in the woman's face but it was fast fading away. He gently touched her hand. Sarah looked down at her hand and then at Klaatu's face.\n\n\"Sarah, I've come to ask you about Maya's father.\"\n\n\"Satan?\" He heard a gasp and knew Maya was behind him.\n\n\"No, not Satan,\" Klaatu replied. \"It was someone else. Please tell me who it was. I'm your friend and you can trust me.\"\n\n\"You wouldn't believe me if I told you.\"\n\n\"Was it a man from Mars?\" Sarah looked surprised. It was the first sign of emotion that Klaatu had seen in the woman's face.\n\n\"How did you know that?\"\n\n\"My father was a man from Mars too.\" \n\n\"I don't believe this,\" Maya gasped.\n\n\"It's true,\" said Sarah and smiled. \"He was a guitarist in a rock band; Nicky and the Neptunes.\" This time it was Klaatu's turn to gasp. Was Maya his half sister?\n\n\"Was it the lead guitarist?\" Sarah shook her head.\n\n\"My guy was the bass guitarist.\" So Klaatu's father wasn't the only one violating regulations. \n\n\"The lead guitarist was already sweet on someone else; a real nice girl but completely ditzy. I forget her name.\"\n\n\"Betsy Smith,\" said Klaatu. \"She's my mother.\"\n\n\"I told him I was pregnant and he said he'd take care of everything. I returned here to visit my parents. He wrote me and said he was ill but if anything happened to him the baby and I were provided for. I later heard he died. My parents were scandalized when I told them I was pregnant but nothing was said until after the baby was born. The trouble started when she started turning green. People started talking and the church's pastor showed up and told them it was Satan's work, that I'd been involved in devil worship.\" \n\n\"I have a question,\" said Maya. \"What have I done to deserve your undying hatred? Is it because I'm different?\" \n\n\"I don't hate you,\" Sarah replied with a puzzled expression. \"When have I ever said that?\"\n\n\"You've said it every day of my life as far back as I can remember.\"\n\n\"Have I? Oh my goodness, Reverend Bryce and his gang really did a job on me. When they found out Maya's father had left me a substantial sum of money, the reverend convinced my parents that the money was tainted and should be turned over to the church. Of course I refused to turn over my money. That's when they started working on my mind. I remember some of it now. I guess they broke my spirit. They got the money and you got a vegetable for a mother. Can you ever forgive me, Maya? I didn't realize what I was saying but it seemed to please the reverend so I kept on saying it. I never meant a word of it.\" \n\n\"It wasn't your fault,\" said Maya. She knelt down on the other side of the chair and the two women embraced.\n\n\"Listen to me, darling\" said Sarah. \"You've got to leave here with your friend. Go into hiding.\"\n\n\"But why? I'm not going to leave here now that I have a mother who I know really loves me.\"\n\n\"I'll tell you why. They talk in front of me like I'm not really there. I suppose in a lot of ways I'm not. Still, some things penetrate my mind. Reverend Bryce intends to marry you off to his son in order to gain access to your fortune.\"\n\n\"I don't have a fortune and I wouldn't marry that guy if my life depended on it.\"\n\n\"You do have a fortune and your life may very well depend on it. You get it all when you turn 18 years of age. Now you know why they watch over you 24 hours a day. They'll do to you what they did to me to get that money if you resist.\"\n\n\"I turn 18 tomorrow.\"\n\n\"Already? You've got to leave right this moment.\"\n\n\"I don't get anything until I turn 25 unless it's for my education. Maybe Maya's is the same,\" said Klaatu.\n\n\"Maya's money doesn't have any limitations after she turns 18.\"\n\n\"If I leave then you're coming with me.\" Sarah shook her head.\n\n\"I'd only slow you down.\"\n\n\"But--\"\n\n\"No buts, honey. They can't do anything worse to me than they've already done. When you're in a safe place and you have access to your money, you'll have the wherewithal to arrange my escape.\"\n\n\"When I have you out of here I'm going to make some people very sorry they messed with us,\" Maya swore.\n\n\"That's the spirit,\" Sarah said.\n\n\"At least you can fight them now, Mom.\"\n\n\"I don't want to fight them.\"\n\n\"I don't understand. Why not?\"\n\n\"Because I don't want to go through the same thing that they put me through the first time. I couldn't live through it this time.\" She turned to Klaatu. \"Leave me the same way you found me. Do you understand?\"\n\n\"I understand,\" Klaatu replied. \"One last question; did Maya's father leave anything with you to give to Maya on her 18th birthday? A kitchen item perhaps?\" Sarah smiled.\n\n\"I'd forgotten about that. It was a spaghetti strainer.\"\n\n\"Where is it? Maya needs it.\"\n\n\"They took everything away from me including that,\" Sarah replied. \"I haven't seen it in years.\" Klaatu groaned in disappointment. Well, there was nothing he could do about it now.\n\n\"Are you ready?\"\n\n\"I'm ready. I love you, Maya. Never forget that no matter what happens.\"\n\n\"I won't, Mom. I love you too.\" Maya and Sarah were both in tears and Klaatu didn't think he was far behind. Klaatu took Sarah out of her trance. A hostile, mumbling woman stared back at the pair.\n\n\"Do you want to pack?\"\n\n\"There's nothing here I want. Let's get out of here.\"\n\nMaya and Klaatu didn't notice the woman staring at them from across the street as they left. She took out her cell phone and dialed a number.\n\n\"Let me speak to Reverend Bryce,\" she said to the person answering the phone. \"It's very important.\" "
    ],
    "authorname": "sourdough999",
    "tags": [
        "martian",
        "alien11111",
        "mind control",
        "klaatu smith"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/klaatu-barata-nikto-ch-03"
}