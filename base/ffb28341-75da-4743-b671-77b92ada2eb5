{
    "title": "A Certain Tension Ch. 01-04",
    "pages": [
        "Author's note: Thank you for all your messages over the past few months. I'm back with a new story I hope you'll enjoy. This will be released in a handful of installments. -FFF\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~</p>\n\n<p align=\"center\">\"Every brush stroke has a certain tension, a certain nervousness. Every brush stroke is, in a sense, some kind of an accident.\"</p>\n\n<p align=\"center\">--Raphael Soyer</p>\n\nChapter One\n\nPart of me has missed these first moments of a Manhattan snowfall. When the light flakes covering the city and park make everything look so quiet and peaceful that I can almost forget I'm actually in an urban jungle.\n\nWhat I haven't missed happens about ten minutes after that first snowfall. When the city's grime settles into the ice on every block and cars drive too fast down each avenue, sending up a mix of gravel, ice and dirt onto unsuspecting pedestrians.\n\nMaybe if I'd come home more often--or ever-- I'd also have remembered the other constant of a New York winter-- stepping off a sidewalk, not knowing if the black ground below is a puddle of ice or cement.\n\nAnd right now, as I shake out my wet pant leg, I'm reminded once again why I live in LA where fifty degrees is considered freezing, and ice is reserved for overpriced lattes. Not that the weather is the reason I moved, but in this moment, as I feel the cold ice seeping down into my shoe, it seems like a pretty valid one.\n\nGrumbling under my breath, I round the corner of 5th avenue and as soon as I do, I can see a green neon sign up ahead. Even though my pant leg is soaked, and this entire city seems to put me in a bad mood, the familiar site warms me a bit. The Runaway Pub will always be an oasis for me in this city, even if the rest of it feels like a stranger now.\n\nI'm hyper aware that being out in midtown means I could easily run into one of Jennifer's posse-- or Jennifer herself-- but luckily, it's a Wednesday and Jen isn't the mid-week party type. Not that I can really say, I guess. I haven't seen the woman or this city in four years.\n\nI don't let myself think about Jen much these days and I'm surprised by the sudden wave of anger that ripples through me. I close my eyes and take a deep breath before letting it out and looking back up at the sign.\n\nIn LA, it's easy to block out memories of her and the parts of my family I don't want to think about. But being back here on the exact street where we spent so much time together, makes it hard to push everything into the \"New York City\" drawer I keep locked away in my mind.\n\nAs I approach the door to the bar, I do my best to shake off the feeling. Jen and my brother aren't here, and I'm going to try to enjoy my night. After all, it's probably the only one I'll get alone until I head back to LA. If I know my sister, she'll be taking up every second I have over the next two weeks.\n\nWith a new resolve, I push open the door to the bar I spent more of my 20s than I did in my own home. The first thing that I notice is that four years has not been enough time to change anything about the place. It looks as grungy and rundown as it always has, which is part of what I always loved about it. After spending so much of my life in homes and hotels that felt like museums, The Runaway was the first place I ever felt truly free.\n\nI let my eyes adjust to the darkness of the space as I take in the familiar setting and the first thing they settle on is the expansive brick wall, which is set across the room from the bar. I can't help but smirk at the sight as I remember all the times I was pushed up against that wall--or pushed someone else up against it. It's easy to get away with when the bar is packed with dancing bodies at one in the morning. As of now though, it isn't even nine o'clock and there are only a few people mingling about. Upstairs where the seating is, I can see a few more groups occupying the tables and chairs.\n\n\"Well look what the cat dragged in. Charlie-fucking-Dawson.\"\n\nThe moment I hear my name, I turn to the bar knowing just who I'll find-- I'd recognize that deep, baritone voice anywhere. And it's only now that I feel the first genuine smile reach my lips since I landed in New York this morning. Smiling back at me is the broad, slightly wrinkled face of Darcy Slater.\n\n\"Well, hello,\" I say, walking over to her at the bar. \"You know, I expected a bit more fanfare than an empty bar.\"\n\n\"There would have been had we known you were coming in,\" Darcy replies, resting her muscular arms on the bar in front of her. \"Or heard from you like, ever.\" Darcy keeps the smile on her face but she's an open book and I can see a flash of hurt cross her eyes as she says it.\n\nFour years ago, I didn't think twice about the people I left behind-- I just needed to get out of the city and somewhere completely new. Somewhere that didn't remind me of Jennifer or my parents around every corner. And the truth is, I'll be leaving again as soon as I can.\n\n\"You know me,\" I respond with a wink. \"Too busy wining and dining the rich and the famous out west.\"\n\nDeflection is easier to me than breathing and luckily, the hurt expression that I could see briefly in Darcy's eyes is gone as she lets out her familiar bark of a laugh. \"Of course,\" she replies. \"It's good to see you, Charlie.\"\n\n\"You too, Darcy.\" I move onto one of the bar stools just like I used to while Darcy grabs a bottle of bourbon. She holds it up to me in silent question and I give a quick nod. \"How's Alice?\"\n\n\"She's good. I'm sure she'd love to see you. How long you in town?\" she asks as she slides the drink in front of me and clinks it with her own.\n\nWe both down our drinks in one gulp and she moves to pour me another. The entire scene is so familiar that it almost feels like I never left town. As if things never changed and the old crew would come barging in any minute.\n\nI take a sip of my fresh drink before answering. \"Three weeks,\" I finally say. \"I'll be tied up with family stuff mainly, but I'll try to stop in. Kat's getting married.\"\n\nI hate lying to Darcy, but I also know this is the only time I'll be in The Runaway while home. I barely convinced myself to come home in the first place, but I love my sister and would never miss her wedding-- even if it did mean I'll have to spend an extended period with my brother.\n\nDarcy gives me a long look as if she can read the truth behind my words, but she doesn't say anything. She's never been one to push a conversation--probably something she's learned being a bartender for so many years. If Alice were here, she would definitely push me, so I'm thankful it's only Darcy tonight. Wednesdays are quiet at The Runaway.\n\nIt was in this bar that I met Darcy and her wife Alice. Ten years older than I am, Darcy and Alice, along with their crew, liked to think of me as their lesbian prot\u00e9g\u00e9. They were there to witness everything-- from my early days of fumbling through horrible pick-up lines that never worked to the much more relaxed woman I am now. And as I look at my old friend, guilt suddenly washes through me. I could have at least texted them once in a while instead of dropping off into oblivion. I make a promise to myself that I'll try to stop by the bar one more time before leaving town.\n\n\"And how is the family?\" Darcy asks.\n\nI buy myself some time by taking a sip, but I instantly feel a knot forming in my stomach at the mention of my family-- something that doesn't happen as much in LA where I'm surrounded by people who know nothing of my family name. In LA, I'm just Charlie Scott-- my mom's maiden name. The name Dawson is nowhere to be found.\n\nI've only been back in town for seven hours and yet everything here seems to be a reminder of my parents. This city will never let me forget that it was theirs. And that they're gone.\n\n\"Fine,\" I say, not elaborating as I turn on my stool and look around the empty bar.\n\nLuckily, Darcy doesn't push the topic. \"And will you be on the prowl tonight? Should I warn the masses?\"\n\nI turn around to the bar with my usual smirk back on my face. \"I've moved on to the LA market now.\"\n\n\"Oh, you mean blonde yogis who drink green smoothies for all their meals?\"\n\n\"No,\" I say defensively. \"They're not all blonde.\"\n\nDarcy lets out another loud laugh. \"Well, whether it's the sun or the smoothies, you look a hell of a lot better than you did when you left here. So, cheers,\" she says, pouring me another drink. I hold up the drink in thanks right as a group of women come into the bar laughing. As the group approaches the bar, Darcy puts out some coasters before turning back to me.\n\n\"You going to stay a while?\"\n\n\"Yeah, I thought I'd drink this upstairs and watch the parade for a bit.\"\n\nDarcy gives me a quick nod before turning her attention to the new group of women, who have moved in closer to make their orders. One of the women, a pretty redhead with loose curls, gives me a not-so-subtle once over and lingering smile. I return the smile but don't stop on my journey to the staircase. Maybe I'll come back down and chat with her in a bit, but that wasn't really my plan for tonight. I've shared enough drama with this city for one lifetime.\n\nAn hour later and I'm feeling the effects of the alcohol as it warmly courses through my body. Switching to beer from bourbon was probably a good idea considering I have to be up early for a fitting for Kat's wedding.\n\nThe Runaway still isn't as busy as a Saturday night, but by now, there are a handful of women on the dance floor downstairs, giving me something to watch as I sit there. Since being in LA, I've heard that most other lesbian bars in Manhattan have closed, so I suppose even on a Wednesday, this is the only place for some women to come where they won't be hit on by clueless men.\n\nI know I should stop drinking, even if it is only beer. The more I consume, the more the idea of talking to the cute redhead downstairs sounds appealing. The woman hasn't stopped glancing up at me since I came up here and I'm not usually one to hold back when a woman is so obviously interested. Especially one whose shirt keeps moving suspiciously lower and lower throughout the night, leaving her cleavage on full display from my vantage point.\n\nWhen my self-control loses out over the amount of alcohol I've had, I direct a flirtatious smile down to her, but as soon as I do, I hear Darcy's deep voice behind me.\n\n\"I'd stay away from that one. Bit of a loose cannon. She dated Jessie.\"\n\nDarcy nods down to the redhead as she sits and sets down two fresh pints of beer in front of us.\n\n\"On the house,\" she says, clinking her glass against mine.\n\n\"No, you should let me pay. Might as well use my family's money to buy drinks.\"\n\n\"Except your brother cut you off.\"\n\n\"Just from the Dawson trust. I still got the money from the sale of my Manhattan apartment and gallery. He can't touch that.\"\n\n\"Don't you think your parents would have words to say about him taking your inheritance away?\"\n\nI'm not surprised she asked the question. I left so quickly four years ago that my entire group of friends probably has a lot of unanswered questions. But the last thing I want to do tonight is talk about all that.\n\n\"It doesn't matter. They're dead,\" I reply.\n\nDarcy is quiet for a moment and I can feel her eyes on me, but she doesn't say anything else about my family. \"And how's the gallery?\" she asks after a moment.\n\nI take a sip of my new beer before answering. \"Turns out when I can't milk the Dawson name, it's a little harder to get visibility with the right buyers. It took a couple years to get any real names in, but it's doing well now.\"\n\nI'm again grateful that it's Darcy sitting here and none of my other New York friends, who would be peppering me with questions. After a moment, we fall into an easy silence as we look down at the dancing women. The redhead is now blatantly staring at me and doing some odd dance that I assume is supposed to be enticing but only makes her look like she can't control her limbs.\n\nDarcy lets out a small snort as she watches the woman before she turns her attention back to me. \"So, little Kat's getting married? It seems like yesterday she was a 16-year-old asking me to serve her booze.\"\n\n\"She hasn't been 16 for 12 years, Darcy.\"\n\n\"That means I'm 12 years older too,\" she says with a shake of her head. \"Let's just pretend.\"\n\n\"I'm good with that.\"\n\n\"Have you met the husband-to-be?\"\n\nI nod. \"They've both come out to visit me in LA a few times. Jake's cool. He's a vet too, which is kind of cute and kind of gross. They opened a clinic together downtown. But he's great to Kat and hates Ian, so he's good in my book.\"\n\n\"And how's the hotel business?\"\n\nI take a deep breath instead of doing what I want to do, which is to roll my eyes--as I seem to automatically do any time my family's company comes up.\n\n\"I get updates I don't need through my uncle,\" I say once I let my breath out. \"But my brother runs that show now and you know how I feel about him.\"\n\nDarcy gives me a small, knowing smirk. \"So, I assume things haven't improved on the Ian front?\"\n\n\"Ian is still a spoiled, conservative jackass. Nothing will ever change that.\"\n\n\"How's the gang?\" I ask, hoping to change the subject.\n\nLike always, Darcy's wise eyes convey more than she says, but she takes my cue and moves the conversation along. \"They're good. Everyone's being super gay. Making babies and growing urban gardens and shit.\"\n\n\"Wait, who?\"\n\n\"Nora and Flo on the babies and Jessie on the garden. Oh, and Cam moved to Long Island, so we see her almost as much as we see you.\"\n\n\"What about you and Alice? Any baby making?\"\n\nDarcy laughs and looks around. \"We have one. You're sitting in it.\"\n\nWe continue to catch-up about old friends and though the conversation flows easily, I can also feel an unspoken tension between the two of us. I've felt so disconnected to my life in New York and have begun to equate it so heavily with my parents and Jen that I don't know how to feel at ease-- even with someone I've known for so long.\n\n\"Everyone misses you,\" Darcy finally says.\n\nI let out a harsh laugh. \"I'm sure that's not the case. I was an asshole for just leaving the way I did.\"\n\n\"We all understood. Are you happy out there?\"\n\n\"I think I am, yeah,\" I respond with a shrug. \"As big as Manhattan is, it's always felt a bit suffocating. Now, I have a gallery that's all mine and women who are interested in me for more than my family's money.\"\n\n\"They must be desperate artists then because we both know it's not your face they're after. I see you only got worse looking.\"\n\nI smile in response knowing that Darcy is just teasing me. I would be completely blind not to notice the way most women react to me and LA doesn't seem to be any different to New York. Growing up, I was always jealous of Kat and Ian's resemblance to our mom. The twins both have gorgeous dark hair, dark eyes, and pale skin that gives them a sophisticated and elegant look. I'm my dad's daughter through and through. We both shared the same dirty blonde hair and light brown eyes. With my slightly wild, shoulder length hair and tanned skin, Kat has always said that I look like I belong in California.\n\n\"Did you forget that I'm both attractive and charming?\" I tease back.\n\n\"True. But what I really love is your modesty.\"\n\nI look at my watch again and see that it's almost eleven by now. I know I need to make my exit before I drink too much more and make a bad decision. A feeling that only intensifies when my eyes land on the drunk redhead downstairs. But right as I'm about to turn to Darcy to say my goodbye, I see a woman enter the bar alone.\n\nAll at once, the time of night, my reason for being in New York, the redhead, and even Darcy sitting next to me fade into the background of my mind. My body feels like it's been in some sort of coma and has suddenly come to life all at once as I look down at the striking woman.\n\nI scoot forward on my chair so I can lean against the rail, trying to get a better view. I watch as the woman gracefully sits down at the bar and orders a drink. Everything about her screams sophistication and class. From her straight back to the hands resting politely in her lap, this woman doesn't fit in at The Runaway and I'm not actually sure where she would fit in. She has an elegance to her that most modern women just don't possess. My quick analysis is only solidified when the bartender slides a glass of white wine over to the woman. I love Darcy and The Runaway, but ordering wine there? No, thanks.\n\nI continue to watch her, noting that she seems to have an easy confidence and authority about her. She lazily glances about the room with a look of subtle boredom on her face-- almost as if she's beyond any of the silly women dancing and laughing together around her. And to be fair, with a face that perfect, she probably is.\n\nAnd though I promised myself I'd behave and keep a low profile while in New York, I also hadn't counted on someone like this walking into the bar tonight. In this moment, I can't remember anything in my life that I've wanted to feast my eyes on more-- and I work in the art world for a living. This woman's face is impossibly beautiful. As if every feature was meticulously designed by an artist.\n\nFrom all the way up here, I can't see the color of the woman's eyes, but I can tell that they're light. Her face is angular, but not fierce and her long flowing brown hair looks like it was just styled by a professional. Her black pants and emerald blouse are simple, but I can tell even from this vantage point, that they're expensive.\n\n\"Who's that?\" I finally ask Darcy, trying to keep my voice neutral.\n\nDarcy looks down to the bar as she finishes off the rest of her beer. \"Don't know. Haven't seen her before.\" She looks up at me with a raised eyebrow. \"But I know that look.\"\n\n\"I don't have a look,\" I defend weakly.\n\n\"She looks like Jennifer.\"\n\nI scoff at that. \"She looks nothing like Jen.\"\n\n\"Different hair style, much taller. And brunette. But she's got that same snooty look to her.\"\n\nI ignore the comment as I look down at the woman again. Mainly because Darcy is right about my type. Though Jen hadn't been some conquest I sought out-- we had been best friends since freshman year of art school. I didn't even think I had a type back then.\n\nThe beautiful stranger is now watching the dancing redhead and her friends with what appears to be an amused expression and she must notice the redhead's attention on me, because a moment later, she's looking directly into my eyes. And it's a good thing we're across the room because the second our eyes meet, and I can see the clear blue of hers, a noise I don't even recognize comes out of my mouth.\n\nWhen the woman doesn't look away immediately, I lift my drink in a silent toast and try to stop the slight shake I can feel in my hand. Her eyes dance with amusement, but her lips remain stoic. Kissably stoic. She then turns around so her back is to the crowd and begins to drink her wine alone.\n\n\"Smooth,\" Darcy laughs from beside me. \"I think you just got rejected before you even asked. You must be losing your touch.\"\n\nI simply shrug my shoulders in reply and remind myself that I'm not looking for a hook-up tonight. Besides, I'm surrounded by beautiful women in LA. Maybe not this heart-racing-dry mouth-inducing kind of beautiful, but it's not like I'm hurting for female attention.\n\n\"I have to head back down. I'll send Lee up with another round when you give me the sign,\" Darcy says, pointing to my half empty beer as she gets up from her chair. I give her a nod in thanks, but my attention is still focused on the back of the woman downstairs.\n\nHalf an hour later, I have a fresh beer in front of me and am one step past tipsy. I continue to steal glances downstairs at the brunette, but the woman still has her back to me. Finally, when I've resigned myself to the fact that she isn't going to turn again, I know I should head home. But right as I'm about to get up, I can see the redhead from downstairs approaching my table out of the corner of my eye.",
        "\"You made me walk up a staircase just to get to you,\" the woman says, leaning against the rail in front of me. Now that we're up close, I can see that her eyes are slightly glassy, her sweaty hair falling into her face as she smiles down at me.\n\n\"Am I not worth a few stairs?\" I ask, trying not to be too annoyed that she's blocking my view of the beautiful stranger downstairs.\n\nShe gives me an appraising look up and down and by the way she wobbles on the rail, my earlier assumption is confirmed-- the woman is very drunk. \"You certainly are. I haven't seen you here before. You seem to know people though,\" she replies, nodding down to where Darcy is standing behind the bar.\n\n\"I used to live here. But I don't anymore,\" I reply, but I'm already bored of this conversation.\n\nThe redhead clearly isn't picking up on my obvious disinterest and sits down in the seat Darcy had vacated earlier.\n\n\"You're really beautiful,\" she says next, leaning into me.\n\nI internally roll my eyes at the unoriginal line. I know I'm probably being harsh, but her presence is beginning to grate on me.\n\n\"Thank you,\" I say, doing my best to sound somewhat polite but not interested.\n\n\"Can I buy you a drink then? I'll even walk up those stairs again. Or we could grab a cab and walk up the stairs to my apartment.\"\n\nI can't help but be impressed by the woman's boldness. The way she's leaning forward causes her cleavage to lift, giving me a view of her curves. I allow myself one glance down as I weigh my options. This would certainly be an easy outlet for the night, but as Darcy's warning rolls around my head, I bring my eyes back up and give the woman a tight smile.\n\n\"I'm very flattered. But I think I'm going to drink alone tonight,\" I say.\n\nThe woman stares at me for a moment before she moves her chair back and gets up. \"Suit yourself. Have fun...alone.\"\n\nShe gives a small mocking laugh as she heads back down the stairs to her group of friends. I sit back in my chair with a small sigh of relief-- that woman is clearly a walking red flag.\n\nLooking at the tables around me, I realize the bar has filled up even more and after the awkward exchange with the busty redhead, being somewhere so public has lost its appeal. As I finally make my way downstairs, I move my body through the small group of people at the bar so I can pay Darcy and head out. I look down the bar to catch one last glance of my beautiful stranger, but the woman is gone. I turn back to the bar and try not to be too disappointed.\n\n\"Heartbreaker then?\"\n\nI suddenly hear a low, alto voice close to my ear, sending a pleasant shiver up my arms. When I turn my face to the voice, I'm rendered speechless by the brightest eyes I've ever seen. And now that the brunette is in front of me, I can tell that they're not quite blue-- they're more of an aquamarine. The woman has moved to the stool next to me and her drink, which is now a neat, brown liquor, dangles sexily from one hand as her eyes roam down my body.\n\n\"Sorry?\" I finally ask, only able to form that one word as my eyes take over all brain activity, leaving my mouth useless.\n\nThe brunette nods her head to the corner of the bar and I reluctantly tear my eyes away so I can see what she's referring to. The redhead from before is leaning against the far brick wall, surrounded by her dancing, and clearly drunk friends. But her arms are crossed, and she's directing a scowl my way.\n\nI'm again relieved that I didn't let that conversation go any further, but mainly I feel a rush of excitement around the fact that the brunette was clearly watching me.\n\nI turn back to the stranger and am met with a sexy, amused smile. The air feels thicker down here than it did upstairs, and I can't tell if that's due to the dancing bodies around me or the woman in front of me. But for some reason, I feel nervous standing here. And I don't remember the last time a woman made me feel that.\n\n\"I think she'll survive,\" I finally manage to squeak out. I clear my throat, not quite sure why I suddenly sound like a hormonal boy.\n\nThe woman simply gives me another smile and turns her stool back to the bar. The quick flirtation and abrupt stop has me standing there staring dumbly at her. I don't want the conversation to end.\n\n\"If you asked to buy me a drink, I'd have a different response,\" I blurt out.\n\nUnfortunately, Darcy decides that's the moment to come over, and when she hears my comment to the brunette, she gives a roll of her eyes and walks back to the other end of the bar.\n\n\"Is that your way of conning women into buying you alcohol?\" the woman asks, turning her stool back to me again, which I consider a small win.\n\n\"Do I look like someone who needs to con women into things?\" I ask, feeling a surge of my usual confidence.\n\nThe woman doesn't answer right away and seems to take her time checking me out, giving me an opportunity to do the same. And If I thought this woman was beautiful from upstairs, it's nothing compared to what she looks like up close. My eyes feel torn between looking at her piercing eyes, the adorable sprinkling of freckles over her nose or her entirely too kissable lips.\n\nShe doesn't hide her blatant appraisal and I don't mind the attention. She looks down at my tight black jeans and slowly moves her eyes up to the soft, white t-shirt I have on. \"You look pretty good from here,\" she finally says.\n\nAs I realize the brunette is flirting with me, I can't help but smile. Something about what I'm feeling feels fresh and new-- as if I've never been flirted with by a beautiful woman.\n\n\"So where did the pretty girl go wrong?\" she asks right before she takes a small sip of her drink and nods towards the redhead again.\n\n\"You think she's pretty?\" I ask, making sure not to break eye contact with her.\n\n\"I think you're prettier.\"\n\nSomehow the compliment coming out of those lips gives me an entirely different feeling than when the redhead said it only ten minutes ago. Or when any other woman has ever told me that I'm pretty.\n\n\"Thank you,\" I reply with a small smile before looking back to the redhead who's still sulking in the corner. \"I'm not interested in anything serious right now. And something tells me she's easily confused.\"\n\nThe brunette flashes a quick smile and the way her lips part so perfectly over her teeth has me swooning and wanting to see it again. \"She does have a Stage Five Clinger vibe to her, I suppose\" she says before leaning in slightly closer. \"Just so you know, I'm not easily confused.\"\n\nI'm not sure if it's the woman's confidence, the musky perfume that's hitting my nostrils, or the fact that I can see her eyes on my lips, but my pussy gives a sudden, almost painful throb. As someone squeezes into the bar space behind me, I use the excuse to move in closer to her stool. My thighs are now lightly grazing her knees.\n\n\"So. You're alone on a Wednesday night. Are you celebrating something or forgetting something?\" I ask. \"Unless you're meeting someone of course,\" I add hastily, internally rolling my eyes at my verbal clumsiness.\n\n\"I'm not waiting for anyone. But are those my only two options? Forgetting or celebrating?\"\n\n\"Oh no. There's definitely a third option.\"\n\n\"Which is?\"\n\nI lean down so my mouth is closer to the woman's ear and I swear I hear a small intake of breath come out of her mouth.\n\n\"Getting laid,\" I say quietly.\n\nThe woman regards me for a moment but doesn't say anything. During her silence I wonder if I was being too bold, too fast. But then I feel her hand gently graze the inside of my thigh. The touch sends another shot of electricity right to my center and I can't help but close my eyes and focus on not moaning. I only open them when she pulls her hand back to her knee.\n\n\"Which one do you think it is?\" she asks in such a low, quiet voice that I can barely hear her.\n\nI take a few breaths before answering her. As sexy as she is and as much as her touch just affected me, I know I have more game than to almost come in my pants from one graze.\n\nI give the woman's body a dramatic look up and down and twist my mouth as if analyzing her. \"Usually, people celebrate with others,\" I say, relieved that my voice sounds normal. \"Though not always. But you're drinking something dark and what looks to be strong...so I'd say this isn't a celebration.\"\n\nI cock my head from side to side before I continue. \"The liquor might imply you're trying to forget something, plus you look like you just came from work and work always makes people upset. As for the third option, something tells me you don't have to try too hard in that department. Plus, it's a Wednesday, which is hardly the best pick-up night of the week.\"\n\n\"Tell that to your friend sulking over there,\" the woman says with a smirk on her face.\n\nI laugh. \"I'm not sure I'd put you two in the same category.\"\n\n\"Well thank you. I appreciate that.\"\n\n\"So how close am I?\"\n\n\"Very logical reasoning so far. But which one is it?\"\n\nI tap my finger to my lips as I look at the woman once more. \"Number three is intriguing since you did start talking to me. But I'm irresistible and most women end up talking to me, so I'm going with door number two. Forgetting.\"\n\nThe woman gives me a smile and tilts her head from side to side as if considering. \"Interesting logic. But I'm afraid you're incorrect.\"\n\nI gasp in mock offense. \"You mean I'm not irresistible?\"\n\nThe woman lets out another low laugh and I feel a rush of silly satisfaction that I can elicit that response from her. \"Incorrect in your choice,\" she replies, ignoring my comment. \"You assumed it couldn't have been more than one. And the truth is I'm here drinking, alone as you so generously pointed out, to celebrate and to forget.\"\n\n\"But not to get laid?\"\n\n\"I guess I haven't decided on that part yet,\" she says as she subtly moves her fingers to lightly play with the tips of my free hand. I can feel my lips part at our sudden contact, but luckily, I'm able to stop the gasp that wants to escape.\n\nI clear my throat before I speak again. \"Do you want to go get a drink somewhere with me?\" I glance over at Darcy. Even with a friend, the lesbian rumor mill is strong, and I don't really feel like dealing with that this week. \"I mean, somewhere other than here,\" I add.\n\nThe woman looks down at my lips before looking back up into my eyes and nodding slowly.\n\n\"My hotel is close by. They have a bar,\" I say.\n\n\"Hotel?\" she asks.\n\n\"I'm just here for a visit. But we can just go to a bar if that's more comfortable for you.\"\n\nShe's quiet for a moment as she looks around the bar and since I first saw her come through The Runaway's front door, this is the first time she's seemed nervous. It actually makes me feel better that she isn't completely impenetrable considering my own heart rate feels a tad fast for someone just standing in one place.\n\n\"Let's go to your hotel,\" she finally says, standing up and putting on a long coat. \"Do you need to settle your tab?\"\n\nI look over at Darcy and nod my head towards the door, indicating my departure. Darcy gives me a knowing smirk, but simply nods back as she helps the next customer. I have to remember to send her a thank you text later.\n\n\"No, I'm good here.\"\n\nWe both move towards the front door of the bar and as we do, I can't miss the daggers being shot my way from the long-forgotten redhead, now dancing between two very drunk women. I open the door to let the woman through.\n\nAs we begin walking down the street, she casually slides her arm through mine and I try my best not to smile like an idiot at the small gesture.\n\n\"It's just up on 51st. The Dawson Midtown,\" I say, as we turn the corner. I can feel her pace slow as I say it, so I stop and turn to her. \"Like I said, we can go somewhere else if the whole hotel thing is freaking you out. Or I can just walk you to a cab...\" my words trail off. Because the truth is, that's the last thing I want right now.\n\nThe woman steps into my space and she's so close that I can feel her warm breath on my face.\n\n\"Take me to your hotel,\" she says quietly, her eyes never leaving my lips. \"I want to go.\"\n\nIt would be so easy to lean in and kiss her, but I don't want to rush things, especially when she just agreed to go back to my hotel with me. So, I simply turn and pull her arm back through mine as we continue walking down the street in silence.\n\nNow that I have this gorgeous woman on my arm, it's hard to remember how cold I was when I first entered The Runaway. Manhattan suddenly feels hotter than July.\n\nChapter Two\n\nEvery promise I made to myself when I got off the plane this morning is in the process of being broken as I sit across from my beautiful stranger in the hotel bar.\n\nIf I was in town for any other reason other than Kat's wedding, I wouldn't even be thinking twice about this, but my sister is the most important person in my life and I'm not going to ruin that by fighting with Ian the whole time. Which is exactly what would happen if he could see where I'm currently sitting.\n\nIt's not that he doesn't know I'm staying here. I assume my Uncle Neil told him that. But Ian has always had a conservative stick up his ass and I know exactly what he'd say about keeping my personal life out of his line of hotels. Not that they're his-- my parents worked their entire lives to build up the company into what it is. The Dawson Hotels were their pride and joy and both Ian and I know that they never intended him to take over.\n\nBut here I am. Sitting across from the most beautiful woman I can remember seeing in recent years, or probably ever. A woman whose name I don't even know.\n\nSo far tonight there's been some unspoken agreement between the two of us not to get too personal. And I can't deny how much I enjoyed our flirty, entirely unsubtle banter at The Runaway. Banter that seems to be missing now as I watch her look around the hotel bar nervously.\n\n\"Are you okay?\" I ask as the bartender comes over with our drink orders. \"You seem nervous.\"\n\nShe takes a breath and gives me a smile. \"Maybe you make me nervous.\"\n\n\"I highly doubt that. I assume you own a mirror. I'm the lucky one to be sitting here with you.\"\n\nI know what I said sounds like a cheesy line, but I hope she can sense my sincerity. I have to believe this woman knows how beautiful she is.\n\n\"Based on the way some of the women in there were looking at you, I think you probably do okay,\" she replies.\n\n\"So how long were you watching me then?\"\n\n\"It's hard not to look at someone who keeps staring so blatantly at you.\"\n\n\"And I thought I was being subtle.\"\n\n\"I'm glad you weren't.\"\n\n\"And what did you see while you were watching me, watching you?\"\n\nShe takes a moment to slowly roam her eyes down my body, finally bringing them back up to my face with a thoughtful expression.\n\n\"You flip your hair to the other side of your head when it falls into your face. Your smile doesn't flash, it grows slowly. You seemed distracted all night, which produces a slight crease between your eyes. You were comfortable in there but detached. When I first saw you, I pictured you standing on a tropical beach, holding a surfboard as you geared up to race into the waves. Wearing that easy, confident smile that seems to make my pulse rate faster. You look foreign to the snow. As if you should be in perpetual sunlight. And you may be the prettiest girl I've ever seen.\"\n\nI wasn't expecting all the words that just came out of the woman's mouth and for a moment all I can do is stare with my mouth slightly open.\n\n\"I don't surf,\" I finally say, eliciting a laugh from her.\n\n\"Maybe you should learn.\"\n\n\"I'll add it to the to do list,\" I reply, taking a sip as I try to control my smiling, which is hard now that she's admitted to being attracted to me. \"So, you're out to celebrate something and to forget something. That's an interesting dichotomy. What are you celebrating?\"\n\nI instantly regret asking the question when in an instant, the humor dancing behind her eyes dims.\n\n\"I was promoted,\" she says simply.\n\n\"Congrats,\" I say carefully considering she said the word promoted like it was something toxic.\n\n\"Thank you.\"\n\n\"You don't seem happy about that.\"\n\n\"It's just not what I want to do.\"\n\n\"What do you want to do?\" I ask, but as soon as I do, the woman looks around and I can tell I've hit a sensitive topic. \"It's also okay if you don't want to talk about it,\" I add quickly.\n\n\"I don't,\" she says in the most serious tone I've heard her use all night. But almost a second later, her face softens, and she gives me another smile. \"You know, I gave you my answer earlier, but you never told me why you were drinking alone on a Wednesday. I'm going to guess it wasn't a celebration.\"\n\n\"No, I wasn't celebrating,\" I respond.\n\n\"It's okay if you don't want to talk about it,\" she says, repeating my words from before.\n\n\"I don't. In fact, it seems like neither of us really want to talk about much.\"\n\n\"That doesn't mean the night has to end.\"\n\nI feel the tension that had momentarily settled around us lift as she gives me a playful smile. I feel relief rolling through me, which seems silly since I just met her. But her words offer us a chance to give in to whatever this crazy chemistry is without telling our life stories.\n\nIn an instant I realize how much I need this--one night of raw, hot, no-strings-attached sex before I enter a parade of never-ending events with my family and memories I haven't wanted to revisit.\n\nWhen her lips grow into a wider smile, I realize that I've been staring at them in my hazy daydream. When I flick my eyes back up to hers, I can see a clear yearning there that I know is mirrored on my own face.\n\n\"Do you want to get a room so we can continue to...not talk?\" she asks.\n\n\"Meet you by the elevators,\" I say a little too quickly. \"I'll take care of the bill here.\"\n\nI have an eye for color and detail and in that moment, I can see the other woman's eyes turn from the aquamarine color they've been all night to a much darker shade of blue. She gives me one nod and moves out of her chair before coming closer to my side. She pushes some of the hair that's always falling into my eyes out of my face.\n\n\"I can't wait to see what that hair looks like even more tousled,\" she says in a quiet voice trailing her fingers down my cheek. \"See you by the elevators.\"\n\nI watch her walk away and know my mouth is hanging open like a cartoon, but I don't remember the last time I met a woman who's as beautiful as she is bold, and the swagger is sexy.\n\nWithout waiting for the bartender to come back to our table, I go straight to the bar so I can pay. My legs feel shaky as I walk and I'm not sure if that's from the beer or the brunette, but I have a feeling it's not the alcohol. I'm used to drinking-- often way more than I did tonight. What I'm not used to is my entire body feeling on fire from a simple touch to my cheek.\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~ ~ ~</p>\n\nThe Dawson Hotel rooms haven't changed much since the last time I was in one. The curtains look a little different, but other than that, things seem to be the same as they were four years ago. LA has its own line of Dawson Hotels, but I've steered clear of those since moving. I have no need for a hotel room in LA anyway.\n\nWhen I was younger, I always looked forward to the Dawson Christmas party. I'd get to stay in a hotel suite with all my cousins and siblings. Once it was bedtime, my parents and aunt and uncle would break out the expensive liquor and put the kids to bed in the rooms upstairs while they carried on downstairs.\n\nThose are some of my favorite childhood memories. Running through the hotel halls as fast as we could, eating way too much junk food from room service and no parents to tell us to stop. Even Ian was usually fun on those occasions.\n\nIt must be being back in New York. I don't usually think about my brother this much and I don't want to ruin this sexy turn of events by giving him any more energy. I also don't want the brunette to notice my wandering thoughts. It's not that I'm hiding who I am, but telling anyone that I'm the absent heir to the Dawson throne only brings up questions I don't want to answer.",
        "Tonight, I don't want to be a Dawson. I just want to be a woman, taking another woman back to a hotel room, and hopefully fucking her thoroughly. From the hungry look the brunette is directing my way as she slowly shuts the hotel room door and leans up against it, I can tell that possibility is definitely on the table for tonight.\n\nLeaning against the door with her hands behind her back, the woman looks so sure and sexy and whatever nervousness she exhibited downstairs is nowhere to be seen. All I've been able to think about since I first saw her is getting my lips on hers and I still can't believe this is how the night is ending.\n\nIf this was a few years ago, I'd already be at the door, pushing her up against it. And part of me wishes I could be the roguish, care-free woman I used to be. But the one thing everything with my parents' death and the break-up with Jennifer has taught me, is that I need to grow up and realize that not all messes go away with a snap of my fingers or a swipe of my credit card. Leaving drama in New York isn't something I'm here to do and I want to make sure the brunette is on the same page.\n\n\"I'm only in town for a few weeks,\" I say quietly.\n\nThe woman pushes off against the door, before tuning to secure the deadbolt. The only light in the room is coming from a small lamp in the corner and when she turns around, I can see an intensity in her eyes that wasn't there before. I can practically feel the desire radiating off her as she takes a step closer to me.\n\n\"Good,\" she replies, a small smile playing on her lips. \"I won't be giving you my number.\"\n\nFeeling emboldened, I take a step closer to her as well. \"You'll never see me again after tonight.\"\n\nShe takes her own step towards me and now we're close enough to touch. \"Good,\" she whispers. \"Because I'm a very busy person.\"\n\nI take one more small step forward so our fronts are lightly touching and I can feel the light press of the other woman's breasts against my own. We're both breathing heavy, as if we already physically exerted ourselves.\n\n\"Just tonight,\" I whisper as I stare down at the woman's mouth.\n\n\"Just tonight.\"\n\n\"Though, I don't think I've ever been with a woman and not known her name.\"\n\n\"It's Annie.\"\n\nDespite how turned on I am, I lean my head back and smile. \"You look like an Annie.\"\n\n\"Really? Most people equate that name to a red headed orphan.\"\n\n\"Well, I won't do that if you promise not to ask me if I enjoyed the chocolate factory. I'm Charlie.\"\n\n\"Deal,\" Annie says with a smile. \"Now that we have formalities out of the way, can we get back to getting to know each other nonverbally?\"\n\nI respond by leaning in and finally closing the distance between our lips. At first, the kiss is tentative as we softly brush our lips against each other. As if we're both familiarizing ourselves to the new taste and feel. I can faintly taste bourbon on her breath, but more than that, her mouth tastes sweet. As if Annie had just devoured a handful of candy. My hands fall to her waist as I pull her in closer and deepen the kiss.\n\nAs our tongues meet, all softness and hesitation dissipates and I tighten my hold as I feel her moan softly into my mouth. Everything I thought I knew about first kisses flies out the window as this magnificent woman takes control of my mouth, moving her tongue in and sucking on mine. If this is how Annie fucks, I can't wait much longer to get her naked.\n\nThere's something about kissing Annie that feels so different to anything I've ever experienced. Annie kisses like she was just told she'd never get to kiss a woman again. She's thorough and sensual and if all we did was kiss, I'd probably feel more satisfied than I have with any other woman.\n\nI can feel her hands everywhere as they move up my body and snake their way into my hair, pulling my mouth even closer. When she rolls her hips into me, the moan that comes out of my mouth almost surprises myself. I'm so turned on already and we're both still fully dressed.\n\nAs we finally break apart for air, Annie leans her head back so she can look into my eyes. \"Wow,\" she whispers as she moves her fingers to pinch my bottom lip. \"I thought you might taste good. But not this good.\"\n\nI can't find the words to reply-- not with Annie's fingers so close to my mouth. Instead, I simply nod and take her fingers into my mouth. As my lips close around her fingers, I allow my tongue to massage them gently, causing Annie's eyes to close.\n\nAfter a moment, she takes her fingers out of my mouth and moves backwards so we're no longer touching. I do my best to hold in the whimper that wants to escape from the loss of contact, but I'm pretty sure I failed by the small smirk I can see on her face.\n\nWithout saying anything, or even breaking eye contact, Annie lifts her shirt over her head and throws it carelessly to the ground. My eyes dart down to soft curves spilling out of a black, lacy bra and all I want to do is to bring her against my body again.\n\nSomething seems to have shifted since our kissing ended. I can feel my own breathing increase, but I can't control the trembling mess I've become. And it seems Annie can sense that-- she can sense that she has complete control of the situation.\n\nI'm not exactly a top, at least not in the strictest sense. More often than not, I've directed the flow and pace of my sexual encounters. But when I look into the deep blue eyes in front of me, with Annie so brazen and confident in just her bra, I feel hopeless to control anything. For the first time, all I want to do is give. And give and give and give.\n\nWhen Annie stays where she's standing, I move my hands down to the bottom of my shirt to take it off since it only seems fair that we're both topless.\n\n\"Don't,\" Annie says in a soft but commanding voice. \"Let me.\"\n\nShe walks back into my space and makes quick work of removing my top and bra, tossing them aside like she did her own shirt moments before. As her hands move down to grip my waist, she makes no show of hiding her blatant ogling of my tits and the look of desire, mixed with the sexy way Annie subconsciously licks her lips, has my nipples hardening almost painfully.\n\n\"God. You're so sexy. I wanted you the moment I saw you,\" she whispers as she finally moves her eyes away from my chest so she can place her lips on the spot right below my ear.\n\nAs she begins sucking her way down my neck, I can't keep in the moan that finally escapes my lips. I want to actually respond to her words, talk to dirty to this woman, let her know how sexy she is-- but all that seems to be able to come out of my mouth are small gasps and moans as Annie's lips continue to familiarize themselves with my body.\n\nWhen her lips latch on to my nipple without warning, I let out a gasp and my body jerks forward. She cups both of my tits as she sucks, and I don't even know how long she's at it until I feel my legs begin to shake.\n\nNeeding to anchor myself to something, I lace my hands into the silky brown hair I've been admiring all night. I feel a primal need to taste the woman's lips again and I don't know how much longer I can stand on my shaky legs as she focuses her hot mouth on my tits. For the first time tonight, I take control and pull her mouth off my nipples so I can kiss her. Annie lets out a frustrated grunt but once our lips touch, she leans back into the embrace.\n\nAs we kiss, I feel like I'm losing control. This woman is so sexy, so sure in her desire for me, that I feel like I may come as soon as my pants are off. Even if I never see Annie again-- which as of now is still the plan-- I won't let her leave this room thinking I'm some inexperienced teenager who fumbles her way around women. As the kiss deepens again, with our tongues flicking against each other's erotically, I move my hands behind her back and remove her bra with one quick movement, earning me a satisfied moan from Annie that I can feel vibrate in my mouth.\n\nThe touch of our bare breasts together removes the last vestiges of control for both of us and we fall into a sloppy embrace of roaming hands and wet kisses. I finally break my mouth away so that I can let out two raspy words.\n\n\"Bed. Now.\"\n\nWithout missing a beat, Annie gently pushes me back until my legs hit the bed and I'm forced to sit on the edge. She then stands before me as she slowly unbuttons her pants and removes them along with her underwear.\n\nEverything seems to slow down and I can't do anything but stare at her naked body even though my fingers itch to touch her. And not because I'm not insanely turned on-- because I am, probably more than I ever have been-- but I need a moment to take in the sight of Annie. If tonight is the only night we have together, I want to sear the image of something so beautiful into my memory. Like I would a sunset or a rare painting.\n\nMaybe my brain is too caught up in arousal to think clearly, but to me, there is no scenery or work of art that could ever really compare to a human being that possesses such grace and beauty. Comparisons would always be a little bit harsher now that I've seen Annie.\n\n\"You should be on a canvas,\" I say dreamily before I even think about the words coming out of my mouth. Annie stops her progression to the bed. \"I'm sorry. Did I say something wrong?\" I ask quickly.\n\n\"No,\" she says, but she still looks more serious than she did only moments before. Finally, she continues walking until she's right in front of me. \"Feel,\" she says, pulling one of my hands up to the inside of her leg.\n\nMy eyes snap shut and I let out a low moan as my hand feels the wetness coating the inside of her leg. She then sets my hand down into my lap again. \"That's what your words just did to me.\"\n\n\"You're neat and tidy compared to the mess in my pants right now,\" I tease back, looking up at her.\n\nAnnie just smiles as she kneels on the ground and moves her body so she's in between my legs. \"Poor, baby,\" she says as she unbuttons my jeans and pulls them down my legs. \"I'm sure I can help you clean that up.\"\n\nOnce my clothes are completely discarded in a heap with the other items, Annie lightly grazes her hands up my legs until they're settled on my upper thighs. She then looks up at me and somehow, even though we're both naked, and Annie is in a submissive position on her knees, she's still in control of the situation. All I can do is just stare down at her and try to temper my rising and falling chest.\n\n\"What do you like?\" she finally asks.\n\n\"Everything?\"\n\nIf I weren't so turned on, I'd probably cringe at my clumsy response, but at this point I'm so desperate to feel more of Annie that I don't care how it happens as long as it happens soon.\n\nAnnie looks up with a mischievous smile on her face. \"That would take more than one night, but I'll see what I can do.\"\n\nChapter Three\n\nI watch the smile fall from Annie's face as her hand trails down my inner thigh and touches my dripping pussy. When one of her fingers slides easily through my folds, she closes her eyes and lets out a sigh-- almost as if in relief. I can only mirror the action, allowing my own eyes to close as she brings her finger up the length of me.\n\nAfter only a moment, she pulls her hand away, causing my eyes to finally open and look down at her. I'm so turned on that all I can do is breathe and stare and try not to moan already.\n\n\"You were right. You are very, very wet. May I taste?\" she asks.\n\n\"You can do anything you want,\" I manage to gasp out.\n\nAnnie's request for consent is sexy, but I can't imagine saying no to this woman-- about anything. By the tone of the question though, I can also tell that she knew exactly what my answer would be. I don't think I've ever been with a woman who bypassed the rest of my body so quickly, but Annie is on a mission. And that mission seems to start with my pussy.\n\nWithout teasing me any longer, Annie lowers her head and places one, soft kiss on my pussy. She repeats the action, carefully placing soft kisses up and down my length as if she's becoming familiar with me in the same way she did when we first kissed. She takes a long breath, as if inhaling my scent as she makes her way down.\n\nI can feel myself getting wetter by the minute and I'm tempted to push my hips up to demand more, but as it turns out, Annie doesn't need the encouragement. As her tongue finally makes contact with my opening, my eyes slam close again and I let out a long, deep moan. Both of my hands fall back onto the bed so I can hold my shaking body upright.\n\nAnnie begins circling my opening with her tongue but doesn't enter. Instead, she brings it back up, taking her time to lick up as much of the flowing juices as she can. When she finally reaches my clit, she only gives the hard bud one flick of her tongue before pulling her face back.\n\nI open my eyes as soon as Annie's tongue leaves my pussy, but I'm too aroused to form a sentence or even one word. I simply let out something that sounds between a grunt and a gasp. But when I see Annie's face looking up at me, all glossy and wet, I don't mind that she stopped. Annie looks drunk on her own arousal and the sight is as hot as anything a tongue can do.\n\n\"You taste better than anything I've ever had on my tongue,\" she says as she looks up at me with that same dazed look. \"So sweet. Almost like you belong in a chocolate factory.\"\n\nIt takes a moment for her words to sink in, but when her eyebrow suddenly arches and her smile becomes more of a smirk, I let out a low laugh. \"That's the weirdest yet hottest thing anyone has ever said to me.\"\n\n\"You'll need to tell me when to stop. I won't be doing that of my own volition,\" she says as she lowers her head again.\n\nThis time, she doesn't tease, and she doesn't kiss-- she devours. I don't think I've ever felt someone's mouth explore my pussy so thoroughly and the sensations are so overwhelming that I don't know if any other tongue will ever satisfy me again.\n\nThe only other woman that I've been with that has taken such control was Jen, but that always felt more like a competition. Jen acted as if asserting dominance in the bedroom asserted it over all aspects of our relationship.\n\nAnnie demands control in such a different and sexy way. It's as if she needs this-- has been waiting desperately for it.\n\nWhen she lets out another moan against my pussy, the vibration, mixed with the idea that she's enjoying this just as much as I am, causes me to let out a series of gasps and moans and I can already feel myself barreling towards an orgasm.\n\nSuddenly, Annie's lips come off my pussy again and the lack of contact causes another involuntary groan of protest to leave my mouth, eliciting a small laugh from the brunette.\n\n\"Don't worry,\" she says. \"I'm not finished. Lift your legs over me.\"\n\nI feel paralyzed by the pleasure flowing through my body and I don't think I could even lift a finger, let alone my legs. Annie seems to pick-up on my dilemma when she lets out another laugh and guides my legs so they're draped over her shoulders.\n\nShe pulls on my legs so she's as close as she can get to my pussy and I can wrap myself around her neck. She keeps her hands on my legs as she moves her tongue back onto my dripping folds.\n\nShe swipes her tongue low so she can lightly circle my opening before licking her way up to flick her tongue against my clit. I can feel my body start to shake as my orgasm gets closer. With one hand, I continue to lean back on the bed, but I place the other hand on Annie's head, and based on the way the brunette moans in response, I can tell it's a welcome move.\n\n\"I'm getting close. I'm going to come,\" I gasp out.\n\nAs soon as the words are out of my mouth, I can feel one finger enter my opening as Annie continues to swirl her tongue around my clit. And as her finger sinks in deeper, she begins a steady pace of pumping in and out while her tongue flicks against me-- as if she knows exactly what to do to push me right over the edge.\n\n\"Fuck, that feels good,\" I moan out when Annie's finger thrusts in faster. \"Add another, please. Fuck.\"\n\nAnnie responds without taking her mouth off my clit and adds a second finger. I can feel her own moans vibrate against me as her fingers begin an unrelenting pump in and out of my pussy and the brunette's own enthusiasm is intoxicating.\n\n\"Come for me,\" she says, taking her lips off my clit for only a second before resuming her attack. \"Come for me, now,\" she demands and that's all I need before I can feel my walls clench tightly around the two fingers inside my pussy.\n\n\"I'm coming. Fuck. Don't stop,\" I scream out as my fingers grip Annie's hair, trying desperately to soak up as much of her mouth as I can.\n\nWhen her tongue swipes against my clit again, my body jerks from the overstimulation. I gently move my hand down from the top of her head so I can stop the movements of her mouth and indicate without speaking that I can't handle anymore.\n\nAnnie lets out a small groan of protest but stops, resting her head against my thigh as I attempt to catch my breath. When I finally feel like I can move my muscles again, I sit up and look down at the woman beneath me.\n\nAnnie's hair is a complete mess, and her eyes are glassy, but it's the confident smirk sitting on those lips that has my pussy clenching all over again.\n\nI haven't fully recovered from my orgasm and part of my body just wants to collapse onto the bed, but there's just something about the sexy look Annie is giving me that erases any need or desire for rest. And while I actually love the way Annie has taken control so far, I also want to wipe that smirk off her face and turn it into something else.\n\n\"Come here,\" I say, pulling her up from the ground. \"Straddle me.\"\n\nAnnie seems as enthusiastic about receiving as she is about giving because she doesn't hesitate to move her body up and wrap her legs around me. For a moment, I'm distracted by the perfect pair of tits sitting in front of me and I cup each before lowering my head to suck on her nipples. I allow my tongue to swirl around them, reveling in the moans that the action elicits from the brunette, before bringing my head up again and looking at her.\n\nI lace my fingers through the back of her head and grip her hair lightly so she's anchored around me. Our faces are close as I hold us together. \"That was fucking amazing. May I return the favor?\" I ask.\n\nShe leans in and places a sensual kiss on my lips, sliding her tongue in to allow me to taste myself there. When she leans her head back, I realize that my grip on her hair has loosened and the brunette has once again taken control of the situation.\n\n\"If you don't and now, I'll do it myself. At this point, it won't take much,\" she says right before she swipes her tongue across my lips.\n\n\"Fuck that.\"\n\nI grab her back with one hand and move the other down so I can finally dip my fingers into the pussy that I can already see is perfect, just like the rest of her body.\n\nWe're far past the point of teasing and I can tell by the way Annie is grinding down on me that the woman doesn't need things to be soft and gentle. But I also don't want to rush getting to feel her for the first time, so before pushing my fingers inside, I allow my fingers to explore just how wet fucking me made her.\n\nAs my fingers become soaked, my forehead drops to hers and I let out a low groan. \"You are so wet,\" I whisper against her lips, moving my fingers into a \"v\" shape so I can begin slow, torturous strokes against her.\n\nThe woman who was so in control only minutes ago is gone and Annie simply nods her head vigorously. As my thumb flicks her clit, she lets out gasp after gasp and I can't help but stare at the beautiful way she accepts pleasure so openly.\n\nClearly not able to speak through the moans that start tumbling from her mouth, Annie grabs my wrist and pulls my hand down. \"Inside. Please. Fuck me,\" she says almost incoherently.",
        "I grip her back harder and lift her up slightly so I can get two fingers inside her pussy and begin to pump in and out. Spurred on by the increasingly loud noises coming from her, plus the wetness that just keeps flowing from her pussy, I add another finger.\n\n\"Yes, yes, yes,\" she cries out. \"You feel so good, Charlie.\"\n\nAnnie takes both of her hands and pulls me in for a messy kiss that she continues to moan into. She's taking my mouth so thoroughly that all I can do is accept it and focus on what my fingers are doing.\n\n\"I'm getting close,\" Annie gasps out, finally breaking her wet mouth away from mine.\n\n\"Not yet, babe. I want you to come in my mouth.\"\n\nI quickly scoot my body up the bed, pulling Annie with me until we're a heap on the pillows. None of it is graceful, but this moment doesn't call for that and she seems to agree. As she looks down at me, she's breathing heavily and there's a slight shake to her body.\n\n\"Let me taste you,\" I say, moving my body so I'm fully on my back.\n\nShe doesn't need any additional instructions and crawls over my body until her pussy is directly in front of my face. She then places two hands on the headboard of the hotel bed before lowering herself down onto my mouth. As good as it felt to be fucked by Annie-- and as good as it felt to have my fingers deep inside the woman-- nothing feels as good as getting to finally taste her.\n\nI don't think I've ever been with a woman who showcases so few inhibitions during our first time together. Annie is as comfortable here, straddling my face, as she was when she sat so confidently in the bar earlier.\n\n\"Oh god. Your tongue feels so good,\" she says right before letting out a series of loud moans. And as she anchors herself to the headboard, she begins to grind down onto me.\n\nI can barely breathe at this point, but my body doesn't care or need air. I give Annie as much of my mouth as I can and when I finally slide it inside, I can feel her insides tighten.\n\nRemembering how much she enjoyed my fingers inside her pussy, I grip Annie's thighs tight as I thrust my tongue in.\n\n\"I'm coming, Charlie, I'm coming,\" she shouts out, leaning her body into the headboard.\n\nI can feel Annie come just as much as I can hear the words tumbling out of her mouth, but I continue to thrust my tongue in until I can feel the body above me begin to slow down. When her body completely stills above me, I slide my tongue back out and lay still as I listen to the brunette above me breathing deeply.\n\nAfter a few minutes, she moves off me and slides down so she can lay next to me. She drapes one hand across my middle and nuzzles her face into my neck. I know all too well how high emotions can run after sex, but I can't help but think that Annie fits perfectly with my body-- during sex and now even post-sex as we cuddle.\n\n\"You,\" she finally says as she presses her lips into my neck. She doesn't say anything else and just continues to place soft kisses there.\n\n\"Me, what?\" I reply with a small laugh.\n\n\"You are really sexy. And good at that.\"\n\n\"Right back at ya,\" I say, turning my body so we're facing each other.\n\nThroughout my life, there have always been things I wished I could memorialize. Sunsets or beaches or scenes that move me. And perhaps that's why I love art so much-- it captures a moment forever. And as I lay here, tracing my eyes over Annie's face, I feel that once again. Her face is slightly flushed, her lips swollen, and her hair is falling in different directions, but I can't tear my eyes away. It's as if Annie's face is made for my gaze.\n\n\"You are so beautiful,\" I say quietly. \"I'm glad we did this.\"\n\nAnnie smiles. \"I am too. But I'm not done.\"\n\n\"You're not?\" I ask, leaning over her until the brunette is pressed down onto her back under me.\n\n\"Charlie-no-last-name, if you think you can fuck me and then just throw me out without at least one more orgasm, we're going to have words.\"\n\n\"I wouldn't dare. Words are the worst. But just so I know, is there an orgasm minimum tonight?\"\n\nAnnie's face scrunches up adorably as if she's thinking hard. \"I'm not leaving this room without at least three.\"\n\n\"You could have at least given me a challenge,\" I tease.\n\n\"Your confidence is very sexy.\"\n\n\"As is yours. Now, are there any other rules I should know about? Am I allowed to drink? Eat? Use the bathroom?\"\n\n\"In an hour I'll let you have a sip of water.\"\n\nAnnie slowly grazes her hands up my sides, leaving a trail of goose bumps in her wake.\n\n\"You're so generous,\" I reply, but even the light touch from the brunette causes my voice to tremble and my eyes to close.\n\n\"And don't forget it,\" she says right before she pulls me down for another passionate embrace.\n\nI let my body sink down onto Annie's as she leans into the kiss, knowing we won't be talking again for some time. And I'm perfectly fine with that. Because Annie is right. We're not done with each other yet-- not even close.\n\nChapter Four\n\n\"Thirsty?\" Annie says with a laugh as she watches me finish off an entire bottle of water in less than a minute. I don't even care that I have water dripping down my body-- I feel like I haven't had anything to drink in days.\n\n\"Your fault. You may be the death of me,\" I reply, placing the empty bottle on the bedside table next to us.\n\n\"I don't think anyone has ever died from too much sex,\" she responds, taking a small sip of her own bottle.\n\nWe've just come up for air from our last round of sex and are casually leaning against the headboard. The sheet is sitting under Annie's body and I'm trying my best not to stare at the bare tits sitting there teasing me, but my body needs a break, so I keep my hands to myself for the moment.\n\n\"There are like seven billion people in the world,\" I say. \"I'm sure someone must have died from sex at some point. Like in a nursing home.\"\n\n\"Oh my god, that is so sad.\"\n\n\"Yeah, sorry. Bad example. But my point remains.\"\n\n\"And you're right. I am so very sorry for endangering your life tonight.\"\n\n\"I accept your apology. But only because you're hot and naked.\"\n\n\"That's fair,\" she responds with a laugh.\n\nOur moment is interrupted when Annie's phone suddenly buzzes on the bedside table where the waters now sit. I watch her reach over and read something on it, her brows scrunched together in a way I haven't seen yet. Apparently, whoever is trying to reach her isn't welcome. I have the urge to smooth out the lines so the fresh, happy expression that was there only moments before comes back, but instead, I allow her a moment to herself.\n\n\"Sorry,\" she finally says, locking her phone and setting it down on the bed.\n\n\"Is everything okay?\" I ask, but I'm distracted by the image I briefly saw on her phone's locked screen.\n\n\"It's fine,\" she says simply, not offering anything more.\n\n\"Was that your grandma or someone?\" I ask, pointing at the phone.\n\nI know we've made some kind of nonverbal pact not to share personal details tonight, but my curiosity gets the best of me. And after the passionate sex we just had, maybe that rule can loosen.\n\n\"No. I don't know her actually. It was just someone I saw in Hungary when I was there. She let me take her picture.\"\n\n\"It's a beautiful shot. At least what I could see of it.\" Annie gives me a serious look for a moment before unlocking her phone and passing it over to me, allowing me to see the full image. \"Annie, it's stunning. Her expression-- it's haunting.\"\n\n\"I don't even know what she was thinking. She was just sitting there on that dusty doorstep and I took the shot. She smiled at me and then I walked away.\"\n\nAnnie looks down at the image and seems lost in thought. I don't know her expressions well, but the one on her face just looks sad.\n\n\"Are you a photographer then?\" I ask.\n\nShe lets out a harsh laugh before taking the phone back, locking it and setting it on the bedside table again. \"No. I had to take a prerequisite photography class in art school, but it was never my thing. I just like to take photos on trips mainly.\"\n\nI feel a sudden rush at her words and push myself off the headboard excitedly so I can see her face better. \"Art school? You're an artist?\"\n\n\"No. I'm not. Not really.\"\n\n\"But you went to art school? Which one?\"\n\n\"It doesn't matter, Charlie,\" she suddenly snaps, causing me to lean against the headboard again almost as if her words pushed me back.\n\nThe room is quiet for a moment and I don't know how to respond to the tension that's settled over us, but it's clear I'm not going to get anything personal out of Annie tonight and if I keep pushing, she'll probably just leave. A question about art school seems fairly benign, but Annie's reaction certainly wasn't.\n\n\"Sorry,\" she says, putting her hand on my leg. \"I don't like to talk about it.\"\n\nI have so many questions I want to ask now, but I can tell that they won't go over well so I hold my tongue. I don't want this night to end. \"That's okay,\" I finally say, lacing my fingers back with hers. \"We don't have to talk about it.\"\n\nAnnie's quiet for a moment and looks like she's battling with something in her head. \"I meant what I said before,\" she says in a quiet voice. \"I can't see you again after tonight.\"\n\nI pull my hand away from hers and look around the room for something that I can use as a distraction-- landing on the room service menu sitting on the bedside table. I know it looks petty, but I'm also annoyed by Annie's implication that I'm being some needy woman by asking a couple of simple questions. And the truth is-- and one I don't really want to overanalyze-- I'm hurt by the fact that Annie is so against seeing me again when we clearly have a connection.\n\nAn awkward silence takes over once again, and I can feel her eyes on me as I stubbornly read the menu.\n\n\"Charlie,\" she says softly, sliding her body over to my side so she can put her hand on my leg again.\n\n\"It's fine,\" I reply quickly, hating how stiff and fake my voice sounds. I don't want to care that Annie's basically rejecting me-- even if I hadn't technically asked her out-- but I still care. And caring, especially after only a few hours, is not normal for me. So, I continue to just stare at the menu in front of me, not really reading anything.\n\n\"Are you hungry?\" she asks tentatively when I don't add anything else.\n\n\"I may order a drink. Do you want anything?\"\n\nAnnie glances over to the clock sitting on the nightstand. \"Are they even still open? It's past three in the morning.\"\n\n\"The kitchen here stays open 24 hours a day.\"\n\n\"How long have you been staying here?\"\n\n\"I got in this morning.\"\n\n\"Then you've stayed here before?\"\n\nHer question causes my eyes to snap up to her face. She doesn't look jealous, but her body is definitely more guarded than it had been a moment before and the whole situation is confusing me. One moment Annie's telling me that we can't see each other again and in the next she's acting like taking women to this hotel is my thing.\n\n\"Once or twice,\" I respond and hand Annie the menu. If Annie isn't going to expand on her life, I'm not going to tell her that we just fucked in a bed technically owned by my family.\n\nAnnie takes the menu but just sets it down in her lap. \"Look, Charlie,\" she says. \"I've had an amazing time. More than that. I don't think I could find the words to describe how amazing. They'll probably come to me in weeks as I think back on how you made me feel. But my life is complicated.\"\n\nI'm taken aback. As soon as I heard the word \"look,\" I expected another unwarranted rejection from the brunette but what she said was sweet and almost romantic. The annoyance I felt dissipates almost immediately and I give the other woman a small smile.\n\n\"I get it. But you know what's not complicated? A cheese plate,\" I say as I point down to the menu on Annie's lap.\n\nAnnie returns my smile and looks relieved that the conversation is moving on to something less intense. I do my best to ignore the knot that tightens in my stomach and try to remind myself that I live in LA and even if Annie was interested, it wouldn't work anyway. I should just follow her lead and move back into the land of sexy and casual.\n\n\"I'll call down,\" she says leaning over for the hotel phone. \"What would you like to drink?\"\n\n\"Bourbon,\" is all I manage to get out with Annie's body pressed against me, causing another wave of arousal to roll through my body.\n\nWhen Annie finishes talking to room service, she turns her body so she's basically draped across me. The look she's giving me is the same hungry one she had on her face when we first entered the hotel room, and my body is buzzing with anticipation again-- especially now that I know just how sexy she can be.\n\n\"How long did they say it would take?\" I ask, reaching out to lace my fingers through her silky hair.\n\n\"Forty minutes,\" she replies as she closes her eyes and leans into my hand.\n\n\"That is so much time.\"\n\nA smile grows on her face as she slowly opens her eyes. She then lifts her body up, puts both legs on either side of me and sits across my lap in a straddling position.\n\n\"Know any jokes?\" she asks.\n\n\"Nope.\"\n\n\"Scary stories?\"\n\n\"Nope.\"\n\n\"Tongue tricks?\"\n\n\"A few.\"\n\n\"I guess that will have to do until our cheese arrives.\"\n\n\"Let me show you my first one.\"\n\nAs I lean in and capture Annie's mouth, it feels as if I belong there. As if our lips were built to kiss each other. But once again, I push that thought aside as I let my tongue slip into her mouth. If I can't have a tomorrow with Annie, I'll make sure whatever time I do have is memorable."
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "lesbian",
        "romance",
        "lesbian drama",
        "lesbian sex",
        "lgbt",
        "girl on girl"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-certain-tension-ch-01-04"
}