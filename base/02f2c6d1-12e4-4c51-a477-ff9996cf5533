{
    "title": "Lady in Red Pt. 03 Ch. 05",
    "pages": [
        "The usual protocol for state dinners was forgotten as Paula, Lisa, Kate, Jordan, Caroline, Naomi, and the rest of Gwen's friends flocked to her side. The guests at the dinner smiled broadly as they watched the age old custom of women congratulating one of their own on her pregnancy. That was one reaction that was the same in every culture the world over. Somehow it made President Hammer appear more like everyone else, while at the same time, gaining her even more respect and love from those watching.\n\nA woman that inspired a man such as Steve Hammer to publicly profess his love and even shed tears was not common by any stretch! A man that that was confident and strong enough to bare his soul as well as his vulnerability to his wife and to the world was far from ordinary! The legend that was Gwen and Steve Hammer simply grew. They did not posture and pose to create a false image. They were genuine, they were human, and they were special. All of those in the room and watching from around the world could feel it.\n\nReaction back home in the States was varied. Many Washington politicians spoke about how inappropriate it was for President Hammer and her husband to publicly display their affection the way they did. The same politicians, however, declined to comment further when it became apparent that the American public strongly supported the expressiveness of their president. The internet came alive as people shared opinions in blogs and on social media. Americans had leaders to be proud of, and proud they were!\n\nThe President of the United States is pregnant! Newspapers, television, and the internet feasted on the events of the past 36 hours in Hungary. When interviews aired with some of the women and children that had been trapped with Steve Hammer and his son, American pride ratcheted up a few more notches. Those involved all spoke of the incredible strength and resolve displayed by both the President's husband and her son, who had remained steadfastly at his father's side throughout the entire ordeal. None of those interviewed had any doubt that without the seemingly superhuman efforts of Steve Hammer, everyone would have perished.\n\nThat President Hammer and her husband were extremely emotional and very affectionate was apparent and totally acceptable to the American public. Look at what the two had endured and accomplished within a few hours of landing in Hungary! Even the President's most outspoken critics in Congress finally began to appreciate just how golden the citizens of the United States considered the First Couple. \n\nGwen received the good wishes and congratulations of her inner circle for several minutes. \"How far along are you, Dear?\" asked her beaming grandmother, Caroline.\n\n\"Just two days, Grandma,\" replied Gwen with a grin.\n\n\"T-t-that can't be,\" stuttered Caroline. \"There's no way you could be sure that you're pregnant and you certainly wouldn't know the gender of the baby. Is this a joke or something?\"\n\n\"Grandma, she has a much better way of knowing than any medical test ever devised,\" asserted Kate. \"That old blind woman told you that you were carrying Steve's son, didn't she, Gwen?\"\n\n\"We can't let that get out,\" responded Gwen. \"People will think I'm crazy for believing a fortune teller.\"\n\n\"They'll still wonder when your due date turns out be nine months from yesterday,\" pointed out Lisa. \"Did anyone tell you that we went back and searched for that old woman and couldn't find her? No one even admits to ever having seen her.\"\n\n\"I won't try to understand it, but I'll always be grateful to her for telling me how to find Steve and Saint,\" replied Gwen. \"I know I didn't dream it, and without her guidance, they would have perished.\"\n\n\"How about Saint's future bride?\" chuckled Kate. \"That little girl is adorable and her parents are like super brains. Her mother's an astrophysicist and her father's both a seismologist and a geologist.\"\n\n\"That's the couple sitting at our table?\" asked a surprised Caroline. \"You think Saint will marry their little girl? They're only children!\"\n\n\"They may wait twenty years, more or less, Mom, but 'it's been written', as they say. Saint and that beautiful little girl will spend their lives together and we couldn't prevent it if we tried,\" replied Paula as she beamed at her newly pregnant daughter. \"The Gods have long smiled on Gwen and Steve, and now they're grinning at Saint.\" \n\nPaula had known some very bad hours as she knelt beside Gwen during the search for Saint and Steve. On the ride from the airport to the hotel in Budapest that morning, Paula had offered her apologies to Gwen for losing track of Saint. Her guilt had been almost unbearable as she had knelt and prayed next to her daughter for the safe return of Gwen's husband and son.\n\n\"Gwen, I can't begin to tell you how sorry I am that I allowed Saint to leave the tent. I wasn't watching him as closely as I should have been. I didn't even see Ruth and Theresa leave. I let you and Steve down, and it almost cost their lives,\" sobbed Paula.\n\n\"Mom! Don't ever think that. Saint had a date with destiny and there was nothing you could have done to prevent it. He and Lena were destined to meet and begin working together to help others,\" responded Gwen emphatically. \"I'm sorry that it caused you so much distress and guilt, but it had to happen. I understand that now. There are forces at play that we'll never understand, but please know this. You did nothing wrong. The Gods laugh at our attempts to alter it. Just be proud that Saint, Lena, Steve, and the rest of the people that were trapped were able to rise to the occasion and persevere. If Saint hadn't gone with Lena, they'd all be dead.\"\n\nSitting across from Gwen in the limo was Hanna Kiss. She was obviously confused, so she asked Gwen the question she had puzzled over since the rescue. \"Could you please explain something to my husband and me? You have called us family several times, and have spoken of our little Lena being a queen. You're very gracious and I'm not objecting, but Adam and I quite bewildered; we do not understand what you mean.\" \n\n\"This is going to sound crazy, but I'll tell you the short version,\" answered Gwen as she formulated her response while checking to be sure that Lena and Saint were watching a video playing on a hand held device and not listening to the adult conversation. \"The day after our wedding, Steve and I, along with some friends, visited a local fair. Inside one of the tents was an old blind woman that told fortunes. She took my hand and knew who I was immediately. Then she told me that I had conceived a son a few hours earlier and that he would grow to become an even greater warrior than his father. I learned that she was accurate about me being pregnant, and that it was a son. She also told me that my unborn son's queen had not yet been conceived. \n\n\"Last night, after spending the day performing surgery on many badly injured children, I stopped in the patient tent to check on my patients. A small form in a dark corner grabbed my wrist and addressed me as her queen. I knew immediately that it was the same blind fortune teller I had seen at that fair! I have no idea how she came to be in that small Hungarian town, but she told me that Steve and Saint were in grave danger and I had to pray to St. Stephen for their safe return. She also told me that Saint had now met his future queen. Without trying to sound presumptuous, I believe that Lena and Saint are destined, by whatever forces control the universe, to fall in love, marry, and accomplish things together that we can't even imagine.\"\n\nAs Gwen spoke, Hanna and Adam Kiss exchanged significant glances. \"Was this an old woman without eyes? Did she appear to be well over the century mark?\" asked Hanna, and Gwen nodded in the affirmative. \"Adam and I either met her or someone very similar in a tent at a small fair in Budapest a week ago. She told us that we had to go to that small town immediately. She predicted a catastrophe and told us that we would know what to do when it happened. She insisted that in spite of the danger to Lena, we had to take her with us.\n\n\"Adam had been following the seismic activity in that area and had already determined an earthquake was a distinct possibility. Of course, no one in the government would listen to him, so we did travel to the town to see how we could help, and because of what the old crone, and I mean that with respect, we took Lena with us. Your story certainly makes sense to Adam and me. As a woman and mother, I believe it without reservation. As an astrophysicist, I am finding science and logic cannot always explain why things happen as they do. In science, the more discoveries we make, the more we learn that there are further mysteries as yet unexplained.\"\n\nGwen hadn't revealed that the old woman had also informed her that she was pregnant. Steve deserved to be the first person to hear her news, so she never mentioned that portion of the old woman's prediction. \n\nOnce Steve let the cat out of the bag at the state dinner, Gwen spent several minutes chatting with her delighted friends and relatives. Then she broke away to apologize to the Hungarian President and his wife. The President's wife refused to accept the apology.\n\n\"That was the most romantic thing I've ever seen. It was perfect because it was real and it was heartfelt,\" proclaimed the teary eyed matron. \"You, your friends, family, and company have done Hungary a tremendous service. You appeared out of nowhere when we needed you. You asked for nothing and gave everything. The people of Hungary will never forget your kindness and humanity. You are more than the President of the United States. You are a beacon of light for the world. You are truly our Queen!\"\n\nWith that statement, the President's wife curtsied slowly. Not being a stupid man, her husband bowed deeply and held his position until his wife had returned to an upright position. \n\n\"We are not following the program, but that's fine,\" stated President \u00c1der just before he stepped up to a microphone and secured everyone's attention. \"My friends, I would like a moment of your time before we begin dining. We all saw how President Hammer, her husband, family, friends, and her company responded to the catastrophe that so recently befell us. I understand that it is against American law to bestow any form of nobility on their president, but I would like to offer the greatest honor I can think of. President Hammer, please come forward and accept your certificate of Hungarian citizenship!\n\n\"This is neither ceremonial, nor honorary. It is full citizenship for President Hammer, her husband, and her immediate family. I know of no greater honor I can bestow. I hope you will accept it, along with the love and gratitude of the people of Hungary.\" finished the President.\n\nGwen accepted the certificate before using the back of her hand to rid her eyes of moisture. \"This is an honor we never expected, but one we will always cherish. Grandmother Caroline was born here and has family in Hungary, whom we still hope to visit. It has been our great honor to have the ability and finances to be able to help the wonderful people we've met. \n\n\"It also demonstrates why Steve and I will never place Lady in Red in a blind trust. We need a large income stream as we expand our responses to disasters around the globe. I saw firsthand what a difference Lady in Red can make. We'll continue to respond and work to improve on it in any way we can.\n\n\"To that end, I would be remiss if I didn't mention Jason Hunter, my sister's husband. He's the one that pretty much created Lady in Red's disaster response plan and took it international a few short years ago. Please stand, Jason, and be recognized. I was amazed at how quickly his team arrived in place and how well planned it was. We're all in his debt!\" \n\nLisa positively beamed with pride as Jason stood during a long and thunderous applause. It was quite apparent that the people of Hungary felt Lady in Red had handled the disaster extremely well, and much of that credit belonged to Jason. \n\n\"All of the men traveling in our group rolled up their sleeves and immediately went to work to help rescue survivors, as well as recover bodies,\" stated Gwen proudly as she gestured towards the tables containing her friends. \"My good friends, Dr. Laura Watson and Dr. Charlotte Marsh utilized their training and knowledge to save lives, lessen pain, and prevent scarring and disfigurement. The other women in my group assisted us in many ways as they helped care for the injured and directed efforts to set up the facilities that were so badly needed.\"\n\nOnce again, Gwen waited for the applause to subside before continuing. \"I need to thank Adam and Hanna Kiss for their kindness and support when things were darkest for me personally. Finally, I want to thank my husband, Steve, who followed Saint and Lena Kiss into that building because he was needed, and that's what he does. I have not had the opportunity to hear the particulars about that long night in the crumbling tunnels beneath the collapsing buildings, but I've heard enough to know that no one would have survived if it weren't for his strength, courage, wisdom, and leadership. The world now has a better idea of the kind of man he is, and why I love him without any reservations or conditions. I firmly believe that he is absolutely the best of us all!\"\n\nEveryone, including Gwen's family and friends stood and gave a long and thunderous ovation as Steve nodded and even blushed a little. His experience entertaining before large crowds did nothing to prevent his humility from shining through. His discomfort was obvious and somewhat amusing to those watching. Gwen's praise and the standing ovation had placed him in the spotlight. He had spent much of his life working to keep Gwen front and center and he was obviously a little flustered at being singled out for his heroics.\n\nThe people back home in the United States simply couldn't get enough information regarding their beautiful president, her warrior husband, and the family that had given so much to help a town in the remote hills of Hungary. How had President Hammer known to abandon the site where her husband and son had entered the building and to search for them hundreds of yards up the street?\n\nWhat of the incredible stories being told by the survivors of the ordeal? By all accounts, Steve Hammer had used ingenious leverage and brute strength to move boulders and huge rocks to allow passage through the crumbling tunnel under the town. Every survivor had roughly the same story. They had watched in stunned amazement as Steve, often assisted by his young son and the frail blonde girl, forced and dug their way through tons of debris to reach the basement of the old church. Then, while huddled on the cold stone floor, a young woman had delivered a baby boy, which Steve had tenderly swathed in his own shirt before presenting him to his exhausted but much relieved mother. When Chip had finally descended in the rescue basket, the group agreed unanimously that the new mother and baby should be the first to be lifted to safety. Saint and Lena had insisted that they remain underground till the end, leaving only when Steve was their last companion in the old church.\n\nThe significance of the name the young mother chose for her son was the topic of a great deal of discussion. It seems the child was to be christened Saint Steven, after the two Americans who had risked so much and worked so hard to enable her to live and to give birth to her child. That the child had been born in Saint Stephen's Church was the icing on the cake! Viewers across the country and the world marveled at the incredible harmony of the situation. \n\nThe internet came alive with groups on every continent that pledged to support President Hammer and her efforts to bring peace and understanding to the world. Politicians who had been openly critical of her actions were inundated with messages of protest and outrage for their lack of support. The citizens of the United States had the enormous good fortune to have Gwen Hammer serving them as President, and they began making their feelings known to their elected representatives.\n\nBudapest was a city in anticipation. People had been streaming in for several days as the first concert ever given in Budapest by 'Lady in Red' drew near. Hotels were filled and travelers were allowed to camp in parks and side streets as the population of the city soared. The day after the state dinner saw the city teeming with humanity as citizens and visitors from all over Central Europe and the world converged on the Hungarian capital for the evening concert.\n\nBanners began appearing all over the city declaring President Hammer to be the 'Queen of Peace'. Tee shirts suddenly appeared everywhere with the Lady in Red Logo and the words 'We Come in Peace World Tour' on the back with a list of cities included in the tour. On the front was an image of Gwen as she knelt in the small mountain cemetery with the declaration 'Queen of Peace' written above it.\n\nAs Gwen led her musicians on stage at Hero's Square, she saw hundreds of thousands of adoring fans wearing the shirt as they chanted her name. As she moved to the front of the stage to speak to the crowd, the entire audience dropped to a knee in surprising unison as everyone briefly bowed their heads.\n\nGwen was temporarily speechless as she looked over the many thousands of people paying her the greatest respect possible. Unable to form words, she simply began bowing and curtsying to the huge crowd as she motioned for them to stand. As her fans returned to their feet, they began a thunderous ovation which continued for several minutes.\n\nThe giant jumbotrons clearly showed the tears that streaked down Gwen's cheeks as she smiled and waved to the adoring masses. Gwen then turned and hurried back to grab Steve's hand and tug him to the front, only to have the crowd's approval swell even louder. Gwen gestured toward Steve and stepped back, indicating she was turning the stage over to him. Smiling, Steve waved a few times before moving upstage to Gwen. He took her in his arms and kissed her passionately. By this time the audience was in a total frenzy as cheers, screams, yells, and applause swept across the entire city. Thousands of couples fell into each other's arms, caught up in the spirit of their Queen's and Warrior's devotion.\n\nThen Steve pulled the sweater he had been wearing over his head to reveal that he was wearing the same tee shirt as most of the audience! Gwen showed her surprise, bringing her hands to her mouth. Steve then gestured to the rest of the musicians on the stage and Gwen soon saw that every man there was wearing the same shirt. The huge audience loved it as the jumbotrons flashed the scene on stage to the masses.\n\nCharlie nodded and suddenly the music began. Gwen had never felt so inspired for a performance as she began strutting across the stage for her signature opening number. A million and a half people who were crammed into every possible space, rooftop, balcony and window within half a mile of the stage joined Gwen as she began 'We Will Rock You'. By the time Steve and Charlie moved to the front with their guitars to segue into 'We Are the Champions' the entire city was captivated by their Queen as she gave the enormous crowd the performance of her life.\n\nEvery song was well received. Jack Timberline worked in his hits while Kathy Perrine was cheered mightily when she performed her chart toppers. The loudest cheers were reserved for Jordan as she demonstrated why she was the top selling artist in the world, delivering some of her biggest hits. Jordan's songs had received the loudest ovations until Gwen performed 'Hate Myself for Loving You'.\n\nSteve and Charlie led in with their guitars while Jordan and Kathy did back-up vocals for Gwen. All three women pranced around the stage in sync as Gwen delivered one of the songs the huge crowd had waited so long to hear. Gwen gained energy from the crowd and delivered a searing, sexy, emotional rendition of her hit. Millions of people danced and sang along with her as she pranced across the stage, singling out individual fans with gestures and singing lines directly to them as she belted out the song. It went so well that Charlie signaled to the group to immediately go through the entire song a second time. Thousands of fans had gained the feeling that President Hammer had sung directly to them! ",
        "Gwen conferred with her friends during a break and at the beginning of the last set, she and Steve performed 'Billie Jean' complete with the dance routine they'd made so famous. As soon as the crowd realized what Gwen and Steve were performing, they began a thunderous applause. The band had to play the intro several times before the din abated enough to allow Gwen and Steve to be heard. By the time they ended their performance, the entire city reverberated with the cheers, whistles, and applause of the euphoric audience. \n\nThe concert lasted almost an hour longer than any the group had previously performed simply because the audience was so large, receptive, and appreciative. By the time Charlie signaled to the rest that there was no more to give, Steve realized that they had been performing for almost six hours and the crowd appeared to be even larger by the time they ended than it had been when they had begun.\n\n\"I know I've been saying this a lot on this tour, but I'll say it again,\" announced Charlie to the exhausted musicians. \"That was the absolutely best performance I've ever been involved with, or have ever seen. Everyone played and sang their asses off for six hours. Lady in Red may just release a live triple CD box set, as well as a video. Proceeds would go to the World Health Organization, and the sum will be substantial. Once again, I have to thank all of you for joining us for this tour, and for giving it your best.\" \n\n\"I've been talking to my publicist and my accountants back in the states,\" revealed Kathy Perrine. \"The downloads and sales of my music have sharply increased since I joined this tour. I'm going to make rather large donations to a few charities when I get back home. I've always been pretty selfish and self-centered. I refused a lot of requests for appearances to help some pretty good causes, and now I'm ashamed that I did. \n\n\"Seeing what President Hammer and Lady in Red do for people around the world has opened my eyes. I was a bit skeptical that anyone could be as generous and caring as Lady in Red was reputed to be. I'm a believer now. I've come to realize that the talent and opportunities I've been given come with responsibility. This tour is the best thing I've ever done on so many levels. I have to thank all of you for allowing me to be a part of it and for helping me see the big picture.\"\n\nAfter what seemed like a very short night's rest, Gwen's friends and family joined her for the journey to her grandmother's birth place, which was just thirty miles from the small town that had been demolished by the recent earthquake. Caroline Varga had been born nearly eighty years ago in the small town of Encs, northeast of Budapest.\n\nAs the motorcade drove down the main street of the town, hundreds of residents waved flags and cheered. Never before had Encs had such important visitors and everyone was eager to demonstrate their appreciation to the Americans. \n\nThe motorcade stopped in front of the town's best hotel and soon Gwen and her family were sitting in a private dining room with seven people who had been complete strangers only minutes earlier. \n\nSteve had been unable to conceal his surprise when he met Agnes Varga. The family resemblance with Paula and her daughters was obvious. While she spoke English very well, she appeared hesitant and nervous. Her grandfather, Marcell Varga, was not suffering from the same shyness as his granddaughter. He was unable to speak English, however, so he insisted that Agnes stand at his side and interpret for him.\n\nAfter being introduced, Marcell explained how he had gathered six of Caroline Varga's closest relatives to accompany him to meet his American relatives. He explained that Caroline was his first cousin, as their fathers had been brothers. As everyone knew, Caroline's immediate family had left for America over seventy years ago. Since he was her only cousin his descendants would be her closest family members remaining in Hungary. \n\nCaroline beamed as she hugged her cousin and his family and then introduced her family. \"My daughter, Diane, didn't make the trip, but this is my daughter Paula. Next to her are her daughters Lisa, Kate, and Gwen. My granddaughter Stephanie is the pretty girl standing next to...\"\n\nThat was as far as Caroline managed before Marcell interrupted with a hearty laugh and began speaking rapidly in Hungarian. When he finally stopped talking, Agnes began translating his thoughts into English. \"Grandfather finds it very funny that you introduce the President of the United States simply as your granddaughter. She is the most famous, most beautiful woman in the world, yet to you she is simply Gwen.\n\n\"He is very proud of how well his cousin Caroline and her family have done since emigrating to the United States. He often boasts to anyone that will listen that his cousin twice removed is the Lady in Red, the President of the United States, and is also now known as the Queen of Peace. We are all very proud to be related to such inspirational, generous people. \n\n\"I apologize! We should have knelt when we first met,\" suddenly worried the beautiful young woman. \"I explained to Grandfather that we should, but we forgot when you came into the room and greeted us so graciously. We were very excited to meet you. Would it be acceptable if we knelt now?\"\n\n\"No! Please don't,\" responded Gwen catching Agnes's elbows just as she began to kneel. \"You're family! I don't expect anyone to kneel before me, and certainly not family. I would like a nice hug from each of you. You're such a beautiful young woman!\"\n\n\"I think we may have discovered the face for Lady in Red Productions here in Hungary, and perhaps beyond,\" suggested Stephanie as she waited her turn to hug the young woman. \"With a little promotion with Gwen, Kate, and Lisa, she could become our Hungarian face for the Lady in Red.\"\n\n\"That's a great idea!\" responded a smiling Kate. \"That's why you're heading up our European division. You're always looking for opportunities to promote and improve the company.\"\n\n\"I guess we're getting ahead of ourselves and everyone is wondering what we're talking about, so let's explain everything,\" offered Stephanie. \"Lady in Red Productions is going to make Encs a production center for the Lady in Red clothing line. We've already obtained the necessary permits and signed a very long term lease on almost fifteen acres of land.\n\n\"We'll build a state of the art clothing manufacturing facility here. We'll hire and train locals and pay them a very good wage. We're going to create the 'Caroline Varga Collection'. Doesn't that have a great ring to it? The designs will be unique from those made in our other facilities, and the quality will be top-notch.\"\n\nGwen's grandmother was in tears by the time Stephanie finished explaining Lady in Red's plans for the area. Agnes quickly translated Lady in Red's intentions to her relatives so they would understand the tears that were flowing down Caroline's cheeks.\n\n\"I wish your grandfather had lived to see this,\" sobbed Caroline as she hugged Stephanie. Then she embraced her daughter and granddaughters, along with their husbands and Jordan and Charlie. \"This is the nicest thing anyone has ever done for me! What an honor! I guess I'll be coming back here pretty often to keep an eye on things, and to visit my relatives.\"\n\n\"That's right, Grandma,\" agreed Lisa. \"We're having a nice home built not far from the factory for you, or any of the family to use when we're here. You should come over here as often as you like.\"\n\n\"We're glad that we've made you happy, Grandma,\" stated Gwen with a big smile. \"We wanted to honor you for quite some time. This seemed the perfect opportunity. Now let's have a nice lunch before Stephanie addresses the media. This'll probably get Congress all worked up again, but we don't really care, do we.\" \n\nSteve was standing in line for the buffet lunch when Agnes Varga approached him. \"How's our little cousin doing?\" asked Steve as he held his arms out to hug the young woman.\n\n\"You are so kind to me! I can't believe that I'm actually hugging you,\" effused Agnes as she wrapped her arms around Steve's solid frame. \"You're so strong and so brave! I saw you on TV when you emerged from that old church after saving all of those people. I've watched all of your movies and have all of your songs saved.\n\n\"I followed you long before we realized that Gwen was a cousin. When I was a little girl, my aunt showed me the video of you and Gwen dancing that first time, when she became the Lady in Red. It was so romantic! Then this morning I saw on TV where you proposed a toast to Gwen for another child. I saw how you poured your love for her into your words and your kiss.\"\n\n\"You make me sound pretty old,\" chuckled Steve. \"I guess you would've been a small girl when Gwen and I shared that dance all those years ago. Your cousin is a very special woman and I love her more than I thought possible.\n\n\"You're certainly following in the family tradition of beauty,\" offered Steve as held Agnes at arm's length and looked the blushing girl over. \"Your cousin Stephanie seems to think you could be the face for our company here in Europe. Having a beautiful Varga represent the 'Caroline Varga Collection' seems like a great idea to me. How do you feel about it?\"\n\n\"It's quite daunting,\" responded the young woman. \"Your wife and her sisters are considered the most beautiful women in the world. Stephanie is beautiful as well. I'm less endowed on top, I'm not as attractive, and I'm totally inexperienced in things like this.\"\n\n\"Stephanie?\" spoke Steve just loud enough to get Stephanie's attention and she joined Agnes and Steve. \"Agnes was just telling me about her concerns about representing the 'Caroline Varga Collection'. She's worried that her boobs aren't big enough, she isn't beautiful enough, and she's too inexperienced. Sound familiar?\"\n\n\"Boy, does it!\" laughed Stephanie, moving closer to Steve and Agnes. \"I used to worry about the same things, but one night in a hot tub with Steve pretty well removed those doubts. It's really quite simple, but sometimes we women complicate it. Men love breasts of all sizes and shapes. You have a wonderful figure. You're very lovely, and you'll learn everything you need to know quite quickly. If you're willing, we'll give you a contract today. You can have a lawyer look it over and discuss everything with your family. I promise you'll be pleased with our offer.\n\n\"As you know, Lisa, Kate, Gwen, Jordan, and the rest of us have modeled for Lady in Red over the years. You'll be working with us at first to learn the ropes, but by the time we begin production, you'll be the face of the 'Caroline Varga Collection' here and around the world. How's that sound?\"\n\n\"Can you tell me more about the night in a hot tub with Steve?\" asked Agnes, looking at Steve and blushing again.\n\n\"That's what caught your attention? You really are like the other women in our family! Maybe we can set something up for you. In fact, it's almost necessary since Steve has a thing about seeing every female in Gwen's family naked,\" responded Stephanie with a smile. \"Don't ask. I'll tell you about it sometime when there are fewer ears around. Just know that it's a family tradition, you're a part of the family, and your virtue is totally safe..\"\n\n\"My friend's cousin was one of those trapped underground with Steve in that awful earthquake. She told my friend that Steve saved all of their lives, and his strength was unbelievable. She's only sixteen, but she thinks she's in love,\" revealed Agnes.\n\n\"She's a member in a pretty big club. Falling in love with Steve is not an unusual occurrence,\" pointed out Lisa, joining the conversation. \"When this world tour is over, we'd like to fly you to Sparta for some training and modeling with the rest of us Lady in Red representatives. Within the year, we'll be producing the 'Caroline Varga Collection' right here. You'll be representing us all over Europe, if you're willing.\" \n\n\"This is so hard to believe! I'm just a regular Hungarian girl and you're offering me this incredible opportunity. You just met me. Are you certain that I'm the one you want for this promotion?\" asked Agnes nervously.\n\n\"We tend to make a lot of our decisions quickly,\" admitted Lisa. \"We've become pretty good judges of character, plus you're family. Lady in Red is all about family and friends. You'll do fine.\"\n\nA short time later, Gwen directed everyone to return to the motorcade. \"We're faced with a much sadder chore now. There's a memorial service for the victims of that earthquake this afternoon. We have to attend. Agnes, please ride with us.\"\n\nGwen was impressed with the progress made in the small town in the two short days since she had left in a helicopter. Much of the rubble and debris had already been removed. Several of the destroyed buildings had been hauled away and reconstruction was already beginning. There was a lot of work yet to be done, but the progress was already encouraging. \n\nA small platform with a canvas roof had been erected near the old church. The memorial service was to be conducted there. Several hundred people had already assembled in front of the platform when Gwen and her entourage arrived. The motorcade found the field that had been used by the helicopters to land rather crowded with tents, machinery, and construction materials. Eventually they came upon a small meadow suitable for parking and within easy walking distance of the church.\n\nGwen held Saint's hand and Steve carried their daughter, Vicky, as they began the trek toward the old church. Almost instantly, all machinery was turned off and work halted as laborers, volunteers, and citizens silently watched President Hammer and her family and friends approach the town. By the time Gwen and Steve reached the main street that led to the old church, people began dropping to one knee and bowing. \n\nIt occurred to Gwen that she would never become accustomed to the respect and reverence people demonstrated to her. She could only strive to become the person that so many felt she already was. A few small tears trickled down her cheek as she clutched Saint's hand a bit tighter and then slid her free hand into Steve's.\n\nEveryone that had gathered for the memorial service was kneeling as Gwen approached. She realized that she recognized many of the faces. Some were children she had treated, and many were folks that had joined her that night in her long vigil at the cemetery as she prayed for the rescue of her son and husband.\n\n\"Please stand,\" began Gwen as she released Steve's hand and gestured for everyone to take their feet. As the locals began rising, Gwen moved into the crowd with Saint and Steve, who still carried Vicky on his hip. She hugged everyone that she could reach while Steve shook hands and gave one armed hugs to many of the women. The precocious Saint demonstrated an instinctive understanding of the situation and hugged everyone that approached him.\n\nGwen was smiling and beginning to offer encouragement to the young parents of the baby born in the basement of the old church when she saw Lena Kiss step up to Saint and hug him fiercely. She glanced at Steve. He winked at Gwen before returning his attention to Saint and Lena. When Lena finally released Saint, she stepped over to Steve, who gently bent and picked her up with his free arm and held her on his other hip as the lovely little girl wrapped her arms around his neck and hugged him tightly.\n\n\"I knew you were the only man that could save everyone, and you did,\" whispered Lena. \"You are the Warrior.\"\n\nSteve simply smiled at the girl as he held her tightly and kissed her forehead. When he placed her back on the ground, Lena moved in front of Gwen and dropped to one knee. \"Ma'am, you are our Queen\", was all she said.\n\nGwen's eyes misted over as she knelt down by the little girl and embraced her. When she returned to her feet, the blonde girl rose with her, still in her arms. \n\n\"You're such a beautiful little girl,\" beamed Gwen through her tears. \"Destiny will bring us together often, I'm sure. Just know that if you ever need me, Steve, or even Saint, we'll be there for you. Your parents have been told how to reach us any time of day or night.\"\n\nGwen returned her attention to the couple with the newborn baby boy. \"I speak some English,\" revealed the young woman. \"We named our baby Saint Steven Szabo.\"\n\n\"You named him after the patron saint of Hungary, as well as the very church under which he was born!\" exclaimed Gwen. \"That was a great idea. Our son is nicknamed Saint and we think it's a pretty neat name.\"\n\n\"Not exactly. We named him after your son and your husband,\" emphasized the young woman as her husband nodded in agreement. \"That a boy named Saint, and a man named Steven would risk their lives to save complete strangers was difficult to accept. When you consider that they are extremely wealthy, yet treated all of us with respect and compassion, there was no real option. Our son will proudly bear the names of the two wonderful Americans whose heroics allowed him to enter this world\"\n\n\"That is such an honor! May I hold your baby?\" asked Gwen. \"I want to remember the baby bearing the names of my son and my husband. He's adorable! You've been truly blessed.\"\n\n\"Madam President? If he had been a girl, we would have named her Saint Gwen,\" revealed the infant's mother. \"My husband was there when you demanded that the rescuers search the old church for us, even though you had no possible way of knowing we were there. My husband believes you made the decision because the old church bore the names of your son and husband, but I think there was something else. I believe that God somehow told you where to find us. You are President of the United States, but you are our Queen, and God communicates with you. Thank you for blessing our family with such good fortune.\"\n\nBefore Gwen could respond, the newborn infant began to fuss and the young mother excused herself to find a suitable location to feed her baby. Steve stood close as Gwen struggled to recover her equilibrium. She worked to push back the many questions that had come to her mind as the young mother spoke of how God had told her where to find Saint, Steve, and the others. Deciding it was an issue for another time, Gwen forced her thoughts to focus on the task at hand and resumed greeting the people gathered around her.\n\nSomehow, Lena remained in Gwen's arms as she continued to offer encouragement to the citizens of the small town. It did not go unnoticed that the President of the United States, one of the wealthiest women in the world, elegantly coiffed and dressed, never hesitated to hug everyone she could, regardless of their dirty, ragged clothes. It was obvious to all that she valued and respected them, regardless of their appearance, or their station in life.\n\nGwen's Secret Service agents were nervously hovering nearby, trying to watch for any possible threat to President Hammer while remaining as unobtrusive as possible. Having a president that insisted on mingling with people made their jobs more difficult, but it also filled them with great pride to serve a woman with the compassion and concern that Gwen displayed. \n\nEventually, a gray haired man stepped to the platform and began speaking Hungarian into a microphone. Gwen and some of the other women in her entourage were offered the few chairs that were available. Gwen simply shook her head and gestured invitingly to several older people in the crowd. Her intention was gleaned immediately and several elderly ladies were led to the chairs where they gratefully sat. The gray haired man spoke for about ten minutes. He managed to draw nods and a few tears from the people as he spoke. Near the end of his speech, Gwen heard her name mentioned as the man gestured for her to come to the microphone. ",
        "\"Agnes, please come with me and translate for everyone,\" requested Gwen as she gently handed Lena to Hanna and walked toward the small platform. Once on the small stage, she took Agnes' hand and tugged her over to stand nearby as she spoke.\n\n\"Thank you all. We greatly appreciate the reception we received today,\" began Gwen. \"Many of you appear to believe that my friends and I gave a great deal and received very little in return. That would be an incorrect assumption. You were the victims of a horrible tragedy, yet you gave us so much, and I thank you for it.\"\n\nGwen paused occasionally to allow Agnes to translate her words into Hungarian. \"You have given me faith; faith in my fellow man, and faith in a greater plan for us all. You've shown me courage, strength, and compassion. I will leave here a better person than I was when I arrived, and for that I thank all of you.\n\n\"We grieve for those wonderful souls we lost that terrible day, but we celebrate their lives and their love. They will never be forgotten, even as this small town rebuilds and becomes stronger and more vibrant than ever. Improving your town, your lives, and your relationships will be your living testimonial to your loved ones.\"\n\nLike everything involving Gwen, the press relentlessly covered her return to the earthquake ravaged town. Morning news programs back in the states showed her embracing the disheveled earthquake victims as she offered words of encouragement. There was some speculation about the small blonde girl that clung to Gwen as she greeted people. It was obvious to the viewers that Gwen cared deeply for the youngster that had been identified as the girl that had shared the danger of being trapped underground with Steve and Saint. Of course, at that time no one watching could ever guess the tremendous effect the small girl would have on the future of mankind. \n\nAfter saying a long goodbye to the townspeople, Gwen, Steve, and their friends returned to Budapest. Steve and Naomi had practically demanded that everyone take the time to enjoy a dinner cruise on the Danube since they had such pleasant memories of the cruise they took years earlier, when they had accompanied Senators Chatham and Mason to Hungary.\n\n\"You were right to insist we do this!\" agreed Gwen once they were underway. \"The city is so beautiful at night. Look at how the bridges are lit so wonderfully. You're such a romantic!\"\n\nSteve grinned at Gwen's praise before pulling her close and kissing her. \"Do you two mind?\" chided Kate. \"You've already put Gwen in a family way. Maybe you should give her a rest until the tour is over.\"\n\n\"Speak for yourself, Kate!\" retorted Gwen. \"I want Steve to make love to me in every city we visit. As you just pointed out, he can't get into any further trouble now that I'm already pregnant, so we might as well make the most of the opportunity.\"\n\n\"Madam President, did you just tell us that you plan to have hot monkey sex in every city we visit?\" asked Charlotte, doing her best to appear shocked.\n\n\"Yes, I guess I did, although not in those rather crude terms,\" agreed Gwen with a grin. \"Is enjoying sex with one's husband un-presidential or something?\"\n\n\"It may be without precedent, but I haven't found anything in the Constitution that makes it a crime,\" admitted Kate. \"But then, we've never had a pregnant president before. This is new territory. I wonder if your son will need security clearance before he's permitted to enter the world.\" \n\nEarly the next morning, Gwen, with Steve at her side, faced the press in the ballroom of her hotel before the scheduled flight to Kiev. \"Madam President! Can you tell us when your baby is due?\" asked the first reporter Gwen selected.\n\n\"Not really. I haven't done the math, but any of you can figure it out. I'm four days pregnant, so it's roughly nine months from four days ago,\" replied Gwen with a smile.\n\n\"It's impossible to determine that you're pregnant that soon after conception!\" declared a male reporter from a major network. \"You certainly wouldn't know the baby's gender that fast!\"\n\nGwen then pointed to Amber Stahl, and to Amber's credit, she understood exactly what to say. \"Madam President, congratulations on your pregnancy. Can you tell us what made you decide to move the rescue operation from the collapsed building Saint and Steve had entered to the old church, coincidentally named Saint Stephen?\"\n\n\"It was simply something I knew to be necessary to save the lives of those people trapped, including Steve and Saint. I can't really offer you an explanation that will appear logical and reasonable,\" responded Gwen.\n\n\"You didn't answer my question about how you could know that you're pregnant so soon,\" objected the network reporter from a moment earlier.\n\n\"Sir, you never asked me a question. You simply stated that I couldn't possibly know that I'm pregnant with a son. I see no point in responding to a random statement. You've already determined that I'm either lying, totally mistaken, or making a really wild guess,\" observed Gwen calmly. \"I won't accept any questions from you.\" \n\nThe entire press pool went very silent as they considered President Hammer's response to the belligerence of their fellow reporter. She was normally very cordial and considerate, but the reporter had all but called her either a liar or a fool. They had many other subjects to broach, so from that point forward no one questioned why Gwen felt she was pregnant.\n\n\"Madam President, congratulations on your pregnancy,\" began a tall thin man from a Budapest paper who had quickly determined that Amber Stahl had the correct approach by being conciliatory on the issue. \"Your first ever concert in Budapest drew an audience estimated at a million and a half people. Was the size and enthusiasm of the crowd a surprise, and how do you like Budapest?\"\n\n\"Let me begin by stating that I simply love this beautiful and ancient city. I'm so glad we made it part of our world tour. I'll cherish the memories of this visit the rest of my life. I was very much surprised at the size of the crowd that attended our concert. The energy they brought to the performance was incredible. My grandmother was born in Hungary, so I have more than a little Hungarian blood coursing through my veins. \n\n\"I feel like I've been welcomed home by the people of this great country. I'm honored and humbled by the reception my family and friends have received here. I wish to thank President \u00c1der for his warm reception, as well as being so kind as to invite us. The people of this great country have made me feel very welcome, to the extent of making me and my family citizens. I hope to build on that, and further improve the already cordial relations the United States has with Hungary.\" \n\n\"Your tour, and especially the response by you and your Lady in Red company to the earthquake, has been covered extensively by the media back in the United States. Opinion polls show that the American public supports your actions in almost unbelievable percentages,\" prefaced a woman from a major American network. \"Do you expect Congress to be more amenable to approving your cabinet choices, considering the strong grassroots support you're receiving?\" \n\n\"I have no expectations regarding Congress,\" replied Gwen tersely. \n\n\"Are you concerned about having your cabinet selections approved?\" followed up the lady reporter.\n\n\"Make no mistake, I do want my appointments approved, but I'll not be wasting any time trying to placate and mollify a fickle Congress. They are the ones that approached me about becoming vice president. My wealth and position were never even mentioned when both houses voted to approve my appointment as Vice President. Nothing has changed, except for the attitude of many of our elected representatives.\n\n\"I've never campaigned for any office in my life. I accepted the vice presidency because I felt it would help our country get past a possible constitutional crisis. I am now President of the United States, but I am not a politician and I refuse to become one. I'm extremely honored to serve my country, but I will not waste one minute of my time trying to convince the legislative branch of government to do the right thing for our great nation. They are, for the most part, driven by personal and party agendas. I have no interest in pursuing either.\"\n\n\"Madam President, congratulations on your pregnancy,\" began another network reporter. \"Your relationship with many members of Congress has been contentious almost from the first day you assumed the presidency. Can you explain why that has come about?\"\n\n\"I hardly think that an explanation is necessary,\" replied Gwen immediately. \"Many members of Congress feel that their role in government is to promote themselves and their party. They do so at the expense of our nation and its citizens. However long I serve as president, I will always do what I feel is best for the United States. That radical approach seems to cause more than a little consternation in Washington.\"\n\n\"Madam President, did you realize that you were pregnant that evening you spent kneeling and praying for your husband and son's safe return?\" asked a reporter from another Hungarian paper. \"Can you describe what your thoughts were that night?\"\n\n\"Yes, I knew I was carrying Steve's son even then. My thoughts centered on the safe return of Saint and Steve and how much I loved them. I came to love my friends, relatives, and the Hungarian people even more as they worked together tirelessly to stabilize that old church and free the victims trapped beneath, even though they had no real reason other than my assertion to believe anyone was even in it. That act of faith was a tremendous source of comfort for me. I am humbled to have such friends. I have seen firsthand how men and women of courage and honor conduct themselves, which is yet another reason I have so little concern for the opinions and actions of Congress.\" \n\n\"You still haven't explained how you could know you're pregnant with a son!\" broke in the belligerent reporter that had so recently been rebuffed by Gwen.\n\n\"Please allow me to handle this, Madam President,\" responded Steve, stepping to the microphones. \"Ladies and Gentlemen of the press, President Hammer has to prepare for her flight to Kiev, so she must terminate this session. However, I'm already packed and ready to travel. If Mr. Kingston would care to remain behind, I'll be quite happy to pursue this discussion with him.\"\n\nThe aggressive reporter turned a bright red as a scowl crossed his face. Unable to meet Steve's eyes, he turned and hurried from the now silent room.\n\n\"Madam President, thank you for your time. Remind us never to imply that you're not forthcoming and truthful,\" chuckled Amber Stahl. \"Kingston's desire for the truth wasn't strong enough to motivate him to pursue a one on one with your husband.\"\n\n\"Thank you, Amber. I thought Steve was quite generous with that offer. I'm sure he'd have found the proper response for Mr. Kingston's rude behavior,\" chuckled Gwen as she gave Steve a brief kiss on the lips before taking his hand and leading him from the room. \n\nAir Force One landed in Kiev two hours later. The Ukrainian people were extremely proud that President Hammer had included Kiev on her world tour. She and her husband had always treated Ukraine very well. The state of the art hospital Lady in Red had built and funded was the pride of Kiev and all of Ukraine. People from across Europe and beyond traveled to Kiev to receive the best possible health care, often at no charge to the patient. The facility had already expanded once, and more wings were said to be in the planning stage.\n\nAs the motorcade wound slowly through the streets of Kiev, Ukrainians lined the sidewalks, waving and cheering their welcome for President and Steve Hammer, along with the other owners of Lady in Red. The city was already feeling the effects of thousands of travelers entering the city in anticipation of the concert to be performed in Independence Square the following evening.\n\nThe state dinner that night was a gala affair. Steve and Gwen made certain that Nadiya and Hans received a great deal of their attention. Nadiya's father had retired from government service, but Nadiya herself was extremely well known and popular in her homeland. The fact that she had been a strong personal friend of President Hammer for many years increased her prestige and popularity. \n\nSteve was of the opinion that in the future, under the right circumstances, Nadiya could attain the position of Prime Minister, and eventually President. Her father had been held in high esteem in Ukrainian politics and had developed many lasting friendships among government officials. That possibility was only enhanced as Nadiya and Hans were constantly seen chatting and laughing with the Hammers and their close friends and relatives. It was apparent to all that they had an easy and warm relationship with the Americans. In Kiev, and the entire Ukraine, that friendship was a source of great pride. Nadiya's star was still rising. Gwen and Steve both realized the advantages of having strong allies in governments around the globe and felt that Nadiya would be one of the best.\n\n\"I remember that night in Paris many years ago when that skier thought he would steal Gwen from you,\" recalled Nadiya as she and Steve enjoyed a dance. \"He had no chance but was way too full of himself to realize it. No real woman would give you up for a fool like him, and Gwen is the smartest woman I have ever met. I do wonder if that fellow had managed to entice Gwen if I would have had a chance with you.\"\n\n\"You're an extremely intelligent, beautiful woman,\" began Steve before Nadiya interrupted.\n\n\"But, you're so in love with Gwen that you can't even imagine any scenario where you are not with her,\" finished Nadiya. \"Naomi and Jordan are two very dear friends and we talk. They said you told them both the same thing when they asked you similar questions years ago. That loyalty of yours may be your strongest trait. You are a man of honor and totally devoted to your wife. That devotion has played no small part in carrying her to the Presidency of the United States. Your support and friendship has lifted me higher than I ever dreamed, and it could boost my career to even greater heights. You already know that I will never forget or forsake my American friends. I understand why you are so good to me and I truly appreciate it.\"\n\n\"Gwen didn't need any help from me to get where she is. You never did, either,\" replied Steve sincerely.\n\n\"And that is another trait women find so appealing,\" laughed Nadiya. \"You are very modest and always downplay your role in the lives of those you love. Your modesty is refreshing in this jaded world. \n\n\"Gwen did have a little help to become an expectant mother again, didn't she? It's very uplifting to see the love you have for each other. But now that I know about the old blind woman, I realize that fate had plans for you two from the beginning. That little girl, Lena, is adorable and Saint already demonstrates the same strengths of character his father possesses. Your family is going to be very interesting to watch over the next decade or so.\" \n\n\"I'm glad you're enjoying it,\" replied Steve. \"I feel a tremendous responsibility to see that Saint learns life's lessons and becomes the best he possibly can be. If he's meant for great things, the burden's on me to see that he's prepared.\"\n\n\"I would think that watching and helping you save those people trapped in that earthquake is exactly the sort of thing that instills your values in your son. You worry about it, but just being who you are and doing what you do will ensure that Saint learns the right values. With you as a father, he can do no less.\" \n\nThe next morning began with an emotional breakfast as Vince Rosen, Cindy Quick, Kate, Lisa, Jason, and Naomi, along with Chip and Jared were scheduled to fly back to Washington to appear before various Senate committees.\n\n\"Let me see if I have this right,\" stated Kate. \"You want us to tell the truth when we're questioned. Does that pretty well cover it?\"\n\n\"That may oversimplify it, but not by much,\" asserted Steve with a grin. \"Make no promises except to serve Gwen and your country to the best of your ability. Don't apologize for your success, or your wealth. Stress that you will not be accepting any compensation for your service and that you'll assist Gwen in any way possible, whether you're officially approved or not. Be as courteous and respectful as their behavior merits, but if they attempt to bait you, push back. Keep in mind that they have nothing you need. You aren't dependent on them.\"\n\n\"Yeah!\" interjected Jared. \"That reminds me of the first few days of training camp in our rookie year. We were almost twenty seven years old, had served in the military as officers, but we were considered rookies. They have a lot of little hazing traditions in pro ball. The Skins had one where rookies carried the duffel bags of the veterans.\n\n\"Steve and I were lugging huge bags around for two veterans that were younger than us. They had stuffed some weights in with their clothes just to bust our balls a little. One day we were taking a team bus to a media event and these two guys insisted that we carry their bags, even though they weren't needed and no one else was taking any.\n\nThe guy Steve was carrying for, Mad Dog Jones, wasn't content with just busting Steve's chops a little. He began making some pretty inappropriate comments about Gwen and how big her smile would be when she met Mad Dog and he showed her his prized possession. This is where it gets good,\" laughed Jared as he recalled that day. \n\n\"We stepped off the bus lugging these bags of weights when Steve makes like a hammer thrower in a track and field event. He spins around a few times and lets go of the bag. We were all watching in amazement as it cleared the railing and landed in the middle of a small retention pond, scaring away a dozen geese that were calling the pond home.\n\n\"Mad Dog got all pissed and yelled at Steve that he had just disrespected him and his property. Steve snarled right back at him that he owed no respect to him, or anyone else that would speak that way about a lady. If he wanted his shit back, he could go diving for it.\"\n\n\"I never heard that story,\" chuckled Billy. \"Mad Dog Jones was a huge defensive end. He was traded to Minnesota the year you guys joined the Skins. He played as a back-up there for a couple years before he was cut.\"\n\n\"That's the guy,\" agreed Jared. \"The entire team, as well as the coaches saw the whole thing. Mad Dog wanted to rip Steve's head off and Steve just stood there, grinning at him with the confidence we're so familiar with. When it came right down to it, Mad Dog just didn't have the nerve to try Steve. He finally turned and walked away. The team owner heard the story from the GM and they traded him later that week. \n\n\"I think the coaches were pretty happy about the whole scene. Steve sent a message to every player on the team by tossing Mad Dog's bag into the drink. He was perfectly willing to go along with the silly tricks and games they played on rookies, but no one was ever allowed to disrespect him, or his lady. That little stunt secured his role as team leader. Not many teams have a quarterback that can kick the crap out of everyone on the team. You have to remember this happened just a month or so after he had cleaned the butcher's clock and tossed him into the ocean. The guys were well aware of what Steve was capable of doing.\"\n\n\"Thanks for that tale, Jared. It pretty much sums up Steve's approach to people. He treats everyone with respect until they demonstrate that they don't deserve it. I'll keep that attitude in mind when I'm being grilled by those Senators,\" stated Lisa.\n\n\"Listen, everyone. I know I'm sending you back to Washington where they'll probably insult you, your family, your friends, and your family pet. Try to be as patient and respectful as possible under the conditions you'll be facing. Know that Steve and I love all of you and we'll support you until hell freezes over,\" added Gwen. \"You mean more to us than this job ever will.\"",
        "\"Speaking of your job,\" began Lisa. \"South Korea's Park is out and the new government wants very much to correct what it feels was the poor decision by Park to not honor you at a state dinner. I told them that you'd be receptive to meeting with representatives of the newly formed government once your world tour was concluded and you've had an opportunity to get settled back in Washington.\"\n\nAshley then joined the conversation. \"I have some news. I received a call from the president of NBS last night. It seems that they've reassigned Andrew Kingston. He asked me to convey his deepest apologies for Mr. Kingston's unpleasant statements at your last press conference. He insisted that they did not reflect the opinions or policy of the network. He especially wanted me to tell Steve. He said that he hoped it would be enough, but if Steve wasn't happy with the decision, he should call his private number and the network would be sure to make it right.\"\n\n\"I wonder if that apology has anything to do with the three year deal they signed with Lady in Red Productions to broadcast the annual Christmas show you guys put on,\" wondered Kate. \"Now that you're President of the United States, that deal must really look very sweet to them. If Kingston had screwed that up, they would've had him sweeping up the mail room.\" \n\n\"It's interesting that he wanted to be certain that Steve was placated. One of the biggest reasons not to insult the President of the United States is fear of her husband,\" pointed out Naomi. \"It was pretty evident that Steve was pissed big time at Kingston. He was smart to get out while he could still walk.\" \n\nGwen, Jordan, Charlie, and Steve spent the afternoon touring the hospital Lady in Red had built years before. They were greeted warmly by everyone they met, patients and staff alike. \n\n\"This is why we won't be placing our company in blind trust of any kind,\" explained Gwen to members of the press as their visit concluded. \"You've just seen firsthand how this hospital is benefiting people of Kiev and the entire Ukraine. The hospital we built in Moscow has been very well received and serves thousands of people every year. We fund these institutions generously, thus ensuring that everyone entering our buildings receives the best possible medical attention. That's why we work so hard at keeping Lady in Red Productions a growing international business. We have some very heartfelt and substantial obligations to meet.\" \n\nKiev was one of the few cities on the tour that had previously hosted concerts by 'Lady in Red', but that didn't dampen the enthusiasm of the huge crowd gathered to enjoy the American musicians as they once again performed in Independence Square.\n\nKnowing how well the Ukrainian people cared for her and what Lady in Red had done for them, Gwen was not surprised to have the vast audience go to one knee as she moved to the front of the stage. She sported a huge smile as she waved to the crowd before motioning everyone to stand. By the time they had gained their feet, Charlie had signaled the band to begin. The crowd was immediately dancing in the streets.\n\nFor Gwen and the rest of the musicians, it was almost like playing in front of their home town. They were relaxed yet energetic as they entertained around a million of their closest friends. The huge audience was vocal and very enthusiastic as they sang along and danced to the music for nearly five hours.\n\nThe following morning Gwen and Steve took time to once again answer questions from the reporters traveling with them. They weren't scheduled to depart for Moscow until noon and had time for a more detailed press conference.\n\nThe first thing Gwen noticed as she stepped into the room to meet with the press was Heather Jensen standing on the left side of the group. \"Heather? This is a pleasant surprise. Are you reporting for a news outlet?\"\n\n\"Thanks, Madam President,\" replied the attractive young blonde as the pool of reporters turned their attention to her. \"I've been assigned to replace Mr. Kingston, who had to attend to pressing matters back in New York. I arrived a few hours ago. It's an honor to be here covering your world tour and all of the things you're accomplishing.\" \n\n\"Thank you, Heather,\" responded Gwen, stepping to the microphone. \"It's always nice to see someone from Sparta doing well. Why don't we begin the questioning with you?\"\n\n\"Rumor is swirling in Washington that your husband has been summoned to appear before a Senate committee to determine if he should be approved as your national security advisor, and he declined. Can you comment on that?\"\n\n\"Wow! I can see you won't be lobbing softballs at me,\" chuckled Gwen as she considered her answer.\n\n\"Congress is well aware that Steve is committed to this world tour. We need him for his talent and stage presence in our concerts. As you well know, Heather, a great many people would be very disappointed if he failed to appear on stage with us. The fact is that I also rely heavily on his advice when I meet with foreign leaders. I'd be foolish not to take advantage of what I feel is the most knowledgeable person in international diplomacy available anywhere.\n\n\"Then there's the fact that above all, Steve's my husband, my confidant, and my lover. Why would we even consider being apart at a time like this? We don't take orders from Congress, especially if they interfere with our family, my job, and national security,\" finished Gwen firmly. \n\n\"Is your husband your national security advisor?\" asked the next reporter. \"Doesn't he have to be given security clearance and approval from Congress to hold that position?\"\n\n\"Steve and Naomi are the two people that I turn to for advice on international matters. Naomi is back in Washington and prepared to appear before a Senate committee in a few days. The short answer would be that Steve really is my national security advisor, although he does not hold that official title. As far as security clearance is concerned? He's my husband. Has any president ever had a spouse who required a security clearance? Do you think any president has ever discussed sensitive issues with a spouse? Steve needs no vetting. You all know that. For Congress to suggest that a highly decorated former Navy Lieutenant Commander, Navy SEAL, and trusted advisor to several presidents needs its approval is ludicrous. I'll proudly compare Steve's qualifications, integrity, patriotism, and knowledge with any Senator or Congressman that questions his credentials.\"\n\n\"Does your husband currently have total access to any and all information available to you, Madam President, including classified documents?\" asked another network reporter.\n\n\"Absolutely,\" replied Gwen succinctly.\n\n\"Are you concerned about how this response may appear to Congress? Your husband has refused to comply with a summons from the Senate Intelligence Committee,\" continued the same reporter.\n\n\"Steve has not refused to appear before the committee. In fact, he's already informed them that he'll be willing to appear later in the fall, once this tour is over and our schedules become more stable,\" replied Gwen. \"As far as Congress' reaction is concerned, you need to submit that question to them. I'm sure their constituents will be interested in their responses\"\n\n\"It appears that the sale of the Washington Redskins to your company is a mere formality at this point,\" pointed out Heather. \"Are you going to go through with the purchase if the NFL grants final approval?\"\n\n\"We submitted our offer over eighteen months ago, long before I was even considered for Vice President. We knew it would be a slow process, but now that it may finally be approved, we'll move forward as quickly as the situation allows.\"\n\n\"Will Steve come out of retirement if you gain ownership this season?\" pursued Heather. \n\n\"We've been far too busy to even think about that possibility. I'll support Steve if that should be his decision. He and Jared would certainly make it a better team,\" added Gwen as she glanced at her handsome husband and smiled.\n\n\"Do you blame the officials for the Super Bowl loss earlier this year?\" asked a cable news reporter.\n\n\"Steve would be very upset with me if I did,\" responded Gwen. \"Games are won and lost by players and coaches. It's that simple. Steve never assigns blame for a loss. He simply looks for ways to improve. We have no dispute with the officials and we very much appreciate their professionalism and knowledge of the sport.\" \n\nA reporter standing in the back asked, \"Do you think Congress will approve Vince Rosen as Vice President? Will the Senate confirm your sister, your brother-in-law, Naomi White and her father, Jeff Wilson to cabinet level positions?\"\n\n\"Again, you should direct those questions to members of Congress. I've submitted the names of extremely qualified people for positions in our government,\" replied Gwen. \"It's my hope that they'll be approved, but we're all aware of the current climate in Washington. Time will tell.\"\n\n\"Did you or your husband have anything to do with Andrew Kingston being called back to New York, and a personal friend of yours, Ms. Jensen, replacing him?\" asked a cable news reporter.\n\n\"Let me assure you that we did not contact his network, for any reason. They did contact my Press Secretary, Ashley, to apologize for his behavior and she acknowledged that apology. Neither I, nor Steve, had any intention of having him removed from this tour,\" stated Gwen firmly. \"That said, I think it was obvious to everyone that Steve was irked by Mr. Kingston's attitude toward me. He may have intended to have a private discussion with Mr. Kingston, but neither of us indicated to anyone in any way that we wanted him removed.\"\n\n\"Is it appropriate for your husband to physically threaten people, especially reporters, when he perceives some sort of insult has been directed toward you?\" asked the same reporter.\n\n\"Steve did not threaten Mr. Kingston. He simply suggested a more private opportunity to explain our position to Mr. Kingston. You may assume there was a threat, but I know Steve. He's never physically harmed anyone that didn't start the fracas. He will, on occasion, intimidate others. If you just stand your ground and calmly discuss any disagreement you have with him, he'll never harm you. \n\n\"That said, Steve will not stand idly by when someone becomes overly offensive or inappropriate toward me or my children. He's my husband and he considers protecting his family to be a top priority. I see no fault in that and I doubt that many other women would either. \n\n\"As all of you know, I have a flight to Moscow this morning and I have to prepare. Thank you for your time,\" concluded Gwen as she took Steve's hand and walked side by side with him as they left the room. \n\nOnce Air Force One was in the air, Ashley asked the question that was puzzling her. \"Isn't Heather awfully young to be a White House correspondent for a major network? She wasn't afraid to ask questions however, was she?\"\n\n\"Steve pretty much jump started her career when she was a reporter in Charlotte, North Carolina,\" recalled Gwen. \"It was two years ago that she tried to contact Steve in the off season. The station she was working for was scheduled to participate in the local version of 'Dancing with the Stars'. \n\n\"You know how they usually go. News anchors are coerced into trying to look good in tuxedos and gowns as they attempt to learn some basic moves for the dance floor. Heather's station had an excellent female anchor about sixty years old. She flat out refused to participate. It was certainly her right, but Heather thought the determining factor was that a rival station had an extremely attractive woman who happened to be a former gymnast, anchoring their morning news. She had been selected to represent her station. She was tough competition, even for a much younger woman.\n\n\"The older news woman shrewdly insisted that Heather, who was young and quite beautiful, be the female representative for their station. Heather accepted the assignment and was told to find a dance partner, hopefully a professional. That was all the effort her station put into it. After spending a week visiting every dance studio she could find, Heather asked us for help. I still remember how anxious she was,\" reminisced Gwen.\n\n\"Heather had been a high school classmate of Cheryl Baxter's. She knew that Cheryl worked for Lady in Red and called her to ask how to get in touch with Steve. Cheryl promised that she would pass Heather's contact information to Steve, and she should wait to hear from him. To Cheryl's credit, she gave the information to me, rather than Steve. Cheryl's reasoning was I probably wouldn't want someone giving my husband the phone number of a beautiful single woman. That's why she's doing so well with Lady in Red. She's considerate, smart, and loyal,\" offered Gwen with a smile.\n\n\"Heather was surprised when I called her. She had been hoping to hear from Steve. She knew what a soft touch he is for beautiful women. Once Heather explained her situation and how all of the proceeds were to benefit shelters for battered women in the Charlotte area, I told her that I'd discuss it with Steve and let her know.\n\n\"Heather told me that the Skins were scheduled to play the Panthers in Charlotte that weekend, so it wouldn't involve extra travel. She offered to come to Washington to spend a few days working on their dance routine. The girl had it all worked out! Steve agreed, but they rehearsed in Sparta rather than Washington, with Diane's help.\n\n\"I remember that now! Steve had a bye week and you both spent the weekend in Sparta. We didn't get to hang out too much because Steve was busy all the time,\" recalled Billy. \"I thought he was studying game films or something.\"\n\n\"Yes, Steve and Heather worked all weekend to perfect the routine. Charlie and Jordan rehearsed with me because we decided to have them dance to live music, which we provided. We didn't tell anyone because we wanted everything to be a total surprise when we performed in Charlotte,\" revealed Gwen.\n\n\"So dancing with Steve that night made that big a difference to Heather's career?\" asked Ashley. \"I was pretty busy going over things for a senate vote the following week, so I didn't really follow the event too closely.\"\n\n\"With all due modesty, Steve, along with Jordan, Charlie, and me made Heather's career that night,\" stated Gwen. \"Pretending nerves, Heather had maneuvered the dance rotation so that she was last to perform. She never told anyone who her partner would be, and truthfully, not many people seemed to care.\n\n\"The woman from the rival channel was really good. Her partner was actually a back-up dancer from the network show 'Dancing with the Stars' and they performed a beautiful routine. It looked like it was all over but the trophy presentation. Then Heather, still without a partner anywhere in sight, stepped up to the microphone and announced that her band would need a couple of minutes to set up and asked everyone to be patient. \n\n\"The small orchestra that had played quite well all evening grumbled a little until they saw Jordan, Charlie and me carrying out some equipment. They couldn't help us fast enough once they realized who we were. Charlie had brought along a drummer and another guitar player to fill in around Jordan and him. The crowd came alive while we quickly set up. Once we were ready, the lights on the dance floor went out for several seconds.\n\n\"When they came back on, Heather was posed like a dancer from 'A Chorus Line' in a short, low cut, sexy black dress that she had worn under the more modest gown everyone had assumed she would wear for her performance. She was facing Steve, who I have to admit looked sexy as hell. He had on a loose pair of silk trousers held up by suspenders that fit snuggly over his exposed chest. Women in the audience oohed and aaahed as soon as the lights came on.\n\n\"We played 'Dirty Laundry' while Steve and Heather performed the sexiest dance I'd ever seen. I was jealous and aroused at the same time as I watched them. I actually had trouble remembering the lyrics. They brought the house down! Afterward, people cheered and applauded for several minutes while Heather and Steve bowed and waved to the audience. \n\n\"Then they motioned for Jordan, Charlie, and me to join them in the spotlight and the cheering increased,\" reminisced Gwen. \"The emcee came over to interview us and everyone, including Heather, was stunned when Jordan announced that Lady in Red Productions was donating a million dollars to the benefit, and that we had asked a few corporate friends to help this very worthy cause. They had come up with another million, for a two million dollar total. The stated goal had only been forty thousand dollars.\n\n\"I think that station still plays the video of that dance every chance they get. Heather became a bit of a celebrity. Within a few months, she had several offers from larger market stations and wound up in Chicago with an affiliate of ABS. She moved up to anchoring the evening news for the Chicago affiliate a few months ago. Now she's the network's White House correspondent.\"\n\n\"I bet that being on good terms with you and Steve was considered when she was promoted. They sure don't want to jeopardize the contract they have with you to broadcast three Christmas shows on their network,\" surmised Ashley.\n\n\"But she asked some pretty good questions,\" observed Paula. \"She didn't act like she was worried about upsetting you in any way.\"\n\n\"She's smart, Mom. If she were a sycophant, she'd have no credibility. I'm sure that a lot of people think she got where she is because she's got nice boobs and a pretty face. She has to perform as a top journalist or she'll lose any credibility she has. I would hope that she knows that Steve and I expect no special treatment; just some common courtesy.\" \n\n\"So Heather pulled off a promotional stunt that carried her to a network position? That's a great story,\" insisted Billy. \n\n\"Make no mistake, Heather is very talented and, as beautiful as she is, she was bound to make it big eventually. We just sped the process up a bit,\" replied Gwen.\n\n\"That girl is absolutely stunning,\" observed Paula. \"You were very understanding to go along with Steve dancing with her. She could have set her sights on him.\"\n\n\"Of course she would, Mom,\" acknowledged Gwen. \"He's wealthy, famous, handsome, athletic and a bunch of other things women look for in a man. I trust Steve totally. He proved himself years ago when he managed to resist my sisters, Jordan, Stephanie, Nadiya, Naomi, Diane and even you. He loves all of you but he's never strayed, so I'm confident that he's my guy as long as I treat him right.\"\n\nMoscow was teeming with activity in anticipation of the concert Lady in Red had scheduled for Red Square. A large stage had been erected and the huge jumbotrons were in the process of being installed around the huge square as President Hammer's motorcade made its way through the city. People lined the streets and waved and cheered their approval as the motorcade made its way to the luxury hotel Gwen and Steve had first visited just after high school.\n\n\"This brings back memories!\" exclaimed Paula to Gwen as they arrived at the hotel. \"It seems like yesterday that you and Steve were solving that Russian spy issue with France, and you were barely out of high school!\"\n\n\"That was pretty much all Steve,\" replied Gwen as she clutched her husband's hand. \"All I did was smile and try not to look dumb.\"\n\n\"That line might work if I hadn't been there to witness the entire thing. You certainly did your share to bring the dispute to a reasonable resolution,\" recalled Paula. \"I should have known back then that one of you'd become President of the United States.\"\n\n\"I wouldn't have been surprised if it had been Steve,\" admitted Gwen. \"Instead, he made a path for me to succeed, always placing my welfare ahead of his own. Have I mentioned lately that I love the guy?\"",
        "\"I seem to recall hearing that someplace,\" laughed Paula as she gazed at the couple sitting so close together. \"You're an inspiration to the whole country, or more accurately, to the entire world. Sometimes I have trouble believing you're my daughter.\"\n\nThe remainder of Gwen's day was spent in their suite reviewing files and documents concerning the recent interactions between Russia and the United States. Steve and Gwen felt that America had to develop some stronger ties with Russia, finding common ground and some measure of trust. War had appeared far too likely a few short weeks ago and the couple was intent on finding ways to scale back the conflicts with President Kozlov and Russia.\n\nThe next morning, Gwen and Steve were driven to the Kremlin to meet with President Kozlov. After giving photographers enough time to get hundreds of photos of the world leaders looking gregarious, Kozlov led the American couple into a large meeting room and offered them comfortable seats near a chair that was obviously his.\n\n\"I understand that you are fluent in Russian, Madam President. May I suggest that we dispense with any interpreters and enjoy a private conversation?\" began Kozlov politely.\n\n\"I think that's an excellent suggestion,\" replied Gwen with a genuine smile. \"We can be more candid without concern for what others may hear or take away from our meeting.\"\n\nSteve remained silent as Kozlov and Gwen engaged in a far ranging conversation. He couldn't help but marvel at how well Gwen interacted with her Russian counterpart. It was obvious that Kozlov was impressed with Gwen's knowledge of issues concerning the two nations, but there was something else and it took Steve a few more minutes to put his finger on it.\n\nKozlov was under Gwen's spell! Steve had sat across the desk, looking Kozlov in the eye, insisting that Russia withdraw to previous positions and even subtly suggesting that the United States might resort to using its nuclear arsenal. The man's eyes had been hard, but they showed no emotion. Kozlov masked his emotions very well.\n\nSteve felt like he was now looking at a different person. Kozlov's eyes seldom left Gwen as he smiled and nodded at her comments. For her part, Gwen was as charming and persuasive as Steve had ever seen her, and she was having a noticeable effect on the crusty Russian.\n\nKozlov had served in Nobokov's administration and had seen Gwen several times over the years, but had never been introduced, or even gotten near the beautiful American. That didn't mean that he hadn't been impressed with her beauty and grace. He had collected all of her movies and had even employed the use of the 'pause' bottom on his player more than a few times during some of Gwen's steamier scenes. To sit so close to the American icon of beauty and see her smile at his remarks caused the older man to feel genuine affection for the President of the United States. It was that softening of attitude that Steve noticed as he quietly observed his wife spin her magic.\n\n\"Gwen? Mr. President? I apologize for interrupting, but I would like to be excused to visit the men's room. I hope you don't mind. I'll only be gone a few minutes,\" promised Steve as he watched the Russian leader turn his attention away from Gwen.\n\n\"I understand perfectly!\" chuckled the older man. \"Please feel free to visit our bathroom. Just step outside and one of my aides will show you the way.\"\n\nMeanwhile, Gwen had a slightly amused look on her face as she nodded in agreement with President Kozlov. She knew that Steve never had any bladder issues. She always claimed that he had cast iron organs, and he had used the bathroom a few minutes before they left the hotel. He must have determined that Gwen being alone with President Kozlov would somehow be an advantage.\n\nIt was almost half an hour later when Steve tapped softly on the door before opening it. \"Sorry, I took so long. All of this traveling seems to be taking its toll on me,\" apologized Steve as he entered the room.\n\n\"Again, I understand completely,\" commiserated the Russian. \"Our time is up for today, but President Hammer and I will be meeting once more before you depart, and there is the dinner tonight in her honor. I will see you both then.\"\n\n\"Thank you for your hospitality and candid conversation, Mr. President,\" replied Gwen as she stood and without hesitation, moved to embrace the Russian leader. \"It's my hope that Russia and the United States will be able to work together to resolve issues before they again become so dire as they recently were. You have been most gracious.\"\n\nSteve saw surprise and then pleasure on Kozlov's face as Gwen hugged him. Once Gwen stepped back, Steve shook the Russian's hand firmly. \"Thank you for being so kind to us and for making Gwen so comfortable. You'll find that she's very loyal and considerate to those people she cares for. We look forward to the state dinner and any future meetings.\"\n\n\"Your wife is a remarkable woman,\" replied Kozlov as he shook Steve's hand. \"America has a leader with compassion and strength. It's my hope that Russia and the United States can work together to resolve many of the issues facing our nations.\n\n\"Madam President, please feel free to call me any time of the day or night. I believe that communication between you and me will benefit our countries significantly. I will arrange my schedule so that I can visit the United States next year. Thank you for the invitation.\"\n\n\"We look forward to your visit,\" smiled Gwen. \"I only hope that you will feel as welcome in the United States as Steve and I have felt in Russia.\" \n\nAfter the meeting Gwen and Steve traveled back to their hotel for a late lunch with their group before preparing for the state dinner later that evening. \"You wanted me to be alone with Kozlov and it did make a difference. Once you left the room he began opening up on a variety of topics. Surprisingly, the biggest one on his mind was the health of his granddaughter\"\n\nSteve simply raised an interested eyebrow and nodded for Gwen to continue. \"She's five years old and was recently diagnosed with leukemia. Her doctors recommended our hospital here for her treatment. Her doctor told him that it was one of the very best children's hospitals in the world. I was taken completely by surprise,\" admitted Gwen.\n\n\"That's pretty serious, but she can be cured, right?\" asked Steve.\n\n\"Depending on the subtype, the success rate is often pretty good and getting better,\" replied Gwen. \"Kozlov asked a lot of questions about treatment and cures. He's extremely concerned. I reassured him as much as I could without seeing any files on the child. He asked me to look at her records to see what I think and to personally look in on the little girl.\"\n\n\"He knows that you're a pediatric surgeon, doesn't he?\" questioned Steve. \"You're a great doctor, but leukemia is outside your area of expertise.\"\n\n\"He knew that, but I took the time to explain it to him anyway. He still wants me to go over her diagnosis and treatment just to be sure she's being treated properly. He's looking for emotional support for his family and himself. It's not uncommon. I told him that we're scheduled to visit the hospital tomorrow and I'd check on her, on the QT. As you know, this is a private matter and not for public consumption.\"\n\n\"Interesting how it all works. He's one of the world's most powerful people, but he's at the mercy of technology and the skill and knowledge of the doctors treating his granddaughter,\" offered Steve. \"This sure makes him seem more human than he appeared when I met with him just a few weeks ago.\"\n\nGwen's friends and family gathered in a private dining room in their hotel for lunch. \"Now that we have Hans, Claude, and James here, I'd like to know what was said to Kozlov about possible nuclear options during the negotiations,\" stated Gwen as she looked at the three men that had accompanied Steve and Naomi on his diplomatic mission a few weeks prior. \"I thought Steve might gloss it over, so I'm asking you gentlemen to fill me in.\"\n\nHans quickly glanced at James and then Claude. \"James would be the one to ask. He discussed it with Steve while we were flying to China.\"\n\n\"You were sitting right next to me!\" pointed out Stephanie's husband. \"I really think that Steve would be the best person to explain the entire process.\"\n\n\"James, why don't you tell me?\" prodded Gwen. \"Steve already told me his version. I'm just curious about anything he may have left out.\"\n\n\"If you insist, Madam President,\" responded a clearly uncomfortable James Hawthorne. \"Kozlov was inferring that he wasn't about to be pushed into realigning his troops because of some casual promise he made to Steve. He more or less told Steve to go pound sand, as you Americans like to say. Steve simply informed him that, as president, you were prepared to do whatever was necessary to protect the United States in the event of a war. Since Russia had you at a tactical disadvantage, all options were on the table.\n\n\"Steve never mentioned a nuclear response, but Kozlov assumed that Steve had implied it. He became a bit agitated, but then he agreed to keep his promise.\"\n\n\"You sat at the negotiating table and threatened Russia with nuclear war?\" gasped Paula as she turned to Steve. \"Wasn't that extreme? Gwen would never use atomic weapons!\"\n\n\"Mom, please don't assume what I would or wouldn't do to protect the United States. Kozlov pretty much told me the same story that James just gave us. He asked me if I was really prepared to use nuclear weapons.\"\n\n\"Well, what did you tell him?\" asked Paula.\n\n\"I told him that Steve has my complete confidence and I would follow his advice on any decision if Steve felt it was necessary,\" replied Gwen calmly.\n\n\"My God! You'd actually do that?\" asked a stunned Paula.\n\n\"There are two things I had to consider when I responded to Kozlov's question. I had to protect Steve's credibility. If I hadn't told him that I'd use those weapons, I would've cut Steve's legs out from under him for any future negotiations. The second thing is quite simple. I will listen to any advice Steve gives me and if he feels strongly that I should do something, I will do exactly that. His knowledge of these situations far outweighs mine. I trust him implicitly. As you can see, I was being totally honest with Kozlov.\" \n\nSilence ensued for a full minute as Gwen's statement was absorbed by everyone at the table. \n\n\"When I think about it that way, you're absolutely right,\" admitted Paula. \"If I were the president, I'd feel the same, but I truly hope it never comes to that. I agree that Steve certainly understands military and political developments better than anyone else.\" \n\n\"Of course, you have to realize that Steve is the most gentle, kind person on the planet most of the time and would never consider using nuclear weapons if there were any other options,\" added Gwen.\n\n\"I don't think that Kozlov was seeing the kind and gentle side of Steve that day,\" laughed Claude D'Anjou. \"He blinked before Steve did and the rest is history, as they say.\"\n\nPresident Kozlov made certain that the state dinner that evening was planned and executed to perfection. He was the consummate host, always polite and gracious as he introduced Gwen and Steve to numerous government officials. A short time after they finished eating, Steve saw Vlad and Anna Novokov and ushered Gwen over to greet them.\n\n\"Vlad! It's so good to see you!\" gushed Gwen as she hugged Vlad Nobokov. \"You're looking well. You've got to stop in and visit with Steve and me and see our kids. I'd really like to meet your children, too.\"\n\nMeanwhile Steve was hugging an obviously pregnant Anna Novokov. \"You've put on some weight since the wedding, but you look great! You have a certain glow about you.\"\n\n\"The same glow that you put on your wife's face,\" laughed Anna as she moved over to hug Gwen. \"These men think getting their poor wife pregnant is some kind of amazing feat. I tell Vlad that ordinary men have been doing that for thousands of years, but he just smiles at me.\"\n\n\"I know,\" agreed Gwen. \"Steve's had a silly grin on his face since the moment I told him that we were having another son.\"\n\n\"Which is another thing most people, especially men, cannot understand,\" replied Anna. \"You have only been pregnant a week or so, yet you knew that you were and that it was a boy. So many want to know how you knew to look for Steve and your son in that old church, and how you know that you are with child, a son.\n\n\"I tell Vlad that some things have no explanation and that he should not assign the usual limitations of mankind to you and Steve. He is living proof of that. Those quick actions of yours saved his life on our wedding day. Without you and Steve, we would not be here tonight,\" stated Anna appreciatively.\n\n\"I haven't seen you since your father's funeral. How have you been?\" asked Steve as he shook the hand of his Russian friend.\n\n\"Anna and I are doing well, as are the children,\" replied Vlad. \"I want you and Gwen to know that we greatly appreciate that you took the time to come to Father's funeral. It was a difficult time for us. His death was totally unexpected.\"\n\n\"We're your family's friends and we wouldn't have missed it. Your dad was a good man that always had the best interests of Russia in mind. I understand that you're also quite popular in political circles. Some observers think you may become the next President.\"\n\n\"A lot can happen in the next two years,\" warned Vlad. \"President Kozlov has already stated that he has no interest in another term. He was a compromise candidate and has served reasonably well. He governs more from the center than the other candidates would have, and that has been good for Russia.\n\n\"There are those that would not like to see me become President of Russia. Father had his enemies and they are now mine. Everyone in Russia was very pleased when Gwen became President. We watched Gwen take her oath of office and Anna told me at the time that the two of you would put an end to the tensions of imminent war that were so prevalent at the time. \n\n\"Believe me when I say that no one in Russia wanted a war, but sometimes foolish pride and old ways are stronger than common sense. You and Gwen were willing to take a huge risk to reach a peace, and the people of Russia understand how difficult that decision was. We greatly appreciated your wisdom and courage. To the people of Russia, and to the world, President Hammer truly is the Queen of Peace.\"\n\nGwen and Steve found themselves enjoying the evening. They danced with Russian dignitaries and their spouses. Gwen's smile was especially wide when Vlad escorted her onto the dance floor. Once again, the calming influence of President Hammer was felt in a foreign capital. Everyone knew the story of the heroics of Steve and Gwen on that fateful day when terrorists attacked the Novokov wedding party, but tonight Steve had the lovely and very pregnant Anna Novokov laughing gaily as they danced. Those witnessing President Hammer and her husband interacting with Vlad and Anna Novokov saw clearly that the friendship between the couples was very real.\n\nGwen and Steve, along with Jordan and Charlie, spent the next morning visiting the hospital they had financed for the people, especially children, of Moscow and all of Russia. Gwen managed to discreetly spend some time with the team treating President Kozlov's granddaughter. It was not common knowledge that the Russian President's granddaughter was being treated in a hospital built and funded by Americans. Gwen felt more than a little relief when she was told that the child was responding very well to treatment and was expected to make a full recovery. \n\nTouring the hospital was an extremely gratifying experience for the friends. \"I can't tell you how proud I am to be a part of something doing so much good!\" exclaimed Jordan. \"I know the concept was originally part of international negotiations, but it turned out so well! I think there'll be some real excitement when we announce our next hospital location. It's almost like cities vying to host the Olympics!\"\n\n\"I think you're right,\" agreed Gwen, before adding. \"You and Charlie will be making that announcement, so be prepared. I think that it's important that everyone realizes that Lady in Red is building the hospital and not the United States government.\"\n\n\"That'll be our pleasure. Charlie's Spanish is pretty good, so I'll let him do most of the talking,\" replied Jordan. \"I love seeing people react when we do something really nice for them. Joining with you guys and meeting Charlie vastly improved my life. You guys have been great to me.\" \n\nThe hospital tour ended in the early afternoon to allow the travelers time to prepare for the concert to be held at Lomonosov Moscow State Univeristy's main building that evening. \"Why is the concert being held at the State University rather than Red Square?\" asked Gwen as the group was being transported back to their hotel.\n\n\"It's a combination of a couple of things,\" replied Charlie. \"Russia is extremely proud of the University. It's one of the best in the world and attending it is quite prestigious. They love to showcase it. The other reason is the size of the venue. It was estimated that three and a half million people attended a concert there by Jean Michel Jarre back in the nineties. They're expecting an even larger crowd tonight.\" \n\nAs they approached their hotel, Jordan laughed and pointed out the window. \"I can't read Russian, but I bet the shirts those teens are wearing say 'Queen of Peace'. It's the same shirt we saw in Hungary, but written in Russian, or at least I think it's Russian.\" \n\n\"It is,\" confirmed Steve. \"Look at all of the people wearing them. It looks like we're going to have a big crowd tonight. Gwen is building quite an international following.\"\n\n\"They'll be coming to see all of us,\" protested Gwen. \"You know that as well as I do. Jordan and Charlie are the top selling artists in the world and Kathy Perrine isn't far behind. Toss in Jack Timberline and a great band with Jody playing the sax and you've got something very special. People all over the world realize it. A few misguided ladies may even show up just to see Steve sing and strut around the stage in those tight shirts and jeans.\"\n\nThe concert in Moscow was carried live in the United States. When the tour had been set up, it had been decided that there would be two performances broadcast live. The first would be from Moscow. The previous concerts had segments broadcast, but Russia, with Lady in Red's permission, sold TV rights to stations and networks around the word, promising the revenues would be used for charities across Russia. \n\nTheir feed would be under the control of the Lady in Red directors and would be the same as those displayed on the Jumbotrons on site. When the musicians took the stage at seven PM Moscow time, noon on a Sunday afternoon in Washington, the screen showed the backs of the performers as they gazed out at an incredible crowd estimated in the millions. Gwen's mouth was partially open in wonder as she stepped to the front of the stage, only to be greeted by millions of people dropping to a knee and chanting \"Queen of Peace\" in Russian. Gwen shook her head in amazement as she flashed her trademark smile and motioned for everyone to stand, even as tears once again trickled down her cheeks.\n\nOnce the crowd regained their feet, a long and thunderous ovation echoed across the city. Charlie waited until the din was down to a low roar before signaling for the band to begin. For the first time, Americans got to watch a live performance of their president while on her 'We Come in Peace' world tour. Viewers were stunned as they experienced the single most incredible greeting of an American leader they had ever seen. It was very apparent that President Hammer was extremely popular in Russia! ",
        "Those watching on television were treated to close-ups of their president wearing a short, red leather outfit that exposed a great deal of cleavage. Jordan and Kathy Perrine were similarly dressed, but Jordan was in bright blue and Kathy in white. By the time Gwen finished 'We are the Champions', estimates of the crowd size began crawling across the bottom of TV screens. Russian officials determined that over four million people were packed into every available space possible to watch history being made. \n\nAs usual, some Americans watching questioned the appropriateness of Gwen's outfit, but far more viewers simply felt pride and wonder as Gwen entertained and pretty much owned the huge crowd. This was their president! Occasional close-ups of Steve brought gasps from more than a few wives and mothers watching from their homes. He wore a tight fitting tee-shirt with 'Queen of Peace' blazed in Russian above the likeness of Gwen kneeling in the cemetery in Hungary as she prayed for the rescue of her son and her husband. \n\nThe songs featuring Gwen singing lead with Jordan and Kathy Perrine singing back-up while dancing on either side of her were the biggest crowd pleasers. When the trio performed 'Hate Myself for Loving You' with Steve and Charlie featured on guitars, millions of people began dancing in place and clapping with the driving drum beat. \n\nGwen's interpretation of 'Addicted to Love' was another crowd favorite. Watching Gwen, Jordan, and Kathy dance and strut in perfect unison brought groans as well as cheers from the men in the vast audience. Jodi was prominently featured with her sax as she stood just behind Gwen. She blew away the four million fans in front of her as she showed the people of Moscow and around the world why she was considered by many to be the best sax player ever.\n\nAs the final encore, Steve and Gwen performed their 'Dirty Dancing' routine. Fans recognized the song after a couple of bars and began cheering and applauding wildly as a spotlight fell on Gwen while Steve sang. Because of the crowd reaction, Charlie signaled to his band mates to vamp until the noise abated enough for Steve to be heard. As the huge audience realized that the musicians were waiting for them to settle down, the entire venue became eerily silent. Charlie started the band again.\n\nSteve joined Gwen in the spotlight and their performance began. The dance routine had been extremely popular in their earlier concerts and was still one of the most frequently watched videos on YouTube. Steve and Gwen brought the house down with their performance that warm night in Moscow. \n\nBack in American tears flowed down the cheeks of viewers across the nation as millions watched President Hammer and her husband dance and sing flawlessly as they 'dirty danced' around the stage. A huge roar of approval thundered across the city when Steve held Gwen aloft while Jordan and Charlie took over the singing as Steve slowly lowered Gwen until her face was even with his. As the lights began to dim on stage, Gwen's lips met Steve's as the audience whistled, cheered, and clapped with absolute delight.\n\n\"And that, Ladies and Gentlemen, is how you put on a concert!\" exclaimed Charlie to his friends once the equipment was turned off. \n\nThe next morning, Steve waited as Gwen briefly met privately with President Kozlov. \"I've spoken with the team caring for your granddaughter, President Kozlov. They assure me that she is responding extremely well to treatment and see no reason she shouldn't recover fully. It looks like you'll have her with you for a very long time.\"\n\nPresident Kozlov's relief flashed across his face. He thanked Gwen profusely as they wrapped up their private meeting. A few minutes later, he posed with Gwen for another photo session before she and her group departed for their next destination. Everyone was surprised when Gwen stepped inside the Russian's proffered hand and hugged the burly man. Kozlov's face first reflected his surprise and then his delight as he warmly embraced Gwen as dozens of cameras flashed continuously. \n\nSteve was delighted when he saw the emotion on the Russian leader's face. Gwen had managed to get past the man's defenses and had secured a place in the man's heart. Steve understood that the man would always place what he felt was Russia's best interests first, but he would at least be willing to listen to Gwen and consider her thoughts on international issues. That accomplishment had been a priority of his for Gwen's presidency. She was building her sphere of influence around the world with her engaging personality and generous acts, as Steve had anticipated when the world tour was planned.\n\nSteve's reaction did not go unnoticed by James Hawthorne. On the flight to Berlin, he brought the subject up to the entire group. \"Steve's orchestrated this trip brilliantly. He's been very careful to present Gwen in the best light possible and trust that her beauty, grace, charm, and gentle nature will win over world leaders, as well as the citizens of the countries we've visited.\"\n\nEveryone turned their undivided attention to James. \"Have you noticed how he places the rest of us in situations to help our standings in our home countries? He and Gwen were extremely warm to his cousin Jen and her husband, who just may become Prime Minister in the not too distant future. Look how well he and Gwen supported Nadiya in Ukraine. They took great pains to showcase Vince Rosen and Cyndi Quick when they flew out to join the tour. They've made it obvious that they regard Stephanie and me quite highly. I like to think that I have some influence in the politics of Great Britain. I'd be very surprised if Hans doesn't receive a great deal of positive exposure when we visit Berlin. Michelle will be quite prominent when we reach Paris. She may well be their next Mayor.\n\n\"You're right!\" gasped Paula as realization washed over her face. \"Gwen and Steve have a master plan for this world tour. I just thought that they were being generous and supportive, but James has opened my eyes. You've been building support for the future as well as the present, haven't you, Gwen?\"\n\nGwen smiled with pride. \"We've been trying, Mom. It was pretty much Steve's idea. He's always promoting me, as well as our friends. He's so good at it that people seldom realize he's doing anything at all. He's always looking out for me and working behind the scenes to improve my sphere of influence. Notice that he never makes any effort to take his place in the limelight? He's content keeping me front and center. That's why I insist that he accompany me to as many of the press conferences as he can. I want it made obvious to everyone that we're a team. I think people like knowing that Steve is very much involved in the decision making process. Everyone respects and trusts him.\"\n\n\"It's almost nine AM back in Washington,\" observed Steve as he smoothly deflected the subject. \"Naomi, Jeff, Jason, Kate, and Lisa are all scheduled to go in front of Senate committees today. I'm very curious to see how they're received by the Senate. Lisa doesn't need Senate approval, but since she was asked to appear to discuss Gwen's presidency, and since we want Jason approved to head FEMA, she's cooperating as much as possible.\"\n\nIn Washington, Jason was already testifying, although his appearance was not expected to be as contentious as Kate's and Naomi's. The Senate committee first wanted him to explain how Lady in Red had been able to respond so quickly and effectively to the natural disaster in Hungary.\n\n\"It took some time to put it all together, but essentially, we have thousands of businesses contracted to supply us with whatever services or goods we could conceivably require. We give them a reasonable good faith deposit once they meet our standards and they maintain a larger than normal inventory. Many vendors across the country, and now in Europe and much of Asia, are contractually obligated to respond as soon as they are notified. When they are needed, those vendors that are compensated above the going rate in their area for their goods and services,\" explained Jason.\n\n\"Do you own any of the equipment, building materials, or health supplies that your company delivers to disaster sites so quickly?\" asked a curious senator.\n\n\"We do not. We rent the equipment when we need it and pay for all supplies upon delivery. We have no equipment or supplies in storage anywhere.\"\n\n\"You believe that is less expensive and faster than buying the equipment, building materials, and temporary housing before the emergency occurs?\" pursued the same Senator.\n\n\"Absolutely. FEMA has thousands of fully stocked single wide mobile homes parked in fields and lots all across the country. Most of them will never be used. They'll simply deteriorate until FEMA has to pay someone to dispose of them,\" reasoned Jason. \n\nAt the same time, Naomi was preparing to answer questions from the Senate Foreign Relations Committee in the Dirksen Building. Jared sat quietly behind her as Naomi was introduced and then sworn in before the questioning began.\n\n\"Thank you for taking time from your busy schedule to appear today,\" began the committee chairman as he posed the first question. \"As soon as President Hammer assumed office, you were dispatched on a global diplomatic mission with President Hammer's husband. Neither of you carried any official position in this nation's government. Do you feel that it was legal, ethical, and reasonable for President Hammer to place you in that difficult position?\"\n\n\"Yes, sir,\" was Naomi's brief reply.\n\n\"You couldn't have had time to be properly briefed on the negotiations in which you were expected to participate. Don't you think it would have been more prudent for President Hammer to send seasoned diplomats that had been involved in the negotiations from the outset?\" demanded the Senator.\n\n\"No, sir.\" responded Naomi once again.\n\n\"Ms. Wilson-White, this committee expects more detailed responses to the questions,\" chastised the committee chairman. Naomi made no response to his statement and simply waited for him to continue, which seemed to annoy the powerful Senator.\n\n\"Do you understand what I'm telling you?\" asked the man, obviously irked.\n\n\"Yes, sir,\" responded Naomi as the gallery broke into loud laughter.\n\n\"Okay, Ms. Wilson-White, we'll do it the hard way,\" pressed her red-faced questioner. \"Please explain to this committee exactly why you feel that you were qualified for this extremely sensitive assignment.\" \n\n\"Yes, sir,\" responded Naomi with a quick smile. \"President and Steve Hammer explained the situation to me. They then told me that they felt that I was well qualified for the position of Secretary of State and that my name would be submitted.\"\n\n\"That's it?\" exclaimed the chairman when it became apparent Naomi had completed her response. \"Two people said that you were qualified and you believed them? Please explain what your thought process was that led to your conclusion.\"\n\n\"Sir, I may be oversimplifying the situation, but essentially that really is all there is to it,\" responded Naomi thoughtfully. \"I had more than a few doubts when President Hammer told me that she was placing my name into consideration for the position of Secretary of State. As Steve, Mr. Hammer and I looked over files on the situation, Gwen and Steve made it a point to explain why I was selected. It boiled down to their absolute confidence in my ability. I realized that if the two most accomplished, most patriotic Americans I had ever met felt I was qualified, I certainly was. I trust their judgment implicitly.\" \n\n\"That's just incredible,\" complained the Senator. \"Do you know if there was a background check of any kind? Wouldn't it seem prudent, even for the all-knowing Hammers, to scrutinize your background before appointing you to such an important position?\"\n\n\"President Hammer didn't need a background check. Steve has known me for twenty years and Gwen for almost as long. They also knew that the Senate would conduct an extensive investigation into my past, which I'm sure that it did. Since I'm here today and no horrible bits of information have been leaked about me, it's pretty apparent that nothing untoward was discovered,\" reasoned Naomi.\n\n\"You seem extremely confident, Ms. Wilson-White. Are you and President Hammer expecting the Senate to simply rubber-stamp its approval?\"\n\n\"Steve cautioned me against expectations of any kind, Senator. I have no reason to be nervous. I've been involved in some very delicate and stressful negotiations recently,\" explained Naomi, \"all of which turned out extremely well. I'm simply here to respond to direct questions and to tell the truth. My role here is quite simple.\"\n\n\"It may sound simple to you, but the members of this committee take this responsibility seriously,\" insisted the Senator. \"There's a very real possibility that the committee will recommend that you not be approved. What would you do then?\"\n\n\"I'd continue to assist Gwen any way I could while we determined whether the American public was willing to allow the Senate to place personal and party agendas above duty to your country,\" replied Naomi calmly.\n\n\"Are you threatening this committee?\" demanded the angry Senator. \"You're saying that if we don't approve your nomination, we're somehow shirking our duty to make certain that we have a highly qualified individual for Secretary of State.\"\n\n\"No, sir. I am not making a threat. I was simply answering your question about my reaction to not being approved by the Senate. The reaction of the citizens of this country would dictate my actions,\" explained Naomi.\n\n\"Exactly why do you think the public would be so upset if you were not approved?\" posed the Chairman.\n\n\"Sir, I've been back in the United States for several days now. Before that, I had a firsthand view of President Hammer's global power and influence. The United States has never had a couple represent it like this couple has for the last seven weeks or so. I've seen the response she gets from the citizens of the world. If Americans don't get behind her and support her efforts to bring peace and stability to the world, I'll be extremely surprised and disappointed. \n\n\"She's being hailed as the 'Queen of Peace' around the world. She and Steve are in a place no one could have ever imagined a couple of months ago. They represent the best of us, and the best of humanity. The citizens of America need to express their feelings to their elected representatives,\" concluded Naomi.\n\n\"Again, you're assuming that the people of America want you as Secretary of State,\" countered the Senator. \"I would like you to tell me what makes you qualified for this extremely important position.\"\n\n\"Senator, with all due respect, you have my dossier in front of you right now. Perhaps it would facilitate things if you simply stated any reasons you may find to question whether I am qualified. I've studied the qualifications of the last ten people to hold the office. We both know I compare favorably to all of them,\" replied Naomi.\n\n\"That is not the way things are done!\" thundered the exasperated politician. \"We ask questions and you answer them. That's how this works.\" \n\n\"Sir, that approach simply prolongs the process, as well as lengthens the time that your face remains in front of numerous cameras and microphones. Everyone on this committee knows my entire life story. If you have any specific questions, I'll be happy to respond,\" promised Naomi with a beautiful smile that contrasted sharply with the tense demeanor of her questioner.\n\n\"You are trying my patience and not helping your cause with your confrontational attitude,\" insisted the Chairman before asking his next question. \"Some think that President and Mr. Hammer are far too friendly with the Russians. What sort of promise did you and Mr. Hammer make to Kozlov to persuade him to withdraw his forces? Was there a promise or some sort of deal that the American people need to know about?\" \n\n\"Actually, Steve did make a somewhat veiled promise to President Kozlov that appeared to further the outcome we were seeking,\" admitted Naomi.\n\n\"Why am I not surprised?\" asked the Senator rhetorically. \"Would you please tell us what was promised to the Russians that turned the tide of the negotiations?\"\n\n\"President Kozlov had referred to the American Congress as a 'sad collection of career politicians, afraid of their own shadows'. Steve promised President Kozlov that our self-serving Congress would never have the fortitude to prevent President Hammer from taking whatever steps she might deem necessary should Russia renege on its agreement. Steve told President Kozlov that the United States had deliberately placed itself in a weakened tactical position to attain peace, but if war were to occur, the United States, under President Hammer's leadership, stood prepared to defend its people, as well as its allies, in any fashion necessary.\"\n\nNaomi's response was met with silence at first. Then whispers and mutterings raced across the chamber. It was Naomi Wilson-White's contention that no secret agreement had been reached. Steve Hammer had simply made it clear to Russia that there would be extreme consequences if the prior informal agreement was not honored. \n\n\"Are you telling this committee that Steve Hammer threatened Russia with nuclear war?\" asked the incredulous Senator.\n\n\"No, sir. He simply explained that Congress was in no position to prevent President Hammer from defending our great nation in whatever manner she felt necessary,\" answered Naomi. \"I might add that observing Steve Hammer negotiate with heads of state was extremely educational. He has the well-earned reputation of being open, frank, and fearless. World leaders know before he even speaks that he'll stand by his promises, as well as support his friends and allies.\" \n\nReporters quickly scurried from the room to file their stories. This was a side of the negotiations that had not previously been revealed! President Hammer's husband had issued a veiled threat to President Kozlov, and it had achieved its desired effect. Steve had dismissed the ability of 'a self-serving' Congress to impose its will on his wife, President Hammer, or to prevent her use of every weapon at her disposal if it came to war. \n\nPoliticians on both sides of the aisle felt anger, as well as some embarrassment, over this revelation. The Hammers considered Congress weak and unable to stand against the power and influence of the First Couple, and to add insult to injury, President Kozlov must have agreed with that assessment since he had pulled his forces back so quickly.\n\nKate was testifying before the Senate Judiciary Committee the same time that Naomi was appearing in front of the Senate Foreign Relations Committee. \n\n\"Mrs. Martin, thank you for appearing before this committee began the committee chairman once Kate was sworn in. \"Senator Lancer will begin the questioning.\"\n\n\"Thank you, Mr. Chairman. Mrs. Martin, I have a few concerns about you becoming Attorney General. You're very wealthy. You are an owner in a company that has business dealings around the globe. How do you propose to divorce yourself from possible conflicts of interest and the appearance of making decisions simply to further your great wealth?\"\n\n\"I don't, Senator\" responded Kate frankly. \"However, I will decline any salary or compensation for serving in the capacity of Attorney General.\"\n\n\"Considering your great wealth, that wouldn't be a hardship of any consequence,\" responded Lancer quickly. \"You'd make far more on any given business transaction than you'd ever collect in salary. That's a token gesture, at best.\"\n\n\"It would mean that I'm not a government employee and thus not subject to laws restricting their activities,\" replied Kate calmly. \"The simple truth is that every attorney general we've had over the past thirty years has been a millionaire. They all became wealthier while they were in office. ",
        "\"You're personally a man of above average wealth and you serve in the Senate. You'll be wealthier when you leave office than you were when you were first elected. Why does my similar situation concern you so much?\"\n\n\"I placed my holdings in a blind trust! That's why!\" replied Lancer with some glee as he felt certain that he had ensnared Kate.\n\n\"You seem to be asserting that having your very wealthy brother assume control of your extensive portfolio would exempt you from any negative publicity when decisions you make as Senator increase your personal wealth. You expect everyone to believe that you've forgotten what stocks you own, and that your brother would never inform you if he bought or sold any in your name. \n\n\"You supposedly had no idea that you owned five thousand shares of Caterpillar when you so strongly supported FEMA purchasing over ten million dollars' worth of equipment from them. I assume you'll be surprised to learn that your vote on the recent communications bill caused Verizon stock to jump almost ten percent, which caused your shares to increase in value by almost fifty thousand dollars,\" stated Kate.\n\n\"Exactly what are you accusing me of?\" demanded the red faced Senator.\n\n\"Nothing at all, Senator. I'm sure you're innocent of any wrong doing. Any financial gain you received from your political decisions was simply coincidence. If I am allowed to serve as Attorney General, I will never make a decision based on how it will affect me, or any friends or relatives, financially. You've already pointed out that I can easily forego my salary, Senator. It would follow that I don't need to use my position to improve the bottom line of my company. That is not a priority for me.\n\n\"Lady in Red is a very profitable, viable, and well-managed company that requires no political assistance from anyone. We pay our full share of taxes. We have no hidden overseas accounts. We've published our financials that anyone can examine every year since Gwen was first elected to Congress. We will not place our company in a blind trust or engage in any sort of sham to make it appear that we don't know full well what is happening within our company,\" promised Kate adamantly. \"It's the belief of the owners that the continued financial wellbeing of Lady in Red will benefit more people around the world than any decisions we make from any office or position we may attain here in Washington. \n\n\"Lady in Red helps millions of people in many different ways, and we won't allow that mission to be compromised by political hacks that place person and party ahead of the welfare of our people,\" stated Kate emphatically. \"Do you think that we're wrong to feel that way, Senator Lancer?\"\n\n\"Do you really want to know what I think?\" shot back Lancer. \"I think your company's owners are using the occasional good works to create a smokescreen to cover your greed and desire for money and power! This committee is not so na\u00efve as to think Lady in Red is some sort of Utopian entity that exists only to assist those less fortunate. No one needs a hundred billion dollars in assets!\"\n\n\"It's a rather common trait to project your own goals and ambitions onto others,\" replied Kate calmly. \"My sister, the President of the United States, has asked me to serve her, and my country, as Attorney General. That's a tremendous honor. It demonstrates the faith she has in my abilities. You have approved wealthy nominees many times in the past. Failure to do so now could indicate to the electorate that your inconsistency in this particular decision is a matter of political expediency.\"\n\nAt that moment, an aide hurried to the side of the committee chairman. After a very brief conference the Chairman broke in. \"I've just been informed that there's been an attack on the presidential motorcade in Berlin. There's been at least one explosion and shots have been fired. This hearing will adjourn until a future date and time to be determined!\"\n\nKate didn't bother to reply to the stunning announcement. She simply stood and turned to Chip, who was already on his feet. He took her arm in his and led her from the room as rapidly as he could. Chaos ruled as politicians, observers, and reporters rushed to learn more. A large monitor in a library was carrying a cable news station feed. Viewers were gathered around watching in stunned disbelief.\n\nThe screen clearly showed a limousine with one front fender that was badly smashed against a street light, while the other front fender still sported a small American flag. The camera was obviously situated on a tall building, or possibly a helicopter. Thick black smoke billowed from an alley and rolled across the street, at times totally obliterating the view of the limousine. When the smoke would drift in the other direction, bodies could be seen strewn about the street and especially near two white vans parked less than a hundred feet from what was obviously President Hammer's limousine. \n\nPolice, with weapons drawn and protective shields raised were cautiously approaching the limo. Then the camera zoomed in on a figure standing in the center of the street, Kate gasped as the figure's face came into focus. It was Steve! He was covered in grime with splashes of blood on his neck and seeping from his shirt. He clutched a gun in his right hand as his eyes scanned the scene in front of him. He took a step toward Gwen's limousine before slowly collapsing to the pavement!\n\nI thank Tex Beethoven for editing this chapter and making it a better read."
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "senate committee",
        "ukraine",
        "moscow",
        "global influence",
        "power couple",
        "hazing"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-03-ch-05"
}