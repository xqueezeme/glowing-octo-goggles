{
    "title": "Requited Ch. 08",
    "pages": [
        "The next day, while he writes his exam, I lie in his bed and I think about the night before. I don't think of it exactly, it's more like I see it. I feel it. My whole body tingles when I think about what he did. How he pried me open. How he spread me and filled me. How he knew what he was doing.\n\nGod, he knew exactly what he was doing.\n\nHe knew what I wanted, without me having to tell him. He knew everything. He took it slow. He teased me until I was so wild, I was thrashing. He teased me until I was close to begging. I was whimpering and moaning. I managed not. He caved in first, but I was close to begging. So close. There was something so beautiful about what he did. I wasn't expecting that. He was gentle and respectful. Sensitive to every sound I made. It was like he was in my head. I think about what it felt like, letting him in like that. Into my head and into my ass. I felt him everywhere. Everywhere. I think about how I used to think that Andy sets fires all over the place. It was true then and it's still true. Last night, he lit my whole body on fire. All he used were his hands.\n\nMost of all though. I think of the way he looked, kneeling between my legs. Looking down at me. He looked at me with nothing but good things in his eyes.\n\nGood things, only.\n\n*\n\nWhen he's finished writing his exam, he texts me to let me know where his class is going. They're going out for lunch and he wants to know if I want to join him. They're at Benny's Bar. It's a cool little place with a bar and a wood-fire for pizzas.\n\nThis is very normal. Being invited to join him like this, is very usual for us. This is exactly the type of thing that has happened between us a million times before. Only, this time it's different. It feels different. I feel like someone else as I walk into the pizzeria. I don't feel like I'm going to meet my friend. He and his group are sitting at a big table. He waves me over. I take a seat in the spot he saved for me.\n\n\"How did it go?\" I ask.\n\n\"Good,\" he says.\n\n\"Just good, or did you ace it?\" I tease.\n\n\"Let's just say, I definitely passed.\"\n\n\"Congratulations, Andy Montgomery, you're a free man.\"\n\nThe urge to lean in and kiss him is almost over-whelming. It feels unnatural not to. I try not to though. I've never seen Andy putting on a PDA, I'm not sure it's his style, so I don't touch him. Pizzas start arriving soon after I sit down.\n\n\"I ordered for you.\" He says, as the waiter places a ham and pineapple pizza in front of me. I smile and wonder if Andy's a little like me, if he also remembers everything.\n\nConversation flows easily. We eat and chat as a group. Over the years, I've met everyone here at least once or twice through Andy. They're a cool group of people. Obviously very arty and quite alternate. Several of them lean pretty heavily toward using their bodies as a form of self-expression. It would be hard to find a more colourful, or edgy group. Andy is the notable exception. He stands out from this crowd. He stands out from every crowd, but he stands out from this one especially. His style hasn't changed at all since he got here. He still wears jeans and t-shirts exclusively. His hair still isn't short, or long, and he still has a five-day stubble. He looks like someone who ought to be lecturing this group, not part of it. He's well liked, but there's a very, very slight coolness towards him. Reverence, almost. I've been to all of the exhibitions the art department has put on since I've been here, and I know there's a lot of talent in this group. A lot. It's just that not one of these people comes close to Andy's level of talent. Not even close. And they know it. All of them do.\n\nAndy gets up to get us more drinks at the bar and I watch him go. I'm not sure if it's my imagination, or the torment of not being close to him and feeling unable to touch him, but this afternoon, he's looking hotter than ever.\n\nJesus, those jeans fit him well.\n\nWhen he gets to the bar, he orders and then turns to look back at me. I smile broadly, and watch as his eyes light up. They light up a little. A quick little flicker. His mouth curls, too. He holds my gaze and then raises his chin at me, ever so slightly.\n\nThe reaction in my pants is cataclysmic. It's instant and intense. I'm squirming in my seat by the time he gets back. I can't stand being close to him and not touching him, so I lean my arm against the back of his chair. It's something I often do. There's nothing unusual about it. This time, whenever he leans back, I run my thumb along his back. I stroke his shoulder blade through his clothes. Every time I do it, the corners of his eyes crease slightly.\n\n\"Stop looking at me like that.\" He whispers when no-one is looking.\n\n\"Why?\"\n\n\"Someone will notice.\"\n\nI swallow and nod. I couldn't care less if someone notices. I hope they do. I hope everyone notices, especially the skinny guy with the neck tattoo, who keeps looking at Andy as if he's a burger and chips. Still, I try to behave. I try to contain it. I don't want to do anything Andy isn't comfortable with, but I do get a sense that for us, a bigger conversation is looming.\n\nI hope we're on the same page. I hope to God, we are.\n\nAfter a few more rounds of drinks and a couple more hours, I'm antsy. I'm finding it hard to sit still. The effect of being close to Andy has reached fever pitch. I've pressed my knee against his and it's burning me under the table. Every now and then, Andy puts his hand under the table and runs his fingers along the outer seam of my jeans. It feels electric.\n\nWhen the first person in the group gets ready to leave, I say, \"Are you almost ready to go?\"\n\n\"You got somewhere better to be?\"\n\nI nod, \"I do,\" I say through clenched teeth, \"and so do you.\"\n\nWe say our good-byes quickly and get out of there. We walk home, shoulder to shoulder. It's late afternoon and the streets near campus are quiet. Today was the last day of exams. Most people have already left for the year. I'm nearly completely sober, but as we get close to his building, I nudge him with my shoulder and put on an elaborate little stumble, \"Andyy,\" I slur, \"I'ng drunk, can you come get me?\"\n\n\"What the fuck?\" He says, looking at me in amazement. His shock quickly turns to a smile, as I put my arm around him and lean in heavily against his body. He circles my wrist with his hand, holding me securely, the way he always does. He shakes his head at me.\n\n\"Are you getting the feeling, I'm not as much of a drunkard as you think I am?\"\n\n\"Are you kidding me?\" He asks, \"Are you for real? Do you know how many times you've got me out of bed?\"\n\n\"Sorry.\" I say, turning my body slightly, so I can grind my erection against his hip, \"Do you forgive me?\"\n\nHe sighs deeply. I can see how hard he's trying not to smile. \"Yes, I forgive you, but I am going to make you pay.\"\n\nAnd he does. He makes me pay, on the living room floor. He makes me pay with his mouth and his hands and his fingers inside me. He makes me pay more than once and I return the favour. I return it whole heartedly.\n\n*\n\nI wake up on my side, facing Andy. He's sleeping half on his belly, half on his side. Most of his face is pressed into his pillow, but he still looks beautiful. His dark hair stands out against the white linen. He's perfection. For such a long time, I've dreamt of waking up like this. Close to him. Right up in his face. He's even better up close than I imagined. I move until I'm only a couple of inches away. Until I can feel his breath on my face.\n\nI lie like that and try not to move as I watch him, but he must feel me, because he opens his eyes slowly.\n\n\"What are you doing?\" His voice is deep and thick with sleep.\n\nI'm a little embarrassed he caught me watching him like this, \"I-I just always wanted to know what you look like from here.\"\n\nHe sits up and swallows and then tries to smile.\n\nShit, I've freaked him out.\n\nHe's quiet for a second and then says, \"You want some coffee?\"\n\n\"Sure, thanks.\"\n\nHe gets up and walks to the kitchen naked. I watch him go. I watch his back and his ass and his legs, but I feel unsettled. I feel uncertain. I know Andy, and this is not a relaxed and happy Andy.\n\nHe comes back with our coffee and sets mine down on the side table and then walks across the room and sits at his desk.\n\n\"Are you okay?\" I ask.\n\nHe looks at me intently and seems to consider saying something, but then shrugs slightly instead. He's sitting right in front of the awful painting he did of himself at the end of first year. The background is pure white. He painted himself life-sized but vague and a little blurred out. There's a terrible gash in his chest and he's holding his heart in his hands. He painted the organ realistically. Horrifyingly realistically. It's shiny. Bloody. I hate looking at it.\n\nI can't think of anything else to say and conversation is sorely lacking, so I say, \"I've always wondered why you kept that painting?\"\n\nI know one of his lecturers made him an offer to buy it. Usually, if he gets an offer, he sells the painting without thinking twice. I asked him once if he was sad to see a painting go and he said, \"Why would I be? I'll start another one tomorrow.\"\n\n\"You don't like it?\" There's a slight tension around his jaw as he says it.\n\nShit. I'm making things worse.\n\n\"Uh, no, it's not that. It's obviously brilliant. Any fool can see that it's amazing. I just, I just don't like looking at it. I don't like seeing you like that.\"\n\n\"You're not supposed to like it.\" He says softly.\n\n\"Oh.\" I say, as if that makes a lot of sense.\n\n\"I mean you, West. I mean you, in particular, are not supposed to like it.\"\n\n\"Oh.\" I say, as if that makes no sense at all.\n\nHe sits quietly for a while. He's looking at the painting, not looking at me at all.\n\n\"Now I feel as though we're having a fight, but I'm not sure what it's about.\" I say quietly.\n\nHe smiles a forced little smile. A polite acknowledgement of my attempt at humour.\n\n\"Are you freaking out because I got too close?\" I ask, \"I'm sorry. I know you don't like that. I know you don't like letting people in.\"\n\n\"I'm not freaking out.\" He says irritably and then adds quickly, \"If I am freaking out, it's only because of you using words like always, when you clearly don't understand what they mean.\"\n\n\"I know what always means.\"\n\nHe looks at me in annoyance and then stands and lifts the horrible painting up off the floor and walks over to the window with it. He opens the curtains and leans it against the window, letting the light hit it from behind.\n\nHe walks over to the bed and sits down on the floor heavily, leaning his back against the base of the bed. Facing the painting. Waiting.\n\nI look at him in confusion and then I look at the painting. I've seen it a hundred times. I never like it. I still don't like it, but I look at it again. I look at it for a long time before I see it. There's something else there. It's there in the white background. There are lines that are visible now. Lines that are usually invisible. The light streaming in from the window has back-lit the painting. It's changed it. It's not just Andy now. There's another face there. It's large and partially obscured by the figure of him. It's larger than life. Much, much larger. Its outline dwarfs Andy. It's under the surface, but I can see it. Eyes and eyebrows. A scar. My eyes and eyebrows. My scar. My head is thrown back slightly. I'm laughing. I've never seen myself like this.\n\nIt's me.\n\nIt's me, and it's beautiful.\n\nHe painted this years ago. Years. Three years ago. He's been hiding this from me for all this time. He's been hiding, the same way I've been hiding. I move to the edge of the bed and sit behind him. I put my legs on either side of his body and I reach down, wrapping my arms around his neck.\n\n\"Is that how you see me?\" I whisper, at last.\n\n\"No,\" he says, shaking his head, \"that's how you are. That's who you are. That's who you are to me. That's why I can't sell this painting. And that's why I need to know if you know what always means. Because to me, always means always.\" He turns his body slightly, so he's looking up at me, \"Always.\"\n\nMy heart feels like it's going to explode. Emotions come rushing. So many feelings. I'm confused and relieved and euphoric at the same time. I squeeze his body tightly with my legs and I tighten the grip I have around his neck. I lean down and press my lips to the crown of his head.\n\n\"If this is some kind of epic rebound, or some kind of bi-curiosity, I really, really need to know, West. I need to know, because if it is, I don't think I'm the right person to help you with that. I can't. Okay? I just can't.\"\n\n\"I know what always means, Andy.\" I slide down onto the floor, so that I'm sitting next to him, \"Believe me, I know.\"\n\n\"This is a rebound though, right? It's a rebound for you and everyone knows, rebounds aren't a good idea. They don't work. And this is a rebound on steroids.\"\n\n\"I don't know the in's and out's about rebounds,\" I say, \"I'd probably have to read up on that, but I do know, I loved you first, so technically, technically, I think Ash was the rebound.\"\n\nMy words land and settle. His eyes are a question. A big, dark question. \"How and where does the fact I'm a guy fit into all of this?\" He asks at last.\n\n\"It fits where it fits.\" I say with what I hope is a winning smile.\n\nHe tries not to roll his eyes and he tries not to smile. He wants a serious answer.\n\nI take deep breath, \"It took me a while to work it out, but at the end of the day, it's really pretty simple. Sometimes the person I'm into is a girl and sometimes, it's a guy.\"\n\nHe nods for a long time, bobbing his head up and down as he thinks. \"So, you've been with guys before?\"\n\nHis mouth is set and his eyes look harder than usual. I'm not sure what the right answer is here, so I go with what I know. The truth.\n\n\"Kind of.\"\n\n\"Kind of?\"\n\n\"Well, I made out with this guy called Matt. I felt his dick and I let him feel mine, too.\"\n\n\"That's it?\"\n\n\"Yeah, he invited me home, but I didn't go.\"\n\nHe nods for a while, as he digests the news, \"Why not?\"\n\nI'm a little embarrassed, but I tell him exactly what I told Matt that night, \"I uh, I want my first time to be with you.\"\n\nDespite himself, Andy starts smiling. He shakes his head at me, as he pulls me in for a kiss. \"What am I going to do with you, West?\"\n\n\"You could tell me you love me, again.\"\n\nHe leans back and looks at me for a moment. A long moment. He clenches and unclenches his jaw. I don't move. I feel frozen and warm at the same time. My hands feel hot, the way they do whenever I'm about to hear something I know to be true. Truly true.\n\n\"I don't just love you, Dumbass,\" he says, \"I'm in love with you.\"\n\n*\n\nWe go back to bed and we stay there for a long time. By the time we get up, it's late. It's almost midmorning. Andy and I go to my place and pack my things into my car. It feels strange to be back in my place. It's only been a few days since I've been here, but it feels like a place from a different time. A different life. Afterwards, we go back to Andy's place and we finish most of his packing. Every now and then, I see him checking his phone. I know what he's checking for. I'm checking mine, too. The clinic said they'd get back to us in two to three days. It's been two days.\n\nHe packs the last of his clothes, leaving a pair of shorts to wear tomorrow. He grabs the t-shirt on the top of his pile of t-shirts and leaves that out too.\n\n\"Andy,\" I say, \"can you leave the blue one out?\"\n\n\"This one?\" He says, looking surprised.\n\n\"Yeah, that one.\"\n\n\"You like this one?\" He laughs, \"It's so old, I've been thinking of throwing it out.\"\n\n\"No!\"\n\nHe looks amused and confused.\n\n\"I love that one.\" I say.\n\n\"Why?\"\n\nI hesitate for a second, then say, \"D'you remember the first time I folded your clothes when we were in first year.\"\n\nHe nods.\n\n\"Well, when I did it, something weird happened with that t-shirt. At first, it was just a t-shirt. Just a thing. And then suddenly, it wasn't. I was folding it, and it felt like you. I felt like I was touching you. I wanted to touch you. The first time I realised I wanted to touch you, was when I folded that t-shirt.\"\n\nHe laughs with his mouth, but his eyes don't smile. They look at me gently. Softly. Knowing.\n\nI'm not sure if it's because we're busy with packing, or the fact that this morning's conversation was so heavy, but now, we try to keep things light. We goof around and joke with each other, just like we always have. I get the feeling, both of us are trying to ignore the fact that we both have to be out of our apartments tomorrow. We have to leave. The summer vacation has officially started. It's the first time in my life that the thought of a vacation has not filled me with joy. I was due to spend most of the summer on the west coast with Ash and her family. Now that that's off the cards, I've been toying with the idea of going home and working at the pool supply store for a while, before I start work. I'm in late-stage negotiations with two companies, so I'm pretty sure I'll be starting a real job in August or September. I have the whole summer to kill. Usually, I love the thought of going home, but now, the thought of being without Andy makes me feel nothing but dread. He's planning on staying in the city this year. He wants to work on his portfolio as much as possible.\n\nI carry a box of books from Andy's room to the garage and load it into his car. When I get back, he has a different look on his face. I notice it immediately. His expression has changed.\n\n\"Have you checked your email?\" He asks.\n\nI check quickly. I'm not worried about my results. Ash and I both got tested early on in our relationship, before we stopped using condoms. I haven't been with anyone but her since, and I know she hasn't slept with anyone else. I know that if she had, she would have thrown it at me at some point, during a fight. She wouldn't have been able to resist it. I'm confident about that.\n\nStill, I check quickly, hardly able to wait as the email opens. I smile up at him.\n\n\"All good. You?\"\n\n\"All good.\" He smiles. His eyes change as he says it. He tilts his head down ever so slightly. When he takes a step towards me, I feel the full force of his power. His magnetism. I watch him walk over to me. I watch the way his hips move. My insides clench from the knowledge that I'm finally about to find out first-hand, whether Andy truly is someone who really, really knows how to fuck.\n\nI'm instantly aroused. I'm also nervous. This is big. It's huge. He runs his thumb across my lips, he looks up at me and despite my nerves, I feel myself start to melt. He kisses me deeply. Softly at first, but it quickly grows hungry. When he pulls away, I see the same hunger in his eyes.\n\n\"You okay?\" he says.\n\nI press my lips together tightly and nod.\n\n\"You know we don't have to do anything you don't want to do, don't you?\"\n\nI nod again. I do know that. I trust him. I trust him more than I trust anyone else.\n\n\"I'm so into you, I'd be happy just to chill on the sofa, watching TV and holding your hand. You know that, don't you?\"\n\nI raise an eyebrow, \"Just holding hands?\"\n\n\"Okay, fine, maybe making out a little, too.\" He says, as he kisses me lightly.\n\n\"Seriously, just making out?\"\n\nHe laughs softly, \"Fine, I'd be happy just holding hands and kissing you, and every now and then, getting a quick look at your dick.\"\n\n\"Just a look?\"\n\n\"Jesus,\" he says, \"I'm trying to be romantic here, West.\"\n\nThe thought of Andy, my Andy, trying to be romantic with me, makes me instantly giddy and light-headed. A small laugh bubbles up out of me.\n\n\"Don't be romantic, just tell me what you want.\"",
        "\"I want you.\" He says, his voice is deep and a little strained, \"I want you in the worst way.\" He smiles and shrugs helplessly, \"I do. I can't help it. I want you more than any man has ever wanted another. I want you so much, I'll be happy with whatever I can get. How pathetic is that?\"\n\nHe smiles apologetically, and shrugs again.\n\n\"Damn,\" I say softly, \"I have to admit, that was pretty fucking romantic.\"\n\nThe way he looks at me is so sweet and so sheepish, I want to tackle him to the ground, but I don't. Instead, I say, \"You told me a long time ago that you're more of a top, but that for the right guy, you like bottoming too.\"\n\n\"Yeah, that's right.\"\n\n\"What's the right kind of guy? A-am I the right kind of guy?\"\n\n\"You're the proto-type of the right kind of guy, Dumbass. You're the dream guy.\"\n\nI press my hand up to my mouth, quickly. I press it hard. I've turned to complete mush and I'm trying my best to keep the mush from escaping.\n\nI can feel the quiver in my voice before I speak, \"I want to be the perfect partner for you. I want to be everything you want.\"\n\n\"You are everything I want. Everything. I'll bottom for you, if you want, we can start there.\"\n\n\"No,\" I say softly, \"I want to be everything you want. I want that. I don't just want it for you. It's what I want, too.\"\n\nHe's holding me close. I can feel his pulse quicken when I speak. His jaw looks tense. So does his neck. His veins and arteries are pulsing. I love knowing I can affect him like this.\n\n\"I-I guess I should use the bathroom.\"\n\n\"What? You want to go now?\"\n\n\"Yeah, I want to go now. I want to go right the fuck now.\"\n\n\"Oh,\" he smiles, \"okay. Do you know what to do?\"\n\n\"I'll figure it out.\"\n\n\"I can show you what to do, if you like.\" He teases.\n\n\"Andy, I have an IQ of 156,\" I reply, \"I'll figure it out.\"\n\nHe laughs and whistles low through his teeth, he's been trying to get this information out of me for years, \"Geez, 156, huh? I thought it would be higher.\"\n\n\"Asshole.\" I laugh, as I walk towards the bathroom. The mere thought of that part of my body hits me. It hits me hard. It's like a kick. A swift kick of arousal, straight to my balls.\n\n*\n\nHe's lying on his bed, when I walk in. He jumps up quickly, pulling himself up by his core. He's wearing jeans and no t-shirt. I see every muscle in his belly contract as he does it. He walks over to me quickly. Long, fast steps.\n\n\"Are you...?\"\n\nI cut him off. I grab him and pull him towards me.\n\n\"No more talking.\" I say, as I crush my mouth against his.\n\n\"Mmph...\" He says, into my mouth.\n\nHe understands what I want. What I need. He's tugging at my t-shirt and as soon as he pulls that off, he gets started on my shorts. Unbuttoning and pushing them down. Stepping on them and kicking them away as I step out of them. His face is set. His eyes are intense. They're more intense than ever. They are on fire. He has his hands around my neck and in my hair. He's kissing me like a man who's dying of thirst. He kisses me until I feel like I'm liquid. Until I don't know if I'm pulsing or gushing. My head rolls back when he lets go of my neck. I feel loose. Loose and unhinged. I feel hot. Like I have a fever. I feel good where he's touching me. Every part that he's not touching feels like it's screaming.\n\nI want him.\n\nIt's so intense, I can hardly take it. It's been intense every single time we've been together, but this time is different. It's more. Right from the start, the expectation, the apprehension, the anticipation, is extreme. I'm shaking before he even touches me. When he touches me, it makes me shake more. My hands are quivering as I try to open his fly. They're shaking so much, I can't get it undone.\n\nI need him.\n\nHe takes my wrists, holding them gently. His hands are steady. Unwavering. Firm. His eyes travel up my body until they reach mine. They make contact and for a second, he holds me like that. He holds me with nothing but his eyes. They speak to me. They speak in full sentences. Now, I understand what they're saying. I speak his language. I spread my arms open in surrender, as he runs his hands up my chest. I relax. I take a long breath and as I start to exhale, he pushes me hard. I fall back on the bed. I don't tense. I don't fight.\n\nI just fall.\n\nHe stands for a second. Watching me. His eyes move lazily over my body. He unbuckles his belt and pulls it free. The sound whistles through me. I watch intently, as he slowly unbuttons and unzips. He does it slowly. Slowly. So slowly.\n\nDon't tease me.\n\n\"Unnng.\" I moan in frustration, pressing my head back, into the pillow beneath me.\n\nHe pulls his jeans open. I see the hint of his black hair. It's short and thick. My breathing is loud now. I can hear it. My heart, too. It's pounding. It's pounding so hard, I can feel it in my fingertips.\n\n\"Take it off,\" I slur, \"take it off, or I'm going to tear it off you.\"\n\nHe smiles slowly. His mouth curls up on one side. He smiles like sex. More than sex. He smiles like a fuck that's been four years in the making.\n\nHe pushes his jeans down. He's not wearing anything else. His dick springs free. It's hard. Solid. Beautiful.\n\n\"Mmmh.\" I moan, reaching out desperately with my hand.\n\nHe steps out of his jeans quickly and crawls over to me on the bed. He leans over me, gently nudging my legs open with one knee. I spread my legs wide. Wide enough to accommodate him. He's close, but he's holding himself up, over me. I see his neck. His pulse. I see his chest. His arms. Everything is flexed, hard, from holding himself up. I wrap my arms and legs around him and I pull him towards me. I crush him to me. I moan instantly from the heat of his body against mine.\n\nI look up at him. I don't know what he sees in my eyes, but in his, I see desire. I see want.\n\n\"Don't make me wait.\" I whisper, reaching down and trying to grope him. He catches my wrists and pins them down at the side of my face.\n\n\"I know what I'm doing,\" he murmurs, into my ear, \"it's not my first time.\"\n\nWhen he says it, he smiles at me in a way that's so sexy, if I didn't already love him, that smile would have done it. If I'd never been attracted to a man before, that smile would have changed me.\n\n\"Nnngg.\" I moan, as I raise my hips to grind up against him. I'm beside myself. My body is moving on its own. Rolling. Rocking. My hips have a life of their own.\n\nThank God, it's Andy, and he knows me. He knows me better than anyone. He kisses my neck. It's torture. He works his way down quickly. He tortures my nipples, my chest, the sides of my belly. He tortures me everywhere. He tortures me just enough. Not too much. Just the right amount to make me loose reason. Every flick of his tongue takes at least two points off my Intelligence Quotient.\n\nMaybe more.\n\nProbably more.\n\nDefinitely more.\n\nHe leans over and grabs the lube from his drawer. He pauses, \"Do you want me to use a condom?\"\n\n\"No.\" I don't even need to think about it. I want him inside me. I want him with nothing between us. I want it like that.\n\nHe kneels between my legs. I spread them open wider. I bend my knees and pull them back. I don't feel a hint of embarrassment. I want him to see me like this. I want him to have me like this.\n\nHe strokes my inner thighs with one hand. Gently. Softly. Making me sigh, as the other hand finds its target. He strokes me gently. Down my taint, down even lower. He moves slowly. Softly. The first time he touches my hole, I buck my hips to meet him. They jerk up involuntarily. He keeps his touch soft. Stroking, nudging, teasing. Teasing until I'm groaning. The sound vibrates through me. Through the mattress. Through the walls of the apartment.\n\nI'm desperate, and he's still teasing so I reach for my dick. My hand's not what I want, but I know it will give me some relief.\n\n\"No,\" he says gently, moving my hand to the side, \"not yet.\"\n\nHis voice is soft, but commanding. There's no way I can disobey. I'm physically unable. I throw my head back and groan loudly in raring frustration. I'm frantic now. Completely wild. He understands, because he's Andy. He presses one finger into me. It's a relief. An instant relief. It feels raw. Base. It gives me relief, but it also makes me want more.\n\nMore. More. More.\n\nHe doesn't take long. He gives me more. Another finger. He opens me gently. He works his fingers in. He unseals me. Unlocks me. He's careful. He grazes the spot that makes me lose my mind. Lightly. So lightly it nearly makes me insane. It's not enough to make me explode. Only enough to light my fuse.\n\nI'm clawing at the sheets, thrashing. He gives me one more finger. It should make me wince, but I can't feel pain. Only pleasure. I can't think. I can't talk. I can grunt though, I can't help that, so I do.\n\nAt last, he pulls his fingers out of me. I'm instantly bereft. Empty. I want him back. I want him inside me. I watch slowly, a little detached, as he strokes his cock slowly as he lubes it up. He takes aim. He lines himself up. I can't breathe. I'm too scared that if I do, he'll stop.\n\n\"Try not to tense up, okay.\" He says quietly.\n\n\"Unngg.\" I reply.\n\nHe rubs himself against my opening. He swipes past it once. Twice. The next time, he pushes in. Firmly. Firmly, but gently. I don't fight. I don't tense. I welcome him. He slides in slowly. It stings as he stretches me open. I wince. Not from pain exactly. More from the shock of having something so big inside me. More from the intensity of it, than anything else. It makes me gasp as his thick head pops in past my ring.\n\n\"West,\" he says, stroking my thigh, \"I'll stop if you ask me to, you know that don't you?\"\n\nThat makes me panic. Pure, hot panic. No!\n\nI pull myself up toward him and grab any part of him I can get my hands onto. I have one hand on his hip and one on his waist. I pull him into me. I pull as hard as I can. He holds himself back. He holds back a little, pulling back a little every time I pull him in. One step back, two steps forward until at last, he's inside me. He's balls deep inside me. Pure pleasure flows through me. It floods my body. It floods his too. It must, because he seems to relax. Tension leaves his body. It leaves his face. His face goes soft. He looks at me with soft eyes, as he falls forward, covering me with his body. Covering my mouth with his.\n\nI wrap my arms and legs around him again. I grind up against him. It feels better than anything I've ever felt. Pleasure is all I feel. It's all I know. It's deeper than any pleasure I've ever known. It's hot. I feel hot inside. I feel hot on the outside too. I feel hot everywhere Andy's touching me and he's touching me everywhere. Everywhere. My hips rock in time with his. They rise as he thrusts. They rise to meet him. I've never done this before, but my body knows what to do. It's acting on instinct. It's acting out fantasies and desires I've held inside me for so, so long. Each time he thrusts, I meet him. I grind up against him. My dick is sandwiched between our bodies. Restless. Agitated.\n\nAt last, I can't take it anymore. I have to find release. Relief. I have to.\n\n\"I need to come.\" I groan, my voice sounds like it's coming out from my belly, \"I have to.\"\n\nHe leans back on his knees, giving me the space, I need. I start stroking quickly. It's electric. My dick is so sensitive, it feels like the whole thing is one giant nerve. A raw, exposed nerve. It almost hurts to touch it, but I can't stop. I can feel my orgasm circling around me.\n\nI need it.\n\nI watch, as he keeps thrusting into me. A perfect, steady pace. I track my eyes up his beautiful body, up his flawless face. He's looking down. He's looking at where we are joined. I wait and I wait. I'm whimpering and moaning from the effort, but I wait. I wait until he looks up. Until our eyes meet. The second they do, I search them, and find what I'm looking for. His eyes are dark. They're on fire and soft at the same time.\n\nHe's looking at me with nothing but love in his eyes.\n\nThe second I see it, I crack open. I explode. I'm ripped apart at the seam. I come so hard that the first convulsion shoots up right near my neck. The second one is just as intense and so is the next one. And the next one. I spasm helplessly, pleasure ricocheting through me, as my ass clenches desperately around the thick base of his shaft.\n\nMy eyes are open the whole time. I can't see anything except for Andy. My Andy. I watch him until heaven subsides and I watch as his own pleasure takes hold. I feel his thrusts become harder and faster, his jaw clenches and his hands dig into my hips. His dick swells and pulses and then shoots, spraying hotly inside me. His head flies back and every muscle in his body contracts. The sound that comes out of him sounds like it was torn from his chest. I've never heard anything like it. The second I hear it, I know, I want to spend the rest of my life making him make sounds like that.\n\nThat's what I was made for. That's why I'm here.\n\nHe pulls out slowly, carefully. I shudder as his head slips out.\n\nHe collapses onto me, lying beside me with one arm and one leg holding me down. We don't talk. Maybe we sleep. We must, because the sound of his voice wakes me.\n\n\"Are you okay?\"\n\nHis head is raised, his eyes are big and filled with concern.\n\n\"I'm fine.\" I say, a little defensively. I'm not in pain, but I'm aching a little. When I clench, my ring feels a bit sore. Not a lot. A little. But for some reason, I don't want to admit it.\n\n\"You don't have to do that with me.\" He says softly.\n\n\"Do what?\"\n\n\"Act tough.\"\n\nHis words slice through me. They hit me in a way I wasn't expecting. Something tense and unpleasant is taken from me. Relief. It's a relief from something, I didn't even know I was doing.\n\nI smile widely at him, \"It hurt at first, but then it felt good.\"\n\nHe shakes his head and chuckles low. He remembers. He remembers everything, just like I do. I nestle my face into his neck and whisper, \"It wasn't what I was expecting. It wasn't painful, exactly. More like that feeling when you're trying to drink your first coffee for the day, but it's a little too hot. It's too hot, but you want it anyway, so you just have to take really small, careful sips until it cools down a little. It was like that.\"\n\n\"I know what you mean.\"\n\n\"It didn't just feel good, either. It was fucking amazing. I've never felt anything like it. It didn't even just feel amazing...it felt right.\"\n\nHe chuckles again, smiling and nodding.\n\nI pull him close, \"I'm going to get better, okay? I'll get better.\"\n\nI feel a little insecure when it comes to Andy. I do. I can't help it. My God, he knows what he's doing. He can handle himself. He's so much more experienced than me. I'm playing catch-up, big time. I want to be as good for him as he is for me.\n\n\"You can't.\" He says, decisively.\n\n\"I will.\" I say, feeling mildly panicked, \"I won't stop until I do.\"\n\n\"You can't get better, West. You can't. I felt like my heart was going to explode. If you get any better, you'll land me in the ER.\"\n\nI start laughing and he pulls me close, \"You can't get better,\" he whispers, \"okay? You can't. That was the best fuck of my life. No-one else has ever come close.\"\n\n*"
    ],
    "authorname": "herdirtymind",
    "tags": [
        "gay romance",
        "anal",
        "first time"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/requited-ch-08"
}