{
    "title": "Succubus Summoning 207",
    "pages": [
        "\"One of the most important traits a warlock should possess is ruthlessness.\"\n\nThe Scrote pounded his fist into his other palm for emphasis. He was getting wound up this lecture, building up steam like a firebrand demagogue seeking to win over a crowd.\n\n\"Put aside any notions of good and evil. You are a warlock, a summoner of daemons, and daemons represent the basest of desires given flesh. To the outside world we are evil and this will never change. Ignore their simple-minded morality. There is no good and evil, only power. And power only exists if it is enforced. Don't be afraid to enforce power, but also learn to acquiesce in the face of greater power.\n\n\"A warlock must be merciless. When challenged it is not enough to defeat an opponent, they must be crushed and removed permanently. A defeated opponent will grow stronger and return to challenge again. A destroyed opponent cannot come back. Remember this.\n\n\"As you advance your careers as warlocks you will need to be aware of the various hierarchies governing the world around you. If you wish to climb within them will need to become adept at gauging strength and knowing when to challenge and when to stand down. In the world of daemons second place does not exist. Make your move only when you can be sure of success.\"\n\n\"Is this man suitable to be teaching novice warlocks?\" Verd\u00e9 whispered up on the back row. \"He seems very aggressive.\"\n\n\"There is some truth in what he says,\" N\u00ffte said.\n\n\"Hmm, I suppose. He does seem very adept at contracting with daemons from the Dominion of Lust,\" Verd\u00e9 said, referring to the pair of black-clad succubi standing next to the bottom entrance.\n\n\"Bedmistresses of The Palace of Infernal and Iniquitous Pleasures,\" N\u00ffte sniffed.\n\n\"They are devoted to the arts of pleasure,\" Verd\u00e9 said. \"They're continually discovering new and more exotic techniques.\"\n\n\"Feh, one-dimensional thinking. Limited. Pleasure alone is just a single axis of sensation. If they ever thought to incorporate pain...\"\n\nN\u00ffte reached down between Phil's legs and squeezed his balls so hard he felt sure the crack must be audible to the whole hall. He doubled up as an atom bomb of pain went off between his legs.\n\n\"...they'd see the benefits of context.\"\n\nShe turned Phil's head and pressed her soft lips against his in a gentle kiss. The vice grip on his balls was replaced with a blossoming sense of relief. N\u00ffte's hand rose up on that wave as she lightly stroked an erection that surged, swelled and finally spat its contents into her hand. The succubus finished the kiss and continued speaking as if nothing had happened.\n\n\"Light shone in darkness shines brighter to the eye than light shone in light,\" N\u00ffte said. She brought her hand to her mouth and licked Phil's semen off the palm.\n\n\"True,\" Verd\u00e9 said. \"It's not for everyone though.\"\n\nPhil's body couldn't decide whether it wanted to throw up or give out a relaxed sigh of bliss. He slumped down to the floor instead.\n\n\"He's got good discipline,\" Verd\u00e9 said. \"Not even a single yelp.\"\n\n\"It is one of his better qualities,\" N\u00ffte said.\n\n* * * *\n\nPhil was slightly bow-legged as he walked out of the lecture theatre. He was expecting his balls to hurt; instead they felt a little weird. Not bad\u2014weird. He was still gingerly trying to return to a normal walking posture when Darvill called out to him.\n\n\"Where's Gary?\"\n\nDarvill was casually leaning against one of the walls of a little-used side corridor. Outwardly he looked as cool and collected as he normally did. His many-eyed daemon was perched on his shoulder.\n\n\"Dever?\" Phil queried.\n\nThat was Gary, right? The one that dressed a little like Darvill and was always following him around. Walked with a slight stoop. Had that creepy green-eyed daemon that always wore a mask.\n\n\"I don't know,\" Phil said. \"I haven't seen him.\"\n\n\"I'm not talking to you,\" Darvill said abruptly to Phil. \"I'm talking to her.\" He stared directly at a rather bemused Verd\u00e9.\n\nThat was when Phil noticed Darvill was far from his normal cool and collected self. There was a strange kind of tension thrumming through him that put Phil in mind of a snake about to strike, or a previously friendly dog about to bite. Phil recognised it from the times he'd frequented town centre pubs. It was a cue to leave before trouble kicked off.\n\nDarvill stared at Verd\u00e9.\n\n\"Where's Gary?\" he asked again.\n\nVerd\u00e9 looked nonplussed. She looked to N\u00ffte. The other succubus shrugged.\n\n\"He went off with you yesterday,\" Darvill said. \"No one's seen him since.\" It sounded easygoing enough, as if he was talking about a friend picking up a round from the bar, not someone who'd gone missing and might never return.\n\n\"He did?\" Verd\u00e9's puzzlement increased.\n\nPhil suddenly understood, and it was followed by a heavy feeling in the pit of his stomach.\n\nNurse Honey. Darvill thought Verd\u00e9 was Nurse Honey. Oh fuck, she hadn't, had she?\n\nIf Darvill saw Phil's expression change, he didn't show it. He was still staring at Verd\u00e9 in that odd laid back way that predators tried to affect as they manoeuvred into striking distance.\n\nVerd\u00e9 showed her teeth in her sweetest, most innocent smile. \"I'm sorry. I think you're mistaken. I had nothing to do with your friend's disappearance.\"\n\nDarvill stared intently at Verd\u00e9. His brow furrowed and he gave his chin a thoughtful rub.\n\n\"You know, I don't think you did,\" he said.\n\nAnd just like that, the ugly atmosphere, thickening around them like storm clouds piling up in a summer evening sky, dissipated. Darvill relaxed and his loaded smile was replaced by his usual carefree one.\n\n\"No sense jumping to hasty conclusions,\" Darvill said. \"Gary's a big boy. He's no mug with magic. I'm sure he'll turn up later. After all, you did,\" he said to Phil.\n\n\"I hope so,\" Phil said.\n\n\"I don't think he will,\" N\u00ffte said, quiet enough to only be audible by the three of them as they walked away.\n\nPhil didn't think so either. It felt like a heavy slab of concrete had settled in his guts.\n\n\"No, I don't think so either,\" Verd\u00e9 said. \"I take it he was mistaking me for Nurse Honey, or rather her for me.\"\n\n\"That was my understanding. With Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n involved I don't think we'll be seeing that young man again,\" N\u00ffte said.\n\n\"Very foolish to play with her, especially when so callow a warlock.\"\n\n\"Foolishness is in plentiful supply here.\"\n\nPhil glanced over his shoulder. Darvill was watching them with a thoughtful expression on his face. He must know.\n\n\"I think he realised I wasn't her,\" Verd\u00e9 said, following Phil's glance.\n\n\"That one is sharper than his fellows,\" N\u00ffte said. \"Worth keeping an eye on.\"\n\nMaybe, but it was all moot as far as Phil was concerned. He'd already made up his mind. First opportunity he had, he'd go to Stine, or maybe Dahl, and confess. Maybe they'd know how to break this contract. He wasn't a warlock. He couldn't control his succubi, would never be able to. They'd already killed four students, five if you counted Jake. Going back to the McRestaurant would suck, but at least there would be no more deaths.\n\nHe'd go see Dahl. The Praetor Quivocat would know how to stop this.\n\n\"You're not responsible, you know,\" N\u00ffte said. \"There's no need to blame yourself.\"\n\n\"Who else?\" Phil said. \"You're my daemons, my responsibility.\"\n\nN\u00ffte paused and arched a pencil-thin eyebrow. \"Are we?\" she said.\n\nIt was spoken lightly and her black lips were turned up in amusement, but Phil sensed the rattlesnake rattle behind her words. He felt a sudden chill, like a shadow over his grave.\n\n\"The only ones culpable are the students foolish enough to have sex with us,\" Verd\u00e9 said, breaking the moment. \"It's their fault not yours.\"\n\nN\u00ffte's smile widened and became warmer. \"We tempt, but we do not instigate,\" she said.\n\n\"Especially here,\" Verd\u00e9 said, \"where warlocks master or are consumed by their natures.\"\n\n\"Verd\u00e9!\" N\u00ffte said sternly.\n\nVerd\u00e9 put a hand over her mouth and feigned an expression of wide-eyed innocence to Phil. \"You'll understand later,\" she whispered in his ear. She playfully nibbled on the lobe.\n\n\"Does this mean you will or won't eat more students?\" Phil asked.\n\n\"You can hardly expect us to turn down a tasty morsel if it steps into our mouth.\"\n\nPhil was less than reassured by N\u00ffte's answer.\n\n* * * *\n\nThe room resembled an old-style classroom. There was a blackboard on the back wall and a teacher's desk sat in front of it. Arranged in rows facing the front were plain wooden desks. The walls were covered in children's crayon drawings. They depicted gross sexual acts and unsettling images of torture, all rendered in a bright, childish style. One of the desks had a two foot machete embedded into the surface.\n\n\"Class is in session,\" C\u03adr\u03bcl\u0259a said, dropping a couple of dusty tomes onto the teacher's desk.\n\nA casual observer might have mistaken her for the pupil and Phil the teacher, even though it was the other way around. C\u03adr\u03bcl\u0259a might have looked and sounded like a child, but she was anything but.\n\n\"I think Nurse Honey might have killed one of the other students,\" Phil said. He was still moping over the news he'd heard that morning.\n\n\"Oh? They probably asked for it,\" C\u03adr\u03bcl\u0259a said as she wiped a disturbing chalk picture of a man being graphically tortured with hooks off the blackboard.\n\nThe board rubber was attached to a pole to allow her to reach the top corners.\n\n\"How do I stop the succubi from killing more students?\" Phil asked.\n\n\"Tell the other students not to have sex with them otherwise they'll have their souls pulled inside out and sucked out,\" C\u03adr\u03bcl\u0259a suggested. \"No one ever seems to pay attention to that bit,\" she muttered to herself.\n\nIt wasn't the answer Phil was hoping for.\n\n\"Anyway!\" C\u03adr\u03bcl\u0259a slammed a cane down on the teacher's desk for emphasis. \"Class has begun. Take a seat, but not at that desk.\" She pointed to an otherwise unremarkable desk two rows back. \"I think it ate my last student.\"\n\nIt looked like any other desk. Phil still looked at it warily as he picked a desk in the middle of the front row.\n\n\"Let's start with basic geography,\" C\u03adr\u03bcl\u0259a said. \"The others tell me that's what your lectures have been about lately. Describe the basic topology of hell to me.\"\n\n\"Um, okay,\" Phil said. He recalled what he'd been told both in his previous Wargsnouts lectures and then the special lectures from Lutwidge. \"It's a separate plane. There are seven concentric circles, each corresponding to a primal sin. Satan rules the whole of hell from his throne located in the seventh, innermost circle of hell.\"\n\nC\u03adr\u03bcl\u0259a put a hand over her face. She turned around and, with a piece of chalk on the end of a holder, chalked a large F on the blackboard.\n\n\"Most information on hell comes to humans from daemons,\" she explained.\n\nShe added embellishments to the F she'd drawn on the blackboard. She added fangs to the two horizontal lines, making a mouth. She added long horns curving backwards to the top and bottom of the vertical line. Then she drew a pair of batwings coming out of the back and roughly level with the bottom horizontal line.\n\n\"Daemons are all creatures of deceit,\" C\u03adr\u03bcl\u0259a continued. \"The information they give humans is often lies and shouldn't be trusted.\"\n\n\"Um, but aren't you a daemon,\" Phil pointed out. \"Doesn't that mean I can't really trust what you tell me either?\"\n\nC\u03adr\u03bcl\u0259a morphed into a statuesque, stern-looking dominatrix with long, flowing electric-blue hair and a baroque basque that emphasised a considerably enlarged cleavage.\n\n\"Quiet in class!\" she yelled. Her red eyes glowed as she slammed her cane down on the desk for punctuation.\n\nPhil quietened up.\n\nIn the corner of his eye he noticed one of the other desks was slightly out of position. It seemed slightly twisted in his direction. Wasn't that the desk C\u03adr\u03bcl\u0259a pointed out earlier? A chill ran through the hairs on his forearm.\n\nC\u03adr\u03bcl\u0259a had morphed back into her usual little girl form. Her brow was furrowed in thought.\n\n\"Hmm, that's a good point,\" she said. \"I am a daemon, therefore what I say should be regarded as untrustworthy.\"\n\nShe paused as if considering how to get around this problem.\n\nThe hairs on the back of Phil's neck prickled. He had the ominous feeling he was being watched, or maybe stalked. He turned around. Again he had the queer feeling that desk had moved since he'd last looked at it. Had it moved closer?\n\n\"I've got it!\" C\u03adr\u03bcl\u0259a said. \"Don't automatically treat everything I tell you as the truth. Keep an open mind and use your own judgment to decide what should and what shouldn't be believed.\"\n\n\"Okay,\" Phil said doubtfully.\n\nC\u03adr\u03bcl\u0259a picked up her board rubber holder and wiped the embellished F off the blackboard. It seemed unhappy with this, as if it had been on the verge of deciding whether to take flight just before C\u03adr\u03bcl\u0259a erased it. She stared at the empty blackboard and her little girl face scrunched up in thought again.\n\n\"Not enough dimensions,\" she said after a while.\n\nShe turned around and her eyes lit up as if she'd suddenly thought of a solution. She recited one of the most complex spells Phil had ever heard. He caught some fragments\u2014Omnefitum gemnax...nidacor Dominex...Fastupulum rama costipulat\u2014but the rest slipped through too fast for his ear to catch. C\u03adr\u03bcl\u0259a ended the spell by tapping the top of the teacher's desk with her cane.\n\nThe room darkened and Phil's mouth dropped open. A galaxy was suspended in the centre of the room. Small brown and blue spheres floated amongst clouds of ethereal pink dust. C\u03adr\u03bcl\u0259a stood visible through the holographic display, her face lit up from beneath.\n\n\"The Dominion of Lust,\" she said.\n\n\"That doesn't look like a circle,\" Phil said.\n\nIt looked like galaxies. Plural. Big.\n\n\"Are those planets?\" he asked, pointing to the floating balls.\n\n\"They're worlds, just like your own,\" C\u03adr\u03bcl\u0259a said.\n\n\"Separate planets within the dominion,\" Phil said thoughtfully. \"Which one are we on?\"\n\n\"On? None of them,\" C\u03adr\u03bcl\u0259a said. \"We're in the Dominion of Lust. They're Earth.\"\n\nPhil was confused. \"They're Earth? What, all of them?\"\n\nC\u03adr\u03bcl\u0259a nodded. \"They're all Earth. All the same and all slightly different to each other.\"\n\nPhil didn't get it. Did Earth mean something different to C\u03adr\u03bcl\u0259a?\n\n\"Your Earth is around here somewhere,\" C\u03adr\u03bcl\u0259a said, moving the display to a particularly dense pink cloud. \"Magic is strong on your world as it lies on the intersection of multiple dense regions of dominion.\"\n\n\"My Earth? How many are there?\"\n\nC\u03adr\u03bcl\u0259a remained focused on the magical holographic display. \"I don't know,\" she said. \"I did try to count them all once, but my head started to feel a little funny and I had to go and lie down for a bit.\"\n\n\"And they're all the same? All Earth?\"\n\n\"Similar, but not all the same,\" C\u03adr\u03bcl\u0259a said. \"Positioning determines their physical laws.\"\n\nShe pointed to a world floating in a particularly dense pink cloud.\n\n\"Earths close to dense regions of dominion have weaker barriers separating them from the rest of hell. Magic seeps in. It's easier for daemons to cross over, and for humans to do the same. The fantastical is commonplace.\n\n\"Other worlds are further out. The influence of hell is less. Warlocks and daemons appear rarely. Magic is weak.\n\n\"And some...\" She pointed to a little brown and blue bauble stuck out on its own, far away from the pink clouds. \"...are so far out that magic and daemons are nonexistent. Their people only get to know about the likes of you and me by reading about us in stories like this.\"\n\nPhil shook his head. It was a little too much to take in.\n\n\"Why don't we know any of this?\" he said. \"Why has no one been able to reach any of the other Earths?\"\n\n\"Because they'd have to travel through hell,\" C\u03adr\u03bcl\u0259a answered. \"To travel that deep into hell is impossible for even the most powerful of humans. And knowledge of hell comes with a price.\"\n\nShe moved the display and showed Phil an odd sight. The pink substance of the dominion had bunched up into what resembled an amoeboid pseudopod and was currently concentrated around one of the planets. It looked like it was trying to engulf it.\n\n\"The membrane protecting this Earth has weakened. The substance of hell is flowing in through the barrier. Most likely this planet will be broken down and reabsorbed back into the Dominion of Lust. This is the fate of all Earths. They learn of hell and in trying to learn more they damage the membranes keeping their world separate from hell's dominions. Eventually they break down and the planet is reclaimed.\"\n\n\"Reclaimed?\" Phil queried. His head was spinning.\n\n\"Oh yes,\" C\u03adr\u03bcl\u0259a said. \"Earths are accretions formed where the various planes of hell overlap. At each intersection the energies of each dominion coalesce into an Earth. That's what humanity is\u2014a composite of all the various dominions of hell.\"\n\n\"No no no,\" Phil shook his head. This must be some craziness of C\u03adr\u03bcl\u0259a's. It couldn't be true. Hell was part of Earth, not Earth part of hell.\n\n\"Yes yes yes,\" C\u03adr\u03bcl\u0259a giggled. \"Humans, always believing themselves to be the centre of everything.\"\n\n\"What about outer space,\" Phil said. \"Earth is a tiny planet in a vast universe.\"\n\n\"The void?\" C\u03adr\u03bcl\u0259a said. \"Just another dimensional axis.\"\n\nShe placed a hand around one of the floating planets and turned it like a dial. The pink clouds of the display turned and folded away down an angle not visible to him. The display settled into a familiar vista of stars, solar systems and swirling galaxies.\n\n\"Reality. Void. The effluvium spat out from an Earth's accretion. Very dull,\" C\u03adr\u03bcl\u0259a said.\n\nShe turned the planet-dial again. The display tilted through another impossible angle and revealed clouds of red dust that swirled and raged like roaring flames.\n\n\"The Dominion of Wrath.\"\n\nAnother turn and another eye-watering twist of perception. This time Phil looked upon lurid green clouds.\n\n\"The Dominion of Envy.\"\n\nAnother turn and Phil was looking on coils of earthy-brown dust.\n\n\"The Dominion of Gluttony.\"\n\nPhil shook his head. C\u03adr\u03bcl\u0259a's actions had left his eyes feeling like they were spinning through more axes than should be possible.\n\n\"What about time?\" he asked. \"Earth was around for millions of years before we appeared.\"\n\n\"Time is just another dimension, and\u2014like the void\u2014runs relative to its own Earth. During the accretion process time is compacted. Millions of years unfold on new Earths in a blink of an eye here within the dominion. It's only when an Earth develops sentient life forms that their time starts to align with our time.\"\n\n\"Uh,\" Phil said. His brain was starting to feel like it had overworked muscles he didn't know it had.\n\n\"See, each Earth is an intersection of hell with each dominion radiating out from it on a separate axis, and through these axes each Earth is linked.\"\n\n\"C\u03adr\u03bcl\u0259a gave Phil a questioning glance.\n\n\"Didn't they teach you this at school?\" she asked.\n\n\"They taught us something slightly different,\" Phil answered.\n\n\"Hmm, yes, that would probably be the case,\" C\u03adr\u03bcl\u0259a murmured to herself. \"Earths rarely survive long once this level of knowledge filters down to the general populace. I'd have thought your Earth would have known better, though, given how highly attuned it is.\"\n\nC\u03adr\u03bcl\u0259a recited more words and the floating display winked out of existence, returning the classroom to full illumination.\n\n\"And that is the basic topology of hell,\" C\u03adr\u03bcl\u0259a said, her red eyes shining. \"Easy isn't it.\"\n\nPhil's brain disagreed with that.\n\n\"We'll go over the important regions of each dominion in a future lesson,\" C\u03adr\u03bcl\u0259a said.\n\nShe looked at Phil.\n\n\"Hmm. It looks like you're having trouble grasping the concept. It's always a problem for minds that perceive a limited number of dimensions.\"\n\nHer face brightened.\n\n\"Ab'\u011dalga,\" she said excitedly. \"She'll be able to help you out.\"",
        "She skipped over to Phil's desk. She walked behind his back and slammed her cane down on the desk behind him. He was sure it hadn't been that close before. It was practically touching the back of Phil's chair. Was. When he turned around again all the desks behind him were sitting in a neat row about a metre behind his chair.\n\nC\u03adr\u03bcl\u0259a tapped her cane on the top of Phil's desk and blue light flared under the lid. She lifted it up and instead of a narrow tray to hold books and stationary Phil saw a large hole falling down into darkness. What Phil saw was impossible. The desk was only a couple of inches deep. His feet were on the floor underneath it. Yet he was looking down into a deep black pit that seemed to go on forever.\n\nC\u03adr\u03bcl\u0259a put her hands on the edge and peered down into the depths. \"Perfect,\" she said, before grabbing the back of Phil's robe and pitching him over the edge and into the gaping abyss. He saw her smiling and waving form recede as he tumbled down into the darkness.\n\nHis fall was broken by a soft and yielding substance. He couldn't tell what it was. It was wet like liquid, but more solid\u2014more like mud, although that wasn't right either. The substance had more elasticity. Phil sank into it up to his thighs, but then his downward motion was checked. It felt like he'd fallen into a great mound of jelly. While there didn't seem to be any danger of him sinking deep enough to drown, he wasn't sure how he was going to get out. There was no leverage\u2014nothing for his legs to push against. He was stuck.\n\nThen the substance started moving around him and Phil realised he had bigger problems.\n\n\"Mmm, what's fallen into my lap,\" he heard a feminine voice say.\n\nHis eyes accustomed to the gloom and he became aware of a blue phosphorescent glow all around him. He'd landed in a pile of translucent glowing blue jelly. He could see his legs embedded in it up to his waist. Then half of it sat up and Phil was looking at the glowing blue body of a giantess. It looked like she was formed out of jelly, a little like the undines Phil had encountered before, but constructed out of a much more viscous substance than water or foam.\n\n\"Ooh, a little warlock,\" the giantess said.\n\nPhil smiled back at her while trying, unsuccessfully, to extricate his legs.\n\n\"What shall I do with you,\" the giantess said. She ran a blue tongue around plump blue lips.\n\nShe brought a hand down and Phil felt like he'd been buried in a waterfall of warm wriggling jelly. Everything bar his head was enveloped. The substance was a lot more viscous than water and was able to move on its own. He felt it rub against his body with what seemed like lascivious intent.\n\nAnd corrosive.\n\nAlarmed, he watched as his robes peeled away, the edges frayed to strands and those ultimately dissolved to nothingness. He was buried in the same material with nothing between it and his naked skin.\n\n\"Educate!\" C\u03adr\u03bcl\u0259a called down from a tiny square of light. \"He's here for education, Ab'\u011dalga. I want him back afterwards.\"\n\nThe square of light disappeared as C\u03adr\u03bcl\u0259a closed the lid of the desk with a wooden thud. Phil was alone in the dark with Ab'\u011dalga.\n\n\"We'll see on that,\" Ab'\u011dalga said with a smile that didn't reassure Phil at all.\n\nThe molten substance of her arm flowed and wriggled over Phil's exposed body. It reformed into fingers and a hand. She plucked him out of the jelly and lifted him up until he was dangling before her glowing blue face.\n\n\"What does C\u03adr\u03bcl\u0259a mean by educate me?\" Phil asked.\n\nHe was more concerned about whether she'd keep to the 'I want him back' part. The translucent jelly of her body had dissolved his robes in a matter of moments. He didn't want to think about the same thing happening to his exposed skin.\n\n\"I imagine she wants me to pry open the synapses of your closed little human mind,\" she said.\n\nShe rubbed an oversize digit down the line of Phil's jaw, leaving behind a moist trail of slime.\n\n\"First I think I'll educate you on my body.\"\n\nShe clutched him to her bosom as if he was a beloved doll. What she did next was far less innocent as she rubbed him against her enormous exposed boobs. His naked body slid over her smooth, pliant skin. He felt the soft weight of her boobs give against him like giant soft cushions. They felt like enormous silicone bags wrapped in soft latex. He was glad her skin remained impermeable. It would be easy to fall inside and drown in one of those monstrous boobs, and that would be a particularly undignified way to go, even for the succubi's castle.\n\nAb'\u011dalga lifted him up higher. She pursed full lips together and brought him close enough for a kiss. Her lips were big enough to envelop his face. He caught the scent of cool spearmint as she pressed his face into the plump cushions of her lips.\n\nPhil's thoughts of eroticism were dampened by the realisation she could easily swallow him whole if she wanted.\n\nShe lifted him higher and then pressed his crotch up against her pout. Her lips parted enough to suck in his penis. He'd already started to stiffen from being rubbed against her naked breasts. It only took a couple of little sucks for Ab'\u011dalga to tug him to full hardness. Murmuring with delight, Ab'\u011dalga rhythmically pushed him up against the cushions of her gel-filled lips while she sucked on his hard-on. A finger, or more accurately a pseudopod, squished up beneath his ass cheeks, bathing his testicles in warm jelly and tickling around his anus.\n\nHer lips bunched up and sucked, forming a tight tunnel pressing all around his cock. As she bounced him back and forth against her pouting lips he felt his erection slide between moist membranes. Her lips parted at the back and then Phil felt suction strong enough to travel down the inside of his penis and tug insistently at his balls.\n\nHe knew trying to hold back wouldn't do him any good, so he let go, feeling an ecstatic burst of pleasure as he ejaculated between her pillowy soft lips. Those lips squeezed together and she began to suck on Phil's body as if she was sucking up juice from a drinks carton on a hot day. His orgasm lengthened and Phil twitched helplessly as she pulled a continuous stream of semen out of his body. As sweet as it felt, he hoped she would keep to C\u03adr\u03bcl\u0259a's instructions and not crumple him up like a juice carton.\n\nHe was starting to feel a worrying pressure settle around his vitals when Ab'\u011dalga relaxed her lips and released him. Gasping, he fell backwards. Her malleable hand became a soft chair and she let him rest in it while she licked her lips. He saw the white strands of his semen in her mouth through her translucent skin. Her tongue moved around and she looked thoughtful, as if tasting fine wine.\n\n\"Odd,\" the blue giantess said. She glanced up at C\u03adr\u03bcl\u0259a's hatch. \"Why should she be interested in you? Some magical potential, nothing exceptional or outstanding. Rather ordinary, really.\"\n\nShe continued to move Phil's semen around inside her mouth.\n\n\"Although it's hard to tell anything with seed so tainted. You've been emptied and refilled so many times. A sign of mediocrity if ever there was one. I can taste the insatiable one and...\" She pulled a face. \"...the Qi\u0161tu.\"\n\nShe rotated her hand and studied Phil. He was still trying to get his breath back and his leaden limbs under control.\n\n\"That girl,\" Ab'\u011dalga said. \"I never know what's in her mind half the time, I swear. She must have her reasons. She always does.\"\n\nAb'\u011dalga cocked her head.\n\n\"Okay, what do you desire?\"\n\nPhil was caught off guard by the question. \"Um, I don't know,\" he said.\n\nAb'\u011dalga rolled her eyes and sighed. \"That's a very ordinary answer. Maybe I should just eat you.\"\n\nHer mouth opened wide like a gigantic cavern. Her hand moved Phil closer, preparing to drop him inside as if he was a tasty little snack. He started to panic. What did he want? Why had he come to Wargsnouts in the first place?\n\nWhat he really wanted was to go home and forget daemons or magic ever existed. He suspected she'd find that ordinary too.\n\n\"Knowledge!\" he blurted out.\n\nAb'\u011dalga closed her mouth and moved her hand back. She smiled.\n\n\"That's a better answer,\" she said. \"What kind of knowledge?\"\n\nPhil pondered her question. \"A better understanding of daemons and magic,\" he said.\n\n\"So, you want to control your succubi?\"\n\nPhil tried to picture himself giving orders to Rosa or N\u00ffte and them obeying. Nope, couldn't imagine that at all.\n\n\"So I can stay alive,\" he said.\n\nAb'\u011dalga put a hand to her mouth and feigned a yawn.\n\n\"Boring. Seeking survival alone is the lowest of ambitions. Ordinary,\" she said.\n\nPhil thought back to when he'd encountered Garner, the recruiting officer. He remembered the strange creature he'd glimpsed on the man's shoulder and the way the warlock had produced fire from nothing and how he'd watched, awestruck, as the bright flames had flickered up the man's arm without burning. He'd wanted to know how to do that. He wanted to know what magic would allow him to be capable of. Most of all he wanted to be something more than just another anonymous kid serving up fries in a shitty little anonymous town.\n\n\"Still very ordinary,\" Ab'\u011dalga said with a bored sigh. \"Hmm, but there is a spark in your eyes.\"\n\nShe brought him closer, but higher this time so he was level with her eyes rather than her mouth.\n\n\"That spark might develop into something interesting. I think I might be able to help. We'll see.\"\n\nPhil was encouraged to hear that. He was less encouraged by what happened next as she lowered her hand down to her crotch. Legs, an ass and the folds of a vagina had formed out of the undifferentiated jelly of her lower half. She carried him down to her pussy and for a moment Phil wondered if she was going to push him up against it as she had with her lips.\n\nShe didn't push him against her sex, she pushed him inside. Phil watched in shock as his feet and ankles passed between her transparent labia and were gripped by a peristaltic suction that pulled most of his body into her vagina before he was able to react. He saw his legs kicking away inside her and felt the membranous walls inside her vagina settle over his lower body like a heavy wet sheet. Settle, and then lose cohesion until the tunnel broke down and Phil's lower half was submerged in the gelatinous substance that made up her body. Panicking, he thrashed his legs back and forth like he was trying to outswim Jaws.\n\n\"Always with the wriggling,\" Ab'\u011dalga griped. \"It makes the interfacing so much harder.\"\n\nA vesicle formed within her body, roughly where the ovaries would be on a human woman, and descended towards the opening to her sex, expanding as it fell. The surface of the bubble was silvery and opaque. The shiny membrane reached him and felt like sticky soft silk as it enfolded first his feet and then his ankles and calves. Immediately all the nervous energy drained out of his leg muscles to be replaced with a relaxed languor. The vesicle travelled up over his knees and then engulfed his thighs. The pleasant-feeling membrane enfolded first his balls and then wrapped his erect cock in a soft elastic sheath.\n\nPhil came. It was a long, slow, leisurely release, like the orgasm that comes from that second, slower bout of sex when two lovers exploring each other's bodies for the first time have got the first frenzied coupling out of the way. His cum oozed out of his cock in a slow thick stream and drew the rest of his resistance out with it.\n\nAb'\u011dalga leaned back on her elbows, closed her eyes and sighed as the packed gel within her vagina tightened around Phil and drew him deeper inside her, deeper inside to where the vesicle engulfed more of his body. He couldn't see anything below his chest as the silvery surface of the bubble billowed up around him.\n\n\"You're going to return me afterwards?\" Phil asked. Begged, if he was entirely honest.\n\nThere was nothing he could do if she decided not to. Contact with that strange vesicle inside her had drained all his energy, effectively paralysing him.\n\n\"Possibly,\" Ab'\u011dalga said. \"If you're worthy. The girl would agree with me on that.\"\n\nShe gave another satisfied sigh as the last of Phil was drawn between the pulsing folds of her giant labia. Phil felt the soft, moist lining inside her vagina press against his face, before the membrane dissolved and the molten jelly of her body flooded him. It covered his eyes, filled his nose and throat, poured into his ears and even seeped into his eye sockets. Phil was drowning in her. He was...\n\n...floating in warm blue seas under a cloudless tropical sky. He was suspended a few metres beneath the calm surface yet felt no need to breathe. He was relaxed as gentle currents tickled past his naked body.\n\nHe was not alone. Ab'\u011dalga, now shrunk down to the same size as him, was entwined in his arms. More than entwined\u2014his rigid erection was inserted into the snug fit of her warm vagina. He could see it inside her through her transparent blue skin.\n\nPhil looked at her, puzzled.\n\n\"The substance of my body has invaded your brain.\" Ab'\u011dalga moved her lips as though speaking, but Phil heard the words directly in his thoughts as though they'd reached there without bothering to go through the intermediary of sound waves. \"I'm screwing with your perceptions. It makes it a little easier.\"\n\n\"Makes what a little easier?\" Phil asked.\n\n\"Interfacing directly with your brain,\" Ab'\u011dalga answered. \"That's why C\u03adr\u03bcl\u0259a sent you to me. It's hard to explain concepts to minds unable to visualise them, so I'm going to lend you part of my mind for a while so you can visualise it through a mind that can.\"\n\nPhil saw transparent strands in the water around him. Was a school of jellyfish passing overhead?\n\n\"This is going to be a little disconcerting. The brain always perceives the interfacing process as disturbing, even horrifying, so don't be alarmed. Focus on my lovely tight little pussy squeezing your big fat cock instead.\" \n\nPhil felt her lovely tight little pussy squeeze all around his big fat cock. The malleable inner walls of her pussy moved against him in a way that felt like bubbles of pleasure were rolling up and down his shaft.\n\nThis didn't change the fact the water was now teeming with wriggling transparent tendrils. They wormed into his ear, up his nose, into his mouth, even wriggled through the gap between eyeball and eye socket. He felt their clammy touch as they slithered into his skull and then the chill as they burrowed into his brain.\n\nIt was\u2014as Ab'\u011dalga warned\u2014highly disturbing.\n\n\"Oh hello, this isn't quite so ordinary,\" Ab'\u011dalga said. \"That's always the way with you humans. Drab and dull on the outside and then totally fascinating when you open up their skulls and take a peek inside.\"\n\nHer feelers slithered into the folds of Phil's frontal lobes and dug deeper.\n\n\"Hmm. A humble mumble. I should have known. The Qi\u0161tu has always had a soft spot for them. I can see why the girl likes you too. Personally, I find humble bumbles vomit-inducing. All that passivity and false modesty...sickening!\n\n\"Oh? What's this? Hmm, maybe that modesty isn't so false. What a tangle. How have you survived this long?\"\n\nAb'\u011dalga's feelers wormed deep.\n\n\"Ah. I see. That. I remember you clutching it the last time we nearly took you apart. Strange that it's that memory.\"\n\nShe paused. Phil...well it didn't matter what Phil wanted to do. Ab'\u011dalga's feelers were in his brain. He was paralysed, unable to do anything except watch while the slender strands pulsed with loathsome motion.\n\n\"Ooh, you know, I'm itching to get in and untangle this and see what you're really capable of. All it would take is a little nudge here...a little prod there. No, no. Mustn't intervene. It's a path you have to walk alone. Can't deprive you of that.\n\n\"How's my pussy by the way? Still nice and warm and snug?\"\n\nIt was, but Phil was too concerned about the multitude of tentacles burrowing through his brain to fully appreciate it.\n\n\"All the sexual pleasure I'm giving you...\" Ab'\u011dalga flexed her hips for emphasis, sending waterfalls of bliss cascading down his enveloped penis. \"...and still you're worrying about my feelers in your brain. I wonder what happens if I stimulate the pleasure centres directly...\"\n\nHer feelers touched a special part of Phil's brain and he was enveloped in a sensation of pure, indescribable ecstasy. A large puff of white semen rose up inside her translucent body as Phil was overwhelmed by orgasm. The feeling was stronger than that, though, more like a religious revelation delivered through the medium of sex.\n\n\"...and look at that, the worry centre flares right up.\n\n\"Will this kill me?\n\n\"Will this enslave me?\n\n\"Will I become addicted?\"\n\nAb'\u011dalga recited his thoughts back to him.\n\n\"He doesn't know what he wants from life, but he doesn't want it to end, even if that ending will be the greatest pleasure he'll ever experience.\"\n\nShe laughed.\n\n\"Okay, I'll stop teasing you. Now what was the girl trying to squeeze into that pathetic little human brain of yours? Ugh, how do you manage living in a world of so few dimensions? So limiting. No wonder it takes humans so long to grasp the true nature of the universe around them. Here, let me lend you some of my perception.\"\n\nMore fine filaments unfurled from Ab'\u011dalga and slithered into his skull.\n\n\"This will help...or drive you completely insane.\"\n\nThe wriggling ends sought out nerve endings, connected and...\n\nPhil's eyes widened. It was like his consciousness had expanded to ten times its size. He was standing back in C\u03adr\u03bcl\u0259a's classroom with her magical hologram of hell's dominions and this time he saw them, really saw them. He wasn't looking on a single dominion but eight of them, all existing concurrently in the same space, contiguous across points that should have been topologically impossible. Each was composed of energy that flowed and swirled through each plane in vast tides.\n\nMagic. This was magic, Phil realised. This was the energy that underpinned existence. Magic seemed such a paltry word for what he saw. This was more fundamental than that. It was everything.\n\nHe saw also the truth in Earth's formation...all Earths' formation. The energy of each plane had its own signature\u2014Phil saw it as different colours, flowing at different speeds, in different patterns. Earth was the point where all planes intersected, where the streams of energy flowed, mingled, merged and coalesced into not worlds but entire universes. This was what a universe was\u2014a collision of different energies exploding into matter...space...time. And there were so many of them, too many to ever be counted; it would be like trying to catalogue every grain of sand on a beach, every microscopic dot of plankton in the ocean.\n\nAnd as his perception zoomed in on a single Earth he saw too the threads of energy criss-crossing and flowing across the surface in a vast, tangled weave. It was in the minds of people where the energy was most concentrated, where multiple different strands came together in a riotous tangle of colours, each mind its own unique, complex pattern of whorls and knots. The people were unaware of this as they were unaware of the dominions existing alongside them, hidden in angles and behind barriers they could not perceive. He could see these planes, could see every mind connected to each dominion, and every dominion contained within each mind. \n\nPhil opened his eyes and saw it all.\n\n\"I see,\" he said.\n\nHis brain hummed with energy. It felt like it was growing, spreading out into the water around him. He saw the lines of energy\u2014magic\u2014running past him as they flowed through the plane. He saw patterns in the lines. If he could read them he could respond to them, react. If he could change them he could bend reality to his will, change it however he saw fit.\n\n\"Knowledge is the greatest drug of all,\" Ab'\u011dalga said. \"Those who see a glimpse always want more.\"",
        "Yes... Yes... The patterns... If only he could read the patterns in the lines of energy. His brain throbbed and swelled, as if it was a sponge soaking up knowledge from the water around him.\n\n\"Do you wish to see more?\" Ab'\u011dalga asked.\n\nYe\u2014Wait!\n\nHe sensed the fishhook in her words. The waters were darkening. A shadow was moving up beneath him, vast and immeasurably ancient. Countless gossamer tendrils filled the space between Ab'\u011dalga and him. It was getting harder to tell where Ab'\u011dalga ended and he began, where his thoughts ended and hers began. Was his mind expanding or diffusing? Dissolving? He felt the pull all around him\u2014to be everywhere and everything.\n\nEverything and nothing.\n\n\"I do...\" he started, \"...but not right now. I'm sorry. This is too fast. I'm not ready. I need time to think over what I've learnt.\"\n\n\"Sorry? Apologising...to me?\" she laughed at his words as if she found them ridiculous. \"You know, you might turn out to be interesting after all.\"\n\nHer lips curled up in amusement as her feelers began to retreat from his skull. He felt them detach and the planes overlaying his perception faded until he was once again seeing the world in only three dimensions. His brain contracted back to a compact knot of nerve tissue contained within the bony case of his skull. It felt reassuring, solid.\n\n\"Still too much of a humble mumble,\" Ab'\u011dalga said.\n\nHer face disappeared from view as the calm seas suddenly churned into life and Phil was wrenched upwards as if caught in a waterspout.\n\n* * * *\n\nC\u03adr\u03bcl\u0259a was drawing a picture on the blackboard, her face scrunched up in concentration. Her drawing depicted a cartoon family enjoying a picnic, or at least they would be if they weren't currently being torn apart by grotesquely deformed woodland creatures. C\u03adr\u03bcl\u0259a put the most detail into the youngest daughter. The girl was screaming in open-eyed terror as mutated and savage squirrels tore open her belly and engaged in a tug-of-war over her viscera. The girl had similar spiky hair to C\u03adr\u03bcl\u0259a.\n\nThe wooden lid of the desk bounced open as Phil crashed through. He lay half in, half out of the desk with his cheek resting against the wooden seat of his chair. He was naked and covered in glistening mucus.\n\nC\u03adr\u03bcl\u0259a's intense, melancholic expression changed to a wide, girlish smile. \"You're back,\" she said, bouncing with excitement. \"Do you understand it now?\"\n\nPhil smiled weakly and held up a thumb.\n\n* * * *\n\nFour cowled figures sat around a large circle chalked on the stone floor and embellished with occult symbols. The room was dim\u2014illuminated only by the wan, flickering light of a multitude of black candles. In the centre of the circle sat a large basin filled with water.\n\nThe four figures intoned words in an arcane language.\n\n\"Occulora nida Occum.\"\n\nThe leader held an upside down goat's skull in cupped palms as if it was an offering.\n\n\"Occulora nida Occum.\"\n\nThe lead figure tilted the skull and red liquid poured into the bowl. The blood, if that's what it was, billowed out until the whole contents were stained. While the other three continued the chant the leader tipped a finger into the bowl.\n\n\"Occulora nida Occum Infinitum vaarsta \u00c6nma ov Homnus.\"\n\nRipples spread across the bowl and pictures rendered in shades of red appeared just beneath the surface\u2014locations, schematics, maps. The lead warlock manipulated the images with his finger with the same ease as if it was one of the modern touch screen tablet computers. He found the image he was after, zoomed in.\n\n\"He's alive,\" Darvill said. \"I've got a fix on his soul.\" \n\nto be continued..."
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "slime girl",
        "monster girl",
        "magic",
        "warlock",
        "unbirth",
        "giantess",
        "goo girl"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-207"
}