{
    "title": "Better Fate than Never Ch. 05",
    "pages": [
        "The water was deep and cold and numbed her limbs, making it impossible to escape. Jenny thrashed hopelessly, crying out, occasionally receiving a mouthful of dirty liquid for her troubles, which made her splutter. She knew what this was, almost as though she were looking down on her own life from a great height; a dispassionate observer. She was trapped in a recurring dream that she'd experienced since childhood and which, incidentally, had become much worse after the cruel treatment by her ex-boyfriend and best friend. \n\nThe floodwaters were steadily rising and she was drowning. However, Jenny also knew that, in this particular dream, her grandmother could always be relied upon to save her. Looking around in anticipation, she saw Harriett struggling in the shallow waters. With utter horror, Jenny realised that for the first time ever, her grandmother wouldn't rescue her. With increased terror, she screamed. She started to struggle even more, only to realise the water had been replaced by thick, black, oozing mud which started to fill her mouth, her lungs... Movement became impossible. She was paralysed. She was going to die. Suddenly, seemingly from out of nowhere, a pair of strong arms embraced her, dragging her onto the surface and away to safety...\n\n'Hey, hey, it's alright baby,' soothed Finn, as he held Jenny's shaking form to his chest. It had taken him a couple of false starts to reach her, hitting his shin painfully on various boxes and furniture items. Finally, he'd managed to grope his way through the darkness of the room, to be reunited with his whimpering, inconsolable houseguest. Cradling her tenderly, he spoke kind, comforting words until he was sure the nightmare's spell had been broken. Gratefully, Jenny clung to his strength, warmth and safety; a solitary rock within a swirling sea of emotions. Meanwhile outside, a violent storm broke around them, the rain hammering on the old building, searching out cracks in her defence. Finn couldn't help but hope his strategically placed buckets, in less robustly roofed areas of the farmhouse, would hold firm until morning.\n\n'Thank you,' Jenny managed to utter at last, her voice a long, rattling sigh, almost lightheaded with relief.\n\n'That's okay,' said Finn compassionately, starting to release her. 'I'll just be sitting over here, if you need me again.'\n\n'No!' she exclaimed, her hand shooting out to find his chest in the darkness. 'Please lay here beside me. Please hold me,' she begged.\n\n'If you like,' he replied, shuffling down the mattress into a horizontal position. For a short while, the two of them repositioned cushions and blankets in an attempt to make a small, single mattress comfortable enough for two adults to share.\n\nUnable to read any body language or facial expressions through the blackness, after a moment's pause, Finn raised his arm to wrap it around Jenny, allowing her to snuggle up against him. Fortunately, sight wasn't necessary; her acute sigh of relief told him everything he needed to know. Despite realising that they had both stripped down to underwear and shirts during the night, Jenny sank into the feel of his warm, firm body and allowed Finn's comforting strength to overwhelm her.\n\n'You're right,' she stuttered at last. 'I am sometimes afraid...of what I see, of what I feel. Of life in general, I guess.' Jenny's words dried up as she felt her throat constricting with emotion.\n\n'Everybody's afraid sometimes,' soothed Finn, tenderly circling her shoulder with the palm of his hand.\n\n'I guess my biggest fear is that one day, maybe sooner than I care to believe, my only supporter will abandon me and leave me completely alone.'\n\n'Your grandmother is not your only supporter,' said Finn softly. 'And if you're talking about her death, you mustn't think in such a destructive way. Your perception is all wrong.'\n\n'What other way is there to think about it?' she sniffed.\n\n'Death is inevitable, but when she leaves you, it won't be abandonment. I'll bet any money you like, that the final thought that will pass through the mind of that amazing lady will be about you and your happiness. That's not abandonment, sweetheart,' he said gently. 'That's a degree of love that most people can only dream of.'\n\nIt was Finn's final sentence that broke down the barrier Jenny had maintained for so long. Sobbing in his arms, he simply let her cry it out, holding her close, listening to the strength of the storm begin to fade to nothingness. By the time she'd reached the hiccupping stage, Finn was smoothing the hair back from her face with his spare hand, the other still continuously stroking her back.\n\n'You were right about me,' she gulped. 'I'm guilty of not living life to the full. Sometimes, it feels as though I'm just on a treadmill, fighting to get through each month, without any recollection of living. And all the while, time simply passes.'\n\n'Well, you're doing a pretty good job of living right now,' said Finn kindly. 'Besides, I was wrong to say that about you. It was unfair. I did it to cause a rise, as has happened many times during our brief association,' he admitted. 'But I do think you need to look through the other end of the telescope sometimes. Treat every day as an adventure. See the opportunities life affords and take the occasional risk.'\n\n'Is that how you saw me in the supermarket?' queried Jenny. 'An opportunity?'\n\n'No,' said Finn, gently shaking his head. 'I've never viewed you like that. But you are certainly a risk,' he admitted, after a short pause.\n\n'How?' she asked, genuinely curious.\n\n'With you, I risk my heart getting hurt.' Jenny exhaled sharply, but said nothing. Then, as naturally as breathing, she moved her hand to lie directly above his heart, savouring each strong, slow beat. In reaction, Finn coiled his spare arm around her quivering body, allowing both of his hands to drift lovingly across her entire back. One of Finn's great joys was to give massages. As his fingers slowly began to burrow along her muscles and run suggestively through her hair, Jenny found she could do no more than dribble and groan.\n\n'God! You're incredible at this!' she grunted. After much exploration, Finn identified a knot in her left shoulder and started to carefully release the tension she'd been holding.\n\n'It's one of my kinks,' he chuckled, allowing his fingers to move to her neck, where he kneaded gently.\n\n'Only one of them?' she gulped, suddenly aware that their naked legs had become firmly entwined during Finn's amazing massage. Furthermore, only two thin layers of clothing separated their upper bodies too.\n\n'Yeah, one of them,' he sighed, overwhelmed by the simple act of holding Jenny against him. 'To give pleasure. This is being done quite selfishly. I'm getting just as much from this as you are.'\n\n'I seriously doubt that,' she groaned. 'Dare I ask what your other kinks are?'\n\n'You can ask but I think we'd need to know each other a lot better, before I share that kind of privileged information,' he chuckled.\n\nOn the tip of Jenny's tongue were the words 'How much better?', but in the end, she wasn't brave enough to ask.\n\nFinn's exploratory fingers continued, both unhurried and unimpeded. As his attention moved onto Jenny's sensitive neck and ears, she was unable to suppress her soft groans.\n\n'Jenny,' he rumbled. To her ears, it sounded more like a release of pained regret, than the spoken word.\n\n'Uh-huh,' she managed to respond breathily, as his attention moved to her smooth forehead.\n\n'Don't forget you hate me.'\n\n'I certainly don't hate you,' she admitted quietly, daringly raising her hand in the darkness. As it came into contact with his strong, stubbled jawline, Finn exhaled laboriously.\n\n'What then?' he demanded, his fingers walking along the nape of her neck, to tickle her hairline, sending bolts of cautionary desire straight into the base of her skull.\n\n'Let's just say, it helps that it's pitch black,' she shuddered. Finn's rich, throaty chuckle immediately filled the air and she allowed herself to bathe indulgently in that sweetest of sounds.\n\n'Thanks very much! You certainly know how to compliment a guy!' Jenny smiled, entirely confident that he was only exhibiting mock offence. The combination of his continuously stroking fingers, along with a wide smile evident from his tone, were a giveaway. \n\n'I didn't mean it like that! Although if only you were actually French, we might be having a quite different conversation,' she giggled.\n\n'Or no conversation at all,' he added meaningfully, causing a dull quiver to pass down the backs of her legs. 'I can always be French again,' Finn growled in his best French accent, before immediately reverting to normal. 'But I think you much prefer an English bad boy.' This final statement was accompanied by his hand running straight down the length of her spine, to skim across her ass, before returning to her shoulders once more. \n\nThe effect on Jenny's body was immediate and absolute. A deep heavy heat flooded her abdomen and made her inhale sharply. Finn's teasing touch had already turned Jenny on to levels she had previously not experienced. What she was shocked to discover was the apparent ease with which he continued to ramp up her levels of arousal. Her heartrate was undoubtedly now at maximum levels, but his latest action had caused a prickling sensation to start in her lips and fingertips. Anxiously, she clamped her jaw down to try and counteract her body's responses, which she simply didn't understand.\n\n'Huh?' he pressed, cheekily.\n\n'English is fine,' she stuttered, trying to regain control of her mouth, which was starting to feel numb.\n\n'Just not with the lights on?' he grinned, playing his advantage.\n\n'Perhaps I find you intimidating,' she admitted shyly.\n\n'Oh... right,' he said, sounding a little deflated.\n\n'You're intimidatingly attractive,' Jenny was forced to reluctantly explain. 'In the darkness, your looks are one less thing for my overloaded brain to have to contend with.'\n\n'You're saying you can't currently handle the entire package,' Finn queried, attempting to keep the amusement out of his tone. He clearly wasn't successful. Mere seconds later, they were both doubled up with laughter, tears being wiped from their eyes, like two naughty teenagers.\n\nHugging each other tightly, it provided momentary relief from the extreme sexual tension that had built up. At last, their giggling subsided and Finn pulled Jenny incredibly close to him, in the longest, most amazing hug she had ever experienced. Indeed, the silence lasted for so long that she thought he must have fallen asleep. Eventually, he dropped a soft kiss on the tip of her nose.\n\n'I'm also pretty grateful we're in the dark, to be honest,' he admitted quietly.\n\n'You are?' Automatically, Jenny lifted her head to face him. She couldn't imagine why. Cupping her soft jaw in his large hand, Finn repositioned himself slightly.\n\n'Yeah, I am. You can be pretty intimidating too, you know?' he growled, slowly lowering himself towards her.\n\nThe moment seemed to last forever; hanging in the air, frozen in time. At last, their mouths impacted, as Finn gently captured Jenny's top lip between his own, before pulling away and releasing. Jenny found she could do no more than moan submissively, whilst pushing her wanton body towards his. Drawing out her longing, Finn then captured her bottom lip and released in the same way. As her eyes rolled back in her head, Jenny could feel herself giving in to the sensations which overwhelmed her, and allowed him to dominate proceedings. After all, there was no doubt he knew exactly what he was doing.\n\nFinn returned to capture her top lip but, this time, just before releasing it, he ran his soft tongue along the length. \n\n'Fuck!' she gasped, a bolt of heat flooding her pussy.\n\n'Mmmm,' he groaned, before lowering his mouth onto hers. With a heavy pulse ricocheting through her ears, blocking out all other sound, it was all Jenny could do to retain consciousness. Her entire being seemed to be on hyper-alert as, with the smallest movements of their lips, they slowly began to explore. Pressed against each other, Jenny found the experience so much more emotional than either of their two previous kisses. They knew each other better now; there was a mutual trust and understanding. And, of course, they were working together this time, rather than fighting.\n\nWith almost unbearable tenderness, their kiss deepened. With every sweep of Finn's tongue, Jenny felt a corresponding contraction and fluttering, deep within her pussy, as though the two were inextricably linked. Aware of the low rumbling vibrations of a muted groan deriving from deep within his throat, Jenny responded in kind. As Finn repositioned them both slightly, she became aware of his heavy erection trapped between them. It delivered a dull pressure against her swollen clit and Jenny felt liquid pooling between her legs and flowing through to her silk panties. \n\nUnlike any previous lovers however, Finn seemed in absolutely no rush progress further. They were both simply allowed to enjoy the act of kissing, drowning in their desire, learning about each other's intimate needs. Quite simply, Jenny could have stayed locked within Finn's embrace forever. Heavens only knew how long they actually remained there and, all the while, his fingers never ceased touching, caressing, stroking, adoring, and ultimately turning her on. At last, they unwillingly broke apart, breathing heavily.\n\n'You're beautiful,' he growled, his voice breaking slightly with emotion.\n\n'Thank you,' smiled Jenny, tears lining her eyes. 'I'd like to say something equally affectionate, but the truth of the matter is, I have never wanted anybody like I want you right now,' she admitted brazenly, pulling Finn urgently towards her.\n\n'Tell me what you want.'\n\n'I should probably say to tenderly make love, but that wouldn't be true. I want to fuck you,' she said, shocking herself with such demands. 'And I want to be fucked by you.' Far from being shocked, however, Finn sounded delighted by her response.\n\n'Mmmm I feel the same. The time for tenderness is tomorrow, or next week, or next month. Right now, all I can think about is holding you down, easing myself inside you and feeling you disintegrate with pleasure around my thick cock,' he admitted, placing a hand under her ass to pull her closer towards him. Jenny gasped, both from his words and his actions. 'I want to make you come so many times. To give you more pleasure than you've ever imagined.'\n\n'Oh God,' she trembled. Finn talking dirty was all she needed; she was scarcely holding it together as it was.\n\n'Unfortunately,' he continued. 'I think we might need to take a rain check... unless you've got any condoms on you?'\n\n'Oh shit!' she exclaimed with obvious frustration. Her overwhelming response was a strong desire to cry. Jenny's tone obviously gave her away as Finn immediately cradled her even more tightly.\n\n'I'm sorry,' he sighed. 'I don't have any protection on me either.' Jenny could almost imagine him closing his eyes and rubbing his forehead in frustration. 'And there isn't a lot we can do to rectify that until tomorrow.'\n\n'How very unprepared of you,' she attempted to joke.\n\n'Well, forgive me that being equipped to make love with a woman who despised me, wasn't at the top of my priority list when I walked into the loft with her earlier today.'\n\n'I wish I could see your expression right now,' breathed Jenny, brushing her fingers across his rough jawline.\n\n'I'm smiling,' he admitted in a soft tone. 'Very contentedly.'\n\n'Why?' queried Jenny. She wasn't finding much to smile about, given her pressing needs and their current situation.\n\n'Because I know that, when the time is right, we can make love, or fuck, or whatever level of energy, dominance and determination you require from me,' he murmured. 'And in the interim, I can still make you feel amazing.'\n\n'What do you mean?' she whispered, scarcely wanting to know.\n\n'I mean, my cock is not the only part of my body that is capable of giving you pleasure.'\n\n'How then?' she gasped.\n\n'Gonna use my arms, gonna use my legs,' he began to croon. Immediately Jenny burst out laughing, although this seemed to do nothing to deflect him.\n\n'Gonna use my style, gonna use my sidestep,' Finn continued, the amusement evident in his tone.\n\n'How about your fingers?' suggested Jenny cheekily, in between her giggles.\n\n'Undoubtedly,' he agreed, suddenly stopping her joviality dead in its tracks.\n\n'As well as my, my, my imagination. And, trust me,' he added in a whisper. 'My imagination is the part you should be most concerned about.' This single admission sent a deluge of goosebumps down the nearside of Jenny's body.\n\n'Please go steady with me,' she requested meekly, any bravado being drowned out by her uncertainties, which were significant. 'I'm nowhere near as experienced as you.'\n\n'You have no idea how experienced I am,' smiled Finn.\n\n'I've got a fair idea,' she said seriously. 'Please be gentle.'\n\n'Noted,' he replied. 'At least for tonight.' The doubting voice inside Jenny's head dared to tell her that was fine; there was no guarantee Finn would want her after tonight anyway. Her attention was momentarily diverted with shock at how much that realisation hurt her. It only took a second for him to ensure she was fully re-focussed, however.\n\n'The second you feel like you want me to stop,' he breathed, before kissing a line from her chin to her ear. 'Or you feel uncomfortable for even a second,' he whispered, before migrating down the side of her neck. 'Just say,' he groaned, breathing in the pulse point at her neck, from which he could pick up faint traces of perfume.\n\nSliding his hands playfully to the top button of her shirt, he sprang it open with ease, before moving down to the next one.\n\n'Oh fuck!' she groaned, her hips unconsciously rolling with frustrated desire as his fingers successfully cleared each barrier presented by her clothing. Nuzzling against her recently exposed skin with his nose and lips, Finn revelled in the desperate gasps coming from the beautiful woman currently lying beneath him. As his fingers set to work on undoing the next button, Jenny's trembling ramped up.\n\n'Tell me what you're craving right now,' he growled, gently pulling open her shirt to expose her breasts.\n\n'You,' she admitted instinctively. 'In whatever form you take.' Jenny couldn't help but gasp, as Finn dropped down closer. She could feel his breath bouncing across her sensitive skin. To know he was so near, without touching her, was unbearable. Arching her back, she growled in frustration.\n\n'Just imagine what it will feel like. My lips and tongue gently drawing your hard nipples into my mouth...the sensation of my teeth closing around them.' This time, Jenny could only manage an animal cry, filled with barely contained longing.\n\n'Please,' she whimpered, as Finn began to kiss in a wide circle around her breasts, never once coming into contact with the areas of her body that were silently screaming for his caress.\n\n'Please, don't tease me,' she begged, as his mouth came so, so close, before moving away once more.\n\n'Never ask something like that of me,' chuckled Finn. 'Of course I'm going to tease you...and taunt you...and take you right to the edge where I can play with you for hours. Unless you're begging, you're not getting what you need. How else do you expect to get as wet as you are?'\n\n'How do you know I'm wet?' she gasped.\n\n'I can smell your arousal,' he admitted and for a moment, Jenny felt embarrassed. 'I can smell it seeping through your panties and I'll tell you a secret,' he groaned. Suddenly, with a feather-light touch, he swept his tongue over each nipple in turn, causing Jenny's hips to leap into the air as though she'd been electrocuted. 'I can't wait to taste you for myself.'",
        "'Finn!' she gasped, as he focussed in on her right nipple and sucked gently. Tugging the needy flesh into his mouth, he teased it mercilessly.\n\nAfter a while, his attention transferred to her other hardened nipple. Unable to do anything but exhale noisily, Jenny became aware she was starting to make some extraordinary noises, but was past caring. She had never felt so turned on in her entire life; hadn't even known it was possible.\n\n'Aaahhhh!' she sighed, throwing back her head, as Finn started to bring his teeth into the equation. At first, he scraped them across her delicate skin, before pulsing down more firmly, compelling Jenny's body to contract with desire. She quickly became aware of his hand reaching for her other breast. With a damp thumb and forefinger, he mildly pinched and rolled her other nipple at the same time, setting up a rhythm which overpowered her very mind.\n\n'Fuck!' she cried out with pure, unadulterated longing, her willing, quivering body entirely at his mercy as she unconsciously submitted entirely to whatever he had planned.\n\nHaving enjoyed playing with her for some time, Finn finally broke contact with her responsive, over-sensitive body and refocused his hands onto the task of undoing the remainder of her buttons.\n\n'Tell me how you feel,' he murmured.\n\n'Sexy,' Jenny replied immediately. 'Desirable, wanton.' This was a gross understatement. The power of what he was making her feel was almost frightening.\n\n'And how does your body feel?'\n\n'Tingly, desperate, hot and very, very wet.'\n\n'Mmmm,' he groaned, the pleasurable sound resonating deep in his throat. 'Do you have even the slightest idea of how much you turn me on?' Jenny found herself feeling increasingly brave in his presence and daringly asked a question of him in return.\n\n'How do you feel?' she asked breathily, as Finn finally succeeded in his mission and her shirt fell open, exposing her lithe body up to him. \n\n'Hard...' he admitted with a shake of his head. Every time they'd ever met, Jenny had provoked that same reaction. But this time, the effects were extreme; there was no denying his continuous aching need, accompanied by a pool of pre-cum which had turned the front of his boxer shorts damp. 'Although, that's a given around you. Otherwise, I feel energised...yet strangely content.'\n\nSitting up slightly, he hovered above her, before dropping his fingers to her collar bones. Using both hands, he dragged his fingers down her chest, over her rounded breasts, down the soft skin of her abdomen, always stopping just before her waistline, only to return his hands to their starting position to begin again. Jenny found the teasing unbearable, as her hands clenched into balls, capturing whatever material happened to lay in their way.\n\n'Please,' she sobbed. 'Please, please touch me.'\n\n'I am touching you,' he immediately groaned in reply.\n\n'Finn, please,' she repeated. He must have recognised the intense desperation in her tone and decided to show his own form of mercy. Gradually, his hands stilled, until they were both resting on her tummy. Jenny lay there trembling, tuned in to the slightest movement of Finn's body, trying to prepare herself for what might follow. He had already blown her mind; she honestly wasn't sure she could take much more.\n\n'Where else do you need me to touch you?' he growled sexily, allowing one of his fingertips to migrate underneath the lace waistband of her panties, before dragging it teasingly from hip to hip.\n\n'No!' wailed Jenny, her stomach muscles spasming under his control, seriously unsure of how much more she could take. With a small adjustment, the exploring finger moved across to slip under the outer edge of her panties, before starting to creep down her inside thigh. Automatically, Jenny's hips lurched skywards as her legs opened up to whatever Finn had planned.\n\n'Oh, God, please,' she cried out, able to feel his finger caress the outer edge of her most intimate area. With a deep groan, Finn's large body dropped to the bed between her legs, wedging them open. Leaning over her, he slowly kissed Jenny's abdomen, to increasingly desperate cries, before running his stubbly chin straight down the centre of her panties. As he passed over her clit, her pussy twitched and clenched in response to the intense sensation. Moments later he paused, his mouth hovering directly above her swollen entrance, only a thin layer of silk separating them.\n\nWith a carnal growl, Finn ran his tongue along the length of her wet panties, making them even wetter, his tongue threatening to find a way beneath the barrier. Realising what he was doing, Jenny felt a wave of longing pass straight through her as he continued, occasionally nudging his face against her inner thighs to encourage her to open up fully to him. With a satisfied moan, Finn kissed his way back up her body, pausing to savour the taste of her magnificent breasts. As he reached her mouth, his tongue claimed hers, absolutely and unconditionally, the taste of her arousal fresh on his lips. With her legs wrapped around his muscled body, Jenny wanted nothing more than to stay in this moment forever, drowning in their slow, languorous kiss. Eventually, he broke away.\n\n'Don't forget what I told you earlier,' he murmured. 'There are no buildings anywhere near us. Nobody can hear you.' With that, he lifted his weight from Jenny's body, which had been trapping her sweetly in position, and began to shuffle her panties teasingly down her legs. As he eased the garment away from her ankles, she suddenly felt very exposed. 'Open yourself up to me again,' he instructed throatily, dropping to his hands and knees, to kiss slowly down her body once more. The intensity for Jenny suddenly increased tenfold and she cried out in desperation as a strong pulse ricocheted through her body, heading directly to her swollen pussy lips. As he helped ease her knees apart further, to provide full, unrestricted access to her body, a calm seemed to pass over her and she was surprised to realise she felt complete trust in this man.\n\nReaching her sopping pussy, he grunted with satisfaction, as he gently ran his fluttering fingers lightly through her warm, wet folds. Jenny's stomach muscles immediately ached with exertion and she began to gasp, as though being deprived of oxygen.\n\n'Fuck, you are gorgeous,' he sighed. 'Do you have any idea how much I want you right now?'\n\n'We could...' began a breathless Jenny. She'd never had unprotected sex before, but being with Finn was somehow freeing, and it made her feel reckless.\n\n'No, we couldn't, he said firmly, immediately shutting her down. 'I'm determined to look after your best interests, although I'm nowhere near done with you yet.' Hearing her sigh of surrender, Finn dropped down onto his elbows and lowered his mouth into position. Accompanied by breathy sounds of blissful ecstasy, he nudged his tongue around her tight entrance, threatening to break through the dam of her juices. At last, with a long stroke, he sank into her body, dragging his tongue from ass to clit, savouring her abundant arousal.\n\n'Oh no!' she cried, her hands immediately clamping themselves into Finn's thick, dark hair. With the smallest movements, her hips worked in perfect synchronisation with his knowing mouth, driving Jenny forwards, beyond any pleasure point that she had ever known.\n\nOver time, Finn's mouth was joined by his hand. Sinking two thick fingers deep inside her wanton body, he curled them slightly to increase the pressure against her sensitive G-spot. As his hand set up a gentle rocking motion, so his mouth was left to kiss gently around the outskirts of her clit.\n\n'Oh God!' she shrieked, her body suddenly convulsing in response before relaxing, far too swiftly to be authentic.\n\n'Why do you insist on fighting me?' asked Finn gently, leaving his fingers firmly in place.\n\n'I'm not,' she stuttered.\n\n'You so are.'\n\n'I don't understand what you want from me,' she sighed.\n\n'I don't want anything from you, other than for you to enjoy yourself.'\n\n'I am,' she argued.\n\n'But you could enjoy yourself a whole lot more.' With a gentle caress, he stroked her stomach gently. As it fluttered under his delicate touch, logical thought became almost impossible.\n\n'You don't think I just orgasmed,' she stuttered.\n\n'I know you didn't,' he said simply.\n\n'But...I...'\n\n'Jenny,' he interrupted firmly. 'I give you my word that I will never lie to you. Even if I know what I have to tell you will be painful, you will only ever know the absolute truth from my lips. Please extend me the same courtesy.'\n\n'I'm sorry,' she murmured, breathing in sharply.\n\n'That's okay. There's no requirement to climax if you don't feel comfortable doing so, but I never want you to feel like you have to fake it. So long as you experience pleasure, I'll be happy.'\n\n'Nobody has ever noticed before,' she admitted sadly.\n\n'That you fake it?' he confirmed. Jenny could do no more than nod in response. Although Finn was aware of her head moving in the darkness, she was grateful he was unable to witness her deeply ashamed expression.\n\n'That should tell you something about my motives then,' Finn said simply. 'Have you ever orgasmed?'\n\n'Of course,' she replied.\n\n'Whilst with another person?' he added shrewdly. A long pause ensued; Jenny was torn between sharing the truth and hiding her shame.\n\n'Jenny?' he prompted kindly.\n\n'No,' she admitted at last with a shuddering sigh, more grateful than ever that the darkness of the room prevented eye contact from being made.\n\n'That's not surprising.'\n\n'Really?' she queried. Finn's response was certainly a shock to her.\n\n'No. I think I'm beginning to understand you. You need to have absolute trust in the person you're with and they need to be someone patient enough to explore exactly what you need. If you've never found that person, I guess it's inevitable that you won't climax.'\n\n'I've always found trusting to be extremely difficult,' she admitted, almost inaudibly.\n\n'I think everybody finds it difficult, to some extent,' he explained, his voice soothing away her anxiety. 'Loyalty and trust can't be captured in a vow or a scrap of paper. Not cheating is a choice. And I'm proud to say I have never cheated on a woman, and believe me, there have been plenty of opportunities.' Jenny nodded, knowing his words were genuine.\n\n'Now, I can't wave a magic wand and make you trust me,' he continued. 'But know that, at least from my perspective, this is not a one night stand. And I have no intention of going anywhere.' Jenny squeezed his arm gently in thanks, words failing her at that moment in time. \n\n'However, if you'll permit me to continue,' he smiled. 'I would love to help you explore exactly what you do need and enjoy in bed...may I?' There was a long pause.\n\n'You may,' she replied in quivering voice. \n\nDropping his mouth to her nipples, he nuzzled them, gently rotating the fingers that had remained stationary inside her. The unexpected movement caused her to clench tightly around the intrusion.\n\n'So when you bring yourself to orgasm,' he groaned, running his teeth along her skin. 'How do you get there?'\n\n'A vibrator,' she gasped, shyness of her admission evaporating with every new movement he made.\n\n'Mmmm,' he groaned, his cock hardening even further at the mere thought of her pleasuring herself. 'Of course you know the big difference between solo orgasms and those that a woman shares with a partner?' he asked.\n\n'No,' she panted, as he shuffled down her body to rest his lips lightly beside her clit.\n\n'Well, aside from their heightened intensity,' he murmured, breathing her in. 'The main difference is that you don't get to decide when to stop. And I intend to drive you through more orgasms than you would ever attempt by yourself.'\n\nWith exquisite pressure, Finn gently nudged his wide tongue along the length of her delicate clit, whilst continuing the rocking motion with his hand. Luxuriating in her gasping cries, he drove her onwards, setting up a perfect rhythm. This ensured the fingers probing against her G-spot worked in perfect synchronisation with the moment his tongue swept across the very top of her now-protruding clit, before making his way teasingly back down to the base once more.\n\n'Oh...my...GOD!' she exclaimed. 'What are you doing?'\n\n'Mmmm,' replied Finn, his mouth a little too busy to form words at that precise moment. Instead, he funnelled all of his attention into creating pleasure, confident that Jenny would forgive his temporary silence in the long run.\n\n'Fuck!' she gasped a little while later. It was accompanied with an animal cry pitched somewhere between ecstasy and despair, her body vibrating beneath him. 'Please...stop...' she gasped.\n\nReluctantly, Finn released her poor, imprisoned, throbbing clit from the firm grasp of his lips and tongue. However, his fingers which were now in a magic position he'd spent the last few minutes very carefully locating, remained held firmly in place.\n\n'Are you alright?' he murmured, tilting his head up to speak to her, his breath bouncing across her quivering tummy.\n\n'No... not... really,' she managed to groan between shallow gasps. \n\n'What I'm doing isn't nice?' he asked cautiously.\n\n'It's too nice, she admitted. 'Way too nice.'\n\n'There's no such thing,' he countered, with a deep rumble.\n\n'I beg to differ,' she squeaked, as he began to place teasing butterfly kisses along the length of her wide-open thighs. 'Say I can continue,' he demanded, his words bouncing over her obscenely swollen pussy. 'I beg you.'\n\n'Oh God,' she groaned in despair as her powerful internal muscles clamped down hard against his insistent fingers.\n\n'You're so close, sweetheart,' he murmured tenderly. 'Trust me. All you need to do is give yourself permission to be engulfed with pleasure.' Jenny inhaled a short shallow gasp, before exhaling very purposefully.\n\n'I give myself permission,' she all but squeaked.\n\n'That's my good girl,' he growled. 'By the way, just for your future reference,' he added with a smirk. 'I won't respond to the word \"No\". If you want me to stop, say \"Stop\".'\n\nLaying there in the dark, a trembling Jenny half expected Finn's mouth to immediately return to its previous mission. But that didn't happen. Instead, with gently stroking fingers, he slowly built her up into a desperate feeding frenzy of burning, uncontrollable need. With every movement of his hand, and every dirty desire he uttered, Jenny's only thought was him. That is, him and when he would return his very able mouth to her body that silently screamed for his attention. \n\nWith her hips grinding against his hand, it was at that moment she understood that resistance was futile. The man was clearly an expert. With a low groan, Jenny threw her head back into the soft pillow and submitted. Reading the signs to perfection, Finn chose that very second to return his warm, familiar mouth to her. Sucking her clit between his teeth, he set his gently lapping tongue to work, the unique compression like nothing she had ever known before.\n\nFinn revelled in the array of noises this gorgeous woman was making. He had no doubt she was close and he fully intended to keep up a steady rhythm until she finally crumpled beneath him. All of a sudden, Jenny's body spasmed and a bright white light flashed across her closed eyelids. It was so clear, so absolute, that it broke the moment. Perhaps the storm had returned and she had just observed a flash of lightening? Dragging her eyes open, she wanted to ensure that nothing had happened inside the room itself, but it was as dark as ever. As she closed her eyes once more and allowed the sensation to engulf her, the white lights returned, this time accompanied by an almost unbearable heat spreading outwards from her abdomen, consuming her entire being.\n\n'No!' she shrieked, as her head flew backwards. As the intensity built, Jenny sensed a terrifying oncoming loss of self-control. Trusting herself to Finn, she submitted, grabbing his head and pulling him towards her, rather than pushing him away.\n\n'Fuu-uuuccckkkk!' she bellowed into the room. As her muscles desperately began to contract in waves up and down Finn's pounding fingers, she could feel the arousal gushing from her body. Continuing to drag him closer, she ground herself against his mouth and hand defiantly, determined to milk every ounce of gratification from this amazingly skilled man. \n\nThe experience was unlike anything she had ever known, even with a vibrator. As Finn had perceptively predicted, with him in the driving seat, Jenny's pleasure lay absolutely within his control. She was physically unable to prevent herself from climaxing. It would be down to him to cease his actions, before she was able to stop. Little did she know, stopping was something Finn had no intention of doing right now. As he pushed her relentlessly onwards, Jenny skipped from one high to the next. In the end, she was barely able to distinguish between them as he held her in a perfect state of extended orgasm, maintaining impeccable pressure and control over her body until it was clear that she had no more to give. Only then did he release her engorged clit from between his lips and slide his fingers out of her quivering, exhausted body.\n\nPlayfully migrating his way up to Jenny's mouth, he pulled her satiated body against him before kissing her on and on.\n\n'You're simply incredible,' she groaned, when at last they broke apart. 'I'm desperate to make love to you.'\n\n'You know I still don't have protection with me,' he sighed, unable to think of anything he wanted more either. 'But after tonight, I will have.'\n\n'Oh?' replied Jenny, a huge grin spreading across her face. 'Is that right?'\n\n'That's right,' he confirmed. 'So, tell me how you want me tomorrow. Tender, rough, quick, slow, loving, dominant?' Jenny could almost feel herself swoon, as she imagined Finn in each of the scenarios being voiced by his wicked mouth. As it was, her hips had started to gently rotate against him, in reaction to his words.\n\n'Right now, I'm honestly not sure I care, so long as you're inside me.'\n\n'Great answer,' he grinned. 'Still want me to be gentle, as per your earlier request?'\n\n'No,' she admitted with a groan. 'Not really.'\n\n'You're sure?' he clarified, aware that Jenny was becoming increasingly turned on. It was only natural, he supposed, to want to experience multiple orgasms, over and over again. In Finn's opinion, women's bodies had evolved to handle continuous pleasure and he could think of no greater thrill than being permitted to test Jenny's stamina.\n\n'Like I said, I just want you inside me,' she gasped, as his hand drifted smoothly down her side, to stroke the naked flare of her waist, occasionally sweeping forwards to dance over her neatly trimmed pubic hair.\n\n'Any favourite positions?' he continued impishly, knowing full well that Jenny wasn't just aroused by touch, but through her vivid imagination and his playful words as well.\n\n'Ummm,' she replied, her body starting to tremble once more.\n\n'Do you want me to hold your wrists down as I plough myself into you?' he queried innocently.\n\n'Oh God!' she whimpered, the image of him doing so suddenly crystal clear in her mind.\n\n'Or perhaps you'd want to be on top and take control?' he suggested, as his hand stroked over her pussy and Jenny immediately raised her leg onto his hip, to allow him full access.\n\n'Behind me,' she gasped, as his fingers set to work once more. 'I'd love you behind me.'\n\n'Mmmm,' he groaned, the very mention of his favourite position making him sink his fingers swiftly inside her to the very hilt. 'That's a favourite for me too, although it will make me come too quickly, so maybe not until the end. Then I can really give you what a good girl like you deserves.'\n\n'And what's that?' she groaned, knowing exactly what he meant.",
        "'Here, let me give you a taster,' he offered and Finn once more helped Jenny ascend to that very peak of pleasure which became increasingly familiar to her, as their time in the dusty loft wore on.\n\n~~~~~~~~~~~~~~~\n\nDo let me know if you've enjoyed this - your votes and comments inspire me to write more. Cheers x"
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "england",
        "female orgasm",
        "fingering",
        "first time",
        "licking",
        "oral sex",
        "romantic",
        "teasing",
        "trapped"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/better-fate-than-never-ch-05"
}