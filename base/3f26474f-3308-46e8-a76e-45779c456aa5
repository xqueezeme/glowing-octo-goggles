{
    "title": "Ravenous Ch. 02",
    "pages": [
        "That Night \n\nKory skipped out on dinner with the family. She couldn't face him so soon after what happened since she'd never been a great actress. She wasn't sure how to sort out her feelings and so took some time to herself to try and figure it out. Jason would usually be the person she would go to talk to about this sort of thing, but she figured it would be really awkward and sort of embarrassing to talk to your friend about hooking up with his brother. \n\nAfter spending most of the night staring up at the ceiling as she reflected over everything, Kory came to the conclusion that on one hand, she felt horrible for what had happened because Kai was in a relationship. But on the other darker hand, she relished the fact that she finally had a taste of what she'd been craving for these past couple of years. The thing that worried her the most about her feelings on the situation was that, despite deep feelings of guilt, she really wanted it to happen again. \n\nShe stifled this evil desire as best as she could and decided to go on like nothing had ever happened. Obviously nothing else could happen since he was taken and it just wouldn't be right to let it go any further. With this mindset firmly in place, she was finally able to get some sleep. \n\nThe Beach \n\nHe watched her as she ran around, her smooth dark brown skin glistening from the sun beaming down mercilessly on the sandy beach the family currently occupied. They were playing an intense game of volleyball; the women on one side while the dads held court on the opposite side. The dads could never resist showing how manly they were when presented a challenge and thus now faced four women who were currently kicking their butts. \n\nKai moaned out softly under his breath as he watched Kory's thick ass jiggle under her tight, light green bathing suit bottoms every time she jumped to meet the ball. The material clung to her firm roundness like a second skin. He knew how that soft, juicy globe looked as he pounded into her from behind. He'd never seen a more beautiful sight. \n\n\"Hey, you're going to get caught if you keep staring so hard,\" his brother Jason warned, nudging him as he sat down in the lounge chair next to him. Jason knew all about Kai's obsession and had, in the past, encouraged Kai to make a move on at least a dozen different occasions, but knew it was no good, since Kai did what Kai wanted whenever he wanted to do it. \n\n\"Maybe I want to get caught.\" Kai replied lazily, not breaking his gaze from Kory's curvy little form. What he meant was that he couldn't care less if anyone knew how he felt about Kory now. He had avoided any sexual contact with Lauren since his time with Kory last afternoon, which was odd for him since he was known to have a very healthy appetite when it came to bedroom activities. Lauren seemed to blame it on jetlag taking its toll and promised him a little morning treat. He made sure to be up and dressed before her this morning. \n\n\"C'mon, man. You brought your girlfriend all the way here with you, the least you can do is show a little respect for her. After we're all back home, break up with her then. I don't want any drama on my vacation\", Jason complained, taking a sip from the cocktail- of -the -day he'd purchased from the cabana located a ways up the beach. He leisurely checked out the passersby behind his shades, eyeing a leggy local with dyed blonde hair as she walked by with a group of friends. She looked back as they passed and gave him a smirk and a little wink. He smirked back and took another sip of his drink; mentally taking note of the direction she was headed. \n\n\"Fuck you, Jason. I know what I'm doing\", Kai growled out, disliking the fact that Jason was right. He knew he should make sure Lauren had a good time while they were here since he had invited her after all, but he really didn't want to put any effort into keeping her happy while all he could do was think of being with Kory again. Not just physically either. \n\nThe fact that she had responded so enthusiastically to his...advances, if what he did was put into polite terms, told him that she was at least attracted to him also. This gave him hope of building something more with her like he'd always wanted to do, but with Lauren in the way, that wasn't likely to happen anytime soon. \n\n\"I'm going to get a drink\", he muttered out as he abruptly got up from his lounge chair, heading up the beach to the little cabana. He needed something to take the edge off his agitation. Maybe he should have let Lauren treat him to a little something this morning; he'd been on edge since last afternoon with Kory. Though their afternoon quickie had been hot as hell, it was only a little appetizer as far as he was concerned. He wanted time to explore every inch of her succulent body, finding all the hidden places that made her squeal with laughter and moan with delight. \n\n\"Fuck\", he groaned out loud to himself and ran a hand through his hair in agitation as he neared the cabana. It looked like he'd need something a little on the strong side if he was going to make it through the day without picturing Kory in various enticing positions as she took his cock like a champ. \n\nRinsing Off \n\nKory climbed from the ocean, running her hands through her short locks to push out the water gathered throughout the loose curls. She surreptitiously eyed the spot Kai had been sitting, but only took note of Jason lounging and sucking on a bright orange drink while looking down at his phone through his sunglasses. She shook her head and sighed in resignation. Jason was forever messing around on his phone. She wasn't surprised though; he was a bit of a player at their college, but she kept him in check whenever she thought he got out of line. \n\nShe looked over to see the parents and Lauren still going hard at the game. She had called it quits due to feeling a bit overheated from the sun and from Kai's hot gaze burning her all afternoon, and decided to take a dip in the ocean to cool off. She still felt a bit grimy and her eyes burned a bit from the salt water, so she headed up the beach toward the cabana and enclosed shower areas. \n\nAs she made her way towards the building, a few guys walking by whistled and gave out a few calls when she passed them, but she just smiled politely and continued on her way. She knew she looked good in her favorite sea foam green bikini and had worked hard to keep in shape. A few appreciative shout outs never hurt and just affirmed what she already knew. She smirked a bit to herself as she thought about typical guys, but then stopped suddenly as she saw who was at the bar of the cabana that was located just by the changing rooms. She would recognize that body anywhere. \n\nKai was facing away from her, his lean muscular back rippled slightly as he placed his hands on the bar, waiting for the server to bring him his order. She felt her heartbeat increase and she licked her suddenly dry lips as the thought, God, why did he have to look so damn delicious? , ran through her mind. His black silky hair flowed down in waves to caress his shoulders and he had a colorful tattoo that covered the left top half of his back; it was some kind of symbol she couldn't make out from this distance. The fact that he now had a tattoo somehow made him even hotter than he was to her before. \n\nShe felt her pussy clench as her eyes trailed down the rest of his sinewy somewhat tanned back, admiring what looked to be a firm, muscular ass cupped by a red pair of board shorts, which skimmed over muscular thighs and ended at the top of his knees. She hadn't gotten to explore much of him the first time they were together since it was a bit of a surprise and rushed, but she really wouldn't mind doing some exploring...no stop. She couldn't go there. He's taken, he's taken, he's taken, she repeated to herself as she continued past the bar quickly, keeping her head down as she made her way past preoccupied stalls and went around the corner to search the opposite side for an open changing room. \n\nKai thanked the bartender as he handed over his money then turned and walked a little ways out from under the overhead of the cabana to survey the beach as he tasted the drink that was coconut rum on the rocks. He grimaced as it went down, but followed it with another swig as he heard a scream followed by laughter. His head swung to the left, his eyes catching on a group of little children before his gaze moved past the playing children and then narrowed, settling on a very familiar chocolate backside encased in a tight, light green bikini disappearing around the corner. He threw back the rest of his drink, set the glass back on the bar and without another thought quickly followed after her. \n\nKory sighed in relief as she adjusted the temperature of the water in the stall to lukewarm. Even though it was hot outside she could never stand cold showers. She reached back and loosened the string tied at her back that was holding up her bikini top. She moaned softly as her breasts were set free, cupping them and lightly massaging them to relieve the feeling of being bound for so long and to wash away the sand that had gathered underneath. She took off her top completely, reaching over to hang it from a hook next to the door. She accidently missed and it plopped to the floor, halfway hanging out from under the door of the stall before she quickly bent to retrieve it. \n\nKai walked down the small path to the very end of the shower stalls, figuring she had to be in the last one at the end since there were only three on this side and the other two preoccupants had finished their showers and left when he had waited to see which stall she was in. The area was encased in foliage from trees that lined the path, with a stone stairway leading up the side of a hill for viewing the landscape. The staircase had a down for construction sign across it so the area was pretty much deserted. Kai saw a light green bikini top flop down from under the door of the last stall before it quickly disappeared back under the door. He smirked to himself before devising a plan. \n\nKory hung the top on the hook and then stripped from her bottoms, rinsing them of sand before hanging them with the top. She stepped fully under the spray and let it run over her body, wishing she had grabbed a little bar of soap at the dispenser she had passed on her way in, but then remembered she hadn't even grabbed her bag so she didn't have any clothes to change into, let alone money to buy anything. She shrugged to herself and figured she could just take a complete shower once they returned to the house. \n\nShe was just about to rinse her hair when she heard what sounded like a little kitten's meow. She stopped the water and listened intently. The little mewl came again and she unlatched the door to her stall to stick her head out to discover where the sound was coming from before a big tan hand shot into the little crack she had made as she opened the door and covered her hand. She let out a shriek and tried to pull the door closed, but a sandaled foot was wedged in the crack and the door was pried open enough so the large figure of a man could enter. She was about to scream again and attack, but then she saw who it was. \n\n\"Kai! You sick son of a bitch! What do you think you're doing, forcing your way into places you shouldn't be?\" Kory yelled at him, livid. Her heart was racing overtime, causing a slight ache in her chest and she felt the adrenaline still coursing through her body. She shoved him, though he didn't budge an inch. She reached over and turned off the water so it wouldn't hit her in the face as she prepared to ream Kai's ass into next week for being a weirdo. \n\nHe smirked as he took in her angry face when she turned back to face him; her eyes were narrowed into slits and her chest heaved slightly up and down as she breathed harder than usual. He began to answer her but the words got caught in his throat as he realized she was completely naked. The smirk slowly slipped from his face as, with the aide from the sun streaming in through the overhead skylight window, his gaze wondered from her angry glare, down her nose to caress her pink small lips, then over the length of her dainty neck and collarbone to a pair of medium sized, perky, dark chocolate tipped breasts. Due to her small waist, they looked even fuller and he unconsciously sucked his bottom lip into his mouth as he imagined sucking those beauties into his mouth over and over again. \n\nHis eyes trailed lower, over her firm, but slightly rounded belly to the little triangle of trimmed black hair nestled between her firm, thick legs and he felt his cock twitch as he remembered how tightly she had gripped his length as he plunged into her tight body like his life had depended on it. He groaned lowly in his throat and trailed his eyes back up her body to her face, which had taken on an apprehensive look mixed with a smidge of lust. \n\nKory watched as Kai's face went from a joking smirk, which was a first for her to witness though she had seen a similar look on Jason, to that look of intense hunger she was used to seeing as he had groaned in a way that had her heartbeat racing for a whole other reason now. She gasped out and backed up slowly, though there wasn't anywhere to go since the stall wasn't very wide. \"Umm Kai? Wh-what the hell?\" she stammered out as she began to move back to create some distance. Her back hit the wooded side wall and she gulped as Kai followed her, his muscles rippling slightly with every stride as he stalked forward until he was right in front of her, invading her personal space. \n\nKory's own breath hitched in her throat as her eyes roamed from the slight bulge she could already see forming in his swim trunks, to the happy trail that led from underneath his shorts, and up to his cut abdomen as well as his perfectly defined pecs and toned shoulders. Her eyes then caressed over the strong column of his neck before trailing over his succulent looking plump lips, the bottom slightly fuller than the top, before she made it to his piercing dark brown almond shaped eyes. Those eyes seemed to become even warmer as, without blinking, he stepped even closer, pressing his naked abdomen flush against hers. \n\nKory let out stuttering breaths and quivered at the full body contact as he lowered his head down to her ear, sensually licked his lips and then in a deep, but soft rumbling voice, \"I'm sorry baby. Did I scare you?'' Kory felt her pussy gush as his voice seemed to vibrate throughout her body and she unthinkingly grabbed onto his hips in reaction, inadvertently pulling him even closer to her body, bringing them into full contact. \n\nKai closed his eyes and breathed in deeply, taking in her scent mixed with the ocean before he nuzzled the side of her neck and then began to slowly trail light, open mouthed kisses from the shell of her ear down to the column of her neck while his hands came up and started to slowly caress her arms. Kory found herself closing her eyes as well and tilting her head to the side to give him better access. She moaned and jerked slightly in surprise when he lightly nipped the base where her neck met her shoulder. \"Let me make it up to you\", he murmured out, his lips rubbing against her neck, his warm breath caressing over her damp skin. \n\nKai trailed one hand up her arm and over the side of her shoulder and neck he wasn't kissing until he grasped the short locks of her hair, pulling her head back so she could look him in the eyes once again. Her eyes were hooded and he read mostly lust on her face instead of the unsure look she had worn a little bit earlier. He trailed his eyes lower until they rested on her cute bow shaped lips. True, they weren't the fullest lips he'd ever seen or experienced, but they were hers and for that fact alone they were the sexiest to him. \"Your so damn beautiful\", he groaned to her as he leaned in slowly, still gripping her hair to hold her in place as he lowered his head, capturing her soft little pillows in a deep kiss. \n\nKory felt so hot; Kai's sweet words were making her feel some kind of way that she didn't want to think about. She moaned into the kiss as Kai slightly tightened his grip on her hair and her mouth opened under his, allowing his tongue to slip inside. Kory moaned once again, the sound coming from deep inside as he sensuously stroked her tongue with his in the hottest kiss she could ever remember receiving. It felt like he was trying to make love to her mouth. Her hands trailed up his firm back from where they had rested on his hips. Feeling his muscles quiver and bunch as she trailed her hands around to his front to caress over his hard chest and shoulders before finally reaching into his hair, Kory finally grasped with both hands the silky strands she dreamed about sliding over her body in numerous recent fantasies. \n\nShe stood on her tip toes to try and press herself even closer into him as the kiss became deeper. He responded by using his free hand to grab a handful of her ass to assist her. He then let go of her hair to bring the other hand down, and used both to hoist her up, pressing her back firmly against the smooth wood wall while she wrapped her legs around his waist. He could feel how wet Kory's pussy was from how tightly she pressed herself against his abdomen. He was already rock hard, but wanted to continue kissing her because he couldn't get over the sweet taste of her mouth. \n\nKory couldn't seem to get enough of Kai. She couldn't decide if she wanted to keep her hands in his soft, silky hair or if she wanted to keep feeling his hard, but smooth chest and shoulders, so she alternated, trailing her hands through his hair and then caressed her way down to his shoulders, chest and arms. She moaned approvingly into their lip lock, loving the fact that not only was Kai hot as hell, but he also knew how to kiss in a way no man should. She couldn't think about anything except how good Kai tasted; like coconut and something else she couldn't place. \n\nThough she never wanted it to stop, she needed to breathe so, after a while, Kory ripped her mouth away from Kai's and leaned her head back against the wall while she gasped for breath. Kai, feeling no urgent need to breathe, started trailing kisses over her chin and down her neck, slowly making his way over her collarbone while nipping here and there as he went until he finally made it to the tops her soft perky breasts. He lifted her a bit higher against the wall and then, holding her firmly in place, he teasingly circled her puffy areola with the tip of his tongue before he suddenly sucked her nipple into his mouth, his tongue caressing and stroking until it became a hard little bud while his hands kneaded and caressed an ass cheek in each hand all the while. \n\nKory cooed out softly and arched even more against his body by tightening her thighs around his middle, moving her hips against his torso while holding his head to her sensitive chest. Every time he sucked on her nipple, she felt a responding little tug in her pussy. Kai trailed one of his hands from her ass to stroke it up and over her firm thigh to the front of her body, pushing his hand between their grinding bodies to get to the place that called to him the most. His fingers glided over her soft slick folds and she jerked, letting out a little cry as his thick middle finger found her entrance and pushed home. Her warm silky snatch sucked his digit in deep; clenching and grasping at it with a snug wet hold as he began a thrusting motion, switching his mouth to her other breast as he did so. \n\nKory rolled her hips into his hand, feeling deep pleasure course through her every time he pushed his invading digit back into her weeping pussy. On the next withdrawal, he added a second thick finger as well as began to caress her clit with his thumb and Kory arched her back against the wall, feeling full. \"Ahhhhh\" she trilled out and he pulled his head back to look at her; her breast escaping his mouth with a popping sound. ",
        "\"Shhh kitten. I know it feels good, but we gotta keep quiet\" he implored in a deep raspy voice and withdrew his fingers from Kory's tight grasping sheath. \n\n\"Nooo please. I'll be quiet!\" Kory practically begged, desperate to feel that full feeling again. Kai chuckled darkly, kissed her soft lips and then reached over to turn the water back on, testing its temperature and adjusting it to a warm setting since it would be falling over them in the small space. He hoped it would block out some of the sound since people would still be using the other two stalls on this side of the complex. \n\n\"We'll see about that\" Kai smirked as he set Kory down on her feet. She scoffed and was about to comment on his arrogance before Kai kneeled down in front of her, slightly spreading her legs. \n\n\"Lean against the wall more\", he ordered, using his big hand to push her abdomen back until she leaned her back completely against the wall with her pelvis thrust slightly forward. \n\n\"Ohh, Kai whaa...\" Kory's words trailed off as Kai grabbed her left leg, slung it over his shoulder and shoved his head straight in between her legs. He showed no mercy, instantly sucking her puffy, sensitized clit into his mouth. He caressed it with his tongue and teeth, using a slight tugging motion on it. \n\n\"AH-\" Kory bit off her loud cry by slapping her hand over her mouth. She clutched Kai's hair tightly and hung on for dear life. The water continued to partially rain down on them as he entered a finger into her tight soaking depths once again and she grinded into his face, feeling her orgasm approach like a tsunami. Without thought, Kory brought her other leg up so now she was straddling Kai's shoulders. Taking it in stride, he used his free hand to balance underneath her ass so she wouldn't fall to the ground. Once she was steady, he entered a second finger into play, speeding up his thrusting digits while giving her clit a tongue lashing; alternating in some deep sucking as well. \n\n\"Mmmm! I'm! UGHHHNNN!!\" Kory groaned out as she came, biting her lips to try and muffle her sounds as her legs tightened on his shoulders and she shoved Kai's face deeper into her snatch with both hands grasping his now wet hair. He definetly didn't seem to mind as he continued to lick at her, making sure to get everything she had to offer. He let out a few deep rumbles of satisfaction, loving the way she smelled and the way she tasted on his tongue. He sucked his fingers into his mouth as well, cleaning off any leftover juice he could find. \n\nKory finally stopped cumming and sagged against the wall, slowly sliding her legs off of Kai's shoulders. Once he made sure she could stand on her own, Kai stood to his feet and shoved his shorts down and kicked them off to the side. His cock was so swollen it was an angry red underneath dark tan skin and glistening with pre cum. It sprang up and slapped against his lower belly once free of its tight confines. \n\nKory's eyes widened. She didn't get a chance to see him in all his glory up close and personal before and what glory he possessed indeed. Kai was magnificent, just as she had remembered from accidently finding him in his studio so long ago. Better actually. Kory licked her lips as he wrapped his hand around the thick veiny shaft, stroking it, which caused more pre cum to leak from the angry red fat head. It was a few shades darker than the rest of his body, but looked perfectly in proportion with Kai's muscular build. His balls were big and hung down a bit from his shaft; they were also, in contrast, a darker shade than his body. \n\nKory felt her pussy clench in anticipation. She wanted a taste of that beast and now here was her chance. She looked into Kai's eyes with a smirk and beckoned him forward with one finger as she kneeled down, spreading her legs outward so he could get a glimpse of her still wet pussy. Any thought of resisting going any further long gone from her mind. \n\nKai growled and came forward, turned on even more from her wanton display. He knew he had to feel her body clutching onto his before he could let her leave this stall. The water hit his body, making the stroking he was doing to his shaft easier as his hand glided over himself. He stopped stroking and leaned both hands against the stall's wall above Kory once he was in front of her, slightly opening his legs so she could have unlimited access. The water only hit his back and side now, which provided cover so she would be able to see. \n\nKory reached out, and while grasping onto his shaft she looked up into his deep brown eyes. She bit down on her lower lip and began slowly stroking him up and down, tugging and twisting with her wet hand slightly whenever she reached his sensitive head. Kai groaned out approvingly, thrusting into her warm small hand as he maintained eye contact in the dim lighting. His whole body shuddered as Kory suddenly sucked his head into her mouth, laving his slit with her tongue to taste his pre-cum. \"Fuck!\" Kai gritted out between clenched teeth as he felt Kory's tight wet mouth envelope more of his throbbing member. \n\nKory moaned as she took him further into her mouth, the vibrations traveling through his shaft and making him shiver in pleasure. Kai tried to resist the urge to thrust deeper into her sucking mouth, but once he felt her tongue caress a particularly sensitive spot underneath his tip, he lost the battle and thrust hard until he felt his tip surge a ways down her throat. \n\nKory wasn't expecting his hard thrust and started coughing around his shaft, hurriedly tapping the side of his thigh to signal him to pull out. \"Shit! I'm sorry Kory. I didn't mean to thrust so hard\", Kai gasped out as he pulled himself out of her mouth. Kory coughed roughly a few more times while Kai helped her to stand, cradling her in his arms. \n\nShe slapped him hard on the shoulder once she caught her breath. \"Asshole!\" she croaked out once she caught her breath again. She wasn't truly angry just really annoyed. She knew it probably felt good for him to be in her mouth but he should learn to be patient if a girl was giving him such a treat. \n\nKai hugged her to him while caressing her back. \"I know, I know. I'm sorry babe. It felt so good being sucked into that sweet mouth of yours that I lost all control\", he cooed into her ear. Kory shivered, feeling his words of contrition caress her ears. She reached up, standing on her tip toes to wrap her arms around his shoulders and to rest her head against his chest. Once he seemed to relax and seemed to think she forgave him, she bit his left nipple. Hard. \n\n\"Ouch! Shit Kory what the hell! I said I was sorry!\" Kai groused out, pulling back slightly from Kory so he could rub and inspect his nipple in the dim lighting of the stall for damage. He was surprised to see that there wasn't any blood, just teeth marks. \n\n\"Aw, is poor Kai gonna cry like a little baby now because his little nipple hurts?\" Kory mocked Kai in a high pitched voice with a smug expression on her face and her arms folded like a boss. \"Maybe that will teach you how to treat a lady when she-\" was all Kory got out before she saw a dark look cross over Kai's face before he reached out in a shockingly fast move and yanked her around until she was facing the stall wall, using one hand to apply pressure onto her back, effectively pushing her front upper body into the stall wall, while at the same time, with the other hand, pulled her hips back into him so that his erection rested in between her buttocks. \n\n\"Oh, so now little Kory wants to pretend to be the boss, huh?\" Kai growled out from behind her bent over frame, pumping his hips back and forth slowly so that his cock dragged between her plump ass cheeks. He groaned out as the water poured down on them, letting his engorged flesh slide easily between her warm valley; creating a delicious friction that had tingles of pleasure shooting throughout his entire body. \n\nKory struggled against his ministrations at first, but then began to push back into his thrusts as one of Kai's hands caressed its way from her hip to bury itself between her legs. She cried out as two thick fingers immediately pushed deep into her still soaked pussy while his skilled thumb sought out her engorged clit. She placed both hands against the wall for leverage as she grinded hard against the invading digits and the throbbing hot flesh currently lodged between her ass cheeks, the feeling of another orgasm building faster than she thought it would. \n\n\"Uuhhnn, Kai! Don't stop!\" Kory gritted out between clenched teeth, leaning over even more until her face pressed against the wall to give Kai more ass as she reached down to cover his thrusting hand with one of her own. Just when she began to feel the hot rush that signaled an impending orgasm, Kai yanked his hand from beneath her own and out of her sopping pussy with a wet \"snicck\" sound. \n\n\"What the hell! Kai, why'd you stop?\" Kory demanded, the feeling of being denied completion making her temper snap. She tried to stand up right so she could turn and chew him out properly, but Kai acted quickly and wrapped one of his arms underneath one of hers so he effectively had her in a sort of sleeper hole, except instead of his arm being wrapped around her neck, it crossed over her chest. He then tightened the hold slightly, applying light pressure so she had to stand upright and was then pressed against his body completely, her back to his front. Kory's heart was racing. What the shit was Kai trying to do here, practice his martial arts or fuck? \n\n\"Apparently you haven't gotten the message kitten,\" Kai murmured with a deceptively silky voice into her ear. He walked them forward a bit with her still in a light but firm hold until she was once again pressed against the wall. \"I run the show here. When I'm ready for you to cum, I let you cum. You've already cum on my fingers, now I want you to cum all over my dick.\" He reached down with his free hand and spread her legs so he could stand between them. \n\nKory was speechless. Who in the hell did this guy think he was? She was all for a confident, assertive guy but Kai seemed to be into some BDSM type of shit. Before she could get a word out in protest, Kai had already lined himself up with the entrance of her slick hungry hole and was pushing up into her at an excruciatingly slow pace. \n\nKory felt every ridge and vein of Kai's thick cock as her body slowly got pried open. A low keening whine left her throat as she felt her tight, clenching channel stretch to accommodate Kai's thick girth until the point of burning. She grabbed onto the arm that Kai wrapped across her body and dug her nails in as the other hand reached up to grab onto the back of his neck. She felt Kai reach down with his free hand and start rubbing her clit in slow firm circles, making her channel quiver as pleasure and slight pain mixed in her core. She'd never felt so full in her life. She looked down at where they joined and even though she knew it was impossible, was slightly surprised to see that Kai's huge dick wasn't outlined in her stomach. \n\n\"Fuuuck baby. You feel even better than I remember.\" Kai rasped out, gritting his teeth from the feeling of Kory's silky walls wrapped around his throbbing member like a vise. He never wanted to leave her body and was content to let her adjust to his size as he continued to slowly rub her clit, knowing that usually eased the process for most of the other women he'd been with before Kory. Kory's had to be the tightest and wettest pussy he'd ever had the pleasure of being inside and he hoped she was the last. He couldn't imagine being truly satisfied with anyone else after this. While he waited, he continued caressing her swollen nub, leaving kisses on the side of her neck and shoulder. \n\nAfter a few minutes, Kory began to hesitantly thrust back against him, wanting him to move now that she was used to him filling up every available inch of space inside her body. Taking her cue, he tightened his hold on her before quickly jerking his hips down until only his tip was left inside of her before quickly thrusting back up into her. He grunted as Kory cried out, feeling him hit a sensitive spot inside her that sent a flash of pleasure shooting through her core. \"Nnnnmmm, yes. Oh! Baby! Please! Right there, please don't stop!\" Kory panted out, feeling hot spikes of pleasure spiking through her core as Kai began stroking her good, feeling her body throb and clench around his turgid flesh. \n\nKai continued his quick deep dicking motion, spurred on by Kory's passionate words and cries until gradually he was pounding up into her clenching hole. Squelching noises and the sound of flesh slapping against flesh filled the air along with his guttural moans and her sobbing gasps; the falling water a poor cover for what was happening inside the now steamy stall. \n\nHe was slamming up into her so hard now that every time he'd thrust upwards, Kory's feet literally left the floor. She grabbed onto the wall for balance with her free hand as Kai's hand now held her thigh in a tight grip, spreading it to the side to create an even tighter space. Kory blinking rapidly, holding on for dear life to the arm Kai still had wrapped tight around her body, needing an anchor as she felt her pussy clamp down hard onto his straining pounding flesh and then, without warning, the biggest gush of wetness left her body as an indescribable wave of pleasure jolted throughout her entire form. \n\n\"AHHH! UHHHNNN! AHAHHHH!!\" The screams of ecstasy ripped from Kory's throat without her volition as she flung her head back to rest against Kai's shoulder, her body spasming and jerking as she came all over Kai's cock. Neither one tried to silence her cries. \n\n\"Shii-it!\" Kai gritted out, feeling Kory's tight channel become even tighter and wetter, pulsing and constricting around his dick like it wanted to cut it off. He gave three more deep, pussy destroying thrusts before unloading what felt like a gallon of hot cum deep inside her quivering body. He groaned out deeply with every spurt of his cock, the sound filling the stall as his muscles tightly locked from the exquisite feeling. It felt like he'd never stop cumming as he held himself deep within Kory's body, her feet no longer touching the floor at all due to how hard he pressed himself into her. \n\nFinally after their bodies stopped twitching and Kai's muscles unlocked, they collapsed completely against the wall as one; both panting for breath. Kai was still buried deep inside of Kory's body, their combined fluids making where they were joined a sticky mess. When he could breathe a bit easier and move, he pulled his arm from underneath her body, slowly pulled out of her swollen pussy with a slight slurp and turned her around, hugging her to him and kissing her temple, their breaths slowly evening out as the now chilly water rained over them. \n\nKory wrapped her arms around Kai, closing her eyes as she rested her head against his damp chest and savored the feeling of being wrapped up in his arms. The way he held her reminded her of a dream she'd had once. In her dream, she was standing with a group of people at the base of a snowy mountain. It was cold and it was night and the atmosphere was cheerful. She had turned her head and realized she was in someone's arms; his tall form wrapped around her, making her feel safe and cherished. She felt that exact feeling with Kai at this moment and the thought had her jerking her eyes open and pushing back from his embrace. \n\n\"You alright kitten? I hope I wasn't too rough.\" Kai asked in concern, gazing down at her with a look she couldn't decipher as he reached out and caressed the side of her face. She slapped his hand down and watched the concern disappear to be replaced with confusion and slight shock. \n\n\"What the fuck Kai?!\" The words burst forth from Kory's mouth, filled with frustration and anger. \"Why do you keep doing this to me? I'm minding my own business, trying to enjoy vacation with our families and you come sniffing around me like a horny dog. Am I mistaken or don't you have a girlfriend?\" \n\nAs Kory ranted, the look of confusion on Kai's face melted into one of disbelief. \"Excuse me, Princess,\" Kai said, his voice holding a slightly offended yet amused tone, \" but I do believe it was you asking me, wait no, begging me to continue stroking you, licking you, tasting you and fucking you. So, please correct me if I'm wrong here, but I'm gonna go with the evidence and say you wanted this as much as I did.\" Kai finished, waiting for Kory to reply. He understood why she would be upset; he probably looked like the biggest asshole since here he was, fucking around with her twice now while he had a girlfriend. The problem was that he had just wanted to talk to her before they did anything again, but he became distracted from his purpose once he saw her naked. \n\n\"You know what? You've got a lot of nerve.\" Kory bit out, walking around him and into the weak spray of the now cold water. She let out a yelp as it hit her flesh and she quickly reached out to turn it off. Once that was done, she quickly grabbed up her bathing suit. As she pulled it on, she continued. \"Even if I did want this and since I'm a big girl I will admit, I definitely wanted this, I have no commitment to uphold to someone else. Therefore, if I want to fuck someone, I can fuck whomever I like. But my biggest mistake was letting that someone be you.\" \n\nKory had finished fixing her suit at this point and was about to turn and walk out of the stall with that last parting shot, but Kai grabbed her arm, forcing her to turn back to him with a startled gasp and look up into his now pissed off face. His eyes were so dark they looked completely black in the lighting of the shower stall. Looking deep into her eyes, Kai began to speak. \n\n\"Don't you ever say that you regret anything that we have done or will do together. Ever.\" Kai said in a deceptively controlled voice; Kory was actually scared for a minute. \"What we've done was not a mistake. It was inevitable. I've wanted you since we were teenagers and I still want you now. You don't get to fuck whomever you like, as you say, because I've had you. And now that I have, I will never stop. You can try and deny it all you want, but you want me as much as I want you. The proof is currently drying all over my dick as we speak.\" \n\nBy reflex, Kory's eyes shot down to his crotch, her face burning from Kai's crass words. Luckily, he'd already pulled up his swim shorts. She looked back up to see Kai's face had formed a smirk in reaction to her glance and she felt even more ashamed to have looked in the first place. His voice held less anger and had taken on a more silky tone. He let go of her arm and started to slowly caress it instead. \n\n\"So you see sweetheart. I'll only play this little game of yours for so long where you pretend you don't want me and try to avoid me, but then I eventually catch you and have you panting and screaming and cumming all over my dick for the whole world to hear. Lauren isn't a factor in what goes on between us. I haven't even touched Lauren since our first time together.\" At these words, Kory's eyebrows shot up in surprise. She didn't know if she believed him, but looking into his eyes, he looked dead serious. \n\n\"One more thing Kory,\" Kai said as he brought the hand caressing her arm up to cup the back of her head, applying slight pressure to tilt her head and bring her face closer to his as he said in a low tone, \"If you ever mention or even think about being with someone else again, you won't like the consequences.\" He pulled her in for a deep panty drenching kiss, his tongue slipping into her mouth and tangling with hers before he abruptly broke the kiss and walked out of the stall, leaving Kory panting, annoyed, confused and to Kory's everlasting displeasure, once again, aroused."
    ],
    "authorname": "jinrey",
    "tags": [
        "black woman",
        "asian man",
        "cheating",
        "loud sex",
        "outdoors",
        "want",
        "hunger",
        "beach",
        "giving in"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ravenous-ch-02"
}