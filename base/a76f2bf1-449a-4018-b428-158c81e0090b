{
    "title": "The Loophole - A Halloween Story",
    "pages": [
        "Couple's contract with The Fallen One comes due on Halloween.\n\nA thousand year old contract between an apparently middle-aged couple and The Fallen One has come due. But their manservant thinks he knows a way to escape the terms of the contract. \n\n= = = = = = = = = = = = = = = = = = = =\n\nWARNING! All of my writing is intended for adults over the age of 18 ONLY. Stories may contain strong or even extreme sexual content. All people and events depicted are fictional and any resemblance to persons living or dead is purely coincidental. Actions, situations, and responses are fictional ONLY and should not be attempted in real life.\n\nIf you are under the age or 18 or do not understand the difference between fantasy and reality or if you reside in any state, province, nation, or tribal territory that prohibits the reading of acts depicted in these stories, please stop reading immediately and move to somewhere that exists in the twenty-first century.\n\nArchiving and reposting of this story is permitted, but only if acknowledgment of copyright and statement of limitation of use is included with the article. This story is copyright (c) 2015 by The Technician ( Technician666@Gmail.Com. )\n\nIndividual readers may archive and/or print single copies of this story for personal, non-commercial use. Production of multiple copies of this story on paper, disk, or other fixed format is expressly forbidden.\n\n= = = = = = = = = = = = = = = = = = = =\n\n* * * * * * * * * * * * \n\nFred Whetherington held the stiff piece of parchment lightly in his hand as he drank his morning coffee. His wife, Willie, sat across the table from him sipping a glass of juice. His voice was calm as he said, \"This was on my pillow this morning when I awoke.\"\n\nShe smiled and replied lightly, \"He does like the dramatic touches, doesn't he?\"\n\nFred laughed slightly. \"At least he didn't do the full flash of fire and puff of smoke thing this time.\"\n\n\"Last time he did that,\" Willie bristled, \"it scorched the carpet. And it took forever to get the sulfur smell out of the house.\"\n\n\"He once told me that he doesn't like the smell of brimstone any more than we do,\" Fred added with another slight laugh, \"but he has to use it to keep up his image.\"\n\nA long pause followed before Fred continued. He held up the stiff paper that was still curled slightly from having been rolled up. The heavy wax of a broken seal hung on the back of the upper edge, pulling it slightly back. \"This is official notice that the term of our agreement is upon us. Do you want me to read it to you?\"\n\n\"He expects you to, doesn't he?\" was her only response.\n\n\"It says,\" he continued as he read the fancy script on the page in front of him, \"'Be it known by all concerned that on this first day of October in the twelve thousand and thirty-ninth year since the great fall and rise of myself, the term of one thousand earthly years having passed, I hereby invoke the completion clause to the contract which exists between myself and Frederick and Wilhelmina Whetherington.'\"\n\n\"Notice that he uses our current names and the modern calendar,\" Fred commented before continuing. \"It goes on, 'This constitutes thirty days notice that on or before midnight of October thirty-first of this year, also known as Halloween, the aforementioned couple's bodies and souls will be due and collectable. Said bodies and souls are to be brought to the place agreed upon through future missives and presented to me for transfer into Hell. I hereby swear, vow, and affirm that I have fulfilled my portion of the referenced contract and have provided wealth, life, and sustenance as well as the originally-specified unlimited sexual power and opportunity for the term of said contract and now claim the payment agreed upon at the signing of that document.'\"\n\nHe took a sip of his coffee. \"If he always spoke like that, it's no wonder that The Benevolent One kicked him out of the upper abode,\" he said.\n\n\"I guess no one has ever liked lawyers,\" Willie responded. \"Is there any way around it, honey?\"\n\nAfter another sip of coffee, Frederick replied, \"Sorry, I don't see any way out of it. It was nice while it lasted, but the agreement itself is very specific. After one thousand years, we are to be conducted into the depths of Hell.\"\n\n\"Maybe we can find an escape clause,\" she said. \"You, yourself, have been a lawyer many times, off and on, in the past thousand years. You know that no contract is unbreakable. There is always a way out.\"\n\n\"The contract isn't the main problem,\" he said. \"It never is. People think having an iron-clad contract will get it done, but do you realize how many times through the years, because of some insignificant loophole, I have been able to reverse things and weasel out of something while still legally fulfilling the exact wording of the contract.\"\n\n\"Ah yes,\" Willie answered with a laugh. \"I particularly liked that time that your construction company built a tunnel between that town's two defensive castles. The contract specifically said that it was to stretch from beneath the moat of the high castle to beneath the moat of the low castle.\"\n\nShe laughed again. \"It never said anything about actually going under the walls of either castle itself. The mayor and council were royally pissed about having to pay extra for all that support structure in the tunnels to safely go beneath the walls. But you showed them clearly that you had fulfilled the terms of the contract as they had written it, and that the additional construction was at their expense.\"\n\n\"But this isn't castle walls,\" Fred replied. \"This is hell, and that is precisely the problem. It is iron clad that we are to enter hell. And there is, unfortunately, no way out of hell, once you have entered,\"\n\n\"That isn't totally true, m'Lord,\" a deep voice said from behind them.\n\n\"Maxwell,\" Fred said cheerfully. \"I didn't hear you come in. How much did you overhear?\"\n\n\"Enough m'Lord,\" he answered. \"It sounds as if your contract with The Fallen One has come due. I assume that means that your contract with me and Marta will also come to an end.\"\n\n\"I'm afraid so,\" said Fred. \"But all you had to promise in return for a long and comfortable life was your faithful service to Willie and me, so it's a little different for you. After we're gone, you and Marta will begin aging normally once again and will eventually die. But The Fallen One won't have any claim on your souls.\"\n\n\"If you read your contract very carefully-- which I have-- \" Maxwell continued in his very precise way of speaking, \"you will see that he doesn't actually have any claim on your souls either.\"\n\n\"What do you mean?\" asked Wilhelmina \"The wording is specific and unbreakable. On Halloween, sometime before midnight, we are to enter Hell, and once we have entered, there is no return.\"\n\n\"Back when you first revealed your powers to me and Marta, m'Lord, Florence was the economic power of the world. We entered your service there. Do you not remember that very interesting writer by the name of Durante degli Alighieri whom you often invited to your parties?\"\n\nWhen both Fred and Willie looked back at him with confused faces, he added, \"He is better remembered by his nickname, 'Dante.'\"\n\n\"Ah yes,\" replied Fred. \"He was always going on and on about that book he was working on about his journey through Hell.\"\n\n\"Precisely, m'Lord,\" said Maxwell. \"His journey THROUGH hell.\"\n\n\"Dante went through hell and came out on the other side!\" both Fred and Willie shouted together. \"There has to be an escape clause.\"\n\n\"I'm sure The Fallen One has changed the wording since Dante let that little piece of information out of the bag, so to speak,\" Maxwell said, \"but your contract pre-dates him by almost four hundred years. The loophole is still in place. All you have to do is go through the proper levels of hell and emerge on the other side. When you do so, you will have fulfilled your contract to the letter, but will have escaped Hell, itself. I'm not sure if the wealth, life, and all of that will continue as before, but the worst case would be that we would all age normally after you complete the journey.\"\n\n\"One problem,\" Willie said dejectedly. \"One very big problem. Dante's book was fiction. He never really went to-- or through-- Hell.\"\n\n\"But he had stumbled onto the truth,\" Maxwell responded with a raised hand and a slightly raised voice. He pointed his extended finger at Willie as he continued, \"And  THAT is what is important. Do you not remember the night when HE showed up in the middle of one of your dinner parties in Venice.\"\n\n\"Ah yes,\" said Fred, \"half of the guests jumped into the canal when he suddenly appeared in a thunderous flash of light. The rest ran into the inner courtyard and barricaded themselves there until the next morning.\"\n\n\"Not all of them,\" corrected Maxwell. \"You and m'Lady just stood there looking very, very upset that your dinner party was ruined. And one guest ran screaming upstairs to the bedrooms seeking a place to hide. The Fallen One followed that guest upstairs and had a very heated discussion about the possible costs of revealing secrets of the nether realm.\"\n\nA heavily-accented voice interrupted his story with, \"... and I was upstairs getting the guest rooms ready at the time.\"\n\n\"Marta heard everything,\" Maxwell continued. \"The Fallen One was extremely upset that Dante had guessed a secret weakness of Hell-- or at least of The Fallen One's contracts. He held him up against the wall and snarled, 'I'm not sure how much you know and how much you have accidentally guessed, but I am going to explain to you EXACTLY how Hell works. And if your final book is anywhere close to that, or reveals more than you have already said, I will send my minions to tear you limb from limb and eat your flesh for as long as you still live...\" The Fallen One's eyes became pools of flame at this point as he said in an icy staccato, \"... and - I - can - make - you - live - FOREVER!'\"\n\nMarta again interrupted, \"Evidently the real escape path only exists on the night of the completion of the contract. Or maybe it is only open on that night each year when the veil between this world and the nether world is the thinnest. It doesn't matter which is correct because your contract happens to end on the night of the thinnest veil. So, in either case, the escape route will be open for you this Halloween night when your contract fulfills and you are to enter Hell.\"\n\nMaxwell interrupted his wife and said, almost showing excitement in his voice, \"The journey itself, like Dante's final book, is metaphoric, but the levels are not. Despite what Dante wrote, there are only seven-- like there are only seven deadly sins. All that is required is for a person to sequentially go through the seven levels of a particular sin between dark and midnight and they can escape Hell forever-- at least under the terms of your current contract. Since your contract dealt primarily with sexuality, all you have to do is go through-- or at least witness-- all seven levels of sexual sin before midnight.\"\n\n\"In other words,\" Willie chirped, \"we have to have one hell of a Halloween night in order to stay out of hell.\"\n\nShe laughed slightly and added, \"Even if it doesn't work, we'll go out with a bang.\"\n\nMaxwell coughed and said in a somewhat embarrassed tone of voice. \"Uh... yes m'Lady. That is one way of looking at it.\"\n\n\"But I've never heard of seven levels of sexual sin,\" said Fred. \"How will we know what to do, and in what order?\"\n\n\"We've done a little research over the years,\" said Marta. \"We've had the time. And we knew this day would eventually come.\"\n\n\"And?\" said Wilhelmina.\n\n\"And I will guide you through the seven levels of sexual sin,\" replied Maxwell. He was actually starting to sound more pompous than usual. \"It has to be done in front of at least a double-double coven of witnesses, so you need to invite forty-eight or more of your friends who will stay all the way through until midnight.\"\n\n\"Do they have to be invited?\" Willie asked. \"Friends might leave early. They sometimes do, you know. Perhaps street rabble would be better. If we pay someone to stay, they will remain until they get their money.\"\n\n\"Perhaps, m'Lady, you should do both,\" intoned Maxwell. \"Invite your friends, but make it worth their while to stay until the stroke of midnight. And invite some of the rabble of the street. We will also need some unwilling participants in our little journey through sexual hell... unless you want to use some of your friends for that.\"\n\n\"That might be interesting,\" laughed Willie, \"but I think it might be safer to use the street rabble.\"\n\n\"Then I believe it is time to prepare a little parchment of our own,\" Fred said slowly as he pushed back his chair and stood next to the table. As he began walking toward his den, he added, \"Maxwell, would you please help me prepare the invitations? We are going to invite thirty of our friends to a Halloween orgy they will never forget.\"\n\nHe laughed-- it was not a pleasant laugh. Then he said, \"And we can forget about rounding up street rabble. I think I can come up with another list of at least thirty enemies who pretend to be my friends whom I would love to have experience our evening. Fifteen couples who are friends and fifteen who are actually enemies would give us a total of sixty people. That should supply the needed numbers actually attending.\"\n\nThe invitations went out the next day. Fred and Willie were known for their lavish-- and decadent-- parties, so the invitations were eagerly received. As an incentive to stay for the whole evening, the invitations also announced that there were to be cash prizes given out at midnight. One thousand dollars would be given for the best costume, another thousand for the sexiest costume, another thousand for the sluttiest, and another thousand for the most evil. In addition, a ten thousand dollar door prize would be given to someone chosen at random from among the guests.\n\nIn small type beneath the announcement of the prizes it said, \"Certain guests may be called upon to participate in themed demonstrations throughout the evening. Participation is mandatory, but couples who participate will receive a minimum of an additional $5000 each.\" It then added in even smaller print, \"Acceptance of this invitation is acceptance of these terms.\"\n\nNo one ever bothers to read the small print, especially on an invitation.\n\nThirty invitations went out. It was hoped that at least twenty-four of the couples would accept the invitation, but within days, replies from all thirty indicated that they would attend.\n\n***\n\nHalloween arrived at last. The long driveway which led back to Whetherington villa was lined with Jack O'Lanterns, and a fake graveyard, complete with a mechanical hooded figure of death, decorated the secluded front lawn. Orange lights outlined all edges on the front of the house. Inside, spider webs festooned with black bows and shiny silk witch's hats stretched across the walls of the foyer. Ancient broomsticks, carved pumpkins and other symbols of Halloween were scattered throughout the house. A large bubbling caldron in the middle of the living room, whose steam poured out across the floor to form a low hanging mist throughout the house, completed the theme.\n\nThe evening was to begin with a sumptuous dinner so the guests began arriving around six for pre-dinner drinks and hors d'oeuvres. Fred and Willie greeted each guest at the door, and immediately after the guests walked past, dictated notes to their personal secretaries who were listening to the earwigs both hosts were wearing.\n\nFred especially liked the Adam and Eve costumes and they topped his best costume list. Adam was wearing a fig leaf loincloth with what appeared to be a snake peeking out from the front. Eve was also wearing leaves, but two large, red apples with very large stems appeared to hang from the front. \n\nWilhelmina, on the other hand, felt that the spider and the fly were the best. The makeup was perfect, both the spider and the fly's faces were horrific, and it was very difficult to tell whether the spider or the fly was the male of the couple. \"Maybe you will be able to tell if the spider eats the fly,\" Fred told her with a smirk. He then added, \"Or perhaps we will have to give out a double prize.\"\n\nBoth agreed that Marilyn Monroe, accompanied by Madonna, were the sexiest couple, but they disagreed as to which was the sexy slut and which was a sexy drag-queen. \"Are you sure that isn't Cindy and Clarice?\" Willie asked.\n\n\"No,\" answered Fred, \"Cindy is Cinderella and Clarice is the handsome prince.\"\n\n\"They do make a handsome couple, don't they?\" she replied.\n\n\"They always have,\" he answered. \"They always have.\" \n\nFred and Willie also agreed that the naughty nurse and horny doctor were the sluttiest. The doctor was wearing a hospital lab coat, open at the front with nothing under it but a very strategically placed OR mask. The nurse was wearing a skirt not much bigger than a belt, thigh-high white fishnet stockings with red crosses on the front, and an oversized, old-fashioned nurse's cap. Her tiny, but oddly shaped, thong was red with a white cross exactly over her clit. What made the tiny thong look strange was that it did not decrease in a V to just a G-string going between her legs. Instead, it remained an inch or two wide until it curved slightly up to meet the strings of the waistband. Two stethoscope heads acting as nipple covers completed the ensemble.\n\nBy 6:45, it appeared as if all of the guests had arrived and Fred and Willie had all but given up on selecting a most evil costume. Then the door opened and both of their mouths dropped wide open in shock. Someone made up to look exactly like The Fallen One walked through the door with a female companion made up to look like a she-devil-- and not just any she-devil. She was the spitting image of The Mother of Lilith.\n\n\"It's not him. It's not him,\" Fred hissed to Willie. \"He's not quite the right height and doesn't move right, so it's not him. But, damned, that makeup is exact. It has to be someone who has met him... someone with a huge set of brass balls.\"\n\n\"It's not her, either,\" Willie hissed back. \"She's smaller, and much more graceful than that, but the skin looks right. With as much as she is showing, it had to have been dyed red all over her body, and her yellow eyes have the same slits as The Mother.\"\n\nFred started to whisper something else to Willie, but stopped because the couple was now directly in front of them. The man took Fred's outstretched hand in greeting and said in a deep, resonant voice, \"Thank you for inviting me into your house. I go by many names, but tonight you may call me 'Scratch.'\"\n\nAt the same time, the woman took Willie's hand and murmured, \"And you may call me Lily.\"\n\nMaxwell and Marta were standing nearby holding trays of canape's and champagne for the arriving guests. Both looked over with raised eyebrows and strange expressions on their faces. Max shrugged his shoulders and formed his lips into an exaggerated frown. He then mouthed, \"I have no idea.\"\n\nWillie recovered first from the shock which had frozen them in place and said cheerily. \"Welcome to the greatest Halloween party ever. We will be dining shortly.\"\n\nShe grabbed a flute of champagne from the tray Marta was holding and offered it to The Mother, saying, \"We have opened the best of our wine cellar for tonight. After all, tomorrow may never come.\"\n\n\"Tomorrow always comes,\" the man dressed as The Fallen One said with a deep chuckle. \"The question is whether or not you will be there to see the sunrise.\"\n\n\"Yes,\" Fred answered dryly, \"that is always the question.\" Then after his own forced chuckle he added, \"... isn't it?\"\n\nAt exactly seven pm, Maxwell appeared at the edge of the room and announced in his typically precise manner, \"Dinner is served.\"",
        "As the Whetheringtons and their guests filed into the dining room, Max leaned close to Fred and said softly, \"I had to set two additional places. We have gatecrashers.\" He frowned, then tilting his head slightly upward, pointed his nose at The Fallen One and The Mother and said in his most pompous tone, \"I believe it is the couple who dares to impersonate your master and mistress, m'Lord.\"\n\n\"We will see when the masks come off at midnight, won't we?\" Fred answered.\n\n***\n\nThe seven-course meal was presented in European fashion with each course being cleared from the table before the next course was served. Dessert, the final course, was creme brulee. The rich, caramel-topped custard was one of Marta's specialties and both Fred and Willie's favorite dessert. Willie had especially requested it for tonight, \"just in case this doesn't work.\"\n\nAfter all had finished and the dishes were cleared, Fred invited everyone into the large front room for coffee and conversation. \"We have a few games that ought to make the evening interesting, enjoyable, and memorable,\" he said as he ushered people to the couches and chairs which had been arranged in a large ragged circle in the huge room. A warm fire crackled in the large fireplace in the corner along one of the outside walls. Heavy curtains blocked off the wide bay window area.\n\nAs the guests found their seats, Maxwell and Marta hurriedly brought two more chairs into the room. Max quietly huffed his displeasure at whomever the party crashers were, but no one except Willie heard or noticed him.\n\n\"You have just participated in and enjoyed a seven-course meal,\" Fred began. \"Now we will participate in-- and most of you will enjoy-- a seven-course evening of sexual pleasure.\"\n\nSeveral of the women blushed and quiet murmuring filled the room, but no one reacted in shock or attempted to leave. All present knew what type of parties Fred and Willie often gave and were expecting some sort of sexual content to the evening.\n\n\"And since,\" Fred continued, \"my majordomo, Maxwell, did such a superb job of directing us through our marvelous supper, he will now guide us through... The Seven Levels of Sexual Sin.\"\n\nSeveral of the women giggled slightly. One or two of the men laughed aloud and one exclaimed, \"All right!\"\n\n\"Monsieurs and Mademoiselles,\" Max began, \"all of you agreed to participate as needed in our festivities this evening.\" He chuckled deeply. \"For those of you who don't remember agreeing, I would advise that you read the small print on everything in the future.\"\n\nHe chuckled again. \"And for those of you who think you aren't willing to participate or you won't participate or that we can't make you participate, participants have already been selected. If you were selected, you have already been given a very expensive and very secret drug. There was a timed cocktail of sedatives and other drugs in some of your creme brulees that will kick in at the appropriate time.\" Another chuckle. \"So, if you suddenly feel very, very tired, know that you are perhaps part of the next course.\"\n\nHe chuckled slightly once again as he looked about the room \"Prince Charming and Cinderella,\" he asked, \"are you feeling a little tired... or perhaps like your inhibitions are fading away?\"\n\n\"We don't have any inhibitions to begin with,\" Clarice answered cheerily. \"As long as it doesn't involve screwing a man or a horse, bring it on.\"\n\nEveryone laughed as Clarice-- Prince Charming-- took Cinderella into his/her arms and gave her a loud passionate kiss.\n\nA witch in black satin and her partner warlock dressed in a matching robe made from purple satin suddenly stopped laughing as Max added, \"What about Merga and Cyric?\"\n\nCyric, the warlock in purple started to rise, but stumbled drunkenly into the center of the circle. \"Why the hell not?\" witch Merga said with a smile. \"It's not like I haven't screwed in public before. What do we need to do?\"\n\n\"Our selection from the first level of sexual sin is Voyeurism-- and its complimentary sin, Exhibitionism,\" Max explained. \"All you have to do is let us watch you have sex. You will be the exhibitionists, we will be the voyeurs.\"\n\n\"Come here, honey,\" Merga said with a lopsided smile. \"That drug has totally destroyed my inhibitions and I'm ready to exhibit some primo sex for these nice voyeurs.\" \n\nIn one swift motion she stripped off her witch's robe and stood naked in the center of the room. Cyric-- actually David, the accountant-- stripped off his robe. He was wearing a T-shirt and a pair of sports shorts beneath it. Merga-- actually Alice, David's wife, laughed and said, \"I guess I'm the exhibitionist in the family, aren't I?\" She gave another loopy smile and added with a slurred voice, \"But you won't pass up a chance to screw me, will you, honey?\"\n\nIn answer, Dave pulled off his T-shirt and slid down his shorts. The fact that he was wearing a pair of tighty-whities under the shorts brought a chorus of laughter, causing him to turn bright red as he slid them slowly to the floor.\n\nAlice pushed downward on his shoulders and he slowly went to his knees. She pressed her body against his and it looked, at first, like she was going to press her bushy cunt against his face. Instead she continued pressing against him until he fell over on his back with her straddling his chest. She then slid down slightly on his body and, after raising up a little, impaled herself on his now rigid prick. She began moaning and panting almost immediately as she rode him with forceful bounces that caused him to give out a distinct \"oomf\" each time she bottomed out against his pelvis.\n\nAs her cries continued to climb in volume and pitch, Willie leaned in close to Fred and whispered, \"What sort of secret drug did Marta put in those desserts?\"\n\nFred laughed softly and shielded his mouth as he whispered back, \"The secret is... there is no drug. But they don't know that.\"\n\nThey both laughed quietly as Alice screamed out her first orgasm.\n\nMeanwhile, Cindy and Clarice were naked and locked in a mutual scissors that allowed them to wildly grind their cunts together. Clarice encouraged Cindy with cries of \"That's it baby, harder, harder, harder!\" until they both began screaming out in orgasm. Cindy swung around in one sudden motion and embraced Clarice as she pressed their mouths together.\n\nSomeone in the crowd of voyeurs began a slow clap that grew in speed and volume until everyone stood with many shouting \"Bravo! Bravo!\"\n\nAs the applause began to die away, Fred motioned for everyone to be quiet and then said, \"There is one other rule to the evening that I really should explain at this time. That rule is simple. 'Once something comes off, it stays off.' That means masks, clothing, whatever.\"\n\n\"What about my glasses?\" asked Little Bo Peep. From the thickness of her lenses, everyone knew it was Beverly despite the excellence of the rest of her costume and makeup.\n\n\"Don't worry, Beverly,\" Fred replied. \"If it's something you need to function, then you can put it back on.\"\n\n\"I assume that includes my peg leg,\" laughed Captain Hook. \"The hook's fake, but I left my real prosthetic leg at home and don't want to be hopping around all night.\"\n\nFred joined his laughter, \"Yes, Gerald,\" he replied, \"that includes your peg leg.\"\n\n***\n\nMaxwell stepped into the center of the room and announced in his typically pompous voice, \"It is now time for the second course.\"\n\nHe nodded to Clarice and Cindy and then to David and Alice and said, \"You may return to your seats.\"\n\nAs they picked up their clothing and walked back to the sofas and chairs, Marta handed each of them a towel with instructions to put it under them before they sat down. After they were seated, Max swivelled his head back and forth several times stopping briefly to stare at this person or that.\n\n\"I believe it is time for a horny doctor and slutty nurse to show us the rest of their costumes,\" he said firmly. Donna Tucker and Wayne Forrester immediately turned deep red. They were both Fred and Willie's pick for the sluttiest costumes but, as usual, Maxwell knew the rest of the story better than anyone else in the room. After all, he spoke with the servants and maids of all of the other guests and knew secrets that only those who are deemed invisible by their masters and employers ever get to see.\n\nNeither Donna nor Wayne rose from their chairs. Everyone else in the room was now staring at them. Max again spoke, \"Give the drugs a minute to catch up,\" he said in a measured tone. \"Timing such things can be a very tricky process.\"\n\nHe walked over so that he was directly in front of the nurse and doctor and asked, \"Do you feel that joy juice flowing through your veins shredding your will and destroying your inhibitions?\"\n\nHe smiled a most disconcerting smile and then added, \"You have no choice. Leave what little clothing you have at your seats and come out into the center of the room.\"\n\nBoth Donna and Wayne stood up, stripped off their insignificant costumes, and walked slowly into the center of the room. Donna obviously had something in her vagina, because a small, T-handle was visible protruding just past her labia. It was most likely a chastity pear as that would match Dave's cock, which was enclosed in a chastity cage.\n\n\"The second level,\" intoned Max, \"is public humiliation. Our naughty nurse and horny doctor didn't wear their skimpy costumes just to win the most slutty prize tonight. They did so in the secret hope that something would go wrong with their car, or they would have an accident and have to walk around in public in those costumes. Similarly, they wore their chastity devices beneath their costumes in the perverse hope that they might be forced to publicly expose themselves and their perversions here at this party.\"\n\nHe paused for a moment and then continued, \"Sometimes hopes become reality. If you look carefully, you will see that Donna and Wayne also have almost matching anal plugs.\" He chuckled and said, \" Lean over and show the people your hidden jewelry.\" Both Donna and Wayne bent at the waist to reveal shiny butt plugs. \n\n\"Spread your cheeks and tell us what the plugs say,\" Max ordered.\n\nDonna answered for both of them and said, \"Mine says 'slut.' Dave's says 'slave.'\"\n\n\"You actually get turned on by being humiliated, don't you?\" he asked.\n\n\"Yes,\" Dave answered softly. Donna merely nodded her head.\n\n\"Your holes are all plugged,\" mused Max, \"so what could I possibly have you do for our sexual enjoyment?\"\n\nHe turned to the group and asked, \"What do you think?\"\n\n\"They're not all plugged!\" shouted someone. \"They still have an open mouth.\"\n\n\"Ah, yes,\" Max replied. \"And the most humiliating thing that a woman can do is to give a man a blow job in public.\"\n\nDonna turned a deeper shade of red, but at the same time she began to pant slowly.\n\n\"And would that not be even more embarrassing for a man?\"\n\nMax slowly turned around with his hand in the air pointing at the crowd with his finger. \"I guess we need two men to help us out.\" He stopped and extended his arm fully \"How about Thing 1 and Thing 2?\"\n\nTwo young men dressed in red shirts with big white circles on the front with the numbers one and two on them stood up. \"I know it will be a bit of an imposition to ask that one of you let yourself be sucked off by a woman, but I think the drugs will help you relax your standards a little.\"\n\n\"A blow job's a blow job,\" answered Thing 2. \"As long as she doesn't bite, I'm game.\"\n\n\"Keep your costumes on,\" Max instructed. \"It will add to their humiliation.\"\n\nThing 1 and Thing 2 walked into the center of the room, unzipped their pants, and pulled out their pricks. Thing 1 was already stiff. Thing 2 gave his cock a few quick strokes and it also stiffened.\n\n\"On your knees,\" Max ordered Donna and Wayne. \"... and crawl over to your proper positions.\"\n\nBoth dropped immediately to their knees and began crawling across the floor to where Thing 1 and Thing 2 were standing. As Wayne approached Thing 1, it was obvious that his own cock was trying to become erect but the rings and thorns of the chastity cage were preventing that.\n\n\"Beg for it,\" Max ordered, and Wayne said \"Thing 1, may I please suck your cock?\"\n\nDonna just looked up at Thing 2 and said, \"Please?\"\n\nThing 1 and Thing 2 answered in unison, \"Of course,\" and Wayne and Donna immediately pulled their cocks into their mouths.\n\nDonna was obviously an accomplished cocksucker. Wayne knew what he was doing, but he seemed distracted by the pain of his chastity cage. Amazingly, the humiliation of sucking Thing 1's cock in front of all of these people was turning him on so much that eventually his own cock no longer responded to the pain and swelled up to fill the constraints of the cock cage to the absolute limit. As he continued to suck and lick, Thing 1 began to thrust against his mouth and reached down to hold his head so that it would not bounce away from the thrusts.\n\nFinally, with a deep groan, Thing 1 spurted into Dave's mouth. As soon as that happened, Dave himself shuddered and a small amount of semen dripped from his trapped cock. His cock remained totally stiff, however, because the tight rings of the cage now trapped the blood in his engorged member.\n\nA moment later, Thing 2 also groaned and thrust one last time very deeply into Donna's mouth. She pumped her mouth up and down a few more times on Thing 2's cock and then fell over on her back and spread her legs so that she could frantically get herself off with her own hands.\n\nSomeone again began a slow clap, but Max held out his hands for silence and said solemnly, \"One does not applaud humiliation unless it adds to the humiliation.\" After that, everyone stared in silence as Wayne and Donna rose shakily to their feet and looked around the room.\n\n\"I'm afraid that cock cage is going to have to be cut off,\" Fred said, stepping into the center of the room with a large pair of wire cutters in his hand. \"Or we could just wait until gangrene sets in,\" he added with a laugh, \"and it will drop off all on its own.\"\n\nHe then turned Wayne so that they were more or less face to face and reached down with the wire cutters and began snipping the rings of the cock cage. \"Hold yourself out of the way,\" he ordered, \"or I might snip off something you don't want to lose.\"\n\nWayne groaned in added humiliation as he pulled his trapped prick away from the metal rings as best he could so Fred could cut them. A moment later he screamed out in pain as the cage fell away. It was not just the sharp barbs pulling out of his skin. The circulation to his penis was restored and with it came the pain that his body had been prevented from feeling while everything was cut off by his swollen member straining against the metal sheath.\n\n\"You know,\" said Fred rather matter-of-factly as Dave swayed in pain, \"a eunuch doesn't have to worry about chastity devises or the pain they sometimes cause.\" He laughed and added, \"And if you don't get a cock cage with an emergency release, you just might find that out first hand.\" He then slapped Wayne soundly on the ass and told him to go sit down.\n\n***\n\nMaxwell had once again come to the center of the room. \"The third level of sexual decadence,\" he began, \"goes beyond exhibitionism and humiliation... ... to pain.\"\n\nHe again turned slowly in place surveying the assembled party goers. \"I'm afraid, however,\" he continued, \"that we do not have even one matched pair of pain sluts with us tonight.\" He smiled, \"So that means we have to break up a couple or two for our demonstration.\"\n\nHe spun rather suddenly and pointed directly at Wonder Woman. \"How do you feel about pain, Diana King?\"\n\nShe gasped and Max laughed as he added, \"I do rather like the play on names with Diana Prince and Diana King. But while Diana Prince's alternate identity is Wonder Woman. Diana King's alternate identity is PainslutQueen1942, and your password is DCDPDW1942.\"\n\nDiana again gasped, this time grabbing at her throat with her hand. \" DC for DC Comics. DP for Diana Prince. DW for Diana White, her married name. And 1942 because that is the year that Wonder Woman premiered in DC comics.\"\n\n\"How... How... How could you know all that?\" she sputtered out.\n\n\"PainslutQueen1942 made way too many references to Wonder Woman comics in the chat rooms,\" Max explained smugly. \"It piqued the interest of a hacker friend of mine. He came to me after he had discovered your secret and asked me if I knew who you were.\"\n\nHe smiled once again and Diana slumped her shoulders and looked down at the ground. \"Now we all know who you really are, don't we?\"\n\nHe spun almost 180 degrees and pointed at a really bad Jack Sparrow impersonator. \"Just as we know who you really are, Trevor.\"\n\nThe pirate jumped back slightly as Max advanced on him. \"I've seen the costumes that you have created for others. They are wonderfully inventive and exquisitely constructed.\" He lifted up the felt vest that Trevor was wearing. \"This piece of crap, on the other hand, can have only one purpose, and that is to cause people to make fun of you or perhaps go even beyond that and maybe punch you or spank you.\"\n\nAt the word spank, Trevor began shaking his head and stammering \"No, no, it isn't anything like that.\"\n\n\"But the drugs will reveal the true you,\" replied Max. \"Why don't you just drop your pants to the floor, bend over this sofa, and let your lovely wife Mahaila whale away on your ass with this leather paddle.\"\n\nMax once again gave that false smile that somehow seemed very foreboding and continued, \"It's what you have wanted to do for a long time, isn't it? But you have never had the nerve to ask her to do it.\"\n\nTrevor continued to shake his head slowly back and forth, but at the same time inched his way over to the back of the couch and began unbuckling the belt of his costume. Once it was loose, he opened his pants and let them drop to his feet. He wasn't wearing anything under them.\n\n\"We will deal with Wonder Woman in just a minute,\" Max said, suddenly very cheerful in his speech. \"But first we have to decide how many swats our wretched imitation of Captain Jack Sparrow should receive from his lovely wife.\"\n\nAs he spoke he handed a black leather paddle to a rather muscular black woman who was dressed as an Amazon warrior. \"Trevor made that exquisite costume for you, didn't he?\" he asked.\n\n\"Yes,\" she replied softly. \"It was what I wanted.\"\n\n\"Then don't you think you should thank him by giving him what he really wants and needs?\" Max asked.\n\nIn response, she swung the paddle through a wide arc and a loud \"Crack\" echoed through the room. Trevor gasped... grunted... and then moaned as if someone had just taken his cock into their mouths.\n\n\"Not yet,\" Max said. \"We haven't decided how many strokes you should give him.\"\n\n\"Until he cums,\" the Amazon replied, \"... or begs me to stop.\"\n\nWith that she stood behind Trevor, and looking defiantly into Max's eyes, began delivering blow after blow to her husband's upturned ass. The crowd was counting softly as she repeatedly swung the paddle. At around ten strokes, a light sheen of perspiration appeared on her ebony skin. At around twenty strokes Trevor began grunting out \"Oh, oh, oh, oh\" with each impact of the shinny leather. On the thirty-ninth stroke, he suddenly yelled out a deep, long cry and stood up. His cock was erect and spurting cum over the top of the leather couch cushions.\n\n\"I think this is definitely going to change some things around our house,\" Mahaila said as she stood with the paddle at her side panting-- perhaps in exertion, perhaps in passion. \"I'm going to take him over in the corner, and he is now going to do a little something for me.\" She smiled as she slapped the leather against her hand. \"Only his paddle is a lot smaller and wetter and can get to just the right spots if he sticks it out far enough.\"",
        "As Mahaila pulled Trevor toward the far corner, Maxwell once again stepped into the center of the room. \"We haven't forgotten you, Diana,\" he began. \"And before you waste your time protesting that we are wrong about you, look down. Your body testifies against you.\"\n\nDiana looked down at her blue spandex costume. A darker blue splotch now decorated the area between her legs and the stars within the splotch were no longer shining white. \"Why don't you just take off those sopping wet bottoms-- or for that matter, why not take everything off except your bracelets and crown, and put yourself over the couch like Trevor did?\"\n\nWonder Woman slowly slid her panty-like bottoms to the ground, followed shortly thereafter by her red top and cape. That left her standing there in her crown, her bracelets, and her thigh-high red and white shiny leather boots. \"The couch,\" said Max and she slowly draped herself over the leather cushions.\n\n\"On second thought,\" he said, \"it might be better if you were just on your hands and knees in the middle of the room.\" Diana pushed herself up from the couch and followed Max's directions so that she was now on her hands and knees in the spot he indicated.\n\n\"We are going to see just how much of a pain slut you really are,\" he said. \"You can get up and go back to your partner at any time, but if you do so before you orgasm from the pain, you will not be able to cum in any fashion for the rest of the evening. The drugs you ingested will prevent that and I won't give you the antidote unless you stay with the pain all the way to the peak. Do you understand that?\"\n\n\"Yes,\" she answered. \"I cum from the pain or I don't get to cum at all for at least the rest of the night.\"\n\n\"You understand very well,\" Max said with a smile. Marta walked into the center of the room to join him for a moment. She was carrying a long, cane-like object which she handed to her husband and then returned to the edges of the crowd.\n\nMax lifted the cane and placed its tip-- or should I say tips-- against Wonder Woman's cunt and asshole. There was a slight click, a soft \"pffft\", and an extremely loud scream as the cattle prod discharged. Diana's body reflexively straightened from the jolt which passed through it and she launched herself forward several feet to where she lay panting and sobbing on the floor.\n\n\"Return to the position,\" Max ordered softly. As she pulled herself back up to her hands and knees and crawled back into place, he turned to the room and asked, \"How many do you think it will take for her to cum?\" He surveyed the crowd and added, \"Or do you think she will break first?\"\n\n\"She will take whatever you give her,\" said Superman, who had accompanied Wonder Woman to the party. \"She is that much into pain.\"\n\nSix more times the click, pffft, and scream were repeated. Each time it took just a little longer for her to pull herself back up to her hands and knees and return to her position. The last time, as she wobbled back to her place in front of Max, instead of finalizing her position by spreading her hands and knees to brace herself, she rolled over onto her back with her legs drawn up and her feet nearly against her ass. She then spread her knees widely.\n\n\"Are you sure you want to do it this way?\" Max asked.\n\nIn response, she spread her knees even further apart causing her cunt to gape slightly. Max muttered, \"So be it,\" and pressed the prod against her from the front. Now the two prongs were against her clit and the very back of her cunt opening. This time the click, pffft, was followed by an extremely loud and long yell that sounded like the scream of a tormented soul from the depths of hell.\n\nDiana took a gurgling intake of breath and continued to scream, but the tone of the scream changed. It was deeper, throatier, and broken into short gasps. Her back arched so greatly that her body came up off the ground except where her shoulders and heels were touching. She remained in that position quivering and screaming for several minutes until she collapsed back to the floor with a sigh.\n\nSeveral people in the crowd could be seen exchanging money. Evidently there had been a few side bets as to whether or not anyone could actually cum from such pain. Diana rose shakily to her feet and Marta handed her a small glass. \"It will taste like white wine,\" Marta murmured, \"but it will counteract any effects of the other drugs.\"\n\nDiana drained the small glass in one gulp and returned to Superman on one of the leather couches. Again, Marta handed her a towel to sit on.\n\n\"It's time for a short intermission to our activities,\" Max announced. \"Refill your drinks. Pick up some snacks. But do not leave. We will resume shortly.\n\n***\n\nAbout a half hour later, Maxwell called everyone back into the front room. The furniture had been slightly re-arranged so that it was now in a semi-circle facing the outer wall. Four raised lecterns or podia stood facing the room. A fifth was slightly to the side.\n\n\"For our next courses of sexual sin,\" Max explained, \"We are going to play a little game for some very high stakes.\" One of the helpers came into the room and handed something very heavy to Max, who grunted slightly as he stepped forward and placed it on a small pedestal slightly in front of where he was standing. When he stepped back so that the object could be seen, there was a loud gasp from the crowd.\n\n\"Yes,\" he said smugly, \"that is a standard 400 ounce bar of gold bullion.\" He chuckled, \"I'm sure that all of you know the current price of gold. It is down a little from its peak, but this shiny door stopper is still worth somewhere around a half a million dollars.\"\n\nHe looked around the crowd, stopping to make eye contact with several of the people who were staring greedily at the softly shining gold bar. \"Are any of you greedy enough to put yourself up against this gold bar in our little game?\"\n\nHe laughed then said, \"Of course you are. How silly of me to ask.\" He raised his hand with one finger extended like some ancient orator and asked, \"But are any of you greedy enough to put your spouse up against this 'Good Delivery Certified' bar of precious metal?\n\n\"What about you, Dracula? Are you willing to put Elvira at risk?\n\n\"And you, Klingon? Would you risk your Starfleet mate?\n\n\"Or perhaps you, Doctor Frankenstein. Are you willing to put up your bride?\n\n\"Perhaps Clyde would be willing to put Bonnie on the block for a chance to win this little bauble?\"\n\nThe room became very quiet. Max waited for a few more moments and said softly, \"I assure you that none of you have been given any drugs. The only drug acting on you right now is your own greed.\n\n\"The rules of the game are very simple. We will play four rounds. The loser of the first round experiences forced exhibition. The loser of the second round receives forced humiliation. The third round is, of course, forced pain. And the fourth round... well, we will discuss that when we get there. But at that point, the remaining player will have to decide if they are going to walk away with a consolation prize or risk everything going for even more than this bauble that you now see before you.\"\n\nMarta was standing next to the curtains which closed off the bay window area. She reached behind the edge of the curtains and they began slowly sliding open. \"If you are willing to take the risk,\" Max continued, \"then restrain your partner or spouse in one the devices in the bay window and go take your position behind the corresponding podium.\"\n\nFor several more moments, no one moved. Then the mad doctor stood up and pulled his wife to a standing position. \"Do I have to?\" she whined. \"You said I wouldn't have to do anything tonight. I only came because I wanted to see what that crazy old bastard was up to this time.\"\n\n\"I know what he is up to,\" Dr. Frankenstein-- actually Harold Bently, a local real estate developer-- said harshly. \"He is hoping that he can embarrass me or hurt me. That might happen, but I'm willing to take the risk. That gold bar is worth over $500,000 dollars.\"\n\n\"But I'm the one who might get stuck with a cattle prod or have to suck off one of these old farts,\" Gloria whined, shaking her heavy, lightning-bolt-streaked wig from side to side.\n\n\"You married me for my power and wealth,\" he shot back, \"remember, honey? And you've gotten real used to using that power and spending my money. Don't you think it's time that you earned some of it?\"\n\nWith that he dragged her over to the first platform, which was labeled with a large number 1. \"Into the stocks,\" he ordered. Gloria complied and he quickly closed the top over her head and hands.\n\n\"Actually,\" Maxwell said, now holding his hand up as if instructing a student, \"these are pillories, even though they are commonly called stocks. Technically, a stock is flat on the ground and holds a person's legs while they are seated on the ground. A pillory, on the other hand, holds a person bent over at the waist by trapping their hands and head.\"\n\n\"Whatever,\" snarled a rough-looking man in a pin-striped 1920's style suit as he locked his partner in crime into pillory number 2. Bonnie was actually Loraine Westcamp, and Clyde was her husband Tim. Tim was a local banker known for foreclosing on properties as soon as possible if a person began to have trouble making the payments. Loraine was known for controlling most of the upscale social activities in town and taking great joy in freezing out any woman whom she deemed to be unworthy.\n\nMr. Worf, actually Virgil Hampton, a physics teacher at the local high school, carefully placed his companion's head in pillory number 3. \"I'll do my best to win,\" he assured him. \"I know it's a risk, but we really could use the extra cash.\"\n\n\"I knew I shouldn't have worn a red shirt tonight,\" the Starfleet midshipman wailed in response. He was actually Lee Williams, a grade school teacher.\n\nMeanwhile, Dracula and Vampira continued a rather loud, hissing argument. Dracula-- actually an accountant named Bruce Stover-- and Vampira-- actually his significant other and co-owner of his accounting firm, Wendy Saperstein-- evidently reached agreement because she walked over and set her hands and head into Pillory number 4. \n\nSeveral heads swivelled in an attempt to get a good view down Vampira's cleavage, but as she leaned over it was very obvious that she had a thin blouse or some other kind of wrap beneath the deep V of the black dress. Actually all four of the \"spouses\" were very conservatively dressed for one of Fred's parties. It was rather obvious that none of them had intended to be participants in whatever it was that Maxwell and Fred had in mind.\n\n\"We are not going to rely on buzzers or any other gimmicks like that,\" Max began. \"This will not be a contest of luck and speed, but rather will be purely a competition of knowledge, wisdom, and cunning.\"\n\nHe paused to look each contestant squarely in the eyes and said, \"You have heard the rules. You know what you are risking. We are descending into non-consensual sex. There are many different choices at each level, but we are going to stick with our choices from the three consensual levels. That means non-consensual exhibition, non-consensual humiliation, and non-consensual pain. That is what you are risking.\"\n\nHe paused and took a deep breath before continuing quietly, \"You can still change your mind at this point. All you have to do is release your partner and go back to your chairs.\" His voice suddenly became loud and forceful, \"But once we begin, there is no backing out. You are in this contest until you win or until your partner pays the forfeit.\"\n\nMax again looked each man in the eyes and asked, \"Are you in or out?\"\n\n\"I'm in,\" responded each in turn.\n\n\"Then we begin,\" he said softly.\n\n***\n\n\"The first question is a moral and legal one,\" Max explained. \"Your company has built a substandard apartment building which collapsed when it caught fire from faulty wiring. Many people were killed in the inferno and you are being held personally and legally liable for the negligence. What do you do?\"\n\nMax reached under his podium and pulled out a large analog timer. It was set to five minutes. \"You have five minutes to come up with an appropriate solution,\" he said. \"After we have heard all solutions, the group will judge them from best to worst.\" He laughed and added, \"Remember, you don't have to have the best answer, you just have to NOT have the worst answer. The worst answer is the loser in this round.\"\n\nHe pressed a large button on the top of the timer and the second hand began its sweep around the clock face. All four men paused in thought for a few moments and then began writing furiously on the large whiteboards which would display their answer. Meanwhile, Marta and several other serving maids, passed through the crowd with drinks and snacks.\n\nA loud \"ding\" announced the end of the five minutes. \"Pens down,\" said Max. \"And be ready to display your answers.\"\n\nClyde turned over his slate and said in his tough-guy voice, \"Cop a plea and turn against your partners and the architect. Let them take most of the fall.\"\n\nPolite applause met this response and Tim Westlake frowned at the crowd, obviously displeased that his answer was not appreciated.\n\nLt. Worf snarled out his answer. \"Hire the best lawyers money can buy and tie it up in the courts until you die of old age.\"\n\nFrom the level of conversation buzzing in the room, it appeared as if the party goers were arguing about which of the attorneys they knew could actually do that.\n\nDr. Frankenstein turned over his slate and read his answer in a clipped, Austrian accent that wasn't a part of his character but was actually the way that Harold, whose last name was Von Schmidt, actually spoke. \"Convert your holdings into cash,\" he read, \"and flee to a country without extradition. With enough money in your hands, anywhere is home.\"\n\nThis answer was met with more enthusiastic applause than the first two.\n\nDracula chuckled softly. His laugh had an evil tone to it that brought shivers to many of those who heard it. \"I would not be in that position to begin with,\" his answer began. \"I would have formed a new company through one of my holding companies when I bid the contract to build the building. That way I would be at least two levels away from the charges and they wouldn't be able to come back against me personally.\"\n\nBruce Stover, who actually ran several different construction companies in the state in addition to his accounting firm, then finished with \"And to make sure, I would probably use a holding company headquartered in Mexico or some Caribbean nation so that the listing of ownership and board of directors would not be public record.\"\n\nHis answer was met with loud applause and shouts of \"Bravo, bravo, bravo!\"\n\n\"I think we have a winner,\" said Max. \"And more importantly, we have a loser.\" \n\nLoraine Westcamp began to struggle against the wooden stock which held her firmly in place. Meanwhile, Tim began slowly backing further into the corner of the room.\n\n\"Don't worry, Mr. Banker,\" Max intoned. \"Nothing will happen to you. The only pain you will experience will be to stand and watch your wife publicly humiliate herself by displaying for us her true inner slut.\"\n\nHe chuckled slightly, \"But then you usually just stand in the shadows and watch others struggle while you collect your fee, don't you? Your fee tonight, by the way-- the consolation prize for this round-- is twenty thousand dollars.\"\n\nTim smiled at the thought of the cash while his wife, Loraine, renewed her struggles in the pillory. Two of the black-clothed helpers pulled the stand holding the pillory-- and her-- into the center of the room. They then began cutting away at her clothing using electric scissors. They did not cut through the cloth so that the blouse or dress would immediately fall, but instead cut thin strips so that they slowly trimmed the cloth back revealing more and more of her body to the crowd.\n\n\"Slow and steady does it,\" said Maxwell in his measured tone. \"Let the suspense build as she displays more and more flesh like the common whore that she really is.\" \n\nAt his words, Loraine turned an even deeper shade of red. The phrase \"common whore,\" was one of the descriptors which she, herself, used when denying membership to other women at one of her exclusive clubs.\n\nWhen the old-fashioned blouse and skirt were lying in strips on the floor at her feet, the two helpers began attacking her undergarments. Soon she was standing bent over, naked and quivering, in front of people whom she normally viewed as her inferiors.\n\n\"Now we will see just how much of a slut you really are,\" boomed Max. Another platform was wheeled into the room. On it sat a Sybian female masturbation machine. Loraine immediately knew what it was because she had one secreted in her upstairs closet. She was sure that no one knew about it, but this unit was identical, even to exactly the same twin dildos mounted on the crest of the saddle-like machine.\n\nOf course, \"no one,\" in Loraine's mind would not include her personal maids and servants. She didn't ever think of them as people. They were nothings... nobodies... no ones... and those \"no ones\" knew all about her evenings riding her \"unicorn,\" as she called her machine.\n\n\"How long do you think this slut needs to ride the unicorn before she has her tenth orgasm?\" asked Max.\n\nLoraine's mouth was now fully agape. The fact that Max had called it a unicorn shocked her greatly. But ten orgasms! She had ridden her unicorn to five before, and perhaps six or seven if she was really carried away, but she would not be able to stand ten. And she would be doing this in front of her friends. They would know how truly wanton she was if she allowed herself to orgasm in front of them again and again and again.\n\nThe two helpers who had cut off her clothing stepped back and a different two released her from the pillory and guided her over to the platform with the Sybian mounted on it. They forced her to her knees straddling the machine and positioned her above the dildos. Then, after strapping her feet and shins firmly in place, they pushed her down on the twin plastic pricks.\n\nThe two dildos had been heavily lubricated and she slid relatively easily into place. A wide leather belt was strapped around her waist and four very strong elastic bands were attached from the belt to the edges of the platform and made taut. She could move slightly, but was held very firmly in place on the machine. Her arms were then crossed behind her back, wrists to elbows. and bound in place.\n\nAfter the two helpers stepped away, silence reigned for several moments as the guests watched her squirm with discomfort and try to look away from their gaze. Then a soft humming filled the room which grew louder and louder as the machine was brought up to its maximum settings. Those who were familiar with a Sybian knew that the forward dildo was now also rotating within her cunt stimulating her from within as much, or more so, than the vibrations were stimulating her clit and the tender flesh between her legs. The anal probe transmitted the vibrations of the machine deep inside her.\n\nNow soft moans and cries of \"No, please no, please make it stop,\" were starting to fill the room. The cries soon turned to gasps of \"Oh, oh, oh, oh,\" and then, as the vibrations continued, became unintelligible grunts and gasps which soon turned into a shrill, keening wail as Loraine was forced higher and higher toward her first orgasm.\n\nSuddenly, she threw back her head and ground her crotch frantically against the machine as she screamed out her first orgasm. Her mind wanted to drift in the afterglow of that orgasm, but as many of the women in the crowd knew, that was not possible on a running Sybian where one orgasm was just the gateway to a second and third and fourth until your body could stand no more.",
        "Loraine gasped and screamed as the rotating plastic penis massaged her cunt from the inside while the thundering vibrations pounded against her clit and slit and ass from below. Somehow, she was managing to rise high enough to almost pull off of the dildos, but her body did not have the strength hold her up for very long against the strong elastic. Her muscles soon fatigued, causing her to slam back down on the saddle as if pushed in place by a very forceful set of hands.\n\n\"Three,\" Max counted aloud as she was driven to her third orgasm. The crowd counted for him when it was obvious she had reached her fourth orgasm. By the time she reached her ninth forced orgasm, only a few in the crowd were even bothering to keep count.\n\n\"Ten,\" Max finally said. Then he added, \"Just turn it down a little and push her over into the corner and let her enjoy herself while we go on with our contest.\"\n\nEven in her lust-fogged state of mind, Loraine was able to comprehend what Max had said and tried to protest. \"No, please,\" her voice quivered out. She tried to say something else, but the ministrations of the machine overwhelmed her and she once again slid into the throes of orgasm.\n\n\"We will keep watch over her and shut things down if it looks like it might cause permanent damage,\" Max assured the guests. Loraine's husband, Tim, meanwhile was back in one of the couches, sitting quietly and sipping a drink as he watched his wife writhe in passion on that devilish machine.\n\n***\n\nMax listened to the soft moans and whimpers from the corner for a few moments and then turned his attention back to the remaining three contestants. \"The question this time is a business problem,\" he began. \"You are the owner and manager of a large construction company. You have had an understanding with the inspectors for years, but now there is a new inspector who won't look the other way. The local newspaper is also sniffing around trying to dig up a Pulitzer Prize winning expose'.\n\n\"There is no way that you can finish on time and satisfy this new building inspector. There are significant penalties for late completion and significant bonuses for early completion. The very existence of the company hinges on your actions. How do you handle the problem?\n\n\" ... Again, you have five minutes to formulate your answer.\"\n\nWhile soft music played and the three contestants wrote furiously, Marta and several others servants again moved among the guests with trays of drinks and after-diner snacks. At exactly five minutes, the timer chimed and Max yelled out, \"Pens down.\"\n\nAfter a moment of silence, he said, \"Let's start with our mighty Klingon warrior.\"\n\nLt. Worf-- Virgil the physics teacher-- suggested, \"Bribe him at whatever level it takes.\"\n\nSignificant murmuring resulted from that plan.\n\nBruce Stover-- Dracula-- turned over his slate which said, \"Have him taken care of so it looks like an accident.\"\n\nThat also created some significant murmuring, and there were also many people nodding their heads in agreement.\n\nDoctor Frankenstein had what was obviously the favorite plan. His slate said, \"Blackmail his wife and make her put pressure on her inspector husband to play along. That way, there's no direct connection or paper trail.\"\n\nWhen he turned over his white board, his plan was met with applause.\n\n\"I think we have a winner,\" Max said loudly. \"But who is our loser and why?\"\n\nAbraham Lincoln-- actually Judge McConnell-- stood and said, \"The Klingon's plan is the worst for the same reason that Frankenstein's plan is the best. Bribing the reluctant inspector directly creates a paper trail that a cop or reporter or some federal racketeering commission can bring into court, especially if he won't go along with you. You might get your building built on time, but you could be in prison before the tenants move in.\"\n\nCries of \"Exactly\" and \"Tell 'em judge\" filled the room.\n\n\"I'm sorry, Lee,\" Lt. Worf said through his tears.\n\n\"Don't fall apart, Worf,\" Max said. \"Our red-shirted midshipman will end up being humiliated, but you will also experience that humiliation. So, at least you will be together.\"\n\nHe clapped his hands sharply several times and two rather large men dressed entirely in black hurried into the room and pulled the pillory in which Lee was restrained into the center of the room. Meanwhile, two other similarly-dressed men pushed a platform into the room on which stood what appeared to be a very solid door frame.\n\n\"Mr Worf,\" Max instructed, \"would you please remove everything from the waist down and step into the restraining frame?\"\n\nVirgil did so and Max's helpers put restraint cuffs on his wrists and ankles and tied him tightly in place in the frame. The helpers then removed Lee's pants, shoes, and socks. He was not wearing underwear.\n\nMax turned to the crowd and asked, \"Have you ever noticed that partial nudity is often much more humiliating than complete nakedness?\"\n\nHe then went on to explain, \"Virgil and Lee have been together for years, but have stayed very firmly in the closet... or at least in the doorway. That means they would be very embarrassed and humiliated to be 'caught in the act,' so to speak. Tonight they will not only be caught in the act, we will watch from start to finish.\"\n\nOne of the helpers returned. He was wearing thin rubber gloves and was carrying a small jar of some sort. \"That is a lubricant and stimulant,\" Max explained. Once they are greased up, the drugs in the mixture will stimulate them so that they can't help themselves.\"\n\nThe helper dipped his gloved hand into the mixture and began rubbing it over Virgil's prick. There truly were drugs in the mixture and Worf's cock immediately sprang to full erection. Meanwhile, another of the helpers was rubbing the same mixture between Lee's asscheeks. Lee quickly also became turgidly erect.\n\nLee's face was beet red and he kept muttering, \"Oh God, Oh God,\" as he was forced to stare into the faces of the gathering.\n\nThen the helper guided the tip of Virgil's erect prick to Lee's rosebud and centered it on target. Both Lee and Virgil quivered with a combination of shame and sexual excitement. The sexual excitement soon won and Virgil pushed forward, impaling Lee, who was now chanting \"No, no, no, no.\"\n\nHis chant, however, soon changed to \"Yes, yes, Yes!\" as the sexual excitement overwhelmed him and he thrust back against Virgil's penetration.\n\nJust as Virgil began to shake and quiver in orgasm and started to erupt into Lee's ass, another of the helpers stepped forward with a broad band of some sort and bound Virgil firmly in place, deep in Lee's ass.\n\n\"We will leave them like that,\" Max said softly, \"as sort of a living statue of shame.\"\n\nMax then looked out upon the now lust-filled faces of the party goers and said, \"Although Lee and Virgil were definitely humiliated by their experience, I think that most of you would have been willing to change places with Virgil... or Lee in exchange for the forty thousand dollar consolation prize that they will receive.\"\n\n***\n\nMax watched as the platforms holding Lee and Virgil were rolled together over to the edge of the room near where Gloria was still writhing on her unicorn. He then slapped his hands together with a loud \"Clap!\" and said briskly, \"Time to move to our next level.\"\n\nHe once again surveyed the room and stated. \"Earlier this evening, five of you agreed to act as special judges during our competitions this evening.\" He paused and looked at several specific people before asking, \"Would the judges now please come forward?\"\n\nThree men and two women stepped to the front of the room. \"Dracula and Dr Frankenstein,\" Max began, \"you have five minutes to write out something that will convince these five upstanding judges to vote for you rather than your opponent. ... Starting now!\"\n\nAfter a few moments of thought, Dr. Frankenstein began writing. Dracula, meanwhile, stood smiling at the judges. Then he wrote quickly on his slate and set down his pen. At the end of five minutes, Max curtly said, \"Pens down.\"\n\nFrankenstein's answer was first. Harold Von Schmidt, explained how he and Gloria were valued members of the community and had helped many charitable causes and so on and so forth. When he had finished reading his answer, the five judges nodded appreciatively.\n\nThen it was Dracula's turn. His slate held nothing but a list of five words. They were, \"Sandburg; Lignite; SAT; LuAnn's; and William.\"\n\nSandburg was a reference to an unsolved fatal hit and run on Sandburg Road from over a decade ago. Lignite is a form of soft coal found in cheap gravel that can sometimes contaminate concrete and weaken it. Especially in beams exposed to the weather, lignite contamination can cause weakening and even result in building collapse. SAT, of course, referred to the Scholastic Aptitude Tests which were required for most college admissions. LuAnn's referred to LuAnn's Escort Services which often provided willing companions for some of the more well-to-do members of the community, and William referred to William Rath, a young and extremely handsome young man who owned a local landscaping business.\n\nEach of the five judges knew exactly what at least one of Bruce's five phrases meant and they each immediately stammered out, \"I vote for Dracula.\"\n\n\"That isn't fair!\" screamed Gloria. \"He's threatening them.\"\n\n\"I see no threats,\" answered Max. \"He is just suggesting that he might have information available should it be desired.\"\n\nGloria gasped. Her eyes were wide open and her mouth agape. Those were the exact words she had used to pressure Fred Whetherington into investing in one of her and Harold's rather shady real estate developments which had gone belly up and bankrupted several of the investors. Somehow, when one of Harold's great deals went sour, he never ended up losing money. Others, however, were never so lucky.\n\nWhen Gloria had encouraged Fred and Willie to invest in what they all could see was obviously a flawed plan, as part of her sales pitch, she hinted that she and Harold had access to some potentially damaging legal or financial information. She was very careful not to directly threaten Fred, but she did point out that she and Harold had \"information available should it be desired by the authorities.\"\n\nWhen Max used those words, both she and Harold suddenly knew that this was a set up and that they had been tricked. But they also knew that their best course of action was to endure whatever was to come and learn from the evening.\n\nGloria did not resist as two of the helpers removed her from the pillory and brought her to the center of the room. Two other helpers were bringing a restraint frame similar to what had been used to hold Virgil. She knew what was expected of her and stripped off her costume and stepped between the uprights of the frame. Surprise showed on her face when one of the helpers stopped her from removing her large wig. \"It stays on,\" he said simply.\n\nOnce she was standing in the proper place, the helpers attached wrist and ankle restraints and then pulled her taut. She was now spread in an obscene X within the frame with legs pulled tightly to the sides and arms stretched wide almost to their limits slightly above her head. She remained rather serene and composed until they began taping electrodes to her body. \n\nShe began to protest, \"No, No!, Please! Please! Anything but that!\" Her voice started out subdued, but rapidly rose in pitch and volume and she began thrashing against her bonds. \"Harold,\" she finally screamed out, \"you will PAY for this!\"\n\nShe and Harold had tried electro-sex a couple of times. Harold actually enjoyed it and sometimes taped TENS pads to his ass and nipples while they were making love. It would drive him into extreme orgasm if Gloria would reach out and turn the dials to maximum just as he reached climax. In fact, he had purchased a TENS unit with a remote so that all Gloria needed do was push a button on the remote and the unit would switch to the higher levels.\n\nGloria, on the other hand, hated electro-sex. But then again, she hated being shocked in any fashion. As a small girl, she would run crying to her parents if one of her brothers shuffled their feet across the carpet and zapped her on the arm with static electricity. Maybe her body was just more susceptible to electric shock.\n\nBy the time the nipple clamps were in place, Gloria was crying continuously. Fred approached and stood before her. \"I know your aversion to electricity,\" he said, \"so we are going to prepare you a little before we begin.\"\n\nOne of the helpers held up a rather large dildo with wires leading from it. \"This is a little larger than it would have to be if it were just an electrode,\" Fred explained. \"It is also a rather powerful vibrator that twists and turns within you in addition to vibrating.\"\n\nA different helper held up a smaller version of the same dildo. \"And this anal plug operates in much the same fashion,\" Fred added. As the two helpers pushed the dildos into place, Fred held up a leather belt that had a crotch strap. \"And to keep you from pushing them out,\" he continued, \"they will be held in place with this belt.\" One of the helpers reached out and took the belt from Fred and began tightening it in place around Gloria's waist. He then tightly cinched the crotch strap in place, firmly imbedding the dildos in her body.\n\nBefore returning to his seat, Fred said softly, \"The vibrators will kick in immediately and will be stimulating you well in advance of any possible electric shock.\" He then gave Gloria a quick smile and walked back to join Willie.\n\nMeanwhile, a small pedestal was brought out and set in front of Harold. \"You might remember something like this from when your children were little,\" Max explained. \"The four lights flash in a specific order and each color makes a specific sound. All you have to do is to press the colored switches in the same sequence. After five sequences, it switches to giving you only the sounds. For the next five tries, you have to remember which color goes with which sound.\"\n\nHe turned to the crowd and said, \"There will be three rounds for a total of 30 sequences.\"\n\nHe then looked over at Gloria and smiled pleasantly. She glared back at him. \"We left your lightning bolt wig in place because this will involve electricity.\"\n\n\"I had already figured that out,\" she spat back.\n\n\"If Harold gets the sequence exactly right,\" Max explained, \"nothing happens. But each key that he presses incorrectly will cause the TENS units attached to your body to discharge. The units will then immediately step up in strength and the next incorrect key in that sequence will be at a higher voltage. After the second incorrect touch, the nipple and...\"\n\nMax suddenly looked astonished and embarrassed. \"We forgot the clit clip ... \" he said in an almost shrill-sounding voice, \"... and I didn't notice.\"\n\nBy the time he had finished speaking, one of the helpers had run in and quickly attached a large electrode clip to Gloria's pleasure nub.\n\n\"As I was saying,\" Max continued in his normal deep voice. \"After the second incorrect touch, the nipple and clit clips come into play. After the third incorrect touch, the vaginal and anal electrodes kick in-- and they are set for much higher voltage.\"\n\nHe raised his hand into his most pompous pose and said, \"Should their be a fourth incorrect touch in a given sequence, the electrodes in the wrist and ankle restraints will activate and will pulse at high voltage for thirty seconds. That may never occur, but just in case, we are going to protect the carpet around your restraint frame.\"\n\nAll four helpers came back to the middle of the room carrying plastic tarps which they spread out around and over the platform. While they were doing so, Gloria alternated between glaring at Max, Fred, and her husband Harold.\n\n\"Shall we begin?\" said Max and the large disk on the platform in front of Harold slowly flashed red-red-green-green-blue-blue-yellow-yellow. With each color was a corresponding electronic note.\n\nGloria tensed as Max began pushing buttons. The machine made a clicking noise as it went dark awaiting the next press of a key. Max hesitated, but then began pressing keys. Gloria gave a deep sigh as he hit the final yellow with no mistakes. Almost immediately, the device played a new sequence, red-blue-red-green-red-yellow-blue-green-blue-yellow.\n\nGloria's eyes widened as she realized that it had added two steps to the sequence. It has also sped up slightly. She would have easily been able to match that pattern, but she knew that Harold would not. She could only hope he got most of them right.\n\nHe didn't.\n\nThere were eight steps in the sequence. Max got the first five of them right, but then repeated color five instead of moving on to color six. That meant that steps six, seven, and eight were wrong.\n\nAt step six, Gloria gasped slightly as a relatively light shock tingled her thighs, buttocks, and tummy. At step seven, she yelped as a somewhat more intense shock hit the same areas and her nipples and clit. At step eight, she screamed as a significant shock tightened the muscles of her legs, bit at her clit and nipples, and tore through her pelvis between the rectal and vaginal electrodes.\n\nSweat was beginning to form on her body as the lights flashed once again and the beeps filled the room. This time there were twelve steps to the sequence. It was the same beginning sequence as before, red-blue-red-green-red-yellow-blue-green-blue-yellow, but this time it added green-yellow at the end.\n\nHarold noticed that it was the same and managed to get the sequence right all the way to step eleven. He pressed yellow-green for the final two steps rather than green-yellow. \n\nGloria yelped as the first shock tingled her muscles and the second bit at her nipples and clit.\n\nThe next sequence again remained the same, but added red-blue at the end. Gloria could always spot patterns and recognized that the sequences weren't random, but rather were the mix of potential combinations of colors on the device. If she were pushing the buttons, she would probably be able to get every sequence correct. Unfortunately, it was Harold, not Gloria, who was playing the game.\n\nThis time there were six incorrect steps. Harold evidently recognized the pattern, but kept skipping or repeating steps, and once out of sequence, the remaining steps were wrong. Gloria yelped, but not quite as loudly, as the nipple and clit clamps kicked in and she grunted when the internal electrodes forced the muscles of her pelvis to convulse. When the wrist and ankle electrodes were activated, however, Gloria screamed-- or at least she attempted to. All that came out was a strangled gurgle as her body shook and bounced with the electrical pulses that were flowing through it.\n\nAs Max had feared, Gloria lost control of her bladder and sprayed urine onto the protective covers which had been placed on the floor beneath her. When Max finished putting in his incorrect sequence, Gloria continued to buck and writhe for an additional thirty seconds until the units timed out.\n\n\"Fortunately for you,\" Max interjected, \"the thirty-second time for the restraint electrodes is restarted each time they are activated. Otherwise you would have been in for several minutes of their pulses.\"\n\nGloria did not look as if she felt fortunate. She was panting heavily and trying to re-compose herself as the device kicked into a new sequence. Somehow, this time, Max was able to enter all fourteen steps correctly. Gloria sighed very deeply in relief while murmuring spread through the disappointed crowd. \n\nShe gasped, however, as the next sequence started. The sequence was identical except it skipped the first color. If Max didn't notice that, he would get all sixteen steps wrong.\n\nHe did... get all sixteen steps wrong.",
        "This time, Gloria not only lost control of her bladder and expelled what little urine was left in her system, she also lost control of her bowels. Despite the leather belt designed to hold it in place, she expelled the anal electrode along with a significant amount of fecal matter.\n\n\"Let's get her cleaned up a little before the next step, shall we?\" Max said as the helpers hurried in with soapy water and towels. A few moments later Gloria was clean and again properly wired.\n\n\"This time it will just be sounds,\" Max said. Gloria moaned. She knew Harold was as tone deaf as a mule and sang like one. There was no way that he could get the sequences right.\n\nBut he did.\n\nActually, he couldn't tell one tone from another, but he just repeated the sequences that had flashed before him in the first five steps. That worked for the first four tone steps, but Harold had not noticed what was different about the final sequence and once again he got all sixteen steps wrong.\n\nGloria bucked and screamed as the pulses tore through her, but there was nothing left in her bladder or bowels, so at least this time she did not shit herself in public.\n\n\"Time for round two,\" announced Max and the diabolical game piece once again flashed eight colors. It was moving through the same combinations of colors, except this time it started with green-red rather than red-blue. Harold was a fast learner and he got the sequence right. He also got the ten, twelve, and fourteen step sequences correct. But once again, he was so fixated on the pattern that he didn't realize that the first step had been left out and got all sixteen steps wrong in the fifth sequence.\n\nBetween grunts and screams, Gloria managed to choke out, \"Harold, you stupid son of a bitch, watch the damn colors.\"\n\nHarold mumbled a soft, \"Sorry,\" but Fred could also see that he was suppressing a smile. Perhaps Harold wasn't as stupid as his gold-digging wife thought him to be.\n\nThe tones again mimicked the colors and again Harold got the first four sequences correct, but missed all sixteen steps of the final sequence. By the time the pulses timed out, Gloria was now hanging limp in her restraints.\n\n\"One final round,\" Max announced.\n\nGloria raised her head. If she were running this game, the third round would employ a totally different method of setting up the sequences so that the player would be overwhelmed and unable to get any of the colors or tones correct.\n\nBut she wasn't running the game, and the only difference was that the sequences started with blue-red. Again Harold got the first four right and totally messed up the fifth sequence. When the thirty-second timer for the restraint pulses finally switched off, Gloria was muttering softly over and over, \"Stupid son of a bitch, stupid son of a bitch, stupid son of a bitch.\"\n\nThe whole process repeated itself the final time through the tones. This time, during the fifth sequence, Gloria barely responded even to the heavy pulses that tore through her body from wrist to ankle. As the helpers removed her from her restraints, Max said, \"I am sure that she will recover shortly, but just to be safe we are going to take her into one of the other rooms and have our standby doctor check her out.\"\n\nHe looked over at Harold and added, \"It might help her to recover if you told her that your consolation prize is eighty thousand dollars.\"\n\nHarold did not answer, but returned a broad smile. As the helpers carried the practically unconscious Gloria out of the room, he followed a little ways behind.\n\n***\n\nAfter they had left the room, Maxwell turned and surveyed the crowd. \"Our first level of sexual sin was exhibitionism and voyeurism,\" he said. \"Our second was consensual humiliation. The third was consensual pain. The fourth, non-consensual public display and voyeurism of that non-consensual exhibition. The fifth was non-consensual public humiliation. And the sixth was non-consensual sexual pain.\"\n\nHe slowly scanned the crowd, looking almost everyone present directly in the eyes for just a fleeting moment. \"What then,\" he continued, \"could possibly be our seventh level of sexual sin and depravity?\"\n\nMax paused. Several persons started to raise their hands or say something, but then fell back into silence. \"There are several to choose from,\" he said, \"but which would we choose to demonstrate in public?\" Max laughed. \"Some of the deepest sexual sins must never see the light of day.\"\n\nHe held his hand to his jaw as if pondering some great question. \"Which sin is perverse enough to be at the seventh level, yet at the same time, tame enough to present at a party in front of dozens of witnesses?\"\n\nHe turned around slowly scanning the faces of the partygoers. Then he continued, \"It is so obvious, and yet so elusive. When I announce it, you will all think... or say... 'Of course!' But until I speak it, you will keep what it is carefully locked away in the back of your mind with all your deepest and darkest secrets for fear that what you are thinking may even be beyond the seventh level of sexual sin.\"\n\nHe turned to face Elvira, still held captive in her pillory, and then turned his gaze toward Dracula, who stood alone at the four podia. \"The seventh level of sexual sin and depravity which we have chosen for this evening,\" he began slowly, \"is sexual submission and slavery... and of course, its companion sin of owning and using such submissive slaves.\"\n\nPointing directly at Dracula, he said loudly, \"That is what we are playing for in this round. If you lose, you and Wendy become Fred and Willie's sexual slaves for a period of one year.\"\n\nHe paused for effect and then said, \"You could quit now and walk away with a consolation prize of $160,000 dollars. \n\n\"Or,\" Max continued, \"we could up the stakes-- and the risk-- and entice you to stay in the game.\"\n\nThe four helpers walked slowly into the room. It was obvious they were each carrying something very heavy. They walked to where the bar of gold bullion was sitting and each placed an identical bar alongside it. There were now five 400 ounce bars of gold bullion on the small platform.\n\n\"A consolation price of $160,000 dollars,\" Max said. \"Or one year against one bar of bullion. ... Or the risk of permanent slavery against all five bars. Those five bars, at current market price, are worth somewhere north of three million dollars.\"\n\nBruce looked over at his partner and then back at Max. \"One year or a lifetime really makes little difference,\" he said smugly. \"I hear that you have a contract due and payable tonight that makes all of this moot.\"\n\n\"I guess I now know who invited our gate crashers and supplied them with the proper costumes,\" Fred said from somewhere in the crowd. Most of the party goers looked around totally confused. Bruce and Wendy, as well as one other couple in the crowd looked over directly to where the false Fallen One and imitation Mother of Lilith sat.\n\n\"Perhaps,\" said Dracula with a smile that showed his artificial fangs. He shrugged his shoulders. \"Perhaps not. But in any case, we accept your terms. A lifetime of sexual slavery against five Good Delivery Certified bars of gold bullion.\"\n\nMax walked back to his podium and picked up an envelope. \"Our final question is in this envelope. All you need do to win the five bars of gold bullion is to answer it truthfully and correctly.\" He slapped the envelope against his palm and added, \"And there is no time limit.\"\n\nMax then tore open the envelope and removed a single sheet of ivory paper. \"The question is this, 'Is it possible for a person to escape permanent captivity in hell at the end of the term of their contract with the Fallen One?'\"\n\n\"I don't need even the five minutes to answer that one,\" Bruce snorted. \"The answer is 'No!' Contracts with the Fallen One are iron clad. They are absolute and inescapable.\"\n\n\"I believe you... ... are wrong,\" came a deep voice from the edge of the room. All eyes turned to the source of the voice. The Fallen One and The Mother were standing next to the couch on which they had been seated.\n\n\"And I suppose you are some kind of authority on contracts with the Fallen One,\" said Bruce in his most sarcastic tone.\n\n\"No,\" the voice answered, \"I am not SOME authority on contracts with the Fallen One. I am THE authority because I AM the Fallen One.\"\n\nBruce snorted in laughter, but those sitting closest to the standing couple were beginning to back away in fear. This was because they were close enough to see that it was the red-skinned woman, not the man who was speaking in such a deep voice.\n\nThe couple walked to the center of the room. The person in the Fallen One costume said-- in a rather high pitched voice for a man-- \"We were going to wait until midnight to unmask, but it appears we have to do so a bit early.\" She then began to melt. So did The Fallen One.\n\nMelting is the only word which describes what was happening. Their makeup... or skin... or costume... or whatever it was... began to slough off. But it didn't drip onto the floor, instead it congealed around their body in a slightly different form. Slowly the imitation Fallen One transformed into the true Mother of Lilith and the imitation Mother transformed into the true Fallen One.\n\n\"Had Frederick asked if it were possible for YOU to escape permanent captivity in hell,\" the deep voice continued, \"then the answer would have definitely been 'No.'\"\n\nHe laughed. It was a deep, resonant laugh that nearly froze the blood in the veins of the people who heard it. \"But Fred has an older contract-- one of the last with a certain weakness in its language. Under the terms of that contract, all he and Willie had to do was enter into hell... enter, not stay there. If the circumstances were just right, they could enter and go THROUGH hell without staying permanently.\n\n\"And their faithful retainers, Maxwell and Marta, uncovered a way to symbolically do that by descending through the seven levels of sexual sin on this night in which their contract was due. They did that. They have gone through Hell and come out on the other side. That makes them the big winners for this evening.\"\n\nHe laughed a very deep and even more frightening laugh before pointing his finger directly at Dracula / Bruce and thundering, \"And you... You lose!\"\n\nHe laughed once again. This time a flash of heat pulsed through the room and a faint trace of sulfur became present in the air. He turned toward Fred and Willie. \"As Maxwell had surmised, this little stunt does fulfill the terms of your contract. You are released from the completion payment. And because the contract is technically fulfilled, all the benefits offered under the contract remain in place.\"\n\nThe Fallen One and The Mother walked slowly to the front of the room to stand in front of Fred and Willie. \"But you are perhaps wondering,\" he said, \"why I did not simply derail your plans for this evening.\"\n\nHe turned to face the guests who were starting to huddle against the walls. \"The answer to that is very simple. Once in a while someone has to beat the Devil at his own game. If no one was ever able to beat me, no one would ever enter into one of my contracts in the misguided hope that they would be lucky enough to someday escape the conditions of the contract.\"\n\nHe turned toward one small group which was cowering in the corner. \"Believe me,\" he said, \"you have a much better chance of winning the lottery.\"\n\nThe Mother laughed. Her laugh was much lighter than The Fallen One's and did not create the same icy fear in the people who heard it. \"But once in a while,\" she said in her silvery voice, \"someone does win the lottery even against such odds.\"\n\nShe turned to address Willie, \"You have beaten the odds.\"\n\nShe then smiled. For some reason her smile, unlike her laugh, struck fear into the hearts of the guests. Perhaps it was because her teeth were sharp and pointed.\n\n\"Besides,\" she continued, scowling slightly, \"Bruce and Wendy have really pissed me off over the years with their incessant bickering over minor terms and conditions of their contract.\"\n\nThe Fallen One again spoke-- this time directly to Bruce and Wendy. \"You have made yourselves sexual slaves of Fred and Willie for the rest of your lives.\"\n\nNow it was the Fallen One's turn to smile. He seemed to be now actually enjoying himself. \"Because of our agreement,\" he said. \"that will be a very, very long time. Should it get to be too much for you, perhaps you could initiate the early termination clause of the contract. I'm sure The Mother and I would be agreeable to that.\"\n\nHe turned toward Max and added, \"And no, Max, early termination isn't in Frederick's contract either. It was added only a few centuries ago. Through the years, I've learned many things the hard way, just as many humans do.\"\n\nTurning back toward Bruce, he said, \"I will be watching over you to be sure that you live up to your wager. As a matter of fact, I am going to hang around tonight until you and Wendy kneel naked before Fred and Willie and officially submit yourself to them.\"\n\nHe snapped his fingers and suddenly Bruce and Wendy were standing naked in the middle of the room. Fred and Willie stepped forward to stand in front of them and The Fallen One said ominously, \"You know what has to be done, you did it for me a long time ago.\"\n\nBruce and Wendy dropped to their knees and bowed low. Their heads touched the carpet in front of Fred and Willie. In unison they said, \"I submit myself to you as your slave and sexual plaything forever.\"\n\nAlso in unison, they yelped and jumped to their feet. Both of their right buttocks were now smoking slightly. \"As my parting gift to you, Fred, I branded them for you. You may notice that the brand on their right ass cheek says, 'Slave of Frederick and Wilhelmina Whetherington.' The older brand on their left cheek says, 'Property of The Fallen One.' \n\n\"Remember, Fred,\" he said in a very stern voice, \"despite the fact that my brand is only visible on this night or in my presence, it is always there. The wording of the other brand will remind you that although they are your slaves, they are my property.\" With that, the Fallen One and The Mother disappeared in a flash of flame and a cloud of smoke.\n\nAs the guests stood coughing and gasping in the acrid air Willie exclaimed, \"Damn! He scorched the carpet again.\"\n\n= = = = = = = = = = = = = = = = = = = = \n\nEND OF STORY\n\nPlease remember to vote \n\nby clicking on one of the stars at the end of the story. \n\nIf you really liked it, click 5. \n\nIf you really hated it, click 1, but please click something. \n\n= = = = = = = = = = = = = = = = = = = = "
    ],
    "authorname": "The_Technician",
    "tags": [
        "halloween",
        "hell",
        "devil",
        "exhibitionist",
        "voyeurism",
        "forced nudity",
        "forced orgasm",
        "consenual pain",
        "sybian",
        "satire"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-loophole-a-halloween-story"
}