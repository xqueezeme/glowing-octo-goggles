{
    "title": "If You'll Believe In Me",
    "pages": [
        "This I would like to thank Francois101 for the editing. It is a tremendous help.\n\nFor newcomers, this is the 7th installment of what I'm calling the Criminal Affair Series, which started with the ten-part Criminal Affair. Order of stories for continuity is as follows.\n\nCriminal Affair (ten-part series)\n\nThe Sorority\n\nThe Irishman at the End of the Bar\n\nA Shoulder to Cry On\n\nA Perfect Match\n\nThe Second Booth at Horseshoe Diner\n\nIf You'll Believe In Me\n\n--\n\nFriday -- September 25, 2026\n\n-Chase Kramner-\n\nIt was never difficult to avoid my sister all these years. Until recently I had never visited my father, and Quinten knew full well my animosity so never dared arrange something behind my back. He also never spoke ill of her in front of me. We have a different relationship with Nicole, and I respect that. My relationship with Nicole was abusive, and it started after our mother died.\n\nOur separation was so abrupt because I remember us being close. I never had any significant friends in school, but I had Nicole. Her alleviating the devastation of no one coming to my seventh birthday party by playing with me. Building pillow forts in the living room. Embarrassing dad when he had formal company over. Quinten was already being groomed as the eldest son and that created the space for Nicole and me to be hell raisers. I think it helped us get through mom's episodes. Quinten was already sent away to boarding school, so he had a completely different picture of her than we did. He was only permitted to come home during her lucid periods.\n\nThen mom died, and Nicole changed for the worst. Everyone did. How couldn't we? It started with distance, and I never felt more alone in my life. Suddenly my fiery sister became a stereotypical mean girl. I was suddenly the stupid annoying little brother, and I didn't know why.\n\nWhen I was twelve, I advanced beyond my math lessons, and started to read Nicole's calculus textbook. After discovering I could competently do it, she blackmailed me into doing her homework for her by threatening to spread rumors of me at school. Junior high is bad enough as it is, the last thing I wanted was my older sister telling people she found me stealing her underwear and all other weird stuff.\n\nOur father saw me doing her homework once, and I thought it may be some relief, but it turned to be the opposite. His investment into Quinten wasn't paying out. Quinten was not the shining example to exemplify the Kramner name. Now dad had a twelve-year-old who taught himself calculus. From that point, my life was planned.\n\nI needed to have all the right clubs in school. Be athletic to have Rhode Scholar as a possibility. Attend Georgetown Prep and graduate Valedictorian, and then of course Ivy League, preferably his legacy of Princeton, followed by JD at Yale. Even my playdates were planned to mingle with the right kids.\n\nMy first taste of independence was Dartmouth, but even that was regulated to some extent. He picked my classes, my fraternity -- I absolutely would be in one, I was told -- and my extra curriculars. All for the legal track. He likely had my first job lined up.\n\nIn the middle of that, Nicole's abusive blackmail didn't stop. Every chance she had to force me to do her schoolwork, she acted on. She'd tell my Fraternity I was a pedophile. All kinds of bad stuff. I wrote her entrance exam into Columbia, then three years later wrote her thesis for graduation.\n\nAfter all my father's effort to mold me into him, I was the only kid to not become a lawyer. I was the one who pushed back. His disappointment was so thick, he never pursued me when I left. I just stopped being his son.\n\nI'm getting too old for these grudges with my family. My father and I are finally on the path of reconnection. At a bare minimum, understanding. This was helped by my stepmother Carrie, who is gentle and sensible. Two traits she has that I appreciate more as an adult than I ever did when I was a child. She tried hard to be our mom, but I think we all were too far gone. Nicole especially.\n\nI haven't spoken to Nicole since my third year of college. I had to arrange something through Carrie because I didn't know how to contact her. All I knew, was that she lived someone near D.C. Carrie told me Nicole was taken aback by my offer. Nicole had accepted we would never speak again. Then suddenly, I was willing to meet her halfway.\n\nToday is the day I talk to my sister. I lean against a waist high wall across the street from the steps of the Supreme Court where Nicole works as a Clerk for Associate Justice Samuel Alito. There is a disposable coffee cup in both my hands, and I sip the one in my left. Nicole and I agreed to three in the afternoon, and it is currently five after the hour. When it starts to annoy me, I see someone that matches her form trotting down the stairs like they're late for something. She zigzags her way through a group of teenagers protesting the issue of the day. Nicole looks both ways and crosses the street, and this is the first time I can positively see it is her.\n\nNicole weirdly looks more like dad than mom, but she isn't mannish in any way. Her facial structure is nothing but dad, and she inherited his height like I did. The same dark Kramner hair, though she has the rougher texture from mom's side, unlike my fine feather softness. Like a Kramner she is lean without effort. Her fashion is Nordstrom Rack suits combined with designer shoes and jackets.\n\nNicole makes it to me and is surprised when I hand her a coffee. Call it a peace offering. She nervously thanks me and takes a drink. Her face expresses curiosity when it's the way she likes it.\n\n\"I asked Carrie what you liked,\" I explain, and she nods. She is scared, I can tell. Of what I don't know. \"Care for a walk?\"\n\n\"Sure,\" Nicole says, and I gesture for her to lead. \"So...how's...how's it going?\"\n\n\"Well enough,\" I reply. \"You?\"\n\n\"Great...excellent...this is horrible,\" Nicole says, and stops to groan while rubbing her forehead. \"Are we really pretending the last ten years didn't happen?\"\n\n\"They happened. The years before that happened too,\" I say, to make her aware I remember the way she treated me.\n\n\"I was a cunt,\" Nicole says, lowing her hand. \"I had a mental moment a few years ago. Not full on mom, thank god, but pretty close. My doctor helped me sort it out.\"\n\n\"What happened?\" I ask. My bullshit meter is on now. Instantly I think this is a manipulation. Make me sympathize.\n\n\"I hate my job. I never really wanted to be a lawyer,\" she says. Weird effort to manipulate me. \"You know, dad.\"\n\n\"Dad didn't force that on you,\" I say.\n\n\"He didn't have to. You got the raw end of that. I'm not saying you didn't. But I was starved for approval. Quin just couldn't live up to it, but then he jumps straight to you. Bypasses me entirely, like I didn't exist. What made that so much worse, was that it looked easy for you.\"\n\n\"It wasn't easy,\" I say, and she says she understood that far too late.\n\nNicole resented me because of dad. I never once thought about how all his attention on me, could have affected them. Quin likely never cared. Nicole on the other hand, did want his approval. She likely could have lived up to it but was never given the chance. Then realized she never wanted it after she lived up to it.\n\n\"Mom dies, after trying to kill us, and dad remarries less than two years later. I found out they were engaged before I knew they were even a thing. I was a sixteen-year-old with a stepmother, not proud of how I treated her either,\" Nicole says\n\n\"She's a sweetheart,\" I say.\n\n\"Goddamn is she diabetes sweet,\" she says, while trying to find her train of thought. \"I tried sabotaging you to help me, so maybe he'd lose interest like he did with Quin and maybe I get a parent who isn't ignoring me or trying to kill me.\" Nicole nearly rambles herself out of breath.\n\n\"You know what I want to remember?\" I ask, and she shakes her head. \"Pillow forts in the living room. We'd make tea and read books by flashlight. That's what I want to remember.\"\n\n\"Your favorite book was Through the Looking-Glass. I'd read it in a posh British accent, and you memorized every time in the first chapter Alice would say...\"\n\n\"...let's pretend!\" I say jovially, making her laugh. \"Still my favorite book.\"\n\nI haven't read that book in such a long time. I couldn't read it without thinking of Nicole, so I let it collect dust. Sometimes we need to pick up our favorites things and remember why we loved them to begin with.\n\nNicole doesn't say she's sorry, but I know she is. I don't have to say I forgive her because she knows I do. Coffees in hand, the March Hare and the Hatter strolled through the forest to give testimony before the King of Hearts on who stole the tarts.\n\n--\n\nMonday -- October 12, 2026\n\n-Chase Kramner-\n\nSome moments of life feel like hours but are seconds. The time it takes for Marlene's body to land in the entryway of the courthouse I measure in days. Marlene's blood sprays onto my face, and I drop my coffee in shock. The cup and her body impact the ground at the same time.\n\n\"Down!\" I shout. Time has now sped up.\n\nHenry Silverlake and Hugh Willard collide in a scramble of self-preservation. A second round goes off and Hugh drops dead next to Marlene. Silverlake stumbles over the bodies, likely saving his life, as a third round misses, shattering the glass wall which Silverlake then sprints through. A fourth bullet hits the building just above the frame of the wall.\n\nSummer Pillsbury screams as I pull her and Zillah Calvin to the ground. I instruct them to crawl toward a bench for something resembling cover. I crawl with them to cover, and the shooting appears to have stopped. I call the dispatch desk sergeant and put the phone to my ear.\n\n\"Dispatch, Sergeant Collins.\"\n\n\"This is Sergeant Kramner. I'm under fire!\" I shout into the phone, taking a quick look over the hedge.\n\n\"Shit, where are you?\" Collins asks.\n\n\"Outside of the courthouse,\" I say.\n\n\"North or south?\"\n\n\"Uh...south,\" I say after thinking for a moment. \"Send ambulance. Two civilians down. Shooter likely has a long rifle.\"\n\n\"Are you hit?\"\n\n\"Negative,\" I say, and peek over again. I don't see a shooter, but I feel the heat from a bullet zip over my head before it thuds against the building. \"Shit!\"\n\n\"How many people are with you?\"\n\n\"Four, including the victims,\" I say.\n\n\"Stay down, three nearby units are coming up fast. They'll jump the curb to form cover. Stay on the line with me until you see them,\" he says. Now we are back to the world going by in slow-motion. I take the chance of looking, but still do not see a sniper. My best guess is the third or second floor above a restaurant across the street.\n\n\"They're here,\" I say, and end the call as I see three squad cars jump the curb at the intersection. It felt like forever, but it was only a minute. The officers drive up bumper to bumper and stop in front of the building. I pull Summer and Zillah to their feet and hold their heads down as we move to the cars. \"Stay low.\"\n\nOfficers jump out of the cars and aim toward the opposite side of the street. I secure Summer in a vehicle while another officer takes care of Zillah. An officer and I check Marlene and Hugh, but they're both gone.\n\n\"Leave them, this is a crime scene. Get the civilians out and make a call to get this place cordoned off,\" I say. The officer nods and gets to the car.\n\n\"You coming?\"\n\n\"Keep me covered until I get across,\" I say, then draw my weapon and sprint to the other side of the street. No shots. This shooter might already be gone. I run around a parked car and put my back to the left of the windows. A female officer sprints across as well. Once with me, she spins her finger above her head, and the officers mount up and leave.\n\n\"You got an idea where it came from?\" she asks. Her sleeve has Sergeant chevrons on it, and her name plate says Sergeant Donner.\n\n\"No, happened too fast,\" I say, then lean over while looking up. \"I'm thinking straight shot. This building.\"\n\n\"We kicking?\" she asks, looking around me and at the restaurant's windows.\n\n\"I don't think the shooter is going out of the front door,\" I say, and look down both sides of the street, looking for the shortest route to the next intersection. \"We'll head around back.\"\n\nSergeant Donner and I keep low past the windows. The alley is a short distance, and we turn into it.\n\n\"Third building,\" she says to remind me as we run. We both hear a thud above us and see someone jumping onto the third floor of the fire escape. \"Don't move!\" The suspect fires at us with a handgun. Donner and I duck down behind a dumpster. She then leans out and fires a round up, but the suspect jumps into a window.\n\n\"Suspect is in building immediately across the street from courthouse,\" Donner says into the radio. \"You get the building number?\" she asks me. \"Requesting additional units.\"\n\nWe both hear a metallic ting against the concrete, and something roll toward us. I see a stun-grenade and try to throw myself and Donner away from it.\n\n\"Grenade!\" I shout as I squeeze my eyes shut. I am instantly deaf as I pull us to the corner where the dumpster meets the wall. I open my eyes and Donner is muttering something, but I cannot hear her. She looks dazed and is trying to find her radio. I look up to the fire escape and see the suspect on the second floor. I fire a round to force them back inside.\n\n\"Don't you fucking move!\" I think I shout. I can't hear myself. I stumble away from Donner with my gun up. I put my shoulder to the wall directly under the escape. I see a shadow and fire.\n\nSomething touches my shoulder, and I reflexively turn, but stop when I see some reinforcements have arrived. I point at my eyes with two fingers, and then point up. He nods and I try the door just ahead of me, finding it unlocked. Before I enter, I open my mouth wide, trying to pop my ears. The silence is gone, but it has been replaced by that deafening ring. My head is throbbing so much I feel ready to puke. I try my best to shake myself loose, then enter the building.\n\nI walk into a kitchen area, and see the staff crouched low to the floor. Two chefs in white coats, and a waiter in a green shirt and black vest with his back to a door and a bag lying in front of him. They must have heard the firefight outside. I move my jacket to show them my shield.\n\n\"Stairs?\" I ask, and I see the lips move on the waiter. \"Point.\" He points to a door directly across from himself. \"Stay down.\" I nearly trip over his bag and kick it out of my way to reach the door.\n\nThe door is unlocked, and I aim up the narrow stairwell. How did the shooter get up here without anyone seeing them? They likely entered through the fire escape too. I try popping my ears again, then slowly begin to ascend the stairs. To the right are two doors on opposite sides of the hallway that ends at a broken window. The left door has been left ajar.\n\nI quickly look down the opposite end of the hall and see it leads to a large open room with tall windows facing the courthouse. Could be the sniper's nest.\n\n\"Police, surrender now!\" I shout and wait for the response I likely still can't hear. I hate clearing rooms.\n\nI maneuver to the open door and put my shoulder to the wall. I push it open with my non-dominant hand and aim inside. Right side clear. I ram the door fully open as I step in and aim left, and behind the door. All clear. I see a shadow join mine too late. I could not hear the steps.\n\nI aim back, but the suspect grabs my hand, then chops me in the throat. My wrists are held as I stumble back, so I squeeze off a round, but the suspect pushes up and the bullet hits the ceiling. Before I can do anything else, I am kicked in the groin then flipped over their shoulder. I crash to the ground but manage to control my gun. Before I can fire, my gun is punted out of my hand and across the room. I roll backwards and connect a mule kick square to their chest, knocking them back several feet into the frame of the window and breaking it.\n\nI scramble to my feet, still dazed from the throw and the dick kick. This is the first moment I can really look at this person. Full black tactical clothing complete with a black mask with side respirators. I can see their eyes are blue, and that their blonde hair is wrapped into a bun. I felt an armor plate when I kicked. On the chest I see the curve of a bust. This is a woman.\n\nThe assassin draws her knife and holds it properly. Solid stance. She knows how to use that thing. My training helps me react without thinking, and I pivot to grab her wrist. I watch as she drops the knife intentionally and moves to attack high. She slides under my arm, jumps onto my back, and locks a choke hold. She predicted I would guard low and leave myself open.\n\nMy fingers try to dig under her arms, but I cannot wiggle them to my own neck. Last ditch effort, I jump and fall straight to my back. My hearing is coming back because I hear her grunt, but she keeps the hold. I reach over my shoulder and find her head. I grab her hair and punch straight back onto the top of her dome. She is not giving up.\n\nI roll us to my stomach and buck forward with everything I have left. She flips over me, releasing the hold. I push myself to my knees and cough. She tries to kick me in the face, but I catch her foot and push straight back to get some separation so I can get back to my feet. She draws a handgun from her ankle but is shot a moment later by Donner at the door.\n\nThe woman falls to the floor and her gun slides into the corner. Donner and I secure her on the ground. Her plate caught the round, but a shot will still mess you up. I know that from experience. We cuff her, and Donner holds her down with a knee to her back.\n\nI remove her mask, and see I am correct. It is a woman. Young, Caucasian female with blue eyes and blonde hair. No freckles or blemishes. Sharp and lean features.\n\nDonner gives her Miranda, but the woman just stares at me intensely. \"Do you understand!\" Donner shouts.\n\n\"She understands,\" I say, and Donner drags her away. A few more officers arrive to escort her out, and I advise keeping a gun on her with six feet of standoff.\n\n--\n\nMonday -- October 12, 2026\n\n-Midge Appletree-\n\nI never imagined I would have to investigate the murder of the person who I investigated for murder on the day of opening statements. Should be a short investigation, considering Chase caught the likely shooter. I am joined by Sergeant Jeffrey McCants from the formerly independent Missing Persons department. I must work with Jeff because my partner William Kaiser cannot touch the case, and neither can Lieutenant Ito because Chase was involved. This is why I don't date cops.\n\nJeff is a big lovable oaf. He stopped caring about his health ten years ago and is a decidedly rotund man. Two divorces, three kids he doesn't see, and he is a functional alcoholic. Temporarily quit the force to join the Army after 9/11 and did one tour in Afghanistan. Has floated around every department in the Investigations Division but spent most of his career in Violent Crime. Not ambitious for command and has been on the force for thirty years.\n\n\"Goddamn,\" Jeff says as he watches CSI take pictures. I look across the street and see people in the windows on every floor, looking for the sniper's position. Jill is in the courthouse trying to find the angle while Heath is trying to pull a slug intact out of the wall. At the corner I see Chief Whitaker talking to press while other officers are holding onlookers back.\n\n\"Officers,\" we all hear Mayor Maxwell say as he approaches us. They say being the DA is just an audition for being the mayor. He has the worst qualities of both a politician and a lawyer. And after one bad Tribune article, a 15% approval rating going into the election next month. His only saving grace is that his challenger is embroiled in a sex scandal with his daughter's high school friends. The only thing worse than being a corrupt prosecutor twenty years ago is screwing teenagers last week.",
        "\"Mr. Mayor,\" I say.\n\n\"I want this crime scene completed as fast as possible. Not great to leave two bodies on the steps of the courthouse in full view,\" he says.\n\n\"Also not great to have a sloppy investigation because of politics,\" Jill says from inside. \"Don't tell me how to do my job, and I won't tell you your poll numbers.\" I see everyone nearby physically clench from holding back laughter.\n\n\"Just get it done,\" Maxwell hisses and then walks towards the cameras he knows better than to explode in front of.\n\n\"Damn Jill, use a dick why don't ya,\" I say, and she laughs.\n\n\"Fuck him,\" Jill says, the resumes her work.\n\n\"Anything weird?\" Jeff asks Jill.\n\n\"Besides an assassin sniping people in broad daylight? Not really. Five shots fired. First is a through and through headshot. Female victim is dead instantly, falls to the ground. Second shot has similar trajectory, hits the male victim. Third shot shifts to the right, shattering the window and impacted the floor of the hallway leading to the elevators, tumbled, and went through the doors on the opposite side. Frankie is looking for it. Fourth shot hits the building exterior just above the frame of the glass wall. Last shot was either to take off Chase's head or keep his head down. Shooter couldn't have been higher than the third floor with the angles.\"\n\n\"Do we assume someone specific was the target?\" I ask, and Jeff looks at me.\n\n\"Doesn't look like it. Looks like they were trying to get everyone,\" Jeff says.\n\n\"You got a caliber?\" Jill asks Heath.\n\n\"You can't rush this boss,\" Heath says, now sawing a square from the wall with the bullet in the center. \"They find the rifle?\"\n\n\"She ditched it somewhere in the building. They can't find it,\" Jill says.\n\n\"She?\" I ask.\n\n\"The sniper was a woman. At least, that's who Chase fought. She was in military tactical clothing with a ballistic vest. I'm going to go out on a limb and say that's not a coincidence,\" Jill explains. I ask where Chase is, and she points to the building. \"Second floor.\"\n\n\"Jeff, you got it here?\" I ask, and he nods. \"Witnesses are still at the station. After I debrief Chase, we're talking to them.\"\n\n\"Who's the Sergeant here?\" Jeff asks.\n\n\"Don't argue, I'm pregnant,\" I say and start walking across the street.\n\nThe street is completely blocked by police, and media starts shouting at me as I cross. I ignore them and enter McGee's after signing the logbook to keep track of who was coming and going.\n\nThe room looks like a typical Irish Pub with booths on both sides with several standing tables. The bar is a large semicircle surrounded by tall chairs. Five televisions hang above the bar, and I imagine they show sports during hours of operation.\n\nAt the other end of the dining area of the pub is an officer keeping guard at the swinging doors. He is under strict orders to inform me I need to glove up and extends a box to me.\n\nI push the gloves into the recesses between my fingers as I walk up the stairs. To my right a photo snaps and I hear movement of the CSI analysts. Left of me is a large, empty room with tall windows facing the courthouse. It looks like an empty office space. Chase is sitting on a chair as an EMT is checking him out. His wounds appear superficial, but I can tell he got into a hard fight.\n\n\"Heard you got beat up by a girl,\" I say, and Chase laughs as the EMT is touching his throat to check for something.\n\n\"That hurt?\" the EMT asks.\n\n\"A little,\" Chase says, his voice noticeable hoarse.\n\n\"He good to talk?\" I ask the EMT who nods.\n\n\"You'll likely get some bruising, but you should be okay,\" the EMT says and leaves the room with his medical bag.\n\n\"What happened?\" I ask, and he exhales. \"Let's start with the perp.\"\n\n\"She's in custody, so I'll save you time with the description,\" he starts, and I nod to say that was fine. \"Competent combatant, highly trained.\"\n\n\"What do you mean?\" I ask.\n\n\"If she was of comparable strength to me, I'd be dead,\" he says. Chase is not a push over in a fight. \"She didn't get a carotid hold on me, but she was trained. Nathan's level of training.\"\n\n\"Could you tell nationality with an accent or something else?\"\n\n\"Couldn't tell you because she never spoke. I'd guess military or police background, leaning more on the military side. How many countries allow women in Special Operations?\" Chase asks.\n\n\"Not many. It should narrow it down,\" I say and write that in my notes. \"She got a choke hold on you?\"\n\n\"She managed that by feigning a knife strike,\" Chase says, and I do not follow. \"When she drew the knife, I took this stance,\" Chase says and demonstrates. \"This stance screams 'I know how to react to a knife'. If it came down to a force on force struggle for it, I'd win. She knew that, so didn't go force on force. She feigns low and across the body, then drops the knife. My reaction leaves my non-dominant side open, and she gets around to sink the hold, but couldn't lock the carotid. Textbook. Like I said, she's trained.\"\n\n\"Why were you nearby?\" I ask.\n\n\"To gloat, I guess. To watch Marlene walk into the courthouse,\" Chase says, then claps his hands. \"Bam! Both, right in front of me.\"\n\n\"Which bullet got Marlene?\"\n\n\"The first. I counted five. Three followed the first, and the last was meant for me. I don't think she was the target,\" Chase says, and I ask him who was and why. \"Hugh Willard got hit while him and Silverlake got tangled up. The next two shots were going after Silverlake.\"\n\n\"You think Silverlake was the real target?\" I ask, and he nods.\n\n\"Best guess. At least in addition to Marlene. Where is he?\" Chase asks, and I shrug. \"Almost like he knows it was meant for him.\"\n\n\"We got a BOLO out on him already. He'll turn up,\" I say. \"You good?\"\n\n\"I'll be fine,\" Chase says while rubbing his throat.\n\n\"I'm going to head back to the station. CSI looks like they'll be a minute. Call in, head home if you can,\" I say, and he says he will.\n\n--\n\nI have a feeling the rest of my day is going to be interviewing people. Four people saw Marlene Black and Hugh Willard take a bullet. Three people heard the gunshots from within the building they were fired from. I have never had so many direct witnesses to a murder.\n\nJeff and I have tried our best to keep the two isolated until we talk to them. Chase, I interviewed on site. Zillah Calvin and Summer Pillsbury, we keep in different rooms. Henry Silverlake ran and kept running, but we'll find him.\n\n\"Just tell us what happened,\" Jeff says to Zillah. He is postured against the wall next to the open interview door. Lawyers have a tendency of being extra squirrely, so the door is open to create a more open atmosphere. I am sitting on a chair across the table from her, leaning back and resting my hands on my belly. Even after evacuating under fire, she appears pristine and unaffected. Form fitting porcelain white office dress somehow unblemished from crawling, squeezing her porn star tits together. Perfectly manicured nails with a naked finish. I can smell her European perfume. Sometimes I hate being married; the shit I would do to this woman.\n\n\"What is there to tell? I was escorting my client to the courthouse when someone shot her and my partner,\" she says in a huff. She just looks annoyed. Lawyer hasn't called her lawyer. She knows better, so I find that odd.\n\n\"How many shots did you hear?\" I ask.\n\n\"I think four. At least three,\" she replies. It's common to get contradicting stories on the amount of shots. I show her a surveillance snapshot a moment before the first shot was fired. The camera at the door which captured everyone standing near, or in the process of entering the courthouse. Zillah's hand is on Marlene's back. \"Detective Kramner and her had a history. He seemed to be there for no other reason than to antagonize my client. I was attempting to push her through the door and not let him provoke her.\" Chase admitted as much. \"Perhaps he even tried to stall her at the door,\" she suggests. I had a feeling she would go there.\n\n\"Let's stay on topic,\" I say to prevent her from taking control of the conversation. \"Did you see the shooter?\"\n\n\"No,\" she says.\n\n\"Did you see what floor they were on? Which building?\"\n\n\"No. You can ask that ten different ways, my answer will still be no. In this photo, I am clearly not facing the street,\" she says, spinning the photo around and sliding it back across the table to me.\n\n\"You are facing a reflective surface,\" Jeff says from behind me, and that caught her off guard. She wasn't prepared to answer that, so she takes time to contemplate her reply.\n\n\"I suppose I am. But at that moment, I wasn't observant for something like that because I had no reason to be concerned for my safety,\" she says.\n\n\"I know Marlene Black was your client, but what was the relationship with Henry Silverlake?\" I ask.\n\n\"Defense Investigator. Common practice,\" she says.\n\n\"Even after that article on him?\" Jeff asks.\n\n\"You mean the unsubstantiated hit job written by the same person slowing our entrance into the courthouse?\" she replies, pointing at Summer Pillsbury standing next to Chase. Jeff snuck in one 'gotcha' and thinks he will get another. He won't. \"What about him?\"\n\n\"Where is he?\" I ask.\n\n\"I haven't left police observation since the shooting, why would I know?\" she asks.\n\n\"Do you have an idea why he would run?\" Jeff asks. He is accustomed to asking narrative questions with victims. He hasn't sat at a homicide desk for years, and it is showing.\n\n\"Are you kidding?\" Zillah asks. 'Why would a man being shot at, run? Surely you jest detective.' She didn't say that, but her posture is highly expressive.\n\n\"He has evaded all attempts to contact us, or be contacted,\" I say.\n\n\"His problem, not mine,\" she says, and I decide we need more on Silverlake before we can start pressuring the others on his absence. I like Silverlake for the target, but I need him in a room first. \"Can I go?\"\n\n\"Sure. Keep your phone on,\" I say, and she leaves. \"Next.\"\n\nSummer Pillsbury is still trembling hours later. She recovers, however, and asks for a quote. I cut her loose and instruct a uniformed officer to escort her all the way out, so she doesn't start roaming the halls. The two cooks from the restaurant do not speak English, but Jeff's Spanish is good enough. I have to trust that they don't have much to share. We both agree to release them even though they were illegal aliens. Not our case. The final person we have left to interview is the waiter Saulius Grybauskait\u0117.\n\nSaulius \"Saul' is an immigrant from Lithuania. He is six feet and change and slim like a swimmer. His dark hair is pulled into a bun to keep it out of his face. Thin facial hair encircles his mouth. I see the start of tattoos on his wrists, covered by the sleeves of his shirt on both arms. I see some foreign lettering I cannot make out on the back of his hands. Several of his fingers have rings tattooed on them.\n\nSaul has his visa on him, and hands it to us at the beginning of the interview. It is a U non-immigrant visa, and I do not know what that means. I ask Jeff to run down some of the information while I conduct the interview.\n\n\"What kind of visa is that?\" I ask, and he hesitates a little. \"Saulius?\"\n\n\"Please, just Saul,\" he says with a thick accent. It could easily be confused as Russian, but I know it isn't. He knows English, but I have a feeling I will ask him to repeat things or say them differently a few times. He leans across the table invasively, elbows down, hands supporting his chin. I cannot determine if he is trying to be intimidating, or coquettish. Either way, I don't like it.\n\n\"What kind of visa? I've never heard of a U non-immigrant,\" I say, and he shifts in his seat a little, but keeps his forward lean.\n\n\"I'm not sure how much I can say,\" he explains.\n\n\"Detective?\" I hear from behind me. One of the uniformed officers' hands me a handwritten message on a sticky note. U Non-immigrant Visa: Victim of Criminal Activity. Jeff sent that to tide me over. He could be a witness under protection. I wonder which agency is going to call us today.\n\n\"Victim of criminal activity?\" I ask, and he nods. \"I won't ask any questions about that, until it's relevant. Just tell me what happened.\"\n\n\"Starting when?\" Saul asks. Fair question.\n\n\"Start from when you arrived at work,\" I say.\n\n\"Sure. I park in front of building. I am also shift manager, so open for the day. Clean, set up tables, things like that,\" he explains. The longer his sentences are, the more broken they become. He fiddles with his hands, and I see an additional tattoo of an eye on his palms.\n\n\"About what time?\" I ask.\n\n\"I'd say six thirty. I let the cooks in at seven thirty...\" he says, then clams up. He does come across as somewhat overconfident and cocky, but he is concerned about outing his employees.\n\n\"The immigration status of the cooks is immaterial to us. We already let them go,\" I explain, and he nods in gratitude.\n\n\"They start their day. Then I hear gunshot. Three gunshot,\" he says, holding up three fingers. Plurals are not his strongest attribute, and neither is counting. \"Fast, but not, very fast, if that makes sense.\" I think he is trying to explain the rate of fire, so ask him. \"Yes. Like, pop-pop-pop.\" Semi-auto rifle. Bolt action is unlikely with that rate of fire.\n\n\"Where did the shots come from?\" I ask.\n\n\"I don't know for sure. Sounded above. Like the second or third floor,\" he says.\n\n\"What is upstairs exactly?\" I ask.\n\n\"Unrented office space. We don't use it. Not me at least. The cooks like to smoke up there when the weather sucks. Just don't tell boss that,\" he says, then winks at me. That confirms the intent of his posture. He is a flirt, but something else is making me uncomfortable, and my radar is usually accurate. He isn't looking at me like I'm a person. His eyes look like someone admiring food to be devoured.\n\n\"Who is the boss?\" I ask.\n\n\"Anton,\" he says, and I ask for the last name. \"Mamedova.\"\n\n\"He Lithuanian as well?\" I ask.\n\n\"No. Georgian,\" he replies. I ask if he is the owner, or manager. \"Owner. Big boss.\"\n\nA Lithuanian works at an Irish Pub, with Latino cooks, that is owned by a Georgian. No matter how weird my day gets, nothing will beat that.\n\n\"What did you do when the shots were fired?\" I ask.\n\n\"I was in the basement waiting for tablecloth to dry. Our washing machines are there. When shooting start, I was downstairs,\" he says.\n\n\"You heard the gunshots, from the second or third floor, from the basement with a dryer running?\" I ask, and he nods.\n\n\"Loud. Pop-pop-pop.\"\n\n\"Uh huh,\" I say, and he looks like he knows I don't believe him.\n\n\"I get upstairs, then hear the gunshot from the alley. Police come in, I direct him upstairs,\" he says. Doesn't mention the stun-grenade. Do I, or do I not ask him if he heard it? Fuck it, he's already suspicious.\n\n\"Did you hear a bigger boom?\" I ask, and he tilts his head like a dog following a bone. Hurry up Jeff. \"A concussive boom?\"\n\n\"Concuss?\" he asks, confused by the word.\n\n\"Did the blast...could you feel it in your chest, or stomach. Like a drum being pounded,\" I say while slapping my chest at the collar bone.\n\n\"Oh, yeah. Before the shooting,\" he says. That doesn't conform with Chase and Sergeant Donner's stories. They fired, then got stunned. I'll lean on that later if I must.\n\n\"Midge,\" I hear from the door, and turn over my shoulder to see Jeff gesturing for me. I politely excuse myself, then push my pregnant ass off the chair and waddle into the hall. \"We got some shit.\"\n\n\"What kind?\" I say, and he takes us even further away from the room. \"What?\"\n\n\"While I was digging into our boy, I got a call. Guess who?\"\n\n\"Just tell me.\"\n\n\"FBI,\" he says. Goddamn Feds.\n\n\"That guy is an FBI informant?\" I ask, and he shrugs in reply.\n\n\"They didn't give me details. They said let him go,\" he says.\n\n\"Fuck,\" I say, and he nods. \"We cutting him?\"\n\n\"We got nothing to hold him on anyway,\" Jeff says, and I don't disagree. \"What was your read?\"\n\n\"I like him for something. He's not ignorant of what happened,\" I explain. I really hope I don't need to pull him back in later. I walk to the door and step inside. \"Thank you for your time Mr. Grybauskait\u0117.\" I butchered that. \"If you think of anything, give me a call.\" I extend my card to him from the tips of my fingers.\n\n\"Thank you. I will help,\" he says as he takes the card. \"Have a good day.\"\n\nI leave the room and join Jeff in the hall.\n\n\"What now?\" Jeff asks as we walk to the elevator.\n\n\"Warrants for camera footage, start going through it. I was already investigating Marlene Black for murder, but let's give her a once over again, then move to Silverlake. You got that FBI Agent's number?\" I ask, and he nods. \"Send them the picture of the assassin. See if they know of her.\"\n\n\"Got it,\" Jeff replies. \"When do you want to interview the shooter?\"\n\n\"Let her strew for a little more. Labs are trying to get an ID, so let's hold off. I want to least go in there with her name,\" I say, and he agrees.\n\n--\n\nTuesday -- October 13, 2026\n\n-Jennifer Ito-\n\nDetectives Appletree and McCants give me a run down on the status of the current courthouse murder. The case Midge would have been testifying for in two weeks. That Chase would have testified in next month. So much for that.\n\n\"Silverlake?\" I ask after they inform me one of the key witnesses is still missing. He is also likely the true target of the assassination. My first question is naturally who wants him dead so bad they would hire a sniper to kill him?\n\n\"In the wind. Ran into the courthouse south entrance and straight out the north side. APB out, but nothing so far,\" Midge summarizes.\n\n\"We're going to try and talk to the assassin again in about an hour,\" McCants says. They have already spent hours trying to get a word out of her. The woman hasn't even cleared her throat. We have no ID on her.\n\n\"Do it while you can,\" I say, and they both ask what I mean by that that. \"Chief is trying to make the FBI take the case.\"\n\n\"Why?\" Midge asks.\n\n\"Two reasons. One of the witnesses might be an informant, and because that woman is an assassin and we have nothing on her in terms of print or DNA. Nothing. She is a ghost,\" I say, and they both look at each other. \"She is dangerous, without a doubt. Someone trained her, and someone may not like where she is.\"\n\n\"What does he expect to happen?\" Jeff asks.\n\n\"No idea, but I agree. She might be a higher risk than we can handle,\" I say.\n\n\"Just because she beat up your boyfriend?\" Midge asks with a laugh, and I bite my lower lip to contain myself.\n\n\"Just don't expect to have the case for very long. Get to it,\" I say and they both start leaving my office. \"Appletree, stay a moment, close the door.\" Midge does as requested after Jeff leaves.\n\n\"What's up LT?\" she asks, then takes one step toward me.\n\n\"Leave my personal life out of work discussions. At home, he's my boyfriend. Here, he's Sergeant Kramner. Understood?\" I ask, and she nods.\n\n\"I didn't mean anything by it,\" she says while holding her hands up defensively.\n\n\"I know. It's bad enough I was IA. I already have enough problems commanding authority as a woman, without you reminding my Sergeants where I spend my evenings,\" I say, and she nods. \"Do you understand?\"\n\n\"Yes ma'am,\" she says, and I dismiss her.\n\nIt's difficult enough trying run things being a woman. Add the fact people still see me as the IA snitch who investigated their friends and ended careers. Multiply that with me sleeping with a Sergeant in a different department. To top it all, my ex-husband is the Captain of Patrol Three. That is a perfect storm for insubordination.\n\nThe layout of the new unit is four teams: the dedicated Homicide, Violent Crime, Missing Persons teams, and the floater team. Four Sergeants, each partnered with a junior detective. I run Sergeants McCants' and Kaiser's teams. Kaiser is still partnered with Midge, but I do not like the optics of Kaiser near Marlene Black, so ordered a swap for the time being.",
        "After an hour of email and budgeting overtime, I decide to walk the office and see the progress of cases. Kaiser is working with Detective Ingrid Hazel on a domestic assault case. The case board for the murder has some new information I haven't been briefed on. They still haven't found the sniper rifle. The assassin had two handguns; a SIG P266 and a Berretta NANO she concealed at her ankle. To round out her kit she also had a Chris Reeve knife. We also found one expended M84 stun grenade. I had to deal with Chase being nauseous all night because of it.\n\nBlack plate carrier with ammunition chest rack. That is our only indication of what rifle she could have used. On her person we found one twenty round magazine of 7.62x51mm NATO rounds. There is a long list of rifles compatible with that cartridge.\n\nChase said this woman was highly trained. Special Operations level of lethality. She is so proficient we don't know conclusively where she made that shot from. My money is that she sanitized it before leaving, which is why Chase was able to catch her. She took time to clean up the place and ditch the weapon. Where the hell is that rifle?\n\nAs I examine the murder board, I see Heath from the CSI lab enter with a folder. I have noticed when the CSI lab finds something potentially crucial, they come in person to brief the preliminary findings. Or they ask us to come to the basement.\n\n\"Something new?\" I ask Heath who nods. Midge and Jeff both hear me, so begin to migrate over. \"What do you have?\"\n\n\"Only one round fired toward the courthouse stayed intact. Likely the first one. The second, fourth, and fifth shattered, while the third we never found. The one I could recover, I can confidently say seven-six-two,\" he explains.\n\n\"Anything else?\" Jeff asks. That kind of information only helps a prosecutor. Digging after an ammunition purchase is too much of a haystack.\n\n\"The ammunition we pulled off her, all reloads,\" he says, and extends the file out. Midge and Jeff both reach at the same time, but Midge forgot about her belly and leans back after a brief struggle.\n\n\"Reloads?\" Midge asks.\n\n\"Reused shell casings to make her bullets. Her seven-six-two, and her parabellum, were all reloads. Crimping gives it away,\" he explains, then points to the pictures he had printed. Jeff hands it off to Midge who examines it next.\n\n\"What do you think that means?\" I ask.\n\n\"The only brass we found was from her handgun, not the rifle. She cleaned that brass up before trying to get away. Like the rifle itself, not there. That tells me she is either a sport shooting enthusiast, or a professional killer. We're still trying to identify her tattoos.\"\n\n\"Where did she take the shot from?\" I ask.\n\n\"Chief is thinking third floor, second to left window. She preemptively saturated every room facing the courthouse with cleaning chemicals on the second and third floors. We're going off chemical dissipation to get this conclusion, and general angle trajectory. Half decent defense attorney can pick that assessment apart.\" That's not a coincidence.\n\n\"You were saying about tattoos?\" I ask, and he requests that Midge flip to some pictures in the back.\n\n\"Her clothing obscures some of them, but she is significantly inked. We can only record the ones we can plainly see. Need a warrant for a full body examination. I have only seen this kind of ink on organized crime. This case, I'd say Russian,\" Heath explains, and I order them to get a warrant.\n\n\"Russian, or Soviet?\" Midge asks, and Heath turns his entire body to her. \"Our Lithuanian witness had tats as well. Couldn't see them in detail, but he had them. Owner of the Pub is Georgian. Lithuania and Georgia, both former Soviet.\"\n\n\"I'm not a Russian crime expert,\" Heath says, resisting the urge to make assumptions with charisma just to impress us. Being able to say 'I don't know' is healthy.\n\nMidge hands me the pictures of her tattoos. Her hands are colored, as are her arms until they crawl up her sleeve and out of view. There appears to be rings tattooed on her fingers, as well as Russian letters on the back of her left hand. It looks like barbed wire is wrapped up her left arm, and a snarling leopard is on her forearm. On the back of her right hand is a grinning Cheshire cat wearing the Hatter's hat. Her right bicep is partially obscured, but I can see the point of a blade with several drops of blood dripping.\n\n\"Do we know what these mean?\" I ask, and Heath shakes his head.\n\n\"I'd recommend sending them to the FBI. Look at her hand, that script is Cyrillic. Russian. I did a little research, and the cat makes me assume Russian organized crime,\" Heath says. What the hell does a cat have to do with anything?\n\n\"I'll just trust you on that. Thanks,\" I say, and he quietly dismisses himself. \"Tattoo warrant, now.\"\n\n\"Is that even a thing?\" Midge asks.\n\n\"Call legal, find out,\" I say, then return to my office.\n\n--\n\nTuesday -- October 13, 2026\n\n-Derek Whitaker-\n\nI hate my days when my officers are in the midst of a high-profile murder case. Not because of the victim, but because of the circumstances. I start and end my day with a presser, which means full blues and stars and my stoic face as I try not to tear apart reporters who ask stupid questions. Election years make it worse because Maxwell is up my ass more than he usually is.\n\nAfter this morning's presser, I enter my office and immediately dress down to my suit. I place my uniform neatly on hangers and return to my desk when my phone rings.\n\n\"Jared?\"\n\n\"You have an unscheduled visitor sir,\" he says, and I pause for a moment. \"He says his name is Wallace Trapper.\"\n\nMy least favorite campaign advisor. He stopped by my office, along with several other campaign surrogates, several times in the last few months to convince me into endorsing a candidate for mayor. I gave them all the same answer; no. I am not politician, and I have no interests in getting involved, even to endorse someone.\n\n\"Let him in,\" I say. Let's just get it over with.\n\nWallace is a white-haired gentlemen with a portly body squeezed into a suit too small. Talks fast and can convince a stripper to tip him for the conversation. Thankfully, I am not a stripper.\n\n\"My opinion hasn't changed,\" I say from my desk as he walks in and has a seat.\n\n\"Mine has,\" he says, and I raise my eyebrows. \"This election is going to be a disaster.\"\n\n\"When your candidate is caught in an affair with his daughter's cheerleading team, that tends to happen,\" I say. They were eighteen, so the most we investigated was if they were underaged at any point of the affair. Peter Nicce isn't completely stupid, at a bare minimum.\n\n\"My former client. That's choice A. Choice B is the incumbent who wrongfully convicted five men in a single year. And likely covered up the fact his nephew murdered a girl. Those are the options right now; a corrupt politician and a pedophile.\"\n\n\"And you want me to endorse one of them?\" I ask.\n\n\"No. Like I said, former client, and my opinion has changed. What the city needs, is a dark horse,\" Wallace says, and suddenly I realize why he's here. He wants me to be an independent candidate.\n\n\"Firstly, I'm not a politician. Secondly, what the hell makes you think I'm a viable candidate less than a month away. Am I even eligible?\" I ask.\n\n\"You let me worry about that, I wouldn't be here if you were ineligible. You wouldn't ask those questions if you weren't interested,\" he replies. He is good, but I still doubt I would have a chance if I were interested.\n\n\"You already jump off Nicce's ship?\" I ask, and he confirms a third time. \"I'm not viable.\"\n\n\"I've been doing a bunch of focus groups, to gauge public perception. When asked Maxwell, Nicce, or anyone else, seventy percent of respondents said anyone else. When asked to decide amongst a group of possible contenders, I added your name. You're popular. Extremely popular. Sixty seven percent said they'd back you.\"\n\nWow.\n\n\"Six thousand likely voter sample size. Thirty thousand people voted in the last election. I'd say that's pretty goddamn representative,\" Wallace says, and watches my reaction. Do I have a shot at being mayor? Do I want that?\n\n\"I'm not a politician.\"\n\n\"Everyone says that until they're a politician. That's part of your appeal. Military veteran. Police officer, and not a politician. A no nonsense doer, not talker. Youngest police chief in the city's history, crime is going down, minus the occasional sniper, but people trust you to handle it.\"\n\nDo not get me started on that goddamn sniper. I have a bad feeling about her. She is a ghost, and I do not like what that implies. I'm honestly surprised the CIA or something similar hasn't shown up to collect their rogue asset.\n\n\"I'll think about it,\" I say, and he smiles. \"That's not a yes.\"\n\n\"I have until Friday to file the paperwork,\" he says, standing up from his seat. \"Look what you've done with this job. Hand pick your successor and get the red tape out of their way.\"\n\nThat does sound like something I could get behind.\n\n--\n\nTuesday -- October 13, 2026\n\n-Chase Kramner-\n\nIt took a little convincing, but I did talk Jenn and Midge into letting me interview the assassin before we lose her. I study the case board for an hour to gather the information I need, then call her from holding to put her into a room. Secured to the table by steel chains.\n\nI am already leaning against the two-way mirror when she arrives. Her expression does not change when she sees me. The officers secure her to the table, and in the process of her lifting her arms, I see a tattoo of hands holding her sides, with an eye in the palms. The woman's eyes find mine, and we begin a staring contest. After a minute, she looks at the table, and keeps her eyes there.\n\n\"Who trained you?\" I ask, and she keeps looking down. \"Most people in the military have their DNA on file. Nothing for you. No prints either. I double checked with SOCOM, just asked for a yes or no. Didn't ask for details, just, do you know her? They said no. No facial recognition, nothing. You don't exist anywhere in the United States military or law enforcement data bases. Your tattoos suggest Russian.\"\n\nThe assassin says nothing.\n\n\"Foreign?\" I ask. Nothing. Next pivot.\n\n\"Knife handling technique was good. I did a lot of looking last night. Marine Corps style, right?\" I ask, and her head tilts up, just a little. That is a response. I'm getting somewhere.\n\n\"Maybe not a Marine, but you were trained by one,\" I say, and she fidgets in her seat. Getting warm. \"Dad was a Marine if I had to believe something.\"\n\n\"If you'll believe in me, I'll believe in you,\" she mutters to herself. She speaks.\n\n\"What was that?\" I ask. Her head rises, and our eyes lock.\n\n\"If you'll believe in me, I'll believe in you,\" she says, then slowly grins. I want her to keep talking so I can nail down an accent.\n\n\"What's your name?\" I ask. Back to the silent treatment.\n\n'If you'll believe in me, I'll believe in you.' That is cryptic, but weirder still, is that I have a burning feeling I know that phrase. What the hell triggered that response? It sounded almost Pavlovian. Something tells me this woman is not playing with a full deck mentally.\n\nThe door opens behind me, and I see Midge gesture for me to leave for a moment. I do and close the door.\n\n\"What?\" I ask. \"I got her to say something, just let me keep going.\"\n\n\"I just searched that phrase. It's from Alice in Wonderland,\" Midge says, and shows me her phone. I resist correcting her phrasing of the title.\n\n\"Well, now that we have seen each other,\" said the unicorn, \"If you'll believe in me, I'll believe in you...\" That's not from Alice's Adventures in Wonderland; that's from Through the Looking-Glass. The Cheshire-cat is from the former.\n\n\"What does that mean?\" I ask, and she shrugs, admitting she also has no idea.\n\n\"Does she seem like she isn't all there?\" Midge asks while touching her temple.\n\n\"Oh yeah,\" I say, and look at the door over my shoulder. \"Should I play to Alice in Wonderland?\" Great, now she has me saying it too.\n\n\"That's the only time she's spoken. Worth a shot,\" Midge suggest.\n\nI return to the room and sit down across from her. She has not moved an inch.\n\n\"May I call you Alice?\" I ask, and her head shoots up to me. We make eye contact again, and she smiles.\n\n\"Yes,\" she replies. Holy shit.\n\n\"Where did you put the rifle Alice?\" I ask, and she shrugs. \"Don't remember?\"\n\n\"Down the rabbit hole,\" she replies. I am comfortable with saying American accent. Slight twang to it.\n\nThe door opens behind me again, and this time I see a man with a briefcase. What now? A middle-aged man with thin hair and a suit that is wearing him. He looks rather silly with a tie covered in red hearts.\n\n\"This is my client and she will no longer agree to interview without my presence,\" the man says, and I rise from my chair to face him.\n\n\"She hasn't asked for a lawyer. She's barely said a word.\"\n\n\"He is my lawyer,\" Alice says. Fuck me.\n\n\"Unless one of those words was waiving her rights, I'd like the room with my client,\" the lawyer says, and I look through the glass and motion to cut the cameras and microphone. I exit the room and slam the door shut behind me.\n\n\"What the hell just happened?\" Midge asks.\n\n\"The assassin has a lawyer.\"\n\n--\n\nWednesday -- October 14, 2026\n\n-Midge Appletree-\n\nThat rifle just straight up vanished. At best we have Alice for the attempted murder of a police officer. Until we find that rifle, we cannot prove she killed Marlene Black and Hugh Willard. We believe we found the rabbit hole she mentioned. The building used to be a residential structure before the city gentrified the area and remodeled it. The laundry chute was in the halls and led to the basement laundry room. She takes the shot, cleans up, and drops the weapon to the basement. After searching it and finding nothing, we assume she had an accomplice who smuggled it out. I want to interview Saul again, but the FBI is shielding him now.\n\nToday she was charged with the attempted murder of a police officer and is being held on bail for one hundred thousand dollars. The first thing I suggested was looking into the lawyer who showed up. Anthony Young. At best he has a case history of being an ambulance chaser. We're not sure about the worst.\n\nSilverlake still has not been found. No one has seen him. Our initial theory that he was the real target is looking more correct. Silverlake himself seems to know those bullets were meant for him. The questions we need answers for are, who wants him dead, and why? I guess we'll know more if we ever find him.\n\nJeff had the officers do a surveillance walk around the block, so we know where cameras are and who to request footage from. McGee's on the ground floor is our priority. There are two ways in and out of that basement; the alley and the kitchen. The footage from the pub could provide us with some leads on the accomplice. Snipers do not work alone after all.\n\nThe pub handed over their video without a fuss, and that is the extent of my day. There are a dozen cameras and hours of film, before and after the shooting. Jeff is working the courthouse cameras, and the officers are working on nearby businesses. I scale it back an hour before and an hour after and focus on the two internal cameras after we see no one leave or enter through the alley. Jeff cannot help much because the courthouse camera is canted too low, so the best he can see across the street are the tires of a car parked on the curb. The car belongs to Saul.\n\nAnyone carrying a bag out of the building is a priority. There are no patrons because McGee's was not open. The cooks and Saul are preparing food and tables. Three people in the building besides the shooter. I can identify the cooks by their white coats, and Saul is wearing a green shirt with a black vest. There is small blind spot at the space between the kitchen and dining area. The doors leading upstairs and to the basement are both in that blind spot. Saul was in the basement when the shots were fired. I see his shoulder when he returns. It is hard to conclusively say when because of that blind spot.\n\nI spend hours watching and re-watching the footage again and again. Is the rifle still in the building? Did Saul hide it in the basement, and we couldn't find it?\n\n\"Shots go off, staff ducks and covers,\" I narrate to myself. This camera is above the door and shows the entire seating area.\n\n\"Here's Chase, three minutes later,\" I say. I'd say no more than two minutes to disassemble the rifle, pick up the brass, sanitize, throw a bag down the chute, and then escape. The second interior camera is in the kitchen and has a narrow angle that does not have the basement door in view, creating that blind spot. Not so narrow that it would not catch someone leaving after two or three steps.\n\n\"Anything?\" I hear a voice ask and turn my head over my shoulder. Chase is prowling around with nothing to do either.\n\n\"Does your girl...Lieutenant Ito know your hanging around?\" I ask.\n\n\"She can pull rank on me later. Anything good?\" he asks.\n\n\"Three hours before and after. Nothing conclusive.\" I say.\n\n\"Go back further.\"\n\n\"How far?\" I ask. Time is too critical to waste.\n\n\"Snipers can hold a position for days at a time in the most difficult environments. I'm sure she could hold down an airconditioned room for longer than three hours,\" Chase says. That is a good point. \"Could she have entered off camera somehow?\"\n\n\"Sure,\" I say. \"You can get to the roof from the fire escapes. Do it a few buildings down, cross the roofs, come back in through the escape above the camera.\"\n\n\"That's good. You're a cop, she's an assassin. If you thought about it, she probably did to. You guys do a surveillance sweep?\" Chase asks.\n\n\"You know we did, hence the map,\" I say, pointing to the case board which has a map around the area. I stand up and wobble to the board to show him. We had put a diamond on the board for every camera with dashed lines to show approximate field of vision.\n\n\"This is just one giant jigsaw puzzle. Each camera is a piece. You check this one?\" Chase asks, putting his finger on a camera across the street and facing the alley. The opposite opening from where Chase and Sergeant Donner entered. Labeled camera five.\n\n\"Who has camera five?\" I ask the officers, and a hand pops up. \"How far back are you going?\"\n\n\"Two hours before,\" the officer replies.\n\n\"Back it up further. Like midnight,\" I say, and the officer groans at me. \"Officer?\"\n\n\"You got it detective,\" he says dismissively.\n\n\"How about you do it without the attitude,\" a voice says from the door.\n\n\"I said I got it...\" the officer starts to say, then sees the person who said that is Chief Whitaker. His face twists, like he shit himself.\n\n\"On your feet,\" Lieutenant Ito shouts from her desk.\n\n\"As you were. I need an update before I go to the press. What do we have?\" he asks and then looks at Chase and sternly says, \"Sergeant Kramner, unless you're here to give your statement, get out.\"\n\n\"Yes sir,\" Chase says and leaves the room.\n\n\"Jeff?\" Lieutenant Ito asks.\n\n\"Sir, I'm going to be straight; we got dick,\" Jeff says.\n\n\"Describe the dick,\" Chief says with a straight face. I pretend to cough to hide my snort.\n\n\"We can't even conclusively say where she took the shot from. Each room facing the courthouse, was cleaned recently with the same chemicals. We know the angle of the shot suggests it couldn't have been higher than the third floor, and the first is just not in the equation. Third floor is most likely, but the second is still possible\" Jeff explains.\n\n\"So, second or third floor. Find the rifle?\" Chief asks.\n\n\"No.\" The Chief looks incredibly frustrated we haven't. \"We're working a few more angles.\"\n\n\"Work them fast. Did the name Alice narrow anything down?\" he asks.",
        "\"Nothing, and we cross referenced that six ways to Sunday,\" I say.\n\n\"Do we have any evidence the rifle got smuggled out?\" Chief asks. We look at each other, agree without speaking, and say no. \"Get a warrant to start breaking the drywall.\"\n\n\"Yes sir,\" I say.\n\n\"Lieutenant, I want progress reports every six hours or significant discovery,\" Chief says, and she replies it will be done. \"Get to work.\"\n\nI am exhausted from looking at a screen all day with so little progress. Where the hell is that rifle? To feel like I'm doing something productive, I announce I'll work the warrant to start breaking down walls. Within the hour I have it submitted and start to watch tape again.\n\n\"Holy shit,\" that douche bag officer says from his desk. \"Detective.\"\n\nI shuffle over to his desk and look at what he found. At one in the morning the camera caught a figure entering the alley. The quality isn't great, but I can clearly see someone enter with a bag slung over their shoulder who starts climbing the fire escape until they exit frame. Got her.\n\n\"Back track. find out how she got there,\" I say, and he nods. Suddenly he's not a dismissive asshole anymore.\n\n--\n\nAfter a long day, the only lead we have is that Alice entered the building by crossing the roofs to avoid cameras. We're going into the building tomorrow with the warrant to start busting down walls for that rifle. For now, I go home and build a puzzle with my kids while Gianna is working late.\n\nWendy is too cool to help with a one-thousand-piece puzzle, but Wesley and Preston are up to the task. We made the rule she must at least be in the living room for family time. No going to your bedroom. You can be on your phone, but you must be here. Wendy spends the entire time texting on her phone, but at least she is present.\n\nPreston's method of puzzle building is segregating colors into neat piles on the table. This frustrates Wesley who is working the frame with me, constantly having to push his piles out of the way. The frame is complete, and Wesley starts looking for key features on the picture and trying to build it. I work from one corner and try to work away from it. The space above the table is a fun tangle of our arms trying to have our method dominate the activity. Within the hour, it is clear Preston is winning.\n\n\"It looks like it fits,\" Wesley says, trying to force a piece down. It does look right, but the shape does not conform to the surrounding pieces. I stop him from slamming his hand on the table in anger.\n\n\"Calm down, set the piece aside, and look around,\" I say, then start explaining that the color transition doesn't align. \"See that?\"\n\n\"Yeah,\" Wesley says, and starts scanning again. He finds the correct piece in Preston's pile and connects it. \"Got it.\"\n\n\"Hey!\" Preston says. \"That's my piece.\"\n\n\"No one owns the pieces,\" I declare.\n\nThe boys keep working, and I say I need to go to the bathroom. I kiss their heads and walk toward the hall, playfully moving my hand over Wendy's head. She slouches into the chair so I can't touch her.\n\nAfter I pee, I start washing my hands and feel the baby kick when I'm hunched over the sink.\n\n\"Motherfucker,\" I say, holding my stomach. \"Keep it down in there.\"\n\nIt looks like it fits. I think about Chase saying the cameras were a giant puzzle. Put the pieces in the right order and they can tell a story. It looks like it fits.\n\nI have a thought, and call Chase's desk phone. It is late, but I have a feeling he's there.\n\n\"Kramner,\" he says.\n\n\"It's Midge.\"\n\n\"What's up? You still here too?\" he asks.\n\n\"No. Weird favor. Could you pull up the videos from the shooting, align the clocks and show them on a single screen? Then tell me if anything looks out of place?\" I ask.\n\n\"Uhhh, sure,\" Chase says, and I hear his mouse click. \"You guys put the videos in the share drive?\"\n\n\"Yeah. We haven't migrated the folders over yet, still just under homicide,\" I explain, and I hear a lot of clicking. I give him to the passcode to the file when he asks. I'll be burning those to a hard media tomorrow.\n\n\"Case number?\" he asks, and I provide it. \"Surveillance...which ones?\"\n\n\"Do the kitchen, the dining area, and the south courthouse camera facing the restaurant,\" I say. I hear clicking again.\n\n\"Give me a sec to align them,\" Chase says. \"Back up this video five seconds, this one three seconds, and play.\" Chase is likely making sure the time stamps are the same by pausing them seconds apart, letting one play, then playing the next when the time reaches the same position.\n\n\"Gunshot goes off and the cooks duck down. I duck down,\" he says.\n\n\"Anything out of place?\" I ask. \"A piece that doesn't fit?\"\n\n\"Nothing jumps out,\" Chase says, and I sigh.\n\n\"Thanks anyway,\" I say and nearly hang up.\n\n\"Wait,\" Chase says, and I hold my breath. \"The waiter vanishes before the shots are fired. Just as the defense team arrives across the street. You said the basement door is just off camera, right?\"\n\n\"Yes,\" I say. I already know this.\n\n\"He returns into frame, two minutes later. I can partially see him the rest of the time because he hides near that door. I was flash banged a few seconds before, so it's a little fuzzy, but remember him. I came in and his back was to that door. He was the one who directed me upstairs. We then lose him again after I run upstairs, but he is still present when back up arrives. Did we interview the waiter?\"\n\n\"Of course. Don't ask me to pronounce his name,\" I say. I interviewed the pub's staff with Jeff, and the stories more or less added up. Even Saul's inconsistency isn't too egregious. Not like the FBI will let us talk to him again.\n\n\"I'm not sure what I'm looking for,\" Chase says. \"Did you guys search the basement?\"\n\n\"Yeah. Thanks for looking,\" I say, and he says he might look at it for a little bit longer tonight. \"Go home and fuck your girlfriend,\" I say and hang up.\n\n--\n\nThursday- October 15, 2026\n\n-Jennifer Ito --\n\nJudge Selene Rook rejected our warrant to strip Alice to photograph her tattoos. Nowhere in the warrant could we claim we were searching for additional physical evidence for the crime of which she was accused, and she didn't buy our argument to see if she could be connected to another crime. She called back and said, \"Tell me you believe this woman who you couldn't identify by any other means, is going to be found because she once committed a crime while topless.\" I said she could have had her tattoos photographed by a different jurisdiction. They would have also needed to fail at fingerprinting her. Rook held her ground and refused to sign off.\n\nRight after that, I receive a worse call; Alice was released on bond. In the unlikeliest of events this happened, we had plans to surveil her. The officers on that detail let me know a car picked her up and drove her to an apartment. Her bond was posted anonymously.\n\n\"Alice is out!\" I shout over the commotion of the office.\n\n\"What?\" Midge asks.\n\n\"You heard me. We got eyes, but exercise a little more caution than usual,\" I explain, and the office resumes their work. \"Midge, anything on the videos?\"\n\n\"Nothing that we didn't know yesterday,\" Midge explains.\n\n\"Warrant to search the building again?\" I ask.\n\n\"Waiting on Judge Rook,\" Midge says. Judge, please do not fuck me twice in a single day.\n\n\"Keep me informed, I'm updating the Chief in two hours,\" I say, and my phone rings. I lean over my desk and pick it up off the cradle. \"Ito.\"\n\n\"You guys had a BOLO out for Henry Silverlake?\" the dispatch Sergeant asks, and I confirm we do. \"A patrol car is saying they found him.\"\n\n\"Where?\"\n\n\"Sleeping in a vehicle behind a bar. Want them to knock on his window?\" he asks.\n\n\"Field test him. If he's drunk, bring him in for DUI. If he's not drunk, bring him in for DUI,\" I say, and then hang up. \"They found Silverlake. He'll come in for a DUI in a few hours.\"\n\n\"Warrant just came back, we're good. I'll be busting down walls with uniforms,\" Midge says as she removes the warrant from the printer.\n\n\"Don't have too much fun.\"\n\n--\n\nThursday -- October 15, 2026\n\n-Chase Kramner-\n\nI am back to the beginning. Silverlake was likely found, passed out, in his car behind the same bar Amanda Hopkins worked at. Sergeant Donner gave me a call a short time ago, letting me know her team found him. I asked her to give me first dibs.\n\nMy car is parked across the only exit of the parking lot. The first place my eyes go to is where Amanda's body was found. A few employee vehicles are parked around Silverlake, who is taking up two spaces. The owner called the police and asked to get him removed. Patrol sat on him for me and are still parked next to his car.\n\nLooking down into the car, I see it is in fact Henry Silverlake asleep in the driver's seat. His chair is leaned back all the way, and he looks completely disheveled.\n\nI knock on his window, and Silverlake does not even squirm in his sleep. After knocking two more times, I am fed up. The patrol officer leaves his vehicle after I gesture for him to join me.\n\n\"Unresponsive. Smash it,\" I say, and he is hesitant. \"Anyone asks, say I did it.\"\n\n\"Alright,\" he says. The officer draws his baton, moves his face away, and shatters his window in one swing.\n\n\"What the fuck!\" Silverlake shouts as he jumps up so fast, he hits his head on his ceiling. Before he can gather his bearings, I reach through the window and open his door from the inside. \"What the fu...\" I pull him out of his car by his shirt and throw him to the ground. \"I get the point!\"\n\n\"Get up,\" I say, and he grunts so hard he coughs. Silverlake staggers to his feet, falling backward to his car. I pick him up straight and push him back into his car. \"Where you been?\"\n\n\"Go fuck yourself Kramner,\" he says, pushing back against me. I grip his jacket tighter. \"Tough guy. Hit me or back off.\"\n\n\"Why are you running?\" I ask.\n\n\"Just taking a few days off.\"\n\n\"Behind a bar? In your car?\" I accidently rhyme.\n\n\"I will hang out in a box with a fox if I want to,\" he says sarcastically.\n\n\"Alright Dr. Seuss explain why an assassin took a shot at you. You ran like you know why she was trying,\" I say, and he looks around, then back to me. \"Who is Alice?\"\n\n\"Never heard of her,\" he says. In my frustration I push him into his car again. \"You're a cop. I know what you can do, and what you can't do. Believe me, I'm more scared of the alternative than I am of you.\"\n\n\"What's the alternative?\" I ask.\n\n\"Arrest me, or fuck off,\" he says. I lean over and directly observe an open container in his car. \"For that weak ass shit?\"\n\n\"You smell alcohol on his breath officer?\" I ask, and the officer sniffs loudly, and then nods. \"I smell it too. Under arrest for suspicion of DUI.\"\n\n\"In a parked car?\" he asks.\n\n\"Intent is a prosecutor's problem, not mine,\" I say, and pull out my handcuffs. Silverlake curses to himself as I squeeze the handcuffs closed. \"Officer, bring him to HQ. Drop him off to Detectives Appletree or McCants.\"\n\n\"You got it,\" he says and escorts Silverlake to the cruiser.\n\n--\n\nAfter arresting Silverlake I return to my office and start watching the videos again. Last I knew they were going to let him stew until Midge got back from researching the building with a warrant to start breaking walls. I am an hour into my work when I hear my door slam shut. Jenn is leaning against the door with her arms crossed over her chest. Something tells me she is not here for a romantic rendezvous.\n\n\"What the fuck were you thinking?\" Jenn asks. I pause the video. \"Did you think I wouldn't know you went to Silverlake yourself?\"\n\n\"Jenn...\"\n\n\"...you're not talking to Jenn. You're talking to Lieutenant Ito,\" she says with the tone of slap. \"How are we supposed to get him to talk when the person who picks him up smashes his car window and strongarms him?\"\n\n\"I'm the bad cop. Send in a good one,\" I recommend.\n\n\"Chase...\"\n\n\"...Sergeant,\" I say reflexively. I hate my own pettiness on that one, but she started it.\n\n\"Sergeant,\" she says, realizing how she began the conversation. \"This is a homicide case. The Chief has made it clear he wants you nowhere near it. If you won't listen to him, please listen to me. We can't have a witness being arrested by the boyfriend of the Lieutenant overseeing it, who is also the ex-boyfriend of the victim.\"\n\nAll good points.\n\n\"That bullet could have taken off my head. She was a moment away from killing me. Pardon me if I take that personally,\" I say.\n\n\"I understand. But this is Jenn asking you, to let me do my job,\" Jenn pleads, and I exhale, then nod. \"Please just back off a little.\"\n\n\"I will,\" I say. Jenn then walks around my desk to kiss me before returning to her office.\n\nI tap my spacebar to play the video again. What am I missing? There is no way that weapon got smuggled out. Rubbing my hands downs my face in exhaustion, I playback the tape one more time. What am I missing?\n\nSometimes narrating footage helps, so I mumble the script as I watch.\n\n\"Bang bang bang, shit, duck and cover. Police arrive, and I run across the street, Donner follows. We run to the intersection...\" I say aloud, watching the seating area of the pub. I do not see shadows run across the windows. \"...wait.\" I run it back again. \"Where am I?\"\n\nI can see the shadowed silhouette of the cars outside, so I should be able to see my own shadow dart across. However, I don't. Looking at the time stamp I see they are aligned properly.\n\nDid they give us a doctored video?\n\nI type McGee's into Google maps and see three pins land on the map. It is a franchised pub. I click on the one next to the courthouse and scan it over once. When I look at another one on the other side of the city, I notice the interiors are nearly identical. They gave us the footage from a different pub, spliced together to hide the activity in the dining area. Like Saul walking through it with a rifle bag. I also notice the silhouettes of two cars instead of one, then it jumps cuts back to one.\n\n\"You motherfuckers,\" I say, and start to call Midge, but stop dead when I remember something. I tripped over a bag in the kitchen next to the stairs. I kicked that bag out of the way. I kicked the fucking murder weapon!\n\n\"Motherfucker!\" I shout and punch my monitor off my desk. It flies across the room, the cords pulling my laptop down with it.\n\n\"Jesus Christ, what the hell was that?\" Doll says from the down the hall.\n\nI finish calling Midge, still seething, and hear the walls being broken down over the line.\n\n\"What!?\" Midge screams over the thudding.\n\n\"I found what we were missing!\" I scream back.\n\n\"What!?\"\n\n--\n\nMidge continued to bust down walls, just in case, and returned to the station within an hour. By then I had compiled the information into something actionable. Using Doll's computer because I'm paying for a new one.\n\n\"I know Chief told me to cease and desist, but consider this my statement,\" I say to Midge and Jeff McCants while Jenn watches from her officer door. I told her I would back off as well, so her eyes are stabbing me right now.\n\n\"What's wrong with the video?\" Jeff asks.\n\n\"I'm not in it,\" I say, and Midge laughs. \"No, seriously.\"\n\n\"Should you be?\" Jenn asks.\n\n\"The time is aligned, right?\" I ask, and everyone nods. I narrate up to the point where the video at the courthouse shows me run across the street. I then point to the right window on the pub's feed. \"Sergeant Donner and I run across the windows, low, but not fully under the windows. We did that, less than ten seconds after we crossed the street.\" I let it play. \"Ten seconds.\" And play. \"Twenty seconds.\"\n\n\"You sure that's right?\" Midge asks.\n\n\"Thirty seconds. How many cars were parked in front of McGee's?\" I ask.\n\n\"One,\" Jeff says, and I point out the two cars parked, and the jump cut. \"Holy shit.\"\n\n\"McGee's is franchised. They added footage from one of the other pubs,\" I say, and we can all hear Midge literally growling. \"It gets worse. I tripped over the fucking bag getting to the stairs.\"\n\n\"How'd you forget that?\" Jeff asks like I'm stupid.\n\n\"I got hit by a stun grenade fifteen seconds earlier. Pardon me if I don't have perfect recall,\" I say harshly.\n\n\"Knock it off, both of you,\" Jenn says to keep the peace. \"Midge, I want someone in handcuffs for this tape, today.\"\n\n\"Obstruction?\" Midge asks.\n\n\"Obstruction,\" Jenn replies, and Midge says she will get it done. \"Jeff.\"\n\n\"LT?\" Jeff asks.\n\n\"I'll make some calls to deal with the FBI. Grab a uniformed officer and find Saul,\" Jenn says and Jeff nods. \"Chase, get out.\"\n\n\"While they're working, you want to grab some lunch?\" I ask The Kaiser, who pops his head up from his desk. He gives me a nod after checking his watch.\n\n--\n\nThe Kaiser and I have not been able to sit down together for months. I do not recall the last time we had lunch during a workday. Part of me thought I was sneaky by picking a place near Saul's, but The Kaiser saw right through that.\n\n\"You can't keep pushing your luck with keeping distance from this case,\" The Kaiser says after he orders a sandwich. I get a cobb salad. \"She isn't dumb, and you seem determined to test her patience.\"\n\n\"Saul smuggled the rifle out. I kicked the fucking bag. Probably moved it the moment I went upstairs. Dropped it in his car and went back inside. Right under our noses,\" I say. And right under my fucking feet.\n\n\"Whoever gave us the footage is in cahoots with Alice,\" The Kaiser says, and I nod in agreement. \"Why? And why Marlene? Or Silverlake?\"\n\n\"I'm thinking it has something to do with Calvin,\" I say, and he ponders the suggestion. \"She's mob lawyer. Have we interviewed her?\"\n\n\"Just about what happened, nothing deep,\" he says. \"Stop asking. Not your lane.\"\n\n\"She almost killed me,\" I say.\n\n\"Trust them to do their jobs,\" The Kaiser says, and I put my radio on the table. I brought the roamer in case something happens nearby. \"Turn that off.\"\n\n\"Not with an assassin in the wild,\" I say. Some dispatch traffic comes in, and The Kaiser sighs while shaking his head. \"When is Abigail due?\"\n\n\"Two weeks,\" he says.\n\n\"Gender reveal?\" I ask.\n\n\"The birth will be the reveal,\" he says with a smile. Kid number two for him. I need to catch up. A few years ago, I would have feared something like that. Six months cannot pass fast enough now. \"Any plans with Jenn?\"\n\n\"Not for a few months at least,\" I say, and he grins. \"What?\"\n\n\"Nothing,\" he says, and we both laugh a little. Then Victor-Charlie-2-1 calls up a 10-54 over dispatch. Possible fatality. \"Victor Charlie. That's Jeff.\"\n\n\"Shit,\" I say, and we listen. Requesting medical to the scene, then calls a 10-33, closing the line for only emergencies. \"Saul's dead.\"\n\n--\n\nThursday - October 15, 2026\n\n-Jennifer Ito-\n\nWhen I arrive at the scene, Jill Whitaker is crouched over the body of Saul Grybauskait\u0117. Sergeant McCants went to talk to him with some uniformed officers, only to find his door left partially open and obstructed by his corpse. Shot twice in the head at close range, once while upright, then again when on the floor. Just to make sure.\n\nThe entryway of his apartment is a shallow pool of blood. Jill's crew has placed a small bridge over the blood so they can still move without contaminating it. I have never seen a CSI flex so much authority to keep a scene clean. Jeff is the only officer she has allowed in, and I understand, so I hang back in the hallway.\n\nJill tells us the killer likely entered the house because the right foot appears to scrape across the ground from the door pushing into it. It is then dragged again when the door was pulled back, but his foot blocked it from being fully closed. The killer didn't bother moving his foot out of the way, so it was left open.\n\n\"Talk to me,\" I say to Jeff. I see his shadow moving around before he steps into my view. Jill has him wearing a haircap and booties.\n\n\"Nothing appears stolen. No home security. No evidence of a struggle,\" Jeff says from inside. \"I'm thinking ding dong, bang bang.\"",
        "\"Neighbors?\" I ask.\n\n\"The unis are still asking, but no one wants to talk,\" he says. Of course, because that would be useful. \"Silencer?\"\n\n\"This isn't a movie, suppressors are loud,\" Jill says from her perch on the bridge. \"I can tell you this shooter was shorter than the victim.\"\n\n\"How so?\" I ask. \"Aren't there too many variables to assume that usually? Arm extension, posture?\"\n\n\"The shooter likely fired at full arm extension. There is blood on the door on the inside from the first gunshot, but none in the hall,\" Jill says. That means the door was cracked open and the killer shoved the gun into his face from the opening. \"Angled up, round exits and hits the ceiling. I'll finish the ground before I start digging slugs out and having the debris contaminate the scene. His face is blown into the door, and his body recoils backwards when the shooter kicks the door open.\" Jill points out the damage on the door about the size of a foot. \"Shoots him one more time when he's on the ground.\"\n\n\"How does his face move against the round?\" Jeff asks.\n\n\"Physics,\" Jill says. \"More energy is exerted from the exit wound than the entry. Bone and brain shooting out is like a propellant. It's why I roll my eyes at Kennedy conspiracy theorist who claim his head moving backwards is proof of something other than his face being the exit wound.\"\n\nI did not know that. Jeff silently goes back to looking for indicators.\n\n\"You guys talked to him before, right?\" I ask and do no hear a reply. \"Jeff?\"\n\n\"Huh?\" I ask again. \"Yeah.\"\n\n\"And?\"\n\n\"FBI called us before we could get anywhere. Midge was suspicious.\"\n\n\"Rifle?\" I ask.\n\n\"If it was here, it isn't anymore. The shooter might have come to get it,\" Jeff says, and I agree that's a possibility.\n\n\"Time of death?\" I ask Jill, who looks up at me. \"Estimate?\"\n\n\"He's ambient temperature. Definite maggot eggs, but no hatchlings. Rigor mortis has set in. Ten to twelve hours if you need a ballpark,\" Jill explains.\n\nFor nearly half a day his neighbors have walked past his broken door with a visible body, but no one called the police. That is some potent fear.\n\n\"Lieutenant,\" I hear from down the hall. Chief Whitaker is walking toward me with a second man in a suit and gun behind him. \"I figured I'd get the last update in person.\"\n\n\"Last update?\" I ask, and then look at the other man. FBI. \"Turning the case over?\"\n\n\"We are,\" he says, and the agent steps around the Chief to shake my hand.\n\n\"Special Agent Shelby, Organized Crime,\" he says.\n\n\"Lieutenant Ito,\" I reply. \"Best we have here so far, is about ten to twelve hours ago.\"\n\n\"We'll let them finish up before we talk about this one. Is the courthouse sniper still under observation?\" Agent Shelby asks, and I shake my head.\n\n\"Once this was called in, I had the officers knock. She's escaped while under surveillance. Do you know who she is?\" I ask.\n\n\"Not for this room,\" Shelby says. They do know who she is. \"Mind if I get in there?\" he asks Jill.\n\n\"See my bag next to the door?\" Jill asks, and he replies that he does. \"Put some booties on.\"\n\n\"You got it,\" Shelby says, and then starts doing as ordered. When I imagine the FBI taking a case from the locals, I pictured more condescension. I do not know if Shelby's courteousness is his own demeanor, or a testament to our relationship with the bureau.\n\n\"They only sent one guy?\" I ask Chief Whitaker who directs me to walk with him down the hall. \"Sir?\"\n\n\"We're still involved. Our involvement is through SI now. Shelby asked for Chase in particular,\" Chief explains.\n\n\"Does he know?\" I ask.\n\n\"I told him, but he doesn't care. Shelby's worked with Chase before, so there is already a relationship. It is still a homicide, so he will liaise with you. Will that be a problem?\" he asks, and I think for a moment. Will it be a problem to work directly with my boyfriend?\n\n\"Maybe,\" I say, and he appears surprised I answered that honestly. \"Chase shouldn't be on the case, and I've already kicked him back a few times. Now he's running point on it?\"\n\n\"I feel the same, unfortunately it is what it is. I can assign it to Bryan if you think it'll cause tension. Professionally or otherwise,\" he says. I have this aching feeling to both appreciate his consideration and detest the patronizing context. I doubt he would have this conversation with a man. He does come off as somewhat uncomfortable to ask the question. Almost annoyed he must ask his officers if they can behave like grownups.\n\n\"We'll be fine,\" I say after a small deliberation.\n\n\"Okay,\" he says, leaving his trust in me to take care of it.\n\n--\n\nThursday -- October 15, 2026\n\n-Midge Appletree-\n\nI brought three uniformed police officers with me after sending a letter to Judge Rook alerting her to the fact Anton Mamedova tampered with the evidence she ordered him to provide. She gave me the arrest warrant and within two hours we are escorting Anton out of his home.\n\nWhile one officer waits at the squad car, I enter his home with two others to conduct a search. It is an upper middle-class townhouse, like my own, but his has a Jaguar parked out front. I glove up, and refrain from touching anything unless I plan on examining it with intent.\n\nAll the paperwork in his office is dull and inconspicuous. Nothing in the living room stands out. His kitchen has the dark granite countertops I want but can never convince Gianna to spend the money on. His guest rooms are nicer than my master bedroom.\n\n\"Detective,\" one of the officers says as I am digging through a closet.\n\n\"What's up?\"\n\n\"Check this out.\" I follow his voice to the living room, where the officer knocks on the coffee table. It sounds somewhat hollow. \"Hear that?\" After a moment of searching, we figure out how to make the top panel slide off, revealing a hidden storage compartment. Inside are a few guns and bags of cocaine.\n\n\"What's in there?\" I hear from the door of the house. Chase walks in while pressing gloves to the pits of his fingers.\n\n\"Get the fuck out before your girl...before my boss has an aneurism,\" I say, then watch him look at the find.\n\n\"Funny story. My case now,\" he says, and I laugh a little. Then I realize he isn't messing with me.\n\n\"Special Investigations liaison with the FBI?\" I ask, and he nods. \"Great, your problem.\" My gloves make a snapping sound when I pull them off.\n\n\"I get one person from homicide to help me,\" he says.\n\n\"I'll get Will caught up,\" I say, because I know he is going to take Will with him.\n\n\"Still your case,\" he says. He is kicking Jeff, not grabbing Will, but keeping me? He seems to notice how confused I am. \"Will won't challenge my presumptions as much. I need someone to keep my bias in line. I trust you to handle me, more than Will would be ready to.\" Chase is acutely aware of how much he shouldn't be here.\n\n\"Fine, deal,\" I say, then look at the coffee table. \"If one of these guns did Saul, little too convenient if you ask me.\"\n\n\"The person who moved the rifle is killed by the person he worked for?\" Chase asks, and I nod. We watch the guns get bagged. We'll find out, but I don't think Anton did it. \"The rifle is still missing. Why?\"\n\n\"Because it's still needed,\" I say, and Chase thinks for a moment.\n\n\"Why not just get a new rifle?\" Chase asks. \"If this gun is a plant, why not also plant the rifle as well?\"\n\n\"I don't know. We're not playing with a full chess board yet. Let's regroup, sit down with the FBI, maybe they'll actually share something we don't know,\" I say. Chase agrees we need to get more information before we start forming theories. \"When do we get a briefing? How does this work exactly?\"\n\n\"I'll fill you in when you get done here,\" Chase says, and joins me for the rest of the search.\n\n--\n\nI'm told to get a good night's sleep, because we'll be working with the FBI on this case on all cylinders tomorrow. I am grateful Chase brought me into this possibly career making case, by the smell of it. Shadowy snipers with Russian tattoos with a penchant for Lewis Carol. A Lithuanian FBI informant seemingly killed by his Georgian boss. What the hell am I about to get into?\n\nSpending one last sane night at home is a comforting thought. Even Wendy is nicer to me than usual. Part of that is she now has a sense of where I'm coming from. She's open to the concept of finally getting to know me. Took her four years.\n\nWhen I get home after a long day of booking Anton, the boys are already in their rooms. Gianna is working nights this quarter, so I'm greeted by Wendy sitting on the couch watching some mushy CW show.\n\n\"You're home late,\" she says, and I check my phone for the time. Almost eleven. \"Are you working that sniper case at the courthouse?\"\n\n\"Neither confirm, nor deny,\" I say.\n\n\"That's a yes.\"\n\n\"No, it isn't,\" I say. I remove my gun still in the holster and place it in the safe on top of the fridge and secure it. My shield I put on the counter. \"But if I was working it...\" I tease.\n\n\"I'm surprised they're letting you work,\" she says, referring to my state of pregnancy. \"Don't they normally put injured or pregnant cops on a desk?\"\n\n\"I can't execute arrest warrants, but I can calmly wait in the car until the scene is clear,\" I say and then sit next to her. \"Gonna be a lot of long nights for a while. You up for taking care of your brothers? We really need you to step up.\"\n\n\"What's my incentive?\" she asks.\n\n\"We don't hire a babysitter who puts you in timeouts,\" I reply.\n\n\"Fair enough.\"\n\n\"And one hundred bucks a week,\" I offer.\n\n\"On top of take out allowance?\" she counters.\n\n\"Fifty, on top of take out allowance,\" I say. We both pause and say \"Seventy-five\" at the same time.\n\n\"Why the late nights?\" Wendy asks.\n\n\"Big case. I'm not even sure how big yet,\" I say, and I can tell I have piqued her curiosity.\n\n\"Promotion big?\" Wendy asks.\n\n\"Career making big,\" I say, and she reaches to pat my shoulder to congratulate me, but her hand hesitates. I grab her hand and place it on my shoulder. I haven't fully explained my boundaries with her, but I deeply appreciate her consideration of them. \"I am comfortable with some people touching me. You're one of them. All I ask, is you get my attention first. If I know it's coming, I don't get scared.\"\n\n\"Okay,\" she says, and then pats my shoulder. We smile at each other. One of the first real moments of understanding and respect we have ever had. I'm making progress with her.\n\n\"You said I could tell you things, just us?\" she says, and I nod to confirm. \"You don't tell mom. No judgement.\"\n\n\"I'll try my best,\" I say. She takes a deep breath, then exhales.\n\n\"I lost my virginity today,\" she says. I was prepared for that. Besides drugs, what else was it going to be?\n\n\"I have one question,\" I say.\n\n\"He wore a condom, and I started my pills a month ago,\" she says, and I nod.\n\n\"Jesse?\" I ask, and she nods. My boss's son is fucking my daughter. Since I caught them last time, Jesse has become a regular face here after apologizing to me. Wendy spends time with his family too. As promised, I didn't tell Gianna that I caught them. I strongly encouraged she does. All I said, was make him earn it. Not to let him pressure or guilt her into it. Turns out she had nothing to worry about because she was pressuring him into it. Kids these days.\n\n\"Have you ever, you know...\" Wendy asks. It takes me a moment to understand what her question is.\n\n\"Yes...but...\" I start to say, and she grabs my hand.\n\n\"You don't have to say it. I understand,\" she says.\n\n\"No, I...I need to have the courage to say it more. I was raped,\" I say, and Wendy squeezes my hand after I say that word. This is the first time I'm telling her this directly.\n\n\"Is that when you became a lesbian?\" she asks.\n\n\"What, no?\" I say with a small laugh. \"I was a lesbian long before that. I was never really in the closet.\"\n\n\"Oh. I thought that, some women become lesbians because, you know. Things like that,\" she says. I don't like how she's treading on eggshells. This is why some women don't talk about it. Guilt and shame are certainly reasons, but I mostly just didn't want the pity.\n\n\"Sure, there are women who experience trauma from men that affects their romantic fondness of men forever. I'm not one of them. Even today, my best friends are men,\" I say, and that's the truth.\n\n\"Shane?\" she asks, and I nod. \"Have you two, you know?\"\n\n\"Shane and I have been sexual, but we never had sex,\" I say, and she blinks a few times. She is trying to figure out what I mean by that.\n\n\"Okay,\" she says, and to my surprise doesn't push the topic. I think she's just satisfied that I'm not lying to her.\n\nWendy is trying to understand sex. It is a confusing time of her life. I think she's trying to figure out what the big deal was. Short answer, there isn't a big deal about it. I do have a few things to go over with her.\n\n\"Have you noticed, how I always call you a young lady, and your brothers young sir?\" I ask her. She thinks for a moment, then nods. \"Do I ever sound patronizing? Do I ever talk down to them? Or you?\"\n\n\"No,\" she says. \"You talk to us like we're adults. You don't use the same words, but you use the same tone.\" She has been quietly appreciating that for years.\n\n\"That is what respect sounds like. People who are respected, respect others, and themselves. So, I'm not going to bullshit you,\" I say, and she adjusts her posture a little. She's getting prepared for what I have to say. \"You're too young to have sex. That's my opinion.\"\n\n\"I respect your opinion,\" she says, and we both hold back a smile before laughing. Who is this young lady? What has she done with my daughter? \"I'll tell mom. It's not fair to ask you to keep that from her.\" That is the most considerate thing I've ever heard her say.\n\n\"Look at you, all grown up,\" I say, then stand up from the couch. She stands up to make sure I get up without incident. I might promote her to ma'am. \"I got an early morning and a long day. Love you, don't stay up too late. School night.\"\n\n\"You're not telling me to go to bed?\" she asks.\n\n\"You're an adult,\" I say. Wendy says she'll be in bed before midnight.\n\n--\n\nThursday -- October 15, 2026\n\n-Zillah Calvin-\n\nOn the first of October, a black Tahoe pulled in front of my office as I left for the day. A man in a pristine suit and hands covered in tattoos held open the door for me. He said nothing, but he didn't need to. The gesture wasn't polite; it was an order. As required of me, I entered the vehicle. Not a moment after the door shut a black hood was thrown over my face, and headphones blasting heavy metal music was placed over my ears.\n\nI have no sense of space or time until the headphones and pulled off. My ears try to adjust as I am nudged out of the car. My movement is controlled by a hand on my shoulder. The sounds of a utility elevator, and the jolt of a sudden ascension follow. They have never taken me this far. It's usually to a garage used as a chop shop that distorts audio from any bug that could have been planted. This is something big.\n\nThe hood is pulled off my head in the elevator, and I blow the hair off my face. I am encouraged to move by that same hand when the elevator opens. I'm led down a hallway that looks under construction. Men are present in hardhats and reflective vests. People are reading off architecture schematics and discussing plans. At the end of the hall is a door that I am instructed to enter.\n\nThis room is complete and fully furnished unlike the rest of the floor. A sleek, modern, white and red aesthetic. The floor and walls are white. Red leather chairs sit before a redwood desk. Several works of art carry the red motif further. A painting of a field of red poppy flowers. Another displaying a woman protecting herself from a red rain by a small umbrella. On the desk are red and white roses.\n\nStanding behind the desk, looking out the window is a man I haven't met before. From here I can see a shiny bald head shaved by a razor. Dress slacks and a white shirt with the sleeves rolled to his elbows. His blazer is on the back of his chair. The manner I was brought to him makes me assume he is more important than the underlings I usually work through. This man is high in the organization.\n\n\"Sit,\" he said, and I did as told. I crossed my legs and placed my hands on my thigh. He continued to look out the window for nearly a full minute. I see his reflection watching me. He is trying to size me up.\n\n\"We haven't meet. I'm...\" I began.\n\n\"...did I say talk?\" he asked, then turned to me. \"I know who you are. Did you think I told them to grab someone I didn't know to bring them here?\" I am fluent in Russian accents, and his was thick. \"Speak.\"\n\n\"I'm Zillah Calvin. You are?\" I asked. At first, he looked perturbed, then slowly he looked impressed. He liked that I didn't appear scared of him. My reputation as a cutthroat needs to be accurate. In truth I was waiting to get shot and dumped in acid. That's a concern I always have. Occupational hazard.\n\nHe sat down on his high-backed red leather chair. The top three buttons on his shirt were open, and I saw his shaved chest displaying his tattoos. To the mafia, that's his resume. The buildings with multiple onion domes told me he had done considerable time in prison and the star showed he was a high-ranking member of the Russian Mafia. I knew his name before he said it. The leader of a Vory syndicate.\n\n\"Imran Krasny,\" he said, and offered me a drink. I accepted because I never had a choice not to. Not with these people. He poured us both a shot of vodka. We downed the glasses in one hearty gulp, and he poured himself another.\n\n\"It's highly unusual for someone of your status to be in the United States,\" I said.\n\n\"I like America more than most Americans. The government here must prove you're guilty. Your criminals don't know how good they got it,\" he said with a laugh, and drank his second shot.\n\n\"I assume you had me brought here for a reason,\" I said, and he nodded. He opened a drawer on his desk and slid a folder across the polished wood to me. I leaned over to pick up. Inside was a picture of Henry Silverlake. A dirty PI who had dirt on one of the DAs witnesses for an upcoming case. In my business, you work with people as dirty as you. Innocent people don't hire me. \"What about him?\"\n\n\"Keep looking,\" he said, and I scrolled through the pictures. One picture had him meeting in a car with another man I didn't recognize.\n\n\"Who is that?\" I asked.\n\n\"He's the aid of the Georgian Ambassador to the United States,\" he said, and I keep flipping photos. \"The same ambassador whose daughter is in our care to assure her cooperation. This PI is working to find her daughter. He has no idea how close he is because she's in a property that is so kindly owned by you. Not directly of course.\"\n\n\"Shit,\" I said.\n\n\"You let a fox in my henhouse,\" he said.\n\n\"I didn't know. He came to me on a separate matter. Seemed on the level because he had personal reasons to hate the guy too. What needs to be done?\" I asked. I don't make recommendations. I just execute or keep the people who execute out of jail.\n\n\"Plans are already in motion to eliminate him. However, we need cover. Doubt needs to be cast on him being the sole target. So, when you all enter court, him, and your client, will be taken care of. Leave the how to me. Just make sure both are there on the first day of court,\" he said.\n\nI didn't exactly love my client, but I don't like the hit to my reputation. Some things can't be avoided I suppose. I made sure both were there.\n\nWhen it happened, I stood to her side as a precautionary measure. Marlene's body hit the ground and Silverlake appeared to know what was happening, because he pushed through Hugh who took the bullet for him. Silverlake tripped over Marlene's dead body which again saved his life and managed to avoid the next two shots. To make matters worse, their shooter was captured. I thought I was working with professionals, not people who kill my partner.",
        "We are forced to find a lawyer with no scruples who would defend the assassin. One big deposit later, I was instructed to give the lawyer a tie with red hearts on it, so the shooter would know why he was there. The assassin is represented and released on bond. I only had to get the rifle Saul had smuggled out of the building. At least something went right. Just go to Saul's and pick up a bag. I was specifically told I couldn't outsource this job.\n\nI never feel nervous in this part of town. People see someone like me in their neighborhood, and they think they can't afford me, or afford what happens if they touch me. They're right either way.\n\nIt's near one in the morning when I arrive at his apartment building. I'm down the hall when I hear Saul's stupid accent talking to someone.\n\n\"Didn't get enough the first time? Miss me?\" Saul says tauntingly with a sickening laugh. I turn the corner and see a blonde woman standing at his door. I hover to listen.\n\n\"Give me the bag,\" she says.\n\n\"I was told someone else was getting it. You've been a bad girl. Do I need to straighten you out again?\" Saul says, and I see the woman's hands shaking. Fear or rage, I can't tell.\n\n\"Give me, the bag,\" she says. Her voice is quiet, and she tilts her chin down to not face him.\n\n\"Baby need her pacifier? I got something for you to suck. I can give you some new tattoos, same as before,\" Saul says. I see his hand stretch into my view and grab her side above her hip. \"I got my eye on you.\"\n\n\"Just give me the bag. It's my bag,\" the woman nearly cries, gingerly trying to brush his hand off her body.\n\n\"Nothing is yours, and you're ours. Never forget that,\" Saul says. The woman grabs her right wrist with her left hand to contain her quaking. \"You can come in and watch the video in case you forgot. Maybe we'll have to make a new one.\" The woman doesn't reply. \"Go away.\"\n\nSaul shuts the door, but the woman blocks it with her foot. I blink, and the woman reaches behind her back, grabs a gun at her waist band and aims it through the crack of the door. I flinch from the gunshot, and two more times when she kicks the door open, and fires again.\n\n\"Fuck,\" I say, and press my back to the wall. Who the hell is she? I try to work up the courage to move, but I'm paralyzed. I hope she's here for a different bag.\n\nWhen I feel I've waited for an adequate amount of time, I lean out to look, and she's standing right in front of me with the gun raised.\n\n\"Please don't!\" I shout. I trip over my own feet and stumble into the opposite wall. I put up my hands in surrender. \"I didn't see a thing.\"\n\n\"He was a bad man,\" the woman says. I know for certain she's not lying.\n\n\"I believe you, trust me,\" I say. \"Put the gun down, please.\"\n\nThe woman slowly does as I request. In her left hand is the bag she wanted back. I have a feeling that's the bag I need. \"What's in the bag?\" I ask, and immediately regret it, because the gun returns. \"Don't tell me, not my business.\"\n\n\"My bag,\" she says in the tone of a child.\n\n\"Sure thing, all yours. It's your bag,\" I ramble out. She lowers the gun again. After a brief, but intense staring contest, she walks past me and down the hall. When I can't see her anymore, I crumble to the ground.\n\n\"Holy fuck,\" I exhale.\n\n--\n\nFriday -- October 16, 2026\n\n-Chase Kramner-\n\nJenn has not come out and said it, but I can tell she is pissed that this case went to me. Yesterday after work she did not even stop by the apartment. At all. Just sent me a text saying she would see me tomorrow. This is our first real fight. Her battle plan is avoidance. It's weird, because she's not like this in any other circumstance that I have witnessed.\n\nShortly after waking up, I am scrolling through the news on my phone as my coffee finishes in the Keurig. Atticus jumps onto the counter and begins to fight for my attention. He swats at my phone to lower my hands.\n\n\"Alright, you cry baby,\" I say, then pick him up. Jenn is correct when she calls him a cuddle bucket. Not many cats like being held, but he whines if he's not. \"Gotta be the center of attention, don't ya?\"\n\nMy door knocks, and I ask who it is. Jenn replies. I walk to the door and snap the deadbolt, then slide the chain. Jenn walks in, immediately starts making kissy faces at Atticus and takes over being his caregiver for the moment.\n\n\"Good morning, cuddle bucket,\" she says and rubs his belly. He pretends to hate that and kicks at her hand. She puts him on the counter, and he is all over me again.\n\n\"I just needed the night,\" Jenn says. I offer coffee that she accepts. \"I'm fairly direct. When I know I'm going to be a bitch, I'll isolate myself. I don't like being a bitch to people I care about. I wasn't trying to avoid you last night. All I wanted, was the night so when I do talk to you, I'm not talking at you. Does that make sense?\" she asks.\n\n\"Perfect sense,\" I say, and she smiles before kissing me. My last girlfriend would try to dominate the fight. The one before that was a literal murderer. I like this style the best. \"I'm receptive.\"\n\n\"You were being a nosy asshole, nudging your way into a case not only I, but the Chief told you to back off of,\" Jenn says, and I don't deny that. \"Then, it seems like you're rewarded for not listening to authority. Not only do you get onto the case, I get off it. My first, big case, as a lieutenant. To really show off my leadership skills. Then I get cock blocked, by my own fucking boyfriend.\"\n\n\"You're still involved...\"\n\n\"...I'm not leading it though. It was my case to close. The worst part is, I can't even be mad about it like a normal person. Normally I could bitch about it at HQ. Because it's you, I can't. It just looks like I'm dragging my home drama into work,\" she says, and I never thought about it that way. Her concern is valid. It also sounds like this concern has a history. Her ex-husband perhaps? I just know he's a cop as well, she hasn't told me more than that. Do I ask?\n\n\"That sounds like you know this from experience,\" I say, and she hesitates to reply. She takes her time preparing her coffee, and the quiet is making me anxious.\n\n\"My ex-husband is the Captain for Precinct Three,\" she says.\n\n\"Meadows?\" I ask. Captain Dominic Meadows has a reputation for being a little too friendly with female patrol officers.\n\n\"Yeah,\" she says, then takes a drawn-out sip. \"He was my superior, and we got married so he couldn't get cited for an inappropriate relationship when his Captain found out. I was dumb. More than once, the precinct would make a big arrest, and he'd downplay my part, and increase his own. Told me, because we were married, it helped both of us. He gets promoted, and I get cheated on.\n\n\"And I know, this isn't the same, but the knife doesn't feel any different,\" she says. It is refreshing to have a woman just tell me what's wrong. When I know what's eating at her, I can help. \"Thank you for taking Midge.\"\n\n\"She was my first-round draft pick anyway,\" I say.\n\n\"Why not Kaiser?\"\n\n\"Nothing against him, but Midge is smarter. The FBI will do most of the heavy lifting. I needed brains,\" I explain, and she laughs a little. \"I know Special Agent Shelby. I worked with him during the Irish bust. We couldn't have busted Texada without him. He knows there is plenty of room on the podium.\"\n\n\"Just promise to take care of my very pregnant detective,\" she says, and I say I will. I'm more concerned for people who get on Midge's bad side.\n\n--\n\nMidge and I drive separately to the FBI field office for a briefing on Russian Crime. The attendant at their parking garage had a list of approved personnel, so he checks us off and we park. Shelby said he would meet us in the parking garage, make sure we had visitor badges, and take us to his office. My badge is light blue, but Midge's badge is red. That's because I have a security clearance, and she doesn't.\n\n\"We'll work on a probationary clearance, but in the meantime, people might avoid talking to you,\" Shelby says to Midge. A few times as we walked down the halls, we hear people shout, 'red badge!'. We're taken to the third floor where a small corner office handles organized crime. Just Shelby.\n\n\"Why only one agent for organized crime?\" I ask.\n\n\"How much organized crime is there in this city? Most of it is street level gang crime, and the bureau doesn't give a fuck about gang violence, unless it's MS13. Even then, that's mostly DEA and DHS anyway. Organized crime desk is where your career goes to die,\" Shelby says and leads us into his office. All walls, no windows, mismatching furniture.\n\n\"Your career hasn't died,\" Midge says.\n\n\"I continue to exceed expectations,\" Shelby says and unlocks his cabinet with a key from his ring. He pulls open a drawer and hands us both a large white binder you'd see being touted around by a student. Slipped under the plastic is a sheet of paper labeling it the Russian Crime Cram Book. \"Start reading. I got a high side one with personalities as well. That one you can take home.\" Midge flips it open and starts glossing over the table of contents.\n\n\"Bitch War?\" Midge asks. I look at it myself, and she is referring to the title of a subchapter.\n\n\"Read it tonight, it's fascinating,\" Shelby says, then takes a seat at his desk. \"Let's start. When you think Russian Organized Crime. Russian Mafia. What do you think of?\"\n\nMidge and I both say we know nearly nothing. \"Empty cups, excellent. The Russian Mafia is old. Centuries old. Going back to Tsarist Russia where most crimes that could be committed, were crimes against the state. Because any action was a criminal act, these criminals existed in an almost, folktale, Robin Hood like perception to the populous at the time. You were fighting the government by being a criminal. The society they existed in was so secretive, they also developed their own dialect of Russian over time. Thieves of Law, or in Russian, the Vory.\n\n\"Then the Russian Revolution happens, and most of these criminals were purged by Lenin. Stalin gets power, and then he puts the remainders into Gulags. These criminals then just, essentially take over the Gulags, and it turns into a culture of its own. This is where you get prison tattoos. I can talk for days on that alone. Each tattoo is part of a story. There are themes, but one tattoo on two different people could have radically different meanings. They're personalized.\"\n\n\"What does a Cheshire cat mean thematically?\" I ask.\n\n\"Where on the body?\" he asks.\n\n\"Back of a hand.\"\n\n\"Was it wearing a hat?\" he asks.\n\n\"Yes.\"\n\n\"Vory, or someone who works with them. What do you mean by Cheshire?\" he asks.\n\n\"Alice in Wonderland. The big grinning cat who can vanish,\" I explain.\n\n\"Someone is just being clever with their tattoo. What other ink did you see? I'll assume you're asking for a reason,\" he says.\n\n\"I saw the tip of a knife, drops of blood coming off of it,\" Midge says.\n\n\"If I was betting money, they're a killer. Each drop of blood is someone they killed. Who did you see these on?\" he finally asks.\n\n\"The courthouse sniper,\" I say. \"Alice.\"\n\n\"Not wasting time getting to her,\" Shelby says, and rolls his chair to a locked safe behind his desk. After unlocking it by spinning the dial then pushing a handle down, he pulls out the classified version of the binder he gave us. He tells Midge she didn't see this. \"Is Alice your name for her?\"\n\n\"No. She responded to references to Alice in Wonderland. She said I could call her Alice. Don't know if it's her name, or that she just liked being called Alice, but she engaged with it. Why? What do you call her?\"\n\n\"Funny enough, we've been calling her Cheshire,\" Shelby says, then finds the correct page in the binder and shows us. \"Interpol has linked her involvement to two assassinations in separate countries. This was her third that we know of. That surveillance picture of her uncovered hand is all they had. Figured Russian sniper. You talked to her?\"\n\n\"Yeah. She's either good at hiding an accent, or she's American. Even had a southern drawl to it,\" I explain.\n\n\"Southern is the go-to American accent for people trying to hide their foreign one,\" Midge says, and Shelby agrees with her. After thinking about it for a moment, I also agree with her to a point. Alice never came across like she would know to bother with something like that.\n\n\"Before we dive too deep into her, let me tell you the general status of the current situation,\" Shelby begins, and we prepare to take notes.\n\nThe Russian Mafia had been moving assets into the city for the last year, starting immediately after most of the Irish were taken out. At first Shelby believed this was a void being filled, but over time he concluded there never was a void. Several of the businesses he had originally linked to the Irish Mob's money laundering schemes didn't crumble or fall apart. They stayed about the same. The cash flow was not disrupted because it was not the Irish's cash. The only thing that changed was management. The names running the businesses gradually went from Seamus to Stalin.\n\n\"The Irish were laundering the Russian's money?\" Midge asks, and Shelby gives a tentative that is my assessment.\n\n\"They'd never say they worked for the Russians, just with. Pride and all. The only difference is now they don't have a front to hide their activity, at least not as well. The Irish were a good shield for them. Once the cleaners were gone, they had to move in their own people. Enter Saul and Anton.\"\n\n\"You called McCants, didn't you?\" Midge asks, and Shelby admits he did. \"Why was Saul flagged by the FBI?\"\n\n\"He was not an asset. I just pushed back so he wouldn't be taken off the board,\" Shelby tries to explain, but Midge is not following. Neither am I.\n\n\"Who was he exactly?\" I ask.\n\n\"We need a little time to explain Saul,\" he says, and finds his part of the binder. \"He was a lieutenant, but primarily he was a human trafficker.\"\n\n\"No wonder I had a bad feeling about him,\" Midge says.\n\n\"Sex trade mostly. Often starts as smuggling and ends in trafficking. Girls end up in California, New York, and Nevada mostly. This city is a traffic stop for the girls in route. Haven't stopped a shipment, but I know they're coming through.\"\n\n\"Why did the State Department grant him that visa?\" I ask.\n\n\"You'd have to ask them. He must have given them something, but he likely feed them misinformation or opposition intelligence on the competition. I wanted him in the open because he was clumsy and careless. I didn't want them changing their procedures so I can bag a piece of low hanging fruit. Or I did, until someone took him out.\"\n\n\"Any ideas on who or why?\" I ask.\n\n\"Saul's murder looks like a Russian hit. Russian's do their hits in broad daylight. I'll assume you've also concluded Ms. Black was not the target.\"\n\n\"Why was Silverlake?\" I ask.\n\n\"I'd love to ask him,\" he says, and we all know our next move. \"How much longer can you guys hold him?\"\n\n\"About twelve hours,\" Midge says.\n\n\"Let's go talk to him,\" Shelby says, and we pack up to do just that.\n\n--\n\nHenry Silverlake looks even worse than the last time I saw him. He has sobered up but looks even more inebriated. Red eyes from being awake too long. Sweat staining his shirt. Hair hanging off his head like an ill-fitting wig. That is what nearly two days of being in custody does to someone.\n\nNot once has he made any overt effort to leave custody. He never asked for a lawyer or threatened to leave. If anything, he has been cooperative. Something tells me he would rather be safely behind bars than on the street.\n\nMidge is in the observation room in case he gets physical. Shelby sits on the table with one leg elevated and his arms crossed. I sit across from Silverlake with my hands resting on the folder I brought in with me. The first thing I do is place a picture of Alice on the table and slide it over. Silverlake looks at it and seems confused.\n\n\"Who the fuck is that?\" he asks and slides the picture back toward me. Maybe he doesn't know who she is after all.\n\n\"That's the sniper that missed you,\" I say, and he looks down at the photo again. \"You gonna tell us why an assassin with Russian tattoos is gunning for you?\"\n\n\"No idea,\" he says, and Shelby takes over. He opens the folder and slides across a picture of Saul.\n\n\"What about him?\" Shelby asks. We will omit the fact he is dead for now.\n\n\"What about him?\" Silverlake repeats.\n\n\"Do you know who he is?\" I ask, and his eyes slide to me, then back to the picture.\n\n\"Saulius Grybauskait\u0117,\" he says, and I force down my shock. His pronunciation was spot on too. \"Lithuanian, but ethnically Russian. He's a human trafficker who runs women to the west coast and Vegas for a Georgian underboss named Anton Mamedova, who works for a Russian boss named Imran Krasny.\"\n\n\"You know who that is, what he does, and who he works for, but also don't know why someone is taking pot shots at you?\" I ask, and he shrugs. \"How fucking stupid do you think I am?\"\n\n\"You don't want me to answer that question,\" Silverlake says with a grin so irritating, I am close to smashing his face against the table.\n\n\"Why does an American private investigator know so much about the Russian Mafia?\" Shelby asks.\n\n\"Why does the FBI know less than me?\" he asks, and he sees my hand clench. \"Easy tiger.\"\n\n\"Fuck this,\" I say, then stand up to leave.\n\n\"Chase...\" Shelby starts to say.\n\n\"...fuck him. Put him back on the street, whatever happens, happens,\" I say and open the door.\n\n\"Alright,\" Silverlake says, and I close the door. \"They want me dead because I was getting close to finding where they keep the girls between transport.\"\n\n\"Why were you trying to find it?\" I ask, then walk back to the chair, but do not sit. I place my hands on the back rest and lean down.\n\n\"A client's daughter was taken by the Russians,\" he says, and Shelby starts looking through the file. \"That client is a foreign diplomat.\"\n\n\"Bullshit,\" I say and consider leaving again. No one that important is hiring him.\n\n\"They took her about a month ago. Her parents through their own means found out she's likely here. They hired me to find her,\" he says. I can tell Shelby doesn't believe him either.\n\n\"Why the hell would a diplomat hire a washed-up PI like you?\" I ask, he shakes his head in annoyance. \"If this girl was taken a month ago, she's already in Vegas taking five dicks an hour.\"\n\n\"If she were just another girl, you'd be right. This girl is leverage. She is the daughter of Natia Nozadze, the Georgian Ambassador to the United States,\" he says, and Shelby calls a time out. We both leave the room and shut the door.\n\n\"How likely does someone just know an Ambassador's name off the top of their head?\" Shelby asks. Not likely in the slightest. He is not completely bluffing. \"What do we believe?\"\n\n\"We believe he knows enough to make them want him dead. He certainly doesn't want to be on the street,\" I say, and Shelby nods in agreement. \"Where does the lawyer fit in?\"\n\n\"Not sure, but let's find out,\" Shelby says, and we both understand the priorities.\n\n\"Where does Calvin fit in?\" I ask as I take back my seat in the interview room. Silverlake taps the picture of Saul with his finger.\n\n\"She's his lawyer. We all know that she represented the Irish. When they got taken out, none of the Irish businesses folded. That told me the Irish were the managers, not the owners. Coincidence some of the businesses were owned, at least on paper, by the firm Calvin &amp; Willard, I think not. I offered them some dirt for the Marlene Black case, and they brought me on board. I was trying to use my access to find out property holdings they could be using to store the girls or keep someone hostage for a long time. Saul was there frequently and must have gotten suspicious of me.\"\n\n\"Dirt on who?\" I ask.\n\n\"On you,\" Silverlake says with an arrogant smile. Shelby takes a side glance on me but ignores the comment. What could he have on me?"
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "crime",
        "criminal affair",
        "detective",
        "final",
        "straight"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/if-youll-believe-in-me"
}