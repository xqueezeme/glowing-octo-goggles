{
    "title": "Surefoot 41: Stray",
    "pages": [
        "USS Oberon, Deck 3 Fore -- Senior Officers' Quarters:\n\nThe Klingon Bird of Prey swooped down, screaming and going KAPOW! KAPOW! at the manta-shaped starship hiding behind the stuffed penguin. The penguin cried out in agony as the Klingon disruptor beams struck it, but it still protected the Catamaran, long enough for the vessel to come about from behind the penguin, draw up behind the Bird of Prey... and go KAPOW! KAPOW! back.\n\nThe Klingon ship spun down and ended belly up and moaning on top of a bored-looking black and tan Border Terrier, who lay on the floor and sighed.\n\nCal Meacham brought the Catamaran up over the fallen Bird of Prey and gave it a few more KAPOW!s for good measure, before declaring, fist raised, \"YES! POWER CAT WINS AGAIN! PAW-SOME!\"\n\nOn the wall above his bed, the poster for his favourite holohero ever, Power Cat (\"He's Paw-Some!\"), seemed to look down on him, the muscular, lion-headed hero with the blue and red cape and costume smiling with approval at the victory.\n\nMeanwhile, Cal's dog shrugged the toy Klingon ship off his back, unable to be held back any longer, and attacked the six-year-old with relentless licks to the face, making Cal fall back and squeal, \"Hobbes! Stop that!\"\n\nBut he didn't try too hard to defend himself from the relentless assault-\n\n\"[BLEEP]!\"\n\nCal sat up, heart stopping. No, he didn't hear anything, he didn't-\n\n\"CALVIN MEACHAM!\" the voice continued. \"GET IN HERE THIS INSTANT!\"\n\nHe wiped the dog slobber from his face and set Hobbes aside, as he fought the urge to pretend to be asleep, and instead rose and entered the living room, Hobbes following.\n\nDad was standing there, his face twisted with anger, holding the remains of a red and yellow scarf and demanding, \"Care to explain this, young man?\"\n\nCal remained at the doorway, as if leaving himself a chance to escape. No. No, he did not care to explain anything.\n\nNot that his father would let him off the hook. \"No? No idea about the state of this? How it got ruined like this? The rips, the dog slobber on it?\"\n\nCal swallowed, managing to shake his head. Dad shouldn't have found it so soon, he never goes in the closet, ever, he says it's like a black hole in there, why did he have to go in there-\n\n\"No? You're denying it?\"\n\nFrom behind him, the bathroom door slid open, and Mom walked out, towel wrapped around her and strawberry-blonde hair pinned up as he regarded the scene. \"What's going on?\"\n\nDad turned to her, shaking the tattered scarf in her direction. \"I'll tell you what's going on! Our son went into the closet, took out this scarf -- a family heirloom from the Twentieth Century! -- and let his [BLEEP] dog claw it to bits!\"\n\n\"Jeff-\"\n\nDad turned back to Cal, still shaking the scarf. \"This was an original Melchester Rovers football scarf! Almost four hundred years old! Do you know how [BLEEP] valuable this is?\"\n\n\"Jeff,\" Mom repeated, \"Language.\"\n\n\"What about my language? We set the Profanity Filter on his Universal Translator! He's not hearing what I'm saying!\"\n\n\"But he knows you're saying something rude.\"\n\n\"Good! I want him to know how angry I am!\"\n\nShe reached up and patted his clenched arm. \"Believe it or not, you can illustrate your anger without profanity, a raised voice, or that constipated expression of yours.\" Now Mom looked at Cal. \"Come here, young man.\"\n\nCal obeyed, trying not to meet Dad's glare along the way.\n\nMom dropped to one knee, adjusting the towel around her as she caught her son's full attention and asked, \"Calvin, did you go into the closet and take out your father's antique baseball scarf-\"\n\n\"Football,\" Dad corrected with a mutter through gritted teeth. \"The proper kind, too, not that American non-sport.\"\n\nMom ignored him. \"Well, Calvin? Did you?\"\n\nCal nodded, unable to deny or hold back under his Mom's unrelenting stare. He didn't mean to ruin it! He was exploring the closet, because he remembered the scarf had a lion's symbol on it, resembling Power Cat, and he put it on, thinking it might have powers in it. And Hobbes saw it, and thought it was a new Tuggy Toy, and went for it. Cal tried to get him off of it, but that only made it worse and now he lied about it and Power Cat says Never Lie and- and-\n\nHe started to cry, unable to contain himself any longer.\n\nMom took him in her arms.\n\nDad remained angry, glaring at Hobbes, who kept staring longingly at the scarf. \"We should never have bought him when we stopped at K-7.\"\n\n\"We didn't get Cal at K-7, Jeff. Remember? When a Mommy and Daddy get together-\"\n\n\"Oh, very funny! You should have gone into Comedy instead of Warp Mechanics!\"\n\n\"And I would have been brilliant at that, too.\" She drew back and wiped the tears from Cal's face, not looking angry like Dad but still not forgiving. \"You know you did wrong going into the closet, and playing with things that don't belong to you. That's not something Power Cat would do, is it?\"\n\nHe shook his head. \"I'm sorry.\"\n\n\"I know you are, Sweetheart.\" She hugged him again... before announcing, \"But you're still going to have to be punished.\" She looked at him once more. \"No holodeck adventures or desserts for a week.\"\n\n\"That's it?\" Dad protested, holding up the remains of the scarf. \"This was a four-hundred-year old family heirloom!\"\n\n\"It still is,\" his wife pointed out. \"And it can be repaired.\"\n\nDad still glowered at Hobbes, who joined Cal and Mom as if for solidarity. \"They should have both been sent back to Earth before we came to Sherman. We're in the middle of a [BLEEP] war out here!\"\n\n\"Go to work, Chief Helmsman Pottymouth,\" she urged. \"The Bridge needs you to do... helm things.\"\n\nDad grunted, throwing the scarf down onto an adjacent chair and sparing a sharp look at Hobbes. \"I'm beaming you over to the Klingons when they show up! I bet they eat dogs!\"\n\nHobbes barked happily in reply at his departure.\n\nMom looked to her son again, her expression serious. \"Calvin, you are a very lucky young man. Not only do you get to live onboard a starship with your Mom and Dad, but you also get to keep a pet, too. Captain Taaers could have said No to both.\"\n\nThoughts of Captain Taaers -- a large Trill man who always looked fierce despite his spots, at least whenever Cal ran into him -- saying No threatened to bring back the tears. \"Hobbes is a good boy! He doesn't really cause any trouble!\"\n\nOn cue, the dog rushed over to the scarf, leapt up, grabbed one end in his mouth, and began racing around the living room in triumph, under and around tables and chairs, knocking over one of the latter, caught up in another one of his notorious Zoomies, before disappearing into Cal's bedroom.\n\n\"So I see,\" Mom agreed dryly. \"And I know he's a dog and can't help doing some of the things he does. That's why he needs you to look out for him: feeding him only his supplements, taking him to the Arboretum for his poos and wees, making sure he gets exercise and not get bored.\n\nIt takes a lot to be able to take care of a pet. If you can't do it, we'll have to seriously consider not having him onboard. Remember that episode of Power Cat when he wanted that space octopus as a pet but he couldn't take care of it, and had to find a proper home for it?\"\n\nHe remembered, and remembered crying over Power Cat giving away his pet, and his face screwed up again. \"N-No- please- I'm sorry, I didn't mean it, I'll be good, I promise-\"\n\nA chirp interrupted them, followed with a voice announcing, \"Lieutenant Commander Meacham, please report to Main Engineering.\"\n\nMom frowned, calling out, \"Meacham here. It's my night off, Wixili.\"\n\n\"Sorry, Sue, Captain's orders. We're having trouble initiating a warpfield, and he wants to know if it's due to exterior subspace fluctuations, or to the Deck 6 Project.\"\n\nMom growled. \"I'll be there in five minutes. Meacham out.\" As the line chirped closed, she looked to her son. \"I don't know how long I'll be, so you get yourself to bed, and we'll talk in the morning. Okay?\"\n\nHe nodded, wiping tears from his face.\n\nMom kissed him again, rose and quickly returned to her bedroom to get dressed.\n\nCal returned to his room, seeing remnants of Dad's scarf all over the floor, some of it clinging to Hobbes' dark, wiry fur. The dog became aware of it, and began trying to eat some of it, until Cal knelt and brushed it off him, shooing him up onto his bed.\n\nMom entered, in uniform and carrying a small globe she set on the side table. \"Go to sleep. No snacks, no playing. Nanny will be keeping an eye on you, if you want a story or song. Good night, Sweetie.\"\n\n\"Good night, Mom.\"\n\nThe lights dimmed and the bedroom door slid shut, as Cal lay there, Hobbes lying beside him, sighing to himself as he settled in for the night.\n\nCal remained awake, however, his mind racing around like Hobbes having one of his Zoomies. They couldn't get rid of his dog. They couldn't! He was part of the family! He had been around forever!\n\nBut Dad was so mad. Cal never thought he would find the scarf so soon. Dad would talk to Captain Taaers on the Bridge, tell him about what had happened. Then the Captain would order Hobbes off his ship. Maybe even... even give Hobbes to the Klingons to eat like Dad warned!\n\nCal made a whimpering noise.\n\nThen a warm yellow-red glow appeared within the globe, the glow coalescing into the round, smiling, humanoid face of his holographic sitter, Nanny. \"Calvin? Are you okay? Would my little man like a Flotter story? Or Winnie the Pooh? Or perhaps a song?\" After a pause she repeated, \"Calvin?\"\n\n\"No.\" Quickly he amended before she corrected him, \"No, thank you.\" He hated her. She was always telling on him to Mom and Dad whenever he tried sneaking snacks, or wouldn't do his studies or brush his teeth. She was so bossy, and always called him 'my little man'. He only managed to go exploring the closet without being caught because Mom forgot to turn Nanny on when she went to work.\n\nHe hated Nanny.\n\nHe hated being there. There were no other children onboard the Oberon for him to play with. He knew there were others on the other ships in the Fleet -- he had met them all once during a Christmas trip to a nearby planet -- but the Oberon spent its time on patrol away from the other ships, doing Stupid Things. All he had was Hobbes.\n\nAnd soon, Dad and Mom would send his dog away. Or worse. Cal was sure of it.\n\nNanny's globe began emitting a slow rotating light, producing soft golden yellow beams that caressed the ceiling and walls, as soft, relaxing chimes played. It tried to put him to sleep. It usually worked.\n\nNot now, though.\n\nThe more he thought about it, the more he became convinced that Hobbes was going to be sent away. And it would be Cal's fault. He knew he shouldn't have been in the closet, shouldn't have played with Dad's scarf.\n\nHe couldn't let it happen.\n\nHe sat up, alerting Nanny. \"Is there something wrong, Calvin? Do you need to go potty?\"\n\nAnd that was when the idea beamed into his head. \"Hobbes does!\"\n\nThe dog sat up at the sound of his name, and made inquisitive noises.\n\n\"Does he?\" Nanny asked. \"It's rather late, Calvin-\"\n\n\"He's a dog, he doesn't know time!\" Brightened now with the idea going nova in his head, he looked to Hobbes. \"Isn't that right, Hobbes? You want to go Walkies?\"\n\nThe word triggered a yelp of unexpected delight from the canine, as he leapt off the bed and started racing around the perimeter impatiently.\n\n\"Calvin,\" Nanny chided gently. \"It's late, and your Mommy and Daddy have gone to work-\"\n\nCal looked to the globe. \"I have to take him! He can't wee in here again! He's already in trouble for chewing up Dad's scarf! I can get to the Arboretum and be right back! I'll be quick! I promise!\"\n\nThe yellow-red face frowned. \"I should tell your Mom and Dad-\"\n\n\"No! You can't! Dad's busy on the Bridge, and Mom had to go back to work!\"\n\n\"I am programmed to contact them in the event of an emergency involving you-\"\n\n\"But I don't have a Merjancy! I take Hobbes to the Arboretum myself all the time! It's my job! It teaches me Sponsbilty! Mom said! And I know the way, it's on Deck 6 Port, near the Crew Quarters and past the Science Labs! No one stops me!\"\n\n\"And you'll go straight there and back? No going off on adventures?\"\n\nHe lifted up his hand, pointing to the almost-imperceptible bump under the skin. \"I can't go on Ventures! Captain Taaers had a NoGo put in here!\"\n\nNanny frowned in consideration, before announcing, \"Put some shoes on, the decks are cold and I don't want my little man to get chilled. And hurry back, or I will contact your parents!\"\n\n\"I will!\" he lied, racing out, Hobbes at his side.\n\nCal found his shoes under the couch, and then filled his shoulder bag with Doggy Treats, and snacks for himself, before finally obtaining Mom's portable tool box, opening it and looking at all the strange little silver instruments lined up inside, finding the one he wanted, the one with the penguin nose at the end.\n\nThe NoGo put under the skin of his hand was something Mom and Dad had to do if he was to stay onboard the Oberon. It was supposed to buzz a warning and set off alarms if he wandered into Stricted Areas. But one time, when Mom let Cal tag along for the day while she supervised work in the Weapons Pod up top, and he kept setting off alarms as they crawled through the Jefferies Tubes into Stricted Areas, she turned off the NoGo with this tool.\n\nHe did everything he saw her do that day. He couldn't tell if it worked or not, but he knew he would soon find out.\n\n*\n\nCal's mind raced ahead, almost as much as Hobbes did as they walked along the curved corridors to the Turbolifts, the dog enthusiastically greeting passing crewmembers, sometimes stopping ones he recognised as likely to give him a quick scratch behind the ears or a reaffirmation that he was, indeed, a Good Boy.\n\nCal's fear grew as they descended to Deck 6, and walked along the outer corridor ring to the Arboretum. It was Night Shift, and though the Crew's Quarters were down here along with the Science Labs, not many people were about. While Cal knew Dad was far away on the Bridge on Deck 1, he could still run into Mom or one of her Engineering friends down here, maybe working in the Shuttlebay in the Aft section.\n\nBut he didn't run into anyone as they entered the Arboretum and Hobbes did his business under his favourite Karpelian apple tree. Cal was satisfied; now they can say that they did go here for Hobbes' poos and wees. It wasn't really lying.\n\nAs they departed, they didn't go back the way they came. Instead, Cal led them to a horizontal hatchway in a side juncture, unoccupied. He entered with Hobbes, hoping he had turned off the NoGo, otherwise Security would be along in seconds.\n\nThe pair of them crawled through the tube and around a corner, before Cal had to pick up Hobbes and struggle down a ladder... four decks, using his shoulder bag as a harness for Hobbes. Mom and the other Engineers always complained about having to crawl around down here, but he never understood why. They were some marvellous places to have a secret hideout!\n\nThey ended up in a small dark circular alcove on Deck 10, that Mom said was something called the Sensor Bay Catwalk. She told him that this was the place where the ship could scan space for things, and needed to be protected from wrong readings, so it blocked outside signals. \"That's why we always have to let people know if we're going down here,\" she had said. \"For safety reasons.\"\n\nThere wasn't much here, and as Cal sat down and opened his bag to feed Hobbes and himself after their long journey, he wished now that he had brought a pillow or blanket with him. Still, he figured he wouldn't have to be down here for very long, just long enough for Dad to see how much he'd miss having Hobbes around and-\n\nHe jumped as the ship rocked to one side, and seconds later, the Red Alert klaxon filled the air. It howled, again and again, making Hobbes bark and finally howl along as well.\n\nCal pulled the dog close, desperate to calm him down -- and calm himself down too. \"Shh! Quiet! They'll hear us!\" Though, as the sirens continued, he wondered if maybe they already had, and that he had triggered the alarms by coming down here. But then why did the ship rock like that?\n\nFear grew inside him, like when his belly rumbled with hunger. What was happening?\n\nJust then, as if hearing his thoughts, the klaxon ended, and the intercom in the wall over him chirped to life, as the voice of First Officer MacDonald shouted, \"Attention All Hands! We're caught in some sort of subspace rift! We've lost warp- mpulse drive- munications-\" Then his words kept getting eaten up by static. \"Tetryon radiation! Polari- shifts- tainment field degra- breach- ALL HANDS, ABAN-\"\n\nHis voice was lost, replaced by the Red Alert again.\n\nIt sounded bad. Real bad.\n\nHe had to find Mom and Dad.\n\nHe gave up trying to calm Hobbes down, and instead lifted him up again as he started to climb the ladder back up to the horizontal hatch. Hobbes was heavy, and panicking. \"Hobbes, no- stop it-\"\n\nThe ship rocked again.\n\nCal lost his tenuous grip on the ladder rung, and fell down again-\n\n*\n\nHe woke up, his head ringing and hurting. Hobbes was beside him, whimpering.\n\nCal winced in pain, touching the back of his head -- it was so sore! He began crying as he felt his elbow and bottom sore as well. He wanted his Mom and Dad!\n\nHobbes rose and began licking his face to make him feel better.\n\nMom and Dad... he sat up fully, hugging his dog for warmth and comfort. It was cold down here, and dark, but it was quiet now, no alarm! Maybe whatever happened that Mr MacDonald was so upset about wasn't happening any more!\n\nHis head hurt. His stomach grumbled. He needed Mom to take him to Sickbay to get fixed by Doctor Sluvak, and then to take him to the Mess Hall for dinner. He didn't care now if he got in trouble.\n\nHow long had he been asleep? He didn't know.\n\nHe had to find someone and get help. Like Power Cat would say, 'Starfleet is There to Help Everyone'. And everyone on the Oberon knew him and Hobbes. Even the people on the Deck 6 Project Mom talked about, though he wasn't supposed to talk to them.\n\nHe made his way up to the next deck, and then the next one, not finding anyone on either. But Deck 7 had so much there: Sickbay, Security, Cargo Bays-\n\nHe found darkness, coldness, burned and damaged walls and floors and ceilings, with support struts and conduit cables hanging down, exposed. Doors wouldn't open, and no one answered when he knocked on them.\n\nHe made his way to Sickbay. There had to be someone there. There was always someone there, day or night!\n\nThe doors to Sickbay were open, but only a bit; Cal saw the leg of an overturned chair keeping the doors from completely closing. Hobbes raced up to it, barking, before Cal caught up, unable to open the doors but able to press his face in the gap, peer in and call, \"Hello?\"\n\nHis call echoed. The interior of Sickbay was dark, except for flashing alarms.\n\n\"Is anybody there?\"\n\nNothing.\n\nThis was so wrong!\n\n\"Anybody?\" he pleaded, afraid.\n\nThe computer seemingly responded with, \"Warning: tetryon radiation detected. Initiate Evacuation and Decontamination Protocols immediately.\"\n\n\"What does that mean?\" Cal asked it. \"I don't know what means! Can you call my Mom and Dad please?\"\n\n\"Warning: tetryon radiation detected. Initiate Evacuation and Decontamination Protocols immediately.\"\n\nCal stepped back. Stupid computer! It wasn't even listening to him!\n\nHe had to get back home to Mom and Dad. They won't have left without him! And they were only on the next deck up!\n\n\"YOU'RE STUPID!\" he shouted into the gap.\n\n\"Auto Destruct in thirty minutes,\" it replied as he ran away.",
        "*\n\nThe turbolifts weren't working now, but there were still ladders nearby. But he was tired from carrying Hobbes. He couldn't carry Hobbes all the way there! What if he dropped him! What if they both fell, all the way down?\n\nHe turned to the dog. He couldn't leave him behind. What if he wandered off?\n\nCal knelt and let Hobbes leap up against him, forepaws resting on Cal's shoulder, as Cal fixed his shoulder bag around him as a harness again, slipping an arm under Hobbes' bottom. \"Don't you fidget now!\"\n\nIt took forever... and Cal almost slipped twice. But he kept going, switching arms, and taking stops for rest along the way.\n\nDeck 5.\n\nDeck 4.\n\nHe hurt. But he remembered what Power Cat says: \"You are stronger than you might think, smarter than you might know, and braver than you might feel. Believe in Yourself.\"\n\nHe kept going.\n\nCal collapsed onto the floor on Deck 3, letting Hobbes wander off while he lay there, aching, his head still hurting. Hobbes had been so heavy!\n\nHe wanted to lie there on the floor and nap, even if it was cold and hard. But he had to get home to Mom and Dad. They would surely be waiting for him!\n\nHis quarters were there -- and the door was open! \"MOM! DAD!\"\n\nHobbes barked and raced inside first, Cal following... but it was as dark and empty here as everywhere else he'd been. \"Mom? Dad?\"\n\nFrom his bedroom, a familiar light and voice came to life. \"Calvin?\"\n\nHe brightened and rushed in, never so glad to see- \"Nanny!\"\n\nThe holographic head turned in the globe. \"Calvin? Where have you been? Your parents, everyone's been worried sick about you!\"\n\n\"I- I- where's Mom and Dad?\"\n\n\"They left! Everyone evacuated! When they couldn't find you, they thought someone had taken you with them into an escape pod! You need to find a crewmember and report in!\"\n\nCal's heart was racing. They left him? They left him behind? \"I haven't seen anyone around! Call Mom and Dad!\"\n\n\"I can't! My access is limited to intraship communications, and that isn't functioning anymore! You need to find an escape pod! They have equipment onboard that can send an automatic distress signal!\"\n\nNow his breathing quickened, and he wiped sweat off of his face.\n\n\"Calvin,\" Nanny said, her tone changing, \"Put your hand on the globe, let me check your bioreadings. You don't look well.\"\n\n\"I'm- I'm just tired-\"\n\n\"Do it, Calvin.\"\n\nHe didn't want to, he wanted to go find Mom and Dad... but Nanny's words were a comfort, someone telling him what he had to do. He wiped the tears and snot from his face onto his sleeve, and placed a clammy hand on the surface of the globe.\n\nNanny's face reacted, photonic eyes widening. \"You need to find an escape pod, Calvin. Now. Pick me up, take me with you.\" After a moment, she added, \"Hurry. Please.\"\n\nHe did so, though she felt heavier than she usually did, carrying her under his arm as he stepped back into the living room.\n\nA flash of light from their windows caught his attention, and he stopped. The view outside lately had been boring; Dad said that they were posted on the edge of the Sherman system, away from its sun and its planets, and it was usually dark. But now... now he saw ships.\n\nKlingon ships.\n\nAnd Starfleet ships! And they were firing at each other! Swooping around, having a real fight!\n\n<br >And among them, a ship like the one Power Cat flew! It even had the red paw print on top of it!\n\n<br >POWER CAT WAS HERE TO SAVE HIM!\n\nAt any other time, Cal would have loved to stay and watch a real fight.\n\nBut now, now all he wanted was his Mom and Dad.\n\n\"Calvin,\" Nanny urged. \"Let's go, please. Hobbes too.\"\n\nHe nodded, heading back out into the corridor. He felt sick, dizzy.\n\nThen he heard a voice and picked up. People! People were still here! He rushed ahead and around a corner, Hobbes following, both of them running into-\n\nA Klingon!\n\nHe stood impossibly tall and wide, in scary black and grey armour, with a fierce, swarthy face topped with rows of bumps on his head and knives and other weapons on his belt. He grunted as Cal yelped, before reaching out and grabbing Cal by the shoulder, his grip tight. \"SoH 'Iv? Jang puq, ghu!\"\n\nTerror galvanised Cal into action, as he struggled to free himself, while Hobbes barked and snapped at the Klingon's boots, and Nanny scolded, \"Let go of him this instant, you!\"\n\nThe Klingon kicked Hobbes viciously, making the dog yelp and limp away, before striking Nanny's globe, making it fly out from under Cal's arm and smash against the nearest wall, bouncing and rolling away, even as Nanny shouted, \"RUN, CALVIN! GET AWAY!\"\n\nThe Klingon drew his disruptor pistol out and fired at the globe, missing once, but then hitting it and making it explode into a million shards.\n\nHe holstered his weapon and lifted Cal up off the ground, shaking him. \"Jang puq, ghu!\"\n\nBut Cal still couldn't understand. He kept looking back at the remains of Nanny, and in the direction where Hobbes had run off. He... killed Nanny. Cal had always said he'd hated her, but he didn't mean it! And Hobbes was hurt, he needed help!\n\nBut the Klingon dragged him off, to a cargo turbolift that appeared to still function, and they descended to Deck 6, but in a section he wasn't allowed to go in, with all the Science Labs. They entered one lab, where other Klingons milled about over the computers, using devices that looked a little like tricorders, but darker and uglier.\n\nOne older Klingon with more emblems on his uniform than the others stopped and regarded the arrivals. \"NuqDaq globfly poHlIj?\"\n\nThe first Klingon shoved Cal closer to the other one. \"ChoQ 3, nIteb ghaHtaH!\"\n\nThe older Klingon approached Cal, sneering slightly as he touched his own chest. \"HoD Kutuz. Qatlh naDev?\"\n\nCal swallowed, feeling like he was going to melt. \"I- I don't know what you're saying-\"\n\nThe Klingon grunted and then said slowly, in Federation Standard, \"I said I am Captain Kutuz. Do you understand me now?\"\n\nCal nodded.\n\n\"Good. Why are you still here? Why did you not flee with the other Starfleet cowards?\"\n\nCal wiped his face. \"I was- I was hiding- they couldn't find me-\"\n\n\"Obviously.\" Kutuz drew in closer. \"I don't suppose you have any intelligence to offer on the secret weapon they were testing onboard this vessel?\"\n\nCal frowned, confused. Did he mean the Deck 6 Project, where they were? Why would he know anything?\n\nKutuz drew back again. \"No. I suppose you wouldn't.\" He looked to the Klingon who had brought him in. \"GhaHvaD HoH.\"\n\nThe Klingon holding Cal reacted, indicating the boy. \"GhaHvaD HoH? GhaH ghu!\"\n\nKutuz regarded Cal once more. \"Segh je? 'eH ghaH nuq'e' vo' tetryon radiaghta; pung Data' ghaH. 'ach vogh latlh ruch.\"\n\nCal gasped. What were they saying? Was it rude, and his Translator was keeping him from hearing it, or was it because it was just Klingon?\n\nThe Klingon holding Cal made a sound of acknowledgement and dragged the boy back out into the darkened corridor and along towards an open shaft near the cargo turbolift. He looked up, perplexed and afraid; was he taking him to an escape pod? Taking him back to find Hobbes? \"Wha- What are you doing?\"\n\nHe shook Cal as he continued to force him along. \"YIjot, ghu! Ghotvam'e' vatlh Hoch!\"\n\nPanic set in, and Cal began struggling. Nanny told him to get away from the Klingons. \"Let go of me! LET GO!\"\n\nThe Klingon stopped, made an impatient sound, and drew out a wicked-looked blade.\n\nCal cried out, doubled his efforts to break free, but remained weak- no- please don't hurt don't hurt me Mommy MOMMY-\n\nSuddenly a huge furred hand shot out of the shadows, grasping the Klingon's knife hand. And then the body attached to the furred hand followed and growled, \"Hey Bubulah: why don't you pick on someone my size?\"\n\nCal's eyes widened.\n\nPOWER CAT?\n\nThe Klingon quickly released Cal and flung him against the nearest wall, before facing Power Cat, snarling, knife raised.\n\nCal collapsed to the floor, watching with astonishment as his hero grappled with the Klingon, moving at warp speed as he knocked the blade from the Klingon's grip, before he raked the Klingon's throat with his claws, drove a fist into his gut and finally brought his knee up into the Klingon's Rude Places, making the Klingon double over and collapse into a heap.\n\nThen he turned to Cal. And smiled, as if nothing had just happened. \"Hello! You must be Calvin Meacham! I'm-\"\n\n\"Power Cat!\" Cal declared hoarsely, rising. He looked different to the image in the holoprograms and on his posters and pyjama top: he was... fatter, with brown fur and no mane, and he was disguised in a Starfleet uniform with Captain's pips rather than his costume.\n\nBut he did have a bright red paw print on his uniform collar, next to his pips.\n\nMaybe he was Power Cat's Dad?\n\nSuddenly, all further thoughts fled Cal as he began to fall to the floor again, feeling like he was on fire.\n\nPower Cat caught him before he hit the floor, sweeping him up in his arms and resting him against his shoulder, patting him and assuring him, \"There, there, it's okay. We're here to get you back to your Mama and Papa.\"\n\nCal clung to him with his remaining strength...\n\nNo. No, this was his hero.\n\nThen he watched as a half-dozen others in Starfleet uniforms raced up from the darkness, stopping and remaining silent as Power Cat made a shushing gesture, pointing down the other end of the corridor as he whispered, \"I hear about six of them, in one of the Science Labs, five metres away.\" He indicated the Klingon on the floor. \"Get him secured on our shuttle. Report, Lieutenant.\"\n\nAs two of the Starfleet people dragged the Klingon off, a scary-looking, black-furred Cat Lady regarded Cal before quietly responding. \"Sir, we've been to Main Engineering. No one there... but the Self Destruct has been activated. We have fourteen minutes.\"\n\nCal looked up to see Power Cat frown. \"The reports from Captain Taaers was that they didn't have time to set it.\"\n\n\"I know; it appears to have been activated by a set of hidden Security Protocols outside of the Command structure.\"\n\n\"What? Outside of-\" Then he noticed Cal looking up at him, and sniffed, frowning. \"Ensign Eydiir...\"\n\nA young dark-skinned human female drew up to them, peering with dark eyes at Cal. Cal looked back, afraid of the stranger at first -- until she saw that she, like all the others, wore the same red paw print on their collars. They must be Power Cat's Friends! \"The subspace interference is still affecting our tricorders along with communicators and sensors, but... my eyes say it's tetryon radiation poisoning, Sir. We need to get him-\"\n\nSuddenly Power Cat twitched, and slammed the young woman and himself back against the wall. \"COVER!\"\n\nDisruptor bolts flew down the corridor, as Cal saw the others take cover around corners and alcoves, before Power Cat shielded the boy's head with his hand. Cal listened to phaser fire being returned, and further disruptor bolts being fired and hitting walls.\n\n\"Captain Kutuz!\" Power Cat called out. \"This is Captain Hrelle of the Surefoot! I know you're with your landing party in there! This ship is going to the Seven Hells in just over ten minutes! You can't get back to your shuttle except through us! Let's call a truce!\"\n\nThe firing stopped, and then the voice Cal recognised from before called back. \"HoD! bel tagha' 'e' vItIv. Hrelle Hoch 'oH Surefoot! Jegh'a' bISaHchugh 'ej jIchegh maH Duj? \"\n\nCal frowned to himself. He wanted to know what they were talking about! Why didn't his Mom and Dad include Klingon in his Translator?\n\nPower Cat grunted. \"Clearly you have the same communication interference as we have, and you haven't looked out the nearest window lately. Your ship fought valiantly; it earned its place in Sto-Vo-Kor while the others fled. All you have is your own shuttle, and our ships waiting nearby. The honourable course of action is to surrender.\"\n\nThe Klingons went silent, as Hrelle looked to another member of his party. \"Ensign Kitirik, what's the status of the subspace instability?\"\n\nCal turned his head again to see a reptilian figure looking a little like the Oberon's Saurian Chief Science Officer, including his Starfleet uniform topped in Science Blue, but this figure was smaller and had mottled green skin. He glanced at a tricorder in his webbed hands. \"Respected Sir, our scanning devices remain ineffectual due to the rift between space and subspace here, but the level of interference itself can be measured... and indicates that it remains strong, definitely centred within the vessel.\"\n\nCal felt Hrelle react. \"So, it's not likely to have been a Klingon weapon which caused all this chaos?\"\n\n\"No, Respected Sir; it is certainly reminiscent of the subspace isolytic weapons banned under the Second Khitomer Accords. Forgive my lack of more precise details-\"\n\n\"Nothing to forgive, Kit. You only came over from the Iberia for a visit, and I press-ganged you because we don't have an experienced Science Officer of our own. You've been invaluable to us.\" He looked to the Cat Lady. \"Time?\"\n\n\"Twelve minutes. Let's not die onboard this [BLEEP].\"\n\n\"Language.\" Hrelle glanced down at Cal, before looking back towards the Science Lab and calling out, \"Kutuz! I have a critically-ill child here, he needs to get off this ship! I want to call a ceasefire!\"\n\nThe disruptor fire ended. Cal saw Hrelle twitch his ears, before he announced, \"They're trying to beam back to their shuttle!\"\n\nThe Reptoid's colours flushed. \"Respected Sir, they cannot- the subspace interference will prevent a safe lock-\"\n\nCal started as he heard... something from the Science Lab. He tried to look over Power Cat's hand to see, but his hero wouldn't let him.\n\nPower Cat silently motioned to the Cat Lady to investigate. She moved carefully down the hall, in case it was a trap, while Hrelle adjusted his hold on Cal and headed in the opposite direction. \"Come on, we've got to get back to the shuttle. Gorman, Eydiir, bring up the rear. Kit, stay beside me, I promised Captain Caine to return you to the Iberia in one piece.\"\n\nCal felt like he was going to be sick, and he could barely cling to Captain Hrelle... but still he struggled weakly. They- They needed to get- \"Hobbes!\"\n\n\"Hmm? What's a 'Hobbes'?\"\n\nCal felt dizzy. \"M-My dog- Klingon- kicked him-\"\n\n\"Where did he go?\"\n\n\"Our quarters- Deck 3- please- get him-\" Thoughts of Hobbes being hurt, or worse, made Cal sicken and start to cry.\n\n\"Eydiir,\" Power Cat prompted, handing over Cal as he straightened up. \"Get to the shuttle, on the double. If I don't join you before the countdown reaches five minutes, detach and get out of the blast radius.\"\n\n\"Captain,\" Eydiir started.\n\n\"Go! Now! I'll get the dog! Mr Gorman! Get them there!\"\n\nCal began crying as he was carried off, watching Power Cat race off. Then they moved in the opposite direction, into the Shuttlebay, and to an airlock into another shuttle, where Cal saw that nasty Klingon who kicked Hobbes, only now he was manacled and kept on the floor of the shuttle in the aft.\n\nA human woman with blonde hair like Mom was sitting in the cockpit, and turned to face them. \"Where are the others?\"\n\nEydiir lay Cal down on a bed and opened a medical kit. \"The other Klingons attempted to beam back to their shuttle; Lt Shall is checking for survivors. The Captain is after a dog.\"\n\n\"A dog? Is he crazy?\"\n\n\"You may ask him yourself if he returns, Lt Velkovsky; if he does not in five minutes, we have orders to leave. Kit, assist me: 50cc hyronalin, then ready the cortical stimulator in case he goes into arrest.\" The dark-skinned girl looked into Cal's eyes. \"Stay still, young man, we are tending to you-\"\n\nBut he still tried to lift his head up. \"P-Power Cat- he'll- save H-Hobbes-\"\n\n\"Why do you continue to refer to Captain Hrelle with that garish appellation?\"\n\nNow he reached up, touching the red pawprint emblem on her collar. \"Power Cat-\"\n\nShe gently but firmly reached up and removed his hand. \"That is a medical designation recognised by the Interstellar Aid Registry. We are crewmembers on an ambulance ship. You are delirious.\"\n\nThen the Reptoid touched Cal's sweat-soaked pyjama top, indicating the image of Power Cat on it, sporting an almost-identical pawprint symbol, as he handed the woman a hypospray. \"Best Friend Eydiir, Power Cat is a popular felinoid fictional hero among many young humanoids now. I have watched it as well... purely as a cultural exercise, of course. He is the Paw Prince, the Mane Man, the Purr-fect Hero, Paw-some...\" He coughed. \"The writers are fond of puns.\"\n\nThe woman grunted as she pressed the tip of the hypospray against Cal's neck. \"Indeed; that would certainly explain your own interest. The resemblance appears superficial. What does this hero do, then?\"\n\n\"Power Cat is brave, generous, caring. He protects children, animals. All innocents, everywhere. You can depend on him.\"\n\nThe woman grunted again. \"Perhaps... not so superficial, then. Ready 20ccs anaprovaline; the hyronalin will cause him discomfort, and he has been through enough already-\"\n\n<br >\"Where the [BLEEP] is he?\"\n\nAll heads turned to the black-furred Cat Lady as she entered the shuttle, the nurse responding with, \"He went for the boy's dog on Deck 3.\"\n\n\"He did what? Stupid [BLEEP]! This ship's about to blow itself to [BLEEP]!\"\n\n\"What happened to the Klingons, Lieutenant?\" the red-headed human male Power Cat called Gorman asked. \"Any of them make it back to their own shuttle?\"\n\nThe Cat Lady hissed. \"Not... in one piece.\" She dropped some devices on the floor beside her. \"So I grabbed their tricorders for evidence about what they were doing on the Oberon.\" Then she turned. \"I'm going back for Uncle Esek-\"\n\n\"No!\" the nurse cut in, pressing another hypospray onto Cal's neck. \"His orders were to leave if he wasn't back in five minutes before Self-Destruct!\"\n\n\"[BLEEP] his orders! I'm-\" Then she stopped, her ears twitching, before she leaned out of the airlock and shouted, \"You took your time, you fat [BLEEP]!\"\n\n\"Bad language is neither big nor clever.\" Power Cat entered, catching his breath... but holding Hobbes in his arms. \"Irina, detach and get us out of the blast area, double quick!\" As the door slid shut and there were unclamping sounds outside the shuttle, Power Cat turned to the Reptoid. \"Kit, see to this cheeky little quadruped, he's got some internal injuries, possibly a fractured hind leg.\"\n\nCal just stared in abject amazement, tears running down his face. He did it! He really did it!\n\nPower Cat made some soft, comforting sounds to the whimpering dog as he handed him over, swaying slightly as the shuttle began moving, before kneeling beside Cal and smiling, wiping the tears from his cheeks. \"He'll be fine. And so will you.\"\n\nCal smiled weakly. \"You're... Paw-some...\"\n\nThen he passed out...\n\n*\n\nAngry voices seemed to drag Cal out of the darkness. Familiar voices.\n\n\"...tain, I am grateful to you and your crew for all you've done for us, but you have no right to-\"\n\n\"I have every right, Captain Taaers! You were conducting experiments onboard your ship in violation of the Second Khitomer Accords! We have the proof from the Klingon tricorders!\"\n\n\"I don't have to answer to you, Captain!\"\n\n\"No, but you'll be answering to Admiral Tattok!\"\n\n\"Don't bet on it, Hrelle.\"\n\n\"And what does that mean?\"\n\n\"Captains,\" interjected a soft, gentler voice. \"Now is not the time. Bag your testosterone.\"\n\nAfter a second, one of the voices responded with, \"Thank you for your intervention, Counselor.\"\n\n\"Oh, don't thank me, Captain Taaers. I can tell you're clearly hiding something, and I know my husband well enough to know this won't be the end of it. But for now, our young stray is awake, but pretending to be asleep so he can listen in on you.\"",
        "\"Calvin?\" a wonderful voice now asked.\n\n\"Calvin, son? Can you hear us?\"\n\nMom... Dad... Cal opened his eyes, blinking into a strong light that was quickly subdued to let him open his eyes more. He smiled. \"Mom? Dad?\"\n\nThey were there, on either side of him, looking tired but also happy, each of them hugging him in turn, Mom declaring, \"Oh, sweetheart, we're so sorry! We would never have left the Oberon without you if we'd known you were still behind!\"\n\n\"That's right,\" Dad agreed, squeezing his hand. \"We're sorry! We looked almost everywhere! How did you manage to get all the way down to Deck 10 by yourself?\"\n\n\"I-\" Thoughts of what had happened to him, the realisation that he had done something bad, returned to make him tear-eyed. \"I'm sorry-\"\n\n\"Shhh, it's okay,\" his mother assured him, \"All that matters is that you're safe, thanks to Captain Hrelle and his crew.\" She drew back.\n\nCal looked around. He was in a Sickbay like the one on the Oberon, and while he knew Mom and Dad, of course, and Captain Taaers, and others he didn't know, including a smiling, brown-furred Cat Lady with a pregnant belly, standing next to- \"Power Cat!\"\n\nPower Cat grinned. \"I'm beginning to like that name. I might get it changed.\"\n\nThe Cat Lady with an arm around his nudged him playfully. \"Forget it, Husband of Mine. Your ego is already galaxy-sized.\"\n\n\"Calvin,\" Mom said gently. \"This isn't Power Cat, this is Captain Hrelle of the USS Surefoot. They came to pick us all up when we evacuated the Oberon, and then boarded to find you when we couldn't. He and his wife and son are Caitians.\"\n\nCal looked at him again. Feeling better now, he could see more clearly: no mane, no costume, a big belly. No, no he definitely wasn't Power Cat.\n\nThe disappointment on Cal's face made the Caitian's wife grin.\n\nAnd suddenly Cal remembered- \"Hobbes! Where's Hobbes?\"\n\n\"He's all better,\" Power Ca- Captain Hrelle's wife said with a smile. \"And now he's having what your Mom says is one of his 'Zoomies' up and down the corridors with our son, who has more energy than anyone else onboard-\"\n\nA bark from out of view was immediately followed by a bundle of tan-and-black fur torpedoing between grown-ups' legs and hopping up repeatedly at the side of the bed, barking each time he came into view of Cal, until Mom helped him up onto the biobed to furiously lick Cal's face and make the boy giggle as he hugged his pet. He was alive! He was alive!\n\nThen a Cat Boy appeared, who looked up at Captain Hrelle and demanded breathlessly, \"Papa! I want dog!\"\n\n\"Well, there's a surprise,\" the Cat Lady commented dryly.\n\nCaptain Hrelle looked down at the youngster. \"Misha, we're getting you something even better than a dog: a baby sister! Wouldn't you rather have her?\"\n\nThe Cat Boy scowled and growled.\n\nNow Mom leaned in to Cal. \"Sweetheart, shouldn't you say something to Captain Hrelle for helping rescue you and Hobbes?\"\n\nCal looked up to the man. No, he wasn't Power Cat. But he was still good. \"Thank you, Sir.\"\n\nHe smiled. \"You're welcome, Calvin. You know, I could still be your Power Cat. We seem a lot alike: strong, handsome, smart, fearless-\"\n\n\"Thin?\" his wife added.\n\nMisha poked his father in the belly. \"Papa not thin! Papa fat! You not Power Cat, you Fat Cat!\"\n\nHrelle growled. \"I'm big-boned, you little [BLEEP].\"\n\nBut then he smiled and winked at Cal...\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... CLANDESTINE"
    ],
    "authorname": "Surefoot",
    "tags": [
        "federation",
        "klingon",
        "star trek",
        "star trek fan fiction",
        "star trek fanfic",
        "starfleet",
        "surefoot"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-41-stray"
}