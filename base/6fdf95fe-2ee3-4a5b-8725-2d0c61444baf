{
    "title": "Tomboy Sue",
    "pages": [
        "Tomboy Sue\n\nI've always adored tomboys. There is something about them that excites me. I love the look, the easy smiles, the energy, and the joy of life that surrounds them.\n\nThis is a stand-alone story at around 29K words. There will not be more of this. Frankly, writing this story drained me emotionally. It's a horrible premise. A horrible sequence of events. And all the more horrible because it likely happens all the time.\n\nIf you've enjoyed my style of writing and how I portray sexual encounters and what consenting adults can do, then you might be disappointed here. This is not an erotic story, although there are some mild scenes, and I know posting it on Literotica makes little sense, but I like it here and the freedom to express myself. Please bear with me.\n\nAnd please enjoy.\n\nLove,\n\nLana Ocean (Estcher)\n\nP.S.: This is a work of fiction. Names, characters, places, and incidents are the product of the author's imagination or are used fictitiously, and any resemblance to actual persons, living or dead, business establishments, events, or locales is entirely coincidental. All my fictional characters engage in sexual acts and are aged eighteen and over.\n\nP.P.S. As always, I welcome CONSTRUCTIVE criticism.\n\nPrologue\n\nSue was a tomboy through and through. She knew she was and embraced it with her whole heart and being. For her, it started at the early age of five, when she could finally start expressing herself. She looked around at her world and quickly decided what interested her and what didn't.\n\nHer mother was the perfect housewife and mother. She stayed at home and raised her and her two older brothers. Her mother often said she had always wanted a girl and finally having one-her last child-was a blessing to her.\n\nHer dad was a lieutenant in the police force. Her earliest memories of her dad were seeing him looming over her, dressed in his uniform. He would take his cap off and place it on her head and then reach down and swoop her up in the air, with her giggling like mad. His smile would be bright and wide, and he would swing her around and then hug her tight. She used to try to squeeze him harder and harder, and he would fake being crushed by her little hugs.\n\nShe also realised at a very early age that she didn't want to be like her mother. To Sue, her mother led a boring life. It wasn't until years later that she appreciated the true strength of her mother, raising two boys, a large male dog, and a husband who was always on the beat. But growing up, to Sue, her mother appeared weaker. Not as smart as her father. Not as physically capable as her father. And she didn't do fun stuff like her father did. She did boring things like shop.\n\nGrowing up in a house full of boys, she felt being a boy represented freedom and being unencumbered. She watched them roll around, scrape their knees, and be as dirty as they wanted. To Sue, it represented joy. Her mother wanted her to have nothing to do with it. Her father, on the other hand, would give her secret smiles, and she knew in her heart that her father loved her for being her and the way she was. He never treated her like a girl, but more like one of her brothers. When they went fishing, she went too. When they went to watch motor cross, she went too.\n\nWhen mom tried to send her to ballet lessons and gymnastics, she rebelled and they would find her out in the woods, hiding up a tree. She would disappear on her bike, and they all knew she had a fishing rod and would be back when the sun went down. She would come home with a few fish, and then gut, and scale them, wiping her brow, and getting fish blood on it, and then do up a fish fry. Just like dad always did.\n\nAll she knew was she didn't want to be a girl, or more specifically, she didn't want to do what girls were expected to do. She wanted none of that. Instead, she hung out with her brothers, who never seemed to mind her constant presence. She read MAD magazines and comic books with them. Played video games and beat them. Wrestled with them until her time came and her mom, for once, put a strong stop to wrestling with her brothers. When she was looking, at least. Sue could still get her oldest brother in a mean head lock and get him to admit he wanted to kiss boys before she would let him go.\n\nIn school, she only hung with the boys. They simply understood her better than the girls did. She knew more about sports, cars, trucks, military stuff, games, Dungeons and Dragons, and what superhero could beat what superhero and why she was always right about it. Deep inside, she hated how girls talked to one another and what they talked about. It never interested her, and she hated the petty and mean nature of young girls. Boys, on the other hand, were free, fun, and did way cooler stuff.\n\nMiddle School and High School were a blast for her. She played sports but mostly pickup games where she could freely join the boys. She threw a mean baseball and with none of that girly way of throwing. She could throw a strike better than most boys and could toss a ball from deep centre field to the pitcher's mound in one easy throw.\n\nShe won her first fist fight at age eight and gave a powerful bully a bloody nose. She was suspended from school for a week. Her mom had been horrified. Her dad, once she explained what had happened (which her mom had never asked), had nodded and ruffled her hair and told her he was proud of her. She could close her eyes to this day and remember that talk with her dad. He explained why it's important to stand up to bullies and defend other people. But to be more careful next time. She loved him an impossible amount after that day and solidified her disdain for how women acted. Dad got it. Even her brothers got it and privately told her just how much they admired her that day.\n\nMom had tried to make her feel horrible about it. But she wouldn't listen when Sue tried to explain just how horrible this bully had been to everyone. Finally, Sue had given up trying to please her mom, and they grew distant over the years. Her mom had wanted a girly-girl daughter, and realised Sue was never going to be that person. Sue knew it upset her mother, but she couldn't change who she was.\n\nSue was often frustrated growing up. She just understood men and boys so much better. Women seemed so foreign to her. And weak. And timid. And they fought with each other over stupid things like boys and who said what to who. She saw being a woman as being an injustice. She saw the boys' club and had decided she wanted in that club and forced her way in.\n\nSue happily remained a tomboy and never really stopped being one. Her childhood had been a wonder to her. Full of open skies, running creeks full of fish, tree forts, fixing cars with dad, and beating up her stupid brothers when they deserved it.\n\nShe started the local college at eighteen. She had her own car she had fixed up from a scrapyard car with help from her oldest brother Mike, who was twenty-four and still at home, and her brother Jim, who was only a year older than her. She had opted to remain local at the community college rather than leave home. Truth was, she loved her rural hometown and the wide expanses surrounding it. She could never leave.\n\nShe knew one day she was going to become a police officer like her dad. It was her lifelong dream. And she wanted to be a police officer in her hometown.\n\nChapter One - Introductions\n\nSue banged open the backdoor to the house after tossing her bike up against the house siding.\n\n\"Mom? I'm home!\" she cried out as she stepped through the door into the kitchen. The spring on the backdoor slammed it shut behind her.\n\n\"Sue, how many times have I told you not to bang the back door! It's going to come off its hinges again!\"\n\n\"I'll fix it if it does!\"\n\nHer mom was shouting back from somewhere deeper in the house. \"That's not the point! Close it gently!\"\n\nSue shook her head and grinned and went to the fridge. She was thirsty after the bike ride home from college. It was only ten miles away, and she kept trying to improve her timing. Today she had knocked almost thirty seconds off her best time. Entry into the police academy required her to be fit, and she worked hard at it.\n\nShe looked around the fridge and spied the large plastic orange juice container. She grabbed it with an imagined mental chime of success sounding in her head and twisted the top off. She pressed the top to her mouth and leaned back to chug the juicy deliciousness of it past her dusty throat and mouth. She heard Mario coins in her head.\n\n\"Susan Elizabeth Chandler! Stop that right this instant!\"\n\nSue turned slowly, still with the juice container raised high and draining into her mouth, and peered sideways at her mother. Her mom was standing there looking aghast, with her hands on her hips. She wore a house dress, as she called it. One of the simple dresses she made herself and wore constantly around the house, complete with an apron around her waist. Her mom looked like a mom. Complete with a bra that made her breasts look like cones or something. It was the 21<sup>st</sup> century and her mom was stuck in the fifties.\n\nSue snorted at the thought and then choked on the orange juice that caught in her throat. Juice slipped past her throat and hit her lungs. Sue immediately bent over and started hacking.\n\nSue's mom rushed over and pounded her back with weak little slaps. Sue struggled to clear her lungs and not laugh. She waved an arm at her mother to get her to stop.\n\n\"That's what you get for drinking out of the container, young lady! You act so much like your father and brothers. I wish...\" Her mom's voice faded away and Sue finally found she could breathe almost normally.\n\nShe straightened and made a \"woo-eee\" sound. \"Wow, talk about going down the wrong way...\" she laughed and then put the cap back on the bottle of juice and put it back in the fridge. She wiped her mouth with the back of her hand.\n\nHer mom closed the fridge with a push and then peered at her daughter. \"What are you wearing?\"\n\n\"Clothes, mom...\" she rolled her eyes and went to walk past her mom, but she stopped her with a hand raised in front of her. Sue looked down at herself. She wore shorts and a tee shirt and a pair of Converse shoes. She looked perfectly fine.\n\nMaybe the shirt was a little used, she thought. It was her favourite Judas Priest shirt. She tried to remember when it had been cleaned last and couldn't.\n\nHer mom tutted. \"I mean, what are you NOT wearing?\"\n\n\"A bra, mom. I'm not wearing a bra. Who cares? Bras are stupid!\"\n\n\"Bras hold everything together and believe me, without one your breasts are going to sag in time.\"\n\n\"Mom!\"\n\n\"Honey, you need to start wearing bras. You're too large to not wear one.\"\n\n\"I wear sport bras!\"\n\n\"Only when you are playing sports or running. You need one all the time. For modesty, too.\"\n\n\"Modesty? What is this word you speak of?\"\n\nHer mother playfully slapped her shoulder. \"Less cheek. Sue, you are a woman now. You need to wear more suitable clothes. You have breasts. Men will ogle them. You need to cover them up and less...\" Her mom waved her hand in the general direction of Sue's breasts.\n\nSue looked down and saw her nipples were making points in her tee. \"I hate it when they do that,\" she muttered.\n\n\"Sue, please. A bra? Okay? At school at least? Please? For me?\"\n\nSue nodded but doubted she would. Her mom let her pass, and she slipped past and headed straight to her room, pulling her earphones free and stuffing the tangled cable into her front pocket with her smartphone. She stopped at Jim's open bedroom door and peered in. He was listening to metal with his over-the-ears headphones and was rocking pretty hard, lying back against the wall on his bed. His room was a disaster of junk and clothes, and the walls were completely covered with rock memorabilia. She spied his Fender guitar lying up beside him, his hand on the neck. It was plugged into his mini amp. He looked up at her.\n\n\"Hey sis. You're home early,\" he yelled and then pulled off his headphones.\n\n\"Last class ended early. Prof had some emergency or something. I'm pretty sure she just wanted to get away early for the weekend. Three PM classes on a Friday suck balls.\"\n\n\"They surely do,\" intoned her brother, smirking. His eyes left hers and travelled down and stared at her breasts and the points on her shirt.\n\n\"Perv much?\" she said and laughed when his eyes flipped back up to hers.\n\n\"High beams are on, Sue.\"\n\nSue nodded and ignored him. Jim was constantly sneaking looks at her. No matter how many times she slapped him down, he kept doing it. \"What are you listening to?\"\n\n\"The new Slayer album. Repentless.\"\n\nSue's eyes widened. \"Get the fuck out! When did it land?\"\n\n\"Today! It's fucking awesome. I was worried, you know...\"\n\n\"Yeah, Jeff Hanneman being gone and all...\"\n\n\"And the drummer left. But this is awesome shit! Here, check this out...\" Jim pulled the headphone jack free from his system by yanking the cord, and metal music blared before Jim restarted the song. Heavy guitar notes filled the room in quick tempo. The Slayer music blared hard and strong in the small bedroom.\n\nSue loved it and whooped. \"Holy fuck! That's great!\"\n\n\"Check this out,\" said Jim, and pulled his guitar into position. In moments, he was pulling the same music out of his fender, all while lying back on his bed, with his legs crossed. He was such a natural, and Sue grinned at him. He wore a black Slayer tee, and his long blond hair was tied back behind his head. He never shaved and didn't need to, except the wisps of hair where sideburns and beard should be were sorely lacking. Sue could see his ripped arms pulsing with the motion of playing his guitar. He suddenly reminded her of dad and wondered when that change had occurred. She eyed him closely and noticed how he had gotten larger somehow. He was no longer a skinny kid like her.\n\nHoly shit, my brother is a full fucking man now, she thought with sudden clarity.\n\nShe watched him play his guitar, lost to the music. Watched his muscles ripple and his deft fingers play across the fret board and strings. She felt a surge of excitement and then felt flushed. Jim finished and looked up at her expectantly.\n\n\"Jesus fuck, Jim. That was perfect! You're so good now! Play one of your songs! Come on! You know I love them!\"\n\nSue watched his expression change from happy to sad. \"Nah, they're still being worked on. Not ready yet.\"\n\n\"Are you kidding? I can hear them in my bedroom next door. I love them!\"\n\n\"Yeah, well...\"\n\nHe was interrupted by mom who walked past his room and past Sue. \"Jim, I told you before. Keep your headphones on in the house! I can't stand that noise!\"\n\n\"Mom! I was just letting Sue hear the new Slayer album!\"\n\n\"The house is too small for that much volume!\" Sue's mother swatted her ass. \"And you get washed and changed. Dad is taking us out to dinner tonight.\"\n\nThat piqued her interest. \"Dinner? Out? Where?\"\n\n\"You know your father...\"\n\nSue looked at Jim and they both said at the same time, \"Steak house!\"\n\nSue rushed to her room and started looking through her clothes. Most lay on the floor of her room, and she threw them around, looking for her best shirt. She found it on the bottom of a pile and sniffed it. She could faintly smell sweat, but it wasn't too bad. She pulled off her tee and then her mom came in.\n\n\"Sue, you need to close your bedroom door when you change. Your brothers will see you.\"\n\nSue snorted. \"They've seen me plenty of times.\"\n\n\"Yes, and they shouldn't. It's not right.\"\n\n\"They're just tits, mom.\" Sue cupped them, over-filling her hands. She hated them. They got in the way of everything. She had cried when they started to appear. They instantly made her different from the boys she hung out with.\n\n\"Yes, they are. And I keep telling you they are wonderful. You are so blessed. But to boys they mean something else. Cover up. And wear a bra, for God's sake! Especially tonight! We aren't going out in public with your breasts hanging free, young lady! I'll die of embarrassment!\"\n\nSue growled.\n\n\"And not that shirt. I can smell it from here. Do some laundry for once. And clean your room!\"\n\nSue sat on the edge of her twin bed. She caught a motion and looked up to see Jim leering at her, peeking around the door frame, and ogling her tits. She threw the tee in her hands at him. She caught him square in the face.\n\n\"Fuck off, perv!\"\n\n\"Jim Theodore Chandler!\" screeched their mom from the laundry room.\n\nJim's eyes went round in fright, and he disappeared from view.\n\nWhen Mike came home, Sue watched him walk by her room and he didn't look in or say hi. Intrigued, she rose and followed him into his room. He always knew when she was around. He had a sixth sense about her. All her attempts to scare or startle him had always failed. He couldn't explain it. He just knew when she was around.\n\n\"Hey squirt,\" he said with his back turned to her as she walked boldly into his room. She had no boundaries at the best of times, and he was long used to her wandering into his room. She sat on his bed and then picked up a Nerf football from the floor and tossed it up in the air to catch it.\n\n\"Stop calling me squirt.\"\n\n\"You are a squirt.\"\n\n\"Dick wad.\"\n\n\"Fart breath.\"\n\nMike was wearing his mechanic overalls, but with the top pulled down and tied around his waist. He pulled off his soaked tee-shirt and tossed it into his laundry hamper. Sue looked everywhere but at him. Lately she had noticed just how muscled he was and for some reason, it bothered her. She looked around his overly neat room. Everything had its place. He once told her it was so he could tell if she had taken anything. She knew it was because he was a neat freak and she used to come in and mess things around just to fuck with him.\n\nShe watched him pull down his overalls, and then he was standing in his room with just his boxer briefs on. Sue only wore boyshorts and mostly to piss off her mother, but also because she loved wearing them under her shorts and jeans. Panties were simply not her thing. She even hated the name, thinking it too cutesy.\n\nMike turned and Sue's eyes naturally went to his groin. She was always trying to check out his package because she was curious. She had seen Jim's a few times. Even dads by 'accident' two or three times, usually when camping. But never Mike's, and she was dying to know.\n\nShe had a thing for dicks. She wasn't sure when it started. She remembered seeing her first one on the Internet. She had been horrified and repulsed, sure that it wasn't a real thing. It couldn't be, she had thought at the time. What purpose could it ever serve?\n\nWhen she had nervously broached the subject of dicks and their purpose in life with her mom, she had been horrified when her mom's first reaction was to laugh and when Sue stormed away her mother had tried to apologise. That had stopped Sue from ever wanting to speak to her mother about things like that. So, she had asked her dad.\n\nDad hadn't laughed at all. He suggested she talk to her mother, but she refused and asked him again. And he did. He sat her down and calmly and gently explained the birds and the bees to her. Her mother had been angry at him after that. Sue remembered it vividly. She had thought mom was going to leave. Dad had crossed some line she didn't understand. But what she did know now about boys and girls was horrifying, repulsive, and yet filled her full of wonder. Dad had explained it so well to her.\n\nShe became a dick expert. She learned all there was to learn about dicks. And she secretly wanted one and was angry she didn't have one. As far as she could tell, the only reason women didn't rule the world was because they didn't have a dick. It made no sense to her. She also saw sports in a whole new way. She would think: How come men played sports so rough with a vulnerability right between their legs? It made no sense. One slight tap on their balls and men were down and out. She had tried it on Jim and proved her point.",
        "Mom hadn't liked that, and she had been grounded for a week. Mike and Dad couldn't stop laughing. Then she realised men have some sort of code about not touching other men there or smacking it. Like some kind of assured mutual destruction pact. As far as she knew, that didn't apply to women and the fist fight with the bully she had had that day? She had started it by punching the bully in the nuts. She had punched him just like dad had shown her how to punch and she had hit him square. He fell to the ground, and she did what dad had always said to do.\n\n\"Make sure they stay down...\"\n\nSo she did and clocked his face kneeling next to him.\n\nHer hand had hurt, and she had shown her dad proudly.\n\n\"You kept your thumb clear?\"\n\nShe nodded as he held her hand and massaged her knuckles.\n\n\"Good girl.\"\n\nThose were the words she always wanted to hear from her dad. He said it in a way that didn't mean good for a girl, but as he meant it. She was a good girl. She had done it right. She beamed at him and hissed as he lifted the small flap of skin on her knuckle and dabbed disinfectant on it. She had caught her knuckle on the kid's teeth.\n\n\"That'll heal up fine. Want a Band-Aid?\"\n\nShe shook her head.\n\n\"Okay. Want to head out for ice cream?\"\n\nBack in Mike's room, she was still staring at his crotch.\n\n\"Cut it out, squirt.\"\n\nShe looked away. \"Mom says we're heading to the steak house tonight for dinner.\"\n\nMike stopped and stared at her. \"Really?\"\n\n\"Yeah. Think dad got the promotion?\"\n\n\"Fuck yeah, I do. The steak house is only for special nights. Wow! God, I hope he got it. He deserves it, ya know?\"\n\nDad was up for promotion at work to captain. It was a huge promotion for him and considered long overdue by most of dad's police officer friends. Sue smiled up at Mike and then rose and hugged him. \"I do. Dad deserves so much. Mom said we need to dress up for this.\"\n\nMike made an uncomfortable noise, pushed Sue off him, and twisted his body away from her. \"Cool. Worth it, don't you think?\"\n\nSue was confused by Mike's rebuff. He always liked her hugs. She watched him move away from her and then look back at her and smile.\n\n\"Come on, dress up for mom once, okay? Do it for dad.\"\n\nSue nodded and checked out Mike's butt. For some reason, it looked better than normal to her. She mentally shrugged and went back to her room.\n\n<p align=\"center\">* * *</p>\n\nThe family car was a retired police cruiser. Police officers were given a chance to buy cars coming out of service before they went to auction, and he had scooped up this one when it was listed at work. He knew the previous owner, and the retired captain who had driven it had kept it well maintained.\n\nSue and her dad had worked on it for a few weeks, replacing most gaskets, plugs, and lines. New brakes, pads, bushings and what not went it and Sue got to drive it first with her dad sitting proudly beside her. Mike had helped a little but backed off when Sue threatened to mail his testicles back to him in separate envelopes. Mike had laughed, recognising that Sue needed the time with dad. They were inseparable. He worked long and strange hours on the force. Sue would often stay awake waiting for him to come home. They tried to get her to stop, but she never would or could.\n\n\"I want to hear dad coming home. To know he's okay.\"\n\nHer dad had pulled her in close and ruffled her hair. \"I can just come in and give you a goodnight kiss and let you know I'm home...\"\n\n\"No, I need to be awake.\"\n\nThe whole family knew arguing with Sue was next to impossible. The whole force knew and understood every time her dad would say he had to get home, so Sue would go to sleep. She was already an honorary police officer at the station. She had practically grown up in the station, running around freely, watching everyone doing their work. She had the lingo down by age seven.\n\nThey also knew she wasn't a normal little girl. She was more like a precocious little boy, demanding everything and questioning everything. She watched sports with them. Commented on the teams and the first time she had used bad language; they had admonished her. Then they simply gave up. She talked like them and refused to not swear despite multiple groundings at home.\n\nDriving in dad's cruiser, they pulled up to the steak house. The large, blue-painted wooden sign proclaimed the place as the \"Cattleman's Club Steakhouse\". It was fancy for Sue's family and within their budget. A single-family income living off a police officer's meagre salary meant nights at the steakhouse were far and few between. Not even birthdays met the high bar to come here. The family was excited, and mom and dad exchanged happy glances and Sue was spinning cartwheels in her head.\n\nThey got out of the car and mom spent a moment fixing Sue's dress. It had taken her mom, Jim, and Mike to convince her to wear it. She finally agreed, but kept her sneakers on. She felt foolish in the dress, pretending to be something she was not. The bra felt like a rope tied tight around her chest.\n\nThey walked in and were greeted by name by the hostess, dressed like a cowgirl. Sue noticed the manicured nails and makeup and snorted. She led them to their table, left menus, and sauntered away, swaying her hips, and promising the waitress would be by in a moment. Sue looked around. She knew the place intimately. Horseshoes were hung randomly on the walls. Cattle horns graced the entranceways. Sawdust covered the floor, and the bar was long and promised mostly regular beers and spirits, with not a lot of that fancy or foreign stuff. The place was bustling with patrons, and country music blared from hidden speakers. The smell of steak filled the air and Sue salivated.\n\nPeople stopped by, recognising her dad, and shook his hand. He smiled and nodded, and Sue grew more excited. Things became hectic as food and drink were ordered. The waitress was a pro and snapped the gum in her mouth as she took down orders. She scooped up the menus, left untouched, and disappeared. Soon, and with no nonsense, plates piled high with monstrous, perfectly cooked steak and some other stuff Sue didn't necessarily need, like potatoes and vegetables, arrived. Mom sipped her wine, and dad and Mike drank their draft beers. Sue and Jim nursed Dr Pepper with too much ice.\n\nOnce everything was served, she watched her dad rise and face them, his face beaming.\n\n\"I want everyone to meet the new captain!\" He raised his glass to them and took a big swallow. They were all on their feet cheering, and Sue saw her mom beaming with happiness and pride. A few people nearby heard and joined in the celebration. Sue was so proud of her dad. He had been a lieutenant for a long time. Being promoted meant more responsibility for him and a little more pay.\n\nSoon, they sat and ate. Sue loved a good steak, and the restaurant made the best. Simple and plain. Let the meat speak for itself was her dad's motto and one she agreed with. Dad guzzled beer, being given the green light by mom, and soon he was laughing and talking with most of the regulars. Everyone knew everyone and where they lived. When people heard about the promotion, they came over and shook hands. Her dad never looked prouder than he did that day.\n\nHe rose from the table, tilting a little before righting himself, and held out his glass again. \"I want to thank my gorgeous wife for being behind me all this time. And I want to thank my children. One of a kind, each and every one of you. I'm so fucking proud of my boys!\" he gushed and then drained his glass.\n\nOnly Sue saw her mom look at her and could see the sympathy there. Sue felt a sharp pain inside her. She waited for her dad to say his daughter, too. But he was too drunk already, and the moment was lost. Sue smiled at her mom and tossed her short hair, as if to say it didn't bother her.\n\nBut it did. More than she cared to admit.\n\nChapter Two--A Day in the Life of Sue\n\nThey didn't get home until after midnight. The weekend passed in a quick blur and before she knew it, it was Monday. Her alarm on her phone going off woke her quickly. She was a morning person and swung out of bed after silencing the alarm and headed to the bathroom in her bathrobe. Their house was small despite having four bedrooms. Her brothers and her shared the one main bathroom while her parents enjoyed a small en suite.\n\nShe peed and then turned on the shower to warm it up. She brushed her teeth quickly and then tested the water temperature. Once it heated up, she jumped in and washed herself quickly. She was so thankful she didn't have long hair or the need to do what most women did in the morning. No makeup. No styling. Just wash and clean, get dressed, and out the door.\n\nShe threw on fresh clothes and grabbed a pop tart and ate it cold as she biked into the community college. Her first class was at ten, but she always helped a friend at school with her classes. She had known the girl for years and when she had asked for her help, Sue had agreed. She didn't have friends who were girls and sometimes Sue used the time to ask her friend questions she couldn't ask the boys.\n\nShe had settled in at the table they usually shared in the large common area of the college. Large plate-glass windows exposed the breath-taking view of the untamed land surrounding the college. She sipped her coffee, grimacing at the cheap and weak flavour of the black liquid.\n\nIn moments, her friend dropped her backpack on the table and dropped beside her on the cushioned bench seat. As always, she sat right next to Sue, their thighs often touching.\n\n\"Sue! How are you?\"\n\n\"Hi Mary. Good. Dad got the promotion!\"\n\n\"Oh my God! That's great news!\"\n\n\"Yeah, dad is pretty stoked. He was in a great mood all weekend.\"\n\n\"Wow, I'm happy for you. You've talked of nothing but for weeks.\"\n\nSue nodded happily. Then she remembered her dad's toast and her smile faltered.\n\n\"What's wrong? What's that look for?\" asked Mary.\n\n\"Nothing. Don't worry about it. How was your test on Friday?\"\n\nMary grinned at Sue. \"Pretty good, I think! I answered everything this time. I have a good feeling about it.\"\n\n\"Great! You worked hard on it.\"\n\n\"Couldn't have done it without your help, Sue,\" she said softly and looked at Sue for an uncomfortable length of time.\n\nSue adjusted her ass on the bench cushion. Sometimes Mary looked at her in a weird way. It reminded her sometimes of Jim and the way he looked at her. Sue thought Mary was a nice person. She was a girly-girl as dad would say, but she was nice now that high school was behind them. Mary always wore the best clothes, and always wore makeup and painted her nails and toes. She was a brunette and had been a cheerleader in high school. One of the popular girls and not wanting anything to do with Sue until they hit college and Mary realised she needed help with the schoolwork. Why she had singled out Sue for help was beyond Sue's understanding, but Sue knew the material and helping Mary was no sweat for her. Her mom thought it was wonderful.\n\nSue was taking Law Enforcement Sciences, which surprised no one. The degree would allow her to apply to join the police force. Mary on the other hand was taking Kinesiology and Sport Management. Unfortunately for the girl, it meant taking mathematics. Mary had known Sue had excelled at math and sciences and had approached her early on and asked for help. She had honestly been surprised when Sue had agreed with a shrug and a \"why not?\". Now they met every Monday morning and went over her math syllabus.\n\nCollege was into its second month of the first semester and Mary was slowly trying to figure out just who Sue was. Everyone knew she was a tomboy. She had always been. But now, Mary was curious as to how and why she remained so boyish. Sue was gorgeous now and Mary was secretly envious of the girl. She hid it well, whether intentionally or not. But Mary was an excellent judge of quality and Sue was more than qualified to be a stunner in the female department. She looked and acted like a boy, but underneath Sue was more female than most of her other girlfriends. And secretly she kind of crushed on Sue. More so because she was clueless to her looks. Even now, looking at her chewed nails, her cuticles black with oil and who knew what else, Mary could see the beauty of her weathered hands. Her hair was cut short, but it exposed her strong neck lines, and accented her cheekbones and full lips. Her eyes were slightly larger than normal, and the deep blue shone with intelligence and often Mary would lose herself a little in them. Despite wearing no make-up, Mary could see that Sue didn't require makeup and wondered how she would look with a makeover.\n\nShe would be stunning, thought Mary. Fucking gorgeous.\n\nHer lack of boundaries also intrigued Mary. Sue simply touched people all the time. She would take their hands or grab their arms or touch their back to get their attention if she wanted it. She also stood inside what most people would consider a personal space. And her walk, thought Mary. She walks like a boy. All purpose and no swagger. If she would only emphasise her walk a little that perfect ass of hers would draw all the looks.\n\nMary was surprised when she realised just how envious she was of Sue. Little Sue the Tomboy. If Sue had known the conversations behind her back over the years, she would probably have kicked all their asses. Nobody exactly feared Sue, but knew if she got her hackles up, she wasn't beyond using her fists. No one fucks with Sue. Too many of her friends had faced her wrath. Also, having a father who was a police officer also meant few people were willing to cross her and test out what her father was willing to do.\n\n\"Okay. What do you want to work on today?\" asked Sue, already taking the math textbook out of Mary's hands and opening it up. \"Please tell me it's something more interesting that algebra...\"\n\nMary watched Sue walk away after their short session. Most of the boys and a few girls turned their heads to watch her ass. Mary smirked and thought back to their session. Often, she stopped listening to Sue and merely let her words wash over her and learned little. Sue's voice was a little deeper than most girls and the sultry tones woke something inside her.\n\nSometimes it raised the little hairs all over her body and a wonderful tingling sensation would wash over her. The closer she sat to Sue the better it was. Mary knew in her soul that she wasn't a lesbian and crushing on Sue. The thought of being intimate with a woman repulsed her. She knew what went on down there and wanted nothing to do with it with another woman. She was always amazed when her boyfriend had insisted on putting his mouth down there. It felt great sometimes, but inside it repulsed her.\n\nShe remembered prom night all of a sudden. She had given up her virginity, pressured to follow the practice enjoyed across the States. Prom night was the night to lose it and she had followed through on it. It had been horrible. Boys were useless to her. Her prom date, her boyfriend for the last three years at school, had painfully jammed his thing into her, jerked his hips at her three times and then filled his condom. That had been it. Afterward he was pleased as punch and ignored her lying there feeling her sore pussy and lifting her fingers stained with her blood to her eyes.\n\nMary shuddered and felt like weeping.\n\nSue left the common room and headed to her first Monday class. It was Accident Investigation followed by a two-hour lab. She loved it and was getting top marks. She loved the logical approach, and the care taken to observation. Her professor was a dorky thin guy, only ten years older than her. He had a wonderful sense of humour and most times it was only Sue that caught his jokes. He had sensed it and they had fast become friends of a sort.\n\nCoincidentally Sue had also been thinking of prom night. For her it had been a LAN party at her best friend Dave's place. Her click of friends at school swore off the prom and all its bullshit and planned the night months in advance. Her and her four other friends Dave, Bill, Ted, and Danny had plugged in their gaming rigs to Dave's switch and booted up Overwatch for \"The Epic Night of Overwatch Mastery Over All Puny Humans\". The night had been epic. And Sue had kicked ass and taken names.\n\nDave and Danny had brought a bottle of Jack Daniels each and they had enjoyed JD and Cokes, something Ted called a Lemmy. Sue, having watched far too many drunks being thrown in the drunk tank at the station, faked drinking hers and used her sobriety to rule the LAN party. At one point she had put Bill into a headlock when he tried to touch her boobs. He was lucky I hadn't kicked his nuts, she smirked as she approached the classroom. Bill was the more adventurous in trying to cop feels of Sue's ass and tits. She knew what was happening and forgave him. She had known him too long and her mom had warned her. It was Dave who took Bill aside and told him he was being less than cool.\n\nSue liked Dave. He was her best friend and knew everything there was to know about another person. Dave was just kind of perfect to Sue. He was strong, and quiet, and funny, and knew more about sci-fi and fantasy than any of her other friends. And of all her friends, only Dave was willing to head out into the woods and live off the land with her. They had spent an entire week outside once and Sue had shown him how to snare rabbits, catch fish, make a fire with sticks, and forage for mushrooms and other delightful things. When it got cold at night, he would also snuggle up to her and not paw at her.\n\nAnd of all her friends it was only Dave's penis that she had seen and that had been recently during their last year of high school. They had gone camping to celebrate his eighteenth birthday, glad he was finally her age again. When they camped all need for privacy was removed by their long-standing established tradition. If they had to pee, they would simply pee. She would squat and carry on a conversation with him while he watched, thinking nothing of it. When he peed, it was much the same. When she saw it, she had been secretly impressed. Not by its length and girth-he was quite normal-it was just so pleasant looking compared to most dicks. She had wondered what it would look like hard, and the thought had been so foreign to her she had shied away completely from ever having those thoughts about Dave again.\n\nUntil now dammit, she thought.\n\nShe stomped up to the auditorium-styled classroom and banged the door open and entered and walked down the stairs through the seats. Heads turned already knowing who it was. She waved to everyone, an all-male class, and sat up front in her usual spot.\n\nThe side door opened, and her professor walked in texting on his phone and not paying attention. Somehow, he avoided a cleaning cart left near the stage and walked up to the podium. He finished his text and looked up and around squinting at the lights beaming down on him.\n\n\"Morning everyone, today we talk about first reactions on arriving at a crime scene. Following from last week's lessons we know the basic principles. Far too often, police rush a scene...\"\n\n\"..., Sue, can you hold back a moment?\" asked the professor after the class. The rest of the class were leaving and heading to the lab which was a long hallway away.\n\nSue nodded and gathered her things and then stepped up onto the stage and came over to stand beside the professor. \"What's up?\"\n\nHer professor shuffled through some papers and pulled out hers. \"I was very impressed with this, Sue.\"\n\nSue could see the 98% mark written in red ink on the top of the paper and smiled. \"Wow, thanks.\"\n\n\"I wasn't planning on handing back the results until next week. I want everyone focused on the next lab series before we start tearing down people's high expectations of themselves.\" He chuckled. \"But, for you, I'm making an exception but purely for selfish reasons.\"",
        "\"Selfish? How?\"\n\n\"I've been invited into the city to provide a presentation on modern crime scene forensics techniques. I've done this every year but reading your paper I was impressed by something you outlined. I was wondering if you would let me present a portion of it this year. I'll give you full credit of course. I just need your permission to use it. It's really quite remarkable.\"\n\n\"What part are you talking about?\"\n\n\"The microbe population analysis.\"\n\n\"Oh!\" laughed Sue. \"Well, you'll need to credit my father, too. That part is footnoted and referenced. My dad came up with that. I only took it a little further.\"\n\n\"It has great potential. Especially for sexual assault victims.\"\n\n\"Cool.\"\n\n\"So, is it okay?\"\n\n\"Course. I'm flattered.\"\n\n\"You are an amazingly smart and intelligent woman, Sue. I think forensics is your strength. You should give more thought to it. I know your dad is a police officer and you want to follow in his steps, but seriously, you have a gift.\"\n\nSue shifted uncomfortably standing mere inches from her professor. She didn't know it, but her professor was very much aware of how close she was. She still looked the tomboy, but her natural beauty was starting to leak through, and the professor wasn't immune. He had many imagined scenes play through his head of being with her.\n\nJust once, he prayed, just once I would love the chance...\n\nSue finished up her lab work and packed her things. In this class lab work was solo work. She looked around and saw she was once again the last one standing in the lab. Although scheduled for two hours, Sue normally used three. She had a knack for the detailed work in the lab. It was mostly about separating and protecting evidence. The professor went to great lengths to prepare the labs and Sue appreciated it.\n\nAs per normal, the new teaching assistant (TA) remained behind and had to until all the students left. He had more than once expressed displeasure with her for remaining beyond the scheduled lab timing, but the professor had made an exception for her and anyone else who wanted to do more. Practice made perfect, he always said.\n\nShe finished gathering her things and turned to leave only to find the TA standing right behind her.\n\nShe gave a very girly shriek of alarm and backed up a step.\n\n\"Jesus fuck, don't sneak up on me like that!\"\n\nHe was looking at her in a weird way and she frowned at him.\n\n\"What's up? I'm fucking leaving, okay? This is my lab time.\"\n\nThe man smirked at her and stepped toward her. Sue felt her ass hit the lab bench behind her. She looked around quickly. Everything was cleaned up. There were no weapons nearby. She spied a cell phone propped up near her and then turned her attention to the threat. Her eyes went to the CCTV camera in the corner, its lens pointed directly at them.\n\n\"You're a strange one,\" he said quietly and openly checked her out. His eyes roamed over her body and Sue could see something wrong behind them. She was used to stares, being a tomboy does that, but the way he was looking at her reminded her of Jim, but without the sibling humour in it. \"I bet you're a great fuck. I'm gonna take you right here. All your fucking holes...\"\n\nHer brothers and her dad had often spoke to her about self-defence. How to recognise a predator and how to deal with them. Inside she was shaking. With anger and fear. Outside she was calm and slowly placed her bag down on the lab table. She waited until the man's eyes rose to hers and then held them with hers.\n\n\"Done undressing me with your eyes, asshole? I want you to take two steps back away from me. Then I'm going to leave this room. You will not touch me. I will not allow it. Are we clear Mister I Want to Be a Sex Offender and Get Ass Raped in Jail?\"\n\nThe look in the man's eyes changed in a heartbeat. It went from lustful to angry. Sue watched it all, knowing what to look for. His hands rose and grabbed her upper arms and the moment he touched her, she kicked out. The man had never even noticed her shifting her weight. As it was the full strength of her foot impacting his groin and she smashed his testicles hard up against his pelvic bone.\n\nHe couldn't even make a sound as he crashed to the floor, curling up in the foetal position. Sue knelt at his head and cocked a fist ready to keep him down. He was already unconscious, the pain being too much. She glanced at the closed-circuit television camera and the red light blinking on it and nodded at it.\n\n\"I warned him. He didn't listen,\" she said and rose, grabbed her things, and fled the lab, not looking back.\n\nThat evening the living room lit up with flashing lights. Her dad rose with a frown and looked out the living room window.\n\n\"What the fuck?\" he said and went to the front door and opened it. \"Sergeant, what are you doing here?\"\n\n\"I'm sorry, captain. I have to arrest your daughter.\"\n\nSue's mom gasped. Sue rose having an inkling what this was about. She hadn't said anything when she came home. These things always tended to upset her mother.\n\n\"Arrest her for what?\"\n\n\"Assault. She crushed a man's testicles today. One shattered. The other isn't looking good.\"\n\nSue was at the door. Outside the house, neighbours were gathering. She could see the police cruiser parked in the driveway and the police officer's partner standing next to it.\n\nHer dad turned to her. \"Is this true?\"\n\n\"Sort of. He assaulted me. I warned him beforehand just like you taught me. He touched me and I put him down. He was very rapey.\"\n\nDad looked at the sergeant in the door. \"She's the victim. We don't arrest victims, sergeant.\"\n\n\"I'm sorry, sir. It's her word against his. We have to take her in.\"\n\n\"Dad, there was a CCTV camera in the lab...\"\n\nDad looked at the sergeant. \"And? Have you reviewed the tape?\"\n\n\"The camera doesn't work. There's no recording.\"\n\n\"What?\" exclaimed Sue. \"It was totally working!\"\n\n\"I'm sorry, sir. I have to take her in.\"\n\nMom stepped forward, her voice quaking. \"Honey, what's going on?\"\n\nDad ignored her. \"Who was the man?\"\n\nSue answered. \"The new teaching assistant.\"\n\n\"What's his name?\"\n\nThe sergeant looked hard at Sue's dad. \"The new police chief's son.\"\n\n\"Fuck,\" said the dad, and Sue's heart crashed.\n\nChapter Three--Injustice\n\nBeing escorted out of the house in handcuffs was not pleasant, nor was it made any easier with all the neighbours out watching and whispering, while being read the Miranda rights. Sue's mind was whirling trying to make sense of everything. Something was wrong and her mind couldn't seem to latch onto what it was trying to tell her.\n\nShe was taken to the station and saw the sad looks everyone was giving her. She knew everyone. Had grown up with them. And yet they all looked at her like she was a piece of trash. She was processed quickly, searched, and placed in a cell she knew all too well but from the other side of the bars.\n\nShe sat on the thin mattress and shivered in the cloth overalls she had been forced to wear. Underneath were dirty panties and nothing else. The emotions came strong and hard and overwhelmed her, and she fell to her side and started crying uncontrollably.\n\nI hadn't done anything wrong. Why am I in jail?\n\nShe couldn't sleep, her mind whirling. Nothing made sense. She had seen the camera and saw the power light. It was inconceivable that it didn't work. The college had to provide full coverage to protect students against exactly this type of event.\n\nThe new chief's son? She had no idea and didn't know the new chief other than dad hadn't liked him. That was enough for her not to like him either. She thought about evidence tampering for the hundredth time. Someone erased the tape. Protecting the son. It has to be the chief.\n\nSometime during the night, she heard a bang on the bars of her cell. She woke, not remembering falling asleep. She shivered uncontrollably. And struggled to sit up. The movement strained her tight muscles, and she winced.\n\nShe looked out through the bars and saw a large man standing there alone.\n\n\"You fucking bitch,\" drawled the voice. \"You destroyed my son's balls. You castrated him.\"\n\nSue gathered her wits. This had to be the new police chief. Transferred in to cover the sudden retirement of the previous chief. He was fat. Sue could smell the stench of sweat and alcohol off him in the cold air of the jail.\n\n\"I'm going to see you do time for this. Maximum penalty. What the fuck did he do to you to deserve this?\"\n\n\"You son is a rapey mc rape face. I warned him not to touch me. He did. I defended myself.\"\n\n\"YOU CRUSHED HIS FUCKING BALLS! DESTROYED HIM!\"\n\nSue felt her anger rise hot and quick. \"He was going to RAPE ME, YOU FUCKING ASSHOLE!\"\n\n\"You destroyed his balls. He will never have children. You denied me grandchildren. I will make you pay for this.\"\n\n\"Go fuck yourself you entitled prick. There's something wrong with your son. You can see it in his eyes. Probably runs in the family. Did you destroy the evidence? The camera footage?\"\n\nThe chief said nothing. Sue could see him in the dim light vibrating with anger, his hands opening and closing. \"Fuck you, you bitch. I hate fucking bitches like you. What the fuck are you? A dyke? Huh? A fucking gay bitch? A pussy muncher? All you had to do was let him fuck you and it would have been over. Instead, you destroyed him. You killed his future children...\"\n\n\"His children would have been fucking pedos. I saved kids.\"\n\nThe chief laughed then. A sick twisted laugh that churned Sue's stomach. \"Just for that, I'm taking your dad down, too.\"\n\nSue rose then in furious anger, feeling her muscles cramp and tear with the cold. She ran at the bars and was met with a police baton. It thrust through the bars and smashed her forehead.\n\nSue woke lying on her back. She went to move her right hand to her aching head, but it met with resistance. She heard the metallic clink and recognised she was handcuffed. Her eyes opened, and she found herself lying in a hospital bed. She lifted her left hand and touched her forehead. It was wrapped in thick gauze.\n\nShe heard a noise beside her and then a light was shone into one of her eyes. Then the other one. The light clicked off and Sue blinked against the blinding light halos remaining in her vision.\n\n\"Where am I?\" she managed to croak out past her dry throat and cracked lips.\n\n\"Hospital,\" answered a cold voice.\n\nSue looked around quickly. It was dark outside, and she had an IV in her left arm. She recognised the hospital as being the one in the city. She was miles from home. \"Who are you?\"\n\n\"Your doctor.\"\n\n\"You have to help me! The police chief! He's crazy!\"\n\n\"He warned me about you. Told me what you did. That's unforgiveable. You destroyed that man's son. Crushed his testicles. Who does that?\"\n\n\"He was about to rape me!\"\n\n\"And yet you had no sign of any struggle on you...\"\n\n\"I was supposed to let him rape me first? What kind of doctor are you?\"\n\n\"One who is only going to do the minimum to help you. You have a concussion. A pretty bad one. You shouldn't sleep. There's a build-up of fluid behind the spot where you struck your head against the bars. Small skull fracture. Suicide. Too bad you didn't succeed.\"\n\n\"What? The chief struck me with his police baton!\"\n\nThe doctor snorted and rose.\n\n\"Does my head look like I hit the bars? What the fuck is wrong with you?\"\n\nThe doctor hesitated a moment and then scowled and left.\n\nSue sobbed and struggled to remain awake. She ached all over and was certain she wasn't handled gently being brought here. She felt exhausted. Her head was in agony. When she moved her head bright lights shot painfully through her vision.\n\nSleep taunted her. She knew the signs of a concussion having suffered a few of them during her more active years and she had a few of them. She needed a CAT scan. Medication. And all that was being denied to her. Her anger rose and helped clear her head. She had to escape. Now.\n\nShe looked down at her right wrist. She was handcuffed to the metal bed frame. Her left was free for some reason, and she felt a glimmer of hope. Protocol should have had both of her hands secured. She lowered her mouth to the IV line in her left arm and worked on the tape holding the needle in place. It took her a while, but she finally managed to expose the metal IV needle. She gripped the metal of the needle with her teeth feeling it grate inside her vein. She pulled the line out of her arm crying against the pain of it. In a moment, she had the line free and spat it out onto her lap. The weight of the IV line threatened to pull it off the bed and quickly she grabbed it with her left hand and worked on unlocking the handcuffs. She felt around inside the double lock bar. She had played with handcuffs in the station all her life and she knew what to do. In moments, the ratchet swung free, and the handcuffs fell from her wrist.\n\n\"Thanks, dad!\" she whispered to him, rubbing her wrist.\n\nShe got off the hospital bed and immediately felt the world swim around her. She gripped the bed until it passed. Her hospital gown was open in the back and she felt the cool air of the room swirling around her naked butt.\n\nQuietly she went to the window blinds and peeked outside her room into the hallway. A police guard should be posted, but the hall was empty. That's strange, she thought. Across from her were the elevators. She tried to spy a nurse's station, but the hallway just extended with more doors. She spotted the exit sign by a door not far from her room. Sue needed to escape. She was being setup by the police chief and his son. No guard meant no witnesses.\n\nShe didn't know what to do. All that mattered was escaping this hell. She thought of the woods outside her town and a small smile crossed her lips. She could do it. She had prepared her whole life.\n\nShe searched the room for clothes, but it was empty of anything useable, other than the thin blanket on her bed. In moments, she felt her energy fade. Her headache was unbearable and made her vision swim alarmingly. She kept swallowing to stop herself from throwing up. She was glad her room was not brightly lit. She sat for a long moment until she felt able to move again. She staggered to her feet and went to the door.\n\nShe opened it carefully afraid of making noise, but the door swung easily on the large hinges. She peeked outside and looked down the corridor. To the right was the end of the hallway and the beckoning stairwell. To her left the corridor went about fifty yards and turned to the right.\n\nThis can't be real, she thought feeling fear wash over her. How can I be in a hospital after being arrested for assaulting a rapist? How did I get here?\n\nShe crept into the hallway and hugged the wall on her left. She stopped at the next window and peered through. The room was empty of people. She opened the door and slipped in. Moments later she exited, finding nothing to wear. She continued down the hallway, checking each room. All were empty and other than finding more hospital gowns, she couldn't find clothing. She felt herself getting anxious.\n\nWhen she reached the corner, she peeked around it. Now she could see the nurse's station and a middle-aged woman was working behind her computer, the screen illuminating her face. Sue thought quickly. She could approach the woman, plead her case, and ask for help. That seemed reasonable, but she immediately understood the risk. If the nurse wouldn't help, she would raise the alarm.\n\nSue ducked back and tried to control her breathing. The world spun again and the need to throw up nearly had her retching. She breathed deep and tried to relax. The feelings passed, and she peeked around the corner again. The nurse rose from her seat and Sue ducked back again.\n\nSue could hear the nurse humming and moving something around. The humming grew louder, and Sue braced herself, ready for anything. She glanced down the hallway to the exit sign and thought about running. The humming stopped and Sue waited. When she didn't hear anything, she peeked around the corner. She watched the nurse disappear down another hallway, walking quietly in her Crocs.\n\nSue breathed a sigh of relief. Then she saw what looked like a bathroom with a sign \"Staff Room--No Admittance\" on the door. Sue crept to a position where she could see down the hallway the nurse had walked down. There was no sign of her, and Sue went over to the staff room and turned the handle. When it opened, Sue almost cried in relief.\n\nShe slipped into the dark room and almost screamed when the overhead lights flickered and went on. Motion sensor, she thought and looked around. It was a small room with a couch and a rumble bed. She spied the lockers and went over to them. She opened them one after another until in the last one she saw clothes hanging on hooks. Holding back a sob of relief, she quickly grabbed the clothes and threw them on. They were a little bit big, but she didn't care. She slipped on the sneakers and stood. The hoodie was perfect, and she slipped her hand in a pocket and it closed on a phone.\n\nShe pulled it out, but it was locked. She spotted a backpack at the bottom of the locker and grabbed it. She put the phone back in the locker and closed it.\n\nThere was a small counter with a Keurig machine next to a small sink. Above the counter and below it was cupboards. She went through them quickly and then spied a small supply of medicine. She grabbed the large bottle of Advil, bandages, and some antibiotic ointment and put them in the backpack. She moved and the Advil bottle rattled. She opened it, spilled a few pills into her hand, and then stuffed a few tissues into the bottle and closed it up. She dry swallowed the pills and then looked around the room. There was nothing else, and she crept to the door and opened it a crack to peer outside.\n\nThe nurse hadn't returned, and Sue wasted no time. She crept out and back past her room and then looked out the window near the stairwell door. She was up about five floors. Outside she could see the hospital grounds and streetlights. Sue opened the stairwell door and slipped through. She took deep breaths and then started down.\n\nShe had to stop several times when dizziness would almost overwhelm her. She counted floors and stopped when she was sure she was at ground level. She looked down the next flight and saw the exit door. Then she saw the warning sign stating an alarm would sound if opened. She cursed. She looked at the door that opened back into the hospital.\n\n\"Fuck, fuck, fuck,\" she said. \"What would dad do?\"\n\nShe thought long and hard.\n\n\"He would walk out like he owned the place,\" she decided. She placed her hand on the handle, took a deep breath, and swung the door open and stepped through. She was immediately assaulted visually by the bright lights which stabbed painfully into her eyes. Sounds swept over her, and she was almost overwhelmed.\n\nGet a grip girl. You can do this, she thought.\n\nShe cracked her eyes open and then pulled the hoodie hood over her head and pulled it down over her forehead to hide the gauze and ducked her head. She walked the corridor and nearly froze as two orderlies walked past her talking about some hospital chore. She continued down the hallway and then spotted the large glass doors leading to the outside and her freedom. She was by the Emergency Ward. There were so many people wandering around. Over by the entrance to Emergency she saw a lone security guard, but he was watching the Emergency Room waiting room. She noticed his sidearm and shuddered thinking of it turning on her.\n\nSmells from the nearby coffee shop had her stomach roiling. She was hungry but the thought of food made her feel worse. She spotted a clock and saw it was two in the morning. She had lost a day somewhere. She kept her eyes from everyone and kept walking to the entrance. She expected any moment for someone to stop her. She was shaking in fright. And then, without any fanfare, she found herself outside when the glass doors whisked open.",
        "She kept walking not looking back.\n\nSue kept to the darker streets and kept moving directly away from the hospital. She wished for her phone to check GPS and where she was. She saw street names, but they meant nothing to her. Thankfully, this late at night, the streets were deserted. When the odd car approached, she hid in the alleys. Her heart was pounding, and her fear never seemed to reduce. Her concussion was bad, and she swallowed more Advil. Each beat of her heart thrummed through her head, and she found herself counting the beats.\n\nA long hour later she found herself in a large commercial area. Sue didn't know the city. She only knew she had to keep moving. Thankfully the fall air was warm and dry. She spotted a lone vehicle parked at the curb in front of a textile manufacture warehouse. She looked around, but the area was deserted. She wanted nothing more than to lie down and sleep. The need was overwhelming at times. She would start crying for no reason and she was ashamed of herself, wiping away her tears in disgust.\n\nShe approached the Chevrolet Cruze, noting the large amount of rust around the wheel wells, and saw it had three parking tickets under the wiper blades. She grinned when she checked them. The earliest was over two weeks old.\n\n\"Jackpot,\" she whispered, feeling positive for the first time. She checked the driver side door and almost cheered when it opened. Excited she took off the backpack and searched through it for the first time. She almost sobbed when she pulled out a woman's wallet. Inside was over a hundred dollars and credit cards. The nurse was called Margarita Lopez. Sue promised herself to pay the woman back when she had a chance.\n\nInexplicably, she also found a pair of panties and warm socks. She found sanitary pads, tampons, and a bag of gummy bears. There was also an older eBook reader with a charging cable. There was also one of those external phone batteries. She almost cheered when she found an Eddie Bauer utility tool. She looked around again and then slipped down on the floorboard looking up at the steering column. Her head spun for a moment, and she held herself still and closed her eyes until it passed.\n\n\"Come on, Sue,\" she berated herself. \"You know what to do. Your education in a police station prepared you for this, didn't it?\"\n\nYears growing up in a police station had exposed her to all sorts of nefarious things. One of them being how to hot wire a car. It had taken her a lot of effort to get a junior police officer to explain it to her. Then he had shown her with a car in the impound lot. It wasn't difficult, but you had to know what to do.\n\nShe removed the screws holding the plastic moulding around the ignition and pried the plastic away. She saw the wires and cursed the poor lighting. She struggled out from the floorboard and hit the overhead light and sighed in relief when it turned on brightly. At least the battery is working, she thought and returned under the steering column. Now she could identify the wiring. She cut the two red power wires with the utility tool, stripped the ends, and twisted them together. She could see the dash electronics light up. Grinning and thanking the young police officer once more, she kept at it. She grabbed the brown wire and hoped it was the right one and cut it. She reached into the backpack and opened a tampon package. Using the plastic tampon wrapper to insulate herself she stripped the ends of the brown wires and then touched them together, sparking them.\n\nThe car started with a roar and Sue whooped loudly. That set her head spinning, and she groaned. She pulled the wires apart and bent them away from each other and clear of where she would be sitting. The wires carried quite a lot of voltage.\n\nShe got in the driver's seat and closed the door. Using the multi-tool she pushed down between the steering wheel and the column. She whooped again when the steering wheel unlocked. She punched the overhead light and sat looking at the dash. Everything seemed fine. There was a half tank of gas. She put on her seatbelt, put the car in drive and drove off, watching her speed.\n\nShe started crying. She couldn't help herself. It was from relief and fear. She was surprised she had made it this far. She knew she wasn't a poor little flaky girl, but she had never imagined doing what she had done so far.\n\nShe was worried her case was never going to come out in her favour now. She was fleeing from police custody and sure it was a federal offence. Even if she managed to prove her innocence, this would haunt her. All she knew was she had to hide. Get herself safe. And then start to figure out what to do now.\n\nShe also knew that every single camera between the hospital and here would be checked. The police would know what she did and where. There was no hiding in rural and urban America. She only hoped the commercial area had few cameras. Hopefully they had no idea she had stolen the car.\n\nFive minutes later she spotted the on ramp that headed east toward her hometown. She turned on the radio and found a rock station. She needed the music to stay awake and alert. She had all the windows rolled down and air rushed through the car. When she spotted the sign marking the distance to home, she felt the first stirring of hope. She checked the eBook reader and plugged it in to charge it.\n\nShe found herself talking to herself.\n\n\"You can do this, Sue.\"\n\n\"What are you going to do?\"\n\n\"Hide.\"\n\n\"Hide where? For how long? Think this through!\"\n\n\"I don't know yet!\"\n\n\"Go see dad. He'll know what to do!\"\n\n\"He has his duty. He'll arrest you. You know he will. He won't want to, but he'll have to. He's a captain now!\"\n\n\"I'm his daughter. I'll come first.\"\n\n\"No, you won't. Duty first. You know that!\"\n\n\"Maybe Mike or Jim?\"\n\n\"This is beyond them. Don't drag them into this. Leave the family out of it. Distance yourself. It's for their own good.\"\n\n\"What about my good?\"\n\n\"Hon, that ship left when the police chief cracked your skull.\"\n\n\"I'm fucked.\"\n\n\"Yes. You're fucked.\"\n\nShe drove in silence, listening to lame ass rock from the last decade. It wasn't real rock. Real rock died in the 70s.\n\n\"That's not true,\" said her dad beside her and she looked over startled. There was dad, in full uniform sitting in the passenger seat. \"There was great rock in the 90s and 80s.\"\n\nShe knew it wasn't real. But he looked so real. Wow, concussions can sure fuck you up. Dad's sitting there. I can see him!\n\n\"Name some.\"\n\nHer dad chuckled, and the sound made her feel better. When dad laughed everything was okay. \"Metallica? Red Hot Chili Peppers? Pearl Jam? Did I say Pearl Jam?\"\n\n\"They weren't Led Zeppelin, dad. Or Queen. Or Black Sabbath. Even the fucking Stones.\"\n\n\"So? Rock is still rock. Take what you can get.\"\n\nThey drove in silence.\n\n\"Dad?\"\n\n\"Yes hon?\"\n\n\"I'm really scared.\"\n\n\"I know hon. I know.\"\n\nChapter Four--Stand by Me\n\nSue drove around her town not willing to risk being spotted and headed south to an area she knew well but had rarely visited during her outdoor haunts. She had stopped for enough gas to get her where she was going at a rest stop station. She grabbed some essential food items and bottled water. She spotted some cheap fishing gear and grabbed the kid rod and some hooks. Thankfully the checkout guy hadn't even looked at her. She filled the backpack and downed one of the waters. Her nausea kept at bay, and she was able to keep the cold water that hit her empty stomach from coming back up.\n\nShe hit the road and drove. She glanced at the sky and knew the sun would be up in two hours.\n\nBy now, she was way out in the boonies. She loved that word.\n\n\"Out in the boondocks, dad! In the middle of nowhere.\"\n\nWhen her dad didn't answer she looked over at the empty seat. She felt his absence and her eyes stung, annoying her. She watched the trees fly past and grumbled when the car hit potholes in the dirt road. It went right to the pain in her head, and she gritted her teeth.\n\n\"More of a track, really,\" she muttered. She remembered the road. It led to a thick forest area that surrounded a small lake. There was a small cave under a rock outcropping. She could hide there.\n\n\"For how long? What's the plan here?\" her smart-assed self asked her.\n\n\"How the fuck should I know? First, we get somewhere safe. Hidden. Then figure it out.\"\n\n\"Do you want to kill that son and his father?\"\n\n\"Fuck, yes I do. I want to rip their fucking heads off. Make them feel it.\"\n\n\"Good.\"\n\n\"How does this happen in this day and age?\"\n\n\"Bad things happen to good people.\"\n\n\"So wise.\"\n\n\"Yes. Yes, I am.\"\n\n\"We're fucked.\"\n\n\"Yes. Yes, we are.\"\n\n\"Can you snare with fishing line?\"\n\n\"Yes.\"\n\n\"You've never done that before. Will it work?\"\n\n\"Yes. Now leave me alone.\"\n\nSue's stomach rumbled hard. She was starving. She had no idea when she had eaten last and tried to remember. She couldn't. Her brain wasn't working right. She knew that. She also knew only time would fix it.\n\n\"You need an MRI. Your head was cracked. That's never a good thing.\"\n\nShe reached up and felt the bandage wrapped around her head. It was thick at the front. She glanced in the rear-view mirror and saw her eyes were blackened. She looked a fright.\n\n\"Fuck me.\"\n\n\"No thanks.\"\n\n\"Skank.\"\n\n\"Bitch.\"\n\n\"Whore.\"\n\n\"Slut.\"\n\nSue giggled and kept driving. The car made a loud dinging sound, and she looked down at the instrument panel. She was running on fumes.\n\n\"Why didn't I put more gas in it?\"\n\n\"Because you are ditching the car. You won't need it and you need the money more.\"\n\n\"I have seventy bucks left. That's not a lot.\"\n\nShe drove in silence and watched the dash. She had maybe twenty miles left. Maybe a little more. She relaxed knowing she would make it to where she planned on ditching the car. After ten minutes, she spotted the side road. It led to an abandoned shack used by hunters in the area. Hunting season was over, and she felt safe driving up. She figured if the car was found they would assume she stayed at the shack. Hopefully, they wouldn't find the car until Spring.\n\nShe hit a bad pothole and cursed. Her head was still pounding. She couldn't get used to it. She felt her eyeballs were protruding at times and felt them. They seemed larger, and she glanced at the rear-view mirror again.\n\n\"The doctor said there was swelling in the brain, didn't he?\"\n\nShe watched her face, but she didn't seem to want to answer herself.\n\n\"There is. It's bad. Really bad.\"\n\nShe thought of Dave then, her best friend. Dave was always there for her. Understood her better than anyone else. She knew he liked her as more than a friend, but she could never go down that road with him. Men and women were cursed to never be complete friends unless sex was involved. She had read enough articles on it to know. Sure, some people will swear men and women can be true friends without it, but at some point, even if it was just the once, they would think about it. About coupling. Taking the relationship some place deeper. Maybe ruining everything.\n\nAnd Sue had fantasised about Dave many times. As years went by those fantasises sometimes went a little crazy. Dave and her rutting in a field. In a lake. Anywhere. Just Dave inside her, moving and grinding.\n\nShe realised she should have slept with him. \"Now, I'll never get the chance. To taste him. Feel him. Engulf him and hold him inside me.\"\n\nShe sobbed and wiped angrily at her disloyal eyes.\n\nShe rounded a turn and spotted the shack. Beside it was a cheap car tent. She drove inside and put the car in park. She reached under the steering column and untwisted the battery wires. The car shuddered and turned off.\n\nSue sat there for thirty minutes. She felt lost. She felt her life was over. She thought of Dave, Bill, Ted, and Danny and all their fun times together running around the neighbourhood. They also stuck together. Defended each other. Supported each other.\n\n\"I should have fucked them all,\" she decided. \"Stopped being a tomboy and just fucked them. I know I wanted to. Now, it will never happen.\"\n\nShe thought then of the story It with the horrible clown. \"I could have been Beverly Marsh and fucked all those boys.\"\n\n\"Or maybe the boys will come out here and find my dead body. A real Stand by Me or better yet, just like the story The Body.\"\n\nSue held her face in her hands and cried.\n\nShe finally got herself together and exited the car, grabbing her supplies and the backpack. She went into the shack and went through it. She found flour, sugar, quick rolled oats, salt and pepper and some herbs and spices, and an old can of ground coffee half full. There were tea bags and some metal cups and bowls. She grabbed it all and then found it wouldn't all fit in the backpack. This led to another crying session.\n\nShe recovered and looked around some more and found a hidden space under the floorboards. She pried it open and found camping supplies. A cheap sleeping bag, some campfire racks for cooking, a pot and a kettle, and a large backpack full of hunting clothes and a pair of steel toed working boots about two sized too big for her.\n\n\"Pretty awesome loot, Sue,\" she said.\n\n\"This is epic gear. All purple.\"\n\n\"Those boots are legendary level. Plus ten to safety and warmth.\"\n\n\"We just need a sword and bow.\"\n\n\"We could fucking go totally Legolas around this place.\"\n\n\"Aragorn. Ranger's rock.\"\n\n\"Elf dicks gotta be small. A Dunedain has got to have a monster dick in comparison.\"\n\n\"And you know dicks.\"\n\n\"Oh yes. Yes, we do.\"\n\n\"Never touched one though.\"\n\n\"No. But seen a lot!\"\n\n\"Internet porn doesn't make you an expert.\"\n\n\"I guess we will have to agree to disagree. I know everything about cocks.\"\n\n\"What's one taste like then?\"\n\nSue glared at no one.\n\nSue was fascinated by cocks. She loved them. Wanted one. Wanted to have one and jerk it off. Wanted to feel cum spew from it.\n\n\"Get it together, Sue.\"\n\nShe rose and spotted the small red plastic jerry can with a clear piece of tubing wrapped around the handle. She grabbed it and headed to the car. She put the tube in the gas tank and the other end into her mouth and sucked hard.\n\n\"And you think you can suck cock, sucking like that?\"\n\nShe kept sucking on it and then warm gasoline filled her mouth. She spat it out and then her nausea hit. She managed to thrust the tubing into the jerry can and then heaved hard. Her stomach clenched so hard it felt like it hit her spine. Little came up but the heaving wouldn't abate. Her head swam and pounded, and her vision dimmed dark. She reached out for anything to hold on to and found only empty air. She toppled over and lay still, unconscious.\n\nWhen she woke, she had no idea what time it was. The sun was much higher in the sky, and she judged it to be maybe close to noon. She rolled onto her back and gazed up at the clear blue sky. Only a few wisps of cloud could be seen through the canopy of coloured leaves and branches. She felt groggy and wanted to close her eyes again.\n\nShe thought of remaining at the shack for a few days to recover her strength. It wouldn't be so bad. No one would search here at first. I could risk a few days?\n\nShe shook off the idea. She had to walk away from here. Find the lake. She knew if they made it out here, they would search the lake but was certain they wouldn't find her cave. That was her special secret. Dave and she had found it.\n\nThinking of Dave, she worried for the first time that he would spill the secret and tell everyone. Fear hit her again and then she managed to shrug it off. Not my Dave. He would never do that. It's an easy secret to keep. Dave wouldn't tell.\n\nShe struggled to her feet and then recognised she needed food. She was so weak now.\n\nShe entered the shack and spent time making a small fire in the little stove. She put bottled water in the kettle and set it on top. The cave was over six miles away, and the hike would take her about four hours if she were in better shape. There was a high ridge line between here and the cave, but she knew a way up and over. Going around would add at least eight miles.\n\nShe watched the kettle and then snorted when she remembered her mother's words. \"A watched kettle never boils.\"\n\nShe grabbed the backpack and pulled out the eReader. It was an older model with a little keyboard at the bottom. She started it up and saw the full charge. She knew it had a Wi-Fi capability but out in the middle of nowhere she wasn't worried. Still, to be safe, she found the settings and turned it off. She also lowered the screen brightness. She checked out the library and found to her amazement that it contained over two hundred erotica and romance novels.\n\nThe nurse was reading one called \"Silver Bastard.\" She read the synopsis and snorted. It was pretty dirty.\n\n\"Great. I'm stuck out here with only erotica to keep me amused.\"\n\nShe shrugged and opened the eBook and started reading. The kettle startled her with the whistle. She put down the eReader and poured hot water into a metal bowl and her cup. Soon she was eating porridge and drinking coffee. Soon after the food hit her stomach, she felt much better and then had to empty her bowels and bladder.\n\nShe cleaned up and drank the remaining hot water in the kettle. She looked around the shack and knew she had everything she could find.\n\n\"This is like playing The Long Dark,\" she muttered. And then she grew worried because she had sucked at that game.\n\nShe considered wiping everything down to get rid of her fingerprints and then laughed. \"And then there's the huge pile of DNA I left outside in the woods...\"\n\nShe exited the shack and looked in the direction she needed to go. With luck she would be at the cave before it got dark. She wasn't worried about wildlife, too much. The biggest threat was mountain lions. She had never seen or heard one out here before, but that didn't mean they weren't out there. And bears. And coyotes.\n\n\"And I always had a hunting knife with me,\" she said. That gave her a thought and soon she had a long walking stick with a sharpened end. \"That will have to do.\"\n\nShe started her trek feeling confident for once. She was in her element. Her second home.\n\n\"Out here I have the advantage,\" she said.\n\n\"I should probably stop talking to myself.\"\n\n<p align=\"center\">* * *</p>\n\nTwo hard hours later Sue stopped at the base of the ridge. She was exhausted beyond belief. Her concussion, lack of food and sleep, and anxiety were taking its toll. Her legs were cramping badly, her head was at DefCon One. Once she had simply woken up lying on the forest floor uncertain how she had ended up there.\n\nShe didn't think she could make the cave that day.\n\n\"I should have stayed at the shack...\"\n\n\"Keep going, stupid.\"\n\n\"The ridge is going to be hard. There's climbing. Steep bits.\"\n\n\"And you know the easiest way through.\"\n\n\"It's been so long since I've been here. I don't remember the path.\"\n\n\"You marked the path.\"\n\n\"Shut up...\"\n\n\"You shut up...\"\n\n\"No, you shut up...\"\n\nSue stopped talking. What the fuck is wrong with me? I'm going crazy! I can feel it!\n\nShe looked up the slope and groaned. She sat on a fallen log and pulled out a granola bar from her stash. She had ten of them remaining. The gas station store had little of value and granola was the best they had.\n\nAs she chewed it, she realised that the police would find out what she had purchased there. And that I bought fishing gear. Dammit, that will reduce their search. Maybe the lake is a bad idea.\n\nStop it, stop it, stop it. Stop over thinking things!\n\n\"I have to! I need to stay safe. I need to think of everything. Stay ahead of them!\"\n\n\"You are. There are thousands of lakes and rivers in the state. They can try to search them all, but will they search this one? No one really knows about it. You're okay.\"",
        "\"What about Dave? He knows.\"\n\n\"Dave loves you. He won't tell.\"\n\nThat shut Sue up. Did he love me? How would I know if he did?\n\nSue waited for an answer and when it didn't come, she rose and started climbing the ridge. She spotted her first marker right away. Three rocks she had placed together years ago. The top rock pointing the direction to go. Easy to overlook and hard to recognise as a marker. They were now mostly covered by moss and leaves. But she recognised them and for once she smiled.\n\nTwo hours later she crested the ridge. Her legs trembled and so she sat down on the rise. From up here she could see most of the small valley. Everywhere she looked were trees with their fall colours. She was truly alone in the middle of nowhere, but she suddenly felt safe, and the feeling wrapped around her like a security blanket. She knew where the lake was, and she could barely make out the darker spot of the forest where it lay fed by numerous creeks.\n\nShe was thankful the air was warm for October. She knew it would soon get colder and if she stayed into the new year, it would stay below freezing. Snows would come and winter storms. The hunting clothes would become her lifeline. And the cave. Her mind whirled with possibilities and eventually she pushed them aside.\n\n\"One day at a time for now. At least the hike to the cave is all downhill from here.\"\n\nShe drank more water and got up and started down the ridge.\n\n<p align=\"center\">* * *</p>\n\nShe lay shuddering on the ground. Mentally she checked her limbs, and nothing seemed broken. The wind had been knocked out of her but that was it. Hesitantly she rolled over and nothing seemed to hurt. Her backpack was gone. She knew that. She pushed off the ground and lifted her torso to look around. The backpack wasn't beside her.\n\nThen she looked up at the small bluff. She had tripped coming down the ridge, rolled badly, and then cartwheeled off that bluff. She felt she had fallen forever before hitting the ground in full surprise of the impact.\n\nShe was getting weaker and making mistakes. She kept closing her eyes and then having to pry them open with a will power that was almost gone. That was how she tripped. A lot of things will kill you out in the woods, fatigue being one of them.\n\nI'm so close. Maybe a half mile?\n\nThe sky was getting darker which meant it was close to six.\n\nShe found her backpack and walking stick lying farther down and kept going, watching her feet and path carefully. She had been lucky. If she had broken anything she would have died in that spot. She shuddered and pushed herself.\n\nThe cave thankfully was on this side of the lake. There was a rock outcrop that came out of the water and merged into the surrounding forest, moss, ferns, and bushes. It had been Dave who had found the cave entrance quite by accident. A ground squirrel had snatched up a bunch of his trail mix and run off. Dave, pretending to be enraged, chased the poor thing and watched it suddenly disappear on the side of that outcrop. He investigated and found a two foot by three-foot opening.\n\nHe had called Sue over and she had crawled in right away. She had screamed when the ground squirrel bolted past her and running over the top of her body. Dave would pester her for months about that scream calling it the new Wilhelm scream.\n\nThe cave was deep and measured about eight by twelve feet. It was dry, and it had a natural chimney at the top allowing small fires inside if you lit them at the back where the cave slopped upward.\n\nThey had cleaned it out and dragged tree boughs in to provide a carpet of sorts. They had spent a week out here, fishing, and telling stories to one another, and laughing. It had been one of Sue's most cherished memories.\n\nAnd waking up next to him in the middle of the night she had found he had pressed himself up against her back while she lay on her side and had cupped one of her breasts. She could feel his erection and lay there listening to the deep breathing of his sleep. She always wondered if she should have initiated something then. But she had chickened out and instead had held his hand tighter to her breast. He was the first and only boy to do that. She was glad it had been him.\n\nAnd now Sue stood before the outcrop. She sank to her knees and hung her head before slipping the heavy backpack off her shoulders. She only wanted to sleep. She remained like that breathing heavy. She had never been so physically exhausted before. She heard a fish jump in the lake and splash. She knew she should put out a line. She would need the protein. But the hole in the rock beckoned. She crawled to the opening and pushed her backpack ahead of her.\n\nShe briefly considered there being wildlife in the cave, but at this point she no longer cared. She pushed in through the two feet of opening and then felt the dry needle remains of the pine boughs. She had enough will power to position the backpack at the hole to block any animals and then collapsed on her side. She was done and released all her remaining will. She was asleep before she drew another breath.\n\n<p align=\"center\">* * *</p>\n\nTwo lonely weeks had passed at the lake, which Dave and she had named Forbidden Lake after the pool in Lord of the Rings. Sue had cleaned out the cave and replaced the pine boughs. She had a supply of wood and kindling inside the cave to keep dry against the elements. She had no axe, so she roamed the forest looking for fallen limbs. She fished in the early morning and early evening and was adept at pulling out walleyes and perch and the occasional largemouth or smallmouth bass.\n\nAt first, she tried to keep the area clear of any signs she was here, but knew anyone with half a brain could see the signs. She was fed, had plenty of water, and more time than sense to examine what had happened to her. She was even drying fish over the small fire in the cave at night while she slept. If she was going to survive the winter, she would need food.\n\nHer headache was gone, but she still felt lightheaded if she sat or stood up too quickly.\n\nShe had set snares along some rabbit trails but had yet to snare one. The fishing line was too light or something. She had her routine and path. She searched for mushrooms and berries and gathered much. She dried as much as she could over a low fire and stockpiled it in the dry cave, wrapped in leaves. She was worried about spoiling the food and becoming ill. She had seen the movie Castaway and was worried she wouldn't survive like Tom Hanks did.\n\nShe worried about her dad. The police chief said he would take him down, and she fervently hoped he meant losing his job and not his life. She fantasised about killing the chief and his son. She came up with ingenious methods. Painful methods. She imagined scenes of them falling in front of true authorities and confessing to everything and Sue being held up high and cheered as the heroine.\n\nBut mostly she did nothing but stare at the lake. She allowed herself an hour a day to read from the eReader. At this rate, and with the external battery pack, the reader would die around Christmas. A Christmas alone and without family.\n\nSue had stopped crying a long time ago. She felt empty instead. Devoid of emotions. Even the dirty erotica she read did little to energise her. After a lifetime of constant stimulus from society she felt so helplessly alone and lonely.\n\nBut day-after-day, she developed little routines. Chores to keep her mind busy, and the days started to move along faster and faster. Before long a month had passed, and the weather was starting to become colder at night.\n\nYesterday a helicopter flew overhead, and Sue had hidden in the cave for the rest of the day, her head near the cave mouth, listening. Waiting. Trembling. She hadn't seen the helicopter due to the trees. She had no idea if it was the police or the FBI or a news agency. It was still very strange to see a helicopter out here. There was nothing for miles around.\n\nAnother week passed and Sue heard an unnatural noise. She was away from the cave and heard someone shout something. She dropped to the ground and stilled her breathing, listening. She heard the shout again but couldn't determine how many people it was and who it was. She assumed the worst.\n\nIt grew quiet and Sue grew impatient. After so many weeks out here she was desperate for anything to happen. Even if it meant being caught. She rose to a crouch and snuck through the woods she knew so well now. She knew where she could observe the cave without being seen.\n\nIt took her a little while but eventually she peered out across the lake toward the cave. There was a figure there. A man. He was looking around and she could faintly hear a voice but not what was being said. She watched. The man went straight to the cave mouth and disappeared inside.\n\n\"Fuck!\" she said. After all this time the first person to come out here discovered her secret place. She started to wonder how her luck was so poor. She kept watching, waiting for someone else to appear. After an hour she sat back on her heels.\n\n\"What the fuck is going on? Is it just one dude?\"\n\n\"Hard to say really. You're gonna have to get closer. Maybe it's some hunter or something.\"\n\n\"And if it is?\"\n\n\"Maybe you'll need to kill him to silence him. No way he can leave here if he knows you're here.\"\n\n\"I could just wait till he leaves, take my stuff, and fuck off again somewhere else.\"\n\n\"You could but think of all the food you've preserved. Snow is on the way. It won't be long.\"\n\n\"Fuck!\"\n\nSue no longer truly noticed she spoke to herself all the time.\n\nSue knew she had to get closer and see who it was. She had to know. There weren't any other options.\n\nOver the next hour she crept closer. Fear of capture will let you become the most patient person in the world. In time, she was a mere hundred feet from the cave entrance, hidden behind thick bushes at the lake edge. A little smoke had wafted out the cave opening at the top about thirty minutes ago and that annoyed her. Someone was taking luxury with her belongings.\n\nShe had now begun to suspect the person was truly alone and likely not the police. Then she remembered satellite phones and thought for sure the guy had called in help. So, she waited longer and then realised the light would soon fade and she would be in darkness.\n\nI can wait. Don't rush this. Watch everything.\n\nShe saw movement and then watched the man wriggle out of the cave opening. It was too dark to make out much, but he went to the edge of the lake and put his hands to his mouth.\n\n\"SUE! SUE! IT'S ME, DAVE! COME OUT!\"\n\nSue's heart beat frantically and painfully in her chest. She wanted to run out and tackle Dave to the ground and kiss him all over. But after being cautious for so long she held herself back. It could be a trap using Dave to lure me out. So, she waited. Now that she knew it was Dave, she could tell it was him by his movements. She watched him.\n\n\"IT'S OKAY! IT'S SAFE! COME OUT! I KNOW YOU'RE HERE!\"\n\nAs she watched Dave fell to his knees and held his head in his hands. She almost went to him then, but she stayed where she was. She had to be sure.\n\nDave rose and went back into the cave. Sue watched for hours, shivering against the cold night air, thankful she had grabbed the hunting jacket earlier that day. In time, lying prone for so long, she fell asleep.\n\nBirds woke her in the morning. She cracked her eyelids and peered out. Smoke no longer rose from her cave. The lake was still. She knew Dave and trusted him. What she didn't trust was what if Dave was being coerced. Forced into something. Worse, maybe he led people here.\n\nBut why wouldn't he just tell them where the lake and cave were and leave it to them?\n\nShe didn't have an answer to that. That caused her to pause, and she rose painfully on cracking joints. She crept along the side of the lake until she was only twenty feet from the cave opening.\n\n\"Dave?\" she called out, her voice breaking. \"Dave? It's me. Come out.\"\n\nAfter no reply she called out louder. \"Dave! Come out! It's me!\"\n\nAfter a long moment a head appeared in the opening and looked around. \"Sue? Where are you?\"\n\n\"Over here,\" she said and stood up and looked across the distance at him. \"What are you doing here?\"\n\n\"Oh my God! Sue!\" he exclaimed and rapidly crawled out of the cave mouth.\n\nSue panicked a little. \"Stay right there! Don't move! What are you doing here, Dave? Who knows you're here?\"\n\nDave stood at looked over at her. \"It's just me! No one knows!\"\n\n\"Did you tell anyone about this place?\"\n\n\"No! Never!\"\n\n\"No one followed you?\"\n\n\"No! No one is looking for you now. Not really. They called off the manhunt a couple of weeks ago. You could be anywhere they said. You're safe.\"\n\n\"Manhunt?\"\n\n\"Yeah, you were all over the news. FBI most wanted. All the news station covered the story. It brought a lot of heat on the police chief. There's a viral video of him answering questions to a news guy. Trying to explain away the rape accusation against his son. It's raised a whole debate in the country about what a woman should tolerate before taking action. Sue, most people side with you. No one believes the suicide story. The medical report was leaked and showed the clear mark of a police baton on your head. The FBI is investigating this hard.\"\n\nSue's head was swimming. \"And dad? How is he?\"\n\nDave looked down for a moment. \"Bad. He was fired. He's fighting it. Groundless dismissal and all that. Media barely covered it. The community is helping him. He's a good man. Those who know him are supporting him.\"\n\nSue sank to the ground and despite promising herself to never cry again she did. Dave walked closer to her and then stopped.\n\n\"Are you okay, Sue? I haven't stopped worrying about you. I would have come sooner, but they were watching me, ya know? I would see cars and vans parked outside the house. Eventually they stopped. And I waited. I knew you were here! I just knew it! It's perfect here.\"\n\nSue looked up. \"Are you sure you weren't followed?\"\n\n\"Yeah. I'm sure. I hiked in from the hunter's shack. Saw the car and knew I was on the right track. Sue? Sue, I... I really missed you.\"\n\nSue stood up and walked toward Dave. \"I missed you, too, ya big doofus.\"\n\nWhen Sue got closer Dave rushed her and wrapped her up in his arms. She froze in shock and then melted into his arm and cried into his shoulder. Dave surprised her then by pulling back and grabbing her face and then kissing her hard on the mouth. She didn't know what to do and stood there and then she felt her desire rise and she kissed him back.\n\nThey kissed for a long time and being their first kiss, it was both awkward and wonderful. Dave broke the kiss and looked into her eyes. \"You really smell bad; did you know that?\"\n\nSue snorted. Then laughed a little. And then held on to Dave as her laughter bubbled up and out. She hadn't laughed in weeks, and she felt the tension rush out of her.\n\n\"Okay, hold on to that thought. One second.\" Sue backed away and then tore off her clothes and ran at the lake and leaped in. The water was warmer than the air and she sank into the depths. She came to the surface blowing water and turned to see Dave staring at her. \"What are you staring at?\"\n\n\"You.\"\n\nSue laughed and went to the edge of the lake and scooped up sand and rubbed it on her exposed flesh. \"See anything you like?\"\n\n\"You.\"\n\n\"Gonna do something about it?\"\n\n\"Yes.\"\n\n\"Anytime soon?\"\n\nDave started to undress. Sue watched him and rinsed the sand off her. The night air was making her skin rise in goosebumps and she shivered. She watched him remove his briefs and stand there in the last rays of light from the sun. Sue was an expert on cocks and although Dave's was average to her, it was the most perfect cock she had ever seen.\n\nDave walked right toward her and embraced her and pulled her in tight against him. He was already hard, and it pressed against her stomach. She reached down and gripped his ass and pulled him in harder.\n\n\"I love you, Sue.\"\n\n\"I know,\" she replied and kissed him harder. \"Come into my house. Let's warm up by the fire.\"\n\nDave nodded and gathering up their clothes they scooted into the cave and sat in front of each other. Dave's eyes were all over her. He looked at her breasts, her hard nipples, the thick growth of pubic hair at her groin, and her longer hair.\n\n\"You're beautiful, Sue. So beautiful.\"\n\nSue was examining Dave with equal interest. The thin, shy nerd had matured and thickened a little around the shoulders. He wasn't super fit, but he didn't have any fat either. His cock pointed straight up, and Sue could see how hard it was. She had seen his cock before and thought it lovely. But now, engorged for her, it looked especially wonderful. It was smooth all over with a sculpted large head. His pubic hair was trimmed, and his cock shaft rose dramatically from him.\n\nAfter weeks of reading erotica by the lake, Sue was ready for anything, and she had read many interesting things to do in those books. But she wanted two things, one to feel Dave pressed up against her again, and two, that cock filling her pussy. Except she wasn't on birth control and no way was she letting that inside her until she was.\n\nDave then surprised her. \"Can I... can I lick you?\" he asked nervously.\n\nSue's mouth dropped open. \"What?\"\n\n\"I want to taste you.\"\n\n\"Um, okay.\"\n\nThey remained sitting staring at each other, neither one having the faintest clue on how to start.\n\n\"Should I just lie back, or...?\"\n\n\"I guess. Maybe we should kiss more? Lie down?\"\n\nSue smiled and told Dave to help unzip her sleeping bag and lie it flat. They busied themselves, on all fours, moving about, when Dave found Sue's ass right by his face. He couldn't help himself. His face moved in, and he licked her crotch. Not knowing what he was doing he licked her from the middle of her pussy and up over her asshole to her tail bone.\n\nSue shuddered at the pleasure and froze. \"Do that again...\" she pleaded, embarrassed to hear the desire in her voice.\n\nDave repeated it and this time swirled his tongue a little. Sue felt her pussy dampen and a strange feeling crept into her stomach that she liked.\n\n\"Oh God, again! Keep doing that!\"\n\nDave kept at it, licking, and licking. It was enough pleasure for Sue to keep her in place, afraid to move and break the spell. Soon she wanted his cock in her mouth. She had never done that, but she remembered her regret weeks ago for not having done it. This time she would make sure to do it.\n\n\"Lie underneath me, Dave. Hurry!\"\n\nDave scooted down on the bedroll on his back under Sue. He looked up at her pussy, covered in hair, but with her lips full and opening. He could see the slit of her pussy and knew what he was supposed to do but had no experience. He lifted his head and licked Sue from her mons to her vagina, his tongue roughly crossing over her clitoris. Sue's hips bucked, and she grabbed Dave's cock hard at the base.\n\nDave grunted at the pressure. Sue had a strong grip. Too strong. \"Gentler! Hold it gentler!\"\n\nSue had her head back as Dave licked her pussy from clit to vagina again. She heard him and loosened her grip. She stared down at the cock jutting hard toward her face. She could smell it and it smelt wonderful to her. The little slit at the top was wet, and she licked it. The liquid stuck to her tongue, and she tasted it. She didn't taste much and so she put the large head into her mouth. Her eyes bulged at the large cock in her mouth. She had never put anything large like that in her mouth intentionally. Not even a corn dog.\n\nHer mouth closed around it and Dave squealed. \"No teeth! No teeth!\"\n\nSue released his cock and drool poured from her mouth over the cock. She moved her hand up to wipe the spit, and it made her hand slick on the shaft. \"Sorry, Dave!\"",
        "Dave moaned and his hips bucked. His mouth dove on her pussy and lapped at her sending pleasure through her. Whether by accident or not, his tongue was mostly landing on her clit, and it was sending her to heaven. She continued to jerk the cock in her hand and then tried putting it back in her mouth.\n\nHer orgasm hit without warning. Dave had flicked her clit with a hard tongue and then plunged it into her vagina, digging deep with his hunger. It set her off and her mouth on his cock set him off and suddenly his cock spasmed hard in her hand. She could feel his sperm jetting up through his shaft with her fingers and then it was exploding into her mouth. She spat the cock out with the cum and coughed and rode the orgasm still rippling through her. It was a confusing mix of pleasure, discomfort, flying cum, choking, and trying to hold on to a cock just the right way.\n\nTo Sue it was wonderful.\n\nTo Dave it was wonderful.\n\n\"Jesus,\" panted Sue. \"Let's do that again!\"\n\nHours later they held each other and whispered to one another.\n\n\"That was amazing Dave. Why didn't we do that before? All this time we could have been having fun.\"\n\n\"I dunno. Seemed weird? But after you ran off it was all I could think of. Missed opportunities.\"\n\n\"God, me too! I thought about it all the time up here. I missed you, Dave.\"\n\n\"I know.\"\n\n\"Ass.\"\n\nDave chuckled, and they held each other, Dave stroking her back as she lay on him.\n\n\"I do think,\" added Sue. \"That it sucks being a guy. I know I read about recovery time and shit but man it sucks that you can't just keep coming and coming like me. I would hate to be a man.\"\n\n\"I would hate for you to be a man, too. Anyway, there's a lot we can do while I'm recovering. Licking. Eating. Kissing.\"\n\n\"Feel me up?\"\n\nDave smiled and slipped his hand down over Sue's gorgeous ass. His fingers traced down the crack of her bum and then over her rosebud.\n\n\"Oh, touch that again!\"\n\nDave touched her asshole. \"Here?\"\n\n\"Yeah, I read about that. It feels good.\"\n\nDave played with her asshole and then reached farther down and circled her vaginal opening with his middle finger.\n\n\"Oh, better! Keep doing that.\"\n\nDave played with her pussy for a bit and then she shuddered on top of him. \"Was that an orgasm?\" he asked.\n\n\"You couldn't tell?\" she laughed.\n\n\"Um, yeah?\"\n\n\"Liar. Yes, that was an orgasm. A little one. Not like that first one.\"\n\n\"I guess we have a lot to learn, huh?\"\n\n\"Yeah. I'm willing, are you?\"\n\n\"Sue...\" his voice broke, and he started again. Sue could feel him swallowing. \"Sue, I really love you, ya know? I have for years. Years. I'm so happy right now. I...\" and to Sue's surprise, Dave started to cry.\n\nShe had never seen him cry. Not in all her years. He was her model on how to be a better tomboy. How to act. What to do. She lifted her face to look at him, but he turned his face away ashamed.\n\n\"Dave, look at me, please?\"\n\nHe shook his head.\n\n\"Dave! Look at me!\"\n\nDave turned his head and Sue looked at him. His chin was quivering. Snot ran from his nose. His eyes were red. He looked so vulnerable. And then Sue knew he would only look this way for her, and she started crying too.\n\n\"Fuck! I love you, you big baby!\" she wailed.\n\nThey kissed around blubbering and snot. Which turned to laughter, more kissing, more hands and fingers and mouths, tasting, learning, and exploring the oddities of the other sex. It ended with sleep, wrapped in each other's arm, basking in the warm glow from the fire. They slept until morning.\n\n\"SUSAN CHANDLER, THIS IS THE FBI, WE HAVE YOU SURROUNDED. WE HAVE A WARRANT FOR YOUR ARREST. COME OUT WITH YOUR HANDS UP AND LIE ON THE GROUND!\"\n\nChapter Five--Jail\n\nSue looked around her jail cell. This one was much nicer and much warmer than the county jail. The past four days were a blur. From being arrested again, to a helicopter ride, to processing with a media circus surrounding her, to finally sitting quietly in a jail cell.\n\nI've come full circle, she realised. I accomplished nothing.\n\nShe laid down on the thin mattress and closed her eyes and sleep took her. Two female FBI agents watching her on the camera looked at one another. \"They're always guilty when they fall asleep so quickly,\" said one to the other.\n\nThe other frowned. \"She was up all night in jail the night that police chief arrested her. Didn't sleep a wink.\"\n\n\"Yeah, well. Look at her now.\"\n\nThe next day, Sue was interrogated by several FBI agents all asking her over and over again about the events \"that fateful day\" as they kept putting it. Sue had enough. The last two were female officers, and they had the combined compassion of a snowflake. Sue rattled the handcuffs and chains holding her hands in place on the table.\n\n\"If you call it a fateful day one more fucking time, I will kick you in the cunts! HE TRIED TO RAPE ME. I fucking defended myself and kicked him in the nuts, exactly how a woman is SUPPOSED TO DO IT IN SELF DEFENCE!\"\n\n\"The victim says you just approached him, offended him, and then kicked him without cause. You ruptured both testicles, effectively castrating him. Then you left him there while he required emergency medical care.\"\n\n\"Those are lies! He threatened to rape me. I warned him and then he grabbed me! So, I kicked him! I didn't know how bad it was. Honestly! But there was a camera in the room. The school has them everywhere. Where is the video? It will show what happened,\" she said exhausted.\n\nThe FBI shifted in their seats. \"It wasn't functioning.\"\n\n\"Bullshit. I saw the red light. It was working. The chief... The chief, he did something to it. Covered it up. Ask his son. Have you looked into it?\"\n\n\"His son is in an institution. The loss of his manhood caused a psychotic break.\"\n\n\"He was already psychotic. He was a rapist.\"\n\n\"So, you keep saying. Miss, all evidence points to you as the perpetrator.\"\n\n\"Enough. I want a lawyer. I'm done talking to assholes like you. You call yourselves women? He tried to rape me, I protected myself, and it became a national manhunt. Fuck you. Fuck both of you. One day I am getting out of this. I will personally hunt you down and make you pay for this. Get out. You make me sick.\"\n\n\"And now you're threatening law enforcement. We'll add this to the charges.\"\n\n\"I DON'T FUCKING CARE! FUCK YOU! FUCK YOU! FUCK YOU!\"\n\nMen came rushing in and Sue was sedated again.\n\nTwo days later, she was brought into a visitation room and handcuffed to the table. The cuffs and chains around her ankles dragged on the floor and she was tired of the noise. She sat with her head bowed and her mind was blank.\n\nLife in prison was not pleasant except she was surprised to find a large amount of sympathy from the other female inmates. They were tough women and broken women. All had tales of abuse by partners and the system. Sue felt like she had entered the Twilight Zone where women were chattel in a male dominated world.\n\nShe had come to terms with what she had done and knew she would do it again. But it was her word against everyone else and no one believed her. She was seen as too aggressive and as a tomboy she was seen as a dyke and mentally unhinged. Without video to prove her side of the story, no one was interested in what she said.\n\nShe knew the fight was useless. She would be convicted and jailed for years. Her life was crushed. Any hope of being a policewoman dashed. Her life was over as she knew it. She longed to return to the cave and live out her days.\n\nIt turned out Dave was still being monitored by the FBI. They had followed him out to the lake and then swept in when they were certain it was safe to do so. Sue didn't blame Dave. He had thought it safe. Now he was being charged as an accomplice. That hurt her more than anything.\n\nInside she was numb. Devoid of emotion. Jail was hardening her already. She was surrounded by despair. The women who surrounded her were broken and trapped. Few of them were hardcore criminals. Most were the result of domestic abuse. Women who fought back and were punished for it.\n\nShe heard the door to the visitation room open and looked up expecting to see her idiot court appointed male lawyer. Instead, she saw her mom and dad escorted in. She hadn't seen them since all this had started. She tried to rise, forgetting her restraints. The guard with her parents immediately reacted and stepped toward her putting himself between her and her parents.\n\n\"SIT DOWN! REMAIN SEATED. DO NOT MOVE!\" he barked and brandished his baton.\n\nSue saw her mother cover her mouth, tears streaming down her face. Her dad had a grim look on his face, and she saw him look at the guard in disgust.\n\n\"SIT DOWN!\" barked the guard and took another step toward her in front of her parents. The guard was young, and Sue could see he was nervous and excited at the same time. He wanted to use his baton on her. She saw the same look in his eyes that she had seen in the police chief's son's eyes.\n\nSue sat back down, although all she had managed to do was lift her ass about ten inches off the metal chair bolted to the floor. \"I'm in fucking restraints, you idiot!\" she replied.\n\nThe guard watched her and said nothing. Her dad started to speak, and the guard barked at him without looking at him. \"Shut your mouth!\"\n\nMom was crying now, her sobs loud in the sudden silence.\n\n\"The prisoner will remain seated at all times! This visitation is a privilege and not a right. If the prisoner violates the rules, she will be forcibly removed. Am I clear?\"\n\n\"Yes.\"\n\n\"I SAID, AM I CLEAR?\"\n\n\"YES! Jesus, fuck!\"\n\nThe guard watched her for a moment and then stepped back and put his back to the door her parents had come through. Sue looked up at her parents, tears streaming down her face.\n\n\"Dad?\"\n\nHer dad stepped up and took one of the chairs across the table from her. Her mom took the one beside him. Her mom went to reach out to her, remembered the rules and pulled it back. Her dad tried to smile at her. \"Hey Sue. You doing okay?\"\n\nSue could hear the strain in his voice. He didn't look well. He was pale, he hadn't shaved properly, he had lost weight. Gone was the strong man she always admired. She had done that; she knew she had.\n\n\"Dad! I'm so sorry! This is all my fault!\"\n\n\"No, Sue. It's not. You did what you had to do. Just like I taught you. This is not your fault, baby.\"\n\n\"I didn't know what else to do! He threatened me. Told me he was going to fuck me! Rape me! I warned him and when he didn't stop, I kicked him! Then I ran. I'm so sorry!\"\n\n\"I know hon. I know. None of this makes sense. That police chief...\"\n\n\"Dad, he's horrible! He hit me with his baton! Really bad! He said he was going to take you down!\"\n\n\"He did. I was kicked off the force. Dishonourable discharge. They said they found evidence of me taking bribes and covering up crimes. All bullshit, but I had no evidence to prove my innocence. It was all over the news.\" Sue saw the guard smirk.\n\n\"Dad! Oh my God!\"\n\n\"Shush. Don't worry about me or us. Your mom is waitressing, I fix cars for people, and we are keeping up on the bills. I'm sorry we couldn't get you a lawyer. We have no money. The banks won't help.\"\n\nSue broke down and sobbed.\n\n\"Sue,\" said her mother quietly. Sue looked up at her. \"You did nothing wrong, baby. We'll fight this for however long it takes.\"\n\n\"I can't believe any of this!\" sobbed Sue. She couldn't help crying seeing her parents. She had always looked to them to protect her and keep her safe. She realised they couldn't this time, and she could see they knew it, too. That made her cry more than anything else. \"Mom! I did what I was supposed to do! I defended myself! What else was I supposed to do? Let him rape me? Let him start and then hit him? This is so fucked up!\"\n\n\"Language!\" said her mother, looking pissed.\n\n\"Language? Really?\"\n\n\"YES! Watch your language, young lady! In all the press you come across as a wild thing. Swearing and abusive! People decide your guilt or innocence by how you act! Act like a crazy foul woman and they will see you as a crazy foul woman! Act more dignified. Act more like the victim than the abuser! The media and the people believe you to be guilty. Every time you open your mouth you prove them right! Grow up and start acting like a woman and not a deranged mental patient!\"\n\nSue gasped and stared at her mother. Her mother had never spoken to her like that. \"That's not fair!\"\n\n\"Fair? Fair? Are you kidding me? You crushed a man's testicles, robbed him of his manhood, and whether he deserved it or not, you did it and every time you show zero remorse for that action, people hate you a little more. Stop it. You are making this so much worse for yourself! And running away? That proved to everyone that you are guilty, whether you are or not!\"\n\nSue rocked back, with nothing to say.\n\n\"Quiet now, are you? Good. You need to start acting responsibly and less like a drugged up insane idiot. Clean yourself up. Wear dresses. Behave like a lady.\"\n\n\"Wear dresses?\"\n\n\"YES!\" screamed her mother, and she slapped the table. The guard jerked where he stood and watched her mother closely. Dad stared at her in shock. \"GOD DAMMIT, SUE! YOU are making this worse. Over and over again! How you act in court. Everything that comes out of your fucking mouth! It's all crass and making you look worse and worse! I'm sick of it!\"\n\nSue was lost. She sat and cried and cried and her parents merely watched her saying nothing.\n\n\"Visitation is over in two minutes,\" said the guard.\n\n\"Sue,\" said her mother quietly, enough that Sue looked up. She could see the sorrow in her mom's face. \"I know what you did was warranted. I trust you. We raised you to defend yourself and you did. I'm proud of you for that. But everything since then? It has to stop. Own what you did, but in terms of defending yourself.\"\n\n\"Mom, they want me to take a plea bargain. Admit to their lies. I'm looking at ten years minimum!\"\n\n\"And in ten years you will be free. Right now, you are looking at twenty to twenty-five.\"\n\nSue nodded feeling the weight of those years on her life. Her dad was quiet, but he was watching her.\n\n\"Dad? What happened to the recordings at college? That camera was on! I saw the red light. I even spoke to it after... after. How could that disappear? Did the chief do it?\"\n\nHer dad nodded and cleared his throat. \"Yes, I'm pretty sure. He was good. All the cameras in that section of the college had malfunctioned. The tapes were all blank.\"\n\n\"Th-that's impossible!\"\n\n\"I know, hon. I looked into as best I could, but the chief was already after me. Soon all I could do was try to defend myself. I called in favours. Everything I could. He's too well connected. All the way to the governor. He's been moved from station to station during his career. Always with a controversy behind him. We all knew when he was sent to our station that it would be bad. And his son has been accused of sexual misconduct on several occasions. From high school through college. Everything always disappears or the women pull their accusations. I tried to find some of them, but the cases are all sealed. And now, since I'm no longer a cop, I can't do anything. I'm sorry, hon.\" Dad hung his head.\n\n\"Visitation is over. Rise and depart,\" intoned the guard and stepped clear of the door and opened it.\n\nHer mom pleaded with the guard. \"Just one minute more! Please! This is the first time we've seen her!\"\n\n\"Visitation is over, please depart,\" said the guard and unbelievably pulled his baton free.\n\nHer dad stood and looked at the guard. \"Did you just pull your baton, son?\"\n\nThe guard glared at dad.\n\nDad shook his head and helped mom to her feet. They turned and looked long and hard at me.\n\n\"Sue,\" said her mom. \"I've sent you dresses to wear. Wear them. Talk more demurely. Act like a weak woman. Don't challenge them. Maintain your innocence but stop giving them ammunition, okay?\"\n\nSue nodded. \"I love you mom and dad.\"\n\n\"We love you, too, baby. Stay safe. We'll get through this, okay?\"\n\nSue nodded and watched them leave.\n\nThree months passed. Sue's court-appointed lawyer seemed not too interested in her story and sought plea bargains despite Sue's insistence it was all self-defence. She asked for a new lawyer but was denied. She asked to see her parents and family, but she was denied further visitors. Bail was denied since she was clearly a flight risk. The state seemed content to isolate her and forget about her, assuming the case was open and shut.\n\nSue was surprised when she was brought into the visitation room once more. She hoped to see her parents or maybe Dave. She had relived that wonderful night with him in the cave over and over in her mind. Often, she went further in her dreams. Riding him. Taking him inside her. But all they had done was a little heavy petting. It still got her wet from time to time. Then she realised that by the time she was released from this nightmare they would both be old. He would have moved on and married with children. Despair welled around her, and she sunk lower and lower.\n\nShe had started to dress up more like a woman since her mom had sent her dresses to wear. She applied lipstick. She wore panties and a bra. She spoke softly and never raised her voice. It was a new look and feel for her but somehow felt false to her. Her lawyer was happy about the change and said public opinion was shifting a little.\n\nShe looked up from the table when the door opened. A guard walked in followed by a woman dressed in a business suit. She carried a briefcase and looked professional at something. The woman looked hard at Sue and then turned to the guard.\n\n\"Leave,\" she ordered. Her voice was crisp and loud and brooked no arguments.\n\nThe guard blinked and left the room, closing the door behind him.\n\nThe woman sat across from Sue and placed her briefcase on the table, well clear of Sue's hands.\n\n\"Susan Chandler? Hello. I'm Marcia Tennison. I'm your new lawyer if you'll accept me. I work for an international agency for women's rights. We are non-profit and have many lawyers, like me, that look into cases that broach gender equality and suppress women's rights. I've spoken to your lawyer, and he seems happy to hand over your case to me. I will need your agreement. All that we say is protected by lawyer-client confidentiality. You can say anything to me, and it will remain confidential. This is all pro bono. Free to you.\"\n\nSue didn't know what to say. A bright spark of hope ignited inside her and she threw doubt and despair at the spark to silence it. Hope is all well to do, but when you've been beaten down so many times, hope becomes a false promise that only leads to deeper despair.\n\nMarcia opened her briefcase and pulled out a manilla folder. It was about two inches thick. She opened it and pulled out several forms. Some Sue recognised. They were legal forms required by law to hire and retain legal counsel.\n\nMarcia pushed the retainer agreement across the table, expertly placing it where Sue could still sign it with her hands manacled to the table. Marcia placed a soft-tipped Sharpie beside it. Sue glanced down at the paper and saw her name and the lawyer's and a bunch of other stuff. She picked up the Sharpie and signed her name.\n\nMarcia pulled back the paper and Sharpie and pulling a fountain pen from an inside pocket of her blazer, signed the form and then smiled at Sue.\n\n\"Terrific. Okay tell me everything. We have all the time we need. No one will bother us. Cry if you want to, but honestly, it just slows everything down. Speak clearly. Mention every little detail you can remember no matter how small or insignificant it may seem to you. I know your case. I've followed it and so has the international agency. We are interested. The United States has a badly flawed legal system fuelled by right-wing media bias. Your case interests us because it is so blatantly wrongly portrayed. Of course, some states are worse than others. Sadly, your state is one of the worst. Tell me your story.\"",
        "Sue nodded and started from the beginning. Marcia only interrupted a few times to clarify some detail or another. She nodded along and took copious number of notes on a yellow legal pad. She wrote in shorthand, something Sue had never seen before. After an hour, Sue rambled to a stop. Out of things to say.\n\nMarcia sat back and stretched her back. \"Okay. This is interesting. I want to go back to the lab. You said you were working alone, past the normal lab period. The TA was in the room alone with you. He approached you and everything started. You checked the camera in the room, why?\"\n\n\"Dad always said to check your surroundings. Look for evidence or items that would help you. I knew I was alone. I could see this guy's attitude and I looked for the camera.\"\n\n\"And you saw a flashing LED light?\"\n\nSue nodded. \"For sure. After I kicked him, I even looked at it and spoke.\"\n\n\"What did you say? Say it again for me and try to remember exactly what you said to the camera...\"\n\nSue thought hard. \"I said 'I warned him'.\"\n\n\"Anything else?\"\n\n\"I might have said 'he didn't listen'.\"\n\n\"And when he approached you from behind and startled you. What did he say to you that made you think he was going to rape you? Be specific.\"\n\nSue thought again. She had gone through this so many times the memories were always fresh in her mind. But the exact words he said were a blur. At the time it had been so clear, now she struggled to remember the exact words. \"Um, he said he wanted to fuck me. No, sorry. He said he was going to fuck me.\" She replayed the scene in her head. \"And he would take all my holes...\"\n\n\"And you said no. Clearly said no.\"\n\nSue laughed a little. \"No, I said I wouldn't let him touch me. I forget the exact wording, but I was clear to him I would not allow him to touch me.\"\n\n\"And he heard you?\"\n\nSue blinked at her and felt a stirring of anger. \"Yes! Of course he did!\"\n\n\"Don't get angry at me, little girl. If this pisses you off, imagine how you'll be in front of a jury?\"\n\nSue deflated. She liked Marcia. She seemed competent and not at all like her previous schmuck lawyer. \"I'm sorry.\"\n\n\"Your mother warned me you were a little volatile. Stay calm, okay? We need to work on how you present yourself. So, he heard you?\"\n\nSue thought back. She recalled saying to him not to touch her and then... Ah! His eyes! \"His eyes! He went from looking at me with a kind of hunger to angry. Really angry. It scared me. Badly. So, I kicked him, just like dad taught me. I caught him square. A perfect sort of kick. It felt like kicking a fence.\"\n\nMarcia winced a little. \"You completely ruptured his testicles. Tore them from blood vessels. It was that which caused such interest.\"\n\nSue nodded, not at all ashamed.\n\n\"You'll have to start showing remorse for that, are you remorseful?\"\n\n\"Fuck, no. I'd do it again in a heartbeat.\"\n\n\"That's not going to help your case.\"\n\nSue glared at her new lawyer. \"Really? I didn't kick him trying to castrate him. I kicked him to escape from him. He had just said to me he was going to RAPE me. So, I put him down. I would do it again and again. I've been in a lot of fights in my life. I'm a tomboy. I scrap with boys. And I win. Against bigger boys, smaller boys, whatever. I win because I know what to do. How to fight. I'm not ashamed of that. I'm proud of that. Men treat us like shit. And they hate it when we try to prove we are equals. I won't apologise.\"\n\nMarcia smiled at Sue for the first time. \"Perfect response. Okay. Let's move on...\"\n\nSue blinked and the faint spark of hope inside her flared a little brighter.\n\n\"I want to revisit the lab. You had said to your previous lawyer that you had looked around the lab for a weapon to defend yourself. Close your eyes and try to remember everything you saw.\"\n\n\"It was an empty lab. Everything had been cleaned and put away...\"\n\n\"Just close your eyes and just describe what you see. Like describing a painting. Or a landscape. Use small words. Just call them out.\"\n\nSue sighed and closed her eyes. She was back in the lab. She was putting her books away...\n\n\"Books. Backpack. Lab sink. Posters on walls. Overhead lights.\" She remembered the TA sneaking up on her from behind. \"He's behind me. I turn. He's right there in close. Too close. I can smell him. Sweat? Sour? Sweat on his brow. The TA desk. Clock on the wall. CCTV camera. Blinking red light. Cell phone. Hitting the bench with my ass when I back up. He steps closer. I warn him...\"\n\n\"Stop. Go back. You said cell phone. What cell phone? There's no mention of a cell phone in any of the statements. Or wait...\" Marcia thumbed through the file, scanning each page quickly. \"Ah-ha! His statement.\" She scanned the page. \"Here, he said he used his cell phone to call 9-1-1. So he had a cell phone. Where did you see it?\"\n\n\"Um, it was on the lab table, near me, maybe ten feet away?\"\n\n\"Was it lying flat, up or down?\"\n\nSue crunched up her brow in thought. \"Neither. It was propped up?\"\n\nMarcia looked excited. \"Really? Propped up? Was the lens pointing toward you?\"\n\n\"I think so? I'm not sure.\"\n\nMarcia nodded and took notes. \"Okay, that's enough for today.\"\n\n\"Wait, don't you want to hear more about what the chief did to me?\"\n\n\"Yes, but another time.\"\n\n\"He hit me in the forehead with his baton! I was in the hospital!\"\n\nMarcia looked at Sue with a look of sorrow. \"I know. We will deal with that, I promise. First things first. The county jail cameras were turned off when the chief went in to see you. It's clear what happened, but it's the police chief. His word is held above all else unless there's a smoking gun in his hand. I'm not done with him. Or the state. There is a great deal of corruption here. I know what the chief did to your father. Damn, the whole world seems to know. It's the world we live in now. Politicians are openly corrupt. They don't even try to hide it anymore. It's all about timing now. Doesn't matter what facts you have. Unless you can hit them at the right time and with the media willing to cover it honestly and factually, nothing happens. It's frustrating, I know.\"\n\nSue nodded resigned. \"Thank you, Marcia.\"\n\nMarcia smiled at her and then reached across the table and took her hands in hers. \"You're welcome. For what it's worth, I believe you one hundred percent. This is a grave injustice. We'll get through this. I promise. Justice will be served. Okay?\"\n\nSue nodded feeling her eyes well up. She had longed to hear those words from anyone. For once she didn't feel alone.\n\n\"I need you to sign more forms. I want you to write out every little detail again. Just like we just practiced. I'm going to need to be able to speak to the media on your behalf, too. All right?\"\n\nSue nodded and sniffed.\n\nChapter Six--Tables Turn\n\nOne of the problems about being in jail is just how cut off you are from the outside world. Sue didn't see her lawyer again for two long weeks. She had written out everything again and handed it to the guards who took it away. She didn't know if she could trust the guards. They were tough women guards in the cell blocks. They looked at Sue like some piece of candy and made her uncomfortable. The guards were all privately owned. The whole jail was run by a corporation. Food was terrible and high in starch. Sue had started putting on weight but exercised in her cell as much as possible.\n\nShe was allowed books and ever since the cave she found she enjoyed romance and erotica. She consumed it like water and pleasured herself at night. Masturbation was a ritual in jail. You could hear the moans all around the cell block. Privacy was a thing of the past and Sue had seen many the women kissing or touching each other. She hated it and never looked any other inmate in the eye. It invited attention she didn't want.\n\nA guard banged on the door to her cell startling her. \"Get up, move to the back of the cell.\"\n\nSue looked at the face of the guard peering in at her. She was a large woman and Sue knew to act demurely in front of her. She rose from her bed and turned and faced the rear wall of her cell.\n\n\"Open cell 1632!\" called out the guard.\n\nSue heard an electronic buzzing and her cell door clicked open. She kept her face to the wall. Any slight turn of her head would result in a strike to her kidneys. Sue had peed blood too many times to count. The guard pushed the door open, and it banged on the bed frame.\n\n\"The prisoner will turn and walk forward into the hall, march!\"\n\nSue turned and walked with her head down, avoiding any eye contact and walked into the hall and stopped exactly two feet from the cell entrance.\n\n\"The prisoner will turn to the left.\"\n\nSue turned ninety degrees and stopped.\n\n\"The prisoner will walk forward.\"\n\nSue started to walk slowly. She couldn't go too slow or too fast. What speed was expected was always completely at the whim of the guard. She hoped she had it right.\n\n\"The prisoner will walk faster!\"\n\nSue grunted as a baton struck her lower back. She picked up the pace, wincing as pain radiated out from her back.\n\nSoon she was marched into an area she was rarely brought into. She was led into a small room with a steel mirror bolted to the wall, a small chair bolted to the floor, and a metal shelf with clothing laid out on it. Apparently, I have a court date, she thought.\n\nThe guard remained in the room and ordered her to change and make herself up. Sue dressed as quickly as she could. The patience of the guards was set low. She tore off her orange coveralls and panties and bra. She grabbed the clothes and dressed. Next came makeup and she still had no real clue how to use it. She applied a base foundation, a little reddish-pink lipstick that had some bizarre colour name to it, and then clipped earrings to her earlobes, hating the pinch and feel of something dangling from her ears.\n\nFinished in record time, she turned to find the guard staring at her. Sue could see the sexual, predatory look in the guard's eyes. They all had the same look. These women were monsters. They flocked to their job because it gave them access to what they craved. Sue suppressed a shudder and stood keeping her face carefully blank. It was the prison look. Meek, demure, and unthreatening.\n\n\"You clean up nice,\" murmured the guard. She stepped forward and roughly grabbed Sue's left breast. \"Natural. Firm.\" The guard lowered her hand and watched Sue's face closely. Sue kept her face blank even when the guard forcibly inserted a meaty finger into her pussy. \"Dry. Fucking hate that.\"\n\nThe guard let her go and Sue fought to not sigh in relief. The guard turned and led her out. They passed though security points, gates clanging loudly and echoing in the halls. The flat shoes Sue wore slapped slightly on the floor. Sue tried to minimise the sound as sometimes the guards struck her for making too much noise.\n\nIn moments she reached the processing room. In relief she saw her lawyer on the other side of the bars and felt immediately safer. Marcia was dressed for work and Sue realised they really must have a court date. Sue noticed the change in her guard right away. She acted properly and was suddenly polite to Sue and then left. Sue exited into the room and Marcia was suddenly right there. Surprising Sue, Marcia hugged her. Two male guards watched them.\n\n\"Marcia? What's going on?\"\n\nMarcia beamed a tight smile at her. \"Good things. I don't want to spoil it.\"\n\n\"Where are we going?\"\n\n\"Pre-trial motions.\"\n\n\"Already?\"\n\n\"Yes. Everything has been accelerated. You'll see. Sue? Trust me okay. I want this to be a surprise. I need an honest reaction from you. Sorry I'm doing it this way, but in my experience, we need the raw emotion. That okay?\"\n\nSue nodded slowly.\n\n\"You'll be brought to the courthouse. I'll see you there, okay?\"\n\nSue nodded.\n\n\"Are you okay?\"\n\nSue snorted. \"Okay? Have you ever been in prison?\"\n\n\"No.\"\n\n\"Don't worry about it, then.\"\n\nMarcia bit her lip and studied Sue's face. \"I'm sorry, hon. Be patient. Trust me.\"\n\nSue looked hard at Marcia for a moment and then nodded once.\n\nMarcia smiled and turned to the waiting guards. \"Escort her to the courthouse. We're in court room 3B. She needs to be there in one hour. No delays. Straight there, am I understood?\"\n\nThe guards looked at one another and then agreed repeating the courtroom number.\n\nMarcia pulled out her phone. \"One sec...\" Marcia took a bunch of pictures of Sue and even had her lift her dress to show her back and front and legs. Marcia pointed at the red mark on her lower back.\n\n\"What did this?\"\n\nSue shook her head at Marcia.\n\n\"Did a guard do this?\"\n\nSue gave Marcia a look that pleaded for her to stop.\n\nMarcia growled and turned to the guards. \"See that she arrives looking exactly like the pictures I just took.\"\n\nMarcia did something on her phone and pointed it at Sue. \"For the record, Susan Chandler, are you suicidal?\"\n\n\"What, no!\"\n\n\"Are you well? Do you have any medical conditions?\"\n\n\"I'm fine.\"\n\n\"Do you feel angry or violent? Are you aware you are being brought to the courthouse?\"\n\n\"Yes, to all that. I mean, I'm fine. Nothing wrong with me. I'm not angry or violent. I have never been. Not really. Yes, I'm going to the courthouse. What's going on?\"\n\n\"Are you interested in having any kind of sexual activity with either of the two male guards who will be bringing you to the courthouse?\"\n\n\"Ew! No, fuck no! Never!\"\n\nMarcia turned her phone toward the guards. \"See she arrives safe and sound.\"\n\nThe guards glared at the camera and nodded. Sue was escorted out to the underground parking lot. Marcia had left by the front door and was gone.\n\n\"Fucking smart lawyer, you have there, bitch,\" grumbled the male guard on her left.\n\nSue then understood what her lawyer had done and smiled to herself.\n\n<p align=\"center\">* * *</p>\n\nSome two hours later Sue was marched in a packed courtroom, manacled and rattling. She looked around in a panic and was surprised to see her mom and dad and brothers sitting up front near her seat. She tried to speak to them, but her guard ordered her to remain quiet. Marcia was already seated with her assistant and rose and hugged her. The loud snapping of cameras and flashes filled the air. Video cameras swung toward her. She saw logos of major news agencies.\n\n\"Manacles, please,\" Marcia asked the guard.\n\nThe guard huffed and removed them. Sue rubbed her wrists and half turned to her parents and brothers.\n\n\"Mom! Dad!\"\n\n\"Hi, kiddo.\"\n\n\"What's going on?\"\n\nHer parents shrugged and shook their heads. Her brothers smiled at her.\n\nThen Sue saw Dave. He was sitting so close but refused to meet her eye.\n\n\"Dave! I missed you!\"\n\nDave looked at her then, surprise evident on his face.\n\n\"It wasn't your fault, Dave!\"\n\nHis face exploded into so many emotions Sue couldn't follow them. He looked relieved and guilty at the same time. His chin quivered and his lips clamped shut. His eyes gleamed with moisture, and he nodded once, hard, and she could see him fighting hard not to cry.\n\n\"It's okay. I don't blame you! I love you, Dave!\"\n\n\"Sue, turn around,\" murmured her lawyer in her ear. \"There will be time for all this later. Sit nicely, look forward, answer all questions honestly and don't embellish. Don't add anything. Answer the question simply and wait for more. Okay?\"\n\n\"Marcia, what's going on? Why all the cameras?\"\n\n\"You'll see. I know this is unorthodox but after everything, all the media bullshit, I wanted to make a circus of this. I think you'll soon be free. Okay? Don't react. Stay calm. Okay?\"\n\nHope blazed hot and fiery inside her. She struggled to keep it suppressed, but a smile kept leaking at the corners of her mouth. She heard quiet crying and glanced quickly toward Dave. He was crying and some news camera was pointed right at him. She clenched her fist.\n\n\"ALL RISE!!\" boomed the bailiff.\n\nThe courtroom surged to their feet.\n\n\"The court of General Sessions is now in session. The honorable Judge Taylor is presiding.\"\n\nSue watched an older, grey-haired lady in judicial robes make her way carefully into the courtroom and take her seat behind her bench. She had to be seventy at least. She had black-rimmed glasses perched on the tip of her nose with silver chains wrapping around her neck. She looked out at the courtroom and then looked directly at Sue.\n\nThe judge's eyes were two hard flints that seemed to pierce Sue's very soul. Sue held her gaze and tried not to flinch. The judge looked away and nodded to the bailiff.\n\n\"All may be seated.\"\n\n\"Prosecution and Defence, approach the bench, please,\" ordered the judge and Sue watched Marcia and some fellow from the other table rise and walk up to the bench. They spoke in hushed tones and Sue couldn't make out anything.\n\nThe prosecutor seemed agitated. \"Your honor, I was not made aware of this evidence. I need time to prepare...\"\n\nThe judge cut him off and spoke to Marcia for a moment. Maria answered some question and then produced a piece of paper and handed it to the judge. The judge read it carefully and then handed it to the prosecutor. He read it and then frowned. He handed the paper back and then the judge nodded at Marcia. Marcia seemed to beam at the judge, and they returned to their tables.\n\n\"Marcia?\"\n\n\"Shush. We're good. Better than good. Be patient.\"\n\nThe courtroom went silent, and the bailiff spoke to someone. In moments, a large flatscreen television was wheeled in and set up in the corner.\n\nThe judge banged her gavel. \"Defence, state your intent.\"\n\nMarcia rose. \"Your honor, I would like to review the facts of the case. Statements made by witnesses and the victim including the police chief, the man's father.\"\n\nThe prosecuting lawyer rose. \"Your honor, I object, all this information is readily available through transcripts and already in evidence.\"\n\n\"Your honor,\" answered Marcia. \"Those facts bear repeating as they have directly impacted on the innocence of my client and the prosecution has gone to great lengths to keep the media informed of these facts on many, many occasions and late-night talk shows. It is important to review these facts prior to presenting the new evidence.\"\n\nThe judge didn't hesitate. \"The objection is overruled. Defence, please proceed.\"\n\n\"Thank you, your honor. One moment, please.\"\n\nMarcia sat and turned to her assistant. \"Run the video.\" The assistant nodded and left to handle the request. Marcia rose.\n\n\"If it pleases the court, I have prepared a short video that summarises the charges made against my client. Statements by police, the victim, the FBI, the state governor, and even the President of the United States. My position is that all these statements are groundless. My client was presumed guilty by all parties from the very beginning. Her story was ignored and dismissed outright and blatantly. Her rights were violated on so many occasions it is impossible to detail them all. Lynn? Start the video please.\"\n\nMarcia sat, and the video started. Sue watched in horror and fascination as clip after clip was presented. Seeing the chief of police on camera made her angry and Marcia laid a hand on her thigh to calm her. Seeing all the lies before her, Sue grew emotional. Tears streaked down her face and her anger was evident. She could see cameras pointed her way and dismissed them. Fuck them, she thought as media outlet after media outlet fed the lies to the public. Seeing the governor openly castigating her was hard to handle. And then the sound bite from the fucking POTUS, criticising her, blaming her, publicly humiliating her, was too much to handle, and she broke down sobbing. The judge ordered the video stopped.\n\n\"Miss Chandler, I know this is hard to watch,\" admonished the judge. \"But I have to ask you to compose yourself.\"\n\nSue nodded and blew her nose into the tissue Marcia handed her.",
        "\"Your honor, my apologies for my client, this is the first time she has viewed this. It is difficult to hear so many people condemn her and presume her guilt. She is, and has stated numerous times, the victim of a rape attempt. She acted in self-defence and has been ostracised and unfairly treated for her actions.\"\n\nThe judge rolled her eyes and murmurs filled the court. The judge banged her gavel. \"Silence in the court! Any more outbursts and I will have the media removed. Am I clear?\"\n\nThe courtroom fell silent.\n\n\"Continue,\" ordered the judge.\n\nThe video resumed. Sue watched interviews with FBI agents, all proudly exclaiming how they got their man. A wanted criminal capable of anything. Next came videos of Dave being arrested. Off screen people booed and chanted for him to be locked up. And then came the interview with the chief's son. Sue went rigid. Seeing his face so clearly in front of her had her shaking uncontrollably.\n\nMarcia rose quickly. \"Your honor, I ask for a quick recess. My client is having a difficult time seeing her rapist in front of her on the screen.\"\n\nThe judge glared at Marcia. \"He is not a rapist; he is to be referred to as the victim.\"\n\nMarcia stared at the judge while Sue sobbed loudly beside her. \"Your honor, our position has clearly stated that the victim is in fact a rapist. My client has been erroneously made out to be the aggressor.\"\n\nThe judge banged the gavel as the courtroom noise rose. \"Silence! Tell your client to compose herself. I care not ONE WIT for her feelings in this. She is the aggressor. Her courtroom antics do not impress me.\"\n\n\"Your honor, please...\"\n\n\"One more word and I will hold you in contempt, am I making myself clear?\"\n\nMarcia nodded. \"Yes, your honor, you have made your position perfectly clear. Thank you for your words.\" Marcia turned and looked directly at the video cameras before telling her assistant to continue.\n\nSue watched the screen through blurry eyes.\n\nThe 'victim' described in great detail how Sue approached him. Made advances on him. Tried to grab his crotch, and he played on the emotions of that. How he begged her to stop. And then, describing her anger and twisted face, kicked him in the testicles, gloated at him, and then left him to die. He spoke about how nice he had been to her. Helping her in the lab. About how much she acted the male instead of a girl. He ridiculed her in subtle ways. He cried at times and made a spectacular show of it.\n\nSue wanted to kick him all over again. After a time, her tears stopped, and she became numb once more.\n\nThe video ended.\n\nMarcia rose. \"If it pleases the court, I would like my client to speak openly and candidly regarding what she has just witnessed.\"\n\nThe prosecutor rose. \"I object. The feelings of the defendant are inconsequential and have no bearing on the video and content.\"\n\nMarcia remained defiant. \"Your honor, this was the first time she has seen this video. The judge has corrected me and described my client as the aggressor. Perhaps she might shed light on the circumstances and admit to some of the details.\"\n\nThe judge had a gleam in her eye. \"Objection overruled. Proceed.\"\n\nMarcia turned to Sue. \"Speak freely. Say how you feel. Right now. Get it all out. Stay calm if you can. No swearing. No crying. Tell everyone how you feel right now. This is important, Sue. Can you do it?\"\n\nSue looked at Marcia and could see her intensity. This was important somehow. She nodded and rose.\n\n\"Start with 'your honor',\" whispered Marcia, but everyone heard her.\n\n\"Your honor,\" said Sue and heard a little laughter. \"I... I don't know what to say exactly. I mean, I only just saw that for the first time. I'm amazed at just how horrible it all is. Seeing that man again...\" Sue stopped as her voice quavered. \"After...\" She stopped again. \"I mean, the President of the United States threw me under a bus! Who says things like that without knowing any of the facts? And the governor? And the police chief? He struck me with his baton right in the forehead! You can see the scar! He cracked my skull! No MRI, no anything! I lay in that hospital without even pain meds! Sure, I ran. You would too. I was being persecuted by everyone! The doctor did nothing for me even when I pleaded. The guards in jail beat me. Sexually assaulted me! But that man? He's the VICTIM? Are you kidding me? He tried to RAPE me. He said he would fuck all my holes! I told him I wouldn't allow that. And yet he continued. He grabbed me! So, I reacted. I did what my father, an upstanding police captain, taught me to do in self-defence. I defended myself. I stopped a would-be rapist. And yet he's the victim. HE'S THE VICTIM! FUCK THAT! YOU CAN ALL GO TO HELL FOR WHAT YOU'VE PUT ME THROUGH. MY GOD, WHAT IS WRONG WITH ALL OF YOU! HE DESERVED TO BE CASTRATED! HE'S A FUCKING ANIMAL JUST LIKE HIS FUCKING FATHER!\"\n\nBy the end, Sue was screeching in rage. The judge was banging her gavel for all it was worth. The prosecutor was up and shouting. Sue's mother was up and yelling at the judge, too. And the cameras caught it all. Millions of viewers at home watched in glee as Sue imploded.\n\nA half hour later calm was finally restored, and the judge sat glaring at Sue. \"I am holding you in contempt. Your outburst was uncalled for. You spewed lies that no one believes. You should be ashamed of yourself, young lady. You are an example of all that is wrong in today's society. I blame your parents. They should have raised you better.\"\n\nSue snapped her head up and glared at the judge. \"Fuck you, your honor. My father was an upstanding police officer who raised us to be honest and upstanding citizens of this country. A country I now no longer recognise. My father and mother are worth a thousand of you, you jaded, prejudiced bitch. I hope you rot in hell with every other asshole who turned this into a glee-filled circus. Shame on you. Shame on you all.\" The last words she directed right at the cameras. She sat.\n\nThe judge went apoplectic. She charged Marcia with contempt. The courtroom quieted and everyone hung on every word.\n\nMarcia rose. \"Your honor, if it pleases the court, I would now like to present my final piece of evidence.\"\n\nThe judge nodded wearily. She was tired of it all. Looking at that smug little bitch sitting there so defiantly despite all the evidence against her was really pissing her off. When she could, she would give her the maximum penalty. The governor and POTUS had already spoken to her and asked that an example be made. They were fed up with good men being taken down by false rape accusations. The defence had stated they had a small piece of evidence that would help her client. The judge, wanting to appear impartial had allowed it during this pre-trial hearing.\n\nShe sat back and prepared to watch the new evidence. She looked out at the camera and hoped she appeared to be looking official. This trial would lead to bigger things for her. Already she had book deals and talk shows lined up. She grinned to herself and saw dollar signs.\n\nThe video started and was jerky as the camera moved around and the judge was shocked to see the defendant standing with her back to the camera beside a long lab bench. Oh my God, thought the judge. She has video evidence of the crime. The judge immediately recognised this would not be good, but it was too late. She had allowed it. She couldn't stop it, not with the world watching. She looked quickly at Sue's attorney and was shocked to see her grinning at her.\n\nMarcia leaned in toward Sue. \"Don't watch this. It's not pleasant.\"\n\nSue nodded, already overcoming her shock and surprise to see the event she knew so well open and exposed on the big screen. She would watch it. Watch it all and then flip the bird to the entire world.\n\nAll eyes were glued to the screen.\n\n\"Heh,\" said a male voice whispered offscreen. The camera view was reversed and suddenly the police chief's son could be seen leering at the camera before the view reversed again. \"Finally, I'm alone with that bitch. She's fucking hot under those boy clothes. Great ass. Great tits. Finally, I'm taking that. Yum yum.\"\n\nThere was a loud scraping noise as the phone was placed on the lab desk, and the video shifted violently before it settled down to a solid view of Sue's back. She was humming some tune and packing her belongings.\n\nThe TA entered the frame and crept up behind Sue. At one point he looked back directly at the camera and grinned. He looked back at Sue and when he was only about three feet from her, everyone could see her tense up suddenly and spin around holding her bag in front of her. She gave a very girly shriek of alarm seeing the man so close to her and she backed up one step.\n\n\"Jesus fuck, don't sneak up on me like that!\" she could be heard to say. Her face looked a little frightened and worried.\n\nThen she frowned at him. \"What's up? I'm fucking leaving, okay? This is my lab time.\"\n\nThe man stepped toward her, and everyone watched as Sue backed up again and collided with the lab bench behind her. Her expression turned to fright, and she looked around quickly before looking right at the man. Then her eyes drifted momentarily up toward where the CCTV camera was in the corner. The audience could see the camera clearly, its red light blinking rapidly.\n\n\"You're a strange one,\" said the chief's son and his head roamed up and down her body. \"I bet you're a great fuck. I'm gonna take you right here. All your fucking holes...\"\n\nThe courtroom gasped.\n\nOn the screen everyone could see a strange calm settle on Sue's face. She looked determined. Resolute. Not a scared little girl, but a woman certain of her power. It radiated out of her. They watched as she slowly placed her bag down on the lab table beside her. Her eyes seemed to bore into the would-be rapist's eyes. Everyone could see the steeled determination in her eyes.\n\n\"Done undressing me with your eyes, asshole? I want you to take two steps back away from me. Then I'm going to leave this room. You will not touch me. I will not allow it. Are we clear Mister I Want to Be a Sex Offender and Get Ass Raped in Jail?\"\n\nThe courtroom saw her lean subtly back on one foot.\n\nThey stayed that way for a moment, and then Sue's eyes went wide on the screen, surprised by something she saw. The man's hands rose fast and grabbed her upper arms in tight fists, knuckles white with power, and the moment he touched her, she kicked out striking true right between the man's legs. The thwack sound was loud. Impossibly loud.\n\nThe man simply collapsed as if his strings were cut. They watched Sue kneel by his head and cock a fist and then release it. She turned and looked right at the CCTV camera.\n\n\"I warned him. He didn't listen,\" she said and rose, grabbed her things, and fled the view. In a moment, the sound of a door closing could be heard.\n\nMarcia rose. \"For expediency we have fast forwarded the video. It continued to record throughout.\" She sat back down.\n\nThe video showed the clock on the wall and suddenly it jumped in time by thirty minutes. The man stirred on the ground and then groaned. The video went into a fast forward mode, and they watched him writhe on the floor holding his groin. He vomited once. Then he managed to reach up and grab his phone, his hand filling the screen. Then the phone view showed the side of the lab. Small electronic sounds were heard.\n\n\"D-dad? It's me. Something happened. I was kicked in the nuts!\" He sobbed loudly and then retched hard. He spat on the ground. \"Dad, it hurts so bad!\" His voice was whiny and strained. \"Something's wrong. It doesn't feel right...\"\n\nThe view from the camera shifted around aimlessly. \"Yeah, there's a camera in the corner... Yeah, it's on... Okay. Okay! I know where the feed goes.\" The man retched again. \"Okay. Dad, I don't feel so good. It's bad... What did I do? I just wanted to fuck her, ya know? Like the others... What? Okay. Hurry. I feel woozy. I need that bitch to pay! I want her buried... I feel...\"\n\nThe camera view went haywire and then a loud clunk was heard.\n\nMarcia rose. \"The 'victim', did I get that right your honor? The victim passed out. I want to point out that the victim didn't call 911 as he said. His call was to his father, the chief of police. The video will advance fifteen minutes.\"\n\nThe video jerked and suddenly the police chief was looking at the phone. He reached up, and the recording stopped.\n\nThe courtroom went nuts.\n\nEveryone failed to notice Sue's mom and dad embracing her and then Dave joining them. They cried and sobbed, and Marcia sat quietly watching them, a small smile on her lips. The judge broke her gavel and guards entered the courtroom and ushered the judge away. The media was in a frenzy and questions rang out loud.\n\nSue was being held by her dad. He whispered in her ear. \"I'm proud of you, baby. I never, and I mean never, doubted you. Nice kick. Perfect delivery. Maybe a little too hard, but hey, he got what he deserved.\"\n\nSue laughed and found Dave's hand in hers. He leaned over and kissed her, and she kissed him back. She caught her mom's eye, and she nodded happily.\n\nEpilogue\n\nFast forward one year. The story of Tomboy Sue, as the media called it from day one, faded in the news. Only the occasional headline cropped up.\n\n\"Police Chief Resigns After Being Indicted\"\n\n\"Governor vows to remain in office, backed by POTUS\"\n\n\"Father of Tomboy Sue Returns to Active Duty -- Fully Reinstated\"\n\n\"Dave Sturgeon charges dropped by FBI\"\n\n\"Judge Taylor Judicial Misconduct Under State Review\"\n\n\"Judge Taylor Steps Down From Bench\"\n\n\"Head of FBI Defends Agents\"\n\n\"Former Police Chief and Son Arrested for Multiple Rape and Murder\"\n\n\"Apple CEO Explains Release of Archived Cloud Video in Tomboy Sue Case\"\n\n\"Susan Chandler Declines Out of Court Settlement\"\n\n\"Tomboy Sue Misjustice Case Goes Forward to SCOTUS\"\n\n\"Governor Steps Down\"\n\n\"Police Chief Opens Up -- Implicates Governor and POTUS\"\n\n\"POTUS Resigns -- VP To Be Sworn In\"\n\n\"Tomboy Sue Exonerated by SCOTUS in 5-4 vote\"\n\n\"Private Prisons Under Review -- Tomboy Sue Prisoner Rights Advocacy Group Behind Changes\"\n\n\"One Year Later -- Where is Tomboy Sue?\"\n\nSue shut down her iPad ignoring the last headline. She knew exactly where she was. Even despite all the evidence, she spent two more months in jail. Due to the pressure for resolution, her case went to SCOTUS and then she was exonerated. Plus, a hefty monetary package which meant she and her family would likely never have to work again.\n\nShe went to weekly sessions with a therapist. They had a lot to go through. It really helped.\n\nShe laid her head back against the headboard and then smiled as Dave snuggled closer and kissed her sweat filled belly button.\n\n\"I want to do it again,\" he said.\n\n\"Not now, baby, I'm too sore.\"\n\n\"Is your mouth sore?\"\n\nSue smacked his head. \"No. But how about something for me?\"\n\nDave snaked his head lower, his tongue exploring. \"You mean something sexy?\"\n\n\"Yeah.\"\n\n\"I can whistle. A pretty sexy whistle.\"\n\n\"Whistle where I want you to...\"\n\nSue sighed as Dave found what she wanted him to find. He was getting better at it. Practice made perfect.\n\nShe thought back often to those days at the cave. She had felt so free out there. She wanted to return. Maybe build something there. She had the money. But she wanted Dave there with her. They were never apart now. She relied on him for his added strength. He had found her when no one else had. Came to her. Believed in her. She adored him for that. He had always been there for her. Seeing past the clothes and short hair and saw the woman underneath and fell in love with that woman.\n\nThey were no longer virgins. She was glad she was past that and glad Dave and her had come to terms with just how poorly that night had gone. They were getting better. She had a long talk with mom about it and, after her mom had stopped crying and answered her questions, she knew what she needed to do. It was starting to become fun. Only Dave wanted to do it all the time. Mom had warned her of that, too, telling her men need sexual attention. A lot of it.\n\n\"It's in their nature, hon,\" her mom said. \"Women make babies. One squirt and bang. Sometimes. Men are with women usually not wanting them to get pregnant and just sowing their seed. It's just about the act and pleasure. If they could get away with it, they would do anyone they could. Don't think less of them. It's what they are designed to do.\n\n\"But I seriously have problems with feminists who hate on men. How on Earth do they think they came into being? It's like hating your right hand because its right and not left. It's simple really. And I think I'm right on this. Want to make a man love you and stay with you? Give him pleasure. Make him feel wanted. Needed. Appreciated.\"\n\n\"That seems like a lot of work, mom. Have you met Dave?\"\n\nHer mom laughed then. \"And you? What do you want? Don't answer that I know already. You want to feel pleasure. To feel wanted. Needed. Appreciated. Right?\"\n\nSue laughed too. \"Okay. Got it. Men and women. We're the same. Just different plumbing. What drives us may be a little different though.\"\n\n\"Exactly. I'm sorry hon.\"\n\n\"About what?\"\n\n\"About treating you so poorly when you insisted on being a tomboy.\"\n\n\"It's okay, mom. You wanted a girl and instead you got me.\"\n\nHer mom tutted. \"You know what? I got something better than a girl. I got a woman so sure of who she was, in her convictions, her morals and beliefs, that she puts me to shame sometimes. You stood up against a man's world and won. I also came to realise that you weren't rejecting femininity. You were rejecting what society was telling you femininity was.\n\n\"You were never the damsel in distress. And seeing you with Dave I've come to realise that perhaps better than most women, you can understand men so much better than most women. I think that's why Dave's so head over heels for you. He always was you know. A mother can tell. I don't say this enough, Sue, but I'm so proud of you.\"\n\n\"Thanks, mom. I'm so glad that's over.\"\n\n\"Me, too, Sue. Me, too.\"\n\nTHE END\n\nAuthor's Closing Comments:\n\nWhew. That was so hard to write. I can't even...\n\nFor the love of anything you worship (hmm, Gaia?) please do not criticise me for lacking in sexual content in this story. This was a story exploring the nature of tomboys, the strength of women in a man's world (and if you don't think that's true, I feel rather sorry for you), and strength against injustice.\n\nI want to point out, if that deleted video hadn't been recovered, Sue would have been fucked for life. Absolutely fucked. She was lucky. Really lucky. This is not true in real life.\n\nAnd: I am fully aware that men suffer from violence from women. Please do not go down that road. I feel for all people inflicted with sexual violence or any violence at all. It can come from any sexual identity. But I chose to examine this from a woman's perspective in our totally male dominated society.\n\nI know this story is a little abnormal for me. I promise more sexually charged stories in the near future. Thanks for reading.\n\nLana Ocean\n\nJanuary 2022\n\nAll rights reserved. Copyright \u00a9 2022 Lana Ocean"
    ],
    "authorname": "Estcher",
    "tags": [
        "legal",
        "tomboy",
        "states",
        "fbi",
        "police",
        "novella",
        "sexual assault"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/tomboy-sue"
}