{
    "title": "Tall Sophie Ch. 03",
    "pages": [
        "It was Sunday afternoon and Tom Douglas sat in his guest cottage reviewing a report on emerging market debt trends prepared by one of his analysts. The cottage was tucked into the back of his yard and served as his home office. An antique Shaker dining table functioned as his desk and was located in front of a big picture window in the unit's small kitchen. In the same lofty room, about ten feet behind him, was an inviting king-size bed where he occasionally stole a nap. The bed was framed by symmetrical nightstands and a vaulted ceiling that made it look like a bedroom at a high-end safari lodge in a travel magazine. He thought of it as his escape, a place he could go to unwind from his day-to-day challenges, which lately felt intractable.\n\nOver a week had passed since his humiliating encounter with his daughter's friend, Sophie, during a group dinner at a local restaurant. Earlier that evening, the 6'4\" teen volleyball star had anointed him team mascot and picked him up off his feet in front of her teammates during the post-game celebration. Then, after insisting he take them out to dinner, she emasculated him in an arm wrestling match - twice. Finally, she had tricked him into sitting on her lap, where she teased him until he ejaculated in his pants. To top it off, she had dumped a root beer float in his lap just as he began cumming, ruining his orgasm.\n\nIn retrospect, he realized the root beer float may have saved him from dire consequences. His sexual climax was quite out of control and would likely have been obvious to the five other 18-year-old girls at the table, including his daughter Lauren. Instead he looked like he was reacting to the shock of the cold liquid in his crotch.\n\nFor the first few days after the incident he felt overwhelmed with resentment and experienced a sexual void. Prior to the restaurant he had been unable to control himself, masturbating to images of the teen goddess practically as fast as he could recover from his last release. In his first encounter with her, she had given him a piggyback ride on a dare at his daughter's sleepover party and he had spurted in his pants on her back, thankfully without the other guests noticing. While he was ashamed to admit it, it had been the most exciting moment of his life. The girl was the hottest, most complete package of a woman he had ever encountered: Amazonian stature, beautiful face, killer body and devastatingly strong. She played precisely to Tom's suppressed fetishes around height difference, lift and carry, and female dominance in general.\n\nYet she had since shown herself to be brilliantly manipulative, luring him into compromising situations and dangerous predicaments that could cost him his job, marriage, reputation, and relationship with his daughter. Despite his lust, he loathed her for humiliating him and putting him at risk. He had built a career in economics helping banks manage risk and he found it ironic and infuriating that a teenage girl could make him gamble with the most important aspects of his life. He had resolved that he must avoid her at all costs and do everything possible to put an end to the strange relationship. For three days he refused to let himself masturbate and worked hard to clear his mind of her.\n\nAt Lauren's next volleyball game, ignoring Sophie entirely was more challenging due to her commanding presence on the floor. Her physicality alone gave him flutters as he watched, much less her exceptional beauty. He continued to lead the cheering section as she had prodded him to do, but it felt increasingly natural as Lauren had quickly established herself as the team's second star. The two girls had become a dynamic duo, with Lauren leading the team in digs and assists, while Sophie dominated in kills, blocks, aces and practically everything else.\n\nWhen the game had ended, he managed to avoid Sophie, making an excuse to Lauren about being behind at work (which was partly true) so he could leave before the girls finished their post-game activities. The next game that week followed the same pattern.\n\nHe had also been regularly checking Instagram to make sure Sophie and her friends hadn't posted any videos from the restaurant. Fortunately, his plea not to record him had worked. But he couldn't quite bring himself to mute Sophie's posts and several tantalizing new images appeared in his feed. One showed her wearing a tight dress and standing with a short male classmate, hugging him to her, his head practically mashed into her breast. Another showed her in uniform effortlessly holding a volleyball teammate in a cradle carry, like a little baby.\n\nAs the week wore on and images streamed in, he began to feel urges. Seeing Sophie at the games reminded him how hard she was to resist. Watching her online reinforced it. Through sheer will power, he managed to avoid masturbating most of the time, but by midweek he had begun to succumb when he was alone, particularly during evenings in his home office.\n\nTom looked back toward the large bed and imagined the first time he met Sophie, how she had sat on the mattress and made suggestive comments about bringing a date to the room. As he thought of her, he imagined himself sitting on her lap, her strong arms holding him to her. His cock hardened as he envisioned her standing up and cradling him securely in her arms, in a coddling and protective embrace.\n\nHe was interrupted from his daydream by his phone alarm sounding to remind him about a football game in a few minutes. Tampa Bay was playing at 4:00 pm and he wanted to see Tom Brady in action. Pushing Sophie out of his mind, he turned and looked through the door to the empty room on his left. In addition to a bathroom door and closet on that wall, the doorway nearest him led to a cozy annex that he had yet to furnish. I should really make that into a man-cave, he briefly fantasized, with a big LED TV, comfy recliner, sports memorabilia...maybe a dart board.\n\nHe looked back at the draft analysis and knew he should stay and finish. He was starting to get behind on some projects at work, partly due to his mind constantly wandering with thoughts of Sophie. He scolded himself for the unhealthy obsession. Yet she had gotten to him again, he reasoned, may as well let football take my mind off her and pick up again in the evening.\n\nTom closed up his laptop and walked across the lawn to the main house. He took a deep breath of the 70-degree air, savoring the perfect September weather. Lisa was out for the day and Lauren had said she would be studying, so he assumed the television would be available. As he kicked off his shoes on entering the house, he realized he hadn't relieved himself in several hours, so went straight to the lavatory. As he walked through the door, he scarcely noticed a pair of shoes on the floor; leopard print ballet flats that looked to be quite long. He closed the door, opened his button-fly jeans and took a whizz, sighing as the pressure dissipated. After flushing, he turned toward the sink and froze. A lightweight hot pink sweater and a long pair of stretchy-looking jeans with an off-white rhinestone belt were hanging on a hook on the back of the door.\n\nLauren must have a friend over, he thought. Then he wondered if they were Sophie's and he felt a quick rush of adrenaline; partly from the anxiety of wanting to avoid her, but primarily from the deviant impulse that being alone with her clothes stirred in him. He took a step closer to the door and sniffed near the sweater. He suddenly felt lightheaded and looked down to see his phallus jutting out above his open fly. Sophie's wonderful scent permeated the garment.\n\nHe reached up and rubbed his hands along the soft fabric. The memory of sitting on her lap and leaning against her breasts invaded his brain. He put his face against the collar and inhaled. Her sweet essence flooded his nose, and he imagined his face buried in her neck while riding on her back. He leaned in harder and flinched as his exposed cock rubbed her pant leg. A bolt of pleasure ripped through his body. His hips gyrated slowly into the jeans as he imagined himself standing next to her statuesque form dressed in the tight pants and pink sweater.\n\nAbruptly the garments fell to the floor in a heap. He cursed at his carelessness. The surprise brought his rational thoughts back to the fore. This is so perverted, he lamented, willing himself to stop. He bent down to pick up the pile of clothing to hang back up and froze again. A bra strap was sticking out from under the shirt.\n\nFeeling like a teenage boy discovering his older sister's lingerie drawer, he pulled on the strap and lifted the bra out of the pile. He first examined the cups. The centers were cream-colored and felt silky to the touch, while the edges were trimmed in a pretty lace. There were no underwires or pads. He used his fingers to open the negative space and melon-sized voids appeared. Then he pulled a cup to his face and slipped part of his head inside to further visualize the size. His nose registered a deeper musk and his body shuddered as Sophie's remnant pheromones caused his cock to bounce repeatedly in the air.\n\nRecalling his teenage fascination with bra size he pulled the bra off his head and probed along the thin lace straps for the label. He let out a sigh when he read 38DD. He already knew her tits were huge, but the statistic still added to his arousal.\n\nHis size fetish was tickled, and he decided to pick up her jeans. He held them up to his front and looked in the mirror. The belt on the waist came up nearly to his nipples, causing him to feel woozy. He took a step back to maintain his balance and felt his sock-clad foot touch one of the shoes. With the sudden eagerness of a child finding a bag of candy, he repositioned the shoe and slipped his foot inside. It was several sizes too large for him and he slid his foot back and forth to absorb the comparison. His cock throbbed uncontrollably as he immediately flashed back to an image of his childhood, flopping around in his mother's shoes.\n\nHe set the jeans on the sink edge and, while still holding the bra in one hand, bent down to pick up the other long, pointy-toed shoe. With a sense of anticipation, he brought the opening to his nose and took a deep breath. He was transported again to his childhood and a long-forgotten memory of sitting behind a couch with a neighbor girl, smelling each other's feet and experiencing a puzzling stiffness in his penis. The odor was even more musky, with a hint of sweat, but also distinctively Sophie.\n\nLost in euphoria, he brought the bra to his crotch and slipped his cock into one of the cups. He registered with excitement that his entire length fit inside. He stroked slowly, wrapping the silky material around his sensitive skin. It reminded him of how his hands and cock felt rubbing against Sophie's silk pajamas. Inhaling again inside the shoe, he silently chided himself for trying to deny the obvious pleasure she had given him - and could still give him - whether in reality, or vicariously through fantasy. He visualized himself riding on her back again, feeling her firm breasts in his hands. Then his toes curled inside the oversized shoe and he had a sudden desire to bow on the ground in front of her and kiss her feet. His breathing grew heavy and he felt his semen begin to rise. A voice inside told him not to cum in her bra, but he wanted to so desperately...\n\nKnock, knock!\n\nTom froze, his impending orgasm suddenly truncated as a knot appeared in the pit of his stomach. He dropped the shoe in surprise and heard a light clunk.\n\n\"Just a sec,\" he called in a weak voice.\n\nShit, he thought to himself, how could I be so stupid. Imagine if someone had walked in!\n\nHe quickly grabbed the jeans from the sink and the belt buckle dinged against the porcelain. The light tap sounded like a church bell to Tom, who had become a bundle of nerves. Then, as he hung the jeans on the door hook, the belt grazed along the wood, issuing a screeching sound that reminded him of nails scraping a chalkboard. Finally, he hung the bra and picked up the pink sweater to hang over it. He swiftly kicked the shoes back to where he remembered them and moved to grab the door handle.\n\nThen he stopped. His cock was hanging out, still semi-hard. With a sigh of relief, he tucked it in his briefs and re-buttoned the fly. Regaining his senses, he remembered to flush the toilet and wash his hands to complete the appearance of normalcy.\n\nHe opened the door with a rushed \"Sorry!\" and nearly ran into Sophie. She towered over him in a loose black t-shirt tied above the waist exposing her bellybutton and defined abs. FCUK was written across her prominent bust in bold white letters. He flinched at the insinuation despite knowing the irreverent misspelling stood for French Connection UK, from when his wife forbade Lauren to wear a similar shirt.\n\nWith a brief scan of her body, he noticed white spandex boyshorts and white Nike athletic shoes with barely visible white ankle socks. He looked up at her face and felt like he was two feet tall as she cast an annoyed glare at him. He worried he looked like a guilty dog caught in an incriminating act. His body stiffened while he stared into her eyes for a sign that she suspected what he was doing in the bathroom.\n\n\"Ahem,\" Sophie cleared her throat.\n\nHe suddenly realized he was standing in her way and scampered aside to let her by. She shook her head slightly and her ponytail bobbed from side to side, accentuating her disdain.\n\nAs the bathroom door closed behind him, he noticed Lauren and Elle walk in.\n\n\"Hey Dad! Whatcha doing?\" Lauren asked sweetly.\n\n\"Umm,\" he hesitated briefly in panic, then realized the question was innocent. \"I was just getting ready to catch a football game.\"\n\n\"Oh. Well, the girls and I were wondering if you'd like to play basketball? We've been shooting around and playing HORSE but we really need a fourth. None of our other friends we texted could come over.\"\n\n\"Well, I'm not really dressed for it and I kind of wanted to watch Tom Brady...\"\n\n\"You can go change, silly! And you can set the DVR or just catch the highlights...\"\n\n\"I'm not sure he's feeling well,\" Sophie interrupted behind him to his surprise, having just exited the lavatory. \"I had to wait, like forever, to get in the bathroom.\"\n\nHis stomach dropped at the thought that she had been standing there the whole time.\n\n\"Besides, I don't want to embarrass your dad again, Lauren,\" Sophie continued as she walked past him, slightly bumping his arm. \"Men can have such fragile egos.\"\n\nTom's blood boiled at the insinuation and he instinctively took a step toward her. Lauren glared at him.\n\n\"Nonsense. He looks fine. And he's a good player, he taught me everything I know,\" Lauren said, smiling at him. \"And if you're really so concerned, maybe you guys can be on the same team? Frankly, I don't like all this competitive tension between two of my favorite people.\"\n\nSo...Lauren had noticed some of his awkward dynamics with Sophie, he thought to himself, but she interpreted it as rivalry. In her innocence she had never once suspected his out-of-control infatuation with her friend. She would be devastated if she knew all that had happened. At least I don't have to disappoint her now, he resolved.\n\n\"I'm game,\" he said confidently, flashing a glance to Sophie who shrugged. \"I can catch the highlights later. Just give me a minute to change.\"\n\n\"Awesome, we'll see you outside!\" Lauren responded.\n\nTom ran upstairs to change his clothes. He put on a t-shirt and before slipping on his thin nylon jogging shorts, he considered putting on his jockstrap to restrain his member. Fuck it, he cursed to himself, I can handle this. He grabbed some tennis shoes and trotted downstairs.\n\nAs Tom walked outside, he took a moment to appreciate the lucky find the new house had been. Besides doing a bang-up job on the guest cottage, the prior owners had painted a high school regulation half-court on the driveway, complete with a top-of-the-line in-ground hoop. His athletic daughter had been sold before they even stepped inside. He had hoped it would help draw friends over for Lauren and, despite his anxiety over Sophie, he felt a small sense of satisfaction that it had.\n\nSophie drilled a three as he walked up, demonstrating perfect form on her jumper. She ran up to grab the bouncing ball, then turned and saw him approach.\n\n\"Okay folks. We're playing to 15, two points behind the arc, one point for everything else, single shot on fouls,\" Sophie rattled off the game parameters. \"Lauren and Elle, you'll be shirts, we'll be skins.\"\n\nAs she said it she flicked her suggestive shirt over her head and looked toward him with a nod. He stared at her dumbstruck with his cock beginning to grow. Instead of the full compression sports bra he had seen her flash at a volleyball game, she wore a white spandex top that was just short of being a bikini. Her large breasts were held in individual cups with a deep V in the center exposing considerable cleavage. Thin white straps led from the top of the cups diagonally toward her neck, highlighting her broad, muscular shoulders.\n\n\"Unless your dad is too shy to show off his physique,\" Sophie added, turning toward Lauren with a half-smile.\n\nAs she turned, he saw that the two straps came over her back and crisscrossed below her neck. They continued diagonally to a horizontal elastic band that circled her chest, the only feature that seemed to qualify it as a sports bra. The design made the bra mostly backless.\n\n\"Uh, no it's fine,\" he blurted out while fumbling to take his shirt off and willing his cock to stay down. He dropped his shirt on the grass and walked toward the girls.\n\n\"Looks like you need to get your dad out here more often, Lauren,\" Sophie chided, lightly slapping his ample belly with a back-hand so his fat jiggled. \"This will be good for him.\"\n\nHis face flushed. She was right, of course, but her way of calling it out was so degrading.\n\n\"Okay, that's enough Sophie,\" Lauren pleaded with a smile. \"You guys are on the same team, remember?\"\n\n\"Fine. Let's do this,\" Sophie responded with her game face on. \"Our ball.\"\n\nAs she said it, she threw a hard pass into Tom's stomach. He scarcely had time to react as it briefly knocked the wind out of him, but he still managed to hold on. With his hard-on now gone, he started to dribble and saw Sophie waving for a pass. He bounced it skillfully past Elle who was guarding her and she quickly tossed it in for a lay-up.\n\n\"1-0,\" Sophie called, tossing the ball over to Lauren.\n\nThen she walked toward him and gave him a friendly high-five and a smile. He felt a glow inside, knowing he had done well. They continued to play a competitive game, with him setting up Sophie in the paint and Lauren answering with jump shots. He still noticed Sophie's barely covered physique, but the intensity of the game kept him from getting too aroused.\n\nWith the game 10-10, Sophie took another pass and dribbled toward the net, then faked a shot and tossed it back to Tom behind the arc. He drained it to make the score 12-10. She flashed a huge smile and gave him a tight squeeze around his shoulders from the side. He understood what it felt like to be her teammate, how truly motivating she could be. Pleasing her felt like a million dollars.\n\nHe accidentally fouled Lauren on the next shot. During the free throw, he observed Sophie was sweating through the front of her bra and the outline of her shapely breasts was beginning to show through the thin fabric. He drank in her whole body and became excruciatingly aware of the whiteness of her clothing. Her bra, shorts, shoes and even socks were all the same solid, bright white. When he squinted, he could imagine her nude form, deftly gliding around the court. Her black shirt had originally concealed the striking effect.",
        "Lost in thought, he almost missed Sophie's next pass to him. He caught the ball awkwardly, then dribbled to find an opening. He forced a shot and Lauren was able to chop it away, glancing his arm with her hand. Sophie called a foul, and he went to the line with his twosome leading 13-11.\n\nAs he bounced the ball, he glanced Sophie's way and she clapped twice with encouragement. He noticed her nipples were poking through the white fabric and he felt his breath quicken. He took the free throw and air-balled, cursing himself for getting distracted. He looked at Sophie and she briefly glared at him, then her face relaxed and she patted his butt and squeezed his shoulder. He felt warm inside and wanted to redeem himself. For her.\n\nLauren drilled another long shot bringing the score to 13-13. Sophie began dribbling the ball and looked at him with a nod as if to say, \"it's coming your way\". She began to drive the lane, pulling both Elle and Lauren toward her, then threw a brilliant no-look pass to Tom at the arc. He launched the shot and drained it for the win.\n\n\"Boo-yah,\" Sophie yelled.\n\nThen she ran to Tom, wrapped her arms under his rear and lifted him off his feet. She began spinning around in celebration. He simultaneously felt the pride of victory, the elation of being in her arms and most of all, the deep satisfaction of pleasing her. He felt dizzy from the spinning but didn't want the moment to end. She finally set him down and turned to Lauren.\n\n\"I didn't believe you when you said your dad could play, Lauren. Of course, I'd take you over him any day, but he did well, given his obvious handicaps.\"\n\nThe half compliment took some wind from his sails. He also noticed she still wasn't speaking directly to him, which made him feel like a distant bystander, especially after the intimacy he felt as her teammate.\n\n\"Let's switch it up,\" Sophie said, putting her t-shirt back on. \"Lauren you're with me. Elle you're on skins now.\"\n\nElle scowled at Sophie, obviously uncomfortable.\n\n\"You don't have to worry about those mosquito bites on your chest Elle,\" Sophie chided. \"No one will be looking.\"\n\nTom observed how Sophie could break just as easily as she could build.\n\n\"Hey Sophie, that's mean!\" Lauren jumped in, playing peacemaker. \"Seriously, it's not like we need that to tell the teams apart.\"\n\n\"It's okay,\" Elle conceded, pulling off her t-shirt. \"I'm proud of my body and Miss Beauty Queen over there isn't going to change that.\"\n\n\"Good for you, Elle,\" Tom said, encouraging his new teammate, extending his arm for a reassuring low five. He noticed she was quite flat-chested under her conventional sports bra, but the six-foot blonde girl had a cute face and lithe, willowy figure. In any other circumstance, he would be giving her more than just a glance. But in the presence of Sophie, she was practically homely.\n\n\"Your ball,\" Sophie said, bouncing it to Elle.\n\nElle began dribbling with Sophie defending her, then saw nowhere to go and passed to Tom. Lauren and Sophie switched up on defense and Sophie towered in front of him. Unable to pass back to Elle, he attempted a jump shot. As he rose in the air, Sophie's hand came down and met the ball at the top of his jump. Stuffing his shot, she stole it and drove for an easy lay-up. As she caught the ball coming back down, she chucked it back at him with an intense look, challenging him to try again.\n\nHe felt his stomach drop, realizing he was now her competitor and she intended no mercy. His competitive fire rose, and he determined to challenge her back. Instead of passing to an open Elle, he drove the lane toward Sophie. She blocked him out expertly, then braced to take a charge. He jumped, trying to find a way around her, but her positioning and hulking frame caused him to barrel directly into her. Leading with his left shoulder, he unintentionally rammed her with his full weight, but she stood like a skyscraper and didn't budge. Instead he bounced off and fell to the ground, the ball rolling harmlessly away. As Lauren called an offensive foul, Tom lay on the ground nursing his bruised shoulder.\n\n\"Dad, you all right?\" Lauren asked worriedly.\n\n\"I'm fine,\" Tom responded as Sophie extended a hand down toward him.\n\nHe grabbed it and she yanked him up with explosive force, causing him to thrash forward until she reversed her power and whipsawed him until he stood straight up. Despite being aware of her strength, he was still amazed at how easily she tossed him around.\n\nThe next time Sophie had the ball, Tom was determined to defend her despite his height disadvantage. She gave him a cocky look and dribbled a couple times through her legs, then she turned her back to him to post up. She began backing him down, throwing her firm ass uncomfortably into his mid-section with each step toward the net. After every powerful thrust Tom was sent reeling back, only to regain his balance and try again to slow her. As she closed in on the basket, she jabbed him hard with her hip just as he stepped forward to defend her. He fell hard to the pavement. She turned and made a quick lay-up, then offered him her hand again. He declined and scampered up, then bent at the waist and grabbed his knees, winded from the exertion.\n\n\"Looks like your old man is getting tired,\" Sophie goaded toward Lauren.\n\n\"He'll be fine,\" said Lauren, while she flashed him a look of concern. \"Elle, why don't you defend Sophie for a bit?\"\n\nTom felt the same way he did when Sophie beat him at arm wrestling; ashamed at his inferiority and angry with her for making a spectacle of it. With the taller Elle now defending, Sophie began kicking it out to Lauren, who reliably sank shots from all over the court. Tom was proud of his daughter, but also had a hint of resentment that she had surpassed him. Despite his attempts, he struggled to defend her. He began to feel smaller and subordinate to all three girls on the court.\n\nWith the score 14-3, Sophie dribbled at the arc, while Tom stood in the paint near Lauren, who was sprinting back and forth to get open for a pass. Sophie began to drive toward him. He resolved to draw a charge and use the sacrifice to regain the respect he sensed he had lost. He planted his feet, crossed his arms on his chest and braced for impact. As she began a powerful leap toward him, he closed his eyes and prayed he wouldn't get hurt too bad.\n\nHe was surprised when no impact came. Instead, he felt her hand press down hard into his left shoulder. If he hadn't been tensed for the impact he probably would have crumpled. Rather, he managed to hold himself upright, grimacing with pain. It was the same shoulder he had run into her with. He turned his head to see Sophie's knee near his face as she swung her right arm above the hoop in a one-handed jam. She hung from the rim for a moment, then dropped down. Tom was spellbound.\n\n\"Holy shit!\" Lauren cried in awe, then put her hand to her mouth realizing she swore in front of her dad.\n\n\"Technically that's an offensive foul,\" Elle said seriously. \"But it was so freakin' cool I think we have to let it slide,\" she added with a laugh. \"You guys win.\"\n\n\"I'm close to doing it on my own. But I still need an assist,\" Sophie conceded, then added, \"Just a little one,\" throwing a playful punch at Tom's sore shoulder.\n\nHe winced. Even her light punches hurt, Tom thought to himself, and the verbal jabs too.\n\n\"I have to say, you guys make one heck of a tandem,\" Elle said admiringly to Sophie and Lauren. \"You need nicknames, like maybe Maverick and Goose, or something.\n\n\"Ha! That's funny,\" Sophie responded, recognizing the Top Gun reference. Then she turned to look at Tom and placed her palm on his head. \"Although it's not really fitting. Tom Cruise is like as short as Lauren's dad,\" she laughed caustically. \"He's definitely aged better, though. I'd probably still do him.\"\n\nElle let out a snort and Lauren laughed in surprise. Tom just wanted to hide as she continued dismantling his ego. He turned away intending to grab his shirt but looked back when he heard Elle shout.\n\n\"Hey check it out! Lauren can dunk too!\"\n\nElle had lifted Lauren onto her shoulders and was walking clumsily toward the net. Lauren swung her arms to dunk. It bounced off the rim as Elle swayed precipitously underneath.\n\nTom was surprised to see the back of a head poking through his legs. Hands grabbed his shins, and he was quickly hoisted into the air on Sophie's shoulders.\n\n\"Oh shit!\" he cried out.\n\nHe frantically grabbed under her chin, but she swatted him away with one hand. Then he quickly grabbed the top of her head as an alternative. His stomach knotted up as he looked down. It felt like he was sitting on a moving balcony. Then his cock began to stir as he felt the rush of being fully under the beautiful girl's power. The light brown ponytail hanging between his legs only added to his growing dilemma.\n\nSophie began dribbling the ball with one hand while holding onto one of Tom's legs with the other. In contrast to Elle, her moves were fluid and certain. She approached the other girls and applied a deft spin move, then tossed the ball up in the air and grabbed Tom's unsupported leg. He instinctively released the top of her head to catch it, then easily jammed it home.\n\n\"That's what I'm talkin' about!\" cried Sophie.\n\nShe caught the ball with one hand as it fell, and he felt a firm squeeze on his leg. The familiar sense of warmth washed over him. Despite her constant torments, it still felt good to succeed for Sophie.\n\nAs she walked toward the other girls, he was awestruck at her prowess while balancing his full weight so high on her body. His cock hardened and it began poking into the back of her neck. He tried to adjust backward but Sophie gripped his leg and tugged him forward to maintain balance, shoving his stiff member harder into her neck. It throbbed with the friction.\n\n\"Beat that!\" Sophie taunted with a laugh, palming the ball arrogantly as she extended her arm toward Lauren.\n\n\"My jump shot's always been better than my jam,\" Lauren joked, raising the ball up to shoot.\n\nSophie took a step back toward the net. As Lauren began to pump, Tom extended his arms above his head and waved in a defensive posture. Then Sophie crouched and grasped hard onto Tom's knees. As the ball left Lauren's hands, Sophie leapt into the air toward the ball's path. Tom's hands flew high above the rim and he caught the ball as it came down. Then Sophie landed true, absorbing both of their weights decisively, all the time maintaining her balance. Tom's balls ached from the sudden impact, cutting short his arousal.\n\n\"That's a goal tend,\" cried Lauren with a smile. \"Shot counts!\"\n\nTom felt Sophie bend forward and gently place his feet on the ground, gracefully dismounting him. Then she gave him a smile and a high five. Elle did the same with Lauren, albeit both almost fell down in the process. Elle walked to the grass to grab her shirt and phone.\n\n\"Oh crap, my mom wanted me home thirty minutes ago!\" Elle exclaimed, looking at her phone. \"Can one of you guys drive me home?\"\n\n\"Sophie and I actually need to run to Staples to get some supplies for our European History project before it closes. I can drive.\"\n\n\"Why don't I hang back, Lauren?\" Sophie demurred. \"I can get the slides started to save us some time. If we finish early enough, maybe we can watch a couple episodes of Emily in Paris. I hear the chef character is super sexy.\"\n\nTom's heart stopped He had never been alone with Sophie before.\n\n\"Great idea, Sophie!\" Lauren agreed.\n\n\"I'll do my best to keep your dad out of trouble,\" Sophie joked.\n\n\"Ha!\" Lauren responded as she began walking toward her Camry. As she passed her dad, she whispered emphatically, \"Be nice!\"\n\nTom responded with a \"Who me?\" gesture.\n\nDespite playing along with the lighthearted exchange, Tom was distressed. How would he maintain his composure? He would need to extricate himself quickly. He decided that needing to go take a shower was his best excuse. As he turned to head back to the house, he noticed his shirt was gone from where he left it on the lawn. He looked toward the house and saw Sophie was holding it balled up in her hand as she opened the side door to enter.\n\nThat conniving bitch, he thought to himself, shaking his head. He resolved to talk to her and straighten things out. These games had to end. He thought about the best way to confront her as he walked to the door.\n\nAs he stepped inside, he saw Sophie standing next to the kitchen island, tipping a bottle of Powerade into her mouth. Some of the red liquid was dripping down the sides of her chin and onto her shirt.\n\nThe pose reminded him of the classic Cindy Crawford Pepsi commercial. God she looked sexy, he thought, momentarily forgetting his plan to confront her. He began to feel a slight arousal.\n\nWhen she finished her gulp, she turned and extended her arm to pass him the bottle. He reflexively took it and began drinking, feeling a sense of camaraderie in sharing the beverage. Upon finishing his sip, he screwed up his courage and looked at her.\n\n\"I have a question,\" he started as she cocked her head slightly. \"Why don't you ever address me directly? It's always 'your dad' this or 'Thumper' that.\"\n\nHe felt relieved to get it off his chest.\n\n\"That's funny, I could ask you the same thing,\" Sophie responded haughtily. \"Other than the first time you shook my hand - and right now - you haven't spoken to me directly, either.\"\n\nHe thought for a moment and realized she was right. He was suddenly ashamed of himself. In objectifying her and putting her on a pedestal, he had subconsciously been guilty of the same offense he accused her of.\n\nThen she looked over his shoulder and continued mockingly as if he weren't there.\n\n\"Not that he says much in the first place. And Thumper always seems to be a bit petrified around me. If he would just lighten up and get to know me, he'd learn what a kind and generous friend I can be. I'd give my left foot for a friend - heck, I'd give both feet - if only he'd learn to ask.\"\n\nHe winced as she shamed him for his strange behavior around her.\n\n\"Sorry, I guess I'll have to fix that,\" he responded sheepishly. \"Here's a start. Can you please stop calling me Thumper?\"\n\n\"Okay, I won't call you Thumper,\" she replied with a wry smile.\n\n\"And can I have my shirt back?\"\n\n\"Aww,\" she pouted while looking at the balled-up shirt in her hand. \"Would it make you feel better if I had mine off too?\"\n\nHe stood speechless as she pulled her shirt over her head. Her bare skin and sexy sports bra appeared again. Her nipples were hard and he felt a rush in his loins.\n\n\"Well, maybe you can have it back. But first I have a question. Why have you been avoiding me after games?\"\n\nHe visibly flinched at being called out again. Was he that obvious?\n\n\"I've actually been getting behind at work,\" he answered haltingly, then added optimistically, \"at least I've been there cheering.\"\n\n\"Yet you seem to have plenty of time for Tom Brady,\" she retorted accusingly. \"Well, okay you can have it....\" she held it out to him, \"if you can reach it!\" she added with a grin, raising it in the air above his head while looking at him expectantly.\n\nHe became immediately suspicious.\n\n\"Nuh, uh. Not gonna fall for that one.\"\n\n\"I guess I could just tell Lauren you weren't nice to me,\" she said sarcastically, implying she had heard Lauren's parting instruction to him. But the threat was clear.\n\n\"Fine, I'll try to get it. Then I'm going to go take a shower.\"\n\nHe raised an arm and leapt up. Sophie easily raised it out of his reach, laughing mockingly. Then he tried again, this time with both arms, but with the same result. While he resented playing her game, the act of height comparison and sense of helplessness turned him on even further. His cock hardened while his hormones began to course through his veins.\n\n\"God, you're tall,\" he blurted out, succumbing to his fascination with her height.\n\n\"Don't you mean Goddess?\" she laughed.\n\nTom flushed as she turned the phrase back on him. And because she somehow put into words how he secretly saw her.\n\n\"Want to hear something cool?\" she asked, then continued without waiting for an answer, \"My stats online are a bit out of date...I'm just about 6'5\" now. Apparently, I'm still growing a little,\" she laughed.\n\nTo his horror, his wayward cock bobbed visibly at the revelation. She looked down at his crotch with a smirk.\n\n\"And apparently, little Thumper is too.\"\n\nHis face turned crimson with embarrassment. He realized her pledge to not call him Thumper had been a ruse. Thumper had always been her nickname for his cock, not for him. She had also directly acknowledged his erection for the first time. Despite his prick poking into her several times before, it had seemed like an unwritten pact not to speak of it. Breaking that pact felt like a safety net being breeched and he experienced a falling sensation. Things seemed to be escalating fast and he was losing what little control he had of the situation.\n\n\"I really should go take a shower so I can get back to my work,\" he mumbled in a feeble attempt to rein things in. But his body belied his words, as he made no show of leaving.\n\n\"Okay...\" she appeared to concede, then added, \"if you try one more time.\" She dangled the shirt enticingly toward him.\n\nYielding to her appeal, he raised both hands and jumped, but this time she stepped toward him as she raised the t-shirt. He missed the shirt and landed awkwardly, with his cock poking her lower thigh and his face buried in her armpit. He could feel her wetness on his nose and he caught a whiff of her pungent sweat. She wasn't wearing deodorant. It was the same familiar scent that drove him wild, yet it was as if it had been distilled to its quintessence. He drank in her pheromones and instinctively recognized that her pussy must share the same deep scent. He shuddered as his cock spontaneously humped at her leg.\n\n\"How's that smell?\" she laughed with a quick exhale through her nose.\n\nAwakened from his stupor, he feigned a cringe and backed away, trying to disavow the immense arousal her armpit had given him. Extricating himself from her had taken incredible willpower. He struggled to find a suitable answer and before he could speak, she tossed his shirt high on top of a kitchen cabinet and walked away.\n\n\"Anyway, I really need to start the slides for Lauren and my project on the French Revolution.\"\n\nHe felt sudden relief, but also disappointment, as she swept away the haze of sexual tension. He marveled at her capacity to hold him tantalizingly in thrall, seemingly at will. He was also grateful for her ability to move on from intense and inappropriate situations as if nothing had happened. Any one of dozens of improper moments he had shared with her could have meant doomsday for him, yet she was so nonchalant about it all. She could ease his fears as fast as she could instill them.\n\nSophie walked to the kitchen counter and pulled a laptop out of a large leather handbag. Then she strode into the adjoining living room, sat down on the couch and propped her legs up on the ottoman with her shoes hanging off the end. Finally, she pulled a pillow onto her lap, balanced the computer on it and flipped open the screen. He took that as his cue to leave.\n\n\"Well, I'm going to hit the showers. That was fun!\" he said, trying to follow her nonchalant approach.\n\n\"Ugh, my shoulders are sore,\" she said dramatically. She looked back at him as she reached a hand up and rubbed the bottom of her neck while rolling her shoulder muscles in a shrug. \"I could really use an assist here, teammate.\"\n\nIt took another strong dose of willpower for Tom to resist.\n\n\"That wouldn't really be appropriate now, would it?\" Tom challenged in an uncertain voice.\n\n\"You were the one riding on my shoulders that made them sore,\" she retorted.",
        "She had a point.\n\n\"Touch\u00e9,\" he said, conceding as he walked toward the back of the couch.\n\n\"Exactement! Touche mes \u00e9paules mon petite lapin,\" she responded in a perfect French accent. [Exactly! Touch my shoulders my little rabbit.]\n\n\"Ha!\" he laughed as he caught the double entendre and the oblique Thumper reference. \"Votre fran\u00e7ais est excellente.\" [Your French is excellent.]\n\nTom was genuinely impressed. He had done post-graduate work in France, where he became fluent. He found the language sexy and hearing her speak it so naturally reignited his arousal.\n\n\"Merci beaucoup!\" [Thank you so much!] Sophie answered. \"I just love double entendres. It's sad and ironic that the same expression for a suggestive double meaning doesn't actually exist in modern French.\"\n\nHe stood behind her with a new level of appreciation. Despite her teasing and tormenting, he recognized that Sophie was truly a gifted woman, on many levels. With her, it felt like there was something new to discover around every corner.\n\nHe was momentarily surprised as her hands reached back and lightly grabbed his fingers, then set them gently on her shoulders. Aiming to please, he began to lightly knead her shoulder and neck muscles. He felt electricity run through his body as he touched the bare skin around her skimpy sports bra. She lowered her hands to her laptop and began typing.\n\n\"You'll need to squeeze harder than that for me to feel anything,\" she complained, while continuing to type.\n\nHe put more weight into it, amazed at the firm resistance of her taut muscles. His freckled hands looked tiny on her broad frame and contrasted harshly with her flawless skin. Her torso was so long that he practically had to stand on his tiptoes to get any weight to lever down into his hands. His cock poked lightly into the back of the couch as de did his best to find areas of tension in her traps and delts.\n\nThen a worry crept into his head that Lisa or Lauren might walk in and he would be standing there with his shirt off massaging Lauren's friend -- also with her shirt off. But he convinced himself he would be able to hear them in advance and run upstairs quickly. He was determined to relish the moment.\n\n\"So, what's your project about?\" he asked, with genuine curiosity. The French Revolution topic had piqued his interest.\n\n\"The French political economy during the Reign of Terror,\" she responded, continuing to type.\n\n\"Ah, that's a fascinating era. I once published a paper on it.\"\n\n\"I know. I read it to help prepare for our report,\" she responded in a matter-of-fact way, never looking up from her screen.\n\nHe was profoundly flattered. The girls had probably chosen the topic because of his work. Then he realized it meant Sophie had read his sophisticated analysis and was tacitly showing her respect for his creation. It was hard to pinpoint why, but the revelation added a whole new dimension to his attraction for her. Did he really crave a teenager's esteem for his intellect?\n\nHe sighed and dug his thumbs as hard as he could into either side of her spine, with his fingers on the sides of her neck. As he kneaded, his digits pulled at the narrow bra straps near her neck. He could feel the weight of her breasts through the resistance of the straps. Each time he reversed direction, a slight bounce reverberated through her solid frame. He thought of the large bra cups in the bathroom. He could almost sense her giant tits in his hands and he shoved his hips desperately into the sofa.\n\n\"Ooh, I like that,\" Sophie reacted. \"But you never seem to get it hard enough.\n\nHe flinched, then decided to play along.\n\n\"Is that another double entendre?\" he joked playfully.\n\n\"Hmm, what do you think?\" she said flirtatiously.\n\nShe lifted her hands from the keyboard to her hair and pulled out the rubber band holding her ponytail. Then she tipped her head back and her long tresses cascaded down the back of the couch. He felt the mass of her long hair wisp across the sides of his cock as her locks parted around the bulge in his shorts.\n\nHe involuntarily jabbed his groin into the couch again, then caught her eye looking up at him. She winked, then abruptly returned to her work, tipping her head forward and pulling her hair up to one side with her hand so it curled attractively over her shoulder.\n\nShe's masterful with words and gestures, he contemplated in fascination. He felt like a cat being tempted by a string, having it constantly presented then pulled away. Like she had done with his t-shirt, but rather with his emotions...especially his darkest desires. It was all so absurdly inappropriate, yet her casual attitude somehow condoned it and made him forget all the reasons it was wrong - and dangerous. He was doubly impressed that she could do this while seemingly maintaining her concentration on serious work, as if it took minimal effort to wrap him around her finger.\n\n\"Can you remind me of the name of that worthless paper money they issued?\" Sophie inquired, breaking the momentary silence.\n\n\"Assignats,\" he replied, grateful for the opportunity to help.\n\n\"And which year did the Seine freeze over and cause economic ruin?\"\n\n\"1795.\"\n\n\"And who are some nineteenth century intellectuals that later argued the positives of land redistribution?\"\n\n\"Hmm, there's Thiers. Definitely Guizot,\" he took an academic tone. \"You can of course include Karl Marx in that group.\"\n\n\"Which one of them is he?\" she said, pointing to a small sketch of a man in the bottom corner of her screen.\n\nHe leaned over her shoulder to look and noticed the end of her hair was dangling into her cleavage. The way the hair bent across her breast emphasized its elegant curvature.\n\n\"I believe that's Guizot,\" he answered, trying to keep his voice from shaking.\n\nHe looked down at her generous cleavage and became lost in thought, imagining the shape of her nude breasts.\n\n\"What's my bra size?\"\n\n\"Thirty-eight double-D,\" he answered automatically, then in horror, hastily added, \"would be my guess.\"\n\nHis stomach lurched as she laid his deviant behaviors bare. He quickly turned his eyes from her cleavage and stood back up straight.\n\n\"I also like setting little traps,\" she giggled teasingly, then added more quietly with a sensual tone, \"Pour attraper de petits lapins coquins.\" [In order to catch naughty little rabbits.]\n\nHis body flinched as his guilt was unmasked. Then he considered her words and wondered which trap she meant. The way she just shrewdly outed him for touching her clothing? Or was she suggesting that the clothes in the lavatory had been the trap? Wouldn't she have more naturally changed in Lauren's room?\n\nHe was reminded of a chess game. Was she really planning her moves so many steps ahead? When she awoke this morning, did she plan her outfit and pack her scantiest sports bra, knowing he would be giving her a massage right now? Was he about to fall into another trap?\n\nAs his mind spun out of control, he remained at a loss for words.\n\n\"Do you have a weight set?\" she asked, completely changing the topic. \"Lauren needs to bulk up to fully reach her potential.\"\n\n\"Yeah, we do,\" he answered, relieved to move on as he continued massaging. \"In one of our unopened moving boxes in the basement.\"\n\n\"Great!\" she answered cheerfully. \"You can set it up tonight in that little room on the side of the guest cottage.\"\n\n\"I was...planning to put a TV and recliner in there,\" he said hesitantly, unsure if it was a suggestion or an order.\n\n\"That cottage is too classy to be a man-cave,\" she said, seeing straight through his hesitation. \"Besides, it's not like you couldn't stand to bulk up too, mon petit lapin.\" [my little rabbit]\n\nHe sighed audibly in disgrace. But he knew she was right. She had exposed his frailty in dozens of ways already. The feeble massage was just the latest example. And how could he say no after she caught him diddling with her underwear? She could easily ruin him. He was trapped again.\n\n\"Okay, I'll get it out later and set it up,\" he resigned.\n\nHe heard a slight grunt of satisfaction, but no \"Thank you\". It was clear she had ordered him, not asked. He was torn between the disappointment of sacrificing his man-cave and the odd pleasure of following her direction. He continued kneading her shoulders in flummoxed silence as she typed.\n\n\"Hmm...my feet are sore too,\" she said wistfully. She made a show of pushing each sneaker off with her toes, exposing two long, elegant feet clad in white ankle socks. While continuing to type, she lifted her knee and slid one sock over the other seductively. \"My arches have been killing me...ever since I let you ride me.\"\n\nHis endorphins flowed out of control as he heard her describe the shoulder ride. She said it differently this time. By saying \"let\" it sounded like a privilege she bestowed upon him and the omission of \"on\" made it sound overtly sexual. Did she fully understand the exhilaration that being lifted and under her control brought him?\n\nHe stared longingly at her sexy feet sliding across one other and recalled the intoxicating scent of her ballet flat. His mind associated the twin sensation of his cock wrapped in her silky bra cup and he almost came in his shorts as the tip of his penis grazed the smooth couch fabric.\n\n\"Don't you want to ask me something?\" Sophie posited expectantly.\n\nTemporarily regaining control of his senses, he spoke the first words that came to him.\n\n\"May I give you a foot massage, Sophie?\" He could have asked if she wanted one, but asking for her permission somehow felt more appropriate.\n\n\"Ooh, I thought you'd never ask. Please do.\"\n\nHe stepped around the couch and quickly sat on his haunches facing her, hiding his boner between his legs behind the ottoman. He knew she was aware of his raging erection, but he was still timid about showing it to her. Deep down, he knew his anxiety was not due to prudence. Rather, he was terrified that she would be disappointed by its diminutive size; it was small by normal standards, but it would be truly miniscule in her parallel giantess dimension.\n\nHe took hold of her extended left foot, placed his thumbs on her sole and began massaging. His hands felt like tiny paws on her Amazonian foot. He could feel moisture in her arches, still sweaty from basketball. His thumbs alternately climbed up her foot until they reached her toes. He took each toe between his thumb and fingers, rolling and spreading them to stretch her tendons. He observed breathlessly that her second toe was as long as his pinky.\n\nThen he lowered his hands again and pressed his thumbs into her arches as hard as he could, trying his best to indulge her. Her tense muscles barely compressed, but he heard a low purr emanate from her throat and he felt a spark of gratification at her pleasure.\n\nHe had always liked feet, but it was never his dominant fetish. Yet fondling her high arches and shapely toes was like an epiphany. His cock strained between his legs, newly afire with lust. He was brought back to the memory of the neighbor girl; her face was long forgotten, but the scent of her white socks was implanted deeply in his psyche. Fetishes usually start somewhere, and he comprehended that was his moment.\n\nWith a flash, another long-suppressed memory resurfaced. It was a few years later and the same girl had stood facing him as they compared heights. They were the same age, yet she had experienced her growth spurt well before him. He had felt her breath on his forehead as he stared forward, entranced by her freshly formed breasts at eye-level. He couldn't see her face in the memory, but the blue V-neck sweater she wore was imprinted on his brain. She had seemed proud to tower over him and show off her advanced maturity. He recalled the same feelings that he now had around Sophie: deep inferiority and helplessness, rooted in a sense of fate that nature had somehow made him smaller and subordinate. He envied the girl's precocious growth the way he now envied almost everything about Sophie.\n\nAs he massaged and she typed, he continued to reflect. He had been a short, weak nerd growing up and always took solace in his intelligence, in knowing that someday he would grow up and use it to be successful. Yet here was Sophie, a high school senior with seemingly unbounded mental and physical capacity, running circles around him, an accomplished PhD economist. She was teasing him, trapping him, manipulating his mind, body and senses, all while appearing to use only a small fraction of her faculties. What had begun as lust for her physical gifts was now manifesting into something more complete. Her psychological superiority was even harder to resist.\n\nAs his mind wandered, her knee slowly bent, drawing her leg toward her. Following her foot in reverie, he was cunningly coaxed from a crouch to a kneel without noticing. He suddenly flinched as his hard penis glanced the side of the ottoman.\n\nThen she casually rested her other foot on his left shoulder and sighed with contentment, never looking up from her keyboard. He visibly cringed with pain as the weight of her heavy, muscular leg dug into the shoulder that had rammed into her and served as her vault as she unceremoniously dunked the basketball over him.\n\n\"What's wrong?\" she said, without looking up. \"Does my foot stink?\"\n\nAs she said it, the foot in his hands began to rise closer to his face. He could have tried to resist the force she was applying, but he helplessly capitulated. He trembled with anticipation. Did she understand the deep affect her womanly scent had on him?\n\nHis thumbs continued to dig into the pads below her toes as her foot elevated and finally stopped. The backs of his thumbs nearly touched his lips. In this position, it looked like he was praying to her foot.\n\nThen he shivered as her long toes curled and touched the tip of his nose. Spontaneously he closed his eyes and inhaled a deep breath through his nostrils, only vaguely aware that he had acted on her insinuation. He caught a hint of her sweat, but was disappointed to find her scent mostly overridden by the flowery smell of detergent. He exhaled. As he began to breathe in again, she dexterously clamped his nostrils shut between two of her toes. He gasped, reflexively opening his mouth to continue his breath.\n\n\"Well...does it stink?\" she asked impatiently.\n\n\"I honestly can't smell much,\" he answered in a nasal voice.\n\n\"Then why don't you ask to check my other foot?\" she asked, or rather, instructed.\n\nTom hesitated. It all felt so bizarre, him kneeling in front of his daughter's friend, massaging and smelling her feet. But she was allowing it, didn't that make it at least partly okay? The other reasons to resist suddenly seemed so inconsequential.\n\n\"May I please smell your other foot, Sophie?\"\n\n\"Of course, thanks for asking,\" she said as she continued to tap away on the laptop.\n\nShe lowered her left foot taking his hands with it. Then her right foot rose off his tender shoulder and planted itself along the left side of his face. His cock throbbed as the neighbor girl flashed again in his head, colliding with the reality of his gorgeous muse enveloping his face with her giant foot.\n\nThe inside of her arch absorbed the convex hump of his cheekbone, while the ball of her foot settled into his concave eye socket. Her foot was tilted at an angle with her heel under his chin and the deepest part of her arch covering most of his mouth. The damp fabric felt cool on his lips. The side of her sock compressed his left nostril, and he sucked an uneven breath through the right side of his nose. His hands fell weakly to his sides as her aroma hit him.\n\nThe scent of her sweat was deeper in her arch, closer to the smell of her shoes earlier, but fresher. Blood rushed to his head and tingles ran down his spine. It was the ultimate submissive act to be under someone's foot; it seemed wrong, yet it felt so incredibly right. He leaned his weight into her sole, grinding his cock into the ottoman.\n\n\"You know what would also go great in the new exercise room?\" she said excitedly, no longer concerned about the smell of her feet. \"A Peloton bike! I'm totally buying you one right now.\"\n\nTom's right eye shot open in surprise, his amorous trance disturbed.\n\n\"That's a really nice gift, Sophie,\" he mumbled out of the exposed corner of his mouth.\n\n\"With your credit card, silly!\" she interrupted, looking up from the computer briefly with an eye roll.\n\n\"How did you get my credit card number?\" he asked suspiciously, his body going rigid.\n\n\"Duh! I saw it when you paid for our dinner last week. I have a photographic memory, you know.\"\n\nHis mind whirred. He remembered her commenting about his card helping with sold-out concert tickets. Then he recalled her quizzing him on facts for her report minutes before. She had read his paper. She had to know all the answers already, he thought with disappointment. It had all been a ruse. Part of the trap. He was determined not to fall for it this time.\n\nHe pulled away from her foot so he could look at her with both eyes.\n\n\"I think that's taking it a bit too far,\" he asserted. Then he made the first argument he could muster, relying on the stinginess instilled in him by his Scottish father, \"Besides, it's too expensive.\"\n\nShe looked up again from her work with surprise.\n\n\"What's wrong? Do you not want it?\"\n\nWithout warning, she hooked the back of his neck with her left ankle and mashed his face back into her foot. Then she removed her grip and placed her right foot on the other half of his face in a mirror-image of the other. His head was almost entirely obscured behind her feet. She curled her toes around his hairline and he suddenly felt small, consumed by her feet. With a sinking feeling, his concerns melted away and he again succumbed to the pleasure of her feet. He lifted his hands to hold the sides of her ankles and turned his head from side to side as if bathing in her aroma. His breath quickened and he began to hump the side of the ottoman. He was losing control.\n\nAbruptly, she squeezed her feet together on his face, blocking his breath. With his hips still gyrating into the furniture, he pawed at her hands trying to make space to breathe. She slowly lifted her feet higher in the air, forcing him up from a kneel to a crouch. His cock began fucking air as it rose above the edge of the cushion. Just as his pawing grew desperate, she released her grip. He gasped in oxygen.\n\n\"I was so sure you would hop at the opportunity,\" Sophie said, apparently ignoring his plight to focus on the bike. \"Chubby little bunnies really need lots of exertion.\"\n\nAs she spoke, her right foot pulled off his face and poked into his belly fat near his groin, grazing his hard cock. He bent at the waist, mashing his face hard into her remaining foot. He gripped onto both sides of her ankle to not fall sideways. He could feel her small muscle movements as her foot adjusted to support his uneven weight.\n\nSuddenly her free leg slid quickly between his thighs, causing him to suck in a breath through the corner of his mouth. Her foot wrapped unexpectedly around the back of his ass.\n\n\"I mean you're so plump, you're practically bursting at the seams.\" As she said it, she bobbed slightly, tapping his cock and balls with her shin.\n\nThen he felt increasing pressure in his crotch as her right leg raised. Her left leg angled slightly, and he tipped forward, sliding a couple inches up her foreleg. He gasped at the friction on the bottom of his cock.\n\n\"Plus, if you ask properly, I may even take you on a ride with me.\"\n\nHe sensed his feet getting light as her leg rose. First his heels left the carpet, then his toes dangled in the air, rising slowly and steadily. The rush of surrendering to her strength sped through him as he entrusted her with control. His cock pulsated in his shorts against her leg, desperate to release but unable to find enough friction.",
        "Without looking up from her computer she pulled her left foot back so he fell forward, then she skillfully caught his fall and pushed his head forward while she lowered her other leg partway down. He made every effort not to roll off, desperately squeezing his thighs together on her calf and pulling her foot harder into his face. He felt goosebumps rise as he surrendered to the sense of weightlessness. She repeated the motion a couple times, flopping his weight back and forth nimbly between her powerful legs. He was reminded of the uneasy sensation of riding a mechanical bull, but in slow motion.\n\nThen he felt her leg descending toward the floor. Just as his toes began to graze the fibers of the carpet she stopped, holding him suspended in place. As seconds ticked by, he realized the great strain her quad was under supporting his full weight so far out on her leg. With his open eye he stared at the incredible muscle definition in her upper leg.\n\n\"And once you're getting into a regular rhythm and demonstrating some endurance,\" she continued her case, grunting in her first evident sign of strain, \"you may even find yourself coming to appreciate my gift.\" She sighed loudly as she relaxed her quad and lowered his feet to the floor.\n\n\"So... doesn't that sound hard to resist?\" she asked sensually, looking up from her keyboard with an expectant smile.\n\nBefore he could answer, her feet clamped together roughly on his cock and balls through his shorts. He gasped in a mix of pleasure and pain, and grabbed futilely at her feet.\n\n\"Oups! J'ai attrap\u00e9 un petit lapin coquin.\" [Oops! I caught a naughty little rabbit.\"]\n\nHe tried to move his hips back to escape and pain shot through his testicles as her vise tightened. His mouth opened in surprise.\n\n\"No...\" he said in response to the pain, but it sounded like he was answering her earlier question.\n\n\"That's too bad...I was so sure you wanted it...\" she said, her voicing trailing off erotically.\n\nHe felt her feet slip back to release his balls and he jerked at the sudden friction on his cock. He tried to pump, but her strong muscles trapped him in place. He was awestruck at the prospect of his cock between her sexy feet.\n\n\"Are you sure don't want it?\" she implored again.\n\nMaddeningly, she continued to type. He wanted to answer, but in his stupor he couldn't remember what she was asking about.\n\nHer grip loosened and she moved her feet slightly. A jolt of arousal hit him. He slowly thrusted forward and shuddered as his cock slid slowly between her arches. The fit was still tight, so he grasped the sides of her ankles for leverage. As he tried to move back faster, the hole shrank again to arrest his movement. It was clear she would only let him move at a creeping pace, so he began fucking her feet in slow motion. He couldn't believe what was happening and he visualized the lasciviousness of cumming on her feet. But the halting friction was only enough to keep him on edge.\n\n\"Final chance... do you want it?\" Sophie said, still looking down at her screen.\n\nHer grip released slightly during a forward thrust and he slid quickly through. A bolt of electricity hit him. But her feet clamped down tightly again, holding him in place before he could reverse. He realized she had proffered a taste of what could be earned with his acquiescence. But what was she even asking for, he pondered, his mind had wandered so far away in ecstasy... the Peloton.\n\n\"Yes!\" he answered, praying it was the magic word. He didn't care about the money any more.\n\n\"Tell me you want it,\" she said flatly, a hint of sternness.\n\n\"I want it!\" he exclaimed.\n\nHe saw her lips curl into a satisfied smile as she tapped the keyboard with a flourish. Then she set the laptop and pillow to the side, leaned forward and set her hands on her upraised knees. She looked at him with fire in her eyes.\n\n\"Tell me how bad you want it.\"\n\n\"Didn't you just buy it?\" he asked in a shaky voice, suddenly perplexed.\n\n\"Buy what?\" she asked feigning forgetfulness. Her eyes sparkled with mischief as he looked at her incredulously. \"Oh, the Peloton? I bought it ten minutes ago when I said I did. It arrives Wednesday. I was just finishing the history project.\"\n\nHis mouth opened wide with surprise as he tried to recall her words and pinpoint what he missed.\n\n\"But...\" he started.\n\n\"Shhh...I know what you're thinking.\" She licked her lush lips, pausing to hold his stare. Then she continued slowly in a sultry voice, exaggerating every syllable, \"You're wondering why I didn't ask you my panty size.\"\n\nHis face scrunched in confusion at the outrageous non sequitur. Then his eyes widened with recognition. There weren't any panties in the lavatory... because she hadn't worn any.\n\nSlowly, her knees spread apart like a butterfly. Inch by inch her crotch came into view. He was dumbstruck. A dark, wet spot shone through the white spandex. The moist fabric traced the delicate folds of her labia. He breathed heavily and caught a whiff of the same scent he registered in her armpit, only purer. His cock pulsed between her arches but he still couldn't move.\n\nA thought struck him: she was turned on by this! By him? Even while she appeared to be ignoring him. His unattainable goddess wasn't just taking devious satisfaction in tormenting him, she was getting off on it. The thought drove him insane and his breathing grew ragged.\n\n\"I won't say it again,\" she said threateningly. \"Tell me how bad you want it.\"\n\nAs she said it, her legs closed. He finally understood.\n\n\"I want it like I've never wanted anything in my life before,\" he whispered, his lips trembling.\n\n\"What do you want? Ask me for it,\" she directed, grinding her feet in opposite directions on his cock.\n\nTom visibly jerked from the sudden pleasure.\n\n\"May I please fuck your feet, Sophie?\" he asked desperately.\n\n\"Bon petit lapin.\" [Good little rabbit.] She smiled from ear to ear. He suddenly felt high knowing she approved of his answer. \"But is that all you wanted to ask me?\"\n\nAs she spoke, she subtly spread her butterfly wings to expose her wetness. Her scent hit him, and he lost all inhibition.\n\n\"May I please worship your pussy, Goddess?\" he burst out, baring his soul to her.\n\nAbruptly her legs flapped shut and she cupped his jaw with both hands, pulling his face close to hers, with her wrists on her knees.\n\n\"That wouldn't really be appropriate now, would it?\" she said with sudden sternness, mimicking his words of resistance from earlier.\n\nHis eyes registered hurt and disappointment. She held his gaze, pursing her lips harshly and squinting her eyes with derision. Then he watched as her lips relaxed and her eyes slowly softened, conveying something different. Was it pity?\n\nUnexpectedly he felt her feet shift and he almost came from the surprise, the tension was so thick. Her ankles rotated forward, her long feet pushing his pelvis back several inches. He suddenly felt something grip and surround the base of his cock. She had formed a ring with the clefts of her largest toes.\n\nHe sucked in a breath and looked deep in her eyes. Then he felt the ring loosen slightly and her head gave a tiny nod.\n\nHe pulled back and almost came again as the friction of her toes running up his cock suddenly stimulated him. He thrust forward slowly, savoring the feeling while trying desperately to hold in his seed. But her face was too beautiful, her feet too exhilarating. He fully succumbed.\n\nLike a beast unleashed, he began pumping between her toes furiously. He panted through his nose and his hips quivered as he humped her feet in rapid rhythm, short quick strokes as fast as he could.\n\nShe looked deep into his eyes and spoke with a compassion only the French language could convey.\n\n\"Pr\u00e9cis\u00e9ment comme un petit lapin.\" [Precisely like a little rabbit.]\n\nEvery moment he had spent with her suddenly came full circle. He knew in his heart that his inferiority to her was absolute. Tears formed in his eyes. With his surrender complete, he gave himself to her. His semen began to gush as he stared into her eyes and held still, mashing his groin as hard as he could into her feet, breathing short quick breaths through his mouth. Tears streamed down his cheeks and she sympathetically wiped them away with her thumbs. All of the resentment from her torments seemed to wash away and all he felt was gratitude. For showing him his place. Her fingers stroked the hair above his ears as if she understood.\n\nHe pulled his hips back slightly and thrust himself against her again. Cum streamed out, soaking through his shorts. Another wave hit him, and another, as he came longer and harder than he had ever cum in his life, his eyes glued to the eyes of his goddess.\n\nAs the last drops filled his shorts, he suddenly felt exhausted. A deep sense of peace filled his brain. His eyes melted into hers as his body relaxed on her upraised legs.\n\nLike a book dropping in a library, he heard the kitchen door rattle just out of view. The look in Sophie's eyes didn't change and he was lulled for a brief moment into thinking nothing was wrong. Then reality hit him and with a sudden burst of energy he jumped to his feet and sprinted around the corner to the bottom of the stairs.\n\n\"Hey Sophie, I'm back!\" called Lauren.\n\nHe thought about continuing up the stairs, but stopped. He suddenly wanted to be sure she wouldn't out him to Lauren. He shimmied to the edge of the doorway.\n\n\"Hey Lauren,\" Sophie answered, \"I managed to get all the slides done, they should be sitting on your printer. We just need to glue them to the poster board you just got and we can watch Emily in Paris.\"\n\nLauren's printer was in her room upstairs. He knew there was a chance he couldn't move fast enough to not be seen eavesdropping in his wet shorts if Lauren headed to collect the printouts. But he was desperate to hear whether his life was over.\n\n\"Awesome! You're the best,\" Lauren responded with genuine gratitude. \"Where's my dad?\"\n\n\"I don't know, I think he went to take a shower. He was kind of a sticky mess,\" Sophie said with a hint of scorn. \"For what it's worth he was super nice to me when you left. We totally bonded. You were right, I guess we got off on the wrong foot.\"\n\nTom flinched. She really did love double meanings.\n\n\"That makes me so happy to hear, Sophie,\" Lauren gushed.\n\n\"Oh, and I made him agree to set up a workout room in the guest cottage. He's setting up your old weight set tonight. And,\" she paused for dramatic effect as Tom's heart jumped into his throat, \"you're getting a Peloton!\"\n\n\"Shut! Up!\" Lauren screamed. \"He's usually such a tightwad, how did you manage that?\"\n\n\"Oh, well he totally needs to get in shape,\" she answered. \"So I teased him. That aroused him a bit and he pushed back kinda hard. You know how men get. Then I totally put the squeeze on and I pretty much forced him to blow his wad. I basically get all the credit for ordering it.\"\n\nTom's heart jumped into his throat in disbelief. She's so fucking clever, he thought, and so confident skating on thin ice. Did Lauren understand what she just said?\n\n\"Damn girl,\" Lauren giggled with admiration. \"Remind me to call you next time I want something else from him.\"\n\nTom breathed a sigh of relief at Lauren's ignorance, then felt a flutter in his stomach at the idea of Sophie coercing him again.\n\n\"Only too easy. Anyway, I'm still kinda wet,\" Sophie declared as Tom's hard-on miraculously returned. \"I'll go change back into my street clothes while you get started on the poster board.\"\n\nTom took that as his cue to run up the stairs before Lauren turned the corner. Alone in the master bedroom with the door closed, he bent over, dropped his hands to his knees and hyperventilated.\n\nHe was in so far over his head. He loved his wife and daughter. He enjoyed his job. He had built a good life. He was confident and satisfied with his achievements.\n\nYet he had never felt more uncertain of himself than when he was around Sophie. She constantly kept him guessing. And she was perfect - beautiful, brilliant, talented, tall, strong... She was so damn exhilarating to be around. She filled voids inside him he never knew were empty.\n\nAs his breathing slowed, he decided he was certain of one thing: Her control over him was the most exciting sensation he had ever felt.\n\nWith a sigh, he changed his shorts and walked back downstairs to find the weight set."
    ],
    "authorname": "sub500",
    "tags": [
        "ignore fetish",
        "18-year-old",
        "amazon",
        "athletic girl",
        "female supremacy",
        "foot fetish",
        "footjob",
        "height fetish",
        "lift and carry",
        "sockjob"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/tall-sophie-ch-03"
}