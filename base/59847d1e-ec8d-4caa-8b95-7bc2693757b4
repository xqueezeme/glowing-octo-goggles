{
    "title": "Taking Her Mind Off It",
    "pages": [
        "With a slam of the door and an exasperated huff, Emily kicked off her shoes and tossed herself couchward, her scream of frustration muffled by the cushions she'd buried her face into. Veronica followed, sitting delicately next to her girlfriend and calmly, soothingly pulling Emily's head into her lap. \n\n\"I'm sorry they're like that, babe.\" Despite the relaxing calm of her girlfriend's voice, Emily could hear the rage at her parents buried underneath. Closing her eyes and breathing slowly, Emily buried her face into Veronica's belly relishing in the soothing touch of Veronica's fingernails lightly running along her scalp. \"Just a couple more years, you'll be done with school and you won't have to rely on those assholes for financial support anymore. We can never see them again.\" Veronica's soothing tone made Emily shudder as she nuzzled herself against the soft belly-flesh before her, and for the thousandth time, she found herself thanking any and every higher power for the blessing that was her lover. \n\n\"I just wish my parents weren't such judgmental assholes. Every other word out of their mouths is some passive-aggressive bullshit. I swear they only even bother maintaining our relationship to lord their power over me and make vague disapproving noises about my 'lifestyle choices.'\"' Emily whined, fighting back frustrated tears. As relieved as she was for it all to be over, her anger at the constant gaslighting and judgment, compounded with the knowledge that her parents would drag her and Veronica out for another uncomfortable dinner within the next few months had Emily nearly in tears.\n\n\"I'm sorry sweetheart, will you let me make you feel better?\" Veronica asked.\n\n\"What did you have in mind?\" \n\n\"It's not about what's in my mind my dear, it's about what's in yours. Or rather, what isn't.\" A hungry, seductive smile spread across Veronica's face as she winked flirtatiously.\n\n\"That was really corny babe. But also, I'm listening.\" Emily replied with a giggle.\n\n\"I was thinking I'd treat my sweet little girlfriend to a night of pampering and mindlessness.\" At mention of Veronica's plan, Emily shuddered in anticipation.\n\n\"I -- uh. I t-think we can work something out.\" \n\n\"That's my girl. Last time I played with your head I planted some triggers that I never told you about. We don't have to use them. Would you like to try them? I can leave them a mystery, or if it would make you feel better I can tell you what they are before we get started.\" Something about that, about Veronica holding the keys to her mind like that, with Emily not even sure of what and where the locks were, sounded so deliciously enticing. The idea alone was enough to make her groan in anticipation.\n\n\"I -- nggg I,\" Emily moaned\n\n\"What's the matter sweetheart? We haven't even gotten started yet.\"\n\n\"I want.\"\n\n\"What do you want?\" Veronica asked, leaning forward to enticingly stroke Emily's cheek.\n\n\"N-new triggers. Don't tell me. I'd -- I w-want the mystery. I trust you.\" \n\nVeronica's smile grew wider. \"That makes me very happy sweetheart. Now I want to go slow with you tonight, really build you up. But remember, at any point you can stop it. Even if you're deep under, the moment you feel unsafe you'll be able to snap yourself out, okay?\"\n\n\"Y-yes, Veronica.\" Emily stammered.\n\n\"Good girl. Now, let's get started with a nice, relaxing drink .\" Veronica slid off the couch, gently scratching Emily behind the ears in a gesture that was both condescending and incredibly comforting. Emily couldn't stop herself from leaning into the gentle scritches, then pouted as her girlfriend slid off the couch and headed toward the kitchen. \"Sit back and relax, my love. Watch tv if you like, or read or I dunno, whatever it is you want. I'm not putting any rules on you tonight. This is all about relaxing you. So do it, if you can hmm? For me?\" She clapped her hands together and blew a kiss from across the room, then turned to leave. \n\nWatching from her position on the couch, Emily couldn't help but blink. Was that the trigger? It was certainly an odd gesture, but at the same time it didn't seem to do anything. Maybe it was subtle and would build a little more each time it was used? Or maybe it was time-sensitive and she'd slowly start slipping? Or was Veronica just fucking with her? Despite the frustrating, confusing nature of her girlfriend's behavior, Emily couldn't help but relax. She had given up control, and she knew there was no sense worrying about how and when her induction would come. It was inevitable, and she trusted Veronica more than anyone in the world. Such play wouldn't work otherwise. \n\nWith that in mind, Emily flicked on the TV and allowed herself to slip into a confused, but carefree contemplation. She allowed herself a quick mental checkup while performing one of the many calming breathing exercises Veronica had shown her. She'd developed the technique during one of the many longer sessions she and her girlfriend had taken part in, a way to gauge whether Veronica had started fucking with her head. \n\nIt started with cognitive ability, under her breath Emily whispered the first ten letters of the alphabet backward \"J I H G F E D C B A.\" She murmured under her breath. Satisfied, Emily asked herself her own name, her girlfriend's name, what her relationship to Veronica was, everything seemed normal, no slip-ups there. Mental clarity and sense of self seemed good. Lastly, she checked on her mood. Overall she felt nice, less tense than before, comfortable, content, but not to any extreme degree. She felt like someone with a kind, caring girlfriend who helped her feel better, not an empty-headed hypnotized pet. \n\nConvinced her mind was still her own, Emily returned to doing basically nothing at all. She honestly wasn't much of a fan of TV, but having it on was a nice bit of background noise while she lounged on the couch and tried to keep thoughts of her shitheel parents out of her head. Not long after, Emily felt nails running through her hair. Veronica's nails massaged her scalp with delicious, tingling, comfortingly possessive motions that caused Emily to shiver in delight as her eyes rolled back into her head while eyelids fluttered closed in pleasure. \n\nShe felt so blissfully submissive under Veronica's touch, and couldn't keep a soft coo from escaping her lips. Once again, Emily couldn't help but wonder if such pleasure stemmed from that mysterious trigger. Was Veronica wiping away her thoughts with each stroke of her hand? Erasing them 'til she was just a blank canvass? No, definitely not, Veronica stroked her hair just like that all the time, nearly daily, so it couldn't be a trigger, right? Before Emily could examine the thought any further she was interrupted by Veronica sitting on the couch once more and setting a glass on the coffee table, though Emily didn't bother opening her eyes to check what had been prepared. \n\nSomewhere above her, Veronica shifted. There was the sound of her exhaling breath into the liquid held in the glass, then she leaned down toward Emily. \"Will you sit up and drink a bit for me, sweetie?\" She asked in a honeyed voice.\n\n\"Am I not allowed to drink on my own now?\" Emily put on an air of petulant mockery. What fun was surrendering to Veronica if she didn't make her work for it first? \n\n\"Not tonight, I'm indulging you every step of the way. Open.\" Veronica snapped her fingers at the exact moment the command left her mouth, and suddenly Emily felt doubt and confusion cloud her mind. That had to be a trigger, right? It was a command mixed with an external stimuli, Veronica snapped her fucking fingers, that was the triggeryest trigger that ever triggered and yet she didn't feel any less present, did she? She was confused, definitely confused, really confused but when she ran through her exercises everything seemed fine. She could do the alphabet backward thing, her name was Emily, Veronica was her girlfriend, she was Veronica's girlfriend and occasional hypnotic submissive. It all checked out, nothing seemed out of place, and yet -- warm, thick liquid slipped between Emily's lips, pulling her away from her self-interrogation. It was sweet, with a strong, dizzying, flowery, spicy smell, and no shortage of alcohol. \n\nEven as the concoction flowed past her lips and down her throat like hot, tingly syrup questions echoed through Emily's mind. When the hell had she sat up and opened her lips? Did the command really work? Had the finger-snap been an actual trigger or was that force of habit? Perhaps it could even be a natural submissive desire to do as she was told. The questions kept flowing, it was almost as though Veronica were doing it on purpose, deliberately trying to confuse her into thinking she were hypnotized when she actually wasn't. Wait, that had to be it, right? This was just another layer of Veronica fucking with her. Maybe there was no hypnotic trigger at all, if not then could it have actually been the drink that was supposed to mess with her mind? It was definitely alcoholic, but what if those strong, heady flavors were meant to mask something else entirely.\n\n\"B-babe, what was in that? You didn't drug me did you?\" Emily's voice was weak, quivering, but still somehow deeply relaxed.\n\n\"Oh darling no. Come on, you know me, I'd never give you any weird drug without your consent. It's just alcohol. Do you not like it?\" There was real, genuine concern in Veronica's voice that just helped Emily relax even further, she really was loved, cared for, safe. Fuck her parents, she didn't need them, she had all she could ever need in her Veronica. \n\n\"I like it, sorry. I think my mind is playing tricks on me.\" As though she had been waiting for Emily to utter those very words, a delighted giggle slipped from Veronica's lips. Emily almost opened her eyes then and there to see what the big joke was, but felt too safe and relaxed to bother. \n\n\"That's the idea, isn't it? Who knows, maybe there really is no trigger. Maybe the real hypnosis comes from me fucking with you enough that you simply believe you're hypnotized. Suggestion is a powerful thing, after all. And I'm sure I could get you so rattled and mixed up that you would just open up the gates to your mind. That you would let me right on in to have my wicked way with it. But then again, maybe there actually is a trigger. I'll never tell. Not 'til it's too late, anyway.\" Emily could practically hear the gloating smile which was no doubt plastered across Veronica's face. It found its way into each and every one of her words. Perhaps that was the trigger somehow, could a tone be a trigger? It certainly painted a vivid picture so maybe it -- \n\nEmily's train of thought was interrupted by Veronica's soft, pillowy lips pressing into her forehead in a long, doting kiss. Emily smiled wide at the gesture, it reminded her that the whole point of the exercise was to relax and have fun. She wouldn't have agreed to the whole thing in the first place if she wasn't intending to lose out in the end. Veronica loved her, loved her so, so very much in ways that surprised and delighted her every day. Emily felt that love welling up inside her, warming her from head to toe, pushing away all doubt. She could trust Veronica with her mind, she knew that. She wrapped her arms tight around Veronica's waist and pressed her cheek into her girlfriend's midsection, smiling wide and happy up at Veronica as her eyelids fluttered open to see her girlfriend's angelic face gazing down at her with a loving, protective smile. \n\n\"Feeling a bit better?\" She asked, her voice wrapping around Emily like a warm blanket of care. Emily just nodded, keeping the same silly smile on her face. That was just how Veronica made her feel. \"Let's continue then, can you get on your stomach for me? I want to give you a nice massage to help you relax.\" Emily complied, with a little assistance from Veronica, who gently helped her flip over. Soon her shirt was off, then her bra too, Emily wasn't really paying attention, but Veronica was remarkably deft in disrobing her relaxed little submissive. Emily was about to comment on just how eager Veronica was to get her top off, then those fingers sank into her skin and any protest died in her throat with the heady moan that escaped her lips. \n\nThis was no simple backrub, Veronica had gone for full sensuality. Her nails would lightly trace Emily's spine, just before her hands sunk into her flesh, pressing in firm, gentle circles, only to give way to delicate, wet kisses and licks upon Emily's back, then the nape and sides of her neck. Veronica grew only more adventurous, hands dipping under Emily's skirt to grope her rear and oh so delicately trace her lower lips through the fabric of Emily's panties. There was a rhythm to her motions, in and out, back and forth, up and down, fast and slow. That rhythm was so easy to sink into, to become trapped in. Emily was left panting, lost in dizzy, dreamy, relaxing pleasure. Some tickle of a thought wondered whether or not this was another trigger, but each time the thought began to form some other new touch would send waves of pleasure crashing against her mind then drag her curiosity out with the tide.\n\nSoon, it became crystal clear that if the pleasure continued as it had, Emily would doubtless cum without even removing her panties. The teasing was too great, and she felt so relaxed, she trusted and loved Veronica so much, all of that created such an intoxicating, heavy feeling. Every tickle along her labia and clit, every tweak of her nipples and squeeze of her breasts or ass, every hungry kiss pressed to the soft, sensitive flesh of her neck, every scratch of Veronica's nails carried more pleasure than they had any right to. Veronica was only growing in intensity, Emily was left a squirmy, writhing mess as the caresses became firm, possessive squeezes and thrusts. Veronica's fingers lightly pressed between Emily's lower lips, still through the fabric of her panties as she began to lightly finger-fuck her girlfriend while pinching and teasing Emily's clit even further.\n\nThen, just as the pleasure was getting too great, just as Emily's gasping moans became unceasing, the pleasure stopped. Emily whined nearly as loud as she'd been moaning, begging wordlessly for more. Veronica simply giggled condescendingly, then flipped her girlfriend onto her back, and kissed her forehead once more. Suddenly Emily didn't care about the pleasure anymore. She was filled with love. With emotional fulfillment that drained everything else away, leaving her grinning simply at her Mistress whom she loved so, so much. \n\n\"Feeling better, sweet pea?\" Veronica's voice was a warm blanket on a cold winter night. Emily could only nod eagerly. \"Use your words, silly.\" \n\n\"Y-yuh\"\n\n\"What was that?\"\n\n\"Feel good. Relaaaxed.\" Emily slurred. Veronica giggled.\n\n\"That's my good girl.\" There was such kindness in that voice. It made Emily practically forget she was ever even upset to begin with. A distant voice in the back of her head wondered if the reason she trembled with such delight at being called a good girl was because that was the trigger. The trigger to make her not upset anymore. What was she upset about again? Something to do with her parents? Her brow creased in thought as some lingering kernel of frustration, anger, self-doubt began to stir within her. The distress must have shown in Emily's face, because a gentle hand stroked her cheek, drawing across her eyelids and sweeping her hair to the side along her forehead as Veronica soothingly shushed her. \n\n\"That's enough of that then, my love. You're not supposed to be thinking about them tonight, remember? You're not supposed to be thinking at all.\" Emily was about to make a noise of understanding when those lips were once again lowered to kiss her on the forehead, and the world became fluffy love and sweet dreams and cuddly softness once again. The dazed little submissive giggled for no reason in particular other than that she felt it the right thing to do, then nuzzled into Mistress' lap.\n\n\"My my, aren't you a silly one tonight? A sleepy, dopey dreamy girl for Mistress. Tell me, little one, have you figured it out yet? The trigger?\" \n\nBlinking up at Mistress, the sleepy, dopey, dreamy girl took several moments to process the mouth sounds and turn them into thoughts. Trigger. That was the something Mistress was doing to her to make her a sleepy, dreamy cuddleslut, right? Wait, had Mistress been doing things to her silly, slutty head? She decided to do the thinky thingy to try and find out if it was working. \"J... I.... uh. A, B? No. Z, Y?\" \n\n\"What are you babbling about? Oh, is that your little thought exercise? I must have you pretty deep then for you to be that lost. How cute. Why don't you just give up?\" The girl below Mistress only shook her head in response, trying her hardest to piece things together.\n\nThe alphabet part wasn't making any sense, but still, it had to be fine right? The relatio--, the relat--, the re--, the Mistress parts all made sense. She began to speak slowly deliberately, hanging on every word as she felt them out in her mouth. \"Mistress' name is Mistress, Mistress is my Mistress, I -- um. My name is... uh. My name is...\"\n\n\"Oh, we don't need that tonight, my pet. Tonight you're my Emmie, okay? Or just Pet, if you please.\" Mistress kissed her forehead again. Emmie's world faded and blurred. She stared emptily at Mistress, through Mistress, not really perceiving anything other than the love she felt saturating her entire body. Her mouth hung open, drool trickling down her chin. \"That's a good girl.\" Mistress sounded so happy, that made Emmie happy. Emmie liked being Mistress' good girl. Liked it when Mistress was happy. When Mistress was happy, Emmie was happy.\n\nSome part of Emmie was telling her that 'Emmie' was only a name Mistress used when teasing her, but that part was very quiet, completely inaudible over the loud parts which told Emmie to be a good, silly, dopey, dreamy pet for Mistress. How could she not listen to that voice? It was right. Mistress loved her so much, and she loved Mistress so much and Emmiepet didn't have a care in the world. She wasn't even sure she knew what a care was.\n\n\"I'm going to give you one last chance to resist now, even though I know you don't want to. But that's part of the fun, isn't it? It's the kisses, silly. Whenever I kiss my special, pretty little pet on her cute little forehead I suck out her thoughts and replace them with love and comfort. Isn't that nice?\" All Emmie could do to respond was nod along happily.\n\n\"Mistress is very happy that her Emmie is enjoying it. Now sweetie, Mistress wants Emmie to do something for her. Can she beg Mistress to finish her off? To kiss her brain away then fuck that little pussy of hers 'til the last of her thoughts just gush right out?\" Mistress had the nicest, prettiest voice. And such a good smile. Emmie would do whatever she asked.\n\n\"M-M-Misttress. Please Mistress. Please kiss my brain away. I want to be your mindless Emmie toy. Your love-drunk, empty-headed slutpet. Please take everything away. Fuck Emmie's needy little pussy 'til there's nothing left.\" Emmie whined, lifting her head up closer to Mistress in an attempt to make the kisses come sooner. To make Emmie cum sooner. Mistress just giggled chidingly and pinned Emmie back in place. \n\n\"Stay still, silly pet.\" She crooned, stroking Emmie's hair dotingly. Emmie nodded silently, suppressing a whimper as she did all she could not to squirm with needy anticipation as those soft, perfect lips that would make her a perfect, soft-headed little toy hung above her enticingly. She breathed heavily, panting with impatience as Mistress simply gazed down with an unrelenting stere of smug patience. She was enjoying keeping Emmie like this, on the edge of bliss, trembling with need but so safe and cared for. Emmie couldn't break Mistress' gaze as the molten desire burned in her core, and just as she felt a hot, salty tear trickle down her face Mistress grinned wolfishly. Emmie whimpered. ",
        "Mistress' thumb gently brushed Emmie's tear away, and with one last decadently sensual stroke of her hair, Mistress lowered herself, lips puckered. Her lips made contact with Emmiepet's forehead, and her brain was filled with all-consuming love. They stayed like that for some time. Emmie didn't know how long. Emmie didn't know time. She knew Mistress, and those lips on her forehead pressing into her, greedily drinking up all her smart-girl thoughts and replacing them with the raw bliss of being a beloved, empty-headed pet. As long as Mistress was with her, everything was good. Mistress was love. Mistress was safety. Mistress was comfort. Mistress was pleasure. And Emmie was nothing but the feelings Mistress put into her. \n\nEmmie didn't notice when the kiss ended, she just stared up at Mistress with big, glassy, happy, loving, awestruck eyes. Mistress was here! Mistress was with her Emmie pet. Mistress was the prettiest, perfectest Mistress ever, and Emmie loved Mistress more than Emmie could ever know or understand. Just seeing Mistress made Emmie happier than she'd ever known. Her big, dopey, silly, dreamy smile was sure to let Mistress know that. \n\n\"Feeling good, sweetheart? Can you hear me?\" Mistress' voice cut through the foggy haze in Emmie's silly brain, she smiled wider at the pretty sound and lolled her head up and down in a clumsy, lovedrunk nod. Mistress only smiled bigger in response, and gently reached her hand down to wipe away a trickle of drool which had trickled from Emmie's big, silly smile. Emmie shuddered at the touch, nuzzling her head toward Mistress' hand like a sleepy, needy kitten. Mistress giggled and began petting Emmie's hair and cheeks. \"What a good girl you are. I love you Emmie.\" Emmie shuddered in pleasure at the words. She loved being good. Being Mistress' special one. Being loved. And she was so, so loved. Emmie knew that 'cause it was Mistress' love that her thoughts had to wade through whenever she tried to think them. She didn't want to think anymore though, sometimes when she did that she would have bad thoughts. Emmie just wanted to drown in Mistress' love.\n\nEmmie slowly became aware that she was being held, being cradled in Mistress' strong, perfect, protective arms. Then Emmie realized Mistress' fingers were buried deep in her dripping, needy pussy. She'd forgotten all about what a messy, horny girl she was. But Mistress had so many different ways to fill Emmie with her love, and Emmie wanted all of them. Needed all of them. Mouth agape, eyes glazed Emmie rutted herself against those fingers as more and more pleasure rocked through her body. She was so happy. Emmie was a good girl, Mistress' good girl, and nothing could make Emmie happier than giving everything to Mistress. A guttural, animalistic moan escaped her lips as she collapsed completely limp against Mistress' strong, perfect, beautiful body. She was a Goddess, and Emmie was nothing but a vessel for her to fill.\n\nMistress was groping, stroking Emmie's body in eager, indulgent lust. Squeezing her breasts, running hands along her thighs and nails down her back. Her mouth was claimed, owned by Mistress' hungry mouth and lips and tongue. Emmie could see nothing but Mistress' perfect face, hear nothing but her loving coos and devoted kisses. Could smell nothing, could taste nothing, could feel nothing but Mistress. She broke the kiss, gaze devouring Emmie's body, like the cherished, special possession she was. Emmie smiled a heavy, dazed smile at her perfect love. The Goddess who filled her with that perfect love. Emmie's eyes fluttered in pleasure from merely seeing that face. \n\n\"Is that a glimmer of thought I still see in my girls eyes?\" She asked. Emmie didn't really know what that meant. She didn't understand much but love and praise and ownership and pleasure. But something deep inside her told Emmie to nod along, which she did clumsily, giggling innocently. Mistress squeezed her tight and wrapped Emmie's mind in her pretty voice once more. \"I guess I'll need to fixed that, hmm?\" And then there were lips on Emmie's forehead, and light, airy love filling Emmie's head-head. It flowed into her, taking her so high and light and special, then condensed into thick, sappy liquid that coated her every feeling. And then the fingers were inside Emmiepet again, fucking her silly, drippy slit. Mistress' pretty pretty eyes captured Emmie's own blank, glassy ones, keeping her from looking anywhere else. \n\nEmmie wouldn't have it any other way. There was just pretty and fucking and loving and smiling and kissing and Mistress. And it felt so good, so good to lose herself in Mistress. So good to be fucked by Mistress. \"You'll be cumming soon, won't you?\" Emmie knew what cumming was. \n\n\"Yyyyy....\" Emmie slurred. Mistress giggled. \n\n\"Shhh, it's okay. Don't try to talk, sweet one. Just relax.\" Emmie obeyed. Mistress' fingers quickened. The pleasure grew, if she had the presence of mind to understand, Emmie would know she was on the precipice of climax. And in that moment, Mistress kissed her forehead, again and again and again, punctuating each and every thrust.\n\nEmmie was --\n\nEmmie w--\n\nEmm--\n\nPet w--\n\nPleasure ripped through her body, flooding her every sense, mixing with that thick, delicious love which saturated every cell in her body. And she sank into a blissful void.\n\n- - -\n\nA little glimmer of thought surface through the thick, sticky haze of her mind, like sticking a straw in a jar of peanut butter and somehow blowing a bubble. She saw Mistress, gazing down at her, still stroking away at her soft hair. Mistress had never stopped, she knew that. Before it had just been feelings, just been condensed bliss. She'd felt that hand, along with so many other things, but not understood what any of it was or what any of it meant. Recognizing the little flicker of consciousness in her beloved's eye, Mistress's smile broke all the wider.\n\n\"Hey Emmie.\" That's right, she was Emmie. She'd forgotten. \"How's my girl?\" Emmie's tongue felt too heavy to speak through, so instead she just smiled wide and moaned in relaxed pleasure. She was rewarded with a delighted little giggle. \n\n\"I'm glad you enjoyed yourself. You were down for a couple hours, but I'm not particularly tired yet. Would you like to come up to me, or do you want to sink once again and be my good, sleepy girl some more? I promise either way I'll keep you right here in my arms all night.\" Emmie didn't need to spend even a moment thinking that over. She knew what she wanted, and suddenly found the strength to squeak out one faint word.\n\n\"More.\" She breathed. Mistress smiled, and brought her lips to Emmie's forehead once more.\n\n \n"
    ],
    "authorname": "SapphicSounds",
    "tags": [
        "lesbian",
        "gentle",
        "hypnosis",
        "loving",
        "pet",
        "intelligence loss",
        "brain drain",
        "gentle femdom",
        "consent",
        "consensual"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/taking-her-mind-off-it"
}