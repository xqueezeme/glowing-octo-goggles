{
    "title": "New Horizons Ch. 31-38",
    "pages": [
        "Author's Note: We've come to the end. Just one more installment after this one. Thank you everyone for supporting the story. This one meant a lot.\n\nChapter 31\n\nQuinn sat in her quiet rehearsal room going through Diego's notes from the day. She knew she had been distracted and it wasn't her best rehearsal, but she couldn't stop thinking about Alex and their almost declaration in the theater earlier that week.\n\nShe had only seen the blonde a couple times since the interview and it was always late at night once they were both too tired to do much talking. She was impatient to have more time with Alex\u2014 a feeling that was becoming more and more common for her.\n\nShe could feel a sort of tension from the other woman since the interview happened, but she supposed that was to be expected considering how it all went down and the amount of time Alex had spent at Janet's office since. Luckily it was finally Friday and she was going to get an uninterrupted evening with the blonde.\n\n\"Knock, knock,\" she suddenly heard from the other side of the room.\n\nCourtney was standing in the doorway, but she looked so different that Quinn had to do a double take and her eyebrows shot up at the woman's unusually put together look.\n\n\"I just saw Diego leave so figured I'd stop in. Busy?\" Courtney asked.\n\n\"No, come on in,\" Quinn replied and stood up so she could greet the red head. \"But only if you tell me why you look like a hot secretary.\"\n\n\"Actually, I was going for a smart, confident graduate student who's been pressured into law school by her conservative parents but is about to break out and realize her real talent is in photography,\" Courtney said as she posed.\n\nQuinn pretended to give Courtney's outfit a thoughtful look. The woman had on a black pencil skirt, heels and a tight, white blouse. Her unruly red hair wasn't completely tame, but the low bun it was currently in was definitely more pristine than Quinn had ever seen it.\n\n\"Now that I'm really looking at it, I can totally see that,\" she replied as she finished her assessment of Courtney's outfit. \"It's like Law &amp; Order meets Carol.\"\n\nCourtney let out her huge, bubbly laugh. \"It's like you're in my head.\"\n\n\"Why exactly are you dressed like that?\" Quinn asked next.\n\n\"I have to send in a taped audition for a film. It's a long shot, but Mark was helping me in one of the rehearsal rooms. Anyway, you staying here or do you want to walk out with me?\"\n\n\"I was just about to pack up and leave so I'll walk out with you,\" Quinn replied and moved around the room to grab the few items she had with her. \"Want a snack? I have extra from today.\"\n\n\"I think I'm going to adopt you. What kind of snack?\" Courtney asked as they made their way down the rehearsal room hallway and towards backstage.\n\n\"Goldfish crackers and this thing they call a granola bar but looks more like a block of chocolate.\"\n\n\"I'll take the granola bar.\"\n\nQuinn reached into her bag and handed Courtney one of the fake, sugary bars. The red head didn't wait a second to rip the wrapper open and take a bite. \"Fuck yes, fuck. That tastes like a snack you got in daycare in the 90s. I fear for our health if we hang out too much.\"\n\n\"It's already bad enough with Alex who only seems to consume bagels, coffee and bourbon,\" Quinn replied.\n\n\"I'm afraid to tell you that you'll have to learn to cook if you ever want something other than takeout with that one. At least I can make a few dishes. The last time Alex cooked for me, I cut my lip on some sharp plastic in the potatoes.\"\n\nQuinn laughed as they both made their way down the dark aisle of the theater. \"I can't even believe Alex cooked once,\" she joked.\n\n\"She lost a bet on when Snoopy would appear in the Macy's Day Parade. She called it way too early. So, she had to cook one of our Thanksgiving dishes. Just one. And there was plastic in it.\"\n\n\"That's kind of endearing.\"\n\n\"Says the girlfriend,\" Courtney said back in a playful tone. \"It caused light bleeding.\"\n\nQuinn slowed her pace as they made their way into the lobby. She and Alex hadn't used that label yet, but her stomach was suddenly erupting in tiny little butterflies and she had to admit that she liked the sound of it rolling off Courtney's tongue so easily.\n\nCourtney stopped walking when she noticed that Quinn had slowed.\n\n\"Oh, hey. Sorry. I didn't mean to make you uncomfortable. I don't know if you're even there yet with Alex. See, this is why I need Paige with me at all times,\" Courtney rambled on, pointing to her mouth. \"No censor.\"\n\n\"No, it's ok. We haven't used the girlfriend word per se, but I'm absolutely there. I think she is too?\"\n\nQuinn didn't mean for the last part to be a question, but suddenly talking about this with Alex's best friend was making her nervous. She understood the implication behind what Alex had said to her after the interview and she could see how the blonde looked at her, but she could also be telling Courtney something else.\n\n\"I can see that she is too,\" Courtney replied quietly. \"I hear the Times interview on Monday didn't go very well.\"\n\n\"Have you seen her?\"\n\n\"No, but we spoke on the phone. She didn't tell me she's worried\u2014 because it's Alex\u2014 but I could tell she is.\"\n\n\"She's been with Janet all week trying to fix it.\"\n\nCourtney nodded at Quinn's comment but stayed quiet for a moment as she looked around the lobby.\n\n\"Don't let her push you away,\" she finally said and Quinn knew she couldn't hide the surprise that flashed across her face at Courtney's words. \"Because after this media fiasco, I guarantee she will. Besides setting the feminism movement back 20 years, Sloane also did a number on Alex. Maybe I shouldn't be saying this, but ever since her mom died, she's been pretty closed off emotionally and it just got worse after Sloane. But I also haven't seen her this happy. Ever. So, I'm just asking you to be patient.\"\n\n\"Is this the best friend talk?\"\n\n\"No. I know you won't hurt her. I'm worried about Alex hurting you. Don't let her go into her Alex cave. I know I told you once before, and I'm sure I don't need to tell you now, but she's worth it. Once you get through the stubborn, emotionally constipated part, that is.\"\n\nQuinn simply nodded to Courtney in reply, not trusting her voice at that moment. In any other situation, Courtney's funny descriptor would have made her giggle. But suddenly, her throat felt tight and a wave of emotion rolled through her. Because she agreed\u2014 Alex was worth it. She just hoped Alex felt the same way about her.\n\nWhen Quinn didn't respond, Courtney looped her arm into the brunette's and guided them towards the exit that would take them to the street.\n\n\"She's never taken me to Coney Island and she knows how much I love hot dogs. Your boobs must be fantastic,\" Courtney joked and Quinn finally felt a smile spread across her lips.\n\n\"They are,\" she replied.\n\nOnce they were outside, Quinn could see Mikey leaning against one of the stone pillars at the base of the theater steps.\n\n\"Oh, you should come meet Mikey,\" Quinn said, pulling Courtney in the direction of her friend. \"Just don't talk about my boobs. He hates that topic.\"\n\nMikey slid his phone back into his jacket pocket when he noticed the two actresses approaching.\n\n\"Hey Mikey, this is Courtney. Courtney, this is Mikey. My manager and best friend. In that order. Courtney is Alex's best friend,\" Quinn said, turning to Mikey.\n\n\"Finally, the best friends meet! They've been keeping us apart for too long. Does Quinn keep you in a cage like Alex does with me?\" Courtney asked Mikey and reached out so she could shake his hand.\n\n\"Uh, no?\" Mikey responded in a confused tone as he shook Courtney's hand. \"But it's nice to meet you.\"\n\nCourtney gave Mikey an exaggerated look, bringing her eyes up and down his body before letting out a small whistle. \"Damn, Mikey. I'd climb up all over you if something wasn't telling me that we're both friends of Dorothy.\"\n\nMikey just blinked at the red head for a moment before he seemed to be able to form words. \"Oh god, there's two of you,\" he finally replied as he looked between Quinn and Courtney.\n\n\"Mikey only likes to use the muscles in his face a few times a day,\" Quinn said to Courtney. \"So, please excuse his lack of smiling.\"\n\n\"I see why you didn't want me to bring up your boobs then,\" Courtney replied in a dry tone. \"Anyway, I need to go. But thanks for the chocolate\" she said to Quinn who just nodded because she was too busy laughing at Mikey's expression.\n\nBefore leaving, Courtney turned to Mikey and gave a small salute. \"And it was nice to meet you, Mr. Mikey.\"\n\nMikey turned back to Quinn with his eyebrows raised as soon as Courtney was gone, but Quinn ignored the judgmental look.\n\n\"I didn't know you were coming by,\" she said instead.\n\n\"I thought I'd walk you home,\" he replied and motioned for them to start walking in the direction of Quinn's apartment.\n\n\"Are you going to carry my books too?\" Quinn asked and batted her eyelashes at him.\n\n\"You don't have any books,\" Mikey replied as they made their way down the street.\n\n\"I have a bag.\"\n\n\"I'm not carrying it.\"\n\n\"You're a terrible manager,\" Quinn said in a huff as she threw her bag over her shoulder in a dramatic fashion.\n\n\"Yes, poor baby. Anyway, I come bearing gossip, but if you don't want it, I won't tell you.\"\n\nQuinn let out a gasp. \"But you never have gossip. Who does this gossip pertain to?\"\n\n\"Me,\" he replied.\n\n\"And you never tell me anything juicy about yourself! You officially have my attention, Mr. Rubio. Speak.\"\n\n\"Well, I thought since you were the orchestrator\u2014 which we still need to talk about, by the way\u2014you should know that I have a date with Tim tonight.\"\n\n\"Delvin?\" Quinn shouted and stopped walking.\n\nMikey grabbed her arm and forced her to keep walking. \"Yes. Now please stop shouting before everyone in Manhattan knows.\"\n\n\"I think you should be thanking me, not admonishing my volume.\"\n\n\"So, it was you who gave him my number then?\"\n\n\"Who else would have? I told you I was going to. You can call me Yente,\" she replied. But when Mikey just gave her a confused side glance, she let out a sigh. \"It's the Jewish matchmaker in Fiddler on the Roof. You really know nothing about theater.\"\n\n\"That may be. But one of the city's biggest theater investors is going out with me tonight so apparently it doesn't matter.\"\n\n\"That's just because you have that pretty face.\"\n\n\"Thank you. I think,\" Mikey said as they turned down Quinn's street. \"Anyway, I have other gossip too. I just came back from Janet Jameson's office and Alex was there.\"\n\nQuinn's face instantly morphed from teasing to concerned upon hearing Alex's name in conjunction with Janet's.\n\n\"I assume you heard about what happened at her interview?\" he asked.\n\n\"I was in the lobby when it happened. The asshole completely blindsided her with his questions.\"\n\n\"It sounds like it. They didn't go into a huge amount of detail on what the guy asked while I was in the room, but it sounds like he was asking personal questions?\"\n\nQuinn kept her eyes ahead and simply nodded. She knew she couldn't tell Mikey anything about Sloane even if he was her best friend. She wouldn't betray Alex's trust about something so intimate.\n\n\"Apparently earlier this week, Janet offered to have the story squashed, but Alex wouldn't let her,\" he said.\n\n\"What do you mean?\" Quinn asked and stopped walking as they reached her apartment building. \"Are you coming up?\"\n\n\"No, I need to get ready,\" he replied. \"Anyway, Alex said that it would hurt your show to squash the entire feature and she didn't want Janet to do that just to spite the paper. And Maggie and I agree.\"\n\n\"So surprised my publicist agreed with that,\" Quinn replied sarcastically and rolled her eyes. \"What about Alex's interview though? What is Janet doing about that?\"\n\n\"Janet seems to think she's done enough to scare them out of running that. It was an unethical interview and she seemed pretty confident it won't run.\"\n\n\"Did Alex seem ok?\"\n\nQuinn finally asked the thing she wanted to know since he mentioned the blonde's name. Mikey looked at Quinn for a long moment before he responded.\n\n\"Are you in love with her, Quinn? Because I've seen this face before.\"\n\n\"Yes,\" she replied in a quiet voice and she was grateful that Mikey's soft expression wasn't holding his usual judgement.\n\n\"And have you told her?\"\n\n\"No.\"\n\nMikey gave her another long look before he nodded. \"I might wait on that. If you want to know how she was, she was pretty stressed out by the whole situation.\"\n\nQuinn could feel her stomach tighten at his words. She couldn't ever remember caring about Jenna's welfare like this\u2014 but with Alex, it was as if she could physically feel the other woman's stress and she just wanted to take it away.\n\n\"She's coming over tonight,\" Quinn said instead of talking through everything that was going on in her head.\n\n\"It sounds like she's been looking out for your interests all week with Janet,\" Mikey said. \"I like her.\"\n\nQuinn's head suddenly snapped up at Mikey's comment. It wasn't just that he had never said that about Jenna\u2014 he had never said that about any woman she had ever dated.\n\n\"You do?\"\n\n\"She's trying to make it seem like she's looking out for the show and the interest of the theater. But anyone who knows the truth can see through that fa\u00e7ade. Have fun tonight, Q.\"\n\nIn an unusual show of affection, Mikey leaned up to the step Quinn was on and gave her a quick kiss on the cheek.\n\n\"You too. Tell Tim hello for me,\" she replied as he stepped back down the stairs and onto the street.\n\n\"I certainly will. He's taking me to the symphony. I feel so cultured,\" he said with a small laugh.\n\n\"Look at you, Maestro. That should be fun,\" Quinn replied. She let out another exaggerated sigh when Mikey just furrowed his brow at her. \"Maestro? The name for the conductor of a symphony? Mikey, do you know anything outside of fashion?\"\n\n\"I don't hear you complaining when you need help getting dressed.\"\n\n\"Fair enough. Be safe tonight. And remember a condom. Bye!\"\n\nQuinn turned and ran up the stairs before she could hear a response or see his eye roll at her latest, inappropriate comment. And she couldn't help but laugh at Mikey's earlier, very accurate statement, that she was very similar to Courtney because she knew the red head would have laughed.\n\nAs she walked into her apartment, she finally took out her phone so she could text Alex. Based on her conversation with Mikey, she assumed the woman was out of her meeting with Janet and she wouldn't be interrupting at this point.\n\nQuinn: I'm home now. Come over any time.\n\nShe added a kissing emoticon to the end of her text and sent it before moving to the bathroom so she could take a quick post-rehearsal shower before Alex got there.\n\nBefore she stepped into her shower, she looked at her phone and saw that Alex had responded.\n\nAlex: Leaving Janet's office in a minute. Can't wait to see you.\n\nQuinn knew she was smiling at her phone and probably looked like a lovesick fool, but she couldn't bring herself to care. She was a lovesick fool. She just hoped she wasn't the only one.\n\nChapter 32\n\nWatching Quinn as she neared an orgasm had become one of Alex's favorite sights. While she let Alex take the reins in the bedroom for the most part, the brunette also wasn't afraid to own her own pleasure and take what she needed, when she needed it.\n\nAnd in that moment, as she straddled Alex and rode three of the blonde's fingers, Quinn was certainly taking what she needed.\n\n\"I'm so close, babe. So close,\" Quinn panted out as she bounced up and down on Alex's extended fingers in rapid succession.\n\nAlex did her best to stay still so Quinn could direct the pace, but it was hard with Quinn's body slamming down onto her own, not to mention how distracting it was to see Quinn's perfect tits bouncing above her with each thrust.\n\nQuinn let out a series of loud moans before finally leaning forwards so her hands were on either side of Alex's face. She changed her pace so she was pushing down in long, slow thrusts and Alex could feel the woman's walls begin to clench around her fingers.\n\n\"Fuck, I'm coming. Oh god,\" Quinn screamed out and pressed her face into Alex's neck so her words were muffled, apparently not able to hold up her head anymore.\n\nWhen the last of her orgasm seemed to have rolled through her, Quinn allowed her body to slump down on top of Alex's. Alex didn't mind the weight and just brought her arms around the woman on top of her as Quinn caught her breath and nuzzled further into Alex's neck.\n\n\"You are so sexy,\" Alex whispered and turned her head so she could give Quinn a long, sensual kiss on her cheek.\n\n\"Mmm, I'm glad you think so. Because I have something I want to talk to you about,\" Quinn replied into Alex's neck, but she didn't move away from her spot.\n\n\"Interesting. Usually the first thing you want to do after sex is either eat or sleep\" Alex replied, rubbing her hands up and down Quinn's bare back.\n\n\"Good point. Let's eat and then talk.\"\n\n\"That bag of food I brought is likely cold by now.\"\n\n\"I still love you for bringing me food.\"\n\nIt seemed to take a minute for the larger meaning behind her words to register with both of them, but once it did, Alex could see Quinn's eyes widen at what she just said.\n\n\"I'll grab us some clothes,\" she added quickly and moved off Alex at lightning speed.\n\nAlex barely had time to process what just happened before Quinn was across the room and opening a drawer on her dresser. But as Quinn's words settled in her mind, Alex thought she could actually feel her heart ramming against her chest.\n\nThere had been so many times when she had almost told Quinn how she felt, but each time, she became too scared to actually let the words out. So when Quinn came back to the bed and handed Alex a pair of leggings and a tank top, she didn't say anything about the brunette's almost-declaration from before.\n\n\"You could just give me one of the many pieces of my own clothing you're hoarding here,\" Alex said as she pulled the tank top on, helping to move them away from the much more intimate direction their conversation almost went.\n\n\"That would give you the opportunity to wear them home. I'm not that stupid,\" Quinn said back, but she still didn't make eye contact with Alex as she threw on a pair of shorts and a worn t-shirt. \"Come on. Let's go heat-up the food and sit on the couch.\"\n\nBefore Alex could even respond, Quinn was out of the bedroom. She couldn't tell if Quinn's behavior was because she was trying not to pressure Alex into declaring anything too soon, or if she wasn't actually there yet and didn't want Alex to read into her slip-up.\n\nBut the other woman's words from earlier in the week continued to play in her head and deep down, she knew how Quinn felt. I care about you. The words they repeated to each other felt like a declaration of some kind, even if the words themselves didn't match tradition.\n\n\"Babe, I've already eaten an egg roll. You better come have something before it's gone,\" Quinn shouted from the kitchen.\n\nAlex let out a small laugh and pulled on the leggings Quinn gave her. Declarations could wait for now. With the impending Times article making her stomach a nervous wreck, it probably wasn't the best time to add one more thing to her already crazed mind.\n\nFor now, a night of Chinese take-out with Quinn would be enough.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\n\"I'm so full. Don't let me eat anymore,\" Quinn said as she stretched out on the couch so her feet were resting in Alex's lap.\n\n\"We don't have to talk. You look like you're about to fall asleep,\" Alex teased as she began lightly rubbing Quinn's feet.",
        "Quinn let out a small moan at the feeling and closed her eyes for a moment before opening them to look at Alex.\n\n\"No, sleep can wait. I want to talk.\"\n\nAlex leaned back on the couch and pulled on Quinn's legs so they were fully draped across her.\n\n\"What would you like to talk about?\" she asked as she resumed her massage of Quinn's feet.\n\n\"That feels amazing,\" Quinn sighed as Alex's hands began to move up to massage her calves. \"But your talented hands won't deter me. Don't get me wrong\u2014 our sex is amazing and I have no complaints about how we just spent our evening. But we can also just talk about things. You haven't really said anything about your meetings with Janet this week or about the interview. And I guess I just want you to be able to open up to me.\"\n\nAlex instantly regretted the greasy food she just ate at the mention of Janet's name. She had spent her entire day at the woman's office, trying to deal with the aftermath of the Times interview. Not that Janet really needed her there, but Alex's anxiety kept her from the theater and she just hung around waiting for updates from Janet.\n\nShe knew she hadn't talked much to Quinn about it, but once they were together, the last thing she wanted to think about was work.\n\n\"Thank you, Quinn. I guess I'm not used to having someone to talk to like this,\" she said quietly before letting out a long sigh. \"Basically, Janet has spoken with Jeremy's editor and she's confident they won't be running my interview. In fact, it sounds like your interview is being handed over to a new writer.\"\n\n\"How confident is she?\" Quinn asked with a furrowed brow.\n\nIt's not that Alex wanted Quinn to worry, because she certainly didn't. But the fact was, she's had very few people in her life who truly cared about what happened to her and the concern that flashed across the brunette's features meant something significant to Alex.\n\n\"Janet said it was handled and that I don't need to worry. I'm still worried. But I've seen that woman scare more than one publication into bending to her will so I have to believe she's right. Or I'll drive myself crazy.\"\n\n\"Mikey told me that Janet offered to have the story pulled and you refused to let that happen.\"\n\nAlex looked down at her work on Quinn's feet and shrugged. She switched to the other foot before she finally responded.\n\n\"Your show deserves the promotion.\"\n\n\"Is that the only reason? My show?\" Quinn asked in a quiet voice.\n\nAlex's hands paused on Quinn's feet and she brought her eyes up so they could look at each other. \"You know it isn't,\" she replied. \"Though with Jeremy being taken off the story, you'll be relegated to the much smaller theater section,\" she added.\n\nAlex gave herself an internal shake. She knew how she felt. She knew what she wanted to say to Quinn. But the closer they got to that moment, and the more opportunities that were presented to her, she just felt herself crawling back into herself. She was so scared and not because she didn't think Quinn shared her feelings. She was scared of what it would mean to lose someone she opened her heart up to again. Images of her mom flashed across her mind and she pushed them away before they threatened to overwhelm her.\n\n\"Well, whatever your reasons were, thank you,\" Quinn said with a small smile on her face. \"But I'd rather lose that one feature than have him run anything from your interview.\"\n\n\"They've agreed to send Janet an advanced copy. We'll be able to review the copy before it goes to print.\"\n\n\"If you're sure,\" Quinn replied, but before she had even finished the sentence her eyes were closed again.\n\nAlex didn't want them to fall asleep in the living room so she gently put Quinn's feet back on the ground and helped to lift the brunette off the couch.\n\n\"Come on, Nemo. Let's go to bed.\"\n\nAlex encouraged Quinn to lean on her as she guided them back to the bedroom and got the other woman under the covers. Quinn was asleep in a matter of minutes so Alex crawled in next to her and allowed her eyes to soak in every inch of the woman's face.\n\nQuinn looked so peaceful when she slept. With her pale skin and dark hair sprawled across the pillow, she looked regal and almost untouchable.\n\nAlex had tried so hard to keep her own stress from Quinn all week and as she looked down at the woman sleeping so peacefully, she was glad she had. Quinn didn't need to burden herself with the ghosts of Alex's past\u2014 not with her own opening coming up soon.\n\nShe bent down to place a soft kiss on the other woman's forehead before she pulled the covers around herself. Janet, Jeremy Hart and every other thing that had kept her from sleep all week finally left her mind as wrapped herself around the brunette and in no time, she was lulled to sleep by the now familiar scent of Quinn Collins.\n\nChapter 33\n\nQuinn was so used to waking up to an empty bed when she was with Alex that she was surprised when she could still feel the warm body of the woman next to her.\n\nThough that surprise lessened when she looked over at the clock on her bedside table and saw that it wasn't even seven yet. It wasn't until she sat up slightly that she realized the reason she woke up was buzzing on her nightstand.\n\nAs she retraced her memory of the previous evening, she could remember waking up in the middle of the night to have unbelievably hot sex with Alex and then falling back asleep in a heap of covers and sweat. Her phone sounded off again on the nightstand and she internally groaned at whoever it was. Anyone who knew her, knew not to call or text Quinn before ten in the morning on the weekend.\n\nWhen she heard the vibration stop, she finally forced her eyes to fully open so she could grab her phone and see who the sleep disruptor was. But it wasn't just one missed call. It was four missed calls\u2014 all from Courtney\u2014 plus, three text messages.\n\nCourtney: Hey, Quinn. Please call me. I've been trying to reach Alex but she's not answering. Its urgent. She needs to call me.\n\n \n\nCourtney: Wakey, wakey. Have Alex call Janet now, please.\n\n \n\nCourtney: I'm going to try calling you.\n\n \n\nQuinn read through the texts with an increased dread. She glanced over at Alex's sleeping body and her heart clenched at the peaceful look on the other woman's face. She didn't know what Courtney needed to tell Alex, but the urgency of the texts couldn't be good, nor could her mentioning Janet's name.\n\nQuinn grabbed the shirt she had thrown to the side of the bed last night and quickly threw it on her body. She hopped out of the bed as quietly as she could and made her way to her living room so she could call Courtney. She figured whatever news the actress had, it would be better if she told Alex instead of her waking up to a handful of urgent and confusing texts. She sat down on the couch in just her underwear and called Courtney back.\n\n\"Finally,\" Courtney said into the phone the moment she picked up. \"You two are really hard to get ahold of.\"\n\n\"It's 6:30 in the morning. I think everyone is hard to get ahold of this early. What's going on?\" Quinn asked.\n\n\"The feature on your show came out. Paige woke me up this morning when she saw it\" Courtney said quickly.\n\nFor a moment Quinn just opened and closed her mouth. There were almost too many questions going through her head to pick just one.\n\n\"Wait, what? You mean the Times feature?\"\n\n\"Yes, I guess you could say that one.\"\n\n\"But it's not supposed to come out for another week.\"\n\n\"Well, it's out and it's not exactly a feature on your show. It reads more like a gossip scoop, and it's in the Post. Not the Times. I'm sure Janet has been trying to reach Alex. But she needs to call her. Now.\"\n\nQuinn didn't want to ask, but she knew she needed to if she was going to prepare Alex accordingly.\n\n\"Tell me what it says,\" she said to Courtney after a beat.\n\n\"I'll send you the link. It's online as well,\" Courtney replied in a more serious voice than Quinn had ever heard from the woman. \"But Quinn\u2014 it's not good. For either of you. I'm sorry. I don't know what Janet can do now that it's out there.\"\n\n\"How bad?\" Quinn asked in a whisper.\n\n\"It's sensationalized garbage. But Simon won't think of it that way.\"\n\n\"I need to go wake Alex,\" Quinn said, but she couldn't seem to get her legs to work.\n\n\"I'm sending you the link now. Read it first. And Quinn?\"\n\nQuinn was still too stunned to form many words so she just made a noise to indicate she was listening.\n\n\"Please take care of her,\" Courtney said. \"She's going to need you right now.\"\n\n\"I will,\" Quinn whispered back. \"Talk later, Court.\"\n\nIt took only a few seconds before her phone was vibrating again and a text from Courtney came through with the link to the online version of the story. When she clicked on it, she was taken to some section of the Post called The Scoop.\n\nQuinn cringed when she read the first headline on the page.\n\nSapphic Success: How one Off-Broadway Theater Company Changed their Fortune. By Jeremy Hart.\n\n \n\nThis was clearly not going to be a feature about her show and everything about Alex and her management of the theater, which was the exact thing Alex didn't want to have happen. The photo wasn't even of Quinn\u2014 it looked like some old photo of Alex in front of the theater. Quinn forced herself to take a breath and read on.\n\nIn a time when memes have replaced dialogue and \"binging\" and \"the weekend\" go hand in hand, New York's once thriving theater scene has become a relic of our past.\n\n \n\nA recent survey from 'New York Today' found that both Broadway and Off-Broadway ticket sales have dropped dramatically in recent years. Off-Broadway companies have been hit particularly hard without the advantage of tourism dollars and have seen a decrease in attendance by almost 30% over the past decade. \n\n \n\nBut where others are failing, one New York City theater company is thriving. \n\n \n\nHorizon Group Theater Group\u2014 an Off-Broadway company started in 1995 by Manhattan-based theater investor and director Simon Anders\u2014 has seen a surge of new revenue, sold-out shows and a loyal audience base of millennials. In just five years, the theater has seen an increase of 40% in ticket sales and a dramatic 65% increase in attendance from the 18-34 age group.\n\n \n\nSo, what is the secret to their success?\n\nWell, it's not a \"what\" at all, but a \"who.\" Meet Alexandra Anders: Horizon Theater Group's Managing Director and the daughter of Simon Anders. \n\n \n\nWhile Ms. Anders may not have the artistic hand of her father, she certainly has a business one. Beginning with the theater in 2010 she has made multiple changes to Horizon's business model.\n\n \n\nWhile the theater has notably seen a spike in revenue with Ms. Anders at the helm of operations, it's truly the introduction of new, modern programming that can be attributed with Horizon's latest surge in attendance.\n\n \n\nMs. Anders' own role within the theater has been a core influence on their shift in programming. This year has even seen her taking over the theater's historically popular Winter Series, which features three new works from emerging artists.\n\n \n\nBut perhaps it's more than Ms. Anders' financial savvy or eye for the future that has her theater barreling through the mid-town competition. A source close to Horizon granted the Post an interview and gave us insight into some of the darker secrets lurking behind the theater's curtains.\n\n \n\n\"Alex Anders has an eye for talent. But she has a stronger eye for a pretty face. Her choice of shows and rentals is a direct reflection of her relationship status with the latest actress to come through their doors.\"\n\n \n\nMs. Anders' latest choice in programming comes in the form of Quinn Collins, a former runway model who has turned her best-selling book, 'Model Behavior', into a one woman show. And according to our source, Ms. Anders choice to include that show in Horizon's Winter Series, may not be completely unbiased.\n\n \n\n\"Everyone in the theater knows they're dating. Alex saw her show in a festival last year and set her sights on Quinn. We'll see what happens when the show closes and she moves on to her next actress,\" said our source.\n\n \n\nA relationship within the confines of a business is not the most unusual thing to hear these days. But given what we've learned about Ms. Anders' enduring pattern, it begs to be asked: is something sinister happening at Horizon?\n\n \n\n\"Considering her leadership role in the company, the ethical nature of these relationships is suspect,\" our source says. \"And you won't hear about the ones that didn't end well. The Anders family does a good job keeping them out of the court and media.\"\n\n \n\nThough Ms. Anders refused to answer our questions on the subject of her workplace affairs and settlements, she did sit down for an interview on where she sees Horizon going in the future.\n\n \n\n\"I want Horizon to be at the forefront of the new theater. One that is accessible and relatable to everyone in New York, and not just the elite.\"\n\n \n\nTake note of Alexandra Anders, Broadway. This theater maven is coming for your dollars\u2014 and your leading lady.\n\n \n\nModel Behavior opens Nov. 27 at Horizon Theater Group, 240 W 52nd St.\n\nBased on what Courtney said, Quinn expected it to be bad, but not that bad. She quickly read through it again and she knew there was little she was going to be able to say to Alex to make this ok.\n\nAs she walked back to her bedroom, Quinn mentally rehearsed how she would wake up Alex and tell her, but when she entered the room, Alex was awake. She was sitting against the headboard with her phone in her lap and she was just staring down at it.\n\n\"You read it?\" Quinn asked as she slowly moved back into the room.\n\nAlex nodded as she continued to stare down at her phone as if in a daze. Quinn moved over to the bed and crawled back onto it. She didn't want to smother Alex, but she also didn't want her to be alone so she simply put her hand on the other woman's leg.\n\n\"I don't know what to say. I'm just so sorry, Alex,\" she said quietly and when Alex didn't move her leg, she kept her hand there.\n\n\"I don't get it,\" Alex replied in a hollow voice. Quinn stayed quiet as Alex sat there like a statue. \"What happened?\" she asked, finally bringing her eyes up to Quinn's.\n\nHer face was paler than Quinn had ever seen it and she couldn't remember ever seeing the blonde's freckles stand out so starkly against her skin. Her eyes were still slightly widened, as if stuck in shock.\n\nBoth women looked down at Alex's phone when it suddenly vibrated.\n\n\"It's Janet,\" Alex said as she picked up the phone and read the text message. \"She wants me to come to her office.\"\n\n\"What about your dad?\"\n\nAlex rubbed her hands over her face in the same way she had earlier this week in the theater. Quinn wished there was some way to make this better, but had no idea how, especially considering she couldn't offer to go with Alex. Not after what the article implied.\n\n\"He doesn't get up this early on the weekend. Most likely he hasn't seen it yet. I need to go to Janet and then get to the theater.\"\n\nAlex's voice was so small\u2014 and the melancholy that settled itself over the room so thick\u2014 that Quinn felt her hands begin to shake.\n\nAlex seemed to notice because she put her phone down and took Quinn's hand that was still resting on her leg into her own.\n\n\"I'm sorry you got pulled into this, Quinn. You left one media scandal just to be brought into a new one. I am so, so sorry for that.\"\n\n\"Hey,\" Quinn said as she moved closer to Alex so she could gently cup her chin. \"You did nothing wrong. Besides, I'm barely a blip in this story. I'm just worried about the fall out for you.\"\n\n\"This was supposed to be your story. About your show. How did this happen? Why is it in the Post?\" Alex asked again.\n\n\"Don't worry about my show. I already have multiple other interviews lined up next week. And we still have the gala announcement.\"\n\nQuinn watched as Alex picked up her phone again and looked at the article for a few moments before tossing it to the end of the bed.\n\n\"Who was the source he kept quoting?\" Quinn asked tentatively, not wanting to upset Alex further but too curious to hold it in.\n\n\"I don't know.\"\n\n\"Do you think it was Sloane?\"\n\nAlex just shrugged, but the dark expression her face took implied she definitely thought Quinn's guess could be accurate.\n\n\"They can't just make things up with some unnamed source and then make it seem like you were just being uncooperative.\"\n\nQuinn's voice was suddenly raised in her frustration on Alex's behalf. But she knew that even if the story was retracted for false claims or libel, the narrative was now out there.\n\n\"Technically, he didn't make anything up,\" Alex responded.\n\n\"He made it sound like some systematic behavior when it so obviously isn't.\"\n\nAlex didn't respond, but just continued to sit on the bed in silence. \"I have to go,\" she finally said. \"I need to get to Janet.\"\n\nQuinn wished Alex would say more, but she understood she was in shock and probably hadn't even processed what happened yet. Nothing would really come to light until she talked to Janet anyway so Quinn decided not to push her.\n\n\"I know,\" Quinn said instead. \"I'll grab you some clothes that aren't leggings.\"\n\nBut before she could move off the bed to go to her closet, Alex grabbed Quinn's hand. Quinn felt like her heart was being painfully squeezed when she looked up to see such a helpless expression on the blonde's face.\n\n\"I don't know what will happen when I talk to my father. I'm not sure when I'll be able to see you. But I'll text.\"\n\nQuinn lifted her hand so she could gently push Alex's hair behind her ear before bringing it down to interlace their fingers again.\n\n\"I'm honestly just happy you didn't have a total freak out and kick me out of the apartment already.\"\n\n\"It's your apartment.\"\n\n\"You know what I mean.\"\n\nAlex brought their joined hands up to her lips and placed a soft kiss on Quinn's knuckles. \"I won't lie to you. My first reaction was to run out of here. But this article doesn't change the way I feel about you.\"\n\n\"I hope you know it doesn't change the way I feel about you either. That article is disjointed, homophobic trash masked in some kind of investigative reporting.\"\n\nA small smile crossed Alex's lips for a moment before it disappeared again. \"I don't know that everyone else will read it that way but thank you for supporting me. I've never had that.\"\n\n\"Now you do. But I really should try to see what pair of pants I can find for you that don't have holes in them,\" Quinn said and hopped off the bed so she could rifle through her overcrowded closet.\n\n\"And preferably a shirt that doesn't have a dinosaur on it,\" Alex said, looking down at the tank top Quinn had given her the night before.\n\nTwo minutes later, Quinn was coming out of her closet with a simple blouse and a pair of black pants. She set them down on Alex's lap and then leaned down so they were eye level.\n\n\"I know today might suck. But I'm here if you need me. For anything.\"\n\nShe then leaned in and placed a soft kiss on Alex's lips. The moment their lips touched, Alex's hand came up to gently cup Quinn's cheek. They didn't deepen the kiss, but they did stay pressed against each other for another moment and Quinn savored the feeling, knowing she might not see Alex again for a few days.",
        "She finally broke the kiss and moved her face away from Alex's, but as she looked into the other woman's eyes, she felt an overwhelming wave of emotion hit her. Alex's pain felt like her pain. And perhaps she had never really been in love before, not even with Jenna, because she felt a longing to shield Alex from what was to come.\n\nBut she knew she couldn't fix this. And she knew she couldn't tell Alex how she was feeling in that moment. Not when the blonde was about to face Simon.\n\nQuinn cleared her throat and put everything she wanted to say but couldn't on a shelf in her mind. \"I'll go make some coffee you can take with you,\" she said.\n\n\"Thank you,\" Alex replied softly.\n\nQuinn noticed the thickness in the other woman's voice and she was slightly relieved she wasn't the only one feeling something intense.\n\nQuinn simply nodded and turned to her bedroom door, once again swallowing the thing she wanted to say, but didn't.\n\nChapter 34\n\n\"Please, dear. Just sit down for a moment.\"\n\n\"I don't want to sit, Janet. I want to know how something like this happens. How did it even end up in the Post?\"\n\n\"I'm going to get to the bottom of this, but I can't until the editor at the Times is at the office and it's not even nine yet on a Saturday. I don't even know if he's in today.\"\n\n\"They don't get email on their phones? They don't have phones? Call them. Email them. Get to the fucking bottom of this,\" Alex shouted.\n\nWhen Janet just leveled a calm look at her though, she took a deep breath and moved over to one of the chairs across from the publicist's desk.\n\n\"Thank you,\" Janet said when Alex was finally sitting down. \"I don't know what happened. The only thing I can think of is that Jeremy took the story elsewhere when he was told he couldn't print it at the Times.\"\n\n\"He can do that?\"\n\n\"Not ethically. But it looks like he freelances for both publications. The Post gives more leeway to gossip and he probably was able to sell it to them easier since that's his beat there.\"\n\n\"He's a gossip columnist?\" Alex asked, sitting up straighter.\n\n\"Not at the Times. They don't have a gossip section.\"\n\n\"Well that would have been good to know,\" Alex replied.\n\n\"I only found that out after the fact.\"\n\n\"It's so bad Janet. My father will never forgive me for this,\" Alex said and her quiet voice was a stark contrast to the angry tone she had used a moment before, but she suddenly felt deflated. As if everything she had worked for was coming down around her.\n\nJanet stood up and came around the desk so she could take the chair next to the one Alex was sitting in. She gently put her hand on Alex's arm, but it didn't feel as comforting as Quinn's did earlier.\n\n\"I promise you, it's not as bad as you think. Most of it is quite flattering. He doesn't even mention your sexuality until close to the end.\"\n\n\"It's in the headline, Janet. And it doesn't matter if the beginning is flattering. This is the exact thing that will set my father off. Someone else taking credit for the success of his theater.\"\n\n\"Your father cares that his shows are selling out. This certainly won't hurt that. In fact, it may even help. Even someone as obtuse as Simon will understand what happened here.\"\n\nAlex knew that wasn't true but decided not to argue with Janet about that point when she needed answers.\n\n\"He only included one of the quotes I gave him about the theater. And nothing from his interview with Quinn. Which is enough to showcase to my father that I did the interview but not enough to prove it wasn't supposed to be about me.\"\n\n\"I know,\" Janet replied in a patient voice.\n\n\"And half the things he claims aren't even true!\" she added in another loud voice. She wanted to get up to pace the office again, but she forced herself to stay in her seat.\n\n\"I know that too, dear. Which is why I'm meeting with our legal team this morning. I can't undo the damage already done, but I can fight them on the article staying online and I promise you, there will be repercussions.\"\n\nAlex allowed her breathing to even out again. She felt like she was on a roller coaster of emotions that went from angry to defeated in the span of a minute.\n\n\"Who do you think their source was?\" she finally asked.\n\nJanet let out a long sigh before she answered. \"I don't know for sure, but it's not hard to guess.\"\n\n\"Sloane.\"\n\n\"She's the only one who has that kind of inside knowledge.\"\n\nJanet looked out the glass door of her office and motioned for someone to wait, but Alex couldn't see who it was from the angle of her chair.\n\n\"My legal team is here and I need to meet with them. But before I do, I need to know what is true and what's not from the article. I already know about Sloane. The other actresses he mentioned\u2014\"\n\n\"Why does it matter who I've dated?\" Alex asked and she could feel her anger rising again.\n\n\"Because he wrote about it. And now we have to address it.\"\n\nAlex took another long breath and closed her eyes so she could calm her racing heart before she answered. She hadn't felt this tense since everything went down with Sloane and she should have known it would all come back to haunt her at some point.\n\n\"There were no other actresses. Just Sloane.\"\n\n\"Until Quinn Collins?\"\n\nAlex leveled her gaze with Janet but didn't say anything. Denying her relationship with Quinn felt completely wrong and a betrayal to what they shared. But she was also having trouble admitting to it and it wasn't until that moment that she realized why.\n\nShe may not have been the reason Sloane didn't get cast by her father, but she had made the messy decision to enter into a relationship with a woman at work. And now she'd done it again even though she knew the repercussions of it coming out would be detrimental to her career.\n\n\"I see,\" Janet said quietly. \"And that's it?\"\n\n\"I'm not some kind of lesbian predator.\"\n\n\"I know that. You are your mother's daughter. Now go. Talk to your father. I'll call you soon.\"\n\nAlex reluctantly lifted herself out of the chair. \"If you don't hear from me by five, send a search party,\" she said sarcastically.\n\n\"I will, dear,\" Janet said with a kind smile before Alex turned and left the room so she could face her father.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nAlex checked her phone again as she entered the theater. She hadn't received any communication from her father yet. On any normal day, that wouldn't be unusual considering her father's disdain for even the smallest form of technology.\n\nShe had never received a text from him in her life, but on urgent things, she at least got a call. Today, Simon Anders had been eerily silent and she couldn't blame the early hour anymore.\n\nThe administrative office was quiet when she got there, which was normal for a Saturday, but she could see light coming from under her father's closed office door and knew he was there. She thought about going to her own office first so she could have a moment before facing him, but she also wanted to get this conversation over with, so she walked to his office and knocked.\n\n\"Come in,\" he called out from the other side in his clear, baritone voice.\n\nAlex took one final breath before turning the knob and opening the door. Her father was sitting at his desk, looking impeccably fresh in his expensive suit, and looked up at her casually as if nothing was amiss.\n\nBut Alex knew her father better than that and assumed whatever he was really feeling was simmering just under the surface of this fake, calm fa\u00e7ade.\n\n\"Alexandra. What do I owe the pleasure?\"\n\nAlex slowly sat down in the chair across from his desk and stared at him. She knew he was playing a game with her, but after enough years with the man, she also knew that he had the patience to continue this game until she was squirming in her seat. To avoid that waste of time, she decided to just be direct.\n\n\"Have you read the Post?\"\n\n \n\n\"What section? I read many,\" he replied and casually leaned back in his desk chair.\n\n\"Father, you know what I'm talking about. Did you read the entertainment section?\"\n\n\"Oh, I'm sorry, Alexandra. You need to be more specific with me. I assume, you're speaking of the unsanctioned interview you did with Jeremy Hart?\"\n\nSimon's face, which was passive only a moment before, took on a hard expression the moment his little game was over.\n\n\"It wasn't supposed to be about...any of that,\" Alex said, stumbling over her words.\n\n\"Tell me what it was supposed to be about. And then you can tell me why I had no knowledge of it happening.\"\n\nAlex would have given anything to be transported out of that office and sent to literally anywhere else in the world. But she took a breath and willed herself to keep her voice steady as she spoke to him.\n\n\"It was supposed to be a feature on Quinn Collins' show. And in the Times, not the Post. I told you about it. Janet thought it would be good for me to give a couple quotes on the Winter Series as a whole. I didn't mention it since it didn't seem pertinent. The larger story was supposed to be about her. Not me. And we had no idea he was freelancing. He took the story to a new outlet when the Times said no to printing it.\"\n\n\"So, your intention was not to take credit for the success of my theater?\" he asked in an icy tone.\n\n\"Of course not, father. You read the article. He didn't even have named sources.\"\n\n\"If it was not intentional, then it was just unforgivably careless. You are the managing director here. Not the face of the theater. You don't give interviews.\"\n\n\"I know that father, but\u2014\"\n\n\"I can't for the life of me understand why you would ever be so clueless. Especially now that we've finally gotten past your last mistake.\"\n\n\"I didn't make a mistake. Sloane fucked me over and you know that,\" Alex said in a raised tone.\n\n\"Language, Alexandra. And it doesn't matter. The fact is, it still happened. At least that one had kept quiet. Until now. Now, I have a PR disaster on my hands.\"\n\n\"Ultimately he said that Horizon is leagues beyond the other venues in New York. That's not the worst thing,\" Alex said, but she knew she was grasping at straws considering the other implications the article made.\n\n\"Yes, by your talented hand,\" Simon replied in a sarcastic tone. \"And on the matter of Ms. Collins show\u2014 I have no problem pulling it at any time if it will embarrass my theater. Until it closes, I hope I don't even see you look her way. I will not repeat the past any more than you are already making me. Is that clear?\"\n\nAlex felt like a child again and could only nod. She hadn't felt this close to crying from her father's words in years, but she wasn't going to let him see her do that. She took a quick breath through her nose and forced herself to swallow it down.\n\n\"Now if you will excuse me, I need to take care of this,\" Simon said.\n\n\"How?\" Alex asked.\n\n\"I have a call with a PR consultant in a moment and we will devise a plan.\"\n\nAlex let his words sink in for a moment as her mind raced around their implied meaning.\n\n\"But Janet handles our PR,\" she said slowly. She had a sinking feeling she knew where this was going.\n\n\"Not anymore.\"\n\nAlex didn't respond right away because her mouth had physically dropped open. \"You're firing Janet?\" she finally asked.\n\n\"She no longer handles our PR. Now I need to make a call,\" he said and pointed to his door across the office, indicating that she needed to leave.\n\n\"You can't just fire Janet. We need her,\" Alex said in desperation.\n\n\"I can do anything I want. This is my theater. Go.\"\n\nThere was nothing Alex could do to reason with her father when he had that stubborn look on his face so she ungracefully got up from her chair and began to leave the office before she heard his voice again.\n\n\"And Alexandra?\"\n\nHe didn't continue speaking until she was fully turned to him again.\n\n\"I'll be the emcee at the Winter Gala. I suggest you focus on the behind the scenes needs for now.\"\n\n\"But the Winter Series is my program\u2014\" Alex began to argue before Simon put up his hand, effectively cutting her off without even saying anything.\n\n\"I think you've gotten enough unwarranted credit for one year, Alexandra. The Winter Series needs to be about these productions. Not your personal life. Though clearly, one of those shows can't exactly be separated from it at this point.\"\n\nAlex knew that if she opened her mouth now, she would say something that all but sealed her fate as Horizon's forever theater manager. At this rate she knew her chances of securing Rick's job were slim, but she also didn't need to make things worse for herself by saying what she really thought of her father.\n\nWhen she didn't respond, Simon just gave her a small smile. \"That will be all.\"\n\nHe turned his attention back to whatever he had been reading on his desk without giving her another look. Alex refused to react his cloying smile so she left his office without turning back.\n\nAs Alex got back to the door to her office, she suddenly felt like her legs might give out and her breathing became ragged. She had never had a panic attack, but she assumed it must feel a little something like this. She allowed her body to sag against the wall before she needed to slide down it and put her head in between her hands. Everything was too overwhelming. On top of the article, now she couldn't even lean on Janet.\n\nThe only thing that finally forced her to move from her spot on the floor was the fact that her father was just down the hall and the last thing she needed was for him to see her like this. She picked herself up and moved to her office so she could shut herself in and be alone.\n\nShe needed to talk to Quinn and Courtney and most definitely Janet, but all she wanted to do was crawl into a hole until the gala was done and she could finally breathe. So instead of call anyone, she reached into her pocket, grabbed her phone, and turned it off.\n\nChapter 35\n\n\"Fuck, fuck, fuck,\" Quinn screamed out as she wiped her smeared make-up for the third time.\n\nShe should have accepted Mikey's offer to help her get ready for the gala, but she knew he had dinner plans with Tim before and she didn't want to interrupt that. Besides, she's a model, or was at least, and should be able to put on some damn eyeliner.\n\nShe glanced at the clock on her nightstand and saw she only had 45 more minutes before a car came to her apartment to pick her up. Luckily, she already had her dress on and was just trying to finish putting on some make-up.\n\nBut as she sat there looking at her reflection in the mirror, she suddenly felt very alone. Despite what Alex had said the day the article had come out, Quinn had only seen her in passing at the theater and they had really only spoken through text messages.\n\nShe was trying to be as understanding as she could. The article was obviously damaging to Alex's place in the theater and it most likely just created more tension with her dad. But Quinn also couldn't help but feel hurt by the blonde's complete lack of communication over the past two weeks.\n\nThey still hadn't even established exactly what this relationship was, but right now she felt more like Alex's dirty secret than her girlfriend.\n\nShe took a long breath before letting it out slowly. She needed to shake herself out of the gloomy mood she was in. Ultimately, she couldn't imagine the stress that Alex had been under since the article came out, especially with Simon watching her every move like a hawk. But knowing that and stopping herself from being upset at their sudden distance were two different things.\n\nBut tonight was special and so she tried to push thoughts about Alex aside for the moment so she could focus on what was right in front of her. A gala that would be announcing her New York debut\u2014 something she had been waiting months for. Once it was over, hopefully the two of them could figure things out. After all, her show opened soon and then there wouldn't be a reason to hide their relationship.\n\nShe jumped when she heard her phone ring. She didn't usually have the sound on, but she was worried about missing a call from Alex so she had turned it up. But when she looked down at the screen and saw that it wasn't Alex's name, she tried her best not to be disappointed.\n\n\"Hey Claire-bear,\" she said as she picked up the call.\n\n\"Hey Quinnie. Just called to say congratulations on the gala tonight. We're really proud of you,\" Claire said from the other line and Quinn felt an immediate rush of guilt for being disappointed Claire wasn't Alex.\n\nQuinn could hear Will in the background shouting something about loving her and she laughed. She needed to remember that she had people rooting for her. Her value couldn't begin and end with a woman again. She had done that once before and it had left her alone and her confidence in the gutter.\n\n\"Thank you. And thank Will. I can hear him screaming.\"\n\n\"He says he loves you. Are you all dolled up and ready?\"\n\n\"I am. I'll send you a picture so you can send it to mom.\"\n\n\"Or you can just send it to mom?\"\n\n\"And get ten texts back about how to do my hair or make-up better? No, thank you.\"\n\nClaire let out an airy laugh on the other end, which made Quinn smile like it always did. Claire was the best at centering Quinn when she needed it.\n\n\"Just have fun tonight. Mikey told me a little bit about what has been going on,\" Claire said before pausing. \"And I read the article.\"\n\nQuinn's stomach clenched at the mention of that dreaded article. \"Oh,\" is all she managed to say in response.\n\nShe got up from the stool she had put in front of her mirror and walked out of her bedroom so she could gather her coat and purse while she continued talking to her sister.\n\n\"Forget about it. This is still your night, Quinney. I've always admired your courage and your talent. And you're going to take that city by storm.\"\n\nQuinn slowed her steps as her sister spoke and leaned against the hallway wall. She just finished getting her eyeliner right so she closed her eyes to stop the tears that she could feel pressing in. She wasn't sure if it was Claire's words of support, the entire night as a whole or the fact that she missed Alex with every fiber of her being\u2014 but she suddenly felt overwhelmed with emotions.\n\n\"Quinn?\" Claire asked when Quinn didn't say anything.\n\n\"I'm here. Thank you. I miss you so much,\" Quinn said in a thick voice.\n\n\"We miss you too.\"\n\nQuinn jumped when she suddenly heard the buzzer on her front door. She didn't even know she had a buzzer and it was so loud that it seemed to vibrate through her entire apartment.\n\n\"Sorry, Claire. Someone just rang my doorbell and I think it might be the driver.\"\n\n\"Go. Have fun. Text me details and I want a lot of photos.\"\n\n\"I will. Tell Will I love him.\"\n\nOnce Quinn hung up, she looked down at the time on her phone and was confused. She still had 30 minutes before the driver was supposed to be there and she thought that she was meeting him down at the curb.\n\nWhen the doorbell rang again, she quickly made her way down her hall. But when she looked through the peephole, it wasn't her driver. Unless her driver was a beautiful blonde that looked exactly like Alex Anders.\n\nQuinn felt nerves begin to go off in her stomach. Which didn't make sense considering this wasn't her first date with Alex. But something about the way the blonde was standing in the hall, looking so unbelievably dapper, and the fact that she hadn't seen her much recently, had Quinn's pulse quickening.\n\nNo amount of deep breathing was going to calm her sudden increased heartbeat so she opened the door.\n\n\"Hello,\" Alex said almost formally.\n\n\"Hi,\" Quinn responded, but didn't move out of the doorway as her eyes roamed up Alex's body.\n\nAlex had on a black, double breasted blazer and a pair of black slacks. But what really caught Quinn's eye was the fact that the woman wasn't wearing a shirt under the blazer and she could see the smooth skin of her chest and the slight outline of her cleavage.",
        "When her eyes came back up to Alex's, the blonde hadn't noticed her blatant ogling. Alex's own eyes were making their way down Quinn's bright red dress before they came back up to her face.\n\n\"You are the most beautiful thing I have ever seen,\" Alex said.\n\n\"Mikey picked my dress.\"\n\n\"But you're wearing it.\"\n\n\"I did choose the color.\"\n\nAlex gave her a small smile but then an awkward silence settled on them and Quinn hated how tense everything suddenly felt.\n\n\"Can I come in?\" Alex asked when Quinn just continued to stand there.\n\n\"Oh, of course. Come in,\" Quinn replied.\n\nShe wished things felt as easy between them as they did a couple weeks ago. But their easy, casual way with each other felt stilted.\n\nWhen Alex was about to pass her on her way into the apartment, Quinn felt the need to connect with the other woman in some way so she grabbed Alex's arm and leaned in so their lips could touch.\n\nWhat she meant to be just a small, chaste kiss, quickly turned sensual as their lips met and moved together. It wasn't as passionate like some of their others, nor was it as deep, but feeling Alex's lips against her own after so many days still made her body come to life with sudden want.\n\n\"I'm sorry we haven't been able to see each other,\" Alex whispered when their lips finally parted.\n\n\"Let's go inside,\" Quinn said instead of address Alex's comment.\n\nQuinn felt a mix of emotions. Her body was still vibrating from their kiss hello, but one show of affection wasn't enough for her. Alex's silence over the past two weeks couldn't just be erased by one sexy pantsuit and a hot kiss.\n\n\"What are you doing here? I thought you'd have to be at the restaurant by now,\" Quinn said when they were both standing in her living room.\n\n\"My father seems to have run out of menial jobs to give me. Last night I was in charge of setting up chairs and cocktail tables. I'm not part of the run of show so he doesn't need me, I guess.\"\n\nDespite her annoyance at Alex's ghost-like behavior over the past few days, she could see a defeated look on Alex's face and she tried to remember that the woman was going through a lot right now.\n\n\"He's taken over the entire night?\" Quinn asked.\n\nShe moved over to a small bar she had in the corner of the room so she could pour Alex a glass of bourbon. She didn't really care for the brown liquor, but she had bought it after she noticed that it was Alex's preferred drink. She couldn't be bothered to open a bottle of wine for herself, especially given their time constraints, so she just poured herself one too.\n\n\"Thank you,\" Alex said when Quinn came back over to her and handed her the glass. She then motioned for them both to sit down on the couch. \"And not exactly,\" Alex continued as she sat down and took a sip. \"I still did all the work leading up to tonight. He's just taking the spotlight. Last night we did a dry run and I basically just stood in the back of the room watching.\"\n\n\"Have you spoken with Janet much?\"\n\nAlex shook her head. \"No. We spoke right after everything happened, but we haven't spoken since. I think she might be at her home in Connecticut. She'll be fine. She has a lot of other clients.\"\n\n\"And you?\" Quinn asked.\n\nAlex put her glass down on the table in front of her and then took Quinn's glass and did the same with it. She turned so she was fully facing Quinn and gently took both of the brunette's hands into her own.\n\n\"I'm sorry, Quinn. I know I've been distant. Things have just been hard at the theater with my father.\"\n\nQuinn hadn't planned on talking about any of this tonight\u2014 not with such a big event just an hour away. But with Alex sitting there finally looking open and vulnerable, she didn't want to miss the chance.\n\n\"I get that, Alex. But if you don't ever talk to me, it's hard to feel like we're in this together,\" she replied.\n\nAlex gave a small nod and looked down at their joined hands for a full minute before she looked up at Quinn again.\n\n\"Everything feels like it's caving in around me. It's my default to just internalize everything and close everyone else out.\"\n\n\"I noticed. Courtney called it your 'Alex cave' or something.\"\n\n\"Courtney talked to you about it?\"\n\n\"I'm not the only one you were ignoring this week,\" Quinn said with more bite than she meant.\n\n\"Courtney is used to me by now. Don't worry about her,\" Alex replied.\n\n\"She shouldn't have to be used to it, Alex. She's your best friend. You can't just keep pushing people away.\"\n\n\"Courtney understands the stakes at the theater. She gets why this promotion means so much to me.\"\n\n\"And I don't?\" Quinn asked and pulled her hands out of Alex's.\n\n\"No, Quinn. That's not what I meant. She's just been with me through a lot of years of trying to please my father. She's seen all the work I've put into this theater over the years. And that article all but sealed my fate. It gave my father every excuse he needed not to promote me and I think a lot of people would understand that decision after the way Jeremy portrayed me.\"\n\nQuinn wanted to understand Alex's extreme desire to take over for Rick. To Quinn, it just seemed like it would seal Alex's fate to Simon Anders indefinitely and she knew that the blonde had so much more to offer than to be working somewhere where she wasn't valued the way she should be. But she wasn't going to say that right before the gala Alex had poured so much of herself into.\n\nShe looked down at Alex's hand that was still on the couch and laced their fingers together again.\n\n\"Rick's job or not, look at what you've done there, babe. You've changed Horizon. And\u2014 you've changed my life.\"\n\n\"I have?\"\n\n\"In more ways than one.\"\n\nA small smile finally reached Alex's face and Quinn felt her own face softening. Alex may be incredibly frustrating with her emotional guardrails, but Quinn knew there was nothing she could do to change the way she felt about the blonde.\n\n\"Not to keep apologizing, but I'm also sorry we can't go to the gala together tonight,\" Alex said.\n\n\"I never assumed we'd go together. And I'm fine with that. But I do need to know what this is. I know the past two weeks have been hard. But it hasn't been easy feeling like I don't know where we stand. I need to know I'm not alone in this. What are we Alex?\"\n\nShe could feel her nerves spike as soon as she asked the question that had been at the forefront of her mind all week. When Alex's eyes met her own, Quinn had to wonder if there would ever be a time when their piercing blue wouldn't make her body feel weak. The blonde seemed to be searching Quinn's face for some answer and the silence in the room was so thick that Quinn thought she could almost hear her own heartbeat.\n\nAlex didn't break eye contact as she pulled something out from inside her blazer, but when Quinn's eyes caught something sparkle from her hand, she tore her eyes away so she could see what the woman was holding.\n\nAlex held up her hand so a delicate silver chain was hanging from her fingers. Quinn's eyes widened when she saw a teardrop diamond hanging from the end of it.\n\n\"We're everything, sweetheart. Even if I can't have you on my arm tonight, I wanted you to have something that reminded you of how much I care about you,\" Alex said in a quiet voice.\n\nQuinn didn't know what to say as her mind raced around the fact that Alex was holding out a diamond. She tried to focus on that and not the fact that Alex had said she cared about Quinn again instead of the words the brunette really wanted to hear.\n\n\"You got me a diamond?\" she asked, still staring at the shining stone.\n\n\"Technically, it's just your birth stone. But that may have been coincidental. Mikey told me you don't wear bracelets or watches so I opted for this.\"\n\n\"You talked to Mikey about getting me a diamond?\"\n\n\"No, I just told him I wanted to get you a gift to celebrate the gala,\" Alex replied and then glanced down at her hand that was still holding out the necklace. \"You don't like it.\"\n\n\"I love it,\" Quinn said quickly, putting her hand over Alex's. \"I'm just surprised.\"\n\n\"You're not going to tell me you can't accept it are you? Because I've already come up with a list of arguments for why you can and should.\"\n\n\"I don't think we have time for that list. So, please. Do the honors,\" Quinn said and moved her hair so her neck was free.\n\nAlex got up from the couch and moved behind it. She lightly grazed her fingers down Quinn's exposed neck and when she leaned down and placed a small kiss there, Quinn found herself closing her eyes at the feeling.\n\n\"To be clear, you already look perfect and even a diamond can't compare to you. But I will enjoy seeing you wear this tonight. Remembering how your skin tasted as I put it on.\"\n\nQuinn still had her eyes closed but could feel Alex's lips at the back of her neck right before she felt the light weight of the diamond on the base of her collar bone. Her hand automatically went up to feel the stone sitting there and she couldn't help but let her head drop forward slightly as Alex's lips made their way from her neck to her earlobe.\n\n\"May I see, sweetheart?\" she whispered against Quinn's ear and the brunette instantly felt a shiver run down her spine at the light contact.\n\nInstead of saying anything, Quinn moved off the couch and turned around so Alex could see her. She could see a slight rise and fall to Alex's chest and knew their quick moment of intimacy was also affecting her.\n\n\"Lovely,\" Alex whispered as her eyes settled on the necklace.\n\nAs they looked at each other, there were more things Quinn found herself wanting to say. But before she could, Alex was looking at her watch and Quinn was reminded that her own car would be there any moment.\n\n\"I should go,\" Alex said. \"My driver is parked illegally and I guess I do need to get to the restaurant before my father has one more freak out.\"\n\n\"I'll be right behind you. A car will be here soon for me,\" Quinn said and moved from the couch to the doorway so she could walk Alex out.\n\nQuinn opened the door, but Alex didn't make any move to go through it. Instead, she turned so the two of them were standing in each other's space.\n\n\"Thank you for the necklace. It was very sweet of you,\" Quinn said.\n\nAlex brought her hand up to lightly play with the diamond. \"What you said earlier\u2014 I hope you know that you've changed my life too, Quinn.\"\n\nQuinn watched as the woman continued to play with the diamond on her neck. \"Sometimes you're such a mystery. You guard your heart so fiercely and shut me out. But then you turn up with diamonds and say things like that.\"\n\n\"Sometimes I don't know why you put up with me,\" Alex replied.\n\n\"Maybe because I fell in love with you.\"\n\nAlex's eyes snapped up at the sudden declaration. She slowly brought her hand down from where it was resting on Quinn's neck and the silence that followed the words felt thicker than any they had ever shared.\n\nQuinn waited for Alex to respond, but with every moment that passed, the silence from the other woman just seemed to ring louder in her ears. The quiet moment was finally broken when Quinn's phone began to ring, blaring out into the apartment and entryway.\n\n\"My driver must be here,\" Quinn said, allowing her phone to ring through to voicemail.\n\nHer words from before still hung in the air between them and even Quinn was surprised by them. Maybe it wasn't the right moment to say them, but now they were out there and she couldn't take them back, nor did she want to. She just wanted Alex to respond and tell her she loved Quinn too.\n\nBut instead, Alex just nodded slowly, as if she was in slow motion. \"I should go,\" she finally said in a quiet voice. \"I'll see you soon.\"\n\nQuinn watched Alex turn and head down the hallway, but after only a few paces, the blonde turned around again. Quinn could tell the woman seemed torn between going and staying. But when she opened her mouth only to quickly close it again, Quinn could physically feel the disappointment run through her.\n\n\"See you soon, Alex,\" Quinn said, closing her door on the other woman who was still standing there frozen in place.\n\nShe knew it was probably childish to just shut the door, but the tears she had kept at bay all night were threatening to fall and this time, she knew she couldn't stop them.\n\nHer hand went back up to the necklace, but now the gesture of the gift just felt hollow and as she closed her eyes, the only image she could see was the scared look on Alex's face as she left Quinn's apartment.\n\nBefore the article came out, she would have bet on the fact that Alex loved her. And maybe deep down somewhere she did. But whether or not Alex would allow herself to acknowledge those feelings\u2014 that was something Quinn wasn't sure about.\n\nAnd now Quinn was left with a diamond around her neck that made her feel empty and a sinking feeling of de ja vu. She had once thrown herself at another woman who didn't return her true feelings. And obviously, Alex wasn't Jenna, but Quinn didn't know how far Alex would push her away if it meant the blonde had to be vulnerable.\n\nAfter the trip to the aquarium and Alex opened up about her mom, Quinn really thought they were heading towards a future. But Jeremy Hart's asinine take on the blonde and her role at Horizon had caused a rift to grow between them and she didn't know how to get Alex to open up to her.\n\nThe second ring from her phone was enough to break her out of her self-wallowing. She quickly grabbed her purse and coat and made her way down to the car.\n\nTonight was going to be about her show. She could deal with her mess of a personal life tomorrow.\n\n \n\nChapter 36\n\nMaybe because I fell in love with you. Alex had lost count of the number of times she had let those words roll around in her head as she sat in her office waiting for the gala to officially start.\n\nShe knew she had only minutes before she needed to be at the restaurant across the street, but she needed a moment alone after her trip to Quinn's. During the entire ride to the theater she just replayed her reaction over and over and couldn't stop thinking about how Quinn must have felt as she waited for Alex to respond to her words.\n\nWhile she was just standing there in the hallway, it was as if her brain was screaming the words back to Quinn but she couldn't make them actually come out. It had been so long since Alex had said those words to anyone\u2014 the last person being her mom\u2014 that she just panicked. She had thought she was in love with Sloane, but she hadn't even said the words to her since they had felt sacred to her mom.\n\nShe couldn't shake the look she had seen on Quinn's face as she shut the door. Alex had stared at that door for an entire minute, willing herself to knock on it so that she could tell Quinn she loved her too, but ultimately, it was easier to walk away. The fact that she took that route caused a wave of self-loathing to crash into her.\n\nWhen she knew she couldn't wait any longer, she picked herself up from her desk chair and made her way over to the restaurant that was hosting the party. Her father was essentially going to be the emcee, driving the event forward, so she just needed to attend like anyone else and schmooze with the right board members and investors.\n\nThe gala was in the back room of the restaurant and when she entered, she could see that it looked the same as it did last night when she was there for their final check. The mood lighting was now in full effect and she could see images from Horizon's fall show flashing across the screens placed in each corner of the room. The room was already packed with people, but seeing the men and women laughing as they ate, drank and socialized in their finest tuxedos and dresses did little to brighten her mood.\n\nNot only did she royally mess things up with Quinn, everything about this event was now tainted. She had worked for months to put this together and now it didn't even feel like hers.\n\nLuckily, she got there right as the lights were dimming for the presentation and she didn't have to talk to anyone. She saw Mikey and Tim across the room and went over to them so she at least had a friendly face next to her as her father took her spotlight. Or, stole her spotlight, would be more accurate.\n\n\"Alex, good to see you,\" Tim whispered as she took the open space around the cocktail table they were occupying.\n\n\"You too, Tim. Hey Mikey,\" Alex said.\n\nMikey just gave her a smile and a nod as a spotlight suddenly hit the stage.\n\n\"I thought you'd be up there,\" Tim said, pointing the stage.\n\nAlex's eyes connected with Mikey and she had a feeling he knew exactly why she wasn't up there, but he didn't say anything.\n\n\"Not this year,\" she said quietly back to Tim.\n\n\"I hope it has nothing to do with that rubbish in the Post. Everyone knows Jeremy Hart is trash. Don't even think about it, darling,\" Tim said and put his arm softly on Alex's back before turning his attention to the front of the room.\n\nAlex was saved from having to say anything about the article by her father taking his place in the middle of the stage.\n\n\"Ladies and gentlemen. Thank you for being here to help us celebrate Horizon Theater Group's 11<sup>th</sup> anniversary of our Winter Series,\" Simon began and then gave a dramatic pause as he let the audience clap. \"When I began this theater almost 25 years ago, I vowed to create a space for everyone. A place where we could cherish what has come before us and champion what is new. And nothing in our theater exemplifies that more than our Winter Series\u2014it is the heart of what I was trying to create. This is my favorite time of year. When we get to welcome new artists into our community and experience the future of this beautiful craft. The Winter Series is about finding those gems that haven't yet been found. And this year\u2014 this year may be one of our most exciting programs to date.\"\n\nSimon paused again as he looked out over the audience and Alex had to stop herself from rolling her eyes at his theatrics. Simon never could resist the attention of a crowd and tonight he seemed to be relishing in it.\n\n\"But ladies and gentlemen\u2014 don't take my word for it. To showcase the three amazing productions in this years' Winter Series, please turn your attention to the screens and join me in watching a quick video showcasing our exciting program. I present to you, Horizon Theater Group's Winter Series.\"\n\nSimon ended his speech by pointing to the large screens scattering the room. A sizzle reel began on each screen, diving into the details of the three different productions. But right away Alex could tell it had been reedited from the one she had last seen. The biggest change was that Quinn was featured far more than the other two shows, which Alex couldn't understand. Her father had never shown anything but indifference towards Quinn's show, so she assumed this had to be the influence of the new PR firm he had recently hired.\n\nImage after image of Quinn's old modeling career flashed over the screen while the other two productions were merely mentioned in the reel. When the video finally ended, Alex joined the rest of the audience as they clapped, but only because it would look odd if Horizon's Managing Director looked like she was sulking in the corner.\n\n\"An exciting program indeed,\" Simon said as he walked back onto the stage. \"Opening in just two weeks, we kick our program off with Quinn Collins' Model Behavior. A true hidden gem\u2014 Ms. Collins is here with us tonight, and I ask you to give her a very warm, New York welcome. I first saw Ms. Collins' show last year in a festival showing and I am beyond honored to produce her show on the Horizon stage for her New York debut. Please join me in giving her a round of applause. Congratulations, Ms. Collins. We are lucky to have you.\"\n\nSimon motioned with his hand to where Quinn was standing to the side of the stage. Quinn turned to the audience and gave a quick smile and a wave, but Alex thought it looked forced. Which would make sense considering Simon just lied to the entire audience and made it out like he discovered Quinn's show. She also wondered how Quinn felt about her modeling career being splashed across the entire sizzle reel when her show was about so much more than that.",
        "Alex caught Quinn's eye for a moment as the crowd clapped, but all she saw was sadness there and she hated herself all over again for being the one to put that look on her face. She noticed that Quinn was still wearing the necklace though and hoped it was a sign that she hadn't ruined everything.\n\n\"Now is the time I would normally turn you all back to the delicious appetizers and cocktails being provided tonight. But before I do that, we have one more special announcement to make. I will now turn you over to Horizon's Executive Director, Rick Weston.\"\n\nSimon moved to the side of the stage as Rick made his way onto it and as they passed each other, they shook hands.\n\nAlex could feel her brow furrowing but she couldn't understand what was happening. Rick never presented at these things\u2014 in fact, some years, it was hard just getting him to attend a gala, let alone participate.\n\n\"Thank you, Simon,\" Rick began, looking at her father. \"For your leadership over all these years. But mainly for your friendship.\" He then turned to the room and gave a dramatic pause before he began speaking. \"I began at Horizon in 1996. That was just one year after Simon opened the theater. And these have been the most enriching 23 years a man could have ever hoped for. I thank all of you for being a champion of my work. It has meant the world. But the time has finally come and it is with great sadness that I announce to you all here tonight, that I am retiring.\"\n\nAlex's stomach dropped and she stood up from the table she had been leaning on. Her father didn't tell her that they would be making Rick's retirement announcement at the gala\u2014 in fact she didn't think they'd be making that until the spring gala or even after.\n\n\"Rick's retiring?\" she heard Tim say next to her, but her eyes were transfixed on her father, who was staring right back at her.\n\nShe was aware that Rick was still talking, but she wasn't listening anymore. She couldn't tear her eyes away from the triumphant smile her father was directing her way. She finally broke her eyes away from his and looked over to see Quinn looking at her with her own furrowed brow.\n\n\"But I won't be leaving this place without the best leadership New York City theater has to offer. And now, I will let Simon make our final announcement. I'm retired after all,\" Rick joked and took a step to the side so Simon could join him at the microphone again.\n\n\"Horizon is not Horizon without Rick. Thank you for your artistry and your friendship over the past 23 years. This place is as much you as it is me,\" Simon said to Rick before turning back to the crowd. \"But he is right. Rick's departure marks a new day for our theater and with it, we welcome new leadership.\"\n\nThe more her father spoke, the louder the blood rushing to her ears became. The sinking feeling that had settled itself in her stomach since the article came out, finally plummeted as realization began to hit her\u2014 her father was about to announce Rick's replacement.\n\n\"Some shoes can never be filled. But we have certainly tried with our choice of Horizon's new Executive Director. When choosing this replacement, I wanted someone who shared our love for theater. Someone who understood New York audiences and the way into their hearts. Someone who has been a champion of Horizon for her whole life. And we found that woman. Tonight, we celebrate change. And as we welcome new, talented artists like Quinn Collins into the Horizon family, so too do we open our doors to a new leader. Please join me in welcoming a woman whose face may be familiar face to Horizon Theater Group but is about to become the beacon of our future. Janet Jameson.\"\n\nEverything seemed to move in slow motion as Alex watched Janet appear on the stage as if out of nowhere. And as she watched the publicist embrace Simon and Rick, she tried to wrap her mind around what was happening. But she couldn't. Janet. How could he be giving the job to Janet?\n\nShe was vaguely aware of Tim saying something to her and for a moment, her eyes found Quinn's across the room again. The brunette's eyes were wide and her mouth hung open slightly and Alex had to assume her face mirrored the expression.\n\nShe could hear Janet's voice boom out from the microphone but her words just sounded jumbled in Alex's mind. She felt paralyzed to the spot until her eyes moved off of Janet and found her father's once again. He wasn't smiling anymore. He simply raised one eyebrow at her before averting his gaze back to Janet and allowing a fake smile to spread across his face.\n\nAlex had to leave. Out of the corner of her eye she could see Quinn making her way over to her, but she couldn't face her right now. Or anyone. She needed to get out of the room before she screamed.\n\nAlex cut through the people in the crowd, not even worrying about pushing through the tight spaces to get out. Appearances didn't matter anymore. None of this mattered anymore.\n\nShe just needed to be alone so she could drink and forget her father just took away her entire life.\n\nChapter 37\n\nAlex looked around her office like she had never been in there before. Years of discarded programs and contracts piled the cabinets that were pressed against walls covered in show posters. She used to look at the mess with pride\u2014 she had always loved working in the chaos of creation.\n\nBut right now, as she looked around the room, none of the reminders of her time at Horizon meant anything to her. As if her whole life was just leading to this one disappointing moment from her father. One final blow that showed exactly how much she was worth to him.\n\nMore than anything she was angry at herself. She should have seen it all coming. Right as her heart was beginning to open up and trust, she was sent a cruel reminder of the folly in doing so.\n\nHer eyes finally landed on the Streetcar Named Desire poster in the corner. The same one she had caught Quinn staring at all those weeks ago when they first met.\n\nThat one poster used to be the thing in her office she cherished most. But now she couldn't stand the sight of it there. She knew a piece of paper couldn't technically mock her, but somehow it felt like it was. It stood there, reminding her of all the dreams she let go without another look back. And maybe for the first time she was truly admitting to herself that she could no longer blame her mom's sickness for it. She quit acting because her father told her she wasn't good enough. Just like he did tonight.\n\nAs she continued to look at it, all the anger she felt in that moment, and the frustration with her father that had built up for years upon years and she had kept tightly inside, hit her like a tidal wave.\n\nAlex quickly moved over to the wall that held the offending poster and ripped it off. When that didn't feel like enough she grabbed the closest thing she could find and flung it as hard as she could.\n\n\"Fuck you dad,\" she screamed into the room as a glass award the theater had won two years prior broke against the wall.\n\nShe let out another scream as she threw the other glass award that was within her reach against the wall and watched its shattered pieces fall on top of the last one.\n\nBut as she stood there with her chest heaving and a mess at her feet, she only felt worse. The office suddenly felt hot and suffocating and it was the last place she wanted to be.\n\nAs she turned to leave though, the moment got significantly worse when she saw who was watching her from her doorway.\n\n\"May we speak or were there more things you needed to smash first?\" Janet asked in a calm voice that only made Alex angrier.\n\nAlex looked at the woman she had trusted like family and still had trouble grasping the betrayal. Janet had always been in her corner, especially when it came to the matter of Simon Anders. She had never hidden her dislike for Alex's father and had been a true and steadfast friend to her mom. None of that matched with what happened across the street tonight and the duplicitous woman standing in front of her.\n\n\"You left your own party a little early, don't you think?\" Alex asked and she was grateful her voice wasn't as shaky as her hands felt.\n\n\"You know I've never been one for a party. I just came to see how you are.\"\n\n\"I'm supposed to believe you care how I am? Just tell me how long this has all been in place.\"\n\nJanet let out a long sigh as if the whole conversation was already boring her. \"Long enough.\"\n\n\"I think I deserve to know exactly what happened here.\"\n\n\"Your father and Rick chose the person they want to lead this theater. That is what happened.\"\n\n\"And they chose you? You're a fucking publicist, Janet.\"\n\n\"Stop being so dramatic. I've been a silent investor here for years among many other theaters. I'm a staple within the theatrical community. It's not a stretch.\"\n\n\"And my father? You don't even like him. Or was that all an act?\"\n\n\"I didn't care for your father being married to my best friend. I would never deny he's one of the best theater directors in the city.\"\n\nAlex let out a harsh laugh at Janet's mention of her mom. \"Your best friend? You're a nice friend to screw over her daughter.\"\n\n\"Alex, dear. Your mom passed years ago. We all need to move on. And that includes you.\"\n\nThere were so many things Alex wanted to say\u2014 and even more things she needed to know. But she felt so overwhelmed in that moment that she could only stand and look around at the broken glass strewn across her office. When her eyes fell on a framed Time Out article about Horizon that was sitting on her desk, some of her own questions began to answer themselves.\n\n\"The article,\" she said, her head snapping back to Janet.\n\n\"I must admit, I didn't know Jeremy would be quite so colorful in his piece.\"\n\n\"But you did know what it was going to be about. The interview was a set-up.\"\n\n\"Your father can be an indecisive man. And you played right into that one. The moment I saw a picture of Quinn, I knew that you wouldn't be able to resist. Don't forget how long I've known you. Though I must admit, I didn't think it would all be quite so easy.\"\n\n\"My mom would have never forgiven you for doing this.\"\n\n\"Your mom had everything in life handed to her. She didn't know what it meant to come from nothing and work her way up like I have. Nor have you for that matter. I know you wanted the job. But today, nepotism lost. I wouldn't have expected Peggy to understand that like I don't expect you to.\"\n\nJanet's voice finally lost its sweet quality and took on and edge that Alex had never heard. But so much was finally falling into place.\n\n\"You sound a little jealous, Janet.\"\n\n\"I'd rather be where I am than where your mom is.\"\n\nAlex felt a flash of anger at Janet's words. It was as if the publicist finally let all false pretense fall away and Alex didn't know how she had never seen the venom right under the surface before.\n\n\"Don't ever talk about her again,\" Alex said with as much bite as she could muster. \"You're a complete betrayal to her memory.\"\n\n\"That doesn't change the fact that I earned this. Over years of hard work and investment.\"\n\n\"Earned it? I'm the one who has poured every ounce of myself into this theater for the past decade. All you did was place a false story in a gossip rag and use your dead husband's money.\"\n\n\"It wasn't completely false,\" Janet replied with a smile she didn't even try to soften.\n\nAlex let Janet's last statement sink in, which caused her to think back to the interview with Jeremy again.\n\n\"The source he kept quoting,\" she finally said as another realization dawned on her. \"You're the source.\"\n\n\"Nobody has heard from Sloane in years. Apparently, she took your father's money and left town.\"\n\nAlex just nodded\u2014 each revelation becoming less and less surprising. Janet's plan was well-thought out and it had obviously worked.\n\n\"And if I tell my father all this? That you set me up?\"\n\n\"He won't care. As you so aptly said, it gave him every excuse he needed. In fact, he may even thank me.\"\n\n\"That's it then,\" Alex finally said, not knowing what else she could say.\n\n\"It doesn't have to be. You're still an integral part of this theater. And you are a talented theater manager. I hope you will stay in your role and work with me. But I also understand if you decide to move on. I'll expect your answer soon.\"\n\nBeing talked down to like she was Janet's employee was the final straw for Alex. She gave one final look around the office, but there wasn't anything she wanted.\n\n\"You can consider this my resignation. Good luck, Janet,\" Alex said in an empty voice as she moved past the other woman in the doorway, careful not to let their bodies touch at all.\n\n\"Aren't you going to speak with your father?\"\n\nAlex didn't even bother turning back as she continued towards the elevators. \"As you said, he won't care. You tell him,\" Alex called back without another look.\n\nChapter 38\n\nQuinn ended her call the moment she heard Alex's voicemail pick-up once again. She had been trying to call the blonde since Simon's announcement at the gala, but so far, she hadn't been able to reach her. In fact, the calls went straight to voicemail so quickly, she knew Alex had turned her phone off.\n\nHer stomach clenched again as she thought back to the complete shock and devastation on Alex's face the second after Simon called out Janet's name.\n\nQuinn felt the same shock hit her own system at the news, but she knew she couldn't be even half as upset as Alex. In all their conversations about Rick's role, never once did Janet's name come up and Quinn still didn't understand the decision.\n\nBut as she walked down the cold New York street in her heels and dress, she felt a mix of emotions. On one hand, her heart ached for Alex and what this meant for her. But on the other hand, she was once again being shut out from the blonde and was running around Manhattan trying to find her.\n\nShe could finally see The Library up ahead and pulled her coat closer to herself to block out the cold night wind that had picked up since she left the restaurant. Right after Alex left, she had called Courtney to tell her what happened. Courtney told her that Alex usually came to this bar when she was upset.\n\nThe smell of stale beer and body odor hit her as she entered the bar, but for some reason it just made her think of Alex and the first time she got to blatantly stare at the other woman in this very room. That seemed like so long ago now, even though it wasn't, but since that night her feelings had changed for the blonde so much. She could have never predicted then that she'd be completely in love with Alex.\n\nHer eyes roamed the bar, but Alex wasn't there. The place was much busier than the last time she was there so she had to push around a group of rambunctious men before she could make her way through the dingy seating area.\n\nShe finally saw Alex sitting at a table on the far wall. But the relief she thought she'd feel upon finally finding her and being able to talk to her dissipated as she saw the curvy bartender from last time standing over her.\n\nAlex had a bored, detached look on her face as she stared down into an empty glass, but the bartender had her hand on the blonde's shoulder and was apparently trying to make some kind of joke.\n\nQuinn felt only a quick moment of satisfaction when Alex finally noticed her approaching and with slightly widened eyes, shook the bartender's hand off her shoulder.\n\n\"Quinn, what're you doing here?\" she asked and Quinn could tell by the slight sloppiness to her words that Alex wasn't completely sober.\n\n\"I came to find you,\" Quinn said, but her eyes were on the bartender who stayed close to Alex's side.\n\n\"You should be at the gala. Go back.\"\n\n\"I should be here,\" Quinn replied, finally tearing her eyes away from the bartender to look at Alex with a raised eyebrow. \"Unless you already have company?\"\n\n\"Actually Carrie, cancel that next drink. I'll pay now,\" Alex said, looking up at the bartender. She then pulled a small wallet out of her back pocket and placed some money on the table.\n\n\"You sure?\" the bartender asked in a flirty voice and put her hand back on Alex's shoulder.\n\n\"Seriously?\" Quinn asked, directing her glare at Alex.\n\n\"I'm leaving,\" Alex said, standing up suddenly.\n\nShe didn't give the bartender another look as she pushed her way through the crowded room and towards the door and all Quinn could do was follow until they were out of the bar.\n\n\"What the fuck, Alex? You turn off your phone, again I might add, and then come here to drink with her?\" Quinn asked as soon as they were on the street.\n\n\"She's a bartender, Quinn. I wasn't drinking with her. And please don't make this about whatever it is you're making this about right now.\"\n\nQuinn forced herself to take a steadying breath before she said anything else. She didn't like walking in and seeing a woman's hand on Alex\u2014 especially a woman who she knew Alex had slept with before\u2014 but Alex was right and this wasn't about that.\n\nShe once again felt stuck between protecting her own heart and supporting Alex through what had become a never-ending string of Horizon drama.\n\n\"Then talk to me,\" she said more calmly.\n\n\"There's nothing to say. You saw what happened.\"\n\nQuinn could see the pain on Alex's face, but thought twice about touching her when she noticed the way the other woman was half shielding her body away from her own. She did take a tentative step closer but kept her hands to her side.\n\n\"I did see it. And that's why I want to talk. Let's go somewhere.\"\n\n\"I don't want to talk. I just want to go home. Alone.\"\n\n\"You don't have to be alone, Alex.\"\n\n\"But I am. My father just proved that once again.\"\n\n\"You didn't have your dad's support long before just tonight. And I know what happened tonight was really awful. But you're not alone. You have Courtney. And you have me,\" Quinn said, finally putting her hand on Alex's arm.\n\nBut unlike all the other times she had touched the blonde, she could feel Alex's body tense under her hand and she made no move to hold onto it like normal. She simply turned to Quinn, forcing her hand to drop.\n\n\"I quit,\" Alex said.\n\n\"You quit? When?\"\n\n\"Janet followed me to the theater and I quit. I also found out the entire article was a set-up. Everything that has come out of her mouth since you met her has been a lie.\"\n\nQuinn had already put that together while she had been looking for Alex. She knew that Janet's betrayal was just as hurtful to Alex, and because of the shock of it, possibly even more hurtful than her father's.\n\n\"I can't imagine the kind of betrayal and hurt you feel right now. What they did was unforgivable. But Alex, in time, it may be a good thing.\"\n\nAlex let out a quick, harsh laugh. \"Please explain to me how this is a good thing.\"\n\nQuinn could tell by the expression on Alex's face and the short tone of her voice, that she was entering dangerous ground. The blonde's glassy eyes were guarded and her body looked ready to bolt at any moment so she tried to choose her words carefully.\n\n\"You can start fresh. Get out from under your dad's thumb. Not worry every day that he'll pry into your love life,\" she responded.\n\nAlex's eyes narrowed and even though the step backwards she took was small, it felt like a huge emotional divide that had instantly come down between them.\n\n\"You've never gotten it,\" Alex said in a quiet voice, shaking her head.\n\nQuinn felt her own annoyance flicker at Alex's icy tone. Quinn remembered Courtney calling Alex stubborn but that descriptor didn't even begin to cover it. This was like having a conversation with an emotionally stilted wall.\n\n\"How can I understand anything when you pick and choose when you open up to me?\"\n\n\"None of this is about us, Quinn,\" Alex said in a much louder voice. \"But you keep trying to make it about us.\"",
        "\"Of course it's about us, Alex!\" Quinn shouted, finally losing the patience she had been holding onto until then. \"You wouldn't even be in this situation if you hadn't met me. Our entire relationship has been about your dad and you getting Rick's job. And I'm not sure if you noticed or not, but that article also mentioned me. You can't keep separating me from the rest of your life.\"\n\n\"And now what? You want to be with some out of work theater manager who only got her first job because of daddy?\"\n\nWhen Alex took another shaky step backwards, Quinn wondered how many drinks the overly friendly bartender plied on the blonde before she had shown up.\n\n\"Stop it. I don't care about your job and I never did.\"\n\n\"I don't know who I am without that theater Quinn. Why can't you get that?\"\n\n\"Because there's more to life than Horizon!\"\n\nQuinn realized she was fully shouting now, but nothing else seemed to be working to get through to Alex. When the blonde simply looked down at her feet with a defeated expression, Quinn took a few calming breaths before taking one, small step closer.\n\n\"You can't even see how special you are. How much you have to offer. I know you're upset and that is totally understandable. But you don't need Horizon, Alex. You are so much more to me than that place.\"\n\nWhen Alex just continued to look down at the ground, Quinn knew her words weren't resonating. Alex was determined to be alone in this.\n\n\"I just want to go home,\" Alex finally said in a hollow voice.\n\n\"And what about us?\" Quinn asked.\n\n\"I'm just sorry if my quitting has any negative impact on your show,\" Alex said, but she still didn't look up from the ground.\n\nQuinn moved over to the other woman and grabbed her chin so she was forced to look into her eyes. Quinn could see that the corners of Alex's eyes were wet, but the blonde was breathing through her nose and seemed to be willing the tears to stay put.\n\n\"I don't care about my show right now. I care about you.\"\n\n\"You should care about it. It's why you're in New York.\"\n\n\"It's not the only reason anymore.\"\n\n\"You deserve better than me, Quinn.\"\n\nQuinn shook her head before she could get her mouth to work. She knew what Alex was doing, but she wasn't going to let her.\n\n\"Don't do that. Don't throw this away because you're upset.\" Quinn moved her arms down from Alex's face to her arms and gripped them. \"I know you're in pain. I can help take some of it away.\"\n\n\"No, Quinn. Not right now. Just\u2014 just stop pushing,\" Alex said shrugging out of Quinn's grip.\n\n\"Pushing? Alex, all I have done since we've met is been there for you. All I'm asking is for you to let me be.\"\n\n\"I've told you more than I've ever told any woman. I've never been as vulnerable as I am with you. What more do you want from me?\"\n\n\"One trip to Coney Island isn't enough. Diamonds and smooth words aren't enough. Do you love me, Alex?\"\n\n\"Yes, I love you,\" Alex said loudly before taking a breath and another step backwards. Quinn could see the first tear fall down the other woman's face. \"Is that how you wanted me to tell you? By badgering me into it? Is this what you did to Jenna?\"\n\nQuinn felt her entire body recoil at Alex's words and when she looked at the blonde's face, Alex's own eyes were wide, as if surprised by what she just said.\n\n\"Oh, so we're back here are we? Making hurtful jabs to push me away?\" Quinn asked, taking her own step away from Alex.\n\n\"Quinn, I didn't mean\u2014\" Alex began to say but Quinn just shook her head and took two more meaningful steps backwards down the street.\n\n\"It's fine. You wanted to be alone. I should have listened.\"\n\nQuinn turned around and began to walk quickly down the street until she heard Alex call her name again. She didn't want Alex to see the tears streaming down her face, but the desperation she heard in the other woman's voice caused her to turn back around.\n\n\"Just wait, please,\" Alex said.\n\nQuinn stood there waiting and hoping. Hoping Alex would finally just say something\u2014 anything\u2014 that would show her that they had a chance. But like the rest of the night, Alex just stood there staring at the brunette. She could tell she wanted to say something, but Quinn was done pushing as Alex called it.\n\nWhen the silence continued, Quinn just gave the blonde a slow nod. \"You know, Courtney said you'd do this. She said you'd push me away. You can tell her she was right.\"\n\nQuinn turned again and finally walked away, not waiting to see if Alex had anything more to say. Perhaps she was being unfair considering what Alex had gone through earlier in the night. But she needed to protect herself at some point and if tonight and the past two weeks had taught her anything, it was that Alex Anders didn't need her.\n\nHer feet were screaming at her in the heels she still had on so as soon as she saw an empty taxi, she waved it down so she could get home and crawl into bed. There was no way she was going back to the gala now.\n\nShe just needed to focus on rehearsals and then her opening. Once her show was done, she could leave New York and the memories of Alex Anders. Quinn was finally done being something to the person she loved, but not everything.\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "drama",
        "girl on girl",
        "lesbian",
        "lesbian drama",
        "lesbian novella",
        "lesbian sex",
        "lgbt",
        "new york",
        "theater"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/new-horizons-ch-31-38"
}