{
    "title": "Blizzard Ch. 28",
    "pages": [
        "\"Aren't you going to offer me a drink?\" Winter asked. She looked innocently into her mug, then discarded it with a negligent toss onto my bed; the teabag flew free and oozed itself down my wall and onto my coverlet. A rivulet of tea dripped out of the mouth of the cup and slowly pooled at the base of my pillows. \"Another drink?\" she corrected herself. She picked up a novel from the arm of the chair. I hadn't read that one in years, why wasn't it on the shelf? She flipped through it and sighed, then flung it idly onto my coffee table. Bring Me the Head of Prince Charming skidded out of its jacket and fell to the floor.\n\n\"You broke in. If this was America, I'd get to shoot you.\" I paced the length of my apartment. It was a tiny flat. I could make only three and a third paces between the kitchenette and bathroom. There was a bright side: I was about to stop going gray. If I never got the girls back, I'd pull out all my hair.\n\n\"I would like a cup of tea.\"\n\n\"You have a kettle and a teapot downstairs.\" I scrolled through my contacts. I put the ringing phone to my ear.\n\n\"81 grand a year, dental, and 6 weeks paid vacation every year,\" Peter answered the phone with a smile. \"And I'll double it if you can poach--\"\n\n\"Call Alex,\" I said. \n\n\"What? What happened?\" Peter's voice dropped. \"What did you do?\"\n\n\"Sam and Max were freaking out. Alex went to go check in on them. She could use the backup,\" I said.\n\n\"There's something you're not telling me,\" he said.\n\n\"I've --,\" I began to say.\n\n\"Stop ignoring me!\" Winter growled.\n\n\"There's another woman?\" Peter's voice was colder than Winter's.\n\n\"Never for me,\" I answered. \"Alex is everything I could ever need.\"\n\n\"And Max and Sam?\" he asked dangerously.\n\n\"And Max, and Sam, all three together,\" I had to admit. \"I've been luckier than I deserve. Than anyone deserves.\"\n\n\"It wasn't luck,\" Winter corrected.\n\n\"Yeah, you are,\" Peter agreed. \"How was she when you last spoke to her?\"\n\n\"Worried about Sam,\" I said. \"Give Alex a call. I can't give her support right now.\"\n\n\"If she says one word against you,\" he warned, \"I'm against you.\"\n\n\"If she said one word against you, we'd go to war.\"\n\n\"War it is,\" Winter said, her voice cold once again.\n\n\"Yeah, I hate liking you,\" Peter replied.\n\n\"I'm proud you like me,\" I said.\n\nHe muttered a goodbye, and hung up before I could reciprocate.\n\n\"Are we done now? Hmm? We have a discussion to--\"\n\nI made a \"blah blah blah\" flappymouth hand gesture at Winter. The apartment rocked in an angry gale. I didn't have Wayne's number. I floated a thumb over Jared Richardson's name. One press, one phone call. Would he--\n\nMy phone went flying as Winter backhanded it out of my grasp. It smashed against the wall over the stairs. I could've strangled her -- she had a long thin neck. I just couldn't bring myself to attack a woman. \n\nBesides, I rationalized, would it even do anything to Winter? If the lights went out in those imperious eyes, would the wind die with them? Nobody would believe I'd fought a ghost, a demon, a monster. I'd be the monster - a raving lunatic with a dead girl on his floor. Where would I see those smug eyes next - cops? Reporters? Jurors at my murder trial?\n\n\"You've been rude, childish, and unhelpful.\"\n\n\"We're done,\" I told her. \"I owe you nothing, and I have work to do.\"\n\nShit... My old cell phone was in one of my drawers, or maybe in one of the Rubbermaid totes. I needed to go get the SIM card from the wreck. \n\nWinter grabbed the lapel of my coat.\n\n\"You have me at a disadvantage,\" she said.\n\n\"Yeah, you're free to leave.\" I yanked my lapel out of her grip.\n\n\"Look, the Girl did something too extreme. I tried to correct it, but you just had to fight me. I've made my correction, but you are still due a small favor,\" she said.\n\n\"I've proven to myself that I do not need your favors,\" I said. \"I can take a better job. I can afford a better home. I won't settle for a lesser woman.\"\n\n\"No, I don't suppose you would,\" she nodded. She stepped back. To deny Winter was beautiful would be to look beneath her skin. She was petite. She was slim, strong, and striking. She spread out her arms, her translucent nightgown pricked up by the points of her tits. Her robe framed everything. A masterpiece. \"The beauty of Alexa. The wealth of Samantha. The docility of Maxine.\"\n\n\"Their three most insignificant qualities,\" I declared. \"Get your pasty frigid ass out into the snow.\"\n\nI lifted her by her shoulders and deposited her out of my path. My phone was a wreck. I picked off the back plate and had to bend the busted metal to ease the card out of its dock. She stamped her foot down on my shoulder. I turned my head. Her sex was open and engorged. She wore only that flimsy robe and semi-sheer nightgown.\n\n\"You misunderstand. I give you Winter Miranda Fitzpatrick,\" she said, and gestured to herself. \"I shall move on. The Girl is done with you. I promise the same.\"\n\n\"Yeah, your word means as little as your intentions.\" I slapped away her foot and headed for my closet. I ripped the cover off one of the bins. Video games and DVDs, cables and power cords, loose bits and broken board game boxes. Everything shuffled through. Nothing where I had left it. The bucket was as much a waste bin as it was storage.\n\n\"She is quite fertile,\" Winter said.\n\n\"Yeah, but will she make as good of a mom as Sam will?\" I shrugged. \"No second-bests.\"\n\n\"I leave when our debts are nil,\" Winter said. \"All you do is prolong my time with you.\"\n\n\"Fine,\" I stood. She brandished a bright smirk on her pale lips. \"I'll put down traps. Try not to rip out all of your hair when you get caught in the glue.\"\n\nHer fingernail touched my jaw. \"I am all you have left.\"\n\n\"Fuck that,\" I said. \"I have my pride, my dignity, and my girls.\"\n\nI said the words. I hoped I believed them. My stomach was ice. I kicked the tote and swallowed a curse. Fuck! I am such an idiot! It was probably still in the--\n\nI stomped to the cupboards and threw open the doors. I ransacked the shelves, pitching boxes of pasta, jars of jam, and cans of soup out my way. Crash! Clang! Clunk! A tin of chicken noodle ricocheted off the base of my new coffee maker, collided with the door of my oven, and plummeted to the kitchenette floor. I dragged the three-kilogram bag of rice forward, shoved my hand in, and pulled out my old phone. No response. Dead. Fuck!\n\nWait! Maybe I had to charge it. I dashed over to my computer and plugged it in. Nothing. I didn't scream in frustration. I kept it in check with Winter watching. I wiggled the connection and hit my mouse. I saw a flicker of the red 'charging' LED. I couldn't get it to stay on. I ignored that my work emails were open at home. I jiggled the USB connection more.\n\n\"Put on some tea,\" Winter said. \"Tell me what you want from your wife and I'll leave her mind as you like.\"\n\n\"Well, she needs to be three passionate young women who want me as much as they want our relationship to work.\" I bared my teeth.\n\n\"Not an option, even now. If you must indulge your hedonism, allow Winter to be the center of your love. A simple pure unwavering devotion. Submissive, eager, and loyal -- and a hunter of naive waifs. Each year she'll procure a young, sensual, pliant beauty befitting of your station. She'll share in your lusts as you use up, wear out, and throw away the prize at your whim. Imagine new face after new face after new face, fresh as Alex is today, gazing up at you adoringly until the day you die.\"\n\n\"But they wouldn't be Alex. Just the fresh faces of damaged, insincere prey,\" I said through clenched teeth.\n\n\"You need to stop thinking of your desires. This is about what you deserve.\" She settled back into my armchair. She crossed her legs and sat with perfect posture. \"Now we can hash out the details. You have Earl Grey. That'll be lovely.\"\n\n\"You want more tea? Make it yourself. In your own Goddamned apartment!\" I managed to get the cord jabbed in, and forced it to the left to keep the connection. Shit. I had to drag it out of its precarious position to put the damned card in it. I kept the swearing inside my head.\n\n\"Put that down and speak with me!\" Winter bellowed. The apartment shook and I heard creaks and pops. I pulled myself up off the floor. \"I am getting impatient.\"\n\n\"Lovely,\" I beamed. \"Don't let the door hit you on the way out.\"\n\n\"What are you smiling at?\" she hissed. Winter's serenity was gone. I felt bitter satisfaction.\n\n\"You either bring my girls home--\"\n\n\"What home!\" she shouted. \"No roots! No permanence! No women! What is this place!\"\n\n\"It's a starting point,\" I smiled. \"And it is home.\" Or will be as soon as my girls get here, I finished in my head.\n\n\"There,\" she eased. \"I see the cracks now. You tell yourself that there is hope. Let the despair in and we'll build you a new life.\"\n\n\"And let you be free of me?\" I scoffed. \"You want to get out of here? Bring my girls back.\"\n\n\"No,\" she said with a smile. \"I see why you're so enamored with denial. Your face twists so delightfully at that word. No, I will never bring you those girls. No, I will always push them away.\"\n\n\"Then they just need to push through you,\" I said.\n\n\"Oh, please,\" she laughed. \"You know who you are. You know the small scrapings you have made over the last nine days are nothing. You know those girls are princesses. And you are no prince. Now, show your guest hospitality, offer her a drink, and heed my words.\"\n\n\"Oh, no,\" I shook my head. \"I don't own the place, see. Take up your order with the management.\"\n\n\"Stop!\" She rocked the apartment hard again. \"Let's finish this.\"\n\n\"No,\" I said. \"Let's take our sweet time. I haven't even called you a bitch yet. I've got rounds and rounds left in me.\"\n\nI got the phone balanced and charging again. The apartment rocked. The howl of the wind began to sound in the walls. The phone slipped off the wobbly desk and the screen shattered on the floor.\n\n\"Shit!\" I growled.\n\n\"Good. I choose what happens next,\" she said. \"I'll forego the hospitality. Business only. Get over here, sit yourself down, and listen to me.\"\n\n\"Why are you in a hurry?\" I asked. The wind kicked again and she smiled.\n\n\"Oh, this old building? It's hardly up to code,\" she said.\n\n\"No,\" I said, looking in her eyes. I just had to delay. I knew this would work.\n\nI knew it would. \n\nIt had to.\n\nI smiled. \"No, it isn't.\"\n\n\"Daring as Alexa. Devoted as Maxine. Determined as Samantha.\"\n\n\"You wish,\" I laughed.\n\nThe wind kicked. The beams creaked. Her head swivelled.\n\nThe door burst open.\n\nAlex was charging when she got to the kink in the stairs. Sam and Max ran up behind her. Alex's boot, snow-covered and slippery, stepped on the broken phone and she tumbled backwards onto her friends. Max and Sam caught her by the shoulders and held her up at an awkward angle; I vaulted the railing and jumped six feet down to land on the step, between her splayed legs.\n\n\"Are you OK?\" I hollered.\n\n\"No!\" Alex said sharply. \"You got my dad involved!\"\n\n\"You didn't answer your phones! I was worried!\"\n\n\"What are they doing here!?\" Winter nearly jumped to her feet, but she schooled her features and sat back down. The wind curled up the staircase and hammered me in the chest. I grabbed Alex's waist. Sam was holding one of Alex's shoulders, and grabbed the other one. Max released Alex, then threw herself bodily into the door and fought the wind.\n\n\"I got her,\" I told Sam. She let me pull Alex up into a hug. Two bodies fought the door but the wind howled.\n\n\"This looks like a job for Team Girlfriend,\" and Alex kissed me and spun out of my hug. She, Sam, and Max forced the door shut. Alex reached over Max's hair and set the deadbolt.\n\nThey all turned and looked up at me. I was flying down to hug them all. Sam jerked back as I landed in front of them. Max bit her lip uncertainly. Alex grabbed Sam by the scarf and Max by the belt. She pulled them into our hug.\n\nThe apartment cricked and cracked. The wind howled.\n\n\"I was so afraid you wouldn't make it!\"\n\n\"We didn't hear the phones ringing!\" Alex frowned.\n\n\"Why didn't you call my dad?\" Max asked.\n\n\"I didn't have his number,\" I admitted.\n\n\"But you had my Dad's,\" Sam worried.\n\n\"Girl, I just slipped and nearly killed us all on his broken phone,\" Alex said. She pushed out of the hug and stomped up the stairs. Sam thrust me into Max and charged after Alex.\n\n\"It's bad out.\" I didn't know what to say. There's always the weather.\n\n\"It's warm inside.\" Max kissed me. \"Now, up.\"\n\n\"Get out of his fucking chair...\" Sam snarled.\n\n\"And come get my boot rammed so hard up your rancid frozen cunt that you'll taste eggs!!\" Alex enunciated, and raised her fists, set her feet, and squared her hips in a fighter's stance.\n\n\"Maxine, put on some tea for everyone,\" was Winter's only acknowledgment of the girls' presence. \"I suppose I'll have to show you all what you're in for.\" She looked calmer, stronger, and more confident. I grabbed Max's hand.\n\n\"The bitch gets nothing!\" Max snarled under her breath.\n\n\"Just the door,\" I agreed. I turned to Winter. \"They're mine. You can't stop me from loving them.\"\n\n\"Oh, Gene,\" she said tenderly. \"I'd never give you that solace. Not after how you've been treating me.\"\n\n\"Get out of his fucking chair...\" Sam burned.\n\n\"It's nobody's chair anymore,\" Winter laughed.\n\nAlex's face burned red, her lips peeled back from her teeth, and she dropped her fists.\"It's Gene's!\" she shrieked.\n\nWinter shook her head. \"He forfeited his throne, he forfeited her boon, and so he forfeited your love.\"\n\n\"Yeah? Well, he still has the--\" \n\nMax clapped a hand over Alex's mouth hard enough to bend her friend over backwards. \n\n\"Theatre nerd!\" Sam barked. \"Show don't tell!\"\n\nAlex nodded frantically; Max released her. \"What?\" I asked. \n\nWinter shook her head. \"Fine, I tire of your obstinacy. Gene Brian McArthur has rejected my offer,\" she announced. \"You'll take whatever I give you. Feel me fill this room.\"\n\nHer smile was ice and her eyes were fire. The gale raged. The walls cracked. The Lady rose.\n\n\"Feel this!\" Sam pointed Max to Alex's handbag. That gave Sam a full half-turn before her fist connected. She swung a haymaker right into Winter's collarbone. The woman gasped and staggered back. She balanced herself with two hands on my armrest. Max stepped in front of Sam and jabbed a short hard blow under Winter's ribs. She wheezed for air her lungs couldn't inhale. Alex ducked, and yanked both of Winter's legs up into the air.\n\n\"Let go!\" Winter squealed. The wind hissed in next to the fridge. I saw Alex shiver, her grip loosening. I ran across the room, ripped the cover off my bed, and stuffed the blanket into the crack.\n\n\"What are you doing?\" I asked.\n\n\"Changing her mind. Like she did to us,\" Sam grinned fiercely. Max pulled one of the boots out of Alex's bag and passed it to Sam. Alex stamped her left foot down on Winter's sternum.\n\n\"What are--Whose are those?\" Winter kicked and squirmed. Alex swayed and fought Winter as Sam and Max both tried to force magic boots onto Winter's feet.\n\n\"One at a time!\" I yelled. The wind bellowed against the apartment. A crack split in the wall near the bathroom. Plaster sprayed into the room over my computer. My rage bellowed back. I saw Alex's shoulder shiver. I couldn't hold Winter out.\n\nI dashed across the room. I grabbed Winter's foot before she could kick Max in the jaw. I turned and twisted Winter. Her face rubbed across the floor.\n\n\"You didn't fight this hard!\" Max shouted at Sam.\n\n\"It was either lose a fight or lose you,\" Sam admitted.\n\n\"Fight harder this time! We lose this and we lose each other!,\" Alex said, rubbing her arms, and pushed her foot down on Winter's head.\n\n\"No! Not this! I'll bind them back to you! I'll fix Samantha! I'll give you more!\"\n\n\"Sam is fine! And I don't want anything from you!\" I snapped. Alex had Winter's thigh. I had the calf. Sam forced in the toes. Max yanked up the zipper. The apartment screamed and cracked. The floor dropped and wobbled.\n\n\"We gotta get out of here!\"\n\n\"Other leg!\" the girls screamed at me. I grabbed the other leg, and yanked it straight. I may have yanked too hard: Winter shrieked and kept shrieking. Tears streamed from her eyes as the leg hung limply in my hands, bulging awkwardly at the hip. She flailed her arms and the booted leg. Maybe there was a real person in there too. The winds tossed Alex's hair out of her hood and up on her toque. I could tell the girls were running on fumes.\n\n\"Girls, I love you,\" I said. Winter twitched, still shrieking, and I watched the twisted leg straighten itself as I held it.\n\n\"Team Girlfriend!\" Max groaned through chattering teeth, and held down Winter's booted leg. Alex grabbed Winter's arms.\n\n\"Team Girlfriend!\" Sam growled, and shoved the second boot down onto Winter's foot.\n\n\"Team Girlfriend!\" Alex grimaced. Her cheeks were red in the cold wind. I grabbed Sam's shivering fingers. The wind howled. Winter's leg slipped back into a less painful-looking position with an audible pop. Sam pulled the second zipper closed.\n\nThe wind stopped dead. The apartment kept shaking.\n\n\"Fuck! It's not safe!\" I grabbed Max and Sam. I pulled them with me. Alex took the lead and we rushed down the stairs and out the door. The apartment roof creaked and seemed too far over my head.\n\n\"Holy shit! Let's go!\" Sam screamed. I almost followed them off the step. \"Where are you going!\"\n\n\"He's going to be Gene,\" Max said as I slammed open the door to Four.\n\n\"Gene! What's going on!\" Mrs Rabinovich was holding tight to her kitchen counters. Alex slipped in beside me.\n\n\"We have to go. The wind damaged the building. It's not safe!\" I shouted. I rushed over and the old woman took my hand.\n\n\"Caylee!\"\n\n\"I got her!\" Alex had rushed to the bedroom and carried out a fluffy gray cat who was hanging onto her shoulder for dear life. \"I got her!\"\n\nI saw the plaster cracking in her walls. \"Excuse me!\"\n\nI grabbed Mrs Rabinovich, threw her over my shoulder, and ran to the curb carrying her. Alex, Max, Sam, and the cat were already waiting for me. I set Mrs Rabinovich down on her feet, and looked back. Winter, or what was left of her, wasn't coming out of my apartment.\n\n\"Christ,\" I said.\n\n\"Gene, don't!\" Sam whimpered.\n\n\"I'll be fine!\" The wind was dead. I ran back to my apartment. I was up the stairs. Winter sat on the floor in her lingerie, looking down at the boots. She sneered at me and cursed.\n\n\"Fuck you too,\" I said. I threw her over my shoulder and ran down the stairs. The cracking building and the icy step buckled. The boards gave out beneath my weight, and so did my ankle, as I sailed across the frosty porch. We crashed into the railing. Dust, splinters, and noise exploded out my door frame. Apartment Two had collapsed into apartment One. Winter's stunned body pinned me to the ground. Her leg was striped red by the rails.\n\n\"Gene!\" Max and Sam were over to get me. They would have heaved Winter aside, left her to her impotent curse words, and dragged me back to the curb where a crowd was gathering. I shook my head. I picked up Winter and nearly spiralled down on my weak ankle. \n\n\"Stop being the hero,\" Max pleaded. She became the crutch under my left arm. Sam took Winter from me. I was too injured and heavy for Max.\n\n\"What in the fuck?\" A big guy stepped out of Three. He saw me. I saw him. I'd never liked him, although to be fair I didn't know him. \"Here, redhead. He's too big for you.\"\n\nThe six of us arrived at the curb. The big guy from Three sat me on the snowbank. Sam dumped Winter a little too close on my left. I hopped my butt a few inches to the right before I was swarmed by Alex and Max with Sam in tow. A cop car and an ambulance were already turning down the end of the street. A first snowflake landed on my nose.",
        "\"No... No...\" Winter shook her head and shivered. Tears froze in her eyelashes. Guy from Three put his leather jacket over her shoulders.\n\n\"Yes. Yes.\" The voice echoed on an army of smirks. Eight redheaded girls were sprinkled throughout the gathered crowd. I saw Carmine and Gretchen... or was that Gretchen and Carmine? Or maybe the one on the far end was Carmine and the girl in the back was Gretchen.... A few I knew were not, as they wore restaurant-branded shirts for restaurants I had never been to.\n\n\"You did so much better than I could've hoped,\" Faye said as she came down the sidewalk from the other side. The snow grew heavier and heavier, snowflakes gathering on me and my girls with no wind to blow them away. She swiftly appraised Sam, Max, and Alex, who watched her suspiciously. She grabbed Sam's right hand; Sam yanked it back. Then she turned to me. \"They'll never stop loving you.\"\n\n\"If you change them, I'll --\"\n\n\"Oh, I don't have to. You and I are square,\" she said. She leaned down and hugged me. \"As of right... now.\"\n\nThe pain in my ankle evaporated.\n\n\"Ma'am, step aside.\" The paramedics directed Faye away from myself and Winter. Faye squatted in front of Mrs Rabinovich and scratched the back of Caylee's neck, then crossed the street and I lost her in the crowd.\"What happened?\"\n\n\"He hurt his leg pulling that one from the building,\" the older woman said, and pointed to Winter.\n\n\"Shit! Her lips are turning blue! She's not shivering! She's got hypothermia!\" One of the paramedics rushed by to help the distraught nearly-naked woman.\n\n\"Motherfucker...\" said a cop. \"Shit. Excuse my language. Everyone back up, back away. Back up!\"\n\n\"Stay down,\" the paramedic said, putting a hand on my shoulder. \"You're not getting on that ankle until we get you through an x-ray.\"\n\n\"Um, OK.\"\n\n\"What hospital are you taking my boyfriend to?\" Max asked.\n\n\"QEII,\" he answered. \"Don't worry, your girlfriend can ride with you.\"\n\n\"All of us?\" Alex hoped. Sam stepped forward. Max took Sam's hand.\n\n\"What?\" The paramedic looked at the three girls and at me. The smile on his face was disbelieving as much as it was impressed. \"You greedy son of a bitch.\"\n\n\"No,\" my older neighbor said as she petted and reassured her cat. \"He deserves every one of them.\"\n\n\"And can handle them, too,\" said guy from Three. My girls all turned on him. \"What? Don't you know how thin our walls are?\"\n\nApartment Three collapsed into apartment Four. \"We do now,\" Max said.\n\n________________\n\nThe EMTs would only let one girl ride along. Alex kissed Sam and pushed her into the ambulance with me, then she and Max hurried to the hospital so we could all wait nearly three and a half hours in triage. I sat in the outpatients bed getting fussed at by three very attentive, very huggy, very loved volunteer nurses. I can't pretend to say I understood the questions Max asked of the doctor who saw me.\n\n\"Dad!\" Max was shocked when Wayne looked in on us. She hugged her father immediately.\n\n\"A hero again, huh?\" Wayne rubbed his daughter's hair and met my eyes. \"Alex, your father headed back out to grab some coffees. He should be here soon.\"\n\n\"How were the roads?\" I asked. It was not a day to drive across the province. Not that I would have done less. Try and stop me if I was worried about Max.\n\n\"Snowy, it's been like an inch an hour.\" He shook his head. \"Sometimes I wanna go where we get spring in March.\"\n\n\"I'm thinking somewhere it's all sunshine, all the time,\" I said.\n\n\"I don't mind a bit of snow,\" Alex said. \"I met the man of my dreams in a blizzard.\"\n\n\"Hey, stop taking men out of my dreams!\" Sam poked Alex.\n\n\"Our dreams,\" Max let go of her dad to hug the other girls.\n\n\"I can't say it's what I pictured for my girl,\" Wayne said to me. \"But I want her happy. You... the three of you... are the ones to do it.\"\n\n\"Thanks,\" I said.\n\n\"Yeah, you're going to get a lot of envy, Gene,\" he laughed. \"Until their periods sync up and you have to deal with that every month.\"\n\n\"Or he could just keep two of them pregnant until the end of days.\" Peter came in through the curtain, carrying a tray of coffees and a bag of pastries from the cafe. He caught Wayne's eye. \"Oh, too much again? Sorry.\"\n\n\"I think I'd like to get my degree first,\" Max said.\n\n\"That's not a bad idea,\" I agreed.\n\n\"Same here,\" said Alex. \n\nSam didn't speak. She pointed to her cheeks bulged out with a bite of cinnamon roll. She smiled and gave a thumbs up.\n\n\"Excuse me,\" the doctor said, poking his head into the room. He navigated around the many people in my small corner, and looked at my X-ray.\n\n\"The good news is, nothing's broken, and it doesn't seem to be strained,\" the doctor said. \"Pain?\"\n\n\"No, thank you. What else do you serve?\"\n\n\"Cute,\" the doctor said. \"Alright, ibuprofen should handle anything you might be feeling. Ladies,\" he said to them and smiled, \"he's free to go. You can play nurse at home.\"\n\n\"Except a home is now something you lack,\" Peter said. I frowned. He pulled out a thin cardboard envelope and passed it to his daughter. \"I got you a room at The Westin.\"\n\nAlex furrowed her brow. \"You always stay at The Lord Nelson.\" \n\n\"Yeah, but when I drove by the apartment, I took a friend's recommendation,\" Peter said with a smile. \"Now, I don't want to know the details of what you get up to tonight, but I'd rather not be in the same building when you turn it to rubble.\"\n\n\"Not your best, Dad,\" Alex smirked.\n\n\"What? Come on, that was amazing!\" Peter laughed.\n\n\"It was almost funny,\" Alex conceded. \"So maybe it was your best.\" Peter laughed even harder.\n\nEventually, the fathers drove us down to the hotel. I thanked Peter. I accepted thanks from Wayne. I led the girls through the front doors. Jared Richardson paced the lobby.\n\n\"Hello,\" I said. Sam cinched herself tight to my side. He looked me over.\n\n\"Gene,\" he said.\n\n\"Don't say anything I'll hate you for,\" Sam motormouthed. \"I'm not going anywhere but where we and Gene go together.\"\n\n\"Your mother has had a lot to say to me since you called her, sweetheart.\" He walked over to me. I wasn't expecting to be hugged. Sam never got out of the way.\n\n\"You pulled a woman out of a collapsing building,\" he said after stepping back.\n\n\"Two women,\" Sam said forcefully.\n\nHe looked at her, then continued as if she hadn't spoken. \"Sam loves you. From this point on, leave the other woman inside. I did not lose my daughter to you. I will not lose a son.\"\n\nI watched him walk out the front of the hotel. Sam couldn't stop smiling despite the tears cascading from her eyes. I squeezed her tight.\n\n\"Can you pull yourself together, Sam?\" Alex asked. I gave her a sharp look. \"We're all together. We're all safe. If you keep up the tears, you'll kill his boner. Heroes get the girl, and I don't know about you two? But I need to get got.\"\n\nSam chuckled as she wiped her eyes off on the back of the sleeve of her parka. She stepped back and grabbed my hand. We took off at a run to the elevators. Sam looked over her shoulder at Alex, stuck out her tongue, and said, \"Not until I've had my turns!\"\n\n\"You mean 'turn'!\" Max said, chasing after us.\n\n\"Don't be silly, Max,\" Alex laughed, dashing past the redhead. \"She says exactly what she means.\"\n\n \n"
    ],
    "authorname": "redsliver",
    "tags": [
        "college girls",
        "ff",
        "harem",
        "magic",
        "mf",
        "mff",
        "mfff",
        "romance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blizzard-ch-28"
}