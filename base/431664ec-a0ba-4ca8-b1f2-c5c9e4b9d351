{
    "title": "Neglected Black Housewife Ch. 02",
    "pages": [
        "\"So how is this Thursday night thing supposed to work?\" I ask Cyn, while we cuddle naked on the bed, having exhausted ourselves in my shower.\n\n\"I'm not really sure, Mike.\" She confesses. \"We've never invited anyone to join us before. I'll call you after I talk with Barbara and Shelly.\" She says, while drawing circles on my chest with her fingertip. \n\nWe've been in bed all day and took a much-needed break about half an hour ago for a shower. While lathering soap on each other, Cyn smiled seductively and turned around. When she bent over and rubbed her luscious ass up and down against my hard cock, I couldn't resist. With her hands braced against the tile wall for support, I pounded into her hungry pussy from behind. \n\n\"Call them now.\" I suggest as I plant kisses all over her luscious brown tits. \"Let me listen in.\"\n\n\"I don't know, Mike.\" She says, as I suck her thick black nipple into my mouth.\n\n\"Come on, Cyn.\" I say, between nibbles. \"What are you trying to hide?\"\n\nWe go back and forth for a few minutes, but I finally convince her. Using her cell with the speakerphone engaged, she calls Barbara, who coincidentally is on the phone with Shelly.\n\n\"Cyn?\" Barbara says excitedly. \"We were just talking about you. Hold on, while I conference Shelly in.\" She says. We hear a click and Cyn rolls onto her stomach, smiling at me as Shelly comes on the line. \n\n\"Well?\" Shelly says. Cyn mouths her name to me, so I can associate the voices. \n\n\"Well.\" She pauses dramatically. \"He's coming over Thursday night to meet both of you.\" Cyn says laughing. She's leaning up on her elbows, holding the phone close to her cheek. I love how her tits look, hanging temptingly between her arms. My cock stiffens at the mouthwatering sight of her thick black nipples crushed against the white sheet.\n\n\"Wait a minute.\" Barbara says, Cyn mouths Barbara. \"Isn't that pretty fast? I mean... you hardly know this guy!\" \"Oh, I know him.\" Cyn says, running her eyes over my naked body. \"I know every inch of him.\" She laughs again, her large brown tits jiggling against the sheet.\n\n\"Details.\" Shelly says, but before Cyn can answer, Barbara cuts her off.\n\n\"Come on, Cyn. What do you really know about him?\" She asks, cautiously.\n\n\"Well, I got here around nine and by lunch time I'd already had four orgasms.\" Cyn smiles at me, appreciatively. \"I've lost track since then.\" She says.\n\n\"I don't mean that! It's not all about sex!\" Barbara says.\n\n\"The hell it's not!\" Shelly cuts in. \"That's exactly what this is about. Give us the details, girl! He recovers that fast?\" Shelly says, laughing.\n\n\"Well he's pretty resilient, but he used his mouth for the first two.\" Cyn says, blowing me a kiss. \"And what a talented tongue! My God! I've never cum so hard!\" She says.\n\n\"That's not enough.\" Barbara says. \"Are you sure you want him in your house, knowing where you live? Do you trust him?\"\n\n\"Barbara.\" Cyn says, calmly. \"He's a sweet guy, He focuses totally on my needs, he's very loving and yes, I trust him.\" She smiles at me.\n\n\"That's good enough for me.\" Shelly says, definitively. \"What did you tell him about us?\" She asks, excitedly.\n\n\"I told him the truth and asked if he wanted me to share him with you. He wants to meet you and see where it goes.\" She says, caressing my inner thigh with her hand. \"He's not a gigolo, he's just a guy I met. We'll have to see what happens.\" I move closer to Cyn and my eyes devour her incredible body. Her shapely brown thighs come together in the fleshy firmness and dark skin tone of her perfect ass. As I caress her cheeks, she spreads her legs, inviting my hand to explore between them.\n\n\"I don't know.\" Barbara says. \"What happens if your husband comes home early... or if the kids see him? You're taking a big chance bringing him to the house.\" \"We're not going to fuck him at the house.\" Cyn pants, as I run my finger up and down between her moist pussy lips. \"He's just going to meet you.\"\n\n\"I want four orgasms!\" Shelly says. \"I trust Cyn's judgment and I'll fuck him Thursday night.\"\n\n\"Not at her house!\" Barbara says exasperatedly \"Maybe we should meet somewhere else.\" She says. \"Maybe like a restaurant or a bar or somewhere.\"\n\n\"Yeah, that won't attract too much attention.\" Cyn says, smiling at me as I slip a finger between her wet cunt lips. \"How about this?\" She asks, talking rapidly into the phone. \"I'll rent a room for Thursday night at that hotel downtown and we'll see who ends up in it, okay?\" She says, stifling a moan, as I pump my fingers in and out of her pussy. \"I've got to go!\" She breathes.\n\n\"Sounds good!\" Shelly says. \"I'll dress for the occasion.\" \"Whatever!\" Barbara says, hanging up.\n\n\"You are stunning!\" I tell Cyn as she ends her phone call and tosses her cell phone aside.\n\n\"Stunning?\" She smiles. \"I thought I was ravishing.\" She teases, raising her ass up and spreading her legs farther apart.\n\n\"Stunning, ravishing, captivating, delicious.\" I smile. \"Pick your adjective.\" I say, using my other hand to squeeze her sumptuous ass cheeks. Cyn rises up on her hands and knees and pushes back against my fingers, as they rapidly piston in and out of her increasingly wet pussy.\n\n\"Whatever you want to call it.\" She says, wiggling her ass and pushing back against my hand. \"Right now, why don't you put that thing back where it belongs.\" She says, smiling over her shoulder at my hard cock. \n\n\"Is this where it belongs?\" I ask, kneeling behind her and rubbing my cockhead up and down between her wet pussy lips. \n\n\"Mmmmm.\" She moans, thrusting her ass back towards me and impaling herself on my rigid pole. \"More like this!\" She says, grinding her ass against me, as I grip her hips and start pumping in and out of her.\n\n\"Oh yeah!\" She cries, as I pick up the rhythm and watch my cock slide in and out of her fur-trimmed hole. \"I can't get enough of you.\" She breathes, as I marvel at the sight of her thick, black pussy lips gliding back and forth along the length of my cock. \n\n\"Oh yes! Fuck me harder, Mike!\" She yells and I close my eyes and start slamming into her, yanking her ass back against me, as I thrust forward. I'm pounding into her like a jackhammer and her pussy is on fire! I can feel the heat emanating from her slick, velvety pussy walls, as my hard cock pummels her smoldering hole. \n\n\"Ohh! Ohh! Ohhhh!\" She cries on each downward stroke of my cock. \"Oh fuck!\" She screams. \"I'm cumming again!\" She pants, as she rams one of her hands between her legs and starts frantically rubbing her clit.\n\n\"Ohhhhhhhhhhhhhhhhhh! Yeeeeeaaaah!\" She cries, clenching her pussy muscles around my cock, as her orgasm shakes her body and jiggles her ass cheeks against me. My cock responds to her quivering grip and I ram it all the way home, erupting in a fountain of cum deep inside her pulsating pussy. My hands continue holding her hips, as I jerk against her firm round ass cheeks, spewing several smaller loads, before I'm completely spent. \n\nI follow her, as she lowers her body to the bed, her pussy muscles keeping my cock trapped inside her saturated hole. I kiss her neck as I settle my body against her back. We lay there for quite some time, catching our breath. \n\nI still can't believe that Cyn finally called and said she wanted to get together. I immediately blew off my classes and it's been well worth it! She's insatiable and I'm sure we would keep going into the night, if she didn't have to go home to her husband and kids.\n\n\"I'll call you if I can, but we are definitely on for Thursday night, right?\" Cyn says, as she digs through her purse for her car keys. \"God! This was wonderful!\" She says, kissing me hard on the lips.\n\n\"Yes it was.\" I say, as she steps out the door. Fuck! Fuck! Fuck! I pound my fist against the wall. What a day! We actually hooked up! I'm almost jumping up and down. Now I just have to get Thursday night off.\n\nI call Amber to see if she'll take my Thursday shift. She says she can do it but she has to cancel a commitment she made to her parents. I hold on while she talks to them.\n\n\"Yeah, I can do it!\" She says, when she gets back on the phone.\n\n\"Thanks Amber. I'll owe you for this.\" I tell her sincerely.\n\n\"And I'll collect.\" She says, teasingly.\n\n\"It's a deal.\" I tell her.\n\n\"Actually Mike.\" She continues. \"There is a big favor you can do for me, and I'll owe you, big time!\" She says.\n\n\"Sure, what is it?\" I ask.\n\n\"Well...\" She hesitates. \"There's this party Friday night for all the cheerleaders in my squad. I don't have anyone to go with and it would be so cool if I showed up with a college guy. If you'd... you know... like... pretend to be my boyfriend. Just for the party!\" She adds. \"I would be forever in your debt.\"\n\n\"Forever in my debt, sounds perfect.\" I didn't even know Amber was a cheerleader, but the idea of a high school cheerleader party sounds intriguing. \"I'm not working and I don't have any plans, of course I'll do it.\" I tell her. \"Do I get all the normal boyfriend privileges?\" I tease.\n\n\"You already get those, Mike!\" She says. \"What more privileges are there?\" She laughs. \"You're the best! I'll text you with the details. Thanks, Mike!\" \n\n\"Thanks for covering my shift Thursday night.\" Hanging up, I lie back on my bed trying to imagine what will happen Thursday night at Cyn's house. \n\nCyn calls on Wednesday and we talk for about half an hour. \n\n\"I wasn't sure if I'd talk to you before tomorrow night.\" I tell her.\n\n\"I woke up this morning and felt empty.\" She says quietly. \"Like I was trapped between the incredible memories of yesterday and the exciting anticipation of tomorrow, but nothing for today. I had to call you.\" She says. \"Just to hear your voice.\"\n\n\"I wasn't sure how you'd feel about yesterday, once you got home.\" I tell her. \"I wondered if you'd want to see me again once you'd gotten your revenge out of your system.\"\n\n\"It's not about revenge, Mike.\" Cyn says, trying to explain. \"When I found out about my husband's infidelities, I wanted to confront him and have it out. Shelly was the level headed one, who made me think through the consequences of that.\" She says and I hear her take a deep breath. \n\n\"I realized that I didn't want my marriage to end. There's a lot I still love about my husband and he's a great father to our kids.\" Cyn says. \"But once I decided not to confront him, I needed a way to live with his infidelity. Just ignoring it, and going on as if nothing happened, would make me feel like some pathetic, submissive housewife and I knew I would hate myself for it.\" She takes another breath and I wait for her to continue. \n\n\"It took a while to work through it, but I finally realized that if we were both fucking around, I could look him in the eye and not feel humiliated.\" Her voice has gradually gotten quieter. \"Does that make any sense?\" She asks, nearly whispering\n\n\"Yeah.\" I answer. \"I'd never thought about it like that.\" I say honestly. \"But it has a weird logic to it.\" I answer. \"Do Shelly and Barbara feel the same way?\" I ask.\n\n\"I'm not sure.\" She says. \"You heard them on the phone, yesterday.\" She laughs. \"Shelly wants to jump your bones and Barbara... I don't know.\" She says. \"We'll see tomorrow night.\" \n\n\"I can hardly wait.\" I tell her. It's only after I hang up that I realize that's the third version I've heard of why she wanted to hook up with me. Oh well, all is fair in love and sex... I guess.\n\nThursday night, I arrive early, nervous as hell. After changing three times, I finally decided to just wear a pair of khakis and a button down dress shirt. The house is five minutes from the bookstore, in a nice neighborhood with manicured lawns and expensive landscaping. \n\nI'm about to ring the bell, when the door swings opens and two little kids burst out, dragging a teenage girl behind them. \n\n\"Wait!\" She laughs. \"Not so fast.\" She says, almost running into me. \n\n\"Oh! Hi.\" She says, stopping dead in her tracks and holding onto a little boy's hand. \"Can I help you?\" I'm almost speechless. She looks enough like Cyn to be her daughter, but she's a teenager, so she couldn't be.\n\n\"I'm here to see Cynthia Emry.\" I stammer. Her short black hair barely covers her ears, which are adorned with hoop earrings and several silver piercings. She's wearing tight, low slung, blue jeans and a black v-necked sweater that accentuates the soft curves of her medium sized tits.\n\n\"Aunt Cyn!\" She yells through the open door. \"Someone's here to see you.\" She smiles. \"I'm Jasmine.\" She says, disengaging her hand from the little boy and extending it to me. \n\n\"Mike Judd.\" I say, shaking her hand and enjoying the feeling of her soft flesh.\n\n\"Come on, Jas.\" The little boy says. \"Let's go.\" He's tugging at her arm, trying to get her off the porch.\n\n\"I'm taking them roller skating.\" She says, shrugging. \"I better go. Aunt Cyn should be down in a minute.\" She assures me, bending over to pick up the little girl. Her sweater rides up above her jeans as she bends over, revealing a black thong stretched across the top of her ass, with a thin strip of it disappearing into her tight jeans. \n\n\"Hi Mike.\" Cyn says from the doorway, catching me staring at the sway of Jasmine's sexy round ass, while she carries the little girl to the car.\n\n\"Hi.\" I say, as I step into the house. \"Your kids are cute.\" I say, not to mention your niece!\n\n\"Thanks. You're a little early.\" She says, kissing me on the cheek. \"I thought they'd be gone before you got here.\" She's dressed in jeans and a yellow sleeveless blouse that I think I've seen her wear to the bookstore. She looks beautiful and the memories of Tuesday stiffen my cock, as I step closer to her. \n\n\"Sorry.\" I say, kissing her on the lips. \"You look delicious.\" I tell her, as I squeeze her ass cheek through her jeans. \"Is anyone else here?\" \n\n\"Not yet. Shelly and Barbara should be here any minute.\" She says, leading me into the living room. \"Make yourself comfortable.\" She says, gesturing to the couch. \"Would you like a coke?\"\n\n\"That'd be great.\" I answer. \"I'm a little nervous about this, Cyn.\" I confess, as she walks towards the kitchen. Her jeans hug her firm ass cheeks and I'm distracted by the seesawing action, which I assume she's exaggerating for my benefit.\n\n\"Yeah. Me too.\" She smiles at me over her shoulder. \"Don't worry, you'll be fine.\" She calls from the kitchen. \n\n\"I hope so.\" I call back, as the doorbell rings. \n\n\"Get that, will you, Mike?\" Cyn says, as she walks into the living room carrying two cokes and a plate of cookies.\n\n\"Sure.\" I say, jumping up from the couch and answering the front door. \n\n\"You must be Mike!\" Shelly says. I'm pretty sure it's Shelly because of her voice and Cyn's description. She steps into the entryway, wraps her arms around me and gives me a kiss on the cheek.\n\n\"I'm Shelly.\" She says, keeping her hands on my back and her large tits crushed against my chest. \"And you're gorgeous!\" She exclaims, leaning back to look me over, while she keeps her hands on my waist. She's shorter than Cyn, and when I look down at her, all I see are tits. She's wearing a scoop necked top and her huge black tits are barely contained by her lacy black bra. \n\n\"Thank you.\" I say, tearing my eyes away from her significant cleavage to look at her face. \"I'm very glad to meet you.\" I say, as I take in her features. She has a pretty face; much darker than Cyn's and her hair is almost shoulder length. \n\n\"I'm Barbara.\" I hear from behind Shelly. \"Nice to meet you too.\" She says, sarcastically as she pushes past us into the living room. I catch a glimpse of her face as she walks by and damn if she doesn't look like Halle Berry! Her hair is in tight braids against her head, cascading down into loose ringlets that brush against her shoulders as she walks. She's wearing a knee length skirt that is stretched tightly across the curves of her ass, a form-fitting turtleneck that clings in all the right places, and brown thigh-high boots. She has light brown skin and a body that is absolutely breath taking. \n\n\"Don't mind her.\" Shelly says, keeping her arm around my waist as we walk into the living room. \"She'll warm up to you soon enough.\" She says. Fuck! I hope so! I watch Barbara sit down on one of the chairs opposite the couch and her skirt rides up her light brown thighs. Her expression seems to be a mixture of apprehension and disgust. Shelly and I sit side by side on the couch and she wraps her arm through mine, crushing her ample breast against me.\n\n\"He's wonderful!\" Shelly says to Cyn, who is just sitting down in the chair next to Barbara.\n\n\"I think so.\" She says quietly, as she watches Barbara's reaction. We make small talk for a while, Cyn drawing me into the conversation to talk about my classes. Shelly can't keep her hands still, rubbing up and down my arm or across my back, dipping her fingers inside the waistband at the back of my pants. She's sitting about as close as possible without being on my lap and our thighs are pressed against each other.\n\n\"Jesus, Shelly!\" Barbara cries. \"You're acting like a damn dog in heat!\" She says, exasperatedly. \"Give it a rest!\" She says, fidgeting around on her chair and unknowingly giving me a glimpse of her black panties, as she uncrosses and crosses her legs.\n\n\"And you!\" Barbara says, turning her icy glare towards me. \"You must think you died and woke up in a vat of chocolate, or something! Sitting here all smug, like you're some plantation owner picking out which slave girl to fuck!\" My mouth drops open and I start to speak, but Shelly beats me to it.\n\n\"Look.\" Shelly says, pulling her hands away from me, as she leans forward on the couch. \"Don't judge me, Barbara!\" She says, pointing her finger across the coffee table. \"I work 45 hours a week helping troubled kids trying to find purpose in their life. Then I go home to the typical demands of a wife and mother; cooking, housework, homework, you name it! If I want to spend a few hours on a Thursday night doing what I want to do, even if that's acting like a slut, then I damn well can. I know what I'm doing and I know what my husband's doing while I'm here doing it!\" She says, sitting back on the couch, her large tits rising and falling with her increased breathing.\n\n\"And don't say those hateful things to Mike!\" Cyn says. \"He's here because I invited him. He's only known about you and Shelly for two days. He's probably more stunned than smug. And where the hell did that slave analogy come from?\" She asks, rhetorically. \"You've got some real issues, girl.\n\n\"I'm sorry.\" Barbara says, standing up and heading towards the door. \"This just isn't working for me, okay?\" She says. I watch her beautiful ass sway towards the door, while Shelly cuddles back up to my side. \n\n\"Don't let her break our mood, lover.\" Shelly whispers in my ear, quickly shifting gears, as Cyn hurries after Barbara. \"I want to be your slut for the evening, doing every nasty thing you want to do.\" She whispers, while rubbing her hand up and down my thigh. \n\n\"Will you let me be your slut, Mike?\" She asks, nibbling on my ear, while brushing her fingers along my stiffening cock.\n\n\"Yeah, Shelly.\" I answer, glancing down at her large black tits, ballooning out of the cups of her bra. \"You can be my slut.\" I whisper, turning my face to brush my lips against hers.\n\n\"Oooo.\" She coos. \"I'm going to have fun with this.\" She whispers, gripping my fully erect cock through my pants. \"I've got plans for you.\" She says, slipping her tongue into my mouth and pushing her tits harder against my arm. \n\n\"You two look like you're ready to use that room.\" Cyn says, as she walks back into the house.\n\n\"We are!\" Shelly says, disengaging herself from me. \"Aren't we lover?\" She asks. As I stand up, my hard cock tents the front of my pants and I look sheepishly at Cyn. I know it's weird, but I almost feel like I'm cheating on her.\n\n\"It's okay, Mike.\" Cyn smiles, like she's reading my thoughts. \"That's why you're here, right?\" She says, handing me a hotel room key. ",
        "\"You two have fun and I'll call you tomorrow.\" Cyn says, wrapping her arms around me and kissing me softly on the lips. \"Take good care of Shelly for me, okay?\" She whispers.\n\n\"I'll try.\" I say, fervently returning her kiss. \n\n\"Let's go!\" Shelly says, grabbing my arm. \"I rode with Barbara, so you can just drop me off at home afterwards.\" She says, dragging me out the door. \n\n\"Ohhh, Mike.\" Shelly says, caressing my thigh as I drive to the hotel. \"We're going to have us a fine time tonight!\" She says, running her fingernails across my crotch. \"I'm so fucking wet, already.\" She says, sliding her other hand up under her skirt. I'm struggling to focus on my driving with Shelly's hand on my crotch and her smooth black thighs exposed.\n\n\"See what I mean!\" She says, holding her hand under my nose, giving me a whiff of her wet fingers. \"God, I'm so slutty!\" She whispers, as she pushes her fingers into my mouth. Fuck! Her aroma was one thing, but the taste of her pussy juice has my cock jutting straight up, trying to bust out of my pants!\n\n\"Mmmmm.\" Shelly sighs, squeezing my hard cock through my pants. \"I guess Mikey likes it.\" She laughs, pulling her fingers from my mouth and kissing my cheek as she shoves her hand back under her skirt. \"There's plenty more where that came from.\" She says playfully, scooping more pussy juice from between her legs and bringing her fingers back to my mouth. She has a very strong, arousing taste that is so intoxicating that I almost forget where we're going.\n\n\"You need to turn here, lover.\" She says, as I hungrily suck on her pussy-flavored fingers. \n\n\"Help yourself.\" Shelly says, pulling her fingers from my mouth, leaning back and spreading her legs. Steering with my left hand, I slip my right hand under her skirt. I feel the heat, just before I touch moist flesh. No panties! Her pussy is soaking wet!\n\n\"God!\" Shelly moans. \"I feel like such a slut.\" She smiles, as I spread her soggy lips and slide two fingers inside her. \"I took my panties off just before we left Cyn's house.\" She says, as she pushes against my fingers, sucking them deeper into her steamy hole. \n\n\"Oh my God!\" Shelly cries, grabbing my arm with both hands and humping her pussy against my fingers. Clenching and unclenching her pussy muscles around my fingers, she releases a fresh flood of juices onto my hand. \n\n\"We're here.\" She says, pointing to the hotel ahead on the left. \"And not a moment too soon!\" She laughs, pulling my fingers from her pussy and sucking them into her mouth, one at a time. \n\n\"Good thing we already have the room key.\" Shelly says, reaching over and squeezing my rock solid cock, as she licks her juices from my fingers. \"We won't have to waste time at the front desk.\" She says, as I park near the side entrance. Fuck! At first I was disappointed that I wasn't going to fuck Barbara, but Shelly is so fucking hot that I'm almost ready to cream in my pants.\n\nAs soon as we get in the elevator, Shelly unzips my pants and slips her hand into the opening, caressing my cock through my jockey shorts. I'm too horny to worry about whether someone will see us.\n\n\"You're the perfect size, Mike.\" She says, before pushing her tongue into my mouth. Our tongues dance around each other as she fondles my cock. When the elevator chimes and the door opens, Shelly pulls her hand from my pants, but leaves my zipper down.\n\n\"You know what being the perfect size means?\" She asks, as we walk down the hall searching for the room number. \"It means you'll fit everywhere.\" She says, pulling me against her in front of our room. \"In my mouth.\" She says, kissing my lips and grinding her pussy against the bulge in my pants. \"In my pussy.\" She says, looking lustfully into my eyes. \"And in my ass.\" She announces turning around and wiggling her ass against my crotch as she inserts the magnetic card into the lock. \n\nGoddamn! I've only seen ass fucking in videos. I've never actually done it. I squeeze Shelly's ass cheeks as she opens the door.\n\nWe're barely inside and Shelly is unbuckling my belt. Before I can turn the deadbolt and hook the chain, she has my pants and underwear around my ankles, springing my hard cock free from its confines. \n\n\"Oh fuck!\" I moan, as she sucks my cockhead into her warm mouth, while scraping her fingernails under my scrotum. With my pants around my ankles, I brace myself against the door to keep from falling over, as Shelly slides her lips down to the base of my cock. While she slowly slides her lips back along the length of my hard shaft, flicking her tongue against the sensitive underside, I feel my climax start to build.\n\n\"Not yet.\" She whispers, releasing my cock and motioning me to lift my leg so she can remove my shoes and socks. After disentangling my pants from my ankles, Shelly stands up and unbuttons my shirt. I shrug it off my shoulders, letting it fall on the floor behind me. Standing naked under her gaze, my stiff cock sticks straight out towards her. \n\n\"Mmmm.\" She sighs, nibbling on my nipples until they pop out from my chest. My throbbing cock brushes against her skirt, as she guides me into the room, backing me towards the bed. Sitting me down on the edge of the bed, she takes a step back and pulls her blouse over her head. More blood surges into my already swollen cock, as I stare at her huge dark tits straining against the nearly transparent cups of her lacy bra. \n\nRunning her hands over her flat, black stomach, Shelly smiles at me as she lifts her heavy tits, cupping them and squeezing them together. Watching my cock with lustful eyes, she reaches behind her back and unfastens her bra. The black straps fall from her shoulders, as her hands hold her bra in place, teasingly covering her nipples. With deliberate slowness, she gradually lowers her bra revealing more of her luscious black breasts to my penetrating gaze.\n\nFinally, pulling her hands away and dropping her bra on the floor, I am presented with the largest, most natural looking breasts I have ever seen. Hanging elegantly from her chest, her huge tits have a consistently smooth black sheen from the outer curves to the slim crevice between them. Her wide areolas, only slightly darker than the rest of her tits, encircle coal black nipples that jut out temptingly towards me. \n\n\"Huh uh.\" She shakes her head teasingly, as she steps back. \"Not yet.\" She smiles, when I reach my hands towards her gorgeous tits. I feel my cock pulsating, as she reaches for the zipper on her skirt. Using the same slow tease, she unhurriedly lowers her skirt, revealing first her navel and then the top of her thick, spongy bush. Her velvet black triangle points downward to her thick, protruding pussy lips which are glistening with moisture. As Shelly drops her skirt to the floor and spreads her legs, I surmise that if her lips weren't so aroused, they would probably disappear within the tangle of thick black hair surrounding them.\n\n\"I'm your slut, Mike.\" Shelly says, dipping her fingers into her juicy pussy. \"Your little black whore.\" She says, pushing her pussy soaked fingers into my mouth as she kneels on the floor.\n\n\"Do I taste good?\" She asks, flicking her tongue against my aching cockhead.\n\n\"Mmmmm.\" I moan, while sucking the exquisite flavor off of her fingers. \n\n\"I want to taste you, too.\" She whispers, as she caresses my balls with her hand. \"I want to suck the cum right out of your cock.\" She says, slowly running her tongue up the underside of my rigid pole. \"I want to swallow your thick cum and feel it ooze down my throat.\" She sighs, wrapping her hand around the base of my cock and feeding the head into her warm, wet mouth. \n\n\"Oh God!\" I cry, as I feel my orgasm rapidly building. All the teasing she's been doing since we left Cyn's house is taking its toll. Shelly slides her lips about halfway down my cock before pumping it vigorously in and out of her mouth. I can't hold back! As she pulls her fingers from my mouth and gently squeezes my balls, I explode into her, jerking convulsively against her face. She sucks and swallows several thick loads of cum, before I fall back onto the bed, completely drained.\n\n\"Mmmmm.\" She says, licking her lips as she lies down beside me.\n\n\"God damn, Shelly!\" I breathe, wrapping my arm around her shoulder, while my chest heaves up and down.\n\n\"Probably.\" She says. \"But not today.\" She smiles. \"As soon as you've caught your breath, I need the talented tongue, Cyn told us about.\" She says. \"I really need it, Mike.\" She says, wrapping her leg over mine and pressing her hot, damp pussy against my thigh.\n\n\"While I catch my breath I want to feast on your beautiful tits.\" I tell her, rolling her onto her back and lying on my side next to her. Fuck! I've never seen anything like them, even in magazines! Her tits are like large black balloons, with four inch wide areolas and taut nipples that are as thick as my pinky. I squeeze the closest one with my hand, as I suck her firm nipple into my mouth. Damn! Her fucking nipple is almost an inch long! \n\n\"That's nice.\" She sighs, as I massage her soft, pliable tit, while sucking and nibbling on her rigid nipple. She's squirming around on the bed, opening and closing her legs, as I lean across to suckle her other nipple.\n\n\"Have you caught your breath yet, Mike?\" Shelly asks, obviously anxious for me to move down her body.\n\n\"Feeling neglected down here?\" I ask, as I rake my fingers through her thick pubic hair. \n\n\"Very neglected.\" She smiles. I kiss her briefly on the lips before positioning myself between her legs. She spreads them wide for me and I suck in my breath, as I get my first good view of her pussy. She is a lot hairier than Cyn, with thicker pussy lips. Her tightly coiled hairs, which give her bush a cushy texture, are longer than they appear. As I comb my fingers through, I stretch several hairs away from her mound that are two or three inches long. \n\n\"Waiting for an invitation?\" Shelly asks, pulling her knees up and spreading her legs farther apart. I use my fingers to open her wet pussy lips, revealing the moist pink center and the largest clit I've ever seen. Its pink tip is peeking out of its black hood, glistening with pussy juice and begging to be sucked.\n\n\"Sorry.\" I tell her, lowering my face towards her wet lips. \"You're only the second black woman I've been with and I'm still in awe.\" Before she can answer, I flatten her pussy lips with my tongue and lick from the bottom to the top of her moist slit, lightly flicking the tip of her clit. \n\n\"Oh yeah!\" She cries, grabbing her thighs with her hands to hold them open for me. She doesn't need any teasing; she's already dripping wet. Slipping my tongue inside her steamy hole, I rapidly tongue fuck her delicious pussy\n\n\"Ohhh!\" She moans, as my tongue pistons in and out. Pushing my tongue to the top of her slit, I slip two fingers into her opening, twisting them around for maximum contact.\n\n\"Ohhhhhhhhhhh fuuuuuuuuuck!\" Shelly cries, as my lips close around her engorged clit and I gently suck it into my mouth. The velocity of my finger fucking is offset by the gentleness of my clit sucking, and Shelly grabs a handful of my hair, as she bucks wildly against my mouth. With her clit completely inside my mouth, I barely flick my tongue across the tip of it, while continuing the rapid finger pumping.\n\n\"Oh Mike!\" Shelly yells, holding my head tightly against her pussy. \"Oh yeah! Oh yeah! Oh yeah!\" She moans. \"Just like that! Oh Mike! Oh fuck!\" She moans, as I keep up my vigorous assault on her pussy. \"I'm cumming! I'm cumming already!\" She cries, bucking furiously against my mouth and my fingers while she thrashes around on the bed, swinging her head from side to side. Her hand that isn't pulling my hair is pinching her nipples, stretching them out even farther from her huge tits. \n\n\"Oh Mike!\" She breathes, clenching her pussy muscles around my fingers, while pushing my face away from her sensitive clit. Her body trembles, as her creamy juices flood my hand, and I lower my face to lap up the mouthwatering treat. Her pussy juice is thick and creamy and the aroma is arousing. My cock is fully recovered by the time her body stops shaking. \n\nKissing and licking my way up her body, I can't help stopping at her marvelous tits to suck and nibble a little more on her thick, black nipples. Positioning my body over hers, we lock eyes, as I glide my fully recovered cock into her slippery, wet hole. She feels so fucking good! Her steamy pussy walls close in around my hard cock, cocooning me in a velvety, blanket of hot, pulsating flesh.\n\n\"Ohhhhhhhhhh!\" She moans, pushing her ass off the bed and spreading her thighs to welcome me more deeply into her torrid opening. Her urgency cries out for a fast rhythm, but I deliberately control the pace by looping my arms behind her knees and pulling her legs up against her massive tits. \n\n\"Ohh! Ohhh! Ohhhh! Ohhhhh!\" Her moans increase in volume, as I pound her pussy with my hard cock. Moving my hands to the back of her calves, I push her legs down nearly to her shoulders and jackhammer my cock into her fiery hole.\n\n\"Oh yeah, Mike.\" She whimpers. \"Fuck me hard, baby!\" She yells. \"Ohhh! So good! So good! So good!\" She cries on each downward thrust of my cock. My balls are slapping against her ass and I can feel my own release building quickly. \n\n\"Oh fuck! I'm cumming again! Fuck me harder, Mike! Fuck me so haaaaaaarrrrrd!\" She screams as her orgasm rips through her and she clamps her pussy muscles around my cock. This triggers my eruption and I spew my load deep inside her quivering cunt. She's shaking, as I lower her legs onto the bed and drop my body down onto her cushy tits. Pushing my tongue into her mouth, we ride out the after quakes of her orgasm with our chests heaving against each other and my spent cock nestled inside her vibrating pussy. \n\n\"Whew!\" She breaks the kiss and we both suck in more air. \"I haven't cum back-to-back like that in a long time.\" She says, squeezing her pussy muscles around my flaccid cock, as her hands stroke my back. \"Cyn was right about you.\" She says, her hands moving down to squeeze my ass cheeks as she gently rocks her hips. \n\n\"You are amazing!\" I say, enraptured by the rising and falling of her huge tits against my chest. I can feel the hardness of her nipples pushing against my skin. \n\n\"What time is it?\" Shelly asks, after we've recovered a bit.\n\n\"Nine-fifteen.\" I tell her, looking at the clock on the nightstand and hoping the evening isn't over yet.\n\n\"Good. We've got some time.\" She says. \"You've cum in my mouth and my pussy.\" Shelly says teasingly, brushing her lips against mine. \"Now your little slut wants your cock inside her tight black ass.\" Fuck! I can't believe this woman; she's insatiable! My incredulousness must show.\n\n\"You've never done that, have you?\" She asks and I just shake my head, as my cock stirs within her warm pussy. \"Mmmmm. You seem to like the idea.\" She smiles, squeezing her vaginal muscles around my cock. \n\n\"You are in for a treat, Mike.\" She smiles, rolling me off of her. \n\n\"The first thing we have to do is get this bad boy ready again.\" She says, flicking her tongue across my nipples and trailing kisses down my stomach. With her tits rubbing against my thighs, she sucks her juices from my cock and gently caresses my balls with her fingertips. As my cock recovers, she kneads it between her fingers, stroking up and down while licking around the swollen head.\n\n\"You are going to love how my ass feels, Mike.\" She teases, while licking the head of my cock like an ice cream cone. \"It'll wrap around you so tightly, you'll think you're popping some white girls cherry.\" She laughs, squeezing her fingers tightly around my shaft while sucking just the tip of it into her mouth. My cock is rock solid in no time and I'm trying to push more of it into her mouth.\n\n\"Since I didn't think to bring any with me, we're going to have to use natural lubricant.\" She smiles, as she moves from between my legs and crawls up beside me on her hands and knees.\n\n\"Now, it's your turn to get me ready.\" She smiles, brushing her lips across mine. \"Just scoop some of that natural lubricant from my front hole and smear it into my back hole.\" She laughs, as I sit up and look at her firm round ass. Shelly's skin is already dark, but it seems to blacken even more in the crevice between her bubble-like ass cheeks. Slipping two fingers into her soggy pussy, I pull out a gob of creamy goo and smear it around the ridged edges of her puckered asshole. \n\n\"Mmmmm. Yeah.\" Shelly says, pushing back against my fingers, willing them to enter her tight rear tunnel. Scooping out more goo, I insert first one finger, then two into her tight ass, twisting them around to lubricate every surface. \n\n\"That feels nice, Mike.\" Shelly sighs, as I pump my juicy fingers in and out of her tight asshole. \"Maybe a little more lubricant.\" She instructs. I do as she says and get another couple fingers full of juice and push them into her snug little hole. \n\n\"Okay, now lubricate your cock.\" She says, smiling. \"Push it into my pussy, work it around and then we're ready to go.\" Kneeling behind her, I slide my fully erect cock into her dripping cunt. Fuck! It feels so good, as I watch my shaft disappear between her dripping black pussy lips. It almost makes me want to keep fucking her pussy.\n\n\"Mmmmmm.\" Shelly moans, as I grab her hips and start pumping in and out of her slick, steamy pussy. \"My ass, Mike.\" She pleads, as she lowers her head onto the bed, and pushes back against my hard thrusts.\n\n\"Okay.\" I say, slowing my rhythm and then pulling out of her pussy. \"Your pussy just felt so fucking good, Shelly!\" I tell her as I position my cockhead against its new target.\n\n\"It did, Mike.\" She sighs. \"And we'll do that again, another time.\" She says. \"But right now I really want you in my ass.\" She says, reaching back with her hands to grip her ass cheeks. Placing her fingertips at the crevice between her cheeks, she pulls them apart, stretching her asshole open for me. What a sight! My cock throbs as I stare into the tight, dark tunnel.\n\n\"Take it slowly, Mike.\" She instructs. \"Just push the head in and let me get used to that before you push the rest of your cock in, okay?\" She asks.\n\n\"Okay, here goes.\" I tell her pushing my hard cock against her stretched out opening. With all the pussy juice on my cock and her hands holding her asshole open, my cockhead pops right in with minimal resistance.\n\n\"Mmmmm. Yeah.\" She says and I feel her muscles relax around my cock. \"Okay, now all the way in.\" Shelly says. I ease forward and my cock glides right in, up to my balls. She releases her ass cheeks and pushes herself up on her hands.\n\n\"Now fuck me, Mike.\" She says. \"Fuck your black slut's ass!\" She yells, as she squeezes her ass muscles around my cock. With my hands gripping her hips, I start pumping my cock in and out of her snug asshole. What a different feel! She is so fucking tight! It's almost surreal to watch my white cock slide between her dark black ass cheeks. I pick up the pace, as my cock swells within her compact rear hole.\n\n\"Harder Mike!\" Shelly begs, while thrusting her ass back against my rhythmic strokes. \"Fuck my ass harder!\" She cries, as she lowers her head back down on the bed and shoves one hand between her legs. \n\n\"Oh God! Yes! Fuck my aaaaaaasssssss!\" She cries, as I tighten my grip on her ass cheeks, pulling them farther apart so I can slam my cock deeper inside of her. Her ass is so tight that the constant friction is threatening to finish me off too soon, as I pump into her like a wild man.\n\n\"I'm getting close!\" I tell her. \"I'm going to cum any second.\" I pant, as I continue to hammer my cock into her snug opening.\n\n\"Me too, Mike!\" She cries. \"Cum... in... my... ass!\" She pants, as she vigorously attacks her clit and clenches her asshole around my cock. \"Cum... in... your... black... slut's... ass!\" She cries and I slam my cock home, jerking violently against her fleshy, bubbled ass cheeks. My cock erupts in a shower of cum, deep inside her tight asshole.",
        "\"Ohhh! Ohhh! Ohhh! Ohhhhhhhhhhhhhhhhh! Fuuuuuuuuuuuucck!\" Shelly screams, as her body convulses in an orgasmic tremor, sending a succession of rhythmic shivers through her pussy and her ass. I hold her ass cheeks tightly against me, until she collapses on the bed, disengaging herself from my spent cock. I plop down next to her wrapping my arm around her shoulders, both of us gasping for air. \n\n\"Your first ass fuck, Mike.\" Shelly says, rolling over on her back. \"What did you think?\" She asks, as I reach over and caress her massive tits.\n\n\"Wow!\" I answer. \"Very tight and I didn't last very long because of it. It was awesome, but I still like your pussy better.\" I tell her, as I knead her breast with my hand. I can't even get my hand around it. \"Have I told you how much I love your tits?\" I ask Shelly, as my fingers tease her thick nipples.\n\n\"No, but you've been pretty obvious about it.\" She smiles, glancing down at my hand. \"My doctor has suggested breast reduction surgery, but I'm not sure.\" She says. \"What do you think?\"\n\n\"I don't know what the health risks are, but I think they're perfect.\" I answer, licking around her large areola.\n\n\"The last time I saw my doctor, he was hefting, squeezing and measuring all around them.\" She says. \"I'm not sure that he wasn't just getting off playing with my tits. Halfway through the examination, my nipples got hard and I was tempted to turn into Shelly the slut right there in his office.\" She laughs. \n\n\"Yeah, I wanted to ask you about that.\" I tell her, leaning up on my elbow, so I can see her face. \"What's with the self degradation? I mean, calling yourself a slut and a whore, why do you do it?\" I ask.\n\n\"Does it bother you?\" She asks seriously.\n\n\"At first it did, especially when you called yourself my black slut or black whore. It kind of felt like what Barbara was saying about the plantation owner and slave girls.\" I tell her.\n\n\"No! It wasn't like that at all.\" She admonishes me. \"The quick answer is that I like talking nasty during sex, it turns me on.\" She says, looking at the clock. \"We don't have time for the long answer, because I have to take a shower before I go home.\" She says, rolling over and getting off the bed. \"I'm sorry if it bothered you. It was all in fun.\" She says, kissing my cheek as she gets up.\n\n\"How about if I wash your back and you can give me the long answer in the shower.\" I tell her, as I roll off the bed on the other side. My cock starts recovering, as I watch her bare ass ripple seductively, while she walks towards the bathroom.\n\n\"Okay, but we can't take too long.\" She smiles over her shoulder at me.\n\n\"So, what's the long version regarding the self degradation?\" I say, as I lather soap all over her tits, lifting them and squeezing the firm, dark flesh. \n\n\"It's a way to escape reality, Mike.\" She says, rubbing soap on her hands and lathering it on my chest. \"We all need a break from reality now and then. I think that's at the core of why people cheat. I know Cyn and Barbara feel differently, but I understand why it happens. I don't necessarily condone it, but I understand it.\" She says, as her nipples stiffen from my touch and her soapy hands move down across my abdomen. \n\n\"When a married couple has sex, they bring all their baggage to the bedroom with them; financial troubles, disagreements about disciplining the kids, where to take vacation, everything! But with a stranger, like what we did tonight.\" She continues, as her hands lather soap over my cock and balls. \"It's just sex. Taking on a different persona; behaving like a slut, makes it that much more removed from reality.\" She continues, while stroking up and down my cock and running her fingernails across my balls. \n\n\"If I had come here as Dr. Shelly, PHD in Clinical Psychology, I'd have brought at least some of that baggage with me.\" She adds, as I start humping my hard cock into her hand and pinching her nipples between my fingers. \"It's just a form of role playing, Mike. Next time I might be a domineering mother figure, or a Catholic school girl.\" She says, smiling at me. \"Aren't you sorry you asked?\" She says, pumping her soapy hand up and down my hard cock, as her other hand lathers soap all over my ass cheeks.\n\n\"Not at all.\" I pant, as Shelly runs one finger between my ass cheeks while continuing to jack my hard cock with her hand. \"I especially liked the part about next time.\" I smile at her, as my balls constrict. \"Oh God! You're making me cum again.\" I moan, as I continue mauling her huge tits.\n\n\"That's what sluts do.\" She says, matter-of-factly, just as I shoot a thick stream of cum all over her arm. She continues stroking up and down my cock until she's milked out every drop of cum. Rinsing off her arm, she pulls me into a tight embrace. \n\n\"What about you, Mike?\" She asks, as she presses her body against mine and lathers soap over my back and shoulders. \"Why are you here, fucking a black woman who's twice your age?\" She says, pulling her head back to look me in the eye.\n\n\"I don't know.\" I answer honestly. \"Before Tuesday, I had never even been with a black woman but...\"\n\n\"But now you'll never go back?\" Shelly interjects, laughing.\n\n\"Well, I don't know about never, but if what I've experienced since Tuesday is any example, I'm hooked for life.\" I smile, pressing my lips to hers. Her soapy tits slip around on my chest, as we kiss passionately and grind our bodies together.\n\n\"Time to go.\" She says, breaking the kiss and rinsing the soap off her body. I watch her towel off and get dressed, mesmerized by the voluptuous, hourglass shape of her sexy, black body. \n\nOn the drive to her house, I watch her metamorphous back into Dr. Shelly, wife and mother. She's subdued, professional and our conversation has none of the sexual overtones that dominated the rest of the evening. \n\n\"Will there be a next time?\" I ask, as I park the car in front of her house. \n\n\"Of course, Mike.\" She says, patting my thigh. \"Just not too many next times or we'll start bringing our own baggage.\" She smiles, as she gets out of the car and hurries into her house.\n\nWow! What a fucking evening! The high school cheerleader party, with Amber tomorrow night, is going to seem like kindergarten by comparison. I drive home, flop on my bed and sleep like a baby.\n\nCyn leaves me three messages while I'm in classes on Friday and we finally connect about four o'clock in the afternoon.\n\n\"How was Shelly?\" She asks.\n\n\"Absolutely amazing, Cyn.\" I tell her as I'm walking across campus to my car. \"She was everything you said she'd be and more.\"\n\n\"She said the same thing about you.\" She says, laughing. \"I guess I'll have to find someone new for myself.\" She teases.\n\n\"Not a chance.\" I tell her, honestly. As exciting as Shelly was, her slutty urgency was a little overwhelming. \"I'm sorry I missed your calls today.\" I say. \"I had classes all day.\" \n\n\"It's okay,\" She says. \"We couldn't have gotten together anyway. My son has a stomachache and didn't go to school. I was just checking up on last night.\"\n\n\"Speaking of last night, what was with Barbara?\" I ask, remembering how breathtakingly sexy she looked. \"That was a little weird.\"\n\n\"Barbara is fine.\" Cyn assures me. \"You probably gathered that she's not very trusting.\" She says.\n\n\"Sounds like an understatement.\" I tell her as I arrive at my car and throw my books in the back seat. Cyn is quiet for a few seconds.\n\n\"So are you coming next Thursday night?\" She asks.\n\n\"Do I have to wait until next Thursday to see you?\" I ask, trying not to sound as disappointed as I am.\n\n\"Probably, but if an opportunity presents itself, I'll call you, okay?\" She says, quietly. \"Hey, I have to go. My son is awake.\"\n\n\"See you soon.\" I say. \"Call me even if it's only for coffee at Starbucks.\" I tell her.\n\n\"Thanks, Mike.\" We hang up and I go home to get ready for my 'date' with Amber.\n\n\"I never knew you were a cheerleader.\" I tell Amber as we're driving to the party. She's wearing a pleated skirt and a white pullover blouse that accentuates the curves of her teen-sized tits. She looks more like a high school girl than she usually does. She even has her red hair up in a ponytail tonight. I've never seen it like that at work.\n\n\"I want to be taken seriously at the bookstore.\" She tells me smiling. \"And there is a certain stereotype that goes with being a cheerleader.\" She says. \"It's been nice being able to discuss books, music and movies without everyone thinking I'm an airhead.\" She smiles. \n\n\"I never thought of you as an airhead.\" I answer, honestly.\n\n\"Thanks, Mike.\" She says. \"And thanks for doing this tonight.\" She says, running her hand up the inside of my thigh. \"I'll make it up to you later.\" She says, squeezing my cock through my pants. \"Maybe we can stop at your place on the way home.\" She says. \"Of course, couples have been known to disappear into bedrooms at these parties, too. You never know.\" \n\n\"Thanks for taking my shift last night.\" I tell her, my cock responding to her touch. \"I really appreciate it.\"\n\n\"Your mystery lady?\" She asks, smiling. \"You finally fuck her?\" She asks. Amber was astute enough to realize I was thinking of someone else while we've been fucking lately. She teases me about it every time we're together, but it hasn't dampened her sex drive. We've been getting together frequently since she turned eighteen a couple of months ago. \n\n\"Yeah.\" I answer quietly. \"It was nice.\" I answer. \n\n\"That's awesome!\" She says sincerely, leaning back in her seat and giving me directions to the party.\n\nAmber introduces me to several cheerleaders and their dates as we make our way through the house. Fuck! I've never seen so many teenage hardbodies in one place. Most of them are blondes, there are a few brunettes, but Amber seems to be the only red head. She's holding onto me very possessively, as we round the corner into the kitchen.\n\n\"Jasmine. Jim. This is Mike.\" Amber says, approaching a young black couple in the corner of the kitchen. \n\n\"Nice to meet you.\" Jim says, reaching his hand out to me. We shake and he turns towards Amber. \"What's up Amber?\" He says, kissing her cheek. The girl doesn't look up. We've obviously interrupted something. \n\n\"What's the matter?\" Amber asks.\n\n\"It's nothing.\" Jasmine says, looking up. \"Jimmy and I were just talking.\" She says. \"Nice to meet you.\" She says, looking at me for the first time. She recognizes me right away. It's Cyn's niece, who took the kids roller-skating last night. \"Oh, hi again.\" She says, forcing a brief smile.\n\n\"Hi Jasmine.\" I say, still surprised at how much she looks like her aunt. She has the same high cheekbones and almond shaped eyes, although hers look like they might tear up any second.\n\n\"You two know each other?\" Amber asks.\n\n\"Yeah we met at my Aunt's house last night.\" Jasmine says dismissively, obviously wanting to get back to her discussion with Jimmy. Amber raises her eyebrows at me, but doesn't say anything. We walk back into the living room and talk to a few couples mingling around. Amber makes sure to mention my college and has me talk about some of my classes. \n\n\"Fine then!\" We hear from the kitchen just before the back door slams. All eyes are on the doorway, when Jimmy walks through.\n\n\"Jasmine and I just broke up.\" He says quietly, sitting on the floor next to the couch.\n\n\"Mike.\" Amber says grabbing my arm. \"I need you to do me the biggest favor ever.\" She whispers anxiously. \"Will you go see about Jasmine? Offer to drive her home or something. Anything.\" She says, looking into my eyes. \"Please!\" She pleads. \"I've been wanting to hook up with Jim, like forever, but could never betray Jasmine. If they've really broken up, this might be my chance.\" She says. \"Please, I'll make it up to you another time. I promise!\" She says.\n\n\"Sure, Amber.\" I say, taken back by how quickly she wants to pounce on her friend's ex. \"I'll take care of Jasmine. Do you want me to hang around to see if you need a ride?\" I ask her. \n\n\"No, I'll be fine.\" She smiles. \"Thanks.\" She kisses me on the cheek then sits down next to Jimmy on the floor, as I walk into the kitchen. \n\n\"Jasmine!\" I call, looking around the back yard. There's no answer, so I follow a brick path around a cement bench to look for her. The entire yard is landscaped like some kind of exotic garden, with paths and hedges separating various parts. It doesn't look like she's here, but as I turn to go back in the house, I hear what sounds like a brief intake of air, followed by a soft sob. I follow the sound behind a row of hedges and I can barely make out her silhouette, sitting against the back fence. \n\n\"Jasmine?\" I ask, softly. \"Are you okay? Amber thought you might need a ride home.\"\n\n\"No.\" She says, sniffling. \"I want to die, okay?\" She says. \"So, just leave me alone.\" I walk over and sit down next to her.\n\n\"I'll stay so I can identify the body, okay?\" I tell her, hoping her death wish isn't literal. She turns from me, sobbing quietly into her sleeve, as I lean back against the fence and close my eyes. We sit there for quite a while and I picture her beautiful face and the way her jeans hugged her ass when I watched her leave her Aunt's house last night. I berate myself for thinking about her black lace thong. Shit! I don't even know how old she is.\n\n\"Sometimes it helps to talk to someone.\" I tell her, when her sobbing finally subsides. \n\n\"I barely know you.\" She says, turning her head towards me. \n\n\"That can actually help.\" I explain. \"I don't go to your school and I don't know your friends. Whatever we discuss can stay right here.\"\n\n\"You know my aunt.\" She says cautiously.\n\n\"Whatever we talk about stays right here.\" I repeat, wondering what breaking up with her boyfriend has to do with her aunt. \"Want to tell me what happened?\" I ask quietly. \"Was it another girl?\" I ask, guessing that might be why they broke up.\n\n\"If only.\" She says, her eyes tearing up again. \"I could just scratch her eyes out.\" She laughs. \n\n\"Yeah, I hadn't thought of that.\" I tell her. \"Must be something worse than that.\"\n\n\"A whole lot worse.\" She says, as she starts crying again. \"I never thought he'd be like this.\" She says, quietly, between sobs. \"I thought he'd help me figure things out.\" She says cryptically.\n\n\"How long have you and Jimmy been together?\" I ask, trying to keep her talking without her feeling like I'm prying for information.\n\n\"Almost a year.\" She says. \"We even celebrated our birthdays together a few months ago. We turned 18 two days apart from each other, so we had a combined party.\" She says. \"That's when it all started.\" She says softly.\n\n\"At your birthday party?\" I ask, trying to use my active listening skills to draw her out.\n\n\"After the party.\" She says so quietly that I have to lean closer to hear her. When I do, I catch a whiff of her perfumeand she smells as good as she looks. \n\n\"On the way home we stopped in this secluded area and got into the backset of his car.\" She sobs. \"I wanted to give him the best birthday present he could imagine. I'll never forget his face when I told him.\" She says, warming up to her story. \"He told me how much he loved me and respected me. He was so gentle and so loving, especially when it really hurt. He moved so slowly, kissing me and telling saying he loved me.\" She breaks into uncontrollable sobbing and I tentatively put my arm around her.\n\n\"What happened tonight?\" I ask, as she sobs into my chest. My cock is stirring from visualizing her losing her virginity in the back seat of a car, but I sense she'd be better off talking about the break up.\n\n\"Well, after that first night, we couldn't get enough of each other.\" She says. \"I mean, I never knew what I was missing.\" She says, pulling her head up to look at my face. \"Then tonight I told him I'm four days late for my period.\" She says, looking for a reaction in my face.\n\n\"Didn't you guys use any protection?\" I ask, always more comfortable with logistics than feelings.\n\n\"I went on the pill, but I sometimes forget to take them.\" She says, sheepishly. \"Do you know what the bastard said?\" She asks.\n\n\"What?\" I ask.\n\n\"He wants to know how I know it's his!\" She says, pushing her face into my chest again, crying. \"Like I'm some kind of fucking slut!\" She says, her words muffled against my shirt. Before I can respond, we hear the back door open.\n\n\"Come on, no one will see us back here.\" A male voice says and Jasmine's head jerks up from my chest. Oh fuck! It's Jimmy's voice and he's with someone.\n\n\"Are you sure?\" Amber asks, the voices getting closer. I start to stand up, but Jasmine pulls me back down with her mouth to my ear.\n\n\"Please, Mike.\" She whispers. \"I don't want him to see me crying. Don't let them know we're here.\" She pleads. I sit back down, wrapping my arm back around her shoulder, wondering what's going to happen.\n\n\"Absolutely, Amber.\" Jimmy says. \"Besides, everyone else is hooked up in the bedrooms and living room. Who's going to be out here to see us?\" We hear the rustling of clothing as the voices draw nearer. \n\n\"Mmmmmm.\" Amber moans, as they come into view, just the other side of the hedge that Jasmine and I are sitting behind. Amber's blouse is pushed up, her bra is undone and Jimmy is sucking one of her small, round tits into his mouth. \n\n\"I'm sorry.\" Jasmine whispers in my ear, presumably she's referring to Amber and I being a couple. I look in her eyes and shake my head, indicating that we really aren't as much of a couple as Amber wanted everyone to believe. Well, apparently not everyone.\n\n\"Stand up.\" Amber says, startling me. I'm sure we've been caught, but she's talking to Jimmy. They're sitting on the flat, cement bench and she's fumbling with Jimmy's belt. Jimmy stands up and she unbuckles his belt and pulls his jeans and briefs down with one quick tug.\n\n\"Oh my!\" Amber sighs, as she runs her tongue up and down the length of his long, black cock. \"Are you sure it's over between you and Jasmine?\" She asks, as she slips her mouth over the end of his hard cock.\n\n\"Yeah, baby. I'm sure!\" He pants. Jasmine takes a quick peek, as Amber grips Jimmy's muscular ass cheeks and starts bobbing her head up and down on his cock. My cock is stiffening, as Jasmine wraps her arms around me and again buries her face in my shirt.\n\n\nI sit there, stroking Jasmine's hair, as she quietly sobs into my chest. We are invisible, only ten feet away from the most erotic scene I've ever witnessed. My cock is rock solid, as I watch Jimmy grab Amber's red hair, clench his ass muscles and feverishly pump his hard, black cock into her mouth. Amber wraps her hand around the thick base of his cock, to keep him from gagging her, and swallows all of Jimmy's cum. She barely takes a breath before sucking him hard again. \n\nI become very aware of Jasmine's tits swelling against my side, with each breath she takes. This is too fucking weird! I can't believe that I'm sitting here holding Jasmine, while voyeuristically watching her ex-boyfriend fuck my date.\n\nAmber's intense arousal quickly dispels any inhibitions she had. Tossing her blouse and bra aside, she unzips her skirt and strips off her thong. Completely naked, she lies back on the bench, lifts her knees and spreads her legs invitingly. The moonlight accents the pale, white skin on her teen-sized, tits, which almost disappear when she's lying down. Just her pink eraser-like nipples are visible, poking up into the night air.\n\n\"Oh fuck, Amber.\" Jimmy sighs, as he lowers his face between her thighs and runs his dark fingers through her triangle of light red hair.\n\n\"Oh God!\" Amber cries, as I hear Jimmy slurping up her pussy juice. Jasmine turns to take another look, brushing her arm against the bulge in my pants. Startled, she quickly pulls her arm away and looks at me quizzically. I shrug apologetically, and nod towards the erotic coupling, taking place just beyond the hedges. \n\n\"Oh Jimmy!\" Amber moans. \"Right there! Don't stop! Keep doing exactly that!\" She pleads. Jasmine turns her head to look, as Amber grabs Jimmy's head and frantically bucks her ass off the bench, pushing her pussy hard against his mouth. Jasmine watches for a minute before turning her head back to look at me. When she does, I try hard to focus on her face and ignore the erotic scene playing out behind her. ",
        "\"Ohhhhhhhhhhh Fuuuuuuuuuccck!\" Amber cries, clamping her legs around Jimmy's head, as her orgasm rumbles through her body. Jasmine jerks her head around, just in time to see Amber relax her legs and pull Jimmy on top of her.\n\n\"Now fuck me.\" Amber whispers, as she pulls Jimmy's shirt over his head and drops it on the ground. His jeans are still around his calves, as he positions his body over hers. Jasmine turns her head away, once again pressing her face against my chest, as Jimmy thrusts his hard cock into Amber's anxious pussy.\n\n\"Ohhhhhhhh Yeeaaaaaaah!\" Amber moans, humping her ass up to meet Jimmy's strokes. Jasmine has her arms around my neck and is hugging herself to me, practically crawling onto my lap, as she tries to block out the rabid fucking taking place a few feet away. My hard cock is throbbing against her arm and she makes no attempt to move away from it, as she tightens her embrace.\n\n\"Oh Jimmy!\" Amber sighs. \"You feel so fucking good.\" They are lost in the intensity of the moment and Jimmy's only response is a noncommittal grunt as he continues to pound into her.\n\n\"Ohhh! Ohhh! Ohhh! Ohhh! Ohhhhhhhhhhhhhhhhhhhhh!\" Amber cries. \"Yes! Yeeeeeeeesssss! Her whole body goes stiff, as she clenches her thighs around Jimmy and shakes uncontrollably, while he continues hammering into her. \n\n\"Fuck Amber!\" Jimmy groans, as he thrusts into her one final time. His body spasms and he jerks against her several times, before collapsing on her chest. I tighten my embrace around Jasmine and again stroke her hair, as she silently cries into my chest. \n\n\n\"Wow!\" Amber says, as Jimmy pulls out and begins looking around for his clothing.\n\n\"Yeah!\" Jimmy says, smiling at her. \"Wow is right! Where have you been all my life?\" He laughs.\n\n\"Right here, Jimmy.\" Amber says, situating her thong between her firm, young ass cheeks. \"But you were with Jasmine.\" She says, looking at him. \"That really is over right?\" She asks for the second time.\n\n\"Over and done with.\" He says, buckling his belt and pulling his shirt over his head. \"She cheated on me.\" He says, matter-of-factly. \"That ends it for me.\" He pulls Amber into an embrace and kisses her hard on the lips. Jasmine tries to sit up, put I hold her against me and put a finger to my lips. She looks at me, while vigorously shaking her head. \n\n\"He's lying.\" She whispers in my ear. I nod, so she knows I believe her, as I watch Jimmy cup Amber's bare ass cheeks. She's still only in her bra and thong as they continue their kiss.\n\n\"It's getting cold, Jimmy.\" Amber says, breaking the kiss and picking up her blouse. \"Let's continue this in your car.\" She says, pulling her blouse over her head, as Jimmy hands her skirt to her. \n\n\"What a fucking bastard!\" Jasmine says after they've gone. \"I never cheated on him, Mike.\" \n\n\"I know.\" I reassure her. \"He's just saying whatever he thinks Amber wants to hear.\" I tell her. We're wrapped in each other's arms, sitting against the backyard fence.\n\n\"What am I going to do, Mike?\" Jasmine asks, looking at me with her teary eyes.\n\n\"Your absolutely certain that you're pregnant?\" I ask. \"You've tested yourself?\"\n\n\"No.\" She says. \"But I'm never late!\" She says, emphatically. \"I waited until I could talk to Jimmy and I figured we do the test together.\" She sighs.\n\n\"Come on!\" I tell her, as I slide out from her embrace and stand up. \"Let's get going.\" I help her to her feet and see her glance at the bulge in the front of my pants.\n\n\"Where?\" She asks, as I lead her around the side of the house, not wanting to go back inside. \n\n\"To an all night drug store.\" I answer. \"Before we do anything else, we're going to verify your condition.\" I say, pressing the keyless remote and opening the passenger door for her. \n\n\"You really got off on watching them, didn't you?\" Jasmine says, as we turn onto the main highway towards the shopping center.\n\n\"I'm sorry.\" I tell her. \"I know that wasn't an appropriate reaction.\" \n\n\"You can't help what makes you hard.\" She says. \"I'm just surprised at how turned on you got watching Jimmy and Amber fuck.\" She says, trying hard to sound like it didn't affect her at all.\n\n\"It wasn't all them.\" I tell her. \"You had your body wrapped pretty tightly around me, too.\" I answer, glancing at her face for a reaction.\n\n\"Right!\" She says. \"The naked couple on the bench had nothing to do with it.\" She laughs, and I realize it's the first time I've heard her laugh. \n\n\"That's progress.\" I tell her. \"That's the first time I've heard you laugh.\n\n\"Oh shit!\" Jasmine cries. \"Stop the car, Mike.\" \"What the matter?\" I ask, as I pull over onto the shoulder, wondering what I did.\n\n\"We don't we need that drug store anymore.\" She says sheepishly. \"Would you mind, turning your head and closing your eyes for a minute. \n\n\"What?\" I ask, trying to figure out what she's talking about, as she digs through her purse. \"Oh!\" I say, as she pulls out a Tampon and I feel stupid for not catching on. \n\n\"Just turn your head.\" She says, unsnapping her jeans. I watch her start pulling her zipper down, before I reluctantly close my eyes and turn my head away. \n\n\"I guess this is cause for celebration, huh?\" I ask, as I listen to her pull her jeans down and shuffle around on the seat. An unmistakable aroma fills the car.\n\n\"Yeah!\" She breathes. \"What a fucking relief!\" She says, as I hear her tear open the wrapper and scoot down in the seat. Less than a minute later I hear her pull her zipper back up. \n\n\"You can turn around now.\" She says, placing her purse back on the floor as I turn back around. I just sit there for a minute, staring at her. She looks embarrassed and relieved at the same time.\n\n\"I'm very happy for you, Jasmine.\" I tell her, touching her cheek with my hand. \"Please be more diligent with the pills.\" I say. \"Skipping pills is probably what threw off your period.\" I explain, sounding more like a big brother than I mean to.\n\n\"Don't worry, Mike.\" She says, smiling. \"Not only will I take the pills, but I don't think I'll be fucking anyone anytime soon either.\" I start the car and pull back out onto the highway. That wasn't what I wanted to hear.\n\n\"Would you like to go out to dinner one night next week?\" I ask, as we pull onto her street.\n\n\"You've been sweet, Mike.\" Jasmine says, touching my arm. \"But I don't date white guys.\" She says matter-of-factly.\n\n\"That's kind of racist, isn't it?\" I ask, trying to make it sound like a joke.\n\n\"Not at all.\" She says. \"It's just practical, Mike.\" She says, turning towards me. \"Once the novelty of being with a black chick wears off, then we have to deal with all the other shit that comes with being an interracial couple. No matter how much it looks like the world has made progress, there are still a lot of people, black and white, who just can't accept it. Relationships are hard enough already without trying to take on the world.\"\n\n\"Jesus! I wasn't asking you to marry me, Jasmine.\" I say, exasperatedly. \"I only asked for a date.\"\n\n\"I know it doesn't seem fair.\" Jasmine says, sincerely. \"But what if I really like you, or fall in love with you? I'm just not willing to take that chance.\" She says, as we pull up in front of her house. \"I'm sorry, Mike. It's just how I feel.\"\n\n\"After all we've been through together?\" I ask her jokingly. \n\n\"You were great tonight, Mike.\" Jasmine says, leaning over and kissing me on the cheek. \"Believe me, I really appreciated you being there. If you were black, I'd be jumping at the chance to go out with you.\" She says. \"Don't worry, it's not your fault you're white.\" She laughs, getting out of the car.\n\n\"Okay, how about friends? We could just go for coffee?\" I ask, trying not to sound desperate, as I walk her to her door.\n\n\"I don't think that's a good idea.\" She says, sadly. \"It sounds good in theory, but it would just end up being a date.\" She says, reaching for her door handle.\n\n\"Think of me as your gay friend.\" I say, wondering where the hell I pulled that from, as she bursts out laughing.\n\n\"My what?\" She asks, staring at me in disbelief.\n\n\"You know, in all those romantic comedies, where the girl always has a gay friend that she can confide in without worrying about getting involved with him.\" I say rapidly before she opens her front door. \"Just think of me as your gay friend and have coffee with me tomorrow, okay?\" I say, looking at her anxiously. She stares at me for a minute.\n\n\"Okay.\" She laughs. \"Call me in the morning.\" She says, giving me her number. \"That's my cell, so just call me when you get up and we'll have coffee.\" She says, leaning up and lightly brushing her lips across mine. \"Thanks for being there for me tonight, Mike.\" She says, as she steps into her house. \n\nFuck! What a night! And I thought a high school cheerleader party would be uneventful! Damn! I'm so fucking horny and there is no one to call!\n\nAs I lie in bed replaying the evening, my cock throbs as I recall how nice Jasmine felt crushed against me, while I watched Jimmy and Amber fucking on the bench. In my mind I replace Jimmy and Amber with Jasmine and I. Her naked body is perfect and I start stroking my fully erect cock, as I imagine my tongue snaking in and out of her juicy pussy. I picture her as a teenage version of Cyn, with smooth brown thighs and thin black pussy lips surrounded by tightly curled black hair. Unlike Amber, the round curves of her tits don't disappear when she's lying down and I stroke my cock faster when I think about sucking on her black, pencil-thin nipples. When I envision her tight, teenage pussy wrapped around my hard cock, I shoot a long stream of cum onto my stomach. After cleaning up with a tissue, I fall asleep trying to figure pot how I can change her mind about dating white guys.\n\nThe next morning I meet Jasmine for coffee at a Starbucks halfway between our houses. She looks incredible in a pair of low-slung red jeans and a white, scoop-neck blouse. We talk about everything except what happened the night before. She tells me all about cheerleading and we laugh at some of the ridiculous things that girls do to get selected for the squad. \n\n\"So what did you do to get selected?\" I ask, my eyes shifting between her beautiful eyes and her lovely neck. Her skin is smooth as it flows down her chest and curves into captivating brown cleavage at the neckline of her blouse.\n\n\"I didn't have to do anything.\" She says, seriously. \"There weren't that many black girls trying out and they wanted some diversity.\" She says, in that same matter-of-fact tone she used when she told me she doesn't date white guys.\n\n\"I doubt that's the only reason you're on the squad.\" I tell her.\n\n\"Doubt all you want, but I think it played a part.\" She says, shifting her chair closer to mine, and leaning towards me. \"Mike, you don't know anything about my world.\" She says quietly, as I struggle to keep my eyes on her face. Leaning forward like this, most of her left tit is exposed to my view. My cock stiffens as I glimpse the top of her dark brown areola poking out of her black bra.\n\n\"Hey! You're gay remember.\" She whispers. \"Stop looking at my tits.\" Other customers turn their heads, as her laughter fills the room. She holds her blouse against her chest with her hand, as her tits jiggle around from her laughter.\n\n\"I'm... I'm so sorry!\" I stammer, my face turning crimson, as I laugh with her. \n\n\"I'm just teasing you, Mike.\" She says, laying her hand on my arm, reassuringly. In that moment, she reminds me so much of Cyn, that it's uncanny. \n\n\"You are so beautiful.\" I tell her. \"I can't help but look.\" She shifts uneasily in her chair and takes a sip of her latte. I look at my watch, as I'm trying to think of a way to get the conversation back on neutral territory.\n\n\"Hot date?\" Jasmine asks, nodding at my watch.\n\n\"Yeah, a new boyfriend.\" I tease and I'm rewarded with more laughter and jiggling tits. \"I really enjoyed this, but I have to work this afternoon. Can we do it again? Maybe after school on Monday?\" I ask. \n\n\"Actually, I could use a ride home after cheerleader practice.\" She says. \"Jimmy used to always drive me home.\" She adds quietly, as we stand up. We hug and I savor the feeling of her tits against my chest, as she kisses me on the cheek.\n\n\"See you Monday, Mike.\" She smiles. \"Four-thirty, okay?\"\n\n\"I'll be there.\" I tell her as I head to my car. \n\nI think about Jasmine all through my shift, as I help customers and reshelf books. I hope I can break down her defenses and get her to change her mind about dating me. She is so fucking hot and I seriously enjoy being with her. Well, at least she's seeing me again, that's a start. \n\nI'm waiting by the bleachers Monday afternoon, as the girls run through their cheers. Any one of them could star in a teen wet dream, and you'd get your rocks off. My gaze shifts between Amber and Jasmine for a few minutes, then I focus solely on Jasmine. My cock stirs; as I watch her long brown legs kick up her orange and white pleated skirt, exposing her shapely thighs. Her legs are well toned, and her thigh muscles ripple, as she kicks and jumps her way through the routines. Her cheerleader uniform fits tightly across her chest and she frequently pops her tits forward, as she jerks her elbows back and raises her arms. Glancing around, I realize that Jasmine has the largest tits and the best body on the squad. By the time they finish their last routine, I have a full-fledged hard-on and I have to check my mouth to make sure I'm not drooling.\n\n\"Wow!\" I say, as Jasmine grabs her gym bag and runs over to meet me. \"You guys are great!\" I say, taking her bag from her and walking her to my car.\n\n\"We need to work on that last cheer.\" She says. \"Did you see how out of sync we were? It was awful!\" \"I was only watching you.\" I admit. \"I thought you were awesome.\" I say, opening the door for her and tossing her bag in the backseat.\n\n\"You just like girls in skimpy outfits.\" She says, laughing. Her skirt rides up, exposing most of her dark thigh, as she gets in the car. \n\n\"Where to?\" I ask, as I settle into my seat. \"How about a Frappuccino?\" I say, starting the car and backing out of the parking lot. \n\n\"Oh God, no!\" She says. \"I am so sweaty.\" She's, running her hand up and down her damp legs, and then fanning them with her pleated skirt, raising it up and down, exposing her sexy brown thighs. \"I need to go home and take a shower.\" She says. \"Do you mind just taking me home, Mike?\" A momentary vision of Jasmine in the shower is all my cock needs to react. \n\n\"Not at all.\" I say, trying to hide my disappointment. \"I didn't even think about what a workout that is.\" I say. Fuck! I just want to lick all the sweat from her shapely thighs and bury my face between them.\n\nI pull my eyes from Jasmine's fully exposed legs to maneuver my car through the parking lot. Near the exit, we pass Jimmy's car and I look over to see if Jasmine noticed Amber in the front seat. She must have, because she's suddenly very quiet. We ride the rest of the way in silence, her head against the window and my eyes admiring her legs.\n\nThat night at work, as I'm reshelving stray books, Barbara walks into the store, looking like she just stepped out of a fashion magazine. My shock at seeing her is replaced by a stirring in my groin, as I watch her walk towards me.\n\n\"Hi Mike.\" Barbara says, when she gets within a few feet of me. Her white high-collar blouse is open at the neck, revealing a distracting amount of her light brown tits. She's wearing a form fitting skirt and knee high boots with three-inch heels. \"Is there somewhere we can talk?\" She asks, looking around the store.\n\n\"Sure.\" I answer, glancing around. It's a weeknight and the store is fairly quiet. I lead her over to a corner by the history section, where two overstuffed chairs face each other. I watch her skirt ride up her beautiful thighs, as we each take a chair. \n\n\"I owe you an apology.\" She says, leaning towards me, so our conversation won't be overheard. Her blouse gapes and my eyes momentarily take in the curves of her breasts, as they disappear into a white lace bra. \n\n\"It's fine.\" I say, forcing myself to look at her face.\n\n\"No it's not.\" She says quietly. \"I was rude and I'm sorry.\" She looks away from me and takes a deep breath before continuing. I glance down at her tits swelling against the confines of her bra, as I try to keep my cock from overreacting. \n\n\"You seem like a nice guy, Mike.\" Barbara says. \"But I don't know if you realize what's going on here.\" She shifts in her seat and looks away again, obviously very nervous about what she's about to reveal. \n\n\"Remember that old movie, 'Nine to Five'?\" She asks. \"The one with Jane Fonda and Dolly Parton.\"\n\n\"Yeah, that's one of my mom's favorite movies. We used to watch it over and over. Wasn't Lily Tomlin in it?\" I ask, wondering where this is going.\n\n\"Yes, that's right.\" She smiles. \"Remember the scene where they got stoned and sat around fantasizing about what they wanted to do with their boss?\" I nod, watching her face. It's amazing how a smile can illuminate the beauty of her features. \"Well, that's what it was like when we first found out about our husbands.\" She says. \"We sat around talking about how we would find the right guy and do the same thing they were doing. But it was all fantasy! I never thought we'd actually do it.\"\n\n\"You were like the Jane Fonda character?\" I say, remembering more of the movie, even though it has been a few years since I've seen it.\n\n\"Right!\" She says, smiling her radiant smile again and leaning even closer to me. \"Shelly and Cyn are living out the fantasy, but I don't believe two wrongs will make it right.\" She says, conspiratorially. \"I haven't decided how to confront my husband, but for me, this isn't the answer.\" My eyes keep darting down the front of her blouse, while I struggle to maintain eye contact. The way she's leaning, her blouse and bra are pulling away from her chest and I can see about three-quarters of her light brown tits, including part of her dark areola.\n\n\"I understand.\" I say, uncertain about why she's telling me all this, but captivated by her beauty and sexuality.\n\n\"I'm not sure you do, Mike.\" She says. \"We had suspected our husbands for some time. What we didn't know is that they have recently been seeing one particular white parishioner who takes on all three of them at once.\" My surprise must have shown, because she nodded her head. \"Yes sir, apparently every hole was being filled at the same time.\" She says, sitting back in her chair and crossing her beautiful legs.\n\n\"Our fantasy mirrored what they were doing.\" She explains, responding to the confusion that must be evident on my face. \"Our fantasy ended with all three of us taking on one white guy together.\" She whispers. \"That's you and I just thought you should know the plan. After the group sex, the fantasy ends.\" She stands up to leave. \"Please don't tell Cyn or Shelly that I was here.\" She adds as she turns and walks away.\n\nI just sit there stunned, watching Barbara's ass cheeks ripple inside her tight skirt, as she leaves the store. My cock springs to life at the vision of these three women naked in my bed. I can't quite figure how all three could have me at once. I could fuck one and eat one, but what is the third one doing. I saw a video once where a woman had cocks in her ass, pussy and mouth, but... I'm broken out of my reverie by a page to customer service. \n\nI finish my shift and go home, falling asleep to the image of a threesome with Cyn and Shelly. According to Barbara, it may not be an unrealistic dream. They may follow through with their plan, even without Barbara. Somehow Jasmine shows up in the middle of my dream and then we end up in a threesome with Amber. Everything is getting very confused. \n\nJasmine and I settle into a regular routine, with me picking her up from cheerleading practice each afternoon. Sometimes we stop at Starbucks, sometimes I take her straight home. We talk and laugh about everything and nothing; she's so easy to be with. I'm getting used to seeing her in her cheerleading outfit and I don't stare at her exposed legs quite as much. ",
        "We talk about the similarities and differences in how we grew up. She's an only child with a single mom, who got pregnant in high school. She never knew her father; her mom says he wasn't worth knowing. Because her mom's so young, they're very close and have more of a sisterly relationship than a typical mother and daughter. I tell her about growing up in the typical two-child family in suburbs, with one dog and a sister two years younger than I am.\n\nJasmine frequently touches my arm or my hand when she's talking, sending shivers through my entire body and my cock stays semi-erect most of the time I'm with her. Unfortunately, she seems totally unaffected by my presence. \n\nThursday afternoon, while driving Jasmine home, my cell phone rings. It's Cyn.\n\n\"Hi.\" She says. \"There's been a change of plans. You were still planning on coming over tonight, weren't you?\" I glance at Jasmine.\n\n\"Yeah.\" I answer. \"Wouldn't miss it.\" \n\n\"Well, Barbara's not coming and since you were with Shelly last week, we decided it was my turn this week. Is that okay with you?\" She asks, seductively. I guess the threesome isn't happening this week.\n\n\"More than okay!\" I answer enthusiastically, excited about the chance to relieve some of my built up frustration. \n\n\"Can we go to your place again?\" Cyn asks. \"Or I can get another hotel room.\" She adds, when I don't answer right away.\n\n\"No, you don't need to do that.\" I answer, wondering what my apartment looks like. \"What time?\"\n\n\"I'll leave as soon as my niece gets here to watch the kids.\" She says, and I look quickly at Jasmine. \"In about an hour?\" She asks.\n\n\"Great.\" I say. \"See you then.\" \n\n\"New boyfriend?\" Jasmine teases, when I hang up the phone. \n\n\"How did you know?\" I ask. We're still laughing when I pull up to her house. I wonder what she'd think if she knew it was her Aunt Cyn.\n\nI get home in time to straighten up the apartment and get rid of my roommate before Cyn arrives. She rings the doorbell right on time and we're kissing and tearing at each other's clothes before I even get the front door closed. \n\n\"Mmmmmm. I couldn't stop thinking about you.\" She pants, pulling my shirt from my shoulders as she drops her blouse on the floor. We continue to kiss as I maneuver her towards the bedroom, leaving a trail of clothing behind us. \n\n\"Me too.\" I tell her, as she kicks her panties off and pushes me down on the bed. I watch her luscious brown tits sway back and forth as she crawls up between my widespread legs. With her eyes locked on mine, she wraps her hand around the base of my cock, extends her tongue and very slowly licks up the underside of it all the way to the tip.\n\n\"Ohhhh yeah!\" I moan, as she gradually licks all around it, never taking her eyes from mine. Instead of sucking me, she rubs my cock down her neck and nestles it between her tits. Kissing my chest and sucking on my nipples, she moves her body over mine.\n\n\"Oh Cyn!\" I moan, reaching for her luscious, brown tits, as she moves her pussy up over my hard cock. \"You are incredible!\" I sigh, squeezing her tits and running my thumbs over her thick, black nipples. I am so fucking horny, that I'm afraid I'll shoot too soon, as I feel her warm, wet pussy lips wrap around the tip of my cock.\n\nStraddling me, she is swiveling her hips in a torturously slow circle, while she squeezes my cockhead with her pussy muscles. With her hands on my torso, leaning her weight on me and pinning me to the bed, she is mercilessly controlling how little of my hard cock she allows to slide inside her slick, hot pussy.\n\n\"I wanted to do this last time.\" She smiles, as she undulates her hips. \"But I didn't have the discipline to hold back.\" She says, raising her hips, so only the tip of my cock is between her steamy pussy lips. Slowly rocking back and forth, she drags the tip of my cock from one end of her slit to the other before sliding about an inch of it into her pussy. Swiveling her hips in a circular fashion, she sends shivers through my body, as her pussy lips close around my cockhead.\n\n\"Oh yeah\" I cry, trying to thrust more of my cock into her juicy pussy, but unable to because of her weight on me. \"This is cruel and unusual.\" I tell her, pinching her hard nipples and stretching them out from her large, black areolas. \n\n\"Not cruel.\" She smiles. \"Maybe unusual. It's just the payback for all the teasing you did to me the other day.\" She says, allowing another inch of my cock to glide into her velvety hole, as she changes her movements and begins rolling her hips like a belly dancer. Fuck! It feels so good, making me crave more depth. Her teasing is driving me crazy and she knows it.\n\n\"Ohhhhh Fuck!\" I try again to push my cock deeper into her burning snatch, but she anticipates my movement and raises her hips. Smiling at me, she squeezes her pussy muscles around the half of my cock she has trapped inside her sultry hole. \n\n\"You're torturing me.\" I moan. \"You know that, don't you?\" I ask, still squeezing her tits and pinching her hard nipples.\n\n\"Mmmmm.\" Cyn breathes, as she rotates her hips in a slow, sensuous circle, caressing my cock with her talented pussy. \"You seem to be enjoying the torture.\" She smiles seductively.\n\n\"I am!\" I moan. \"I don't think I've ever been this hard!\" I say, straining to push more of my throbbing cock up into her fur-lined hole.\n\n\"Not even when you were fucking Shelly's ass?\" She asks, teasingly.\n\n\"Wow, she really gave you the details didn't she?\" I ask.\n\n\"We're best friends... and we like to share.\" She says, smiling. I wonder at the innuendo, considering what Barbara told me.\n\n\"Is this what you wanted?\" She asks, as she unhurriedly lowers her pussy down around my rigid cock and sits up straight. \"There, it's all in!\" She's sitting perfectly still, leaning her hand on my thighs behind her, while her pussy pulsates around my cock.\n\n\"Oh yeah!\" I cry, trying to hump my cock into her pussy, but still unable to move because of her weight. \"But with movement.\" I sigh, as I slide my hands down from her tits to grip her waist, trying to make her move her up and down. \n\n\"One thing at a time.\" She smiles, as she runs her fingers lightly up my inner thighs and cups my balls with her hand.\n\n\"Oh God!\" I moan, as Cyn starts a slow motion, undulating rhythm, while she massages my balls. My hard cock is throbbing inside her enflamed pussy, as she starts gyrating her hips.\n\n\"Oh fuck!\" I yell, as she picks up the pace. I move my hands back to her tits, as they begin bouncing against her chest. \n\n\"Ohh! Ohh! Ohh! Ooh!\" She cries, as she bounces up and down the entire length of my cock and I pinch and twist her nipples. Bucking my ass off the bed to match her rhythm, I am getting so close. I want to hold off until Cyn comes, but her teasing has pushed me to my limit and my eruption is only seconds away.\n\n\"I'm going to cum!\" I tell her. \"I can't hold back!\" I cry, between clenched teeth, as my balls constrict and my imminent release builds from the bottom of my engorged cock.\n\n\"Don't hold back, Mike.\" Cyn says, riding me faster and harder. \"I want you to cum!\" She says, rocking, swiveling and bouncing on my cock all at the same time. \n\n\"Ohhhhhhh Fuuuuuuuuuucckkk!\" I yell, slamming my cock up inside her hot pussy, as I squeeze her large brown tits between my fingers. My body jerks convulsively, as I my cock explodes, spewing load after load of built up cum deep inside her burning pussy. She rides me throughout my intense release, gradually slowing her movements as the forcefulness of my jerking subsides. Gripping my spent cock with her slippery pussy muscles, she leans forward, crushing her hard nipples against my chest, while pressing her lips against mine. \n\n\"You didn't cum.\" I pant, brushing her hair from her forehead. My chest is heaving and I've cum harder than I thought possible. \n\n\"Not this time, lover.\" Cyn says, squeezing her pussy around my cock. \"This one was all about you, just like you made Tuesday all about me. Once you recover, I'll cum twice as hard.\" She smiles, as she lays her head on my chest and I wrap my arms around her. As I lay here letting my breathing return to normal, my mind jumps from Cyn to Shelly to Jasmine and even Barbara, what an unbelievable week. \n\n\"My turn.\" Cyn's voice pulls me from my revelry, as she lifts herself off of me and turns onto her back. \"Time for your talented tongue to do its stuff, while we wait for you to recover.\" She smiles seductively, while spreading her legs. I hesitate for a second, never having eaten a woman after I fucked her, but unable to resist her invitation.\n\n\"You are beautiful!\" I say, positioning myself between her legs and staring at her delectable pussy. Compared to Shelly's pussy, Cyn's seems... I don't know... somewhat more delicate. Her pubic hair is neatly trimmed, her pussy lips are thinner and her clit is less prominent. Even her aroma is different, though no less intoxicating, and I inhale deeply as I lower my tongue to her moist pussy lips. \n\n\"Ohhhhhh! Mike!\" Cyn cries, as I lick up and down her wet slit, lightly flicking her clit with my tongue. I don't know if it's because I came so deep within her pussy or if her flavor just overwhelms it, but there is barely a hint of cum taste. \n\n\"Shelly agrees with me about your tongue.\" She says, raising her ass off the bed and pushing against my mouth. \"It's very talented.\" I stiffen my tongue and push it inside of her, conscious of a little more cum flavor, but not much. Before long I replace my tongue with two fingers and suck her clit into my mouth.\n\n\"Ohhhhhhh yeeeeeeeesssssss!\" Cyn cries, as I suck on her clit, flicking my tongue against it while I finger fuck her. She's bucking her ass off the bed and her fingers are entwined in my hair, pulling my face tightly against her wet, hot pussy.\n\nOhhhhhhhhhhhhhh! Miiiiiiiiike!\" She cries, clamping her thighs against my ears and jerking violently as her pussy muscles squeeze my fingers in a vice-like grip. \"I'm cummmmmming!\" She screams.\n\n\"Ohhhhhhhhhh.\" Cyn sighs, her chest heaving, as she relaxes her legs and releases my fingers, while I lap up her tasty juices. Gripping her legs behind her knees. I lift them towards her head, nearly bending her in half. Moving my tongue from her saturated pussy, I lick down to her asshole, running my tongue around the crinkled opening. \n\n\"Mmmmm.\" Cyn moans, as I ream her ass with my tongue. \"That feels nice, Mike. But don't get any ideas about fucking my ass.\" She says, as I snake my tongue into her tight back hole. \"Shelly may like it back there, but I don't.\" \n\n\"No problem, I prefer fucking your pussy anyway.\" I tell her. \"I'm just teasing and giving your pussy a little rest, before I suck more juices out of you.\" I say, as I slide my tongue back into her tight asshole. \n\nI continue tongue fucking her asshole until she's rocking back and forth excitedly. Licking up and down the narrow area between her ass and her pussy I suck up her juices, which have continued in a steady flow from her pussy. I slowly lick the length of her pussy lips and suck her clit into my mouth while I slide one finger into her saliva-coated asshole. \n\n\"Ohhh! Yeah!\" Cyn cries, as I finger fuck her ass, while sucking her clit, occasionally slipping my tongue into her pussy to lap up her abundant flow of juices. She continues rocking against my mouth and my finger, while grabbing her ankles and spreading her legs wider, giving me easier access.\n\n\"Ohhh! Ohhh! Mike!\" Cyn moans. \"Ohhh! Yeah! Feels so good! So good, Mike!\" Just before she's ready to cum, I pull my finger from her ass, release her legs and move my body up over hers. Spreading her legs, she welcomes my hard cock into her enflamed pussy and I bury it to my balls in one thrust. Her orgasm starts to build again, as I pound my hard cock into her.\n\n\"Yes!\" Cyn screams, wrapping her legs around me and digging her nails into my back. \"Ohmygod!\" She cries, as her orgasm rips through her. She tries to clench her pussy around my cock, but I keep pounding into her, as her body shakes and spasms beneath me. Her flood of juices gush around my cock, keeping us well lubricated, while I jackhammer her soaked pussy. \n\n\"Fuuuuuuuck!\" Cyn cries, clawing at my back and bucking furiously off the bed as another orgasm, more intense than the last one starts to build. I'm getting close, but I want this to be for her. I pound her harder, grinding my pelvic bone against her clit on each downward stroke, trying to hold back my own release. I don't know how long I can hold it.\n\n\"Ohhhhhhhhhhhhh! Mike! Ohhhhhhh! Fuuuuuuuuuuuuuck!\" Cyn screams, as another orgasm explodes, sending thunderous jolts of pleasure throughout her body. Not a minute too soon! Just as she clenches her pussy around my cock, I erupt, shooting several large blasts of cum into her spasming cunt. Jerking against her, I unload several more spurts, before finally collapsing on her soft brown tits. \n\n\"My God!\" Cyn says, trying to catch her breath; her tits expanding against my chest. \"I don't know why I ever agreed to share you.\" She smiles, with her hand on my cheek. \"I'm only getting half of what I could be getting.\"\n\n\"Why did you?\" I ask, wondering what she'll tell me this time.\n\n\"Because it's what the three of us decided and I agreed to it.\" She sighs. \"Of course now there are only two of us.\" She says, kissing my forehead. I lower my head to her chest, without disengaging my spent cock from her pussy. Leisurely licking the smooth brown skin of her tit, I work my way all around it, before sucking her taut, dark nipple into my mouth.\n\n\"Mmmmmm.\" Cyn sighs, arching her body against me. \"You're making a good case for me to keep you for myself.\" She says, running her fingers through my hair as I suckle at her breast. Our post-coital kissing, sucking and licking lasts almost an hour, until the creative combination of Cyn's pussy muscles and the movement of her hips, fully revives my cock. Starting slowly, just grinding against each other, we steadily increase the pace. With the urgency building within us, my rigid cock is soon slamming into her slick hole.\n\n\"I'm cumming again! Ohhh! Fuck, Mike! I... can't... believe... I'm... cumming... again!\" Cyn's bucking wildly against my cock, as I feverishly ram it into her. We're fucking with lustful abandon now, as we reach a frenzied rhythm and I pound my cock into her wide-open pussy. Thrusting her hips up to match every stroke, she claws my back, digging her nails deep into my skin. \n\n\"Ohhhhhhhhhhhhhh! Fuuuuuuuuuuuuck!\" She cries, clenching her pussy around my cock, as her body spasms through the first wave of her another intense orgasm. My cock erupts at the same time and I shoot more cum than I thought I would have left, deep inside her quivering hole. Locked in a tight embrace, we ride out our orgasms, as our sweat soaked bodies tremble and shake against each other. It takes forever to catch our breath and Cyn breaks the silence with a laugh.\n\n\"I can't move.\" Cyn laughs. \"You've completely drained my energy.\n\n\"I know what you mean.\" I answer, lying on my back next to her, still trying to get my breathing under control. \n\n\"I need a shower before I go home.\" She says. \"By myself!\" She adds, as she kisses my cheek and rolls out of bed. I watch her walk to the bathroom, but don't even attempt to join her in the shower. What an amazing woman! I doze off, thinking about Cyn, but my dream soon turns towards Jasmine and my fantasy of what she looks like naked. \n\n\"Dreaming about me, lover?\" Cyn says, kissing the tip of my nearly erect cock, waking me from my fantasy. \n\n\"Yeah, planning next time.\" I lie, wondering what she'd do if she knew it was her niece I'm fantasizing about. With my luck, we'd end up with some kind of Mrs. Robinson scenario and she'd be threatening to tell Jasmine about us. \n\nShe's dressed and ready to go. \"Sorry.\" I say, sitting up. \"I must have dozed off.\" \n\n\"I would have too, if I didn't have to get home. My niece has school tomorrow.\" She says, bending to kiss my lips. \"See you next Thursday, Mike.\"\n\n\"I wish we didn't have to wait a whole week.\" I say, as she's leaving. \n\n\"Sorry, but that's all I can arrange without causing suspicion.\" She says, blowing me a kiss as she pulls the door closed. I fall back to sleep immediately.\n\nOn Saturday, Jasmine and I meet at a park near her house. It's a beautiful day and we just fool around, playing Frisbee, climbing trees and swinging. She looks delicious in a red tank top and tight white shorts. I'm pushing her on the swing, when she asks me if I've talked to Amber lately.\n\n\"No, we haven't worked together for a couple of weeks.\" I answer, wondering where that came from. \"I think we have a shift together next week. Why?\" I ask her, as my hands touch her firm ass cheeks to push her forward on the swing.\n\n\"No reason.\" She answers. \"I'm done swinging.\" She says, slowing down and putting her feet on the ground. We walk over to some trees and sit in the shade, leaning against a large tree trunk.\n\n\"I really miss Jimmy.\" She says, leaning against my shoulder. \"Especially on a day like today.\" She says, looking at me. \"We used to come here a lot. We'd stay until it got dark and no one could see us.\" She says, leaving the rest to my imagination. \n\n\"I'm sorry.\" Is all I can think of to say, wishing I could make her forget him. \"I wish there was something I could do.\" I tell her, putting my arm around her shoulder. \n\n\"You've been great, Mike.\" She says. \"I just kick myself, every time I think about how much I trusted him and how it all disintegrated in one night.\" She's cuddled next to me with her left tit against my side, when she catches me completely off guard.\n\n\"I'm also horny as hell.\" She laughs. \"I miss being with Jimmy, but I also really miss the sex.\" She says.\n\n\"Now, I really wish there was something I could do.\" I answer, squeezing her against me. \n\n\"I bet you do!\" She says, hitting my leg playfully. \"You know what I mean.\" She says, leaving her hand on my thigh. \"When you're used to having sex almost everyday, and then you suddenly don't have a boyfriend...\" She lets her words trail off. My cock wants to respond to this conversation and I'm trying hard not to let it show.\n\n\"I would be happy to offer my services if it would help.\" I tell her, trying to make it sound like a joke. \n\n\"I know you would, Mike.\" She says, squeezing my thigh. \"Why aren't you black?\" She asks exasperatedly.\n\n\"I'll convert.\" I joke. \"Are there classes or something I can take?\"\n\n\"I think you'd fail miserably.\" She says, laughing. \"Thanks, Mike.\" She says, leaning back and looking me in the eye. \"You always say the right thing to pull me out of my doldrums.\" Leaning forward, she kisses me on the cheek. \"You're the best.\" She says. \n\n\"Jasmine.\" I say, looking in her eyes, with my hands on her shoulders. \"I don't have to be your boyfriend or anything to help you satisfy your horniness. Sex is a natural, human urge and we could help each other... as friends. We could take the necessary precautions and nothing has to change in our friendship.\" I look at her as earnestly as I can, hoping she'll see the logic of my proposal, rather than my rock solid cock trying to bust out of my pants.\n\n\"You're wrong, Mike.\" Jasmine says, turning away from me. \"Sex changes everything in a relationship. Nothing would be the same with us.\" She says, grabbing my hand. \"Come on, let's go home.\" We walk back to my car, holding hands. A lot of arguments are running through my brain, but I decide for once, to just keep quiet and not push my luck.\n\n\"Mike.\" Jasmine says, when we reach my car. \"I'm sorry I talked about all that stuff with you. I realize how it must have sounded and I'm sorry to have given you the wrong impression.\" She smiles. \"You're so easy to talk to that I sometimes just get carried away.\" \n\n\"Don't apologize!\" I tell her. \"I'm flattered that you feel comfortable talking to me like that. I'm the one who was out of line. You set the boundaries of this relationship from the very first day that we watched live sex together and you started your period in my car.\" I tease and she starts laughing out loud. ",
        "\"Seriously, please don't censor what you say, Jasmine. I'm sorry I suggested we have sex. It won't happen again.\" I tell her, as she folds herself into my arms and I squeeze her tightly against me. Her breasts pressing through the thin material of tank top and bra feel wonderful against my chest and I command my body not to spoil the moment. She breaks the embrace, just before my cock gives me away.\n\n\"I'll see you Monday, Mike.\" Jasmine says, turning to walk back to her house. Damn! I'm doing just what she said I'd do, trying to make this more than friendship. But come on! She's the one talking about how horny she is, what am I suppose to do? Fuck!\n\nSunday is pretty much consumed with homework, laundry and a late shift at the bookstore. By the time I meet Jasmine, after cheerleading practice on Monday, I've resigned myself to being her confidant and sounding board, but never her lover.\n\n\"You are not going to believe the juicy conversation I overheard yesterday.\" Jasmine says, as she jumps into the front seat of my car. She is so worked up, she can hardly hold still.\n\n\"Tell me.\" I say, trying to match her enthusiasm, even though I'm not really interested in high school gossip.\n\n\"My aunt Cyn was over for dinner.\" She says, very animatedly. \"Afterwards, while I was doing the dishes, Aunt Cyn and my mom were talking in the living room. I finished the dishes and was about to join them, when I heard Aunt Cyn describing, in the most graphic detail you can imagine, about this guy going down on her.\" Oh fuck! I keep nodding while Jasmine is talking, but I'm getting increasingly nervous about where this is going.\n\n\"I've never heard my mom and my aunt talking like this so I stayed out of sight and just listened. Aunt Cyn told my mom all about this young white guy and how great he is with his tongue.\" Jasmine is turned in the seat, facing me while she excitedly describes the conversation. \"Then, she starts trying to convince my mom to join her and her friends next Thursday night, so she can get in on the action! It seems that every Thursday night, while I'm babysitting, Aunt Cyn and her friends...\" I don't know if it is the look on my face or if Jasmine suddenly remembers where she met me, but she stops mid-sentence and her hand flies up to her open mouth.\n\n\"Ohmygod!\" She exclaims. \"It's you, isn't it?\" She gasps. \"Mike! You're fucking my aunt!\"\n\n\"Jasmine.\" I say, glancing at her as I drive. \"I can explain.\"\n\n\"Explain!\" She yells. \"You're fucking my aunt and all you can say is 'I can explain'?\" Her face is red and she's breathing hard. \"Saturday you were putting the moves on me. Now you're trying to get my mom to join in! Is the goal to fuck my whole family?\" She drops back into her seat and stares out the windshield.\n\n\"I didn't know anything about your mom, Jasmine.\" I tell her. \"Hell, I can barely keep up with all of this myself.\" As she sits fuming, with her arms tightly across her chest, I tell her everything that's happened in the past three weeks. I describe how her aunt came into the bookstore and I thought I was charming her, but she was actually manipulating me. I tell her about the neglected black housewives and the different reaction from Barbara and Shelly. I even tell her about my conversation with Barbara in the bookstore. \n\n\"Can you blame me?\" I finally ask her. \"Your aunt is a beautiful woman and I'm young and single.\" I say, looking over to see how she reacts.\n\n\"My aunt isn't.\" She says, without looking at me.\n\n\"No, she isn't.\" I answer quietly, wondering if this is what's really bothering her; the betrayal of her uncle. \"I didn't even know you when it started.\" I say, realizing that nothing I say is going to make a difference.\n\n\"Men!\" She says. \"I guess they either lie to you or lie about you!\" She says, shaking her head.\n\n\"I never lied to you.\" I say.\n\n\"You lied by omission, Mike!\" She snaps. \"It never occurred to you during all of our lengthy conversations, to say, 'Oh by the way Jasmine, while you're taking the kids roller-skating, I'm fucking your aunt.\"\n\n\"I didn't know how to tell you.\" I stammer. \"It's not like it ever came up in conversation.\" I say, realizing how lame it sounds, as soon as I've said it. \n\n\"Yeah, well now it has!\" She says, as I pull up in front of her house. \"Don't bother pick me up from school anymore, Mike.\" She says, as she gets out of the car. \"I'll get my own ride. You just go be Aunt Cyn's little, white fuck toy!\" She says, slamming the door. \n\nGoddamn it! I knew this was going to happen. I pound my fists on the steering wheel as I pull away from the curb. Not that I ever had a chance with Jasmine, anyway, but I certainly didn't want her to feel like I betrayed her. Fuck! Fuck! Fuck!\n\nThe rest of the week creeps by in a funk and on Thursday, Cyn calls to tell me she's booked the hotel room again and she has a surprise for me. She gives me the room number and I tell her I can't wait, but the truth is, I'd rather be meeting Jasmine in the park.\n\n\"You're early.\" Cyn says, opening the hotel room door and letting me in. As soon as I see her, my cock stiffens and I can't wait to fuck her.\n\n\"Should I leave and come back?\" I tease, pulling her into an embrace. She's wearing a light yellow spaghetti strap dress that looks perfect against her chocolate brown skin. \n\n\"Don't be silly.\" She says, kissing me lightly on the lips, as I run my hands over her bare shoulders. \"I was just hoping to surprise you.\" She says, stepping back from me. \"Shelly is joining us and I wanted us both to be here when you arrived.\" She says, smiling at me. \"But you're early and she's running late. C'est la vie!\" She laughs. \"Let's start without her.\"\n\nShe pulls me back against her and kisses me more passionately. I can't seem to get a hold of my feelings. I'm excited and repulsed at the same time. After my discussion with Barbara and from what Jasmine overheard between her mom and Cyn, I can't help resenting all the manipulation, but as our tongues entwine and I slide the thin straps of her dress off her shoulders, my cock responds as enthusiastically as ever.\n\n\"Maybe I should be glad Shelly's late.\" Cyn says, as I pull the front of her dress down and cradle her naked tits in my hands. \"I can have you all to myself for a while.\" She says, as I run my thumbs over her nipples and feel them harden under my touch. I'm just about to lower my mouth to suck on one, when she steps back and lets her dress fall to the floor. She's wearing nothing under the dress and the bloods surges into my cock, as she stands there, elegantly displaying herself for my approval. \n\nLike a schoolboy, looking at his first picture of a naked woman, my eyes hungrily roam her body, devouring her from her tits to her pussy, then coming back up to focus on her thick black nipples.\n\n\"I get wet every time I think about your mouth on me.\" She whispers, stepping closer and helping me shed my clothes. \"I want you to eat me, Mike.\" She pleads, lying on her back on the bed and spreading her thighs, invitingly. \n\n\"I've been waiting all week for this.\" She says quietly. I crawl up on the bed, and lower my face towards her, moist black, pussy lips. As I breathe in her scent and run my tongue up the length of her slit, I'm no longer conflicted or worried about whether I'm being manipulated. Who the fuck cares!\n\n\"Mmmm! Ohh yes!\" Cyn cries, as my tongue delves into her fleshy, pink opening, lapping up her hot juices and then lightly flicking her clit, before plunging back in for more of her sweet nectar.\n\n\"Oh god! You are so good!\" She pants, as I suck her clit completely into my mouth. Slipping two, and then three fingers into her steamy pussy, I gently flick my tongue across the tip of her clit while rapidly pumping my fingers in and out of her. She's bucking her ass off the bed, thrusting her pussy against my fingers, while I suck on her aroused clit.\n\n\"Oh fuck! Don't stop! I'm cumming, Mike!\" Cyn cries, her head twisting from side to side, as she feverishly responds to my machinations. \n\n\"Ohhhhhhhh! I'm fucking cummmmmiiiiiiing!\" She yells, clamping her pussy muscles around my fingers and thrusting her head and shoulders off the bed. She's jerking uncontrollably against my face, as her orgasm overtakes her, and pussy juice gushes over my hand. I disengage my fingers and lower my mouth to her steamy opening, hungrily drinking her delicious cream.\n\n\"You never disappoint.\" She breathes, her chest heaving as she gasps for air. I take a few last licks and then wipe my face against the bedspread before licking and kissing my way up her body. I nuzzle my cheek against her velvety bush and then lick from her naval to the crevice between her large tits. As I suck on her hard, thick nipples, I feel the wet heat of her pussy juice oozing against my stomach. She wraps her legs around me, as I gently rock my stomach muscles against her splayed open pussy lips. \n\n\n\"Fuck me, Mike!\" Cyn cries, releasing her legs from around me and spreading them wide open. I take a couple of last sucks on her nipple and then position my body over hers. Pushing my tongue into her mouth, I bury my cock into her in one swift plunge. There is nothing gentle or gradual about our coupling, I just hammer her pussy for all I'm worth. \n\nMy mind is reeling. Yes, Jasmine! I'm fucking your aunt! She's married and manipulative, but she's so fucking sexy! And you've made me so incredibly horny, but you won't fuck me because I'm white! So, yes! I'm pounding my hard cock into your goddamn aunt!\n\n\n\"Oh Mike!\" Cyn screams, pushing Jasmine from my mind. \"This is just what I needed!\" She pants, as I continue jackhammering my cock into her fiery pussy, wishing it was Jasmine's. \"I'm cumming again!\" She cries, as my balls constrict and my legs tense. I slam down hard and my cock erupts deep inside her burning snatch, spewing a huge load of cum just as she tightens her pussy around my cock. I press my lips to hers, as our bodies jerk against each other and our tongues entwine in a passionate kiss. It's not a loving kiss, but more of a grateful acknowledgement of what we've just given each other. As if on cue, there is a loud knock on the door. \n\n\"That'll be Shelly.\" Cyn says dreamily, smiling at me. \"Think you're up for it?\" She laughs, gently squeezing my spent cock with her pussy muscles.\n\n\"We'll see.\" I say, reluctantly sliding my cock from its warm cocoon, and getting off the bed. I stand naked behind the door, as I open it and greet Shelly.\n\n\"We started without you.\" I smile, as she walks in, drops a bag on the floor and wraps me in a tight embrace. I try not to put my pussy soaked cock against the front of her skirt, but she grinds against me anyway.\n\n\"I can see that.\" She says, squeezing my bare ass cheeks and then looking over at Cyn, who has pulled part of the bedspread over herself. \"I'm just going to have to catch up, aren't I?\" Shelly says, pulling her blouse over her head and unzipping her skirt. Dropping her bra on the dresser, she kneels in front of me, wrapping her hand around my flaccid cock. \n\n\"Wait!\" Cyn cries. \"You don't want to do that!\" \n\n\"Why the hell not?\" Shelly asks, flicking her tongue against the head of my cock.\n\n\"Not until he's cleaned up.\" Cyn says, throwing back the spread and getting off the bed. I watch Shelly's eyes as she stares at Cyn's naked body. This must be the first time they've done anything like this.\n\n\"I'll clean him up.\" Shelly says, feeding my soft cock into her mouth, sucking and licking Cyn's juices from the top and sides. \n\n\"Oh! That's gross!\" Cyn says, plopping down on the edge of the bed. \"He just fucked me, Shelly!\"\n\n\"Mmmmm.\" Shelly moans around my rapidly recovering cock. \"I can tell.\" She says, pulling her lips from around my cock. \"And the taste is scrumptious.\" She says, looking at Cyn, as she continues stroking my cock with her hand. \"Even second hand.\" She teases, her eyes focused intently on Cyn's dripping pussy lips. Cyn quickly closes her legs and puts her hands in her lap.\n\n\"Well I think it's gross.\" Cyn says, as Shelly slides her lips all the way down the length of my cock. \"I'm going to take a quick shower, while you catch up.\" Cyn says, getting off the bed. Shelly's eyes follow her naked body until she disappears into the bathroom.\n\n\"She'll come around.\" Shelly smiles at me, as she stands up and removes her black lace panties. \"Are you recovered enough to fuck me, Mike?\" Shelly asks, pulling me against her and sandwiching my hard cock between us.\n\n\"I think you've rejuvenated me.\" I laugh, as I squeeze her bare ass cheeks and press my chest against her huge tits. \n\n\"Come around for what?\" I smile, as I look knowingly in Shelly eyes. It appears that Shelly may have a hidden agenda with Cyn. She stares at me for a long time, before she answers.\n\n\"We've been best friends for years.\" She sighs. \"And that's the first time I've ever seen her naked.\"\n\n\"But you've wanted to, haven't you?\" I tease, as my hands caress her bare back and I grind my hard cock against her hairy mound. \n\n\"She's so freakin' modest!\" Shelly sighs. \"Even when we're shopping for clothes, she insists on privacy. \n\n\"That's what this is all about, isn't it?\" I ask, taking a stab in the dark. Shelly looks at me thoughtfully.\n\n\"Let's just say, that I think Cyn, Barbara and I could have some very satisfying Thursday nights all by ourselves.\" She smiles. \n\n\"You didn't need me at all.\" I say. \"Or is this just another role play?\" I ask, wondering what she's up to.\n\n\"No, Mike. I needed you as a catalyst.\" She smiles, as her hands continue kneading my ass cheeks. \"Can you imagine their reaction if I'd have suggested we don't need men? Hell, Barbara freaked out about fucking you.\" She laughs. \n\n\"But with me as the... um... catalyst, you're able to get them naked and in bed with you.\" I say, putting the puzzle together. \"Hoping, that at some point, you won't need me.\" I must have sounded somewhat dejected, because Shelly immediately tries to reassure me.\n\n\"You'll be fine, Mike.\" She smiles. \"A certain someone's niece is very attractive.\" She says, startling me. \"Don't forget, my job takes me to the high school quite often, Mike. I've seen you picking up Jasmine after school.\" She says, responding to the surprised look on my face.\n\n\"We're just friends.\" I tell her. \"She won't date a white guy.\" \n\n\"Don't give up, lover.\" Shelly says, wrapping her fingers around my hard cock. \"You're one of the good guys. She's bound to come around.\" I don't tell her that Jasmine knows about her and Cyn and isn't speaking to me.\n\n\"What can I do to help you with Cyn?\" I ask, warming up to my role as coconspirator. \n\n\"Just keep recovering, this quickly.\" She says, stroking her hand up and down my hard cock. \"I'll do the rest.\" Breaking the embrace, she glances at the bathroom door. \"Let's join her in the shower!\" She says excitedly, tugging on my arm as she opens the door. \n\n\"What's going on?\" Cyn yells from behind the shower curtain.\n\n\"We've decided that you're right, Cyn.\" Shelly says. \"He does need cleaned up.\" She pulls the shower curtain back and nudges me in.\n\n\"Wait!\" Cyn says, trying to cover her nakedness with her hands. \"You can't just barge in here.\" She says, moving back, as I step over the side of the tub followed by Shelly, who pulls the curtain closed behind us. \n\nIt's a small shower. Cyn has her back against the tile at one end of the tub; I'm facing her, with Shelly standing under the spray behind me. Our bodies are pressed together and I kiss Cyn lightly on the lips.\n\n\"Where's the soap?\" Shelly asks. \"This young man's cock tastes like pussy!\" Cyn and I both start laughing as Cyn shrugs resignedly and hands Shelly the soap.\n\n\"Don't knock it until you've tried it.\" I say. \"I thought you said is was scrumptious.\" I smile, pulling Cyn's soapy body tightly against me and running my hands down her wet back, to caress her ass cheeks. \n\n\"Yes it was tasty.\" Shelly says quietly. \"But like I said, I was tasting it second hand, and it was mixed in with some of your flavor as well, Mike.\" She says, grinding her pussy mound against my ass. \"Now let's get that thing cleaned up.\" She says.\n\nCrammed together in the small shower, with Cyn's tits pressing into my chest and Shelly's tits against my back, I feel Shelly's hand snake around my waist and begin soaping my cock. Cyn, obviously feeling Shelly's hand moving between us, tries to move back, but I cup her ass cheeks and hold her against me. \n\nAs Shelly brings her other hand around my waist to join the first one, I feel Cyn tense. Shelly's soapy hands are moving up and down between us lathering my cock, my stomach and the top of my thighs, which means she is also lathering Cyn's stomach, pussy mound and thighs. I squeeze Cyn's ass cheeks and slide my fingers towards her pussy lips, while I try to distract her.\n\n\"What a great surprise, Cyn!\" I blurt out. \"It's every guys fantasy to have two women at the same time, but I never actually expected it to happen.\" I say, as my fingers find her pussy lips.\n\n\"We thought you'd be surprised.\" She smiles nervously, closing her eyes as my fingers probe her moist pussy lips. She's still quite wet from her orgasms and, with my palm against her ass cheeks, I slip my middle finger into her well-lubricated hole. I start wiggling it back and forth, in a quasi-pumping action, as I shove my tongue into her mouth. \n\nShelly doesn't know what's going on, but she notices the difference right away, as Cyn starts grinding her pussy mound against the back of Shelly's hand. Shelly tries to turn her hand over, but there's no room. I pull my hips back and Shelly flips her hand over, sliding it down into Cyn's pubic hair, while continuing to stroke my cock with her other hand. \n\n\"Oh god!\" Cyn cries, breaking the kiss. I add another finger to my first one, pumping them into her pussy in rapid-fire motion. Cyn is bucking against Shelly's hand, which I assume has found her clit.\n\n\"Oh shit!\" Cyn cries, as she loses her balance and falls against the shower curtain. I yank my fingers from her pussy to grab her arms. Shelly has her arms around me and for a minute, we're all slipping and sliding in the slick tub. When we finally regain our balance, we're locked in a three-way embrace, laughing hysterically.\n\n\"There's not enough room.\" I say, maneuvering past Shelly, so I can rinse off. \"This is too dangerous.\" As I stand under the spray, rinsing the soap off, Shelly and Cyn are pressed together, face to face, or more accurately, tits to tits. After rinsing my front, I turn around. My hard cock brushes against Shelly's ass and, over her shoulder, I see Cyn and Shelly just staring at each other, their tits only inches apart. Both women have their arms at their sides.\n\nI press my body against Shelly's back and reach around to fondle her tits, letting the back of my fingers brush against Cyn's hard nipples. Turning my hands over, I play with Cyn's tits, while brushing against Shelly's hard nipples. Shelly puts her hands on Cyn's waist as I playfully flip one hand around so that I'm now fondling each woman's right tit. It feels great, but looks hilarious and we all start laughing again. Pulling my hands out from between their tits, I lean against Shelly's back, pushing her against Cyn. With Cyn's back against the tile, their tits mash against each other and Shelly moves her hands down over Cyn's hips. \n\n\"It's too cramped in here.\" I say, squeezing Shelly's ass cheek. \"I'm getting out.\" Neither woman acknowledges me as I step from the tub. \n\n\"You two wash each other real clean.\" I smile. \"I'm not done with you.\" I say, as I close the shower curtain. My cock is rock hard and I really want to stay and watch, but I don't think Cyn would appreciate it. I'm not sure she's ready for Shelly to do anything, anyway.\n\n\"That was you touching my clit earlier, wasn't it?\" I hear Cyn whisper, as I'm toweling off and leaving the bathroom. I stop at the door and listen. \"It felt... um... different.\" She says.",
        "\"A woman's touch.\" Shelly answers. \"See.\" She says. \"It's different.\" There is no more talking, so I leave the bathroom. As I lie naked on the bed with my hard cock pointing at the ceiling, I envision Cyn and Shelly in the shower. Shelly finger fucking Cyn and rubbing her clit, while Cyn passively allows Shelly to bring her to orgasm. I marvel at the turn of events and the different levels of manipulation that have taken place over the last few weeks.\n\nMy thoughts turn to Jasmine and I wonder what she would think about her Aunt Cyn in the shower with Shelly. After a few minutes of muffled moans, the sound of the shower stops and the two women emerge from the bathroom. Cyn smiles sheepishly, looking embarrassed, followed by Shelly who looks absolutely triumphant. I can't help but laugh, as Shelly reaches into her bag and pulls out a bottle of wine. While she's getting the hotel glasses, Cyn crawls up on the king-sized bed and snuggles up to me. \n\n\"Have fun?\" I smile. Before she can answer, Shelly climbs onto the bed on the other side of me, sits up cross-legged, facing Cyn, while she pours wine. Her choice of sitting position is no accident, and I watch Cyn trying not to stare into Shelly's wide-open pussy.\n\n\"Do you want some?\" She asks me, after handing Cyn a nearly full glass of wine.\n\n\"Nah, I'm not old enough.\" I tease.\n\n\"Oh my god! He's not.\" Cyn says almost spitting wine from her mouth as she starts laughing. \"What are we doing here, Shelly, molesting this poor young man?\" She says, taking a big drink of the wine.\n\n\"We'll let's drink some wine and then molest him some more?\" Shelly teases, wrapping her hand around my semi-erect cock, reviving it with a couple of quick strokes. \n\n\"Who's mouth do you wish to have pleasure your cock, young man?\" Shelly asks playfully, while sitting her wine glass on the nightstand. \"Have you ever had two women lick your cock?\" She asks seductively, while looking at Cyn for a reaction. Cyn finishes her wine and puts the glass on the other nightstand. They both move down the bed, positioning their heads near my fully recovered cock, which Shelly still has her fingers wrapped around.\n\n\"You first.\" Shelly says, as she offers my cock to Cyn. Cyn locks eyes with Shelly as she lowers her face to my cock. Sticking her tongue out, she licks all around my cockhead like it's an ice cream cone. \n\n\"Ohhhhhh God!\" I moan, as Cyn opens her mouth and Shelly feeds my hard cock into it. Her mouth is warm and moist and my cock responds instantly. Shelly moves her hand down to my balls and is gently caressing them, as Cyn slides her lips down to the base of my cock, deep throating me. \n\nPulling her lips back along the length of my shaft, Cyn encircles my cock with her hand and goes back to licking it with her tongue. Continuing to tease my balls, Shelly lowers her face next to Cyn's and starts licking up and down the other side of my cock. \n\n\"Oh fuck!\" I cry, as their two tongues lick up the sides of my cock. I'm humping my ass off the bed, wondering how I ever got this lucky, when they start taking turns sucking my cockhead into their mouths. \n\nFuck! Fuck! Fuck! Now they're lips are almost touching on either side of my cock, as they lick and nibble the sides of my cockhead. Shelly is still playing with my balls, whiles Cyn strokes up and down my saliva coated cock with her hand. I can't take much more of this! The tension is building and I feel myself getting close.\n\n\"Oh yes!\" I yell. \"Don't stop!\" I groan, as my cock erupts into Shelly's mouth. She must have felt my balls tighten, because she slipped her open mouth over the end just in time. As Shelly is swallowing, she pushes my cock into Cyn's mouth just in time for me to shoot my second spurt of cum into it. They alternate sliding their mouths over the end of my cock, drinking my cum, until I am completely spent. Then, Shelly grabs Cyn's face and plunges her tongue into her mouth, they kiss deeply over the top of my cockhead, trading my cum between them. It is the most erotic sight I have ever seen! So fucking unbelievable!\n\nCyn pulls away from Shelly, licking her lips and looking embarrassed. Shelly smiles and pours them both more wine. I think she's hoping the wine will help Cyn loosen up more. I lay back on the bed, fully spent, wondering what's going to happen next.\n\n\"Who's going to eat my pussy?\" Shelly says. \"You two are way ahead of me and I still haven't caught up.\"\n\n\"Whose fault is that?\" Cyn says, turning away to get another drink of wine, clearly avoiding Shelly's question. \n\n\"I would love to eat your pussy, Shelly.\" I say, patting the bed next to me. \"Lie down here and let's see if we can get you some relief.\" Cyn scoots back, to give us room, but seems intent on watching. She sips her wine and sits cross-legged on the bed, as I position myself between Shelly's legs. Shelly turns her head towards Cyn and smiles, as her eyes absorb the lovely sight between Cyn's wide-open thighs.\n\nDetermined to give Cyn a good show, I eat Shelly to an explosive orgasm, sucking on her clit and finger fucking her as she bucks feverishly against my mouth. I catch glimpses of Cyn refilling her wine glass several times, as she watches intently. As I lap up Shelly's thick juices and start teasing her to arousal again, she pushes my head away from her pussy.\n\n\"Maybe Cyn would like to join us, Mike.\" Shelly says. \"Why don't you lie on your back and one of us can ride your cock while the other one straddles your mouth?\" My cock hardens even more as I react to the suggestion and I scramble up on the bed next to Shelly. She's already looking at Cyn, as she starts to sit up.\n\n\"What's your pleasure?\" Shelly asks Cyn. \"Top or bottom?\" She laughs, while Cyn gulps down the rest of her wine and nearly misses putting the empty glass on the nightstand. She is feeling no pain, as she points to my cock.\n\n\"I'll take the cook... I mean, cock.\" She says, laughing, as she slurs her words. Shelly smiles at me, as she moves up to the head of the bed. Cyn throws her leg over my body and reaches between her thighs to guide my cock into her slick pussy. As she sits down, impaling herself on my rigid cock, Shelly squats over my head, facing Cyn.\n\n\"I want to watch you.\" Shelly says, as she kneels on either side of my shoulders, putting first her ass and then her pussy against my face. \n\n\"You okay, under there?\" Shelly asks, laughing, as Cyn starts moving up and down on my cock.\n\n\"I'm in heaven.\" I answer, darting my tongue into Shelly's dripping pussy, as Cyn sets a steady rhythm on my cock. Fucking incredible! I can't see what Cyn and Shelly are doing, but Shelly is leaning forward far enough to be sucking on Cyn's tits and Cyn is moaning and riding my cock like a wild woman. I'm thrusting my hips off the bed, matching her rhythm, as I feel my orgasm start to build.\n\n\"Oh fuck!\" Cyn cries, as Shelly leans forward, pulling her pussy away from my face. \"Oh God! Right there! Don't stop!\" Cyn moans, as she starts bouncing frantically on my cock. I'm trying to keep up with her rhythm, but she's gone ballistic! Oh fuck! Shelly is fingering Cyn's clit, while Cyn bounces on my cock! I can felt the back of her fingers, whenever Cyn slams her pussy down. \n\nLeaning my head up, I try to peer between Shelly's legs, but I can't see anything but her ass and her thick pussy lips, which is not a terrible sight, by any means. \n\n\"Oh! Oh! Oh! Ohhhhhhhhhhhhhhh!\" Cyn slams her pussy down on my rigid cock, locking her muscles in a vice-like grip. Shelly settles back on my mouth and I snake my tongue into her wet pussy, as my hard cock throbs inside Cyn's vibrating pussy. Cyn catches her breath and I'm hoping she'll ride me to completion, but Shelly leans forward again and grabs Cyn in a full embrace, pulling her down on the bed beside us. I twist my body sideways, rolling with them until I can disengage my hard cock from Cyn's slick pussy and move out of their way.\n\n\"Mmmmm.\" Cyn moans, as she kisses Shelly's face. \"So good! That was so good!\" She murmurs, as their breasts mash against each other and their legs entwine. \"Oh god! I've never felt anything like that.\" She sighs, as they kiss passionately. It's an erotic show, but what about me? I was so fucking close! I watch these beautiful women rub their bodies together; writhing in passion, but all I can think about is my own release. Now I really do feel like a fucking catalyst, like an extra in an x-rated movie.\n\nAs I'm lying there, with my aching cock sticking straight up in the air, Shelly breaks the kiss and starts working her way down Cyn's body. Fuck! She's sucking her nipples and running her fingers through Cyn's matted bush. Cyn is lying back with her eyes closed, spreading her legs and pushing her mound up against Shelly's hand. I want to slam my cock back inside her steamy pussy and finish what we started, but Shelly has other ideas. Winking at me, Shelly kneels between Cyn's legs and lowers her mouth to Cyn's wide-open pussy.\n\n\"Oh yeah!\" Cyn moans, pulling her knees up and spreading her legs, as she grabs Shelly's hair and pulls her face tighter into her pussy. Shelly's voracious attack on Cyn's pussy, leaves her ass waving in the air, finally giving me an avenue for my release. Shelly's orgasm had been cut short too, and her wet pussy lips are an inviting sight, as I kneel on the bed behind her. Grabbing her hips I align my cock with my target. Shelly realizes the implication of my movements and spreads her knees farther apart on the bed. \n\nPositioning my cockhead just inside her thick pussy lips, I slam into her in one quick motion. With my hands on her hips, I start pumping into her like a madman. My orgasm has been building for a while and all I care about is cumming. At this point, I don't care whether Shelly has an orgasm, or is enjoying our fuck; I just want to explode inside her hot pussy. \n\n\"Damn!\" Shelly cries, pulling her mouth from Cyn's pussy and slamming her ass back against my cock. \"You're like an animal back there!\" She says, matching my thrusts and shoving one hand between her legs to rub her clit. \"You're going to finish me off good!\" She grunts, as I feel my balls constrict I hammer her even harder. \n\n\"Fuck! Fuck! Fuck!\" I groan, as I jam my cock deep into Shelly's enflamed pussy and start spewing load after load of built up cum into her fiery furnace. She tightens her spasming pussy muscles around my cock, as her orgasm rips through her. I lean against her back, catching my breath, as she again lowers her face to Cyn's pussy.\n\nShelly finishes Cyn off and we all cuddle together on the sex-soaked bedspread. I enjoy the warmth of their bodies next to mine and spend the next few minutes running my hands over their smooth skin, memorizing their curves. I have a feeling this may be the end or our little tryst.\n\n\"We can't let Cyn drive.\" Shelly says, looking at the clock and sitting up. \"You'll have to drive her car and I'll bring you back here for your car.\" She says authoritatively, as I look at Cyn, almost asleep on the bed next to me. She's right. I gently shake Cyn awake and we all get dressed and leave the hotel.\n\n\"You were wonderful, as usual.\" Cyn says dreamily, leaning her head on my shoulder, as we make the ten-minute drive to her house. \n\n\"You were pretty amazing yourself.\" I answer, resting my hand on her thigh, as we turn onto her street. I park in her normal spot on the driveway and make sure she has her keys and is walking okay, before I run to the curb and get in Shelly's car. We drive away just as Cyn is opening her front door.\n\n\"Thanks for your help at the hotel.\" Shelly says, caressing my thigh much the same way I did Cyn's. \"I don't think I could have done it without you.\" She says.\n\n\"What do you think will happen when she sobers up?\" I ask, looking at Shelly, as she drives.\n\n\"She wasn't so drunk that she didn't know who was doing what.\" Shelly says, matter-of-factly. \"Some people need an excuse for their behavior, the wine provided that. She'll be fine next time.\"\n\n\"So, next Thursday?\" I ask, knowing the answer.\n\n\"I'm hoping we won't be seeing you next Thursday.\" Shelly says, smiling like the Chesire Cat.\n\n\"That's what I thought.\" I answer quietly.\n\n\"Hey, don't act like such a victim.\" Shelly admonishes. \"You got some great sex out of this didn't you?\"\n\n\"Unbelievable sex.\" I answer, honestly.\n\n\"Well then.\" She says, adopting her professorial tone. \"Would you have still done it, if you'd known everything from the beginning?\" She asks. I think about it and realize she's right.\n\n\"Of course. In a heartbeat.\" I answer more lively than I expected.\n\n\"There you go.\" She says, patting my leg. \"You're a marvelously talented lover, Mike.\" She says, looking towards me as she pulls into the hotel's parking lot. \"You made me feel half my age and twice as sexy as I really am.\" She smiles. \"Now, go seduce someone your own age.\" She laughs, as she stops next to my car. \n\n\"Thanks, Shelly.\" I answer, leaning over and kissing her briefly on the lips. \"You're at least twice as sexy as you think you are.\" I tell her as I get out of the car. \n\nWhat a night! I collapse on my bed, falling asleep without even getting undressed. In the morning, I'm surprised to find a text message from Jasmine.\n\nSORRY I GOT MAD! PICK ME UP AFTER SCHOOL? IF YOU'RE NOT STILL ANGRY.\n\nI text back immediately that I was never angry with her and I'll see her after school. There's no cheerleader practice on Fridays because the game is that night, so I have to hustle to get from my last class to her school by the time she gets out.\n\nI pull up in front of her school just as classes start letting out. Normally, I would be checking out every hard bodied teenage girl who passes my car, but today I'm focused on just one. I see her running towards my car with her backpack slung over one arm. She's wearing her low-slung jeans and a stretchy top that clings enticingly to her teenage curves. \n\n\"Hi Mike.\" She says, jumping in my car and closing the door. \"I'm so sorry I got mad at you!\" She says, leaning over and kissing my cheek. Her lips linger just a little longer than usual and for a minute I think she's going to move them around to touch mine. But she sits back in her seat and puts her backpack on the floor. \n\n\"Thanks for picking me up.\" She smiles. \"I really need to talk to you.\" She says.\n\n\"Starbucks?\" I ask\n\n\"How about the park?\" She answers. \"It's kind of private.\" We drive in silence until we get to the park. Jasmine throws open her door and runs to the swings, in the nearly deserted play area.\n\n\"Aunt Cyn was pretty mellowed out when she got home last night.\" Jasmine says, smiling at me, as I walk behind the swing she's sitting on and give her a gentle push.\n\n\"I know.\" I answer, as my hands push against her ass cheeks. \"I drove her home.\"\n\n\"Oh.\" She says, probably wondering about the logistics, but she just keeps swinging. I watch as her top rides up and her thong is visible above the low waist of her jeans. \n\n\"I told her that I overheard her conversation with my mom.\" She says, as I continue to push her higher. She looks around to make sure we're still alone. \"I told her I'd be the third person.\" She says, looking over her shoulder at me. \n\n\"What'd she say?\" I ask, my imagination taking off with this idea. \n\n\"She laughed at me and said I needed to find someone my own age.\" She says, smiling. \"I didn't tell her that I knew you, but I asked her if you were really as good as she said you were.\" I realize she's intentionally drawing out her description of the conversation, to tease me, and I'm happy to play along.\n\n\"And... What did she say?\" I ask, playfully pushing her harder.\n\n\"She said you were better.\" She says quietly. \"So I took advantage of her loose-lipped condition and convinced her to tell me about it. She told me the whole story about how she met you at the book store and how she teased and taunted you.\" She says. \"She even described in explicit detail what you did to her with your tongue.\" Jasmine says, putting her feet on the ground and stopping the swing. \n\n\"She kept referring to your talented tongue. She made you sound like a sexy superhero.\" Jasmine says, turning towards me. \"Tongue-man, with abilities far beyond those of mortal man, providing orgasms for women of all ages and races!\" She laughs, pulling me into a playful embrace. \"Cleverly disguised as a mild-mannered book store clerk.\" She says, lightly kissing my lips. I can't think of anything witty or intelligent to say, so I just hold her tight, relishing the feeling of her body against mine.\n\n\"Mike... I... um... I... want you to do to me what you did to Aunt Cyn.\" She says, again pressing her lips to mine. I slide my tongue into her mouth and caress her back with my hands. My heart is beating so hard, I'm sure she can feel it against her chest.\n\n\"Don't get the wrong idea.\" She says, pulling her face back from mine. \"I'm not saying that I think we have a future as a couple, but it was Aunt Cyn who was so adamant that I shouldn't date outside of my race. Kind of hypocritical, don't you think?\" She asks.\n\n\"Very.\" I say, hoping that's the right answer. We stand there for a few minutes, neither of us speaking. I finally break the silence.\n\n\"I'm going to have to think about it, Jasmine.\" I say. \"I don't usually do high school girls, they're so impressionable.\" I tell her, smiling.\n\n\"I'll show you impressionable.\" She says, smacking my ass and running across the playground. I take off after her and she stops at the crossbars, pulling herself up. She swings one leg and then the other over the bar and lets go with her hands. Hanging by her knees, she smiles at me upside down. Her blouse slides up revealing her flat, brown stomach and the bottom of her black, bra. I walk around behind her, where her thong strap is visible, as it disappears into her tight jeans. Holding her legs, so she can't swing off the bar, I snap the elastic strip of her black thong.  \n\n\"Ooooo!\" She says. \"You're going to get it.\" She says, wiggling her ass around and trying to get off the bars. \n\n\"I'm counting on it.\" I say, letting go of her legs and stepping back as she swings once and then flips herself upright onto the ground. \n\n\"Very impressive!\" I say, applauding.\n\n\"So, do you want to pick me up after the football game tonight?\" She asks, seductively, as she straightens her clothes.\n\n\"I can't, Jasmine, I have to work.\" I tell her. \"Besides we wouldn't have much time and I want to do this right.\" I figure this might be a one-time thing and I don't want it to be a quickie after a football game. \"How about tomorrow?\" I ask.\n\n\"I have cheerleader competition all day, but I'm free tomorrow night.\" She says, standing close and looking expectantly at my face. My dream is coming true if I can just schedule it!\n\n\"Damn! I have to work tomorrow night.\" I say, my frustration starting to build. \"I'm off all day Sunday, what do you have planned?\" I ask, wrapping my arms around her.\n\n\"Umm...\" She says, looking at the sky. \"Spending the day with you?\" She asks. \"How early can you pick me up?\" She asks excitedly.\n\n\"As early as you like.\" I say, my cock hardening against the warmth of her body. \"I'll get rid of my roommate and we'll have the whole day!\" I tell her.\n\n\"Is nine o'clock too early?\" She asks, rocking against the bulge in my pants. \n\n\"Not at all!\" I tell her, glancing at my watch. \"Shit! I have to go to work.\" I say, leading her back towards my car. \n\n\"I can't wait until Sunday.\" I tell her, kissing her on the mouth, when I drop her off at her house.\n\n\"Me either.\" She whispers. \"I'm wet just thinking about it.\" She smiles.\n\n\"Just don't forget to take your pills!\" I admonish her playfully.\n\n\"Don't worry. That'll never happen again.\" She says. \n\n\"Good!\" I tell her.\n\n\"Mike.\" She says, leaning into the car. \"No more secrets, okay?\" She says, smiling.\n\n\"No more secrets, Jasmine.\" I respond. \"I'll see you Sunday. Good luck tomorrow with the competition.\" She closes the door and I drive away, wondering how I ever got so lucky!",
        "I spend most of Saturday, getting everything ready for Sunday. After cleaning the apartment and doing laundry, I drive to the mall and pick out some flavored massage oil and scented candles. When I get home, I make a playlist on my IPOD of mood music; slow ballads and light jazz. I want this to be perfect. I want this to be the most memorable day Jasmine has ever spent. By the time I leave for work, I have everything ready.\n\n\"Hi, Mike.\" Amber says, walking up as I clock in for work. \"We don't seem to work together much anymore.\" She smiles. \n\n\"Hi, Amber. Good to see you.\" I say, glancing up as I punch my employee number into the computer. \"I haven't seen you since that party... well, I've seen you, but we haven't worked together or talked.\" I say, wondering if I should warn her about how Jimmy dumped Jasmine.\n\n\"How're things working out with Jimmy?\" I ask.\n\n\"Okay.\" She says. \"Honestly, I caught him on the rebound and he's still in mourning for Jasmine.\" She says. \"Who I've seen you with a lot lately.\" She says, moving closer to me and lowering her voice. \"Be careful, Mike.\" She whispers. \"Jasmine's trouble.\"\n\n\n\"What do you mean?\" I ask her defensively. \"Do you know what Jimmy did to her.\"\n\n\"What he did?\" She says indignantly. \"She went out on him and got herself pregnant!\" Amber says, louder than I think she means to, and glances around to see if anyone heard her. We're alone, so she continues. \"You know she's pregnant, right?\" She says conspiratorially.\n\n\"She's not pregnant.\" I tell her. \"She thought she was because she was a few days late, but she started her period that same night.\" I tell her. \"But you're the one that has to be careful. As soon as she told Jimmy she thought she was pregnant, he dumped her like a hot potato.\"\n\n\"That's because he knew it wasn't his.\" She says quietly. \"But she wasn't pregnant, after all?\"\n\n\"No.\" I tell her, confused by her question. \"How well do you know Jasmine?\" I ask. \"Because she swears she never went out on Jimmy and I believe her.\" I say. \n\n\"Oh fuck!\" Amber says, sitting down in a nearby chair. \"I'm not suppose to tell anyone, but Jimmy told me he can't have kids.\" I must look shocked because she continues a bit faster. \"Some childhood disease that wasn't treated properly and he ended up sterile.\" She says. \"A big settlement for malpractice and everything, but that's why Jimmy was so sure that Jasmine cheated on him. He knew if she was pregnant, it couldn't be his.\"\n\n\"Jasmine didn't know about Jimmy?\" I ask, trying to figure out how Amber knows, but Jasmine doesn't.\n\n\"He was embarrassed. He didn't want to tell anyone, but I pressed him for how he could be so sure it wasn't his kid.\" She smiles at me. \"I can be pretty persuasive.\" She says, and I don't doubt it. \n\n\"So Jasmine says, 'I'm pregnant' instead of 'I'm late or I might be...\" \n\n\"And Jimmy figures she cheated on him.\" Amber interrupts, finishing my thought. \"It's all a big misunderstanding.\" She says, looking at me. I think about it for a minute.\n\n\"Fuck!\" I say under my breath. \"I bet that's exactly what happened.\"\n\n\"Are you going to tell Jasmine?\" She asks.\n\n\"Are you going to tell Jimmy?\" I ask.\n\n\"I don't know.\" She says, lost in thought as a customer approaches and I help him find a book. \n\nAmber and I don't discuss it any further and it's still on my mind when I go to bed that night. I toss and turn all night, considering the consequences of telling Jasmine and not telling her. I imagine blurting it out right when I pick her up Sunday morning and see her running back in her house to call Jimmy. What if I don't tell her at all or wait until Monday, pretending I just found out? No more secrets, I told her. Fuck! What if I wait until we're naked in bed and say, 'by the way...'? I wouldn't have taken advantage of her, but I'd at least have touched and seen her naked body. \n\nI still don't know what to do, even as I drive over to pick her up. I'm definitely going to tell her, it's just the timing that's in question. She doesn't wait for me to come to the door, but comes running out as I pull into her driveway. She's wearing her typical uniform of low-slung jeans, this time with a pull over orange blouse that accents her milk chocolate skin perfectly. The v-neck shows off the inside curves of her breasts, while the puffy sleeves give her that innocent schoolgirl look. \n\n\"What?\" She says smiling, as she gets into the car.\n\n\"You look delicious.\" I tell her, leaning over and lightly kissing her on the lips. Her light orange lip-gloss, which matches her blouse, also tastes like orange. \"Mmm, you are delicious.\"\n\n\"That was what I was going for.\" She smiles. \"I'm glad you approve.\" She sits back in her seat, looking anxious and nervous at the same time. \n\n\"Jasmine.\" I say, as I pull away from the curb. \"There's something I need to tell you.\" Fuck! I realize that I'm going to tell her, without even consciously deciding. Damn that, 'No more secrets' crap!\n\n\"What?\" She says, turning in her seat to face me. \n\n\"Let's go to Starbucks and talk.\" I say, not wanting to talk about it while I'm driving.\n\n\"Why?\" She says. \"I don't want to go to Starbucks, Mike. Why can't you tell me in the car or at your house?\" She asks.\n\n\"Because once I've told you, you might not want to come to my house.\" I answer, solemnly.\n\n\"Why not?\" She says, looking puzzled. \"You can't be fucking someone else in my family. I already know about Aunt Cyn and her friends.\" She says, trying to make light of whatever I'm going to tell her. \"My mom wasn't interested and I don't have a sister.\" I smile at her as I pull the car over to the curb.\n\n\"I know why Jimmy thought you cheated on him.\" I say, turning towards her.\n\n\"So do I, because he didn't want to take responsibility if I was pregnant.\" She says, defiantly.\n\n\"I was talking with Amber last night.\" I say, and before I can continue, Jasmine interrupts me.\n\n\"You're still seeing her?\" She asks, incredulously.\n\n\"Not like that!\" I answer quickly. \"We were at work. We both work at the book store remember?\" I add quietly.\n\n\"Oh yeah.\" She says sheepishly. \"Sorry.\"\n\n\"Anyway, Amber says that Jimmy told her he was very sick when he was a kid. The doctors fucked up the treatment and he ended up sterile.\" I pause to let it sink in. \"He couldn't have made you pregnant, Jasmine, so he thought someone else must have.\" She's just starring at me, not talking. \n\n\"If that's true, why didn't he ever tell me?\" She asks, trying to rationalize what I've said. \"We were dating for almost a year and he never mentioned it, but after two weeks he tells Amber?\" She asks, shaking her head and clearly not believing what I'm telling her.\n\n\"Maybe he was embarrassed, or didn't know how to tell you.\" I answer. \"Amber says that she confronted him about how he could be so sure that you weren't carrying his kid, and that's when he told her.\" Jasmine, just sits there, still shaking her head. I look at her beautiful face and sexy young body, thinking about what could have been.\n\n\"Shall I take you home now?\" I ask her, turning back in my seat and starting the car.\n\n\"What?\" She says, looking over at me. \"NO! This doesn't change anything, Mike.\" She says. \"Even if this is all true, Jimmy should have known that I wouldn't fuck anyone else. He should have believed in me! And he damn sure shouldn't have been fucking Amber twenty minutes after we broke up.\" She says, folding her arms across her chest. \n\n\"Do you want to take me home?\" She asks quietly, looking over at me.\n\n\"Absolutely not!\" I answer. \"I want you more than you know, Jasmine. I just didn't think, you know, if there was a chance for you and Jimmy, that you'd still want...\"\n\n\"I still want, Mike.\" She says. \"I still want you to make me feel like Aunt Cyn said you made her feel.\" She says, putting her hand on my thigh, as I steer the car towards my apartment. \"Come on Tongue-man, show a girl a good time, huh?\" She says playfully, squeezing my thigh. Goddamn! This couldn't be better! I'm finally going to fuck Jasmine and I didn't have to deceive her to do it!\n\n\"Here we are.\" I tell Jasmine, as I unlock the door and let her into my apartment. She appears even more nervous and vulnerable than she did in the car. I wrap my arms around her and pull her against me.\n\n\"You still want this?\" I ask. \"It's always okay to change your mind.\" I tell her, wondering why I keep giving her chances to back out.\n\n\"No, I'm just nervous, Mike.\" She says, hugging me. \"I've only ever been with Jimmy.\" She says. \"You've been with older, more experienced women...\" Her voice trails off and I hold her tightly. \"I've seen how you look at me and I'm afraid you might be disappointed.\"\n\n\"There is no way I could ever be disappointed.\" I laugh with relief that she isn't having second thoughts. \"Leave everything to me!\" I tell her. \"After all, I'm... super tongue, or whatever.\"\n\n\"Tongue-man.\" She says, stepping back and laughing. \"Okay, I'll leave it to you.\" She says, looking around at my apartment, probably wondering what to do or say next. \n\n\"Come on.\" I say, leading her into the bedroom. \"Just relax and enjoy yourself. I'm the one who should be nervous.\" I tell her, as we walk into the bedroom. \"I want this to be absolutely perfect for you.\" I turn on my IPOD to start the soft music and then light the four candles that I've placed on the dresser and nightstands. \n\n\"Wow!\" She says, looking at the candles and then at me. \"I'm used to my jeans around my ankles in the backseat of a car.\" She says. \"That night at the party was going to be our first time in a bed.\" She says, as I step forward and start lifting the hem of her blouse. Her eyes bore into mine as she raises her arms and I slowly pull the orange blouse over her head. I caress her shoulders and then slide my hands down her back, releasing her bra. Pulling the straps from her shoulders, she steps back as I pull the bra away from her firm, brown tits. \n\nFuck! They are magnificent! About twice as big as Ambers, with dark areolas and thick nipples that makes me think of what Cyn's tits must have looked like at this age. I cradle them in my hands and she shivers when I brush my thumbs across her nipples. They're very responsive. I bet they'll harden quickly when I suck on them. \n\nDetermined to take this slowly and anxious to explore every inch of her body, I release her tits. Running my fingers down her sides and around her back, I slip my fingers into the waistband of her jeans, at the small of her back. \n\n\"Don't even think about it.\" She says, as my fingers touch her thong. \n\n\"What?\" I ask innocently.\n\n\"Snapping my thong.\" She says, sliding her hand over the bulge in my pants. \"If you were considering it, you might want to reconsider.\" She says, squeezing my hard cock through my pants. Pulling my hand from her jeans, I bring it around to the front and unfasten them.\n\n\"Wait.\" She says, as I start to pull her jeans down. What now? I'm wondering if she's finally changed her mind, when she says, \"I need to take my shoes off.\" I laugh at my own nervousness and playfully push her back on the bed.\n\n\"I'll do it.\" I tell her, lifting her feet and removing her shoes and socks. \"Now the jeans?\" I ask.\n\n\"Now the jeans.\" She says, leaning back and shoving them down over her hips. I watch her tits bounce from side to side as she wiggles out of her jeans. Grabbing the pant legs, I pull them off. What a sight! Jasmine is lying back on my bed in just her black thong, smiling at me. Her thick black bush pushes against the thin material covering her pussy and stray hairs curl around the edges of it. I want to take it slowly, but I can't wait to see her completely naked. It's like I'm afraid that at any time I could wake up and find this is all a dream. \n\nLeaning over the end of the bed, I run my hands up the outside of her thighs until my fingers touch the thin strip of material at her hips. I pause, like I'm unveiling an exquisite sculpture and then slowly start to pull her thong down. She bends her knees, placing her feet flat on the bed. As she lifts her ass from the bed, I try to pull the thong down over her thighs. I tug on it, but it won't budge.\n\n\"It's caught between my cheeks.\" She laughs embarrassingly, reaching one hand behind her back. This couldn't go any less smooth, but the humor of the situation eases the tension we're both feeling.\n\n\"No.\" I say quickly. \"I'll get it.\" Sliding my hand over her ass cheek, I grab the thin strip of material and pull it down. As it disengages from between her cheeks, she straightens her legs out and I pull the thong the rest of the way off. The triangle of material that was covering her pussy is soaking wet.\n\n\"Whoa. Did you shower in this?\" I tease her, as I hold her thong up.\n\n\"Very funny.\" She says, getting more embarrassed, closing her legs and lying rigidly with her arms at her side. I decide teasing isn't the best approach to take with her.\n\n\"You are beautiful.\" I tell her, grabbing the bottle of massage oil from the dresser. I heated it in hot water before I went to get Jasmine, and it's still warm. \"I'm going to give you a massage to help you relax... and because I want to explore your beautiful body.\" I tell her, sitting on the edge of the bed and putting massage oil on her palm. \"Then I'm going to give you more orgasms than you ever thought possible.\" \n\n\"Mmmm.\" She says, as I massage her palm with my thumbs and run my fingers between the bones on the back of her hands. \"Is this what you did for Aunt Cyn?\" She asks.\n\n\"No.\" I tell her. \"Your aunt Cyn was more anxious to just jump into it. She wasn't interested in candles, soft music or massage oils. This is all for you.\" I say, my hands moving up her arms, kneading her lovely brown flesh. \"Just lie back and close your eyes.\" I tell her, as the back of my hand brushes against the side of her breast.\n\n\"I'm kind of anxious too, Mike.\" Jasmine says, turning her head to look at me. \"You saw my panties.\" She smiles.\n\n\"All in due time.\" I say, moving to the other side of the bed and starting on her other hand. Trust me, it'll be worth it.\"\n\n\"I trust you, Mike.\" She says, closing her eyes. \"That feels nice.\" I massage all the way up her arm before moving to the foot of the bed to massage her feet. With her eyes closed, I can scrutinize her body without embarrassing her. I've imagined this moment a hundred times, but even in my imagination, it wasn't this good. \n\nAs I massage her calf and move my hands onto her thigh, she reflexively parts her legs. Her pubic hair is thick and untrimmed, forming a natural triangle over her pussy mound. I put more oil on my palm and start to massage the milk chocolate skin on her inner thigh. She sighs and spreads her legs farther apart. Her thick black pussy lips are slick with her juices and I'm tempted to touch them, but I resist. \n\n\"When do I get to feel that talented tongue of yours?\" Jasmine says, dreamily, as I finish massaging her other thigh.\n\n\"Right now.\" I tell her impulsively leaning my face over hers and licking from her chin up the side of her cheek. \n\n\"That's not funny!\" She laughs, as I continue to lick her face like a puppy dog. She brings her hands up to my chest and pushes me away. \"That's mean!\" She says, playfully. \"You get me all worked up, ready for sex and then you do that!\" She says. \"You can at least get undressed.\" She says, looking surprised that I still have my clothes on.\n\n\"It's time for you to turn over.\" I say. \"I'm saving your breasts until after I've done your back.\" I tell her, as I quickly take off my clothes. I'm surprisingly self-conscious, as Jasmine watches me disrobe. \n\n\"So that's what a white one looks like.\" She teases, reaching out and wrapping her hand around my hard cock. Maybe playful teasing is a good approach to relieve her nervousness.\n\n\"You didn't know what you were missing, did you.\" I answer, cheerfully. \"Come on, time to turn over.\" Jasmine releases my cock, as she rolls over and I get my first really good look at her cute, brown ass. My cock stiffens even more at the sight of her curvy ass cheeks. I hurriedly massage the backs of Jasmine's legs, spreading them apart as I work the oil into her skin. I can't wait to get my hands on her firm, young ass. \n\nKneeling between her legs, I'm entranced by the way her skin darkens in the small of her back and down the crevice between her ass cheeks, as they curve together. The same dark pigmentation happens on the inside of her thighs and the backs of her knees. I put a few drops of oil on her ass cheeks, and a few extra drops between them. Cupping her round cheeks in my hands, I rub my thumbs along the crevice, teasing her puckered asshole. \n\n\"Mmmmm.\" Jasmine sighs, spreading her legs even wider and raising her ass slightly. I'm lightly rubbing one thumb between her asshole and her pussy, when she pushes up against me and my thumb glides over her slick pussy lips.\n\n\"Ohh yeah!\" Jasmine says. \"Please touch me, Mike.\" She pleads. \"I'm so wet and ready.\" She says. \n\n\"Patience.\" I answer, getting up on my knees and straddling her ass. I nestle my cock between her recently oiled ass cheeks, as I pour oil in my palm and start massaging her back. Rocking back and forth, as I caress her shoulders and upper back, my cock slides up and down the crack of her ass. \n\n\"Oh, Mike.\" Jasmine says, pushing her ass up against my hard cock. \"Fuck me, baby.\" She pleads. \"I'm so ready to be fucked.\" I lean my head down next to hers so I'm almost lying on her back.\n\n\"Okay, turn over and let tongue-man do his stuff.\" I whisper, as I slide off of her and let her turn over. \n\n\"It's about time.\" She says. \"You've been massaging me for hours.\" I look at the clock on the nightstand. Not hours, but we have been doing this for over forty-five minutes. When she's on her back, I straddle her hips, resting my erect cock against her cushy pussy mound. With more oil on my hands, I start gently rubbing it all over her tits. Squeezing and kneading, I spread oil over, around and under her perfectly round orbs. With my palms against her nipples, I rub in a circular motion, teasing her hard, thick nipples. \n\n\"Yeah!\" Jasmine smiles. \"That feels nice.\" She says, rocking her hips so my cock moves up and down against her pussy mound. Leaning down, I suck one of her taut nipples into my mouth and flick my tongue against it. My nibbling and sucking elicits moans of pleasure, as I switch from one to the other and back. The massage oil I got has a faint cherry taste to it and I lick all over her tits and around her dark areolas.\n\n\"I'm ready to taste you now.\" I whisper, leaning my face down to hers. \n\n\"It's about time.\" She whispers. \"I was wondering if you were ever going to get to it.\" She smiles, as I slide my body down her oily skin. I pause, with my face in her wide-open crotch, savoring the sight of her thick pussy lips, slightly spread apart, revealing the fleshy pink center. Flattening my tongue, I take one long lick from the bottom of her pussy lips to the top, spreading them as I go. I breathe in through my nose and the combination of her aroma and her taste is intoxicating. My cock is rock hard, as I start to explore her pussy with my tongue.\n\n\"Oh fuck yes!\" Jasmine cries, arching her back and pushing her pussy hard against my tongue. I tease her pussy lips, running my tongue between her inner and outer labia and then sucking them into my mouth, nibbling gently with my teeth. Jasmine is squirming around and pushing against my mouth, trying to get my tongue into eager pussy. Finally, I relent, stiffening my tongue and plunging it into her succulent opening. \n\n\"Oh my god!\" Jasmine moans, as I rapidly tongue fuck her. Every few seconds I move my mouth up and gently flick my tongue across her clit. When I do, she goes crazy, bucking her pussy against my mouth and moaning loudly.\n\n\"Ohhhhhhhh fuuuuuuuck!\" She cries as I replace my tongue with two fingers and suck her clit into my mouth. As I finger fuck her juicy pussy, I gently suck on her clit and lightly run my tongue over the tip of it. She's trashing around so much that I can hardly keep her clit in my mouth. With my free hand, I press down on her pussy mound to hold her still.",
        "\"Ohhhhh! Mike!\" Jasmine calls out. \"I'm cumming, Mike!\" She says, bucking wildly against my mouth. \"You're making me cum!\" She cries, as I keep up the assault on her pussy, finger fucking her and sucking on her clit. Grabbing my head with her hands, she pulls me so tightly against her wide-open pussy that I'm barely able to breathe. I keep sucking her clit until she clenches her pussy tightly around my fingers and tries to hold my head still with her hands. Shaking and trembling, she jerks convulsively several times and then relaxes her thighs. \n\nPulling my head back, I gasp for air, before I start lapping up her sweet juices. Her pussy is drenched and I drink from her heavily flowing juices like I'm dying of thirst. \n\n\"Oh my god!\" Jasmine pants. \"I don't think I've ever cum so hard.\" She sighs, while sucking air into her lungs. I watch her chest heave and her tits swell, as she tries to catch her breath. My cock is rock solid, but I'm too drunk on her flavor to stop lapping up her juices. After licking all around her pussy and her thighs, I push her legs up and slurp up the creamy sauce that has run down between her ass cheeks. She lets out a soft moan as my tongue darts in and out of her tight little asshole. \n\nLicking from her asshole to her pussy, I suck her labia into my mouth, swallowing the steady stream of pussy juice continuing to flow from between her lips. When she starts rocking back against me, I lick faster, allowing my tongue to barely graze her clit.\n\n\"Ohhhhhhh! Miiiiiiike!\" She moans, as my tongue lightly touches the underside of her clit. \n\nA couple of years ago, my former landlady taught me how to stimulate a woman's clitoris. Most men overdo it, she told me, sucking too hard and too fast. Although the woman might orgasm, she's likely to be sore afterwards. She described how sensitive the clitoris is, especially right after an orgasm. Using herself as a live teaching aid, she encouraged me to practice a delicately light touch with my tongue. With her constant instruction and lots of practice, I perfected an approach that gave her slow building, extremely intense orgasms with no residual soreness. The technique involves filling my mouth with a mixture of pussy juice and saliva, before I start sucking on her clit. Then, stimulating her clit by swishing the juices all around it with my tongue, without making direct contact with her clit. She said she'd never felt anything like it. It took forever for her to peak and then she exploded in sheer ecstasy.\n\nJasmine's pussy is soaking wet and I fill my mouth with her warm nectar. Resting my chin between her splayed open pussy lips and sucking her clit into my mouth, I agitate the liquid with my tongue, swishing it around her engorged clit.\n\n\"Ohhhhhhhhhh! God! Mike!\" Jasmine cries, trying to buck against my mouth. With her legs in the air and my hands on the back of her thighs, she can't move very much, making it easier to keep my mouth on her clit. With a gentle sucking motion and a quick up and down movement of my tongue, I tantalize her sensitive clit and she begs for more.\n\n\"Oh! Mike!\" Jasmine breathes. \"What are you doing?\" She pants. \"Is this what Aunt Cyn was talking about?\" She asks. \"Oh! Fuck!\" She entwines her fingers in my hair, squeezing my head, but not pulling me against her. \"I've... never... felt... anything...\" She pants, her breath coming in short gasps as her orgasm builds. \n\n\"Ohhhhhhhhhhhhh!\" Fuuuuuuuuuuuuccccck!\" She screams. \"Don't stop!\" She yells, pulling my hair so hard it hurts. \"Don't you dare fucking stop! God! Mike! It's still building!\" She's clawing at my scalp, as I move my tongue faster, but still avoid direct contact with her clit. Jerking her head off the bed, with her teeth clenched together and her eyes closed, she starts shaking uncontrollably. \n\n\"Ohhh! Ohhh! Ohhhhhhhhhhhhhhhhhh!\" Jasmine screams, pushing my mouth away from her clit, as her orgasm thunders through her body and her juices gush over my chin. I hungrily gulp down her intoxicating serum, licking her puffy lips, as she shakes and trembles through her orgasm. When Jasmine finally lowers her legs, I continue to lick her inner thighs and all around her pussy.\n\n\"Fuck me, Mike.\" Jasmine says, between breaths. My cock is throbbing and I need relief, but I'm obsessed with her taste. \"Please, Mike.\" Jasmine pleads, spreading her legs and tugging on my shoulders. My face is coated with her juices from my chin to my cheeks. Wiping my face against her thick, triangular bush, I kiss her stomach and lick between her tits. \n\nA thin coating of pussy juice smears across her tits as I rub my face between them. Her dark nipples are jutting rigidly from her tits and I suck one into my mouth, while I pinch and tease the other one with my hand. Lying with my torso between her widespread legs, I alternate sucking each nipple and kneading her pliable, round tits. \n\n\"Pleeeeeeeeease, Mike!\" Jasmine sighs, running her fingers through my hair and rocking her drenched pussy against my abdomen. I move my face to hers and kiss her lightly, as I position my throbbing cock against her dripping pussy lips. I'm raised up on my arms and my chest is lightly brushing against her hard nipples. As I stare into her face and push my hard cock deep inside her saturated pussy, I am overwhelmed with a feeling of love and I'm starting to tell her before I even think about the consequences.\n\n\"Jasmine. I... I... \" Catching myself just in time, I hold my cock perfectly still inside her fiery pussy, using the weight of my body to keep Jasmine from moving. \"I am drunk on the taste of you.\" I tell her. \"I want to fuck you, but I need to taste you some more first.\" I say, quickly sliding my cock out of her pussy, as I move my body down hers.\n\n\"No! Mike! That's enough! Fuck me, now!\" Jasmine yells as I again lower my head between her legs. \"Ohhhhhh! Damn you! Ohhhhhhhh!\" She cries, bucking against my face, as I start sucking the moisture out of her cunt. I have never seen a pussy so swamped with juices and I bury my face between her gaping lips. I'm no longer trying to prove my sexual prowess, or tease her with a clever tongue technique. I am delirious and out of control, drinking her nectar, like a man possessed. Her body reacts to my invigorated assault and she humps my face, while thrashing around on the bed. I hungrily slurp her seemingly endless supply of sweet, hot syrup.\n\n\"Ohhhhhhhh! Fuuuuuuuuuck! I'm cumming again!\" Jasmine cries, and I react immediately. Pulling my pussy-soaked face from between her legs, I nearly dive up over her body and slam my hard, throbbing cock into her trembling pussy, pounding her towards another orgasm. \n\n\"Ohhhh! Ohhhh! Ohhhhh!\" Jasmine screams, as she wraps her arms around me and thrusts her pussy hard against my cock. \"Aaarrrrggggghhhhh!\" She groans, her orgasm exploding through her body, but I don't relent. I keep hammering her soggy pussy, fucking her harder and faster until she's just holding on, rocking along with me. Pussy juice is still clinging to my lips, as she shoves her tongue in my mouth, kissing me passionately. \n\nMy orgasm builds rapidly, as my cock glides along the slick walls of her steamy pussy. Muffled moans escape from our mouths, still locked together in a deep, tongue intensive kiss, as her urgency rebuilds itself. Bucking her hips off the bed, as I slam my hard cock into her, she digs her nails into my shoulders and tightens her pussy muscles around my cock. With one last thrust, I erupt inside of her, jerkily spewing several hours of build up cum. \n\nBreaking the kiss and gasping for air, I collapse on her chest. Her legs relax back onto the bed, but she keeps her arms wrapped around my back. Neither one of us speaks, as we struggle to catch our breaths.\n\n\"Your face is all wet.\" Jasmine teases, as she runs her hand over my cheek. \"Your cheeks are soaked almost to your ears! Did I do that?\" She asks with mock innocence. I'm lying on her with my spent cock nestled inside her soggy pussy. I slide my chest to the side, so I can fondle her left tit.\n\n\"I could have drowned.\" I say playfully, as I gently caress her tit and look into her eyes. Her face is radiant, with that post-coital glow. \n\n\"I've never been so wet.\" She says quietly, almost like it's an apology.\n\n\"I've never seen anyone with such a responsive body. I could have eaten you all day.\" I say. \n\n\"Speaking of eating. It's almost lunch time.\" I tell her. \"I can make some sandwiches or quesadillas. \"I offer. \"Or I could heat some soup, if you'd like.\"\n\n\"How can you be hungry, after all you've just eaten.\" She says, squeezing her pussy around my soft cock, to ensure I get her meaning.\n\n\"You're right. I've had my nourishment.\" I say, squeezing her thick nipple and gently stretching it out from her dark areola. \"I was just thinking of you.\" Lowering my head, I suck her right nipple into my mouth, while I continue to gently stretch and pinch her left one. \n\n\"Mmmm.\" She sighs, as I grip her nipple between my teeth and flick my tongue across the taut tip. \"You are unbelievable, Mike.\" She says, combing her fingers through my hair, as I continue to toy with her nipples, biting, nibbling, pinching and twisting until she starts a faint rocking of her hips. My cock responds to her movement and I rock with her, gradually building to a slow rhythmic fucking.\n\n\"You're ready again?\" She asks incredulously, raising her knees up and spreading her legs wider.\n\n\"Not so surprising.\" I say, pulling my mouth from her nipple and looking at her face. \"You are beautiful, sexy, sensual and besides, unlike someone here, I've only cum once.\" She smiles as I lower my mouth to hers and slowly glide my fully recovered cock in and out of her slippery hole. \n\nWithout the urgency I felt during our first fuck, I maintain an excruciatingly slow pace, sliding my cock all the way into her and then grinding my pelvic bone against her clit before gradually sliding it all the way out. After several repetitions of this slow motion fucking, Jasmine is humping her pussy around my cock and begging me to go faster. \n\n\"Please, Mike!\" She says. \"You are such a good tease, but I need you to really fuck me!\" I don't answer, but after a few more slow strokes I concede to her wishes and pick up the pace.\n\n\"Wait.\" She says, grabbing my shoulders and squeezing her legs around me. \"I want to be on top.\" She smiles. \"I want to ride you.\" She smiles as she tries to flip us over. \n\n\"Okay.\" I answer, excited about the prospect of watching her tits bounce as she rides my cock. \"Hold on a second.\" I tell her, lifting my ass and sliding my hard cock halfway out of her pussy, so she can straighten her legs under me. \"Okay, now roll over.\" I tell her, wrapping my arms around her and rolling our bodies together. We flip over perfectly, without disengaging my cock from her pussy.\n\n\"That's better.\" She says, pulling her knees up next to my hips and sitting up straight. \"Now I'm in control.\" She smiles, brushing her hard nipples against my chest as she leans down to kiss me. When she sits back up, she squirms around getting the fit right, before she starts moving up and down on my cock. I watch her tits flopping around, slapping against her chest, as she starts bouncing on my cock.\n\n\"Oh yeah!\" I encourage her as she starts bouncing faster and I reach up to grab her tits. Catching one in each hand, I squeeze them, while humping my ass off the bed to match her rhythm. With her head back and her eyes closed, she rides me faster and faster, as I maul her tits and pinch her nipples.\n\n\"Oh Mike!\" She pants, as I move one hand from her tit and slide it down through her thick bush, finding her clit with my thumb. \"Ohhhhhhh! Yeah!\" Jasmine cries, as I massage her love button and she starts bouncing frantically on my hard cock. I'm bucking my ass off the bed, trying to keep my thumb against her clit, as I feel myself about to explode.\n\n\"I'm going to cum.\" I pant, as Jasmine rides my cock like a wild woman, viciously slamming her pussy down around my shaft at a frenetic pace. \"I can't hold back!\" I tell her, shooting my load into her enflamed pussy.\n\n\"I'm cumming too!\" She cries, jouncing a few more times before she clamps her pussy around my cock and jerks violently up and down. Dropping onto my chest, she pushes her tongue into my mouth while her body shakes and trembles through the aftershocks of her orgasm. I wrap my arms around her, holding her snugly against me and we lie there in a state of contented bliss.\n\nWe both doze off for a while and never get around to lunch. I awaken at the sound of a loud noisy ring tone that I don't recognize. \n\n\"Sorry.\" Jasmine says, sliding off of me with a deep sigh, as my spent cock plops from her drenched pussy. \"It's my mom.\" She says, finding her jeans and pulling her cell phone from the pocket. \n\n\"Hi mom!\" She says, cheerfully after flipping the phone open. \"I'm not sure.\" She says into the phone. \"What time is it?\" She whispers to me, as she crawls back up on the bed. I glance at the clock and then reach over and fondle her tits as they hang under her crawling body. \n\n\"Three o'clock.\" I whisper back, as she settles down next to me with her head on my shoulder. \n\n\"That sounds great, what time?\" She says into the phone, as her hand moves between my legs and starts stroking my balls with her fingertips. \"Can I bring Mike?\" She asks, smiling at me. \"He's my new boyfriend.\" She says, looking me in the eyes and smiling broadly. \"You remember I told you about him. He works at the bookstore.\" She says, wrapping her fingers around my soft cock and gently stretching it out. \"Okay, mom. Love you, too. See you then.\" She flips the phone closed and tosses it on the floor by her jeans.\n\n\"I have to be home for dinner at five. \"She says. \"How would you like to have dinner at my house?\" She says, moving down the bed, so her face is lying on my thigh. \n\n\"You told your mom about me?\" I ask. She called me her boyfriend!\n\n\"No.\" She says, as she starts licking the sides of my cock. \"But she hardly pays attention when I talk to her, so she won't remember that I didn't.\" She smiles as she feeds my cockhead into her mouth and swirls her tongue around it. My cock responds instantly, stiffening in her grasp and she widens her grip.\n\n\"I'm your boyfriend?\" I ask. \"I thought you didn't date white guys.\" I tease, as my cock continues to harden within her warm mouth.\n\n\"I thought you didn't date high school girls?\" She says, smiling.\n\n\"I will if you will.\" I answer, pushing my semi-erect cock back into her mouth. She just smiles and starts bobbing her head up and down. I watch her black lips slide up and down my pale cock and I can't believe she called me her fucking boyfriend! I was sure that when I told her about Jimmy, she would go running back to him. As much as I dreamed about this, I was never very optimistic about it actually happening. \n\nJasmine is a more talented cocksucker than I imagined, and in no time, she has me bucking my ass off the bed, trying to push more of my hard cock into her mouth. I assumed that because her and Jimmy had only been fucking a few months, that she would be inexperienced. But it makes sense that giving head would be a good alternative to losing her virginity. \n\n\"Ohhhh! Jasmine!\" I pant, as she licks the underside of my cock, while her lips continue to slide up and down the length of it. She's cradling my balls with her hands, gently rolling them between her fingers and I'm about to explode any second.\n\n\"Oh fuck! I'm cumming again!\" I warn her. Pulling her lips back, she rapidly flicks her tongue against the sensitive area at the base of my cockhead, while continuing to caress my balls. I lose it and erupt into her mouth, spewing hot cum onto her tongue. She sucks and swallows; milking every drop of cum from my cock, before letting it gently slide from her mouth.\n\nSitting back on her knees, she licks her lips and smiles at me. \"We're due at my mom's house at five o'clock and I need a shower.\" She says. \"Can we take a shower before I go home?\" She asks, seductively.\n\n\"What happened to the nervous girl who was here this morning?\" I tease, as my breathing returns to normal and I recover from my third orgasm.\n\n\"I guess you sucked all the nervousness out of her.\" She laughs. \"What about that shower?\" She asks, getting off the bed.\n\n\"Come on.\" I say, rolling off the bed. \"I'll wash your back.\" I say, kissing her lips as I squeeze her bare ass cheek. \n\n\"Just my back?\" She teases as we walk down the hall to the bathroom. I turn on the water and get towels from the hall closet. As I step into the shower Jasmine wraps her arms around me and we kiss passionately while the water sprays over us. \n\n\"This has been the best day of my life.\" She says as we're lathering soap on each other and I'm still marveling at the fact that she's here.\n\n\"Me too.\" I say, as I squeeze her soapy tits and move my hands down to lather her hairy pussy mound. \n\n\"Really?\" She asks, looking at me intently. \"Even better than Aunt Cyn and Shelly together? Even better than fucking Shelly's ass?\" She asks, not in a teasing way, but challenging whether I'm just placating her.\n\n\"Better than both of those put together.\" I say instantly. \"Your Aunt Cyn was very descriptive wasn't she?\" I ask, playfully running my fingers through her thick bush.\n\n\"She was quite drunk on wine and sex.\" Jasmine says. \"And I took advantage of that to find out everything I could.\" She smiles, pouring more soap in her hands and rubbing them on either side of my cock. \n\n\"I don't think I can go again this soon.\" I tell her, apologetically.\n\n\"Me either.\" She says. \"But I can't stop touching you.\" She smiles. As we finish our shower and get dressed, I start to wonder what Jasmine's family is like and what they'll think of me. I'm momentarily distracted by Jasmine pulling her thong on and situating the thin strip of material comfortably between her round ass cheeks. She sees me watching her and smiles.\n\n\"Don't look at me like that or we won't make it to my house in time for dinner.\" She says teasingly. I walk over and kiss her tenderly on the lips.\n\n\"We survived skipping lunch.\" I say, kissing her again. Between kissing, touching and teasing, we finally finish dressing. As we're driving to Jasmine's house, I'm wondering what Cyn will think about all this, when Jasmine interrupts my thoughts.\n\n\"By the way...\" She says, playfully squeezing my thigh with her hand. \"My mom invited Aunt Cyn and her family to join us for dinner.\" She says, kissing my cheek. \"I can't wait to see Aunt Cyn's face when I show up with you.\" She smiles mischievously.\n\nNeither can I! \n"
    ],
    "authorname": "samslam",
    "tags": [
        "big breasts",
        "black woman",
        "ffm",
        "threesome",
        "voyeur",
        "eating black pussy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/neglected-black-housewife-ch-02"
}