{
    "title": "Khel and Brom",
    "pages": [
        "CHAPTER 1\n\n Let me begin by describing myself and a little about my life. My name is Khel, and I am an elf. I'm fairly young for my race, I suppose I'd be about the equivalent of early twenties if I was a human. I was raised from infancy in a theatre troupe and have come to fancy myself as something of an accomplished actor. The company consists of about thirty of us total, mostly elves and a few humans. Our caravan travels among the majority of large towns and cities, performing plays, juggling acts, songs and dances as well. I have a fairly distinct voice, perhaps high for most males, but the audience always responds well, saying how I inspired and moved them. Occasionally I am made to play female roles depending on what performance we are enacting. I don't mind, it's the sign of a great actor, I think, to be able to capably and believably portray either sex on the stage. Elves are fortunate as a race. We are long-lived, have beautiful, striking features and a certain grace to our movements, although the latter is learned behavior from our society. I have dark brown hair, cut very short to help with wearing any wigs or hats for performances. I have long, pointed ears, naturally. My eyes are green, a bright vibrant emerald color that has always served me well when seeking company for the evening in whatever local brothel or tavern we might happen upon in our traveling. \n\n The last week's travels had brought us to entirely new territory, an immense subterranean dwarven city called Stonefield. It had only been in the past year or so that dwarves had begun allowing topside races into their underground settlements. The stout people weren't generally known for their hospitality, though to be honest, there wasn't much I knew for certain about them. I knew some dwarven fables of course, and had seen a scant number of individuals in large topside cities before, always merchants, selling their wares to humans and elves. It was quite exciting for our company to be invited to Stonefield. To my knowledge, we would be the first non-dwarvish performers ever here. Despite being deep underground, there was phosphorescent moss covering much of the cavern walls and ceiling as well as some sort of glowing gemstone in lamps all along the roads and in the windows that illuminated the city to a degree I would have thought impossible. It wasn't daylight to be sure, but we could see a good distance around in nearly every direction.\n\n There wasn't much time to appreciate the architecture or craftsmanship as we had to begin unloading and setting up our wagons straight away. We were fluid and well-practiced in our routine. We could likely set up our caravan town and stage with our eyes closed by this point. It took a little under two hours to get everything ready at the edge of a large square near what I guessed was the center of the city. A pair of armed dwarven guards had lead us here riding on the backs of what appeared to be enormous, snuffling moles from the surface and had stood to one side watching us go about our work. In fact, as I looked to the surrounding buildings I noticed many curious round faces, most of them bearded, staring inquisitively out at us with interested expressions. \n\n Once our set-up was complete, Joren our announcer and pitchman, a towering, well-built elvish fellow with short, straight blond hair and a tidy moustache began calling out to and inviting in our intended audience. Our stage was at the center of our convoy, on which Joren stood, garishly dressed, telling jokes and juggling as he beckoned to the curious stout folk who eagerly approached. Vahn, another tall elvish man with his long, straight black hair, stood at a booth nearby selling tickets with an infectious smile. I was backstage at this point donning a pretty gold dress and long yellow wig. My friend Aste quickly handling the make-up application to my cheeks and lips. She worked quickly but effectively to make me look my part. Tonight our performance was of a well known comedy called \"The King's Unlikely Bride\". It was a bit over the top, full of bawdy music, raunchy dance numbers and plenty of silly affairs. Our troupe had chosen this specifically because it was a story known all over, even to the dwarves we learned, so it became the ideal introduction to elvish theatre. I was pleased that it was chosen because of a moving duet between two of the potential brides, who became spurned by the king. I would be one of them and Aste would play the other. We had practiced this particular song together since we were young and loved being on stage ever since. I don't think we had failed yet in bringing a crowd to the verge of tears and beyond with our voices and emotion. I chuckled to myself, wondering if dwarves cried, or were as stone-faced as I had heard.\n\n As the play progressed, we all watched the audience with great interest from behind the heavy curtains. It was clear that some of the finer points may have been lost on the dwarves but they clearly understood the gist of what they were seeing. They were even more stoic than expected, giving only small laughs when most crowds had given whooping cheers and applause. Still, they didn't look bored at least. I performed my scenes with well-practiced ability and perhaps even overacted a few scenes to ensure our dwarven friends weren't missing any subtleties. While I was backstage during the dungeon scene, Aste commented to me,\n\n \"I think you have a hairy little admirer.\" She said.\n\n \"What? Oh really?\" I arched an eyebrow slightly. \"Point them out.\"\n\n She indicated from behind the curtains to a dwarven fellow with a great wide beard of fire-red hair about three rows back. He was bald on top and had thick red eyebrows to match his braided facial hair.\n\n \"Ugh, he's rather an ugly thing isn't he?\" I sneered, then laughed.\n\n \"Whenever you're onstage, he sees nothing else. You should be flattered, I think he's quite handsome by their standards.\" Aste teased.\n\n \"As if you would have any idea at all!\" I countered. \"There's more hair on his face than on both our bodies combined. Yuck.\" I adjusted the front of my dress. \"Almost time for our song, you ready?\"\n\n \"Of course. Don't fuck it up.\" She winked at me.\n\n We both gave our all to our voices and performance. The melody had an unexpected faint echo from the monstrous cave around us and when it was my voice alone I played with that echo, using it to heighten the melancholy and pain in my words. As the song continued on I couldn't help but notice my admirer in the crowd. He really did seem to be quite taken by me, or at least the character I portrayed. I remembered they had never seen a topside play before and I briefly remembered how moving it had been for me the first time. My voice combined with Aste's at the climax of the song and we both hit the highest note, perfectly in sync, allowing the final sound we made to drift away into the cool air and disappear. As our stage crew doused the lights at the conclusion of our duet, I noticed my admirer's eyes had become very red and his eyebrows had knit together. He looked utterly desolate. Apparently it was the most that could be hoped for in terms of any visual response that I could read on the dwarves' faces. Again, there was no applause, just some small whispers in the audience. It was disappointing to be sure, but I had given the role my all. It certainly wasn't my fault that these cave-dwellers had no taste.\n\n At last the play drew to its close. Our lead, Vahn, who played the king ends up alone, and utterly deflated but still has his court jester by his side. It made for a tragic conclusion but fitting for the ridiculous royal. The lights over the stage were doused again to silence. When new lamps were lit, it was time for our ensemble to face the audience and bow in unison. It was almost like an earthquake the way the noise hit us as we bowed low and then straightened again. The applause was cacophonous. It echoed loudly in the cavern all around us. There was cheering, laughing, hooting and hollering. It was in that moment we all learned that dwarves hold in all of their reactions until the production has completely ended. Surprisingly respectful, actually, I thought. I was quite pleased at how well it had been received, in the end.\n\n The cast shook hands and gave one another smiles and nods at a resounding success of what we hoped would be many more performances for our new dwarven benefactors. Once the commotion had died down, and Joren had bade the audience a good night, the dwarves began returning to their homes for the evening. This would be about the time where most of us would head to the local tavern to order drinks and celebrate an profitable first night. As is the custom with elvish theatre troupes, we celebrate wearing the costumes of the evening's performance, so I would continue playing the part of the pretty, yellow-clad damsel. It made little difference to me, elvish culture found the act of crossdressing humorous at worst. What could be said? A well-dressed elf in finery, be it male or female was something to be enjoyed and spectated. In tomorrow's production I was set to play a prince so this uncomfortable dress would only have to get me through the remainder of the evening.\n\n The majority of our cast found its way to the nearest tavern called 'The Empty Cask' which was still quite a trek from our camp. We poured inside and set to ordering some of the dwarven ales the bartender recommended to us. It was in many ways a bar just like any other, although the walls and floor were all stone and the barrels which lined the back wall were larger than any I had seen and made of metal. The dwarves who frequented the establishment were nervous about their local pub being invaded by outsiders but their curiosity soon got the best of them and they began sitting with us, asking questions and telling jokes. We all drank and had a good time together. I sat with Aste and a few others from the troupe as we celebrated the night's resounding success. In too short a span I realized I had over-indulged in ale. My gods but the dwarves made strong drink! Aste laughed at me as I stood from my chair with some difficulty.\n\n \"A little too much drink, is it, milady?\" She asked me with a wide grin. A couple of our friends at the table snickered as they watched me teeter.\n\n \"You can all just fuck off.\" I replied, though she was clearly right. \"And though I am loathe to admit... I think I should be heading back to my wagon.\"\n\n Her eyes grew somewhat wider. \"Was that two mugs, truly? Should I escort you back, then?\" She asked with obvious laughter in her voice.\n\n \"Despite my lovely gown, I am very much a male and capable of finding my own way home, thank you.\" I nodded to her curtly and began to weave between tables back to the front of the tavern.\n\n As I approached the door I wobbled slightly and began to slip. \n\n \"Oh fuck.\" I said quietly. \n\n I had thought there was a pillar closer to me than it actually was, but instead I began to fall over when suddenly an arm caught me on my way down. I looked up suddenly to see that the red-haired dwarf from the play had caught my arm as I descended and gently helped me back to my feet. \n\n \"Easy lass.\" He said quietly. \"I suspect dwarven brew might prove a bit much for those not used to it.\"\n\n \"It-it has a kick to it.\" I replied lamely. It was very out of character for me to be this drunk, and I became quickly embarrassed. I wondered briefly what lass meant, it was not a word I had heard before.\n\n The dwarf led me to a nearby chair and offered me his hand to help me sit. I waved it away.\n\n \"I saw the play tonight.\" He began. \"It was something else. It was very moving, I've never seen anythin' like it before.\" His face was very earnest, it was cute in a way, how the stout folk lacked any sense of subtlety to their expressions.\n\n I smiled. \"Well I'm glad you liked it, sir dwarf.\" \n\n He pulled his own chair in front of mine and leaned closer. His face suddenly turned quite red to match his facial hair as he prepared to say something that clearly made him uncomfortable. \"I think, ye were the finest part of it.\" He gave me an awkward smile under his thick moustache and looked down. \"Ye have a beautiful voice.\"\n\n In spite of myself I gave him a smile in return. Though I hear many compliments regarding what I do, I would be lying if I said I didn't enjoy them. However I knew too well not to lead men on that I didn't intend to bed. This shaggy fellow was certainly in that category. \"I appreciate that, sir.\" I said kindly.\n\n \"Brom,\" he said.\n\n \"I'm sorry?\" I asked.\n\n \"My name, it's Brom, Brom Forgebeard.\" He added quickly.\n\n \"I can see where you get your last name.\" I said with a small nod. \"My name is Khel, and, elves don't really have last names.\"\n\n I stood up, carefully. \"Well Brom, while it is good to meet you, I'm afraid I need to get back to my bed for the evening. Dwarven ale is not to be taken lightly it would seem.\"\n\n Brom stood too. I could tell by the way his shoulders fell he had been looking forward to speaking with me at length. He suddenly perked up a moment later and said, \"Well, I wouldn't let a young lass wander around this neighborhood at night without an escort.\" I suspected I was beginning to understand what lass meant, and I was about to refuse the offer when I realized I didn't know anything about the type of neighborhood this was and couldn't be entirely sure I knew the way back to our caravan, especially in my current state.\n\n We left the tavern and he offered me his arm. Honestly I didn't want to take it but I was very nearly stumbling. It was pathetic, and as I held onto his brawny arm I felt a flush of embarrassment again. I couldn't help but notice the heat of his bare skin where I held it just under his shirt sleeve. It was also covered in soft red hair. I wondered idly if the hair covered his entire stocky frame. I suspected it did. Brom made small talk as we walked, offering details about himself, like how he was born and raised here in Stonefield with his four sisters and one brother. He had been the third born of the children and they had grown up with little money and all had to work to help out the family. Brom went on to tell me that he used to be a soldier but changed vocations after a deep dragon killed and consumed his brother.\n\n I stopped walking at hearing this. \"I'm sorry to hear about your brother.\" I said in a sympathetic voice.\n\n \"It's okay.\" Replied Brom. \"It was a long time ago.\" \n\n \"Also... a deep dragon? That's a thing to worry about down here?\" I asked incredulously.\n\n He cocked his head to one side, clearly puzzled. \"Well no. I mean, they would never be this close to the surface of course.\"\n\n \"Of course, how stupid of me!\" I said mockingly.\n\n A look of recognition swept over his face. \"Yer not knowing about these things are ye? Why would ye I suppose.\" He scratched his bald head and laughed, a loud, boisterous bellow. I decided he was likable enough. I might even ask him to have a drink with me tomorrow after revealing my actual gender. \n\n He went on to explain that he was a merchant now. His wares included precious gems, metals, guano, mole oil and dragonbone. He had wondered about topside and its people for many years now but hadn't yet made it to the surface. He admitted that the stories he had heard from other merchants who had been outside were as terrifying as they were exciting. \n\n \"I mean, it can't be as wide and open as they say, can it? Sky it's called, right? And it just stretches out forever. I'd like to see that someday.\" He said.\n\n He reminded me of a child in some respects, the questions, the curiosity. Of course the image of him couldn't be further from this notion. Walking next to him I began to really take stock of him. This was the closest I had ever been to a dwarf after all. He was about a head shorter than myself, and I am about a head or so shorter than a grown human male. By the lines across his forehead and at the corners of his eyes I reasoned he was middle-aged. He had a round nose and the bridge appeared like it may have been broken sometime in the past. His eyes intrigued me the most. They were a sort of light orange, like amber I decided. I had never seen eyes of that color before. He wore simple clothes, but they were of a high quality stitch and fabric, a shirt with short sleeves, heavy leather pants with matching boots and a wide belt with a large moulded buckle. Attached to his belt was a small coin purse and pocket knife. He wasn't fat exactly, at least not in the way humans and the occasional elf might look fat. His build was thickly muscled, from what I could make out: neck, arms, chest and thighs. His overall shape was like a barrel, a keg really. Fitting, I thought to myself. He glanced up at me as we walked, but if he caught me appraising him he gave no indication.\n\n He went on about life in a dwarven city, how they know the cycles of day and night through the luminous mosses which changed their brightness between the two everyday. He stopped then and looked at me, mild alarm creeping into his face.\n\n \"I, I've been talking about me this whole time! I'd like to hear about ye! By the stone but I can be daft.\" He shook his head in an apologetic way.\n\n I laughed at him. \"I'm as curious about you as you are about me, Brom. Think nothing of it. Though I'm unsure where to start...\" I trailed off.\n\n \"How long have ye been on the stage then?\" He asked.\n\n \"As long as I can remember.\" I answered. \"I was a war orphan and the troupe took me in just as I began to form memories. It's my family, my calling, I would be lost without them.\"\n\n \"It's where ye belong.\" The dwarf mused.\n\n \"I think so. And it lets me see the world. And yes, it is greater and wider than you could even imagine.\"\n\n Brom gave a low chuckle and beamed a warm smile at me. I saw for the first time that even under the mess of beard, the aging exterior... he was actually quite handsome. For a dwarf I mean.\n\n CHAPTER 2\n\n We had been walking for maybe half an hour, and I had begun to sober up a bit. I finally asked him straight out, \"Where exactly are you taking me, Brom? I know for a fact my caravan was not this far from the tavern.\"\n\n He gave me a sheepish look. \"Well, no, yer right. I uh, jes wanted to talk with ye some more. I meant nothing by it. I can get ye back straight away.\" He explained.\n\n I considered his words and realized I had been enjoying talking with him as well. \n\n \"No harm done, and I have enjoyed hearing all about your home,\" I held his arm closer, \"And you.\" I finished.\n\n Brom blushed deeply and we continued walking for awhile in silence. As we crossed a small stone bridge over an underground river the way became a bit darker. Within a couple minutes I began to sense movement behind us. I let go of Brom's arm and turned quickly around. Two figures were lurking not too far behind, staying just out of the low light. I wasn't familiar enough with the area or dwarven antics to realize the danger immediately. Luckily Brom sensed my uncertainty and turned to see why I had stopped.\n\n \"Oy!\" He barked into the darkness. \"Show yerselves!\"\n\n Two dwarven men stepped forward and were just about ten feet away from us, one of them brandished a dagger. \"Just need yer coin.\" One of them wearing a short black beard said in an even tone. \"No need to act stupidly.\"\n\n Brom tucked me behind him in a protective gesture with his body. \"I don't have much, but if ye'll take it and go, we won't cause ye any trouble.\" Brom said slowly. \n\n I backed up a little further which proved unfortunate as I suddenly felt strong hands grabbing me and I let out a shout which became stifled as one of the hands covered my mouth and the other twisted an arm behind my back. Brom whirled around and saw a third bandit had flanked us and now held me at his mercy. ",
        "\"Don't move or I stick the elf bitch.\" Said the third bandit. I couldn't see him behind me but could smell his terrible breath as well as feel it on the base of my neck.\n\n Brom quickly removed his coin purse from his belt and tossed it to the other two bandits. \"Here! Here! Take it and go, the lass doesn't have anythin' of value!\" \n\n The dwarven assailant who held me scoffed and said, \"Oh she doesn't does she? Well I've yet to fuck a she-elf, and I think me lads might like a turn as well.\"\n\n My stomach turned and knotted. This was not a position I had ever found myself in and I could feel my skin turn cold. I tried to say something but he twisted my arm still further back and forced a sharp cry from me. Brom suddenly moved to help me but the other muggers fell upon him in the same moment, each holding him by an arm to the ground. Brom struggled under their combined weight and roared in anger and helplessness. The one who held me whirled me around to face him and punched me in the stomach. I felt my breath leave me and involuntarily stumbled to my knees. As I tried to recover the air I lost, with one hand he grabbed me by the back of my neck and with the other he pulled a dagger from behind his back.\n\n The world about me seemed to slow down as I became fully aware of my predicament. I looked over my shoulder and saw Brom, still struggling to get up, the dwarves which held him watched me with leering, hungry eyes. My head was jerked back savagely, and the dwarf holding me placed the dagger between his teeth as he fumbled with the crotch of his pants. He withdrew his fat cock a moment later and pushed my head towards it. \n\n \"Suck.\" He commanded from between his clenched teeth. \n\n The dwarf's prick bobbed in my face, it had a strong male odor. I tried to think of a way out of this. I had many lovers, men and women throughout my young life but had never been forced like this. It revolted me. \n\n \"Suck!\" He said again, more loudly. \"Or I'll cut out yer pretty singing tongue.\" \n\n The fact that he had heard me sing earlier and now was reducing me to this... the notion pushed the crippling fear out of my head and replaced it with anger. Still, I had to be smart about this, he was armed and I was not. \n\n \"Take your pants down.\" I said, trying to sound seductive.\n\n The grizzled dwarf looked down at me and narrowed his eyes. \"What did ye say, whore?\"\n\n \"I take it you've never had a suckjob from an elf.\" I said. \"I can get the entire thing down my throat, and still fit your sack in my mouth.\n\n He blinked at me. \"That's a load of shit. Yer too small, there's no way ye could take that much of me in yer mouth.\" In spite of his words I could see the excitement at the prospect dance across his face, and his cock bobbed again in response.\n\n \"Oh yes, I can. I only ask you not to harm us when you're done.\" I played up my perceived helplessness. \"Now take your pants all the way down, please.\"\n\n The dwarf needed no more encouragement and quickly undid his belt. As he bent forward to let his pants down I punched as hard as I could upwards, directly into his large, exposed, testicles. He began to let out a terrible yelp of pain but I wasn't finished. As he opened his mouth fully the dagger dropped to the road and I coiled myself like a spring and drove my head up, along with my entire body and butted him square in the chin with my entire force. I hoped it caused him to bite his cursed tongue off. I saw stars for a moment, but was still cognizant enough to grab the dagger from the ground. As I turned around to face the remaining bandits I saw Brom had seen his moment too, and elbowed one attacker in the gut, then rolled away from the other. They had been surprised by my sudden assault on their leader and given Brom just enough room to yank free of their hold. As Brom scrambled to his feet he got his hands on the head of the mugger he had weakened and drove his knee into the his face with great force. The bandit made a sort of moaning sound and Brom kicked him in the ribs, sending him sprawling sideways. I glanced behind me again to see my own attacker had been knocked unconscious by my blow and I spat at him. He lay on his back with his trousers at his ankles, it made for a pitiful sight. I brandished the dagger and headed over to Brom. The third of the gang, who was still armed, looked from Brom to myself and back again. He took note of his two mates who were out of the fight and considered his only two options: fight or flight. He wisely chose the second.\n\n Brom recovered his purse from the road and pointed over to the dwarf who had tried to force me, then to my head. \"He uh, has yer hair, Khel.\"\n\n I realized as I was being pawed at my long blond wig had come loose and ultimately been ripped from my head in the struggle. I quickly walked over to the fallen dwarf and snatched it out of his hand. I spit on him again. \"Bastard.\" \n\n \"Are ye alright?\" Brom asked.\n\n Naturally I was still shaking, and the surge of adrenaline was already slipping away. \"No, not really. I'd like to go home please, now.\" I didn't take his arm this time when it was offered.\n\n Brom must have apologized a dozen times on the rest of the walk back. \"Shouldn't have taken ye down that street. Shoulda been paying better attention. Shoulda protected ye better.\" He muttered.\n\n I became tired of his utterances so I abruptly changed the subject and asked, \"Are you disappointed? That this was a wig I mean.\" I held up the offending bit of hair.\n\n He gave a grimace. \"Surprised I suppose. But I think yer still as pretty as a picture.\" He ran one of his big hands through my short brown hair. \"Surprised almost as much as I am impressed, by the way ye handled yerself back there.\" \n\n I smiled weakly. \"You're a sweetheart.\"\n\n He gave me a confused expression. \"A what now?\"\n\n I laughed, in spite of the evening's unfortunate turn. \"It means, you are kind, you have a good heart inside of you.\"\n\n \"Oh.\" He said. \"Sweet means, like, the way sugar tastes to us.\"\n\n \"Yes, I know, it means the same to elves. It's just an expression.\"\n\n He was silent for a time and then said, \"Please don't judge all of us by the actions of those... bastards.\"\n\n \"I couldn't if I wanted to.\" I said honestly. \"You've been nothing but a perfect gentleman all night.\"\n\n Brom blushed. \"I was trying. I'm glad ye noticed.\" He wouldn't quite look me in the eye as he accepted the compliment.\n\n We returned to my caravan where most were either asleep in their wagons or still out drinking. My personal wagon had been parked at an edge of the larger group of wagons and carts we had brought. It was a fair size, entirely wood, painted blue with a yellow roof sitting on four large wheels. There were modestly sized windows on both sides. Inside was my bed, clothes and personal effects. Our troupe was really like a large family, but personal space and privacy is also important to elves at times, thus requiring individual wagon rooms for any who might want them. There was a door at one end with a few wooden stairs underneath. My wagon fastened at the opposite end to another similar bedroom wagon which in turn had horses pulling the two from the front when we were traveling between show destinations. \n\n Brom walked me right up to the steps leading to my door. Part of me didn't want to stop spending time with him. If the evening had unfolded in a different way, I might have asked him inside. Aste would want all the details the next day, and we would laugh about the time I bedded a clueless dwarf merchant on our first trip to Stonefield. But instead, as I was briefly considering my options, Brom took my hand gently and knelt before me. I looked down at him, taken by surprise. He kissed my hand softly and I felt his beard and moustache whiskers tickle my skin. \n\n He regained his feet and said, \"I hope some parts of yer night were enjoyable, lass.\"\n\n \"Some were,\" I admitted.\n\n He got that uncomfortable look again and I knew he was trying to ask me something. \"Are ye, here for long?\" He managed.\n\n \"Just a week.\" I responded.\n\n \"Do ye, think I could call on ye again tomorrow?\" He asked eagerly.\n\n I thought for a moment. I usually didn't do the whole dating thing. It always complicated matters and would just end unhappily for him when I left in six days time. On the other hand, it was just six more days and I had grown interested enough to keep seeing the dwarf while I was here. \n\n \"That would be fine. I'd like that.\" I replied.\n\n Brom's face lit up and he grinned from ear to ear. \"I don't have to work tomorrow, can I take ye out fer a bite?\"\n\n \"Sure thing. I'd love to try some of the local cuisine.\" I said, and meant it.\n\n \"I'll be here precisely at midday! Ye won't be disappointed, Khel! Sleep well! I'll see ye tomorrow!\" He said jovially. He practically bounded away, he was so enthusiastic. I watched him go and couldn't help but laugh to myself. He was adorable. I genuinely looked forward to seeing him again.\n\n CHAPTER 3\n\n After I awoke the next morning, nude in my bed, I debated over what to wear for my date with Brom. I didn't have to perform until the evening, and I was under no obligation to continue wearing a dress, however, I hadn't revealed to him that I was in fact a man, even though I could have at any time. I considered my reasons: I liked the attention I was getting. I certainly enjoyed the way he looked at me. I was a selfish bastard who didn't care about his feelings in either case and wanted to have a little fun before I left. I hoped the reason wasn't the latter, but the possibility didn't stop me from finding a short red dress I had borrowed from Aste awhile ago for a role and had forgotten about until just now. I would keep up the ruse and see how our tryst unfolded. Worst case I thought it would be good for a laugh, best case he might not really care. \n\n There was water in a few large basins outside and a curtain for privacy where I cleaned myself and the cool water helped to wake me fully. After I had dressed, I headed back to my wagon where Aste was waiting for me outside.\n\n \"Glad you made it home okay last night. I almost worried about you until I saw redbeard walk you out.\" She gave me a sidelong glance, expectant of my response.\n\n I snorted. \"Honestly I almost didn't. We were mugged on the way back.\"\n\n Her face showed her alarm. \"Are you alright? Are you hurt? Did they take anything?\"\n\n \"I'm fine, maybe a bruise in my stomach. No, we fought them off, they didn't get anything.\" I decided to omit the details of nearly being forced onto one of our assailants' cocks.\n\n \"Well that's something then. I knew you could take care of yourself. I'm still sorry it happened. Dwarves are brutes aren't they?\" She shook her head angrily.\n\n \"Not all of them.\" I said casually.\n\n She arched an eyebrow and folded her arms in a knowing way. \"Oh really? Did you end up having a romp with redbeard after all? If I had known pointing him out during the play would be all it took to entice you I'd have tried to find a more attractive one.\" She said in a mocking tone.\n\n I rolled my eyes. \"Firstly, his name is Brom, and he's pretty nice. And secondly, we did not 'have a romp', he merely walked me home, as any gentleman would.\"\n\n Aste eyed me carefully. \"You're going to see him again.\" She determined. Gods she had known me too long.\n\n \"In fact I am, we're having lunch together.\" I said. \"And also, he is attractive, in a certain way. It's... dwarven attractiveness, I don't know, it's burly... and hairy.\" For the life of me I couldn't quite understand what about him I found appealing besides his overall demeanor. He was nothing like any other man I had dated, and perhaps that was the reason itself. I certainly wasn't lucky in love so far in my life, only lust.\n\n \"Well, if you say so. I for one am looking forward to having sky overhead again. This place is unnatural.\" She lifted her gaze to the mossy cavern ceiling high overhead. As Brom had mentioned before, the moss was very bright and lit the entirety of the dwarven city during daylight hours. I thought it was quite remarkable.\n\n Aste bid me a good day, sulked briefly over being left alone for the afternoon and then left to bother Joren. I reached my wagon, shaved my chin carefully, applied a small amount of lipstick and eye shade and studied myself in a mirror I had near the end of my bed. A good-looking elf looked back at me. Despite the make-up, I felt the jawline and overall shape of my face was quite masculine. Certainly I wouldn't pass for a female to any others of my own race, but to a dwarf I supposed my male facial features were quite soft by comparison. I moved to a small chair tucked in the corner of my room and decided to continue reading a book I had started recently until Brom came calling.\n\n About an hour later I heard a knock at my wagon's door and could hear a man whistling just outside. Glancing to the clock on my wall I was impressed to find it was noon to the minute. I opened the door to a rather dapper-looking dwarf who smiled up at me as I came into view. \n\n \"Good afternoon, Khel!\" Brom greeted. \"Ye look lovely as ever!\" \n\n He had on a sort of small, brimmed hat which he took off and held in front of his chest. I took it to be a sign of him greeting a lady. He held out his hand to help me down the three wooden steps under the door which I accepted. If I'm being completely truthful, I liked how he doted on me. It certainly wasn't behavior I had ever known before and it made me feel... wanted. I was being selfish, as usual, but so what? In a few more days' time I would be gone from this place. I might as well enjoy the attention while it lasted.\n\n Brom asked if I was hungry and I assured him I was. He took me to a cozy cottage in one of the housing areas of the city where we got a hearty brunch. Dwarven cooking was composed of many components and ingredients I had never encountered before. Many tubers, roots, mushrooms and proteins I couldn't quite describe flavor-wise in a heavy stew was what Brom recommended to me. Apparently this eatery was quite well-known for it, although I had to call on my actor's upbringing a bit to convince Brom that I enjoyed the taste. I could tell he still didn't quite believe me based on how little I finished. I had brought a small wallet and was just bringing it to the table when Brom raised a hand and gave me a stern look.\n\n \"Absolutely not, lass.\" He said. \"It's the fellow's privilege to pay fer the lady.\"\n\n I grimaced. \"That's pretty old-fashioned. Really, let me at least pay for my own--\"\n\n He gave a me a patient look. \"I'm all fer equal rights, lass, but I want to do this fer ye. Please let me.\"\n\n It seemed there would be no point in further fighting him on this point. \"Well I knew dwarves were stubborn...\" I teased. \"But thank you for the meal.\" I finished. He nodded and gave a satisfied smirk as he dropped a few coins onto the table.\n\n There was a large outdoor garden where Brom took us after the meal and I was delighted by its beauty. I couldn't place any of the flowers and Brom had to explain that they were all flowers and plants that grew only underground, with low lighting. I didn't even know such a thing was possible. Brom asked if he could hold my hand which I shyly allowed. Many of the dwarves moving in and about the garden gave surprised or even disgusted glances at us, but Brom radiated pride, and it made me feel less self-conscious as well. \n\n Brom barely let go of my hand for the rest of the day until I had to go get ready for the evening's performance. He walked me back to our caravan and right to my door. I handed him a ticket I had brought along so he wouldn't have to pay for admission. He smiled and thanked me, saying he wouldn't miss it for anything. He gave my hands a squeeze in his own, and gave me a warm smile and blushed. \n\n \"Might I see ye again tomorrow?\" He asked, hopefully.\n\n \"I should hope so.\" I said, before I even had a moment to compose my thoughts on the subject. \n\n I was a bit surprised he didn't want to see me after the play tonight and he echoed my thoughts and explained: \"Since we're seeing one another now, I don't think it would be too proper to come calling on ye so late, so I'll call on ye tomorrow, same time as today.\"\n\n 'Proper?' I thought to myself. I had never dated an actual gentleman before and was unaware of any such rules, but I wanted to play this part to the best of my ability so I nodded at him. \"That sounds fine, thank you.\" I wondered if he would try to kiss me, but he bowed slightly, released my hands from his and strutted away. I watched him go, rather enjoying the look of his stocky frame and the way his rump looked in his tight trousers.\n\n Before the evening's performance, I realized I had a problem. I found Aste in one of the dressing wagons parked behind the stage. \n\n \"Aste, there you are, I need you to do me a favor.\" I said as I rushed up to her.\n\n \"What? What is it?\" She asked.\n\n \"Switch roles with me tonight. You play the prince and I'll be the maid.\" I said.\n\n She looked at me quizzically. \"Why? You know 'The Tailor of LaGren' doesn't require any crossdressed roles.\" Then a look of knowing came over her face. \"Is this about that dwarf you've been seeing? Really? You still haven't told him you're a guy?\"\n\n I felt my face flush red a bit. \"No, I haven't, whatever. And his name is Brom remember?\" I sighed. \"He's going to be here again tonight and he'll want to see me perform and...\" I trailed off.\n\n \"And look like the pretty young woman he thinks you are.\" Aste finished.\n\n \"Will you do it?\" I asked.\n\n \"Yes.\" She said after a moment's hesitation, before continuing. \"I think you might actually like this one, Khel. Maybe don't fuck it up by lying to the guy.\"\n\n She handed me the maid's costume from a nearby rack. As I began stepping into the simple dress, I said, \"It's something new. None of us have ever dated a dwarf, I'm like a pioneer. Anyway, from what I've seen of this place, men don't go out with each other in that way.\"\n\n Aste found the prince's costume and began to undress. \"You should know better. If it was just sex I'd understand.\" She began pulling on the pants of her costume. She looked at me and gave me a serious look. \"And speaking of that, how's that supposed to happen? He's not blind.\"\n\n I looked away. \"I hadn't really thought that far ahead.\" I admitted.\n\n Aste rolled her eyes. \"Well, think about it.\"\n\n The play went well. The maid was actually a much smaller role than that of the prince, but it was necessary to keep my secret intact. I watched Brom from backstage while the rest of my friends performed. He was in nearly the same spot as the first night and dressed in dwarven finery. He looked quite handsome, he had even combed his beard down and the heavy braids looked like they had just been redone. When I was performing in my two scenes for the evening I could see him light up and stand a bit taller. I gave him a wink when I knew none of the audience would be watching me and he flashed me a huge grin. The play concluded shortly thereafter, the cast bowed and the audience again exploded into raucous applause and cheering. I looked for Brom after we had finished but true to his word he had already left and I would have to wait until tomorrow.\n\n When I awoke the next morning, I was humming a song from last night and had a spring in my step. I ate breakfast with some friends in our outdoor makeshift kitchen. Afterward I cleaned up and clothed myself in a small floral dress. Brom showed up at precisely noon as he had the day before and took my hand as he showed me around for our second date. We shared a meal, and he again insisted on paying. It was like a soft bread with sweetened meat inside, I enjoyed it far more than the stew from the previous day. Today he asked me what I would like to see of Stonefield and I wasn't entirely sure.",
        "First we took a walk through the merchant's quarter. He showed me his own shop toward the end of the street we were on and I thought it was cluttered but exuded a lot of personality. He had a large open-topped wagon around behind the back of the shop which he explained to me he had purchased some time ago and it was for traveling topside, selling his wares. To my eye it looked like the wagon had been in a state of disuse for a long time. He took me inside his store and introduced me to his business partner Sergud. Sergud was shorter than Brom and wore a shorter beard which was mostly grey. \n\n \"I'm pleased to meet you, Sergud.\" I said, extending my hand to him. The old dwarf gave me a polite smile and took my hand which he raised and gave a small kiss. I had meant for him to shake my hand so I was somewhat taken aback.\n\n \"A pleasure, lass.\" He said. \"Brom has been talkin' my ear off about this new girl he's been seein'. Glad to meet ye.\" \n\n Brom snorted. \"Talking his ear off, he says. We had beers last night and I might've mentioned ye is all.\" \n\n Sergud laughed loudly, \"HA! We were out a few hours and ye, lass, were the only topic of conversation!\" Sergud shook his head. \"Ye are a pretty young thing. Don't go breaking this lad's heart will ye now?\" \n\n I wasn't entirely sure if it was a question or an order, but I nodded saying, \"I certainly don't want that to happen.\" \n\n Sergud gave me an appraising look, said nothing and then returned to his work.\n\n He and Brom shook hands and as we were leaving Brom leaned close to me and said quietly, \"Sergud's me best mate. We've known each other a long time, it was important to me that ye two meet.\" I was honored by his admission.\n\n After we left the shop I mentioned to Brom that I knew very little about dwarven culture. He took me to a vast museum that had stone carvings telling the history of the dwarves, the elves, and humans. I laughed at what dwarves thought they knew about elves. Brom listened intently as I pointed out several discrepancies. Later we went to a library and he tried, in vain, to teach me some of the dwarven alphabet. I wasn't a slow learner by any means, but many of the sounds are nearly impossible for an elf tongue to replicate as it turned out. I wasn't in the troupe's entertainment for this particular night so Brom also took me to dinner. It was lovely, although the waiter seemed clearly uncomfortable with our pairing. \n\n The date drew to a close much too quickly for my liking and far too soon we were back at my door, saying goodnight. \n\n Just like the night before, Brom took my hands in his and asked, \"Can I call on ye tomorrow, Khel?\" He looked meaningfully into my eyes. I almost felt weak-kneed staring back into his bright, orange eyes.\n\n \"You may. I look forward to it, as always.\" I replied. \n\n He smiled, released my hands and was about to leave when I called to him, \"Brom?\"\n\n Brom turned back to me. \"Aye?\"\n\n \"Are dwarves just incapable of making the first move, or are you personally too shy?\" I asked in a mock serious voice.\n\n He furrowed his brow. \"I'm not sure I understand ye...\"\n\n \"Come over here.\" I instructed.\n\n He walked back to where I stood at the foot of my steps. I placed my hands on either side of his round, bearded face and tilted it up, ever so slightly. I leaned in and closed my eyes and lightly pressed my lips to his. I could feel what felt like fireworks exploding through my head. The bristle of his moustache under my nose, the softness and warmth of his mouth, the heat of his proximity to me, it became surreal. I forced myself to pull back, wanting to gauge his reaction. He opened his eyes as I released his mouth and he gazed at me, longingly. \n\n \"That was... incredible.\" He whispered breathlessly. His body trembled, almost imperceptibly.\n\n \"You're a good kisser,\" I said, and meant it. \n\n \"And s-so are ye.\" Brom replied. He had moved his hands to my waist. I liked the feel of him holding me like this and could feel the throb of my erection under the dress.\n\n I took a step away from him, up to the door. \"You can come in, if you want to...\" I gave him a hopeful look.\n\n Brom let out a long sigh, and shifted his weight from one foot to the other. I noticed, happily, that he had a distinct bulge in his trousers. \"I really shouldn't\" He said at last.\n\n \"Oh.\" I responded. I couldn't keep the disappointment out of my tone.\n\n He put up his hands defensively. \"Don't misunderstand, lass! I want to, so badly! But, this isn't the way of dwarves. We're still gettin' to know each other, and it's important we do things right.\"\n\n What about what's right for me? I thought, somewhat annoyed. \n\n \"Well what is the way of dwarves, Brom? You know I'm leaving in four days.\" I said with an accusatory tone.\n\n \"Aye, I know, all too well.\" Brom said with sadness in his voice. \"I can... maybe speed up the courtship a bit.\" He said, stroking his bushy chin thoughtfully.\n\n \"That's all I'm asking.\" I said and shrugged.\n\n \"Until tomorrow then, Khel, and I won't be fergettin' that kiss either!\" \n\n \"Nor will I.\" I replied and touched my fingers to my lips, remembering.\n\n Brom bowed again and trotted away. Again I fixed my eyes on his round firm backside, with need in my loins. He turned back once as he was leaving and I allowed him to see me staring. I could hear him chuckle to himself.\n\n I rushed into my room and practically tore myself out of the dress. I threw myself onto my back on the bed and spat into my hand. I freed my cock from my undergarments and grabbed it hard. My other hand cupped my scrotum and tugged it lightly. I realized I was already very close to climax and slowed my stroking. I thought about the dwarf. I could still smell him in the air. I could feel his hands on mine, on my waist. I thought about the heat of his lips, the tickle of his facial hair. I stroked my maleness faster and gave my testicles a squeeze. I released them and rubbed my free hand over my lean, strong stomach and chest, imagining it was Brom touching me. I pinched one of my nipples. \n\n \"Oh gods, yes, Brom, like that.\" I moaned into the low light of the room. \n\n I then focused on the sizable bulge I had seen in his pants, what it might look like, how he would taste. As I envisioned the dwarf's cock, the scent of his manhood, I couldn't hold back any longer. I groaned so loudly and arched my back up, off the mattress as I unloaded a heavy string once, twice, three times. My eyes were shut tight and my breathing was ragged. My cock still bounced and leaked. My heart was beating quickly and I fell back onto the bed at last, completely spent. There was warm fluid on my chest, neck and pillows. I pulled my underwear fully off and used it to clean up the mess I had made. It was all I could summon the energy to do before I fell almost immediately into a very contented sleep.\n\n Chapter 4\n\n I was wearing a beautiful green and white short dress with a matching scarf and hat that Aste had begrudgingly lent me the following day when Brom came knocking at noon. As I exited through my door I sprang down the few steps in front and gave Brom a huge hug in greeting. He was obviously surprised by my enthusiasm but laughed and hugged me back. I could barely get my arms all the way around his big frame. He was so warm. I buried my face in his neck and smelled him. His scent was strong, something like leather and earth with some cologne over the top which reminded me of smoke and dried fruit.\n\n \"All right, all right, I'm happy to see ye too!\" He chuckled as I released him. \"I missed ye.\"\n\n I remembered I was supposed to be acting like a lady, and not the horny, excited fellow I really was. I made myself relax. \n\n \"So what are we doing today?\" I asked eagerly.\n\n \"Weeeeell...\" Brom began, and scratched the back of his shiny head. \"I've shown ye around my world a little, I was hoping ye might do the same fer me?\"\n\n I realized what he was asking for and panicked. I really hadn't counted on him wanting to meet the rest of my troupe. I cursed my lack of foresight. I could probably just introduce him to Aste and then make an excuse to leave.\n\n Brom noticed that I hadn't responded yet and said, \"Is that alright? I'd really like to see some of yer life here.\"\n\n \"Of course! No, yeah, that's fine!\" I said, trying to sound confident, and failing. It would be next to impossible to explain why I was dressed like a lady to any of the rest of the caravan if they should ask, and actually impossible to do so without alerting Brom.\n\n We went by Aste's wagon since it was nearby and, like mine, on the edge of the caravan. \n\n \"Aste?\" I called as I knocked on her door. \"You in?\"\n\n She answered the door with a hunk of bread still hanging out the side of her mouth. \"What izth it?\" She asked through the mouthful.\n\n I stepped to one side so she could see Brom standing behind me. \"This is my friend, Brom.\" I said. He smiled and gave a small wave.\n\n Aste coughed and spit the bread out of her mouth into the room behind her. \"*WHEEZE!* I'm-*hack*-sorry,\" She pounded her chest to catch her breath. \"I apologize.\" She said, almost fully composed by this point, \"It's good to meet you, Brom. I'm Aste.\"\n\n Brom gave a short bow. \"Very good to meet ye, lass.\" He said politely.\n\n Aste invited us in so we followed after her. She had a couple of chairs next to a small table which Brom and I sat in while she sat on the edge of her bed on the other side of the bedroom wagon.\n\n \"So,\" She began, \"Your friend Brom? And here I thought you two were more than that by now.\"\n\n My face went very hot and I could feel the embarrassment travel all the way to the tips of my ears.\n\n Brom laughed heartily. \"Aye, well, perhaps a bit more than friends!\" He confessed.\n\n In spite of her deliberately embarrassing me for the next half hour or so, Brom and Aste seemed to get along famously. Eventually I didn't mind being the topic of their conversation and started to enjoy how much Brom wanted to know about me and my life, and my friendship with Aste. \n\n As they talked I could see Aste warming to Brom more and more. He was a very likable fellow after all, I was glad she could now see the appeal. \n\n Sometime later Brom quietly asked me where the restroom might be and I directed him to an outdoor stall near a rocky outcropping some ways away. Once he had left, Aste said seriously, \"I think he might like you even more than you already like him.\"\n\n I chuckled. \"I doubt it. I really like him, like, a lot.\"\n\n \"Yes, I can see that.\" She changed her tone to accusatory suddenly and said, \"You really couldn't give me some advance notice that you'd be bringing your dwarf boyfriend by today?\"\n\n \"We-we're hardly boyfriends.\" I sputtered.\n\n \"Oh right, because he still thinks you're a girl.\" She shook her head.\n\n \"Annnyway.\" I responded. \"He wants to look around and meet my friends and stuff. What do I do?\" I genuinely wanted her advice.\n\n \"How would I know?\" She said flatly. \"I've only been on dates as a girl, not one pretending to be a guy.\" She considered my options. \"Go take him to meet Vahn and Joren. They're probably rehearsing for tonight, or something. I'll go let them know what's up. They'll just think it's funny, but I'm sure they'll play along.\" She stood up then and headed for the door. \"Give me like ten minutes before you guys leave, okay?\" And then she was out the door. I wasn't sure I was entirely ready for Brom to meet them, but Aste was doing me a favor here so I didn't have much choice.\n\n I met Brom outside a few moments later. \"That is quite a fetching dress ye have on.\" He said as he strode up to me. \"I should have said something before.\"\n\n \"Thanks,\" I said. \"You look very nice too. I think I'm developing an eye for a well-dressed dwarven man.\" \n\n He waved my compliment away. \"Where's yer friend?\" He asked.\n\n \"She had some stuff she had forgotten to do, \" I quickly lied. \"I'm sure we'll see her later. She likes you by the way.\" \n\n Brom grinned. \"Well, I am pretty good at charming lady elves by this point.\" He joked.\n\n I laughed. \"Handsome and funny, eh?\" I smiled all the more when he blushed deeply at my compliment.\n\n I took him by the hand. \"There are a couple more folks you should meet.\" I said and led him through the caravan.\n\n I found Vahn and Joren near their wagon. Vahn was stitching a costume that had torn at a seam while Joren was carving something out of a wood block. It was too early for me to tell what it would become. Aste sat next to Vahn, leaning back with her hands behind her head. She nodded at me and I relaxed a touch. All three of them smiled as I approached. I unconsciously let go of Brom's hand.\n\n \"Well don't we look pretty today, Khel.\" Vahn said from where he sat on a bench nearby. \"And who is this capable-looking fellow?\" He added. \n\n Joren said nothing but gave both me and Brom a good looking over.\n\n \"This is Brom.\" I said. \"We've been dating a little since we arrived.\" \n\n Brom quickly moved to where Vahn and Joren each sat to shake their hands and get their names in turn.\n\n \"That's our Khel,\" Said Vahn. \"Wastes no time.\" He quietly laughed to himself. He pushed some of his long black hair back over an ear.\n\n \"Oh, don't tease him, you know how sensitive he can get.\" Said Joren, smiling in response. \n\n Brom returned to my side and we both sat on a low wooden bench facing the others. \"Are these gentlemen friends of yers, then?\" He asked me.\n\n \"Well, actually, these are my fathers.\" I said slowly.\n\n It was clear by his face that Brom wasn't sure how exactly he should respond or if he even fully understood, so in the end he just said, \"Oh.\"\n\n \"Aste and I were both orphaned and abandoned when we were small.\" I explained. \"Vahn and Joren brought us in and raised us in the caravan. They've looked after me, educated me and helped me see much of the world. Everything I am and will become is thanks to them.\"\n\n Vahn's jaw dropped. \"My word, is that really my little Khel? You haven't been that sweet to me since I don't even remember when! I think I might tear up!\" Joren and Aste laughed. Brom was thoughtful.\n\n \"And what about you, Brom?\" Joren asked. \"What are you hoping for from our Khel?\"\n\n Brom looked at me as he gave his reply. \"I think she is the most beautiful lass I've ever met. She is smart, curious and brave. And for reasons I don't fully understand she even sees something to like in a surly dwarf like me. I simply want to know her better, and know the folks important to her.\" He shifted his face to look at Joren. \"And if ye fellows are responsible for the person she is, ye have my deepest gratitude.\" \n\n Joren gave an approving nod and Vahn whispered something to Aste.\n\n I looked at my feet. Brom could be so direct, it was as sweet as it was disarming. \n\n The five of us spent the afternoon together, telling stories and getting to know one another better. Both of my fathers took me discreetly aside a couple times to express any concerns they had, but also to assure me they liked Brom. \n\n \"He's the best one you've ever introduced us to, that's for certain.\" Vahn mentioned. \n\n \"I like his handshake, and he has a handsome face. It also sounds like he's a savvy businessman.\" Joren concluded to me.\n\n The evening ended with another performance that I wasn't in, but I needed to provide assistance backstage. No one in the cast or ensemble seemed to bat an eye at the way I was clothed. Vahn and Joren insisted that Brom stay for dinner and also to see how the plays were performed from our side of the stage. He was having a fantastic time. He helped with moving props, dousing lamps, relighting them and handing performers their next costume changes as they rushed offstage with my help. As the ensemble bowed to the praise of the audience, I pulled Brom down under the stage to an out-of-the-way corner and kissed him deeply. He kissed me back and I pushed my tongue into his mouth. I could feel a hint of resistance in his body as I leaned fully into him but it subsided quickly. I explored his strong back with my hands as I pulled him against me. The way his firm, stocky body pushed against me felt incredible. \n\n \"Oh Khel,\" He breathed against my face. \n\n His own big hands roved over my shoulders, arms and back. I let my hands drift lower and grabbed his tight buttocks firmly with both hands. It was taut and round with just a hint of jiggle. I ground my body into him again and continued my kissing. I kissed his beard, his round nose, all around his mouth and even leaned forward to nibble on one of his earlobes. His breathing became erratic and he too had dropped his hands to my sculpted ass. He squeezed each cheek and began thrusting against my front. I was so turned on I would have let him take me right there under the stage. \n\n \"Brom, yes Brom, please, I need you...\" I whispered hoarsely. \n\n When he began kissing my neck, the feel of both his hot, soft mouth and scratchy beard, coupled with his pelvis thrusting against mine almost made me explode under my dress. Then suddenly, he released me and gently pulled away.\n\n \"Noo, why?\" I pleaded, \"Please don't stop.\"\n\n He held my hands against his chest and gave me a conflicted look. \"Khel, I want ye so bad I can barely even breathe.\" He said, looking directly into my eyes. \"By the stone, I would have ye right here if I wasn't worried about yer fathers catchin' us.\"\n\n My head knew he was right, but my body strongly disagreed with his logic.\n\n \"But there's somethin' else.\" He added. \"If ye can give me until tomorrow, I promise to continue what we've started here.\" He gave me a searching look.\n\n \"I'm not sure I have that kind of patience, but I can try.\" I sullenly conceded.\n\n Brom chuckled and shook his head. \"Never met a lass like ye before. If it were possible I think ye might want me even more than I want ye.\"\n\n It's possible alright. I thought.\n\n CHAPTER 5\n\n When Brom picked me up the next day I was already on my front steps waiting for him. Today I wore a long purple skirt with a light cream-colored blouse borrowed again from Aste. Brom had the first long-sleeved shirt I had seen him wear with a smart-looking red vest over the top. I had a bag packed as Brom had told me the night before we would have a fair walk ahead of us and to bring anything I might want on a picnic. Brom also had a large satchel tucked under an arm. I had never been on a picnic in my life, so I had brought some wine, cheese, a blanket, a hat and some more wine. Brom held me by the hand and escorted me to the edge of Stonefield. It was a different exit than where our caravan had come in and the path beyond looked mostly untraveled. \n\n There was a guard outpost where two dwarves in armor stopped us.\n\n \"Where are ye two off to?\" Inquired one of the guards.\n\n \"Just a bit of a stroll, sir.\" Brom responded brightly.\n\n \"Are the two of ye a couple or somethin'?\" Remarked the second guard.\n\n \"Aye.\" Said Brom simply.\n\n The guard spat on the ground near my foot. \"Dwarven ladies aren't good enough fer ye then?\" He asked.\n\n \"Didn't say that.\" Said Brom, concern creeping into his voice.\n\n The guard stepped forward until he was almost nose to nose with Brom. \"It's one thing to watch their shows. They're pretty funny. My wife, who's a dwarf, likes to watch 'em. It's another to take one to bed.\" \n\n The second guard said nothing.\n\n Brom was becoming agitated. His voice was low but there was danger in it as he said, \"It's no one's concern but me own who I take to bed. This sweet young lass doesn't deserve to breathe the same air as some backwards-thinking pig like ye.\" Brom had balled his fists up in anger by this point.\n\n \"I'm the pig?!\" Roared the guard. \"Ye don't even fuck within yer own race!\" He reached past Brom in that moment and I thought he was going to grab me, but Brom suddenly smashed him in the side of the head with a mighty fist. The guard staggered and fell over but caught himself on one knee.",
        "\"Damn ye!\" He bellowed. He rose and was about to draw his blade when the second guard stopped him with a hand on his shoulder.\n\n \"That's enough, Tark.\" The second guard said. \"Leave 'em be.\"\n\n \"But--\" Tark said.\n\n \"They aren't hurtin' anybody, and even if it's a might peculiar, dwarves have decided to open relations with topsiders.\" The second guard continued.\n\n \"Thank ye.\" Said Brom.\n\n The second guard ushered Tark away and said to us, \"I've never seen a mixed couple like ye before, but before ye had to deal with this bastard,\" He hooked a thumb to indicate the first guard. \"Ye looked happy. The world is always gonna be changing and some of us are always gonna be small about it. My point is, don't let them get the two of ye down. Have a nice time today.\"\n\n We walked in silence for a couple minutes up the dusty stone path while Brom's anger subsided, until I said. \"You defended me back there. You protected me.\"\n\n Brom shot me a sideways glance. \"Well of course I did, what else would I do?\"\n\n \"Nothing.\" I said. \"You could have done nothing. I can see how being with me makes things harder on you, sometimes. Everywhere we go people stare at us.\" \n\n Brom snorted. \"I don't care about them, or the stupid things they might think about us. All I care about is how ye feel... about me.\"\n\n It consistently amazed me that a tough brawny guy like Brom could be so intimidating in some ways and so entirely vulnerable in others. It was one of the things I liked best about him.\n\n \"I like you immensely.\" I said. \"No one has ever treated me half as well as you. When we're apart I can't stop thinking about you.\"\n\n Instead of blushing, I could see Brom's eyes welling up. \"I've waited a long time for ye.\" He said at last.\n\n \"Pardon?\" I asked.\n\n He let out a long sigh. \"When I was a younger dwarf I dated a few women, dwarven women obviously. They were fine enough, we had a good time, but our relationships never lasted fer very long. I didn't know why at the time. But I found a book, actually at that library I took ye to a couple days back. It was all about elves, culture, language, all that stuff. But what interested me most were the drawings of elves, very realistic. Lean and tall, pale and beautiful. Also much less hairy than us!\" He pulled his shirt and vest down a little in the front and moved his beard to one side so I could see an impressive tuft of red chest hair poking out. \"Anyway, I fell in love with those pages immediately. I knew I would have to meet a nice elf one day and hope she might develop feelings fer me. It's why I have that wagon. I wanted to go into the world and find me that elf, but in the end I was too scared to leave the underground. So when your company arrived, I thought, 'this must be a sign!' And ye know how the rest has gone.\"\n\n I was silent, thinking about everything he had said. I've said it before but elves are lucky. Our culture doesn't care about things like dating outside of your race, men or women finding love with one another, the way we dress... Brom was putting a lot on the line personally to date me. I knew about the prejudices of humans, it seemed like dwarves suffered the same societal pitfalls. \n\n We walked down a small trail, barely noticeable, leading off the main road and followed it up among several huge stone arches. After enough time for my feet to just start becoming sore Brom stopped beside me and said, \"We're here.\"\n\n Ahead of us was a long, narrow valley. It was so bright I had to shade my eyes as we entered. Brom pointed up and I followed the gesture to see that there was a long open crack above us where natural sunlight was filtering down. I got a strange pang in my chest. I had been missing the sun without even realizing. In the middle of the valley was a pool with a small island in the center and a copse of trees. I recognized them, they were apple trees. Being early in the year as it was they had small white blossoms and the air smelled fresh and a little bit sweet. \n\n \"This is beautiful.\" I said. \"I didn't know we were this close to the surface.\"\n\n \"In this place, we are. We've been walking uphill fer awhile.\" Brom said. \"We can be alone here, as far as I know, nobody else knows about this place.\" \n\n He led me to the edge of the pool and promptly scooped me up in his arms so I wouldn't get wet. I giggled in response and almost dropped my bag.\n\n \"It really is amazing, Brom!\" I said, craning my neck back to look all the way up to the light streaming in from above.\n\n \"I knew ye'd like it.\" He smiled down at me. \"I like to come out here sometimes, but I've always wanted to bring someone special with me.\"\n\n \"And I'm someone special?\" I asked quietly.\n\n \"Ye know ye are.\" He said and gave me a quick peck on the lips.\n\n Under the apple trees Brom pulled a blanket out of his satchel followed by some food and drink. I was heartened to see that he had brought the bread dish with the sweet meat inside. \"I knew ye liked these.\" He said as he put them down. \n\n \"Have you tried elvish wine before?\" I asked him. \n\n He shook his head. \"I've not.\"\n\n We ate and drained the first wine bottle between us. I laid back on the blanket, feeling the sun's warmth for the first time in days. Brom leaned back on an elbow and said to me, \"I'd like to give ye something.\" \n\n I rolled onto my side to face him. \"What is it?\"\n\n He reached into his vest pocket and pulled out something that shone brightly as his eyes between his thumb and forefinger. \n\n \"What is that?\" I asked with interest.\n\n \"Open yer hand.\" He instructed, and I did.\n\n He gently laid a beautiful stone into my palm. It was warm to the touch. It looked like it had a roaring fire inside, it was the brightest orange I had ever seen. The stone was so brilliant I almost couldn't believe I wasn't holding a tiny flame in my hand.\n\n \"It's incredible!\" I gasped. \"I've never seen anything like it. Is it a gemstone?\"\n\n \"It's called fire garnet. This is the most perfect example I've ever seen of it meself.\" Brom told me.\n\n It suddenly occurred to me how much this trinket must be worth and I placed it back in his hand. \"Brom, it is gorgeous, but I can't accept a gift like this. You don't owe me anything.\" \n\n He shook his head. \"I owe ye everything. I came alive when I met ye.\" He held my hand out again and pressed the stone back into it before saying, \"This is for ye. It's a sign of me intentions, I want to be with ye and no one else. If ye accept this, then ye accept me, and understand what I'm tryin' to say.\"\n\n \"I understand, and I accept you.\" I felt my throat get tight and realized I was going to cry. I rarely cried, certainly never in front of anyone. The tears came anyway and I apologized for getting so emotional. In my life no one had ever treated me like this dwarf did. I felt appreciated. I wondered if love felt this way.\n\n Brom carefully laid the stone on top of my bag beside us. Then he gently climbed over me and kissed the tears, fresh on my cheeks. My crying stopped as he began to kiss my mouth, pushing his tongue against mine. I let him take the lead this time. Brom moved slowly and deliberately and I began to respond in kind. He moved to my neck and ears. He kissed and sucked at my pointed ear tips and it drove me wild. I tugged at his shirt and vest, trying to rip them to shreds with my mind. He sat up and pulled his shirt over his head in one easy movement. I could finally see more of his body and I was not disappointed. He had a broad chest, covered in soft red hair. His nipples were a dark pink and quite large. His stomach, while barrel-shaped and round also had a thick trail of soft fur leading downward. I began running my long fingers through the forest of hair all over the front of his body. I loved the feel of him, so different from an elf. As he leaned over me again he easily pulled my blouse up. I was so aroused I didn't even realize it was happening until I too was barechested. I bit my lip. I had no breasts, obviously. I was scared of his reaction. \n\n \"Not all elves have large breasts!\" I blurted out.\n\n He gave me a kind look. \"Lass, I don't care about that. I've been with ye for several days now, I've known how much or how little cleavage ye might have.\" \n\n He leaned down to my chest and flicked his wet tongue against one of my nipples. I moaned in response. He suckled it into his mouth and pinched them both, ever so slightly with his fingers. He switched his focus to the other and sucked it too. It drove me wild in response. When I couldn't handle his attention any longer I pushed him onto his back to return the favor. His nipples proved to be just as sensitive as mine and at first he laughed, saying. \"Never had a lass do this fer me!\" But soon he too became lost in his moaning. He ran his hands through my short hair and I started to descend down the front of his body with my mouth. I traced my way through his belly hair with my tongue and came to the top of his belt buckle. He eased himself up to his elbows and looked me in the eye.\n\n \"Ye don't have to go any further, if ye don't want to, Khel. I'm enjoying everything else we're doin' just fine too.\" Brom said in a measured tone.\n\n \"No Brom, I want to. I need to.\" I unfastened his heavy belt and undid his pants. He lifted his rump up so I could get his trousers off and he was left in small cloth briefs. I could make out the shape and size of his manhood clearly, the flare of his head, the moisture where he was already leaking through the material. There appeared to be a lot of moisture. I kissed and licked him through the material, tasting his essence and getting strong whiffs of his most private areas. I couldn't stand the foreplay and tugged his undergarments down to his ankles. His beautiful, fat cock slapped up against his belly and I marveled at the view. He wasn't terribly long, but it was incredibly thick, probably the size of my forearm in diameter. It was surrounded by a luxuriant forest of soft red fur. Underneath his girthy length I was impressed to find a fat, rounded pair of testicles, each about the size of a plum. He had the biggest, hairiest sack I had ever seen on a man. I almost laughed, thinking how a dwarf's genitals were such a perfect allusion to the dwarves themselves: shorter perhaps, but thick, fuzzy and rounded. \n\n Brom watched me through lust-filled eyes as I took my first real taste of him. I swirled my tongue around his purple, flared head and sucked the early fluid out of the tip. He had a strong, bitter taste with a salty finish. Delicious! I moved my mouth down further and was flustered when I realized I might not be able to take all of him into my throat. He was so thick, but I was persistent. I slid up and down on his plump cock and he rested his hands on the back of my head. After a couple minutes I could just get all of him down my eager gullet and nestled my nose into his pubic bush with each full deepthroat. \n\n He lifted my head off of him and said hoarsely, \"Khel, I won't last, but I don't wanna blow yet.\" \n\n I was vaguely disappointed, but also glad that we weren't done.\n\n \"Climb up here,\" He indicated to his face, \"So I can return the favor.\"\n\n I knew I couldn't offer that to him, so instead I said. \"No need for that, I have something else in mind.\" He looked crestfallen, until I moved partway up his body to straddle him. \n\n I purposefully kept my skirt on, to hide my erection and he asked, \"Could ye take off the skirt fer me, lass? I'd love to get a look at the rest of ye.\" \n\n I felt guilty, of course. I had led him on for so long that I was literally going to fuck him and still not let him know this one final secret. \"I'm... not really comfortable with that.\" I said. \"Not yet.\"\n\n He gave me a wry smile, \"Well, when ye are then.\"\n\n I reached under my skirt and pulled the panties I was wearing to one side so I could reach my hole. I spit a generous amount into my hand and reached underneath myself and began slipping a finger into my tight anus. With my other hand I slowly jerked Brom, careful not to finish him off. Eventually I worked two more fingers inside and added more spit. Brom was easily the thickest cock I had ever tried to take and knew that preparation was key. I continued to work my fingers inside, biting my lip as I did so. When I thought I was ready I made sure to get down between the dwarf's legs again to really lube him up with my mouth. I pushed my nose into his large hairy sack while I was down there and took a long, deep sniff of him. Something about his strong, male musk was intoxicating. I liberally coated his cock with my saliva and continued to finger myself.\n\n Finally I straddled him again and reaching behind myself, positioned his hard manhood to the pucker of my young asshole. He watched me all the while with great interest. I grunted as I tried to sit down on him. The head barely pushed inside of me and I bit my lip hard. My gods he was a big one! I bore down and attempted to relax my muscles, he stubbornly slipped in a little more. I repeated the process until at last I was able to sit all the way down. I exhaled and inhaled slowly. The size of him was almost more than I could take. Ever so slowly I raised up with my knees and felt him slide partway out. I sat down again as Brom's full length forced me still wider. It took minutes but I found a rhythm and began to let him fuck me. The pain was palpable but I wanted him so badly, had wanted him so badly for days. I leaned my head back and let my hips do the work. I rocked back and forth, lost in ecstasy at the way my insides felt so full. Brom fondled my nipples and rubbed my smooth stomach and chest. Then he began to buck into me fully and I let out a long groan. My own cock was oozing like crazy but it was still trapped up against my navel in the panties I couldn't take off for fear of discovery.\n\n Brom continued to thrust into me and within a few minutes I could tell he was close to climax.\n\n \"I'm gonna, I'm gettin' real close now, Khel...\" He warned.\n\n \"Please... \" I moaned. \"Fill me up! Shoot up in my guts!\" I looked him in the eyes and rode him faster.\n\n Brom gave a roar as he drove himself into me one last time and held himself there. \"I'm gonna blow!!\" He yelled as I felt the first blast inside. It was like nothing I have ever experienced. The sheer volume, the heat of it, I could almost feel it spraying everywhere inside me at once. I could feel his cock sending wave after wave up through my stretched asshole. He wouldn't stop, and I was in heaven. I couldn't help it, I needed to cum. I reached down under the waistband of the skirt and gave myself a few quick tugs. Brom's eyes were tightly closed at this point so he didn't see me. My own orgasm rocked me and I moaned loudly. Brom was still filling me with his seed, I could feel every pump. I began shooting after him and finished before. That was how much the dwarf produced. My own cum began running between my legs to spill down his cock, mixing with his. His prick finally stopped flooding me and I collapsed onto his belly and chest, absently kissing his bearded face.\n\n \"My gods.\" I whispered.\"Do you always shoot like that?\"\n\n Brom gave a breathless laugh. \"Every time me dear.\" He kissed me on my mouth. \"Did ye climax?\" He asked.\n\n I smiled at him. \"Yes I did, and it was amazing.\" I stroked his soft facial hair and chest. \"Can we stay here? Just like this?\"\n\n \"I would like nothing more.\" He replied. \n\n We laid together under the trees with the noise of rushing water as the only sound besides our breathing. I played with Brom's impressive beard braids and he rubbed my back and kissed me every now and then. Finally, after an hour or more I needed to get up, and stretch. Brom snored softly underneath me. As I slowly rose up his flaccid member popped out of my anus with a slight wet sound. There was dried fluid coating my ass and inner thighs. I noted with some dismay that the borrowed skirt had also gotten some of the action. Brom's lap was a mess as well. I went into the cool water to clean myself. The undergarments I had on would have to be destroyed, and I wasn't too hopeful about the skirt either. I bathed as well as I could then got out to dry. Brom was still asleep so I took the time to get dressed and open the second bottle of wine I had brought. I ran my hands over my sleeping dwarf and sighed. This was the best day I could remember having, in my entire life. This man had brought me to this beautiful place, we had shared stories and a meal, he had told me how he felt about me and we had made love under an apple tree. It would be perfect, if I wasn't a liar. The thought made my stomach turn, and I would still be leaving in two days' time. \n\n When Brom awoke, he stretched, then got up and went to the pool to bathe. I explained that I had grown quite tired, so we ate the rest of the food we had brought for dinner, drank the other bottle of wine and began packing up to head back to Stonefield. I carefully wrapped the fire garnet in a napkin and placed it in a separate pocket in my bag where it wouldn't be damaged. I had been slated for a small role in the troupe's evening play but had known I might be out for most of the day, and asked Joren to provide a stand-in if I didn't return in time. Obviously I hadn't made it back as the cavern had begun showing its signs of evening an hour or more ago.\n\n When we passed the guard post this time I was relieved to see different guards stationed who took no real interest in us as we made our way into the city. Brom walked me back to my door. I wanted to invite him in, and I suspected he would finally accept my invitation but something inside prevented me from asking. Instead he gave me a passionate kiss on the lips and held me close. I hugged him back. \n\n \"Can I see ye tomorrow then?\" He asked before he left, as he always did.\n\n \"Yep.\" I responded with a weak smile.\n\n His face showed his confusion. \"Everything alright, lass?\" He asked.\n\n \"Yeah, of course it is, I'm just tired. I got a lot of exercise today.\" I said lamely.\n\n He gave a hearty laugh. \"Yeah, me too! But I hope to have more exercise like it again tomorrow!\"\n\n I laughed in spite of the way I was now feeling. \"Tomorrow then, Brom.\" I said.\n\n I watched him go and it gave my heart sharp pangs of sorrow. I was going to tell him everything, I had to. The guilt had finally caught up to me. This wasn't a game, and I had been fooling myself into thinking I didn't care about his feelings. In truth they had become the only thing that mattered to me these last couple days. \n\n I went to bed wondering about the predicaments in which I often found myself. I tried to justify my actions. If I hadn't been playing a woman onstage he would never have approached me, I would have never gotten to meet him. If I didn't continue to play dress-up, I would never have really gotten to know him, and he wouldn't have opened up to me. Probably. No matter what, I would tell him tomorrow. Tomorrow was our last performance, our last night in Stonefield, one final chance for me to do the right thing and break the heart of the only man who might actually love me.\n\n CHAPTER 6\n\n After I awoke the following day, I made my way over to Aste's wagon. She had just awoken herself and greeted me at the door with a sleepy yawn. \"Morning. What's up? You need something?\" She asked through heavy-lidded eyes.\n\n \"Yeah, I do.\" I replied and stepped past her into her room. \n\n We both sat down on the edge of her bed.\n\n \"I had the best day with Brom yesterday,\" I began. \"And I'm gonna tell him everything today.\"\n\n \"It's seriously about time.\" She said, fixing me with a look that strongly suggested my idiocy.\n\n \"I know. I'm scared, I could barely sleep. What if he doesn't want to see me again? What if he kicks my ass?\" I said frantically.\n\n \"He won't kick your ass, Khel.\" She said with a roll of her eyes. \"And what if he finds out and doesn't care?\"",
        "\"I honestly hadn't considered that.\" I admitted. \"He's such a man's man, I feel like he won't be accepting of this.\"\n\n \"You could just dress as yourself, well, like your guy self when he shows up.\" She suggested.\n\n I shook my head. \"I don't think so, I-I don't want to ruin his whole day. I'll tell him tonight, before the play.\" \n\n She nodded. \"Okay. Well, borrow whatever you want. Don't forget to wash the clothes from yesterday.\"\n\n I gave her a guilty look. \"You don't want the skirt back.\" I said.\n\n \"What, why wouldn't I...?\" She trailed off.\n\n \"It's, um, kind of sticky.\" I said.\n\n She jumped up and hit me softly in the shoulder. \"I don't lend you clothes so you can fornicate with them still on and ruin them!\" She shrieked.\n\n \"Ow, ow! Stop! Okay, you're right!\" I laughed. \"It was mostly him anyway!\" \n\n She shook her head. \"How do you even have sex with a guy without him finding out you're a guy?\" She asked incredulously. \"Are you sure he hasn't figured it out?\"\n\n \"He hasn't.\" I said. \"I was careful to stay covered.\"\n\n She gave me a sign of resignation and asked, \"Fine. How was he?\"\n\n \"He was incredible, the best sex I've ever had!\" I said gleefully.\n\n \"Really? You know you always say that, right?\" She said with a grimace.\n\n I shook my head. \"No, I really mean it, I've never felt this way before. I think I might actually--\" I abruptly stopped myself.\n\n Aste cocked her head to the side and looked at me. \"Might what?\" She asked carefully.\n\n I stood up and went to her closet. \"Nothing, just thinking. What should I wear and hopefully not soil today?\" I asked aloud.\n\n \"You damn well better not soil anything, or you're not borrowing any of my stuff again!\" She yelled.\n\n I picked a very simple blue dress. I wore boots with it and kept the make-up very minimal. I gave a sigh as I regarded myself in the mirror and waited for Brom to come calling. He was on time, as always, whistling a tune as he came into view.\n\n \"Good afternoon, lass!\" He greeted me eagerly as he approached.\n\n \"Good afternoon to you, Brom!\" I said with a smile as he neared me.\n\n He pulled me close and gave me an open-mouthed kiss. \"I have plans for us!\" He exclaimed as he pulled back.\n\n I suppressed a laugh. \"Well of course you do. You always do! Should I bring anything?\"\n\n \"Not necessary.\" He assured me. \"Jes yerself.\"\n\n We walked, hand in hand through the merchants' quarter of the city until we came to streets of low, charming stone buildings with thatched roofs. Each building was slightly different in shape or color than the adjacent one. Brom led the way to one that was medium-sized and a dark shade of grey with small silver irregularities in the stone. \n\n \"What is this place?\" I asked.\n\n Brom unlocked the heavy metal front door and led the way inside. Once inside he lit a small oil lamp near the door. I looked around in the low light as Brom went around the room and lit several more lamps and candles. \"It's me home.\" He said simply.\n\n It was an interesting place, very much what I would envision of a dwarven home if I had ever stopped to think about the prospect. There was a heavy woven mat in the main room, where we were now. Art pieces of topside scenery decorated the walls. Tables and chairs, one wall had a large multi-tiered shelf with gemstones and small stone carvings. \n\n I sniffed the air. Something smelled remarkable wafting from further back in the house.\n\n \"Are you cooking something?\" I asked, realizing I was incredibly hungry. \n\n \"Aye.\" Said Brom proudly. \"I'm a halfway decent cook, I hope ye like it!\"\n\n \"I hope I do too!\" I said jokingly.\n\n Brom led the way into the small kitchen. A large iron stove and pipe sat in the center of the room surrounded by racks of pots, pans, plates and assorted cooking tools. There was a large well-stocked pantry set into the stone wall at the back of the room. A lidded pot sat bubbling inside the stove on coals. This pot apparently was the source of the wonderful smells emanating throughout the house.\n\n \"Smells fantastic.\" I mused.\n\n \"Thank ye. Let's see if it tastes as good!\" Brom used a long-handled ladle and began dishing up the soup into two large bowls. There was a small stone table with two chairs tucked into one corner of the kitchen where we sat to eat. I took a spoonful of the creamy soup and blew away the steam. It tasted familiar somehow. Not just familiar, this was a dish I knew well! \n\n \"Oh my gosh, this is shepherd's crook soup!\" I declared incredulously. \n\n The soup was one I grew up with and had always loved. It had simple ingredients including a piece of fern that looked something like a shepherd's crook. But the fern, along with the meat and vegetables wouldn't be found underground. \n\n \"How did you make this?\" I asked.\n\n Brom gave me a wide, toothy grin. \"After I left ye at home last night I went and spoke with yer fathers. I asked them what I might make fer ye today that ye would enjoy. I know dwarven cooking hasn't been yer favorite so far. They told me how to make it and even gave me the ingredients. I tried to pay for them of course but they wouldn't hear of it.\"\n\n I was astonished. \"You... did all this for me?\" \n\n Brom tilted his head and gave me a searching look. \"Of course I did. Ye know how I feel about ye, don't ye?\" \n\n I only nodded. This man was so good to me, it was time I came clean.\n\n After the meal was done, I thanked him for it and Brom offered to show me the rest of his home. He showed me the restroom, a small study filled with books. He even showed me the book he had appropriated from the library all those years ago where he had first realized his attraction to elves. Lastly he showed me the bedroom. Some shelves, a small desk with chair and a fair sized bed adorned the sparse room.\n\n Brom suddenly lifted me and easily tossed me onto the bed where he climbed up after me. \"Hope I'm not bein' too forward.\" He said as he began to unbutton his shirt.\n\n \"Hehe, no, not at all.\" I said. As I lay on the bed I noticed that the top cover was a strange material I didn't recognize. It had an odd feel to the touch. It was dry, not entirely unlike leather but almost spongy. All of the sheets underneath seemed like normal bed clothes materials. \"What is this blanket made of?\" I asked curiously.\n\n \"Oh, that.\" Brom gave a laugh. \"It's dragon stomach lining.\"\n\n I didn't believe him. \"What? No really, what is it?\"\n\n \"It's dragon stomach lining, no joke.\" He repeated. \"It keeps ye well insulated when yer sleeping, but... it has another practical use.\" \n\n When he didn't continue I asked him, \"What is the other practical use?\"\n\n \"Well, ye know, it's er, waterproof.\" He finished.\n\n I shrugged, I still had no idea what he was getting at.\n\n \"Khel, ye've seen firsthand how much dwarves shoot out,\" He used his hands to indicate the pouring of semen from his crotch. \n\n I finally understood and laughed. \"So all dwarves need to have a bed cover like this or else it would get everywhere?!\"\n\n His face went as red as his beard. \"Well, all the male dwarves.\" He said. \"And be a pain to clean up.\"\n\n He moved to help me out of my dress but I stopped him. \"Let me just take care of you first, okay?\"\n\n \"Okay,\" He allowed, \"But I'm damn anxious to get between yer thighs, Khel. No need to be embarrassed around me. I don't mind what ye look like down there.\"\n\n So you say... I thought grimly.\n\n I fully stripped the dwarf and tried to make a memory of him like this, nude in the middle of his bed, winking up at me with a big smile across his charming, handsome mug. I began again at his wonderful mouth and planted kisses across his face and the sides of his thick neck. I moved to his nipples and coaxed some pleasant sounds from him as I sucked them. I slowly made my way down his barrel-like body, still kissing and licking him. His turgid cock was already making a small puddle on his abdomen which I tasted.\n\n \"Yer makin' me so hot, lass.\" He growled down at me.\n\n \"I can tell.\" I said seductively between licks of his bobbing manhood.\n\n I was very turned on and wanted to try something with him. I bounced off the side of the bed and pulled him by the feet over to the edge. He looked up at me, questioningly but said nothing.\n\n \"You have to trust me.\" I said reassuringly. \n\n I lifted his heavy legs up into the air and draped them over my shoulders. From here I carefully moved towards his large, pendulous testicles. I licked them and breathed in their strong dwarven scent. I attempted to pull them into my mouth, but could only manage one at a time. Above me Brom groaned his approval. I made my way south tracing my way down his seam with my tongue. I began to push his furry cheeks open when I felt his body tense.\n\n \"Khel, uh, ye shouldn't be down there.\" He warned.\n\n \"I know exactly where I am.\" I replied. \"I want you to feel good.\"\n\n \"I do feel good! I jes don't think ye need to be exploring me arse!\" He exclaimed.\n\n I ignored him and began to slowly, gently, tongue his anus. Within a few licks I could feel the tenseness leave him, little by little. I used my hands to spread him open more. I pushed my tongue further into his pretty pink pucker. He tasted wonderful, musky and strong, tangy somehow. \n\n \"Sweet mother of Iron.\" Brom croaked.\n\n As I continued to dart my tongue in and out of him I reached up and gripped his girthy maleness. Brom continued to moan and proceeded to thrust into my hand. He reached down and helped to spread himself wider, allowing me better access. I lapped around his hot hole as I jerked his cock. It felt amazing, to know I could make him feel like this, and to know he would allow me here, in his most intimate place.\n\n \"Sl-slow down, lass, I'm nearly there!\" He cried. \n\n Instead I pushed him, with his help, back to the middle of the bed and hopped onto my knees between his legs. \n\n \"I've never felt anything like that before.\" He said, breathing heavily.\n\n \"Did you enjoy it though?\" I asked, knowing the answer all too well.\n\n \"Oh aye!\" He nodded emphatically. \"I never would have thought I would.\"\n\n I gave him a wicked smile and plunged my mouth over his rigid prick. With my hands I cupped and massaged his big scrotum. I bobbed up and down in a blur, forcing tears to my eyes as I gagged a few times. I felt his hands on the back of my head as he began to thrust into my talented mouth. \"Oh lass, oh Khel...\" He murmured.\n\n I kept going and he kept bucking into my eager face. I tugged and palmed his balls as his chest heaved from the reaction. \n\n \"I'm going to blow!!\" He howled.\n\n He sat nearly upright as he was rocked by his climax. I was determined, I kept up my pace and sucked my way all the way down his thickness just as he began to spurt his copious load into my hungry throat. I swallowed as fast as I could, gulp after gulp of hot, bitter dwarven spunk. It was impossible to keep up with the sheer volume and eventually, after the fifth or sixth salvo I gagged and had to release him from my mouth. His seed poured from the corners of my mouth and I slowly stroked him with my hands as he shot a few more times, hitting himself mostly in the beard and chest. One blast hit him fully in the face. I crawled up beside him and bent over to lick the cum from his mouth and he surprised me by kissing me in the same moment. Our tongues flicked together and we both tasted his fluid in a long, passionate kiss. He lay back down with one of his solid arms across his eyes. His chest heaved. We laid like this for a few minutes while he caught his breath.\n\n \"Oh Khel, I think I'm in love.\" He said at last.\n\n \"What?\" I asked.\n\n Brom moved his hairy forearm from his face and looked at me with his bright amber eyes. \"Ye heard. I love ye.\"\n\n \"Oh, don't say that.\" I wanted to hold them back but the tears came unbidden. I looked away from him.\n\n He sat up and pulled me into him, smearing cum on Aste's dress. \"I've loved ye since I first heard yer voice on that stage.\" He whispered softly into my ear. \n\n I cried harder. I had let this go on long enough, I couldn't handle this. Brom held me tightly and kissed my forehead. \"Go ahead and cry if ye need to. It doesn't change my feelings.\" He turned my face to look me in the eyes. He gave me a warm moustachey smile and wiped the tears from my cheeks with a thumb.\n\n He rolled me onto my back and climbed on top. \"Yer the first to ever try to swallow me load!\" He said in an impressed tone. \"And now if I'm not mistaken, it's yer turn to feel good.\" Brom grinned down at me impishly. He carefully grabbed the dress fabric and I lifted my arms above my head as he pulled it over them. I still had my underwear on as Brom kissed his way down my lithe body. He kissed my tight stomach, my inner thighs. In spite of the way I felt emotionally, I couldn't help but begin to become aroused again. \n\n As I started to tent my undergarments, Brom slowed with his kisses, then stopped altogether. He hooked his fingers under the waistband and hauled them down to my knees. My half-hard prick flopped out in his face. His eyes grew wide with surprise. He hopped off the bed, nude and still sporting an erection himself. I knew he had never seen a naked elf before but it was immediately obvious now that I was a male.\n\n \"What the hell is this?\" He bellowed. This time when his face turned red it was out of anger.\n\n I sat up to my elbows. \"It's my cock. What else would it be?\" I asked scornfully.\n\n \"Since when do ye have a cock?!\" He barked.\n\n \"Birth I would assume.\" I said darkly.\n\n Brom paced in a tight line at the edge of the bed. He stopped long enough to give me a hard look. \"Yer a lad then.\"\n\n \"Yes.\" I said.\n\n \"And ye jes thought ye'd keep it to yerself?\"\n\n \"My gender is my business.\" I countered.\n\n \"No. Not in this case.\" He pointed an accusatory finger at me. \"Why, why would ye let me call ye lass? Pretty? why would ye let me say all those things? Why would ye let me fuck ye?!\" He began pacing again.\n\n I suddenly felt too vulnerable, too naked, emotionally and physically both. I reached over to the edge of the bed to grab the dress I had been wearing but Brom snatched it away from me and threw it onto the nearby table.\n\n \"What do ye think yer doin'?\" He snarled.\n\n \"Getting dressed and getting out.\" I said. \n\n \"Ye haven't even apologized to me.\" He said. As I watched him I could see he wasn't angry anymore, not really. It was something much worse, and harder for me to deal with.\n\n \"I'm sorry.\" I said honestly.\n\n \"I don't even know who ye are!\" He blurted out. \"Ye've been lying to me since we met! I-I shared everything with ye! And ye...\" He looked away from me and to the floor. \"Ye made me look a fool. Ye shamed me.\" His voice was choked with emotion.\n\n \"I'm sorry!\" I yelled it this time. \"I never wanted to hurt you, Brom! You're the best thing to happen in my life! I'm the fool, me! Obviously! How could anyone ever want to hurt someone like you?\" I was wailing by this point. \n\n He sat at the far side of the bed with his broad back to me. \"Why would ye lead me on like this?\" He asked.\n\n \"Because I've never felt this way about anyone before! I...\" I swallowed hard, this would be difficult for me to finally say. \"I was falling in love with you too! By the time I realized what had happened it was too late. I didn't know how to tell you.\" Tears continued down my face in tiny rivers.\n\n \"I would never lie to ye, Khel, and I never did.\" He said in a small voice.\n\n I had betrayed him completely. There was nothing left to say, but it didn't stop me from awkwardly trying.\n\n \"You fell in love with me, didn't you? My voice, my personality? You were never in love with my gender right?\" I asked through sobs.\n\n \"That's not fair.\" He said. \"You can't twist this around and make it my fault.\" He still had his back to me. \"I'm just some stupid dwarf who was able to entertain ye fer a week while ye were on the road.\" He stood then and moved over to the small table. He picked up my dress and tossed it onto the bed next to me.\n\n \"Ye can leave. I won't stop ye again.\" He wouldn't even look at me.\n\n I quickly dressed and headed to the bedroom entryway. I looked back at him. He was facing this direction and I could see that he had been silently crying. He hadn't wanted me to see.\n\n \"I'm sorry.\" I said, for the last time. \"I do love you, Brom. I'll never forget my feelings for you, or what I've done to you.\" Tears still coursed down my face as I started to leave.\n\n I heard him say something quietly behind me. \"What?\" I called back to him.\n\n \"I was going to ask ye to live here with me.\" He said, still quietly. He looked up at me and I could see the pain in his face. The pain I had caused this wonderful man. \"And ye, ye broke my heart.\"\n\n He barely managed the last word before he was wracked by sobs.\n\n It was too much for me, all of it, and I wasn't equipped. I fled from his home.\n\n I didn't stop running until I had reached the perceived safety of my own room. I cried into my pillow. I felt so worthless, so pathetic. Nothing had gone the way I intended. What had I expected to happen? Of course Brom felt betrayed, the person he had fallen love with... thought he had fallen in love with, didn't even respect him enough to be honest with him. I was so ashamed. I let the tears flow. \n\n Time passed, I'm not sure how long, it must have been several hours because eventually there came a knock at my door.\n\n \"Please go away.\" I croaked.\n\n The door opened a moment later and my father Joren stepped inside. He was at my side within seconds, wiping the matted hair from my forehead where I lay. He sat on the bed next to me.\n\n \"Son, what's wrong?\" He asked in a parental tone. \"Did that dwarf do something to hurt you?\"\n\n I turned my face to look at him. The tears seemed to have stopped for the time being and I said, \"No, dad. Quite the opposite. He loved me and I broke his heart.\" I feared I was about to start crying again.\n\n Joren looked at me for a long time. \"It seems to me that you love him too.\" He said.\n\n \"I do. But it-it's complicated.\" I said.\n\n \"Is this something you could work out with him?\" He asked thoughtfully.\n\n \"No.\" I replied with a heavy sigh. \"Even if I wanted to. He wanted me to stay here, but I couldn't. I'd miss my life too much.\" I was shocked by my own words but they were the truth. Even if Brom had fully accepted me, I didn't want to be stuck down here, in one place. My life was in the troupe, traveling the world performing on stage.\n\n \"Perhaps it's for the best then.\" Joren said soothingly.\n\n \"Perhaps.\" I echoed.\n\n It was difficult to hear, but Joren was usually right about these things. He had lived a long time and had many relationships before he married Vahn. Still, the thought of never seeing Brom again, not having him greet me at my door everyday... I would miss it terribly.\n\n \"No one has ever made me feel like this, dad. I don't know what to do.\" I gave him a searching look.\n\n My father gave me a grimace which turned into an awkward, but understanding smile. \"Khel. You're young, you'll likely have many great loves in your life. I know how you must be feeling, but in time it will pass, I promise you.\" He placed a comforting hand on my shoulder.\n\n I nodded and felt a little better.\n\n \"You're strong. You're Vahn's and my son. Tomorrow we'll all have grass under our feet and clear blue skies over our heads.\" He smiled at me. I gave a weak smile back. I too had missed the world above ground.\n\n \"But for now,\" Joren said as he stood. \"We have one last performance to give the dwarves and you're the male lead.\"\n\n I had nearly forgotten. The play, Saelia and Yava, was my favorite, and always the one I looked forward to performing the most. \n\n \"I don't know if I can.\" I said shakily.\n\n \"Well that's up to you.\" Said Joren as he reached my wagon door. \"But I know on the stage, you can be someone else. I think it would do you good to focus on something else. Maybe even use these feelings in the finale? Up to you, son. We start in fifteen minutes.\" He closed the door quietly behind him as he left.",
        "Twenty minutes later I was in full costume, center stage as the young lover, Saelia. Playing opposite me was Aste. He, Saelia, was an idealistic young elf, lowborn, with grand dreams for the future who falls desperately in love with a noble's daughter, Yava. It's an old story of love overcoming obstacles and adversity. Tonight of course these themes had me on the verge of a breakdown several times throughout the performance. As I sang and moved about the stage, I scanned the audience tirelessly. I couldn't find my red-bearded dwarf anywhere. \n\n Near the end of the production, Yava is killed accidentally by her jealous ex-lover and dies in my arms. The final song began and I sang the words directly from my heart. The lyrics told the tale of Saelia's immeasurable sorrow over the loss of his only love. At the height of the melody I was at the edge of the stage, reaching into the darkness, singing, nearly screaming my lament over allowing Yava to die. Saelia's pain was a mirror to my own and as the final, powerful line fell from my lips, I collapsed to my knees, fresh tears staining my face. The music died and the single lamp behind me was doused. \n\n I still wondered if Brom had come to see me for one final night, at last able to see the real me, stripped of disguise and vanity, heartbroken over what I had done.\n\n CHAPTER 7\n\n On the last morning, our caravan was busily packing all of our makeshift town back into wagons and carts. Within a couple of hours everything was ready to go, the only exception being me. I had pleaded with my fathers, the leaders of our troupe, to wait until just after noon to leave. They finally agreed but it was for naught, Brom never came. I don't think I really expected him to show. \n\n When we reached the surface after a couple short miles, I think it was the horses who were the most excited. They whinnied and trotted at having sun on their backs again and dirt under their hooves in place of stone. It took some time to adjust to the brightness of the topside world again but it had truly been missed, by all of us.\n\n Our next show was a couple weeks away and until then we traveled by day, camped in our wagons at night and the others sang and joked around the bonfire. I was having a hard time but Aste was always nearby, willing to lend an ear or try to make me smile. The shows in this town went well, and luckily Saelia and Yava wasn't scheduled to be performed. I wanted to distance myself from the role awhile longer. Months passed and we had performed at a handful of elf and human towns and cities in that time. Brom was never too far from my thoughts, and each time I was reminded of him I would get a sharp pang inside. Joren was right though, everyday it hurt just a tiny bit less. \n\n Half a year had passed by now and we were performing in a human city called Hartholm. I was dressed as a woman for the evening's production. There was a tall fellow with a blond beard standing in the audience who gave me wide grins as I performed. He was ruggedly handsome which reminded me of Brom. I decided I would look for him after the performance. He wasn't too hard to spot and I caught up to him easily as the crowd was dispersing. I still wore my dress costume from the show.\n\n \"Hey!\" I said as I approached.\n\n He turned, and gave me an easy smile. \"Well hello.\" He greeted. He was a good head and a half taller than me. His yellow beard was full for a human but nothing compared to a dwarf. He had short hair, blue-grey eyes and a strong build. I guessed he performed manual labor of some kind for his livelihood.\n\n \"Did you like the show?\" I asked.\n\n \"I did.\" He said, \"I certainly liked you.\" He gently touched his fingertips to my arm.\n\n I gave him a coy smile. \"I liked you too. Is there somewhere we can go?\"\n\n He introduced himself as Ethan and I introduced myself as Khel. I said we could skip the dinner and instead of a pub he showed the way to a nearby inn where he plunked down coins for a room. \n\n When we reached the room, he closed and locked the door behind us and began to pull off his shirt. He looked me over, his eyes filled with lust. \"Hope you're ready, for this elf.\" He said.\n\n I pulled off the curly black-haired wig I had been wearing. He paused.\n\n \"Before we do anything, you should know I'm a guy.\" I said. \n\n Ethan returned to undressing after considering my words for a few moments. \"I'm not normally into that.\" He replied. \"But that hot little body of yours... I can fuck you from behind.\"\n\n \"I just needed you to know first.\" I explained.\n\n \"It's fine. Get out of that dress and come here.\" He ordered.\n\n I stepped out of my shoes and slid the dress down my body. I removed the gloves and stood in front of the man wearing nothing but a necklace. I stepped over to him and he grabbed me roughly by the shoulders.\n\n \"Nice.\" Ethan leered. He savagely began to kiss my neck and moved down to my chest. He lifted me from my feet suddenly and walked us to the lumpy inn bed. He threw me down and slowly looked over my body. He began to stroke himself openly as I watched. He was sizable and I could see the glisten of his early fluid at the slit of his fat purple cockhead.\n\n \"Wet this up for me.\" He instructed.\n\n I crawled towards him and took a teasing lick of his swollen head. A string of his fluid connected my tongue to his cock as I pulled slightly away. I took another long lick. The musky smells of a human in heat were quite different than a dwarf's. I felt another pang in my chest but decided to ignore it and opened my mouth to take more of Ethan. \n\n \"Enough with the foreplay.\" He said. The man grabbed my head and forced it all the way down his engorged member. I gagged violently and tears stung my eyes. \"That's better.\" He growled.\n\n He kept his hands on the back of my head and began to pump and thrust into my throat violently.\n\n He fucked my throat raw and I was finally able to pull off of him before I passed out. I gasped for air. \n\n This man was nothing like Brom. Any fleeting similarity had been purely physical. Brom had been gentle and courteous throughout our time together. What had I really expected from tonight? This is what I wanted wasn't it? A man to fuck away the pain I still had, to give me a brief way to forget? To punish myself for being so stupid?\n\n Ethan pushed me backward and rolled me onto my hands and knees. I considered getting up to leave but decided I was going to see this through. Honestly I wasn't sure if Ethan would have let me go. \n\n \"Hope you lubed me up enough, elf.\" He chuckled as he positioned his cock with his hand up to my asshole. \n\n I cried out in pain and alarm as he attempted to penetrate me on his first push. \"M-more spit!\" I yelled.\n\n He grumbled, but spit a generous amount into his palm and smeared it into the crack of my ass and over his rigid maleness. He went more slowly this time and I was able to push back against him. I was more than grateful that his prick wasn't nearly the thickness of Brom's. After several thrusts he picked up his rhythm and began to thrust with abandon. He smacked my ass as he did so, it stung painfully but I said nothing. Eventually I began to get more into the sensations and reached down to stroke my cock as Ethan rammed into me.\n\n \"That's it, baby.\" He whispered. \"Get into it.\"\n\n After a few more minutes we changed position and he lay down on his back and had me straddle him. I began to rock up and down, impaling myself on the man's dick. He reached up and pinched my nipples, twisting them painfully. I clenched my teeth to keep from shouting out in pain. Ethan's face and wicked smile suggested he liked causing me some pain. My mind drifted away, back to the apple trees on the island in the small lake where Brom had taken me all those months ago. We had made love, just like this, but nothing like this.\n\n As I bounced up and down on the big human's cock, the necklace I wore bounced against my chest. The man under me began to quicken his pace. I knew he would cum soon. I stroked my own hardness.\n\n \"Get ready, kid...\" Ethan said as he bucked himself into me. \"Here it comes!\"\n\n As he began to spurt up inside I brought myself to orgasm, arcing cum through the air and spattering Ethan's stomach and chest.\n\n The man finished his climax and then looked down at my pearly semen spattering his body. \"What the fuck!?\" He responded angrily. He shoved me off of him onto the bed. \"You fucking cummed on me? I told you I don't like doing this with guys!\" He rose to his feet, looking for something with which he could clean himself. \n\n \"Give me your underwear.\" He commanded.\n\n \"What? No.\" I said defiantly.\n\n He balled up his fists. \"This is your damn mess, so you clean it up!\"\n\n It wasn't worth getting beaten up by a man practically twice my size. I tossed him my underwear and he wiped himself down.\n\n He began to get dressed, saying nothing as he did. I followed his lead and pulled on my dress, wig, gloves and shoes. \n\n \"Thanks.\" He managed as he left the room.\n\n I gave him time to leave, I didn't want to run into him downstairs and then headed home. This had been a mistake, I had hoped sex with a stranger would prove to heal my heart faster or at least provide distraction, but instead it brought feelings and sensations to the surface that I thought I had successfully forgotten.\n\n In several more months' time I realized something which I eagerly anticipated. When we had first gone to Stonefield, nearly a year ago, the troupe had determined that if the trip proved lucrative we would go back the following year, same time. I recalled hearing from Vahn and Joren during the trip that each night had proven to be a full house. By now the return trip to Stonefield was only a few weeks away. I'm not sure what I was so excited about, Brom would have moved on, he likely wouldn't attend the performances. I knew he hadn't forgiven me. Just the prospect of seeing him, even from afar filled me with guarded hope. \n\n When the caravan would have been scheduled to start heading east for the mountains under which was submerged Stonefield we continued north. That night when the wagons were camped, I went to see my fathers who were busy helping with dinner near the bonfire.\n\n \"Hey.\" I said to the both of them, \"Where are we going? I thought we'd be heading east by now for Stonefield?\"\n\n Vahn and Joren gave each other a quick look before answering.\n\n \"Honey, we're continuing on to Belforde.\" Vahn said.\n\n I was in disbelief. \"What? Why?! Was the Stonefield trip not worthwhile? We sold out every night!\"\n\n \"Don't be upset, it was a troupe decision. We made good money but the majority, not to mention the horses, didn't really like being underground so long.\" Vahn rubbed my arm. \"I'm sorry, sweetie.\"\n\n I felt like the wind had been taken out of my sails. \"Nobody told me.\" I replied weakly.\n\n Joren stepped forward. \"We honestly thought you wouldn't want to go back, not after last time.\"\n\n I gave them a fierce look. \"You should have asked me. I'm hardly a child.\" I spat.\n\n Vahn gave a sigh and his shoulders slumped. \"Were you hoping to see Brom?\"\n\n \"I thought that affair had ended badly?\" Joren added.\n\n I leaned against one of the wooden tables where Vahn was preparing food. \n\n \"It ended badly.\" I confirmed. \"But I need to see him again. I hate how I left things. There's not a day goes by that I don't think about Brom.\"\n\n Vahn folded me into a hug. \"Oh Khel. You fell so hard for this one. And we're both truly sorry but we aren't going back there, for the sake of the caravan.\" \n\n Joren gave me an empathetic look.\n\n I pulled away from Vahn. \"I understand, father.\" I said. \"I just wish someone had included me in the decision.\" \n\n I strode away from them. I forewent eating dinner and instead went for a walk under the stars. The night air had a chill and it felt invigorating as I meandered along. It was my one last chance to see my old flame and it wasn't going to happen. I gave a drawn-out sigh and sat in the cool grass. We would be in Belforde, another large human town in the next few days. I would put all of my efforts into my performances and finally place my attentions on the future.\n\n CHAPTER 8\n\n Belforde was a beautiful town, full of life and color and old trees lined the streets. The troupe performed admirably but unfortunately there was rain the last two nights and even though we covered our stage, there hadn't been a way to shelter much of the audience. As a result the ticket sales were quite low. It was an unfortunate but inevitable event, something the larger cities would never allow. They would have had us perform in a town hall, or at least been able to erect large tents for the crowds. \n\n Joren had left Belforde the night after the rain began on horseback promising to return within a couple of weeks. He explained that there were provisions we still needed that would be unavailable in the coming months as we continued making our way north. It wasn't too uncommon to make supply runs like this but we usually sent others as Joren was the main promoter and overseer of our productions.\n\n We finished our business in the human town and continued north. Occasionally we would have a day of sunshine poking through the clouds, but it was usually wet and grey. We were in wagons much of the time, reading, mending clothes, sleeping. It was evening and still raining when we stopped midway to our next destination to set up for the night. We set up large canvas tents so the horses would have dry cover, and we set up another to serve as the kitchen. Finding dry wood for the bonfire wasn't easy, but ultimately we got a spark going. Some of the troupe members along with myself helped to make the evening's meal and pass it out in bowls to the rest. After dinner we sat around, cursing the weather, joking about past performances and playing instruments. I felt good, rain be damned, it was shaping up to be a wonderful evening. \n\n It grew late and some of my friends began to yawn sleepily as they excused themselves for bed. I was getting close to turning in for the evening myself when Vahn strode over to me. \n\n \"Come on, get up!\" He said enthusiastically. \"Your father's back safely, he wants to see you.\"\n\n \"Glad to hear it!\" I said as I rose quickly to my feet. It was always heartening when a supply run was fruitful and the rider came back without incident of injury or robbery, especially when the rider is one of my fathers.\n\n \"Did he get what we needed?\" I asked as we walked.\n\n \"I would say so.\" Replied Vahn.\n\n We moved out from under the cover of the tented areas and into the rain. Vahn and I pulled the hoods of our cloaks up over our heads. It was quite a downpour and I could just barely see Joren with his horse and a wagon, he also wore a heavy cloak and hood to help repel the water. I rushed over to him and he embraced me.\n\n \"Dad! I'm glad you're back! How was your trip?\"\n\n He released me and gave a warm smile. \"It was an interesting trip.\" He replied as he began to unhitch his horse from the supply wagon. I looked over the wagon. It was a somewhat strange design, though familiar, I wondered where he had to go for supplies. \n\n \"Would you mind getting something out of the back for me?\" Joren asked.\n\n \"Sure!\" I said as I ran to the side of the wagon. I was about to call back that I didn't know what specifically he had wanted but I stopped short. There was another man here with Joren, wearing rain clothes and standing rather short. A large beard came midway down his front and even in the dim light cast by our camp I could see it was a vibrant red. My breath caught in my throat. I couldn't believe he was here.\n\n \"Hello Khel.\" Brom said.\n\n I had trouble forcing myself to speak. \"Wh-what are you doing here?\" I finally managed.\n\n Brom nodded behind me to Joren who had finished unhooking the horse from its bindings.\n\n \"Yer father came and, spoke with me.\" Brom said. \"He invited me to accompany him back.\"\n\n Behind me, Vahn met up with Joren and called to us, \"We'll leave you two alone, don't get too wet out here!\"\n\n \"So this is rain then?\" Brom asked me quietly.\n\n \"Yeah, this is pouring rain.\" I confirmed.\n\n \"I don't think I like it much.\" He grumbled.\n\n I laughed and he gave me a shy smile. \"It's... really nice to see you.\" I said tentatively.\n\n \"It's nice to see ye again.\" He said. I watched as he shifted his weight nervously.\n\n I took a step back from him and held my arms out. I showed him my coat, simple pants and boots. \"You wouldn't have seen me like this, but this is how I usually look. Nothing fancy, no dresses, no make-up unless I'm performing.\" I explained\n\n \"I know what ye look like Khel. I couldn't ferget.\" He said with a shake of his head. \"It wouldn't matter what ye had on.\"\n\n I said nothing, I was at a loss for words. I didn't expect it to be this difficult, for both of us it seemed. We both fidgeted, in the rain and mud, neither of us knowing what to say until I finally asked, \"Brom why are you here?\"\n\n He rubbed his neck, as if searching for just the right words. \"I've... had a lot of time to think, about things.\" He began. \"After ye left, I, had a rough time of it.\" He swallowed. \"I didn't know how to handle things, and I can be stubborn, I know that. Oy, this is harder than I thought it would be!\" He laughed nervously. \"Have ye been well?\" He suddenly shifted the conversation and caught me off-guard.\n\n \"Uh, I've been okay, recently. It's been quite a year for me, emotionally.\" I admitted. \"But I've been trying to grow, and make better choices.\"\n\n He nodded. \"Good that's good to hear!\" He wrung his hands nervously. \"Khel I, do ye still have the stone I gave ye?\"\n\n \"The fire garnet?\" I asked.\n\n Brom nodded again.\n\n I reached under my cloak to my chest and pulled out the necklace I wore. The fire garnet held in the center. \"I had a merchant make this for me after we left Stonefield. I've never taken it off since that time.\" I explained. In the darkness, the stone glowed with warm orange light.\n\n Brom surged forward and enclosed me in a crushing bearhug.\n\n \"Oh lad! I can't believe ye kept it! I had hoped against hope ye would!\" Even in the rain I could see that tears began to trail down his round cheeks.\n\n I hugged him back, he was so warm, and it felt so good to have him in my arms again. \"Of course I kept it, you gave it to me.\" I said quietly in his ear.\n\n He looked up at me. \"It's me family stone.\" He said.\n\n \"I don't understand.\" I said.\n\n \"Do ye remember when I gave you this?\" He asked.\n\n \"You know I do.\" I said earnestly.\n\n \"I told ye I didn't want to be with anyone else, that ye were the one fer me.\" Brom said.\n\n \"Yes, I remember.\" I assured him.\n\n \"Well, what I failed to mention at the time... it's more than that to us dwarves. I only have one stone to give, and I chose ye. I'm bound to ye, and by ye keeping it safe fer all this time...\" He sobbed quietly. I held him close. \n\n \"Ye kept me in yer heart, ye never stopped loving me.\" He finished.\n\n \"I could never stop loving you, Brom.\" I said easily.\n\n He looked into my face, and I marveled again at his beautiful amber eyes. \"Khel, I'm sorry, so sorry. It took me a long time to understand why ye did what ye did, but I finally figured it out. But ye were right. I fell in love with ye, all of ye. I don't care that yer a lad, I want to be with ye!\"\n\n The words bubbled out of him and I think he had more he wanted to say but I couldn't hold back any longer. I bent my neck forward and kissed his mouth. He closed his eyes and I did the same. My heart leapt up at the feel of him. Our tongues intertwined as they used to and I squeezed him so tightly. The rain continued to pour down on our heads, washing the tears from our faces. We kissed there, in the pale light of the caravan's lamps while the rain cleansed us of any wrongs we may have done to each other until at last we were shaking and soaked through. We pulled apart at last, out of necessity.",
        "\"I almost fergot how incredible those green eyes of yers looked.\" Brom beamed at me. \"And I want to keep starin' into 'em, but fer now I think I'm soaked through to me undershorts!\"\n\n I gave him a laugh in response, \"Come with me, I know a place.\"\n\n I led him back to my covered wagon room. Brom recognized it of course and commented, \"Guess I can finally take ye up on yer offer to come in, eh?\" He joked.\n\n \"If you're through being such a complete and utter gentleman.\" I teased back.\n\n We quickly climbed up the few steps to my wagon and scurried inside. Brom looked around. \"It's cozy.\" He said. \n\n \"It doesn't need to be too big, I'm usually just in here to sleep, dress and read.\" I explained as I lit the room's main lamp and a large candle on the bedside table.\n\n \"The bed's a good size.\" Brom admitted.\n\n \"No dragon stomach lining though.\" I said with a big grin.\n\n Brom gave a hearty belly laugh. \"Well lad, that might be a problem.\" He gave me a wink, before adding. \"No fireplace, how will we--?\"\n\n \"Take off your clothes.\" I said. \"We'll get under the blankets, share body heat.\"\n\n \"I guess the rain is good fer somethin' after all!\" Brom remarked as he quickly began shedding his wet clothes. I did the same, and for a moment we stood, admiring the naked figure the other displayed. It had been a long time since I was last able to appreciate his masculine form in this way.\n\n \"Okay!\" I said hurriedly, \"It's too damn cold, under the blankets!\" I crawled into bed first and held the covers up for Brom as he clambered in next to me. He pulled the blankets in tight around us and we warmed up rapidly. In our small tent of covers we were curled up, facing each other. \n\n \"I missed ye so much.\" Brom confided.\n\n \"I did too.\" I replied. \"I remember that last performance, I looked for your face in the crowd the whole time. It was probably best you weren't there. I was a mess by the end.\"\n\n \"I was there.\" Brom said. \"Of course I was there. I would never miss ye sing. I know we had a fight jes prior, but I didn't want that to be how I remembered ye.\"\n\n \"I had no idea.\" I said, amazed.\n\n \"Ye were really somethin' that night. Ye moved the whole crowd to tears, and we're talkin' about dwarves here!\" Brom exclaimed. \n\n \"Were you moved?\" I asked with a hint of embarrassment.\n\n \"Ye ruined me, lad.\" He said seriously. \"I felt like ye were singin' jes to me. And ye looked so handsome up on that stage.\" His voice trembled slightly.\n\n I was touched by his words, I choked back joyful tears. \"How do you do that?\" I asked.\n\n \"Do what?\" He responded.\n\n \"Always know just what to say to me. You make me melt.\" I said.\n\n He gave me a kind smile. \"I jes try to say things I think will make ye happy.\" \n\n I pulled him closer to me and kissed him again. He wrapped his strong hairy arms around me and pulled me in tighter.\n\n \"I want to make love to ye.\" He said softly against my ear.\n\n \"Oh gods, yes.\" I whispered back.\n\n We began to kiss passionately as our hands explored one another. He felt so good, fuzzy and strong, familiar. We were warm and dry now and he pushed the heavy blankets down to our shins. He got to his knees and made his way to my chest, kissing and sucking as he went. I rubbed his bald head and ran a hand through his beard. He licked my stomach and was nearly to my hard cock when I felt I needed to say something.\n\n \"Brom, I don't want you to feel obligated or anything.\" I said.\n\n He looked up at me, puzzled. \"Obligated? Khel, I want to make ye feel good.\"\n\n \"Yes but, I mean, you're attracted to women...\" I trailed off.\n\n \"I'm also very attracted to ye.\" He said firmly. \"Now stop tryin' to talk me out of this. I want to taste ye.\"\n\n I conceded. I wanted to feel his mouth on my cock, more than anything. It was a brief wait as he began to kiss my shaft down to my testicles. He kissed me here too, licking gently around the soft skin of my scrotum. He returned again to my bobbing length and I watched him as he took in my scent, savored the taste of the fluid I was already leaking. He took me into his mouth slowly, sucking partway down and then back up again. He downed me again and made it all the way to the root, I could feel the heat of the back of his throat. I clutched at the bedsheets around me. He gagged once and pulled off just long enough to ask, \"How am I doin' lad?\"\n\n \"Very well!\" I gasped. \"This can't be the first time you've done this.\"\n\n \"Oh, aye, it is!\" He said quickly. \"But I like usin' me mouth, and I paid attention to what ye did to me before.\"\n\n He resumed sucking me, bobbing up and down, swirling his tongue around my head as he went. It felt wonderful. I began to moan and thrust gently into his mouth. He sucked me slowly, sensuously. He was taking his time, making this all about my pleasure. After awhile he gently lifted me up by my legs and shifted my weight onto my shoulders and neck. He held my legs over me by the calves as my cock pointed down toward my chest. He sat up, supported on his knees.\n\n \"What are you--?\" I asked. The position would normally have been uncomfortable but he had much of my weight by holding my legs and I am quite flexible naturally.\n\n From this position he was able to easily lean in and have access to my ass. He playfully nipped at my rump, making me giggle in the process. \n\n \"I remember how nice this felt too.\" He said with a mischievous smirk.\n\n He moved his mouth between my smooth cheeks and began to slowly lap at my hole. I groaned in response. His tongue slowly traced circles around my pucker, the sensations, the heat and his long tickly beard whiskers were driving me insane. Brom kept up his attentions here for some time, licking my rim, probing inside of me, taking in my scent. I threw my head back in lust as I felt him push his tongue as far in as he could manage, out and back in, with a wonderful rhythm. Eventually after he had finished making tongue-love to my backside he laid me down on my back and lay beside me. \n\n \"How did I do?\" He asked.\n\n \"That was incredible.\" I said as I caught my breath. \"You really do like to use your mouth don't you?\"\n\n \"I wanted to show ye before now.\" He said as he brushed my cheek. \"There's one last thing I want to offer ye tonight.\"\n\n \"Oh? What's that?\" I asked, admittedly very interested.\n\n He gave me a tentative look. \"If ye're willin' to go slow with me... I'd like ye to be able to fuck me, as only a man can.\" He finished carefully.\n\n I furrowed my brow. \"You want me to enter you?\"\n\n \"I think so. I'd like to find out. Is that somethin' ye'd want to try?\" He asked.\n\n I nodded. \"I would love to be inside you, Brom. I'll go slowly, it can be a little painful, at first.\"\n\n He shot me a nervous smile. \"Well, show me what to do.\"\n\n I decided to take him while he was on his back. I wanted to be able to read his face, as well as be able to look at him fully. There was a small bottle of oil in my bedside table drawer that was normally used for softening and loosening leather. I often used it as lubricant when I was masturbating alone in my room. It would be just the thing to help prepare Brom. I grabbed the bottle and poured a generous amount into my hands. Brom watched me with an interested expression. Once it was warm from my hands I began to slowly and carefully smear it between his fuzzy ass cheeks, pushing it gingerly against his entrance. I continued gently pushing against him until my fingertips began to ease inside. He moaned, but I could see he was enjoying the sensations. I Began to slowly jerk his cock as I pushed more of a finger inside the dwarf. It was so hot inside of him. He grimaced somewhat and gave me a look.\n\n \"Feel a little strange?\" I asked with a slight smile.\n\n He nodded. \"A little.\" \n\n I continued to loosen him up and stroke him slowly. Soon I had moved up to three fingers and Brom shifted and twitched. He was about ready for me.\n\n \"I'm going to try sliding in now.\" I said. \"I'll go nice and slow, you tell me if I should stop, alright?\"\n\n He nodded his understanding.\n\n I used the oil to ready myself and then began to gingerly nudge my way inside of him.\n\n He grunted in protest and I stopped about midway inside his ass.\n\n \"Keep going.\" He said through gritted teeth. \n\n In truth my cock isn't huge by any means but I believe it to be above average in length and thickness. Certainly to a virgin asshole like Brom's it was quite an undertaking. With some more time and effort I was able to push inside all the way to my sack. I slid out again, slowly, nearly all the way before carefully thrusting entirely back into him. It took awhile to work up to a steady speed but eventually Brom's body language told me had grown accustomed. His cock had deflated during the process but now I was able to stroke him back to his former glory. \n\n \"How do you feel now?\" I asked. I held one of his big legs over my shoulder as I began to fuck him in earnest.\n\n He moaned, his body trembled in response to each of my thrusts. \"Mother of Iron...\" He gasped. It was all he could manage.\n\n I smiled as I continued to give him all I had. Sweat began to pour down my face and chest. The fire garnet around my neck bounced off my hot flesh. The bed creaked and groaned from our exertions. I watched his beautiful body as I simultaneously fucked and stroked him. Brom moved and bucked with me. His eyes remained locked on mine. His face was an expression of overwhelming lust and desire. I kept up our lovemaking for as long as my body could allow. \n\n \"I'm going to cum!\" I yelled. I jerked him faster, I could sense how close he was too.\n\n \"Oh fuck! Khel! Fuck, ohhh!!\" Brom practically roared as his manhood began to explode in my hand.\n\n In that moment I realized I had never seen his entire orgasm, not really. He had been inside of my mouth or ass the last two times we had been together. But now I was treated to fireworks. His climax was nothing short of a volcano. I began to coat his insides myself just as he began firing. I thrust as deeply as I could. I don't think I've ever produced so much in my entire life. I struggled to catch my breath. Brom bellowed as shot after shot landed across his belly, chest, beard, face, arms, and even against the wall and blanket behind his head. His back was arched up off the bed and when his plum-sized testicles were finally drained he collapsed, heavy against the mattress. \n\n I eased myself out of his hot, flooded insides and flopped on the bed next to him that looked the most dry.\n\n We lay there, completely spent, the strong scent of sex hanging in the air of the small room.\n\n \"I have to know.\" I said, between ragged breaths.\n\n \"Know what?\" Asked Brom hoarsely.\n\n \"How was your first time? Being fucked by another man I mean.\" I asked.\n\n He gave a long exhalation before answering. \"It was really something. I hardly know where to begin. I... liked it though.\" He admitted thoughtfully.\n\n \"I'm glad, because I want to do that again.\" I laughed.\n\n \"That can be arranged.\" He said. \"But please not tonight.\"\n\n I laughed again. \"Fine. I suppose I can give you a chance to recover.\"\n\n \"Sorry about yer bed.\" He said sheepishly, looking around him.\n\n It was true, this blanket would need a thorough cleaning, as would Brom. Outside I could still hear the rain pouring, pelting the window glass and spattering heavily against the wooden roof.\n\n \"Come on,\" I said. \"Time to get up.\"\n\n \"Eh?\" He replied.\n\n \"Before it dries, it's pouring rain and everyone's asleep. Let's go wash off.\" I said.\n\n Moments later there was a smooth, young, naked elf and a hairy, stout, nude dwarf in the pouring rain in the middle of the night, laughing and shivering as they washed their bodies clean of the evening's pleasures.\n\n CHAPTER 9\n\n When the dawn came, it brought with it a bright warm sun that shone through the window over my bed. The warmth of it slowly roused me and I rubbed my eyes and opened them. I turned my head to the side, grateful that last night hadn't been a dream. I could feel one of Brom's arms underneath my head which I apparently had been using as a pillow. Brom was already awake, watching me with a serene look on his face. \n\n \"Good morning, me love.\" He said softly and kissed me on the forehead.\n\n \"Mmm, good morning.\" I responded and nuzzled my face into his armpit. \"I can't believe I finally get to wake up with you.\"\n\n \"It's perfect.\" He said and wrapped his other arm around me.\n\n \"Are you going to stay for awhile?\" I asked, nervous of the answer.\n\n \"If ye want me to stick around.\" He said. \"Yer father offered me a job in the caravan not on stage of course, but helping where I can off stage. That's also me wagon outside, so I can peddle me wares.\"\n\n \"I knew I recognized that wagon, it was the one from your shop!\" I said.\n\n \"True enough.\" Brom agreed. \"And while I'm gone, Sergud can mind the store. I can stay with ye until yer sick of me!\"\n\n \"Oh, so you're not staying long.\" I said, trying to be funny.\n\n He hugged me tighter, as if to crush me. \"Oh, ye think yer funny do ye?!\" He laughed.\n\n We tussled in place and laughed together. \n\n \"What did my father say to you, when he found you?\" I asked. I had been curious since last night when they arrived together.\n\n \"Well he started by asking me about ye, rather, how I felt about ye.\" Brom started. \"I told him ye had really hurt me.\"\n\n I looked down at the bed, uncomfortable.\n\n \"But I also told him I had realized I made a mistake, letting ye go. I was missing ye like crazy, but I had never been in a relationship with a lad, but I wanted to try, with ye. I didn't know what to do.\" He continued. \"Yer dad told me that in the year since ye'd all been away from Stonefield that ye had never stopped thinking about me. Missing me.\"\n\n \"It's true.\" I added.\n\n \"So when he told me he had come to find out exactly what I wanted to do, and if I would be willing to come back with him to at least meet and talk with ye. If that went well, and it was something we both wanted, he'd be able to find me work here. Yer father Joren, he really cares fer ye a lot.\" He finished.\n\n \"Wow.\" I said. I knew both of my fathers loved me dearly, but it was still incredible the lengths they would go to ensure my happiness. I smiled inwardly, thinking about just how fortunate I was to have the good people in my life. I would need to thank them, today.\n\n \"It's still pretty strange bein' up here.\" Brom stated. \"It's a lot to take in, every little thing is so different, but I think the hardest part was leavin' Stonefield that first day.\"\n\n \"Won't you miss your home?\" I asked.\n\n He sighed. \"Oh, I suspect I might from time to time. But we could go back now and again, if only to visit. I won't miss it nearly as much as I missed ye. Yer my home, Khel, I hope ye know that.\"\n\n I blushed to my ears.\"I like hearing you say that.\" I said.\n\n \"Yer my home.\" He said again, rubbing his face against my neck.\n\n I smiled and then lifted my head. \"Have you seen the world above ground after a rain? When the sun returns?\" I asked suddenly.\n\n \"I haven't.\" Brom said. \"It was mostly rainy and grey on the ride here.\"\n\n \"Oh!\" I said excitedly. \"Sit up, take a look!\" I slipped out of the covers and got to my knees on the bed next to the window. \n\n Brom adjusted himself and knelt next to me to see for himself. His expression was something I would never forget, somewhere between wonder and joy.\n\n \"It's so big.\" He commented. \n\n From here there was a vast green and gold plain stretching away from us of tall grasses, bending and dancing in the morning breeze. Beyond that was a dense forest of great tall trees and further away still were mountains surrounded by endless blue sky with towering white clouds drifting lazily past. A pair of small birds dived and chased each other until they were out of our view. It was a picture I had seen many times before but somehow, with Brom next to me I was able to see it, as if for the first time.\n\n \"The sky really does go on forever.\" He said in a humbled voice.\n\n \"You should see the ocean.\" I said as I slipped my hand into his.\n\n \"I would like that very much, if ye'll show me.\" He said and gave me a meaningful look.\n\n I laid my head on his shoulder as we gazed off into the light of a brand new day.\n\n It was perfect, I thought. I didn't know I could be so completely happy with anyone. It hadn't been easy to get here, but nothing truly worth having is ever easy.\n\n I closed my eyes and whispered, \"See the whole world with me, love. I never really knew the beauty of it without you.\"\n\n ED"
    ],
    "authorname": "Dudebulge",
    "tags": [
        "dwarf",
        "elf",
        "crossdressing",
        "gay",
        "bisexual",
        "love",
        "inter-racial",
        "rimjob",
        "blowjob",
        "older and younger"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/khel-and-brom"
}