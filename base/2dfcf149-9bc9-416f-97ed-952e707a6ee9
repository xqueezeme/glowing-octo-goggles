{
    "title": "Cat Fight Ch. 15: Battle",
    "pages": [
        "TERMS\n\ntinton - 2 1/2 seconds\n\nspecton - 2 1/2 minutes\n\nToton - 2 1/2 hours\n\nminton - 2 1/2 days\n\ndaycon - 2 1/2 weeks\n\nquant - 2 1/2 years\n\ngalant - 2 1/2 centuries\n\nMetson - 2 1/2 inches\n\nmaclon - 2 1/2 feet\n\nheckson - 2 1/2 miles\n\ntetson - 2 1/2 acres\n\nCharacters\n\nBill Axor (AKA Ambrose) - Lion clan\n\nKing Tomco Traxor - Bill's dead father, Lion clan\n\nKing Tobias Traxor - Bill's dead brother, Lion clan\n\nQueen Trianna Axor - Bill's dead mother, Lion clan of Mandria\n\nQueen Niaco Traxor - Tiger clan, Tobias mate, now Bill's\n\nTwitty Glax - Grey Tabby clan, bill's body guard and mate\n\nGlenna Nox - Bengal clan, Bill's body guard and mate\n\nMikos Glac - Chartreux clan\n\nCommander of star cruiser - Wire hair clan\n\nHenna Glac - Chartreux clan, Mikos mate, Xendran Doctor\n\nTheta Panadon - Cheetah clan\n\nCornelius Glax - one of Bill's Uncles, Grey Tabby clan\n\nConrad Nox - Bill's other Uncle Bengal clan\n\nAssassin group - Jaguar clan\n\nsecond assassin group - Ocicat clan\n\nTypree Maxor - Sub King of Mandria, Lion clan\n\nAdina Maxor - Sub-princess of Mandria, Lion clan\n\nKNIGHTS\n\nGeneral Roth - Leopard clan\n\nGregor - Cougar clan\n\nGwayne - Panther clan\n\nThomas - Lynx clan\n\nPALADINS\n\nWrena - Leopard clan, Roth's mate\n\nCetana - cougar clan. Gregor's mate\n\nDawney - Panther clan Gwayne's mate\n\nMileen - Lynx clan Thomas's mate\n\n-----------------\n\nAdina was still slightly behind Ambrose looking at Twitty and Glenna. \"Mate,\" Glenna asked of Ambrose. \"Who is this female hiding behind you? Should I and your other mates be worried you are taking another mate?\"\n\nAmbrose's eyes went wide as he stared at both Glenna and Twitty. \"Both of you think that I would take another mate? Especially after I already have three? By the great feline! Think you so little of me to assume I would do this without any of you included!?\" Ambrose was almost roaring.\n\nTwitty and Glenna both slowly backed away from Ambrose their whiskers twitching, tails low barely moving. Bowing low Twitty whispered, \"We meant no disrespect sire. We were just worried that as you always do, you would take on far too much.\" Then Twitty got a half crooked smile on her face. \"Then again as we have also seen you are most definitely up to the challenge!\"\n\nGlenna's eyes got large then with a smile she also nodded her assent.\n\nAdina's eyes got even larger as she looked up at Ambrose. \"Cousin? You have more than one mate? I know that you need fierce warriors as king but they are your mates also?\" Here Adina's mouth was hanging open.\n\n\"Cousin?\" Glenna said her eyes showing clarity. \"Then I take it you are Adina Maxor, sub-Princess of this world.\"\n\nAdina's eyes went wide as she nodded venturing a little further out from behind Ambrose. This time it was Ambrose's turn to be wide eyed. \"I know you try to keep up with everything about me but this was hidden.\"\n\nSighing Glenna and Twitty both were shaking their heads no. \"No not really,\" Glenna said as she looked at Twitty. \"It appears that with both of our fathers this was well known. As a matter of fact father often spoke of the 'bastards' of the family when referring to Mandria.\"\n\nAmbrose held out a paw to quiet Typree Maxor as he started to growl then hiss. Ambrose actually turned to him when Typree took a threatening step towards both females. \"I have killed for lesser insults to the family and the crown!\" Typree said as he roared out.\n\nAmbrose had caught Typree from behind holding his cousin back. Leaning down Ambrose whispered in Typree's ear, \"Hold cousin these are my mates I would have to execute you if harm came to them.\" When Typree still refused to stop Ambrose threw his cousin to the ground. \"I SAID STOP!\" Ambrose roared.\n\nTypree had jumped back to his paws suddenly still at Ambrose's roar. Hanging his head Typree nodded, \"I beg your forgiveness sire. This has always brought the blood lust to the surface. How you have taken the insults I do not know. I can never allow any to talk abysmal of my aunt you mother.\"\n\nAmbrose was nodding understanding where his cousin was coming from. Thinking a moment Ambrose suddenly smiled. \"Perhaps this will help you with the blood lust cousin.\" He stated. \"Mother always told me that to give in to the anger was to automatically give up, giving the victory to your foe. As I remember she said it is far better to let your foe provide that which you will need for them to hang their selves later.\"\n\nTypree's eyes were wide as he stared at Ambrose. \"That sounds so like something Aunt Trianna would say.\" Typree embraced Ambrose as tears of regret came to his eyes. \"I so miss her sire, so desperately miss her. She was wise beyond her years.\"\n\nAmbrose also had a few tears as the memories of his mother came crashing into his mind. \"I also miss her cousin more than I can ever reveal.\"\n\nBoth of them were suddenly shocked when they were surrounded by the three females. \"I think we need to get back soon, sire. I fear that your uncle might try something while we are gone.\" Glenna told both of them.\n\nAmbrose untangled his self from all, of them then told Typree, \"Let's get this over with.\"\n\nTypree nodded as they all took a speeder to the castle. Typree showed Ambrose where the raised court yard terrace was. Stepping out Ambrose delivered a short speech to the thousands there. Only taking about fifteen minutes Ambrose thanked them then left. Stopping for a few minutes Ambrose spoke to Typree then he and his mates were heading toward his star cruiser.\n\nAdina latched onto Ambrose right before he boarded. \"You just got here cousin! It has been far too long. Please stay a little longer!\" She cried.\n\nSighing Ambrose looked straight into her eyes, \"As much as I'd love to there is far too much going on right now. I promise, a royal promise that I will return soon, and then we can start to look for you a husband.\"\n\nAdina stepped back with a huff her paws on her hips. \"A HUSBAND!? Cousin are you trying to get rid of me?\" Adina hissed.\n\nShocked a moment Ambrose shook his head no. \"I thought you would be tired of following your brother around all the time. I think the right mate would be great for you.\"\n\n\"HA!\" Adina laughed. \"Only if he was as strong and handsome as you! No I don't think there is another out there like you. So as you see I am doomed to be a kittless female.\" Then in a whisper she stated. \"Besides I still have to watch over brother a while. He hasn't even found a female to look at let alone take as a mate!\"\n\nAmbrose rubbed under his jaw a moment his whiskers twitching then a smile lit up his face. Yes! She just might be what his cousin needed though getting her here might prove far more difficult. \"Yes, though that may change soon,\" Ambrose whispered back to her a wide smile on his face.\n\nAdina drew back as she was staring at Ambrose, then a wide smile lit up her face also. Both of them glanced briefly at Typree then smiled at each other.\n\n\"I know that you two are up to something again!\" Typree suddenly interjected. \"I've seen those looks on your faces before. I want no part of it! I mean it cousin!\" Growling a bit at Ambrose, Ambrose smiled as he pulled back from Typree in mock offense.\n\n\"Me cousin? What in the world are you talking about?\" Then Ambrose winked at a smiling Adina, the whole exchange being seen by Typree.\n\n\"Whatever the two of you have planned forget it! There is far too much to do before I can even think of anything else!\" Typree said causing Ambrose to nod.\n\nThey were finally on the way back to Xendra when they received a call from Niaco. \"Sire!\" They heard a bit of strain in her voice. \"I am afraid I have bad news. It appears that your Uncle heard you were leaving the planet. He has started mobilization of troops toward the palace. I also believe that he thought you'd be gone far longer than you were.\"\n\nGrowling Ambrose nodded, \"We should be landing within a quarter toton. Advise all troops there to hold on we will be there soon.\" With that Ambrose walked away talking to Niaco in private a moment before clicking off.\n\nNiaco looked over all the reports in front of her. If she had to lead the defense of the palace she would. She'd damn sure make as many traitors as she could reach die today! Five spectons later there was a great shouting as a great many approached the palace. Then the threats started.\n\n\"To those in the palace! Surrender now and all will be spared this you have on the word of the great Lord Conrad Nox! The true king of the realm!\" Came a voice near the front of the line of troops. \"What is your answer?\"\n\nNiaco growled as she motioned to an archer. Smiling the male took aim and let loose a shaft that quickly found the throat of the speaker. \"Tell the great faker to the throne that he is a coward not to be here to face death like a true leader! Advance if you wish to die!\" Niaco said as she and all four of the knight's mates drew their swords and slowly advanced.\n\nQuickly the enemy troops started to advance, as they soon met Niaco and the knight's mates. Suddenly the dead of the enemy started to liter the field as all five of the females were making short work of all that faced them. Retreating, the groans of the dying were heard all over the field. Unfortunately many were the Kings troops also.\n\nRegrouping the five females weren't sure they'd have many left if they had a full on fight again. The enemy was on the move again when they all suddenly stopped. The sound of a horn behind the enemy lines announced the arrival of the king. With a vicious roar Ambrose and his knights rapidly advanced on what was left of the enemy troops.\n\nNiaco watched with pride as Ambrose's now advanced sword skills were cutting a quick path through the enemy. With a roar of her own Niaco and the knight's mates met the small advancing enemy line. With Ambrose's troops pressing from the back and Niaco from the front a fast and furious battle ensued.\n\nNiaco was pressed back as several enemy troops recognized her as the female leader at the front lines. An errant sword clanged off Niaco's chest plate causing Dawney and Mileen to roar out jumping in front of Niaco. Niaco smiled as she saw a touch of the blood lust as it filled both of their eyes. Keeping up with them was proving to be difficult as they were advancing through the enemy with renewed strength.\n\nBoth Gwayne and Thomas heard their mates roar, briefly watching as they both were shredding the enemy they met. Then to their horror they saw both of their mates surrounded. With a roar the blood lust staring to build in them both knights started through the enemy almost as if they weren't there. Reaching their mates all four were back to back as they smiled continuing on.\n\nAmbrose had been fighting the blood lust the whole time especially after the sword had rang off Niaco's armor. It was almost a half toton later Ambrose had just decapitated three enemies when he looked around at the massive dead on the field. Roth and Gregor were still beside Ambrose as were Twitty and Glenna.\n\nA moment later Niaco walked to Ambrose with Gregor's and Roth's mates. Not far behind them came Gwayne, Thomas and their wives. Taking a deep breath Ambrose sighed. So much death because of a power hungry idiot. Looking over everyone Niaco had a few scratches on her chest plate. Gwayne, Thomas and their mates were covered in blood though Ambrose hoped none of it was theirs.\n\nRoth, Gregor, Twitty, and Glenna were also covered in blood though he knew none of them had been injured. Ambrose nodded to all of them, then was shocked when all of them bowed to him. \"For the glory of the Realm we have victory today.\" Roth stated as the rest of them nodded.\n\n\"I am glad the realm is still here to protect. Though it is a shame that my coward of an uncle was so afraid to be here today. I vow that we will end his life soon!\" Here Ambrose had raised his sword roaring at the sky.\n\n\"We four knights re-pledge ourselves to you the king to bring that to reality!\" Roth said as the others all nodded.\n\nAmbrose rubbed his whiskers a moment as an idea started to form. Turning toward all four of his knights wives he smiled. \"It has never in the history of the realm existed, though I think it's about time that it did.\"\n\nAll of those before him had questioning looks on their faces from what Ambrose had said. Turning back toward his knights he stated. \"I wish to make all of your wives, knights also, in order to train those females that wish it. Though I am afraid that there is no name for a female knight. I remember at one time on earth women were called Dames, I don't think that will work here. Hmmm I may have to give this more thought.\" Ambrose said more to his self than the others.\n\nAll of his knights were staring at him with their mouths hanging open. \"You do realize sire that if you do this there will be no living with them.\" Roth whispered to a shocked Ambrose.\n\n\"We can all still hear you mate!\" Roth's mate growled.\n\nRoth backed away slowly as his mate advanced on him. \"You know I meant no disrespect Wrena!\" He said as she still advanced a half smile starting to dominate her features.\n\n\"You best remember mate that my skills are on a par with yours!\" Wrena purred as she quickly caught her mate rubbing her face against his. \"Plus I have skills that you were never able to beat!\"\n\nRoth's face showed shock then he nodded, \"Yes I remember those skills. I believe that was the reason we had so many kits to start with!\"\n\nA sly smile lit up Wrena's face as she nodded, \"I know you aren't dead mate. I still posses those skills if you wish to see some time.\n\nAmbrose had been watching the whole time shaking his head. Then suddenly another idea came to him. \"I need all four of my knight's mates kneeling before me. For the service that you have given the realm, one of your queens, and your king I wish to award you.\"\n\nAll four of the females and their mates turned to stare at Ambrose with wide eyes. All four females quickly kneeled before Ambrose their mates standing behind them. Drawing his sword Ambrose stopped before the first.\n\nTouching the sword to each of her shoulders he stated, \"Arise Paladin Wrena, mate of Roth, first female knight of the realm.\" Moving to the second he repeat the motion, arise Paladin Dawney, mate of Gwayne, first female knight of the realm.\" Both female's mouths were hanging open as Ambrose moved to the third.\n\n\"Arise Paladin Mileen, mate of Thomas first female knight of the realm.\" Ambrose said then stopped.\n\n\"It's about time a male recognized our skills.\" She whispered to Ambrose.\n\nNodding to her Ambrose moved to the last female. \"Arise Paladin Cetana, mate of Gregor, first female knight of the realm.\" Stepping back Ambrose addressed all four. \"I hereby charge all four of you with the safety of the queen.\" Here he looked back at Twitty and Glenna, \"possibly the other two queens when they are with kitts.\"\n\nThis of course raised several smiles from both Twitty and Glenna along with the four Paladins. All of his knights were also smiling 'til Ambrose slightly growled. \"Is something wrong sire?\" Roth asked surprised.\n\nLooking at all ten of them Ambrose stated, \"I said WHEN they are with kitts. Right now that isn't too much of a possibility. Not 'til the constant threat over the crown exists.\"\n\nBoth Twitty and Glenna's face dropped a moment then they started to smile wide again. He had finally agreed that they would have his kits! Finally! He had stopped denying that they would ever have any!\n\nAmbrose turned looking at the sheer carnage that was spread out over the field. A great many people were starting to slowly make their way onto the field. There were a great many shouts as a lot of people were angry that the lord Conrad's troops had tried to go against the king.\n\nFinally satisfied Ambrose whispered to Roth a few moments then turned toward the palace. Roth had already called the rest of the troops watching as they started to clear the field, then he turned and hurried after Ambrose.\n\nThey had all just reached the outer walls of the palace when they heard an approaching star cruiser. Growling as he looked up Ambrose saw that his own fleet was responding, several ships moving to intercept the ship. A moment later Ambrose received a call.\n\n\"Sire?\" Came the annoyed voice of Mikos. \"I have a Commander Jankuis asking permission to land. I told him to wait in orbit though he refused.\"\n\nRoth was almost doubled over trying to control his laughter. \"I fail to see what is so damn funny, Roth.\" Ambrose growled.\n\n\"I apologize sire, it's just that Jankuis has always been this impetuous. Let me speak to him before you berate him sire.\" Roth said as Ambrose told Mikos to put the male on, then handed the com to Roth.\n\nSmiling a moment while winking at the others Roth launched into his tirade. \"Jankuis! Are you trying to destroy a Mandrian star cruiser?\" Roth roared. \"I am sure that Sub-king Typree wouldn't appreciate that!\"\n\n\"I am here on his orders to provide support for King Ambrose! Do not lecture me about bold, ill conceived battle plans Roth! As I remember that I almost had you on my sword the first time we met!\" Jankuis spit back at Roth.\n\nSnatching the com Ambrose calmed a bit then spoke, \"I cannot fault you following orders. Not following orders that I have set down here though could very well have you blown out of the sky!\" Thinking a moment Ambrose told them to go land.\n\nMoving toward the palace again they were all surprised when the Mandrian star cruiser landed between them and the battle field. Looking back Ambrose shook his head, he'd have to have a few choice words with his cousin after all was said and done. Even as they watched the door started to open then there was a yellowish streak leaving it. Less than a moment later Ambrose was knocked off his feet, all his knights, and paladins drawing their swords.\n\n\"AMBREE!\" Yelled the young Lion clan female. All of his knights, plus Ambrose's mates groaned when they saw that it was Adina Maxor, Sub-princess of Mandria.\n\n\"Adina!?\" Ambrose roared. \"Does your brother know you are here?\"\n\nA sly smile crossed her features as she whispered, \"Do you really think he'd have let me come if he knew?\"\n\nGroaning Ambrose got up looking at all his knights and his mates. Then he saw that his paladins and his third mate still had their swords drawn. \"It's alright, this is my cousin. The Sub-princess of Mandria, Adina Maxor.\" They all were opened mouthed but quickly sheathed their weapons."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "body modification",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cat-fight-ch-15-battle"
}