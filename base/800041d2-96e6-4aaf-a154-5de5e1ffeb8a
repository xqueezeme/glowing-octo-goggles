{
    "title": "How I Discovered My Messy Fetish",
    "pages": [
        "My name is Misty. I'm currently in my fourth year of college, attending the University of Michigan. I've been living up to the high standard I've set for myself and everything has been going especially well, except for one thing. I recently made a discovery about myself that I've been rather ashamed of.\n\nI've always been a well behaved girl with a strong set of morals, or so it appears. I've lived around religion my whole entire life, and never strayed much from the way I was raised. I grew up in a strict Christian household with no other siblings. I guess you could say I was spoiled because of this. If I wanted something, all I had to do was ask nicely and nine times out of ten it was mine.\n\nI wanted to escape this, though. Even though it has its advantages at times, I was so sick of being looked up to as the prim and proper church girl that everyone aspired to be . It was an image I hated living, more and more with each passing day.\n\nWell, a few weeks ago I got my wish. I've been on a high ever since.\n\nWhen it comes to sexual desires, I've had them for a long time. I used to love masturbating whatever chance I got; in my own bedroom, public bathrooms, outside, you name it. I knew from early on I got off on doing it in public or sneakily with other people around. This is what led to me discovering my newest fetish. Yeah, fetish. I have officially come to terms that what I'm about to tell you is my fetish. I fucking love every minute of it too! Wow, I just have to say it feels so good to swear like that. It actually is making me kind of wet just even typing about this.\n\nGoing against how I've always acted is what starts making me feel worked up. I never cussed much at all growing up. To be able to say \"fuck\" so freely and not care about it - I don't know. There's just something about it that appeals to me because it is going against everything I was taught.\n\nOne night a while ago, I was in my dorm room snuggled nicely under the covers. It was about 2 am and I knew my roommate was going to be out for the night. I had my laptop in front of me, on-top of the covers and was in the process of navigating to my favorite porn website. A typical Saturday night.\n\nPorn. I fucking love porn. I loved all kinds, but the anal category was what really got to me. I loved seeing a woman taking it deep in the ass, seeing the look in her eyes while she was cumming. None of that fake shit, either. Even more, I loved finding real videos of women pleasuring themselves with fingers or a toy in their ass. I knew I wasn't a lesbian and I never had been in my life, but for whatever reason I was extremely turned on by watching women do this. As for myself, I had never tried anything on my own ass yet. I was awfully curious, though.\n\nThat night, as I laid under the covers trying to find a video, I happened upon a sexy looking brunette woman who was in the process of lubing up her fingers, getting them ready for her asshole. I felt my legs spread apart automatically under the blankets and I could already tell I was wet, even through my panties. The anticipation of how good it would feel to cum, in itself, was enough to turn me on. Sifting through the videos, of all these slutty women acting out their filthy fantasies, amped it up even more.\n\nAs I watched the big titted blonde's fingers playing near her ass, suddenly a website popped up in front of me. I thought it was one of those annoying ads at first, that it had slipped through my ad blocker, but I was wrong. A video player came up with the title \"Woman gets off while pushing\" above it. Pushing? Curiosity got the best of me, and hoping that it didn't give my laptop viruses, I pressed the play button daringly.\n\nIn front of me, I saw this woman in my exact scenario, laying on a bed, about to feel herself through her panties. What was weird, was she even looked like me! I had a curvy body, dirty blonde hair and plump boobs which contrasted my curvy hips nicely. I was not super skinny, but nowhere near fat either. The only difference between me and this woman was the color of her panties. My panties were a light blue, hers were white. I felt like I was looking at myself. The video was blurry enough that I couldn't make out her face too well.\n\nIt appeared that she didn't know the camera was on her. It looked like one of those night cams people use to monitor their houses while away. I immediately found that sexy, the voyeuristic aspect of it all. The fact that she was starting to touch herself also did so much for my increasingly wet panties. I decided to let my hand start slipping down under the covers, to tease myself just a bit.\n\nI matched the movement of the woman's hand to my own, feeling the shape of my pussy lips ever so slightly through my panties. As soon as my finger tips brushed against them, it sent a shiver through my body and I felt my clit start to harden. I wanted so much to just start fucking myself with my fingers, but I withheld and just kept playfully touching.\n\nAs the woman on the video kept doing the same kind of movements, she stopped. In my headphones, I heard what I can only describe as her start to strain. It sounded like she was constipated or something! This caught me completely off guard, but at the same time, it turned me on. I was so confused at this moment because I didn't understand why I felt so horny over hearing and seeing this random chick pushing... but I knew my pussy didn't lie when it came to being turned on.\n\nWatching eagerly, I saw the woman's panties start forming a wet spot at the top where her pubes were, trickling its way down to where her fingers were picking up intensity. Was she peeing? \n\nShe pulled the panties to the side, and lo and behold I saw her lovely pussy spurt out a big stream of piss that shot nearly half way across the bed. My pussy started to pulsate, now.\n\nI paused the video, right as the woman was letting her panties slide back over her pussy, sopping wet. My own pussy was in a fit of ecstasy. I wanted to cum right then and there because of how fucking dirty this woman was being, without any care in the world. She had just pissed all over her panties and bed on purpose, and was clearly getting off to the taboo act. There was something so enticing about even the thought of such a nasty thing.\n\nMy heart raced at the thought of doing something so dirty. I focused my attention down to my bladder, and immediately realized I actually had to pee, pretty bad actually. Should I really try to piss right here, under the covers and through my panties?\n\nI kept second guessing myself, thinking of how potentially messy it would be and about the cleanup after, but then the emanating horniness came back. I can only describe it as something taking a hold of me, not giving a fuck about how messy it could get. The feeling extended away from my tits, down the front of me, and straight to my pussy and my heart pounded all the more harder.\n\nThe sheets of my bed were a dark hue of blue that contrasted the blanket over me, which was a pale white. If I really did pee, I thought it would be better to only release a little bit so that way it wouldn't be as noticeable. My cover, more than anything, would be the issue with the stains I was about to cause. I didn't care though.\n\nI started putting pressure on my pussy, feeling the familiar feeling of taking a piss. As it was just about to come out, I hesitated a moment. The feeling I felt was indescribable. I felt such an insane rush of euphoria and naughtiness, it was empowering! It was such a lethal mix of sexual excitement, I couldn't contain myself much longer. My hand was pressing tight against myself, my fingers wrapped tightly on my pussy.\n\nA few seconds later, I felt the first sign of droplets start to form. My pee was starting to come out, and I absolutely fucking loved it. It was a slow stream at first, just enough to wet the front of my panties and then I felt it on my hand. As soon as it touched my fingertips, my pussy gave a hard throbbing sensation. Was I really doing this?\n\nIt was as if my thoughts couldn't catch up fast enough to what was happening. All I could picture was the woman in the video I still had paused in front of me, acting out all her same motions. My pee started to come out heavier now, which made me clench my bladder muscles. It came to a halt. The pressure, wetness, and heart palpitations were all enough on their own to make me cum harder than I ever had before, but I still somehow held off.\n\nI wanted to see the mess I made. I reached over to the night stand beside my bed, and snapped it on. As I did this, I felt a wet sensation on my hips when I rolled to my side. I was in a small puddle of piss. I am such a filthy girl. Misty, you are so fucking perverted, pissing yourself while watching other woman play with their pussies.\n\nI wanted to cum so fucking hard. I knew that this orgasm was going to be one of the best I ever had, but I was persistent in increasing the sexual tension that plagued my whole body. My nipples were rock hard, poking out through my white T-shirt. The end folds of the shirt were damp from the same piss puddle I was laying in. My body had a new craving I never knew I needed - to be filthy, dirty.\n\nIn the dim glow of the light, I looked down and saw my soaking wet panties. I hadn't released all my piss, because I still had the last \"normal\" part of me holding me back. The puddle that had formed around my ass was now almost fully soaked through the sheets, into the mattress itself. There was a dark patch that spanned just a bit wider than my hips, and it was clearly noticeable even in the low light and dark sheets. I felt a bit ashamed but it actually turned me on even more, if that was even possible at this point. The shame seemed to fuel the ever growing fire of horniness.\n\nThere was no end to the pressure that had been building inside my groin, my pussy, all night. I decided to click play again, on the video of the woman. I started rubbing my clit through my panties, my hands wet from the mixture of pee and cum now starting to leak from my pussy. I was edging so close to cumming, but didn't allow myself.\n\nI now matched the woman in the video pretty much spot on. The only difference is she kept continuing to pee while her hand became more aggressive, her fingers occasionally disappearing underneath her white piss soaked panties. I followed in stride.\n\nI slipped my fingers into my pussy, and almost exploded cum. The combination of fucking myself with the tightness from my hyper sensitive pussy, led to a pure swell of hormones. The rest of my pee gushed out, and I didn't even care anymore.\n\nThe girl in the video started moving differently again. Her fingers continued to make small circles around her clit through her panties while her other hand was simultaneously fingering harder and harder. Then she did it.\n\nYet again, I heard the same familiar straining but this time I watched as her panties started developing a slight bulge at first, growing into something even bigger as she continued pushing. I realized at this point that she was shitting directly into her panties, without a care in the world, and I fucking loved it. She continued to finger fuck herself. Was she really getting off while doing it? \n\nA pure mixture of taboo naughtiness, going against everything that I was taught not to do, and filthiness filled my senses as I watched this hot blonde chick continue to shit, while furiously masturbating her pussy. The fact that she supposedly didn't even know she was being filmed made it all the more kinkier. This must be her dirty fantasy she lives when she is all alone...\n\nMy pussy couldn't handle much more. I felt so ashamed that I was so fucking turned on over watching something so disgusting and dirty, but I could not deny the way the throbbing was escalating throughout my entire body. I started wondering why I was so attracted to this whole thing, and had to almost pinch myself. I reached a state of being turned on that I had never felt before, and I fucking loved it. My heart was not slowing down, either. Fuck it.\n\nWanting so desperately to experience a next level orgasm, a new high, I decided to do exactly what the blonde was doing on my screen. I started pushing as hard as I possibly could, all the while fucking my pussy with my fingers. In, out, in, out... I was nearing the point at which I was going to have to catch myself before I came.\n\nThe pressure on my asshole was building so much, and I could feel the first signs of it starting to open up. It sent a shiver throughout my entire body, and my lower fingers immediately started to explore my asshole, but just barely. I didn't know at this point how I would actually feel about touching my own shit, but I didn't spend much time thinking about it either.\n\nSo many different things were happening all at once, it was overwhelming to my senses. I could hear my heart beating in my ears, almost matching the motion of my fingers slipping into myself. A bit more piss started squirting out of my pussy again, from the immense pressure. I took a deep breath, and gave the hardest push I could muster.\n\nI felt the first signs of my shit start pushing out, making contact with my panties underneath my ass. Feeling as though my heart, pussy, and brain were going to explode, I decided this was it. I started pushing as much as I could, not caring how fucking messy it got and just decided to go for it. I started cumming as soon as I felt my shit start bunching up underneath my ass cheeks, my panties getting so tight. What the fuck are you doing, Misty? You deserve to be this messy, it shows how filthy and disgusting you like to be.\n\nThe smell started reaching my nostrils as I came. It only added to the intensity. It let me know just how dirty I was really being, and I kept pushing even when I knew I had no more left. I had a massive pile of shit mashed up beneath my ass, and it felt so fucking good. I didn't stop after I came the first time. I was in such a state of exhilaration that I immediately went for another. My clit was so hard it felt like it was going to fall off my pussy, and I could feel that some of my shit had pressed itself against my lower pussy lips. I could've sworn that some was most likely on my fingers now, but I didn't even care. I had an intoxicating feeling to be as dirty as I possibly could. It felt like a primal beast had taken over my body, and all I wanted was to feel filthy. I came again, this time pulling my panties tight against my ass at the same time, feeling my shit clump even tighter against me. I was such a fucking mess.\n\nI was shivering, as if I was out in a cold winter night with no clothes on. My body was shaking hard, pussy sore to the touch. I noticed every time I had cum, I pushed, even though I knew my bowels were completely empty at this point. Something about my asshole trying to open up, coupled with watching the blonde woman's asshole doing the same was helping me get off so fucking hard.\n\nThe shit was so warm all over my ass, up on my pussy a bit, and spread all over my panties. The smell filled the room, especially because I was still half way under the covers. I decided to take a quick look down and was so thrilled and turned on by the sight.\n\nMy own shit was leaking out of the sides of my underwear, slightly onto my bed sheets. Piss was everywhere, even on the front of the laptop. All the while, the girl on my screen finishing her last cum session. What have I even done? What am I? I am so fucking dirty, I love this filth in my panties.\n\nI held my fingers up in front of the nightlight. There was a bit of shit on them, but not much. Even though my pussy was completely used, I felt one last shiver and decided to finish with the blonde on my laptop screen, using my shitty fingertips. In the moment, I didn't care how dirty it was or how risky it was with getting UTIs, I just wanted to have one final cum.\n\nI could hear the woman in the video's asshole pushing, and did it again myself. I was already so dirty, I didn't care. I started cumming when I heard her moan, it rushing through my body as her eyes rolled back and her pussy started squirting through her panties. I heard her let out some farts at the same time, but could tell she was empty also. I followed exactly what she did.\n\nI laid there, staring up at the ceiling in a state of pure ecstasy. I was so worn out from how hard I came, and how fast my heart was beating thinking of how dirty I was being, I could barely move. I couldn't believe what I had done that night. Not only was it completely disgusting, but it was also so messy, I knew I would have a lot of cleanup to do. This was the part I dreaded.\n\nThis night was a very important part of my journey of self discovery. It let me know how turned on I could get over something so insanely taboo, and how much fun it could actually be. I got away with it, too. \n\nLater on the next day, after I managed to clean the sheets and covers, my roommate actually told me she thought there was a sewage problem in our dorm because there was a weird smell! Hahahahahahhaahhahahaha! I laughed so hard to myself that night.\n\nThere will be many other nights like this, I can promise. After writing about what I did, I had to resist the temptation to masturbate several times. I might've slipped a hand down occasionally in some of those really detailed parts though... and I definitely couldn't help but pushing just a bit, teasing myself. I wouldn't be surprised if my panties are a bit messy right now, but oh well! \n\nI hope you all enjoyed this, and I look forward to posting more of my dirty adventures I plan to have in the future! \n\nLove, Misty"
    ],
    "authorname": "NaughtyMisty",
    "tags": [
        "messy play",
        "panty pooping",
        "panty shit",
        "taboo",
        "scat",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/how-i-discovered-my-messy-fetish"
}