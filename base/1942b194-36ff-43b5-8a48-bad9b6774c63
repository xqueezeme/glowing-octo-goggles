{
    "title": "This is Dead Set Serious",
    "pages": [
        "(\"Sparrow fart\" is very, very early in the morning.\n\nUte- what some call a pick up we call a ute, short for utility. We really struggle to pick them up. We have technology called steering wheels. We use them to change lanes for example. We admire people who get out of their pick ups, run beside them as they pick them up, move them to another lane, then get back in, all at a hundred kilometres an hour without raising a sweat. Truly, I dips me lid.\n\nA fag is a cigarette.\n\nSunnies are sunglasses.\n\n\"Dead set serious\" means it is absolutely real and true, not a word of a lie.)\n\nOoOoOo\n\nI was trying to produce lean pork and was using wild pigs, trying to get some of their genetics. They were bloody wild, angry bastards, I'd had to strengthen the sties to keep them in. Occasionally they got out and wrecked everything, including the vegie patch. They were difficult to catch in the wild. It was worse in my backyard because they had no fear of me and charged with their tusks ready to slice me open. I found the best method was to let them eat what they wanted and they'd gravitate back to the pig shed when they were looking for grain to eat.\n\nTrying to diversify, I used the pig shit to get methane for generating electricity and then used the shit after to grow vegetables. It worked well. I was developing a big market garden with cabbages, broccoli and cauliflower. On a rotation basis I grew cucumbers and tomatoes. Slowly, I felt I had something to offer but it was a hell of a lot of work.\n\nPixie Anne entered me into a competition about diversification. It was embarrassing but she was determined. I was embarrassed because it wasn't my hand that filled out the forms. I didn't post it. I did nothing about it. She wrote about me.\n\nThe competition had funny timelines. It was announced on Boxing Day. Entries were submitted from Australia Day to Valentines Day. The winners were announced on George Washington's Birthday. The winners met the Minister on April Fools Day. The subject was diversification.\n\nPixie Anne's entry won the main prize. The kids wanted to go but I couldn't afford to pay for their flights. They were happy with the compromise of the boys going to stay with their Uncle and the girls going to stay with their Auntie. The plane wasn't big enough to take all of us any way.\n\nOn my way to the capital, I felt like a fool, I hadn't even entered the competition. It was so appropriate on April Fool's Day. Early in the morning, before sparrow fart, Pixie Anne dropped me off at the airport. She had an appointment to attend and I had to wait for the flight. While waiting I got a phone call saying that the meeting was no longer on. The Minister had died. Then there was an announcement over the intercom that the plane needed repairs and at least a three hour wait would be necessary. Why they couldn't just tell meI'll never know. I was the only passenger.\n\nI rang Pixie Anne but she wasn't answering and I decided I'd walk home. It wasn't far. I left my bag there and I'd pick it up later. It was already becoming a fiasco, so appropriate for April Fool's Day.\n\nI walked up the drive in the early morning sun. It was difficult to believe but I saw a brand new, red, sports car parked near the house. It looked like Shithead Brown's car. I never liked him. He was a rich bastard who'd got lucky rather than earned it and liked to let us battlers know. Why he couldn't drive a ute like every one else no one knew. There was no sign of the driver. I was about to walk inside the house when I stopped. I could see clothes on the kitchen floor. Some were Pixie Anne's and the others were new to me.\n\nI walked around the house, looking in the windows. I thought I could hear giggling. Then I looked in the window of the bedroom I shared with Pixie Anne.\n\nPixie Anne was on the bed and on top of her was Shithead Brown. Neither had clothes on. Shithead was riding her like he was in a rodeo event. She had her legs and arms around him trying to hold on. It was a hell of a shock.\n\nI cried. I was going to break the window and get him. The problem was he was a big bastard. It was stupid to attack him and there had to be a better way.\n\nI went to the shed and got iron filings from around the electric hacksaw, went back to the house and sneaked into the kitchen. I sprinkled the iron filings in his underpants and got some chilli powder from the spice cabinet to sprinkle on top. If the bastard wanted spice I'd give it to him.\n\nThen I went to the piggery and connected the pipe to the sewage tank, pulled the hose to his fancy car and stuck the end of it through the car window. I turned it on. The hose had a big capacity with a quiet motor that choofed the shit out. It took seven minutes to fill the car. A wonderful piece of engineering, the car didn't leak at all. I turned the hose off and put it away. While there I turned off the power and water to the house, let the pigs out and went to sit and wait. It had the promise of being a very interesting April Fools Day.\n\nMy phone rang, the minister had recovered. Such is politics. He was no longer dead and the meeting was to go ahead. The phone rang again. The plane had been repaired and would be flying in an hour. I thought about it and decided to go. I walked back to the airport and was just in time to catch the plane. No one had missed me. It was the only time living near the airport was an advantage.\n\nO0O0O0\n\nThat evening I phoned Pixie Anne and enthused about meeting the minister. There was a strange tone to her voice. I listened for background noise and could hear pigs grunting and squealing in the background. I asked how she was coping and she said there were no problems. I knew she had problems. I could hear the pigs but said nothing.\n\nNext evening I talked about meeting the staff in the Minister's office and their attempts to learn about what I was doing on the farm so it could be summarised for the media in \"bite size grabs\". The reporters were there and took a few pictures. The Minister was in every picture. Pixie Anne was quiet and I could hear the pigs.\n\nNext day I went to a few places to look at things for the farm. When I phoned Pixie Anne that evening I knew things weren't the best for her. She didn't mention the pigs were out. I could hear them though, busy in the garden. I knew Shithead was still there, not wanting to risk himself with the pigs. I could barely keep from laughing. Lucky I didn't. I kept thinking that if he could see his flash car he'd see the shit at the windows. It would be fairly ripe by now. There'd be a big build up of methane inside. I wondered when it would explode. Wonderful engineering in luxury sports cars. I thought about how they were washing themselves and guessed they were using the chilled water in the fridge. It was a lot of fun to think about. The water wouldn't be so cool now though.\n\nNext day there were farm tours we all did and it was interesting. Not as interesting as my farm though. They all knew how to talk. I could have told them a better story but kept quiet. I didn't ring her that evening, it was expensive and I'd see her in the morning.\n\nI was pleased to be on the aeroplane the next day, glad to be out of the capital. The little plane bumped along the runway and stopped beside the asphelted \"alighting zone\". As I walked off the \"tarmac\" into the airport, a small, pretentious tin shed, I had a feeling of being watched. No one said anything though. Fuckwit Johnson was there. He worked for Shithead, jobs aren't easy to get. I yelled \"g'day\" to him, \"so pleased to be home\". He looked nervous. I could see his new hair cut, bald at the front and a mullet at the back. I wondered where his eyebrows had gone. I haven't kept up with fashion. He came to me, said \"g'day\" and offered to carry my bag.\n\n\"She's right, mate,\" I said to him and together we walked out of the airport. He wasn't very talkative at the best of times.\n\n\"How's it going,\" I asked.\n\n\"Well, not so good, really,\" he said.\n\n\"Why? What's up?\" I asked.\n\n\"You'll be bloody surprised,\" he said. I looked at him and he wasn't at all comfortable.\n\n\"Why don't you tell me about it?\" I asked.\n\n\"Well. We've all got witnesses, so it wasn't us.\"\n\n\"What?\" I asked.\n\n\"You were in the capital, so we know it wasn't you.\"\n\n\"What are you talking about?\" I asked.\n\n\"It's a long story, I think it's best you sit.\"\n\n\"Is Pixie Anne okay?\" I asked.\n\n\"Yep. Well, sort of. She can't stop crying.\"\n\n\"What happened,\" I demanded to know.\n\n\"Well, your pigs got out. She's been barricaded in the house since you left.\"\n\n\"Ah, shit, how did that happen?\"\n\n\"Well, it's not all the story. Yesterday, Shithead rang and asked me to bring the gun and plenty of rounds. I ran out of rounds and had to get more. I shot your pigs. I had to. Pixie Anne and Shithead couldn't get out of the house.\"\n\n\"Shithead was in my house? With Pixie Anne? You shot my pigs?\"\n\n\"Yep. Sorry mate. I didn't want to but they were aggressive.\"\n\nI didn't say anything but clutched my heart as he talked.\n\n\"They had no water inside, no electricity, things were desperate. You know Shithead's car?\" I nodded my head for him to continue. \"Well, it was full of shit.\"\n\n\"I always knew that, Fuckwit,\" I said to him.\n\n\"No. Really, it was full of pig shit. So much pig shit the front windscreen popped out. There was pig shit all over the car. It stripped the paint and rusted the metal. When I opened the car door it fell out and filled my gum boots. I was having a fag at the time. It was very unexpected.\"\n\n\"What was unexpected, Fuckwit?\" I was being sympathetic, while anticipating what he was going to say, hoping it was going to be about Shithead but knowing it would be about him.\n\n\"The explosion. There was a bloody huge ball of fire. Look, it even cleaned the hair out of my ears,\" and he leaned over towards me so I could see.\n\n\"It must have been a hell of an explosion,\" I said to him. \"Bloody lucky that was all it did.\"\n\n\"Yeah. Lucky I had my sunnies on. There was a hell of a lot of pig shit in that car. The explosion threw it all over me. It probably stopped me being burnt even worse. I had to go home, shower and change. I wasn't allowed in the house until I'd stripped and been washed under the garden hose. My ears are still ringing though.\" I could see the outline of the sunglasses on his face. I looked at him and asked.\n\n\"You're kidding, right?\"\n\n\"Nah, not kidding. I'm sorry. You know your vegetable garden? It's gone. The bloody pigs ate it.\" I looked at him and couldn't say anything. \"Pixie Anne and Shithead were prisoners in your house for three days before I shot the pigs. Fifty four pigs.\"\n\nI knew there was more to come. This was turning out to be a very interesting April Fools Day.\n\n\"Where are they now?\" I asked.\n\n\"Hospital,\" he said. \"The ambulance got them yesterday. Shithead's balls were the biggest I've ever seen, all raw and sore, red and inflamed. He couldn't walk. They're too painful to have anything touch them. His wife is with him. She keeps touching them though, wondering when they're ready to go and he howls every time. She told him the doctors are thinking of removing them. He's not happy. I didn't see a lot of Pixie Anne. They had a tea towel over her.\"\n\n\"My god,\" I kept saying, imagining what a tea towel would cover, what it would leave exposed and what \"a lot\" meant. I knew Shithead's wife was probably getting her revenge.\n\n\"No one knows what's wrong. They just know it isn't good.\"\n\n\"Hell,\" I said, unable to think of anything else to say.\n\n\"The boys are at your place now. They've dug a hole and we're burying the pigs. We took Shithead's car, loaded it onto a truck with a fork lift and it's at the dump. It's a write off. No one can figure how the shit got in it. There's been something very strange happening at your farm,\" he said.\n\n\"You're telling me.\" Then I asked, \"This isn't an April Fool's joke is it?\"\n\n\"Nah, mate, this is dead set serious. Nothing funny about it.\" I looked at his face again and almost laughed, so pleased he'd only lost his hair and had his face reddened. It could have been much worse. It would still have been a hell of a surprise.\n\nBy the time Fuckwit told me everything I was half way home. Then he remembered his ute and asked if I'd be okay while he went back to get it. I told him I sure didn't like what I'd heard but I'd have to be and reminded myself to at least get a box of chocolates for him later. So, he turned around and walked back to the airport while I continued on, laughing my arse off and getting ready to be so very serious when I got there."
    ],
    "authorname": "weftandwarp",
    "tags": [
        "april fools",
        "sneaky",
        "revenge",
        "affair",
        "while away",
        "pigs",
        "sports car",
        "nonerotic"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/this-is-dead-set-serious"
}