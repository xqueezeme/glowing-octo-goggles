{
    "title": "Senior Year Memories Ch. 24",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\n(Author's Note: In the beginning, this was going to be one long chapter, but after a lot of work and realizing that just wouldn't work this chapter will be broken up into three separate parts. There's going to be a lot of things going on with a lot of characters, but since this is sort of what I'd call the \"season finale\" for the first half of Senior Year Memories, I wanted to make this one nice and epic and truly filthy. I'd like to again thank MisterWildCard for acting as a second set of eyes on this chapter, for his honest editing and fantastic suggestions, and for the creation of the character Cleo Price, who may not see much action yet but shall soon. Please check out his story, \"Brooke's Wild Ride\" in Erotic Couplings, as it acts as a canonical side story to Senior Year Memories starring Regan Hills High's favorite blonde cheerleader.)\n\nPreviously, on Senior Year Memories: 18-year-old Ryan Collins' quest to do something nice for each of the nineteen women he's had sex with this senior year before Christmas finally came to its conclusion. After giving cheerleader Kaitlyn Pruitt a test that boosted her confidence in her own understanding of their tutoring and handing a stack of interviews to school paper editor Nadia Barclay, Ryan did his best to help bring out the burgeoning artist in uptight religious girl Sophie Cusack on Christmas Eve. Sealing this new arrangement with hot sex, Ryan finished off his good deeds list by arranging for a large number of friends to help volunteer at a Christmas Eve event that Jade Alvarez was helping run. With the list complete (and a box of sex toys gifted to him by all his new friends), Ryan retired for a quiet Christmas Eve at home with girlfriend Josie Wong in the days before she'd have to travel out of town to visit family.\n\n***\n\nIn the days after Christmas, I was gifted with something I hadn't known for a very long time: peace.\n\nI'd spent so long focusing so hard on a big plan I often thought I wouldn't be able to pull off, and once I had... I was at peace. I'd done what I'd set out to do, I'd made nineteen women who'd meant something to me these past two months happy, and I was finally free to just go on living my normal life.\n\nWell, as normal as things had gotten since everything changed after September.\n\nWith so many of the people I knew on vacations with their families, or busy with other holiday activities, in the days after Christmas I was on my own for a good few days, and don't think I'm crazy but I kind of liked it. I loved all my time with my new friends, and I'll never criticize all of the sex I was getting, but there were occasions where I wanted a little more time to myself, and this allowed me to recharge quite handily.\n\nAnd that's not to say I was entirely alone, either. Dad was around more than he usually was, and I was Skyping every so often with Rachel McNeil, who was always one of my favorite people to chat with (and have some occasionally very creative cybersex with; man that girl was kinky), and texting as much as humanly possible with my girlfriend, Josie Wong. She'd left the day after Christmas with her family to visit her ailing grandmother in Hawaii, and I felt her absence pretty hard in this period. I loved her, and in spite of enjoying my free time, I wanted to spend my every free moment with her, and since this was the first time we'd been apart for this long, well, I was missing her something fierce.\n\nThe most interesting of my long distance connections was also perhaps the most bizarre, in that we were only a short walking distance apart. For a little while now, I'd been exchanging messages with the new girl who'd moved into the house next door to us. I didn't know her name any more than she knew mine, but with our bedroom windows across the way from each other, we'd taken to exchanging notes in the window. Sometimes it was only one a day, other times we actually managed brief exchanges.\n\nI'll admit I was a bit smitten with her, the distance between us adding a little extra thrill to our correspondence. That she was gorgeous didn't hurt either. A pretty black girl with delicate features, big brown eyes and perhaps the sweetest smile I'd ever seen, she was the kind of girl you knew was capable of being a heartbreaker if you let her. With a lean, tightly athletic body, long legs and an impressive afro of loose, dark curls, she had a way about her that left an impression on sight alone.\n\nAside from her being beautiful, black, and having some truly impressive hair, I'd learned that she was 18, had moved to Regan Hills with her mom after her parents divorced a few months back, and that she seemed to take great amusement in the fact that she'd seen a number of girls come in and out of my house since we'd been neighbors. It was hard to explain via notes in a window what exactly this year had been like for me, but since she seemed to mean her jibes in good humor, I took them in kind.\n\nI couldn't tell you why we hadn't exchanged names yet, or even introduced ourselves since we lived next door to each other, but there was something kind of fun about getting to know someone without actually knowing them. So many of the people who'd been a part of my life this year were women I'd known my entire life, but getting to meet and know new people was still a weirdly intimidating prospect. Exchanging notes like this, it was a stress-free and fun way to get to know someone new.\n\nEven if her sense of humor got a bit pointed, sometimes.\n\n'3 DAYS WITHOUT A NEW GIRL, THAT A RECORD?' she wrote on her small white board, looking at me through the window with some amusement.\n\nAt the rate I was going through printer paper, I was going to have to make a trip to Target to get a white board of my own. I scrawled my response, 'NO, THE 18 YEARS BEFORE THIS ONE GOT THAT BEAT'.\n\nShe laughed, writing a new note. 'POOR THING.'\n\nI wrote, 'NOT POOR ANYMORE. HAVE A LOT OF FUN & A GIRLFRIEND. IT'S A GOOD YEAR.'\n\nShe nodded. 'AT LEAST ONE OF US IS HAVING A GOOD YEAR.'\n\nI responded, 'NEW YEARS RIGHT AROUND THE CORNER. TIME TO MAKE YOUR OWN GOOD YEAR.'\n\n'YOU'RE OPTIMISTIC,' she wrote.\n\nI replied, 'IT'S A NEW THING FOR ME, BUT I'M ENJOYING IT.'\n\n'SEND ME SOME OF THAT OPTIMISM ANY TIME,' she wrote.\n\n'GIVE IT TIME. ONCE SCHOOL STARTS BACK UP, I THINK YOU'LL LIKE REGAN HILLS,' I wrote, then pulling a new piece of paper to put beside it. 'IF A GUY LIKE ME CAN HAVE THIS YEAR, PRETTY AS YOU ARE, YOU'LL CLEAN UP, EASY.'\n\nShe smiled a smile I'd come to like, even from a distance. I was hoping to get the chance to see it up close sometime in the near future to confirm that. She wrote, 'WE'LL SEE.'\n\nLooking to add a joke of my own, I replied, 'STOP STALKING ME, AND I MIGHT INTRODUCE YOU AROUND TO SOME PEOPLE.'\n\nShe laughed again. 'NO PROMISES. TRYING TO FIGURE OUT HOW YOU GET SO MANY GIRLS IS MORE FUN THAN ANYTHING STREAMING.'\n\n'I CAN SUGGEST SOME GOOD SHOWS,' I replied.\n\n'OR YOU CAN CLOSE YOUR CURTAINS AND KEEP ME IN SUSPENSE,' she retorted. I'd never left my window open while I was spending time with a girl, but that I'd made my neighbor so curious was exciting in its own way.\n\nI responded, 'AND END OUR CONVERSATIONS? NAH, YOU'RE TOO FUN.'\n\nShe smiled again, a very sweet, friendly, almost fond look. She eyed me for a while before writing, 'YOU'RE NOT BAD YOURSELF.'\n\nMy phone started vibrating in my pocket. When I saw the name on the incoming text, I muttered, \"Speak of the devil.\"\n\nKaitlyn: Back in town. Need to talk and ride your dick. You free today?\n\nI thought about it, then responded.\n\nMe: Free now, come on by whenever.\n\nKaitlyn: Sweet. See you soon.\n\nPocketing my phone, I wrote another note for the window. 'HAVE TO CUT THINGS SHORT. FRIEND COMING OVER.'\n\n'FRIEND or \"FRIEND\"?'\n\n'BOTH,' I replied. 'GONNA CLOSE CURTAINS SOON.'\n\n'AH, RUIN ALL MY FUN,' she teased.\n\nIf she was in the teasing mood, I was more than happy to tease back, 'YOU COULD ALWAYS COME ON OVER IF YOU WANT.'\n\nAgain, she cocked her head from side to side, stroking her chin in mock thoughtfulness. 'TEMPTING. BUT MAYBE WE SHOULD KNOW NAMES FIRST.'\n\nJoking back, I said, 'THAT'S A BIG STEP.'\n\n'RIGHT?' she responded, looking almost a little sad that our conversation was about to end. 'WELL, HAVE FUN.'\n\n'I WILL,' I replied, smiling wryly.\n\n***\n\nWhen it came to having fun, Kaitlyn Pruitt always had a way of delivering. Seeing the goddess standing in our front doorway, even bundled up as she was in her less tight than usual pants and warm coat with its fur-lined hood, clearly cold but still with that mischievous smile on her beautiful face, I was hard almost instantly. Though the outfit didn't flatter her as much as what she usually chose to wear, I knew what was underneath. I knew how perfectly pert her DD tits were, how they felt in my hands, mouth, wrapped around my cock...\n\nI knew she had a tight yet curvy body from her years of cheerleading, with an amazing ass that'd be easy to become obsessed with. I also knew that behind her usually pretty resting bitch face was a girl I considered a friend, who'd helped me come into my own this year and I would be forever grateful to.\n\n\"Hey, Ryan. Your dad home?\" she asked, arching her neck to look inside.\n\n\"No; his dojo's competing with their bitter rivals today, so he's gonna be out for a while,\" I answered.\n\nKaitlyn's smile broadened. Forcefully, she stepped inside and closed the door behind her. Pulling down her hood and allowing her silky black hair to fall about her face, she said, \"Good, because I'm fucking horny and need some serious cock, and I don't know if I can make it to your bedroom.\"\n\nI was trying to come up with an appropriately witty response, but when a girl as hot and so perfectly slutty as Kaitlyn Pruitt throws her arms around you and practically shoves her tongue down your throat, witty responses have a way of dying quick deaths. \n\nWe made out savagely, as if it had been years rather than days since we'd seen each other last, first with her pressing me against the wall, then me her. My hands found first her tits, then her ass, groping her through her clothes as she skillfully pulled all ten inches of my thick cock from my sweatpants and started jacking me.\n\n\"Oh, you've missed me too, huh?\" she cooed.\n\n\"Missed, no. Wanted, maybe,\" I said cheekily, kissing her passionately and squeezing her ass playfully.\n\n\"Well, you're spoiled for choices, me, I just had to spend four days surrounded by family and only family and so much family I couldn't even fucking masturbate. I haven't cum in almost a fucking week,\" Kaitlyn complained, her usual bitchiness coming across in a way it hadn't in quite a while between us.\n\n\"We can fix that,\" I said, dropping one hand between her legs and rubbing her pussy through her pants.\n\n\"You better,\" she said, kissing me desperately, letting go of my cock so she could undo her pants and pull both them and her panties to the floor. From a brief glance, her pussy was as bare and beautiful as ever, but the whiff I got off of her rich cunt told me she might well have been even hornier than she said.\n\n\"We need to talk,\" she said, kissing me quickly. \"There's a lot we need to talk about, but I need to be fucked, please, please fuck me, right now, please fuck me hard, make me cum... please?\"\n\nGrabbing her by the hips, I turned Kaitlyn around and bent her over slightly. She braced her hands up against the wall, spreading her legs as much as the pants around her ankles would allow her while I lined my cock up with her steaming entrance.\n\nSliding into Kaitlyn's pussy, still so lusciously tight, hot and wet, even after all we'd done together, it was like going home. I loved it for how good it felt physically, but even more for how it connected the two of us. Kaitlyn would be the first to admit she wasn't exactly girlfriend material, but the two of us had a unique friendship that defied pretty much any definitions that I knew and was accompanied by some of the hottest sex I'd ever had.\n\nIt may have been unconventional, but damn it if it didn't feel fucking amazing.\n\nWhat we did now, though, with her braced against the wall right next to my house's front door, had very little affection to it. Oh, sure, we kissed and smiled at each other when we could, but both of us were in such a need of release, for human contact, that we weren't much for talking. I pounded into her with long, hard strokes, reaching around to grope her tits with one hand while fingering her clit with my other to help her find that pleasure she so clearly needed. Both of us were only naked from the waist down, pants and underwear around our ankles as we hastily fucked, wanting, needing that frantic release so we could better talk with each other.\n\nIt had been so long for Kaitlyn, though, that her first climax came quickly. Crying out with a sharp burst of ecstasy, she bucked against me. Her legs went weak, almost buckling underneath her. I did my best to hold her up in our awkward position, and it was only through experience and a minor miracle that both of us stayed standing, panting and holding close to each other as she rode out the rest of her orgasm.\n\nI was about to ask if she was okay if I quickly finished myself off, when she helped make that decision for me. At first kissing me long and deep, her eyes full of lust and hunger, Kaitlyn then pulled me out of her pussy. Though I was aching for her moist slit, when she instead turned around and dropped to her knees, taking the entire length of my cock into her throat with practiced ease, I was hardly going to complain.\n\nAs with our fuck, it was a frantic, almost desperate blowjob, the kind that made her eyes water, makeup run, and strands of drool drop down from her mouth onto her coat and the tight sweater clad tits beneath. Kaitlyn looked up at me with the prettiest eyes, blowing me so expertly that I might've cried if I didn't so desperately want to cum.\n\nThankfully, in her expert hands (and lips), I didn't have to wait long. Though I warned her when I felt it coming on, that didn't stop a cocksucker as expert as Kaitlyn. If anything, it only motivated to go harder, sucking and bobbing with a greater intensity, her tongue swirling around the cockhead on every backstroke, playing with the bottom of my shaft as she sucked even more. She was an expert at taking me to the edge, pushing me toward it and leaving me teetering.\n\nI was about ready to burst when she took her mouth off of me entirely, looking up at me oh so sweetly and sticking out her tongue to oh so slightly graze the underside of my cockhead.\n\nThat did it. That set off a stronger orgasm than I expected. Kaitlyn, the skilled slut that she was, kept her mouth wide open and managed to catch quite a bit of it, but that didn't stop the stray spurts that painted her cheeks, chin, even a few stray shots landing on her neck and sweater-clad breasts. Now it was my turn to be the one who had a hard time standing, but the sight of her coated with my cum, holding her mouth open so proudly to show off the lake of cum inside, it was enough to keep me going.\n\nOnce I'd finished, once she'd coaxed the last drop out of me with the tip of her tongue, Kaitlyn reached into the pocket of my sweatpants, pulled out my phone and gave it to me. I took her meaning easily, taking a picture and adding it to my Senior Year Memories album. She'd started it after all, I didn't blame her for wanting to appear in it as much as possible.\n\nWith a good shot of her added to the album, she finally swallowed, then looked down at herself.\n\n\"I think I'm gonna need to borrow your washing machine,\" she said, not at all angry.\n\n\"Yeah. That might have to happen,\" I said, still panting.\n\n\"Then we really gotta talk. You got the time?\" Kaitlyn asked.\n\n\"For you?\" I replied. \"I got all the time in the world.\n\n*** \n\nI started the load of laundry with Kaitlyn's sweater, coat and shirt to be safe, tossing in some of my own clothes for good measure. I'd gotten used to a lot of laundry and cleaning since this year began, more than I was used to, but if that was a sacrifice I'd have to make to enjoy the year I was having, then it was one I was willing to make.\n\nReturning to my room, I was greeted by the luscious sight of Kaitlyn sprawled out on her stomach on my bed. She'd stripped down to one of my old t-shirts and one of her many thongs (today it was navy blue), her long black hair tied back with a hair band. She was facing away from me, giving me and looking at her phone, presenting an utterly perfect view of her glorious ass.\n\nI'd seen it, hell, I'd fucked it more times than I could count, but that didn't make me drool any less at the sight.\n\nI closed the door behind me. Kaitlyn didn't turn at the sound.\n\n\"Thanks for the orgasm, by the way,\" Kaitlyn said, still swiping through her phone.\n\n\"You too,\" I responded, walking up behind her. I ran my hands up her toned legs, savoring the feel as I cupped her ass.\n\n\"You know, I did actually come to talk today, not just to fuck you,\" Kaitlyn said.\n\nI stopped stroking her. \"Oh?\"\n\n\"I didn't say stop,\" Kaitlyn said, turning back and looking at me until I continued, then going back to her phone. \"I... I wanted to see how you were doing, after all your holiday stuff, and Josie leaving, and all that.\"\n\n\"Josie didn't leave,\" I clarified, pulling her thong off and tossing it aside. \"She's just on vacation with her family. And hoping to get a gangbang off the ground while she's surrounded by surfer boys.\"\n\n\"Really? Awesome. That girl always knows how to surprise,\" Kaitlyn admitted, nodding appreciatively. I knew that Kaitlyn and Josie were about as opposite as it got and would never really be friends, but between the two of them, I knew that game understood game.\n\n\"Seriously. And I've been doing good. Keeping things nice and quiet with the holidays. You?\" I asked, parting her legs as I continued to stroke her thighs and ass.\n\n\"Christmas at home with family, the next three days in a second-rate hotel watching all my family remember that none of them likes skiing very much, like they do every year. Having to deal with all the older family asking what my college plans are and not wanting to tell any of them that I haven't got a fucking clue. Fun,\" Kaitlyn said.\n\n\"Fun,\" I agreed, letting my fingers drop to Kaitlyn's pussy and enjoying the sound it pulled from her lips. \"Just tell them you're going to Regan Hills Community College.\"\n\nKaitlyn laughed. \"Yeah, that'd give 'em a heart attack. What do you tell people when they ask?\"\n\nI shrugged. \"Probably that I'm going to Regan Hills Community College. I haven't got a plan on what I wanna do with my life, and it sounds like an easy and cheap way to get some credits out of the way.\"\n\nKaitlyn's eyes widened. \"I didn't mean anything-\"\n\n\"Nah, don't worry about it,\" I said, brushing it off by brushing her pussy with my fingers. \"I've never been fancy, and a good friend who's done the college thing told me it'd be a good way to help me get my head sorted. I can't call that a bad plan, can I?\"\n\nKaitlyn groaned. \"Since you're twisting a couple fingers inside of me, I can't really argue with that, can I?\"\n\nSheepishly, I pulled my fingers from her. \"Sorry, wasn't paying attention.\"\n\nLooking over her shoulder, Kaitlyn smiled devilishly, \"I should get you to not pay attention more often.\"",
        "\"Maybe,\" I agreed, squeezing her ass with both hands.\n\n\"For what I gotta say, I need to keep a clear head, so maybe don't touch my pussy for a little while. Eat my ass, though, and, well...\" she trailed off.\n\n\"Way ahead of you,\" I said, crawling up onto the bed and sliding between her legs. I parted her marvelous ass cheeks with my hands, getting a good look at her tight, puckered little asshole, and unhesitatingly dove in, licking and sucking her forbidden entrance.\n\n\"Mmmm, that's really good,\" Kaitlyn purred, looking back at me appreciatively.\n\nTaking my lips from her hole, I said, \"You wanted to talk?\"\n\n\"Right,\" Kaitlyn said, \"Get eating, I'll talk.\"\n\n\"Roger that,\" I said, diving back in.\n\n\"I know you and Rose are planning on crashing Dakota's New Year's party, and a few of the girls and I thought that someone should prepare you for what you're getting into. So, I'm here, preparing you while I get a really nice rimjob. I'm having a good day today, honestly,\" Kaitlyn said.\n\nRight. That. I'd been told about some of the wild parties the cheerleaders had for some time now, with most of them sounding like truly impressive all girl orgies. I would be a definite outsider in the midst, but with the number of friends I'd made on the cheer squad, it didn't sound like that big a deal to me.\n\nI replied, \"What do I need preparing for? I know you guys, I know about Mouth Parties, I know-\"\n\nReaching back, Kaitlyn shoved my face back into her delectable ass, and I was all too happy to continue pleasuring her.\n\n\"You know some, but you really don't know how things work when it comes to high and mighty cheer captain Dakota Lewis. You've heard about the New Year's Party, but you didn't know that it was gonna start on the 30th, did you?\" Kaitlyn asked.\n\nShe was right, I didn't know that.\n\nShe continued, \"Dakota's parents are out of town for New Year's, and since she loves overdoing things almost as much as she loves being a heinous bitch goddess, she's starting on the night before New Year's Eve. All of us who're coming, we get there then and we're gonna have us a sleepover on the 30th, and then pretty much party all day the 31st. You've never really been to a party before, have you?\"\n\nI thought about it. Homecoming was the closest I'd ever come, and that wasn't really a party (even though what happened afterward felt pretty close). It'd be a marathon, but with a bunch of naked cheerleaders on hand, that was a sacrifice I'd have to make.\n\n\"I'll manage,\" I said.\n\n\"You'll have to, because shit gets intense there. I don't know who in all is coming for sure, but Brooke, Jade, Haley, Addison and Rose I know for sure, including you. I'm really trying to talk Sarah into coming, part of her initiation, ya know? She's waffling, but if you could help any, that'd be great; she's a real hot little slut, I'd hate for her to miss out on something like this,\" Kaitlyn said.\n\n\"I'll talk to her. She's shy, but she wouldn't want to miss something like this. She's a real freak in the sheets as you know,\" I said.\n\nGroaning almost nostalgically, no doubt thinking of the threesome she, Sarah and me had had earlier in the month, Kaitlyn said, \"Oh, I know. Keep doing that thing with your tongue, feels fucking good.\"\n\nI had no intention of stopping doing that thing with my tongue, especially with the way Kaitlyn's body was tensing. I could feel her body tightening, smell and feel the moisture coming from her cunt. I knew that she had a lot to say, and I was glad to hear it, this being my first party and all, but I was hoping I'd get to fuck her again real soon.\n\n\"It's the girls you don't know that're gonna be there, they're the ones you gotta worry about, 'cause they can take you off guard if you don't know what you're getting into,\" Kaitlyn said.\n\n\"I gotta worry?\" I asked.\n\n\"What'd I tell you about keeping on with your tongue?\" Kaitlyn asked.\n\n\"Sorry,\" I said, continuing as I was told. Kaitlyn wasn't nearly so bitchy as she used to be, but the moments when it came out during sex were, admittedly, fun sometimes.\n\n\"Mmmm, right there, yesyesyes,\" Kaitlyn hissed, smiling back at me prettily. \"Now I'm not saying you need to worry about all of them. Sasha Pearl... she's a sweetheart. Kinda tall, skinny redhead, you got a thing for redheads, right? She's got big glasses and is kinda the nerd in our group, but don't underestimate her: get her horny and she'll destroy your fucking cock.\"\n\nI didn't have a particular thing for redheads (even if I had fucked Haley and three women in the McNeil family), but that wasn't to say that what Kaitlyn said wasn't enticing.\n\n\"After her, though, yeah, you got some serious bitches to worry about. Like Gwen Savage. You know her, right? Trashy blonde, always wears too much makeup, would take a minor miracle to pull off her headphones out of class or cheer, has tits almost as big as mine? She may look like just another dumb blonde, but don't mistake her, she may be a little dumb, but she's tight. And greedy. Start fucking her and she'll hold onto you and never let you go until either she's worn you out or you've worn her down. Now, I know you're good, but that bitch can take even you out,\" Kaitlyn said.\n\nNow that was a warning. One I was still looking forward to confronting, but definitely something I was ready to find out about in more detail.\n\n\"And then there's Cleo and... you know what, wait a second, this is bull, I need some cock and I need it now. Get naked and lie down, I'm gonna fucking ride you,\" Kaitlyn said, pushing me away. She sat up in the bed, pulling her shirt off and revealing her beautiful, bare tits to me, while I tried to set a speed record for getting naked and lying down.\n\nSince I was already rock hard and Kaitlyn was ready and waiting, it didn't take long before she crawled on top of me and settled the entire length of my cock deep in her slick cunt.\n\n\"Oh god, I'll never get bored of this,\" she hissed, looking down at me with a look of contented superiority.\n\n\"The view's pretty good from this end too,\" I said, reaching up and squeezing her nipples gently. Smiling sweetly, she leaned over and kissed me hard. If she had a problem with me having spent a good long while making out with her ass not but a minute before, you wouldn't have been able to tell for how vigorously we made out. We stayed like that for a while, but soon she sat up on me, grabbing my hands and placing them on her ass as she began to ride me.\n\n\"Oh yeah, fuck, god you're so fucking big, so hard, I love it, I love it, I love it!\" Kaitlyn yelled. I didn't know how much the girl across the way could have heard from her room, but if she was listening, Kaitlyn would have been hard to ignore. \"Fuck yeah, fuck yeah, fuck yeah! Now... fuck... where was I?\"\n\nWracking my brain for an answer that seemed to disappear the harder she rode my cock, I answered, \"Cleo?\"\n\nKaitlyn perked up, never once breaking pace as she fucked me. \"Right! Cleo Price! You've had her in class, right?\"\n\nNot that I ever had talked to her, but I had seen her. Cleo Price was hard to miss. A dark-skinned black girl with her hair usually done in a set of long microbraids, at just a shade over six feet tall of nearly pure muscle with F-cup tits and wide hips, she was as imposing as she was beautiful.\n\n\"I've seen her around,\" I grunted.\n\n\"Well, she's one of our bases, the strong girls who lift our tops or toss our flyers, the tinier girls like Brooke and Riley and Kitty (those two aren't coming, so sad, you'd have had fun with them), and when she gets naked and started, god help you if you try to stop her. The girl's a machine and she'll fuck you so hard you won't be able to walk right for a week afterward,\" Kaitlyn said.\n\nI nodded. \"Death by snu-snu, got it.\"\n\n\"What's 'death by snu-snu' mean?\" Kaitlyn asked.\n\nI blinked up at her. Sometimes I still had to remind myself that there were still many things about Kaitlyn and me that were still very, very different. I said, \"It's a classical reference.\"\n\n\"Ah,\" Kaitlyn said, as if that explained everything. \"Well, even if you're prepared for 'death by snu-snu', you still won't be ready for Dakota motherfuckin' Lewis.\"\n\nNow, I'd been hearing about the horrors of cheer captain Dakota Lewis for a few months now without ever having had the opportunity to meet her myself. Our classes never lined up in such a way, and given the different social circles we traveled in she was pretty much a complete mystery to me. I knew a lot of the girls on the cheer squad liked to talk shit about her, that she was a serious control freak, and that she threw the occasional cheerleader orgy that nobody had anything bad to say about. That gave her, well, an interesting legacy as far as I could tell.\n\nI mean, if she let Sarah onto the team, she couldn't be that bad, right?\n\nSlamming her hips down onto mine with impressive ferocity, Kaitlyn continued, \"No matter what you do, no matter how hard you try, Dakota will always find herself on top just where she likes it. She likes to dominate and fuck people over if it means getting what she wants, and if she wants to cum, you better deliver or prepare to face the consequences. You think I used to be a raging cunt? You ain't seen nothing until you've seen Dakota motherfuckin' Lewis.\"\n\nGiven the way she was bouncing on my cock, I was inclined to believe pretty much anything Kaitlyn had to tell me at this point. When she slowed, though, rocking her hips to only take a few inches of me at a time, looking down at me with that beautifully smug look only she knew how to pull off so well, I was driven close to madness.\n\n\"There's one advantage you've got, though, that might help you tame the bitch,\" Kaitlyn said.\n\n\"What's that?\" I groaned, wanting desperately to start fucking again.\n\nShe leaned over, crushing her breasts against my chest as she whispered in my ear, \"I don't think she's ever fucked a cock as big as yours. I've told her about you before, and believe me when I say she's interested. Whip out this monster, and I think she'll be putty in your hands. You'll tame the bitch, and we'll have us a happy fucking new year.\"\n\nAs if emphasizing her point, she squeezed my cock oh so daintily with her pussy, no longer moving, but just prodding, urging me on to do what she wanted. Kaitlyn liked to toy with me and her friends, and though I'd become accustomed to it in her unique trickster way, when it put me in this state of sexual frustration, a dam was guaranteed to burst soon.\n\nI was past the point of no return at this point, desperately needing to cum. Growling, I wrapped my arms around Kaitlyn and rolled over so I was on top of her. She squealed with glee, wrapping her legs around me as I pounded into her like my life depended on it.\n\n\"Fucking nice, fucking nice, like that, yes, yes, yes!\" she squealed.\n\n\"Want me to do your dirty work?\" I grunted. \"Want me to tame her like I tamed you?\"\n\n\"Nothing tames me, I just, got... some... new... perspective!\" Kaitlyn yelped as I slammed into her.\n\n\"Then I'm gonna give her some new perspective too. If she wants this cock, I'm gonna give it to her, and I'll make her scream so fucking loud the whole town will hear!\" I roared as I mercilessly fucked Kaitlyn.\n\n\"I wanna see! I wanna hear! I wanna know you, oh fuck, I wanna know you got her to chill the fuck out with that giant fucking cock!\" Kaitlyn yelled.\n\n\"It'll happen, but first, I'm gonna make you cum!\" I said, fucking her more determinedly.\n\n\"Only as hard as I'm gonna make you cum!\" she taunted back, squeezing me and rocking her hips in time with me as I kept giving her everything I had.\n\nFor a moment, we looked into each others' eyes in complete understanding, an understanding that we sealed with a deep, passionate kiss, a kiss only broken when Kaitlyn shuddered against me and cried out.\n\n\"FUCKING HELL, YES, YES, YES, I'M FUCKING CUUUUUUMMING ON YOUR BIG FUCKING COCK!!\"\n\nHer pussy squeezed me so tightly, pushing my already extreme pleasure over the edge as I came inside her. Wave after wave of sweet, draining pleasure hit me as I pumped my cum deep inside her pussy, feeling like I was draining my entire body into her.\n\nPanting heavily as we both came down, I kissed her one more time before rolling off and laying down beside her.\n\nBreathing heavily, Kaitlyn looked at me dreamily and said, \"You know, I think we're pretty good at this.\"\n\nTrying not to think about how loud we were, and if we were being overheard next door, I said, \"I think you're right.\"\n\n\"So, ready for the party tomorrow?\" Kaitlyn said.\n\nI laughed. \"Maybe if you don't drain everything out of me first; something tells me I'm gonna need to train for this one.\"\n\nTeasingly, she poked me in the side, \"You'll do fine. Though I wouldn't mind an ass-fucking before I went on my way.\"\n\nShe knew just how to keep me interested. I looked down at my twitching cock. \"Give me a few minutes, and then you're on. I've still got that box of sex toys you guys gave me for Christmas; there's some good stuff in there. It's under my bed if you want to play around while I get hard again.\"\n\n\"Awww,\" she said, kissing me hard. \"You know just how to treat a lady right.\"\n\nGetting up on her hands and knees and turning around to look under my bed, giving me a perfect view of her stretched out pussy lips dripping both of our cum down her thighs, I muttered to myself, \"Now to see if I can treat a whole lot of ladies right.\"\n\n***\n\nIn spite of its name, Regan Hills wasn't quite as hilly as its name might imply. What few hills it did have, however, tended to be where the richer end of the populace lived. As a kid who grew up smack dab in the middle of middle class suburbia, this wasn't exactly a part of town I frequented or even wanted to frequent, but the occasional exception had to be made.\n\nAttending a nearly two-day long cheerleader orgy, for instance.\n\nIt was early evening on December 30th, and I sat in the passenger seat of Rose Ferris' car, looking on in some awe at the large house-but-not-quite-mansion that Dakota Lewis called home.\n\n\"You will never find a more wretched hive of scum and villainy,\" I muttered, thinking I was only loud enough to hear it myself.\n\n\"We must be cautious,\" Rose said in her painfully sexy, husky voice, finishing my quote.\n\nI looked back at her, and as ever when in her presence I found myself sublimely impressed that I had someone so effortlessly cool in my life. \"God, you're awesome.\"\n\nPushing her sunglasses up her nose, Rose replied, \"This isn't news to me, Ryan Collins.\"\n\nRose was, as ever, a sight to behold. Dressed in her usual mishmash of hipster clothes, including distressed jeans that were barely pants anymore and a fedora, she was undeniably gorgeous. Soft, full lips curled into an intelligent smile that lit up her already gorgeous face, framed beautifully by her wavy, platinum blonde hair highlighted with blue streaks. Though she hadn't been a cheerleader for some time, she kept her body tight, with firm, C-cup tits and a nice, round ass. I'd have loved to hang out with her if just for how hot she was (and how intense a fuck she was), but it was her personality that easily made her one of my favorite people to be around. Always bright, always aware, always unhurried and unworried, she just had a natural cool to her the likes of which I'd always wanted but was never able to cultivate.\n\n\"How are you so relaxed right now?\" I asked her.\n\nShe shrugged. \"Well, firstly because this den of vipers is one I'm intimately familiar with.\"\n\n\"A lot of whom you haven't seen in a while and still might hate your guts,\" I said.\n\nRose mulled this over. Her quitting the cheer squad to follow her art was still a sore point among many of the cheerleaders as far as I knew, but she'd made inroads with a number of them during my Christmas Good Deeds spree.\n\nFinally, she said, \"Perhaps they might, but with allies such as mine, the distraction you'll no doubt cause, and everything my most capable tongue and fingers are skilled in... I believe most will forgive sooner rather than later, wouldn't you agree?\"\n\nI couldn't speak for the others, but from personal experience I knew that Rose Ferris could get me to do pretty much anything she wanted me to do if she only asked.\n\n\"And what's the second thing?\" I asked.\n\n\"Pardon?\" Rose replied.\n\n\"When I asked you about why you weren't nervous, you said 'firstly', which generally seems to indicate there'll be a 'secondly' and possibly more afterward,\" I said, wanting to keep this going for a moment or two more to steady my nerves.\n\nRose laughed, clearly knowing what I was doing. \"It would typically indicate such a thing, wouldn't it, Ryan Collins?\"\n\n\"So, is there a secondly?\" I asked.\n\n\"Of course.\"\n\n\"Because you've got me on pins and needles.\"\n\n\"Patience is a virtue, you know,\" Rose chided.\n\n\"And I think you're being a tease,\" I replied.\n\n\"Fine, fine, you win. If you wish to know my 'secondly', it's simply this: this is hardly my first orgy.\"\n\nThough I'd hoped for a more profound answer, I nodded as this made sense. \"Kaitlyn already gave me her warnings about the people inside...\"\n\n\"Good of her to do that,\" Rose agreed.\n\n\"...but... well, can you tell I've never done this before?\" I said.\n\n\"And you need some orgy etiquette advice?\" Rose asked.\n\nExhaling and grateful that she was able to get the answer right away, I replied, \"Yes, please.\"\n\nPutting her hand on my thigh pleasantly, she said, \"There's not much to it, really. Don't force yourself into a spot where you're not wanted, but if you are wanted and just don't feel it, feel free to say no. Don't tire yourself out right away, since this is a marathon, not a sprint, and don't be afraid to take chances. You may not always hear 'yes', but if you don't ask, you'll never know whether you could've had the fun you wanted or not. And hydrate. Can't stress that one enough. Hydrate like crazy, and use the bathroom when you need to.\"\n\nThat... that all sounded practical. It didn't eliminate the butterflies in my stomach, but it did set them at ease.\n\nWell, most of them, anyway.\n\n\"This would be the point where I'd recommend considering an orgasm to take the edge off,\" Rose said. \"But, given your anatomy, I imagine you'd be better off holding off on an orgasm until you're ready for the big show, Ryan Collins. You'll want your cum, almost as much as the most delightful sluts inside will.\"\n\nI was hard as a rock, and would have really enjoyed a good blowjob from Rose to take the edge off before going inside, but her point made sense.\n\n\"Still, should you be in need of something to help you focus before we call up fair Brooke, I can think of an idea or two...\" Rose said, unbuttoning her jeans and showing me her pale blue panties. Her eyes sparkled over the edge of her sunglasses, and as if she didn't give me enough of an indication of what she wanted already, she bit her ever so luscious full lower lip.\n\nWhen I first met Rose, I found out she had a thing for being fingered in public (or close to public), and though it never ceased making me a little nervous, I knew it thrilled her to no end. Thinking that a nice fingerbang might be as good an appetizer as any for this evening, I looked over each shoulder, checking and double-checking that we were alone. Satisfied that this empty street (or empty enough street, if you didn't count all the other cars parked in front of this house) was clear, I leaned over and kissed Rose.\n\nShe kissed me back, smiling against my lips, completely unhurried as she reached over and playfully stroked my erection through my jeans.\n\n\"You're bad,\" I groaned, reaching over to cup one of her breasts through her shirt, before dropping my hand between her thighs.\n\n\"I am many things, Ryan Collins,\" she teased. \"And bad is a fairly subjective term. If you wish to call me names, might I request a little more precision?\"",
        "\"Okay, fine,\" I said, slipping my hand into her panties and dipping two fingers into her steaming slit. \"You're wet. You're hot. And when I'm done with you, you're gonna be cumming so hard on my fingers you'll forget where you are.\"\n\nApplying pressure with my thumb on her clit, rolling it around in a small circle, I finished, \"Better?\"\n\n\"Much,\" Rose cooed with a truly satisfied grin.\n\nAs was often the case, Rose knew exactly how to focus my attention. Whatever nerves I might've had about going into that house disappeared almost as easily as my fingers did inside her quivering pussy. We locked eyes as I fingered her, alternating between a frantic desperation and the kind of patience I could only manage when I wanted to drag things out. She'd teased and taunted me, pushing me into this spot, and I wanted to play around in kind.\n\nIn truth, I knew that she was probably every bit as nervous as I was, if not more so, to meet a lot of her friends who'd once turned their backs on her. Rose liked to keep a cool, unflinching fa\u00e7ade up, but she was just as human as any of the rest of us, and if she needed an orgasm for courage, I was going to give her an orgasm for courage.\n\nIt wasn't an ideal angle for fingering, but I knew what she liked and was able to get her where she needed to be soon enough. Her sunglasses almost entirely dropped down to the tip of her nose, Rose's bright green eyes locked onto mine.\n\n\"You know I'm about to cum fucking hard, Ryan Collins, the question is... what are you going to do about it?\" Rose taunted, her breathing shallow and urgent.\n\nMeeting her challenge, I rubbed her clit only slightly harder, putting just enough pressure on it to send her over the edge. Trying to echo her usually cool, collected voice, I said, \"This.\"\n\n\"OH FUCK, YES, YES, FUCK I'M CUMMING, YESSSSSSSSSSSSSSSSS!!\" Rose hissed, bucking her hips as she shook with pure, unadulterated pleasure. I kept working at her pussy as long as she'd allow me, savoring the gush of her fluids against my fingers.\n\nWhen she slowed down, her breathing normalizing, I curled my fingers inside her for one last tease, then pulled out. Her scent intoxicating, I couldn't help but suck her juices from my fingers.\n\nWithout saying a word, she pulled my hand from my mouth and sucked on my fingers as well, savoring her taste. Soon enough we were kissing each other, both of us luxuriating in the sweet, pungent taste of her wet, freshly orgasmed pussy.\n\n\"Feeling better?\" I asked her.\n\n\"Oh, I can't slip anything past you, can I, Ryan Collins?\" she said, smiling like the cat that ate the canary.\n\n\"You could if you tried, Rose Ferris, but something tells me you wanted me to know,\" I said.\n\nKissing me quickly, she zipped up her pants and said, \"I'll never tell.\"\n\nI looked back at the house. \"So, should I text Brooke so we can crash a party?\"\n\nSmiling at me wickedly, Rose said, \"Why, Ryan Collins, I thought you'd never ask!\"\n\n***\n\nSo, fun fact about Southern California: our winters are fucking unpredictable. While when Kaitlyn came to drop some knowledge on me about the New Year's Eve party, it was reasonably cold outside, when Rose and I stepped out of her car to actually join that party, it had to be almost 80 degrees outside.\n\nPersonally, I blame global warming, but since that's a longer discussion better suited for a much different story, I'll get back to the point.\n\nThe one good thing about this unexpected heat was that, when Brooke King came around the corner of Dakota's house, she was dressed for the weather.\n\nNow, I don't just say this because Brooke's one of my favorite people and best friends in the world, but she was ridiculously hot. At 5'1\" of pure, petite, blonde perk, she was a walking ray of sunshine that wore pigtails. Her big green eyes always sparkled, small smile always found a way to fill a room, and she was genuinely one of the kindest, funniest, sweetest people I knew. Her tight, gymnast's body was petite from top to bottom, with her A-cup tits topped with nipples that always seemed perpetually hard through whatever shirt she wore. The only part of her that wasn't petite was her nice, round ass, which stuck out from her just enough to almost always make me drool in anticipation.\n\nAs I said, she was clearly enjoying the warm weather, wearing a tight, white, sleeveless crop top that showed off her abs, and a pale blue skirt so short that... well, go back to the part about how good she was at making me drool.\n\nPadding over to us in her bright pink tennis shoes, she squealed with joy, first jumping into my arms and kissing me, then laying another kiss on Rose that lasted quite a bit longer. I was happy to see the reunion I'd connived between the two of them before Christmas had stuck, and that these two were close friends again.\n\nWell, that and I still enjoyed watching two unbelievably girls make out as much as any red-blooded heterosexual man would.\n\nBreathlessly, Brooke broke the kiss and squealed, \"You guys made it, I'm, like, so excited!\"\n\n\"Clearly,\" Rose mused, looking dreamily at Brooke after the kiss.\n\n\"Wouldn't miss it for the world,\" I said.\n\n\"Well, if you think it's hot out here, you should totally see what it's like in there. Totally!\" Brooke said excitedly. \"You guys did bring snacks and drinks and, like, all that jazz, right?\"\n\nGiven that this was going to be a long party (and that we were gonna be crashing it), we had made a good trip to the store beforehand to pick up bags of chips, fruit, cases of soda and other odds and ends. It wouldn't smooth everything over, but, it couldn't hurt either.\n\n\"We came prepared,\" Rose told Brooke, popping the trunk of her car to show the bounty we'd collected.\n\n\"Sweet!\" Brooke exclaimed. \"Lemme help you guys carry and I'll show you the way; we're all in the guest house.\"\n\n\"Oh, lovely,\" Rose mused, rolling her eyes.\n\n\"What's wrong with the guest house? Also, there's a guest house?\" I asked.\n\nBrooke nodded. Rose explained, \"That's where Dakota throws her parties when she thinks they're gonna get messy and she wants to isolate any and all damage away from mommy and daddy's mansion.\"\n\nBrooke rolled her eyes now. \"Oh it's not, like, that much of a mansion. Peyton Shaw, her parents, they've totally got a mansion, like, give her a tower and she'll totally be a straight up princess. This one's, like, almost a mansion. But still really nice.\"\n\n\"Whatever,\" Rose said, divvying up the bags.\n\nThe three of us couldn't have been any more different as we walked around the secluded back end of this very nice house, carrying our bags of groceries.\n\nAt the rear of the group, I was slow and nervous, definitely looking forward to what was going to go down, but suddenly wishing I had a little more in the way of backup. I wished Josie were here with me, and I hoped that wherever she was at this moment, she was having fun.\n\nRose was in the middle, cool, calm and collected, not letting any of her nervousness show.\n\nLeading the caravan excitedly, Brooke was practically skipping, carrying the most bags of the three of us and reminding me that she was unusually strong for her size. There was something a little off, though...\n\n\"You alright, Brooke?\" I asked.\n\n\"Never better! Why?\" Brooke asked.\n\n\"Well, you're walking kinda funny,\" I said.\n\n\"Oh, yeah, right, I like, totally forgot!\" she said, shifting all of her bags to one hand so she could flip up the back of her skirt, revealing first that she wasn't wearing any panties, and secondly that there was a toy with a jeweled end, bright pink and shaped like a heart, sticking out of her ass.\n\n\"Like my butt plug? It's not as thick as you, Ryan, but boy does it fill me up!\" Brooke exclaimed excitedly.\n\n\"It's definitely you,\" I said.\n\n\"Totally,\" Rose agreed.\n\n\"It's more fun going in and coming out than just sitting in here, but it's new, and it's fun, so, like, I wanted to just leave it for a while and let it get all nice and comfy up my butt!\" Brooke said, her voice so perfectly cheerful it practically sparkled.\n\nPlayfully swatting her friend on the ass, Rose said, \"Well, play nice and I can make a real time of taking it out of you.\"\n\nBrooke squealed delightedly, \"Only if I get to put it in you afterward.\"\n\nNodding, Rose agreed, \"It's a date.\"\n\nShifting around uncomfortably in my pants, I said, \"God, I'm glad you two are friends again.\"\n\n\"Totally,\" Brooke and Rose said in unison, giggling as if thick as thieves.\n\nWhen we made it to the rear of Dakota Lewis' house, I was unsurprised to find that its backyard was dominated by a pool with Jacuzzi, a nearby semi gazebo with a fire pit at the center and a guest house that looked almost as big as some of the cheaper homes in Regan Hills. Still leading the way, Brooke slid open the glass door at the side of the guest house and ushered us inside through the kitchen. Faintly, further in the guest house, I could hear the sounds of music and low conversation, as well as some low moans I knew all too well.\n\n\"Come on, set your stuff over here!\" Brooke said, setting her stuff down on the counter, then taking off her top and skirt, leaving her completely naked save for the butt plug still sticking out of her ass. \"Set it down and we gotta meet up with the rest! Come on!\"\n\nBrooke was dancing around on the balls of her feet like an excited puppy, but it was impossible not to follow energy that infectious. We let the naked little blonde lead the way into the guest house's living room, where we were greeted by the all too familiar sounds of sex.\n\nSpreading her arms wide, Brooke cheered, \"TA-DAH! Look what I found, ladies!\"\n\nNine pairs of eyes looked up at us at once, each of them carrying a distinct deer in headlights look as they were interrupted by Brooke's arrival. I don't know if it was Rose's or my or both of our presence that shocked everyone more, but one look at the pile of naked girls collected on the blankets spread out on the floor told me that I might as well have just arrived in heaven for all I had to take in.\n\nLarge and muscular, Cleo Price was on her knees and fucking Kaitlyn from behind savagely with a strap-on. Although watching Kaitlyn's tits bounce from a hard fucking was always a sight to behold, watching Cleo's dark and massive F-cups jumping up and down with every thrust was something suitably epic to take in.\n\nBusty and curvy Latina Addison Gonzalez, the prim and proper Homecoming Queen who was anything but prim and proper once she stripped down, was in the middle of a 69 with a big-titted girl with long, dirty blonde hair I took to be Gwen Savage.\n\nThe real show was in the middle of the room, next to a basket of sex toys. Three girls, one the giant-titted redhead Haley Campbell, one the lusciously stacked Latina Jade Alvarez, and the other a taller, thinner redhead with short hair, big glasses and a pair of C-cup tits I assumed was Sasha Pearl, surrounded a slender blonde who lay down on the ground, taunting and teasing her with their mouths and toys, looking like a feasting scene from an erotic zombie movie. Getting a better look at the girl on the ground, I realized it was Sarah Kent, one of Josie's friends, a shy girl who'd only recently gotten the courage to show the world how good a dancer she was and joined the cheer squad.\n\nAll of them looked up at us in their perfect, naked glory. Those who knew Rose and I were coming didn't seem to have a problem, while those who didn't had faces that ranged from wry amusement to complete shock.\n\nIf I was hard before, I was straining not to tear a hole through my pants now.\n\nNervously, I waved to the room. \"Hey.\"\n\nWith one derisive laugh (yet not stopping fucking Kaitlyn for a second), Cleo said, \"Oh, Dakota's gonna fucking love this shit.\"\n\n\"Dakota can love whatever the fuck she wants!\" Brooke said daintily. With one of her small, delicate hands she rubbed my cock through my pants. \"Ryan and me, we're, like, gonna totally fuck!\"\n\nThen, more quietly to me, Brooke said, \"You do wanna fuck me, right?\"\n\n\"Is that even a question?\" I said, reaching down and squeezing her ass.\n\n\"Oh, it's on!\" Brooke squealed, her deft fingers first tearing off my shirt, then swiftly undoing my belt and pulling my pants and underwear around my ankles. Even she could have made less of a show of it, but with a few new sets of eyes who hadn't seen my cock in person yet, I got the impression that Brooke was showing off to Cleo, Sasha and Gwen.\n\nThough it was hard to take in the whole room at once, I could've sworn I'd heard Sasha whisper to herself, \"Amazing.\"\n\nI didn't have long to soak this in, though, as Brooke soon spun me around and had me on my back on the floor. She straddled my hips, rubbing her cute pink pussy lips along my cock as she giggled and teased.\n\n\"Well, I guess if no one's gonna kick me out, I'll just, you know, hop on in,\" Rose said, taking off her clothes where she stood. With her tight body, firm, round tits and shaved pussy, she was both a sight to behold and fit in with this room rather perfectly, even if she didn't take off her sunglasses.\n\n\"Man, she's hot!\" Brooke exclaimed, looking at her friend appreciatively. That Brooke and Rose were practically enemies only a matter of weeks ago was something you could barely tell the way the girls looked at each other. That Rose had been (and might still be) a pariah among the cheerleaders would have seemed insane for how confidently she walked in to join the rest of the girls.\n\n\"Mmmm, like old times,\" Brooke mused, reaching down and lining my cock up with her pussy. \"Oh well, time to fuck!\"\n\nBrooke settled down onto me with the practiced ease that only she knew so well, burying my entire length in her cunt without hesitation or discomfort from the large plug in her ass. She let out a satisfied sigh, looking down at me cutely as she bounced her loose pigtails from side to side. After a moment of adjustment, she started to bounce up and down on my cock oh so juicily.\n\n\"Now, I know you came here to, like, party with everyone, and we do this all the time and it's gotta get sooooooooo booooooooring with me, but I totally can't help myself. Gotta show all these bitches what it's like, ya know?\" Brooke said, smiling down at me cutely.\n\nThough I'd started to reach for her tits, I wrapped my arms around her and pulled her down close so I could kiss her deeply.\n\n\"Sex with you will never be boring, Brooke. You know you're one of the best things that's ever happened to me, right?\" I said.\n\nThough it was rare, I could've sworn I saw her blush right then. \"Awww, thank you, Ryan! You're kinda totally the best sometimes, ya know?\"\n\nI kissed her again. \"Sometimes, I can swing it.\"\n\nSomeone crawled up beside us, muttering a low, meek, \"Hi.\"\n\nI turned my head and caught sight of 18-year-old Sarah Kent.\n\nOne of Josie's best friends before I'd become acquainted with her, she was one of the more interesting people I'd met this year. A quiet, shy band geek, the only way she could think of to seduce me (even with Josie's encouragement) was to do it in costume on Halloween. I'd spent most of a month trying to track her down, and when I got to know her better (and had some more, very exciting sex with her), I found out she was a dancer who dreamed of being a cheerleader, and worked what connections I had to get her in with the squad.\n\nThat she was absolutely gorgeous certainly didn't hurt her chances, either. With shoulder-length, wavy blonde hair, green eyes only accentuated by her horn-rimmed glasses and a sweet smile, she had a pretty face when she wasn't hiding underneath her hoodie. Her tight, 5'2\" dancer's body, with creamy, pale skin, a firm pair of B-cup tits, and tight, round butt made her an undeniably sexy package.\n\n\"Hiya, Sarah!\" Brooke exclaimed.\n\n\"Hey,\" I said. \"Looks like you're fitting in nicely.\"\n\n\"Stranger things have happened,\" Sarah said softly.\n\n\"Awww, nothing strange about it, Rookie!\" Brooke said, still fucking me nice and hard. \"You're, totally, like, one of the best dancers in school, and you're so nice and fun and cute I could just eat you up and make you squeal and just keep eating you up and making you squeal...\"\n\nSarah smiled, licking her lips and looking at both of us. \"That would be fun, but I was hoping, if I wasn't interrupting anything, I mean, that I could sit on Ryan's face while you two had sex?\"\n\n\"That's sooooooo sweet of you to ask!\" Brooke said excitedly. \"I'd love you sitting on Ryan's face so we could make out while we played with each others' titties and came since that'd be, like a lot of super-huge fun, if that's, like, okay with you, Ryan? Please?\"\n\nI'd watched Sarah come out of so many shells since I'd known her this year, that my answer couldn't have been anything but \"yes.\"\n\nHowever, others had some different ideas.\n\nA girl snorted. \"Please? You just said please? Please don't get you shit; if you see something, you take it, and he's ripe for the taking!\"\n\nThe voice belonged to a blonde girl on her knees a couple feet away from my head. At about 5'0\", with a slightly curvier body than the rest of the girls here, her D-cup tits and firm, round ass were truly impressive. Though there was slight sag to her tits, the nipples were thick, pale brown and hard, while the bush of thick, dark hair by her pussy did nothing to cover her full, glistening lips. Though her face was undeniably pretty, with soft brown eyes and long, dirty blonde hair that fell about her chest and back, her bitchy sneer, smeared makeup and the poorly done tattoo hidden slightly underneath her right tit gave her every bit the trashy image I'd been warned about.\n\nGwen Savage. She was one to keep an eye out for.\n\nSarah eyed Gwen timidly. \"I... well... he's my friend and...\"\n\n\"It doesn't matter what he is or isn't, and by all I can see he isn't a lot, but if he's half as good and a quarter as willing as Kaitlyn and the rest says he is, I got half a mind to just take his face right here to teach you a lesson,\" Gwen declared, looking down at me. \"That's how you like it, isn't it? All nice and dirty and ready to show you what a real ride looks like?\"\n\nShe fingered her pussy, splaying her very delicious-looking lips for me. I could smell her from here, and even with Brooke riding me (and watching this go down), I will admit I was enticed for a second or two.\n\nLooking between Sarah and Gwen, though, the choice was easy.\n\n\"All appearances to the contrary, it takes a little more romancing to get me going than that. Sarah's a friend of mine, and you were mean to her, so, while I may like it every bit as 'nice and dirty' as you promise, I'm not gonna give any of that 'nice and dirty' to you until you earn it. Apologize to Sarah, make it good, and maybe, maybe I'll finger you while these two fine ladies ride my face and cock. Sarah, climb on over; my tongue's missed that sweet pussy of yours,\" I said.\n\nI don't know what made my day more, the delight on Sarah's face, the shock on Gwen's face, or the way Brooke laughed.\n\nWait, I know exactly what made my day most then: Sarah taking charge and straddling my face, dropping her sweet pussy onto my lips. I stuck out my tongue to meet her, savoring her sweet juices every bit as much as her moans of pleasure.\n\n\"Did he just... did you just...?\" Gwen sputtered, confused.\n\n\"Face it, Gwennie, your milkshake don't bring all the boys to the yard,\" Brooke laughed, continuing to bounce on my cock.\n\n\"What does that even mean?\" Gwen asked.\n\nBrooke shrugged. \"Some old song, I think.\"\n\n\"Yeah, Gwen, and you're missing out on some really good fingers,\" Sarah said, sighing contentedly. \"So, if you stop being such a bitch and apologize, I might just put in a good word for you.\"\n\nGwen gasped. Brooke laughed.\n\n\"Nice one, Rookie!\" Brooke exclaimed, accompanying her proclamation with the sharp crack of a high five. Though I personally couldn't see much except Sarah's exquisite ass, I held up both hands and exchanged high fives with her and Brooke.",
        "\"Don't fuck with me when I'm horny,\" Sarah said, rocking against my face.\n\n\"Totally,\" Brooke said. I felt her reaching down, and a strange change in pressure on my cock before she added, \"I think that needs a prize, and since this is all I got, I think it's worth it; whaddya say, Rookie? It's still got a tonna lube!\"\n\n\"Only if Ryan puts it in,\" Sarah said, handing the prize to me.\n\nBrooke's butt plug. If my mouth were less occupied, I'd have quipped about this being a sacred, rare honor held for only the highest of occasions, but since I couldn't, that joke's only for you, dear readers.\n\nSarah bent over to better present her ass to me, and if the sounds of smacking lips were any indication, she was making a fair feast of Brooke's bouncing tits. With her tight, winking asshole perfectly on display (and knowing just how perfect it was), I had no problem sliding the slick toy into her slowly, tantalizingly, making her enjoy every second of its insertion until it passed the most flared out bit and settled inside her tightest of holes.\n\nShe groaned in appreciation, then said, \"Thank you Ryan... Brooke... that's... heavenly.\"\n\n\"Oh, this is fucking bullshit,\" Gwen proclaimed.\n\n\"All you gotta do is apologize to the Rookie,\" Brooke squealed, rocking her hips to take me from a slightly different angle.\n\n\"I don't apologize,\" Gwen said.\n\n\"Then you totally don't get fingerblasted!\" Brooke declared. To help out, I crossed my arms across my chest defiantly.\n\n\"That's not fair!\" Gwen exclaimed.\n\n\"It's an orgy, we all make our own rules,\" Sarah said.\n\n\"'cept for the no shoes in the house thing, that's Dakota's rule,\" Brooke said.\n\n\"Right,\" Sarah agreed.\n\nGwen grumbled. \"Seriously, this is how it's gonna be? You're a guy down, you got a big cock, you honestly gonna tell me you'd rather these two tiny bitches take you on rather than have all I got?\"\n\nI nodded under Sarah's pussy, never once letting up in my onslaught.\n\n\"Fine. I'm sorry, okay? I'm just teasing the new girl, I didn't mean to be such a bitch and try to steal your thunder or anything. I was just having fun. Can I please join you two and fuck the nerd with you?\"\n\n\"He's got a name!\" Brooke said defensively.\n\n\"Fine, can I fuck Ryan with you?\" Gwen said.\n\n\"Well, what do you think, Ryan?\" Sarah asked.\n\nI thought it sounded like a pretty disingenuous apology, but having dealt with a fair number of girls all across the bitchy spectrum, I thought there might be something that could be done with fair Gwen Savage. Maybe not now, but definitely some fun could be had later.\n\nKindly, I extended a hand for her to sit on.\n\n\"Finally...\" Gwen grumbled, crawling over and onto my hand. \"...the things I gotta put up wi-OH, FUCK!\"\n\nIn spite of her being a bitch to my friends, I still wanted to give a good impression and fingerfuck her nice and good. The way she was gyrating needily on my hand and moaning without restraint, it sounded like it was working. \n\n\"See, it's pretty nice when you're nice, ain't it?\" Brooke asked.\n\n\"Oh, fuck off,\" Gwen replied.\n\n\"Can we just... oh god... can we just shut up and enjoy this...?\" Sarah said, echoing something that sounded pretty fucking nice to me at the moment.\n\nThough there was still some brief grumbling and arguing, it wasn't much more than token at this point as the three ladies ground and rode, cooing and moaning and groaning and trying to get off. When I felt another pair of hands gently take my unused hand and stretch it out, sitting down on my fingers and settling a soaked pussy onto them, I wasn't too surprised.\n\n\"Thanks, Ryan,\" the kind voice of Jade Alvarez said. \"For coming, for this, for everything...\"\n\nThere's a good chance I might've given her a little more in the way of fingering than Gwen at this point, but it's hard to be sure.\n\nNow, I'm not sure how many of you reading this it has happened to (and I doubt it's many, but if it has, hey, mazel tov to you!), but, while having four hot, naked girls on top of you at once is pretty fucking awesome, it's got its share of downsides too. Perhaps the biggest among them is how much like rubbing your stomach and patting your head it can be. When you're focused on getting four girls off, it can be hard to give every one equal attention, while focusing on my pleasure was next to impossible. Don't get me wrong, in my head I was in fucking heaven, but even with Brooke's best efforts I knew it would take some extra time and focus to get off.\n\nInstead, my efforts were focused on the ladies above me, trying to guess which one would cum first.\n\nThat Brooke, with a squeal and a squirt and a lot of \"yesyesyesyesyes!\" was the first wasn't a surprise, since she'd been at it the longest.\n\nThat Gwen came second... well, was a little bit more of a surprise, but not by much. I'd considered toying with her, keeping her for last to motivate her to be nicer, but realized that showing her what she could have if she really played ball would be an even better strategy. With my fingers buried deep in her steaming cunt, she came hard, writhing and moaning like a pornstar as her juices covered my hand.\n\nSarah was unsurprisingly next, and as usual when she cut loose she was a pure surprise for how much energy and vulgarity she brought to the table, riding and squeezing my head between her thighs as she screamed a truly impressive diatribe of expletives.\n\nLate to the party but never late for a cum, Jade was last, a more subdued but no less pleasant orgasm.\n\nThe four of them disentangled themselves from me, allowing me to see again, and to kiss four absolutely lovely ladies. Sarah kissed sweetly, Brooke perkily, Gwen quite nastily, and Jade long and lingering. The beautiful Latina with the caramel skin, curvy, lean body, DDD tits and lusciously large ass was someone I owed a lot to, and one I didn't mind making out with a bit.\n\n\"You taste good, though that's probably Sarah, isn't it?\" Jade asked, amused.\n\n\"Probably,\" I confirmed.\n\n\"I want to have a lot more fun with you before we're done here,\" Jade said, her voice husky and full of promise.\n\n\"That can be arranged,\" I said.\n\n\"Hey, get in line; that cock's still hard and you ain't the only one who wants a ride,\" Gwen said.\n\n\"Yeah, I'm, like, happy and all for what I got, but I really wish you'd filled me with cum for how much you got me goin' there, Ryan,\" Brooke said, jacking my slick cock. \"We gotta do something about that.\"\n\n\"HEY, GUYS, CAN ANYONE, LIKE, HELP ME HERE!\"\n\nThe plea for help came from the hallway leading further into the guest house, from a 5'4\", petite Asian girl. Completely naked, I could see every inch of her tanned, tight body, from her A-cup tits with their dark, pointed nipples, to her toned abs and the trimmed landing strip of dark hair leading to her engorged and clearly wet pussy lips. Her face, with her big dark eyes, tiny nose and full lips, all framed by shoulder-length black hair, would undoubtedly have been cute at the best of times, but for now appeared quite distressed.\n\nPossibly because her hands were cuffed behind her back.\n\n\"What's up?\" Brooke called out to the newcomer.\n\nThe new girl, antsy and bouncing from side to side on her feet, said, \"Dakota's been, like, edging me for forty-five minutes now, gettin' me close, then stopping, then she just let me go! She said she was punishing me!\"\n\n\"Well, you have been late to practice a lot lately,\" Kaitlyn said.\n\n\"Yeah, but, I'm super horny and ready to burst, and I can't touch myself like this! Can't somebody help me, please?\" the new girl pleaded. Her eyes were wild, and she shook with anticipation.\n\n\"IDEA!\" Brooke shouted excitedly, running over to the girl and bringing her over to me. \"This is the best cock in school, between him and us, we'll get you off nice and hard and lickety-flickety-split! If that's, like, okay with you two?\"\n\nThe girl looked to me, and I to her. I asked Brooke, \"Is she eighteen?\"\n\n\"I wouldn't be here if I wasn't,\" the girl grumbled hungrily.\n\n\"Then I'm fine if she is,\" I said, rather enjoying the view of the girl's lithe body.\n\n\"I am,\" the girl said. \"Can someone get me out of these cuffs?\"\n\nJade looked at them. \"No quick release on these love cuffs; well, isn't that nice and safe? I'd have thought Dakota would have more sense than that.\"\n\n\"I don't care about the keys, just, someone help me get on him?\" the girl asked.\n\nLike the oversized sex toy I sort of felt like lying on the floor, I stayed put while Brooke and Sarah led the handcuffed girl to me, helping her kneel down and straddle my cock. I reached down, helping angle my cock for better penetration, and as it pressed against the new girl's tight, wet lips, I was worried for a second that it wouldn't fit. I'd been with some tight girls before, but this might have been my limit.\n\nEven with that, she was quite determined. Gritting her teeth with determination, and with Brooke's and Sarah's coaxing, the girl settled down slowly, the head of my cock finally breaking through and disappearing inside of her.\n\n\"Holy shit!\" she exclaimed.\n\n\"I know, it's, like, totally awesome, right?\" Brooke said, kissing this girl delightedly.\n\nMy cock was in heaven, and as this girl settled down more onto me, her eyes pinched shut in concentration as mine couldn't look away from the sight of my cock spreading her pussy obscenely, some of my best friends helping her through this... I thought this might well have been a pretty perfect moment.\n\nThen she settled down entirely, the last of my cock buried deep inside of her. Her eyes now open, the girl looked at me with a truly radiant smile.\n\n\"Oh, yeah, btw guys, Ryan Collins, Alyssa Nguyen; Alyssa Nguyen, Ryan Collins,\" Brooke said, almost as if we were supposed to exchange a handshake instead of me being buried balls deep inside of her while she was handcuffed.\n\nIt said a lot about the year I was having when I realized right then that I hadn't gotten her name before we started, and that this was the first time I'd almost had anonymous sex.\n\n\"Hey,\" I said. \"It's, uh... nice to meet you.\"\n\n\"You too,\" Alyssa said, looking down to where our crotches met. \"Holy crap... you've got a nice cock.\"\n\n\"Well, you've got a nice pussy,\" I said.\n\n\"Thanks,\" Alyssa said, smiling bashfully.\n\n\"Hey, guys, say cheese!\" Brooke exclaimed, taking a picture with my phone. Though our faces probably looked more baffled than sexy, I doubted this would be the only chance I'd get to take a picture with Alyssa Nguyen over New Year's.\n\n\"Alright, pictures are nice, and all, but, that doesn't, like, change my situation any, so, if you guys wanna, you know, help me get off or anything while I ride him, I wouldn't say no,\" Alyssa said.\n\nAppearing at her side, Rose said in her take-charge voice, \"Well, you guys heard the woman! We've an orgasmic rescue mission; who's ready to take the call?\"\n\nImpressively, the answer seemed to be: everyone.\n\nFor all the arguments and infighting and differing personalities the cheerleaders had among them, it seemed that Dakota's machinations had enough to get them all moving. Seeing ten gorgeous, naked women piling up around and behind and beside Alyssa as we fucked, watching them lend their hands, mouths and dirty words whenever their hands and mouths couldn't reach. With hands on her tits and more reaching down to play with her pussy as she fucked me (while I kept my hands on her hips to help balance her), Alyssa looked like she was in heaven. In the rare moments where she wasn't kissing one of her friends, her moans were high and full of absolute pleasure. Though I was more along for the ride on this encounter, I was happy to help and absorbing absolutely every bit of this singularly insane moment as something I wanted to never forget.\n\nIt didn't take long for Alyssa's first orgasm, powerful and screaming to tear through her body with her friends' efforts, and though her tight pussy squeezed me almost painfully, it wasn't enough to stop me from helping everyone along. Whatever she'd been building up for the last 45 minutes or so with Dakota's edging and teasing came out explosively as a gush of her juices covered my cock.\n\nWhile this would have been a fine moment to start letting her come down, her friends weren't going to let her go that easily. Though there may have been a brief moment of slowing, of sympathy and kind strokes, of giggles and sweet kisses, they redoubled their efforts in no time, going at Alyssa again, starting her up and making her cum on my cock a second time.\n\nThen a third time. Then a fourth.\n\nThey were insatiable, and only let her go when she was crying almost deliriously from the pleasure.\n\n\"Thank you, thank you, thank you everyone!\" Alyssa exclaimed, before one final, conclusive cry of \"Fuuuuuuuuuck!!\"\n\nThough all the attention was rightly on Alyssa with me acting as a bit of an oversized sex toy for this \"orgasmic rescue mission\", a couple did look down at me with some sympathy.\n\n\"You haven't cum yet, have you, Ryan Collins?\" Rose asked me.\n\n\"Not bad,\" Cleo admitted, looking me up and down, her dark eyes still skeptical over the whole picture of who I was, but definitely intrigued.\n\n\"That's so much better than 'not bad', you don't even understand it,\" Alyssa said with starry eyes, looking down at me and smiling brilliantly. \"Thank you, thank you, thank you Ryan for helping me! I really, really, really needed that and you were super sweet for holding on there and just letting me ride you. If you gotta go, lemme know and you can, like, cum in me, I don't mind one bit!\"\n\nNow, when you're buried balls deep in a cute, tight Asian cheerleader and she offers to let you fill her pussy, well, that's an opportunity you seriously need to consider taking. I mean, I barely knew this girl, and that definitely gave me some hesitation, but the way she looked down at me so cutely, her smile so sweet and genuine, I was pretty sure I wanted to get to know her more.\n\nI began, \"I think-\"\n\nWith a jangle and a slight thud, a small key ring landed on my bare chest. The keys were almost so small as to be insubstantial, but they were no doubt the perfect size for the cuffs that bound Alyssa's hands behind her back.\n\n\"I leave the room for a little private time, and I find you've snuck a deserter and a boy into my party? If things are always going to get this interesting when I turn my back, I ought to turn my back more often,\" a firm voice said from the edge of the room.\n\nI knew who it was even if I didn't already know the voice. Rose casually turning to confirm the speaker's identity, though, certainly helped.\n\n\"Hey, Dakota Lewis. What's up?\" Rose said with perfect calm.\n\nThough my view of this dreaded cheer captain was blocked by a wall of luscious, bare flesh, I could sense the girl prowling around the edge of the room.\n\n\"I see that you've earned back the hearts and minds of the other girls on the squad, Rose. Good for you,\" Dakota said, even though there was very little in her voice that sounded pleased with the turn of events. \"Have fun, enjoy the party. I'm more interested with the boy on the floor with his pants around his ankles and, though I can't verify it from my current stance, presumably his cock stuffed up Alyssa's cunt.\"\n\nDakota walked around the edge of the wall of cheerleaders so that I could fully see her.\n\nAt once, she was exactly what I expected and nothing like I expected. Though lying on the floor made her 5'8\" stature tower over me, that she was wearing her formal blue and white Regan Hills Pumas cheerleader outfit threw the intimidation factor off slightly. With blue, knee-high socks, a short blue and white-striped skirt, I knew she had long, toned legs. The top did little to flatter her breasts, and the long-sleeves and immaculate gloves were more sterile-looking than enticing, but it was her face that was truly confusing for the bogeyman image I'd been given. Her face was perfectly pleasant, ordinary even, in a pretty sort of way. Her dark brown hair hung just past her shoulders, while her soft blue eyes sparkled with something I couldn't adequately pinpoint. With high cheekbones dotted with freckles, a faint tan and a broad smile, she looked, well, like a cheerleader, not the monster from the depths the other girls made her out to be.\n\nWith arms crossed across her chest, Dakota drummed her fingers on her elbows as if considering her next move. She looked down at me curiously, as so many girls who'd heard about me without ever knowing me seemed to. It was that look I'd gotten to understand so well of, 'You're the guy?'\n\n\"Ryan Collins?\" she said.\n\n\"Yeah,\" I replied.\n\nHer smile twitched up a little more, only slightly. \"Dakota Lewis. I've heard a lot about you. Let's talk. My room, main house, three minutes.\"\n\nAs quickly as she'd entered the room, Dakota disappeared. I looked around to the others nervously, settling my eyes on Kaitlyn. With a simple, short nod from her, I knew it was time.\n\nIt was time I finally got to know Dakota Lewis.\n\n***\n\nWhen preparing for conflict, it helps to go comfortable, and to that end I washed myself up a little in the bathroom and pulled my pants (if not my shirt) back on before making my way over to the main house. All the while, the girls around me gave me tips and warnings, making it all the more overwhelming. This didn't help my comfort.\n\nNor did my erection. After playing around with Rose in the car, then fucking both Brooke and Alyssa without cumming once, I was rock hard, and my balls felt like they were about to explode at any moment. Whatever reckoning I was due to have with Dakota, I hoped that it would involve some release.\n\nAfter some stumbling around her house trying to find where exactly her room was, I made it with perhaps ten seconds to spare. The door was closed, but left open a crack, just enough to offer privacy while still being welcoming.\n\nTaking a deep breath, I opened the door and stepped inside.\n\n\"Would you kindly close the door behind you? All the way?\" Dakota asked from the depths of her room. She sat in a chair at her desk, looking away from me.\n\nWithout hesitation, I did as I was told. Smirking, I joked to myself in a low voice, \"You know, there are better ways to control my actions...\"\n\n\"Seeing as how my name isn't Atlas and this isn't Rapture (though this room has seen its share of that latter word), I've no doubt you're absolutely correct on that matter,\" Dakota said.\n\nIf she wanted to surprise me, well, mission accomplished. It was this that made me take in her room, which seemed more ornate an ornate library with a bed in the middle than the traditional cheerleader's bedroom I'd become accustomed to. Bookcases full to bursting with titles on almost every topic imaginable covered nearly every wall, save for the space dedicated to her trophy case and the few bare patches of wall she'd deigned acceptable for pictures of her accomplishing her many achievements.\n\nDakota spun her chair around to assess me. \"Now, tell me... do you see yourself as the hero of this tale?\"\n\n\"What tale?\" I asked.\n\n\"The one you call your life. The one which all our lives have intersected with in one way or another today,\" Dakota responded.\n\nThis was taking an interesting turn. It wasn't one I was fully prepared for, but it was one I thought I could handle. \"Usually. Not always. Sometimes... sometimes I've made mistakes. Sometimes I've done unheroic things. Things I'm not proud of. So, maybe I'm more my own protagonist, most of the time, rather than a hero, but aren't we all the protagonist of our own story.\"\n\n\"Those who are aware of their own self-destructiveness might disagree, but I see your point. So, you don't come to me today a hero?\" Dakota asked.\n\n\"No,\" I replied.\n\nShe smiled. It was not a friendly smile. \"You say you don't come the hero, yet why do I expect you're here like all the rest?\"\n\n\"All the rest? Of what?\" I asked.",
        "\"Oh, don't be modest. Every so often one of the girls on the squad will summon a hero like the Greeks of old. They'll find their Perseus or Jason or Theseus, a strapping, shirtless man they think can rein in the beast within me. You're less strapping than usual, but like those heroes who've all got their secret weapon, I've heard of what you're packing in those pants. Incidentally: nice,\" she said, nodding down at my cock, impressed.\n\nI hadn't felt bashful in a long time, but the way her predatory eyes looked me over, I almost felt the need to cover up.\n\n\"You're supposed to defeat me and fuck me into submission, aren't you? Like the heroes who fought monsters that were often merely women who were victims of the gods' whims, you're supposed to take me down. You might even succeed, you know? I've heard of your prowess, and unbelievable though it may be to look at you, I don't distrust the word of my cheer squad sisters. You might actually have what it takes,\" Dakota said, crossing one leg over her knee.\n\n\"So, here I am before you in my finest armor,\" she said, motioning to her formal cheer outfit, undeniably beautiful and absolutely intimidating. \"If I had a fluffy white cat to pet, I could complete the villainous image I'm sure you have, but since I lack one, you've only me.\"\n\nStanding up before me, Dakota flattened her skirt trying to look her absolute best while still radiating power. In every facet of this, she was succeeding.\n\n\"So, Ryan, what kind of hero are you? Are you Perseus? Theseus? God forbid, Jason?\" she asked.\n\nShe'd approached me with the kind of shock and awe I hadn't prepared for, and wasn't ready to consider with everything I'd been told about her. I had, in truth, had the image of her as some unyielding monster, a bitch goddess of bitch goddesses, the worst of the worst of the cheerleader stereotypes. After seeing how she left Alyssa, I wasn't inclined to change my view on what I'd been told about her.\n\nNone of that matched the woman standing before me. I'd come up here ready to fuck, but now... now I needed to try something else.\n\n\"I always favored Odysseus, personally,\" I said. \"The clever hero was always more my style.\"\n\nIf it was possible to take her off guard, I think I did it. \"Given your physique, I can understand his appeal.\"\n\n\"Say that with a little more venom and I might actually take offense,\" I said.\n\n\"Feel free,\" Dakota replied.\n\n\"I won't say that some of the girls hadn't heavily suggested I try to 'tame' you, but that's not why I'm here,\" I said.\n\n\"No?\" Dakota said, unbelieving.\n\n\"Any guy who goes into a room with a beautiful woman with the intent to 'tame' her is a son of a bitch. I won't say I've never wanted to change a girl's mind before, but I like to get to know her and make a respectful request if there's something I want from her. Lacking that, persuade her, with my charm and intelligence, preferably,\" I said.\n\n\"But if those don't work, then with your cock?\" Dakota said.\n\n\"If I must. And my tongue. And fingers. I like to diversify,\" I said with some pride. \"But I don't need to do that, because I know that a lot of this big, bad bitch image is just a fa\u00e7ade.\"\n\nDakota approached me with slow steps, her eyes sizing me up and down. \"Explain your evidence.\"\n\n\"Sarah Kent,\" I said.\n\n\"What about her?\" she asked, though there was a slight change in her voice that told me I found the right angle of approach.\n\n\"If you were as big a bitch as everyone says, there's no way a girl as meek and sweet and kind as Sarah Kent gets onto the cheer squad. I don't care how much sway Kaitlyn claims to have with you, how many favors she had to call in, Sarah wouldn't get onto the team if you were as coldhearted a bitch as everyone seems to think you are,\" I said.\n\nDakota stroked her chin, \"What if I told you I was impressed by her dancing skills?\"\n\n\"She's good, probably better than any other girl here, but that wouldn't stop you if you were that much of a cunt,\" I said.\n\nDakota tried a different approach, \"What if I told you I thought she was hot and I just wanted to dominate and fuck the shit out of her?\"\n\n\"I'd say you've got your pick of anyone in school, and that even if you wanted her, that wouldn't have guaranteed her a spot on the team,\" I replied.\n\n\"So, you're implying I did this out of, what, the goodness of my heart?\" Dakota asked.\n\n\"I'm not sure why you did it, but it would take a better person than you let all the other girls on the squad see to do it,\" I said.\n\n\"And what about Alyssa?\" Dakota proposed. \"I stripped her naked and edged her with a vibrator for almost an hour with her hands cuffed behind her back because she was late for practice more times than I'd like. Doesn't that make me a villain?\"\n\n\"A little bit of a bitch, yeah, especially for using cuffs without a safety release since, you know, that's not safe, but... while I don't approve of you feeling the need to punish her for something so trivial, you did send her back to her friends, knowing that everyone would come to her help so she could cum fucking hard. You could've left her in whatever state you wanted her, tied up, cuffed to a bed or something for hours, but you sent her to her friends knowing they'd take care of her while helping you look like more of a bitch. You could have been better about it, but you could've been worse. A lot worse,\" I said.\n\nAgain, Dakota stroked her chin. \"Interesting theory.\"\n\n\"An accurate one?\" I replied.\n\n\"Possibly,\" she replied, non-committal. \"But that still doesn't help us figure out just what we're going to do with you, does it?\"\n\n\"Not really,\" I replied.\n\n\"But, let's keep this simple and how the story plays out. You find me attractive, yes?\" Dakota asked.\n\n\"Of course,\" I replied.\n\n\"And you want me?\" she asked.\n\nLooking her up and down, I couldn't deny how hot she was. \"Yeah.\"\n\n\"Well... you're not what I'd call conventionally attractive, but skill trounces beauty any day, and I've heard you've skill to spare. So, lucky for you, I want you too. With some sex in our future (the kind that will no doubt have the girls lining up to listen outside the door), I'm curious to see how well you think you know me,\" Dakota said.\n\n\"I don't know you at all,\" I replied.\n\n\"Well, fine, I'm curious to see how well you've sized me up. When it comes to girls like me, they often but not always fall into two sexual classes. There are those who love to be in charge and live for domination and nothing more, the conquering heroes of their own sexual epics who will take on any hero who tries to tame them, chewing them up and spitting out the parts they don't like while picking their teeth on the hero's bones,\" she said, raising a finger on one hand to illustrate her point.\n\nRaising a second finger, she said, \"And there are those who give the image of that girl, but secretly, deep down are looking for the kind of partner they can let their guard down with. Someone who lets them cede control in a safe environment and allowing them a rare moment of submission in a world they normally must control every aspect of.\"\n\nStepping close to me, so close I could almost feel her body heat against mine, she said, \"So tell me, Ryan, with your astute observational skills, which kind of girl do you think I am?\"\n\nThe answer was easy. I stepped closer to her, getting as close as I could without touching. \"I don't pity any guy who comes in here thinking he can tame you, because they don't deserve pity. You'd destroy them and pick your teeth with their bones, and they'd deserve it. You are fierce, and you shouldn't ever be underestimated. You are not putting on any image when it comes to that...\"\n\nReaching behind her, I grabbed a handful of her hair and pulled her head back. Her mouth lolled open from the action, her eyes focusing on me sharply.\n\nI said, \"But just because you're strong, doesn't mean there's any shame in enjoying submission from time to time. So, I guess what I'm saying is... I think you're both kind of girls. My question is, what kind of girl do you want to be right now?\"\n\nA slight smile curling on the edge of her lips, she said, \"I think you know the answer to that.\"\n\n\"So do I,\" I replied, kissing her deeply.\n\nOn breaking the kiss, she said, \"Oh, what fun we'll have, Ryan.\"\n\nI spun her around, pressing her ass into my cock. With one hand still in her hair, arching her neck back, I let my other hand explore her body, squeezing her nice, sweet tits through her top before running down her tight abs. When I reached her skirt, I dug underneath it, searching as I ground my clothed cock into the space between her ass cheeks through her skirt. I can't say that I was completely surprised that she wasn't wearing any panties in this outfit, but it was still a pleasant discovery when my probing fingers found her hot, steaming cunt.\n\n\"What fun indeed,\" I said, forcing two fingers inside of her.\n\n\"Oh fuck...\" Dakota groaned, grinding her ass further against me. She reached backward, blindly, fumbling for my pants and pulling them to the floor. Her hands found my cock in its aching rigidity, spreading the precum and slowly jacking me. For going in blind and behind her back, I had to say she was pretty good at it.\n\nTaking my hand from her pussy for just a moment, I pulled the base of her top up and over her bare stomach, then her breasts, revealing them to be perfectly bare. Though I couldn't see perfectly from this angle, I knew they were a nice, round and full C-cup with a slight bit of sag and some thick, puffy nipples that responded well to the touch of my thumb and forefingers.\n\n\"No bra... no panties...\" I whispered huskily in her ear, dropping my fingers back to her pussy. \"I'd hardly call that wearing your 'finest armor'.\"\n\n\"A metaphor only goes so far, especially when I'm hosting an orgy and would eventually like that cock buried deep inside each and every one of my most exquisite holes,\" she said, letting go of my cock and pulling her skirt up, allowing my cock to slide between her ass cheeks. For emphasis, she squeezed me.\n\n\"I see your point,\" I said, fingering her even more fiercely.\n\n\"So, is this how you truly mean to take charge and bring out my submissive side? Because I have to say, while this feels nice, I could get any of the girls with a half-decent strap-on to do to me what you're doing now if I really wanted to,\" Dakota said.\n\nIf she wanted to get a rise out of me, well, mission accomplished. I let go of her hair, using that hand to smack her on the ass hard enough for the crack to echo throughout the room.\n\nDakota turned on me, her eyes blazing with... what was that? Surprise? Anger? Lust? Some combination of the three? That was a hypothesis worth testing.\n\nI spanked her once. Twice. Three times more, her ass cheeks squeezing my cock each time. Though the first time I did it, she didn't make a sound, by the second and third times she let out soft whimpers. By the fourth, there was a sound coming from deep inside of her, something animalistic and hungry.\n\nI had her where I think, well, both of us really wanted her.\n\n\"Bend over the bed. Right. Fucking. Now,\" I commanded.\n\nRaising an eyebrow, Dakota almost looked impressed with me. She followed my order, sauntering over to her bed and bending over it at the waist. I took the opportunity to strip down completely this time (if I was going to give her a workout, I sure as hell wanted to do it comfortable), taking only my phone with me.\n\nDakota turned her head back to look at me, tossing her dark hair over her shoulder. \"So, you think you've found my weakness? My Achilles' Heel? My kryptonite?\"\n\nI reached down, pulling her skirt over her magnificently round ass and admiring, as always, a tight cheerleader body. \"I doubt that; but I know I've found something you like. How 'bout we start there?\"\n\nI spanked her again, once on each cheek. She bit her lip and looked back at me hungrily, mewling encouragingly as I swatted her ass twice more. Her beautiful, perfect cheeks were pink from the impact, and with an image that perfect I couldn't help but take a picture to add to my Senior Year Memories album.\n\n\"You like a good spanking, don't you?\" I asked, swatting her butt again.\n\nDakota groaned deliciously. \"Mmmmmhmmmmm...\"\n\n\"You don't get it as much as you need, do you?\" I asked.\n\n\"Few have the balls to try, and those that do more often than not aren't the kind of person I'd let get any further,\" she said.\n\n\"And what makes me so special?\" I asked, letting my erection graze her ass cheeks, painting a thin line of precum across her pink flesh.\n\n\"You do it because you know I enjoy it, not to play some stupid dominance game. I'm my own fucking woman; I don't have the time to let some boy or girl looking to take me down a peg play with my immaculate flesh. You understand the truth of the power dynamics at play here and don't seek to change me in any way. You're just here for fun. I... I've read this correctly, yes?\" Dakota asked.\n\nSmiling, I said, \"Yes.\"\n\nThen, before she could get a word in edgewise, I dropped to my knees, spread her legs nice and wide, and leaned in toward her pussy. The fearsome-but-not-actually-so-fearsome Dakota Lewis almost said something in response, but when my lips and tongue found her lower lips, all words were lost.\n\nWell, all words that weren't mangled or four-lettered at least.\n\n\"Oh, fuck, you... god... you bastard, fuckfuckfuck, right there, right, fuck... they weren't lying, they weren't lying, you're fucking good, fucking... fuckfuckfuck!\" Dakota wailed, burying her face into the bed as she got lost somewhere between laughter and rapture before ultimately deciding that being lost wasn't such a bad thing right now.\n\nI came up for air and decided a little playful taunting wasn't out of order, \"Have you got a speech for this? Because, while I'm enjoying your speeches, I-\"\n\n\"SHUT UP AND LICK MY FUCKING CUNT!\" she practically roared, before she caught herself and said almost meekly, \"Please?\"\n\n\"My, my, my, what a mouth you have,\" I said, tauntingly swiping my tongue over her slit, not enough to give her maximum pleasure but enough to make her quake. With how good she tasted, it took a lot of self restraint not to dive in and lap up everything I could while I made her scream with my mouth. That wasn't the game we were playing, not how this was meant to play out.\n\nNo, I was patient. I teased. I taunted. I tormented. I brought her close to the edge of ecstasy before easing up, pulling her back. Never too far, mind you, I didn't want her losing the rhythm of things, but if she was going to be torturing some of these girls with the power of edging, well, I was going to show her that turnabout was fair play. And probably a lot of fun, too, the way she got whinier and more desperate as she went.\n\nI brought her close, then I let up. I let up just enough that I was still keeping her going, but letting her calm ever so slightly. Once she'd calmed enough to be almost mellow (at least about as mellow as one could be with a tongue in their pussy), I'd start in on her more heavily again and bring her close to the edge.\n\nWash, rinse, repeat.\n\nIt may not have earned me brownie points with one Ms. Dakota Lewis, but it was a lot of fun hearing what she had to throw back my way.\n\n\"Oh you son of a bitch, you motherfucker, you think this is... FUCK! You think this is a game? You think this is funny, you bastard? Motherfucker, you can't just, AAAAAAAH!! Fuck, fuck, fuck you're good at that, please... please just let me cum, I'll be good, I'll do whatever you want, just let me, please, let me fucking cum!\" she said.\n\nWith one long lick, I said, \"Maybe.\"\n\nDakota grumbled. \"What do I have to do to get more than 'maybe'?\"\n\n\"Well, I'm pretty much game for whatever you're willing to offer; I was just hoping you might apologize to the other girls and, you know, stop being such a bitch to them all the time,\" I said.\n\n\"You're gonna make me do it, aren't you?\" she asked.\n\n\"Do what?\" I responded.\n\n\"Tell the truth,\" she grumbled. \"If you... god, if you keep eating me out, I'll tell you the fucking truth.\"\n\n\"Deal,\" I said, diving back in and making her squeal.\n\n\"I honestly don't hate any of these girls, and I consider them all friends, okay? Yes, yes, yes, keep going, there, please... I'm hard on them as a group because a common enemy has a way of bonding people together; you have read Watchmen, haven't you? I may not be Ozymandias, king of kings, but I get results. Well, when they're all together, I'm a complete and total fucking cunt to them because it makes them work harder to spite me, but one on one, I'm friends with each and every one of those girls! I bet if you were to ask any of them after a while, they'd tell you that they know the secret to getting on my good side! Look on my works, ye mighty, and motherfucking despair!\" Dakota moaned through my ministrations.\n\n\"So, they hate you and they don't hate you?\" I asked. She nodded in reply. I continued, \"That's a little manipulative.\"\n\n\"Yeah, well our regional trophies make up for it,\" Dakota said.\n\nNot being able to argue that, but understanding the insane logic she spoke of, I stopped eating her pussy and stood up behind her. She mewled like a wounded kitten, pouting angrily back at me for that brief moment before I lined my cock up with the lips of her pussy.\n\nOnce I slid it home into her wet, eager cunt, she wasn't pouting anymore.\n\n\"GODDAMNIT FUCK! THAT'S BIG!\" she asked, rocking her hips against me and begging for more.\n\nGrabbing a handful of her hair and pulling her up, just enough to give me leverage to push the rest of my cock deep inside her tight little pussy, I said, \"Just wait until I really start to fuck you.\"\n\n\"Oh, I'm waiting,\" Dakota growled. \"Waiting to see if you're more than just talk and cock.\"\n\nI forced her back down into the bed, grabbed her by the hips and, not to mince words or anything, but I fucked the shit out of her. I was so backed up, so close to cumming already from what had happened with Brooke and Sarah and Alyssa and the rest, that there was very little that could slow me down.\n\nThankfully, I'd gotten Dakota to a place where she wasn't very far behind. She reached down to finger herself, and I was more than happy to oblige her as I grabbed her beautiful ass in one hand and pressed my thumb against her tight, winking asshole. It was difficult to balance and juggle all the elements in play, but when she went tense and cried out, I knew I'd done her right.\n\n\"FUCK, YOU BASTARD, I'M FUCKING CUMMING, YOU FUCKING SONOFABITCH FUCK, FUCK YOU, FUCK, FUCK!\" Dakota screamed as she came, her wails becoming high-pitched and formless as I pounded her mercilessly.\n\nHer orgasm almost set me off, so I warned her, \"I'm gonna cum too! Gonna cum...\"\n\n\"FILL ME UP YOU BASTARD, JUST FUCKING UNLOAD IN ME, FUCK, FUCK!\" she cried out.\n\nShe asked. I delivered. With pleasure so overwhelming it nearly blinded me, I unleashed inside of her, letting the floodgates go as I shot more cum than I thought it possible for my body to manufacture deep inside of Dakota Lewis' pussy. Her pussy milked me for shot after shot, urging every last drop from me and matching my slowing thrusts as we both came down from a truly hard fuck.\n\nI was used to a bit of recovery time after a moment like this, but call it getting caught up in the moment and still being backed up from being interrupted back at the party, but I was still mostly hard. I'd need a little coaxing, but I knew I'd be good for more soon.\n\nI pulled out of her, pushing her more onto the bed and rolling her onto her back. With her dress uniform all in disarray, her makeup smeared, her perfect tits hanging out, rising and falling with every pant and her pink, engorged pussy lips spread open and leaking my cum onto her pretty blue skirt, Dakota was an image of lewd perfection.\n\nI crawled up onto the bed beside her, on my knees next to her head. I dangled my mostly hard cock above her mouth, enjoying her hungry look as she practically licked her lips in anticipation.",
        "I didn't have to say a word, but in the spirit of the power game we were playing, I said, \"Suck it.\"\n\nA soft, clipped moan escaped her pretty lips, and all too eagerly Dakota inhaled almost the entire length of my cock. It wasn't the most skilled blowjob I'd ever received, but it was one driven by pure lust and enthusiasm. She sloppily sucked my cock, savoring its flavor as if it were the sweetest and rarest of treats in the world. When I experimentally pulled it from her mouth, she met the cue and began sucking on my balls, gently yet forcefully enough that I wouldn't be allowed to forget her lustful desires. I granted her wish by pushing my cock back into her mouth, reaching over to finger her some more in reward.\n\nWe must've been quite a sight, a nerd kneeling naked on the half-naked head cheerleader's bed, his cock in her mouth and his fingers buried in her cum-filled cunt. It was a testament to the year I had that I wasn't fully sure that this was one of the most intense first sexual encounters I'd had all year, but it was one I was looking forward to seeing continue further.\n\nFeeling confident in my restored hardness, I pulled my cock from her lips and climbed back between her legs, sliding my cock once again into her pussy.\n\n\"Mmmmmmmmm, I think I'm beginning to see why you're so popular with my girls,\" Dakota groaned, wrapping her legs around me and looking up at me somewhat dreamily.\n\n\"You don't even know the half of it,\" I said, leaning down and kissing her. It lacked the fire, the wild intensity of our last furious union, but there was a strange tenderness to it I found I really liked. We kissed for a while like this, me buried deep in her pussy with her legs wrapped around me. It was pleasant, almost sweet, even.\n\nAnd then Dakota had to go and make the moment filthier.\n\nBreaking the kiss, she said, \"You're right. I haven't had you up my ass, yet.\"\n\nIt may not have fit the moment, but I was pretty okay with her adding filth to the moment. Slowly, I began to fuck in and out of her.\n\n\"Oh, you like it up the ass, do you?\" I taunted, keeping each stroke slow and delicious.\n\nShe purred. \"Tell me, have you met a single girl on the squad who doesn't?\"\n\n\"Well...\" I considered. \"There's a few I've yet to really talk to, so, I can't say for sure.\"\n\nGrunting as I picked up the pace, Dakota replied, \"Believe me: they do. But I'm not here to talk about the other girls; I'm here to talk about you, and me, and how much I want your monster cock in my tight, sweet little ass.\"\n\n\"Something tells me you're more dirty than sweet,\" I chided.\n\nDakota laughed. \"I keep myself clean down there, but yes, that assessment is fair. Tell me, how did you know? Was it the cheerleader thing?\"\n\nShaking my head, I said, \"A wise woman once told me that all uptight girls really love it in the ass. While I've yet to confirm that theory, it's proven accurate more often than not in my experience.\"\n\n\"And your experience is legion, is it not?\" she asked, biting her lip from pleasure as we still slowly fucked.\n\n\"It is,\" I replied. \"And I've learned a few tricks along the way.\"\n\nTo prove this, I grabbed hold of her and rolled over so she was on top of me. Dakota seemed all too pleased with the change in position, taking to riding me easily. Her hips rocked pleasurably, and her tits looked so perfect I couldn't help but take them in my hands and squeeze her nipples.\n\n\"That you have,\" Dakota replied, impressed. \"You know how to treat a girl and can rub a few brain cells together. Add that to your anatomy, and I think you and I might have to spend some more time together when I can have you to myself.\"\n\nThinking about how fun this had been so far, I unhesitatingly responded, \"I'm game if you are.\"\n\n\"Oh, I'm very game,\" she said, bouncing up and down on my cock.\n\n\"Good,\" I said, pulling her down for a kiss. \"Because I've still got cum for you. Lots of it. You get me nice and started here, build up a nice load you cum and you cum hard, then I'll take you and your ass and show you some hardcore anal fucking like you've never had before and fill you to the fucking brim.\"\n\n\"Hardly romantic,\" she said lustily, pulling off the top of her uniform and tossing it aside, \"But infinitely enticing.\"\n\n\"Good,\" I said, swatting her on the ass nice and loud and loving the way it made her squeal.\n\nWatching her writhe and squirm as she bounced up and down on my cock, her juicy tits bouncing freely in those moments that I let them go and grabbed her ass, the look of absolute release on her face as she let loose and fucked me... it was something special. The kind of special that made me glad I'd come so recently, honestly, because as much as I could feel a nice load backed up in my tanks, the fact remained I didn't want to pop off before I had her ass.\n\nBeing good and not filling her pussy again with my thick cum took Herculean restraint, and though I didn't have the physical strength of that particular hero, I did still manage to hold back no matter how much she bounced on my cock. I watched her, thoroughly enjoying the show as she let herself get lost in the moment, holding her hips and guiding her up and down on my cock so she'd receive maximum pleasure.\n\nIt was working. I could feel her tensing up again, her body shuddering as another orgasm threatened to make her first pale in comparison. Rather than let it threaten, I worked to guarantee it.\n\nI reached down, rubbing her clit furiously as she bounced up and down on my cock, our eyes locking as she looked at me with this increasing sense of needy desperation. While a matter of moments ago I was holding her orgasms back to keep the game we were playing alive, now I was sure I couldn't deny her anything.\n\n\"You got it, you got it,\" I muttered to her. \"Cum for me. Like that. Cum for me now, cum for me... cum for me!\"\n\nI could tell there was part of her that wanted to fight this, to keep it going and bring the narrative back to the place where she was usually in charge because she was on top. It was an instinctive thing, because I also knew from what she'd done and what she said that she was looking to cut loose. I saw this conflict pass her face, coursing through almost every square inch of her body as she considered holding back.\n\n\"Oh... FUCK IT!\" she cried out, letting the orgasm hit her like a truck. She bounced oh so deliciously on my cock, bucking and shaking and losing control, the sight of her sweaty, beautiful flesh trembling only matched by the way her pussy tightened around my cock. It took the greatest restraint (and the great fortune of having cum quite recently) not to completely lose it myself, but I held on.\n\nShe finished against me, collapsing and kissing me, rubbing her breasts rather wonderfully against my bare chest as she smiled.\n\n\"That... you have a gift,\" she said.\n\n\"I don't know about a gift, but I've learned a few things this year,\" I said.\n\n\"And I'm sure I'm not the only one who's grateful for this development,\" she replied, kissing me again.\n\nDoing some mental math, I said, \"Twenty-five women and counting.\"\n\nShe scoffed, \"Only twenty-five?\"\n\n\"Hey, I only started in September, and I need time to eat, drink, sleep, do homework, hang out with my girlfriend and friends...\"\n\n\"Oh, please; I've got early admission to Caltech and way more on the table than you do and I still manage to crush those numbers. You can do way better with what you've- HEY!\" she yelped as I smacked her on the ass.\n\n\"I'll manage,\" I say.\n\n\"You better,\" she said, rubbing the tender flesh of her ass. \"Because, unless you're Kyle Bowman, we only get one senior year and we need to do what we can to have what fun we can. We're not going to be granted this level of irresponsibility forever.\"\n\nHaving heard similar words from a number of my friends, I pulled her in for a kiss. \"So, in the spirit of that irresponsibility, will you maybe consider going a little easier on the group every so often? Not all the time, I get the image you're trying to pull off with them, but, you know, maybe give them one day a week when you're not such a cunt?\"\n\n\"What, like a 'Taco Tuesday'?\" Dakota suggested, amused.\n\n\"If they like tacos...\" I said, swatting her on the ass again for good measure. She groaned, a low, lusty sound as her eyes blazed.\n\n\"Officially, I can arrange for that. Unofficially... you want to be a hero?\" Dakota asked.\n\n\"Not the kind who takes you down a peg or anything...\" I said.\n\nShe shook her head, squeezing my cock with her pussy for emphasis. \"I'm not asking for that, but, in the spirit of this newfound goodwill you've inspired in me, and because there's a ninety percent chance that most of, if not all of, the other girls are outside in the hall listening to this right now, might I suggest a little performance to help seal the deal? One that will let them know where I stand, since there's no way they could hear us now, and one that will allow you to look like such a hero you'll be fucked more this New Year's than probably any other man on Earth?\"\n\nThis wasn't one of those questions that required a lot of serious, heavy thinking. \"What kind of performance do you have in mind?\"\n\nKeeping her voice low, Dakota climbed off of me and outlined exactly what she had in mind. I had to admit, in a Machiavellian sort of way, it made a lot of sense. I didn't know if it would work or not, since there were more than a few smart girls, but with this being one of those rare deceptions where no one got hurt and all of the involved parties got to have a lot of fun... what the hell, it was worth a try.\n\nShe shed the last few vestiges of her clothes and walked to the bedroom door completely nude, having me talk to her a little louder than normal to make it seem as if all was going to plan in this room while she listened to the door. Satisfied that at least some of the others were out there, she nodded to me and beckoned me over. At her direction, I pulled a bottle of lube from her nightstand and brought over my phone, then joined her by the door.\n\nWith a mirror completely covering its surface, I got a perfect view of the both of us naked.\n\nWhispering to me, Dakota said, \"The show must go on.\"\n\nNuzzling behind her, I whispered in her ear, \"If by show, you mean anal...\"\n\nShe giggled softly.\n\nIt was showtime. I spanked her ass loudly, loud enough to echo throughout the room.\n\n\"FUCK!\" she cried out, bracing her hands against the door.\n\n\"Well, if you're gonna be such a bitch, I'm gonna spank you like a bitch,\" I growled loudly.\n\n\"Really, that's the best you've got, you fucking nerd?\" Dakota shot back.\n\n\"No,\" I said, squeezing a little lube onto my fingertips. \"I've also got a couple fingers shoved right up your tight, fucking, slutty ass.\"\n\nShe groaned as I did exactly that, shaking against the door. Looking to immortalize this moment, and continue the rest of our show, I took a picture of this and immediately sent it to Kaitlyn.\n\n\"You didn't!\" Dakota cried out in mock scandal.\n\n\"Oh I did, they need to know what a dirty fucking slut you are, and what I'm gonna do to you right here,\" I growled, fucking her ass with my fingers as she braced herself against the door.\n\n\"And what are you gonna do?\" she taunted.\n\n\"I'm gonna fuck your tight little slut ass,\" I said.\n\nShe scoffed. \"You couldn't handle my ass.\"\n\n\"Wanna bet?\" I said, pulling my fingers from her ass and squeezing lube onto my cock. Softer, so the others couldn't hear, I whispered, \"You ready?\"\n\n\"Always,\" she whispered back conspiratorially. I rubbed my cock between her ass cheeks, pressing gently against her tight hole in a way that made her moan. It was going to be an interesting challenge, keeping up this act when fucking a girl up the ass normally kept my senses far from me, but it would be fun to try.\n\n\"Get ready,\" I said louder. \"Here it comes.\"\n\nHolding back a laugh, Dakota turned to me and mouthed, 'Here it comes?'\n\nI shrugged. I thrust forward, pushing the head of my cock into her tightest hole.\n\n\"OH, FUCK! SO FUCKING BIG, YOU'RE GONNA TEAR ME APART!\" Dakota cried out.\n\n\"That's just the head,\" I said. \"There's almost a foot more to fuck you with. You said I couldn't handle your ass, but did you ever think you couldn't handle my cock?\"\n\nThough her eyes were wide from taking my cock in her ass, Dakota was doing a good job keeping to the act she intended, pounding on the door and groaning. \"I've got... FUCK! You can't... no, I can take it, you don't... FUCK!\"\n\nI fed inch after inch inside of her ass, taking away her words and making her a moaning, shuddering wreck as she pounded on the door and cried out in a mix of pain and pleasure. When my hips finally met her ass, my balls resting against her soaked pussy, I kissed her on the shoulder in silent congratulations.\n\n\"This... is... amazing!\" she whispered back, arching her neck so she could kiss me.\n\n\"You good to be fucked?\" I whispered back, wanting to make sure she was okay.\n\n\"If you don't fuck me as hard as you can, I can't be held accountable for my actions with what I do to you,\" Dakota returned.\n\n\"Okay, so you're good,\" I whispered, pulling my cock out and slamming it back home in her tight ass.\n\n\"FUCK!\" she cried out.\n\n\"So... fucking... tight! You... like... that?\" I grunted as I grabbed her hips and started to fuck her ass nice and hard. She was so tight, so hot, her ass gripping my cock so perfectly I thought I'd pop off at any moment.\n\n\"GOD, it's so big, fuckfuckfucking hell, how can you... god, how can this be possible you... fucking... nerd! You're fucking my ass better than, fuck, anyone ever has!\" Dakota exclaimed. \n\nReaching around to finger her while we fucked, I did my best to play up the character we'd discussed. \"If you're a good little cumslut, I might tell you. If you're nice and play by all the rules and do everything I say, I'll let you cum harder than you've ever cum before.\"\n\n\"That's... not... fair!\" Dakota exclaimed, smiling into the mirror cutely as we fucked. Letting go of the door for the moment, she reached down and grabbed my phone, taking a picture of us smiling and fucking and generally having an amazing time. Now, I'd had plenty of weird and amazing sexual encounters this year, but having an awesome time fucking Dakota Lewis' ass while we were pretending some grand and epic battle of the wills for the benefit of whoever was listening on the other side of that door, well, that at least had to crack the top five weirdest.\n\nFor now, anyway.\n\n\"I never said it'd be fair. I don't play fair when it comes to my friends,\" I grunted. \"You're being a real bitch to them, and that's gotta stop. If you promise to be nice, I'll make you cum.\"\n\n\"Bastard!\" Dakota shot back.\n\n\"I'll stop, if you force me to,\" I mock threatened.\n\n\"NO!\" she yelled, as much an act as it was the truth. Both of us were getting really close to cumming, and we had to time this scene right. \"NO! Please, no! I want it... I want it...\"\n\n\"Then you know what you gotta say...\" I taunted.\n\n\"FINE! I promise I'll be less of a bitch to them! I'll be good, I promise, I swear, just let me cum, let me fucking cum, please let me cum!\" she replied, tossing my phone aside and bracing herself against the door for the hardest fuck I could manage.\n\n\"You got it,\" I said, pounding into her so hard I was afraid the door would knock itself off its hinges, but credit its engineering and her steadfastness, this didn't happen. Thank god it didn't, because it gave me the exquisite view of watching her in the mirror, her perfect, sweat-drenched body, her swaying tits with their hard nipples, our bodies colliding with each other so perfectly as our faces were screwed up in ecstasy. I never would've thought a connection like this was possible with Dakota Lewis after all I'd been warned of for her, but damn if it wasn't something special.\n\n\"GODDAMNIT FUCK, I'M CUMMING, I'M CUMMING YOU FUUUUUUUUUUUUUUUUUUUUUCK!!\" Dakota cried out, bucking and shaking against me as the orgasm hit her like a 2 x 4, her asshole squeezing my cock so tightly, so insistently it set off my own orgasm. Her asshole milked my cock hard, squeezing shot after shot of my cum into her. It was a sweet, maddening pleasure, one I didn't want to end as it felt like all the pleasure in the world was being drawn out through my cock and into her.\n\nWhen we'd both finished, tired and panting, both barely able to stand, we looked at each other in the mirror and exchanged a satisfied, tired nod. I leaned in, kissing the back of her neck a few slow, soft times while we giggled and stayed close to each other. When she turned her head to kiss me, I took full advantage of kissing her back, savoring her taste as well as our victory.\n\n\"You should go out and greet your crowd, you conquering hero, you,\" she whispered, squeezing my cock with her ass.\n\nI kissed her back fiercely. \"In my eyes, you can never be conquered.\"\n\nDakota smiled back, kissing me and pulling off of my cock. \"Thanks. But we've a charade to finish, and a charade we must finish. Go greet your crowd, I'll follow shortly.\"\n\nOn wobbly legs, she walked back a few steps into her room, enough to let me come out looking like the conquering hero. That I wasn't actually one, at least not like Kaitlyn was suggesting, was for only Dakota and me to know. I liked to think that we'd come to a mutually beneficial accord that the other girls would greatly enjoy, but only time would tell.\n\nI opened the door and stepped out into the hallway. True to Dakota's prediction, we'd assembled an audience outside. While I'd only expected only a few of the more inquisitive, gossipy girls to be in the mix, I was surprised by the image of eleven naked cheerleaders standing in the hallway.\n\nAddison. Cleo. Alyssa. Jade. Rose. Gwen. Sarah. Haley. Sasha. Brooke. Kaitlyn.\n\nAll of them eyed me with mixed looks of curiosity and lust, and all of them looked positively luscious. No doubt a few had been enjoying themselves while Dakota and I fucked, but now they really wanted to know what had happened between me and their captain.\n\nRather enjoying such a unique opportunity, I just said, \"What?\"\n\nSomebody snickered. Kaitlyn stepped forward. \"Did you two...?\"\n\n\"We had a good time,\" I said, noncommittal.\n\n\"A good time?\" Kaitlyn said. \"That's all you have to-\"\n\n\"DOES ANYBODY REMEMBER LAUGHTER?\"\n\nDakota practically bounced out into the hallway behind me, her hands in the air and looking a royal mess. With cum leaking down her thighs from her pussy and asshole, her tits bouncing beautifully, hair a mess and makeup streaked down her face, she was hardly the composed image she greeted me as. The other girls looked on her and me with something that might have been awe.\n\n\"Oh, come on girls, this is supposed to be a party, isn't it? Let's head back to the guest house and have ourselves a fucking party!\" Dakota proclaimed to the cheers of the other girls.\n\nAs she led them out with a new spring in her step, a few girls stopped to congratulate me along the way. The last to follow was Brooke King, who despite the mischievous grin and the naked body that still bore the marks of some of what we'd done earlier, still looked as sweet and innocent as ever.\n\n\"So, how'd ya do it?\" she asked.\n\nAs I wagered she was one of my best friends these days, I decided against lying to her. \"We talked. Got to know each other. Came to a mutual understanding.\"\n\nBrooke nodded. \"Sounds right. She's got her bitchy side, but, she's good, too. A lot of people don't get that, but, I thought you, like, totally would. And you did?\"\n\n\"Yeah. I think so,\" I said.\n\nBrooke smiled, kissing me sweetly. \"You know this, like, is gonna be the most bitchin' New Year's party in town now, right?\"\n\nPart of me had been dreading this party almost as much as I'd been looking forward to it, but now that I understood who Dakota was and what she was all about...",
        "\"Yeah,\" I said, holding my arm out for her. Giggling, she looped hers around mine. \"Never thought I'd say this before, but, I think I'm ready to party.\"\n\n\"Oh, Ryan, I've, like, said it before and I'm gonna say it again: we totally made a monster out of you!\" Brooke laughed.\n\n\"Maybe,\" I agreed. \"But if I'm the kind of monster who gets to spend his New Year's having awesome sex with a dozen hot cheerleaders, then, well, I guess I like being a monster.\"\n\nShe cooed, then dropped to her knees in front of me. Teasingly, she licked and suckled at my half inflated cock, still slick with my juices, and fresh out of Dakota's ass to boot. Brooke had to know this, but it didn't slow her enthusiasm at all.\n\n\"Oh, I like it when you get all monster talk on me,\" she purred, taking a few inches of me in her mouth and sucking cheerfully.\n\nGrabbing a pigtail in each hand as she started to bob up and down on my cock, I muttered, \"Happy fucking New Year's.\"\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "anal",
        "big breasts",
        "big cock",
        "cheerleader",
        "creampie",
        "group sex",
        "high school",
        "oral",
        "slut"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-24"
}