{
    "title": "Anal Sex 201: Male Penetration",
    "pages": [
        "INTRODUCTION\n\nMale anal penetration is a sex act that carries many stigmas with it, yet done right it can be amazingly pleasurable. I've written this HowTo as a guide for heterosexual couples who want to introduce male penetration using strap-ons into their sexual repertoire.\n\nMany men are interested in anal play but are either uncomfortable approaching their partner, or don't know how to bring the subject up. I'll share ideas on how to talk with your partner about male anal play, and provide some useful information on issues including selecting a dildo and harness, instructional videos, hygiene issues, and selecting lubricants.\n\nYou should know that there's no \"recipe\" on how to talk about this subject with your partner. Everyone is different and is going to have their own ideas and concerns about the topic. You're probably not going to be able to read from a script and get your partner to try this activity. It's important that you patiently communicate with your partner about your desires.\n\nThere is one point I'd like to mention before going further. Men who are interested in penetration are often stereotyped as gay. This may be an area that the male will have to provide reassurance to the female. The discussion here does imply that there's something wrong with being gay.\n\nREALITY IS NOT PORNOGRAPHY\n\nIf you are a beginner to anal penetration, you need to forget everything you've seen in a porn flick and everything you've read in the Lit Anal section. This warning particularly applies if you're a woman interested in penetrating your male partner.\n\nWritten porn works by raising the bar; by increasing the intensity. Here are some things that are common in porn that are false in the real world.\n\n<UL> <LI>Sex is effortless, everyone achieves orgasm every time, and it's never awkward. <LI>Couples are perfectly in sync and require no communication. They instinctively know how the other person likes to be pleasured even when it's their first time together. <LI>People can be anally penetrated by very large objects and suffer little or no pain. It will \"hurt good\" at the end. <LI>Lubricant isn't really necessary. </UL>\n\nI could go on for pages. Reality is not like this. Don't use exposure to porn as a guide to anal sex. It's not going to work and you're going to end up hurt or frustrated, or with a hurt or frustrated partner.\n\nMEN: BRINGING THE TOPIC UP WITH YOUR PARTNER\n\nUnless you're in the top 2% of sexually adventurous couples it's going to take some communications and honesty to discuss this. On the bell curve of heterosexuality, male anal penetration is pretty far to the right. In other words it's not a common practice.\n\nHere's a fantasy conversation between a couple:\n\nMan: I'd like you to do me in the rear with a strap-on.\n\nWoman: Sounds like fun. Let's go.\n\nBZZT! Sorry gang! Here's a much more likely scenario:\n\nMan: I'd like you to do me in the rear with a strap-on.\n\nWoman: (dead silence)\n\nWhen you first bring this up, your female partner is going to have a lot of things running through her mind. First and foremost will be the thought that you are gay or bisexual. This is going to probably freak her out a little bit. If your relationship has any degree of seriousness, she's going to feel really threatened. It's a natural concern and it's one you are going to have to address.\n\nYou need to speak honestly about your desires. For my partner and me, the solution was to talk openly. I enjoy being anally stimulated. I told my wife that the vibrator I owned when we first met was for me and I used it fairly often. I also told her that while I enjoyed being anally stimulated, the thought of having sex with a man was just not appealing to me. Not even a little.\n\nAnother helpful thing to do is to work on your relationship with your partner. A woman who feels adored by her man is going to be willing to go a lot further than one who feels unhappy in her relationship. Start paying more attention to her emotional needs. If you can commit to making your partner feel absolutely worshipped at least once a day you'll be amazed at the results.\n\nIt may sound like I'm advocating you manipulate your partner to get your desires met. That's not what I'm saying. What I'm saying is that the happier you are as a couple, the more likely you are to get your needs met. It also goes without saying that the happier you are as a couple, the happier you both will be, individually.\n\nBe prepared to bring the topic up multiple times. Like anyone does with an uncomfortable subject, your partner may try to avoid the discussion, perhaps even in hope that it will go away, altogether. You may need to be persistent (as opposed to pushy). Remember to be patient and loving in your approach; listen to your partner. Forcing your partner into something she's not comfortable with is a bad idea. You probably don't want an angry woman near your ass with a strap-on. It's just not a good idea.\n\nOne helpful method of discussing anal play is to watch an instructional video together. I'll be discussing this later.\n\nWOMEN: BRINGING UP THE TOPIC WITH YOUR MAN\n\nIf you're a woman and you're interested in penetrating your partner with a strap-on, you're going to have some of the same issues discussed in the previous section.\n\nA major barrier for a man to overcome would be the mental perception that you think he's gay, or if he agrees he would be admitting to being gay, or if he likes it, he must be gay. Are you sensing a theme here? Another issue your man may be sensitive to is the idea of being submissive. Let's face it, agreeing to be penetrated would be seen by most men as a submissive act. Some men enjoy being submissive and if your partner is one, it can work very well. If your partner is not comfortable being submissive and a major source of your attraction to this is female dominance, you might have some issues to work through.\n\nIf you want to introduce your male partner to anal play, you should start slowly. Leaping from the closet wearing a 10-inch dildo that's 2 inches in diameter might be exciting, but it might cause your partner to cover his ass with his hands and run screaming from the room. You might want to try rimming or orally stimulating his anus as part of foreplay. Another suggestion would be to introduce a finger into the man's anus while giving him a blowjob (make sure your nails are trimmed, and don't forget the lube!)\n\nYou'll need to gauge how receptive your partner is during this. If he attempts to withdraw, or is showing discomfort, you need to talk with him. If your partner is enjoying the attention, you might want to tell him how much you enjoy pleasing him and how excited you are by his reactions. Once you've advanced to this point, you can try introducing anal toys into your love making. A small vibrating plug may be a good start.\n\nNow you're probably ready to bring up the subject of strap-on play. Talk honestly with your partner about why it intrigues you. If your partner is sensitive to being seen as submissive or \"gay\", it might be wise to reassure him that it wouldn't diminish his masculinity in your eyes. If your partner confesses to being open to the idea of anal penetration, it may be a good time to watch an instructional video together.\n\nINSTRUCTIONAL VIDEOS\n\nThere are several instructional videos on the market that address male penetration using strap-ons. I recommend that you get one and watch it by yourself first, and then with your partner. I'm specifying instructional here as opposed to a porn title. Porn titles are not going to have the instructional information you need and will likely present false or misleading information about anal sex practices.\n\nAn instructional video can serve three purposes. First, it can provide you both with information on the mechanics of strap-on anal play. This includes things like lubrication, hygiene, and toy selection. More importantly, it can provide a chance for you to talk about things you would like or not like to do. Finally, it can reassure your mate that your desires are not totally uncommon.\n\nWhen you're watching the video by yourself, think of points that it brings out that you want to discuss with your partner. In practical terms, you need to give your partner some idea of what you would like to do. Another goal should be to think about how to make this act pleasurable for your partner. If there's an act that your partner may find exciting but you feel neutral about, then you need to bring that up.\n\nIf you're a woman bringing this up to your man, then you need to draw him out on what he would find exciting. Then is the ideal opportunity for you to discuss what you found exciting and work towards a middle ground. Here are some things we discussed while watching a video:\n\nDuring a video, a woman was stimulating her anus using 3-4 fingers. I said that while two fingers would be OK, and three might work, four were out of the question.\n\nDuring one segment the male ejaculated onto the female and the female picked up the semen and placed some in the male's mouth. I told my female partner that if that were something she would like to do, I'd go along but it wasn't something that I was particularly into on my own.\n\nDuring the video, the presenter briefly mentioned male submission. I told my partner that I could be submissive if that were something she desired. As part of the discussion on submission, I told her that while performing fellatio on the dildo wouldn't be something I would do on my own, if she found that exciting I would be willing to go there.\n\nDuring another segment, a double-dildo was introduced. I was surprised when my partner said that she thought that kind of toy might be interesting to experiment with. I didn't expect that.\n\nIn short, use the video as a chance to talk about things you're interested in doing, things you're neutral about, and things you absolutely don't want to do. Find out the same things from your partner, and work together to come up with a compromise.\n\nHere are brief reviews of two instructional videos that I've seen.\n\nTristan Taormino's Expert Guide to Anal Pleasure For Men (1 Hour 40 Minutes)\n\nVivid Entertainment\n\nThis is an excellent video, and I highly recommend it. It covers male sexuality in relation to anal play, male anatomy, hygiene, lubrication, and toy selection. The video starts out with an instructional piece. Next, an interview with a couple is done. During the interview, the presenter talks about anal play, and the couple begin anal foreplay under the supervision of the presenter.\n\nFinally, there are three video segments where male/female couples engage in anal play. In the first two segments, strap-ons are used. In the last segment, anal toys are used on the man during fellatio and vaginal intercourse. \n\nHonestly, my partner and I didn't enjoy the third segment very much. We felt it was shot as straight porn and had minimal educational content. The models are attractive; scenes are well lit and erotic. In addition to the main video, this title includes mini-features on prostate simulation toys, strap-on dildos and harnesses, and an enema Howto.\n\nBend Over Boyfriend (55 Minutes)\n\nFatale Video\n\nThis is an older video, and its age shows. The biggest problem is that the video is poorly lit. It appears to have been shot with a light affixed to a video camera. The close in camera work was often out of focus, or unsteady. The volume on the soundtrack was really uneven, requiring constant adjustment.\n\nThis video also focuses more on male penetration as a submissive act, and in one scene a man briefly fellates a dildo. The demonstration scenes are largely un-erotic. While there is some instructional content, it's not as well presented as other videos.\n\nIn short, while this video may have been a trail blazer, there are better videos out there.\n\nSELECTING A DILDO -- SIZE REALLY DOES MATTER\n\nThere are three things to consider when purchasing a dildo for anal play. They are:\n\n<OL> <LI>Safety <LI>Diameter <LI>Length </OL>\n\nSafety -- Anything going in the anus should have a large flared base. This applies mainly to toys. Most dildos designed for strap-on will have a flared base. Having a flared base can stop a toy from becoming \"lost\". This can prevent you from spending an unromantic evening in the Emergency Room waiting for the doctor to remove the toy from your ass. On the bright side, you would never have to worry about life's most embarrassing moment again. This would be it.\n\nDiameter -- You need to select a dildo that's going to be comfortable, yet large enough to be stimulating. In other words, you want one that you'll be able to feel, but not so large that it will be painful. When shopping for a dildo, look for one that's roughly 1 -- 1 1/4 inches (25-35mm) in diameter. If you're a man making the purchase, try out your new toy after purchasing it. Find some alone time, and masturbate using the dildo. You don't want to find out it's too big when an inexperienced partner is trying to shove it up your butt. After you've had some experience, you can purchase a larger size if desired.\n\nLength -- You need to have a dildo that's at least 6 inches (150mm) long for use in a harness. If it is any shorter, maintaining penetration is going to be difficult or impossible I recommend one 7 inches (175mm) in length. After you gain some experience, you can go larger if desired.\n\nSome strap-on dildos have an integrated vibrator. This can be a really nice addition and add immensely to your pleasure.\n\nFinally, avoid a toy with excessive rippling, excessively bulbous tip, or surface texture. While these might be OK for masturbation, when used anally with a harness the sensations will be too intense for most people.\n\nSELECTING A HARNESS\n\nThe best advice I can give you on purchasing a harness is to shop at a reputable on-line site and read the reviews from other users. Sites catering to GLBT customers will probably have a larger selection of harnesses and more reviews on them. Try to find a site that has at least 6 or more reviews on each product you're interested in. If everyone's complaining that the harness doesn't stay in place and constantly slips, then you don't want it.\n\nIf you're considering a \"kit\", read the review for the harness and the dildo before making a purchase. Pay careful attention to sizes on \"beginner\" kits. They're usually too small.\n\nLUBRICATION\n\nThe first rule of anal sex is that there's no such thing as too much lubrication. Use lots. Use lots and lots. Failure to use enough lubricant can result in difficult and painful penetration along with friction burns on the rectal canal. All of these things are to be avoided.\n\nDO NOT purchase a lubricant that has pain killers or sensitivity deadening ingredients. The second rule of anal sex is that if it hurts, you're not doing it right. Using a de-sensitizing lubricant could cause you to hurt yourself (or your partner) by using too big a toy, or continuing without proper lubrication. Things might be pretty uncomfortable when the deadening agent wears off... Don't use them.\n\nWater based lubricants are compatible with virtually all sex toys. They rinse off with warm water, and are non-staining. Water based lubricants do tend to get a little tacky over time, so you'll need to reapply lube during your sessions if they last very long.\n\nWater based lubricants with glycerin last longer and are slipperier; they are compatible with all sex toys. While this type of lube stays slippery longer than water based lubricants, it doesn't last as long as silicone based products. These lubricants are not waterproof and may stain fabrics.\n\nSilicone based lubricants are very slippery. You don't need very much silicone lubricant, and it will not be absorbed by the body. Silicone lubricants are also waterproof and can be used in the shower or hot tub. The one issue with silicone based lubricants is they are not compatible with silicone based toys. You can get around this by using a latex condom over the toy.\n\nHYGIENE ISSUES\n\nFor many people hygiene issues related to anal sex are a major turn-off. With a little care, you can minimize problems. Note that I said minimize. It's just not possible to totally eliminate the possibility of some fecal material being present. Here are some things you can do to make your experience a clean one.\n\nThe person being penetrated should use the toilet if necessary.\n\nTake a shower immediately before sex. Insert a finger with MILD soap on it into the anal canal and ensure that it's clean. In my experience, this will usually be enough to assure a relatively clean encounter. This is a great time to practice relaxing the anus. You'll be able to feel the tension with your finger if you are not relaxed.\n\nSome people may want to use an enema, or anal douching. Anal douching is similar to an enema, but you're not introducing solution into the colon. You're just flushing the rectum with water to remove any residual feces. If you are interested in more information on this, search the internet for howtos, or find an instructional video that covers the topic.\n\nNo matter what you do, there may be the possibility of a yucky encounter. Have same paper towels nearby so that if something needs wiped off, you're ready. You'll probably want paper towels handy for removing lubricants from your hands. If you're using fingers to penetrate your partner, you can use latex gloves as well.\n\nIf you're a man who wants to interest his partner in anal play, you can experiment alone with the techniques listed above to build a comfort level.\n\nGETTING DOWN TO IT\n\nThe most critical thing to do in your first few times of trying male penetration is to communicate. The male partner must tell the female partner what's working and what's not. For example, if the female is penetrating the male with her fingers, he may want to tell her whether he prefers an in and out motion, or a wiggling motion. Similarly, he may want an additional finger added, or perhaps not as many fingers used. If the male partner isn't communicating, the female partner needs to take the lead and ask her partner these questions.\n\nPrior to attempting penetration with a strap-on you should help the male partner relax. This can be achieved by penetration with fingers and smaller toys. Using lots of lube, start out with a finger. As the man becomes more relaxed, add another finger or slightly larger toy. One relaxation technique men can use is to tighten their ass (it's the same muscle you'd use to stop the flow of urine while peeing). Rhythmically tighten and relax this muscle. After repeating this several times, your anus should relax, and you can insert more of the toy. Toys can be introduced as part of foreplay, or while performing oral sex.\n\nIt's worth talking about positions for a few minutes. Doggy style is going to be the most natural and comfortable position. The downside to this position is that it makes emotional intimacy between partners a little difficult to achieve. Missionary position can solve that issue. You may need some pillows to adjust your height upwards. Another great position is with the man on top, straddling the woman. This position allows the man to control the penetration and provides both partners with access to the man's penis. You'll probably want to use multiple positions, for example, starting out with doggy position and then moving to man on top.\n\nOne of the funny things about male anal play is that the man can be receiving tremendous sexual pleasure from his ass, but lose his erection. If this happens to you, don't worry. It will usually come roaring back at the finish. One way you can help bring back the erection is by minimizing anal stimulation for a brief period and focusing on the penis. Leave the dildo inserted into the man, but sharply reduce or stop any stroking action. Now, gently stimulate the man's penis by squeezing and gently kneading it. Once the man achieves erection again, you can resume stroking the dildo in and out of him while stimulating the penis. If you get to this point, you can be assured that the end is going to come ripping along very soon!",
        "Remember that unlike porn, in the real world, sex can be awkward sometimes. If you're as old as I am, the painful memories of how awkward the first few times you had sex are long faded. Be patient and have a sense of humor. Remember that with a little practice, the awkwardness will go away.\n\nFINISHING UP\n\nMale penetration can just be an outstanding experience for both partners. The first time I experienced it, I was amazed; I was practically glowing afterward. I not only felt sexually satisfied, but immensely pleased that my partner would be willing to overcome her reservations and do something so pleasurable for me. Between the efforts I made to make my wife feel adored, and the physical and emotional pleasure of anal sex, I can honestly say I've never been more satisfied with my sex life.\n\nRemember, after your initial explorations to THANK your partner. If you're a guy, tell her how much it means to you that she was willing to do this for you. If you're a woman, tell him how much you value the trust he placed in you. Remember, all of us like to feel appreciated and the more appreciated your partner feels, the more they'll be interested in enjoying this unique experience with you again.\n\n*\n\n I'd like to thank my editors LadyPineRose74 and ThinkerLover. Any errors in this Howto are my own.\n\nIf you enjoyed this Howto, please take a second and vote for it. If you didn't enjoy it, please let me know why using the feedback system. If you've followed the advice in this Howto I would love to hear how it went. If I get enough useful comments, I'll incorporate them into a second edition.  "
    ],
    "authorname": "jsragmanus",
    "tags": [
        "anal",
        "strapon",
        "dildo",
        "harness",
        "pegging",
        "anal how-to"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/anal-sex-201-male-penetration"
}