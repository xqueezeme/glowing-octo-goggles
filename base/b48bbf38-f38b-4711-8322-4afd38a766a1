{
    "title": "Jackie's Mom",
    "pages": [
        "The Usual Disclaimer: This is a work of fantasy. All characters featured in sexual situations are over 18. The characters in these stories are fictional. Any resemblance to actual persons living, dead or undead is purely coincidental. Do not try this at home.\n\n*****\n\nJackie was a girl I dated when I was in high school. She was only the second girl with whom I had sex. We dated for a couple of months and then broke up. We wound up running into each other again over spring break a couple of years later, and wound up having a night of really hot, sweaty sex in a hotel room. I had been with a handful of women between the time we broke up and that second encounter.\n\nAs Jackie lay back on the bed, gasping in the aftermath of an intense orgasm, she told me, \"If you had been this good in bed back in high school, I never would have let you go!\"\n\nI smiled and kissed her on her neck. Then I rolled back on top of her and drove my cock back into her drenched pussy. I put her ankles up onto my shoulders\u2014something we had never done before\u2014and really pounded her deep and hard. Jackie had very impressive breasts, and they shook all over the place. The wild look in her eyes was priceless. When I think about the way she looked at that moment, I can still picture it clearly.\n\nIt still makes me hard when I close my eyes and think about it, years later.\n\nWe wore each other out, showered together, and fell asleep with her head on my shoulder and my arms wrapped around her. The next morning, her blonde hair was disheveled when I awoke to see it bouncing up and down over my crotch. I took her doggy style on the bed, and spanked her bottom\u2014again, something we had never done before. Jackie really got off on it, and then she shocked me.\n\n\"Oh, God!\" she gasped, looking over her shoulder at me, \"Pull your dick out of my pussy and shove it in my ass!\"\n\nI had never fucked a girl in her ass before. I had seen some anal sex in pornos, but of course that isn't the same at all. Her asshole was not lubricated, and even though her pussy had drenched my cock in her juices, it hurt her badly when I jammed my hard cock into her tight sphincter. The weird thing was, she really got off on the pain. It was so fucking tight, though, that I couldn't even move in there. She shivered and screamed.\n\n\"OH, FUCK! CUMMING!\" she howled.\n\nWe showered again after that. Her ass was really sore, and she walked funny as we made our way out of the hotel. I never saw Jackie again.\n\nThe next woman I had sex with did not take kindly at all to me shoving my cock into her unlubricated asshole. She did, in fact, kick me in the balls. Hard. Looking back on that now, I realize I absolutely deserved it.\n\nI did my homework after that. Read a few books that had chapters dedicated to the art of anal sex. Every one of them basically told me I had been an idiot. The next woman who invited me to her backdoor was treated to an extensive visit by my tongue before I even went for the lube. She had one sexy ass, and I thoroughly enjoyed every moment I got to savor it. She had some remarkably intense orgasms with my cock buried in her amazing asshole. It was the first time I had ever had a woman squirt on me during sex.\n\nAfter that, I was hooked. It's not as though I stopped enjoying a woman's sweet pussy. I still love a good blowjob as much as anything on earth. But a woman's sexy ass became my kryptonite. When it was exposed near me, I would just get weak in the knees.\n\nI joined the Navy after a couple of dead-end jobs, mostly to get away from my hometown. I wound up being stationed on a tin can operating out of San Diego. That's a destroyer for those of you unfamiliar with the term. My boat was a relic of the Second World War, far older than any of the young guys serving on her. We wound up spending far too much time in the Persian Gulf, floating around bodyguarding an aircraft carrier.\n\nLife at sea, on a boat with no women on it, was about as dull and frustrating an existence as you can imagine. Like most guys on my boat, I became a practical joker just to kill time. We would spend hours coming up with new and innovative ways to pull elaborate pranks on our shipmates. I also read hundreds of books and jerked off countless times to the gorgeous women in publications like Penthouse and Swank. We did that for nine months of the year for the remaining three years of my enlistment.\n\nI had signed up for the GI Bill, and looked forward to getting back to the world and attending college. Unfortunately, I had not had the insight to take the SAT exams before I got out of the Navy. I had to take the test and wait for three months for my results. Fortunately for me, my parents were happy to have me staying with them while I did that.\n\nMy mom had made the brilliant suggestion that I ought to get a study guide for the test before I took it. That made all the difference in the world. I can only imagine how badly I would have done if I hadn't studied beforehand. I had used math extensively in my job in the Navy, but it wasn't the sort of math questions that were on the test. When I first took the practice test from that study guide and looked at the first math question, my response was, \"What the fuck?\"\n\nI had to turn to the answer key, look at the answer, and then back to the question just to figure out what they were asking. I did that a couple of times, and then I was back into that groove mentally and did well for the rest of the test. When I took the actual test, I was confident my scores would be good.\n\nThanks to all that time spent at sea, I had saved several thousand dollars during my enlistment. I bought a used car and reconnected with some old friends that were still in my hometown, as well as some who had left and returned like I had. I also ran into a couple of girls I had dated before I joined the service, and another girl I had known in high school who confessed she had always wanted to date me.\n\nAfter all the stuff I had seen in my years in the Navy, it felt weird to sneak that girl back to my parents' house to have sex when they were at work. Cynthia was an assistant manager at a fast food restaurant now. She had a gorgeous ass, but alas she wouldn't let me near it. When I turned her over on my parents' bed and started lavishing kisses on her ass cheeks, she flipped over on the bed and looked at me like I was a freak.\n\n\"What are you doing?\" she asked me.\n\n\"Kissing your fantastic ass,\" I replied.\n\n\"Don't do that, it's weird,\" she said firmly.\n\nI started kissing her pussy then, and she was just fine with that. She was delicious, and I relished her taste. I loved the way she came, bucking into my face, when I buried two fingers in her tight pussy and sucked her clit. She loved the way I filled her up with my hard cock after she finished that first orgasm.\n\nCynthia and I had some very enjoyable sex over the next few weeks. I would drop by her restaurant a couple times a week while she was at work, just to flirt with her. She particularly enjoyed that after the school year started up. Business was terribly slow during the middle of the day, so we could often visit for an hour straight without interruption. That isn't a euphemism for having sex in her workplace. I would just hang out and talk with her.\n\nOn one of those visits, I ran into Jackie's mom.\n\nIt had been years since I had seen her, back when Jackie and I had dated in high school. She looked exactly the same as I remembered, and even her outfit looked like one I had seen her wearing before. She had curly, dark red hair. She was about five-foot-five, so I was substantially taller than she was.\n\n\"Nathan?\" she asked softly from behind me.\n\nI turned and recognized her, but I could not for the life of me remember what her first name was. She had always been 'Jackie's mom' to me. She was also on her second marriage, but Jackie had kept her last name. I could not remember what her new married name was. I smiled at her, trying like hell to remember her name.\n\n\"Hey!\" I said, \"I haven't seen you in years. How are you?\"\n\nI offered my hand and she shook it.\n\n\"Do you remember who I am?\" she asked. She seemed a little surprised that I did.\n\n\"Of course,\" I said, \"How could I forget you? How is Jackie? I haven't seen her in years, either.\"\n\n\"She's alright. She and Rob broke up a while back. Jackie joined the Army two years ago.\"\n\nI vaguely remembered Rob. I was surprised that Jackie had joined the Army. I just couldn't picture it. I did finally remember that her second husband's name was Tom.\n\n\"How's Tom doing these days?\" I asked.\n\nI had felt a little surge of triumph for even remembering that name. That was short-lived when I saw her face fall.\n\n\"I don't know,\" she said softly, \"We got divorced years ago.\"\n\n\"Oh,\" I said, \"Sorry about that, I had no idea.\"\n\nShe shrugged. I recalled then that Jackie had younger siblings. I think she had a brother and sister, but really couldn't remember. I was almost afraid to ask, but did anyway.\n\n\"How are your other kids doing?\"\n\n\"Sally graduated high school this past spring. She just started college two weeks ago. Brent is in his sophomore year of high school.\"\n\nI was a little shocked by that. I recalled them being really small kids when Jackie and I had dated.\n\n\"Wow,\" I said, \"time flies. I remember them being so young the last time I saw them.\" I held out my hand indicating waist height. They had been that short.\n\nI noticed that Cynthia was giving me a hard look from behind the counter. I walked up to her and grinned.\n\n\"Hey, Cynthia,\" I said.\n\n\"Hey yourself,\" she replied, looking a little grumpy.\n\n\"Do you remember Jackie, from high school? This is her mom...\" I turned and indicated her.\n\n\"Jennifer,\" she said, extending a hand to Cynthia. Cynthia looked a little relieved as she took Jennifer's hand.\n\nI did not think of her as a 'Jennifer.' I never would have guessed that was her first name. Perhaps I had never known before that afternoon. I ordered my usual lunch, a couple of chicken patty sandwiches with fries and a soda. Jennifer ordered one of the combo meals. We sat together and talked while we ate.\n\n\"So, what are you doing these days?\" she asked.\n\n\"I got out of the Navy a couple months ago,\" I answered. \"I plan to go to college, but I have to wait for my SAT results. Right now, I'm just living with my folks and taking a little vacation after all that time in the Gulf.\"\n\n\"How was that?\" she asked.\n\nI chewed and thought about it before answering. \"There's a great quote for that, but I can't recall now who said it. 'War at sea is months of boredom punctuated by minutes of sheer terror.' That pretty well sums it up.\"\n\nHer eyes were wide at that. \"What happened? Why the 'sheer terror?'\"\n\n\"Our boat nearly hit a mine in the Persian Gulf,\" I shrugged. \"The rest of the time, we had a few false alarms. But when you're in a war zone like that, you have a high 'pucker factor' when you're running to your battle station.\"\n\nShe laughed prettily at that, covering her mouth with one slender hand. I realized at that moment that Jackie's mom was actually pretty hot. I had never had a thing for older women, so I hadn't really looked at her as a 'real woman' before.\n\n\"That's an interesting expression,\" she said, still chuckling.\n\n\"How about you?\" I asked, \"What are you up to these days?\"\n\n\"I do a lot of volunteer work at the school,\" she said, \"I took a couple of classes at the community college this past spring. I may go back to school for a degree after Brent graduates. I need to find something to do with my time.\"\n\nHer look told me college hadn't been what she had hoped. I didn't know anything about her two marriages, but it sounded like she was financially secure, at least. She finished the last of her lunch and smiled at me.\n\n\"It was lovely seeing you again, Nathan,\" she said.\n\n\"It was really nice to see you again...Jennifer,\" I said. I shook my head and gave her a rueful smile. \"To be honest, I don't think I even knew your name was Jennifer until today. I always thought of you as 'Jackie's mom.'\"\n\nShe looked a little sad at that. \"You must think I am so old.\" Her voice was just above a whisper.\n\n\"Actually, I was thinking you hadn't aged a day since the last time I saw you,\" I replied. \"On the other hand, I am so much older-looking now.\"\n\nThis wasn't some idle compliment; I had been a gangly teenager the last time I had seen her. I was a broad-shouldered man now. She smiled at me and stood up. I stood and offered her a hug. She seemed surprised at that, but she let out a really sexy, soft little sigh in my arms. It was arousing to hear it.\n\nI walked her out to her car afterwards, and then walked back inside after waving good-bye. Cynthia fixed me with a glower from behind the counter, and then tried to quickly turn that into a smile when another customer walked up to the counter. Later, I was surprised at just how venomous Cynthia was toward me.\n\n\"So, did that tramp give you a blowjob in the parking lot?\" she hissed.\n\n\"What?\" I was completely baffled. \"What are you talking about, Cynthia?\"\n\n\"That Jennifer woman was all over you!\" she said, \"I thought she was going to jump right into your lap and fuck you in my restaurant!\"\n\nThat thought seemed so ludicrous it didn't even merit a response. However, when I laughed at the idea, Cynthia got even more pissed off.\n\n\"Don't you dare laugh at me!\" she said, \"I know what I saw.\"\n\n\"Cynthia, please calm down,\" I said. I had raised my hands defensively. \"I haven't seen her since I dated her daughter back in high school. Believe me, there was nothing going on there.\"\n\nShe did calm down, but that outburst let me know that Cynthia was a lot more possessive than I had realized. I drove home shortly after that and tried to figure out what I could do to make it up to her. At the same time, I was a little annoyed that I felt I had to make it up to her. I hadn't done anything wrong. I figured I should sit down and talk with her about it. Maybe she had a boyfriend who had cheated on her, so she was overly sensitive on the topic or something like that.\n\nWhen I knew she had gotten off work, I drove over to her parents' house. I didn't see her car there, so I went up and rang the doorbell. Her dad answered the door. Now, I had only met her dad once before, and that had been years earlier. It took a moment before he recognized me.\n\n\"Ah, Nathan,\" he said, \"What can I do for you?\"\n\n\"Sorry to bother you, sir,\" I said, \"Will Cynthia be home soon? I wanted to talk to her.\"\n\n\"She doesn't live here anymore,\" her dad replied, \"She has an apartment with her boyfriend, Quentin.\"\n\nYou could have knocked me over with a feather. I'm sure it was obvious from my expression.\n\n\"Are you alright, Nathan?\" her dad asked.\n\n\"Yes, sir,\" I said, regaining my composure, \"I was under the impression she still lived with you guys from the last time we talked. I didn't know she and Quentin were dating.\"\n\n\"Oh, they've been living together for a couple of years now,\" he said.\n\nI managed to smile at him, but I was fuming inside. Quentin and I had been friends in high school. Not the closest of friends, but I did like the guy. This whole revelation came completely out of the blue, and I was pissed. Still, I managed to smile.\n\n\"Wow, that's great,\" I lied, \"You know, Quentin and I were friends back in high school. If it's not too much trouble, could you tell me where their apartment is? I'd love to catch up with them both.\"\n\n\"Sure thing!\" he said brightly.\n\nHe gave me directions to the apartment complex, but I knew where it was. I drove over and sat in my parked car. I had calmed down on the ride over. Now, I was trying to figure out what I should do. Like I said, I liked Quentin. If he was happy with Cynthia, then I didn't want to ruin it for him. I was pissed at Cynthia because she had been lying to me since the moment I ran into her weeks earlier, and yet she was the one getting all possessive and mean. I saw Quentin get out of his car, and I popped out of my car to holler at him.\n\n\"Hey, bud!\" I shouted, \"Long time, no see.\"\n\n\"Oh, wow, Nathan!\" he called back, \"It's been years, man. How has the Navy been treating you?\"\n\nI laughed at that, and then regaled him with 'sea stories' for a good half hour. Cynthia came out of their apartment and walked up to us. At first, she looked annoyed at Quentin. When she saw me talking to him, the color drained from her face. That moment alone was enough for me. She knew I could really hurt her, but I didn't need to anymore.\n\nQuentin smiled at her. \"Nathan, do you remember Cynthia? We've been together for two years now.\"\n\n\"I do remember Cynthia,\" I said with a smile. I reached out and shook her hand, giving it a firm squeeze before releasing it. \"In fact, I ran into her earlier at her restaurant.\"\n\n\"You should come up and visit!\" Quentin said enthusiastically. Cynthia looked horrified. I smiled at her.\n\n\"I wish I could, Quentin, but I really have to get going. It was awesome catching up with you, though.\" I gave him a big hug and shook Cynthia's hand again. \"Seriously, though, good luck to you guys. Maybe I'll see you around before I head off to college.\"\n\nAn hour after I got back to my parents' house, Cynthia called. \"I can explain!\" she said as soon as I answered.\n\n\"You don't have to explain anything, Cynthia,\" I said. I was totally calm by that time. \"You did what you did, and I enjoyed being with you. I really like Quentin, though, so that is over.\"\n\n\"Are you going to tell him?\" Her voice was a ragged whisper.\n\n\"No, Cynthia, I am not. He seems to be really happy with you, and I don't want to punish him for what you've done,\" I shook my head, and then grinned when I realized I was on the phone and she couldn't see it. \"Look, Cynthia, I was really pissed off when I found out what was going on. I'll admit, I wanted to hurt you\u2014especially after you gave me so much crap earlier. Do yourself a favor, though. Treat Quentin right. You two could be happy together if you try.\"\n\n\"I'll try,\" she said. It sounded like she was crying, and I wanted no part of that.\n\n\"Goodbye, Cynthia. Don't call me again. Got it?\" My voice was firm.\n\n\"But..\" she started.\n\n\"No,\" I cut her off, \"We are done. If I find out you dumped Quentin, or treated him badly, I will tell him everything. Now, are we clear?\"\n\n\"Okay,\" she sobbed.\n\n\"Good,\" I said, and then I hung up.\n\nThat episode did put me off for a couple weeks. I did get another call from Cynthia's number three days after that phone call, but I didn't answer. She didn't leave a message. I wasn't really looking for someone else to date, but I did find I was getting really horny. Cynthia had been good in the sack. As infuriated as I was that she had misled me, I had enjoyed our time together up until that last day.\n\nOne of the most annoying things about being back in my hometown after four years away\u2014particularly now that school had started\u2014was that my closest friends were all gone, and there just wasn't much to do. After living in San Diego...well, it just didn't compare. I started working out at the gym just for something to do. My parents had a family membership there, so they were actually happy that I was taking advantage of it. I had done a bit of weightlifting while I was at sea, but hadn't been all that serious about it.\n\nHere, I had three personal trainers\u2014all guys, unfortunately\u2014who had little else to do besides hang out, spot me, and chat in the mornings and early afternoons that I went in. They did give me a ton of great advice for improving my workouts. I started taking amino acid supplements right after my workouts, also on their recommendation, and those were almost miraculous. They made my muscle aches just disappear, even though my workouts were getting progressively more intense. I could easily see the difference after just two weeks. I had never been so muscular and ripped.",
        "So I was in the gym early on a Wednesday morning, doing lat pulldowns and talking with Jon, when he stopped abruptly mid-sentence and stared. I brought the weights back to rest and turned to see what had caught his attention. It was one impossibly sexy woman's ass, wrapped in colorful yoga pants. I mean, wow! I was hard in seconds.\n\nShe was kneeling on a workout mat, facing away from us, and she was lifting small dumbbells with her arms. Her glorious cheeks rippled slightly as her muscles made small adjustments to keep her balanced through her workout. I looked over at Jon and grinned. He grinned back sheepishly.\n\n\"Where was I?\" he murmured.\n\n\"I couldn't even tell you, man,\" I laughed, \"That totally disrupted my train of thought. I can't even tell you how many reps I did on this thing.\" I indicated the machine.\n\n\"Nathan, is that you?\" the woman's voice came from behind me. Jon's eyes shot open at that. I'm sure mine did too.\n\nI turned and was absolutely shocked. It was Jackie's mom\u2014Jennifer, I had to remind myself. Like an idiot, I got up and walked over to her, not thinking for a second about the erection tenting out the front of my thin workout shorts. From her gaze, Jennifer was thinking about it, or at least giving it some attention.\n\nI managed to play it off. At least, I think I did.\n\n\"Jennifer, so nice to see you again,\" I said. \"I had no idea you worked out at this gym.\"\n\nShe managed to tear her eyes from my crotch, but then she was looking at my arms, chest, and shoulders. She was actually blushing when she finally made eye contact. Her nipples were hard. Her shirt wasn't even that tight, but those nipples were hard to ignore. She was looking at me, and I realized she hadn't heard what I said.\n\n\"I said,\" I repeated, \"I had no idea you worked out at this gym.\"\n\n\"Oh, I don't, really,\" she responded, \"I just got a free trial offer and thought I would check it out.\"\n\n\"You could have fooled me,\" I said, \"You look amazing.\"\n\nI kicked myself a bit for that one. Her response told me that it was not the worst thing I could have said. She blushed a bit more and looked down, biting her lip as her eyes once again came to rest on my crotch area.\n\n\"You look pretty amazing yourself,\" she murmured. Then she realized where she was looking and her eyes shot back up to look at mine. She was so clearly aroused. I wanted to take her right there on that workout mat. I think she could tell.\n\nJon sauntered over and 'saved' me from further embarrassment by shoving both feet right into his mouth. He wasn't outright offensive, but he was crude enough that I was not shocked when Jennifer gave him a thin smile and cut him off.\n\n\"I think I've heard enough,\" she said, \"I won't be coming back to this gym.\" She turned to me and said, \"Nathan, it was fantastic to see you again. You should drop by and visit me some time.\"\n\nI was frozen, unable to say a single word as I watched her shapely ass march right out of that gym. She turned at the door, smiling at me when she caught me staring.\n\nI was a little shaky through the rest of my workout. Jon was pissed off that he had chased away such a fine MILF. He wasn't really aware that was what had happened, though. He referred to her as a 'stuck-up bitch' once, and I had to stop him there.\n\n\"Dude,\" I said, putting down the weights, \"That woman is one of the nicest people you will ever meet. I used to date her daughter. If you had talked to my mom like you just talked to her, I would have had to punch you in the mouth.\" I shook my head at his annoyed expression. \"You really don't get it, do you?\" I finished.\n\n\"I don't know what you're talking about,\" Jon said defensively, \"I was just making conversation with the lady.\"\n\n\"If the...\" I had started to say 'if the manager saw you talking with a female customer like that, he'd fire you,' but then I recalled that the manager here was every bit as much a pig when it came to women as Jon had been. \"Never mind,\" I said. I knew that no matter how hard I tried, he was not going to learn a thing from this. It wasn't that Jon was a bad guy; he just didn't understand how inappropriate his crude come-ons were.\n\nI finished my workout, shook Jon's hand, and then left to get my shower. There was a chill in the air when I emerged from the gym. The sky looked threatening. I got in my car and a couple of fat raindrops hit the windshield. I started the car and drove to Jackie's old neighborhood. I didn't actually expect that Jennifer still lived in the same house, but then I saw her car in the driveway. The same car I had seen her driving weeks earlier, at Cynthia's restaurant.\n\nIt was ten o'clock in the morning, on a Wednesday. The rain started coming down, and there was thunder when I walked up to the door and rang the bell. She did not answer right away, and the rain was coming in at an angle from behind me. My lower back and pants were soaked by the time the door opened.\n\nJackie's mom was dressed in a robe that did little to hide her body. She wore nothing beneath it. She was breathing heavily and looked like she couldn't believe I was there at her house.\n\n\"Mind if I come in?\" I asked, \"I'm getting soaked here.\"\n\nShe shook her head, \"I'm sorry, come right in!\"\n\nShe stepped aside, and I actually saw her pubic mound exposed when she did. She had sparse, curly red hair down there, shaved into a 'landing strip.' She caught my gaze and then noticed I was dripping water.\n\n\"Why don't you go into the bathroom and take off those wet clothes,\" she said, \"I'll throw them into the dryer for you.\"\n\n\"Thanks,\" I replied, hurrying to the bathroom so I didn't get too much water on her carpet.\n\nI stripped off all of my clothes. My boxers and socks were also wet. I wrapped a bath towel around my waist and grabbed a second towel. I handed her my dripping clothes and quickly bent to dab the second towel into the wet spots I had left on her carpet. I really rubbed the towel in hard, getting as much moisture out of the carpet as I could. When I was satisfied that the job was done, I looked up.\n\nJennifer was standing a few feet away. She was looking at me with undisguised lust, her breasts heaving and her hard nipples clearly poking out through the thin material of her robe. She hadn't even bothered to pull it closed, and her pussy was wet and right at eye level. I didn't even bother to stand. I crawled over to her and slid my hands up the backs of her thighs until I squeezed that perfect ass. I kissed her pussy while looking up into her eyes. Her legs were shaking before I even got a good taste of her.\n\nMy eyes shot open when my fingertips grazed a hard plastic edge. She had a vibrator buried in her asshole, and it was still turned on! I stood up and wrapped my arms around her, making sure she didn't fall to the floor.\n\n\"I was coming over to apologize for Jon being such a jerk earlier,\" I said, \"But maybe that just turned you on?\"\n\n\"No,\" she gasped, \"I was thinking about you.\"\n\nI kissed her and slid my hands down to squeeze her ass again. She kissed me back vigorously, driving her tongue right into my mouth. Outside, the storm was unleashing its full fury. Thunder pounded loudly enough to be heard clearly inside the house, and it became dark as the rain poured down. Flashes of lightning punctuated that darkness briefly, illuminating her face as I picked up this sexy woman and carried her to her bedroom.\n\nThe raw, elemental energy of the storm felt like it had infected us with its urgency. As soon as I set her on her bed, she was frantically removing the towel from my waist. It was a miracle we didn't hurt each other as I dove between her legs to slurp her pussy and she inhaled my cock. We would have had a tough time trying to have a conversation; the crashing thunder and pouring rain were so loud. I felt her moaning around my cock as she came, flooding my mouth with her tasty juice.\n\nI lapped up all of it that I could, and then pulled my face back to savor the sight of my cock filling her mouth. She wasn't looking at me; her eyes were closed as she enjoyed tasting me. I slid two fingers inside her and gently probed for her magical spot while watching her mouth work me over. That combination of visual stimulation with the wet, hot slurping of her mouth was getting me close.\n\nMost of the women I have been with don't appreciate the taste of my cum. Only a couple forgave me for coming in their mouth without warning them first. I yelled out, \"I'm getting close!\" but I don't think she could hear me over the storm. I pulled my hips back from her so I wouldn't come in her mouth. She looked upset when her eyes shot open and she looked at me.\n\n\"I was about to come!\" I said.\n\n\"Give it to me!\" she yelled back.\n\nI made that out more from reading her lips than from hearing her. Another flash of lightning painted her face with light as she grabbed my ass firmly and took me into her mouth again. I was so turned on that I knew I wouldn't last long. At that angle, I could actually see her throat muscles working as she gulped down the first shots of my cum. It was an intense orgasm for me. I buried my face between her thighs and bit down on the inside of one of them.\n\nHer mouth insistently drained a massive load from me. I had not come that hard in years. The next flash of lightning showed me one satisfied woman as she licked the last pearly drops from around her lips. I turned around on the bed and began my investigation of those lovely breasts, starting with nipples that were firm and very sensitive.\n\nI was getting hard again. I could see her face when she felt the tip of it press against her pussy. There was clearly surprise written there, but she was also pleased and excited as she reached down to grip my shaft and guide me inside her. I was surprised at how tight her pussy was. I was also reminded that she had a vibrator in her ass when I felt it through that thin membrane.\n\nThe vibrations along my shaft as it slid into her were an unexpected surprise. I wasn't even all the way inside her when she began bucking in another orgasm. Her pussy squeezed down on me so hard I thought it was trying to bite off my dick. When she finally relaxed that death grip, I think she mumbled an apology. I had been hunched over her, trying to keep sucking her breasts while starting to fuck her. That was uncomfortable enough that I kissed my way up to her neck and bit her earlobe softly.\n\nMy lower back relaxed and my cock finally slid completely into her snug grip. I kissed her on her lips and held there, just savoring the feeling of being inside her. The vibrator was evidently doing the work on her so that I didn't have to. She bit my lip and groaned into my mouth as she came yet again. Her face looked so fucking sexy when she closed her eyes and shook like that.\n\nI couldn't help it, I was thinking, \"I'm fucking Jackie's mom!\" as I started to stroke my cock out and back in. Her sweet pussy felt amazing. However, that vibrator was starting to get a little annoying. I reached around her hip and was able to get hold of the base of it.\n\n\"Mind if I pull this out?\" I said right into her ear.\n\nHer eyes were wide as she bit her lip and nodded. Her ass had a really firm grip on that thing. It took a good thirty seconds for me to slowly pull it out of her. Her pussy spasmed around my cock non-stop the whole time.\n\n\"Fuck!\" she cried out.\n\nIt was a little disconcerting to hear her swear. Odd, I know, since I was fucking her. She had always been a proper lady in my mind up until that moment. One with an amazing ass, I had discovered that morning. Somehow, though, hearing her say 'Fuck' made me think of her as a dirty, sexual woman for the first time. Yeah, I know, the vibrator in her ass should have clued me in to that.\n\nAs though a switch had been flipped on in my mind, I began to take that sweet pussy like I owned it. The storm outside was fading away. Inside the house, I was just getting started. I could clearly hear her now, and her loud cries spurred me on.\n\n\"Oh, god! Oh, fuck! What are you doing to me? Ohh!\" Her body shook as I pounded my hard cock in and out of her. Her breasts were bouncing wildly on her chest, her nipples as hard as ever. I looked down at her pussy lips, stretched wide around my invading shaft. I groaned at that.\n\nShe clamped down on me again, and this time her juices shot out of her and coated my balls. Her entire body rocked violently and she screamed out \"FUUUUUCK!\" for a good minute. Okay, I'm sure that's an exaggeration. It was one awfully long, awfully loud scream, though. I was worried the neighbors might call the cops.\n\nWhen she finally stopped screaming, she was lying there beneath me panting for breath. I still had my hard cock buried in her to the hilt, but I was careful not to move until she had a chance to recover. I leaned down and lightly kissed her cheek and nose, then pulled back and smiled at her.\n\n\"Do you need a break?\" I asked.\n\nShe nodded back at me, so I slowly pulled my dick out of her. She shivered again at that sensation. I walked into her bathroom. There was a large plastic cup next to the sink. I made sure it was clean, then filled it with cool water and brought it back to her. I helped her sit up in the bed, sitting next to her as she gulped the water. She drank about half of it and then handed the cup back to me.\n\n\"Thanks,\" she said softly.\n\n\"No problem,\" I said.\n\nWe looked at each other, admiring each other's bodies while we sat there. I drank some of the water, and then rose to take it back to the bathroom. I rinsed my face when I saw how coated it was with her dried juices. She had to have been really turned on to kiss me when I looked like that.\n\nI was still mostly hard when I returned to the bed. My cock was waving in front of me with each step. It was amusing to watch her eyes follow it all the way. My eyes lit on that vibrator, lying next to her on the bed. I couldn't recall now if I had turned it off, or if she had. It was turned off, though. I picked it up and she looked up at me holding it. \n\n\"So, Jennifer, let me see if I understood you correctly,\" I said, \"You ran into me at the gym. When you left, you caught me staring at your gorgeous ass. Then you came home and thought about me while you fucked your ass with this vibrator. Is that right?\"\n\nShe bit her lip and nodded.\n\nI sat next to her on the bed and stroked her back lightly. Her nipple was crying out for attention, so I leaned over and sucked on it some more. Jennifer cradled my head and moaned softly.\n\n\"I can't believe you're actually here,\" she said, right into my ear.\n\nI released her nipple and said, \"Why not?\" before latching onto her other nipple.\n\n\"I didn't think you were really interested,\" she said. \"I thought you were so beautiful, but I thought I was too old for you.\"\n\nI don't think anyone has ever referred to me as 'beautiful' before. Or since, honestly. I'm not ugly, but I think the best I would qualify for is 'ruggedly decent-looking.'\n\nI kissed my way up from her breast to her mouth. This was a far gentler kiss than the urgent one earlier. Water still dripped off of the house, but it had stopped raining. The late morning sun lit her gorgeous body.\n\n\"Damn,\" I whispered, \"You are so sexy.\"\n\nI shook my head and smiled at her. She shook her head at that, looking a little embarrassed.\n\n\"Of course,\" I continued, \"I haven't had the chance yet to give your ass the attention it deserves.\"\n\nHer eyes widened at that. \"You're kidding me, right?\" she breathed.\n\n\"No ma'am,\" I said.\n\n\"Oh, God,\" she groaned, and then she was turning over onto her stomach on the bed. Her eyes never left mine as I slid to my knees and straddled her ankles. Her bottom was even sexier naked than it had been in those tight yoga pants earlier. I squeezed her perfect cheeks and gave the left one a little smack. She moaned at that, and then she buried her face in the sheets. I buried my face between her ass cheeks.\n\nThe lubricant she had used with the vibrator didn't taste good at all, but I didn't care. She yelped into the mattress when my tongue first lapped at her sphincter, and then she was groaning almost continuously as I ate her asshole. I pointed my tongue and fucked it in and out of her. She started thrusting her hips back at me, forcing my tongue as deep into her tight hole as it could go.\n\nShe pushed back a little too hard once, and I saw stars as my nose felt like it had been punched. I grabbed her ass forcefully, then. I gave her light slaps on both cheeks, eliciting delightful noises from her. I slid my body up behind her, and my cock was as hard as it gets. It was pulsing in anticipation. I started to ask her, \"Where do you keep your lubricant?\" when her phone went off.\n\n\"Oh, crap!\" she said, pulling her face from the sheets.\n\n\"Don't answer it,\" I said. I probably sounded a little more frantic than I wanted to.\n\n\"It's not a call, it's my alarm,\" she said. \"I have to be at the school at eleven.\"\n\nI looked over at her bedroom clock. 10:50. I blew out a big breath and slid off of her legs so she could get up.\n\n\"I don't suppose there's any way you could miss that?\" I asked as she rose from the bed and walked briskly into her bathroom.\n\n\"I'm afraid not,\" she said.\n\nThe expression she wore told me she was as frustrated about this as I was. I heard her start her shower, and I went out to collect my clothes from her dryer. They were dry, and nice and warm now. Jennifer emerged from her bathroom to see me pulling my boxers up my legs. She looked sad to see my dick disappear from her view.\n\n\"That has to be a record,\" I said. \"I don't think I showered that fast when I was in the Navy\u2014and they timed our showers.\"\n\nShe smiled at me, still drying her hair. I pulled my t-shirt on over my head and then I was a little nervous.\n\n\"When can I see you again?\" I asked. I was concerned that she might view all of this as a mistake. I worried she wouldn't want to see me again, and that I would never enjoy her gorgeous ass like I wanted to so badly.\n\n\"Let me get your phone number,\" she said, \"I would just have you stay here, but I might take a couple hours before we're done today.\"\n\nI was relieved to hear that answer. \"I wouldn't mind waiting for you, but I understand,\" I said, \"You don't want some strange guy hanging out here while you're out.\"\n\n\"Oh, no, it's not that at all,\" she said, \"It's just that if we take too long with this project today, I wouldn't get home with enough time for us to do anything before my son comes home from school. If that's the case, I'll make sure I'm ready for you tomorrow morning as soon as he's gone.\"\n\n\"What do you mean, 'ready for me?'\" I asked.\n\nShe walked over and pulled me down so she could whisper hotly into my ear.\n\n\"I mean I'll be naked, with my ass lubed up and ready for your cock as soon as you walk in that door.\"\n\nMy hard dick popped right out of the front of my boxers at that. She saw it and gave me a wicked grin that sent shivers down my spine. I gave her my cell phone number and watched as she punched it in to her phone. I realized that I had actually left my phone in my car. It was supposed to be 'water resistant' but in that downpour, I didn't want to risk it.\n\nI put my jeans back on, and backed out of her room.\n\n\"I would love to watch you get dressed, but I'm afraid I would lose control and...well, we can't have that,\" I said. I shot her a grin and pulled her door closed.\n\nI sat on her couch and put on my socks and shoes. The shoes were still damp; I hadn't had her throw those into the dryer. I went back into the bathroom and retrieved my wallet and keys, then headed for the front door. I looked outside, relieved to see that there wasn't a ton of water on the street. At the same time, I wished for another storm to hit, so Jennifer would have an excuse to call the school and stay here with me.\n\nNow, I keep saying 'Jennifer,' but I kept thinking 'Jackie's mom.' Maybe it was a kink that I wasn't aware I even had, or maybe it was just that I hadn't gotten used to thinking of her as 'Jennifer' at that point.",
        "I just wanted to fuck Jackie's mom in her perfect ass.\n\nI heard her bedroom door open, and I closed the front door and turned to look at her. She was once again dressed as the conservative soccer mom, but her eyes blazed with lust.\n\nJackie's mom clearly wanted me to fuck her perfect ass.\n\n\"Fuck,\" I growled when I saw her face.\n\nShe actually leapt up into my arms and gave me a ferocious kiss with her legs wrapped around my waist. I wanted so badly to pin her up against the wall and take her right then and there. I did still have enough of that military discipline to control myself and break off that amazing kiss.\n\n\"I can't wait,\" I groaned into her mouth.\n\n\"Me neither,\" she gasped back at me. \"The whole time I was getting dressed, I was wracking my brain, trying to come up with an excuse. If this project wasn't important, I would not be leaving.\"\n\nI squeezed her ass again as I set her on her feet. \"I hope it doesn't take too long,\" I said.\n\n\"Me neither,\" she said again.\n\nWe both walked out to our cars. When I slid into mine, I grabbed my phone and saw the missed call from 'Jennifer White.' I chuckled at that. I wondered if she knew she had a porn star's name. That might also explain why I had completely blanked on her name when I had run into her weeks earlier.\n\nI went back to my parents' house. Initially, I hung my wet sneakers up in the bathroom to dry, and threw my socks into the laundry, but then I thought better of it. There was enough dirty laundry in my hamper to start a load of wash. I checked my parents' room and got their hamper as well. I started a load of whites. I didn't want those damp socks sitting around getting funky, and I wanted to use bleach on my white sneakers.\n\nI put on dry socks and eventually found my other sneakers. They were running shoes, unlike the high-tops I had thrown into the washer. I hadn't been doing much running, so they had been buried in the back of a closet. The whole time, I kept picturing that perfect ass. I was so hard I worried I would lose control and jack off, and I wanted to save that erection and load for Jackie's mom.\n\nTo distract myself, I flipped on the television and watched sports coverage. A bunch of knuckleheads were arguing about who was the 'greatest of all time.' That got old in a hurry, so I found another sports channel that was less obnoxious, and actually had some sports news. I kept glancing at my phone, but my erection had eased somewhat.\n\nThe washer 'dinged' letting me know it was done. I moved that stuff to the dryer and started the colored clothes in the washer. I looked at my phone again. More than an hour had passed. I was getting anxious.\n\nI could go into more detail about how I fidgeted for two hours before Jackie's mom finally called me, but I knew by the time she called that we wouldn't be having sex again today. She sounded really frustrated when I finally got to hear her voice again.\n\n\"Oh, Nathan, I am so pissed at those people!\" she said. I could tell that she was in her car from the traffic noises in the background.\n\n\"Did you even need to be there?\" I asked.\n\n\"Well, yeah,\" she said. \"If they could stop debating every little thing and just get on with the project, I would have been home two hours ago! Every time I looked at my watch or the clock, that's all I could think about.\"\n\nI had to laugh a little at that image in my mind. \"I know how you feel,\" I said, \"I have practically been bouncing off the walls here, waiting for you to call.\"\n\n\"May I call you back after I get home?\" she asked.\n\n\"I would love that,\" I said.\n\n\"Thanks. Talk to you soon.\"\n\nShe hung up, and I got the last of the laundry from the dryer and folded it. I put my stuff away and set my parents' clean folded clothes on their bed. I went into my bedroom and lay down. I thought about getting undressed and having a dirty talking session with Jackie's mom when she called back, but I had no idea if she would be into it. Also, I didn't want to embarrass myself by coming all over my stomach two minutes into that conversation.\n\nShe did call me back a few minutes later.\n\n\"Hey, there,\" I said.\n\n\"I'm glad you answered when I called,\" she said.\n\nThat puzzled me. \"Why wouldn't I answer your call? I would have been rushing over to your house if you had been able to call me earlier.\"\n\n\"Really?\" she said, \"I was worried I might have turned you off when I talked about...you know, my ass.\"\n\n\"You have got to be kidding me,\" I answered, \"I was so turned on I seriously considered not letting you out of the bed when your phone went off.\"\n\n\"So, that doesn't gross you out?\"\n\n\"Why would it?\" I really didn't know where this was coming from. \"I told you I thought your ass was gorgeous. I loved licking it\u2014even though that lube tasted awful. You should have seen how hard I was the whole time.\"\n\n\"I thought you were just doing that to humor me,\" she said. Her voice was awfully quiet.\n\nIt clicked then. Her ex-husband must have been really grossed out by anal. I had met some guys like that while I was in the Navy. Every so often, someone would throw a porno into the DVD player. If there was an anal scene, there were a couple of guys who would always object to it. Most of us thought it was hot, and told them to get the fuck out.\n\n\"Let me guess,\" I said, \"Your ex-husband wasn't a fan of your fantastic ass?\"\n\n\"No, he was not.\" She chuckled, but it was devoid of mirth. I could only imagine how that had gone down.\n\n\"Well, Jennifer, I am,\" I said. \"I cannot wait to be over at your house tomorrow morning. I wish I had my hard cock buried in that beautiful butt right now.\"\n\nI heard her gasp at that. There was a slight pause, and her voice was shaky when she spoke again.\n\n\"I am so wet right now, just thinking about it,\" she gasped.\n\n\"And I am hard as a rock thinking about it,\" I replied. I still had my clothes on, but my erection was bulging down the leg of my pants.\n\n\"You know,\" she said, \"I can still taste your cum from earlier.\"\n\n\"Damn,\" I said, \"I ate lunch earlier. I wish I could still taste your pussy.\"\n\nShe groaned. \"I wish we had time now. I want you so badly.\"\n\n\"This isn't helpful,\" I said, \"I am so turned on right now, but I don't want to spend the whole evening walking around my parents with a big hard-on.\"\n\nShe laughed out loud at that. It was music to my ears.\n\n\"What time should I come over tomorrow morning?\" I asked.\n\n\"Any time after eight is good,\" she replied. \"Brent will be at school by then.\"\n\n\"I'll see you at eight-oh-one, then,\" I said. I was pretty sure I heard her fingers frantically playing with her wet pussy. That was exactly what I was trying to avoid. I groaned into the phone.\n\n\"You're playing with yourself right now, aren't you?\" I said.\n\n\"Yes!\" she gasped.\n\nI pulled my pants down. There was only one way that I was getting rid of this erection now. I was naked in my bed in less than a minute.\n\n\"I have my hard cock in my hand right now,\" I said. \"There is a big drop of pre-cum on the tip of it, just waiting for your mouth.\" Since her mouth was a couple miles away, I spread that drop over my glans.\n\n\"Oh, god, I want that so much,\" she said. The wet noises in the background were so loud I actually imagined I could smell her aroused little pussy.\n\nI pictured her, naked on her bed. I imagined she was squeezing one of her nipples as her other hand worked over her pussy.\n\n\"I would love to be spreading your legs open and driving my cock into that wet little pussy right now,\" I said, stroking my cock harder.\n\n\"No!\" she shocked me with her response, \"You should spread my legs so you can fuck my horny asshole. I'll take care of my pussy while you give me what I really need!\"\n\n\"Oh, damn!\" I groaned. I had been so turned on ever since I saw her at the gym. That was just too much. My cock shot a geyser of cum into the air, painting my stomach and chest.\n\n\"I'm coming!\" I gasped into the phone.\n\n\"Me too!\" she panted back.\n\nI had not done the phone-sex thing in quite a while. I wasn't sure what to say after that. Also, I wanted to clean up. I didn't want to drip cum all over my bed. I got up and walked over to my bathroom, grabbing a washcloth to clean myself.\n\n\"Jeez, I sure hope my parents don't come home early,\" I finally said into the phone. \"I just walked naked to my bathroom, and my stomach and chest are covered with cum.\"\n\n\"Mmm,\" she moaned into the phone, \"If I was there, I would lick it off of you.\"\n\n\"Heh. If you were here, it would be in your ass,\" I replied.\n\n\"Oh, I can't wait for that to happen,\" she growled into her phone. I heard something in the background. \"Oh, crap,\" she said, \"Brent is home already. I will see you in the morning.\"\n\n\"Yes ma'am,\" I breathed.\n\nI hung up my phone and looked at myself in the mirror. I decided to just get a shower and clean out the washcloth there.\n\nI was thinking about Jackie's mom all that afternoon and evening. When we sat down to dinner, my mom asked what was bothering me.\n\n\"Do you remember Jackie? That girl I dated for a while back in high school?\" I asked her.\n\n\"Vaguely,\" she replied, \"Blonde girl? Kinda...busty?\"\n\n\"Yeah,\" I said, \"Well, I was at the gym this morning, and her mom walked in and started working out. One of the personal trainers walked up and basically accosted her. She got offended and walked out. I tried to explain to the guy that he was being offensive. He just didn't get it at all.\"\n\nI looked at my mom. \"Seriously, if he had talked to you like that, I would have punched him in the face. And he didn't think he had done anything wrong. He called her a 'stuck-up bitch' and I just couldn't get over it.\"\n\nMy dad spoke up then. \"Do you want me to complain to the manager?\"\n\n\"I thought about doing that,\" I said, \"But that guy is just as bad\u2014maybe even worse.\"\n\nI shook my head. \"Anyway, that's what I was thinking about. How was your day?\"\n\nI nodded at the appropriate times as they told me about their day. I was listening, but I was still thinking about Jackie's mom. After dinner, I wouldn't have been able to recall a word that they had said.\n\nI had a really tough time falling asleep that night. I sleep nude most of the time, and I kept stroking my hard dick imagining what I was going to do with Jackie's mom. I kept looking at the clock. I'll be fucking Jackie's mom in nine hours. Make that eight hours.\n\nI did not get enough sleep. I fell asleep, but then woke up panicked that I had overslept. It was only three in the morning. I set an alarm for seven thirty and managed to fall asleep after more tossing and turning. I was lying in bed awake when that alarm went off. I was up like a shot and in the shower.\n\nIt felt like I was getting ready for a date. I guess it was sort of a date. I just knew that I didn't need to dress formally for this one. \n\nIt did seem like a good idea to dress in something that looked like work clothes. If Jackie's mom had nosey neighbors, she could explain it away; that I was doing some work around her house for her. I put on baggy jeans and a work shirt. I thought about putting on my black Navy boots, but opted for my sneakers instead. They were easier to take off quickly.\n\nAs I drove over to her house, I realized that I had no idea what she had planned for the day, other than seeing me. I hoped we had time for everything.\n\nI was a little early. I drove slowly around the block twice. The second time, Brent's car was gone. I pulled into the driveway. I was already hard as I walked up to the front door.\n\nShoot! I couldn't remember if she had told me to call first. I glanced at my watch. It was 8:01. I rang the doorbell. She opened the door and yanked me inside for a kiss. Jackie's mom was wearing another thin robe with nothing beneath. She pushed the door closed and then jumped up into my arms again. I caught her and kissed her. I kicked off my shoes and carried her to her room, squeezing her eager bottom the whole way.\n\nI loved the way she squealed into my mouth when I grabbed her ass, and again when I tossed her onto her bed. She watched as I undressed for her. I unbuttoned my shirt quickly and tossed it to the floor. As I unbuttoned my pants, I looked at her.\n\n\"Is your ass ready for me?\" I asked. My voice sounded a little gravelly to me, but I think that just turned her on more.\n\n\"Yes!\" she gasped.\n\n\"Show me,\" I said.\n\nShe immediately rolled over on the bed, getting onto her knees and spreading her cheeks. That tempting little hole was glistening and slightly spread open. I shed my pants and boxers quickly. I moved in behind her and pressed the tip of my cock into her throbbing sphincter. We both groaned as the head of my cock opened her up and slid inside.\n\n\"Aside from this,\" I said, \"What do you have planned for today? Do you have to leave anytime soon?\"\n\n\"No!\" she gasped, looking over her shoulder at my face, \"Today I am all yours!\"\n\nJackie's mom looked incredibly horny and sexy as I took her ass for that first time. Her velvety little tunnel welcomed me with a loving grip. Her eyes were wild as they looked into mine. I squeezed her cheeks and held them firmly as I began to fuck her with slow strokes. Too slow, apparently. She got her hands under her and started thrusting back at me, impaling her ass on my hard dick.\n\nShe was grunting loudly each time my balls slapped into her empty pussy. I could feel her wetness coating my sack. \"I'm fucking Jackie's mom in her perfect ass,\" I thought, \"and she is loving it!\" I moved my hands from her cheeks to her hips and began to really fuck her hard. I felt her fingers plunge into her pussy and could hear them sliding wetly in and out of her.\n\n\"God, I'm so close!\" she wailed. I could feel my balls tightening.\n\n\"Me too,\" I gasped out.\n\nShe beat me to it by about five seconds. She buried her face in the sheets and cried out as her orgasm washed over her. When she felt me coming in her ass, she lifted her head and yelled, \"Yes!\"\n\nI felt that familiar sensation, that loss of control, as I came. My head shook violently from side to side and my shoulder muscles rippled uncontrollably. My fingers and thumbs clamped down on her hips and buttocks. They would leave slight bruises.\n\nI was breathing heavily when I regained control and released her from my grip. Her body slid forward, and I followed her to the mattress. Her muscles were spastic around my shaft for another minute. I wrapped my left arm around her waist and rolled us onto our side on the bed. I was still hard inside her. I slid my hand up and fondled her breast, kissing her neck and shoulder softly while she caught her breath.\n\n\"Thank you!\" she finally gasped out, \"I needed that so much.\"\n\n\"Don't thank me yet,\" I said softly. I thrust my cock back into her well-lubricated ass. My hips slammed into her cheeks with a loud slap, causing her to gasp out loud. \"We're just getting started.\"\n\n\"Oh, yes!\" she said. Then she was just babbling.\n\nI was really jack-hammering in and out of her in that position. Each thrust drove right into the front of her ass, punishing her g-spot through that thin membrane separating her holes. She was going to have a lot of orgasms this way. I buried myself to the hilt each time I felt her muscles tightening around me, and I would hold still and kiss her neck, bite her shoulder, or whisper in her ear until she was through the most intense part of it.\n\nI could have kept going like that all day, but she was a wreck after only a half hour or so. I pulled out of her and found a washcloth in her bathroom. I moistened it in the sink and came back to clean the sperm drooling out of her well-fucked behind. I rolled her onto her back and licked and sucked on her sweet pussy again while I continued gently daubing up my mess. I had really filled her ass with cum. It took a good ten minutes before I felt like it had stopped running out of her. I looked up at her face again.\n\n\"How was that?\" I asked. Just being cheeky, really.\n\n\"That was fucking amazing,\" she breathed. \"I never knew it could be like that.\"\n\nI got up and smiled at her. \"I'll be right back,\" I said.\n\nI went into the bathroom and got into the shower, thoroughly soaping up my cock and balls and then rinsing off my body and the washcloth. It only took a couple of minutes. I toweled dry quickly and made my way back to the bed.\n\n\"Are you ready for round two?\" I asked.\n\nIt was a rhetorical question, obviously. I was sliding into her soaking wet pussy before she had the chance to answer. She was all mine, all day. Who needs a lousy gym when you can get this kind of workout at home?"
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "anal",
        "veteran",
        "divorcee",
        "anal sex",
        "mature"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/jackies-mom"
}