{
    "title": "My Little Ventrue Pt. 08 Ch. 13",
    "pages": [
        "~~Eric~~\n\nHis dad's face broke into the biggest smile Eric had ever seen, when Jessy lifted her shirt.\n\n\"Holy hell,\" his dad said. He sat up in the hospital bed, and twisted his whole body to face her.\n\n\"I know, right? I got pretty lucky, getting this lean without losing the tits.\" With white t-shirt and black bra in hand, she bounced in place several times. Both men stared, hypnotized. Laughing, she pat her abs with one hand, still holding the clothes up to her collar with the other. \"I should do modeling.\"\n\nHis dad laughed. \"I think you might be onto something.\" With a groan, Eric elbowed his girlfriend, and she laughed as she lowered the clothes back on. \"Son! You stay outta this!\"\n\n\"Dad, that's my girlfriend.\"\n\nJessy shrugged, and flashed the old man again, complete with a few more bounces and jiggles, before getting her clothes back on for good. \"Don't worry you old fucker, I'll send you a picture.\"\n\nHis dad laughed harder, and winked. Which of course sent Jessy into hysterics, his dad too, and Eric had to drag her out of his dad's room.\n\nShe continued laughing as they walked the hospital halls, earning some strange looks from doctors and nurses, before they eventually left the building.\n\n\"You're spoiling him,\" he said.\n\n\"Yeah well, he deserves it. He looks great.\"\n\n\"He does. Doc says he's been busting his ass. Not an easy thing to do, dealing with atrophied muscles and bed sores and diabetes and who the fuck knows what else. He's lost eighty pounds, and considering the amount of muscle he's put on, he's lost more fat than that.\" He was damn proud of his dad, but he never expected the promise of tits to be the way to get him moving again. There was probably more to it than that, but on the surface, it certainly looked like tits had been the carrot.\n\n\"How long till he's out of there?\"\n\n\"Next week.\"\n\nShe smiled, and slipped her hand in his as they entered the parking lot. \"Great. Where's he gonna live?\"\n\n\"He still has his old apartment, but it's a pretty shit place. I'm thinking I'll set him up in some nice retirement condo.\"\n\n\"Frander's Estate?\"\n\n\"Yeah.\"\n\n\"Awesome.\" She nodded, and tightened her grip on his hand. After a few steps, she swung his arm back and forth with hers, like a kid happy to be out on a stroll. \"Invictus own it. Not that that means much; we own almost everything in Dolareido. But yeah, I've checked the place out before, some routine Invictus checks and shit. Pretty sweet place, with some very sexy care workers.\"\n\n\"Uh, I didn't think he'd be getting sponge baths or anything.\"\n\n\"Ha! This is Dolareido. If he wants a sponge bath from a pair of sexy care workers wearing bikini thongs, and only bikini thongs, he's getting it, for the right price. Frander's Estate can hook him up.\"\n\nOh god, the image of his dad paying women for services like that was enough to send a skin-crawling jolt of nausea through him.\n\n\"Please stop.\"\n\n\"Or, if he wanted a massage with a happy ending, he can get that, too, for a price. I don't think the care workers will actually sleep with him, but yeah, sex work is pretty much everywhere in Dolareido.\" She raised a brow as she looked at him. \"You must have known that.\"\n\n\"Yeah, I've known that since my fighting career took off. Got introduced to a lot of stuff like that.\" Just, didn't really think about old folks getting that treatment, especially his dad. Gross.\n\n\"Right, right. You mentioned the parties and shit you went to when you were rich, back at that Bloodlust get together. Didn't seem like you were too into the atmosphere though, back in your heyday.\"\n\n\"I wasn't, but I thought I should have been.\" A painful lesson, and one learned too late. \"Just never really jived on that sorta group.\"\n\n\"Maybe what you needed was the right person to jive on it with?\"\n\nHe laughed. One thing Jessy wasn't good at, was subtle hints. \"Yeah, ok, maybe. That night was kinda fun, awkward as it was. And I am a guy. Breasts are awesome.\"\n\n\"Like father like son?\"\n\n\"Oh god, don't. You're going to make me puke.\"\n\n\"Ha. That night went perfectly. Elaine's a crazy bitch, and I think I like her.\" Jessy leaned up toward him and kissed his ear as she whispered. \"You know she'd be all over you if you let her.\"\n\nHe rolled his eyes. \"You'd share me with another vampire?\"\n\n\"Honestly? Not sure. I'm kinda attached to you now, and letting another vamp touch you does sound like it'd make me jealous.\" She tapped her chin a few times. \"Still want to get a kine on that dick though.\"\n\n\"Of course.\" And after how much she'd helped with his dad, he kinda felt like he owed her. He already owed her a lot, too.\n\nA mad grin appeared, and he eyed her suspiciously.\n\n\"So Jack's gonna make me a sex tape.\"\n\nUh oh.\n\n\"You attracted to Jack? Cause of the party? Didn't think he was your type.\"\n\n\"Dude, everyone at that little party was smoking hot. Sure, not everyone was exactly my cup of tea, but that doesn't mean I don't enjoy coffee occasionally.\"\n\n\"Wait. Do you even remember what coffee and tea taste like?\"\n\nShe grunted and elbowed his side gently. \"Shut up. My point is, just cause he's not my ideal doesn't mean Jack isn't one sexy little fucker. And I am damn excited to see what he looks like squashed between all those tits.\" She held her hands out in front of her chest. \"My god, the tits on Antoinette.\"\n\nHe laughed. \"So, assuming I eventually agree to a threesome, is that the sort of person you're going to find me? Just, find the woman with the biggest boobs?\"\n\n\"Nah. With you, I'm gonna find someone super tiny, like Natasha. I wanna see someone small try and fit your werewolf dick, you know? See the outline of your cock on their belly while you stretch them to near bursting.\" She quivered and smiled maniacally with her words, and rubbed her arms with her free hand, the other squeezing his. \"I could get under her, and you fuck her doggy style, and I Kiss her while you fuck her, and--\" He elbowed her in the side, gently, and she laughed.\n\nHis phone buzzed. He groaned, checked, and raised a brow. \"Uh, it's from Avery.\"\n\n\"Avery? The fuck she want with you?\"\n\n\"Dunno. Says she has something important to tell me. And she figures I should bring you, too.\"\n\n\"Important, but willing to have me hear it?\" Jessy frowned as she looked at the sidewalk. \"Yeah sure, I'll go. Bitch will probably make me wait outside, though.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHe sniffed the air as he stepped into Avery's usual apartment building. Something was off. He expected a stronger smell, considering the building was populated mostly by Uratha, and Uratha had a distinct odor. Biological odor aside, they also had a spiritual odor, something he could only get a hint of; Avery told him he'd get a better nose for it as he got older.\n\n\"You know, we've been talking about sharing you with humans, and maybe a vampire,\" Jessy said, \"but we never brought up the other options. Fiona's dating Damien, and I know that choir boy wouldn't share. And Athalia... yeah, not her. But what about the other werewolves?\" She smirked at him as they started up the stairs. \"They got some hot bitches.\"\n\n\"You know, I'm pretty sure they take offense to being called bitch.\"\n\n\"What? Why?\"\n\nHe shrugged. \"Guess they think you're calling them a dog. Wolves got a lot more pride than dogs.\"\n\nHer hand gripped his shoulder for balance as she snorted on a laugh. \"That's the insult they take away from that? Not the, you know, being an asshole part, just the reference to a dog?\"\n\n\"I guess, yeah.\"\n\nThe snorting laughter continued, until Eric had to slip an arm behind her to keep her from falling down the stairs.\n\n\"Uh, pretty sure we're here for a serious meeting, Jessy.\"\n\n\"Bah, it can't be that serious if I'm allowed to be here. Even if I'm outside the door, they wouldn't let me close if it was important.\"\n\nHe nodded, and looked ahead as they stepped into the hallway. A shitty, old apartment building with lots of strange smells, mostly age and the growth and shit that came with it. There was also the smell of Avery's pack, just, not as strong as it should be. And now that he was only a dozen feet away from the door to Avery's apartment, he knew he should have been smelling them more. And hearing them more.\n\nWithout a word, Jessy reached into her pants under her shirt, and pulled out a pistol. She'd insisted on a quick stop at her apartment before coming here, for an innocent pistol she assured was absolutely required before she went visiting anyone in 'werewolf country'. It paid to be a paranoid vampire.\n\n\"Do come in,\" a voice called from the other side of the door. \"Don't make us force you in.\"\n\nEric and Jessy looked at each other, and then to the ends of the hallway. And out of the fucking air, stepped a few Kindred, on each side. Every one of them had guns in hand, and not pistols. Two assault rifles and one shot gun, for each group.\n\nEvidently, it wasn't just Eric getting stronger as the months went by. He recognized a few of these vamps from the scuffle he'd gotten in with them on the streets months ago, and they weren't this sneaky then. They'd been practicing. Whichever of them had been using Cloak of Night, they were damn good to keep two groups from him. Or each group had someone who could, and even then, skilled.\n\nThen again, the last thing he'd expected coming here was a sneak attack from a group of vampires. He'd let his guard down.\n\n\"Turner! Mandleson!\" Jessy snapped her head to glare at each group, eyes wide with animal rage. \"I'm going to--\"\n\nEric put a hand on her shoulder, his eyes also on the two groups. It was enough to calm her down, at least so she didn't suicide by running at either group. Surrounded by vampires armed with heavy weapons that could rip through the two of them meant they were fucked. Yeah, this was a trap, and they'd walked into it. But he knew how to roll with a punch. She didn't. If she didn't calm down, she was gonna get them both killed in some last stand.\n\nJessy boiled with rage. She knew they were stuck, and she needed an outlet. The outlet became the door someone had told them to walk through, and she kicked it hard enough to break the door frame. She marched in, looking for a fight, but with at least enough control to keep her hands down.\n\n\"Jessy, can't you control yourself for one fucking second?\" a voice said.\n\nSighing, Eric followed her in.\n\n\"Garry!\" Jessy glared at the man, glared hard, but kept the pistol aimed down, thank god. \"Garry you fucking sack of shit, what the fuck is this about? Where's Avery?\"\n\n\"Avery's busy.\" The elder stepped off the couch and grinned at them. \"Come in and sit down. You're not going anywhere for a while.\"\n\n\"What happens after a while?\" Eric asked. He stepped into the apartment, and the six vampires in the hallway followed him in. If they'd lowered their weapons, he'd have considered transforming, getting into melee, and beating them to a pulp. Probably a dumb idea. Vampires were fast as hell, and would pick the weapons back up and riddle him with metal before he finished transforming.\n\nGarry shrugged. \"You go home. No harm, no foul.\"\n\nJessy threw up her arms, earning a few guns pointed at her. \"What the fuck? The fuck do you think you're doing, holding us hostage for a night?\"\n\n\"Just making sure some other things go smoothly.\"\n\n\"Other things?\" She stomped up to him, and glared daggers at the man. At least she didn't punch him this time. \"What the fuck are you up to?\"\n\n\"Private.\"\n\n\"You don't get to say private! You're holding us hostage! You fucking--\"\n\nGarry punched her. Eric tensed, but six guns only ten feet away all pointed at him, and he froze in place, every muscle tight and ready to pounce. It wasn't a soft punch, or a hard punch. It was a vampire punch, and Jessy went down with a crack. She tried to get back up, but she only managed to get to her hands and knees before she stopped. A punch like that would have put a human in the hospital from brain damage, let alone the bone damage. Her jaw was broken.\n\n\"You fucker,\" Eric said, glaring at the man and making sure his eyes read 'you're dead' in big, bold letters.\n\n\"I owed her that.\"\n\n\"Bullshit. You--\"\n\n\"Eric, shut up.\" Garry sighed, shrugged, and walked up to him. Not a shred of fear on this guy. Even the vampires with guns in their hands looked at Eric like he'd rip them in half if he got his hands on them, cause it was true. But the elder vampire looked at him like he was a pup he could smash around without effort.\n\nEric growled, but shut up.\n\n\"Good dog,\" the fucker said. \"This wouldn't have happened if you'd played nice and worked with Avery, Eric. You'd probably be helping her.\"\n\n\"Say what?\"\n\nShrugging, Garry walked over to the window of the living room, opposite of them, and leaned his ass against the sill. \"I suppose it doesn't matter if I tell you a little. Neither of you are leaving this room until it's over anyway.\"\n\nFor a moment, it sounded like Garry was some sort of clich\u00e9 villain, explaining his master plan. But no, he was just looking for a way to fill the time while he waited for whoever to do whatever. And judging from what he'd said, that whoever was probably Avery.\n\n\"Avery,\" Garry continued, \"is making her move, tonight.\" He stepped over to them, reached down, picked up Jessy by the back of her shirt collar, and threw her onto the couch, hard enough it rocked back and forth a couple times.\n\nJessy almost screamed in agony, but once she settled, she held her jaw in her hands, groaning. Eric sat down beside her, and winced as he examined the wound. She batted him away.\n\n\"Ee'll heal.\"\n\n\"Yeah, it'll heal,\" Garry said, going back to the window, \"so just sit back and wait. No one's going to hurt you -- more -- unless you make them. And believe me, I'd fucking love to take this bitch and rip her jaw clean off.\" His words earned some harsh glares from Jessy, but she couldn't start yelling a storm with a broken jaw. \"Avery's got to do her thing, and she wanted to make sure no one got in the way.\n\n\"And that thing is?\"\n\nThe elder bastard smirked, and shrugged. \"I've told you plenty already. Who the fuck do you think I am? Jacob? Taunting you with half info?\" He laughed, a quiet chuckle that reeked of a man who both loved and hated what he was doing. The sort of sound a barfly made when he was going through the motions at his local waterhole, lots of drunk-fueled laughs, even though everyone there knew, including the man himself, that he hated every moment of his life.\n\nEric knew those sorts of people, met plenty of them, and Garry sounded just like them.\n\nHis laughter died away, and eventually, the man sat against the windowsill and looked out into the night. \"So just sit tight, and everyone will be happier by tomorrow night.\"\n\nThe wolf in Eric wanted to transform and rip the man apart. The wolf also realized Garry was dangerous, and could kick Eric's ass in a straight fight, let alone with a bunch of vamps helping him, guns in hand. All Eric could do was agree, and--\n\nJessy's phone buzzed, and she reached for it. She didn't get far, maybe six inches, before someone had a shotgun two feet away from her head.\n\n\"Let it ring,\" Garry said, smile fading, voice darkening. \"But if I'm guessing right, shit has officially hit the fan.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\n\"Relax the wrists, fool,\" Maria said.\n\nDamien smiled, but kept his eyes focused on the sheet music. Mozart's Sonata Number Sixteen, in C major. A whimsical piece, with lots of broken chords for the left hand, and a flighty melody for the right. Simple enough he could play it without having to look down at his hands constantly, good practice for developing finger awareness.\n\nThey continued for a time. Maria sat beside him on the piano bench, and watched with analyzing eyes. Her face was terrifying, as was her body, her aura, and the white mist that leaked from her, but after months of working with her, and learning with her, it all faded to background noise. It didn't bother him. And her harsh attitude didn't bother him as much anymore either. She could be cruel, but after a time, it became apparent she wasn't cruel to indulge some sadistic urge or resentful, deep-seeded hatred.\n\nShe was cruel because she demanded the best from those she was willing to work with. If she was being cruel, harsh, critical, it was because she felt the person worthy of her time, and her help.\n\nIt probably wasn't the best approach for someone like Natasha. She was a sensitive sort, and would do better with someone who could nurture her. Not Daniel, either. He was just as cold as Maria, but at least without the cruel, harsh approach. Antoinette, on the other hand, was probably a perfect fit for Natasha, someone who could use a soft word and razor sharp wit to help develop the tiny Mekhet's skill.\n\nDamien had no problem dealing with Maria's approach. Harsh, critical words were pretty much the norm in the Lancea et Sanctum, both Lucas's, and from what he knew about other cities that practiced, other bishops. That was life in the church, and it only grew harsher for Sanctified. It was never to be taken personally. Well, almost never.\n\nHe continued playing for a while until their lesson was done. An hour of playing increasingly complex music, until eventually he couldn't keep up. And only after he failed to play a piece a few dozen times did she consider the lesson done.\n\n\"Is it this hard for kine?\" he said between clenched teeth. \"Feels like I'm trying to... to carve into a piece of metal, with a knife.\"\n\n\"Neuroplasticity. The ability for your mind to adapt to new organization. Learning to play an instrument is easy for kine children, but difficult for kine elders, as the mind grows resistant to adaptation.\"\n\n\"Can't teach an old dog new tricks?\"\n\n\"Precisely. But for Kindred, you have a different barrier. Unfortunately, our minds will forever lack plasticity. But at the same time, our will creates a larger effect, once you learn how to direct it. As you are doubtless aware, it is not only our wounds that heal while we sleep, but changes to our body revert as well. Cut hair regrows. Piercings are pushed free of skin, and holes mend. Tattoos vanish.\"\n\n\"But, if I make a mental effort before I sleep, those things stick around.\"\n\nShe nodded. \"Yes, and what we are doing here is not so different. Playing an instrument is a more complex task, filled with thousands upon thousands of micro changes to your muscle memory and conscious awareness, but still, not dissimilar.\"\n\nForever Kindred had to manage their human half with their Beast. It made things difficult, but if one could master it, like Maria, they could do some truly marvelous things. Becoming a virtuoso with the piano and organ, and using the power of being Kindred to do it, was beyond impressive, more impressive than a kine using biology to master something. Then again, she had centuries to work with, kine didn't.\n\nBut he had centuries to work with too, potentially. That'd been a scary idea in the past. Now, he was starting to look forward to it.\n\n\"How goes your relationship with the Begotten?\" she said, getting up and heading over to her desk. The idle chit chat had never been a thing before, but lately over the past few weeks, it'd become normal.\n\nHe smiled. \"She's smarter than I thought.\"\n\n\"Ah, can't have that. Smart women are troublemakers.\"\n\nWhat? He blinked at her, and she didn't even smile as she sat down and started typing. Did she just make a joke?\n\n\"Sometimes I wonder about her, though. She's so joyful, but considering who and what she is, I can't help but think she's running from something.\"\n\n\"No doubt. She is a monster of nightmares. And while I do not think she is the brightest creature, I expect she's more aware of her surroundings, and the people within, than it appears.\"\n\n\"Agreed. But, how do I approach that?\"",
        "Maria raised a brow. \"What do you mean?\"\n\n\"I mean, if she's smarter than it seems, then--\"\n\n\"Then what? Do you want to drag her into philosophical conversations? Or politics? Perhaps you wish to talk with her about the nature of Longinus, of God, Jesus Christ, and the journey the damned must take if we wish to ever see the light of the Lord? Or, perhaps you wish to speak with her of the works of Chopin and Beethoven?\"\n\n\"I...\" He turned around on the piano bench to face her, but ended up looking down as he frowned in thought. \"I guess not. We don't talk about those things now, and I know she'd be bored of those topics the moment I got the first word out.\"\n\nThat earned a smile from the Nosferatu. \"She is a classic extrovert, Damien. Her mind is connected to her body in a way you and I will never understand. She thinks thoughts with her mouth, and feels emotions with her limbs. Do not try and change her. It won't work.\"\n\nThat, was true. \"It amazes me we get along.\"\n\n\"Normally I would argue you need much in common with a partner for romance to last, and that the old adage 'opposites attract' is juvenile idiocy made manifest. But, sometimes, two people of vastly different minds can complete the other. I am sure Fiona has helped eased the weight on your heart, has she not?\"\n\nHe winced. Fiona may have been smarter than he figured, but Maria was too, and he'd already figured Maria was a genius. It was disturbing how she could understand things about him, when he'd never told them to her, things that were personal and hard to put to words. Not hard for her.\n\n\"She... has. A lot.\"\n\n\"And I am sure you're helping her in a way she does not understand, but needs. Perhaps, someday, the two of you will be able to articulate why you enjoy each other's company so well; you'll probably verbalize it better than her, and sooner. But nevertheless, you are likely helping her in some fashion you do not yet understand.\"\n\n\"Should I ask her about it?\"\n\n\"Perhaps. Such a powerful question could break a flimsy relationship.\"\n\nHe winced again. Flimsy? Was it flimsy? He didn't think so. It was just fun sex at first, Fiona taking advantage of his awkwardness and seducing him. And he'd been happy to be seduced, tied up in a spider web and fucked by a terrifying, gorgeous spider monster.\n\nEvery time he took a drink of her, and lost himself in the bizarre, intoxicating taste and power of her blood, he loved it. She loved it. They fucked almost every night, and sometimes went back to the jungle so Vrall could participate. Vrall liked to tie him up in her webbing, but when it was Fiona, she liked being tied up instead. So many kinks explored, like a bucket list she was having a blast burning through.\n\nAnd when they were done, there was cuddling, and chatting. The chatting was usually one-sided, her talking about the things she liked, and him reacting to her statements. He liked doing that. Occasionally he'd chime in with his own thoughts, but he preferred listening to her, and she liked sharing her thoughts with him. It was almost as if she needed to say her thoughts to think them at all, and needed him to listen, so she could listen to herself.\n\nDamien frowned, and then smiled. Attempts to think of Fiona filled him with joy, and moments later, desire. Happened every time. It was kind of frustrating, honestly, to forever be distracted. But the thought of her sitting on his lap, legs wrapped around him, hands tied behind her, breasts squashed to his chest, and her whole body wriggling to escape him as he slapped her ass, and sank his fangs into her neck, was glorious. It was the wriggling and squirming, like she was prey trying to escape a predator, that really seemed to strike a chord in him. And her, evidently. Trapped, helpless, struggling fruitlessly to get away as he devoured her, with his cock buried in her, drenched in her juices. They both loved it.\n\nHe sat up straight and shook out his head. Good Lord, give him strength, that woman was going to be the death of him.\n\nMaria laughed. She'd been watching him, and considering how damn smart she was, could probably read his mind.\n\n\"It's a rare thing to enjoy someone's time so, my student. Enjoy it while you can. You--\"\n\nBoth of them stood up as a noise echoed through the tunnel and into the dome. Matthias groaned, grabbed a broom, and headed toward the noise, but Maria held up a hand, and clicked on a few things with her computer mouse with the other.\n\nMore noises, and this time he recognized the sound of bending and breaking metal bars.\n\n\"The Uratha have come,\" she said.\n\nDamien stared at her. \"What?\"\n\nSighing, she stepped around the desk, and wiped off her dress of non-existent dust. \"They're on the cameras. Matthias, stay out of the way, no matter what happens. Damien, you...\" She frowned at the dark tunnel ahead of them, and let out a quiet snarl. Not for him, but for the approaching werewolves. \"You may do what you wish.\"\n\n\"What I wish?\" He stared at her before peering into the tunnel. Another crunch, this time louder, and accompanied by some groans and growls. The gates were being opened, forcibly.\n\n\"Yes, what you wish. I will not force you to partake in this battle.\"\n\n\"Battle?\" Gulping hard on a dry throat, he hopped over to his desk and scooped up his pistol and silver sword. It didn't have the length or heft of his proper sword, but the steel sword wouldn't be as effective as the silver-coated one. Supposedly. The silver bullets would work well; he knew that from testing them on Carter.\n\nExcept, there didn't need to be a battle.\n\n\"Battle. They're here to stop me from communing with spirits. From threatening the Gauntlet.\"\n\n\"But, I haven't see you--\"\n\n\"Yes, I have not done these things. But they think I have.\"\n\n\"Then just explain!\"\n\nShe snapped her head to glare at him, and he recoiled. Those eyes were like fire against an icy coldness, against an arctic oblivion. He took a small step back, and tightened his grip on his sword.\n\n\"I do many things in my private life, Damien, things I would not have these wolves see. My second life is my own, and I will defend that privacy.\"\n\nOh good Lord, save him from the pride of elders. He slowly nodded as the reality sank in, that Maria was going to stand her ground, and not let werewolves investigate her private life, because she was prideful. Quite the sin. But then, Kindred were not forbidden from sinning. It was just, her pride was going to get her killed.\n\nHe stayed where he was, and waited, standing a few feet back and to the side of her. Leave? The only way out was through that tunnel. The werewolves would let him leave probably, but, he didn't want to. Madam Turio had extended him a helping hand when no one else had. He wasn't going to let her die over a misunderstanding.\n\nHe set his gun aside for a second, quickly activated the emergency app on his phone along with a short text, and picked his pistol back up. No signal down here, not for a cell tower or anything, but Maria had wifi. With any luck, Jessy and Jack would get his message, and come running. And if they didn't, well, they'd find the mess later, cause he wasn't leaving.\n\nMaria met his eyes, and slowly, her gaze softened. And perhaps, for just a sliver of a second, she smiled, before she looked back to the tunnel, and the sound of yet more crunching metal bars.\n\nIt didn't take long for the werewolves to enter the dome. They didn't come far, stopping at where the tunnel opened into the dome, and every single one of them looked ready for war. Not for arms; werewolves didn't bother with weapons. It was in their eyes. Each one of them was ready for a fight, or something more animal than that. They were ready for a hunt.\n\nMaria was in her white, old fashioned dress, as usual. Damien wore his Invictus suit. The werewolves, on the other hand, were dressed like a bunch of Carthians, jeans and t-shirts everywhere. It was a little insulting, honestly, considering who Maria was, and that they were currently underneath the Grand Cathedral of Dolareido.\n\n\"Explain yourselves,\" Maria said, the cold bite of her words enough to silence the murmurs of the werewolves.\n\n\"Us?\" Avery said. \"You know why we're here, vamp. You have some explaining to do.\"\n\nMaria ground her teeth until Damien could hear it. Eesh.\n\n\"I will explain nothing. My personal life is none of your concern.\"\n\n\"Personal life? It's not personal when it starts affecting others.\" Avery stepped forward, not a trace of fear on her. Either that was dumb, or she genuinely was capable of fighting Maria. Unlikely. Elder vampires were a different breed of dangerous from anything Damien figured a werewolf was capable of. But then, werewolves had a habit of hunting as a pack, while vampires had a habit of going solo.\n\nNot quite solo, not with him here.\n\n\"I have done nothing,\" Maria said.\n\n\"Bullshit. You've been talking with spirits, Maria, and whatever you're doing, it's fucking with the Gauntlet.\" She came closer, until the two short women were only inches from each other. \"Fuck, we've got azlu in the city for a reason. They're trying to repair damage someone's creating. That someone\"--she pointed at Maria--\"is you.\"\n\n\"I have done nothing of the sort.\"\n\n\"Then you won't mind if we take a look around. I--\"\n\nMaria reached out, slow enough that it didn't register as an attack, and pushed Avery away with one hand. \"You will leave my domain at once, or so help me, I will make what Viktor did to you, all those years ago, seem like a discourteous conversation.\"\n\nThe look on Avery's face was enough to have Damien tighten his grip on his sword. Slowly, he looked from Avery to the other werewolves. He expected Caleb, David, Noah, Carter, Brianna, Monica, Mason, and Erica. The three he didn't expect, were Arturo, Matthew, and Clara. All three were here. They didn't look happy to be here, but they were here.\n\nDamien squinted at Art and Matt, and they both returned it, but it lacked conviction. If anything, they looked guilty, and soon they looked away. Did they do something to Natasha? Probably tricked her, misled her, so she didn't know they were coming here tonight.\n\nThat better be all they did.\n\nHis eyes found Clara's, and unlike the boys, she didn't look away. But the expression on her face was obvious: sadness. She knew this was going to end badly, but she was here anyway.\n\nSomething had convinced them to follow Avery on this mission, and from the looks on their faces, it was more than simple, mindless devotion to their boss.\n\n\"Viktor's dead,\" Avery said, \"and we both know you're a pale comparison of that asshole.\"\n\nMaria clenched her fists at her sides. \"Am I?\"\n\nDamien gulped and glanced over his shoulder. Matthias stood off to the side by Maria's coffin, scared, worried for his master. With the way the conversation was going, he wasn't out of the way far enough.\n\n\"Seriously Maria, we're not here to fight. We're here to stop you. Just show us what you're up to, give us your loci and whatever other tools you're using, and we'll be on our way.\"\n\n\"I will give you nothing.\" No hesitation. Not a single moment to consider the fact she was looking at a dozen werewolves, and that, unlike during the day, there weren't four ghouls sitting nearby with high-powered rifles.\n\nMaria saw this coming, judging from how she was reacting. Why weren't those ghouls here? If she'd known this sort of situation was inevitable, she should have had her trained guard with her during the night. But they weren't. Why?\n\n\"I'm serious, Maria,\" Avery said. \"I've got a dozen spirits calling you out, a bunch of holes in the Gauntlet, azlu running around trying to fix them while they eat up humans doing it, and I know there's a loci nearby. I'm not leaving until this situation is resolved.\"\n\nMaria took a step forward, again reached out with one hand, and pushed Avery back a foot. Maria rarely touched people, and seeing her push around the alpha of the pack had Damien borderline ready to snap with rising vitae. He leaned his weight onto the balls of his feet, and did his best to watch the pack in the corner of his eyes, while also watching his boss.\n\n\"I do not know what you're talking about,\" Maria said, rage so heavy Damien could feel it. \"But you will leave, or I will make you.\"\n\nWhat to do what to do what to do. The tension was building, both women waiting for it to snap before they attacked. What would Jack do? What would the sheriff do? Jack would try and play diplomat, and when it failed like it would in this ridiculous situation, he'd use the curse to force peace. Damien didn't have the curse. The sheriff, on the other hand, would make a tactical decision and approach it with cold, ruthless efficiency. Daniel would cut their heads off before they realized he meant to get violent at all. But that approach was lost to Damien as well, since the werewolves had walked in, ready for violence. And he just wasn't fast enough.\n\nHe had only one option. When Maria created an opening, he'd have to take it, and disable as many of the wolves as possible. And, if he was going to do this the way Daniel would, that meant kill. He didn't want to do that, but he would if he had to, if Maria could create the opening. And he knew she could. Maria was a Nosferatu. She had absurd strength, and the ability to Obfuscate herself. He doubted Cloak of Night would help her in this situation, but the ability to punch through concrete would.\n\nBut, it wasn't her strength or her stealth abilities Maria was known for. People told stories, like children telling ghost stories around a campfire, of Maria's true talent, and it terrified Kindred. It terrified him, too.\n\nHe took a step away from Maria as he felt her vitae rise. No need for Auspex, he could feel it. The werewolves could feel it, too. It were as if the vampire had reached into some dark, ancient well, where a buried and forgotten creature of old slept, and had taken hold of its power. She drew it up, and up, an overflowing river of vitae that made Damien and the werewolves alike stare in shock.\n\nShe looked past Avery to other others, and whispered. \"A gift. Take it.\"\n\nSilence fell on them. The wolves stopped breathing, stopped moving, stopped anything. Damien stared at them as the terror built up in their eyes, and the Beast inside him shrank onto itself, horrified by proxy. Now would have been the perfect time to strike, but he couldn't move his feet. The aura that radiated from the corpse lady was a wall of cold death, and he couldn't help but stare at her and her victims, as the werewolves slowly realized what was happening.\n\nThey started screaming.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\n\"Diablerie? I... I know about it.\"\n\n\"Ha. I reckon you do,\" Black Blood said. \"If I'm guessing right, and I think I am, your ancestor did it, right? Drained some other vamp till they turned to dust.\"\n\n\"How would I know if she had?\"\n\n\"Don't try and fool an old soul like me, Jack. I know you were given peeks of the past, and I know that event would have scarred the very essence of the curse. It wouldn't have forgotten.\"\n\n\"Uh huh.\" He folded his arms across his chest, and tried his best to keep his expression neutral. Hard to negotiate with another party, when the other party knew more. First rule of negotiating anything was learn as much as you can beforehand, and Black Blood already had him beat. Best Jack could do was feign knowledge, until an opportunity presented itself.\n\nThe ooze around his feet rippled with the alien voice, rumbled, like a fucking bellowing alligator.\n\n\"I know how to free you, Jack. The question is, how much are you willing to help me?\"\n\n\"Help you? I don't--\"\n\n\"Come now, boy. Surely you understand by now,\" the black water said.\n\nJack took a step back as the water began to rise. Triss did too, her eyes going wide as she looked at the rising mound of strange, obsidian liquid. Apparently this was not a common occurrence, and Jack unfolded his arms, as if maybe he could physically fight the spirit if it came to it. He knew he couldn't. Whatever Black Blood was doing, Jack had two options: run, or wait.\n\nAs far as anyone could tell, Black Blood had never directly affected anything, only ever indirectly, working his magic. The only times he'd done anything remotely close to direct, was when in S\u00e1ndor's nightmare, and even then he hadn't been too hands on. He'd interrupted things, but that was it.\n\nBut, just because he never did things himself, didn't mean he couldn't, just that everyone figured he couldn't. There was a very real possibility that he could, and Jack couldn't help but consider that possibility as the mound of water grew, and grew, and then exploded outward. He threw up his hands to block the wave, but he might as well have been blocking the ocean. It engulfed him, and Jacob, and Triss, and the candle went out.\n\n\"And then there was darkness,\" Jacob said, chuckling. They were underwater, but not underwater, if Jacob could talk.\n\nJack groaned and pushed himself to his feet. Blackness, everywhere. Ugh.\n\nExcept, not. The candle was out, but there was still enough light to see by. Creepy, eerie, stereotypical spooky green light. He looked around, trying to find the source of it, but wherever it was coming from, it lacked an origin, just like the spirit's voice.\n\n\"The fuck was--\"\n\n\"Now,\" Black Blood's voice said, resonating all around Jack's body, \"I can show you.\"\n\nHe was still in the cave, still with the big ritual bowl, so how the fuck was the spirit going to show him anything? Course, soon as he thought the thought, shadowy silhouettes danced before him.\n\n\"You couldn't just fucking tell me?\" he said.\n\nThe presence laughed. \"Where's the fun in that? Now, watch.\"\n\nJack watched, and did his best to ignore the fact he was now inside the black ooze that was Black Blood's body. Triss had calmed down, so this was probably a normal thing for her, though the way Black Blood had decided to engulf them was not. Fucker was full of surprises.\n\nTwo shadowy figures stood within the bowl, slow dancing, bodies made of wisps of smoke. A man and woman. The smoke didn't have enough detail for Jack to know if they had clothes or not, but by how they were dancing, he figured they had to be, probably something old fashioned.\n\n\"What do you know about diablerie, son?\"\n\nJack rolled his eyes. \"One vampire drinks another to death.\"\n\n\"Ha. You say that like it means nothing, like vampires just go around in their corpses, thinking it's perfectly fine and normal to be sucking on humans, and turning their life into something else, something you varmints call vitae.\" The spirit laughed, deep and rumbling, raspy and alien, and Southern, all at the same time.\n\n\"You say that like it's unusual for one species to prey on others.\"\n\n\"It's unusual, boy, for one species to basically be dead when they're not.\" Black mist pooled up around Jack, thickening in the strange water that surrounded them, and taking the shape of a human body; it had a head, two arms, and two legs, at least. \"There's more to your kind then you'll ever understand. Take it from your pal Black Blood, the vampire is a strange, strange creature. That curse lurking around inside you is proof.\" The voice still came from everywhere, but the wisp creature beside Jack posed with each word, as if it was doing the talking.\n\nHe was prompting Jack, to try and get him to ask 'what's this got to do with diablerie?' in a predictable way. Jack folded his arms again, and said nothing. Which of course only made Black Blood laugh again.\n\n\"Diablerie, Amaranth, is when a vampire shows their true nature, boy. Corpses, waltzing around, sucking the life out of others cause they ain't gone one of their own. And nothing, nothing shows that dark part of a vampire, quite as strongly as when they suck the soul right out of another bloodsucker.\"",
        "Soul. The S word. Jack squinted one eye at the wisp of smoke beside him, and then looked back at the two figures dancing in the bowl. The man grabbed the woman by the head, yanked it back, and brought his face down to her neck. Fighting, struggling, and not the sexy kind.\n\n\"This a memory?\" He gestured to the two wispy figures, one dying to the other.\n\n\"Indeed.\"\n\n\"This is nothing like what happened to Susanna.\"\n\n\"Oh? This man convinced this woman that they were soul mates, destined to be together, forever. So consumed was he with her, he devoured her, down to the soul.\"\n\n\"Susanna wasn't fucking dancing with the person she killed.\" He'd already told Black Blood about Susanna's ritual, but the spirit loved his drama and monologues.\n\n\"This man,\" Black Blood continued, \"gathered the ashes of his dead lover, and brought her before the Strix. A tree, deep underground, dead, ancient, a haven for the owls that haunt your kind.\"\n\nIt was like he'd ripped the memory straight out of Jack's brain. Holy shit.\n\n\"You didn't mention you already knew about the tree...\"\n\n\"You didn't ask.\"\n\nOh this mother fucker.\n\n\"What... what are they?\" The bastard knew more. He had to.\n\n\"Ah, the striges? The Birds of Dis. Ephemeral creatures that haunt your kind and loathe you for daring to pretend you are human.\" Black Blood chuckled, and his voice shook the cave with its deep vibrations. \"Can't say I blame 'em.\"\n\n\"I get that they're ephemeral or whatever, but... but what are they? The fuck do they care about vampires?\" He looked to Jacob when he said it, but the bastard just shrugged and nodded to the wisp beside Jack.\n\n\"You may as well ask what is a vampire, and where did they come from?\" Black Blood continued.\n\n\"Uh, yeah, I did ask that, like, the day after I was sired.\"\n\nTriss and Jacob laughed, and Jack couldn't help but smile a little. Laughter was contagious. Even Black Blood laughed.\n\n\"The owls. They'll never forgive you, vampire, for your refusal to let go of your human half. That's all you need to know.\"\n\nJack snarled, smile gone and replaced with a flash of rage in an instant. He slashed his arm at Black Blood as he jumped back from him, but all it did was pass through him, like punching smoke.\n\n\"The fuck it is! Susanna's curse is fucking ruining my life! I want it gone! I haven't done a fucking thing to deserve this. Never even met a Strix.\" He'd remember if he ever met a ghostly black owl with glowing yellow eyes, and a need to ruin his life.\n\nTriss stopped laughing, but Jacob didn't. At least he kept it quiet, unlike the spirit.\n\n\"Regardless,\" Black Blood said, \"the intent of those creatures is not my concern. What I can offer, however, is my assurances that I can extract the curse.\"\n\n\"Extract?\"\n\nChuckling again, the spirit gestured to the remaining shadow silhouette on the bowl. Whoever they were, they lay flat on some invisible ground, as a swirling mist surrounded them. At first it seemed like it was the strange, only partly real black water that was everywhere, but as Jack squinted, it became clearer that this was part of the memory. A swirling tornado of blackness that fell upon the man, and cut into his chest. All shadow smoke, no detail, but it was enough for Jack to see the man writhe in obvious pain.\n\nBut when the tornado cleared, the man got up. The shadow silhouette faded, and Black Blood chuckled his usual chuckle.\n\n\"That's it?\" Jack said, gesturing to everything around him. \"That's all I have to go on, that you can actually do something about this curse? That you can... extract it?\" Which didn't look pleasant at all, from the shadow memory.\n\nThe shadow clone asshole hovered behind Jack and around him, with a sliver of a smile -- fucking huge mouth -- on the wisp's face that he could see through. Disturbing.\n\n\"Take off the necklace.\"\n\n\"What? The necklace?\"\n\n\"The necklace the dragon gave to you. Take it off.\"\n\n\"Why?\"\n\nShadowy hands he couldn't feel settled on his shoulders from behind. \"So I may see this curse, in your mind, boy. The necklace is suppressing your Beast, and the curse is attached to the Beast, infects it, alters it, changes it. And you and I both know this curse is more than a simple infusing of power and desire.\"\n\n\"I'm not letting you inside my head, Black Blood. Forget it.\" He brushed the wisp of shadow away, and walked toward the exit. Of course, the moment he did, the green light that allowed him to see vanished. \"Oh fuck you.\"\n\n\"Boy, I'm trying to help you.\"\n\n\"Bullshit. You just want the curse for yourself.\" How the fuck some sort of spirit thing would be able to extract a curse that seemed very Kindred specific, he had no idea. All he knew about Black Blood was the spirit was obsessed with the dead.\n\nAnd, like he said, Kindred were dead.\n\n\"You say that like it can't be two things. Think, son. My good friend Malachi has grown rather attached to your mother, and we both know it doesn't do her well, seeing you fight this curse.\" The spirit's shadow floated up and over to the bowl, and he sat on its edge as he looked at him. No eyes, but the mouth that cut clean through the shadow's head seemed to be pointed at him.\n\nJack glared at Jacob, but with the bandage over his eyes, it was impossible to read him. His smile softened a little, but that could mean anything from a poker master elder like Jacob.\n\n\"Leave my mom out of this.\"\n\n\"Very well.\" The shadow shrugged, and raised his arms to point at the cave around them. \"Dolareido has been my cooking pot for centuries, boy. You know the sort of things I get my hands into. Ever hear of me interfering in a bad way? Have I ever done wrong by you, boy? Ever hurt your Prince, or the city? What have I done to make you doubt me?\"\n\nThat was true, much as Jack hated to admit it. There wasn't any doubt that Black Blood was up to no good, same as Jacob, but that didn't mean he should automatically assume they were nefarious fuckers. If they could help themselves and help him at the same time, they might just do it, out of the kindness of their hearts. Otherwise, Triss wouldn't be with them, right?\n\nJack trusted Julias. Julias trusted Triss. And Triss trusted Jacob and Black Blood, at least enough for this conversation to happen.\n\n\"So you... you've extracted this curse from someone before?\"\n\n\"This exact curse? Probably not. But I have helped a vampire before, and ripped out the taint the Birds of Dis left on their Beast.\"\n\n\"What happened to him?\"\n\nThe shadow laughed. \"Lived another good five... days.\"\n\n\"Five days!?\"\n\n\"The man had enemies, being a diablerist. Without the power of the curse to protect him, he couldn't defend himself. The idgit.\"\n\nTriss snorted on a laugh. Black Blood didn't talk like some sort of ancient spirit of death and the dead. He talked like Yosemite Sam.\n\nJack paced side to side, looking at the shadow in the corner of his eye, and turning thoughts through his head until he got dizzy. He wanted the curse gone. Sure, his meditation sessions helped suppress the curse, specifically its voice and hungers. Combined with the necklace, he felt mostly safe that the curse and the voice in his head were under control. Mostly wasn't good enough. He wanted to be back to normal, even if that meant throwing all the power away. Walking around with a nuke tied to him that he could accidentally set off at any point was torture.\n\nHe stopped, and stared at the waiting shadow.\n\n\"Who are you?\"\n\n\"Me? I'm Black Blood. Haven't you been paying attention, boy?\"\n\nNo, he was lying. Sure, his name was Black Blood, but everything else was a lie, had to be. Spirits didn't behave like this, behave like... Jacob. Spirits were far more one-track minded, right? He'd seen a few by this point, and they didn't bob and weave with their words and intent like this, like someone with a human mind would. And the fuck did a spirit want with a vampire curse? What could he do with it? Why was Black Blood so interested in death and the dead? Spirits vibed on human emotion, but death wasn't an emotion. Corpses were corpses, piles of meat and bone, empty, useless to a spirit, right?\n\n\"Don't fuck with me, Black Blood. Who are you? What are you?\"\n\nJacob's smile was unchanged, but Triss looked confused, eyebrow raised as she looked between Jack and the shadow.\n\nSilence settled on them for a minute, before the shadow hopped off the bowl, and floated toward him.\n\n\"Take off the necklace, invite me in, and I'll show you.\"\n\nClenching his teeth until his jaw cracked, he took off the necklace, and glared at the spirit like he meant to kill him.\n\n\"Fine, come in.\"\n\nBlack Blood laughed, came in closer, and set his hands of smoke on Jack's shoulders. And as Jack stared at him, the shadow opened eyes, like someone slicing through rubber with a knife where his shadow's eyes should have been. Eyes, windows to a soul.\n\nAnd then, it was just the two of them.\n\nJack stumbled back, almost falling on his ass as he looked around. This place. This place again.\n\nFor just a moment, he thought it was the exact same place where he met the azlu's mind. But it wasn't. The giant dome was there, but it wasn't black. It was Jack colored. His memories danced along the walls, shifting, oozing with every color of the rainbow, altering his memories into a mess he couldn't understand. But it was him.\n\nLast time he was here, it wasn't his mind, it was the empty mind of the azlu's host, a dead person with a body kept alive by the spider's infestation. This time, it was his mind, or at least some sort of pocket of it, one that could allow for interaction. Not like the strange, endless white oblivion, when he'd talked with his Beast. No, this was his human mind.\n\nAnd the curse was there with him. His Beast, the giant mass of black smoke with claws and talons, feathers and fur, beaks and fangs, all mixing and sliding in and out of its body, stood behind him. Except, maybe it wasn't really his Beast? Or maybe it was, being controlled and pulled along by the curse, the other voice that now lived in Jack's head. Maybe it was attached to his Beast like an infection. Or, like a parasite, one that needed to be extracted.\n\n\"You fucking suck, you know that?\" the curse said in that deep, disgusting, alien voice.\n\nJack smirked. \"This body is mine, and I'll do what I want with it, and you. Fuck you.\"\n\n\"You silenced me.\"\n\n\"You silenced me! Last time you took over.\" He swiped his arm through the smoke. Predictably, his arm passed straight through it. Not like he could win a physical confrontation with a non-physical part of him.\n\n\"You're weak, Jack. Weak, and...\" The many heads of the Beast turned from him, and faced the other side of the large dome they were in.\n\nJack didn't want to look. He knew what'd be there, and he wasn't looking forward to having this conversation, but it had to be done. Sighing, he slowly turned on the white stone underneath, and faced Black Blood.\n\nIf the god of death truly existed, he would have looked like this. A giant, black skeleton, one that put Athalia to shame. He came out of the ground from a black pool, a slowly turning whirlpool of onyx ooze that dripped off the giant skeleton's body as he climbed up from the depths of some strange hell to reveal himself. Small strands dangled off his bones, looking almost like the remains of clothes someone might find on a corpse a thousand years old. His eyes were completely empty, endless voids of obsidian. Athalia's eyes had small white dots for irises, but Black Blood had nothing.\n\n\"What is this?\" Jack said, gesturing around them. \"I thought this was... for human connections only.\"\n\n\"I reckon you did. Assumptions will be the death of you, boy.\" The enormous skeleton didn't have the room in the giant dome to completely pull himself out of the pool, but he managed his torso and arms, and that was more than enough to tower over Jack forty feet above his head. \"Spirits enter the minds of humans all the time. Twist them, mold them, and turn them into perfect tools for their goals.\"\n\nJack ground his teeth, and paced side to side again, looking at Black Blood with each turn. \"You're not taking me over.\"\n\n\"Ha! No I ain't. I'd have competition.\" The spirit leaned forward, and pointed his giant, black skull at the hovering smoke behind Jack. \"This curse of yours, is aware.\"\n\nBefore Jack could say anything, the Beast grew. And grew. With a hissing snarl, the body of the Beast and curse expanded, taking up more and more of the white stone ground until Jack had to step back to make room. Bigger, until it, he, was bigger than the skeleton half Black Blood managed to fit inside Jack's mind.\n\n\"You,\" the curse said, voice dropping an octave until it rumbled inside Jack's skull as much as the dome, \"are no spirit.\"\n\nJack reared his head back. \"You fucking serious?\" The curse had been reading his mind before, as usual, and apparently agreed with him.\n\n\"This thing,\" the curse continued with a smoky arm gesturing toward the giant skeleton. \"It's no spirit. It walks and talks like one, it hangs around with them, but it's no spirit.\"\n\nBlack Blood did something then that Jack hadn't expected, something the fucker probably thought too good for a vampire. He got angry. With a rumbling rasp that sounded eerily similar to the curse's, Black Blood growled, and sank his fingers into the stone like it was made of sand.\n\n\"You're not like the last curse I tasted. You, are aware.\"\n\n\"No shit.\" The curse growled as well, and Jack stared on as he did his best to ignore the growing pain in his skull. This metaphor for a conversation between two demons in his brain was about as comfortable as two dueling jackhammers would have been.\n\n\"Ain't this a surprise. What are you then? A remnant, some shred of will from the Strix? Worthless vermin.\"\n\n\"And what are you? Some forgotten thing who's lost everything? All power? All relevance? Dropped at the bottom of world and left to rot where no one would find you?\" The Beast pressed in closer, until its swirling mass of beak, snout, fang, and everything else, came within several feet of Black Blood's face. Several feet wasn't much when you were big enough to walk over buildings.\n\n\"Wait wait,\" Jack said, swinging his arms in the air. \"How do you know he's not a spirit?\"\n\nThe Beast looked down at him, and Jack froze. For all his bravado whenever the two of them clashed wills, there was no denying the Beast and the curse were a duo shitloads stronger than him. They couldn't hurt him without hurting themselves, but that didn't change that the power Jack had been given, was at the curse's beck and call more than his own, and he was looking right at a metaphorical representation of it.\n\nIf there was one way he was going to die, it'd be pissing off a metaphor.\n\n\"How can you not tell?\" the curse said. Well, yelled, and Jack winced as he put his hands to his ears. \"Spirits are reflections. They're shadows. You saw it, we both did. Spirits can only pursue what birthed them. This... thing,\" again he gestured to the enormous skeleton, \"is not that. He thinks. He feels. He's something else. I can smell the presence in him, like a soul.\"\n\nJack almost said something, shut up instead, and stared at Black Blood.\n\n\"And you,\" Black Blood said, \"are residue, leftovers from a dying breed of meddler.\" The skeleton raised his head high, and pushed more of his body up and out of the black lake he was still only partially free of. \"Jack! You coulda told me this thing was aware. Gonna be hard to pull it outta you with it fighting back.\"\n\n\"You're not taking me! You don't get to have me,\" the Beast yelled.\n\n\"Ha! Hell you gonna do about it? You ain't real, curse. Just some shadow, a leftover from your Strix masters. You've gone and wrapped yourself around this boy's Kindred half, but don't think that'll save you from me. Why, I'm fixin' to--\"\n\nThe curse hit him.\n\nHit might not have been the best word. An ocean doesn't really hit something. An ocean crashes. The wave of smoke that poured out of the curse slammed into Black Blood like a tsunami, a weightless form suddenly weighing millions of pounds. Black Blood's skeleton body fell back, and the small world shook around Jack as the black spirit's weight dragged over the stone.\n\nNo. Not a spirit. The curse said it, and Jack knew it was true, knew it from the first fucking night he ever met the monster. Black Blood wasn't a spirit, he was something else.\n\n\"Jack,\" the curse said, and the swirling maelstrom turned to look at him. \"The fuck are you thinking? I saved your ass so many times, and you're going to hand me over to this? This fucking thing? And the fuck do you think he's going to do with me?\"\n\n\"I...\" Jack gulped and stared up. How the fuck was this happening? What was going on? Yeah, he knew that this whole experience was happening in his head, and if he really wanted to, he could hit Black Blood too. But the curse just knocked him to the ground like... like he could, like he could fight him off if he had to. Holy shit.\n\n\"Well now,\" Black Blood said, a rumbling chuckle rising up through him and the whole dome as he recovered. \"Seems I underestimated the situation.\"\n\nThe world went dark. Black mist poured up from around the giant skeleton, up from the pool half his body remained within, and flowed up and over everything. Black everywhere. The curse and Black Blood should have blended into a big mix of obsidian that looked the same, but his brain could tell them apart as easily as red and blue. And, as the seconds went by, it was easy to see the dome was filling up with Black Blood's particular shade of black.\n\nCold dread poured over Jack like an avalanche, and he fell to a knee. Death buried him, invisible creeping fingers that sank into his limbs, his muscles, and pulled him down until he went to both knees, and his hands. Black Blood hadn't even touched him, and he struggled to keep from getting crushed into the ground.\n\nAnd the curse suffered the same. It went down with a crash, and a host of talons reached out to brace against the stone, but he couldn't move either.\n\n\"Let me make this perfectly clear, curse,\" the god of death said as he pressed down on Jack, on the curse, and the Beast it rode. \"There are rules. I follow them. The only reason I play this game, and don't rip the boy you possess into shreds, is the rules. But don't push me, varmint, or I'll--\"\n\nJack's Beast roared, cutting through Black Blood's words and resonating until Jack's skull felt like it'd burst. Rage poured out of the curse, rage Jack was all too familiar with. The rage he felt when he'd first been kidnapped by Angela and Jeremiah. The rage when they tortured him. The rage when he escaped. The rage when multiple chances to kill Angela slipped through his fingers. The rage when she'd killed Julias. Rage that was partly his, and partly not.\n\nBack then, he'd thought that rage was all him, and that his situation had awoken some part of him that legitimately wanted to rip off Angela's skull and fuck it, just for spite. Some part of him, something animal and insane, wanted to unleash cruelty so inhuman, they'd put nightmares to shame.\n\nThat disgusting, abhorrent, overwhelming rage burst from the Beast and the curse, and threw Jack back into the wall of the dome. His Beast swirled, and shrieked, a banshee cry that sounded like a hundred crows going to war, and a dozen wolves preparing for the hunt. A thousand claws struck out from the Beast, each matched with a pushing wind of smoke, each an ocean crashing against the force of a fucking planet.\n\nBut it worked. Black Blood snarled an annoyed rasp, and his presence lifted. The explosion of the Beast's rage settled, at least enough for Jack to fall back off the wall and to his feet. His own groan might as well have not existed, with these two titans roaring and screaming at each other. Like, Godzilla and Ghidorah, having a shouting match in someone's skull.",
        "Except, this was his skull. Jack had let Black Blood in, so he could prove he could do something about the curse. He hadn't expected the curse to fight back. But that didn't matter. This was his skull, and Black Blood only got in because he allowed him.\n\nRules. He said he followed rules.\n\nBlack Blood reached out, set a hand on the swirling mist of Jack's Beast, and unleashed his own hell. Raw, cold death radiated from his skeleton palm, and engulfed the dome and everyone in it again. No rage, no hatred, at least not the sort the curse had. Black Blood was simply annoyed, like a god would be annoyed with a gnat. It was more than enough.\n\nWith a rasp and roar, Black Blood reached upward with his left hand, and pressed down on the smoke body of the Beast with his other. A hailstorm of black ice rained down on the curse, summoned by Black Blood's raised hand, even as the giant skeleton pressed down on him harder, and harder, until the wriggling mass of the Beast squashed to the white stone. Black shards pummeled him, crushing any attempt for him to form his myriad of limbs into something more concrete.\n\n\"Here, in the mind,\" Black Blood said with a quiet chuckle, \"you can resist me, curse. Out in the physical realm, I'd crush you into paste.\"\n\nExcept, he wouldn't, couldn't. He had to follow rules. Time to take a stab in the dark at what some of those rules were.\n\n\"Black Blood! Enough!\" Jack yelled.\n\nBlack Blood slowly turned his giant skull to look down at him. \"You've put up with this lowlife for this long, Jack? Color me impressed.\"\n\n\"I said that's enough! This is my mind, and you'll behave like a guest. Let him up.\"\n\nThat brought the giant to a standstill. They stared at each other for a moment, one small vampire meeting the gaze of a giant black skeleton, currently in the process of crushing into the ground the Beast and curse Jack had considered nuke-level dangerous. Letting him into his mind had been way too risky, stupid move, but maybe there was something to salvage from this.\n\nWith a snort, the skeleton released the Beast. Immediately the curse rose to his full height, or metaphorical power or whatever, and shrieked complete, abject hatred at the entity.\n\n\"Curse! Enough! Or I swear to fucking god, I will ask Antoinette to lock me up and do experiments on me until she can figure out what to do with you. Months and months of lying around, tied to a table, doing absolutely nothing.\"\n\nHe wasn't sure if it was the threat of Antoinette removing the curse, or the threat of months of boredom that did it, but the curse calmed down. It shrank down to something only moderately colossal, and hissed and snarled and cawed, but didn't attack Black Blood. Finally, some progress.\n\n\"Black Blood,\" Jack said, stepping in closer. \"I have heard your proposal. I have no idea how or why, but I believe you when you say you could remove the curse.\" With the obvious intent to use the curse for his own personal gains. Black Blood was some kind of entity of death, or dead blood or something, which must have meant he had a bridge to Kindred other beings didn't; Kindred were walking corpses, after all. If the curse affected vampires specifically, and Black Blood could interact with vampires in this sort of way, in this psychic-communication-Discipline-using kinda way, maybe he really could just throw the curse into a jar, and use him like an ingredient in deadly magic.\n\nCourse, the curse could hear these thoughts. They could have a nice fucking chat about it later.\n\n\"Well then,\" Black Blood said, emphasis on the drawl, \"let me just--\"\n\n\"I didn't agree to that. You proved you could do it, and that the payment would be you get to keep the curse for yourself. Am I right?\"\n\nBlack Blood glared at him for a few seconds before speaking. \"Yes.\"\n\n\"Then this meeting is concluded. I'll contact you after deliberation.\" Just like Julias taught him. Position of power. Control the meeting.\n\nThe Beast rumbled, a heavy chuckle, predatory and amused. Black Blood, on the other hand, remained silent for ten whole fucking seconds. Might as well have been eternity.\n\n\"Very well.\" With an annoyed sigh, the huge skeleton lowered himself back down through the huge pool of blackness he'd come up from. \"But, make sure to chew on this nugget, boy, before I go. Diablerie was the sacrifice this curse's original owner used to be blessed by the striges. Imagine then, what some vampire might have to do to expunge it completely, without the help of someone like me.\"\n\nBefore Jack could ask what the fuck he was talking about, the skeleton disappeared into the onyx water, and moments later, the mind meld ended. A flash of white hit Jack's eyes, and then he was back in Jacob's cave. Triss and Jacob looked at him, heads tilted to the sides, and judging from expressions and posture, they'd been waiting a whole three seconds or something. Yeah, that made sense. The mind meld with the azlu had felt like it took minutes, but it'd only taken seconds, from what Clara had said.\n\n\"We're done here,\" Black Blood said. \"Think about what I said, boy. Might just save your life.\" The shadow silhouette fell apart, like droplets of ink in water. And a moment later, the black water that engulfed them fell apart too, draining through the floor, the walls, even the fucking ceiling, defying gravity and oozing away like sentient slime.\n\n\"That, was weird,\" Triss said. Weirder was how her candle re-lit as the black water left, taking the green glow with it. \"His shadow just touched you, and then he says we're done?\"\n\nJacob laughed. \"They had a chat, dumbass, in here.\" He pointed at his own temple. \"And judging from the kid's expression, it didn't go well.\"\n\n\"It went fine, Jacob.\" Jack frowned at the man, and almost laid into him. Who the fuck was Black Blood? The curse was adamant he wasn't a spirit, and considering Jack's own suspicions, he had no choice but to believe him. The curse had known the azlu creature was ancient when they'd had the mind meld, said he could smell it on the spider. And for all his asshole attitude, the curse didn't seem interested in lying. Raping and pillaging, torture and mass murder, sure, but not lying.\n\n\"What'd he mean?\" Triss asked. \"About, thinking about what he said?\"\n\n\"It's personal.\"\n\n\"Personal? He said it could save your life. Doesn't exactly sound personal.\"\n\n\"I'll... tell you later, ok, Triss? Promise. Just, needs to be between me and him, for now.\" Hopefully Black Blood would respect that. It wasn't the end of the world if he told Jacob, and Jacob told Triss, but it was something Jack would prefer to get figured out before anyone else did.\n\nThe fuck had Elaine done to get rid of her curse?\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBack up on the surface, Triss and Jacob left. Said they had their own shit to do. He had no idea what those witches were up to, and he wasn't sure he wanted to know. They weren't involved in the covenant disputes, so it wasn't like they were preparing for war or anything.\n\nHe watched their backs as they left, and sighed. Beatrice was becoming more and more like Jacob each passing night, and he didn't like that. Not because he felt Jacob was an asshole. But, he was pretty damn sure whatever sort of dark shit Jacob regularly got into wouldn't help Triss get over Julias.\n\nA couple caws drew Jack's eyes up, and he smiled as his friends flew down to him. Mulder and Scully perched on each shoulder, and he offered each some oats from his pockets. They pressed into his neck, and he gave each of them a few scratches behind the head, before--\n\nYou seriously going to let that thing have me?\n\nJack almost jumped, before he looked down at his necklace, still in his hand. Shit, forgot to put it on.\n\nJust listen to me for once, asshole.\n\nI listened to you far too much. Listening to you has caused me nothing but pain.\n\nBullshit. But don't distract me, this is fucking important. That thing, Black Blood, he's no fucking spirit.\n\nI... believe you.\n\nI know. But there's something else. I recognized the smell on him.\n\nTell me about it. Every time I'm around Mary, that creepy, cold, dead feeling, feels like that.\n\nThat's her aura, and yeah, it's damn fucking similar. But I said smell, something you'd never pick up unless you learned how to use your nose like a proper Kindred. Like a proper--\n\nGet to the point.\n\nI smelled something a lot like that fucker Black Blood, every time we found one of those tears.\n\nIce ran through Jack's veins, and his eyes opened wide as he watched Jacob and Triss disappear around a building corner as they walked off.\n\nYou're sure?\n\nDamn fucking sure. I'm not saying it was him, but it sure as fuck smelled like him.\n\nThe portal Fiona took Damien and me through was his, according to him. Sky called it a verge? It said the verge was from before Black Blood's time, and that Black Blood had claimed it.\n\nThat one was a lot older, and stable. The new tears are the problem. They're the ones the azlu are going for.\n\nMaybe he just... investigated the tears before we did?\n\nMaybe. Or maybe the fucker's up to something. Talk with Azamel. She's still alive, right? Before the old bat croaks, see if she can piece something together.\n\nThat wasn't a bad idea.\n\nThink the Uratha have picked up on this? They can smell spirit stuff.\n\nProbably not. I couldn't smell this part of him until the mind meld.\n\nNodding, Jack quietened his mind, and slipped the necklace back on. The curse would have protested, but Jack did it quick, on reflex, fast enough the curse didn't know he was doing it until it was done. Thoughts, into the flame. Urges and raw desire, into the flame. And with the necklace on and telling his Beast to settle, Jack could think clearly once again. Just him and his thoughts, in the haven of his mind.\n\nAnd that's when he realized his phone had buzzed when he'd come back up from underground.\n\n\"Busy busy busy. I miss my old job,\" he lied, and checked his messages.\n\nThe first buzz was from Avery. She wanted him to go check out something in Devil's Corner. Ugh, long way from here.\n\nThe second buzz had been distinct, and only now that he could think, did he realize what the unique buzz indicated. Damien or Jessy had triggered their emergency app. Checking the phone proved it. Damien had sent out an alert.\n\n\"Shit. Shit shit. Where is Damien right now?\" He pulled up the Invictus GPS tracker, and couldn't find him, only his last known coordinates. The Grand Cathedral of Dolareido. That meant he was under it, in Maria's dome. \"The fuck? Why would he... fuuuuck.\" He sent Antoinette and Michael a quick message, and took off running straight for the Cathedral. It was nearby. He could be there in five minutes.\n\nBut if he guessed right, five minutes might not be enough.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHe threw open the Cathedral doors, and Mulder and Scully each flew into the building and up high, scouting. No one inside. He ran to the pulpit, up onto the stage, and beside the organ where the curved wall held a door at the corner. He ran down, almost falling over steps as he jumped down them four at a time, down and down, until he came to the tunnel of Maria's den. Mulder and Scully each took a shoulder once again, and he marched forward.\n\nThe gate was torn open. Didn't take much analysis to see it was done by hands and claws. Shit shit shit. Yelling echoed through the stone, screams, hollers, and visceral cracks and breaks. They were fighting.\n\nHe ran faster, balls of his shoes slamming into the smooth stone as he darted through one broken gate, then another, and another, each one torn open. The Uratha had come, and had zero intention of letting something like rules stop them from their hunt. God, if they killed Damien, he wasn't sure what he'd do. God, if Maria killed all of them, he wasn't sure what he'd do then either.\n\nHe came out of the tunnel, and into Maria's den. A huge dome, with the walls covered by history. Hanging drapes and curtains that looked like they belonged in Jack's mansion. Paintings, many obviously Catholic, decorated her walls. A huge piano. An actual coffin. Maria was old school, the sort of vampire people told stories about, stories of fear and reverence. She was the vampire people thought of when someone said Dracula, not Antoinette and the other dragons.\n\nAs Mulder and Scully resettled on his shoulders, Jack looked around, and gulped.\n\nAvery, or probably Avery, judging from the lighter color of her fur, held Maria up by the throat in the center of the huge room. The vampire's arms were gone, ripped off, and bits of bone stuck out from the loose sleeves of her ruined dress. She glared down at the werewolf, eyes full of ancient rage, but despite her legs being free underneath her, she made no attempts to kick the werewolf.\n\nMore werewolves, all the werewolves, stood around, each fully transformed into their big war forms, and each covered in blood. The place was a mess, with curtains ripped and one of the desks smashed. Their big foot claws had left a lot of huge gashes on the once pristine, smooth stone floor, and shards of metal and wood were everywhere.\n\nOne of the werewolves held a large man by the back of the collar. Dead? No, breathing, unconscious. Maria's ghoul, Matthias. A nasty gash sliced across his chest, exposing his muscular body underneath.\n\nAnd one of the werewolves, one Jack recognized intimately, one that had literally once licked him, stood on Damien, her massive weight and strength pinning his broken, battered body. She half turned to face Jack, and her visible eye widened as she recognized him. But Jack didn't look at her for long, eyes falling and staring hard at his friend on the floor.\n\nOne of his legs was gone. And, like Maria's, it hadn't been cut off cleanly by a sword or anything. And it hadn't been ripped off either. The pant leg, the flesh and bone, it was mangled and shredded.\n\nIt'd been bitten off. And Clara had clothes stuck to her snout.\n\nJack met her eyes, clenched his fist, and took a step forward. The pack, who'd already half turned to face him, all turned completely, and in unison. A lot of them had blood on them, and since vampire blood turned to ash in seconds, that was their own blood. A quick glance to the floor showed Damien's pistol, slide back and awaiting a new magazine, while his sword sat on the other side of the den, soaked in blood.\n\nThe wounds on the werewolves' bodies hadn't healed, not completely. Some of them audibly sizzled, as if they'd been burned by acid, and still were. At least seven of the werewolves had huge gashes on their bodies, but none of them had cuts deep enough to put any of them out of commission.\n\nHe took another step forward, and both Scully and Mulder let out announcing caws. Every single werewolf took a step back, including Clara, abandoning her position atop Damien to get herself closer to Avery, who stood the furthest back.\n\n\"Jack,\" Clara said. \"We--\"\n\n\"You know, I tried. Everyone in this damn city wants to kill each other, or at least jump to violence as their first step in negotiation. But I really fucking tried to help everyone get along. Everyone has their reasons for doing shit, for getting in each other's way, but I thought for sure, if people just talked to each other, everyone could just... live and let live.\"\n\nClara looked down. Even in werewolf form, it was easy to read the shame on her.\n\n\"Jack,\" Avery said, turning to face him, hand still wrapped around Maria's throat and holding her up at a distance beside her. \"Turn. Leave. This is our business. Our hunt. Go.\" As typical of transformed Uratha, her speech was broken, choppy, and harsh, almost like a bark.\n\nJack took another step forward, and both of his crows took the air, cawing and circling above, like vultures. And again, every werewolf, save Avery, took a step back.\n\n\"Jack,\" she continued, \"I'm warning you. Go.\"\n\nAnd with a hardening glare, he licked his fangs, and took off his necklace. \"No.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "paranormal romance",
        "vampires",
        "werewolves"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-13"
}