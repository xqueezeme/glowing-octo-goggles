{
    "title": "Vision Ch. 01",
    "pages": [
        "But then there are girls like me\n\nWho stand appalled by what we've seen\n\nWe know the truth about you\n\nNow you're the prince of all the magazines\n\nThat is a dangerous thing\n\nNow would they love you if they knew all things we know\n\nThose golden boys are a fraud don't believe their show\n\n-Res\n\nCHAPTER 1\n\nThe sound of an electronic lock engaging is loud, too loud to be from next door. I call out, but the door opens anyway. Housekeeping is eager today. I hastily manage to pull on my undies and a T-shirt. Not housekeeping.\n\n---\n\n\"You lost?\"\n\n\"This is room 408?\"\n\n\"Yes.\" \n\n\"Then no, I'm not lost.\" To the contrary, I quite like where I find myself in this instant.\n\nLooking at me coolly she blinks once. \"I've reserved, rented and am still using this room.\"\n\n\"I'm booked in this room too. They must have made a mistake\"\n\n\"Obviously.\"\n\nI'm staring, there's no help for it. There are so many contradictions. For starters there's the disconnect between the deep voice and sweet face. That and I am having a first time conversation with someone wearing panties and a batman t-shirt. Gilded to behold, from the crackling red hair to the golden toffee colored skin. God in his infinite wisdom got everything right: the skin, the curves, the pertness of her. Large wide-set eyes over a small nose, full round lips, small divoted chin, and the most flawless skin I think I've ever seen. Not sure yet if she's beautiful, but she's very pretty. Not sure if that hair color is for real but there's certainly a of it, arranged in a large and frizzy bun atop her head. Not shy, hasn't even reached for a robe. Calmly walking over to a chest of drawers she reaches in and pulls out a pair of jeans and slides them on before going over to the desk and picking up the phone.\n\n\"This is Ms. James in room 408, I have a gentleman here who says he's booked this room. He has a working key card. Yes, well clearly there's been an error. We'll be down momentarily.\"\n\nMy fellow American is quite brisk and professional sounding for someone sporting hot pink toes. Her voice is so husky and serious yet she speaks in such well-modulated tones I can't place the accent. It sounds northern but her pronunciation of the word 'clearly' throws me.\n\n\"Sorry for barging in.\"\n\n\"It's cool. We'll go down and make sure they get you sorted.\" She says confidently.\n\n\"You don't have to do that.\"\n\n\"No worries. I was just on my way out for a bite.\"\n\nSlipping on a black shirt she rolls up the sleeves before sitting down on a bed and pulling on socks and sneakers. From a leather messenger bag she pulls out her room key, passport, iPhone, Chap Stick and a credit card and places them in an inside the pocket of a leather jacket. Slicking on some chap stick and wrapping a scarf around her neck she zips the jacket opens the door and steps outside. An oddly expedient departure routine for a woman. A quick ride down and we're back in the busy lobby waiting our turn in line at the concierge desk.\n\n\"Sorry for the wait in queue. How may I help you?\"\n\n\"I'm booked in room 403 and this is Mr.?\"\n\n\"Wilde. With an 'e'.\"\n\nShe looks at me, blinking once. \"Mr. Wilde. Yes, we've been booked in the same room.\"\n\nThe desk person looks at us. \"You two are not together?\"\n\n\"We are not.\"\n\n\"But, I thought you were. I mean . . .\"\n\n\"We're not.\" Ms. James' eyebrow raises a fraction. \"You're merely having the rare, but sublime pleasure of hosting two Americans at the same time.\" She says imperiously.\n\nThe poor girl's skin turns several shades before settling into a sickly puce. She splutters, \"Unfortunately, we don't have any more rooms. There's a major event occurring and we are at capacity, as are most of the hotels in Knightsbridge. I can look for other accommodation in the city.\"\n\n\"No worries. I should be able to find something in Piccadilly or back at the airport. It's only a night.\" It's a damned inconvenience and I dread the prospect, and of course outside it has just started to pour.\n\n\"Perfect weather for a cock-up on your end isn't it?\" Ms. James says rather tartly.\n\n\"I do apologize; if you'll wait I can help you find accommodations and transportation.\" Margaret looks to be on the verge of tears.\n\nMs. James softens. \"Looks like you're fending for yourself here.\" She turns to me. \"If he's willing, Mr. Wilde and I should be fine sharing a room, there are two beds after all.\"\n\nThat's awfully trusting of her.\n\n\"Are you sure? It's really not a problem for me to try to find something else.\"\n\n\"It's raining cats and dogs. I may be out for most of the evening anyway. It's fine, really. You've got your room key and I've got dinner plans.\" Taking a guest umbrella she is quickly out the door, into a cab and gone.\n\nTrue to her word, she's out for the evening, gone all night in fact, quietly coming in the next morning as I'm packing my shaving kit. \n\n\"I appreciate it but I didn't mean to put you out last night.\"\n\n\"No problem at all, I got to catch up, see the kids, meet the new wife. It was a pretty good time.\" She's yawning as if she's not had enough sleep though.\n\n\"Friends in England; that must come in handy.\"\n\n\"In a pinch, it's not too shabby. You'd better move it if you're going to make the 10:15 home.\"\n\nI cock my head at her. \"How do you know when my flight is or that I'm going home for that matter?\"\n\n\"It's barely 7 am and you've already eaten, shaved and dressed. You're wearing jeans, t-shirt and posh trainers (mock-up of a British accent). Your accent especially right now is seriously southern, Louisiana I think, and so you'll likely be flying to a hub on the southeastern seaboard, Atlanta, Dulles, Charlotte perhaps. I've taken the same flight for years now. I'll be doing the same tomorrow morning.\"\n\nVery sharp.\n\n\"So Ms. James, what do you do?\"\n\nShe chuckles dryly. \"Whatever I want.\"\n\n\"I see, and do you like it? Whatever it is you do.\"\n\n\"It's not bad, pays the bills and I'm reasonably good at it.\"\n\nI like our exchange and the suddenly mischievous twinkle in her eye. Unfortunately, the room phone rings and sure enough it's the front desk and they've hailed a cab for me. Out of time and it was just getting interesting. I don't have an address, a first name, nothing.\n\n\"Well it was nice to meet you.\"\n\n\"You as well.\" She offers her hand to shake. \"Have a safe flight home.\"\n\nThank god he's gone - he was starting to smile in just the right way.\n\n__________________________________\n\nIt's too soon for my wakeup call. I asked not to be disturbed for the next 6 hours. It was lovely at Oscar & Sabine's place but I did not get enough. Their newborn has evidently not gotten the polite Briton memo just yet as he screamed most of the night. Maybe the knocking is coming from the next room over. Maybe room service is confused. Maybe the hotels on fire. Don't care, tired, want my rest. This bed is really good. The sheets are warm and crisp, yet soft and smooth. Mattress is a tad softer than I'm accustomed to. Soft, so soft I could sink right down to the floor. I'm drifting off again when the knocking starts up again. Alright then, I'm up and there's about to be a serious breach in English American relations. I put on the robe and stumble to the door and put my eye to the peephole. Him, again? It's 4:18 pm he's missed his flight. I don't think he's left anything. I open the door.\n\n\"Yeah?\" I sound annoyed but I can't help it. What the hell is he doing back here?\n\n\"Thank god you're still here.\"\n\n\"Did you leave something? Shouldn't you be stateside by now?\"\n\n\"Can't fly, no one can. They've suspended all air travel.\"\n\n\"Another attack?\" Suddenly wide-awake, I run over and turn on the television, madly fumbling through the news channels.\n\n\"No, no attack. But there's a volcanic ash cloud over most of Europe right now. They've grounded all planes.\"\n\n\"Volcanic ash? You're not serious?\"\n\nBut the news confirms as much. Checking my cell I've missed several calls. I call my sister. I glance over at Mr. Wilde he's standing looking shell-shocked and just about done in.\n\n\"Yeah, looks like I may be stuck here a bit longer than anticipated. Which sucks, I'm fucking exhausted and need my sleep. A visit to MM would be great, but with the planes down that'd be too long a train ride. But I'm good here. I need to rest anyway. Yeah, you may as well use my appointment. Shit, I really wanted a trim too. I'm tempted to just cut it all off. Yeah I know, I know. I would get it done here, but based on the average black woman walking the streets of London I think I'll pass. I know that, but it can't be helped. Do me a favor and have someone go over and sign for packages tomorrow and put out some meat for Zora and the gang. I know it's a pain, but I thought I'd be home in time. Alright, thanks love. Actually, that's Harry beeping in now, no I'm not clicking over, he'll keep. Where's my nephew? Yeah, what's he doing? Give him a kiss for me. Love you too, tell them I'm fine and will be home as soon as I can.\"\n\nFrowning at the phone she answers and takes it into the bathroom. \"Hey Harry.\" She sounds exasperated. \"Yeah? Well I'm stuck here for the duration and there's nothing I can do about it. I work alot out of the country, you know this.\" Deep sigh. \"It's a bad idea. Kind of like communism - looks good on paper, bad in practice. Echo? Well, I'm in the bathroom. The hotel is over-booked and I have a roommate. Do not go there right now. We'll see when I get back. Later Harry.\"\n\nOf course she has a boyfriend. I hear water running. She emerges a few minutes later patting her face with a hand towel.\n\n\"So, Mr. Wilde what are you doing back here exactly?\"\n\n\"Desperately hoping your generous offer from last night still stands. With planes grounded, there are no rooms anywhere, the airport hotels are full.\"\n\n--\n\nI realize he's in a jam but I'm really not too keen share my space. I couldn't take another sleepless night at Oscar and Sabine's. I size him up again. Not that I particularly go for white men, but damn if it weren't for the fact of him needing a shave and a haircut and that prominent bump in his nose I'd almost consider him vaguely handsome - tall, dark haired and cleft-chinned, square jawed with wide dramatic cheekbones and those with remarkably clear gray eyes (are they gray or green) gray behind horn-rimmed glasses. Exceptionally dark and heavy eyebrows. With his gracefully proud bearing, the ingrained politeness and the deep inflection of his voice he seems like a man misplaced in time, old fashioned doesn't cover it. And that slim body of his . . . He certainly fits in around these parts. It's hard to believe Brittania ruled most of the world at any point with a population of such slight citizens. If not for the accent I'd wonder if he was American at all. Poor man looks a little worked over right now though. I'm waiting for my finely tuned bullshit detector to go off but it doesn't. Okay be a decent adult, Lou, it won't kill you. Besides you can handle yourself.\n\n\"You snore?\"\n\n\"No ma'am.\" He smiles tiredly, flashing a dimple, there's that smile again. Dimples and glasses? Shit.\n\n\"Good, that'd be a deal breaker. Make yourself at home.\"\n\nHe sags with relief. I don't think he'll be a problem.\n\n____________________________________\n\n\"If you're hungry, I'm about to order room service, the burgers here are pretty good.\"\n\n\"Burgers, in England? Is that safe?\" He says.\n\nFlipping through the menu she scoffs lightly. \"Safe? Volcanic eruptions, terrorist threats. What is safe? A little mad cow disease is par for the course. Besides, if this is the end, I can think of few things more comforting than beer in one hand and a burger in the other. Though I happen to know for a fact that the kitchen beef downstairs is grass-fed. But if you're skeptical, an option might be the halibut and risotto, pretty good if you like fish.\"\n\nHe looks at her a long moment. How is she not freaked out right now?\n\n\"I know how odd it is and I really appreciate your letting me stay but you're awfully blas\u00e9 about it, if you don't mind my saying.\"\n\n\"Maybe I know Kung-Fu.\" She says with a sphinx like smile. Either she's a wise-ass or she's in earnest, perhaps a bit of both. She's got a sly look about her.\n\n\"I think I'll head down to the bar for a while and see what the gossip is on this predicament.\"\n\n\"Ok, Cool. Here's the extra room key.\" She hands it to me. \"I'm going to hang out here and relax a bit, get a bite to eat, maybe finish my nap.\" She looks at me a little pointedly.\n\n\"Sorry about that, didn't mean to intrude or startle you.\"\n\nShe shrugs and shakes her head. \"Ignore me, I'm a bear when woken. Besides we Americans have to stick together.\"\n\nQuirky little thing. \"Well I'll clear out for a bit and see you later.\"\n\nShe nods and heads back towards the bed.\n\n________________________\n\nI've been in the bar a good three hours and there's still no good news on when this might blow over, so I head back to the room.\n\nThe echo of the blow dryer is loud. The bathroom door is ajar. I instinctively glance in as I walk by. I'm so jolted by what I see my chest hurts. I stop to look. There she is naked, bent over, almost balanced on her toes as she struggles to blow dry her hair, an awkward but beautiful sight, silky skin of clearest golden brown tightly stretched over small muscles, peach shaped ass. Perfection. The blow dryer is so hot there's smoke in the air. Is she burning her hair or what? She's going to start a fire. At this angle and with her legs just apart, I can almost see her little . . . She stands suddenly throwing back her hair. I quickly duck back and head towards my side of the room before deliberately turning up the volume on the television. Shit. All these months of living like a monk have just caught up with me in the form of a painful hard-on and she's naked in the bathroom. I'm scared to move, the slightest friction could cause an accident. I try thinking of saints, politics, anything to get this to subside. The dryer stops and a few seconds later the door clicks shut. I cover myself with a pillow and my laptop, lean back and earnestly attempt to focus on work. I get into responding to emails after a few minutes and by the time she emerges in dark blue sweats and a University t-shirt, I'm feeling like myself again. A second glance though reveals she's not wearing a bra. Damn it, so much for calm.\n\nPointing at the television with her chin, she asks, \"You watching that?\"\n\nThere's a BBC news segment on. \"Not really, just getting some work done.\"\n\n\"March madness, I've got some bets going and the spread is pretty good.\"\n\n\"You like basketball?\"\n\n\"Yeah, especially college ball, it's fast paced and the players are still fairly sweet, it'll all change if they start bringing serious money into the equation like they're thinking of doing.\"\n\nHooking a laptop up to the television she finds the network website and starts streaming the live game. Why didn't I think of that? Oh yeah, I'm still thinking about her naked flesh. Once the game is going she flops down on her bed, kicks back and orders room service. She puts her hand over the mouthpiece and looks at me. \"Beer & pizza?\"\n\n\"Sure.\"\n\nShe places the order and asks for gelato for dessert.\n\n\"I have horrible eating habits.\"\n\nWell it seems to be hitting her in the right places. Popping the gelato into the freezer section of the small fridge, she plates two slices and pours her beer into a chilled glass.\n\n\"Help yourself.\" She gestures at the cart. The creamy mellow beer complements the pizza perfectly. She sends out a text message. Switching off the laptop I watch with her and we're enjoying it and have just started to talk a little when her phone starts to vibrate.\n\n\"Don't wanna hear it, have my money ready when I see you or I'll put you back on that street corner I found you on and make you earn it the hard way. And don't nickel and dime me either, I expect to be paid in full. You mess with the bull, you get the horns.\" Tucking her middle fingers under her thumb she makes a funny little gesture and gives a little laugh. \"Yeah? Well that is surely unfortunate so torture who you have to. But I want my $200 Riley, and not a penny less and if you see Matt tell him not to make me track him down. Verbal agreements are legally binding and I won't hesitate to sue and you know it. Shit $200 is enough for small claims court. You people always manage to disappear when it's time to pay up. Don't make me set your wives on you two. Uh huh, yeah that's what I thought.\"\n\nShe gets off the phone grinning to beat the band.\n\n\"You got paid huh?\"\n\n\"I did.\" She nods a little and then starts to yawn.\n\n\"I'm turning in for the night, I don't even know what time I'm on anymore with all the travel.\"\n\nI offer to switch off the television.\n\n\"Watch as long you like, doesn't bother me.\"\n\nShe gets under the blankets and after some fussing under the covers, yawns again, turns to her side and is immediately asleep. Pretty and entirely too trusting. I'd be upset too if she were mine and stuck somewhere far away. I'm starting to feel for this Harry. She's pretty, drinks beer watches ball and talks smack. If she were mine I don't think I'd ever let her leave the house. But she's not mine, she's taken. I hope we're able to fly soon.\n\n-----\n\n\"Yeah?\" Muffled talking from under the covers. \"Hey Harry? What time is it? You're waking me up to harass me about coming home? What the fuck am I supposed to do, sprout wings? A boat?! Are you high? I'm not judging I just want some of whatever it is you're smoking if you think I'm taking the QE2 to New York, besides they retired that ship. I'm not taking that either. I don't do boats and you bloody well know it. I don't really give a good goddamn if you don't like my using English vernacular. You woke me up! I'll curse all the fuck I want. What is so god-awful important it can't wait? Is anyone in jail or the hospital? Is my house on fire? Well then there's nothing and I mean nothing that can't wait. No, I don't want to talk now. Look, shoot me an email because I am about to switch off the phone and go back to sleep.\"\n\nAs warned, she's a vicious when awakened. She throws back the covers and sits up dazedly, sleep creases on her cheek, hair half in and half out of her pony tail holder, strands and cowlicks all over the place, an adorable mess.\n\n\"Sorry,\" she grunts before standing and going into the bathroom. There's a flush and the sink runs for a minute or so. Hell, now I have to piss. She comes back moving quickly; flash of round bottom in skimpy light blue panties as she gets back into bed. Delicious.\n\nI go in; looks like she's brushed her teeth and possibly drug a rag across her face. I do the same. She's sitting up checking her texts when I come out.\n\nHer phone vibrates. \"Hey Lenny, what's up?\" She listens for a long time and sounds a little perturbed when she finally responds. \"Yeah? Well don't you worry little brother. I'll handle that as soon as I see him. I'm good. I'll see you when I get home.\" Throwing back the covers again she gets up and quickly puts on socks and sneakers, having replaced her sweat pants while I was in the john. After brushing her hair she hits the mini bar for a protein bar, she munches thoughtfully, quietly watching the news for the status of the eruption.\n\n\"Volcanic eruption, talk about freakish.\" She sighs. \"You'd think the winds would have blown it away by now but I guess it's pretty serious. Looks like we're here for the duration. I'm gonna hit the gym.\"\n\nShe takes her phone and a room-key card and heads out.\n\nThat's not a bad idea. When I get there she's nowhere to found. I go into the weight room and stretch before starting and happen to spy her off to the side, phone to her ear, her face hard and silent as she listens intently. I can't make out the conversation but she ends it abruptly. She comes in and does 10 minutes of stretching, 15 minutes of weight training followed by an 19 minute, three mile run on the treadmill, impressive. Mouth set, ear buds in, in her own little world. Oblivious to me checking her out. She's chatting with a trainer as I leave having decided to finish with a swim in the Olympic sized pool. What the hell else am I going to do with my day? I can't concentrate on coding right now. I finish my laps and hop out and borrow a robe for the trip back upstairs. Meeting in the lobby she gives me a small friendly smile.",
        "\"You've been for a dip.\" She nods at my robe.\n\n\"It was either that or squash and I'm not much for racket ball. It'd be too much to hope for a basketball court here.\n\n\"I know what you mean. I hate the treadmill, makes me feel like a hamster. But running outside has been advised against just now because of air quality. I may have to risk it though. I've got serious cabin fever.\"\n\nShe quickly disappears into the bathroom. The shower runs for about 20 minutes or so, 7 minutes after that she comes out wearing a robe, hair slicked back in a low braided bun. She goes to the drawer and takes out a few items and stands indecisively, clearly waiting for me to leave the room. Grabbing my shaving kit and a few things I head into the bathroom. Smells nice in here. I turn up the heat lamp and fan to drive out the humidity. I take care of myself quickly stroking one out in the shower, I'm standing naked in the same spot she was just standing naked and wet, it can't be helped. I shave as carefully and slowly as I can. This is a special kind of hell. Can't go outside, can't get home, can't find another hotel, no empty rooms anywhere, I've checked repeatedly. I'm about as close to my apocalyptic event/deserted island last man last woman fantasy as I can possibly get and of course I'm stuck in a room with a beautiful woman I can't have. She's on her bed quietly watching a movie on her laptop, lying on her stomach, little butt in the air. God help me.\n\n\"Did you want to watch that on the big screen?\"\n\n\"No, it's your turn, help yourself.\" She says equably.\n\nNews on when this situation might possibly resolve itself looks bleak. Rolling over she sits up and glances over and sighs heavily and picks up the room service menu and flips through.\n\n\"We're still stuck. I heard that some people are flying east to go west and that might be an option if this continues for much longer.\"\n\n\"Sounds expensive.\"\n\n\"Maybe,\" she says staring intently at a menu. \"But it might be cheaper than staying here for god knows how long. Though I must say I could easily get used to just eating and sleeping.\"\n\nPicking up the phone she quickly rattles off her order and hangs up. \"Shit, I'm sorry. Did you want lunch?\"\n\nI chuckle at her. \"You're forgiven. I noticed you didn't have much for breakfast.\"\n\nExamining the menu I pick up the phone and place my order. I take out my laptop and return some emails. I can't wait to meet this arrogant bastard lawyer I have to work with.\n\nThere's a knock at the door announcing the arrival of lunch. She scoots off the bed quickly and answers the door. Scanning the bill as the waiter sets up the table she digs out some pound notes and pays.\n\n\"You don't have to do that.\"\n\n\"Force of habit, it's cool. Besides, I've got per diem.\"\n\n\"Next meals' on me.\" I say.\n\nTucking into her ravioli, she looks over at my plate. \"I have food envy. Is that good?\"\n\n\"It is. You were right, they do seafood well here.\" Surprisingly, I am enjoying my meal. It can be hard to get good food on the road.\n\nShe gestures with her chin at my plate. \"What is it?\"\n\n\"Wild turbot with some kind of spicy sausage.\" She seems very interested. \"Want some?\"\n\n\"No, thank you.\"\n\n\"I'm sharing your room, it's the least I can do.\"\n\nShe looks tempted. \"Are you sure?\"\n\n\"Help yourself.\" I nudge the plate her way.\n\nShe smiles. \"You may come to regret this; I have a serious appetite.\"\n\n\"I can always order more. Have some.\"\n\nBiting her lip, she quickly reaches across with her fork, spears a bit of fish, sausage and artichoke plops it on her plate and cuts it into more manageable portions before eating it. She closes her eyes and sighs deeply with a little moan at the end. A woman openly enjoying food; It was worth it just to see and hear that. What other sounds can I get her to make?\n\n\"Good?\"\n\n\"Very.\"\n\n\"Help yourself if you'd like some more.\"\n\n\"No, thank you.\" She says firmly. But having ordered Fritto Misto, I gently ply her with bites of that as well. I love a big lunch; she seems more of a big dinner person. She offers me some of her cheese plate as she tucks into her soup and salad. Eating quickly and intently, she finishes before me and is sitting back daintily dabbing at her mouth with her napkin when she burps loudly.\n\n\"Excuse me!\" She looks embarrassed.\n\nI can't help but laugh. \"Some cultures consider that the ultimate compliment.\"\n\n\"My brother calls me 'greedy smurf' which is evidently true as I've eaten all my food and possibly a third of yours, sorry.\" She looks slightly ashamed.\n\n\"Don't apologize. Besides we're not done, I have dessert. Chocolate, lemon something.\"\n\nShe groans. \"Dessert, in the middle of the day? You are bad.\"\n\nWith a flourish I whip off the cover.\n\nHer eyes widen and her nostrils flare the tiniest bit. \"Gianduiotto.\" The way her mouth wraps and puckers around that word is enough to get something started.\n\nHer brow arches as she looks at the chocolate and picks up the dessert fork and looks at me expectantly. \"Well?\" She says.\n\n\"Help yourself.\" I'm waiting, eager to see her response.\n\n\"I am not eating this by myself.\"\n\nWe dig in. I wait a beat, watching her eyes roll back in her head and close as she hums with delight, hmmm . . . more sounds.\n\n\"Damn, that is positively sublime.\" She pauses and looks at me. \"Aren't you having any?\"\n\n\"Honestly? I think I'd rather watch you.\"\n\nPutting down her fork, she crosses her arms and looks at me sternly. \"I do believe we had an agreement sir.\"\n\n\"Yes, ma'am.\" I eat the bite on my fork, it is very good, especially with the coffee. She resumes eating.\n\n\"I'm taking a walk to get a few basic things. Thinking I'd be home by now, I sent most of my things on ahead of me.\" She chuckles. \"At least I saved the clothes even if I couldn't save myself.\"\n\n\"The hotel does laundry and dry cleaning you know.\"\n\n\"True, but I need a walk. I'm going crazy in here. Aren't you? The concierge said it's not bad outside, just typically overcast, no particulates in the air at ground level.\"\n\nLunch and a walk with a pretty girl? It's not exactly rocket science. A walk does sound good. We grab our jackets and push the cart into the hallway. Once outside, we both breathe a sigh of release.\n\n\"It's like escaping a luxurious prison isn't it?\"\n\nIt is, she agrees. A park-view from the hotel is not the same as being outside in it.\n\nStrolling in companionable silence, we take in the early muted hues of springtime England. Palest green and fresh here, reminiscent of Virginia the way it's laid out.\n\nThere's attitude in her walk - a rather blunt, swaggering, inflated physicality - in general, she registers as being taller than she is - an expressive counterpoint to her soft face.\n\nShe rubs her hands together and blows into them. It's chillier than I'd reckoned. Picking up the pace she walks quickly out of the park and into the retail district. A quick dash across a street and we're inside. Consulting the store directory she goes to the elevator.\n\n\"I'll tag along if you don't mind, looking to bring back something for my mom.\" I say.\n\n\"Sure, it's cool.\"\n\nBrowsing intently she selects several items all sweaters. Not a bad idea, it does get cold in Virginia. It's chilly there even now. I hold up an oatmeal colored sweater. \"Think she might like this?\"\n\n\"I think so. I like it.\" She lightly rubs the material against the inside of her wrist and against her neck and looks at the inside tag. \"Alpaca and cashmere, nice.\" Picking up one in gray, she adds it to the rest folded over her arm. The sweater I've picked out is 155 pounds and the exchange rate is ugly today. I can easily afford it, but I can hear my father's voice, in my head. 'Just because you can do a thing, doesn't necessarily mean you should.'\n\nWandering towards the jeans she doesn't seem concerned about price. There's a large silky looking scarf thrown across her arm that looks nice as well. It'd be a good mother's day gift.\n\n\"Where'd you find that?\"\n\n\"With the sweaters, someone discarded it, guess they changed their mind but I quite like it. These are on the first floor though across from haberdashery.\"\n\n\"I'll meet you downstairs.\"\n\n\"Yeah, sure.\" She says distractedly.\n\nThirty-two minutes later I'm wandering towards the front of the store when she walks up beside me.\n\n\"You ready?\" she asks.\n\n\"Yeah, you?\"\n\n\"Yeah.\"\n\nWe head out and back towards the hotel. From the bag, she pulls out her new scarf and snaps the tags off with her incisors before wrapping it around her neck several times and snuggling down into it. We walk slowly back through the park. I keep glancing over but she's quietly lost in thought. I'm finding her more distracting by the minute. I'm just about to step off the curb when I'm sharply pulled back as a large red bus whizzes by. She lets go of my jacket. I catch my breath.\n\nShe looks at me. \"Sleepwalking?\"\n\nI laugh nervously. \"I think so.\"\n\n\"Everyone here crosses with the light. The pedestrians actually wait - oncoming traffic or not, to be given the right of way before walking, it's completely bizarre, watch.\" We stand back and observe and sure enough even without traffic they wait.\n\n\"Dinner is definitely on me tonight.\"\n\nShe grimaces and winces softly. \"You sure about that? You've seen me eat.\"\n\n\"Well if you'd stop saving me at every turn I wouldn't feel compelled to feed you.\"\n\nShe shrugs easily. \"Alright, I tried giving you an out.\"\n\nWe continue to walk slowly back to the hotel, she's making astute observations about the architecture. Is she an architect? I still don't know what she does. I don't even know her first name.\n\nWe stop to watch some street performers, throwing a few pound notes into their case before crossing the street and going back upstairs.\n\n\"What were you watching earlier?\" I ask.\n\nShe names a popular sci-fi fantasy movie. I'm only getting around to seeing it now. It's pretty good, though I need to watch it again I think.\n\n\"I've seen it. It's good. So what camp are you in? Is he awake or still in the dream?\"\n\n\"He's clearly awake.\"\n\n\"You're wrong.\" Her matter of fact way makes me laugh. Looking at me seriously for a beat she breaks into soft laughter as well. We have a little back and forth with facts and impressions. Her argument is so convincing that by the time we reach the room I've started to doubt myself.\n\n\"Come, I'll prove it to you. We can watch it again. We've got time before dinner.\"\n\nShe calls down for a large bowl of buttered popcorn. I can't help but look at her in mild astonishment. She shrugs. \"What? As expensive as this place is, they're lucky I don't request it be dusted with gold.\n\nHigh maintenance. The popcorn arrives and she places the bowl on the nightstand between the beds.\n\n\"Prepare to embrace wrongness.\"\n\nI start the movie on the large flat screen. It's been interesting looking at the movie and watching her at the same time. As it comes to the very end I begin to see her point.\n\n\"Based on the evidence presented, you might be right. I see the wobbling but I don't see the top actually stop indicating conscious reality. Maybe we're both right.\"\n\nThat's as much of a concession as she's getting. If anything the new information leaves me more uncertain than before.\n\n\"Wouldn't the top just spin smoothly on without wobbling or slowing. And if the top is wobbling and slowing, isn't that, based on the movie's parameters, indicative of consciousness or rather the cusp of consciousness? No, the top doesn't stop, but there is considerable wobbling and slowing which is reasonable doubt. At best I'm willing to call it a deliberate mind-fuck but I don't accept that we're both right.\"\n\nI take a long look at her. \"You're a lawyer, aren't you?\"\n\nThere's that little almost smile again. \"We should get ready to go down to dinner,\" she says. I put on my jacket and I'm done. Before the gym I managed to get a haircut and a shave and she's been sneaking glances ever since. Hell, now she's flat out looking at me, gawking. Note to self, mom's right about the haircuts.\n\n\"You look fine, but I should probably change. I'll be ready in 15.\"\n\nRooting through the shopping bags, she selects a few items. Fifteen minutes? Yeah right. I hear the shower. I may as well find something to read or watch on TV. 12 minutes later however and she's out and looking casually fine in a soft sweater, skirt and heels, bare legs, soft makeup, diamond studs, simple and very pretty.\n\nDinner is long and interesting. We eat, drink and talk easily and endlessly about everything - from food to politics to soccer. It goes well. She's fun with a wonderfully dark sense of humor. I'm telling my best jokes just to see her smile and hear that saucy laugh of hers: dry and dirty. I make an effort to find out more about her but she proves evasive, refusing to go into specifics and gently steering the conversation away from any personal information I might volunteer. Not rude about it, but very adept at the dodge. I'm certain she's a business professional of some sort and damned good at it whatever it is she does. Lack of pertinent details aside though she's the most interesting woman I've met in a while. This is as nice a date as I've had in years, easy, comfortable. Even heading back to the room it doesn't get end-of-night weird.\n\nWe're standing outside the room and she's trying to get the keycard to work. There's a couple coming down the narrow hallway with a lot of shopping bags. Intent on getting the room key to work she's not noticed. I place my hand on her back to move her forward a bit, her sweater has risen and there's the barest bit of skin, before I even realize it I've stroked the small of her back, so incredibly soft. She immediately freezes. I'm probably scaring her but I just couldn't not touch her. I know I've lingered too long when she turns to look at me with large and gravely serious eyes. I back up with both hands in the air. \"Didn't mean any harm.\"\n\n\"It's okay.\" Is she blushing? She finally gets the key to work.\n\nLocking the door, she leans against it, looking at me searchingly before giving a low laugh that makes me uneasy.\n\n\"What's funny?\"\n\nGrabbing me determinedly, she shoves me against a wall and kisses me. Really kisses me, deep, luscious and a little rough at first but ending tenderly. She finally backs away looking surprised.\n\nWe look at each other and laugh nervously.\n\n\"Damn!\"\n\n\"Shit. Now, I've done it.\" She says backing away and shaking her head looking embarrassed.\n\n\"Yeah, you have. Come back here.\" Taking her hands, I start out lightly trying to get a feel for the taste and texture of her but she deepens the kiss and runs the tip of her tongue down the center of the roof of my mouth. Oh man can she kiss. Pushing my jacket off and squeezing my shoulders with her palms she sighs and pulls me towards her bed where we fall down with a laugh.\n\nThe kissing goes on and on and after three or four wild rolls across the bed all the clothes are off and the laughter stops.\n\nI lean back for a better view of him. I can't help but laugh, impossible and completely out of the question.\n\n\"That's a 'Hell No' right there.\"\n\nI try to get off the bed and he grabs me with a laugh and kisses me again, his hands slowly going everywhere. What the hell is he doing to my nipples and neck? God help me.\n\nI've never been that into penetration. But the longer I look the more conflicted I feel. Though overly large, it's actually rather pretty. Can a penis be pretty? The head is very pronounced and tender mauvish pink. I don't know whether to lock myself in the bathroom or jump on and ride until I drop. I've been looking at it for quite a while and he's been as still as a statue, watching me, patiently waiting.\n\n\"As nice as that is, I'm not changing my mind.\"\n\n\"If babies can get out, I can get in.\"\n\nBabies? That's a whole other issue. Sigh. \n\n\"Not to mention, did I say you could have it, or that you were even going to get it? Kinda presumptuous of you.\" He says mischievously.\n\nPlease. \"Presumptuous? We're naked on a bed.\"\n\n\"I've never slept with a complete stranger and don't mean to. Dax Wilde, pleased to meet you.\" He kisses the back of my hand and looks at me expectantly. Old fashioned, courtly even, and incredibly not the least bit smarmy or insincere. Coupled with the look he's giving me, it's disarming. He's smiling but looks serious all the same. That name of his is interesting and sounds familiar. Do I know him? Hell, I sound like Lili. His surname is that of a favorite author, my mind must be doing some weird associative thing.\n\n\"Ms. James.\"\n\n\"Do you have a first name?\"\n\n\"Yes.\"\n\nHe smiles and nods, bending to kiss me anyway. I turn my head and feel him smile against my neck as his lips graze there. His hands move over me languidly with infuriating slowness.\n\n\"Relax.\"\n\n\"Make me?\"\n\nHe stops mid caress and laughs, flash of white teeth and dimple, eyes crinkling. Much better than that serious look of his.\n\nI'm just sayin'. It doesn't have to be perfect or even good for that matter. I can get myself off later if need be. I don't think I'll have to though. I want him so badly my mouth is filled with saliva.\n\n\"I want you relaxed.\"\n\n\"Then get down there and persuade me.\"\n\nHis eyes widen in amazed amusement before narrowing. \"You are a hot-blooded little thing.\" He bounds off the bed, his body is slim, hard and perfect, those legs of his, damn. In two strides he's at the fridge fishing out a container. My caramel gelato. I like where this is headed. He's saying something to me and I'm so distracted just looking at him that I barely hear a word. His beard grows fast. You'd think all that fuzz would get in the way but his deliberate way of speaking coupled with his slight accent draw attention to his mouth - the way he talks, not just what he says. In my minds eye I can see myself dragging my tongue across his stubble before biting his chin like a strawberry and it's sending me around the bend.\n\n\"Sounds messy.\"\n\n\"I won't spill a drop.\"\n\n\"I hope not, for your sake. I am not above pulling rank and making you sleep in the wet spot.\"\n\nSitting the gelato on the nightstand, he quickly turns, picks me up and lightly tosses me across onto his bed. I land with a bounce and a squeal. That was unexpected, but since when do I squeal? He's damned strong to be so slim. He's fun so far though. I'm still laughing as he stretches out beside me.\n\n\"You bounce well.\"\n\n\"Thank You.\"\n\n\"You're welcome.\"\n\nResting lightly on top of me he's locked eyes with me and is watching me so intently I couldn't look away even if I wanted to. I thought his eyes were gray, but up close I'm not at all sure. Are they bluish gray, green? Not quite. They're mesmerizing. I try closing my eyes to break the spell. He reaches for the gelato and feeds me some, it's very good, ribbons of salted caramel running through the buttery custard cream mmm. . .\n\nHe takes a spoonful himself. \"Tasty, it needs something though.\" Moving down the bed he parts my thighs and places a small spoonful on my bare flesh quickly lapping it up with the lightest of touches. Goodness. Loading the gelato onto his tongue he runs it along the grooves of me. Slippery cold followed by the hot tip of his avidly searching tongue. I want him to come from down there. His touch though exploratory is quite sure. But while he's done better than most I certainly don't want to ruin it by having to give him the shoulder tap asking him to come back top-side after a fruitless search. No sooner do I think this when I jump about a foot backwards as he finds it. Setting aside the gelato he goes back to lightly lick and blow on the tenderest part of me. But instead of blowing he's warming it with his breath before licking and now he's started humming which is distracting until I feel his mouth vibrate against me.\n\nConvulsively clutching the back of his head I come for what feels like a protracted bit of time. My heartbeat has relocated itself between my legs. Feeling satisfied but not quite sated, I reach for him only to have him hold my hands above my head and gently say no.",
        "\"I don't have condoms.\"\n\n\"You're married or as good as aren't you? Figures.\" Shit, and I was starting to like him too. Like him? What the hell is wrong with me? I don't even know the guy.\n\n\"No, I'm not married, no to all of that. I was here on business, not to get lucky.\"\n\n\"That's all well and good but what grown man doesn't come prepared with at least one condom? I don't get it. I'll ring room service, surely this happens all the time.\"\n\n---\n\nShe reaches for the room phone. Incredible! I stay her hand.\n\n\"After insisting that we aren't here together you'd scandalize us both by calling down for condoms?\"\n\nShe scoffs. \"I don't give a damn what people think. Fact is, I don't know you from Adam. For all I know I should dip you in bleach before using you.\"\n\n\"Likewise.\" I say looking at her. She's not offended though and I can't help but smile.\n\n\"I can vouch for myself.\" She stands and digs out her wallet and shows me a little card with a rather long number, her name and HIV and STD status checked negative and a recent date.\n\n\"I can go you one better.\" I reach in my workbag, locate my wallet and pull the same card out. My card's boxes are marked negative with a recent date as well. She looks at me with a small frown.\n\n\"Look at that, already something in common.\"\n\n\"This is completely weird.\" She chuckles in amazement. \n\n\"Or completely right.\"\n\nWe're standing naked looking at each other.\n\n\"So your name is Lou?\" He smiles at me and frowns a little.\n\n-----\n\nShit. Now he's got my name. Brilliant Lou! Your crotch will be the death of you. A mere three days with an intelligent, nice smelling man and you're ready to impale yourself on him. You don't even like white men. Well not beyond the odd Hollywood crush. Definitely not enough to ever date one, let alone . . . But the intense way he watches me is just about overwhelming. This could be trouble.\n\n\"The fun doesn't have to stop.\"\n\nDamn he's got a voice on him. It's been so long I could come just having him whisper in my ear. He's watching me with those eyes and the heat starts in the arches of my feet and works its way up my entire body, seeming to settle in my cheeks, neck and ears. Looking again, I'm not sure. It looks porn star huge. Maybe it is porn star big, everything always looks bigger onscreen right? That could maybe hurt. I know stereotypes are outdated and ridiculous - I mean he's a tall one so it stands to reason, he'd be somewhat proportional, but I was not expecting that.\n\n\"You'll forgive me if I'm not yet ready to unhinge my jaw.\"\n\nI mean it too. I don't care how pretty it is I'm not ready for all that down my throat. How is he even still hard? I've just told him no blowjob and clean bill of health aside, there's the matter of birth control. My mental math says I'm ovulating which makes me extra horny. There is no way I'm getting knocked up on a business trip. Maybe it just looks bigger because it's white? Stupid stupid thought Lou. I sure as hell am not letting him stick that in the other end of me so I don't know what else I can offer besides a nice hand job. I am so out of practice.\n\n\"We can still have a good time. There doesn't have to be penetration of any kind. Unless you ask me to, and then well . . . maybe we'll see.\"\n\nSounds dangerous. If he wanted to rape me he's had every opportunity to do so, he could have slipped me something and had his way with me or bound me to the bed while I slept barely three feet away. I kinda like the thought of that last bit. But he's been a perfect gentleman. There's a bold gleam in his eye just now though and I do love a challenge. Let's see where this goes.\n\n\"A good time with no penetration?\"\n\n\"That's the offer.\"\n\n\"Hmmm, okay, lets see.\"\n\nHe pulls me onto his lap and leans to kiss me.\n\n\"No.\"\n\n\"No?\"\n\n\"No more kissing, it's too much. I'll just admit it.\"\n\nKissing him is like touching an electric current. I could get lost in that and I can't deal with that shit right now. The way he's staring at me is bad enough.\n\n\"Besides, it technically counts as penetration.\"\n\nHe looks at me incredulously. \"Have it your way.\" He laughs and rolls me back onto the bed.\n\n---\n\nI can't touch and look at her enough. Voluptuous, but small, such a little mite of a thing it almost feels illicit. I could have sworn she was a tad taller maybe it was the bun, because under hand she's petite. Luminous creamy Toffee skin, soft neck, which I kiss watching with satisfaction as her nipples harden and her eyes close. Damned near came just skimming those little panties off her. She's waxed, which is neither here nor there for me. I like women with and without fur. But looking at the smooth plump bareness of it I am fascinated; a beauty mark just left of paradise. Deliciously warm succulent flesh. Ravishing. And very responsive, once the gears of her stubborn brain stop turning. She'll be fun to handle. Laying her down and opening her legs I begin lightly stroking her. Man she's wet. I stop and rest against her as I tend to her breasts, bustier than I thought, full breasts with small nipples, pebbled like tiny little blackberries sweet. Hmmm . . . I'm slowly trying to get the lay of the land but she's impatiently rubbing against me. I can feel her fingernails lightly scratching through the hair on back of my thighs as she makes a sound somewhere between a sigh and humming. Touching me everywhere. She's taking my hand and trying to bring my fingers inside her. I gently pull away.\n\n\"No.\"\n\n\"No?\"\n\n\"Fine, I'll do it myself.\" She looks at me and reaches down to touch herself.\n\nI smack her little hand. \"No, ma'am. You'll do no such thing, your pleasure is my responsibility.\"\n\nA series of soft exasperated noises come from her as she looks at me imploringly and frowns.\n\n\"No penetration. Remember?\" I kiss her nose. \"Unless you're asking?\" I can see her digging in her heels, actually gritting her teeth. Obstinate. Leaving her to work it out, I resume kissing her tender warm neck, hot cheeks, delicate shell-like ear and as I tweak her nipple and arrive at a spot behind her left ear she gasps and goes rigid, shuddering against me. Christ! Pulling back I look at her. Her eyes are downcast and there's a bare trace of a smile. Lifting her eyes to mine she looks defiantly pleased.\n\n\"I see.\" Is all I can think to say. Watching me she kisses my dimple before lightly pressing her lips to mine.\n\n\"You're still hard.\" Looking into my eyes she reaches down and wraps her small soft hand around me, the stroke is slow and quite firm, her grip is perfect. \"Come on. You know you want to.\"\n\n\"Evil little girl.\" She licks my lips, sucking the bottom one into her mouth while staring at me intently and releasing it with a soft smack. \"Come.\" She says before kissing me again.\n\nI do, making a glorious white mess of her round brown thighs. I take her into the bathroom with me. She watches quietly as I wipe us down and gives a small shake of her head, which could mean any number of things. Pert and perky all over, the breasts, the ass, the mouth, all of it so tantalizingly close. Wrapping a robe around herself she gives me a quick look and exits the bath making a beeline for the mini-bar. Scoring a jar of macadamia nuts and a Swiss chocolate bar she climbs on her own bed and switches on the television, scrolling through the channels. She knocks back a handful of nuts chewing ravenously. I sit next to her. She gives me an annoyed sidelong glance and bites into the chocolate.\n\n\"Nuts and chocolate? Freud would have a field day with you.\"\n\nLooking at me in disbelief she laughs once. I put her snacks to the side and pull at the belt on her robe. \"We're not done.\"\n\nShe gives me a slow-eyed blink. \"There's more?\"\n\n\"There is. We're just getting started.\"\n\nThe rest of the night is a battle of wills. She does relent and let me kiss her. I'm desperate to fuck her. The petting, stroking and kissing are alternately exhilarating and exhausting. I drift off between one of our sessions and wake to find her frantically rubbing herself against my knee of all places.\n\n\"Flag on that play: unauthorized use of knee as masturbatory device, 10 yards.\" She laughs softly but doesn't stop until she's come.\n\nShe slowly catches her breath and stares at me intently. \"Goddammit that's it!\" She rolls out of bed pulls on her jeans and a top and throws a pair of my jeans at me. Looking angry all of a sudden.\n\nWhat's wrong? Is she kicking me out?\n\n\"We're going for condoms, and I mean right now.\" She pulls on her shoes and throws her hair into a hasty pony-tail.\n\n\"Is this your way of asking for penetration?\"\n\nShe grits her teeth. \"Yes, dammit you win and I don't care. Hurry up and get dressed or wait here and take your chances that I won't use the condoms on the first warm blooded man I come across.\" She looks serious.\n\nI scramble into my clothes and we go out. Unfortunately the only all night pharmacy we come across is out of magnum condoms. And I refuse to let her enquire at the front desk. The woman has no shame I swear. She looks frustrated to the point of tears.\n\nShe grumbles all the way back to the room. \"First white man I decide to sleep with is hung like Sea Biscuit and there's not a condom for a million miles. Brilliant.\"\n\n\"I promise to find proper condoms tomorrow, in the meantime, I think I can scratch that little itch of yours.\" She kicks her shoes across the room and falls back on the bed with a huff. Unbuttoning her jeans I pull them slowly down her legs, unveiling that marvelous skin. I'm starting to think she should always be naked. She impatiently sits up and takes off her top before reaching for my jeans.\n\n\"No ma'am, it's all about you right now. Now lay back down there. I can do what I need to with my pants on. If I take my pants off right now it's all over condom or not.\"\n\nShe lies back with a huff and a pout. I can't wait until we know each other well enough for me to give her a good spanking. I quickly lose my train of thought though as her nails are lightly scratching at my scalp as she throws herself into kissing me. She falters as I rub her wet little slit and gently slide a finger in. She moans, sliding her arms around my neck and rubbing her whole body against me like a cat. Those hot little breasts against me are too luscious. There's barely room for two fingers in her wet little pocket. It's just as well we can't find a condom right now, this needs to be primed before the main event.\n\nHer hot little pussy is starting to suck at my finger. She reaches for my jeans again and I stop her only to have her reach again. She pushes my hand away with a huff.\n\n\"You know there was a study a few years back that proved pulling out was just as effective as using condoms. And since we both know we're safe . . .?\" She looks at me imploringly.\n\nShe'd let me? She wants me in her little . . . Christ on the Cross what it wouldn't feel like to fuck her. Her sweet, precious tight wet wet pussy, plunging hard and long with no condom. I don't know her birth control situation and there's no way in hell I could promise to pull out. If this relationship ever goes anywhere I am spanking the shit out of her. This is highly dangerous, her throwing herself naked at a man she barely knows. The hypocrisy of my thought process doesn't escape me.\n\n\"Not happening, I remember reading that and it was 4 percent with pulling out versus 2 percent with condoms.\"\n\nShe looks at me with something like admiration.\n\n\"2 percentage points, 96 versus 98 percent? C'mon Wilde, those are acceptable odds.\"\n\n\"Odds? How about 400 million to one?\"\n\n\"What are you talking about?\"\n\n\"I'm talking about 400 million sperm every time a man pops one off, everyone one of us walking the face of the earth is a miracle, a 400 million to one egg shot more or less miracle, and you're talking odds?\"\n\nShe's lost the argument and is pouting again. That's it, length of acquaintance be damned. I sit up and snatch her across my knee and pop her delicious ass several times, before throwing her back on the bed and finishing her on my lips and fingers. After coming long and loudly at least three times she snuggles up nice and close.\n\n\"Do you make a habit of spanking women you've just met?\"\n\n\"Only when they taunt me and misbehave by pouting.\"\n\n\"So you'll spank me if I misbehave?\" She purrs and rubs her face against my chest.\n\n\"And taunt me, yes.\"\n\n\"Hmmm . . . I'll see what I can do.\" The little minx yawns and falls fast asleep."
    ],
    "authorname": "MsLuLuX",
    "tags": [
        "black woman",
        "white man",
        "spanking",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/vision-ch-01"
}