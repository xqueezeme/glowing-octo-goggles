{
    "title": "Dawn's Anal Awakening Ch. 06",
    "pages": [
        "Hello readers! Merry Christmas and Happy New Year!\n\nMay 2020 bring you lots of orgasms and good sex, like what Dawn's getting!\n\n----------\n\nDawn loved assfucking. She loved being assfucked by Kennedy. Their sexual partners slash roommates living arrangement was quite beneficial to the young blonde.\n\nKennedy took Dawn's anal desires very seriously, having arranged for double penetrations and an anal train. Dawn was so grateful that her needs were so well taken care of! There was only one small problem.\n\nShe didn't know what they were to each other. It felt disingenuous to call Kennedy just a roommate when she was so much more than that. But she didn't know if Kennedy really qualified as a girlfriend, or if Kennedy wanted to be her girlfriend in the first place!\n\nDawn couldn't deny that she had growing feelings for the lesbian brunette who was helping her bloom as an anal slut! How could she not? When Kennedy not only fucked her asshole on a daily basis, but also helped her with her class schedule, making sure Dawn ate proper meals and sucked proper cocks, helping the younger girl vet the men that would shoot their loads into her ass and pussy\n\nHow did one properly go about asking their fuck-buddy-roommate if they were girlfriends?\n\nIt was a question that percolated in Dawn's mind for weeks. For all she knew, Kennedy might just see her as a sexual outlet, the way Dawn saw most of the men she had fucked so far as sexual outlets. There wasn't anything serious in those kind of fucks. Sure, they were fun, and getting her ass plowed six ways to Sunday was great, but it didn't feel as special as when Kennedy did it.\n\nDawn had never confessed to anyone before this. Usually, people would confess to her, not the other way around! In high school, the list of boys lining up to try and date Dawn was pretty long. Maybe she could take a leaf out of their book and ask Kennedy out on a date.\n\nThe blonde sighed, bare butt wiggling as she folded her laundry and dusted the room. The jewel on the plug in her ass winked and glinted whenever the light hit it.\n\nShe cleaned harder, clenching her asshole from time to time to feel the stretch of her anal ring.\n\nRAP-RAP-RAP!\n\nDawn grabbed a towel quickly and wrapped it around herself. But then a key turned in the lock and Kennedy entered.\n\n\"Cleaning up?\" the older girl asked. \n\nDawn nodded with a smile of relief. She let the towel drop as Kennedy closed the door, not seeing any point in wearing clothing if it was just her roommate.\n\n\"Now there's a sight for sore eyes,\" Kennedy said, dropping her bag on the floor and walking closer. She wrapped her arms around Dawn's waist and gave her a kiss.\n\n\"Mmmmm,\" Dawn moaned as Kennedy plundered her mouth with her tongue. She loved the way the older girl kissed!\n\nKennedy pulled away after an eternity and gazed deep into Dawn's eyes.\n\n\"I was thinking, maybe tonight we could go somewhere special?\" Kennedy said softly. She brushed the hair out of Dawn's face. \n\n\"Oh? Where?\"\n\n\"There's a new Italian place in town called 'Impasta Syndrome'. I hear the food is good,\" Kennedy said.\n\nDawn giggled, feeling the blood rush to her cheeks.\n\n\"What time?\" \n\n\"About 7? We can get dolled up and get a taxi,\" Kennedy added, leaning in to peck Dawn on the cheek. She walked forwards, crowding Dawn towards the bed until the younger girl fell backwards onto the mattress with a soft 'oof'.\n\nKennedy reached between Dawn's legs, sliding her fingers into Dawn's perpetually wet pussy and giving it a good hard frigging. \n\nDawn bit back her moans.\n\n\"But first, I think this little hole needs a good dicking.\"\n\n--\n\nDawn had been suitably distracted from her cleaning by the fucking of her pussy. She couldn't find it in her to be upset because of the wonderful orgasms that Kennedy had fucked out of her cunt. Indeed, powerful, cunt-shaking, chest-heaving orgasms were the kind of thing that made a person smile subconsciously. She was grinning as she put on her make-up.\n\n\"Hey Dawn,\" Kennedy said from the bathroom door.\n\n\"Mmm?\" Dawn didn't turn around, too busy with her mascara.\n\nKennedy came up behind her and then gave her pert buttcheeks a little pat-pat. Dawn grinned at her reflection.\n\nHer roommate parted her asscheeks and then jiggled her little bejeweled plug, making Dawn moan softly. Kennedy pulled it out part way, letting the widest part of the plug stretch Dawn's asshole for a little bit, then pushed it in again. She used the plug to gently fuck Dawn's anus for awhile, then pulled it out completely.\n\n\"Hey!\" Dawn protested. She was using that!\n\n\"Shhh!\" Kennedy said sternly. \n\nIn the next moment, Dawn felt something else press up against her well-used shitter. \n\n\"Aaaaah,\" she breathed out as the oblong shaped item was pressed firmly into her butthole. Her ass welcomed the intruder easily, swallowing it whole. The item felt smaller than the dildos Dawn used to plow her ass, but it was slightly bigger than the medium plug she sometimes used. It didn't give her anus the stretch she really desired. \n\n\"What is it?\" Dawn asked Kennedy.\n\nKennedy grinned.\n\n\"You'll see later. C'mon get dressed the car will be here in five minutes!\"\n\nDawn yelped, surprised at how fast the time slipped through her fingers! She hurriedly exited the bathroom and grabbed her outfit for the night. Kennedy had asked her to dress up a little, so she selected a beautiful form-fitting maroon dress with a heart shaped bust and a skirt that went down to just above her knees. She paired with her black and silver sling bag. \n\nKennedy, on the other hand, wore an all black, backless halter top dress with a skirt that went down to her calves. She picked up her white purse and then offered her arm to Dawn, who took it with a smile. \n\nThis felt like a fancy date to Dawn, which made her heart beat a little faster. She loved the way Kennedy's dress accentuated her curves and loved the way Kenendy's earrings glinted in the light. \n\n\"You're beautiful,\" Dawn told the brunette.\n\n\"You're more beautiful!\" Kennedy shot back with a laugh.\n\nThey got into the taxi, laughing and enjoying the prospect of a shared dinner.\n\n\"How did you hear about this place anyway?\" Dawn asked, crossing her legs in the back of the cab.\n\n\"Well,\" Kennedy scrunched up her nose and reached into her purse \"One of the guys I introduced to you the other Friday? He suggested it when I asked him for fancy dinner places!\"\n\nDawn jerked in her seat, eyes going wide. The toy inside her rectum had started a gentle rolling motion, massaging her inner walls. The slow stimulation was sending little jolts of electricity through her muscles, making her aroused. \n\n\"Kennedy what-\" Dawn squeaked.\n\n\"I mean, you did mention you liked Italian food, didn't you?\" Kennedy was grinning, one hand still inside her purse. Dawn caught a glimpse of something that looked vaguely like a remote. Was that, did Kennedy put the remote-controlled vibrator in her ass?!\n\nKennedy's thumb moved over the device and Dawn bit back a moan as the vibrations intensified. \n\n\"Dawn, you like Italian food, don't you?\" \n\nDawn could see the taxi-driver looking at her in concern through the rear-view mirror.\n\n\"Y... yes I do!\" she gasped. \n\nKennedy rummaged around in her purse and the vibrations stopped. \n\nDawn glared at Kennedy, giving the older girl a smack on the arm. The older girl responded by pressing another button. \n\nThis time, Dawn couldn't hold back her whimpers. The toy roared to life inside her, pulsing in strong bursts that made her anal walls sing with delight, and her pussy gush with slick.\n\n\"Are you alright, miss?\" The driver asked in concern.\n\n\"Y... yes, just hungry!\" Dawn managed to grit out while glaring at Kennedy.\n\nKennedy grinned. The vibrations in Dawn's ass stopped abruptly, leaving her with a strange itch in her rectum, the kind that could only be cured by a good hard ass-fuck!\n\nDawn made a grab for Kennedy's purse but the older girl lifted it out of the way. The blonde ended up sprawling over Kennedy's lap. The brunette took the chance to pinch Dawn's bottom, making her yelp.\n\n\"Y'all good friends, then?\" the driver asked, curious.\n\n\"Yup!\" Kennedy said cheerfully, giving the driver a wink. \"Good friends indeed.\"\n\nDawn tried to get back up but Kennedy's elbow in the middle of her back prevented her from sitting up. Kennedy moved her purse to the other side, her hand delving in and then -\n\n-Brrrrrrrr- Brrrrrrr - BRrrrrrrrr BRRRRRRRR- \n\nThe vibrator began to pulse again. Dawn muffled her moan against Kennedy's thigh. \n\nShe could feel her pussy reacting to the sensations inside her ass. As a true-blue anal slut, any sort of anal stimulation made Dawn horny as hell, and the movements of the powerful vibrator were no different.\n\nKennedy kept Dawn over her lap for almost the entire ride, making the toy in Dawn's ass pulse, roll, and vibrate as she pleased. Dawn was helpless to get up or resist. She couldn't very well reach under her skirt and pull the toy out in front of the driver!\n\nNot to mention, where would she keep it? Her tiny sling bag would not hold the vibrator, nor did she want to walk around with it in her bag! Her repeated attempts to get the remote away from Kennedy only resulted in longer intervals of the toy coming to life in her ass.\n\n\"The more you try to get it, the longer I'll leave it on,\" Kennedy whispered in Dawn's ear. Dawn muffled her moan of despair and wished that her ass wasn't so sensitive to being toyed with!\n\nIt was the longest cab ride that Dawn had ever experienced. \n\nShe was dazed with anal pleasure when the car finally stopped and Kennedy had to pull her out of the taxi. The older brunette paid and tipped the driver, letting Dawn lean against her. By then, Dawn was too weak in the knees, teetering on the edge of a powerful anal orgasm, to protest.\n\nShe followed Kennedy into the restaurant with a mulish expression. Hopefully, Kennedy would stop playing with the toy now that they were in a public space. \n\nThe waiter, a dark-skinned young man with striking looks, showed them to their table and placed the menus in front of them. To Dawn's relief, Kennedy left the toy well alone when they were deciding on what to eat. \n\n\"I'll have the spaghetti aglio olio with smoked duck,\" Kennedy said when the waiter returned \"And a glass of orange juice to go with it.\" \n\nShe closed her menu and handed it back with a smile. Dawn hummed in her throat, looking down at the food listed.\n\n\"I'll have the -urk!\"\n\nThe vibrator had started a slow pulsing deep inside Dawn's ass. Dawn kicked Kennedy's shin but the older girl just grinned. \n\n\"The what, Miss?\" The waiter asked, looking puzzled. \n\n-brrrrrBRRRRRRRRRRRRR BRRRRRR BRRRRRR RBRRRR- went the toy merrily, kicking into high gear! Dawn's mouth fell open. \n\n\"Yes, what are you going to order, babe?\" Kennedy asked as if there was nothing wrong. Dawn could feel her pussy juices flowing already, pleasure coursing through her rectal walls and her anus as the toy massaged her from the inside out.\n\n\"Uh, mmmngh, I'll have the... the ...\" it was so hard to think about food when her hindbrain wanted to focus on the wonderful feelings coming from her rectum!\n\nDawn forced herself to smile at the waiter.\n\n\"The shrimp penne... and unnngh, apple juice...mmngh and the - oooh - soup of the day!\" Dawn bit her lip the moment she got her order out. \n\n\"So that's the spaghetti aglio olio with smoked duck, an orange juice, shrimp penne, apple juice, and a soup of the day?\" the waiter repeated the order as he wrote it down on his pad. Dawn tried not squirm in her seat, but it was getting impossible because she could feel the slick from her pussy soaking through her panties. She didn't even have pantyliners on to help soak up her wetness this time! What if it soaked through her dress? Everyone would see!\n\n\"Yup, that's correct,\" Kennedy said, confirming the order. The waiter nodded once, then left the table.\n\nWithout any warning, the vibrations stopped again, leaving Dawn unfulfilled. \n\nDawn covered her mouth and whimpered. The sudden loss of stimulation was as bad as the sudden start of it. It felt almost as if her ass had been left empty, unfucked, even though there was a toy buried in her rectum. \n\nThere she was, surrounded by people dressed up in beautiful clothes, in a restaurant that served fancy dinners, and all Dawn could think about was getting a cock deep in her ass as soon as possible so that she could cum!\n\nShe tried to clench her ass muscles around the toy, maybe squeeze a small orgasm out of her own hole, but it was impossible. The vibrator wasn't big enough to give Dawn the kind of pleasure she needed if it wasn't turned on.\n\nDawn sat there, face red with arousal, a toy torturing her ass with anal pleasure, desperately hoping that no one else could smell the fact that her cunt was completely drenched.\n\nKennedy was grinning all the way. The older girl delighted in activating the toy at different settings, soft pulses, prolonged vibrations, sudden short bursts of vigorous movements that felt like Dawn's ass was getting drilled, all to keep Dawn on the precipice of a powerful anal orgasm. \n\nEvery time Dawn thought she would be able to cum, Kennedy would stop the device and leave Dawn hanging in the balance. And every single time Dawn's slutty shithole had started to calm down from the stimulation, Kennedy would activate the vibrator again. \n\nDawn would have loved it in the privacy of their own rooms, but in a public space, surrounded by so many people, it was utterly humiliating. She blinked away her tears of sexual frustration and humiliation as she ate her shrimp penne, unable to do anything but endure Kennedy's remote-control torture of her anal passage.\n\n\"Mnnngh,\" Dawn moaned again.\n\n\"Is everything alright?\" a passing waiter asked. \n\nKennedy waved them off.\n\n\"She's just enjoying her meal,\" she answered on behalf of Dawn. Dawn could only give the waiter a wan smile as the toy merrily buzzed inside her shitter.\n\n\"Please, Kennedy, I can't,\" Dawn whimpered \"Just let me cum, please!\" she begged.\n\n\"Nope!\" Kennedy said, popping the P with a satisfied smirk. \n\n\"I've got something planned for you later and you need a good anal massage before we can get to it,\" Kennedy reached across the table and grabbed Dawn's hand, giving it a squeeze.\n\n\"C'mon Dawn, you can do it. Just hold out until we get home. I promise it will be worth it!\"\n\nDawn bit her lip and nodded. Kennedy had never steered her wrong, even if this prolonged anal teasing was a bit more than Dawn could bear. It took all of her willpower and her self-control to keep her arousal from showing on her face. \n\nAt long last, dinner was done. Kennedy took her sweet time paying the bill, letting the vibrator tease Dawn's hole with powerful bursts of motion. The bottom of Dawn's dress was completely drenched with her pussy juices and Dawn had to use her sling bag to try and cover up the stain. The waiter wrinkled his nose, looking puzzled when he passed, but made no comment. But it was enough to make Dawn blush. \n\nThe ride home was equally frustrating as Kennedy left the vibrator on the whole time, a slow rolling motion that was too strong to be ignored, but too weak to make Dawn cum. \n\nDawn squirmed all the way home and practically launched herself out of the car to get to their shared room immediately.\n\nShe was sooooo horny. \n\nHours of anal teasing, and no orgasm. This had to be a record for her! \n\nDawn wasted no time in toeing off her high-heels and then reaching for the zip on her dress as Kennedy entered the room behind her. She pulled off her clothes and her bra and her drenched panties, tossing them in the hamper, then bent over her bed. \n\nFinally! She could have some relief! Dawn yanked the toy from her ass and reached for her dildo, only to realize that it was gone from its usual spot by her bed.\n\n\"Kennedy, where's my dildo?\" Dawn whined, petulant. She needed cock and she needed to cum right now!\n\n\"I put it away for a moment,\" Kennedy said easily. She knelt behind Dawn.\n\n\"Relax, Dawn. Since when have I left your ass unsatisfied?\"\n\nDawn moaned as Kennedy's fingers breached her hole, scissoring, and moving around insider her anal ring. They stretched her sphincter wide open, and then let it close again.\n\n\"Aaaaaah,\" Dawn moaned. It was great to finally be able to moan out loud, and not care if her cunt juices were dripping onto the floor!\n\nKennedy massaged her shitter expertly, fingers twisting this way and that, moving side to side, opening up Dawn's asshole. Dawn had been fucked quite frequently. Her bottom was cock-hungry, desperate for a solid shaft inside it. It eagerly welcomed three of Kennedy's fingers, then four. \n\nKennedy thrust her fingers in and out of Dawn's velvety asshole slowly, pressing those long digits up against Dawn's soft and puffy rectal walls. \n\n\"Do you trust me?\" Kennedy asked. Dawn moaned.\n\n\"Of course, I trust you!\" Dawn replied, breathless from the pleasure coming from her asshole.\n\nKennedy folded her thumb against her palm and then pressed her entire hand against the puckered rim of Dawn's anus. The older girl steadily applied pressure, driving her arm forward.\n\n\"Aaaaaah!\" Dawn gasped as her sphincter swiftly yielded to Kennedy's fingers and thumb! It opened wide around the widest part of Kennedy's hand, then closed around the older girl's wrist.\n\n\"Oh my god,\" Dawn whispered as she realized what had just happened. Her eyes were wide with disbelief. \n\nKennedy's hand was inside her asshole.\n\nKennedy's hand was fucking her shitter.\n\nDawn, 18 year old anal slut, was being fisted by her super hot brunette roommate.\n\nKennedy pulled her hand out again, letting Dawn's hole stretch around her hand, then curled it into a fist and pushed inwards.\n\n\"Annngh!\" Dawn cried out. She had taken huge cocks and hard fucking, but being fisted was really different! For one thing, cocks couldn't change shape, or massage her as expertly as Kennedy was doing to her rectal walls!\n\nThe hand inside her rectum was turning this way and that. At times, Kennedy would form a fist that would punch into the deepest part of Dawn's guts, and sometimes, she would stroke Dawn's inner walls with her long fingers.\n\n\"Oh oh it feels so good!\" Dawn wept as Kennedy thrust her hand in and out of Dawn's bottom, slowly at first, then getting faster. Kennedy loved the way her fist disappeared into Dawn's hole, how easily the ring of muscle just opened and allowed her entire hand inside. She loved the fact that Dawn was now writhing, pussy gushing with slick from being fisted!\n\n\"If only you could see yourself, Dawn,\" Kennedy panted. She had one hand on Dawn's hips, holding the blonde in place, the other delving into Dawn's shitter repeatedly, trying to punch an orgasm out of Dawn's anal tract!\n\n\"You're such an anal slut, Dawn. Other girls would have begged me to stop teasing them in that restaurant, but you? You begged me to let you cum. Now look at you, your shithole swallowed my hand like it was starving. You were starving weren't you? Desperate for cock? Not just any cock, big cock. You love getting your ass stimulated and it doesn't matter how. My hand's just as good as any other dick isn't it?\"\n\n\"Your hand is even better!\" Dawn nearly wept, overwhelmed by how good getting her anus fisted actually felt. It was so much better than she could have imagined. It was so much more erotic too, knowing that Kennedy was feeling her, really feeling her, from the inside out!\n\nKennedy opened her hand inside Dawn, making the blonde squeal. She angled her palm downwards, stroking Dawn's rectal walls, then yanked her arm out. \n\nHer hand slid out of Dawn's asshole with a tiny pop. The blonde girl's well-used anus gaped open obscenely, showing off her pink, pulsing insides. The rim of her hole puckered outwards.",
        "\"Nnnngh,\" Dawn moaned, pushing her hips backwards, needing to be anally fulfilled one way or another.\n\n\"Your hole looks more and more like a pussy every passing day,\" Kennedy said. It was true, the once tight ring of muscle had been conditioned to open up for all manners of intruders. The constant friction had given Dawn's asshole permanently puffy asslips that looked like they were always pouting and begging for dick. It was glistening from Dawn's pussy juices and her ass juices, an open invitation to be used hard!\n\nKennedy couldn't resist. She raised her hand and brought it down hard on that open asshole. \n\nSMACK. SMACK. SMACK. SMACK.\n\nDawn squealed as her sore hole was spanked roughly. Her sphincter clenched in pain and she tried to squirm away, but Kennedy pushed her fist inside Dawn's shitter to keep her in place. She didn't stop there, yanking her arm out and punching in roughly, over and over again. \n\n\"You love this, don't you? You love my hand in your ass! You love getting fisted cause you love anal! You're so desperate for something in your ass that it doesn't matter what it is how what it will do to your body!\" Kennedy growled, punching Dawn's cock-hungry hole.\n\n\"Yes I love it! I love being fisted!\" Dawn sobbed.\n\n\"This hole is insatiable!\" Kennedy pulled her hand out and spanked Dawn's open hole hard. \"Maybe I should spank it closed, teach it a good lesson about not being so eager for cock! Maybe I should rehabilitate you from your anal desires!\" \n\n\"No please! I wanna cum from anal! I love getting my shit hole filled, please don't rehabilitate me!\" Dawn begged, shaking her hips back and forth.\n\nKennedy plunged her hand inside again. \n\nOther girls had moaned and begged Kennedy to stop when she attempted to fist them. Not Dawn. Dawn had welcomed it with open arms, an open heart, and open asshole! The young blonde was moaning, whimpering, begging for more as Kennedy abused her shitter callously. \n\nThe brunette obliged her pleas, forcing her hand in deeper, and deeper, and deeper with each punch. \n\n\"Ungh, ungh, ungh,\" Dawn grunted, eyes rolled back in pleasure. Her hole was stretched to breaking. It hurt, but in a good way. Her hole was being used as it was meant to be used: a sheath for anything that wanted to make its home there!\n\nKennedy slipped her hand free and then gently tugged on Dawn's shoulder to make the blonde kneel up.\n\nDawn obeyed in a daze, then leaned back against Kennedy. \n\n\"Look,\" Kennedy instructed, then returned her hand to Dawn's hole. The older girl pushed her arm inside, deeper and deeper, then pressed outwards.\n\nDawn gasped as a bulge formed in her lower abdomen. She lifted shaking hands to cover it. Kennedy pressed outwards some more, making the bulge move.\n\n\"That's so hot,\" Dawn whispered, half delirious from the sensations in her ass, half fascinated by the fact that by cupping the bulge with her hands, she was essentially holding Kennedy's hands from outside her body.\n\n\"It is, isn't it? Do you know that I'm elbow deep in you?\" Kennedy whispered from behind the blonde.\n\nDawn's pussy gushed at the thought. Her beloved lesbian roommate was elbow deep in her rectal cavity. Dawn was helpless to stop her, helpless to resist. She didn't even want to resist. Kennedy had promised her good things tonight and so far Kennedy had delivered. Kennedy yanked her hand out, relishing the feel of Dawn's asslips blowing out. \n\n\"C'mon Dawn, pretzel up.\"\n\nDawn quickly assumed her favourite position, hooking her legs behind her head. She reached down and spread her asscheeks in anticipation of the continued fisting. \n\nKennedy grinned down at her young, blonde, teenaged roommate, so eagerly offering up her asshole for more hard use. Dawn was staring at Kennedy's hand. Kennedy made a show of forming a fist and pressing it against Dawn's gaping anal ring. \n\nIt opened wider, wider, wider, stretching to accommodate the widest part of Kennedy's fist. Dawn's mouth was open with awe and lust. She was transfixed by the sight of a whole hand making its way into her rectum. The older girl kept her fist there, twisting it right and left, teasing Dawn's shitter with the painful stretch of her sphincter.\n\n\"Mmmngh,\" Dawn moaned. Kennedy used the fingers of her other hand to tug at the rim, encouraging it to open up further. She slid her fist in completely, the both of them admiring the way Dawn's hole tried and failed to close around her wrist. Kennedy slid her arm deeper, thrusting it inwards inch by inch, until Dawn's asshole was at the crook of her elbow.\n\n\"Elbow deep on the first try,\" Kennedy mused. \"What do you think that says about you?\" she teased.\n\nDawn blushed at that, still gazing in wonderment at the arm that was currently spearing her bottom wide open.\n\n\"It says that I'm an anal slut,\" she answered honestly with a big smile.\n\nKennedy yanked her arm all the way out and punched all the way in, driving the breath from Dawn's lungs! \n\n\"Cum, anal slut, cum!\"\n\nKennedy steadied Dawn with her free hand and started to fist her in earnest. A shallow punch, elbow deep, a twist of her wrist, an open palm, she alternated between all of them, intent on stimulating Dawn's rectal passage the best as she could. Dawn's eyes rolled up into her head then the punching began in earnest. Her pussy oozed slick with every thrust, evidence of how much she was enjoying being used as a glove!\n\n\"Ah ah ah ah I'm cumming!\" Dawn wailed, the stimulation tipping her over the edge into a powerful anal orgasm. Her anal walls clenched hard against the massive intruder that was Kennedy's arm. Her pussy twitched, desperate to be filled as well. \n\nKennedy marveled at the feeling of being milked by Dawn's rectum. Her rectal muscles squeezed down hard around her arm as if trying to cut it off completely. If felt like a wet, exceedingly tight and warm glove. She punched deeper, keeping her arm inside, elbow deep as Dawn's insides spasmed uncontrollably. \n\n\"Again, slut!\" Kennedy grabbed Dawn's clit and twisted it at the same time she twisted the arm inside Dawn's ass. As usual, the sudden clit pain was enough to make Dawn cum again. The blonde teen squealed as a second wave of anal pleasure crashed through her, her sensitive walls convulsing around Kennedy's arm.\n\n\"Don't you dare stop cumming!\" Kennedy punctuated each word with a rough slap to Dawn's pussy. She shoved her fingers into that dripping gash and then frigged Dawn's cunt hard, turning them around to massage her other arm through the thin wall between pussy and asshole!\n\n\"Oh no oh no oh nooooo!\" Dawn wailed as another orgasm wracked her body. It was too much, the pussy and anal sensations were too much! Tears streamed down her face as she came hard and long from the feeling of being filled in both holes at the same time.\n\nKennedy jerked both hands free abruptly, enjoying the tortured look on Dawn's face as her holes were left to clench on thin air.\n\nShe went to their box of toys and pulled out her largest strapon. Kennedy guided the dildo on the inside into her cunt, and then buckled the strap on around her waist. Dawn watched her, too fucked out and horny to do anything about her impending anal dicking.\n\nKennedy herself was drenched. Watching Dawn take her arm in the shitter was an incredibly erotic sight. Watching the blonde cum repeatedly from being fisted was even more so. She clenched her pussy muscles on the dildo inside her and then leaned over Dawn.\n\nWith one swift, hard, thrust, she was hilted inside Dawn's shitter. The fisting had loosened it up so much that the strapon that gave Dawn her first painal experience could enter that rectal passage as easily as a hot knife sliding through butter. \n\n\"Mnnngh!\" Dawn whimpered, the last of her orgasms still shaking her body. She was weak from cumming, unable to keep her legs up. Kennedy grabbed a scarf and then swiftly tied Dawn's ankles to the headboard. \n\n\"It's my turn,\" the older girl said. She pulled back her hips and thrust, enjoying the sight of Dawn's puckered asslips around that massive fake schlong of hers. Kennedy began to plow Dawn's ass in earnest, slamming the strapon all the way in with every thrust. No doubt, the fisting provided more stimulation for Dawn, but this rough fucking wasn't for Dawn.\n\nEvery hilt deep thrust pushed the dildo further into Kennedy's cunt as well, making her pussy drip with slick. \n\n\"Nngh, nngh, ngh,\" Kennedy grunted as she pounded away, ignoring Dawn's little moans and whimpers. She felt the younger girl cum again, shaking and trembling as her anus was plowed. This was the best sort of sex, in Kennedy's opinion. She got to drill the ass of a beautiful girl while her own pussy was filled. She got to watch as the girl under her shook apart from the force of multiple powerful anal orgasms and accept her calling as an anal slut. \n\nDawn's face was slack, blissed out on anal pleasure. Even now, after the rough treatment of her rectum, she welcomed Kennedy's strapon into her ass without protest. Kennedy wanted to do this forever, fuck this girl's ass forever. She wanted to hold Dawn's hand as they went to class, then fuck her ass in their shared room at night. She wanted to organize many anal trains to watch Dawn cum over and over and over again on the cocks of unknown men. She was beautiful with cum of men sliding down her face, glazing those perfect pouty lips. \n\n\"Mnnngh!\" Kennedy moaned as her own orgasm overtook her. Her pussy squeezed the dildo inside her hard, milking it. Her own girl cum squirted from her pussy, drenching her thighs and the bed sheets underneath them. Dawn shuddered as well, a mini ass-gasm in the wake of her earlier, more powerful ones.\n\nThey lay together like that for a long time, the strapon still balls deep on Dawn's hard-used ass, chests heaving as they tried to catch their breath. \n\nAt long last, Kennedy untied Dawn's ankles and slowly let them down. She eased her strapon from Dawn's gaping hole, then unbuckled it, tossing it aside to be cleaned later.\n\nDawn looked up at her. Even like this with her blonde hair all messed up, her make up smeared across her face, Kennedy thought she looked exquisite, a debauched angel. \n\nDawn smiled up at Kennedy, tired from her rough ass-fucking. \n\n\"I love you, Kennedy Harper,\" she blurted out, filter completely gone. \n\nKennedy froze in place. Her eyes were wide.\n\n\"It doesn't have to change anything,\" Dawn quickly added \"We can just be fuck buddies, I just. I just think I'm in love with you.\"\n\nKennedy's answer was to attack Dawn's mouth with her own, drawing her into a filthy kiss. Their tongues pressed against each other, and Kennedy teased the inside of Dawn's lips with her own. \n\n\"I love you too, Dawn Simmons. I love the way you're such a ray of sunshine, I love the way you're kind to other people, I love the way you work hard in class and sometimes forget to eat,\" Kennedy panted out when they broke the kiss.\n\n\"I love the way you look with the cockjuice on your face. I love the way you love getting ass-fucked. Dawn Simmons, I love you and all your anal slut ways!\"\n\nDawn couldn't believe it, her feelings were reciprocated! She wrapped her arms around Kennedy and drew her into another kiss, this time slower and more sensual.\n\n\"I love that you're always concerned with my health and my studies. I love that you take care of me emotionally, mentally, and of course, anally. I love being fucked by you, Kennedy Harper. I want to explore more kinks, and the full extent of my anal slut nature with you.\"\n\nKennedy let out a small shaky laugh.\n\n\"Girlfriends?\" she asked, hopefully.\n\n\"Girlfriends.\" Dawn agreed with a big smile.\n\n------\n\nDisclaimer: Do tell your partner before you use a remote controlled toy on them. For the purposes of this story, Dawn is up for anything, but your partner may not. Communication is key!\n\nIn any case, stay tuned for more lesbian anal fun! There are a couple more things I want Dawn to experience before I'm done with this series. Do leave a comment if you got off on this!"
    ],
    "authorname": "kinkbugs",
    "tags": [
        "bdsm",
        "fisting",
        "lesbians",
        "multiple orgasms",
        "toys",
        "vibrators"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/dawns-anal-awakening-ch-06"
}