{
    "title": "Brad's Road Trip Ch. 13",
    "pages": [
        " Note: This is the 13th chapter in what will be a fairly long series. If you haven't read Chapters 1-12, this section won't make any sense. The sex scenes will mostly stand alone, but there's a pretty significant back-story. Anyway, thanks for reading! Feedback is appreciated! Special thanks to my outstanding editor, AnInsatiableReader, for helping me clean it up, and also my lovely wife, who made some key suggestions too! \n\nAnyway... enjoy!! \n\n********************\n\nSince it's been about six months since Chapter 12 came out, here's a small recap: Brad is winding his way across America on a long road trip to celebrate getting out of the military. He met Kelly, a girl from his home state of Idaho, during a chance phone call the day before he left. They had phone sex that very night, and just about every night during the first two weeks of his trip. Their feelings have grown far past the physical now, to the point where they're in a relationship despite having never met in person. Not wanting to spoil his fun, Kelly lets Brad have all the sex he wants on the trip, provided he tells her all the details of every encounter. In the most recent chapter, Brad finds himself in Indiana, where he spent the day with a pretty hotel clerk/lingerie saleswoman/hopeless nymphomaniac named Ellie. As they were winding down for the night, Brad got a call from his mom saying she'd seen Kelly out with someone named Tyler, whom Brad has never heard of. \n\nDay 12\n\nMonday, June 23\n\nEvansville, IN to Chicago/Rockford, IL\n\nI'd had more sex on this trip than a lot of men have in a lifetime. I'd had threesomes, foursomes, an orgy, and been in some one-on-one situations that even the raunchiest minds in the porn industry couldn't have schemed up. I'd had sex in hotels, houses, apartments, tents and a lingerie store; fooled around in the back of a truck, an equipment shed, and the front seat of my car. I'd dry humped at a crowded concert and in the middle of a packed dance floor. \n\nOne thing I had not yet experienced, though, was wake-up sex. I'd woken up next to plenty of girls, and back in Oklahoma I'd even woken up sandwiched between two women. On a couple of occasions, sex had ensued shortly thereafter.\n\nThis was the first time, though, that I was actually having sex as I started the day. I felt a hot, sticky wetness engulf my rock-hard cock, and I opened my eyes to an excellent view of a tight ass lowering itself onto my lap.\n\nShe let out a moan when she reached the root of my cock before rising back up. I feigned sleep for a few moments, enjoying the very subtle ripple of her cheeks each time her ass made contact with my hips. When I couldn't stand it anymore, I reached up and softly stroked her lower back, to let her know I was awake and appreciative.\n\n\"Good morning, sleepyhead,\" Ellie said, turning her head to throw me a wanton smile before facing the foot of the bed again. \n\n\"Hi,\" I croaked. Early-morning gravel voice was so sexy. Her pace was slow and deliberate, designed to maximize her pleasure. I held her hips gently just to provide her a little stability, but that was it for my involvement. She was basically just using my cock to stimulate herself, and I was okay with that.\n\nShe took her time, but after about five minutes I felt her pace quicken. My grip on her hips tightened a little bit accordingly, until she leaned forward and put her hands on my knees. She pistoned her hips up and down rapidly, bending my cock forward almost painfully. Thankfully, it didn't take her more than a minute or so at that angle before she came with a scream. She lay back on my chest once she was done. I reached around and grabbed both of her boobs in my palms.\n\n\"Shameful behavior, using me like that,\" I said, grinning to make sure she knew I was kidding. \n\n\"Aww, poor baby,\" she said, crawling off of me. She started to get dressed in the same drab Holiday Inn clothes she'd been wearing when we met the day before. They still looked damn good on her. \"I need to go to work, but I'll be back.\"\n\n\"When?\" I asked. \"I need to get over to breakfast with Lea and the kids before I hit the road.\"\n\n\"Pretty soon,\" she replied. \"I just need to take over for the night clerk, do a little paperwork, and I'll be right back here.\"\n\nShe finished buttoning her shirt, then pointed at my cock, still reaching to the heavens and wet with her cum.\n\n\"Don't touch that,\" she said, licking her lips as she headed for the door. \"As long as you're in this hotel, it's mine.\"\n\nI grinned at her, thinking how lucky her boyfriend was to have found her. She was one of the good ones. Incredibly sexy, huge sex drive, great personality, definitely more of a giver than a taker. If I didn't have someone to go home to, I might have felt a little pang of regret when I had to leave Ellie.\n\nThat thought, combined with the loud closing of the hotel room door, broke the seal on my memories from last night.\n\nWho the fuck is Tyler? Perhaps more importantly, why the fuck was Kelly lying to me about him?\n\nI walked into the bathroom where I'd left my cellphone to charge overnight, and I saw that I had three missed calls from Kelly - one from right after I went to sleep, and two this morning. I so badly wanted to pick up the phone and call her, but I also didn't want to yell at her. Until I was certain I wouldn't, I wasn't going to take that chance.\n\nInstead, I got in the shower. The hot spray felt awesome. My muscles were just beginning to recover from Friday night's orgy in Indy, and now I'd hit them with Hurricane Ellie. We'd both slept in short spurts throughout the night. I'd woken her up when I got into bed and fucked her right then, and she'd woken me up again a couple hours later. Ellie was certainly living up to her nymphomaniac billing.\n\nI really couldn't wrap my mind around why Kelly wouldn't tell me about whoever this Tyler guy was. I mean, if it was an old boyfriend or a fuckbuddy she had sex with from time to time, that wasn't really much different than her mini-romp with the guy from the dance club. Even if it was a current boyfriend, I wouldn't have been that upset. No one had ever accused me of lacking confidence. I didn't really want to compete for her attention, but I had no doubt I would win if I had to.\n\nMy mental agonizing was interrupted when the bathroom door opened. I cracked the curtain to see Ellie shucking her work clothes. \n\n\"Great idea,\" she said, motioning to the shower. \n\n\"Yeah,\" I said. \"Come on in.\"\n\nI moved under the spray so she could get in, but truthfully, I wasn't much interested in playing around. \n\n\"Uh oh,\" she said immediately after closing the shower curtain. \"What's wrong?\"\n\n\"Nothing.\" \n\n\"Uh huh,\" she said, her smile showing that she could see right through me. \"When I left here a few minutes ago, you were all happy. Now the tension is radiating off of you.\"\n\nShe gripped my now-flaccid cock in her hand for emphasis.\n\n\"This guy in particular is not in the same condition I left him in.\"\n\n\"Damn you being perceptive,\" I said with a slight smile. I dunked my head under the spray to wash the shampoo out of my hair, and when I opened my eyes again, she was lathering her body up with some kind of girly body wash she must have brought with her. In the mood or not, a hot naked girl was soaping herself up in front of me. I wasn't not going to watch.\n\n\"So spill it, so I can get on with getting you to spill something else.\"\n\n\"Girlfriend troubles,\" I said. \"I told you we'd never met, and there's a lot about her I don't know. I already knew she was keeping something from me, but now it looks like she's keeping multiple secrets.\"\n\n\"Another guy?\"\n\n\"Looks that way,\" I said. \"I found out from a voicemail I got last night, but I'd forgotten when you woke up this morning. You kinda had me distracted, but after you left, it all came back to me.\"\n\n\"Is that why you woke me up last night and pounded my tight, sore little pussy until I was screaming into the pillows like a wanton little slut?\" she asked. My cock responded accordingly, thickening in her hand. \"Because you were mad at her?\"\n\n\"Could have had something to do with it, yeah.\"\n\n\"I guess I owe her one then,\" she answered. \"You fucked me half to death last night.\"\n\n\"Me?\" I asked. \"You make the damn Energizer bunny look like a two-pump chump.\"\n\n\"I've finally found somebody I really want to fuck while I wait for Tad to get home,\" she said, shrugging as the hot water cascaded down her fucking incredible body. \"I knew you were leaving this morning, so I wanted to get as much as I could. It's not like you didn't instigate some of that.\"\n\n\"I did,\" I agreed. \"I won't deny that. But men are known for being oversexed horn dogs. I've never seen a woman take it quite to your level.\"\n\n\"I warned you, didn't I?\" she asked. I nodded. \"I'm serious, Brad. If you lived here, this wouldn't be the last time we fucked. If you and Kelly worked it out and you both lived here, we'd probably all start fucking as a group once he got back.\"\n\nThat caught me off guard. Ellie saw the look on my face.\n\n\"We've talked about it some,\" she said. \"A lot of pillow talk. He has the hots for my cousin, and I think his best friend is the second-sexiest man alive. Maybe the third, now,\" she tacked on. I didn't think it was possible, but she'd gotten me fully hard again with just a few minutes of playful banter.\n\n\"And?\" I asked.\n\n\"We're both open-minded,\" she said. \"I'm sure we'll explore not long after he gets back here.\"\n\n\"Open-minded is good,\" I moaned as she dropped to her knees. The shower pelted her shoulders and face, but she didn't even notice. She slurped my cock into her mouth, and within a minute it was back at full attention. She was definitely talented, and no more than 10 minutes later, I'd hosed down her face and breasts with a surprising amount of cum considering the number of times I'd gotten off in the past 12 hours. \n\nI wanted to get her off again, but she really did need to be in her office. I offered to hide out under her desk where no one could see and lick her pussy until she drenched the chair in cum. I could tell the idea turned her on, and I'd have done it, too, but she had this crazy idea about not getting fired. \n\nWe dried off and dressed together, and she went back to the front while I packed up. I turned in my key card to a different employee, and Ellie walked me to my car.\n\n\"Am I allowed to call you and have phone sex with you?\" she asked.\n\n\"Maybe,\" I said. \"Take this number, too.\"\n\nShe punched it into her phone. \"Whose number is it?\"\n\n\"Kelly's,\" I said. \n\nThat made Ellie pause. \"Oh,\" she said. \"Well, I've never actually done anything with a girl before.\"\n\n\"Not for that, though, that is certainly an awesome image,\" I said, earning me a playful elbow to the ribs. \"You have a boyfriend, Ellie, and despite what I told you in the shower, I still have a girlfriend. This was fun, and I'd love for it to happen again, but not at the expense of the more important people in our lives.\"\n\nShe sighed, but nodded her head. \"You're right.\"\n\n\"I'll text you when everything is settled with Kelly,\" I said. \"Once I do, give her a call and make a new friend. The next time you get to talk to Tad, tell him what happened, see how he reacts, and we'll go from there. If they're both okay with it, I'm sure we could have some fun on the phone. All of us could, probably.\"\n\n\"Sounds like a plan,\" she said as I started the car. \"Brad?\"\n\n\"Yeah?\" I asked through the open window. \n\n\"Give her a chance,\" she said. \"You obviously didn't hear about any of this from her. I know you're upset, but give her a chance to tell you her side of things. If she's the woman you described to me last night, there's a good explanation. Promise me you'll hear her out, okay?\"\n\n\"Deal,\" I said. She stuck her head into the car and left me with a toe-curling kiss.\n\n*****************\n\n\"You didn't call.\" \n\nKelly always came up with a unique way to answer my phone calls, but this one wasn't flirtatious, funny or downright sexual. It was matter-of-fact and did little to hide her displeasure. I didn't like it.\n\n\"I didn't,\" I agreed. I was rolling up Highway 63, straddling the Indiana-Illinois border as I rolled toward Chicago. Lea and her kids had eaten breakfast with me, and I'd made two more quick stops in town before rolling out. One was to the post office to ship Kelly's lingerie, and the other was to Lea's best friend's office, to handle yet another surprise for Kelly. I was on the road again around 10 a.m.\n\n\"Why not?\" she asked. I imagined her with her arms crossed over her chest and a glare on her face. \"I like that you were getting story time for me, Brad, but that only works if you leave time to tell me the story.\"\n\nWoah. I wasn't expecting this.\n\n\"I'm sorry,\" she said after a good minute of extremely uncomfortable silence. \"Really, you could have left story time until today. I just don't like not talking to you before I go to bed. It's easy to ignore when I have to work late, but last night I was just staring at the phone, willing it to ring.\"\n\n\"I should have called,\" I said. \"I did end up spending the night with someone, but that isn't the reason. Kelly, you know that no girl I meet out here is ever going to stop me from calling you.\"\n\n\"How do I know that?\" she asked.\n\n\"I just told you so,\" I replied. \"And I've said it before. Whatever I might do with them, I don't call them my girlfriend. I do call you that.\"\n\nShe just stayed silent. I think she knew I needed to say something.\n\n\"You're my only girlfriend,\" I reiterated. \"I need to know if I'm your only boyfriend.\"\n\n\"What?\" She sounded genuinely thrown off.\n\n\"My mom and I talked yesterday, Kelly,\" I said. \"I had a surprise for you, and I needed her help. She mentioned that she saw you at Best Buy yesterday, with some guy named Tyler. She said you seemed happy together, that you were being all cute and couply.\"\n\nShe was silent again, and I couldn't turn my mouth off.\n\n\"You told me all about your random hook-up, Kelly, but there were no feelings there. From my mom's description, it seems there's at least something there with this guy. I didn't find out until I listened to a voicemail around midnight, and I was really upset with you for not telling me about it, and that I had to find out from my mom. I wanted to talk to you, too, Kelly, but I didn't want to yell at you. So I didn't call.\"\n\n\"Your mom said that?\" she asked, ignoring the last few things I said.\n\n\"Said what?\"\n\n\"That we were happy together, and acting like a couple. She used those words, exactly?\" Kelly asked.\n\n\"What does it matter the exact words she used?\" I retorted, getting a little annoyed now.\n\n\"It matters, Brad,\" she answered. \"Just humor me.\"\n\nI sighed loud enough that people four cars back could hear, and rolled my eyes. \"Fine,\" I said, thinking back. \"I think her exact words were 'making googly eyes at each other.'\"\n\nShe chuckled. I could tell that she was trying to fight it off, but she couldn't stop it all. I wanted to yell right then and there, but I just gripped the steering wheel harder and gritted my teeth.\n\n\"I'm sorry,\" she said once she'd swallowed the laughter.\n\n\"It sounds like it,\" I said, setting the sarcasm dispenser on full blast. \"What's so fucking funny?\"\n\n\"Aww,\" she said. \"You only cuss when you're trying to make me cum, or when you're really mad.\"\n\n\"Not hard to guess which one it is this time,\" I said.\n\n\"No,\" she said. \"Brad, I understand that you're upset. But if it's okay with you, I'll get to that in a minute.\"\n\n\"What?\" I asked, incredulous now. \"How about right now?\"\n\n\"Brad,\" she said in that same cool, calm tone. She never raised her voice, although I'm sure mine was a borderline shout by now. \"You've trusted me up until now, right?\"\n\n\"Sure, but-\" I started, but she interrupted.\n\n\"Okay, then,\" she said. \"Trust me now, when I tell you that all your questions will be answered by the time we get off the phone. Okay?\"\n\n\"Okay,\" I said, \"but I want you to tell me what the hell is going on, Kelly. There's nothing else I want to talk about until you explain this.\"\n\n\"There was a couple of days ago,\" she said.\n\n\"Maybe,\" I replied. \"Now, I want to know about this.\"\n\n\"Brad, I told you on Saturday that there were things that made it difficult to just drop everything and go somewhere,\" she said. \"I asked for your patience, to let me tell you things on my own terms. I was very grateful, but now I want to tell you, okay? I'm going to lose my nerve if I don't do it now.\"\n\n\"Okay,\" I said. \"Tell me.\"\n\n\"Surely you have some questions,\" she said. \"Ask me.\"\n\n\"Fine,\" I said, willing to play. I was honestly more worried about this Tyler business now, but I knew she was keeping things from me before I found out about him. \"A few days ago you talked about doctor's appointments, and you were tight-lipped when I asked about it. I heard a noise the other day, and I don't know what it was, but I know it wasn't a car alarm, like you said. Then you talked about not being able to go out whenever you want.\"\n\n\"There's no question there, Brad,\" Kelly said, clearly stalling. The urge to scream hit me again, but I let it wash over me. \n\n\"Do you have some kind of medical condition you're not telling me about?\" I asked. \"I'm into you so much it scares me, and I need to know if there's something wrong with you.\"\n\nShe took a deep breath, let it out, and answered. \"You're right, Brad. I do have a medical condition. Or, I did, anyway. It started a little less than three years ago, and it lasted for nine months.\"\n\n\"What was-\" I started the question before the last sentence sank in. \"Oh.\"\n\n\"Yeah,\" she said. \"I lost my virginity the day after my 18th birthday. And, well, I guess I should play the lottery, because I hit the jackpot on my very first try.\"\n\nHer sarcasm wasn't lost on me, but I was still trying to wrap my mind around it, so I didn't even give her a token chuckle.\n\n\"I carried the baby to term,\" she said. \"I thought about putting him up for adoption, but I just couldn't do it. I didn't tell my mom I was thinking about that at the time, and when I told her later, she told me she'd have killed me before I could sign the papers. She's helped me raise him. And no, thankfully, he is a very, very healthy boy. The doctor's appointment the other day was a routine check-up. He turned two last month.\"\n\n\"And that sound the other day?\" I asked.\n\n\"He got a toy fire truck for his birthday,\" she said. \"It makes all kinds of noises. I kinda want to kill Robin for buying it for him.\"\n\n\"Wow, Kelly,\" I said. \"I had no idea.\"\n\n\"I know,\" she said. \"I should have told you sooner. This just started out as a fun fling, and before I realized, it developed into something serious, and there was this big secret I had hanging out there. I had no idea how you would react, but you're right. You needed to know.\"\n\nA light bulb clicked on in my brain. \"So, this Tyler person my mom saw you with the other night...\"\n\nShe chuckled. \"My dad was the greatest man I knew. When I found out I was having a boy, I decided to name my son after him. My dad's name was John Tyler Linton, so I switched it up and named my son Tyler Jonathan Linton.\"\n\n\"So,\" I said, \"the googly eyes my mom was talking about...\"\n\n\"Just a mom staring at her child, wondering how he could be so cute and perfect,\" Kelly said. \"He really likes your mom, too. She's the only person outside my family who can hold him without him pitching a fit.\"\n\nI'd gotten it all wrong. My mom assumed I knew about Kelly having a son, so she figured her comments would make perfect sense. \n\nThere was no other man. This was an even bigger revelation, though.\n\n\"Tyler's biological father is the guy I told you about,\" she continued. \"You remember, my ex-boyfriend who didn't want to include me in his baseball fandom? He freaked out when I told him. He was going to try and do the right thing, but I had no interest in marrying him, and he was relieved. He moved to Denver not long after Tyler was born. He e-mails me once in a while to ask about him, but he's only met him once. I don't ask him for child support, and he doesn't get visitation. He's not part of my life.\"",
        "\"Okay,\" I said. I was still trying to assimilate everything. \n\n\"Just okay?\" she asked. \"That's all I get?\"\n\n\"I need time to think, Kelly,\" I said. \"I'm sorry. It's a lot to take in.\"\n\n\"So, where does this leave us?\" she asked.\n\n\"Kelly, do you not understand what I'm saying?\" I asked. I could feel my diarrhea-of-the-mouth affliction coming on, but couldn't stop it. \"I have not the first clue how to answer that question. I turn 23 next month. I don't know if I'm ready to raise a child. I don't even know if I'm ready to date a girl who has a child, Kelly. I know I like you. I like you a lot. But I've learned a lot about you; things I didn't know before. You have to give me some time to sort things out in my mind.\"\n\n\"Uh,\" her voice cracked. \"Okay.\"\n\n\"What?\" I asked. My words had hurt her, so I tried to soften my tone some. \"How did you think this was going to turn out, Kelly?\"\n\n\"I don't know,\" she admitted. \"I-\"\n\n\"Did you think I was just going to jump for joy and be excited about it?\"\n\n\"I guess,\" she said.\n\n\"You withheld some pretty important information from me,\" I said. \"Now that I know, you can't possibly expect me just to take it in stride and act like nothing changes.\"\n\n\"When would have been a good time to tell you, Brad?\" she asked. \"Should I have answered the phone at your mom's office that morning, 'Taco Bell offices, this is Kelly, I have a son, can I help you?'\"\n\n\"Of course not.\"\n\n\"Okay, so our second call, then?\" she asked. \"My fingers were buried in my pussy about 10 minutes into it. Would that have been a turn-on for you? 'Oooh, baby, fuck me with that hard cock - and oh, by the way, you wouldn't be the first; my two-year-old son can prove it?' That would have gone over really well, right?\"\n\nThat actually made me laugh.\n\n\"Kelly, I get what you're saying,\" I said. \"But our first conversation was almost two weeks ago.\"\n\n\"I know,\" she said. \"And like I said, I should have found a way to tell you before now. I just really like you. I like you so much, and... I didn't want to lose you.\"\n\n\"I don't want to lose you, either.\"\n\n\"There's only one way you will,\" she said. \"I might as well get this out there now. From the moment I realized I had feelings for you that didn't start between my legs, I knew I was going to tell you. I knew I had to, because he is the one thing in my life that is not negotiable.\"\n\nShe took an audible breath before continuing.\n\n\"Tyler is the most important thing in my life, Brad. I'd step in front of a speeding train for him. I've already put off college and taken a job working in fast food for him. And yes, I'd give up talking to you and being with you in the future for him.\"\n\nShe let that settle for a minute. It was heavy.\n\n\"None of those are fun thoughts, but I'm not one of those trailer park moms,\" she said. \"I'm not giving my son up for a man, even one who gets to me the way you do.\"\n\nHer passion blew me away, just as it always did. I didn't know how I felt about getting involved with a single mother, but I knew how I felt about mothers in general.\n\n\"I couldn't be with anyone who could,\" I said. \"I'm glad you feel that way.\"\n\nShe exhaled. \"So, are we okay?\" Kelly asked.\n\n\"Kelly, you're looking for an easy answer, and I don't have one for you,\" I said. \"I'll always be honest and truthful and answer any question you have to the best of my ability. But if I don't know the answer, I can't give it to you.\"\n\n\"I get that,\" she said. \"You need to figure out how you feel about everything I told you. But you can't even tell me if you still feel the same way about me?\"\n\n\"Kelly, you just made it abundantly clear that Tyler is you,\" I said. \"Every decision you make, you've got his best interests in mind. To be with you is to be with your son. Like I said, I couldn't be with you if you felt any differently. But to figure out how I feel about you, I need to figure out my feelings about you having a son. It'd be like saying you love the beach, but you're not sure if you like sand.\"\n\nThere was silence on the other end of the line.\n\n\"I was patient with you and gave you the time to tell me,\" I said. \"I need you to give me time to think. As soon as I have something to tell you, trust me. I will.\"\n\n\"Okay,\" she said. \"I guess I have to live with that.\"\n\n\"For a little while, yes,\" I said. \"If it's any consolation, I'm not going to be thinking about much else today. So you should have an answer soon.\"\n\n\"Yeah, right,\" she said. \"You're going to watch baseball.\"\n\n\"True,\" I said. \"But it's the Cubs and the Padres. Two epically bad teams. I'll be bored by the second inning.\"\n\nShe giggled, and even with all of this new information, I still couldn't help but love that sound.\n\n\"So, can we have story time now?\" she asked. My stomach almost turned.\n\n\"Um, not right now, Kelly,\" I said.\n\n\"Why not?\" she asked. \"You've still got a couple hours to go, and I don't work until noon.\"\n\n\"I just don't want to talk about it right now,\" I said. \"Very much not in the mood.\"\n\n\"Brad, that's not part of our deal,\" she replied. \"I said I'd be okay with you doing whatever you want, but you have to tell me. If you weren't going to be in the mood to tell me, you shouldn't have done anything.\"\n\n\"I'll tell you,\" I said. \"I will. I promise. I just don't want to think about that right now. This is probably the first time a man my age has uttered these words, but, there are more important things than sex. I want to tell you, and God help me, I want you to make yourself cum half a dozen times while I tell you. But right now, there are other things on my mind.\"\n\n\"Well, that sucks for me,\" she said. \"Did you do something I wouldn't approve of?\"\n\n\"No,\" I said. \"I think you'd very much approve. Please, Kelly. Time.\"\n\n\"Fine,\" she said, huffing as she accepted it. \"I'm going to hang up and give you your time.\"\n\n\"Thank you,\" I said.\n\n\"But Brad,\" she cautioned. \"If you're even half the man I think you are, you won't need much.\"\n\nBy the time I'd set the phone down on the passenger seat, I missed her already.\n\n*************************\n\nDue to the stadium's tight confines on the city's northern side, there was no traditional tailgating at Wrigley Field. So I met up with Josh and two other guys at the Cubby Bear, a legendary joint just across the street from home plate. First pitch was at an unusual time of 5 p.m., so we met at 2, leaving plenty of time to pour a significant amount of reasonably priced beer down our throats before heading to the stadium and paying $9 a glass.\n\nOne of the guys was Derrick, a high school baseball coach from Milwaukee who had been in Josh's and my fantasy baseball league since we started it four seasons ago. This was the first time I'd met him. He was a short, stocky guy built like a Mack truck.  \n\nThe other was Isaac, an Army sergeant who'd been stationed with me in San Antonio. Besides my roommates Chad and Russ, Isaac was probably my best friend in the military. He was black, taller than Derrick but built just as solidly. He was from nearby Rockford and was back home on leave. Both of them were diehard Cubs fans, so of course, Josh wore a Pirates jersey just to fuck with them. I'd chosen to remain neutral.\n\nJosh and Derrick had never met Isaac, so I introduced everyone and we took some time to catch up on everyone's lives. We drank for almost two hours straight, along with a hundred or so other Cubs fans.\n\nWhen it was time to go, Josh handed the waitress his debit card to cover his tab. Before she could leave, I grabbed it off her tray and handed it back to him.\n\n\"I got this,\" I said. \"We had a deal.\"\n\n\"Doesn't start till we get into the stadium,\" he said. I handed the waitress my card and told her to handle both his and my tabs with it. She smiled and nodded before leaving.\n\n\"Wait,\" Derrick said. \"What deal, and how do we get in on this?\"\n\nI looked at Josh to see what he would say. I was planning to have a little chat with him before I left town in the morning, but I didn't want to air out the details of my night in Pittsburgh with everyone unless he was okay with it.\n\n\"Let him fuck your girlfriend,\" Josh finally said, sighing.\n\nDerrick just looked back and forth between the two of us, but Isaac grinned.\n\n\"Been there, done that,\" he said.\n\n\"Say what?\" Josh asked.\n\n\"Be fair, Josh,\" I said, deftly avoiding Isaac's little tribute to my past indiscretions. \"It wasn't like I was actively campaigning to get with her.\"\n\n\"Y'all were hitting on each other all day,\" he retorted.\n\n\"I can't speak for her, but I was just being friendly,\" I said. \"Ya know, since you were being a dick to her all day.\"\n\n\"You both wanted it,\" he said, ignoring my defense. \"I just made it happen. Got free beer out of it.\"\n\n\"He made me a bet,\" I said, trying to explain it to the other two. \"He bet me a beer tab at Wrigley that he could get me laid when I visited him in Pittsburgh last week to catch the Pirates game against the Cubs.\"\n\n\"You made him watch a Pirates game?\" Derrick asked. \"Say no more. That should earn him a night with your girlfriend right there.\"\n\nIsaac and I laughed; Josh just sat there stoically. \"Anyway,\" I continued. \"We had no plans other than dinner after the game, and I was leaving the next morning for Indiana, so I figured there was no way I could lose. I'm crashing at Josh's house, and about an hour after I nod off, this girl comes in room and starts polishing my knob.\"\n\nI know - it's a grotesque description. Not one I'd ever use with Kelly or any other woman I didn't want to think I was a caveman. But it was boys, beer and baseball. It happens.\n\n\"I think I'm dreaming at first, but then I realize it's real. I wake up, and it's Josh's girl. She thought I was him.\"\n\n\"What?\" Isaac asked, turning to Josh. \"Why the fuck would you do that?\"\n\nI'd been asking myself that question, too, but only Josh knew the answer.\n\n\"Not getting into that,\" Josh said, waving us off. \n\n\"C'mon, man,\" Derrick said. \"Spill it. What could possibly make you decide to let your woman sleep with another dude? The beer at Wrigley is expensive, but there ain't a price that high.\"\n\n\"Not happening,\" Josh said. He motioned toward Isaac. \"I'm more interested in what you meant by 'been there, done that,' when I talked about letting him fuck your girlfriend.\"\n\nI glanced at Isaac, and he shrugged. I wanted to get to the bottom of Josh's issues with Maria, and if this was the price of admission, then so be it.\n\n\"He didn't really let me,\" I said.\n\n\"I just didn't put his ass in the hospital when I found out,\" Isaac said. \n\n\"You gotta understand first, this chick had been trying to get with me for months,\" I said, and Josh rolled his eyes.\n\n\"Nah, it's true,\" Isaac said. \"I don't know why she'd want this piece of shit when she already had me, but she did. She'd been trying to get me to bring him in for a threesome for as long as we'd been dating.\"\n\n\"And she was hot, ya know?\" I added. \n\n\"I don't waste my time if a girl isn't at least a nine,\" Isaac confirmed. \"And that's on a bad night.\"\n\n\"I'd never even flirted with her because Isaac is one of my best friends, but I knew she wanted me. So when she came up to me at a New Year's Eve party and told me Isaac had just dropped her like a bad habit, I was intrigued. If I hadn't been so sloshed at the time, the idea of calling him to make sure it was okay might have crossed my mind.\"\n\n\"But it didn't, you mother fucker,\" Isaac said. \"And they made so much fucking noise at the party, somebody recognized her voice and called me. They'd just finished up when I got there.\"\n\n\"You knock his ass out?\" Derrick asked.\n\n\"Fuck yes, I knocked his ass out,\" Isaac said, half-glaring at me. We were well past it now, but he'd probably always be a little ticked at me about it. \"Right there in the hallway when they came out of the room. Only because we were friends, I didn't beat his ass half to death.\"\n\nHe chugged the rest of his beer before finishing.\n\n\"Didn't talk to his ass for a couple weeks,\" he said. \"But after that, I started checking around, and it turned out the girl was a first-class slut. Brad wasn't even the first dude she'd fucked at that party. She wasn't worth it.\"\n\n\"I made it up to him, though,\" I said. \"A couple months later, a few of the Marines got sent downtown to work volunteer security for a big Victoria's Secret fashion show in San Antonio. I invited a couple of the models out for drinks afterward, and told Isaac where we were going. Dude married one of 'em a few months later.\"\n\nIsaac just nodded in response. \n\n\"Where's the ring?\" Josh asked.\n\n\"Getting resized, back in San Antonio,\" he explained. \"And you're stalling. You gonna tell us or not?\" he asked Josh. Josh thought about it for a minute, then after taking a deep swig of his last beer, he shrugged.\n\n\"I fucked one of her roommates,\" Josh blurted out. Derrick's jaw hit the table and Isaac's eyes widened. I wish I could say I was surprised, but I really wasn't. \n\n\"When?\" I asked.\n\n\"Two months ago,\" he answered.\n\n\"Why?\" I asked.\n\n\"Does it matter?\" he asked. I guess it really didn't. \"What mattered is that I tried to feel terrible about it, but I couldn't. I felt guilty, but only because I'd lied to her about it, not because I did it. I saw how into you she was the other day, and I figured maybe I could square things up letting her have you for a night.\"\n\n\"That makes no sense, bro,\" Isaac said. \"She knows you set that one up. She didn't lie to you, but you've still lied to her. Only way to make up for that shit is to tell her the truth.\"\n\n\"You still love her?\" I asked Josh.\n\n\"We don't say that,\" Josh replied. \"I like her a lot, but I'm not sure we're gonna work out long-term. She gets on my nerves way more than a girlfriend should, ya know?\"\n\nI had no idea what he meant by that - Kelly had aggravated me pretty good by keeping things from me, and we'd only been a couple for a weekend. I didn't have a ton of experience with relationships, but I knew that things were never going to be perfect, and just simply getting on your nerves wasn't a good enough reason to have doubts about the whole thing.\n\n\"This is not a cool conversation to have before a baseball game,\" Josh said.\n\n\"It's not,\" I agreed. \"All I'm gonna say is y'all need to have a fucking talk.\"\n\nIsaac and Derrick agreed with me, and we all headed across the street.\n\n*******************\n\nWrigley Field was majestic. \n\nThe ivy-covered walls held history that no professional sports venue west of New York could hold a candle to. The structure was old and the seats were designed for 12-year-old girls, but the stadium had an excess of quaint charm, something that was missing in today's cookie-cutter skyscraper wanna-be parks. I had a lot of friends who were Cubs fans, and I gave them a metric asston of crap over their chosen allegiance. But as we sat in our seats down the left-field line, just a couple rows back of where Steve Bartman had infamously doomed the Cubs in the playoffs a few seasons back, I could understand the attraction.\n\nThe Cubs' World Series drought stood at 98 seasons and counting, but the vibe in the stadium was electric anyway, as if this was Game 7 and the Cubs were up six in the ninth inning. In reality, they were tied 2-2 with the lowly San Diego Padres in the fifth inning of a game in late June. Chicago was still in first place in its division, though, so the fans were still optimistic. Deep down, though, they all instinctively knew the train would jump the tracks by season's end. \n\nI'd been paying attention as best I could, but my mind understandably drifted back to Kelly two or three times an inning. I was no closer to figuring anything out when a foil-wrapped hot dog hit me square in the side of the head.\n\n\"Hey, dumbass,\" Isaac said from the seat next to me. \"Where the fuck are you?\"\n\n\"Sorry, man,\" I said. \"I'm here.\"\n\n\"The fuck you are,\" he replied. \"Some girl got your mind jumbled up?\"\n\nI wasn't surprised. \n\n\"Yeah, man,\" I said. \"But I don't want to ruin the game.\"\n\n\"C'mon, bro,\" he said. \"Talk to Uncle Isaac.\" He was 10 years older than me, having gotten a late start in the military. Early on, I'd joked that we couldn't hang out together because he was old enough to be my uncle. The nickname had stuck.\n\nI told him everything. He listened patiently, only stopping to stand up and reach for a foul ball hit in our direction. Josh caught it, and after some razzing from the rest of us, he gave the ball to a little boy sitting one row behind us. \n\nIt took most of the sixth inning to tell him all of it. He was only the second person I'd talked to about every single detail of my relationship with Kelly. The other was Scott, but that was a week ago, and there was a lot more to it now. It was cleansing in a way.\n\n\"You're overthinking shit,\" Isaac concluded when I was done.\n\n\"How so?\"\n\nHe leaned back and pointed to a group of girls sitting in the next section over and a few rows behind us. \"See that hot blonde over there across the aisle, wearing basically a black bikini? The one that's been checking me out all game?\"\n\nI rolled my eyes but nodded.\n\n\"Say there was no Kelly, and that girl walked over to you and started flirting. You'd be interested, right?\"\n\n\"Probably,\" I agreed.\n\n\"Ok, let's say when she walked over, she had a kid with her. He called her 'momma,' so you knew he was her son. Does that change your mind?\"\n\n\"Where's the father?\" I asked.\n\n\"No idea, but she's single,\" Isaac replied, knowing what I meant.\n\n\"Then no. No hesitation,\" I said immediately. \"I've never dated a woman with kids before. I have no idea how I'd do with kids, but if I'm interested in her, I'd be willing to find out.\"\n\n\"There's your answer,\" he said, a big grin on his face.\n\n\"This is different,\" I said.\n\n\"How?\" he asked. \"Because you didn't find out till later? Doesn't matter, bro. We learn new shit about the people we care for all the time. Unless it's something nasty, it doesn't change how we feel about them. For some guys, kids are a deal breaker, but not for you.\"\n\n\"I don't know if they are or not,\" I said.\n\n\"You just said kids wouldn't stop you from being interested in the girl. That means you're open to it,\" he said. \"Look, Brad. There's a ton of shit that could not click once you meet. Maybe you don't like the way she looks. Maybe you look way better in pictures. Maybe the chemistry you have on the phone vanishes in person.\"\n\nI'd thought about all of those things a lot, but I wasn't concerned about them.\n\n\"I'm not saying any of that's likely,\" he said, reading my mind. \"I've never heard you talk about a girl this way, so I'm guessing you'll be fine, but they're all possibilities. So, maybe you find out that you can't stand being around kids. Maybe a kid just gets in the way of your relationship in a way you aren't willing to accept right now. But maybe not. Maybe you love kids. Maybe he just makes everything you already knew about her even better.\"\n\nJust then, Alfonso Soriano came to the plate and drilled a fastball over the wall in right-center field with a runner on first. The Cubs led 4-2, and the stadium went nuts. As we stood to cheer, Isaac leaned in close.\n\n\"Either way, you have to find out.\"\n\nBy the time the pandemonium died down, I was on the concourse, in one of the quietest places I could find. I knew she was at work, so I dialed directory assistance to get the number for her Taco Bell. After about 27 rings, some guy answered the phone and told me Kelly was insanely busy with the dinner rush. I left a very simple message for her, one he promised me he'd deliver:\n\n\"Tell me all about Tyler.\"\n\n********\n\nKelly called me back an hour later, just as the top of the ninth inning was starting. The Cubs had added four more runs and now led 8-2, and needed just three more outs to win. \n\nShe was on the verge of tears when I answered. \"Does this mean... I got your message but... you're okay? We're okay?\"",
        "\"Yes, baby,\" I asked as I motioned to Isaac that I was heading up the stairs to the concourse again. \n\nBefore I was out of the stands, her tears started up for real. \"Oh, God,\" she said. \"Work was so hard tonight. I kept taking breaks, running out to my car to see if you'd called.\"\n\n\"I figured,\" I said. \"That's why I went the direct route.\"\n\n\"I was so worried.\"\n\n\"I know,\" I said. \"And I am sorry about that. I just needed to think.\"\n\n\"What did you decide?\"\n\n\"That you are the most exciting and amazing woman I've ever met,\" I said. \"That any child of yours would have to be exciting and amazing, too. And that I am so completely and totally into you that I want to know everything about you, and be a part of every part of you. Does that make sense?\"\n\nShe was openly sobbing now, but I'm pretty sure she sprinkled a 'yes' in there somewhere.\n\n\"I took the rest of the night off, and Tyler is staying with my aunt and uncle tonight,\" she blubbered. \"I'm going to drive home now.\" \n\nOn her way, she told me everything she could think of about her son. The game ended a few minutes later, and while Kelly continued, I made plans with the guys to take our separate cars and hit a Hooters about 45 minutes away in Rockford, Isaac's hometown. \n\nYa know, for the wings.\n\nShe went on and on about Tyler, as mothers are prone to do about their kids, but I didn't mind one bit. Just hearing her voice thrilled me to no end, and listening to her be so passionate about something excited me. \n\nAbout halfway through the long drive, she was done.\n\n\"I'm sure I'll think of more to tell you about him before you get here,\" she said. \"But damnit, it's story time now.\"\n\nThe way she so completely shifted gears never failed to throw me off. \n\n\"You know, you blow my mind at least once a call,\" I said. \"One second you're glowing about your son's first steps, and the next you sound like you want to rape me.\"\n\n\"I really want you to rape me,\" she teased. \"Not actually rape me, of course. Can't rape the willing. But you could be rough with me. Punish me for not being honest with you from the beginning. Shove your cock down my throat. Slam me up against a wall and pound me from behind. Force my ankles behind my head and fuck me until I pass out. \"\n\n\"Woah,\" I said. \"Slow down there, turbo.\"\n\n\"You've turned me into a nympho, Brad,\" she said. \"This is entirely your fault. If you're going to share, you better start talking, or I'll just tell you all about the nasty things running through my slutty little brain right now.\"\n\n\"I'd like that, actually,\" I said. \"But, I promised I would tell you. And speaking of nymphos...\"\n\nI told her everything that happened with Ellie. I explained how we'd met at the hotel and how she'd likely stopped me from getting arrested with her eyewitness account of my altercation with Roy. I mentioned my sister's shopping trip, the dancing at the bar, and the deal Ellie had with her deployed boyfriend.\n\nWhen I started to get into the details of what happened after-hours at the lingerie shop, Kelly wanted to get out of her car and go into her apartment. I didn't let her. I made her finger herself to two orgasms in the complex parking lot first. \n\nOnce she got inside, I made her strip naked, take a banana from her kitchen and bend over the back of her couch. As I finished with the lingerie store details and progressed into what happened in my hotel room, I made her fuck herself with the banana, only letting her cum when Ellie did in my tale. \n\nShe'd cum five times by the time I was finished. I was hard as a rock in my shorts, but I was only five minutes from the restaurant now, so there was no way I could do anything about it. \n\n\"There's something else you should know,\" I said. \"As I left this morning, she asked if she could have phone sex with me.\"\n\n\"Brad, I don't think-\"\n\n\"Relax,\" I said. \"I told her it was a possibility down the road, but I also told her that until we'd discussed what happened with our partners, it was a good idea not to do anything else. In the meantime, I gave her your phone number.\"\n\n\"You what?\" she asked. She didn't sound mad, at least.\n\n\"It's ok, hon,\" I said. \"She won't use it until I give her the okay. I figured she could make a new friend, and if you're okay with her, maybe we could both talk to her on the phone after I get back. Completely up to you, though.\"\n\n\"Hmmm, maybe,\" Kelly said, clearly in the post-orgasm basking stage. \"She sounds like a kindred spirit, and I have no idea what I would do if you were suddenly gone for most of a year. Tell her she can call me whenever.\"\n\n\"Will do,\" I said as I pulled into the restaurant. \n\n\"I'm glad things are okay between us, Brad,\" she said. \"And thank you for story time. This was maybe the best one yet.\"\n\nI had no idea I'd have even more to tell her in a few hours.\n\n******************\n\n\"You ever been fucked so good that you blacked out?\"\n\nThe pale blonde grinned sheepishly as she looked at the ground and shook her head.\n\n\"Seriously?\" Isaac asked. \"Never?\"\n\nShe made eye contact with him, but couldn't hold it for long. \"Nope.\"\n\n\"You haven't been with the right dude,\" Isaac continued.\n\n\"How would you even do that?\" she asked.\n\n\"Three things,\" he said. \"You have to have the right equipment. You have to know how to use it. And you have to use all three holes.\"\n\nShe turned a shade of red usually reserved for Porsches. Josh nearly choked on a curly fry, and Derrick had the good sense to turn his head to the left before he spit out his Bud Light, so as not to soak me with it. \n\nMe? I just laughed a little and watched the girl to see how she'd take it.\n\nHer name was Hannah, and she was the standard-issue Hooters girl. She had an incredible body with smallish boobs that looked bigger with that tight, white tank top stretched across them. Her face was average but still pretty, and she couldn't have been more than a year out of high school. She talked like a valley girl and didn't know how to turn off her flirt switch. \n\nShe was just starting to realize she'd bitten off more than she could chew with Isaac, though. I'd seen him flirt with nuns. He'd once talked an entire group of lesbians into making out with a bunch of drunk dudes on Spring Break. Hannah thought she was charming a customer into giving her a bigger tip, but before she even realized, Isaac had her talking about her sex. He'd teased her about whether she was even old enough to work at a place like this, and when she'd answered by telling him she had more experience than he thought... well, that was basically like Christmas morning for him. \n\nHe started out with a few basic questions before turning to his big winner, which I'd heard him use on multiple occasions with lots of success. Very rarely did a girl say yes, and even those who did were intrigued by Isaac's confidence that he could make it happen so easily. In Hannah's case, it still had her red in the face and flustered.\n\n\"How could you do that?\" she asked. \"I mean, without having another person there?\"\n\n\"That's certainly an option,\" Isaac replied, eliciting another glance at the floor. \"But not the only one. You said you had some experience. Surely a naughty girl like yourself has toys. You probably have some in your purse right now, or in your glove box.\"\n\nShe didn't answer, but she didn't need to. Her widening eyes and flushed face told us all we needed to know.\n\n\"That's what I thought,\" Isaac continued. \"All it takes is a little creativity, a lot of flexibility, and an open mind.\"\n\nShe was about to reply when a customer at a nearby table got her attention, so she told us she'd be back. All four of us watched her leave.\n\n\"Why you flirting so hardcore, man?\" Josh asked. Thanks to our bet, he'd had more to drink than anyone at Wrigley, and he hadn't slowed down any at the restaurant, even though he was on his own dime now. \"I mean, I'm impressed, but I thought you said you were married to a Victoria's Secret model. Must be one of the rare ugly ones if you're trying to pick this chick up.\"\n\nIsaac just laughed and threw me a look. \"Nah, man, I'm just having a little fun. I don't need it anymore, but it's nice to know I still have the game.\"\n\nWe bullshitted idly over the next few minutes and finally finished our food. Hannah brought us the checks, looking as confident and flirtatious as she'd been before her conversation with Isaac. He might have thrown her off her game a little bit, but a few minutes of charming other customers had gotten her back to normal.\n\nJust one question from Isaac broke her right back down.\n\n\"So what kind of toys do you like?\"\n\nWe were all locked in and listening for her answer - an answer it was clear she wasn't going to give.\n\n\"She doesn't want to say, Isaac,\" I said, jumping in for the first time. \"Her boss might hear her using all those dirty, naughty words.\"\n\n\"Yeah, Brad, you're right,\" he said, playing off of me seamlessly. We'd done this more than once back in San Antonio. \"I'll use 'em then. Make it a yes-or-no question. So, in your purse, you have a vibrator, right?\"\n\nI didn't think her face could get any redder, but it did. She nodded.\n\n\"Kinda figured that,\" Isaac said, nonchalantly. \"Lemme see. In the glove box, a dildo, maybe six or seven inches at most, probably all you can fit in there.\"\n\n\"In the trunk,\" she said quietly. \n\n\"In the trunk?\" I repeated. \"Why in the trunk?\"\n\n\"In a bag I keep for workouts,\" she said. \"No space limit in there. It's about nine inches.\"\n\nIsaac's face lit up. \"Ok, then,\" he said. \"I'm a little impressed now. Now you just gotta find somebody to help you use them right.\"\n\n\"You know anyone?\" she fired back. \n\n\"I think I might,\" he grinned.\n\n\"You'll have to introduce me sometime,\" she said. I didn't know how Isaac would respond - he might flirt a lot, but he was faithful to his wife. Hannah either decided this was getting out of hand or took his lack of response as a sign that she won, because she started walking away. \"You guys have a great night.\"\n\nAgain, all four of us dutifully watched her leave. It wasn't the best ass I'd ever seen, but it was clad in tight orange spandex, so it had my attention. As we filled out our receipts, Josh looked over at Isaac's and started to give him crap.\n\n\"Dude, you put your number on it,\" he exclaimed. \"Y'all gave me crap for cheating, but at least I'm not married.\"\n\nDerrick and Josh continued to rag on Isaac, who just grinned and shrugged it off. I didn't jump in, because I saw whose number he wrote.\n\n***************************\n\nHotels were getting old, and I still had a couple more nights to go before I didn't have to stay in them anymore. Isaac invited me to stay over at his parents' house, but I didn't for a couple of reasons. For one, a bunch of his family was back in town and staying there too, so the only spot for me was on the living room floor. The other, more important reason was Kelly. With the kind of phone call we had planned for that evening, privacy was a must.\n\nWe didn't talk about Tyler, or my road trip, or my plans when I got home, or her plans for escaping the fast-food business, or any of the other external issues in our lives. Instead, we chose to focus on the thing that drew us together in the first place. After the pent-up frustration of the last couple of days, we both had some steam to blow off.\n\nI told her the whole Ellie story again, but I substituted Kelly in the starring role and told it as if it were she and I fucking on the floor of the lingerie store. It made her cum three times. She wanted to relive our steamy three-way phone call with Jenny in Indianapolis, so I made her cum a few more times from that before finally joining her.\n\nIt was 1 a.m. when we called it a night, due to her working the early shift the following morning. After a quick check of SportsCenter, I tucked myself into bed. I was just about asleep when my phone rang.\n\n\"Hello?\" I answered without checking the caller ID. \n\n\"Hi,\" the voice said. It was female and it was timid, and it made me sit up a little.\n\n\"Who is this?\" I asked.\n\n\"It's Hannah,\" she said. \"From Hooters.\"\n\nI almost laughed out loud, but I didn't. Of course, I'd seen Isaac write my phone number down on his receipt, but I didn't really expect the girl to call. \n\n\"Is this Isaac?\" she asked.\n\n\"No,\" I answered. \"I'm Brad. I was sitting across from Isaac at the restaurant.\"\n\n\"Oh!\" she exclaimed. \"I'm sorry! He, uh, kinda made some promises, and...\" she trailed off.\n\n\"I know,\" I said. \"I was there. And he wrote my phone number down for a reason.\"\n\n\"Oh,\" she said, sounding surprised now. I waited, and then the recognition kicked in. \"Oh.\"\n\nAs it usually was, being forward was the best move here.\n\n\"I'm staying at the Comfort Inn and Suites just down the street from Hooters,\" I said. \"Room 221. You want to come by?\"\n\n\"Umm,\" she hesitated. Everything Isaac had said at the restaurant was true, but it was more than just what you could do physically. As I'd learned on this trip, most women preferred a man who could take charge of a sexual situation, and that only made the sex better.\n\n\"It's your call. I can't force you,\" I said. \"But if you're coming, be here in the next 10 minutes.\"\n\n\"Okay?\" It was definitely more of a question than an answer, but I had more.\n\n\"And Hannah?\"\n\n\"Yeah?\"\n\n\"If you do come, bring your toys in with you,\" I said. \"And don't plan on going home until the morning.\"\n\nIt was barely audible, but I heard it - she moaned into the phone. I didn't even bother asking again.\n\n\"I'll see you in a few.\"\n\nI got out of bed and turned the lights on, but stopped short of putting my clothes back on. I didn't plan to do much talking when she arrived, so my boxers were just fine.\n\nA few moments later, I heard a timid knock at the door. I just waited. When she knocked the second time, it was a lot stronger. I opened the door.\n\n\"Hi, Hannah,\" I said, motioning her in. She still wore her Hooters outfit, and she carried a black duffel bag. As soon as she was inside, I pushed her slight frame up against the door and forced my tongue into her mouth. She whimpered in surprise, but she returned my kiss enthusiastically. I could taste cherry lip gloss as I sucked her top lip into my mouth.\n\n\"Wow,\" she breathed when I finally let her up. \"What about-\"\n\nThis time I pulled her toward me, wrapping my fingers tightly in her sandy blonde hair. She wasn't as surprised this time, and instead of a whimper, she rewarded me by moaning into my mouth.\n\n\"We'll talk later,\" I said, and she nodded. I picked her up and carried her over to the king-sized bed, knocking her bag to the floor as I went. Her halter top rode up as I laid her on the bed, and I immediately attacked her exposed stomach, running my tongue all over the taut skin as she squirmed and giggled.\n\n\"I'm ticklish,\" she said with a sly laugh.\n\n\"I can see that,\" I replied. Isaac hadn't held back on the promises he'd made, and I intended to do my best to follow through. So, I set about uncovering and exploring every inch of her barely legal body. Her top was the first to go, followed by the flimsy white bra she wore underneath. At the restaurant, I'd thought her boobs looked bigger than they actually were, but she had legitimate C-cups trapped underneath that tight tank top. I kissed up and down each arm and across her collar bones before moving down her chest. I trailed my tongue down the valley all the way to her belly button, and I spent a lot of time licking and sucking all over her tits. I carefully avoided her small, pink nipples, and she moaned in frustration each time I got close before moving away. \n\nI used my teeth to slide the famous orange shorts down her long, toned legs, and when I went back to her waist to remove those famous tan stockings, I was surprised to find that they were all that stood between me and her clean-shaven pussy.\n\n\"Are you always this naughty?\" I asked, hooking my thumbs in the stockings and slowly rolling them down.\n\nShe giggled. \"Yes, but it's more comfortable, too. About half the girls at our restaurant go commando. The rest wear thongs. You - OH!\"\n\nI immediately sucked her clit into my mouth, grinning inwardly at her reaction. I knew after the way I took my time with her upper body, she'd be expecting me to do the same below the waist, too. So, I attacked her pussy feverishly, lavishing her clit with long strokes of my tongue and rubbing my stubbled chin back and forth against her lips. I hadn't even gotten my tongue into her pussy yet, but she was soaking my face with her juices.\n\n\"Jesus, Hannah,\" I said between licks. \"Have you been thinking about this all night, or am I just pushing all your buttons?\"\n\n\"Wanted this all night,\" she managed to spit out. \"Tongue is... fuck, Brad!\" I felt her hand tighten in my hair as her legs tensed up. I eased up to let her answer. \"Your tongue is amazing, and I've never had my pussy eaten by a guy before.\"\n\nPart of me wanted to cuss out all the men in north central Illinois for being stupid enough to have never tasted this girl's pussy. The other part of me was intrigued by the 'by a guy' part of her response.\n\n\"Nobody's eaten it in a few months, so please,\" she begged. I'd only gone right at her pussy to throw her off - I had every intention of continuing down her body before I let her have an orgasm. The desperation in her voice, though, made me change my mind. This was all about maximizing her pleasure, and taking the edge off right now would let her enjoy the rest of the night.\n\nI pushed my thumb down onto her clit as I finally thrust my tongue deep into her slick hole. Her pussy inundated me with juices as I tonguefucked her, and I could hear the short, clipped breaths she was drawing. She didn't make a whole lot of noise, but it was still easy to tell when she came. Her whole body tensed up like a 2x4, and she gripped the blanket so hard her knuckles were white. Thankfully I had her legs pinned to the bed with my upper body, or she might have tried to choke me to death.\n\n\"Not a screamer, huh?\" I asked when she finally relaxed.\n\n\"That was one of the best orgasms I ever had,\" she said. \"But, no, I've never made a lot of noise.\"\n\n\"You will by the time I'm done,\" I replied. \"That was just the beginning.\" \n\nHer eyes widened a little as she smiled. \"That's why I'm here.\"\n\nI grabbed her duffel bag off the floor. \"Turn over onto your stomach while I see what you brought for me to play with.\" I dumped the contents out onto the dresser as she rolled over. There were two vibrators, one a small silver bullet and the other a six-inch purple one with multiple speeds and a clit massager. There was also a longer flesh-colored dildo; I assumed it was the one she'd told Isaac about. She'd also brought a bottle of lube and several condoms, in addition to some clothes. I took the longer vibrator and the lube and went back to the bed. Hannah was face down with her back arched slightly and her tight, well-toned ass maybe eight inches off the blanket.\n\n\"Very good, Hannah,\" I said. \"You know how to do what you're told. Now, relax and enjoy this.\"\n\nI turned the vibrator to its lowest setting and started at her ankle, running the toy slowly up her calf. She giggled and writhed when I went behind her knee, but I didn't linger, instead moving up her thigh and onto her ass. I repeated the process on her other leg and then went back and forth a few more times. When I was ready to move on, I left the vibrator between her ass cheeks, ensuring it was buzzing right on her pink, puckered hole. I then went back to her legs, using my hands to give her a good, legitimate lower body massage.\n\nAfter a few minutes, Hannah started grinding her pussy into the mattress and clinching the vibrator tight between her cheeks. When she slipped a hand underneath to work on her clit, I stopped her.\n\n\"Uh uh,\" I said, lightly swatting her ass. \"That's mine. Hands off.\"",
        "She whimpered but did as she was told. I spent a few more moments kneading her thighs, then started a vigorous rubdown of her ass cheeks. With each circle, my thumbs got closer and closer to the vibrator, still buzzing away on her ass. I let my fingers get as close to her pussy lips as they could without actually touching them.\n\n\"Driving me crazy,\" she muttered.\n\n\"I know,\" I answered. \n\nI knelt next to Hannah and pushed up on her thighs until she was on her hands and knees. I removed the vibrator and put it in her left hand.\n\n\"Use this only on your clit, and only on the low setting,\" I said. \"And don't cum until I say so.\"\n\nShe mewled a response, and as soon as I felt the vibrations on her clit, I slipped two fingers into her pussy. I didn't start moving them just yet, though.\n\n\"Better get used to them, Hannah,\" I said. \"My cock is a lot bigger.\"\n\nJust when she got comfortable, I started moving my fingers gently in and out of her twat. I was purposely distracting her from what came next. Despite Isaac's talk at the restaurant about using all three holes, I wasn't sure how she'd handle me playing with her ass. Kelly had wanted me to practice, and if she was willing, Hannah was going to be my guinea pig. \n\nI leaned down and drug my tongue from her tailbone all the way to my fingers. When I passed over her asshole, she gave me a small shriek.\n\n\"What the hell was that?\" she moaned.\n\n\"You're a smart girl, Hannah,\" I said. \"Don't ask stupid questions. Just enjoy it.\"\n\nOf course, if she'd raised a serious objection, I would have quit. But she didn't, and I went right back to licking her ass. I'd had anal sex before, but this was the first time I'd licked a girl's ass. There was no real taste to it, just the same sweat-on-skin scent I'd detected when I'd been eating her pussy. I really enjoyed the way she bucked and spasmed every time I made contact though, and I made mental note to try it out on Kelly.\n\n\"You ready to cum?\" I mumbled into her ass after about five minutes.\n\n\"Fuck, yes,\" she replied.\n\n\"Sucks for you,\" I answered, and she groaned as I pulled my fingers and tongue away from her, leaving her with just light vibration on her clit. \"In a few seconds, I'm going to give you a rhythm. I want you to use it to count out loud to 50,\" I said. \"When you get there, you can cum.\"\n\n\"Ok?\" she asked, clearly not sure what I meant. She figured it out a few seconds later, when I pushed my cock all the way into her sopping pussy from behind. True to what she'd said before, she didn't make any noise, but she did audibly expel all the air from her lungs.\n\n\"That was one,\" I said. I pulled all the way out, waited about 10 seconds, and then drove my cock home again.\n\n\"Two,\" she moaned. I did the same thing a few more times, until she was at seven. I gave her six quick, short strokes, throwing her count off a little.\n\n\"C'mon, Hannah,\" I said. \"The same pace is boring. I have to mix it up a little bit. Try to keep up.\"\n\nI pushed back inside her and bottomed out for a few seconds. I knew I was teasing her, but I needed a few seconds to grab the lube. She was still facing the headboard, so she didn't see me squirt it all over my fingertips.\n\nI fucked her for another minute, using a few quick thrusts followed by long, slow strokes. When she hit 25, I slipped my right index finger an inch into her ass. She yelped and whipped her head back toward me. \n\n\"Fuck, that's tight,\" she said.\n\n\"Gonna get a lot tighter in a little bit,\" I promised. This time when her eyes widened, it was in surprise.\n\n\"I don't know if that's going to work,\" she hesitated.\n\n\"It will,\" I answered. \"If you want it to.\"\n\n\"I do, but...\"\n\n\"Then shhh,\" I said. \"You're trying to cum, remember?\"\n\nI held my cock in place while I wiggled the finger around, fucking her ass with it and giving her time to adjust. When I thought she was ready, I started up a slow and steady pace with my cock, alternating my thrusts into her pussy with my finger in her ass. When she reached 45, I went for broke, pounding her pussy furiously and leaving my finger lodged in her ass.\n\nShe stepped all over the last few numbers, calling out things I weren't sure fell into any language. When she hit 50, though, her body collapsed as she let herself erupt.\n\n\"Cum for me, Hannah,\" I called out, though she was clearly already doing so. Her body spasmed against the bed, and her ass clamped down on my finger as the orgasm coursed through her. It was a lot stronger than the first one, but not nearly as strong as she was capable of. When she relaxed a little, I pulled my fingers and cock from her body and stood up, dropping my boxers on the floor before getting back on the bed with her.\n\n\"Back up on your hands and knees,\" I said. She groaned a little, but pulled herself up to the doggystyle position again. \"Remember what Isaac said about using all three holes?\" I asked, and she nodded. \"Well, we've used two. Time to use the third for a while.\"\n\nShe looked back and saw my cock waving lewdly in front of me, still wet with her juices. She licked her lips.\n\n\"Bring it over here,\" she growled. I laid down on the bed and pulled her on top of me in a 69. She immediately gobbled as much of my cock as she could. \n\n\"Don't feel bad when you don't make me cum,\" I said.\n\n\"Who says I won't make you cum?\" she asked.\n\n\"You'll be too busy doing it yourself.\"\n\nWith that, I plunged my still-slick finger back into her asshole and shoved my tongue deep into her pussy. I felt her moan around my cock, but I did my best to ignore what she was doing. She'd clearly had some practice at giving head for being so young, but I'd run into some of the best ever on this trip, so I wasn't too worried about losing it before I'd taken good care of her. I just wanted her to get the feel of all three holes being filled at once. Chad, Russ and I had done that to a Navy girl who lived one apartment building over from us, and she'd stayed passed out for so long that we were starting to talk about calling 911 before she finally woke up. This wouldn't be the same since I didn't have three cocks, but I wanted her to enjoy it anyway.\n\nHannah proved to be multi-orgasmic. She came on my tongue within about five minutes, and when I stopped to give my lips a short rest, she came again just from me finger-fucking her tight asshole. She was determined, though, so she kept attacking my cock as soon as she recovered from each orgasm. I had no intention of cumming in her mouth, but there was no harm in enjoying her enthusiastic attempts.\n\nI kept my finger in her ass but stopped moving it for the time being. Instead, I used my right hand to lightly swat her ass. I expected a reaction, but not the one I got.\n\n\"I would say you hit like a girl,\" she said, her eyes twinkling as she briefly pulled up from my cock and looked over her shoulder at me. \"But even my ex-girlfriend hits harder than you.\"\n\nShe had just barely slipped my cock back between her lips when I let loose with the hardest slap I could manage while laying on my back. She screamed out around my dick, and she bit down just a little in surprise.\n\n\"You were saying?\" I asked, doing the same to the other asscheek. She screamed again, but after two or three more swats I could definitely detect a strong moan buried in her shouts. Soon, I pulled the finger from her ass and used both hands to spank her ass at the same time.\n\nHer pussy was creaming again on my chest, so I knew she was seriously enjoying what I was doing. She lost her focus on my cock as her ass grew redder and more sore, but that was ok with me. I didn't want to cum, and I was already plenty hard.\n\n\"You like me turning your little tan ass red, don't you?\" I asked, but got no response, so I spanked her harder. \"When people ask a question, Hannah, you're supposed to answer \"\n\n\"Fuck, Brad,\" she moaned and began grinding her pussy on my chest. \"You've got me so hot.\"\n\n\"You want to cum again?\" I asked, knowing it was a stupid question.\n\n\"Fuck, yes,\" she groaned.\n\n\"Go ahead, then,\" I said. \"Just from what you're doing there, though.\"\n\nShe didn't even try to argue. She just ground her pussy against my pecs even more desperately, and I didn't even stop her when she forced her right hand between our bodies and rubbed her clit. I squeezed her red, throbbing ass hard with both hands, stopping every so often to lay another smack. It took her another few minutes, but she came for a fifth time.\n\n\"You're such a hot, greedy, sexy bitch,\" I said. I didn't think she'd have a problem with the name-calling in the heat of the moment, and her smile told me I was right.\n\n\"I'm trying to get you off, too,\" she moaned, collapsing onto my legs. \"Not my fault you're so fucking stubborn.\"\n\n\"I have other ideas for how I want to get off,\" I said.\n\n\"Yeah?\" she asked. \"Care to share?\"\n\n\"I'd rather show.\" With that, I rolled her off onto the bed and back into the doggystyle position. I grabbed her lube, and while I slipped a condom on, I poured a liberal amount of it onto her ass.\n\n\"Cold,\" she said, gasping.\n\n\"Not for long,\" I replied, pouring lube onto my rubber-encased cock as well. \"Guessing you've never had a cock in your ass before, right?\"\n\nShe shook her head without looking back, and I felt her body tense up a little.\n\n\"That's not going to help anything, Hannah,\" I said, gently massaging her lower back as I lined my cock up with her puckered hole. \"The more relaxed you are, the more you'll enjoy it. This will just be a warmup, ok? I promise I'll blow your mind in a few minutes, but right now, just get comfortable with my cock. This will be the only time tonight I'll go slowly and take it easy on you.\"\n\nHer blond hair bobbed up and down in response, so I slowly eased the head of my cock forward. There was some initial resistance, but the lubrication helped me slide in fairly quickly.\n\n\"That's the head,\" I said. \"Keep breathing, and just enjoy the sensation.\"\n\n\"Feel... so full,\" she stammered.\n\n\"Well then, buckle up, because there's more.\" If I wanted to make it completely painless, I could have spent half an hour pushing my cock into her ass, but with the condom on, I didn't know if I could stay hard that long. So I went at a decent pace, and was about halfway in within a few minutes.\n\n\"Hurts in such a nice way,\" she moaned. \"Feels like you're splitting me in two. I don't know how my body could like that, but...\"\n\n\"Don't think,\" I said. \"You're naked in bed with a guy who knows what he's doing. The only part of your brain you need right now is the part that will help you remember this tomorrow. The rest can go on break.\" \n\nShe couldn't form a coherent thought, so she just babbled something in response. I pulled out a couple of inches then slowly pushed back in. A few more of those, and I had my whole eight inches buried up her ass.\n\n\"Fuck, this is hot, baby,\" I said, admiring the view of her tight ass stretched across my cock. For emphasis, I grabbed my phone and snapped a picture. That got her attention, but I quickly explained. \"Just for me and you, hon.\" Not entirely true, but oh well.\n\n\"I can't believe.. whole cock in there,\" she stammered. \n\n\"You're doing great. I'm gonna fuck you slow for a couple more minutes, then we'll really get going.\"\n\nHer ass clung to my cock like a pair of vise grips and the pressure in my balls was mounting. I started to regret not letting her make me cum in her mouth, especially knowing what I had planned for the main event. Still, I'd been torturing her all night, so it was only fair that I get a little torture myself.\n\nHannah worked her hand and wrist furiously against her pussy, and after just a few more thrusts, she was at her boiling point again.\n\n\"Go ahead and cum, Hannah,\" I said. \"Cum with my big cock in your ass.\"\n\nShe did as I said, letting out a small shout into the pillow. That was the first real noise she'd made during an orgasm.\n\n\"You ready?\" I asked her, already knowing the answer.\n\n\"Please,\" she gasped, struggling mightily just to breath. \"Please just keep fucking me.\"\n\nI smiled and rolled us both onto our sides, in a spoon position, with my cock still buried in her ass. All of the toys were in a pile in front of her.\n\n\"Hand me the dildo, and grab the bullet vibrator,\" I said. A few seconds later, she put the long, flesh-colored dong in my hand. I lifted her top leg and fucked in and out of her ass a couple times just to hear her moans. \"Use your bottom hand to put that vibrator right on your clit, Hannah. Hold your leg up with the other hand.\"\n\nA few seconds passed before I heard the telltale buzzing of the bullet. She took her leg and raised it even higher than I'd been holding it. \n\n\"Take my cock now,\" I growled, then started forcefully fucking her ass, using long, deep strokes meant to bottom out each time. She was unprepared for my sudden vigor, and yelped a couple of times.\n\n\"Fuck, you're tearing me apart,\" she moaned.\n\n\"Yeah, but you've cum like 14 times,\" I said. \"The next time you complain will be the first time.\"\n\n\"Uh huh,\" she stuttered. I fucked her a couple more minutes, but the pressure was really started to build inside of me, and I wasn't sure how much longer I could last.\n\n\"Here it comes, Hannah,\" I said. I placed the long, thick dildo at the dripping opening of her pussy, and with two short, half-strokes, I bottomed it out in her pussy.\n\n\"FFUUUUUUUUUUCK!!\" she shouted, and I grinned wide enough that my cheeks hurt.\n\n\"Told you I'd make you scream,\" I said. The rhythm of fucking her ass and using my arm to fuck her pussy was a little clunky, but I managed to keep both going at a decent clip. Finally, I reached around her neck with my bottom hand, and stuffed three fingers in her mouth.\n\n\"There,\" I grunted into her ear, my voice barely above a whisper. \"Got something in each hole, don't you? Suck my fingers. Take that giant dildo up your pussy, and take my cock up your little virgin ass. You feel like a little used slut, don't you?\" I asked.\n\nShe nodded and said something completely unintelligible. I forced the fingers a little farther into her mouth and started working my hand and my cock as hard as I could.\n\nHer last scream was garbled by my fingers, but I knew she was coming. I was right there, too, and when she started biting my fingers with the intensity of her orgasm, the pain sent me over the edge.\n\n\"FUCK HANNAH!!\" I shouted, adding my voice to hers and waking up the whole hotel in the process. I didn't give a fuck. I felt blast after blast of my cum erupt into the condom, and the dildo slipped from my hand as I convulsed slightly. Hannah didn't seem to mind, riding out two or three aftershocks as I came down from my eruption.\n\nShe let her left leg go, and it collapsed against her right. I pulled my left hand from between them and slowly managed to extricate my fingers from the mouse trap that was her teeth. \n\n\"Thanks for at least leaving them attached,\" I said, grimacing as they throbbed. She'd left pretty serious teeth marks in my index, middle and ring fingers, but she could have drawn blood and it would have been worth it.\n\nShe didn't answer, and as I pulled my softening cock from her ass, I raised up and looked at her face.\n\nShe was passed out cold.\n\nI smiled as I got up to wash off. The condom was overflowing, which meant some of my cum had spilled over into her ass. She deserved nothing less for her first time. It made sense to me - I hadn't cum since Ellie's attack earlier that morning, and I'd gotten Kelly all worked up with my stories, not to mention torturing Hannah for the better part of two hours. \n\nI took a quick shower and returned to the bed to see that Hannah was sleeping peacefully. I thought about waking her up so she could clean up, but... meh. She'd earned a nap. I slid in behind her, and realized all at once that sleep was about to take me too. Before it did, though, I opened a text to Kelly and typed \"Wasn't expecting more tonight, but here ya go. Details coming soon.\" I attached the picture of my cock buried in Hannah's ass, hit send, and drifted off. \n\n***********\n\nAs always, vote, comment and send feedback. It's my paycheck - it keeps me going and makes me write faster. If you have any ideas for Brad's further escapades, please chime in. I have the rest of the days planned out, but a good author always makes room for a great idea. \n\nAlso, if there are any non-main characters in either of my series that you'd like to see a separate story on.. maybe their backstory, or what happens after Brad rolls through their town or Tim finishes head-shrinking them... please let me know. Reader interaction is excellent and necessary."
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "hooters",
        "hannah",
        "anal",
        "phone sex",
        "dildo",
        "teen"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-13"
}