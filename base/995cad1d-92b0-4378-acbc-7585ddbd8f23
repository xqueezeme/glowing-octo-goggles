{
    "title": "There and Back Again Ch. 041-042",
    "pages": [
        "Chapter Forty-One: Denerim Ho!\n\n\"After that, we can split up into groups to accomplish our tasks,\" Aedan continued. \"We need to check in with Brother Genitivi, deal with Marjolaine, maybe find some work to make a bit of coin, and Sierra wants to talk to a dwarf in the market district. Did I miss anything?\" He looked around expectantly. No one spoke. He nodded. \"Alright. I'd rather not come to Loghain's attention, if we can avoid it. Helmets for everyone at all times. Be careful! Now let's eat, and then get some sleep. We leave at first light.\"\n\nLeliana and Zevran started bickering good-naturedly about what we were going to have for supper. I thought to help, but realised I had a couple of things I needed to ask Aedan before we got to Denerim, just in case.\n\n\"Hey Aedan?\"\n\n\"Yes, little sister?\" He came over and plopped next to me, smiling tiredly.\n\n\"Little? Who says I'm little? For all you know, I'm your older sister.\"\n\n\"No way am I being the youngest of three! You're the baby, and that's official.\"\n\nI looked at him and mock-glared. \"Well you certainly act like the middle child, I'll give you that.\"\n\nAlistair, watching the banter, looked confused. \"How do middle children act?\"\n\nI sighed. \"You know, jokes aren't funny when you have to explain them. On Earth, there's a bunch of people who love to blame all their problems in life on being the middle child. Just...never mind.\" I shook my head. \"Anyway, I have some questions for you, Aedan.\"\n\nAedan grinned. \"What's that thing you say? Oh yeah. Hit me.\"\n\nI giggled, and punched him on the arm hard, making him wince and complain. Alistair guffawed and fell backwards, overbalanced in his heavy armour. This set off laughter all around the camp as Alistair flailed around on his back, legs askew, cursing indignantly while we laughed. Aedan rubbed his arm ruefully, and gave me a dirty look which I ignored because he couldn't hold it without his lips curling up into a grin. He finally gave up and joined in the laughter, then shuffled over to help me pull Alistair back upright. Once the hilarity had settled, I faced him again.\n\n\"Seriously, now. I need to know what you know about Dwarven nobility.\"\n\n\"What do you mean? From what you've said, you probably know more than I do.\"\n\nI stammered slightly, trying to think of a way to explain my dilemma without admitting that on Earth their lives were actually a game. They'd accepted the concept of a theatre performance, but I worried what they'd think if they knew just how it was treated.\n\n\"I...alright, so, in the performance, they show some of the things that are happening in other parts of Ferelden around the same time you met Duncan, Aedan. The thing is, I don't know how much of that is true, and how much might have been fabricated to fill out the details in the story. I know some of it is true -- it's how I knew Solona was in trouble in the Circle, for example -- but I don't know if they got the details correct.\"\n\nHis eyes were narrowed, his expression somewhat skeptical, but he didn't say anything. I knew that he knew I was hiding something. I hoped he'd let it go. Finally he nodded.\n\n\"What do you need to know?\"\n\n\"Alright, first...tell me, what are the names of King Endrin's children? Do you know?\"\n\nAedan scratched at his stubble irritably, face screwed up in concentration. \"I don't...the eldest is Trian, I remember that. And I think he had a sister and a brother, but I can't remember their names.\"\n\n\"Sereda and Bhelen.\" Leliana walked over and sank gracefully to the ground across from us. \"Bhelen is the youngest.\"\n\nI looked at her curiously, but she merely shrugged. \"Bard, remember? Politics are quite important in my line of work.\"\n\nI grinned at her. \"Thanks. And in all your political knowledge, I don't suppose you'd know what Sereda's general outlook was like? What sort of person -- er, dwarf -- she was?\"\n\n\"Not really, no. Though I heard a rumour once that she had a paramour from the Warrior Caste. Quite the scandal.\"\n\nI laughed. \"Leliana, I love you, you know that, right?\" She looked shocked and pleased. \"That's exactly what I needed to know. Listen, this dwarf I want to talk to? He's the warrior she was involved with.\"\n\nAedan interrupted. \"You keep saying 'was'. I remember you telling me about a conflict over the dwarven throne, but is Sereda involved?\"\n\nI shook my head. \"She's dead, I expect. Let me start at the beginning. Endrin had three children. Trian was expected to be the heir, but he was unpopular. Too snobbish, not diplomatic enough, too full of himself. Some of the Deshyrs -- the dwarven equivalent of a Landsmeet -- were muttering about putting Sereda on the throne instead, making Trian paranoid that she was trying to steal his crown. The youngest, Bhelen, took the opportunity to pit the two of them against each other, killing Trian and framing Sereda for it. Which, of course, neatly cleared the path for himself to take the throne. Sereda was sent into the Deep Roads alone to die, and her second, Gorim, was exiled and became a merchant.\n\n\"Unfortunately for Bhelen, Endrin figured it out before he died. There's even a rumour that Bhelen poisoned his father to hurry things along. Either way, before he died, Endrin named another noble to be his heir, once he realised what Bhelen had done. Now there's a fight between that noble, a Lord Harrowmont, and Bhelen. When we get there, you're going to get to choose who becomes King, eventually. The problem is, you've got two crappy choices.\"\n\nI rolled my eyes as they all snickered at my earth language. \"Okay, okay. So Bhelen is a big sleaze. Killing his siblings, and possibly his father...not the sort I'd want as King. Harrowmont, on the other hand, is completely honourable. Sort of insufferably so, to be honest. But Harrowmont is too stuffy, too traditional. The dwarves are practically on the verge of extinction from the darkspawn, and their traditions are making it impossible for anything to change for the better. Their poor, the casteless, are treated worse than elves in the Alienage, and that's saying something. No one can choose, or change their station, and the major form of social advancement is for a female to get pregnant with a bastard child from a higher caste and hope it is a boy. Anyone who ever does anything wrong is banished to the surface and never allowed to return. They are slowly destroying themselves.\n\n\"Harrowmont will doom the dwarves, and honestly, he doesn't have enough support to stay on the throne for long. On the other hand, Bhelen will start to rectify some of the problems if he becomes King, but that still means putting a disgusting excuse for a person on the throne. Plus he'll disband the council and become a despot when he meets any opposition.\"\n\n\"Two crappy choices indeed -- the honourable man who's a terrible King, or the terrible man who makes a not terrible but not wonderful King. So what are you hoping to accomplish by approaching the dwarf in Denerim?\" Aedan looked uncomfortable, shifting around and fidgeting. I didn't blame him -- I wouldn't want to make that choice either.\n\n\"I don't...know, for sure. Maybe just some perspective. And...I thought we could offer to bring him with us. He's a talented warrior, and he might like the chance to see Orzammar again. Maybe he'd even want to be a Grey Warden? I don't know. But I was just thinking that any information he can offer would be good, you know?\"\n\nWe all sat quietly, for a moment, considering. I was mostly procrastinating. I had something else to ask Aedan, and I knew it would be even worse than the previous conversation. Finally I sighed. I reached out to rest my hand on Aedan's.\n\n\"I have another question to ask.\"\n\n\"You do know that when you hold my hand in sympathy before the conversation even starts, it sets a certain...dismal tone to the whole thing, right?\"\n\n\"Sorry. You're right, you're not going to like this one.\"\n\n\"Just go on, then, and ask whatever it is that's going to make me pull out my hair and gnash my teeth.\"\n\n\"I...\" I hesitated. Alistair took my other hand in silent support, and I sent him a small smile of thanks. \"Do you have any idea where Nathaniel Howe is, in the Free Marches?\"\n\nI'd never seen Aedan's expression change so fast. From bemused and puzzled, to spiteful and murderous in two words. Well done. He stared at the fire, refusing to meet my gaze.\n\n\"I never knew Nathaniel well. He and Fergus were friends. Whenever that man visited, I was stuck entertaining Thomas and Delilah.\" His anger was tightly controlled, but it frightened me. I tightened my grip on Aedan's hand, trying to draw him into looking at me.\n\n\"I know, I know. Rendon Howe killed your family. Our family.\" I corrected myself with a grimace. \"He deserves to die, preferably slowly. I get it. But Aedan...Nate doesn't know what his father is doing. He's been in the Free Marches for a decade, and Rendon sent him there because he knew Nathaniel was too honourable to follow in his footsteps. He's not to blame for what happened. He's actually...a good guy, surprisingly.\"\n\nAedan glanced at me, surprise warring with the ongoing anger on his face. \"You know Nathaniel?\"\n\nI nodded. \"He was in the performance. He came back wanting to kill you, not knowing the truth. You ended up conscripting him into the Grey Wardens. You became friends, eventually.\"\n\nAedan's shoulders were tense, his body coiled as if to spring, and he looked away from me again. \"If I ever become friends with that...that...murderer's son, just put me out of my misery. Slit my throat, or something. To answer your question, no, I don't know where he is. I assumed Kirkwall, but it could have been anywhere, I suppose.\"\n\nHe leapt to his feet, obviously agitated, his eyes clouded. \"I need to...walk. I'll be back.\"\n\nHe stalked off, anger emanating from him in waves. Prince jumped up and jogged over to his side, Aedan's hand automatically touching his head as they left camp. I made eye contact with Zevran, who nodded and silently slipped into the woods to follow.\n\nI slumped, and Alistair's armoured arm wrapped around me. I turned into him and pressed my face into his neck, more than grateful for his soothing presence. His strong hand rubbed my neck gently, and I hummed.\n\n\"He will come around, you know.\" Alistair kept kneading the tense muscles in my neck. I dropped my head, giving him better access.\n\n\"I know. And he will like Nate, I'm sure, after a while. It's hard for me to see it from his perspective. They may technically have been my parents, but they didn't raise me. It doesn't hit me the same way.\"\n\nWe sat quietly for a few more minutes, when it occurred to me I had a question for someone else. I looked up at the beautiful bard watching us with a wistful smile.\n\n\"Hey Leli?\"\n\n\"Yes?\"\n\n\"In Lothering...did you know many of the townsfolk?\"\n\n\"Many, but not well. I spent most of my time in solitude or with the other sisters. Why?\"\n\n\"Did you ever meet the Hawke family?\"\n\n\"I didn't, although I have heard of them. The oldest girl, Marian, was known to break up the odd bar fight that would break out in Dane's Refuge. Even the templars were in awe of her fighting skills -- she was apparently a talented warrior. Why?\"\n\n\"You just told me what I needed to know. Thanks.\"\n\nWe finished dinner, ate, and sat by the fire for a while, but Aedan didn't return. At one point Zevran came into camp briefly, grabbed food for the both of them, and slipped away into the shadows again. Afterwards Alistair and I took turns changing and collapsed into our tent. I couldn't sleep, at first; between worrying about Aedan and worrying about Denerim, my mind just wouldn't quiet down. Alistair was equally restless, and we just held each other quietly in the dark. I heard stirring when Aedan and Zevran finally returned to their tent, and then the camp was quiet.\n\nI must have fallen asleep at some point, because I woke with a start in the morning, jumping right out of my bedroll before I caught myself. It was still dim in the tent, early morning light just starting to filter through the canvas. I glanced over at Alistair to see him still sleeping peacefully. He was curled on his side around a space where I'd obviously spent the night. His face was angelic, asleep; if he wouldn't have killed me for it, I'd have called him cute. As it was, his chiselled features filled me with a warmth that was anything but maternal, and I couldn't help myself. I carefully eased myself back into the space I'd vacated, enjoying his warmth surrounding me. He shifted slightly, clutching me to him, and I smiled. I reached up to kiss his chin, then trailed kisses down the side of his neck softly. He woke when my lips reached the neck of his tunic, his hand coming up to fist in my hair and pull my mouth up to his. His lips were soft, his tongue teasing against my own for entry, and I had just moaned and deepened the kiss when someone rapped on the side of the tent with a stick.\n\n\"Rise and shine, lovebirds! Our illustrious, alluring, incredibly handsome leader tells me it is time to move.\"\n\nAlistair pulled away from me with a disappointed moan. I just sighed.\n\n\"Zevran, having my brother called 'alluring' in front of me is not making me want to get out of this tent any faster. You know that, right?\"\n\nA mocking laugh was my only response. Alistair wriggled into a sitting position, stretching and yawning like a cat, making me giggle. I leaned out of the way while he grabbed his armour and pulled it on over the clothes he'd worn to sleep. I arched an eyebrow at him.\n\n\"What? We will be staying at an inn tonight. We can have them wash our clothes. Does it really matter how clean they are until then?\"\n\n\"Ooh. I wonder if they have any nice smelling soap to wash them in.\"\n\n\"If the place is called the Pearl, it must be fairly nice, right? I'm sure they do.\"\n\nI snickered. Just you wait. \"Ah, yes. Nice. Now would you hurry up so I can get changed? I'm not wearing a nightgown under my armour, thanks.\"\n\nIt took probably fifteen minutes for those of us going into Denerim to be ready. We were leaving our tents and camping gear, but we had loaded up all our packs with all the trinkets, armour pieces, and odds and ends Aedan had found and squirreled away during our travels. I guess Bodahn's discount was less epic than advertised. My pack weighed a ton, and I felt bad -- I knew I wouldn't be able to carry it the whole way, so Alistair was going to have to carry two. Though watching him pick them up was always amazing -- he lifted both, awkwardly, in one hand like they were nothing. I wonder if I can get saddlebags made for Prince! I giggled and shrugged off a strange look from Aedan, who seemed to be acting as though the discussion the night before had never happened. I was fine to try to forget it -- not that it would change what I had planned.\n\nWe all put our helmets on. Leliana and I shared an anxious glance, remembering the lice debacle, but then suited up. Aedan had even found some sort of light leather armour for Wynne. I doubted it would be very functional for her, but I also doubted most mercenary groups had an obvious Circle mage with them. Zevran was quick to compliment her on the outfit, and I thought she might actually throttle him. Ten more minutes of learning amusing Fereldan curse-words later, and we were ready to go.\n\nIt took only an hour to walk from our secluded valley to the gates. We stopped when the gates had just become visible to watch for a few minutes. Morrigan had been right -- there were frequently groups of armoured men passing through with no one stopping them. Several heavily-guarded caravans also went through. A closed carriage -- pulled by the first horses I'd seen in Ferelden -- had more guards than the biggest caravan, and I wondered who was in it. Anora? A carriage didn't seem Loghain's style. Aedan signaled us all to move forward once it was out of sight. We marched along almost in step, Aedan and Alistair leading, and I successfully managed not to gape as we passed under the enormous portcullis. I'd never been in a castle, living in Canada my whole life, and the stonework was fascinating to me. It felt a bit like wandering into medieval England or something.\n\nThe portcullis lead into an enormous open square. It vaguely reminded me of the market district from the game, but much, much busier. The chantry occupied one entire edge of the square, all wrought iron and dark stone, looking quite foreboding. It was nothing at all like the quaint churches I'd seen pictures of in medieval England. The middle of the square was a virtual labyrinth of stalls, all occupied by very loud, vehement people insisting on the quality of their wares. There were hundreds of people wandering through, haggling with vendors and talking amongst themselves. Armour clanking, groups of guards and mercenaries hurried around the edges. The amount of noise in the walled-in area was deafening, and I was disoriented for a moment as it overtook me.\n\nThe thing that stood out the most, though, was the smell. It was a combination of boys' locker room, outhouse, and rotten eggs, and I had to work at suppressing a gag. I could almost taste it on my tongue when I tried breathing through my mouth, and that was worse. I couldn't see any of my companions' faces, but based on the hesitation of our group at the edge of the open market, it wasn't pleasant for any of us. I wondered how long it would take until my poor nose adjusted. I had expected wet dog, not...this.\n\nAedan finally took initiative and began leading us across the square. People squeezed around us on all sides as we were swallowed into the press, and the stink of unwashed human became even stronger. I put on hand on the back of Alistair's armour and held on for dear life, certain that if I were to trip, I'd be trampled before anyone could help me. Holding on had another benefit though -- I was able to look around far more than I otherwise would if I had to pay attention to where I was going. So I stared, thankful for the helm that hid my likely stunned expression.\n\nI noticed almost every stall had at least one armed guard, and the stalls with the most expensive items had several. I whispered to Leliana, who was practically rubbing against my back in an effort to stay close together, if that was normal, and she shook her head. I saw someone who couldn't have been anyone other than Sergeant Kylon standing at the edge of the throng, his face looking tired and frustrated. I pointed him out to Aedan -- I knew they'd never let me go with them, but he could offer some paying work later. I didn't see anyone who I could recognise as merchants from the game, but there were so many of them it would have been easy to overlook.\n\nAedan worked his way up to a stall and asked for Wade's Emporium. The merchant looked like he was about to shout at Aedan for wasting his time, but he took a second look at a group of six armoured, well-armed people wearing full helms and a mabari, and just mutely pointed. Wade's shop, as in game, was a small building, not a stall, and stood a little bit away from the busy central area. There were two guards standing outside the door, and they warned us not to make trouble, then stepped aside to let us in. There was another guard standing inside the door.\n\nAs we moved back to the counter where Herren stood, we could hear clanging from behind him, and in another moment we could see Wade himself, working at a forge. The surprisingly small man was throwing nasty looks in the direction of the guard, and appeared to be mumbling to himself, barely paying attention to the piece he was working on. I could see it was a shield -- an enormous one, bigger even than Alistair's. I wondered who carried such a thing. Without looking, totally engrossed in glaring at the guard, he shifted the shield and raised his hammer, and before anyone could cry out to stop him, he brought the hammer down on his own hand. His scream was horrific and made my ears hurt, and the armourer dropped to the ground, clutching at his wrist. There wasn't much blood, but his fingers were bent unnaturally and the whole thing already appeared to be swelling.",
        "With an oath, Herren raced to the back of the shop, dropping to the floor beside Wade and throwing his arms around the little man. Wade was keening now, a high-pitched wail of pain, and it made my jaw ache from how hard I was clenching my teeth. I found myself wrapped from behind in Alistair's arms just as I felt Wynne rush past. Aedan joined her, and Herren let the rogue herd him a few feet away while Wynne tenderly grasped Wade's mangled hand. Looking at it, I was sure that without healing magic, he would never work again. I felt Wynne's magic flare, and in moments the screaming stopped. When she released his hand, it looked back to normal.\n\nWynne helped him up, and he stood shakily, holding his hand out and staring at it in shock. Herren ran over and grabbed Wynne in a bear hug, spinning her around the room, and we all chuckled. Wynne's face was red but she looked pleased despite her embarrassment. The rest of us finally made it to the back of the store and officially met Wade and Herren. After introductions had been made -- using first names only, and avoiding mention of the Grey Wardens -- Herren hurried to the front, had words with the guard, who was ignoring the commotion and leaning lazily by the door, and after some yelling the guard left. Herren stuck his head outside, I assumed to talk to the two stationed there, and then came in and locked the door.\n\nThey actually offered us tea and to have a seat in the back room, which was where they lived. I was right -- they were a couple, at least if only one bed was any indication. We all crowded into their tiny living area, Wynne being given a chair while the rest of us sat on the floor, and Herren poured us tea. Only then did Wade go into his tale of woe in typical Wade style, with much gnashing of teeth and bemoaning his fate.\n\nHe told us that several weeks prior, Loghain had withdrawn his troops and most of the guards from the market. He had been using the army to maintain the peace, supplementing the few token guards (and many incapable younger sons of Denerim's nobility), but with riots in the streets and even the nobles in direct conflict, he had withdrawn all but Kylon and a handful of guards and thrown everything at protecting the Palace and quelling unrest in the area where most of the nobles resided. As a result, for a while, petty theft and organised crime had risen, most of the servants who worked outside the noble district stayed away, and the streets hadn't been swept or the sewers unclogged in weeks, thus the smell. The merchants had all taken to hiring mercenaries for protection. Of course, the more mercenaries there were in town, the more crime increased, and then the mercenaries had started banding together and extorting money from their former employers.\n\nStreet violence had rapidly disappeared -- no one wanted to pickpocket one of the mercenaries, and the different mercenary bands had fought their way into some sort of agreement -- but the extortion was ongoing. Wade had been distracted by the 'guards' they'd hired, who were now expecting protection money and not really protecting him anymore, and his injury had been the result.\n\nThey hadn't heard any news of what was happening in the noble's district, and the docks were unchanged, though many of the mercenaries had banded together and rented warehouses to bed down in instead of inn rooms, to my relief. I had suddenly pictured us unable to rent rooms. The Alienage was still closed, though it was apparently not that hard to sneak in given the lack of guards. Vaughn Kendalls had been reported deceased, and Howe was the Arl of Denerim.\n\nTo my surprise, Aedan admitted to Wade that they were Grey Wardens. He'd been the one most adamant that no one blurt that secret. I didn't think Wade and Herren would turn us in, especially with Wynne having healed him, but it still made me a bit nervous. Both men, however, were quite welcoming. They told us that one of the biggest bones of contention in the city was Loghain's claim that the Grey Wardens had betrayed the King -- apparently several of the nobles who'd been with the army vanguard had survived and contradicted his assertions. A couple of the more outspoken ones had been imprisoned within the Arl of Denerim's estate.\n\nAfter much discussion, we got down to the business that had brought us to the armourer in the first place -- armour. Wade insisted on doing the repairs on our armour for free, and after salivating after the drake scales and dragon scales we had brought, insisted on making armour for Aedan and Zevran from the drake, and some heavy plate for Alistair from the dragon scales. Aedan offered him money to bump our orders to the top of his list, but he refused that coin as well. They also offered to pay us quite well for the scavenged armour we were planning to sell -- Herren thought he might be able to pay the mercenaries in armour, and the pieces Wade couldn't repair he could use for parts. Wade and Herren were effusive in their thanks to us for Wynne's healing, and even Herren refused money, but we all felt a little like we were taking advantage.\n\nAedan looked thoughtful while Wade was discussing the weight of the armour with Alistair, and seemed to make up his mind on something. I raised my eyebrow at him, but he just shook his head. Wade took measurements on everyone whose armour he was making or repairing; for me, all he was doing was making some adjustments to the breastplate and repairing one torn bracer. Aedan had tried to convince me to get a heavier set of armour, but Wade actually helped me talk him out of it. Not only was I not strong enough to wear it, but what little skill I had in battle came from being mobile. His adjustments to my armour were mostly to enhance that mobility; decreasing it with heavier armour just didn't make sense. He loaned Leli a spare pair of leather pants until hers could be fixed.\n\nOnce we were finally set, we thanked Wade and Herren for their help and the information. We headed out, and I saw Aedan pull aside one of the mercenaries and talk to him quietly while we all filed through the door. We formed up and headed out into the chaos of the market. Now that we knew what was going on, things were much more obvious. The merchants were afraid of their own guards, and small groups of more heavily armed, intimidating looking mercenaries were circulating, stopping to talk with individual merchants. They didn't even try to hide the pouches of coin changing hands. Aedan's shoulders stiffened, and I knew we were probably all equally irritated.\n\nEven the Chantry had only a few templars guarding it, and standing in a line in front of them were more mercenaries. I wasn't religious, and definitely not Andrastian, but it sickened me to know that these people had so little respect as to shake down their own church. And that the church was afraid enough to allow it.\n\nAedan headed us out of the market towards the docks. We wandered initially through wide thoroughfares, populated only by small groups of people scurrying along; no one made eye contact, and several people skirted around us like we were wild animals. It didn't improve our impression of the mercenary groups any, if everyone was terrified of anyone in armour. Further from the market, the roads got narrower, and muddier. A few sketchy back alleys gave me the creeps, but either we looked intimidating enough or we just got lucky and we were left alone.\n\nAs we approached the docks, the areas we passed through got seedier and seedier. There was garbage in the street, the buildings were ramshackle and some looked like they were one strong wind from total collapse. I'd warned Alistair that we were headed to a brothel, much to everyone's disappointment --they had all been looking forward to watching Alistair figure it out on his own, but as amusing as that would have been, it didn't feel fair -- but despite that, his posture got more and more rigid. I couldn't see his face with the full helm, but I could imagine his eyebrows rising into his hairline. It made me giggle, and something similar must have occurred to Leli because she started giggling too.\n\nWe finally reached the Pearl, which was obvious from the hanging sign of an open oyster with a pearl in the middle. I tried not to shudder too hard when I realised they'd tried to make the pink part of the oyster resemble a woman's nether regions. Gross! I crossed my fingers that Alistair wouldn't notice. Mind you, given that he's probably never seen a woman's nethers, I doubt I have much to worry about. There were a couple of large, armoured men standing outside the door, letting people in. In contrast to the mercenaries in the market, these ones looked huge, alert, and efficient. I had no doubt these were the enforcers hired by the proprietors to protect their staff, not mercenaries. One of the men put a hand on Aedan's shoulder, and he threatened grave bodily harm if we misbehaved inside. Aedan nodded stiffly; I was guessing he was weighing the relative merits of beating the man to a pulp, but decided not to.\n\nAnxious, I followed everyone inside.\n\nI'd never been in a brothel. It was illegal, where I had lived, and even had it not been, it didn't hold a whole lot of appeal for me. The Pearl was nothing like I'd expected. At first glance, I'd have thought it was an Irish pub. It smelled of beer -- or was it ale? I'd never been much of a drinker and I wasn't clear on the difference -- and while the light was dim, you could still easily see. There was a duo playing music on a little stage in the corner, one with some sort of pipe, the other with a lute. There was a dance floor, and couples reeled around, laughing gaily. Most of the tables were cozy booths with candles in holders.\n\nWhen I looked again, though, certain things stood out. The tables were occupied by far more men than women, and it was clear few if any of the couples dancing were actually together -- they changed partners with almost every dance. The women were dressed provocatively, at least by Ferelden standards. There were none in lingerie, but the dresses were low cut in front and had high slits up the side, and garters with stockings were visible on most. And if you watched, asses were being grabbed all over the room if the women didn't jump quickly enough.\n\nThere were also what I assumed were male prostitutes, but they were a lot less prominently displayed, staying to the back, avoiding the dance floor. They were dressed sort of ridiculously, overall, in lacy clothes and tight pants, and there were one or two clear cross-dressers as well.\n\nPeriodically, after a whispered conversation, someone would grab one of the prostitutes and disappear through a door at the back, only to return several minutes later looking somewhat disheveled. Often the return was greeted with jeering and catcalls from the person's friends. The place wasn't completely full, but there was no shortage of clients, which surprised me given it was only mid-afternoon.\n\nAs we moved as a group across the room, the only one appearing even vaguely comfortable was Zevran. I clung to Alistair's hand, and Leliana and Wynne stuck close to the guys too. We drew a few speculative looks, but the armour made it clear we weren't working girls, and Alistair's and Aedan's hands on their weapons were clear enough threats that we were left alone. We approached the bar, and Aedan exchanged words with an older looking woman who I assumed to be Sanga, if memory served. They talked for a few minutes, and some coin was exchanged, then Aedan was handed three keys and we were pointed towards a different door leading to a steep set of stairs. There was a narrow hallway, and our rooms were at the end, clumped together. Wynne and Leliana were sharing a room with two narrow beds, while Aedan and Zevran shared one and Alistair and I shared another. No one had even looked strangely at Prince, and he followed Aedan into their room. We agreed to meet downstairs for supper in a couple of hours.\n\nAnd then I was standing in front of my room, key in hand, with Alistair lurking over my shoulder. I was suddenly, inexplicably nervous, and I fumbled with the keys a couple of times as I struggled to unlock the door. I finally got it, and the door popped open, swinging wide to show a good sized room with a large bed, thick throw rugs, and a small curtained-off area I presumed contained a chamber pot. There was a large armoire, which we opened and put both our bags in, and a small table near the door with one wooden chair.\n\nStill somewhat nervous, I looked over at Alistair, who'd removed his full helm. His face was red, his ears almost fluorescent, and he was avoiding making eye contact. I took his helm from him, tossing it carelessly on the bed, and stepped close to him, putting my arms around his waist and burying my face in his shoulder. He hesitated only a moment before he wrapped his own arms around me. We stood like that, just enjoying the comfort of being together, for a few minutes, until we heard knocking on the door.\n\n\"Sierra? It's Aedan. We're going to ask to have our clothing laundered. Want to send yours down too?\"\n\nI opened the door and let Aedan in while we dug through our packs and piled up dirty clothing. I ducked behind the curtain and quickly changed into a relatively clean dress, sending my armour to be cleaned as well. Alistair then shucked his plate, and changed out of his under-armour clothes behind the screen also. Alistair helped Aedan carry the pile of clothes downstairs, and I took the opportunity to hand wash my own underwear and bras. I couldn't imagine what the washerwomen would have thought of spandex and elastic.\n\nWhen Alistair returned, I was sprawled across the large bed, enjoying the feeling of having an actual mattress with real pillows for a change. Alistair cracked up when he entered, but closed the door and joined me without delay. I scooted over to make room, and we laid facing each other on the bed. Looking at his handsome face on a pillow from such a close vantage point gave me butterflies in my stomach, especially when I thought about the plans I had agreed to with Leliana for the night. I kissed him to quell my nerves, and his gentle hands on my face and back calmed my fears. How long we laid there I couldn't guess.\n\nWe separated to have baths; the Pearl had amazing bathing facilities with sunken tubs that could have comfortably held four at a time. I tried not to think too hard on the fact that they probably had, and frequently did, hold more than one. At least the water was fresh; they had some sort of pulley system outside the window and a dedicated fire to heat water below; a young man brought an enormous bucket of steaming water through the window and filled the tub while I watched. They had a variety of soaps and shampoos, and I enjoyed soaking in lavender-scented water. When I got out, I even spent a few minutes fixing my hair; it was still damp, but I arranged it in soft curls around my face as the servant at Redcliffe had, smiling at myself in the mirror as I put my dress back on.\n\nI was finally interrupted by another knock on the door. I opened the door to an impatient Leliana with a wry grin on her face.\n\nShe squealed when she saw me. \"You look so beautiful! Alistair won't know what hit him.\" I blushed and she continued. \"But what do you have on your feet? Those wretched boots again? Tomorrow we are going shoe shopping. I mean it. Anyways, the reason I came up is that we're hungry! Everyone's downstairs already waiting for you. Hurry, yes?\"\n\nI sent her on ahead, needing to use the facilities anyway and being too embarrassed to do it with Alistair around. I did my business, resorting to using some leaves I had left over in my pack when I discovered that what passed for toilet paper was a well-used stick covered in woven fabric. I cringed and tried to avoid looking at the offending implement as I emptied the chamber pot out the window. This was apparently standard; I made a mental note not to linger underneath any windows in Denerim, ever. Finally set, I headed down the stairs.\n\nThe light was a little dimmer than before in the main room, and I assumed the sun was low and being blocked by neighbouring buildings. I paused at the bottom of the stairs letting my eyes adjust. I spotted my friends at a table along one wall, but with a quick headcount realised there was an extra body at the table. I watched for a moment, confused by the presence of an unknown brunette on the bench next to Alistair. Her skin was olive, her hair tied back with a loose handkerchief, and as I heard her laugh heartily at something Alistair had said, I realised I had forgotten a very important thing about the Pearl: Isabela.\n\nChapter Forty-Two: Piracy\n\nThe pirate looked a little like a cross between the original game version and the sequel, and I could see that with different clothes and hair she could go either way. One thing that was the same between both was the amount of skin on display. As I moved around the room, I could see Isabela wore a white shirt, unbuttoned down almost to her navel, and I was curious about what sort of undergarment made her cleavage strain like that yet not allow a boob to pop out. She wore a skirt that was really a glorified belt, boots that came just above her knees, and nothing else.\n\nAs she talked to my companions, she casually leaned into Alistair's side, and I figured from the movement of her arms that she'd just put a hand on his thigh. His expression was a mix of discomfort and embarrassment, his face was beet red, and he leaned away as far as he could without falling off the bench. I was seeing red; not angry with Alistair, who was clearly completely out of his element, but still jealous as hell. I slipped behind him, and my movement caught Aedan's eye. He smirked at me, and I realised the rest of my companions were watching with equally obvious amusement at my poor Chantry virgin's plight. My glare at Aedan netted me only an unrepentant shrug. I'll get you later, brother. My vision hazed a little more scarlet as I understood that any of them could have rescued him.\n\nI walked up behind Alistair, coming around to the side of the bench he sat on. I put one hand on his shoulder, swivelled to put my knee on the bench at his side, and before he could even react, swung my other leg over to straddle his lap. I barely even heard the amused chuckles of everyone else at the table as I plastered myself to Alistair, my lips crashing down on his in a passionate kiss. After a brief hesitation, his arms surrounded me, one hand tangling in my hair and the other holding me close at the waist. Either his surprise was short-lived, or his relief at being saved from Isabela's attentions was just that intense, because his response was enthusiastic. His tongue probed at my lips insistently, and I moaned as I opened my mouth and let him in.\n\nThe chuckles from behind me morphed into catcalls and cheers, and I reluctantly pulled away, instead cuddling my cheek in to Alistair's shoulder, facing the Rivaini pirate. She appraised me with one eyebrow raised, and her gaze raked over my body.\n\n\"Hey Isabela?\" I spoke loudly enough for the entire table to hear, even over the music. \"Get your own. This one's spoken for, and I don't like to share.\"\n\nIsabela smirked. \"Oh, I apologise, sweet thing. Had I known he was with someone...\"\n\n\"You did. And you didn't care. And you'd be just as happy to bed the both of us. I know. It's okay, I forgive you. I don't even blame you -- he's gorgeous, isn't he? Just keep your hands to yourself, and maybe we can be friends.\"\n\nShe laughed. \"Fair enough. Though, just out of curiosity...is he as good as he looks?\"\n\nI grinned. \"Better. Much, much better.\" I licked my lips lasciviously, feeling smug as pure jealousy flashed across her face. I felt Alistair startle under me, and squeezed his arm reassuringly. I lowered my voice. \"You might want to try Zev and my brother, Aedan. They're a little more...adventurous than we are.\" I nodded across the table towards the two men, who were absorbed in a quiet conversation now that their entertainment was over.",
        "Isabela's eyes lit up, and she straightened her hair before oozing off the bench and heading around the table. I giggled and buried my face in Alistair's shoulder, just enjoying him holding me. He bent his neck, his mouth practically on my ear, his breath stirring my hair, and a lick of heat curled through my insides.\n\n\"You're really going to aim that at Aedan? That wasn't very nice.\"\n\nI tilted my head back and chuckled again. \"Neither was them leaving you to deal with a horny pirate. We owe him one.\"\n\n\"We?\"\n\n\"You don't think he left you floundering with that woman solely to watch you squirm, do you? He wanted to laugh at me. He succeeded. Now he's going to pay.\"\n\nAlistair chuckled in my ear. \"Well that should be...interesting. To say the least. Uh...Sierra?\"\n\n\"Yes, love?\"\n\n\"Why did you tell her that, uh, I am...um...?\"\n\nI could practically feel the blush on his face. \"Good? Can't blame a girl for wanting to flaunt what she's got. Isabela's practically green with envy. I couldn't help myself.\" I giggled, and felt him relax slightly.\n\nHis hand was still in my hair, and he took advantage to tilt my head a bit and press a kiss to my ear. I cocked my head further, encouraging him, then sucked in a breath when he took the hint and captured my earlobe between his lips. I clenched my fists, reflexively, and wiggled slightly in his lap, only to encounter a firm lump that I was bumping up against. He gasped at the same time that I groaned, suddenly insanely turned on. I was contemplating teasing him further when we were interrupted by a hand on each of our shoulders.\n\nI looked up to find Leliana smiling at both of us, eyes twinkling. \"You are very cute, really, but I have to suggest you think about finding another venue for this sort of activity. Otherwise every man in this room is going to assume you are-\" She cleared her throat awkwardly before continuing, \"-available. If you know what I mean.\"\n\nI blushed scarlet; I'd not even considered what our behaviour would look like in the common room of a brothel. Alistair's face was equally red, and we both hurried to rearrange ourselves. I slid out of his lap and sat in the spot Isabela had vacated; he crossed his legs in an effort to hide the bulge. Leliana sat on the other side of me, and I realised that somehow Isabela had managed to push Leli off of the bench opposite us and insinuate herself between Aedan and Zevran. Zev was smirking as he watched her playing cards with a boggled Aedan. I laughed, and heard Alistair chuckle beside me.\n\nA waitress came over carrying multiple plates; mine had roasted potatoes and some sort of fowl, I assumed pheasant, as well as some limp looking green vegetable that vaguely resembled broccoli. Alistair told me the other options on the menu would 'not have been to my liking', and I took it to mean they were serving rabbit or something else cute and furry. I dug into the pheasant with gusto; it was amazing to have actual food, for once, instead of vague stew-like concoctions with whatever we could scavenge or find along the way. Alistair laughed and teased me about being worse than a new Grey Warden, but only around mouthfuls of his own pheasant.\n\nShe swung back with drinks a moment later; it turned out Zevran had ordered me a glass of some sort of wine. I didn't normally drink alcohol, but I didn't think I'd get water if I asked for it, and it was definitely better than ale. I took a cautious sip -- it was actually a bit sweet, and not totally objectionable. Huh. Zevran can guess my taste in wine? I really do have a family. I raised my glass to him, and he flashed me one of his few genuine smiles.\n\nOur dinner entertainment was watching Aedan try to fend off Isabela. For all that he'd been laughing at Alistair for the same thing, the poor boy had absolutely no idea how to manage the busty pirate. As for Isabela, she had clearly determined that they key to being invited into bed with the couple was to get Aedan to agree without realising just what he'd agreed to. Leliana, Alistair and I giggled through the entire meal, while Wynne shot disapproving looks in everyone's direction, and Zev just watched his lover with a bemused smirk.\n\nIt was sort of like the pirate was an octopus; every time Aedan removed one of her extremities from his person, another draped itself around him. And that's when she wasn't cheating at cards and betting for kisses. I just about died trying to keep from bursting out laughing.\n\nAfter a while, Wynne excused herself and went back to her room, and the air of judgement hanging over everyone seemed to lift a little. I loved Wynne, I really did, as I might have loved a grandmother, but I didn't enjoy the feeling when she directed that holier-than-thou glare at me.\n\nOver the course of the evening, the volume in the place rose, until I could no longer even hear Aedan verbally fencing with Isabela. The music got a bit louder, but mostly it was laughter and shouting from the ever-more-inebriated clients at the tables around us. I was trying to have a conversation with Leliana, who I thought was at me again about my shoes, but finally gave it up as a bad job. Alistair had his arm tightly around my waist, and his face was slightly pink as he looked around the room, inevitably catching the eye of one of the prostitutes or another who would wink in his direction.\n\nLeliana wandered off after a bit to go closer to the musicians, and ended up on stage before long playing along on a spare lute someone had found. Alistair shouted in my ear that he was going to go get us more drinks, and motioned to Zevran to join him. I sat alone on the bench, just watching the people, fascinated. I tried not to stare at anyone for too long to avoid angering anyone or drawing attention. My gaze wandered over to the bar and Alistair periodically, and I saw him gesturing while speaking into Zevran's ear. The elf, nodding, reached into one of his myriad pockets, and handed something to Alistair. I was puzzled, but dismissed it until I saw Alistair tip his hand and drop something in his own mug of ale.\n\nI looked at Alistair as they approached the table, but he gave me an innocent look and sat down; it was too loud to really have a conversation. Zevran sat across from me, refusing to make eye contact, and I started feeling uncomfortable. It wasn't that I didn't trust him - despite being an assassin, I knew Zev would never do anything to actually hurt Alistair -- but there was a lot of room for practical joking without hurting him, and I had plans for that night.\n\nAfter downing half of his ale, Alistair excused himself to use the facilities, and I nodded. When I was sure he was gone, I gave Zevran a pointed look. He shrugged at me, looking nonchalant, but when my brow wrinkled in irritation, he reached over, grabbed Alistair's mug, and took a healthy swig. The point was obvious, even without being able to talk; Zevran wouldn't have drank it if it was something too horrible. Without any obvious recourse, short of dragging the elf out of there and interrogating him, I chose to trust in him and let it go.\n\nI was still alone on my bench, watching the dance floor off to my right, when I suddenly felt a presence to my left. I looked over to see a stranger, a swarthy, unwashed fellow with yellow teeth. When he opened his mouth and spoke, while I couldn't hear what he said, the smell of his breath allowed me to infer that anything he said would be slurred beyond recognition anyway. He was clearly drunk, and swayed on the bench as if to prove the point.\n\nI tried to tell him the seat was taken, but he could no more hear me than I could him. I tried to shoo him away with gestures, but in his condition he didn't seem to be catching on. He shouted something again, the only word I could pick out being 'classy', and then before I could blink, he had slapped some coins on the table, wrapped one arm around my shoulders, rested the other hand on my knee, and was leaning in with his eyes closed and a sickening leer on his face.\n\nShocked, I was frozen for a moment while the fact that he assumed I was a prostitute, albeit apparently a classy one, registered. Before I had a chance to decide what to do about that, his hand was violently ripped off of my leg at the same time that his face disappeared from my personal space. I looked up to see Alistair standing there, his face almost purple with rage, one big hand around the man's neck, the other pulling his wrist up behind his back, hard. He shouted something in the man's ear, and the drunkard paled, nodding rapidly and cringing. Alistair released his arm to gather up the coins he had put down and drop them into the drunk's palm. He spoke again, and then gave a shove, and with a shriek the sleaze went stumbling across the room.\n\nHe came to rest rather violently against another man, who turned with a snarl and pushed him in another direction. In the process, the second man bumped against a neighbouring table, and dumped several drinks into the laps of their owners. One of the now-damp men stood and started shouting, and pretty soon it was like a Hollywood brawl. More and more people were drawn in as people and booze started flying. It couldn't have been more perfect if it was choreographed.\n\nWhile I was staring at the scrum like a dimwit, Zevran, Aedan, and Isabela had leapt to their feet, and Alistair had snagged his mug and my glass from the table, shoving them into my hands and then lifting me bodily from the bench. With his hands on my hips, he propelled me across the place towards the door that led to our rooms. We had to duck, a couple of times, as mugs flew overhead, and I stumbled as someone slammed into Alistair's back and nearly knocked both of us to the floor; I thanked God silently for Alistair's impressive muscles as he halted our descent and started me moving again.\n\nWe finally made it to the stairs, and at his urging, I sprinted up them. The volume declined as we climbed, and I could finally hear again. Aedan and Zevran were stomping behind us, and right behind them I heard Isabela urging us to go faster. I had a brief moment to wonder why Isabela was scampering away -- it seemed like the bar brawl would be right up her alley -- but I was too winded to ask. I didn't stop, hitting the top of the stairs running and just continuing down the hall to our room. When it seemed I was again going to fumble with the key, Alistair snagged it out of my hand, moved me aside by the gentle expedient of lifting me out of the way, and opened it himself. I got one last glimpse of the back of Aedan's head before I was urged through the door and it was closed behind me.\n\nI collapsed into the one chair, breathless, putting our glasses on the table while Alistair turned and barred the door behind us. By the time he was done, my fear and momentary shock had subsided and the humour inherent in the situation had hit. I started to laugh, silently at first, and when Alistair saw me shaking he must have assumed I was crying; he knelt down in front of me, his hands gentle on my shoulders, concern written all over his face. That struck me as even funnier, and the laughter finally bubbled out of me. I fell forward, helplessly, into Alistair's waiting arms, trying unsuccessfully to stifle the noise with my fist. Alistair slowly lowered us to the ground, me in his lap, as I shook with the suppressed mirth.\n\nI finally heard Alistair's sigh, followed by a reluctant chuckle, and my giggles died off. I sat, skirt askew, face pressed into his shirt, and wiped my tears on my own sleeve before wrapping my arms around him. He rested his chin on my head, and I felt the rumble almost as much as I heard the words.\n\n\"Why is it that every time I let you out of my direct line of sight, some other man is trying to...to...take advantage of you?\"\n\nI snickered.\n\n\"Seriously. I can't turn my back for one minute without someone trying to rape you, or grope you, or apparently pay you for unspecified 'services'.\"\n\nI giggled again, snuggling in tighter, and he laughed before planting a kiss on the top of my head.\n\n\"You must think terrible things about Fereldan men.\"\n\nI looked up, smiling, into his expressive, sweet face. \"Not all Fereldan men.\"\n\nHe leaned down, stopping with his lips just a hair's width away from mine. \"Thank the Maker for that.\" He closed the distance and pressed a soft kiss onto my lips.\n\nI pulled away, reaching up to grab my wine and take a sip. I smirked up at him. \"So, jealous much?\"\n\nHis eyes twinkled even as he frowned at me. \"Me? No way. Unh uh. I don't get jealous. I was just...protecting you! Yes, that's it. He clearly had evil intentions.\"\n\n\"Right. Of course. Evil-intentioned falling-down-drunks.\" I smirked more.\n\n\"And anyways, who're you to talk about jealousy? Look at you with Isabela.\" He looked triumphant, and I blushed slightly.\n\n\"At least I didn't threaten to murder her! Or try to turn her into a projectile weapon.\"\n\n\"I almost thought you might end up wrestling with her. It was a close call.\"\n\n\"You wish!\"\n\nWe both cracked up again, and I finally scrambled up from Alistair's lap. When I glanced at him, his face was red, and he was trying hard not to stare. I looked down and realised that somewhere in there the skirt of my dress had gotten tucked up and static held it in place, revealing one leg to just above the knee. I grinned, wiggling the appendage.\n\n\"Like what you see?\"\n\nAlistair jumped like he'd been shot. \"Wha-? I didn't see anything. I'm not some sort of drooling lecher! I wasn't even looking at your legs. I mean, um, or anywhere else. What? Stop looking at me like that.\" He hopped up, face scarlet, and pointedly avoided eye contact, staring at the wall behind me and taking a drink from his mug to cover his discomfort. I howled in laughter.\n\n\"Seriously? You've seen me mostly naked, you've had your hand on my breast, and looking at my leg gets you that embarrassed?\"\n\nHis eyes flickered to my face, carefully staying above the shoulders. \"I am a gentleman. Is that such a bad thing?\"\n\nI stepped up to him, taking his mug and putting it and my glass back on the table. I cuddled into his chest. \"Not at all. In fact, it's one more reason that I love you. Won't stop me from teasing you about it though.\"\n\nHis smile was radiant and I felt it like the sun on my face. I basked for a minute before finally pulling away."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-41-42"
}