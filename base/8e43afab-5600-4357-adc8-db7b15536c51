{
    "title": "Shifting Perspectives",
    "pages": [
        "Author's Notes:\n\nAnd another trilogy is born.\n\n'Shifting Perspectives' is the third and final story in the tale of Kyle MacDenny. Minimal effort is made here to explain the backstory, so I highly recommended you read the stories in the following order:\n\n<ul><li>Shifting Priorities</li><li>Shifting Gears</li><li>Shifting Perspectives</li></ul>\n\nI hope you enjoy them.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nShifting Perspectives\n\n********\n\nChapter 1\n\nMontreal was every bit as lovely and lively as Kyle had been told, but no one mentioned how bloody cold it got in the winter! As he rushed from the taxi into the airport terminal, he longed for the heat of summer and thought fondly of his time in Santa Barbara.\n\nWell, most of it.\n\nHe'd left some good friends behind when he'd ridden northeast from the city, gradually making his way across the states until he found himself back in Canada.\n\nFinding a temporary place to stay in Montreal had turned out to be easier than he thought. His first night in the city, he'd gone out to sample the nightlife and bumped into a rowdy group of college girls out celebrating the start of their last year. One of the girls, a petite and feisty French-Canadian brunette named Juliette Belanger, latched onto him and ended up taking him back to her small apartment for some fun after the dancing and drinking.\n\nKyle's French was rusty at best, as he was only catching maybe one word in four. Juliette told him she would help him learn the language if he stuck around and helped her with the rent. He'd informed her from that first night he was on a personal quest and wouldn't be staying for long, but she'd assured him she was happy to have him warm her bed for as long as he could. She was a wonderful teacher, so Kyle's French improved quickly, but he soon realized he'd never be fluent or sound like a native speaker.\n\nWhen the weather began to turn cold, Kyle rented a storage unit on the edge of the city and spent a day preparing his Harley for its extended stay. He felt a little sad but knew better than to try to keep it on the road in poor conditions. He'd paid for six months in advance to ensure his unit would remain undisturbed.\n\nKyle managed to get a job as a barista in a downtown coffee shop for a little walking around money, but mostly to fill up his open calendar. It was near the major investment firms, so he kept his ears open for loose talk amongst the customers. He also tracked the business world closely through newspapers and the web. These efforts helped him augment his portfolio's income with a few solid investments that approached the returns he would have seen with the company Cameron's father purchased.\n\nKyle reached out to the Livingstons as Christmas drew closer, and they were delighted that he still intended to visit them. Plans were firmed up, and Kyle had trouble wiping the smile from his face as he thought of them.\n\nHe picked up that Juliette had begun to distance herself from him emotionally in the past few weeks. He hadn't been sure how to deal with that as, while he liked her, that was as far as his feelings went. She'd known he wasn't going to be a permanent fixture. He tried to keep things friendly, but the smiles he received became fewer and fewer.\n\nA little more than a week ago, Kyle arrived home after work to see a pair of man's boots by the front door. He made his way into the apartment and glanced towards the bedroom. The door was open, and there was Juliette on hands and knees on the bed with a stranger driving himself into her from behind. When Kyle didn't display any jealousy but instead, politely apologized for the intrusion, the petite woman's cool finally broke, and she flew into a rage, shocking her new partner. Kyle packed his few belongings quickly and left, wishing her well and narrowly avoiding a thrown mug.\n\nHe spent the next week in a cheap hotel and gave his notice at the coffee shop.\n\nFinally, it was time. His saddlebags were stored with his motorcycle, so he packed a duffle he'd picked up and headed to the airport. There was news of a major snowstorm coming in, so he prayed he'd get out before it arrived.\n\nIt was a long, dull wait, but eventually, he found himself jammed in his economy window seat next to two grandmothers from Cheltenham by the names of Beryl and Abigail. Apparently, Beryl had a lovely granddaughter who had just broken up with her fianc\u00e9. He learned this interesting fact before they'd even taxied to the runway.\n\nTheir flight managed to get off the ground before the storm reached its full fury, so they were on their way.\n\nHe settled back in his seat and closed his eyes. It was going to be a long flight.\n\n-=-\n\n\"You're leaving? Again?\"\n\n\"Where to this time?\"\n\n\"Will you be coming back?\"\n\n\"Did you ever love me?\"\n\n\"Do you even know how to love?\"\n\n\"You... you're a cold-hearted bastard!\"\n\nKyle woke with a start and trembled, sweat beading his brow and his breath coming in deep gulps. He glanced around, but almost everyone was asleep, including his neighbors.\n\nHis mother's voice echoed in his mind, but the last words he recalled were said with a French-Canadian accent. Juliette's last words screamed at him as he left her apartment.\n\nHe felt his mother's disapproval settle over him. Had he used Juliette? He told her he wasn't going to stay right from day one. He enjoyed her company, and she certainly enjoyed their time between the sheets. He'd been oblivious to what had led to her explosive outburst. She'd called him several things in French during her tirade, but he'd been able to ignore it at the time as he was busy collecting his stuff to get out of there.\n\nShe'd called him uncaring. Cold. Emotionle--\n\nThe shock hit him like an open hand slap. That was his father. He'd lived with the woman without connecting with her on an emotional level as he knew he'd be leaving. He didn't let her into his heart at all. She barely registered in his life. Then he left, ignoring the pain he'd left in his wake. Fuck!\n\nHe suddenly needed to get up. He frantically nudged the two ladies next to him to wake them, then barely managed to keep from crawling over them to get to the aisle. He rushed to the small bathroom and lost his stomach contents into the small bowl. When he could heave no more, he flushed, then splashed cold water on his face to freshen up and rinsed his mouth out. He looked at the man in the mirror and was relieved not to see a man who didn't care. There was nothing emotionless about the haunted expression looking back at him. He held the edge of the sink to stop the shaking of his hands.\n\nThere was a gentle knocking on the door.\n\n\"Sir? Are you all right?\"\n\n\"yes... I'm fine,\" he said, his voice wobbling.\n\nHe dried his face and hands, then opened the door to see the flight attendant watching him cautiously.\n\n\"Sorry, just a... really bad dream. Upset my stomach. I'm fine now,\" Kyle said quietly.\n\nHer expression went from cautious to compassionate instantly. \"Is there anything I can get you?\"\n\nHis brain immediately said scotch, but his good sense slapped that down. \"Water?\"\n\nA lovely smile beamed at him. \"I'll bring it to your seat.\"\n\n\"Thank you.\" He made his way back to his seat, where he saw the two ladies were wide awake and waiting.\n\n\"Are you ill?\" Beryl asked immediately.\n\nHe smiled at her. \"No. Just a bad dream.\"\n\n\"Oh, you poor dear,\" Abigail sighed.\n\nHe struggled past them once more to sink into his own seat. He could have sworn Abigail got a little handsy as he passed, but he said nothing.\n\nThe woman with his water arrived, and he thanked her before she moved on. He sipped at the cool water and relaxed back against his seat.\n\n\"Did I mention my Lydia is studying to be a nurse?\" Beryl offered.\n\nKyle looked over at the woman and caught the tail end of Abigail's eye roll. \"No, you didn't. Good for her!\"\n\nHe sat back with his eyes closed and pretended to be resting. Eventually, the two ladies drifted off, and he opened his eyes once more. He didn't want to return to his dreams. He could still feel his mother's disappointment, and he had to admit he was upset with himself for not being more vigilant. He should have been watching for signs of Juliette's emotional connection. Instead, he'd just focused on this visit and treated her apartment like a hotel room, complete with a bed warmer.\n\nIt shocked him how easy it had been to let that happen, even after the promises Kyle made to himself that he wouldn't allow himself to fall into his father's behavior. Yet it happened.\n\nHe stared out the window and tried to think of what he could do to ensure it didn't happen again.\n\nChapter 2\n\n\"KYLE! EEEEEEEEEEEEEEE!\"\n\nThe high-pitched squeal of excitement sent a shot of adrenaline to his weary mind as he walked out into the arrivals area at Heathrow Airport.\n\nKyle quickly slid his duffle to the floor and caught Skye as she leaped into his arms. Her lips found his, and her tongue thrust into his mouth as she wrapped her arms around his shoulders and her legs around his hips. His hands automatically went to her ass to support her weight, causing her to moan into his mouth.\n\nWhen she finally pulled back from the kiss, she purred happily. \"Mmmm, I missed that so much!\"\n\nHe snorted quietly. \"Yes, it's great to see you again, too.\"\n\nShe gave him a naughty smile and wiggled her body against his.\n\nKyle noticed he was being watched by the other passengers as they walked by. He smiled and nodded to Abigail and Beryl, the latter looking back with disappointment.\n\n\"Down you go, you little minx!\" Kyle said as he moved his hands from her ass to her sides.\n\nShe cooed at the feel of his strong hands but released her grip to slide down his body, enjoying his hard muscles.\n\nShe picked up his duffle for him as they moved further into the arrivals area.\n\n\"I can carry that,\" he said, but she shook her head.\n\n\"Someone else wants to say hello,\" she replied with a cheeky grin.\n\nHe looked ahead and saw Helen smiling at him timidly. Once more, he was stunned by elegance and beauty, and she still had that Classic Hollywood allure he recalled from their first meeting. His appreciation must have shown on his face as a shy smile bloomed on hers as he stepped closer.\n\n\"Hello, Helen.\"\n\nHer lovely auburn hair flowed down over her shoulders, framing her smiling face. It was a little longer now. His fingers slid into her silken locks as he brought his lips to hers in a sensual caress. He felt her gasp and tremble, then her need flared, and she pressed her lips to his as her arms went around him. His kiss deepened, and she made cute little needful sounds. When he pulled back from her lips, he moved his mouth next to her ear.\n\n\"Who's this gorgeous, naughty girl making such lustful sounds in a public place?\" he whispered.\n\nHe felt a strong tremble rock through her body and pulled back to see her watching the people facing their way with looks of surprise and shock on their faces as they'd just witnessed him kissing the younger woman moments before. Her eyes snapped back to his, and she saw the heat in his gaze.\n\n\"You're such a beautiful and sexy woman. I couldn't stop myself. I hope I didn't overstep my bounds.\"\n\n\"No! No, it was quite lovely! I enjoyed that--very much!\" she admitted breathily, her timid smile returning. Her eyes were twinkling joyfully.\n\nKyle loved her accent and was looking forward to enjoying it much more during his visit. He took her arm as Skye took his other one, and they began walking. He spotted Abigail and Beryl, again, standing with a pretty, younger woman who, from the resemblance, had to be Beryl's daughter, Lydia. All three were gawking at him in open-mouthed surprise. He gave them a smile and a nod as he walked past.\n\nThey left the terminal, and Kyle zipped up his leather jacket. While there was no snow on the ground, the temperature couldn't have been much above freezing. They made their way across the parking lot to a small, sporty two-door coupe.\n\n\"We're all going to fit in there?\" Kyle asked hesitantly as he checked out the minimal back seat.\n\nHelen glanced at him with a smile. \"Skye will fit in the back seat with your duffel.\"\n\n\"Or I could sit on Kyle's lap,\" Skye offered.\n\n\"No,\" Helen responded.\n\n\"Pooh!\" her daughter said, pouting.\n\nKyle shook his head with a grin. Once Helen popped the locks, he opened the door and folded the passenger seat forward for Skye. She slipped in and moved to the position behind the driver, then Kyle put his bag next to her. Dropping the seat back, Kyle folded his five-foot-ten frame into the passenger seat and slid it all the way back. He barely had enough room for his legs and felt his hair brushing the ceiling.\n\nHelen looked over at him. \"Comfortable?\"\n\n\"Yes.\"\n\n\"Liar,\" Skye snorted.\n\n\"Comfortable enough,\" he amended.\n\nHelen nodded and got them on their way. She was a pro with a stick shift and a confident driver. Certainly not as aggressive as Fiona had been. He was able to relax as they drove away from the airport. Once he got used to them being on the wrong side, that is.\n\n\"So, where in London do you live?\" Kyle asked.\n\nHelen glanced over at him. \"We live in Twickenham.\"\n\nHe gave her a confused look. \"But when you introduced yourself to us on the tour bus, you said you were from London.\"\n\nShe smiled self-consciously. \"Oh! I did, didn't I! My apologies. Before that trip, I was told to never give out my actual address when traveling. Twickenham is considered part of Greater London, which includes the city proper and 32 boroughs. It's just a thirty-minute drive from here, and the city of London is only another forty-five minutes beyond that.\"\n\n\"Ah.\"\n\n\"Fiona mentioned you'd be visiting her in Santa Barbara. How did that go?\" Helen asked.\n\nKyle brought the two women up to speed on his visit with Fiona and her friends. He omitted the sexy bits and Monique's grand lie, but finished with how Fiona had to make a terrible decision and then live with it when she left for France.\n\n\"Her parents presented her with a horrible choice!\" Helen sighed.\n\n\"Yes, they did.\" While he didn't relate to Fiona's living situation, having come from a much lower-income family, he empathized with her having to make the tough call.\n\n\"You own a Harley?\" Skye said excitedly from the back seat.\n\nHe turned his head to smile back at her. \"Yes.\" He pulled his cell from his pocket and pulled up a photo of his ride gleaming in the warm rays of sunset next to the beach in California. He was rather proud of how that picture turned out.\n\nSkye purred happily as she looked at the shot. She bit her lip, and for a moment, he thought she might leap between the seats to get to him.\n\nThey were driving into a quaint town, and he was surprised to see how busy the roads were this early in the morning. He checked out the businesses along the way. He couldn't block a wide yawn from escaping.\n\n\"Did you manage to sleep on the flight over?\" Helen asked, catching the tail end of the yawn.\n\n\"Yeah, some, but I had disturbing dreams. Then I couldn't get back to sleep,\" he sighed.\n\n\"You should have a little rest when we get to the apartment then,\" she replied with a concerned look.\n\nHe nodded, as taking a nap sounded wonderful. \"Is it normally this busy here?\" he asked as they waited for a gap in the traffic to turn onto a side street.\n\nSkye snorted. \"You were expecting a place called Twickenham to be a sleepy little village?\"\n\nHe grinned self-consciously and nodded.\n\nThey finally made the turn and wound their way through a neighborhood to face the gates of a parking lot next to what looked to Kyle like a five-story condo. The gates swung open, and Helen pulled in and parked in her spot.\n\nKyle climbed out and slid the seat forward before folding it down. He pulled his duffle out, resting it on the roof before reaching in to take Skye's hand. He helped her out, and she pressed herself to his chest with her face tilted up expectantly. He smiled and kissed her.\n\nShe grinned at her mother when they joined her behind the car. She touched Kyle's arm and pointed to a two-seater parked next to Helen's. \"This little beauty is mine!\" At his raised eyebrow, she continued. \"There's more room inside than you think.\"\n\nThey went into the building and took the elevator up to the top floor. As they walked down the hall, the second to last door opened, and a woman stepped out. Kyle saw she was probably the same age, if not a little older than Helen. She was dressed elegantly and, from her polished appearance, she probably saw the inside of a spa regularly. She looked at the approaching group in surprise and smiled.\n\n\"Good morning, Helen! Skye,\" she said, and Kyle picked up just a hint of distaste as she addressed the younger woman.\n\nHelen spoke for them. \"Good morning, Margaret. Please let me introduce my good friend Kyle MacDenny from Canada. Kyle, this is my neighbor, Margaret Hillsbury.\"\n\nThe woman's face froze as she looked at Kyle. She made an odd choking sound, then quickly cleared her throat and gave them a hesitant smile. She pinned Skye with her eyes. \"This is the Kyle you spoke of? The one from that little bicycle vacation you two went on?\"\n\nKyle wondered what exactly Skye had divulged, but knowing the young woman, it was likely too much. He took a deep breath and put a smile on his face. \"That certainly sounds like me, as that's where I met these beautiful ladies,\" he volunteered with a smile. \"It's nice to meet you, Margaret.\" He reached out a hand, and she automatically shook it. She continued to stare at him, her eyes sliding down his body and back up. Kyle glanced curiously at Helen as Margaret wasn't letting go of his hand.\n\n\"Off to church, Margaret?\" Helen asked, and this jolted the woman out of her frozen state. She released his hand.\n\n\"Yes! Yes, I'm meeting with the vicar after the sermon to discuss the Christmas gala. Will you be attending this year? I could get you free tickets. You could bring along your guest,\" the woman asserted eagerly as her eyes returned to Kyle.\n\n\"Unfortunately, the night of the gala is the same night the hospital faculty is throwing its own party, and I promised I'd bring Kyle along to that.\"\n\nAfter a sudden look of disappointment, she forced a smile back onto her lips. \"Oh, well, that's too bad. It was nice to meet you, Kyle.\"\n\nHe gave her a smile and a nod, and she began to walk away.\n\n\"Margaret! Don't forget to lock your door and take your keys,\" Helen called out to the distracted woman. The woman in question made another odd sound and rushed back to her door to get her keys dangling in the lock. Kyle noted her embarrassed blush and smile as she nodded to them quickly before turning back to the elevators. She fast-walked away and gave them a little wave over her shoulder.\n\nHelen smirked and continued to her door at the end of the hall, with Kyle and Skye following. He turned to the younger woman.\n\n\"What exactly did you say to Margaret?\" he asked.\n\nHer smile was innocent. \"I just said we met you on the trip.\" They stepped inside, and Skye closed the door behind her before she continued. \"And you'd given us the hottest sex we'd ever experienced in our lives!\" She giggled as he closed his eyes and shook his head in defeat.\n\nKyle opened his eyes to see the look of shock and embarrassment on Helen's face. \"You told her I had sex with Kyle too?\"\n\nSkye nodded. \"Yes! Why wouldn't I?\"\n\n\"Because it's none of her business who I have sex with!\" Helen asserted, and Kyle nodded to her with a smile. Helen immediately turned to him. \"Not that I'm ashamed of what we shared!\"\n\n\"Good, because I'm certainly not,\" Kyle assured her and aimed a stern look at the naughty daughter. \"There is such a thing as over sharing.\"",
        "Skye hung her jacket on a hook, slipped off her soft boots, and made her way past them into the living room with a shrug. \"She's always looking down her nose at us and telling us of her grand adventures, which, truthfully, sound dry and dull. It felt good giving her a few hints about our incredible adventure. Seeing her gobsmacked just now was priceless and made it all worthwhile!\"\n\nKyle removed his jacket and hung it on a hook. He untied his boots and removed them before following Skye into the living room. He looked around at the enormous and bright room. The far wall was all floor-to-ceiling windows letting the daylight in, and the sheer curtains also softened the light. \"You have a beautiful home!\"\n\nHelen smiled. \"Thank you! I'm so glad you could visit us!\"\n\n\"So, tell me about this new job you have! The last I heard, you were between jobs,\" Kyle asked.\n\nHelen's face lit up with a smile. \"I applied for a position at a local hospital in their administrative wing. My previous experience made me their best candidate, so I got the job!\"\n\n\"Congratulations!\" Kyle said with a grin. \"Obviously, you enjoy the work,\" he said, reading the satisfied glow on her face.\n\n\"Yes! I run a tight ship, but I have an excellent team.\"\n\nSkye moved to sit at the edge of the couch cushion as she gave her mom a wicked grin. \"She also has several of the doctors pursuing her.\"\n\nKyle looked back at Helen in question. \"Maybe I did overstep my bounds with that kiss! Are you serious with any of these doctors?\"\n\nHelen fluttered her hands and shook her head. \"Once more, my daughter is reading too much into a bit of casual flirting. These are surgeons and doctors, bigwigs in the hospital. I'm just an administrative manager. They're just blowing off a little steam. I don't take any of that seriously.\"\n\nKyle wondered if she wasn't dismissing something with potential. He didn't doubt that some were acting as Helen described, but all of them? \"Still, you've got yourself a throng of admirers. Good for you!\" Helen still looked a little flustered, but gave him a broad smile, nonetheless. \"So, we're going to a party?\" he asked.\n\nHelen's lovely eyes looked nervously at him, and she nodded as she bit her lip. \"I apologize if I've been presumptuous!\"\n\n\"No, I'm up for an office party. Should be fun,\" he assured her, and her look of relief and gratitude was sweet. He wondered what she'd been so anxious about.\n\n\"What's the dress code?\" he asked.\n\n\"Black tie formal, but there's a shop on the main street a short distance away which caters to that. It's my treat as I sprung this on you with no warning,\" Helen said quickly.\n\nHe was going to argue but saw she was determined to win, so he just nodded graciously. Her smile returned. He looked at Skye. \"What have you been up to?\"\n\nShe reclined back against the cushions languidly. \"Mum got me enrolled in Uni this year.\"\n\n\"What area of study?\" he asked.\n\n\"Acting,\" she said with a grin.\n\nHe nodded slowly. \"That makes sense for such a cheeky girl.\"\n\n\"I thought so as well,\" Helen remarked.\n\n\"Are you enjoying it?\" he asked.\n\nSkye nodded. \"It's hard work but fun too! I've met a lot of great people and some twats--\"\n\n\"Skye!\" Helen scolded.\n\nKyle just smiled as he recalled having the same experience in college. His smile faded as that reminded him of Skye's confession when they parted at the airport. \"Speaking of meeting people, do you have a new boyfriend? Or are you still seeing... what did you say his name was? Owen?\"\n\nShe gave him an innocent smile. \"No current boyfriend, and I broke up with Owen a week or two after we returned from France. Poor sod was shattered.\"\n\nKyle allowed himself to relax. He wasn't setting himself up for any relationship disasters with these two. That was a relief for him.\n\nAnother yawn caught him by surprise, and Helen chuckled. \"Come with me, sleepy boy. I'll get you set up in the guest bedroom so you can take a nap.\"\n\nHe nodded and rubbed his face as he followed.\n\nThey went down the hall to the first door on the right. She went inside and pointed to the door on the right. \"You can have a shower in there.\"\n\n\"We're not really going to make him sleep in the guest room, are we?\" Skye asked slyly from the doorway.\n\n\"Don't be such a presumptuous girl!\" Helen scolded as her face heated up.\n\nKyle smiled at Helen's embarrassment. \"I appreciate the use of the room for now to take a nap. We can discuss the... logistics of my sleeping arrangements once I wake.\"\n\nHe leaned towards Helen, and she eagerly met him halfway to collect a sweet kiss. She trembled happily as she pulled back. Skye was ready for her kiss and pressed herself against Kyle's chest the moment there was room. Her kiss was a little more demanding, but Kyle pulled back, and she grinned at him as she moved backward to join her mother in the hall. Helen closed the door, and Kyle immediately dropped his duffle on the bed, grabbed his kit from it, and walked into the washroom. He stripped, showered, and dried off quickly before tugging on some sleeping shorts and slipping under the covers. Before he let himself nod off, he set his alarm for two hours. No more. This was so much better than sleeping in economy seating.\n\nThat was the last thought on his mind before sleep claimed him.\n\nChapter 3\n\nSkye and Kyle walked along the sidewalk linked arm in arm, the woman leaning slightly against his side. After his nap, Helen called the formal shop ahead of their arrival, and apparently, the clerk had a selection that should fit him.\n\n\"You like living here?\" Kyle asked Skye, and the woman nodded.\n\n\"I'll probably move to the city once I graduate, but for now, yeah, it's a pretty nice place to live. It's home, and I have friends here.\"\n\nKyle nodded. That was something missing in his life at the moment. A place he'd call home. While he'd grown up in Vancouver, he and his mother had moved regularly as the rent increased and the household income never quite kept pace. The few friends he'd managed to stay in touch with during those years were lost when Gwen worked her black magic on him. Maybe that's what made this nomadic time in his life possible. He had no real permanent links to any place or anyone. He wasn't sure if that was a positive thing or not.\n\n\"Hey! Earth calling Kyle!\"\n\nHe turned his attention back to Skye. \"Sorry, what did you say?\" he mumbled in embarrassment for his navel-gazing.\n\n\"Where did you go there? I was asking you about where you grew up, and your mind took a little holiday,\" she asked with a concerned look.\n\n\"Actually, I realized I don't have a Twickenham in my life and Gwen insisted I disconnect from the few friends I had.\"\n\n\"Well, you have us now,\" Skye said, pressing herself against his side a little more firmly.\n\nHe smiled down at her then spotted the shop. \"This it?\"\n\nSkye nodded, and he opened the door for her. They went inside, and he smiled at the lovely cinnamon brown woman standing next to the counter. She had large and expressive brown eyes and very full lips she colored with a dark, almost black lipstick. She was tall and very slim, with her very long jet-black hair tied back in a thick braid that reached the back of her knees. He noticed the white blouse she was wearing had the store's crest embroidered on the left pocket. The uniform was completed with a knee-length skirt, black legging, and black patent shoes. Kind of an old-timey look for a young woman.\n\n\"Priya? I didn't know you worked here!\" Skye gushed as she rushed forward to give her friend a hug. She turned to face Kyle with an excited expression. \"This is Priya Singh, one of my classmates!\" She looked at her friend. \"Priya, this is Kyle MacDenny!\"\n\nThe woman's eyes widened in surprise as she gaped at Skye. \"Kyle from the France cycling tour?\" she gushed.\n\nKyle saw her pretty eyes running down his body, and he glanced at the satisfied smile on Skye's lips. \"You've been talking about me.\"\n\nPriya made a cute snort sound. \"She has not stopped talking about you until we all wanted to slap her! Her stories painted you larger than life.\"\n\nKyle found Priya's British accent to be as charming as Skye's, but he turned his attention back to his companion. \"Yeah, that's why it's never a good idea to embellish a story. No one can live up to those expectations,\" he sighed.\n\nSkye chuckled as she watched him hungrily. \"Kyle, you silly man. You've already surpassed my expectations, and you've only just arrived!\"\n\nPriya was now giving him a hungry look as well. \"You need a tuxedo or black tie?\" she asked.\n\n\"Black tie,\" he replied.\n\n\"Follow me to the back, and we'll take some measurements,\" Priya said, and Skye chuckled.\n\n\"Mind out of the gutter, please,\" Kyle growled quietly as he fixed his eye on the grinning woman.\n\nThe changing area had a small, raised platform before an array of mirrors. On either side of the mirrors were two change rooms with curtains.\n\n\"Please take off your jacket, sweater, jeans, and boots,\" Priya said in a business-like tone but with just a hint of a smile at the corners of her lips. Skye made no effort to hide her own smile. The clerk gave him a nod and gestured to a change room when he looked at her questioning. With a small shrug, he stepped in and pulled the curtain across. He undressed but left his jeans on as he opened the curtain.\n\n\"Mr. MacDenny, I won't be able to do a proper measurement for the slacks if you are wearing the jeans,\" Priya said with a frown.\n\nSighing as he watched Skye's cheeky smile, he undid the jeans, pushed them down, and stepped out of them. Skye purred, seeing his muscular legs and his boxers.\n\nPriya worked her way down his body, taking measurements and jotting them down on her notepad. He began to relax as she was very professional.\n\nWhen she knelt before him, he tried to remain calm, but Skye was grinning wickedly.\n\nHe knew what was coming, so the hand pressing against his balls was no surprise as she took his inseam measurement. That number went into the notepad as well, and he thought she was done.\n\nExcept Priya didn't stand up from her kneeling position, and Skye joined her.\n\nPriya's hand returned to cup his balls as she looked up at him with dark eyes twinkling with mischief. She was a good match for Skye, whose hand was sliding over his cock through the soft fabric. It began to grow.\n\n\"Uh, we're in a store. I can see people walking past the windows,\" Kyle said, catching Skye's hand with his.\n\n\"From the front of the store, no one can see anything below your armpits,\" Priya said, rolling his balls on her palm. \"You're hidden by the racks. No one walks in without making a call first, and Skye's mum was the only call I received today.\"\n\nHe still looked towards the windows nervously.\n\nSkye tugged one side, and Priya pulled the other, and his boxers went down to his ankles.\n\n\"Mmmm, very nice, Mr. MacDenny!\" Priya cooed.\n\nHe gasped when Skye leaned forward and took half of his cock into her mouth.\n\nShe was such a wild girl, and right now, she was making choking sounds as she struggled to take more of him into her mouth. He shared a curious glance with Priya, who finally rolled her eyes.\n\n\"Girl, you're embarrassing yourself,\" she said with pity.\n\nSkye pulled back and took a gulp of air as she stared at her friend defensively. \"Wha--what do you mean?\"\n\n\"Who taught you how to throat a cock? Was it Owen? I bet he likes that choking, slobbering act. Makes him feel all big and manly,\" Priya sighed wearily.\n\nSkye glanced up nervously at Kyle, then glared at Priya.\n\nKyle blinked in surprise at Skye, then looked at Priya. \"She told me she broke up with Owen months ago.\"\n\nThe dark beauty grinned mischievously up at him. \"Oh, she did! It just didn't stick. The pathetic loser keeps coming back!\"\n\nKyle frowned down at Skye, who looked up at him with a strained smile on her lips. \"We did break up! He's not my boyfriend! He's just a casual hook-up. You know what that's like!\"\n\nHe opened his mouth to deny it, but he was standing at the back of a formal wear shop, his underwear resting on his feet, and two women kneeling between his legs, touching him very intimately. Still, there was one difference.\n\n\"Is it just a casual hook-up for Owen?\" he asked.\n\nPriya looked to Skye and saw her friend's nod lacked conviction, and Kyle wasn't buying it. She looked at the cock before her and saw its firmness was beginning to wane. She couldn't have that. She smiled at Kyle.\n\n\"I'm completely available. No boyfriend at this time, and it's been months since I've seen something as lovely as this!\" She looked at her friend. \"Looks like you don't get to play until you get confirmation from Owen.\" Before Kyle could change his mind, she leaned forward and slid his cock over her tongue and into her throat. She didn't stop until her nose pressed up against his hard body. She smiled as she felt his erection return to full strength in a few pulses.\n\n\"Fuck!\" Kyle jolted from the intense sensations.\n\nPriya pulled back until just the head was in her mouth, then repeated the slow plunge.\n\n\"Geezus! That's too good!\" Kyle moaned. He'd experienced some pretty amazing oral sex before, but Priya was taking him into her mouth and throat so sensually and deliberately, it was impossible to focus on anything else.\n\nShe played with his balls as she enjoyed driving him deep into her mouth. She hefted the weight of them in her palm as the fingers of her other hand rolled the orbs gently between them.\n\n\"Priya! You gotta stop, or I'm gonna cum!\" Kyle begged.\n\nShe slowly slid him from her mouth and grinned up at him as she saw his muscles tremble. She then pulled down her tights and flipped her skirt up as she spun around. \"I need a good smash! It's been too long. It's safe. I'm on the pill.\"\n\nKyle spared Skye a look, and the young woman shrugged with a little pout, jealousy apparent in her eyes. He frowned as it served her right for not being honest with him.\n\nLooking towards the front door, he saw no one outside, so he dropped to his knees behind Priya. She grinned back at him excitedly, then squealed when he grabbed her ass cheeks and parted them to lash her wet pussy with his tongue.\n\n\"MMMmmmFUCK! Skye! Shit! You weren't exaggerating! He's fucking--TAH! Talented with that tongue of his-AAHHHHFFFFUUUCCCKK!!!\" she cried out as he strummed her clit then sucked it between his lips.\n\nHe left her panting as he moved closer to line himself up behind her. When she felt the heat of the head against her wet lips, she looked over her shoulder with a hungry look in her pretty eyes. As he slowly pressed himself deeper and deeper, her eyelashes began to flutter as she bit her lip. Priya was making small grunting noises as he pulled himself out and pushed deeper.\n\nWhen he slapped her ass with his pelvis, she sighed happily. \"Ohhh, fuck yes! Ok, baby, that was a really lovely introduction, but let's see what you can really do. Smash me, love!\" She closed her eyes and rocked her hips to get used to his invasion.\n\nKyle gave Skye a puzzled look, and she pantomimed aggressive hip thrusts. He nodded to her and drew himself out to the head, then drove himself forward to slap her ass with his body again. Priya squeaked, but he was already drawing himself out for the next thrust. He slammed forward again and again, and Priya's eyes flew wide as she tried to catch her breath.\n\nHe had a firm grip on her hips and ass so he could pull her to him and push her back without letting her recover.\n\n\"FUH! AHH! GAH! UHN! OH! GOD! FUCK! YES!\" Priya's voice had risen at least three octaves as she tried to speak between each impact. Skye was staring at Kyle in awe.\n\n\"IMA- IMA- OH KYLE! CUM! CUH- CUH- GGGRRRAAAAHHH!!!\" Priya roared and began to shake violently. Kyle had never heard someone make that sound through an orgasm. He was also surprised how quickly she'd reached her peak as he still had a little way to go. The effort to smash her pushed his own release off.\n\nKyle held her tight against himself as she rode her pleasure through its crest and gently slid his hard cock from her when he felt her body begin to twitch from oversensitivity. She rested on her side as she gasped in breaths. Her eyes were rolling slightly, but her lovely lips held a smile.\n\nSkye made a little whining noise, drawing Kyle's attention. He saw she was looking at his cock a little desperately, and she had her hand stuffed down the front of her tights as she knelt next to them. Kyle frowned at her as he was still upset, but he needed a release, and it seemed she did too.\n\nHe reached out to grab the back of her head by her ponytail and pulled her against his chest to look her in the eye. Her eyes flew wide as she gasped in surprise.\n\n\"You will speak with Owen as soon as possible! If you don't have any emotional attachment to him, you let him know that plainly and clearly. If he does, you let him down gently!\"\n\n\"Y-yes!\" she stammered.\n\nKyle kissed her hard and deep, and she squealed slightly, then clung to him as her tongue danced with his. He pulled back, then spun her around and pulled down her tights and panties to her knees. The stretchy fabric didn't allow her to part her knees very far, but Kyle could see she was dripping wet, so no oral preparation was required. He pulled her back, positioned himself against her wet opening, and drove his cock deep on the first thrust.\n\n\"FUCK YES!\" Skye cried out.\n\nKyle smiled as he set up a steady pounding against Skye's ass, but not as aggressively as Priya seemed to enjoy it.\n\nSoon, he could feel his balls tightening up, and Skye seemed to be losing muscle control. Her head dropped to her arms with her ass still in the air.\n\n\"Kyle! Oh god... I'm coming! Fuck!\"\n\nPriya suddenly reached under Skye and spanked her fingers against Skye's clit. Her friend arched her back and fell over on her side as the spike of pain/pleasure ripped through her.\n\nKyle's cock popped out of Skye as she dropped aside, and his release slammed to a halt. He looked down at Priya, who flipped onto her back and opened her mouth as she reached up to pull at his hips. His eyes widened as he let her draw him down until she managed to guide his sensitive cock into her mouth.\n\nHe sucked in a breath as the sensation of her tongue sliding along the top of his cock was so strange and wonderful. Then he realized her upside-down position was allowing him to slide more easily into her throat. Priya's hands pulled at his ass, so he began to slowly fuck her mouth and throat. It was so freaking good that he only lasted five strokes before he felt the signals he was about to let loose. \"I'm gonna come!\" he managed to grunt, but she gripped his ass to keep him from pulling out. With a gasp, he felt himself firing into her mouth and her tongue working over his sensitive glans. It was his turn for his muscles to spasm as the pleasure was too sharp and intense.\n\nPriya pulled him all the way into her throat, so her nose was pressing against his aching balls. He could feel her swallowing against his shaft. He finally managed to pull away and dropped back onto his ass to rest back on his hands. He stared at Priya in shock as she licked her lips in satisfaction.\n\nThe three of them struggled to get their breath back and traded smiles.\n\n\"Holy shit, I am so pleased you brought Kyle by today,\" Priya sighed as she looked at Skye. \"It's never felt that intense before! I will never doubt your stories again.\"\n\nSkye began to giggle as she nodded emphatically.\n\n\"Uh, back to the reason for us coming here today--the real reason,\" he stressed. \"Am I going to be able to pick up a formal suit before tomorrow afternoon?\"\n\nPriya turned her head languidly and smiled at him. \"Oh, that. Sure, we have a few that would fit you in the shop. You can take one with you today. When you came out of the change room, I already knew we had something for you. I've been doing this long enough to gauge people's sizes by eye.\"",
        "Skye began to giggle again as Kyle looked at Priya in surprise again. \"Wha--why did we go through all that measuring--ah, right.\"\n\nPriya grinned at Skye. \"He's got a brain in his head too.\"\n\nKyle stood and confirmed no one was looking in the shop windows before he helped Priya and Skye up to their feet. They were both moving a little tenderly, but neither complained. He pulled on his boxers as the ladies tidied themselves.\n\nPriya slipped away, only to return in a minute with two suits. She explained the feature, and Kyle took them into the change room. The first one fit well, and he pulled the curtain back to see the ladies grinning at him.\n\n\"It's okay?\" he asked.\n\n\"You look yummy! Mum is going to eat you up!\" Skye gushed.\n\nPriya's eyes widened. \"I thought Kyle was getting the suit to attend a party with you!\"\n\nSkye jumped in before Kyle could speak. \"I don't need a fancy suit to enjoy a little time with Kyle. Mom has a work function tomorrow night, and Kyle is her date. He's just too good to keep all to myself, as you now know as well.\"\n\nPriya was still frozen with surprise as she looked at Skye.\n\nThe front doorbell jangled loudly as it was roughly shoved open.\n\nThe three at the back of the store looked forward, but only Skye responded. \"Shit. Owen.\"\n\n\"Skye! Terry told me he saw you walking along the street on the arm of some ponce, and there he is!\" the thug growled.\n\nKyle examined the man as he approached through the store like an oncoming storm; he was maybe an inch shorter than himself, wore his brown hair in a short buzz cut, had a square-jawed face with pale blue eyes set just a little too close together, and a nose broken and reset poorly more than once. He also had broad shoulders on a thick, blocky body. He looked strong and had big hands, which showed multiple scars from rough use. As threats went, he definitely ranked up there with runaway trains, earthquakes, and volcanos. Kyle felt a cool dispassion slip over his mind, and he didn't fight it as it would serve him.\n\n\"Owen, if you came here to make trouble, turn yourself right around and leave! Mr. Graham won't tolerate any foolishness in his shop,\" Priya snapped.\n\n\"Fuck off, curry nigger! I'm here to talk to Skye!\" Owen barked in return.\n\nPriya bristled immediately, but Owen intimidated her, so she glared at the man and said nothing.\n\nKyle gave Skye a gesture to proceed with her confession to the big man, and Skye's eyes widened in fear. Kyle's calm silence made her nod and turn to the angry man standing before her.\n\n\"Owen, I was going to call you later today. We need to talk. You remember I told you I wasn't going to be your girlfriend anymore--\"\n\n\"I remember you said some stupid stuff, but we still fuck, so you're mine.\" He looked at Kyle, who held his gaze, unfazed by the potential violence in the big man's expression.\n\n\"I told you that I wasn't your girlfriend because I don't love you. When we get together for a little fun, that's all it is--\"\n\n\"No! You're my girlfriend. I love you, and we have great sex. You don't get to suddenly say it's casual like you're some kind of skank like Priya,\" Owen insisted.\n\n\"I don't love you-\"\n\n\"NO!\" Owen roared, and swung a big meaty paw at Skye in an open-handed slap.\n\nKyle had been expecting that and tugged Skye out of the way of the blow, so she only felt the wind of its passing.\n\nThen Kyle stepped forward and hit Owen three times. He began with the solar plexus, the move he knew best. Quickly followed by a sharp jab to the throat, further preventing Owen from sucking in a breath. The precision strikes hit different nerve clusters, which left the man incapacitated for the next blow. He quickly adjusted his angle for the strike against the side of Owen's neck and caught the man's look of genuine fear. As the final blow struck, Kyle felt nothing as he put the brute down. After he confirmed Owen was unconscious, he looked at Priya.\n\n\"Call the police. Get them to collect Owen. Now.\" Priya jolted, then quickly nodded and rushed off to make the call.\n\nKyle looked into Skye's stunned eyes. \"You'll give a statement to the police when they arrive, and so will I. We'll tell them the complete truth. Is this understood?\"\n\nShe nodded.\n\nConfirming he had time, Kyle stepped into the change room and quickly switched back into his street clothes, putting the formal wear back onto the hangers. He closed his eyes and took a moment to let the almost clinical serenity slide off, and his hands began to tremble from the rush of unspent adrenaline. He struggled to control his breathing, and when he'd regained a semblance of calm, he stepped out to see Skye looking at him with wide eyes, Owen on the floor where he'd left him, and two officers hustling to the back of the shop. They stopped and looked down in surprise.\n\n\"Shit! Is that Owen Richards?\" one asked, and Skye nodded. \"Put down by this fella?\"\n\n\"Only after Owen took a swing at me!\" Skye insisted.\n\n\"Why would he try to hit you, miss?\" the second officer asked.\n\n\"I told him I didn't love him, and he couldn't accept that I was breaking up with him,\" Skye answered.\n\nThe second officer glanced at Kyle again, then back to Skye. \"For this bloke?\"\n\nSkye snorted nervously, then blushed. \"I wish. He's just a friend from Canada.\"\n\nThe two policemen looked at Kyle suspiciously.\n\nKyle's eyebrows rose. He felt he'd better make his statement before this went off the rails.\n\n\"Ms. Livingston and I came to this shop to rent a formal suit. We met Ms. Singh, who assisted me in selecting a one. Mr. Richards entered the shop visibly upset. He said one of his friends spotted Ms. Livingston and me walking arm in arm on the sidewalk to this shop. He was verbally abusive to Ms. Singh, using racial and sexual slurs. He then confronted Ms. Livingston. She explained that she'd broken up with him several months earlier but continued to see him casually. Mr. Richards indicated this meant she remained his exclusive girlfriend, and he loved her. He didn't react well when she informed him that she didn't love him in return,\" Kyle sighed as he looked down at the unconscious man. \"When he tried to backhand Ms. Livingston, I rendered him unconscious and asked Ms. Singh to contact you.\"\n\nThe two officers were staring at Kyle strangely. \"Who did you say you were?\" one finally managed.\n\n\"Kyle MacDenny. As she indicated, I'm Skye Livingston's friend. I'm visiting from Canada for the holidays.\"\n\n\"Are you in law enforcement, Mr. MacDenny?\" the second officer asked. \"Executive Security?\"\n\nHe smiled and shook his head. \"No, I used to be an investment manager, but I'm between jobs at the moment.\"\n\n\"Mr. Richards is a big man. How did you incapacitate him? Did you use a weapon?\"\n\n\"No weapons. Size isn't an advantage if you never get to use it. I know how to disable an opponent before they can act,\" Kyle explained without going into detail.\n\nSeeing Kyle wasn't going to incriminate himself, they turned to Owen, who was beginning to come around. When his eyes opened, he saw Kyle watching him calmly and jolted with fear. Then he noticed the two police officers bending down to take his arms.\n\n\"Arrest him! He hit me!\" Owen yelled, his fear still evident in his voice. The officers paused and looked at each other.\n\n\"Were you verbally abusive to the shop worker?\" one officer asked sternly.\n\nOwen's mouth worked for a bit, then he found his voice. \"I just told the truth. She is a skank!\"\n\nThe officers pulled him to his feet. \"Did you attempt to physically assault Ms. Livingston by slapping her?\"\n\nOwen's expression was swinging between despair and rage. \"She's talking bullshit.\"\n\n\"We're done. I never want to see you again! You tried to hit me!\" Skye snapped.\n\n\"I love you! Doesn't that mean anything to you?\" Owen spat.\n\n\"If you did, you wouldn't have tried to hit me! What the fuck kind of love is that?\" Skye exclaimed. She shook her head and gave him a look of disgust. \"I'm not your girlfriend, and I'm certainly not your punching bag! Get help.\"\n\nWith an enraged roar, Owen tossed the police from his arms and surged at Skye. Seconds later, he was squealing and writhing on the floor with Kyle kneeling on his back, pressing a thumb hard against the nerves behind his right ear. Owen twitched then went quiet as the pain took him out once more.\n\nKyle stood up and moved back with a frown when the two officers finally managed to get back to Owen. They were giving Kyle troubled looks. Neither had seen exactly how Kyle took Owen down as they'd been too busy trying to get off their asses.\n\n\"Can you put cuffs on him and get him away from Skye? Has he proven to you yet that he's dangerous and unstable? As Skye said, he needs help,\" Kyle growled. Skye was clinging to his back, staring in morbid fascination at Owen's slack expression and the way his jaw wasn't hanging straight any longer.\n\nOne of the officers noticed the state of Owen's jaw as well. \"Shit! You broke his jaw!\"\n\n\"Would you have preferred Owen breaking Skye's?\" Kyle asked as he held the officer's eyes.\n\nThe two policemen shared uneasy expressions. \"Where can we reach you?\" one asked.\n\n\"I'm staying with the Livingstons,\" Kyle answered. Skye mumbled the address, and the officers nodded.\n\nThey cuffed Owen, and each grabbed an arm and carried him out of the shop.\n\n\"When did you learn how to fight like that?\" Skye asked him when the door closed.\n\n\"You're one badass fighter!\" Priya cheered.\n\n\"I'm not, actually,\" Kyle grimaced and shook his aching hand. Owen's jaw had been particularly hard, but Kyle had been lucky to land his hammer fist punch at precisely the right spot to break the hinge. \"I just taught myself disabling moves, and I was ready to move before he could get ready. In a regular fight, I'd likely get my ass kicked.\" He looked at Skye. \"Are we going to have trouble with this guy, Terry, Owen's friend? Once word gets out that he was beaten, am I going to have to face a gang of angry thugs?\"\n\nSkye shook her head, but Priya was much more confident in her denial. \"Owen was the loose cannon of the group. He was the loud one, the show-off. The rest of the guys are just regular blokes. They'll be upset to hear he tried to hurt Skye.\" She smiled evilly. \"I'll make sure word gets out that's exactly what he was trying to do when he was stopped so violently.\" She kept the fact that she'd caught Owen's second attack on her cell phone from the side of the room. She was looking forward to watching it tonight as she remembered how well Kyle smashed her.\n\nKyle thought about the benefit of having Priya drum up support for their side and realized that was a good idea. He nodded to Priya then held up the suit. \"I'll take this one.\"\n\nPriya grinned and bit her bottom lip. \"I have to admit, when you knocked the stuffing from Owen the first time, dressed in black tie, it was like watching James Bond fighting.\"\n\nKyle snorted. \"I hope that's the last time I have to act out such a scene in this suit.\"\n\nThe pretty clerk filled out the rental form, and Kyle signed it as she put the outfit into a carrying bag.\n\nShe came around the small counter to give Kyle a hug. \"Thank you for turning yet another dull shift into an exciting afternoon.\"\n\n\"It was a pleasure meeting you as well,\" Kyle said with a smile.\n\nSkye tugged his arm, so he stepped back from Priya and picked up the suit bag to follow Skye from the shop.\n\n\"Are you okay?\" he asked her once they were outside.\n\nSkye clung to his arm as she marched them at a brisk pace towards her home. \"No! I feel like I might come apart at any second, so I'd like to do that at home, please,\" she choked out.\n\nKyle increased his pace and maintained it until they marched down the hall in her building to her front door. She fumbled with the keys and stopped to steady her nerves. She unlocked the door and rushed inside, with Kyle following. He closed it behind them.\n\nThe moment Kyle released the handle, Skye spun, threw her arms around him, and buried her face against his neck. Her tears exploded forth, and after a moment of surprise, Kyle gently wrapped his free arm around her. The tears became sobs, and her body began to shake, but Kyle held her tight.\n\nHelen came rushing from her bedroom at the other side of the condo with a concerned look in her eyes.\n\nKyle held out the suit bag for Helen to take, and when his hand was free, he stroked Skye's hair until he felt her begin to relax. The sobs became softer then stopped. She sniffled and rubbed her face against his jacket.\n\n\"You're lucky this is a leather jacket as its machismo is impervious to tears,\" he said quietly and heard her snort gently. \"Come on, let's sit in the living room and fill your mum in on what's going on. She looks like she's gonna have kittens!\"\n\nSkye burst into hiccups and giggles. She turned to see Helen waiting to get some answers. She released Kyle and rushed over to hug her mom.\n\n\"Oh my! What happened, dear!\" Helen gasped.\n\nSkye led Helen to the couch and tugged off her coat. Kyle took it from her and hung it up with his as the two women spoke quietly. Kyle took a seat across from them and remained quiet to give them their private moment. He heard Helen gasping from time to time, then she was hugging her daughter, and tears were falling again.\n\nHelen suddenly released Skye and leaped to her feet to rush to Kyle. She pounced on him, dragging him down to the cushions of the couch to kiss him again and again. He began to chuckle at how fierce her kisses were becoming.\n\nShe pulled back to look him in the eye. \"Why are you laughing at me?\" she asked in surprise.\n\n\"It's just your aggression is so... surprising!\" he said as he forced down his chuckles.\n\n\"You protected my baby from that crazed brute, twice! I can't thank you enough!\" she exclaimed.\n\n\"I wasn't going to just stand there and let him hurt her,\" he snorted.\n\n\"But you fought him, and he's such a strong young man!\" Helen said with a tremble.\n\nHe shook his head. \"Like I told Skye's friend, Priya, I'm not a fighter. I learned how to punch someone to stop a fight before it starts. I'd get beaten to a pulp in a real fight. If Owen had been a little more cautious, I'd have been the one in the hospital. I was just very lucky that he was a shittier fighter than me.\"\n\nHelen looked over at Skye. \"Hospital?\" she exclaimed.\n\nSkye nodded with big eyes. \"Kyle broke his jaw. It was hanging down....\" She looked a little green.\n\nKyle squirmed. \"Yeah, it wasn't the prettiest sight, but it's a devastatingly effective move.\" His stomach took that moment to grumble, and Helen's eyes twinkled with amusement.\n\n\"I've made a lovely stew for dinner tonight. Something to warm the insides on a cold night.\"\n\nKyle sighed happily. \"Sounds delicious!\"\n\nThey untangled, and Helen directed Kyle and Skye to the dining room table while she brought out the tureen of homemade stew. A fresh baguette was in a basket on the table with a bottle of red wine.\n\n\"Could I ask you to do the honors of opening the wine?\" Helen asked Kyle. He nodded and got to the task as Skye watched him with a small smile from her seat next to him.\n\nHelen returned, and he poured for them.\n\nWhen everyone was seated and raising their wine, Helen spoke again. \"To good friends who are there for you when you need them the most.\"\n\nKyle nodded and heard a sniff from Skye. He looked in her direction, but she just dabbed her eyes and smiled at him.\n\nThey ate in relative silence, just enjoying the warmth of the good food, good wine, and good friends.\n\nAs the meal wound down, they caught each other yawning and shared smiles.\n\nHelen placed her hand over Kyle's on the table once they finished eating. \"Kyle, I was going to ask you to share my bed tonight, but from the looks Skye is sending your way, I think she was hoping you'd join her. From everyone's yawns, the best compromise would be for us to all share my king-sized bed--to rest!\" she finished with emphasis to ensure Skye understood.\n\nSkye nodded in complete agreement as the day had taken too much out of her. She did want Kyle beside her tonight, not for sex but to ward off the nightmares or to calm her if she had one.\n\n\"That would be lovely, and thank you for the delicious meal,\" Kyle said with a nod.\n\nThe three friends tidied up the dishes and kitchen together, though Helen and Sky protested Kyle should just relax as their guest. He insisted, and they graciously and quickly accepted. Mother and daughter smiled at each other as they enjoyed having Kyle nearby.\n\nThey finished up and got ready for bed. Soon, Kyle found himself resting back in the middle of a mattress with a smiling woman on either side of him. They pushed up on their elbows, and each gave Kyle a sweet, sensual kiss.\n\nWith the two ladies cuddled in on both sides, Kyle let his exhaustion take him away.\n\nHe wasn't the only one to be comforted by the closeness. Skye's dreaded nightmares never became more than uncomfortable images that flitted by in her dreams. Helen's dreams were filled with dancing as she was excited about the following night.\n\nFor her, it couldn't come soon enough.\n\nChapter 4\n\nKyle did his best not to gawk at the immense stone edifice they were driving towards.\n\n\"Whose place is this again?\" he asked.\n\nHelen smiled over at him as she skillfully slipped her car into a spot behind another parked vehicle on the long driveway. \"Some very generous sponsors to the hospital. Reginald and Francis Dunsfield. Apparently, they've been hosting the hospital's Christmas parties for years. They built a wing on the hospital as well. I met them once. Wonderful people!\"\n\n\"Do they have twenty children?\" he asked before they stepped out of the car. She looked at him curiously, and he gestured to the expansive stone mansion.\n\nShe chuckled and shook her head. \"No, just three, all grown and living their own lives elsewhere.\"\n\nHelen had spent the day at the hospital as it was a workday. Skye snuggled against Kyle on the couch as they watched TV. It was a decompression day for the young woman, and Kyle was fine with that.\n\nIt was late afternoon when Helen returned, and they got dressed for the party and headed out.\n\nKyle offered his elbow and walked Helen up the drive to the front door. She gave their invitation to the man at the door and went inside. Helen left her overcoat with a young woman, and Kyle put the ticket in his jacket pocket. They moved further into the home, and Kyle looked around in appreciation.\n\n\"Nice place,\" he said.\n\n\"Thank you! We call it home,\" a voice said from Kyle's right.\n\nLooking towards the speaker, Kyle found himself under the scrutiny of the intense grey eyes of an older man with a bushy white mustache linked up to white sideburns. His white hair was just a little wild as well.\n\nHelen beamed a wide smile at the older gentleman. \"Mr. Dunsfield! So lovely to see you again! Thank you for hosting the party in your beautiful home!\"\n\nKyle noted the man's gaze softened considerably when he looked at Helen. \"It's our pleasure, and please call me Reginald. It's wonderful to see you again as well!\" he said as he held her hands in his. Kyle could see the gentleman genuinely liked Helen, and that brought a smile to Kyle's face.\n\nThe grey eyes returned to their scrutiny, and Kyle struggled to keep from grinning now that he knew the man was protective of Helen.\n\n\"Let me introduce my good friend, Kyle MacDenny,\" Helen said with a pleased smile.\n\nKyle shook the man's hand and gave back as good as he got as the grip tightened.\n\n\"Reggie! Let go of the boy's hand before you break something,\" a woman's voice scolded from behind Kyle. Begrudgingly, the man released his grip.\n\n\"This one shows no sign of such frailty,\" Reginald grumbled as Helen's eyes widened with concern.\n\n\"I meant your hand, you silly man,\" an older woman with graying red hair replied as she moved to face the recent arrivals. \"Hello, Helen! So good to see you again! I overheard you introduce this young man as Kyle?\"",
        "Helen shook the woman's hand and glanced at Reginald in question before answering. \"Francis! Yes, Kyle MacDenny. From Canada.\"\n\n\"It's very nice to meet you both,\" Kyle said graciously as he gently shook the woman's hand.\n\n\"What do you do in Canada?\" Reginald asked, earning a frown of annoyance from his wife.\n\n\"Until a short time ago, I was an Investment Manager for an investment house in Vancouver. When I realized I wasn't being fulfilled by the work, I resigned. I'm living off the earnings of my own investments while I search for something that brings me joy.\"\n\nThe older man huffed. \"That pays the bills, does it?\" he said gruffly.\n\n\"It does, but I live a minimalist lifestyle,\" Kyle replied, then looked around at the grand hall they stood in.\n\nFrancis chuckled daintily as she smiled at Kyle. \"There is nothing minimal about my Reggie!\"\n\n\"Oh!\" Helen gasped quietly in amusement, then Francis picked up on her double entendre and burst into embarrassed giggles.\n\nReginald couldn't stop a smile from crossing his features. He gave his wife a kiss on the cheek. \"She says the sweetest things.\"\n\nHe looked back at Kyle. \"What brings you to England?\"\n\n\"I promised Helen I'd visit her over the Christmas and New Year's holidays,\" Kyle replied, and Helen hugged his arm with a broad smile.\n\n\"We met while on a cycling vacation in France. The people we rode with were so much fun! It's so nice to continue to keep in contact!\" Helen gushed, and Kyle nodded with a smile of his own.\n\n\"There's going to be dancing after dinner, so save one for me!\" Reginald said to Helen with a wink.\n\n\"And Kyle can save one for me!\" Francis insisted. Kyle smiled at her and nodded.\n\nTheir host moved on to greet the next guests coming into the hall.\n\nHelen continued to hold his arm, and they moved further into the home. The decorations were beautiful and left them with the impression of what Christmas must have been like a century ago. Helen's eyes sparkled with joy, and from the ache in his cheeks, Kyle was sure he was grinning like an idiot.\n\n\"Helen!\"\n\nThey'd just entered a large room set up with a bar and a crowd standing before it. A small group of people were waving vigorously at Helen.\n\n\"That's my team!\" Helen exclaimed happily.\n\nShe led Kyle over to meet the group. There were two men and three women waiting for them, and Helen took him through the introductions. Harry was a man in his sixties with a thin fringe of hair and twice as much growing on his upper lip, and he looked like he was ready to retire. William was a clean-shaven young man fresh out of university, looking excited just to be here.\n\nJane was another veteran and in her fifties. She was a thick-bodied blonde with a bosom threatening to escape her party dress. Ginny wasn't much older than he was, had a shock of brilliant red hair, pale skin, and freckles splashed across her cute face. She looked like she had Jane's genetic disposition for carrying extra weight, but it wasn't too obvious yet as her dress was much more demure. She'd been working at the hospital in some capacity since met mid-teens. She was obviously following in Jane's footsteps.\n\nShelina was Helen's personal secretary and a giggly mess. The East Indian woman was very light-skinned and seemed just a little older than Kyle. She had long, luxurious black hair and was very pretty, but she couldn't stop her nervous giggles from erupting during the introductions.\n\nThe group found this to be very amusing and intriguing, but she wouldn't explain her behavior. When pressed, she just shook her head and shrugged.\n\nKyle caught her dark eyes stealing glances at him and saw Helen's eyebrows rise as the women's eyes met. He assumed Helen might have taken Shelina into her confidence about their time in France.\n\n\"This your first time in England?\" Harry asked Kyle in a relaxed tone. Kyle picked up that Harry had visited the bar more than once. His rounded tummy told Kyle he liked his ale.\n\n\"Yes,\" he responded.\n\n\"No family at home to share the Christmas holidays with then?\" the older man continued with a friendly smile.\n\n\"Harry! Rude!\" Jane scolded.\n\nKyle blinked in surprise at the bold question but nodded to the man as a slow smile appeared. He patted Helen's hand on his arm as he addressed the group. \"No, no family and no home at home. I gave up my apartment in Vancouver to travel. I rode my motorcycle south to Santa Barbara, California, and spent some time there with friends. Then I rode through the states, making my way northeast to Montreal, where I stayed with a friend for a time until I came to England.\" He felt a brief pain as he referred to the sweet French Canadian as a friend. He couldn't honestly call her that, but it would have to do.\n\n\"You're a modern-day nomad!\" William gushed. \"I have to get myself a motorcycle!\"\n\n\"You'll do no such thing!\" Jane insisted with a raised eyebrow for the young man. This made the group chuckle.\n\n\"Skye and I are thrilled to have Kyle visit us over the holidays!\" Helen said with a pleased smile on her lips. \"We had such fun on the cycling vacation--\"\n\nShelina snorted as she took a sip of her drink and began to cough. Ginny rubbed her back as Jane gave her a napkin to dab her mouth.\n\n\"Excuse me, please,\" the woman murmured as she slipped away to tidy herself.\n\nJane's expression changed to one of mischievous delight as her eyes caught sight of a man walking through the doorway. \"Don't look now, but Dr. Hansey just arrived.\"\n\n\"Handsy?\" Kyle asked, having misheard.\n\n\"Oh! Helen's already told you about him!\" Ginny said with a grin.\n\nHelen's face was glowing a fetching pink as she shook her head. \"Han-see. Dr. Hansey. Chief surgeon at the hospital. Ah well, he's seen me. Good evening, Richard!\"\n\nKyle got a good look at the man as he approached with a pleased smile on his face. The tall, slim man was sporting a black van dyke beard peppered with grey. His graying hair was cropped military short, and he was in pretty good shape for a man in his forties.\n\n\"Good evening, Helen!\" he said with a smile, then glanced at the others around her. \"Good evening... Helen's team.\" Obviously, he never bothered to remember any of their names. His eyes stopped on Kyle. \"Oh, you must be new!\"\n\nKyle grinned at the man. \"No, I'm Helen's plus one.\"\n\nThe doctor froze as his eyes jumped between Kyle and Helen.\n\n\"Richard, this is Kyle, my good friend from Canada,\" Helen said with a sweet smile on her lips.\n\n\"From Canada? You're a long way from home for the holidays!\" the man said, his smile a little too stiff to seem genuine.\n\n\"Helen's worth the journey,\" Kyle said as he looked at the beauty at his side. His smile was genuine, and she blushed happily. Her team whooped and cheered until she swatted them into giggling submission.\n\nRichard struggled to show a carefree smile of his own. He nodded to Kyle then looked at Helen. \"Have a lovely night, Helen!\"\n\nShe gave him a smile and a nod. \"You as well, Richard. Merry Christmas!\"\n\n\"Yes, you too,\" he mumbled awkwardly and moved off towards the bar.\n\n\"He seems nice,\" Kyle ventured as he looked at Helen.\n\n\"He's an inappropriate toucher. If his hands weren't so important for saving lives, I think I might smash them with a hammer,\" she sighed. The team erupted in giggles.\n\nShelina returned and aimed an apologetic look at her boss.\n\nJane gave her boss a cheeky smile. \"You were telling us about the fun you had in France?\"\n\nShelina's eyes shot to the older woman in surprise. She managed to control herself this time.\n\nHelen shook her head with a raised eyebrow. \"It was a lovely trip, a beautiful route to cycle, and we met a lot of wonderful people, including Kyle.\"\n\nHarry leaned closer. \"I overheard the tour was for couples. Helen's divorced, so she brought her daughter Skye. Who did you bring?\"\n\n\"You're such a cheeky fellow when you drink!\" Jane exclaimed in frustration at the man.\n\nThat didn't stop the group from looking to Kyle for his answer. Helen gave him an apologetic smile, and he shrugged.\n\n\"I was supposed to be there with my fianc\u00e9, but she chose to run off with another man instead,\" he said calmly as he held their eyes. He saw shock and surprise, even from Harry.\n\n\"The biggest mistake that woman ever made,\" Helen growled fiercely, and her team burst into laughter once more. Helen's face glowed with embarrassment. She tried to hush them as people were beginning to take notice of the rowdy group.\n\n\"It's true! She admitted it herself when she came crawling back near the end of the tour!\" Helen insisted with a quieter voice as she leaned closer to her people. They all leaned in excitedly.\n\n\"She came back to you?\" William gasped, wide-eyed.\n\n\"You didn't take her back, did you?\" Ginny exclaimed.\n\nKyle grinned at her as the others burst into laughter once more. \"No, she burned that bridge too badly.\" He looked at Helen. \"She was on my flight home, and... tried to get together with me once more.\" Helen gasped. \"When I told her it was over and to leave me alone, she assaulted a flight attendant, then an Air Marshal.\"\n\n\"She's mad! You're lucky to have gotten away!\" William exclaimed, and Kyle nodded to him as he recalled how badly she'd manipulated him.\n\nHelen saw the sadness and touched his arm with a compassionate smile. \"Would you like a drink?\"\n\nHe nodded. \"Scotch, neat,\" he said with a smile for her.\n\nShe moved off towards the bar with Jane at her elbow.\n\nThe others moved closer to Kyle as he eyed them cautiously.\n\n\"Helen has been distracted and dreamy-eyed ever since she heard you were coming for a visit,\" Harry exclaimed.\n\nKyle picked up the scent of rum from the man from this close, though he showed no visible signs of being drunk. He smiled at the group. \"I was looking forward to it as well!\" He caught Dr. Hansey giving him a disappointed glare as he passed by. \"So, the grumpy doctor isn't the only one making eyes at Helen, is he? Skye told me she has several admirers.\"\n\n\"Jealous?\" Ginny grinned at him, but he shook his head.\n\n\"I'd be surprised if Helen didn't have men lining up to see her. I'm just asking for a heads up on anyone else who might not appreciate my presence.\"\n\nShelina worked up the nerve to move closer. Kyle admired her lovely dark brown eyes until he noticed they seemed to look deep into his soul. Her intensity was intimidating!\n\n\"What are your intentions now for Helen?\" she asked, point-blank. The others looked at her in surprise but quickly looked to him for his answer.\n\n\"We're friends. We like spending time together. I'm friends with Skye too. They were there for me when my life went sideways in France at the start of the trip and when Gwen showed up at the end.\"\n\n\"Your fianc\u00e9?\" Shelina asked. He nodded. \"And Helen's just a friend?\"\n\nKyle snorted quietly as he watched the group. He wasn't going to give them an answer as it was none of their business. He saw the dawning realization appear on their faces, one after another, with William being the last. \"Back to my question. Are any of the other suiters here tonight?\"\n\nShelina was obviously disappointed with the answer he wasn't giving, so she remained quiet. William, on the other hand, was feeling chatty.\n\n\"Dr. Peng arrived not too long ago, but his wife is clinging to his arm, so I doubt he'll be making any moves on Helen. I haven't seen Dr. Montgomery--\"\n\n\"He's in Indonesia, volunteering at a clinic in some god-forsaken remote village. Goes every year at this time. Probably just to avoid this party,\" Harry grumbled.\n\nKyle wasn't pleased to hear about the married man. \"Peng is married and is after Helen?\"\n\nGinny nodded with a frown. \"He's not really serious. He just competes with Dr. Hansey for everything. He wants the Chief Surgeon title as well. He's a bit of a creep. Dr. Montgomery is nice, though.\"\n\n\"Not married?\" Kyle asked.\n\nGinny shook her head. \"A widow.\"\n\n\"Who's a widow?\" Helen asked as she returned and handed Kyle his drink.\n\nHe accepted the tumbler with a smile. \"Thank you. We were just talking about your suiters. Dr. Hansey, I've met. Dr. Peng is here and married, apparently. Dr. Montgomery isn't here as he's doing volunteer work in Indonesia. He sounds nice.\"\n\nHelen eyed her people with suspicion.\n\n\"Kyle was the one who brought it up!\" Ginny confessed nervously at the annoyed look from Jane.\n\n\"Shelina was grilling Kyle on his intentions!\" William asserted.\n\nAt Helen's shocked look, Kyle leaped in. \"Not grilling. Just a curious inquiry.\"\n\n\"And none of her business!\" Helen gasped.\n\n\"Well intentioned concern. Nothing more. It's nice to have such good friends.\" Kyle continued, holding Helen's eyes with his, and could see her calming. He took a moment to take a sip of his drink. Very smooth. \"Ooo, that's really good!\"\n\n\"Of course, it is! Do you think we'd serve that swill they make in the colonies?\"\n\nKyle turned to smile at Reginald, who was also holding a tumbler of the dark amber liquid. He raised his to the older man. \"You serve, quite possibly, the best Scotch I've ever tasted. Thank you, sir!\"\n\nThe man's mustache tilted up with his smile. He gave Kyle a nod and raised his glass in return. They sipped as they held each other's gaze. Reginald nodded to himself as he moved to Helen's side. \"I like him,\" he said in a stage whisper and moved on.\n\nHelen's smile was back, her annoyance with Shelina forgotten.\n\n\"Have you seen the dining room yet?\" Jane asked her boss. When she shook her head, Jane gestured for them to follow.\n\nThe group left the parlor and walked down the grand hallway and through the last door on the right. Kyle's eyes widened in awe as it felt like the vast chamber had been pulled out of the past. The room was dominated by a long table that had to seat close to one hundred. The table must have been five feet across, which left plenty of space in the center for a centerpiece that ran almost the length of the table. Crafted from long-needled evergreen boughs, it was woven through with red and gold ribbons and white bows. Candelabras rose from the branches at set intervals to add a warm glow to the atmosphere. The place settings gleamed with an abundance of glasses and cutlery for each guest. Kyle looked at Helen nervously, and she patted his arm.\n\n\"Just watch me. My parents taught me proper dining etiquette in case I married into nobility,\" she said to him quietly. He gave her a grateful smile.\n\nThe walls were covered with massive paintings of people riding horses, hunting wild boars, or standing with large dogs.\n\nHe found himself staring up at the ornate trim around the high ceiling. While it all felt over the top for him, he could appreciate the craftsmanship that went into its construction.\n\n\"Oh!\" Helen gasped quietly in surprise. He looked at her curiously. She gestured to the handwritten name tags. The calligraphy was lovely. He spotted Helen's name, and the next tag had his name. He looked at her with a questioning smile.\n\n\"We're sitting very close to the hosts, the Dunsfields!\" she gasped quietly.\n\n\"They seem like fun people,\" Kyle replied with a grin.\n\nShe nodded distractedly. \"These closer seats are reserved for the senior executives of the hospital. The very well-connected representatives of the hospital. Us being seated here may be seen as disruptive, politically.\"\n\nJane grinned at her. \"We're thrilled to see you so well regarded by the hosts!\" Her team nodded.\n\nKyle noted Dr. Hansey was seated across from Helen. He wondered how that would play out.\n\nThe group continued down the table, and Helen spotted the names of her team. They were together, but across from another of the admin teams they got along with, so she relaxed.\n\nThey heard a gentle chime, and people began to enter the dining room to hunt for their seating positions. Kyle looked at Helen, but she didn't seem ready to leave her people just yet. He hoped this seating move wouldn't make her life difficult at work. The Dunsfields were the hosts, so they set the rules, but they didn't work in the hospital environment as Helen did. She would bear the brunt of the grief this might stir up. He sighed as there was nothing she could do.\n\nFinally, Helen could no longer avoid taking her seat, so she and Kyle moved to their chairs. They set down their cocktails, then he held her chair out for her. He noted a few people looking at them with interest. Only one expression seemed a little sour from a woman he hadn't met, so he looked at their hosts. Kyle smiled at Reginald and Francis, who were admiring his polite manners. Kyle tucked himself in as Dr. Hansey arrived. The man's expression went from delight at seeing Helen across from him to annoyance when he spotted Kyle.\n\n\"Excuse me, Mr. Dunsfield. Where are the Chathams?\"\n\nKyle looked to the voice and saw it was the sour one from earlier.\n\nThe white-haired gentleman turned to the woman. \"The house received a call a short time ago. Jacqueline and Fredrick are rushing to the airport now to fly to Greece. There's been some trouble there involving their only son. I have no more details, but understandably, family takes precedence.\"\n\nKyle glanced at the stricken expression on Helen's face. Apparently, Reginald saw it too.\n\n\"I'm sure it's nothing dire. It's my understanding the boy is going through a bit of a rebellious stage. He probably got into a fight and needs his parents to assist him with the police,\" the older man explained. This seemed to put Helen at ease.\n\n\"There's been a rash of rebels getting into fisticuffs!\" Dr. Hansey offered. \"Young Owen Richards came into the ER last night in the company of two constables. The fellow is a rugby player at the local college and a bruiser, but he met his match last night. I spent four hours reconstructing his jaw and wiring it shut so it can heal.\" The doctor looked over at Helen. \"Wasn't Mr. Richards seeing your daughter, Skye?\"\n\nHelen gave him a somewhat stiff nod. \"Skye broke up with Owen months ago but occasionally saw him casually as the young do these days.\"\n\nDr. Hansey looked genuinely confused. \"The boy was calling out her name when he arrived with a broken jaw. It sounded to me like he was still in love with her.\"\n\nHelen looked like she was becoming upset, so Kyle placed his hand on hers, and she calmed. Kyle turned his face to the doctor, unaware that all nearby guests were listening. He felt a calmness settle over his nerves.\n\n\"What you heard wasn't a boy expressing his love. Love isn't a hard backhand to the face. Love isn't a closed fist. What you were hearing was the rage and anguish of a boy who realized he couldn't own the thing that made him happy. That's something this boy wouldn't accept. So, violence was his answer. It probably was his whole life. You mentioned he played rugby. That was probably a good, safe outlet. But now, he directed that violence towards someone he... loved?\"\n\nDr. Hansey was staring at Kyle in surprise. \"You? You were there? You did that... to him?\"\n\nKyle took another slow breath to calm himself. \"Doctor, let me ask you a hypothetical question. I understand you follow the Hippocratic oath. Do no harm?\" Hansey nodded cautiously as he held Kyle's eyes.\n\n\"Someone you care for is about to be physically assaulted right before your eyes. The assailant has already started moving. The injuries your friend will suffer will be devastating, both physically and mentally. You could stop it, but the only guaranteed way to protect your friend requires you to harm the assailant. What do you do?\"\n\nThe doctor snorted. \"You're creating a scenario with only one avenue. There's always--\"\n\nBANG!\n\nKyle lifted his hand from the table where he's slammed it. The room went silent. \"That's all the time you had, and it's gone. Your friend is bruised and bloody on the floor. Lost teeth? Broken bones? Emotional scars that last for years?\" He shook his head slowly. \"I believe the medical field is one of the most honorable pursuits people can undertake, and I'm truly thankful that people like you dedicate yourselves to it... but I don't envy you your constraints.\" He looked the doctor in the eye. \"I detest violence with every fiber of my being, but yes, I was there. My good friend faced that violence, and I acted to protect her. Twice. This wasn't a rational assailant. Owen believes he owns Skye. When she disagreed, he tried to strike her. I put him down instead. I had the police called. When they arrived, Skye explained to them what she told Owen, and in a rage, he threw the constables aside like rag dolls to launch another attack on Skye. I put him down again.\"",
        "\"His jaw was shattered! How is that detesting violence? You've obviously taught yourself to fight! To be violent!\" Dr. Hansey blustered.\n\nKyle nodded. \"I didn't get training on how to fight. I taught myself how to decisively stop a fight. Yesterday, I just did what needed to be done. I took no joy from it, but I feel no guilt or remorse either. I acted, and Skye is safe. Does that make me a good person or a bad person? That's a question for the philosophers. My friend is safe.\"\n\nKyle nodded humbly to Reginald and Francis. \"I sincerely apologize for the theatrics of slapping the table. A point needed to be made.\"\n\nReginald was doing his best to hide his smile, but Kyle could see it in his eyes. \"Quite so. Apology accepted.\" Francis made no effort to hide her own smile.\n\nThe waiters took the opportunity to begin serving the meal, and the conversation turned to small talk. Kyle looked at Helen, who was looking a little glassy-eyed. \"Are you okay?\" he asked quietly.\n\nShe flashed him a small smile. \"Sorry, yes. I just recalled how close my baby came to being hurt by that awful young man. She had poor judgment when she chose him. Maybe she was excited by his aggression, but it was turned against her in the worst way.\"\n\n\"But it didn't. Skye's a little shaken, but she's fine. Maybe she learned something important about the kind of man she should be looking for,\" Kyle suggested quietly with a small smile.\n\n\"One like you?\" Helen said.\n\nKyle snorted. \"She should aim higher.\"\n\nHelen gave him a surprised look. \"You can't seriously mean that!\"\n\nHe held her gaze. \"I can and do, but let's put that aside for now and enjoy the evening.\"\n\nHe looked across the table and saw Dr. Hansey watching him pensively as he pushed his food around his plate with his fork. Kyle thought he should probably deal with him as well. \"I meant no offense by my words earlier. I really do respect your profession.\"\n\n\"Thank you,\" he said with a satisfied smile, then it faded as he pondered Kyle's words for a second meaning.\n\n\"Mr. MacDenny-\" Reginald began.\n\n\"Please call me Kyle.\"\n\nThe older man nodded in gratitude. \"I have a question, and I hope you don't take offense to it.\"\n\nKyle nodded with a smile.\n\n\"How often do you find yourself in situations like the one you described earlier?\" the man asked.\n\nKyle thought about that and was disturbed to acknowledge in recent months, it was a little more frequent than he recalled it was before.\n\nHe'd only had to do it once when he was with Gwen. Then there was the jerk who wanted to fight him in the men's room while he was out riding his motorcycle with Charlize and Chloe and the basketball player in Las Vegas who went after Chloe, though he hadn't had to throw any punches in that situation. \"There have been a few times in recent months, but always in defense of a friend.\"\n\n\"You must have a lot of friends!\" Reginald said.\n\nKyle gave him a wide smile. \"I treasure my friends. They're worth protecting.\" He gave Helen's hand a squeeze, and she smiled at him.\n\nDinner continued, and Kyle noticed the hosts were directing most of their attention towards asking Helen questions. Her likes, what she'd done before joining the hospital, and dealing with a precocious teenage girl. The sour puss woman was becoming more and more put out as dinner progressed as none of the attention was being directed towards her or her husband. Finally, she'd reached her limit.\n\n\"You enrolled her in acting? Have you given up on trying to make her into a proper young woman?\" the woman exclaimed, and conversation died down around them.\n\nHelen simply smiled at her. \"One never gives up hoping for the best for their child. I take pride in knowing that Skye has become a good and caring person. The rest is window dressing.\"\n\nKyle watched the woman deflate as disapproving looks were sent her way. Even her husband had been embarrassed by her comment.\n\nThe wait staff returned to remove the dinner plates and offered a little dish of dessert. There was a slice of Yule Log cake and two shortbread cookies. Kyle automatically shook his head to skip dessert.\n\n\"Not a fan of sweets?\" Helen asked.\n\nKyle realized he'd reacted based on Gwen's training once more and sighed. \"I used to be, but not anymore. That's not necessarily a bad thing.\"\n\nHelen understood his meaning and squeezed his hand. He smiled back at her, feeling a little better.\n\nWhen dinner was over, Reginald asked the six nearest men to join him in the study for an after-dinner cocktail. Kyle was included in this.\n\nHelen went off with Francis and the ladies.\n\nThe study was everything Kyle expected it to be. Rich woods, leather chairs, and walls adorned with oil paintings depicting hunting scenes with horses and dogs.\n\nThe good scotch was offered once more, and Kyle accepted a tumbler with a gracious nod.\n\nDr. Hansey seemed just a little annoyed that Reginald had taken a shine to Kyle, but he was politically savvy enough to know not to make a big deal about it.\n\nKyle was smart enough to not take advantage of his novelty, but Reginald still had questions and was determined to get answers.\n\n\"Young Kyle, you mentioned earlier that you resigned your position at the investment house to search for something that brings you joy.\" Kyle nodded with a smile. \"How long have you been searching, and what have you found?\"\n\nKyle's smile became a grin as he sipped and swallowed the fine scotch. \"It's only been a little over five months. My quest for joy has just begun. The first part is just about breaking free from the ties to my old life. I made excellent progress there. I gave up my apartment in Vancouver, sold most of my possessions, took my motorcycle out of storage, and rode south to Santa Barbara to visit another friend I made on the cycling trip in France. I made some new friends. I had some good and bad experiences, and I learned some life lessons.\" He fought back a frown from recalling the particularly painful lesson of Monique's masterful deception. \"I spent the rest of the year in Montreal just coasting along and adding investments to my portfolio.\"\n\n\"Are you actually able to live off that?\" Dr. Hansey asked doubtfully.\n\nKyle nodded. \"It's definitely possible if you have a talent for investing, which I do, and it helps if you live frugally. I've discovered I enjoy living with a minimalist lifestyle. The only exception is my motorcycle, which is my only connection to my father, who passed away years ago. I don't regularly drink scotch this magnificent. My wardrobe and worldly goods fit in a small duffle bag. I own no property.\" He saw the uncomfortable looks on the faces around him and chuckled. \"I know, I get it! Life is about acquiring stuff, right?\" He received nods and relieved smiles from the group. \"Except, I've discovered that things don't bring me genuine happiness. People do. Connecting to people, learning about their lives, talking with them, and just sharing my time has been so fulfilling!\"\n\nReginald seemed confused about something. He finally spoke. \"You're too young to be retired! You're at the age where great achievements are possible, and challenges are there for you to conquer. You could be creating your own business venture and build it into a globe-spanning empire!\"\n\nKyle grinned at the man. \"That sounds like your dream. Didn't you achieve that?\"\n\nThe older man grinned self-consciously, then reluctantly nodded, but his expression became earnest as he put his hand on Kyle's shoulder. \"You have youth, vitality, seemingly an eye for finance, and a level head. Those last two attributes are missing in this generation. Don't you realize how much of an advantage that gives you?\"\n\nKyle nodded. \"Earlier this year, I was actually on the life path you described. I had a plan, but the problem was that plan wasn't bringing me any fulfillment. It was all for a woman who was the center of my life. I loved her unconditionally. Everything I did was for her. I changed everything about me for her until there was almost nothing left of me. Then she discarded me the night before we were to begin our bicycling vacation in France. She left a note with hotel reception stating she had a new man.\"\n\n\"Bitch!\" Hansey blurted unconsciously, then blushed at his outburst.\n\nKyle nodded to him and continued. \"I've been re-evaluating what's truly important to me ever since. I may very well discover one day that I want to create a vast business empire as you did, but for now, nothing has identified itself as the magic bean that dream will grow from,\" Kyle finished with a shrug.\n\n\"What happened to the woman who left you?\" Dr. Hansey asked.\n\nKyle shook his head. \"I don't know. The last time I saw her was in court. She has a restraining order to stay away from me, and the judge ordered her to get psychological counseling.\" He sighed then noticed the men were staring at him in confusion. \"Oh! Right, sorry. By the end of the bicycling holiday, she showed up and tried to get me to take her back as the other man didn't work out. I told her no. She couldn't accept that answer, so she tried to sexually assault me on the flight home as I slept. I stopped her, and she lost it, attacking a flight attendant and an Air Marshall.\"\n\nThe men erupted in protest. Kyle blinked at them in surprise.\n\nReginald grinned and patted Kyle on the shoulder. \"It sounds like none of them have ever heard of a man willing to claim they were sexually assaulted by a woman.\"\n\nKyle shrugged. That was their problem, not his.\n\nThe older man looked to the clock and addressed the group. \"I think it's time to dance with the ladies. Shall we join them?\"\n\nThey left the study and made their way to a large room where music was playing. Tables were set up around two sides of the room, and Kyle spotted Helen's team, but no sign of the woman herself yet.\n\n\"Thank you again for the wonderful scotch!\" Kyle said to the host.\n\n\"You're most welcome! See you on the dance floor!\" the man said, and Kyle nodded with a smile before heading over to speak with the gang.\n\n\"Well, if it isn't the table thumper!\" Harry exclaimed with a grin. Kyle shrugged with a smile. \"Come on, out with it! You've got the whole party buzzing about what was being said and why.\" Harry insisted.\n\n\"It was just a little demonstration for Dr. Hansey about how little time one has to take action to protect a friend in a violent situation. He took exception to the state I left someone who threatened Skye.\"\n\n\"Owen Richards! Oh my god, you did that?\" Harry gasped, and Kyle's eyebrows went up. Small town, indeed. William seemed to pick up the implied question. \"I have friends still in Uni, and they know of Owen. He's kind of infamous for his temper. Scares the piss out of most.\"\n\n\"William! Language,\" Jane scolded. \"Now, what exactly did Mr. MacDenny do to Mr. Richards?\"\n\n\"Shattered his jaw. I heard he had a concussion as well. He was taken in restraints to the psych ward after Dr. Hansey rebuilt his jaw and wired it shut.\"\n\nKyle nodded, glad to hear they were taking the man's unbalance seriously. Then he noticed eyes were on him and sighed. \"If I hadn't stepped in, it would have been Skye in the hospital with those injuries. The man's mentally ill. That's all I'm saying.\"\n\nHelen appeared at his elbow. \"Are you being grilled, again?\" she asked with a little steel in her voice. Her people snapped to attention, even Harry, who was beginning to show how many he'd had this evening.\n\n\"No, they were just asking about my little theatrics earlier this evening. Slapping the table,\" Kyle replied.\n\n\"Oh, well, the Dunsfields were not upset by that at all and agreed with the point Kyle was making, so we can all move on.\"\n\n\"Speaking of moving, may I have this dance?\" Kyle asked Helen, who smiled and nodded. The earlier music was for older guests, and the younger people would get their noisy, fast music later.\n\nHe guided her out and held her in his arms as they swayed together on the dance floor. Her cheeks showed a pink glow from her excitement and joy. They glided along together, oblivious of the other people around them.\n\n\"Having fun?\" he asked quietly, and she nodded quickly as she flashed him a smile.\n\n\"You look truly ravishing tonight!\" he said quietly, and her smile shone that much brighter. \"I also think the Dunsfields are very impressed with your work at the hospital.\"\n\nShe looked at him questioningly. \"Did you hear something?\"\n\nHe shook his head slightly. \"Not directly. It's just my intuition based on tonight's conversations at dinner.\" He looked at his dance partner. \"Just how much sway do they have with the hospital's administration?\"\n\n\"I'd say it was considerable. Why?\" she asked, looking him in the eye.\n\nHe shook his head. \"As I said, it's just my intuition speaking but, it sounded to me like they were interviewing you.\"\n\nHelen laughed gently as she smiled at Kyle. \"No, I'm sure they were just expressing their polite interest in a guest who doesn't normally sit amongst that particular group.\"\n\nKyle just gave her a cheeky smile and shrugged, not willing to concede the point.\n\n\"Silly man,\" she chuckled quietly as they glided around the dance floor.\n\nToo soon, the song came to a close, and Kyle saw Reginald and Francis approaching.\n\n\"May I cut in?\" Reginald said to Kyle.\n\n\"As long as I may share a dance with your partner,\" Kyle said, looking into Francis' eyes. She nodded demurely.\n\nThe next piece began, and Kyle led Francis out onto the floor. They started, and after a short time, the woman gave him an impressed smile.\n\n\"You seem very young to be dancing to this type of music so well. Lessons?\" she asked.\n\n\"Thank you, yes. My ex-fianc\u00e9 insisted I become proficient in many styles when we were together.\" Kyle admitted. \"You dance exquisitely. You've danced professionally?\n\nHer eyes widened as she gave him a surprised and amused look. \"Cheeky!\"\n\nHe looked back at her curiously. \"Excuse me? Did I say something inappropriate? I just meant you have an effortless flow to your movements that typically comes from someone who's danced professionally. My instructor moved like this.\"\n\nShe shook her head as she glanced around. She whispered to him. \"As a matter of fact, I was a dancer in my youth. I've told no one about it as it's unseemly for someone of my station to have such a career.\"\n\nThey swept by Reginald and Helen, both of whom wore wide smiles as they danced.\n\n\"I'll have to take your word about that. All I know is that you dance beautifully,\" he said with a little smile on his lips.\n\n\"Thank you, kind sir.\"\n\nThey chose to simply enjoy the motions, but once more, the song ended far too quickly. Kyle bowed over Francis' hand but refrained from kissing it as that would have been cheeky. She gave him a smile as she'd obviously thought he might have made that move.\n\nThe older couple bowed to them then moved away to speak to other guests.\n\nKyle took Helen's hand, and they slipped back into the flow with the other dancers. They remained on the dancefloor through three more songs until Helen indicated she needed to rest.\n\n\"That was wonderful, but I need to rest my feet!\" she sighed.\n\n\"Let's find some chairs, and I'll massage them for you,\" Kyle suggested. Helen's eyes lit up with excitement as she pulled him from the ballroom.\n\nThey found themselves in the room with the bar against the opposite wall, where tables and chairs had been set up. Kyle found some empty ones and held a chair for Helen. He took the one to her right and lifted her left foot onto his legs. He eased her shoe off and set it on the floor.\n\nHelen was watching with eager attention until his thumbs worked their magic on her sore foot. She cooed and melted back against the high back of her chair.\n\n\"Oh my GOD, Kyle! Your hands are a gift from Heaven!\" she moaned.\n\n\"This sounds like a wonderful time to re-introduce myself!\"\n\nKyle looked at the woman now standing to Helen's left with a wide, mischievous smile on her lips. She was a petite, older woman Kyle met at dinner. She'd sat next to Francis, and he recalled how much attention she was paying to Helen's answers. He remembered her name.\n\n\"Mrs. Harriott, nice to see you again,\" he said with a smile as he continued the massage the stiffness from Helen's arch while she struggled to sit up. Kyle nodded towards a free chair.\n\n\"Please call me Kate,\" the woman said as she gestured for Helen to remain as she was and took the chair on her other side.\n\nKyle switched to Helen's right foot, and her expression made her bliss clear.\n\n\"I saw you two dancing, and I was wondering if you were going to stay on the floor all night!\"\n\n\"As dreamy as that sounds, my days of dancing all night are over,\" Helen admitted with a wistful smile.\n\n\"It's a good thing there are other ways to fill your night beyond dancing.\" The playful smile was back.\n\nHelen burst into giggles, and Kate joined in as Kyle smiled and shook his head at the two.\n\n\"Kyle, I was wondering if I might have a private word with Helen for a moment or two.\"\n\nHe quickly finished up with her foot and gently placed it on the floor. \"Of course! I'll be over at the bar. Would you two like a drink?\"\n\nWhen they shook their heads, he stood and made his way to the bar. He got a glass of water as he'd had enough scotch tonight.\n\n\"Hey!\" A finger poked Kyle roughly.\n\nKyle looked over his shoulder and saw the angry face of Dr. Hansey. The drunk and angry face of the doctor. He was trying to say something.\n\n\"I-I want... I want to get one thing very clear. I know what you meant. When you said... what you said.\"\n\nKyle blinked at the man. He had no idea what was bothering him. \"What did I say?\"\n\n\"You respect the profession... but not me!\" the doctor growled.\n\nKyle looked at the man seriously and wondered how bad this was going to get. \"Does it matter what I think?\"\n\nThe doctor looked at him blearily. \"No. No, it doesn't matter!\" Kyle smiled and nodded to him, but the frown on Richard's face wasn't going away.\n\n\"What makes you so superior?\" Hansey exclaimed.\n\n\"Nothing. Absolutely nothing. I didn't go to medical school. I didn't put in all those hours to become a doctor. You did. Good on you, man!\" Kyle said to calm him down.\n\nRichard was shaking his head. \"You're doing it again! You say nice things about being a doctor, but you don't respect me, the man!\"\n\nKyle sighed. \"You just said it doesn't matter!\"\n\n\"Dunsfield respects you!\" the doctor snapped.\n\nKyle paused. Here was the root cause of Dr. Hansey's issue. \"And... that's a bad thing?\"\n\nRichard looked away and mumbled something. Kyle just looked at him expectantly when he turned his face back. \"The man barely tolerates me!\"\n\nKyle suspected the doctor's reputation played a role in their host's disdain. Suddenly, he wondered how much the older gentleman would respect him if he knew what he'd done in Montreal. He forced that thought down and concentrated on the man before him.\n\n\"This is the first time I've ever met you. I don't know you or anything about you. Have you spoken with Mr. Dunsfield?\" Kyle said gently.\n\nThe man aimed his bleary eyes at Kyle. \"Should I just run up to Reginald and ask, why don't you like me?\"\n\n\"Shit, Richard! It's because of how you can't keep your grubby mitts to yourself.\" They turned to see Harry leaning back against the bar. Finally, his intoxication level was becoming apparent. \"Always pawing the womenfolk!\"\n\nKyle moved to stand between Richard and Harry and held the Doctor's eyes. \"Is that true, Richard? Do you touch women without their explicit permission?\"\n\nHe looked indignant, but there was a hesitation there. Kyle pressed. \"Do women fall silent as you approach or go out of their way to avoid you?\"\n\nThe doubt strengthened. In for a penny, in for a pound. Kyle wondered if that phrase originated in this country.",
        "\"Having such a reputation would diminish you in the eyes of your colleagues and Mr. Dunsfield. You need to repair your relations with your coworkers. Starting with apologizing to those you may have made uncomfortable. Owning up to mistakes and working to make amends is what men do. That earns respect.\"\n\n\"Well said, young Kyle!\" Harry gushed.\n\nThe praise was lost on Kyle as he was suddenly struggling to keep from losing the contents of his stomach. As his words left his lips, he knew they should be directed towards himself too. His recent visit to Montreal was a recent example. This gut twisted, hard. \"Excuse me!\" He rushed from the room and realized he had no idea where the restrooms were.\n\nOne of the household staff caught the desperate look in his eye and snagged his elbow to pull him through a door and into a side corridor. He was pushed through another door to see a toilet before him. He barely managed to get to his knees and lift the seat before his body heaved.\n\nPainful minutes later, he felt a cool facecloth cleaning his face. His stomach was done, but his hands were still shaking. He pushed himself up onto his feet and turned his face to see Reginald standing next to him.\n\n\"It wasn't the scotch as I saw you knew how to handle it. Was it something you ate?\" the older man asked.\n\n\"No! The scotch and the food were both delicious! Perfect!\" He felt his stomach tighten once more as the man looked him in the eye. \"I'm sorry for being a nuisance. I'm fine.\"\n\n\"Did Dr. Hansey do or say something to upset you?\" Reginald asked, and Kyle stared at him in surprise.\n\nThe older man smiled and shook his head. \"I gave my staff instructions to keep an eye on the doctor. He won't be accosting women under my roof.\" Kyle now knew his suspicions were true. \"They said he was speaking to you in the bar, and he seemed upset. Then you left to do this.\"\n\nKyle nodded as he looked away. He closed his eyes and forced his stomach to settle. When he opened his eyes, he saw the man was waiting. He took a breath.\n\n\"I spoke with Dr. Hansey and questioned him on his reputation for inappropriate touching. I don't think he was aware of it. He is now. I suggested how he might make amends.\" Kyle frowned as he recalled his own guilt. \"It seems I don't have much of a stomach for hypocrisy.\"\n\nReginald's bushy eyebrows rode up in shock. \"You're a toucher too?!?\"\n\nKyle shook his head. \"No, I've never done that.\" He frowned. \"I picked up some behavior from my father I've been struggling with. I hurt a sweet woman in Montreal when I left to come here because I failed to notice she'd become emotionally attached. Telling Richard he needed to apologize brought my own guilt crashing back on me.\" He hung his head in shame.\n\n\"How many women have you done this to?\" Reginald asked in a controlled voice.\n\nKyle looked at the man and saw the stiff expression and understood. \"Just the one. I'm not a player. That's why it caught me by surprise. I let Juliette know from the beginning I wasn't staying in Montreal for long. She said that was fine, as she was just interested in having a little fun. Now I know I should have paid closer attention to her. It wasn't until my flight over that I realized what I'd done.\"\n\nReginald seemed relieved and gave Kyle a pat on the shoulder. \"I can't relate to this as Francis has been my one and only for my entire life.\"\n\n\"That's something I envy you for,\" Kyle said.\n\nReginald smiled warmly and guided him out of the bathroom, and gestured to his vast home. \"Not for the trappings of my wealth?\"\n\nKyle just shook his head with a small smile on his lips. \"No, not minimal enough for my lifestyle. It won't fit on my motorcycle.\"\n\nThe old gentleman's eyes lit up. \"You mentioned earlier that you're a rider.\" They began walking down the hall when Reginald stopped and turned them in the other direction.\n\nThey walked through the back corridors until they stepped out into a garage. In the back corner was a workshop and a vintage WWII military motorcycle partially... reassembled?\n\n\"Is that a Norton 633? Very nice!\" Kyle exclaimed.\n\nReginald frowned. \"A very nice paperweight at the moment. I rebuilt the engine, and now it won't start.\n\n\"Can I hear it turn over?\" Kyle asked. Reginald nodded, and Kyle listened carefully as the older man tried to get the engine to catch. Kyle smiled as he thought he knew what it might be.\n\nAn hour later, Francis and Helen found them buffing the last greasy fingerprints from the gas tank.\n\n\"Reginald Dunsfield! What are you doing out here in the garage when all of your guests are inside?!?\" Francis scolded him.\n\nHe looked up at the wall clock and made a noise of surprise. \"Apologies, my dear! We lost track of time.\"\n\n\"Doing what?\" she asked in frustration.\n\n\"This,\" he said, tossing a leg over the seat. He kicked the engine to life, and it purred happily.\n\n\"You got it running?\" his wife asked, and her expression wasn't as full of joy as Reginald's had been.\n\nHe shut the engine down and gave Kyle a look. \"See, she didn't want it to succeed.\"\n\n\"I don't want you killing yourself racing around the countryside on the beast!\" she exclaimed.\n\nHe gave her a sweet smile. \"I never said I wanted to ride it. I just wanted to bring it back to life. It's the tinkering that I enjoy. Thanks to this young man, I was able to restore this old beauty.\"\n\nFrancis looked at her husband in surprise. \"Oh! I thought you were going to ride it!\"\n\n\"It's very satisfying to bring a classic motorcycle back to life!\" Kyle said with a wide smile. \"This one was almost done. I only helped a tiny bit.\"\n\nThe older man scoffed, then shook Kyle's hand before they noticed how dirty their hands were. Luckily, they somehow spared their clothes.\n\nMoving to the sink in the corner, they used a degreasing solution on their hands and then washed and dried them. They rolled down their sleeves and put their suit jackets back on.\n\nOnce more dressed for the party, they headed back into the main house side by side with their partners.\n\n\"Sorry for disappearing on you like that,\" Kyle said contritely to Helen.\n\nShe smiled and shook her head. \"I was speaking with Kate this entire time, and we'll speak on that when we get home.\" He looked to see her eyes sparkling excitedly.\n\n\"Ooo, good things, I assume?\" Kyle asked quietly.\n\nShe just smiled mysteriously.\n\nThey returned to the ballroom, and Helen spotted her team and moved them in their direction.\n\nHarry immediately moved to Kyle's side. \"Are you okay?\" he gasped. Kyle nodded, hoping the man would drop it, but he was too far into his cups to stop. \"You seriously looked like you were going to be sick! Believe me, I recognized that look as I've been there. Did you make it?\"\n\nHelen paused to look at Kyle in concern, but he just smiled at her and nodded to the man again. \"I feel better now.\"\n\n\"You did a smashing job of putting Ol' Handsey in his place,\" Harry chuckled.\n\n\"You were the one who accused him of pawing the ladies,\" Kyle said with a smile.\n\nHarry blinked at Kyle. \"No... I remember you saying that.\" The man's voice was quieter now as he tried to sort out his drunk memories. Kyle shook his head. Harry looked queasy, then marched away with purpose.\n\n\"Seriously, that man needs to get control over his drinking!\" Jane grumbled.\n\nKyle caught Ginny watching the dancers wistfully. The songs changed, and he saw her eyes light up when she heard the new one, which was faster for the younger guests. Kyle smiled at Helen, then moved to stand before Ginny.\n\n\"Shall we dance?\" he asked.\n\nShe squeaked in surprise and froze, so he gently took her hand and led her out onto the floor. Ginny was blushing furiously, but he could see her joy as she began to move to the music. Kyle kept his moves simple and subtle while Ginny worked her way up the enthusiasm ladder, adding more energetic movements. She was really enjoying the music.\n\nNearing the song's end, William worked up the courage to join them on the dance floor. He watched Kyle and matched his moves.\n\nGinny was in a world all her own as she danced with her eyes closed. She opened them as the song switched into another favorite. William was dancing nearby, and she smiled bashfully.\n\nKyle bowed out gracefully as William danced closer to take his spot. He returned to Helen and saw the others had left, and he raised an eyebrow.\n\n\"This is the time the older party guests go home. They asked me to give you their regards. Would you mind if we left too?\" Helen asked.\n\n\"Not at all. If you're ready to go, I'm all yours,\" Kyle said with a smile as he held out his elbow.\n\nShe smiled at him and put her arm through his. They walked through the halls towards the front doors, where Kyle handed over the ticket for Helen's coat. As they waited, Dr. Hansey approached, a little unsteady on his feet. They turned to face him.\n\n\"Helen. I need to apologize to you for any unwanted touching I might have done,\" he sighed.\n\n\"Richard, please wait until you're sober to confess your sins. No one accepts drunken confessions as genuine,\" Helen sighed.\n\nRichard reeled back and scowled at Kyle. \"You told me I should apologize!\"\n\n\"I didn't tell you to do it now while you're drunk. Helen's right. You should sober up first.\"\n\nRichard flung his arm back to indicate the party behind them. \"I've been telling all the women I might have touched that I was sorry. I have to do it again? It was hard enough to do after a few drinks.\" He gave them a frustrated scowl. \"Bugger that.\"\n\nThe doctor pulled his car keys from his pocket and jingled them in front of Kyle. The Ferrari key fob was front and center. \"I guess I'll just have to be happy with the rewards of my profession!\"\n\n\"Do you intend to drive yourself home in this state?\" Kyle asked cautiously.\n\n\"It's none of your bloody business, is it?\" the doctor snarled.\n\n\"As it's my party, it's my business to know the state of my guests when they leave.\"\n\nThey turned to see Mr. Dunsfield standing behind them with a disapproving frown on his face.\n\n\"Oh fuck! There's nothing I can do to make you respect me, is there?\" Richard mumbled.\n\n\"You don't make people respect you. You earn respect. Knowing when you're too drunk to drive is a good start,\" the host said.\n\n\"I'll let you know when I get there,\" Richard said flippantly and jingled his keys over his shoulder as he walked towards the front door.\n\nKyle reached out and plucked the keys from the doctor's grip. \"Why don't I drive you home? I'll catch a taxi--whoa!\" He easily dodged the sloppy punch the doctor aimed at his head.\n\n\"Richard, stop! Careful of your hands!\" Kyle yelped as he ducked a second punch. He saw the anger building and spared a glance towards Reginald.\n\n\"Stop him,\" the old man said in resignation.\n\nKyle buried his fist in Richard's gut, lifting him off his feet momentarily. He held the man's arm as he crumpled to his knees, wheezing for a breath. Reginald accepted a small pail from one of his staff and placed it beneath Richard's face moments before the man lost the contents of his stomach.\n\nEveryone stood back, and Reginald whispered something to his staff member, who stepped in to take Kyle's place in holding the doctor on his knees.\n\nThe coat check clerk handed Kyle Helen's coat, so he helped her put it on. They turned to the Dunsfields as Francis had come to say goodbye, too. They moved away from the sick man, and Kyle handed the car keys to their host.\n\n\"We'll let him sleep it off in a spare bedroom tonight. He can drive home in the morning,\" Reginald clarified.\n\n\"Thank you for a lovely party!\" Kyle said.\n\nThe older couple looked at Dr. Hansey and back to Kyle. \"I don't know how this equates to a lovely party when you're accosted as you leave,\" Reginald confessed.\n\nKyle just waved his hand dismissively. \"It's an office Christmas party. There's always some level of drunken brawling involved.\" At the skeptical looks, he shrugged. \"That was my experience back in Canada, at least.\" He grinned.\n\n\"The colonies are a rough and tumble place,\" Reginald suggested, and Kyle chuckled.\n\nHelen moved forward to touch cheeks with their hosts as Kyle shook their hands. Then he was walking her to her car.\n\nShe unlocked the car, and Kyle held her door for her before getting in his side.\n\n\"How I would have loved being the one to punch that man in the stomach so hard!\" Helen sighed. She started up the car and got them underway.\n\n\"I dedicate that punch to all the ladies who were the targets of his grabby hands,\" Kyle said solemnly.\n\n\"While a little barbaric, it was also very exciting to see you beat him up.\" Helen bit her lip as she gazed at him. His eyebrows went up in surprise.\n\nShe chuckled and drove them with quick efficiency through the back lanes to her neighborhood. Soon enough, they pulled into the parking lot, and Kyle got out and opened Helen's door for her. After he closed her door, he saw her need for him in her eyes. He pressed her up against the side of her car and kissed her deeply. She squeaked then moaned as she clung to him. When he rubbed his erection across her sensitive bits, she gasped and pressed back.\n\nShe clung tighter as a couple walked past the parking lot with their dog on a leash. Kyle and Helen were only partially obstructed from view because of the hedges by the sidewalk and their position between the cars. Plus, other tenants might return to the parking lot and catch them.\n\nHe moved his mouth to her ear. \"Fuck, you're making me so hard! I don't know if I can wait. I want to take you right here in the parking lot!\"\n\nShe trembled and held him tighter, grinding against his bulge.\n\n\"You'd like me to fuck you against the car right now, out here where anyone might happen by and see your lusty behavior.\n\nShe made a desperate sound as her hips rolled to grind him more firmly.\n\nHe undid the lower buttons on her coat and tugged her dress upwards to slide his fingers over her panties.\n\n\"Oh my god, Kyle! You're going to make me come!\" Her eyes were scanning their surroundings to see if they'd been spotted. The street was surprisingly busy for this late hour. He saw it was mostly people walking their dogs. Another couple was coming by. He slipped his fingers under her panties, and she gasped aloud. The couple and their dog paused as they overheard a noise.\n\nKyle whispered into Helen's ear. \"They heard your sexy moan, Helen. They know you're about to come.\" He pushed two fingers deep inside her wet pussy.\n\nBefore she could cry out, he kissed her hard and pressed her against her car. Her orgasm crashed through her mind as she clung to Kyle and shook.\n\nHe held still but moved Helen to rest her face against his shoulder, where she panted as her body pulsed through the ebbing bliss.\n\nThe dog walkers moved on.\n\nHelen pulled back to look into Kyle's eyes. Her eyes rolled back, and her jaw dropped silently as he slid his fingers from her pussy. She watched him suck on his fingers as she trembled against his chest. She moaned at the heat in his eyes.\n\n\"Let's get inside where I can warm you up,\" Kyle said.\n\nShe smiled and straightened her dress and coat as he eased back from her body. She moved towards the entrance with Kyle following, and she tingled as if she could still feel his hands touching her.\n\nOnce inside, they walked to the elevators and stepped inside. Kyle stepped before Helen when the door closed, slid his fingers into her beautiful auburn hair, and kissed her passionately.\n\nThey broke the kiss when the doors opened on Helen's floor. They stumbled out of the elevator and turned towards her condo, coming face to face with Margaret Hillsbury. The woman froze as she took in the disheveled state of their clothes, Helen's slightly wild hair, and her lipstick smeared across Kyle's mouth and jaw.\n\nThen she saw Kyle's zipper was open, and his boxers were being pressed out the fly by a bulge.\n\n\"Good-good evening, Helen! Kyle?\"\n\nHe nodded at her correct guess of his name.\n\n\"Oh! Good evening, Margaret. How was the Church Gala?\" she asked as she casually straightened her dress.\n\nMargaret's eyes were trapped by the gap in Kyle's pants and the hint of something hard within.\n\nShe suddenly broke free from her daze. \"Church? Oh yes, it was a lovely evening.\" She failed to say that very convincingly, even to her own ears. Truthfully, it had been so dull! Especially when she now compared it to the night Helen appeared to be enjoying. \"How was the office party?\" she asked to change the topic.\n\nHelen's smile said it all. \"The Dunsfield estate was so beautifully decorated. The food was delicious, and the dancing afterward was so much fun! The night was dreamy!\"\n\nKyle leaned closer to Helen. \"It's not over yet,\" he purred deeply.\n\nHelen's eyes widened, and she burst into giggles. \"It was nice seeing you again, Margaret. Merry Christmas!\" she scampered away towards her door with Kyle stalking after her.\n\n\"Merry Christmas!\" Margaret squeaked out before they disappeared into the condo.\n\nDammit! That's what she wanted for Christmas, too!\n\n-=-\n\nKyle's fingers were in Helen's hair once more as he worshipped her lips with his. Her breath was coming in gasps as she clung to his ass, pulling him tight against her as he pressed her body against the inside of her front door.\n\nFinally, Kyle stepped back so he could begin to take off Helen's coat. She leaned back against the door, panting, and watched his eyes devouring her. A thrill shot through her as she realized how much he wanted her. It was genuine, intense, and made her feel sexy and desirable!\n\nThe coat fell to her feet, and his powerful hands settled on her hips and slid back to cup and squeeze her ass. That set off fireworks in her mind, so she missed feeling his hands slip up to the back of her neck where he unfastened her dress. She definitely felt him pulling her dress forward and down, her lingerie coming into view. Kyle growled happily as he cupped her breasts in his hands, enjoying the feel of her satin-covered softness. She sighed and trembled as he squeezed her tits.\n\nHe kissed her again, and her hands began frantically undressing him. He assisted, and soon he was standing before her in just his boxers.\n\nThey shared a grin, then rushed across the dark condo, down the hall to the master bedroom. The only light came through the sheer curtains from the few streetlights outside and below.\n\nHelen was all giggles as she tossed the duvet down to the foot of the bed and dove onto the mattress. That giggle became a shriek when Kyle grabbed her ankles and pulled her flat on the bed on her stomach. He pounced on top and pulled her panties down as she lost herself in another burst of giggles. She moaned loudly when he grabbed her ass cheeks and squeezed them.\n\nHe continued this hard massage of her ass until she was desperately squirming. She felt him move back slightly. Moments later, he suddenly rested his weight over her body, forcing his hard cock down between her ass cheeks to rub across her asshole and pussy lips.\n\n\"Kyle! What! What are you doing?\" she gasped in surprise.\n\nKyle pushed his cock between her legs, the head dragging across ass and pussy again. She jolted each time the thick head pressed against the tight, puckered orifice. His cock was slick from her juices, which had been flowing since their play in the parking lot.\n\nHe gently stroked the head of his cock across her hot and soft pussy, bumping her clit. \"Ooooohhhh, that's such a tease!\" she purred.\n\nKyle pulled his hips back, and the slippery cock pressed on her tight asshole.\n\n\"AH! Kyle! Wha--Where are you going?\" she yelped.\n\n\"I'm just enjoying exploring your body. I won't do anything you don't want me to do.\" He teased her tight rosebud and watched her eyelashes flutter as shivers shook her body. He pulled back, then pushed his cock deep between her thighs, brushing past her pussy once more."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "romance",
        "oral",
        "cuckold",
        "harem"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/shifting-perspectives"
}