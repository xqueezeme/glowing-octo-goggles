{
    "title": "Art of Deception - Light and Shadow",
    "pages": [
        "This story is a sequel to Art of Deception. It can be read on its own without any knowledge of the original. That said, reading this first will reveal most of the major plot points from the original story. I mention this only because I hate spoilers and would want to know myself if I were the reader.\n\nMy thanks to Bebop3 for the helpful suggestions he offered as a beta reader. Thanks also to HighLuster for his thorough feedback and excellent work as a finish editor. Any mistakes that remain are mine.\n\nI've asked for this story to be placed in Loving Wives, the same category as the original, just so those who posted or emailed about a sequel will have an easier time finding it. Fair warning: this story doesn't contain the elements of a traditional Loving Wives tale, nor does it have any explicit sex. I hope those who decide to read it enjoy it anyway.\n\n*******\n\nI knew immediately it was a forgery.\n\nThe painting arrived on a Tuesday afternoon in a FedEx box. I hadn't been expecting any deliveries. Now that I was the full-time head of the Kiefer Gallery's forensic research department, I was too busy to take many independent consulting cases. The cases I did accept rarely mailed paintings directly to my home address for analysis.\n\nI opened the box, peeled away the layers of protective packaging, and gently placed the unpacked canvas on the kitchen table of my Brooklyn apartment.\n\nIt was an exquisite piece. A small Renoir landscape from the early decades of his career, probably mid-1870s. Unlike the pure landscapes of the 1900s, which eschewed human subjects entirely, this Renoir featured a lone figure amidst a field of green and yellow. Several small trees framed the scene.\n\nThe mastery of outdoor light and shadow was unquestionable. The colors were lush yet subtle. It definitely passed the eye test.\n\nCareful forensic analysis might uncover a hidden imperfection--a synthetic fiber buried in the paint, an anachronistic pigment, a microscopic anomaly--that would show the painting to be a forgery, but all outward signs seemed to indicate that it was an honest-to-God Renoir.\n\nWell, all except one. An identical painting, Renoir's Springtime (in Chatou), happened to be on display at the Oxbow Gallery just a few blocks from where I worked.\n\nI tipped the FedEx box forward. A small paper note fluttered out, coming to rest on the table. It read:\n\n\"What do you think? -- C.\"\n\nI smiled and shook my head.\n\n\"I think,\" I said, speaking aloud as though Carina were in the room with me, \"that you're up to something.\"\n\n*******\n\nI thumbed halfheartedly through the stack of resumes in my lab at the Kiefer Gallery. I hated reading resumes on a screen. I preferred printing them so that I could make notes and jot down questions. Made it easier to spot typos, too. Attention to detail is a pretty important skill for applicants in my line of work.\n\nIt was going to be a pain to replace Jill. She'd been my assistant forensic analyst for less than a year before another gallery scooped her up with an offer of an assistant curator position. She deserved it, and I'd been happy to pen her a glowing letter of recommendation.\n\nStill, things were already different without her. Not just busier, but quieter. I hadn't realized just how much I'd come to enjoy having someone else to talk to. Glancing at her empty desk, my spacious lab suddenly felt much bigger and emptier than it had just a few weeks ago.\n\nPart of my loneliness stemmed from the fact that I'd only been on a handful of dates in the year since Carina left town. For some reason, I had trust issues that made it tough to get close to people. Maybe it had something to do with the fact my marriage to Lauren ended when I caught her cheating, and my romance with Carina blew up when I discovered she was concealing her career as a master forger. Hard to say.\n\nI tried reading a resume for the second time, but the words wouldn't register. My mind was elsewhere. Why had Carina sent me the Renoir?\n\nShe was challenging me. That much was obvious. Our last encounter had ended in a stalemate. I'd managed to convince the Kiefer Gallery's owner Nora Turner--now my boss--that the original Modigliani canvas Carina was trying to sell at auction might not be authentic.\n\nHowever, I'd never actually examined the painting because my ex-wife, who was responsible for authenticating the piece, wouldn't let me near it. Carina was convinced that, had I examined it, I would never have been able to spot a flaw. She believed herself skillful enough to fool me. Now, she wanted to prove it by testing me with the fake Renoir.\n\nI understood her compulsive need to prove her skill, because I was just as eager to prove her wrong. Since the Renoir arrived at my door, I'd been dying to examine it. After I worked through a bit more of my Kiefer Gallery caseload, I planned to do just that. I was certain that I'd be able to find the one flaw, the one tiny oversight, that would demonstrate the painting was a forgery.\n\nMy pride was tempered by the knowledge that the last time Carina invited me to examine a painting had been a ruse. She'd posed as a collector who wanted to know if one of the works in her collection was a fake. In reality, she'd forged the work herself and had only brought it to me as an excuse to get information she needed to sell her Modigliani at auction.\n\nAs I considered Carina's possible motives for sending the forgery, my fingers drummed absently across my desk. I was surprised how loud they sounded against the bare wood. It took several moments before I realized the sound was actually someone knocking on my door frame.\n\nI looked up to find a beautiful woman in a knee-length beige skirt and blue button-down shirt standing at my door. She looked to be about my age, maybe mid-40s, with blond hair that fell to her shoulders. I wondered how long she'd been patiently standing there, waiting for me to notice her.\n\n\"Mr. Weber? I was hoping I could talk to you about a painting.\"\n\n\"Sorry, but I'm not taking on new cases right now. Too busy.\"\n\n\"Actually, it's about a case you've already solved.\"\n\nShe walked forward and extended her hand as I rose to greet her. Her arms were strong and toned.\n\n\"Monica Bradley. I'm a private investigator. I wondered if we could chat about the Modigliani forgery you uncovered last year.\"\n\nShe spoke the words with a smile, but behind the smile her eyes scanned my face intensely for a reaction.\n\nThe Modigliani case wasn't public knowledge. Nora had never claimed the painting was a forgery and had done her best to keep it quiet, both to avoid embarrassment to her gallery and to avoid a potential lawsuit from the painting's owner if it later turned out to be authentic. Unfortunately, it's impossible to keep rumors from spreading in the art world. Still, only three other people had been in the room when I presented evidence that the painting was fake: Carina, Nora, and my ex-wife, Lauren. I had little doubt which of them hired a PI.\n\n\"I'm not sure I'll be of much help, Ms. Bradley.\"\n\n\"Monica, please. And why do you say that?\"\n\n\"I never actually examined the painting. I'm afraid I won't have much insight to offer.\"\n\n\"Yes, that's actually one of the things I'm most curious about, Mr. Weber.\"\n\n\"Call me Adam. Feels less like an interrogation that way.\"\n\nShe laughed. \"Well, let's get the interrogation out of the way then.\"\n\nShe twisted my desk lamp so the light shone directly on my face, leaned forward, and placed both hands on my desk. \"Did you forge the painting, Adam?\" she asked with mock intensity.\n\n\"No.\"\n\n\"See, there you go!\" She stood up and readjusted my desk lamp. \"No interrogation. We're just having a chat.\"\n\n\"Right. Since we're chatting, you won't mind if I ask you a question?\"\n\n\"Of course not.\"\n\n\"Who are you working for?\"\n\n\"Ah. My client has asked me to keep that particular detail confidential.\"\n\nFucking Lauren.\n\n\"I've been retained to look into some... let's call them irregularities... surrounding this particular case. Just basic fact finding at this point. My sources tell me you that it was you who raised the suspicions about the painting being a forgery. Is that true?\"\n\n\"Yes.\"\n\n\"Yet you never examined the painting.\"\n\n\"That's what I said.\"\n\n\"So, what made you suspect it was a forgery?\"\n\n\"The simple fact that it was a newly discovered Modigliani.\"\n\nShe held out her hands apologetically. \"Sorry, but I'm a neophyte when it comes to art. Feel free to treat me like an idiot. Why would that matter?\"\n\n\"Modigliani is one of the most forged artists of the last century. Any newly discovered work would instantly be suspect.\"\n\n\"I see. And that was enough for you? You didn't need any more evidence?\"\n\n\"I asked to examine the painting. My ex-wife wouldn't let me. Surely you know all this already.\"\n\n\"You and I are in the same line of work. I've always believed a thorough investigation should gather as many data points as possible. Wouldn't you agree?\"\n\nI nodded reluctantly.\n\nShe made a slow circle of my lab as we talked, pausing to look at different pieces of equipment along the way.\n\n\"You use all this to catch bad guys, huh?\"\n\n\"For the most part. It's not all about forensic research, though. Stylistic connoisseurship is just as important. You have to know art, not just inspect it.\"\n\nShe paused next to one of my larger pieces of equipment.\n\n\"What's this guy called?\" she asked.\n\n\"That's a Fourier transform infrared microscope.\"\n\nShe raised a questioning eyebrow.\n\n\"It sounds fancier than it is,\" I said. \"A spectrometer pushes infrared light through flecks of pigment, which helps me tell whether the painting contains any compounds that wouldn't have been available to the artist at the time he or she was working. I just ran a sample this morning. Have a look if you like.\"\n\nShe glanced briefly at the spectrum graph on the laptop adjacent to the microscope and laughed. \"Sorry. Afraid it's all Greek to me.\"\n\nShe walked back to my desk and stared at me for a moment before continuing.\n\n\"You never used any of these fancy instruments on the Modigliani, yet you convinced the gallery owner to pull it from auction. How?\"\n\n\"I found flaws in the painting's provenance.\"\n\n\"It's provenance?\"\n\n\"Documentation substantiating the painting's origin.\"\n\n\"And the outcome of all this was that your ex-wife was fired for not spotting these flaws?\"\n\n\"That was one outcome, yes.\"\n\n\"And you now have her job?\"\n\n\"Yes.\"\n\n\"How serendipitous.\"\n\n\"That's your theory? That I drummed up a false forgery claim to take Lauren's job and get revenge on her for cheating on me?\"\n\n\"That's one possibility, yes.\"\n\n\"What's another?\"\n\n\"That you and the forger are, or were, working together to dupe galleries.\"\n\n\"Then why would I expose the forgery?\"\n\nShe shrugged. \"Maybe you had a falling out. Business relationships sometimes end badly.\"\n\nThe accusation that I was a criminal infuriated me, but I kept my expression neutral.\n\n\"Have you considered the possibility that I'm telling the truth?\"\n\n\"Of course. I consider every possibility. I just don't know which one is reality.\" She smiled. \"Yet.\"\n\n\"You can tell my ex-wife that if she'd done her job properly, I wouldn't have had to do it for her.\"\n\n\"I'm glad you brought that up. You didn't work for the gallery that was auctioning the painting. In fact, they rejected your application for employment and hired your ex-wife instead. Correct?\"\n\n\"Yes.\"\n\n\"Then why were you so hell-bent on helping them avoid being scammed?\"\n\n\"Because I value the truth. It's my job.\"\n\n\"Excellent!\" she said, clasping her hands together. \"We have that in common. I'm glad I can count on you to help me get to the bottom of this.\"\n\nShe rose from her chair and handed me her business card.\n\n\"Thanks for your time today, Adam. I enjoyed talking with you. Sorry if some of my questions were a little pointed, but I find it's easier to gauge how truthful someone is being if you set them on edge a bit.\n\n\"If you think of any other details that might be relevant, or feel a guilt-ridden confession coming on, my number's on the card.\"\n\n\"My conscience is pretty clear.\"\n\n\"Well, let's hope it stays that way. Enjoy your day.\"\n\nShe turned and walked out of the office. I had a feeling it wasn't the last time I would see her.\n\n*******\n\nI spend my days detecting forgeries, but I'd never had someone inspect me for signs of fraud. I didn't much like being on the other end of the microscope.\n\nIt didn't help my anxiety that I had a forged Renoir sitting in my apartment. That wouldn't be easy to explain to Monica. This old thing? I don't even remember where I found it.\n\nStill, I never once considered getting rid of it. First, you can't exactly pitch a forgery in the dumpster with a PI snooping around. Second, the idea of abandoning or destroying a masterpiece--and, forgery or not, that's what it was, a masterpiece--would be abhorrent to anyone with even a shred of artistic sensibility. Plus, it was from Carina. We had too much history for me to discard a gift like that.\n\nBut the real reason I kept it was even simpler. I had to know. Was she better than I was?\n\nI couldn't risk trying to move the painting to my lab. I suspected Monica would be keeping an eye on me from a distance, at least for a little while. Plus, there was a chance someone else could see me working on it.\n\nIn my apartment I had some instruments that I used for my independent consulting work, mostly stuff I'd salvaged from my old lab before I took the job with the Kiefer Gallery. I decided to start there.\n\nI inspected every inch of the painting for synthetic fibers, hair, or anything else embedded in the paint that shouldn't be there. Carina must have worked in a sterile room, because the painting was spotless.\n\nThe signature, tucked among grass and flowers in the lower right-hand corner, was a perfect match. As in the original, the last \"R\" was slightly darker and more pronounced than the other letters, which appeared a bit faded by comparison.\n\nThe canvas was appropriate for the period, and the brush strokes also looked exactly as they should.\n\nWhat I really needed was a detailed pigment analysis, but for that I needed my FTIR microscope, and I wasn't comfortable taking the painting to my lab.\n\nInstead, I researched Renoir's work online, hoping to find some critical detail that I was missing. I pored over genuine Renoirs in person at the Met, the Guggenheim, and the Brooklyn Museum, searching for some stylistic nuance that would be the key to unlocking the case.\n\nAnd, of course, I spent hours with the genuine Springtime (in Chatou) at the Oxbow Gallery, trying to spot a discrepancy.\n\nIt all proved fruitless. After two weeks of examining Carina's work in my spare time, I had nothing that would even suggest, much less prove, it was a forgery.\n\nFrustrated and exhausted, I tucked the painting in my closet behind some coats and resolved to come back to it later with fresh eyes and, hopefully, a clear mind.\n\n*******\n\nI was way behind on interviews for the assistant forensic analyst position. I desperately needed another set of hands to help me wade through the backlog of paintings we had in our queue, but I'd also been too busy with actual analysis to carve out time to conduct interviews.\n\nI had managed to squeeze an interview in over lunch. I was so immersed in a pigment analysis that I lost track of time until I heard a voice at my door.\n\n\"Knock, knock.\"\n\n\"I'm so sorry,\" I said, peering around my equipment at the woman with sunglasses and long red hair waiting patiently by the door. \"Completely lost track of time. Come in, come in.\"\n\nI waved to the chair opposite my desk at the far side of my lab.\n\n\"Have a seat and I'll be right with you. Just need to set this sample to avoid contamination.\"\n\nTwo minutes later I made my way over to the desk, frantically trying to remember the name of the person I was interviewing. Fortunately, she was seated with her back to me and couldn't see the panic on my face.\n\nIt came to me just in time: Elizabeth Cooper. She previously worked as a conservator at a small museum upstate. When budget cuts forced the museum to eliminate the position, she decided to change careers and pursue forensic analysis. Impressive work experience, great cover letter, and slightly unrealistic salary expectations if I remembered correctly.\n\n\"Elizabeth, thank you so much for waiting,\" I said, rounding the corner of my desk and extending my hand.\n\nShe rose to greet me, and I froze.\n\n\"Not at all, Mr. Weber.\" Carina took my hand and shook it. \"It was worth the wait.\"\n\nHer hair may have been long and red instead of short and auburn, but without the sunglasses, she was unmistakable. Those piercing blue eyes still took my breath away.\n\nShe sat down opposite me and smiled. \"So, what's new?\" she asked.\n\nI knew she was savoring the shock on my face. I struggled to act unfazed. I'm pretty sure I was unsuccessful, because I was still standing with my arm partially outstretched from the handshake.\n\n\"No accent this time?\" I asked, finally sitting down. The last time I'd seen Carina had been in Nora's conference room. At the time, Carina had been feigning a Welsh accent. She didn't have one today.\n\n\"How very American of you, Adam. Everyone has an accent relative to someone else's.\"\n\n\"So, you actually are from Wales, then?\"\n\n\"Not quite, no.\"\n\nI shook my head. \"Of course not. Nothing is ever as it seems with you, is it?\"\n\n\"Tell you what. Come to dinner with me, and I'll tell you where I'm really from.\"\n\n\"No.\"\n\n\"C'mon. I know you're curious.\"\n\n\"It doesn't matter. I wouldn't believe what you told me anyway.\"\n\n\"Oh, don't be like that. I want to make amends. Seriously. Scout's honor.\" She raised her right hand.\n\n\"Why are you really here, Carina?\"\n\n\"Because I'd enjoy working under you,\" she said with a grin.\n\nI tried not to react, but memories of our time in bed flooded my brain. My pulse quickened. Carina picked up on it instantly.\n\n\"I think you'd agree my past experience shows I'd be a good fit for the position,\" she continued, leaning forward to expose a bit of cleavage. \"In fact, I feel I'm flexible enough to fill many positions.\"\n\n\"Stop it.\"\n\n\"You're no fun.\"\n\n\"Maybe because Lauren hired a PI to investigate me.\"\n\n\"Really?\" Carina's eyes widened. \"Why?\"\n\n\"To prove either that I staged a false forgery claim to get revenge on her, or that I've been working with you all along to sell forgeries.\"\n\n\"That's actually a pretty good idea. Want to partner up?\"\n\n\"Not funny.\"\n\n\"It's a little funny.\"\n\n\"Aren't you worried Nora will recognize you?\" I asked.\n\nNora knew Carina only as Georgeanna Wilkes, representative of the anonymous seller who wanted to auction the Modigliani through the Kiefer Gallery.\n\n\"You didn't recognize me. Why would she? Come to dinner with me.\"\n\n\"No.\"\n\n\"Did you like the Renoir?\"\n\nI paused, considering how to respond. I decided on the truth. \"It's exceptional.\"\n\nShe beamed. \"Thank you. It is, isn't it? And?\"\n\n\"And what?\"\n\n\"Did you find any evidence it's a forgery?\"\n\n\"You mean other than the fact its twin is hanging on a wall at the Oxbow?\"\n\nShe gasped. \"You haven't, have you? If you'd found something, you would have said so.\"\n\n\"This may come as a surprise, Carina, but my world doesn't revolve around you. I have an actual job, with genuine paintings to inspect. I haven't had time to look at yours.\"\n\n\"You're a terrible liar.\"\n\n\"Okay, I think we're done here,\" I said, standing up.\n\n\"Did I get the job?\"\n\n\"Get out. Or I'll call Security. I'm not kidding.\"\n\nCarina sighed. \"I was hoping I wouldn't have to play this card, but here it is. Come to dinner with me, and I'll help you stop a forgery.\"\n\n*******\n\nCarina had me make reservations at one of the nicest French restaurants in Brooklyn and insisted that I dress for the occasion. She looked stunning in an emerald cowl-neck midi dress that highlighted every inch of her lithe frame. The moment she walked into the room, every man in the restaurant stole a glance at her, and most of the women caught them looking.",
        "I frowned as I skimmed the entr\u00e9e selections.\n\n\"You said if I wanted information that I'd have to pay for it, but looking at these prices, I'm not sure it's worth it.\"\n\n\"Are you kidding?\" she replied. \"You screwed me out of $3.4 million. I'm ordering the most expensive thing on the menu.\"\n\nShe kept her promise, then ordered one of the priciest bottles of wine to boot.\n\n\"Tell me about this forgery,\" I said.\n\n\"Business later. Let's have a nice conversation first. Like we used to.\"\n\n\"What do you want to talk about? How you lied to me and used me?\"\n\nShe ignored the barb entirely. \"Are you seeing anyone?\" she asked.\n\n\"No.\" I took a long sip of wine and set down my glass. \"Are you?\"\n\n\"No one since you.\"\n\nI tried to remain angry, but her answer softened me a bit, which was no doubt her reason for posing the question.\n\n\"So, what brings you to town? Auctioning another piece?\"\n\n\"No, but then I wouldn't tell you if I were. I'm actually between assignments.\"\n\n\"Assignments?\"\n\n\"I get commissioned to do certain paintings. Others I choose to do myself. Right now, I'm not working on either. My time is my own.\"\n\n\"And you chose to spend it visiting me?\"\n\n\"Is that really so surprising?\"\n\n\"It's certainly risky. What if I expose you?\"\n\nShe shook her head and smiled. \"I know you, Adam.\"\n\nHer arrogance irritated me. \"Maybe so. But here's the thing Carina: I don't know you. In fact, I don't know the first real thing about you.\"\n\n\"So ask. What do you want to know?\"\n\n\"You'll just make up answers to serve whatever your real purpose is for being here.\"\n\nFor a moment she looked genuinely hurt, but she concealed it quickly. \"All I can do is promise to tell you the truth. I can't make you believe me.\"\n\n\"Fine. Where you are from? Really.\"\n\n\"I was born in London,\" she said. \"I grew up there, but I've spent most of my adult life moving around the States.\"\n\n\"You don't have a London accent.\"\n\n\"You mean like this?\" she said, dropping into Estuary English. \"This is how I sounded growing up. I have an ear for dialects. I picked up most of the regional accents from Britain.\"\n\n\"This one,\" she said, slipping back into her America accent, \"comes naturally from the time I spent in the Midwest.\"\n\n\"Siblings?\"\n\n\"One younger sister. Still in London.\"\n\n\"Parents?\"\n\n\"No longer living. They were lovely. My mother was a maid and my father worked in the shipping industry. Both devout Orthodox Christians. That's how I got into forgery, actually.\"\n\nShe laughed at the look of surprise on my face. \"Have you ever been to an Orthodox service?\" she asked.\n\nI nodded.\n\n\"It's gorgeous, isn't it? Icons everywhere: the iconostasis, the walls, the interior of the dome. It's like being in an art museum.\n\n\"My mother always scolded me for paying more attention to the icons than the singing. I couldn't help it. I'd sketch them after services, then paint them on wood as I got older. I was pretty good.\"\n\n\"I'm sure you were,\" I said.\n\n\"One of the parishioners, Pasha, noticed I had a knack for painting. He gave me paint, brushes, and wood to use for practice, and even arranged for lessons with an iconographer. My parents said it was all too generous, but he insisted.\n\n\"He started bringing photos of icons each Sunday and asking if I could reproduce them. I'd bring him my work the following Sunday, and he'd give me a new photo. I loved it. It was like a challenge. Then he started bringing money, too. He said I'd gotten so good that he was able to sell my work, and that my family should benefit from it.\"\n\n\"When did you find out what was really going on?\" I asked.\n\n\"When I was about fourteen. They had a guy who would age my stuff before it hit the antique market. He was excellent. I probably could have gotten out then. I was still young enough, and they were a small-time operation.\"\n\n\"But you liked it too much,\" I said.\n\n\"I really did. People wanted to pay for my work. That was amazing to me. And I was helping my family financially.\n\n\"Then a guy who said he was a friend of Pasha's came to talk to me. He was so kind, and he wouldn't stop gushing about how talented I was. I ate it up. He said that if I wanted, I could make a lot more money than I was making now. Said it would be a chance to grow as an artist. But it would have to be our secret. That's when I started painting canvases.\n\n\"I knew what was going on. But because I never saw the business side of it, it was easy to pretend I didn't. Before I realized it, I'd become too lucrative an asset for them to part with.\"\n\nShe finished her story just before our food had arrived. We ate mostly in silence. I was busy trying to digest everything she had said and figure out whether I believed it. By the time we'd finished eating, I'd decided that I did.\n\n\"Why did you send me the Renoir?\" I asked, placing my napkin on the table.\n\n\"It's a gift, dummy.\"\n\n\"Sure it is.\"\n\n\"It is! What, you think I'm going to try to auction a painting that already exists?\"\n\nI stared at her for a long time, watching her eyes. She held my gaze.\n\n\"Finish examining it yet?\" she asked.\n\nI'd taken a few more cracks at the painting during the week leading up to our dinner reservation. I still hadn't found anything amiss, but I wasn't about to give her that satisfaction.\n\n\"Not yet.\"\n\nHer smug smile irritated me.\n\n\"Look,\" I said, \"are you going to tell me where to find this supposed forgery or not?\"\n\n\"I'll do you one better.\" She drained the remaining wine from her glass. \"I'll show you.\"\n\n*******\n\nWe arrived at the Oxbow Gallery after a short Uber ride. The gallery had an auction coming up in a few months, and they were exhibiting some of the paintings that would be on the auction block. I felt a bit overdressed for the occasion, but I relaxed when I realized the other patrons were too focused on the art to pay any attention to us.\n\nWe strolled the halls, with Carina occasionally pausing to appreciate a piece that caught her eye. I had a feeling she was enjoying drawing things out, waiting for my impatience to boil over. It was working, but I pretended to be in no hurry. I even made a point of stopping to take in a few paintings myself.\n\nShe paused again near a series of landscapes by Walter Schofield, an American Impressionist. They were fine pieces. Good representations of his work, but nothing special. I guessed they'd sell in the low five figures.\n\nCarina pressed against me, raising up on her toes to bring her lips close to my ear. It was the first we'd touched in more than a year, and I had to resist the urge to pull her closer.\n\n\"Voila,\" she whispered, her breath warm against my skin.\n\n\"One of these?\" I asked.\n\nShe turned again to the paintings and shook her head. \"These are genuine. But there's another Schofield from this lot that isn't on display.\"\n\n\"What do you know about it?\"\n\n\"Well, I've heard it was only partially complete at the time of his death. Schofield was a skilled artist, but I doubt so skilled that he could finish a painting from beyond the grave.\"\n\nI nodded.\n\n\"So, Mr. Detective, if you were on the case, what would you do?\"\n\n\"You know the answer to that question,\" I said.\n\n\"Humor me.\"\n\n\"Ultraviolet light. If a contemporary artist completed the unfinished original, the newer paint would fluoresce differently under UV than the original paint.\"\n\n\"You're hot when you talk shop.\"\n\nI ignored her. I was already thinking about the painting. Was it not on display because the Oxbow had already exposed it as a forgery? I had my doubts. Roland Prescott, the Oxbow Gallery's forensic analyst, was a nice guy, but he wasn't terribly interested in forensic science.\n\nRoland had been hired years ago as a conservator and was only recently asked to pull double duty as a forensic analyst by Antoine Bonnet, the Oxbow's owner. Antoine was too cheap to hire a dedicated forensic scientist. He didn't even pay Roland for the extra duties he'd taken on. All he wanted was the cachet that he felt came with having a forensic scientist on staff.\n\nIt was too much to ask of one person both to serve as a conservator and to authenticate all the paintings in time for auction. It wouldn't have surprised me if Roland had given less attention to the minor pieces so that he could focus on those that would fetch a bigger price.\n\n\"Why tell me this?\" I asked.\n\n\"Out of the goodness of my heart.\"\n\n\"Right. And not because another forger is intruding on your territory and your employer wants to make an example of them?\"\n\nCarina shrugged. \"Can't it be both?\"\n\n\"Not really.\"\n\n\"Just trying to be neighborly. Look into it. Don't look into it. No skin off my nose.\" She grabbed my arm. \"Come with me.\"\n\n\"Why?\"\n\n\"There's one more painting I want to see.\"\n\nI didn't protest. I knew we'd end up there from the moment we'd set foot in the gallery. In fact, it was probably her real motivation for coming. I sighed and let her drag me through the hallways until we reached the Renoir.\n\nUnlike the other paintings, which were up for auction, the Renoir was on permanent display at the Oxbow. It had been passed to Antoine from a private collector and close personal friend after he died, and ever since Antoine had proudly displayed it as a symbol of his gallery's prestige.\n\nWe stared at the painting in silence. I knew Carina was gloating, but I was content to let her have her moment. At least for now.\n\nI set aside my analytical eye and allowed myself to sink into the painting, admiring the color and composition. I grew so lost in my thoughts that I jumped when a heavy hand clapped me on the back.\n\n\"Adam! I didn't realize we would have a celebrity in our midst tonight. To what do I owe the pleasure?\"\n\nAntoine was tall and broad-chested with a mane of perfectly coiffed silver hair and rimless glasses that looked a bit too small on his rectangular face.\n\n\"Just checking out the exhibition,\" I said. \"Should be a great auction.\"\n\n\"I certainly hope so.\" He extended his hand to Carina before I had the chance to introduce her. \"Antoine Bonnet. I own this humble gallery.\"\n\n\"Elizabeth Cooper,\" Carina said. \"It's lovely. You have some truly beautiful pieces on display here.\"\n\n\"And you have a truly discerning eye, Elizabeth.\"\n\nCarina punched me playfully in the arm. \"What's all this celebrity talk? Is there something I don't know?\"\n\n\"Adam hasn't told you?\" He cast me a disapproving look. \"No, I suppose he's too modest. Well, your escort tonight happens to be the world's foremost forensic art investigator. He's somewhat of a name in the art world.\"\n\nCarina titled her head and mimed an exaggerated jaw drop. \"You told me you just worked at a local gallery!\"\n\n\"I do. Antoine makes my job sound a lot more glamorous than it really is,\" I said.\n\n\"Nonsense. I'd kill to have him on my staff,\" he replied.\n\nThe whole exchange was making me increasingly uncomfortable.\n\n\"I see you've found my Renoir,\" Antoine said, nodding toward the wall.\n\n\"How could we miss it?\" Carina said.\n\nAntoine beamed. \"Springtime in Chatou. It was given to me by a dear friend. Just an exceptional piece.\"\n\n\"Definitely one of a kind,\" Carina agreed.\n\nI shot her a stern look.\n\n\"In fact, I don't think I've ever seen anything like it,\" she continued, turning toward me and smiling. \"Have you, Adam?\"\n\nI grimaced. \"Not exactly. No.\"\n\nAntoine misinterpreted my irritation. \"I'm afraid not everyone shares our assessment, Elizabeth.\" He glanced at me. \"Perhaps when one spends his life looking for defects, one loses the ability to appreciate beauty.\"\n\n\"I couldn't agree more,\" Carina said, meeting my eyes. \"Some people don't see something special, even when it's right in front of them.\"\n\nI said nothing. Carina may have been enjoying herself, but I just wanted the conversation to end.\n\n\"It may not be the finest work in his oeuvre, or even among his best landscapes, but only Renoir could produce a work of such incomparable beauty,\" Antoine said, pointing a finger at the wall.\n\n\"Oh, I don't know,\" Carina said thoughtfully. \"I bet I could paint it.\"\n\nI stifled a cough. Antoine stared at her for a long moment, then burst into laughter. Carina joined in.\n\n\"Adam, I don't know where you found this one,\" Antoine said, still laughing, \"but don't you dare let her go.\"\n\n*******\n\nAfter we left the Oxbow, Carina thanked me for dinner, and we went our separate ways.\n\nI sat on her tip for more than a week. I wasn't convinced it was legitimate, but I also didn't understand what she'd have to gain by lying to me. If the painting were genuine, I'd look like an idiot. On the other hand, if the painting were a forgery...\n\nI decided to take a gamble. I called Roland.\n\nI told him I had a hunch about the Schofield and asked if he would check it out. I also told him I had a PI on my back and that it was important he not mention anything about my involvement, regardless of whether the painting turned out to be genuine or fake. The last thing I needed was Monica breathing down my neck about how I miraculously uncovered a second forgery without examining the painting itself.\n\nHe called back the next day.\n\n\"Adam! You were right. I popped it under the black light and BAM! There it was, plain as day.\"\n\nRoland was a high-strung guy who liked to run his fingers through his thinning hair whenever he got excited. I could picture him pacing his office while we talked, one hand holding the phone, the other atop his head.\n\n\"Holy shit!\" he continued. \"This is only, like, the second forgery I've come across since I started doing this.\"\n\n\"Was Antoine upset?\"\n\n\"Kind of. But he was also glad I caught it. He's really been on my case. 'What's the point in having a forgery specialist that doesn't find any forgeries? What am I paying you for?' That kind of shit. I wanted to be like, 'You don't pay me, you cheap fuck.'\"\n\nI laughed. \"Well, I'm glad it worked out, Roland.\"\n\n\"Me too. You might have saved my job, Adam. I mean it.\"\n\n\"No way. Antoine can be an ass, but he knows what a good conservator you are. He'd be a fool to let you go.\"\n\n\"Never stopped him before.\"\n\n\"Look,\" I said, \"I know I don't have to say this again, but...\"\n\n\"No problem. Mum's the word. It doesn't feel right taking all the credit for this, but if you're gonna twist my arm, who am I to argue?\"\n\nI hung up and smiled. You always felt a rush after uncovering a forgery, and I could hear the exhilaration in Roland's voice over the phone. His euphoria had rubbed off on me like a contact high. I wanted to chase that feeling. I decided to take another crack at the Renoir.\n\nIt was still too risky to bring the painting to my lab, especially with Monica keeping an eye on me. But maybe I didn't need to bring the whole painting.\n\nI scraped flecks of paint from the canvas into individual Ziploc bags and sealed them. It was far from a foolproof way to avoid contamination, but it was the best I had. Then I brought the bags to my lab and popped the individual pigments under the Fourier transform infrared microscope.\n\nI held my breath. Sample after sample showed no irregularities. The most powerful forensic weapon in my arsenal had come up empty.\n\nI sighed. As the air left my body, so too did my earlier excitement. I wasn't ready to give up, but, for the first time, I felt like I might just be outmatched.\n\n*******\n\nCarina's tip had been legitimate, but I wasn't sure what to make of it. Maybe it was part of some angle she was playing that I hadn't quite worked out yet. Or maybe she really was trying to make amends and rebuild trust. Regardless, I owed her my thanks. At least, that's how I rationalized wanting to see her again.\n\nShe agreed to meet me in Prospect Park a few days later. I brought a blanket for a picnic dinner, and we found a quiet spot on the peninsula where we could enjoy the view of the lake.\n\nIt was a beautiful July day, and we talked about what our summers were like growing up. I told Carina how my family spent a week every August in a small house on Tybee Island, where I'd spend hours bobbing in the warm water on a red canvas raft. I still had some of the sand dollars that my brother and I had unearthed with our toes at low tide.\n\nShe told me about her first ever trip to an amusement park. Her parents had scrimped to take her and her sister to the grand opening of Chessington World of Adventures. They all rode a small roller coaster called Runaway Train. It happened to break down while they were halfway through one of the dark mining tunnels. Carina had loved it, but her sister had been terrified because she was convinced that that they really were on a runaway train. She'd had nightmares for days.\n\nThe sun began to set, and as the wind grew cooler, Carina drew closer. I wrapped an arm around her shoulder.\n\n\"That must have been nice, listening to what Antoine said about you.\"\n\n\"What did he say about me?\" I asked. I'd honestly forgotten.\n\n\"World's foremost forensic detective or whatever.\"\n\n\"I guess so, yeah. I hadn't really thought about it.\"\n\nIt occurred to me that Carina never got to experience the adulation of her peers. In fact, her entire career depended on anonymity. No one ever noticed her skill. Her employer valued her, but only as a source of income. I was probably the only person in her life who understood her talent and saw her the same way that she saw herself: as an artist.\n\nFor the first time, I considered the possibility that the Renoir might truly be just a gift. She wanted to be appreciated, as we all do, for our accomplishments. To the world, she would forever toil in secrecy, but I'd seen behind the curtain. With me, she could proudly claim her work as her own.\n\nWe ended up back at my apartment, where I started to pour two glasses of wine. I stopped when I noticed her face. She was blinking back tears.\n\n\"What is it?\" I asked.\n\nI was genuinely perplexed. She'd just been commenting on my chess board and telling me about the first time her dad had taught her to play.\n\n\"Nothing,\" she said. \"It's just, today has been really nice.\"\n\n\"Yes, I can see why that would be upsetting.\"\n\nShe laughed and swiped at a tear that had spilled down her cheek.\n\n\"What I mean is, this has all been so wonderfully normal. And I know I can never have that. Normal. For a little while, maybe. But in the end, I'm just fooling myself. Eventually another assignment will come up. I'll go back to what I do, and you'll go back to what you do, and all of this?\" She made a sweeping motion with her arms. \"It'll be like it never happened.\"\n\nThere were no words of comfort I could give that wouldn't sound hollow, so I just pulled her to my chest and held her.\n\nHer hair smelled just as I'd remembered. Her body was warm against mine, and I felt the soft pressure of her breasts with each breath. My body responded instantly. It had been so long.\n\nWhen she raised her head from my shoulder, her tears had stopped, and she had a new look in her eyes. It was a look I knew well, and I was certain she saw it mirrored in my face.\n\nWe barely made it to the bedroom.\n\nWhen we'd finally worn each other out, she curled into me and draped her arm across my chest. She kissed my left shoulder.\n\n\"What's the hardest part?\" I asked.\n\nShe gave me a sly grin.\n\n\"Of your work,\" I clarified.\n\n\"The signature.\"\n\nHer answer surprised me. Those in my profession considered a signature to be one of the easiest elements to forge convincingly.\n\n\"Not technically,\" she said, reading my thoughts. \"It's the actual act of signing someone else's name to my work.\" She traced a finger across my chest as though she were signing it. \"The name on that canvas will never be forgotten. Mine will never be known.\"\n\n\"Then give it up,\" I said. \"You're beyond talented enough. You could be signing your own name to your own paintings.\"\n\nShe smiled. \"Just like that, huh?\"\n\n\"Why not?\"\n\n\"You don't know the people I work for.\"",
        "\"I have an idea.\"\n\n\"No. You don't.\" She rolled onto her back and stared at the ceiling. \"My sister is the only family I have left. She hates me, you know. Doesn't understand why I just disappeared one day. Now we barely see each other. It's sad, but I can live with it.\n\n\"If something ever happened to her, though, it would be because of me. Because of the choices I made. I could never forgive myself for that.\"\n\nI shook my head. \"But you made those choices when you were just a kid. You could...\"\n\nShe cut me off. \"Just stop. Please? This isn't a case. Don't try to solve it for me.\"\n\n\"Sorry,\" I said. \"Force of habit.\"\n\nShe smiled. \"Let's just spend this time together. It will come to an end. Everything does. But enjoy it with me while we can. Okay?\"\n\nI nodded. She slid her body atop mine and pulled me into a deep kiss.\n\nI had promised to enjoy our time together. I had no trouble keeping my word.\n\n*******\n\nFor the next few weeks, we did remarkably well at setting aside our professions and relishing each other's company.\n\nDespite her atrocious singing voice, Carina loved musicals, so I got two tickets to Wicked. Afterward, we grabbed a bite to eat at Junior's in the Theater District. Carina hummed an off-key version of \"I'm Not That Girl\" as she picked at her cheesecake.\n\n\"What's your favorite show?\" she asked.\n\n\"Never really thought about it. I've only seen a few. Maybe Les Miserables?\"\n\n\"I love Les Mis!\" she said.\n\n\"I know. I heard you singing it in the shower last year.\"\n\nShe cringed. \"Was I awful? I was awful, wasn't I?\"\n\n\"Let's just say you're better at reproducing paintings than songs.\"\n\nShe stuck out her tongue. \"You're mean.\"\n\n\"You asked.\"\n\n\"Bet you can't guess what I like best about Les Mis.\"\n\n\"Hmm... it wouldn't have anything to do with the fact that its hero is a misunderstood criminal who escapes his past and makes the world a better place, would it?\"\n\n\"Nope.\" She pointed her fork at me. \"The best part is that the man relentlessly pursuing the criminal for those past misdeeds kills himself.\"\n\nI smiled. \"Sorry to disappoint you, but I don't have any plans to throw myself into a river.\"\n\nShe sighed wistfully. \"A girl can dream.\"\n\nCarina had always been too busy when she was in town to hit any of the big tourist spots, so another evening we visited the original observation deck on the 86th floor of the Empire State Building and took in the Manhattan skyline. The weekend after that she took me to an Orthodox church in Brooklyn and showed me the icons, pointing out some of the common ones she'd been asked to copy as a child.\n\nTwo weeks later we were walking hand-in-hand through Brooklyn Botanic Garden, one of our old stomping grounds, when I heard a familiar voice directly behind us.\n\n\"Lovely day for a walk, isn't it?\"\n\nCarina and I turned. Monica Bradley greeted us with a smile.\n\n\"Sorry to interrupt,\" she said. \"Adam, can I have a quick word?\"\n\nI was unnerved by the ease with which Monica had tracked me down, and irritated that I hadn't noticed her following me. How closely had she been watching? How many days had she been tailing me?\n\n\"I'm a little busy.\"\n\n\"It'll just take a minute,\" Monica pressed. \"It's about the forgery at the Oxbow gallery.\"\n\nI was about to tell her that I had her number and would call her later when Carina chimed in.\n\n\"Ooh, a forgery? That sounds exciting!\"\n\nMonica glanced at her. \"I don't know that exciting is the word I'd use.\"\n\nCarina pointed at Monica, then at me. \"Well, maybe for you two it's old hat. But I'm not a forensic scientist, so my day-to-day is a little more ho-hum.\"\n\n\"I'm not a scientist,\" Monica corrected. \"I'm a private investigator.\"\n\n\"See?\" Carina said, turning to me. \"Exciting!\"\n\n\"I don't know why you're coming to me,\" I said. \"I didn't uncover it.\"\n\n\"But you know who did,\" Monica answered.\n\n\"I heard Roland Prescott found it while authenticating works for an auction.\"\n\n\"And that's all you know?\"\n\nI briefly considered whether Roland had accidentally let something slip, but decided she was just fishing.\n\n\"That's all I know.\"\n\nMonica nodded. \"Do you think it was by the same person who did the Modigliani?\"\n\n\"I have no idea. I never examined either painting. Yet you seem determined to ask me about them anyway.\"\n\n\"Just trying to connect the dots,\" she said.\n\n\"I think you're trying to make up dots where they don't exist. Go talk to Roland if you want to know about the painting. He's the one who actually looked at it.\"\n\n\"Oh, I plan on doing that,\" Monica said.\n\n\"Do you think you'll catch him?\" Carina asked. \"The forger?\"\n\nMonica looked slightly annoyed. \"I wasn't hired to catch a forger,\" she said. \"That's a job for the police.\"\n\n\"Oh,\" Carina said, sounding disappointed.\n\nMonica extended her arm toward me. \"Here's my card again, in case you think of anything else.\"\n\nI raised my open palm. \"I have it, thanks.\"\n\n\"Great.\" She nodded at both of us. \"Sorry to have interrupted. Enjoy your walk.\"\n\nCarina and I strolled on in silence, still holding hands. I was furious with her cavalier attitude, but I couldn't show it in case Monica or someone else might still be watching. I focused instead on the purple coneflowers and black-eyed Susans lining our path.\n\n\"You didn't tell me she was pretty,\" Carina said playfully.\n\n\"I'm less focused on her looks than I am the fact she's investigating me.\"\n\n\"Oh, so you do find her attractive?\"\n\nI didn't answer. I wasn't in the mood for banter. Carina called me on my sullenness as soon as we got back to my apartment.\n\n\"What's the matter?\" she asked. She took my hand and squeezed. \"C'mon. What did I do?\"\n\n\"You know,\" I answered.\n\nShe stared at me blankly.\n\n\"That little performance with Monica,\" I continued. \"It was reckless. This isn't a game. Maybe you get off on it, but I don't.\"\n\n\"I wasn't being reckless. I was acting not guilty. You should try it.\"\n\n\"What's that supposed to mean?\"\n\n\"You were so defensive back there. No wonder she's suspicious of you.\"\n\n\"Sorry if lying doesn't come as easily to me as it does to you.\"\n\nCarina removed her hand from mine.\n\nI knew I was being an ass. I also knew that I should drop the discussion until I had cooled off a bit. I pressed forward.\n\n\"You couldn't resist, could you? You just love flaunting how good you are at pulling the wool over people's eyes. She's sharper than you realize, you know. What if she starts asking questions about you?\"\n\n\"I didn't even give her a name,\" Carina said. \"You're being paranoid.\"\n\n\"I have to be paranoid. Unlike you, I can't up and leave town if things get messy. I have a life here.\"\n\n\"How awful that must be for you.\"\n\nWe fell back into silence.\n\n\"Are you done examining the Renoir?\" she asked.\n\nShe was intentionally needling me now. I should have just ignored her. Instead, I grabbed the painting from my closet and slammed it on the table between us.\n\n\"Why did you send this to me?\"\n\n\"I told you. It's a gift.\"\n\n\"No lies. Why did you send it?\"\n\n\"Because they don't sell Hallmark cards that say, 'Sorry I concealed my life as a forger and ruined our relationship.'\"\n\n\"Bullshit.\"\n\nCarina laughed, but there were tears in her eyes. \"I've been so foolish. Thinking maybe we could start over. That maybe one day you could learn to trust me again.\"\n\n\"This isn't about that.\"\n\n\"Well, for me it is!\" she yelled. \"For me, it's totally about that, Adam. I've been deluding myself into thinking we were making progress. That we were healing. But this whole time the only real feeling you've had for me is suspicion.\"\n\n\"That's not true,\" I said.\n\n\"Oh, it isn't? Then tell me. What are your theories? Why did I give you the painting? I want to hear them. What have you really been thinking about me while we've been going on walks and fucking each other?\"\n\nFine, I thought. If she wanted to play this game, then I'd play.\n\n\"Maybe the painting you sent me is the real Renoir,\" I said.\n\nShe scoffed. \"That suits you so well. The perfect explanation to soothe your ego. The reason you haven't found a flaw isn't because I'm better than you, it's because you've been examining the genuine painting all along, right?\"\n\nI nodded.\n\n\"Tell me, how did I get the real painting? And why would I send it to you?\"\n\n\"I don't know,\" I admitted.\n\n\"Well, we're off to a great start. Keep going. What else?\"\n\nMy second theory was a lot more plausible. \"You're planning to swap the forged Renoir with the real one.\"\n\nShe placed a hand on her chin and stared at the floor. Her head bobbed as she worked through the details. \"Okay. I see where you're going. And once again, you're central to my evil plot. Because before I make the swap, I need you to admit that you haven't been able to find a flaw. That's the only way I can be sure it will go undetected, right?\"\n\n\"Something like that,\" I said.\n\n\"First problem: I don't need your stamp of approval. Second problem: you have the painting I'm planning to swap. How do I get it back? Ask politely?\"\n\nI didn't answer.\n\n\"What else?\" she pressed. \"Tell me.\"\n\nI knew it would sting, but I didn't care. I wanted the words to hurt. \"You hired the PI so she'd catch me with your forgery.\"\n\n\"Of course. Because I want to take the heat off myself and put it on you. You're nothing more to me than a pawn. That's what you think?\"\n\n\"That's right,\" I said.\n\n\"That would make sense, if there were any heat. Maybe you haven't noticed, but nobody has the slightest clue who the fuck I am. Except you.\n\n\"Well, I thought you did. I thought you saw more deeply than others. That's your job, isn't it? To look past the superficial until you uncover the essence? That's what I thought you saw when you looked at me. But I was wrong. All you see is a fucking criminal. That's all you'll ever see.\"\n\nShe'd been pacing back and forth as she spoke. She paused at the table and stared down at the Renoir.\n\n\"I should never have sent this to you. You don't deserve it.\"\n\nShe pushed past me into the kitchen. She reached for the counter, and I caught a flash of silver. She advanced on me with the knife held by her side.\n\n\"Carina, wait,\" I said. I tried to keep my voice calm and even. \"This isn't you.\" I back peddled and raised my arms in defense.\n\n\"Get out of my way, you idiot.\"\n\nShe shoved me aside and raised the knife over her head. Before she could bring it down on the painting, I grabbed her wrist with one hand and wrapped the other around her waist.\n\n\"Let go!\" she yelled.\n\nShe twisted and pulled, but I pressed her back tightly against my chest and held her until she stopped struggling.\n\nHer arm dropped to her side. The knife clattered to the floor. She turned, buried her head into my shoulder, and dissolved into heaving sobs.\n\n\"I'm sorry,\" she said. \"I'm so fucking sorry.\"\n\nIt was the first time she'd spoken those words. The first time she had expressed true remorse for deceiving me more than a year ago.\n\nAs I held her, listening to her sobs gradually slow to more measured breaths, I knew what my next step had to be.\n\n*******\n\nRoland sat beside me in the Oxbow Gallery's conservation room, repeatedly running his fingers through his hair as he watched me prep the Renoir for examination. Roland had removed it from the gallery wall about an hour ago.\n\n\"You're not going to tell me it's a forgery, right Adam?\" he said. \"Promise me that. I mean, holy shit. Can you imagine? Antoine would go ballistic.\"\n\n\"Relax, Roland. Antoine's painting is not a forgery.\"\n\n\"You're sure?\"\n\n\"I'm sure.\" I adjusted the stereo microscope. \"Mostly.\"\n\n\"What do you mean 'mostly'?\"\n\n\"I'm kidding.\"\n\nIt had taken a couple of weeks to get everything set up to inspect the Renoir. It really wasn't fair of me to call in a favor this big with Roland. Sure, he owed me for tipping him off about the Schofield, but I was making a huge ask, especially since I was vague about my reasons for wanting to examine it. In the end, it had taken a direct intervention from my boss, Nora, to get Antoine to agree. He liked the idea of having a gallery owner as powerful as Nora owe him a favor.\n\nI agreed to wait until after 11 p.m. so we wouldn't have to take the painting off display during business hours and disappoint any potential visitors. With the gallery empty, the conservation lab was eerily quiet. I could hear the nervous tapping of Roland's shoe and the hum of the overhead fluorescents.\n\nI pulled from my pocket a list of the tests I wanted to run and set it beside the microscope.\n\nThen the room went dark.\n\n\"Shit,\" said Roland. \"You've got to be kidding me.\"\n\nBy design, the conservation room was windowless to protect paintings from sunlight. Without power, the room was about as pitch black as you could get.\n\n\"It's fine,\" I said. \"The backup UPS will probably kick on in a second.\"\n\nIt didn't.\n\nAs I fished in my pocket for my phone, I heard the door slam open. The sound of footsteps, multiple people moving quickly, made their way toward us.\n\n\"Adam?\" I heard Roland's disembodied voice ask.\n\nSomething hard and blunt dug into my right side. I felt cold metal through the fabric of my shirt.\n\n\"Get up,\" a voice said. \"Walk.\"\n\nI stood. Multiple pairs of hands guided me quickly through the room. I couldn't see, but the owners of the hands obviously could.\n\nI slammed my thigh into the corner of something sharp and winced in pain. The hands pushed me through the door, and I limped down the hallway. My eyes had started to adjust, but I could still only make out shapes.\n\nMoments later we were in an SUV speeding away from the gallery. Three men in black ski masks occupied the seats. The one beside me held a gun to my side. On the floor lay three pairs of night-vision devices. Shoved unceremoniously into the rear cargo area was the Renoir.\n\n*******\n\nThe men never spoke a word. We drove to a parking garage. Two of the men moved with me to a gray Jeep. The third drove off in the SUV with the Renoir.\n\nThe man next to me pulled a hood over my head. We drove for half an hour, maybe more, then came to stop.\n\n\"Out,\" said the driver. The man beside me pulled the hood off and pushed me through the door.\n\nThe SUV pulled away and vanished around a bend. I squinted. My eyes were struggling to adjust to the ambient light after 30 minutes of darkness.\n\nI pivoted in a slow circle, trying to get my bearings. It seemed to be the edge of Prospect Park, not far from the Brooklyn Botanic Garden and my apartment. All that driving, just to end up here.\n\nA woman's voice spoke from behind me. \"Hello, Adam.\"\n\nI turned to face Monica. She was holding a gun.\n\n\"Did you really think you could fuck up a multimillion-dollar auction, something that took us months to plan, without any consequences?\"\n\nI stared at her, expressionless.\n\n\"Oh, those dull cow eyes,\" she said, shaking her head. \"I honestly don't understand what Carina sees in you.\"\n\n\"You two have been working together this whole time,\" I said.\n\n\"She sends her regrets. I invited her along, but she said it was just too hard. You know, I think she really does love you. But I guess if I had to choose between betraying my lover and protecting my sister, I'd do the same.\"\n\n\"I don't understand,\" I said.\n\nMonica sighed. \"This is so disappointing. Do I really have to spell it out for you?\n\n\"Here are the pieces the police will have to work with. There are rumors, spread mostly by me, that you were involved in the Modigliani forgery. Carina made sure Antoine spotted you in his gallery admiring his Renoir. You mysteriously identified a forgery in the Oxbow's collection without even examining it, tipped off their conservator, and made him promise to keep your involvement secret. Next, you used that favor as leverage to secure an opportunity to examine the Renoir in the conservation room, where it's more vulnerable to theft. You and your accomplices then disappeared with the painting in a daring robbery. Soon the police will search your apartment, find the forgery, and report they've recovered the stolen painting.\"\n\n\"All of this was just to frame me?\"\n\n\"Well, not just to frame you. Several Eastern European oligarchs are anxious to bid on a genuine Renoir for their private collections. That sale should more than make up for the money you cost us by exposing the Modigliani. Two birds, one stone as it were. Plus, while you're tucked away in prison, we won't have to worry about you interfering with any of our future plans. So, three birds I guess.\"\n\n\"The Schofield forgery that Carina tipped me off about...\"\n\n\"She painted it herself. We knew you would eventually ask to examine the real Renoir, and the answer was more likely to be 'yes' if their gallery's conservator owed you a favor.\"\n\nMy thoughts turned immediately to Roland. \"Did you hurt him?\"\n\n\"Of course not. Who needs the extra attention?\"\n\n\"How could you be sure I'd examine the real painting?\"\n\n\"Because you're too stubborn and arrogant to admit defeat, especially with Carina constantly taunting you about whether you could prove the Renoir was a forgery. She played her role well, though I did have to drop by and nudge her along at the Garden when I thought she might be getting cold feet.\"\n\n\"I don't get it. Why pose as a PI? Didn't trust Carina to handle your dirty work?\"\n\n\"Oh, I'm not posing. I'm licensed by the State of New York. I help people catch cheating spouses, all that boring stuff. But I also have a close working relationship with some more organized, and much better paying, individuals. They find it handy to have people like me on staff. As far as my role, I'm sure you can guess that.\"\n\n\"Spook me. Make me too nervous to move the Renoir from my apartment. Then keep a close eye on me to make sure it stays put.\"\n\nShe nodded. \"See, you're catching on. I also bugged Roland's office when I interviewed him about the Schofield forgery. We had to know when you planned to examine the Renoir so that we could coordinate things on our end.\"\n\nI heard the approach of sirens. I shot a quick glance toward the trees.\n\n\"Have some dignity, Adam,\" Monica said. \"Innocent men don't run.\"\n\n\"You called the police? How are you going to explain what you're doing here with a gun?\"\n\n\"Simple. I've been staking out your apartment as part of an ongoing investigation. I saw you leave with three men and followed you to the Oxbow, where I watched you run out with a painting. I tailed you to your apartment, where I assume you stashed it, and called the police. Then I followed you here and detained you.\"\n\nA police cruiser pulled alongside the curb. Two male officers jumped out, sidearms drawn.\n\n\"Drop the weapon!\" one yelled. Monica calmly dropped her gun.\n\n\"On the ground, both of you!\"\n\nWe both lay down facing each other. Monica smiled.\n\nThe officer closest to me grabbed my arm and spoke into his shoulder-mounted radio. \"Suspect is in custody.\"\n\nThen he helped me to my feet while his partner handcuffed Monica.\n\n\"Are you okay, Mr. Weber?\" the officer asked me. \"Should we call medical?\"\n\n\"I'm fine. Thank you, officer.\"\n\nMonica had been yanked to her feet. The officer closest to her was reciting her Miranda warning in a bored monotone.\n\n\"Officer,\" she said, looking from him to me and then back again. \"I think there's been some confusion.\"\n\n\"I think you might be right, ma'am,\" he said after finishing the Miranda warning. He turned toward me. \"You want to clear it up for her, Mr. Weber?\"\n\n\"I'll try.\" I stepped forward until Monica and I were face to face.\n\n\"The first thing I noticed with my, how did you put it, 'dull cow eyes,' was what you did in my lab when I invited you to check out the pigment sample I'd just run. Do you remember?\"\n\nMonica said nothing.\n\n\"You instinctively glanced at the spectrum graph on the laptop,\" I continued. \"Anyone else, especially someone as ignorant of art and forensic science as you claimed to be, would have looked through the stereo eyepiece on the microscope itself. That's how we're taught to use microscopes in school. Only someone familiar with art forgery would know that FTIR results are displayed as a spectrum graph on a computer screen.\"",
        "\"Officer,\" Monica said, a note of anxiety now in her voice. \"I was on a stakeout. I saw him. He ran into his apartment with a painting. If you send someone over there, I'm sure you'll find it.\"\n\n\"I doubt that,\" I said. \"Your three goons just stole it.\"\n\nShe stared at me. It was clear she wanted to believe I was bluffing, but I could see the panic etched on her face.\n\n\"You look worried,\" I said. \"Don't be. The genuine Renoir is safe. It's locked in a vault at the Oxbow.\"\n\nMonica was glaring at me now, pure hatred behind her eyes.\n\n\"Anyway,\" I continued, \"the microscope incident told me you weren't who you said you were. But I didn't realize you were working with Carina until you dropped by the Brooklyn Botanic Garden. Carina and I were holding hands as we walked. When you called out to us from behind, her hand tensed involuntarily. Just for a second, but a hard squeeze.\n\n\"At first, I thought it might have been surprise, because she recovered quickly. But as we talked, her palm began to sweat. I realized she was overplaying her nonchalance to mask what she was truly feeling. Her hand hadn't tensed in surprise. It had tensed in fear. She was terrified of you.\n\n\"At that point, I had a few competing theories about what you might be up to. I admit, it took me longer to reach a conclusion than it should have, but eventually I landed on the likeliest probability: you and Carina were conspiring to steal the Renoir and frame me.\"\n\n\"That's absurd,\" Monica said. \"No one is going to believe you.\"\n\n\"Maybe not,\" I said, unbuttoning my shirt and exposing enough skin to allow her to see the wire I'd been wearing. \"But I bet they'll believe you.\"\n\n*******\n\nWhat I'd told Monica was true: I had finally worked out that she was planning to frame me. But what I didn't tell her--what I couldn't tell her--was that I never would have figured out her plan if Carina hadn't shown me the way.\n\nShe didn't come right out and confess. In fact, she tried to stay committed to Monica's plan until the very end. But I'd like to believe that the more time we spent together, the more her guilt weighed on her, until she finally hit a breaking point. Our argument at my apartment had been the key.\n\nWhen she broke into sobs and told me she was sorry, I thought she was finally apologizing for deceiving me about her life as a forger when we first met. But as I held her, I considered another possibility. What if she wasn't apologizing for something she had done in the past? What if she was apologizing for something she was doing now?\n\nAt that moment, the pieces finally clicked, and I saw our argument in a new light.\n\nWhen Carina had forced me to recount all my half-baked theories about her real motives for sending the Renoir, I assumed she was simply ridiculing me for my inability to trust her. It had been more than that, though. She talked through each of my hypotheses with me. She poked holes in my guesses when they missed the mark. Intentionally or not, she helped me to eliminate dead ends so that it would be easier to find my way to the truth.\n\nWhen she stared at the Renoir and said, \"I should never have sent this to you. You don't deserve it,\" I thought she was saying that I wasn't worthy of her gift. But in admitting she never should have sent me the painting, she was really admitting she never should have set Monica's plot in motion. It wasn't the painting she felt I didn't deserve; it was her betrayal.\n\nI realized it was guilt, not anger, that prompted Carina to grab the knife. In trying to destroy the painting, she was trying to save me. Fortunately, I had stopped her. Her shame was clouding her judgement. Had she succeeded, Monica would have found out, and Carina's sister would have suffered.\n\nAfter she had dropped the knife, I held her and stroked her back until she stopped crying.\n\n\"Thank you,\" I said.\n\nShe shook her head against my chest, her face still buried in my shirt. \"You shouldn't be thanking me.\"\n\n\"Yes, I should.\"\n\n\"For what?\" she asked, looking up at me.\n\n\"Trying to stop me from walking into Monica's trap.\"\n\nShe pulled away. In her eyes, I saw a swirl of emotions: panic over whether to admit to her role, fear over how I would react, and relief that she no longer had to bear the weight of her secret.\n\n\"I wanted to tell you,\" she said. \"For so long I wanted to tell you. Please believe me.\"\n\nShe was crying again. I pulled her close. \"I believe you.\"\n\nThat made her cry harder.\n\n\"I didn't know what to do,\" she said. \"No matter what choice I made, someone I love would get hurt.\"\n\nCarina had never said she loved me before. It was possible she was just manipulating me, protecting herself by telling me what she thought I wanted to hear. People say a lot of things when you catch them in a betrayal, and Carina was as skillful a liar as she was a forger. But my gut told me she was telling the truth.\n\n\"Why didn't you confide in me?\" I asked.\n\n\"I didn't know what you'd do.\"\n\n\"You thought I'd turn you in? No matter the cost to your sister?\"\n\n\"I couldn't risk it. She's all I have.\"\n\nI shook my head. \"You have me. But if you want to earn back my trust, you have to start by trusting me.\"\n\nShe nodded and held my eyes, a determined look on her face. \"I trust you.\"\n\n\"Good,\" I said. \"Then I'll need your help. Because I don't want someone I love to get hurt, either.\"\n\n*******\n\nMy plan was pretty straightforward. Carina would tell Monica about my suspicions, emphasizing my theory that Carina was somehow planning to swap the forged Renoir for the real one. She would also tell Monica that I was determined to find some discrepancy between the two Renoirs so that they couldn't be swapped without detection. Monica would be thrilled, because to find a discrepancy, I would need to examine the real painting at the Oxbow.\n\nCarina would also tell Monica about our big argument. In her version of events, our fight ended with me kicking Carina out of my apartment and telling her I didn't want to see her again. I'd said I didn't believe her painting was a gift, would never trust her, and wouldn't rest until I was able to prove her work was a forgery. Monica would likely encourage Carina to stay away from me, just as I'd asked, so that I could finally focus my efforts on analyzing the real Renoir.\n\nThis gave Carina a plausible excuse for lying low, which was vital to the next phase of my plan.\n\nIf I wanted to help Carina and her sister, it was critical that I expose her. Whoever Carina was working for needed to believe that I wanted her arrested just as badly as I wanted Monica arrested. Otherwise, they would assume that Carina had tipped me off about Monica's plan and that I was protecting her by concealing her identity.\n\nI went to Nora and told her everything. Well, almost everything. In my version of events, Carina was a willing participant in the conspiracy rather than the person who had helped to reveal it.\n\nNora was less than pleased to learn I'd known the truth behind the Modigliani forgery all along but kept it hidden because I was dating the forger. She was also skeptical about my theory that Carina and a private investigator were conspiring to steal the Renoir and frame me for the crime.\n\nWhen I finished my explanation, Nora reacted in two ways. First, she fired me on the spot. That didn't surprise me. It's a minor conflict of interest when the forensic scientist in your employ has been secretly sleeping with a master forger. Second, she agreed to help me. That did surprise me. I suppose that even though she was furious with me, Nora still trusted my instincts.\n\nI explained to Nora my plan for catching both the forger and the would-be thief. So as not to arouse Monica's suspicions, she agreed to contact the police and coordinate details.\n\nThe first step was to move the forged Renoir from my apartment without alerting Monica. The police staged a mattress delivery and removal with a non-existent tenant on the floor above me. The same mattress that went up the stairwell also came back down it. The only difference was that on the way back down, the mattress happened to contain a plastic-wrapped Renoir forgery concealed in a custom-made compartment.\n\nThe next step was convincing Antoine to cooperate with the sting. He adamantly refused to display the forgery in place of the original until Nora convinced him of the publicity his gallery would receive for having been the target of a foiled plot to steal a masterpiece. The exposure would undoubtedly increase attendance and inflate the bidding at his upcoming auction. After that, he selflessly complied with the plan. He didn't even ask for any compensation. His only concern, he assured us, was for the greater good of the artistic community.\n\nKeeping Roland in the dark was the one part of the plan that gave me pause. It was critical that we limit the number of people who knew about the sting. Still, it wasn't fair to put him in harm's way without his consent. We ended up telling him the bare minimum: that we expected there to be an attempted theft of the Renoir when I inspected it, that we believed violence was unlikely, and that he did not need to be involved. He insisted on being in the room and promised not to interfere. He told me later he knew it would give him a killer story to share on a date.\n\nIn the days leading up to the sting, the police asked me to try to draw out Carina and meet with her. They wouldn't take her down until Monica was arrested, but they wanted to establish a tail in advance.\n\nCarina ignored every one of my texts and calls, just as she and I had discussed in advance. I told the police I wasn't surprised by her silence, given that we'd had a big argument at my apartment that had ended with me telling her I didn't want to see her again. At their suggestion, I tried visiting her at the hotel where had been staying in Brooklyn, but the front desk said she'd already checked out.\n\nThe longer we tried to draw out Carina, the more likely it was Monica would grow suspicious about why I hadn't yet examined the real Renoir. The police decided to move forward without the tail. The thief was a more important target than the forger.\n\nThe genuine Renoir was placed in a safe, and the police embedded a tracking device into the frame of the forged Renoir before it was mounted at the Oxbow. It's not an uncommon practice with valuable works of art. Monica's squad was clever enough to ditch the frame after they stole it, just in case it had been tagged. Fortunately, the detectives assigned to follow the thieves were expecting them to split up and change cars, so they never lost the tail. They arrested the driver transporting the forged Renoir, as well as the two men who dropped me off at the park.\n\nThe police had doubted Monica would be foolish enough to show her face on the night of the theft, but I knew she wouldn't be able to resist gloating. It would be the perfect opportunity to secure a confession. Wearing a wire made me a little nervous, but Monica had no reason to suspect I was on to her. By asking to inspect the original Renoir, I was walking right into the trap she'd set for me.\n\nThe only person the operation didn't catch was the forger. The police plastered Carina's image everywhere in the days following the attempted theft, hoping someone would call in a tip. At their request, I had provided recent photos of Carina as a redhead. Nora and I also helped a forensic artist create a portrait of Carina just as she had looked when she tried to auction the Modigliani through the Kiefer Gallery: auburn hair styled into a long bob, delicate features, and those piercing blue eyes.\n\nThe police came up empty, so they sent the photos and the forged Renoir along to the FBI, who had more resources to attempt to track down Carina. With any luck, Carina had already managed to make it back to London, just as we'd discussed.\n\nI emerged from the chaos relatively unscathed. True, I'd lost my job, but I'd had a successful consulting business before the Kiefer Gallery, and I had every reason to believe that success would continue.\n\nThe police continued to poke around for a while. I was pretty sure they assigned plainclothes officers to follow me for a few weeks, probably to see if I'd lead them to Carina. There was also talk of obstruction of justice charges for my reluctance to come forward sooner with the forger's identity, but apparently there wasn't much appetite to pursue a case against someone who had helped to foil both an attempted forgery and an attempted heist.\n\nAfter things finally settled down, I took a much-needed solo trip to the Adirondacks. The mountain air usually helped to clear my head, but this time all it did was intensify my anxiety. It upset me that Carina was likely back with her employers somewhere in London, maybe even discussing her next assignment. In a different world, her incredible talent would have been nurtured, not exploited. Decisions she made as a child had robbed her of a relationship with her sister, the chance for a normal life, and the opportunity to be recognized for the artistic genius she was. It wasn't fair.\n\nI hoped we had done well enough to convince her employers that she had narrowly escaped a botched job in New York that had gone sideways through no fault of her own. Even if they bought it, we'd managed only to avert the immediate crisis. The circumstances that precipitated that crisis remained: Carina was an indentured servant to a criminal organization that was using threats against her sister to control and manipulate her.\n\nMy pity wasn't reserved only for Carina. I had plenty to spare for myself. For more than a year, I'd allowed my anger at Carina's deception to serve as a shield. It protected me from the enormous loss I felt after she left. And it made it easy to ignore my true feelings for her. When she came back into my life and I eventually lowered that shield, it was astonishing how good it felt. Like I was being honest with myself for the first time.\n\nNow, she was gone. Again.\n\nWe'd agreed that we should both lie low and avoid contact for a while after she left. That was especially true now that she'd aroused the attention of the FBI.\n\nThat's why I was surprised when a small package arrived at my apartment two months later. There was no return address, and no handwritten note like last time. Only a wooden Orthodox icon.\n\nIt took just a few minutes on my phone to identify it. It was an icon of Saint Phanourios. In the Orthodox tradition, he interceded to help the faithful who were searching for something. As the patron saint of lost things, he helped reveal not only lost objects, but also hidden matters of the heart.\n\nI didn't know where Carina was, and I didn't know why she felt lost. But I knew what to do with lost things.\n\nYou find them.\n\n*******\n\nAuthor's Note:\n\nWhen I finished Art of Deception, I had the germ of an idea for a sequel. I never would have pursued it if it hadn't been for the comments and feedback I received from readers. Thank you. Knowing that some folks out there liked the original enough to want to read more was immensely gratifying.\n\nI finished this story with the germ of a third chapter in mind. I hope it will take root more quickly than it did last time. In the meantime, I have another story idea or two that I hope to explore before returning to the world of Adam and Carina. Thanks for reading."
    ],
    "authorname": "ThatNewGuy",
    "tags": [
        "detective",
        "mystery",
        "renoir",
        "painting",
        "trust",
        "new york",
        "auction"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/art-of-deception-light-and-shadow"
}