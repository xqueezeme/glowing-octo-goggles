{
    "title": "Three Square Meals Ch. 129",
    "pages": [
        "\"Holy shit!\" Dana blurted out, her eyes like saucers as she stared at the shattered bed. \"How hard were you fucking her in the ass?!\"\n\nJohn was sitting on the mattress in the middle of all the destruction and protested, \"Not enough to break the bed!\"\n\nIrillith kissed him on the shoulder and gave him a dreamy smile. \"Actually, it was all very sensual and loving.\" \n\n\"Everything was,\" Tashana murmured, looking up at John with a doe-eyed expression of absolute devotion. \"I don't think I've ever felt so close to you, Baen'thelas.\"\n\nHe put his arm around her waist and stroked her hugely swollen tummy. \"You're right, it was an incredible evening... but I think we're getting a little side-tracked.\" He turned to the redhead. \"What the hell happened to the bed, Sparks?\"\n\nDana squatted down and picked up one of the jagged pieces of sparkling white metal that were scattered across the floor. \n\nShe turned it in her hand, studying the fragment in fascination. \"Now this looks strangely familiar...\" \n\n\"It can't have turned into Crystal Alyssium... can it?\" John asked, frowning dubiously.\n\nHer eyes blazed with a gleaming golden light and she peered into the atomic structure of what had once been black Progenitor metal. \"No, this is something else entirely... I've never seen anything like it.\"\n\nAlyssa yawned as she strode into the bedroom. \"Sorry, I got here as fast as I...\" Her voice trailed off as she gaped at the scene of devastation. \"How the hell did you wreck the bed?!\"\n\nJohn shrugged helplessly. \"I honestly don't know.\"\n\n\"Why don't you give me a blow-by-blow of what happened,\" Dana requested, before smirking at Tashana's cum-filled belly. \"You know what I mean.\" \n\n\"Well the twins were already here when I arrived with Helene...\"\n\n\"We showered and dressed together in my bedroom rather than the shuttle,\" Irillith interjected. She blushed as she added, \"We both wanted to be fully prepared for John, so we-\"\n\n\"So you gave each other enemas and lubed yourselves up for an assfucking,\" Dana interrupted, making an impatient rolling motion with her hand. \"Skip to the next bit... when you arrived here, did anything weird happen?\"\n\nThe twins shared a glance then shook their heads. \n\n\"We were only waiting for a couple of minutes before John arrived,\" Tashana explained, a faraway look appearing in her eyes. \n\n\"And what an entrance it was...\" Irillith said with a breathy sigh.\n\nAlyssa's ears perked up and she flashed a smile at the besotted Maliri. \"Did he look handsome?\"\n\n\"Oh, he looked amazing!\" Tashana gushed, biting her lip. \n\n\"And he was so masterful,\" Irillith agreed, her violet eyes alight with wonder. \"I would've done anything he asked...\"\n\n\"But John was loving rather than domineering,\" her sister added wistfully. \"Everything he said made my heart flutter...\"\n\n\"Mine too,\" Irillith agreed, resting her head on his shoulder. \"You really do own me body and soul, Baen'thelas...\"\n\n\"Okay, so we've established John is awesome,\" the redhead said with an amused smile. \"But what actually happened after he strode masterfully into the room?\"\n\nJohn put his arms around both Maliri girls, then gave Dana an apologetic look. \"They're a bit out of it at the moment. I invited Helene to join us in bed and she offered to share our emotions... you know how powerful that can be.\" \n\nHelene gave him a shy smile as she nuzzled into him. \"I could just feel the love pouring off the three of you.\"\n\n\"Yeah...\" Dana murmured, glancing down at the chunk of metal in her hand with a look of shocked disbelief on her face. \"Powerful stuff...\"\n\nAlyssa darted a sceptical glance at the redhead as she heard what her friend was thinking. \"You can't be serious?\"\n\nDana frowned as she wracked her brain for any other possibilities. \"What else could've done it? I can't think of anything...\"\n\nSquatting down beside one of the metal fragments, Alyssa took a deep breath, then tentatively reach out to pick up the chunk and heft it in her hand. She'd been expecting a wave of deeply unsettling sensations, but when she touched the piece of Progenitor metal, there was no sign of residual echoes. If anything, the contact felt almost pleasant and she closed her eyes to savour the gentle sense of warmth stirring in her heart.\n\nAlyssa suddenly dropped the metal in shock, the chunk landing with a noisy clang. \"Holy fuck...\"\n\nJohn half-rose from the bed in alarm. \"What is it?\"\n\n\"You know I've been getting bad vibes from the Progenitor metal?\" Alyssa replied, looking at the white-streaked bed-frame in astonishment. \"I think Helene... cleansed it.\"\n\n\"I did?!\" the aquatic girl gasped, looking stunned.\n\nThe blonde nodded. \"Every time I've been in contact with black metal, I get this really horrible feeling... a bit like the psychic echoes of thralls being slaughtered on a Progenitor dreadnought.\" She ran her fingers over another white chunk of shattered bed frame. \"I don't get any of those sensations from this stuff... it's actually pleasant to touch now.\"\n\nDana jerked a thumb to the side. \"Could you guys get off the mattress a second? I want to check underneath.\"\n\nJohn nodded and was about to move, but he paused when he saw the treacherous carpet of jagged metallic fragments strewn across the floor. He made a sweeping gesture and a wall of telekinetic force brushed aside all the pieces, clearing a space for them to vacate the bed. The twins accepted the hands he offered them, rising to their feet and following Helene off the mattress. Alyssa waved a hand at the rumpled bed and flipped it aside, revealing the floor below.\n\nThe redhead whistled as she studied the warped deck plates. \"Wow, she really went to town on it...\"\n\nDirectly beneath where John and the girls had been lying was a pristine white oval, with white streaks spreading out in all directions. The metal had buckled and deformed, bowing outwards and forming a large depression in the floor.\n\n\"Okay so this was obviously centred on Helene,\" John said, gesturing to the white oval. \"But that doesn't make any sense; she can't do psychic shaping.\"\n\n\"No... this is something different,\" Dana muttered, tapping a finger on her chin. \"When I looked into the metal, its atomic structure was all messed up... like waves of force had pummelled it. The black metal must be psychically reactive, but it got completely fucked up by all the positive vibes you and the twins were pumping out.\"\n\n\"But why did the bed shatter like that?\" John asked in confusion. \"Crystal Alyssium gets stronger when we reshape it.\"\n\n\"Like I said, this isn't the same thing,\" Dana replied, pocketing samples of the metal for later study. \"I added Etherium crystals to the mix for my ultimate material, which makes it tougher every time you psychically reshape the crystalline lattice. As Helene just proved, Progenitor metal obviously responds to psychic manipulation, but it's probably not designed to be reshaped.\"\n\n\"So Progenitor metal is just forged once, then done?\" he asked, looking at the battered floor.\n\n\"In a Soul Forge...\" Alyssa said in a hushed voice, her eyes widening as she stared at the black deck plates.\n\n\"Yeah... that's right,\" Dana agreed, nodding as she mulled it over. \"We know these Progenitors don't give much of a shit about their thralls, so I can't see them standing around shaping metal over and over again to give their women the best gear possible.\"\n\nJohn frowned and shook his head. \"I can't see an asshole like Larn'kelnar doing that even once. How much metal do they need to create a dreadnought? What about building the thrall fleets? According to Calara, they've got thousands of ships.\"\n\nThe redhead frowned as she nodded her agreement. \"You're right... they'd need fucktons of the stuff.\"\n\nAlyssa started to back away, staring at the floor in horror. She bumped into the wall and her hand brushed against the black metal, making her yelp as she yanked her fingers back, reacting as if she'd been burned. \n\nStartled by her cry, John looked up and saw Alyssa's dreadful look of revulsion. \"Alyssa! What's wrong?\"\n\n\"I've got to get out...\" she muttered, backing out of the room with wild eyes. \n\n\"Wait!\" he called after her as she stumbled into the corridor beyond. \n\n\"I've got to get out of here!\" she gasped, running for the elevator and hammering at the rune beside the door.\n\nThe elevator took a few seconds to respond, a few seconds too long for the horrified girl. \n\n\"Let me out!\" she screamed, her eyes blazing with an incandescent white light. \n\n\"What the fuck?!\" Dana cried out in alarm, shocked by her friend's panicked reaction.\n\nJohn swept aside the jagged fragments between them and sprang after her. \"Alyssa!\"\n\nThe scarlet lighting flickered as glowing streams of psychic energy whistled around Alyssa's arms, howling in a terrifying vortex of eldritch power that gathered at her hands. \n\n\"LET ME OUT!\" she thundered, her tortured cry reverberating down the corridor.\n\nAlyssa's piercing scream was drowned out by a deep bass boom, as she unleashed the vast amounts of pent-up energy she'd gathered in the throbbing orb surrounding her clenched fists. The dazzling blast slammed into the wall, blistering the black metal, which bubbled and melted under her onslaught.\n\n*Master, she's draining me!* Jade called out in warning.\n\nEdraele's shocked voice echoed through his mind a moment later. *She's taking everything, John!*\n\nHe winced against the blinding glare and stared in astonishment as she scorched her way through the wall, the blast like a supernova that incinerated everything in its path. Her eldritch beam vaporised the superstructure, then hit the shuttle's armour plating, buckling the black surface until it exploded outwards. An instant later, the blistering column of energy winked out, leaving glowing motes hanging in the air. With a strangled cry, Alyssa crouched down and kicked off the deck, launching herself through the glowing-edged tunnel she'd just bored through the hull. \n\n\"Shit!\" John cursed, looking up through the melted hole and seeing no sign of Alyssa.\n\nHe lurched into the waiting elevator and hit the rune to descend. As the serrated doors slid shut, he saw Dana, Helene, and the twins standing frozen in the bedroom, all four staring at him in shock. Waiting to descend to the lower decks seemed to take an eternity, even though it only took a matter of seconds, and John ground his teeth in frustration at not being able to follow Alyssa through the hull. When the door finally opened, he bolted through to the corridor outside, then out of the shuttle via the airlock. \n\nWhirling around, he saw no sign of the distraught teenager. *Alyssa?! Where are you?*\n\nShe didn't reply, but he could feel her anguish over their bond. He spotted movement out of the corner of his eye; the reinforced doors leading to the Secondary Hangar sliding closed. Activating his psychic speed, he barrelled across the huge room and dived through the closing doors, making it with seconds to spare. That was when he saw her, slumped under the protective shadow of the Raptor's white wing.\n\nRunning to Alyssa's side, he dropped to his knees and wrapped his arms around her protectively. \"You're safe now, honey... I'm here.\"\n\nShe sobbed against his chest, shaking like a leaf in his embrace. John held her close, stroking her hair and murmuring soothing words in her ear until she eventually calmed. When her trembling ceased and Alyssa seemed to have recovered, he leaned to the side so he could see her face. Her sickened expression hadn't changed, the look in her eyes still one of horrified revulsion. \n\n\"I had to get out of there...\" she replied in a sepulchral whisper. \"It's like a tomb... haunted by their last moments of suffering...\" \n\n\"You saw more psychic echoes?\" he asked, wondering why she reacted that strongly, having been in the bedroom before.\n\nAlyssa shook her head. \"The soul forge. I know what it is... what it does.\"\n\nShe told him... and his expression matched hers; a tortured mask of horror and disbelief. But only for a moment. Then the anger built, fuelled by his hatred, burning away everything but the primal need to obliterate these monsters from the galaxy.\n\n***\n\n\"You're absolutely sure?\" Calara asked, her voice quavering as she stared across the briefing room table at Alyssa.\n\nThe blonde nodded, her expression grim. \"I know I'm right.\"\n\n\"My god...\" the Latina muttered, shaking her head in denial.\n\n\"The first time I touched the black metal, I could feel how tainted it was,\" Alyssa said quietly, her voice no more than a haunted whisper. \"The last agonising moments of thousands of dead thralls are seeped into every inch of it.\"\n\n\"Thousands sacrificed... per ship?\" Calara asked, the look of horror in her eyes matching those of all the girls seated around the table.\n\nThe blonde nodded, her expression bleak. \"The black metal responds to psychic energy and we all know how Progenitors get access to that. As John said earlier, an asshole like Larn'kelnar was never going to stand around and personally build fleets for his thralls.\"\n\nJohn was standing by the window, staring out into space as he listened to their discussion. \"Progenitors need a steady supply of new ships for their campaigns, but they'll be actively leading those wars. There's no chance that any of them will stay on their Throne Worlds just to keep a Soul Forge running.\"\n\n\"Shit... the clue's in the fucking name,\" Dana muttered, looking queasy. \"I just can't even imagine someone doing something so fucked-up. Sacrificing millions of thralls just to make gear? Those Progenitors are a bunch of sick bastards!\"\n\n\"What exactly are you sensing, Alyssa?\" Tashana asked, looking at the blonde. \"Is it psychic echoes from when the thralls were killed, or... their actual souls?\"\n\nAlyssa blanched at that, looking even more disturbed. \"I... I don't know.\"\n\nHelene looked at John in alarm. \"There are tormented spirits inside that spaceship?!\"\n\n\"We're not sure, Helene.\" Equally unsettled at the thought, he glanced at Alyssa. \"Is there any chance there's a consciousness trapped there? Or thousands of them?\"\n\nShe hesitated, then shook her head. \"Whenever I touch the black metal I feel a horrible sense of dread... like something really awful happened. I've never been aware of any kind of... presence behind it though.\"\n\n\"So what happens to the shuttle now?\" Sakura asked, her voice sombre. \"Are we going to activate the autopilot and send it into the nearest sun?\" \n\n\"I can't set foot in it again,\" Alyssa said adamantly, shaking her head. \"Not now I know how it was built...\"\n\nJohn stood beside her chair and placed a comforting hand on her shoulder. \"Nobody's asking you to, honey.\" He glanced at the Asian girl. \"Why do you ask, Sakura? Did you have something in mind?\"\n\n\"It's a useful ship; is there any chance we can... exorcise it?\" the Asian girl tentatively suggested.\n\nIrillith raised an eyebrow. \"Surely you're not proposing a repeat performance?\"\n\n\"No... but Helene broke the bed by accident,\" Sakura said, turning to study the Aquatic girl. \"What if she tried to deliberately affect the metal?\"\n\n\"The psychic echoes might be gone, but the black metal was shattered in the process,\" John reminded her with a frown. \"I'm not sure Helene can get rid of the psychic echoes without wrecking the shuttle.\"\n\n\"It's still worth testing,\" Sakura said, looking at the teal-hued girl speculatively. \"That's a handy talent to have...\"\n\nJohn shook his head. \"I'm trying to keep Helene out of combat, remember?\"\n\n\"We don't need Helene to bust up thrall ships; Alyssa already blasted a big hole in the roof,\" Dana said, looking at her friend in admiration. \"Maybe we just need to strap you to the front of the Invictus next time we go up against another Progenitor?\"\n\n\"I know you're only joking, but I tapped a huge amount of power to melt through the hull,\" Alyssa admitted, darting an apologetic glance at Jade. \"If I did that in a battle, we'd all be running on empty in no time.\"\n\nThe room went quiet, with everybody thinking about fighting hordes of sinister black ships all constructed the same horrifying way.\n\n\"Ah, shit...\" Dana muttered with a grimace, her blue eyes flicking to Calara with concern. \"Are we still going to go after Larn'kelnar's thrall fleets?\"\n\n\"We haven't got any choice,\" the brunette said, suddenly looking ill at the prospect. \"We can't turn down the chance to commandeer vessels with that kind of firepower, no matter how repulsive they might be.\"\n\nAlyssa shivered with revulsion, a feeling shared by everyone around the table. \n\nJohn let out a heavy sigh. \"Alright, I think we've discussed everything we can at this point. We still don't know much about the metal, or exactly what happened to it, so we're just doing a lot of speculating.\"\n\n\"I grabbed some samples,\" Dana said, patting the pouches on her belt. \"I'll take a look and see what I can find out. Don't hold your breath though... the black metal is still a big mystery and I'm not even sure of its exact composition.\"\n\n\"Anything you can find out would be useful,\" he said, giving her an encouraging smile.\n\n\"I'll go check them out now,\" the redhead agreed, rising from her seat. \n\nThe rest of the girls followed her lead, hugging John before exiting the Briefing Room. He asked Helene and the twins to wait, wanting to speak to them privately before they left.\n\n\"I'm so sorry I caused so much trouble!\" Helene suddenly blurted out when they were alone, her face stricken. \n\n\"Hey, it wasn't your fault,\" John said soothingly, pulling her into a supportive embrace. \"You were just trying to do something nice for us.\"\n\n\"But Alyssa got so upset...\" she murmured, clinging to him for reassurance.\n\nHe joined the twins in stroking her back. \"That's been brewing for months, honey. Ever since we boarded the Legacy, Alyssa's been getting bad vibes from the black metal.\" \n\nThe door slid open again and Alyssa re-entered the Briefing Room, gliding over to join the hug. \"You're such a sweetheart, Helene. Thanks for worrying about me, but I'll be alright.\" \n\n\"I've never seen you lose control like that before,\" the aquatic girl said, looking at her wide-eyed.\n\n\"It was a horrible shock, finally finding out why Progenitor ships have freaked me out so much,\" the blonde admitted. \"At least now we know and we can actually try to do something about it.\"\n\nHelene nibbled nervously at her lip. \"If the ship is haunted, I'd like to help you put those ghosts to rest.\"\n\n\"I appreciate the offer, but until we know exactly what we're dealing with, there's no point worrying yourself about it,\" John said, kissing her on the cheek. He looked into her eyes and continued, \"Are you feeling better now?\"\n\nShe nodded and gave him an embarrassed smile. \"Yes, I'm okay...\"\n\n\"Come here, gorgeous,\" Alyssa said, opening her arms for a proper hug.\n\nWhen Helene went to the blonde, John turned his attention to the twins. \"What happened between the three of us got overshadowed by the bed exploding... but I haven't forgotten.\"\n\n\"We felt it too,\" Irillith murmured, stepping into his arms. \n\nTashana nodded, joining her sister in his embrace. \"Your attitude towards the Maliri... and to us, has changed. We could really sense the difference.\"\n\n*You've finally embraced your heritage, John,* Edraele said quietly. *It was a huge step for you.*\n\n\"Claiming the Maliri was a privilege, not a burden,\" John said, kissing each of the sisters in turn. \"The reality is that we have a special connection... and refusing to accept it was doing all of you a disservice. Our fates are tied together and the Maliri need me to lead them, just as I need their help to fight in this war. We stand no chance against the Progenitors without each other.\"\n\nTashana gave him an adoring smile. \"You're going to be a magnificent leader, Baen'thelas.\"\n\n\"I'll do my best,\" he said, a hint of worry flashing across his features.",
        "\"What's wrong?\" Irillith asked, noticing the flicker of emotion.\n\nHe held them close and quietly replied, \"Have you heard the Terran expression about absolute power corrupting absolutely?\"\n\nThe twins nodded, listening intently.\n\n\"Well, I'm accepting absolute control over the Maliri and that's a lot of temptation. If it was up to Edraele, she'd have me bedding an endless supply of very eager, very beautiful, and very fertile Maliri girls,\" he murmured, releasing Tashana so he could run his hand over her curved stomach. \"You look stunning like this... and I can't deny how much I'd love to give in to temptation, but I don't want to ever feel like I'm taking advantage of the Maliri. Can you two help keep me grounded?\"\n\nTashana trembled at his gentle caress and let out a soft moan. \"If you're worried any of us would ever have second thoughts, you're very much mistaken...\"\n\nIrillith smiled indulgently at her sister, before focusing on John. \"It might have been wiser to ask Shan when she didn't have a tummy full of your cum.\"\n\n\"True,\" he conceded, caressing Tashana's swollen belly. \"But she reminded me just how beautiful the two of you are going to look when you're pregnant.\"\n\n\"I know how concerned you are about being there for all of your children... and it seemed strange at first, but now I think it's a wonderful idea,\" Irillith said with a poignant smile. \"I wish we could've seen our father every day.\"\n\nTashana nodded, her eyes welling up. \"I hadn't really thought about it like that before... but I can see why it's so important to you. We loved him so much, just as our children are going to love you.\"\n\n\"Thank you,\" he said, hugging them both fiercely. \"I'm glad you understand.\" \n\nThere was an awkward silence in his mind, then Edraele asked, *John... I'm so sorry if I've been making you feel uncomfortable. Do you want me to stop trying to tempt you?*\n\n*No, honey,* he replied with an affectionate smile. *You know how much the idea really turns me on... I just don't want to start abusing my position.*\n\nShe laughed at his confession, her delight quite evident. *Oh, that is a relief! I shall act accordingly, my Lord...*\n\nHe patted the twins on the back and said, \"Why don't you two take the evening off? You didn't get a chance to relax and recover with the bed shattering.\"\n\nIrillith stretched and glanced at Tashana, the two sisters conducting a telepathic conversation. \n\n\"What time are you coming to bed?\" Irillith asked, trailing her fingers across his chest.\n\n\"I won't be too late. We'll be picking up Jack and Mateo in a couple of hours, then I'll get them settled in and have an early night. I need to get my body clock back to regular hours after the battle with the Kirrix upended everything.\"\n\nTashana glanced down at her swollen stomach. \"Do I need to do any preparations so I can learn how to Spirit Walk?\"\n\nJohn shook his head, brushing the backs of his fingers across her curves. \"Just rest... I'll take care of everything.\"\n\nShe bit her lip, then gave him a tender kiss. \"I love trusting myself to you completely. It makes me feel so safe and protected.\"\n\nIrillith darted a wry smile at her sister. \"When you're supercharged like this, there's not much in the galaxy that could actually stop you.\"\n\n\"That's not really what I meant... but that feels good too,\" Tashana admitted, her violet eyes sparkling as she looked at John.\n\n\"You're a very powerful woman,\" he said, savouring her newfound confidence. \"And you're only going to get stronger...\"\n\n\"Don't stay up too late,\" she requested, giving him an adoring look. \"I want to fall asleep in your arms tonight.\"\n\n\"I'll be there,\" he promised, kissing her goodbye.\n\nAlyssa clasped Helene's hand, then beckoned the twins with the other. \"Come on ladies, time for bed. I need a nice cuddle with you three.\"\n\nHelene glanced at John with regret. \"I know I asked to spend the rest of the day with you, but I am feeling quite tired. Would you mind if I went with Alyssa?\" \n\n\"Of course not, honey. I'll assist Dana with any shaping she needs until we rendezvous with the fleet.\" \n\nAlyssa froze and blurted out, \"I already offered to do that for her. I think you should have a chat with Calara before we meet her family... let me go and help Sparks.\"\n\nJohn shooed her out the door. \"Nope. After the amount of energy you burned through this afternoon, you must be dead on your feet. Bed... now.\"\n\nShe paused, then lowered her eyes submissively. \"Yes, John. Whatever you say.\"\n\nHe gave her a look filled with suspicion. \"That should be music to my ears, but now I'm worried you're up to something.\"\n\n\"Just following your orders like a good obedient matriarch, my Lord,\" Alyssa said with a grin, her blue eyes alight with mischief.\n\nJohn playfully swatted her on the rump as she flounced past, making Helene and the twins laugh as they followed her out of the room. Leylira and Marika were there on the Bridge, the two catgirls engrossed in holo-simulations, but they looked up curiously when they heard the laughter. John smiled at the Nymphs as he accompanied the girls to the grav-tube and they waved back before returning to their training.\n\n*Are you sure you're feeling alright after what happened in the shuttle?* John asked the blonde as they descended in the red anti-gravity field.\n\nShe turned to meet his look of concern. *I'm not going to lie; it was really horrible finding out like that and I have no intention of stepping foot on that ship again... but I'll be okay. Nothing snuggling up with Helene and the twins won't fix.*\n\n*Don't stay up chatting,* he cautioned her. *You already strained yourself after all that rune-shaping this afternoon. You must have pushed yourself to the limit blasting through the hull so soon afterwards and you need to rest.*\n\n*You're right, I'm exhausted,* she admitted, stifling a yawn. *Don't forget to speak to Calara, she's on the Combat Bridge.*\n\n*Is she upset?* John asked, giving her a parting kiss.\n\nAlyssa stepped out onto Deck Three with her three companions. *No... she's just got a few things on her mind. Calara's with Neysa at the moment and distracted by teaching gunnery skills, but you should talk to her before she sees her father.*\n\n*Will do,* he agreed, waving the quartet goodbye as he descended out of sight.\n\nHe was tempted to head straight to the Combat Bridge to find out what was troubling Calara, but decided to trust in Alyssa's judgement and see the brunette later. John set an alarm on his watch for 8:30 pm, allowing himself half-an-hour to speak with Calara before their rendezvous with the Terran Federation fleet. Leaving the grav-tube on Deck Seven, he strode along the corridor to the Engineering Bay, where he found Dana stooped over her workbench.\n\n\"Hey, Sparks,\" he called out when he entered the room, not wanting to catch her by surprise.\n\nThe redhead looked up from her work and rewarded his gallantry with a warm smile. \"Hey yourself.\"\n\n\"I thought Rachel would be here with you. Is she in Medical?\" he asked, glancing around but seeing no sign of the tawny-haired doctor.\n\n\"She said she was synthesising cures for those diseases and all the stuff she needs is there,\" Dana explained. \"Did you want to talk to her about something?\" \n\n\"No, just making conversation,\" he replied as he crossed the workshop to join her. \"I sent Alyssa off to bed to get some rest, so I'm here to help you with any shaping you need.\"\n\nDana looked shifty as she reached for her holo-viewer. \"Err, it's okay. I don't mind waiting for Alyssa...\"\n\nHe gave her a pointed look. \"I know you two are up to something, but after the evening I've just had, I really don't care what it is. Tell me what you need and I'll make it.\"\n\nShe gave him a guilty smile. \"Sorry. It's nothing bad, I promise.\"\n\nJohn shrugged and patted her on the arm. \"I know. You think I won't approve, so you were waiting to surprise me when it's finished, hoping I'll be so impressed I won't object.\"\n\nLooking startled, she nodded. \"Err... yeah.\"\n\n\"We better finish it then, so you can impress me,\" he said with a wry grin.\n\nDana giggled and kissed him on the cheek. \"Okay!\" \n\nShe picked up the holo-viewer and separated out the list of components, her nimble fingers flying over the interface, as she concealed the end result of the project. After nodding with satisfaction, she handed him the tablet. \n\n\"Here you go... I need one of everything on that list. If you want to be super-helpful, there's a second section; I need a dozen copies of all those parts too.\"\n\nJohn glanced over the various shapes she'd requested, taking note of the precise measurements. \"I'll get right on it,\" he murmured, walking over to the ore crates while studying the schematics. \"How many times do you need this shaped?\"\n\nDana leaned back against her workbench and watched him gathering materials. \"As tough as you can make it without straining yourself.\"\n\n\"How about twenty-shaped?\" he muttered, concentrating on the psychic manipulation. \"Is that okay?\" \n\n\"Perfect,\" she said quietly, studying him with a pensive frown.\n\nJohn fell into the soothing repetition of shaping Crystal Alyssium over and over again, strengthening the crystal lattice every time he forced it into a new shape. After reaching the nineteenth iteration, he propped the holo-viewer on a nearby ore crate and started working his way down the list, creating the required parts. One of the curved pieces made him pause, especially when he reached the next item on the list. He floated the two matching parts together in the air and formed a perky metallic bust, the curves suggestive and pleasing to the eye without being outright pornographic.\n\n\"Sparks, I seem to recall us having a conversation about this...\" he said, raising an eyebrow as he studied the synthetic cleavage.\n\n\"Yep. I said I'd have a chat with Little One and sort out the details for her new chassis. We did and she liked my design...\" the redhead said with a playful ring to her voice.\n\n\"Of course she did,\" John said with a wry chuckle, shaking his head in resignation. \"I take it the second set of parts makes the rest of the cleaning bots equally well endowed?\"\n\nSomeone hugged him from behind, pressing an even larger pair of wonderfully soft breasts into his back. \"You can't really blame them for wanting a set like that, they do look quite lovely.\" \n\n\"Oh, hey Rachel,\" he said in surprise, recognising her charming, well-spoken voice. He glanced over his shoulder to look at the brunette. \"I didn't hear you come in.\"\n\n\"Hello, John,\" she said, standing on tiptoe to greet him with a tender kiss. \"You were so engrossed in your work, I thought I'd sneak up on you... but you don't jump out of your skin like Sparks does.\"\n\n\"That's because it was a very pleasant surprise,\" he said, turning to face her and placing his hands on her hips. \"I hear you've been working on creating samples of your cures.\" \n\nShe nodded, her sharp grey eyes studying him intently. \"I'd nearly finished when Alyssa contacted me. She said that Dana was worried about you and asking for my professional assistance. Apparently, the way you saw through their cunning subterfuge 'freaked her out', so I'm here to assess why you're being more perceptive than usual.\"\n\n\"Hey!\" Dana protested from across the workshop. \"That's not what I said!\"\n\nJohn grinned and ignored her objection. \"More perceptive than usual? I'm deeply offended, Sparks.\"\n\nDana pouted at her girlfriend. \"Just wait... I'll get you back!\"\n\nRachel nodded but kept her focus on John. \"It must have been awful to see Alyssa react that badly in the shuttle; is that what's troubling you?\" she asked, her voice gentle and sympathetic. \"Or was it discovering the true nature of the black metal that you're finding unsettling?\"\n\nHe looked at Rachel in surprise when she abruptly shifted the conversation topic, then turned to frown at Dana. The redhead had her back to him now and was intently focused on her workbench, finding the device there incredibly fascinating. \n\nGrasping his hand, Rachel tugged him towards the door. \"Let's go sit down in Medical and have a chat. There's a distressing lack of chairs in the Engineering Bay...\"\n\n\"Don't you need a therapist's couch?\" he asked, smiling as he followed her across the workshop.\n\n\"We could make do with one of the hospital beds?\" she suggested, a twinkle in her eyes.\n\n\"Sounds good, Doctor,\" he agreed, playing along.\n\nThey left Engineering and walked the short distance to Medical, where Rachel opened the door and ushered him inside. \n\nInstead of sitting in the chairs, she guided him to one of the beds and patted the pristine white sheet. \"Okay, hop on.\"\n\nHe smiled, thinking she was just joking, but she shook her head and patted the bed more insistently.\n\nToo weary to object, John lay down on the bed and gave the brunette a pained smile. \"Please don't ask me to tell you about my mother...\"\n\nRachel paused, her eyes flashing with a flicker of emotion. \"Don't worry, I won't ask you about Jessica.\"\n\n\"What is it?\" he asked, looking at her curiously.\n\nThe brunette leaned down and gave him a gentle kiss, her lips soft and warm as they pressed against his. John relaxed and cradled her in his arms, his hand lightly cupping her head as he returned the kiss. It was a wonderfully languid and unhurried moment, the kind of comfortable intimacy shared between two lovers with a very long history together.\n\nJohn let out a contented sigh when she ended the kiss. \"I like your approach to therapy, Doctor.\"\n\nRachel sat on the bed beside him and stroked his hair. \"I enjoyed it too,\" she said fondly. \"Very much.\"\n\n\"You were right earlier... about Alyssa and the black metal,\" John admitted, looking up at her. He could sense that his blonde matriarch had finally fallen asleep, so he felt free to be more candid than usual. \"I've never seen Alyssa so disturbed before... whatever she can feel from the black metal must be truly horrific.\"\n\n\"I saw her react in a similar way to the psychic echoes on the Legacy,\" Rachel confided, her brow furrowing at the distressing memory. \"She's normally so confident and composed... it was shocking to see her fall apart like that.\"\n\n\"Thank god we didn't keep the dreadnought,\" John muttered, shaking his head at the thought. \"Imagine how she would've reacted if she'd been trapped inside that monstrosity.\"\n\nRachel gazed at him in silence for a long moment, indecision flickering in that penetrating grey stare. \"Yes... it was fortunate you gave that ship to your father. He is accustomed to those vessels.\"\n\nHe nodded, his thoughts automatically turning to Rahn'hagon. Like pieces of a dreadful puzzle, the disturbing revelations about the black metal interlocked with John's knowledge of his father's past and the snippets of conversation they'd had together. Rahn'hagon was very familiar with Progenitor dreadnoughts, having constructed his own, along with a vast fleet of thrall ships for the Randarai Empire... sacrificing untold millions of thralls in the gruesome, agonising process. Recognising that simple fact was horrifying enough, but John's eyes grew wide as he recalled Rahn'hagon's expectation that he would follow in his father's footsteps.\n\n\"He wanted me to do that to the Maliri!\" he blurted out in shocked disbelief.\n\nWatching the emotions play out over his features, Rachel looked at John with sympathy as he made all the connections and his face twisted with revulsion. \"I'm sorry, John.\"\n\n\"You already knew!\" he exclaimed incredulously, then sagged on the bed. \"Of course you did... you must have figured it out straight away.\"\n\nRachel nodded, her fingers lightly brushing through his hair. \"You were too upset earlier to talk about it. I normally would have let you make the connection yourself, then discussed it with you at the appropriate time... but we have guests joining us shortly.\"\n\n\"This wasn't something in my father's distant past,\" John muttered, looking appalled. \"He expected me to brutally murder millions of Maliri... and actually had the gall to be furious that I hadn't!\"\n\nThe brunette didn't reply, she just caressed him and listened.\n\n\"I actually liked him!\" John exclaimed, his lip curling with disgust. \"I thought he'd changed... that maybe the years of solitude had made him regret what he'd done... but he's still the cruel monster he's always been!\" \n\nAfter a moment's hesitation, Rachel said quietly, \"Actually... I think your instincts about your father were correct.\" \n\nJohn looked up at her incredulously. \"You can't be serious! The man's a murderous psychopath!\"\n\n\"Your father is not a normal man, he's a Progenitor, who was forced to wage genocidal wars for millennia,\" she clarified, her grey eyes watching him intently. \"Rahn'hagon has lived for over twenty-thousand years... and his perspective is very different from our own.\"\n\n\"How can you defend him after everything he's done?\" John asked, his eyes blazing with anger. \"I should have killed that sick bastard when I had the chance!\"\n\n\"I'm not defending him, just telling you what you already know,\" she said, her expression neutral. \"Rahn'hagon has changed since he broke free from Xar'aziuth's control... but his primary motivation is now to stop Xar'aziuth at any cost. When you're facing a god-like monstrosity that's overseen the deaths of trillions... perhaps the deaths of millions is a sacrifice he's prepared to make.\"\n\n\"Well I'm not!\" John snarled, jerking upright in the bed. \"What kind of sadistic freak feeds women who love him into some nightmare machine that sucks out their soul?! Progenitors are a fucking blight on the galaxy! I'm going to destroy every last one of those vicious bastards!\"\n\nRachel looked directly into his eyes, her demeanour calm and unruffled in the face of his fury. \"And are you still worried that you might turn out to be like other Progenitors?\"\n\n\"No, of course I'm not!\" he said indignantly. He paused and looked at her in surprise, then continued in a quiet murmur, \"Don't be ridiculous...\"\n\n\"I try not to be,\" she said with a gentle smile.\n\nJohn wrapped her up in a fierce hug, squeezing her tight. \"Thank you.\"\n\nRachel returned his embrace, revelling in the warm feelings it invoked.\n\n\"You're amazing,\" he whispered in her ear. \"How do you turn something so horrific into an epiphany that makes me feel better about myself?\"\n\nShe didn't reply right away, but when she did, there was a hint of trepidation to her voice. \"Please don't ask me that...\"\n\nPulling back, he looked at her with concern. \"Why not? What's wrong?\"\n\nThe brunette had trouble meeting his gaze. \"Because I'm worried you'll think I'm manipulating you. I know you so well, I can usually predict how you're going to react to points I make. By making the association between your father and a Progenitor dreadnought, I knew you'd make the connection with the black metal. You naturally responded with horror and outrage, which I was able to deflect into the realisation that you could never be like the other Progenitors... addressing a long-standing worry of yours.\" \n\n\"Intelligence... the double-edged sword,\" he said with sympathy, remembering the phrase she'd used in a prior conversation. \"Did you predict that I'd react to your confession with respect and admiration, or were you worried I'd be horrified?\"\n\n\"Unfortunately, I'm not infallible,\" she replied, with a cautious smile. \"But whatever the outcome, I wanted you to know that I'll always act with your best interests at heart. I'll never try to manipulate you into something you don't want to do... only try to look after your emotional wellbeing.\"\n\n\"You don't need to try to justify yourself, honey,\" he said, stroking her back. \"I'd never expect anything less than the purest of motives from the Angel of Terra. I'm incredibly lucky to have such an intelligent and caring girl like you on my side.\"\n\nRachel sighed with relief and snuggled into his embrace, the tension gone from her shoulders. \"I never thought I'd meet someone like you. I always thought I'd have to hide my intellect in case I intimidated the man I was with... but you're not like that at all. It's so wonderfully liberating being with you and you keep proving yourself time after time.\"",
        "John kissed her cheek. \"Intelligence... the potent aphrodisiac.\" \n\nShe laughed, her shoulders shaking with amusement. \"Really?\"\n\n\"Of course! You and Dana are prime breeding stock... I'm expecting incredibly gifted children from the pair of you,\" he said, his tone light-hearted, but his words sincere.\n\nThe brunette moaned as she pressed herself against him. \"Oh, don't turn me on like that... we haven't got time.\"\n\n\"How about tonight?\" he asked, brushing his thumb across her cheek. \"With Dana, or on your own... the choice is yours, my lovely beautiful genius.\"\n\n\"Dana would never forgive me if I didn't include her...\" she murmured, her grey eyes hooded with lust.\n\n\"I spent an entire day in bed with her just last week,\" he said with a grin. \"I love that flame-haired vixen, but I think it'll do Dana some good to watch her girlfriend getting straightened out for a change.\"\n\n\"I don't need any more convincing,\" Rachel said with a gleeful smile of anticipation. \"Tonight then...\"\n\n\"I'll look forward to it.\"\n\nJohn slid off the bed and walked hand-in-hand with the overjoyed brunette back to the Engineering Bay.\n\nDana looked up when they entered the Workshop, her curious gaze brightening when she saw their happy expressions. \"You two had a good chat then?\"\n\n\"Mmm... it was wonderful!\" Rachel gushed, kissing John on the cheek.\n\n\"Hey, wait a minute...\" the redhead said, her eyes narrowing with suspicion as she studied her girlfriend. \"What are you so giddy about? I thought you were supposed to be focusing on perking him up?\"\n\n\"She really did, Sparks,\" John replied, putting his arm around the brunette. \"So I'm planning on rewarding her tonight to show how grateful I am.\"\n\n\"John gave me the choice of being alone with him... or have a threesome,\" Rachel purred, flashing a suggestive smile at her lover.\n\n\"Oh, fuck yeah!\" Dana exclaimed, her face lighting up with glee.\n\n\"The thought of being with the two of you was such a turn on,\" Rachel murmured, running her fingers over John's chest. She turned to grin at the redhead. \"But then I remembered you hogged him all to yourself for 24 hours!\"\n\nDana gaped at her incredulously. \"Hey!\"\n\nThe brunette shrugged. \"He already knows he owns your sexy ass, so tonight it's my turn. You can lick his quad as he dominates me if you like?\"\n\n\"You're being mean,\" Dana pouted. \n\n\"Uh uh, no pouting,\" Rachel teased her. \"Otherwise you can't eat me out afterwards...\"\n\nDana's shoulders slumped in defeat and she plastered a beaming smile on her face. \"I'm so happy for you!\"\n\n\"That's the spirit, babes,\" Rachel said with a laugh, walking over to give her girlfriend a hug.\n\nJohn took a detour to pick up the holo-viewer on his way to join them. \"Sorry Sparks... Rachel needed some TLC.\"\n\n\"Nah, it's okay... I deserve it,\" Dana said with a rueful smile. \"I should have included her when we had our day together, but I got greedy.\"\n\nHe put the tablet down on her workbench, then wrapped his arms around both girls. \"Actually, I'm glad we got that time alone, just like I'm looking forward to being with Rachel. Threesomes with the two of you are amazing, but the dynamic is very different to being with either of you on your own.\"\n\n\"Yeah, I know,\" Dana admitted, her smile softening as she looked at John. \"When the three of us are in bed, you like seeing how much me and Rach love each other... and being included in that. When it's just us two, you make me think about our future together, being your loving wife and having your kids... and I need both.\"\n\n\"I couldn't agree more,\" Rachel murmured, kissing her girlfriend affectionately on the cheek. \n\nDana gave John an impish grin, then returned the brunette's kiss, the two gorgeous girls quickly getting into the passionate liplock. \n\n\"Now who's being mean,\" John groaned, staring in fascination as they French-kissed and pressed their nubile bodies together.\n\nWhen they parted from each other, Rachel smiled at her fianc\u00e9, her grey eyes sparkling. \"John, I think Dana's learned an important lesson about sharing... and we did have that amazing biker date together on Arcadia. Is it alright if I change my mind on the threesome?\"\n\n\"I'm sure I can accommodate you there,\" he replied with a chuckle. \n\n\"Awesome!\" Dana gushed, her beaming grin quite genuine this time. \"Thanks, babes!\"\n\nJohn released the pair and reached for the holo-viewer, then spotted the device his Chief Engineer had been working on. \"Is there a problem with the Psi-detector, Sparks?\"\n\nDana shook her head and flipped the panel shut on the scanner's side. \"Nah, it's fine. I just made some tweaks to increase the sensitivity, like adding an eternity crystal to the scanning modulator.\"\n\n\"I assume this has something to do with the tests on the black metal?\" he asked, holding his hand out towards the block of Crystal Alyssium he was using earlier and starting work on the second list of parts.\n\nShe nodded, picking up the stylised quasi-futuristic ray gun. \"I studied those samples I picked up on the shuttle, but I haven't been able to find out anything new about the composition of the alloy. Helene really mangled the atomic structure when she did her emotion sharing bit, so I figured if psychic powers can fuck that metal up, it might be worth taking a look with the Psi-detector.\"\n\nRachel studied the three floating platforms that hovered above the workbench, a different colour sample of the metal on each one. The first was all black, the second streaked with white, and the last as pristine as driven snow.\n\nThe brunette hesitated for a moment, then picked up the onyx fragment and rotated it with her fingertips. \"It's so strange... I feel nothing when I touch Progenitor metal, but it has such an adverse effect on Alyssa. Do you think it's because she's so gifted at telepathy?\"\n\nDana considered that for a moment. \"It's a good theory. The rest of us can't do it, except for chatting with Alyssa... but that's all to do with our bond.\"\n\n\"That's not entirely true,\" John corrected her. \"The twins can hear each other's thoughts... and the Nymphs are all telepathic.\"\n\n*Actually, my ability to read minds is confined solely to you, Master,* Jade interjected. *I've also never been sensitive to the psychic echoes that Alyssa sees so frequently.*\n\n*Ah okay. Thanks for the clarification, honey.*\n\nRachel and Dana were both looking at John now, having noticed the distracted look in his eyes.\n\n\"Jade says her telepathy only works on me and she can't see psychic echoes,\" he explained, finding it strange having to repeat a conversation that Alyssa would normally share with the girls. \n\nThe tawny-haired girl put the metal back on the platform. \"The twins have never shown any sign of distress in the metal's proximity either. Perhaps they simply lack the telepathic strength?\"\n\nDana shrugged. \"Well, we're not going to figure it out by guessing. Let's take a look with the Psi-detector!\"\n\nShe pointed the device at the piece of black Progenitor metal and squinted at the viewer. \"Nothing so far... let me crank up the sensitivity.\"\n\nTapping a new icon on the interface, she stared intently at the display, looking for any changes. \n\n\"Still nothing?\" John asked the frustrated redhead. When Dana shook her head, he gave her a comforting pat on the shoulder. \"Oh well, it was a nice idea.\"\n\n\"Holy shit!\" Dana suddenly blurted out, taking an involuntary step back from the metal.\n\nJohn and Rachel hurried to her side to take a look for themselves. Dana was still pointing the Psi-detector at the chunk of black metal, keeping it centred squarely in the holo-display. With the sensitivity of the device greatly enhanced, they could now see a disturbing shadowy aura around the jagged object, even the sight of it sending cold shivers running down their spines.\n\nRachel's eyes widened in fright as she stared at her fingertips. \"I just touched that!\"\n\n\"Hold still!\" Dana said sharply, swinging the Psi-detector around and pointing it at the brunette's hand.\n\nThere was a blinding flash of grey light and a piercing crack pierced the air.\n\n\"Fuck!\" the redhead cursed, dropping the Psi-detector as she rubbed at her eyes.\n\nJohn had been looking at the display as well and suppressed an instinctive surge of panic as his vision disappeared in a grey blur. He drew on his energy reserves to heal his eyesight, shapes and colours rapidly coalescing before him as his retinas recovered. The bewildering kaleidoscope reverted to the reassuring view of the girls standing in front of him and he sighed with relief.\n\n\"Just a few more seconds,\" Rachel murmured, her hand on Dana's temple as she swathed the redhead in a healing aura.\n\nDana blinked a couple of times as her eyesight was restored, then crouched to pick up the Psi-detector. \"I'm so sorry about that,\" she said, flushing with embarrassment. \n\n\"What the hell happened?\" John asked, giving her back a reassuring rub.\n\n\"Apparently Rachel's so charged up with psychic power, she overloaded the detector,\" she replied, flipping open the access panel on the side of the ray gun. \"Yeah... that blew out the Eternity Crystal.\"\n\nShe held out her hand and tipped over the Psi-detector, letting tiny crystal shards tinkle down onto her flattened palm. A faint but unpleasant ozone smell also filled the air.\n\n\"Ah, shit,\" Dana cursed, frowning in irritation. \"Looks like the modulator got burned out too.\"\n\n\"Can you fix it?\" John asked, still curious to see what else they could discover.\n\nThe redhead nodded. \"Yeah, of course, but I'll need to run the Mass Fabricators and make all the parts I need to replace the scanning modulator. Give me half-an-hour?\"\n\nHe shook his head. \"No, not like that. Can you fix it?\"\n\nShe caught the added emphasis this time, realising what he was asking her. \"Um... I'm not sure.\"\n\n\"You managed to repair the Invictus,\" John reminded her, before gesturing towards the Psi-detector and giving her an encouraging smile. \"Why not give it a try?\"\n\nDana closed her eyes for a moment and when she reopened them, they were glowing with an inner golden light. She peered into the fried circuits, seeing the charred mess the burnout had left behind. Pushing out with her willpower, it felt like the Psi-detector had been shoved in a fire, its body scorched and blackened... except she was looking at sophisticated electronics instead of delicate flesh. She carefully rebuilt broken circuitry, reversing the damage done to each component until she had restored the device.\n\n\"I did it!\" she exclaimed, looking at the Psi-detector in astonished glee.\n\n\"Nice work, honey,\" he said patting her on the shoulder. \"Ready to try again?\"\n\n\"One second... I just need to replace the focusing crystal!\" \n\nShe opened up a shallow tray on her workbench and plucked out a tiny Eternity Crystal no larger than a marble. Clicking it into place, she powered up the display again, then grinned triumphantly when it flickered to life.\n\n\"Okay, let me just turn the sensitivity way down and I'll take another look at your hand, Rach,\" Dana said, adjusting the settings.\n\nThe brunette waved her away. \"No, that's not necessary. I just panicked earlier and wasn't thinking rationally; we all wore suits of black metal and never suffered any side-effects. Besides, how would you be able to search for a faint black aura if the Psi-Detector shatters when you point it at me?\"\n\nDana nodded, giving John a rueful smile. \"She's right; there's no way I'll be able to see anything.\"\n\n\"It was interesting to discover that I'm charged with so much psychic energy now,\" Rachel mused, looking thoughtful. \"Could you lower the sensitivity so that it won't burn out again? I'd like to see something...\"\n\nAfter making the adjustments, Dana handed her the device. \"That should do it.\"\n\nRachel nodded, then slowly swung the ray gun around so that it was pointing towards her girlfriend. They could all see the radiant golden glow that shone over the brunette's inquisitive face, reflected from the brilliant aura swathing the perky engineer.\n\n\"That's so awesome,\" Dana said with a grin of delight. \"I'm solid gold, babes!\"\n\n\"You certainly are,\" Rachel agreed with a fond smile. She raised an eyebrow and glanced at John.\n\n\"Go ahead... satisfy your curiosity,\" he said, looking away as he knew what was coming. \"I had no aura last time we checked, but I've learned how to control my mental defences since then.\"\n\nHe closed his eyes and dropped his mental barrier, leaving his mind unshielded while Rachel scanned him. The shocked silence from the two girls spoke volumes.\n\nHe let out a melancholy sigh. \"Let me guess... my aura's black as tar, right?\"\n\n\"You're bright blue!\" Dana blurted out, wrapping her arms around his waist and hugging him tight.\n\nRachel joined their embrace and gave him a celebratory kiss on the cheek. \"See, I told you! You're nothing like the other Progenitors!\"\n\n\"Really?\" he asked in astonishment, his eyes snapping open. John grinned at the pair in delight. \"What did it look like exactly?\"\n\n\"Do you remember the Young Matriarchs blushing a lovely dark blue after you got them pregnant?\" Rachel replied with an indulgent smile. \"The colour of your aura was beautiful, just like that.\"\n\n\"Yeah, totally!\" Dana replied, nodding eagerly. \"Knocked-up Maliri blue!\"\n\nHe looked at the pair sceptically, then laughed and shook his head. \"You two almost had me going for a moment.\"\n\n\"Hold out your hand,\" Rachel insisted, her grey eyes sparkling with excitement.\n\nJohn did as she asked, then watched as a dazzling deep blue lit up the Psi-detector's holo-screen. Even on the barest minimum setting, it was hard to look at the display because the intensity was so blindingly bright. Squinting against the glare... he blinked in amazement as he realised how apt Rachel's description had been. The colour reminded him of Tsarra Perfaren's enchanting complexion, her azure skin flushed with arousal after a euphoric climax... when he'd fathered his first child with the beautiful Maliri matriarch.\n\n\"Well, I'll be damned,\" he muttered, staring at the lustrous blue in awe.\n\n\"Quite clearly you haven't been,\" Rachel said with a grin, switching off the Psi-detector and dousing the brilliant radiance.\n\n*How prophetic, my Lord,* Edraele gushed, no mistaking the joy in her voice. *I look forward to you showing me frequent reminders of that lovely colour as often as possible. I'm sure Kali will be more than delighted to help in just a few days' time...*\n\nHe swallowed at the thought of the sweet-natured Maliri beauty gazing up at him, a look of wonder in her big doe-eyes. *I can't wait, Edraele...* \n\n\"You look so relieved,\" Rachel said with sympathy, gently running her fingers through his hair. \"Were you really so certain that you'd have some ominous and forbidding psychic aura?\"\n\n\"What happened to 'plan for the worst, hope for the best'?\" Dana asked with a disapproving frown.\n\nJohn gave them a self-conscious shrug. \"I guess my sense of blind optimism has taken a few knocks recently.\"\n\n\"Well I never doubted you for a moment,\" Dana declared, her sky-blue eyes twinkling. \"You're like a super-good, good guy... I don't even know why you'd think you were a bad guy.\"\n\nRachel gave him a tender kiss on the cheek. \"It was nice to confirm what I already knew.\"\n\n\"Thanks for the vote of confidence, girls,\" he said, feeling a surge of affection for the pair.\n\nDana kissed him on the tip of the nose. \"Now... do you want us to spend the next half-hour inflating your ego, or should we check out the rest of the metal fragments?\"\n\n\"I think we'll save inflating things for tonight,\" he replied with a wry smile. \"Let's take a look at the samples.\"\n\nShe nodded eagerly, then pointed the Psi-detector at the chunk of bleached-white Progenitor metal. The device was set on minimum sensitivity, so she had to increase the scanner's reactivity to psychic auras. It took a few seconds to make the adjustments, then they all saw a faint hint of blueish-green light swathing the broken fragment.\n\n\"It's teal, just like Helene's skin tone...\" Rachel murmured, staring at the soothing pastel shade in fascination. \"I wonder why it isn't blue like her eyes? The gold from Dana's aura matches the coronas around her pupils and my grey is an exact match to my own irises.\"\n\n\"Are you sure yours isn't grey because you're a shady lady?\" the redhead teased her, playfully nudging Rachel with an elbow.\n\nThe brunette raised an eyebrow. \"Is that right, John? Did you make my aura grey because you see me as a woman of loose morals?\"\n\n\"Oh, you're definitely a bewitching seductress,\" he replied, sharing a smile with her. \"But I'm pretty sure it's linked to eye colour.\"\n\n\"That doesn't explain Helene's teal though?\" Rachel persisted, gesturing towards the glowing aura. \n\n\"Nah, it's obvious,\" Dana said with a dismissive shrug. \"He already picked blue for himself... he wanted something unique for Helene.\"\n\nJohn laughed and shook his head. \"I don't think it works quite like that, Sparks.\"\n\n\"Actually, I strongly suspect that it does,\" Rachel said, focusing her speculative gaze on him. \"Don't forget that Helene had no psychic talent whatsoever, until you gifted her with a third helix and packed her genetic code with empathic abilities. Would it have made sense to allocate blue to Helene, when Alyssa and Dana also have blue eyes?\"\n\nHe looked startled for a moment, then nodded thoughtfully. \"Yeah, you're probably right.\" Pausing for a moment, he frowned as he continued, \"But what about Alyssa's aura? Her psychic attacks and hex shields are pure-white rather than blue.\"\n\nThe brunette considered that for a moment, then smiled. \"She does have a rather uncompromising outlook towards the adversaries we've faced and the utmost confidence in the righteousness of our cause. You'd have to have a staunch belief in your own virtue to take that kind of stance... at least without being a hypocrite and I'd never accuse Alyssa of that.\"\n\n\"Yeah, but she didn't pick the colour...\" Dana reminded them, giving John a fond smile. \"Maybe it's not Alyssa who sees herself that way?\" \n\nJohn coughed and looked embarrassed. \"Perhaps we should check out the last sample...\"\n\nDana nodded and pointed the Psi-detector at the final hunk of metal, the surface of which was still predominately black, but riven through with streaks of white. Viewing the object through the scanner's holographic display, they could clearly see the teal psychic lines cutting savage gouges through the murky black aura. \n\n\"Let me just zoom this in a bit,\" Dana muttered, bringing the detector closer and activating the magnification functionality on the floating display.\n\nThe image zoomed in dramatically, focused on the fault-lines that had shattered the bed frame. Rather than a neat separation between the two colours, it looked like the darkness was recoiling from Helene's psychic intrusion, visibly cringing away from her bright presence.\n\nDana gaped at the startling sight. \"Holy shit! What the fuck's going on there?!\"\n\nRachel stared intently at the conflicting auras, her mind whirring as she stood deep in thought.\n\nJohn didn't answer either. His expression was troubled as he remembered the way Xar'aziuth had reacted with revulsion to the psychic energy he'd blasted into the deep Astral.\n\n\"What's up with the stony silence?\" Dana asked her companions, lowering the Psi-detector and turning to look at them both. \"Did you figure something out?\"\n\n\"Helene was using her empathic ability to share my feelings with the twins,\" John quietly replied. \"If Alyssa's right about how black Progenitor metal is created in a soul forge, the two psychic auras couldn't be more different from each other. I think that's why they're reacting like oil and water.\"\n\nRachel nodded her agreement, looking into John's eyes. \"Helene's love and kindness is the complete antithesis of Xar'aziuth's hatred and cruelty. When you told us what happened on the Astral Plane, I did wonder if there might be positive and negative psychic energy; it would explain the nauseating effect the opposing types had on both you and Xar'aziuth.\"",
        "Dana let out a low whistle as she looked at the metal in the Psi-detector again. \"So why is Helene's love aura kicking the shit out of all that creepy darkness? Is it because the four of you were in the middle of a loved-up orgy and she basically overpowered it?\"\n\nJohn and Rachel shared a look, then both nodded in agreement. \n\n\"That's amazing!\" Dana gushed, her eyes bright with excitement. \"So the next time we need to breach a Progenitor dreadnought's hull, you and Helene can go over there and hump your way through the armour plating!\"\n\nJohn laughed and rolled his eyes. \"Sparks...\"\n\n\"I thought I'd lighten the mood,\" she replied with a cheeky grin. \"Hey wait a minute... I was just joking, but would that actually be possible?\" \n\nJohn looked at her askance. \"Seriously?\"\n\n\"Well she totally wrecked the bed...\" Dana replied, her gaze returning to the streaked metal. \"So what do you reckon?\"\n\n\"Well firstly, I wouldn't want to expose Helene to that kind of danger,\" John replied firmly. \"But even if I did go along with it, how could we get intimate in space?\"\n\n\"Dock with the Raptor and fuck her in the airlock?\" Dana suggested. \"You'd be less than a foot from the armour plating.\"\n\n\"Okay, I suppose that would be close enough...\" he reluctantly conceded. \"But how do we even know that the black metal in the bed frame is the same as the armour in a dreadnought's hull?\"\n\n\"Now that's a good point,\" Dana said, tapping a finger on her chin. \"The metal in thrall ships is nowhere near as tough as the plating on a Progenitor dreadnought, so it makes sense that the metal in that bed frame was lower quality.\" She grimaced and added, \"Maybe there's variations in the... forging process.\"\n\n\"Have you got any metal samples from Larn'kelnar's ship?\" John asked the redhead.\n\n\"Oh yeah, we do!\" she exclaimed, nodding exuberantly. \"Do you remember that sceptre thing that asshole was using? Tashana swiped it before we left!\"\n\n\"Good thinking. Larn'kelnar's personal gear would definitely be built out of the best quality metal,\" he agreed, giving her an approving smile. \"We need to take a look.\"\n\n\"I've got it stashed over here!\" she said, hurrying across the Engineering Bay to the rows of storage crates. \n\nBefore John could say anything else, his watch chimed, alerting him that it was 8:30 pm and they'd soon be arriving at the Terran fleet.\n\n\"Sorry, Sparks,\" he said with a frown. \"I need to meet with Calara before we rendezvous with the Terran fleet. Can you do a comparison and let me know what you find out?\"\n\n\"Sure thing,\" Dana agreed, skidding to a halt. She bounded back to give him a parting hug. \"Thanks for coming down here. It was great spending time with you... and we found out a shitload of new info!\"\n\nRachel nodded, giving him a warm smile. \"It certainly was an evening full of revelations.\"\n\nHe hugged them both enthusiastically. \"You're both awesome. I'll see you later tonight... unless you're joining me to welcome Jack and Mateo aboard?\"\n\nThe two girls exchanged a glance, then Dana replied, \"Alyssa asked us to wake her up just before we arrive. She's going to have a chat with Calara and decide who should be there.\"\n\n\"I think they're concerned about unsettling Calara's father if the entire crew greets them,\" Rachel explained. \"Jack's aware that his daughter is part of a harem... but meeting all thirteen of us at once would be quite overwhelming.\"\n\nJohn shrugged amiably. \"That makes sense. I get overwhelmed and I'm supposed to be in charge.\"\n\nDana and Rachel laughed, then blew kisses at him as he waved goodbye and left the Engineering Bay.\n\nNot wanting to disturb Alyssa, who was still fast asleep, he spoke to his Nymph matriarch instead. *Jade, is Calara still on the Combat Bridge?*\n\n*Yes, she's training Neysa at the moment.*\n\n*Thanks, honey,* he replied, stepping into the blue side of the grav-tube.\n\nAfter ascending to Deck Two, he strode purposefully down the corridor, then crossed his old bedroom to the express grav-tubes. Dropping like a stone in the rapid anti-gravity field, he walked out into the Armoury and down the ramp onto the Combat Bridge. The girl he was looking for was leaning over the Tactical Station, Calara's hands mimicking a rolling ship as she shared her gunnery expertise with the enraptured catgirl.\n\n\"That's right, you're getting it... but you need to get a feel of where your target is flying, then try to anticipate its turns and rolls. Soon it becomes second nature and instead of just blazing away as soon as your gun batteries have cooled down, you can time your shots with more precision and greatly increase their lethality. Striking an already damaged section of the hull can be devastating, especially if the shot penetrates armour to wreak havoc inside the superstructure.\"\n\n\"What if the Tachyon Lances are powerful enough to pierce their armour with a single shot?\" Neysa asked, her furry ears twitching as she listened attentively.\n\n\"Then you blaze away as soon as the gun batteries have cooled down,\" Calara replied with a smile. \"We'll probably be facing the Brimorians next, but I still want you to train as if you're preparing to fight Thrall ships. Carving through their armour plating is going to be hard work and we'll need to make every shot count.\"\n\n\"Thank you for the advice,\" the jaguar-spotted Nymph said earnestly. \"Can you restart the gunnery simulation? I'd like to try again.\"\n\nCalara nodded and tapped a couple of icons on the Tactical Interface. \"There you go. Good luck!\"\n\n\"How's the training going?\" John asked, walking over to join them. \n\n\"She's doing brilliantly!\" Calara gushed, beaming at her student. \"I'm really proud of you, Neysa. You've been working hard and making excellent progress.\"\n\nNeysa looked up at John and blushed. \"This one has just been trying to follow your mate's instructions, Master. I must admit, I still don't understand how Calara can fire so many weapons so rapidly and still maintain such incredible accuracy.\"\n\n\"Me neither,\" he admitted, ruffling her pointed ears. \"But if you've impressed Calara, then you must have been doing great. Learning these skills is very important, Neysa... and I really appreciate all the effort you're putting in.\"\n\nThe Nymph was delighted by his warm praise and she rubbed against his hand, the tips of her furry ears quivering with barely-suppressed excitement.\n\nTurning to Calara, John slipped his hand around her waist. \"Is this a good time to borrow you for a few minutes? I wanted to have a chat before we meet your family.\"\n\n\"Your timing's perfect. Neysa was just about to restart her training simulation,\" the Latina replied, patting her student on the shoulder. \"Why don't we head up to my quarters?\" \n\n\"Sounds good,\" John agreed, taking her hand. \n\nAs they walked away, he glanced over at the Pilot's Station, where Jade was watching her Nymph student weave a simulated Invictus through a dense asteroid belt. When she looked his way, Betrixa turned to give John a mischievous grin and wiggled her fingertips in his direction. Behind her, the Invictus veered out of control and crashed headlong into a massive chunk of rock, setting off warning alarms throughout the Bridge. The blonde catgirl winced and gave Jade an apologetic smile as she returned her attention to the holographic catastrophe.\n\nRolling her eyes affectionately at her Nymph sister, Jade hit a couple of icons and reset the piloting simulation. \"So what did we learn there, Betrixa?\"\n\n\"That I should ask you to grab the flight stick when this one needs to flirt with our handsome master?\" she replied, her serious tone reflecting her sincerity.\n\n\"Close enough,\" Jade said, laughing lightly. \"Now concentrate this time...\"\n\n*It sounds like Betrixa's training isn't going so well,* John noted, making fleeting eye-contact with his third matriarch.\n\n*Actually, Betrixa has superb reflexes and excellent hand-eye coordination, so she's going to be a gifted pilot,* Jade replied, sounding proud of her sister. *However, she's also quite feisty... which makes her a somewhat challenging student. I'm confident that with another week or two of training, she'll be better than any pilot in the Terran Federation Navy.*\n\n*It's great to hear she's doing so well. I'm sorry her personality makes her a bit difficult to train, I guess I'm responsible for that.*\n\n*There's no need to apologise. Her unpredictability and playfulness makes her an exciting lover... and pleasing you sexually is a Nymph's most important role,* Jade purred, a seductive gleam in her feline eyes. *Even if the war with the Progenitors drags on for centuries, Betrixa will need to keep you entertained in the bedroom for millennia to come...*\n\n*Centuries?* John asked, shocked at the thought. *Do you really think we'll be fighting that long?*\n\n*I honestly don't know,* she admitted. *But my sisters and I will always be at your side.*\n\n*That's good to hear,* he murmured, accompanying Calara up the ramp.\n\nThey took the express grav-tubes up to their old bedroom, then walked through it to reach Calara's quarters. She hit the button to open the door and glanced at John out of the corner of her eye.\n\n\"You seem very distracted all of a sudden,\" she noted, pausing before entering her quarters. \"Is something bothering you?\"\n\n\"Just something Jade said...\" John replied, shaking off his pensive thoughts. \"Don't worry about it.\"\n\nCalara raised an eyebrow, then dragged him into the room and pushed him onto the bed. John laughed and sprawled back on the covers, his hands moving instinctively to the Latina's slender waist when she straddled him.\n\n\"Tell me!\" she insisted, a playful glint in her dark brown eyes. \"Otherwise I won't say a word about what's been on my mind recently; and yes, I know Alyssa sent you to speak with me about it... the two of you are so predictable!\"\n\nHe smiled and pulled her down onto his chest. \"I have to go first?\"\n\n\"Otherwise my lips are sealed,\" she replied with a hint of a coy smile, leaning down to give him a chaste kiss.\n\n\"That would be tragic,\" he said sincerely, slipping his hand between them and gently caressing her stomach.\n\nThe smouldering look of desire in her eyes was easy to see, as was the determination not to back down.\n\n\"Jade was talking about the Progenitor War lasting for centuries,\" John explained, looking up at her for a reaction. \"Part of me was still hanging on to Alyssa's timeline... and it was a nasty shock.\"\n\n\"Kill all the bad guys in the next few months, so she can have your baby while she's still a teenager?\" Calara asked, giving him a knowing look. \"That timeline?\"\n\n\"Alright, I know it's totally irrational... but we've spent the last 6 months pulling off miraculous victories against all the odds. I just can't even imagine some drawn out battle of attrition that lasts for centuries... the thought of millions of Maliri casualties just fills me with dread.\"\n\n\"It won't take centuries to finish this,\" Calara declared, certainty in her eyes. \"And we're definitely not facing a protracted war of attrition.\"\n\n\"You're feeling that confident we can win?\" he asked, brushing her lustrous chestnut hair away from her face.\n\nShe hesitated and shook her head. \"We're massively outnumbered, John. If we get dragged into a conventional war, defending the Maliri borders from coordinated attacks by multiple Progenitors, it's already over. My guess is that Xar'aziuth doesn't know exactly what he's facing or precisely where we are... if he did, we'd be up to our ears in Thrall fleets already.\"\n\n\"You're not inspiring me much here... but I can't believe for one moment that you've given up hope of winning,\" he said with certainty.\n\nShe shook her head again, this time with a wicked smile. \"I didn't say that either. For all his faults, Rahn'hagon did have the right idea about this upcoming war. We won't be fighting by Progenitor rules... you can count on that.\"\n\nHe relaxed, placing well-founded trust in her tactical and strategic mastery. \"I think they're in for a bunch of surprises.\"\n\n\"This is going to get brutal and bloody... but it's going to be over with quickly either way. We cut the heads off the Progenitor snakes with a series of tactical strikes... or get crushed under an onslaught of Thrall fleets the likes of which the galaxy has never seen,\" Calara said ominously, her expression a curious mix of anticipation and trepidation. \n\n\"I feel sorry for the poor girl responsible for waging that war,\" John said with sympathy, stroking her cheek as he looked up into her eyes. \"Is that what's been worrying you recently?\"\n\n\"Actually... no, not at all,\" she replied, tilting her head to one side as she considered her feelings. \"I know it sounds utterly insane, but I'm actually looking forward to this campaign. You've been preparing me to fight this war since the day I joined you and all I can think about recently is procuring fleet assets, preparing our defences, and planning our offensives.\"\n\nHe looked at her in surprise, then felt an overpowering surge of guilt. \"I'm so sorry I did that to you.\"\n\n\"Don't be,\" she said earnestly. \"I'm not... I promise.\"\n\n\"You don't feel even the slightest bit of resentment at having the fate of the galaxy resting on your shoulders?\" he asked, far from convinced. \"You're only eighteen, Calara! I still can't believe I put you in this position.\" \n\n\"I actually feel flattered,\" she said with a wry smile. \"You're a very capable tactician in your own right... but you've spent months carefully preparing me to lead our fleets. I know we'll be working closely together to come up with some devious stratagems and I wouldn't want it any other way. I just hope I don't let you down.\"\n\n\"I honestly don't know whether I should feel relieved or appalled,\" he admitted, looking up at her with chagrin.\n\n\"If you had a medical emergency, would you go to anyone other than Rachel?\" she asked, raising an eyebrow. \"This is no different; you're simply relying on my expertise in my specialist field.\" \n\nJohn studied her for a long moment, then asked quietly, \"So if the prospect of facing millions of bloodthirsty Thralls and dozens of tyrannical Progenitors doesn't faze you, what is troubling you?\"\n\nHer face fell and it was quite clear to see she was upset.\n\n\"What is it, honey?\" he asked, holding her close. \"You can tell me.\"\n\n\"It's just that... I keep having to make all these awful moral compromises,\" she admitted, struggling to meet his concerned gaze. \"Like insisting we rush to claim Larn'kelnar's fleets instead of liberating the Abandoned from Brimorian slavery. The thought of using Thrall ships that were made by sacrificing millions of Larathyran woman makes me sick... but we need their firepower... we don't stand a chance without it.\"\n\n\"We're having to make some hard choi-\"\n\nCalara cut him off with a kiss, then continued quietly, \"I know logically we haven't got any choice... I just don't want you or the girls to think that my heart's made of stone. I'm only telling you what will give us the best chance of victory... not what I actually wish we could do.\"\n\nJohn gave her a tender kiss. \"I'd never think that of you, honey... I promise. The girls all love you like a sister; they know you're just trying to give me the best advice you can.\"\n\nShe relaxed and it looked like a huge weight had been lifted off her shoulders. \"Really?\"\n\n\"Definitely. I really appreciate that kind of feedback, especially when it's hard to hear. All of us were agreed that we should finish off the Kirrix, but you strongly disagreed... for very good reasons. In fact, whenever we're all in consensus I'd be tempted to have one of you disagree on principle, just to spark a debate and make us thoroughly examine our options. We're balancing on a knife-edge here and we can't afford to make any mistakes; I'm completely reliant on you and the rest of the girls as my advisors... and I have zero complaints so far.\"\n\n\"You've always really respected my opinion,\" Calara said, her gaze softening. \"It was one of the things I appreciated most when I joined you on the Invictus. When I graduated from the Academy and was posted to Port Heracles, I had Commander Grant leering over me and making lewd comments, so no one took me seriously with that going on. Things improved when I transferred to the Corvette Griffon... but you know how badly that ended.\" \n\n\"Grant got what he deserved... but I'm sorry you had to go through all that.\"\n\nShe smiled and gave him a loving kiss. \"You don't know how refreshing it was, having you really listen to me and value what I had to say. I'm sure you can imagine what it was like for me growing up, competing with three older brothers to make myself heard.\"\n\n\"They're all very confident,\" he said with a sympathetic smile. \"That must have been hard.\"\n\nCalara suddenly sat bolt upright. \"Oh damn, I forgot the time! We'll be meeting my dad in just a few minutes and I haven't even decided what I'm going to wear!\"\n\nShe slid off him and flung open the doors to her wardrobe, then started biting her nail as she studied her outfits.\n\nJohn could see how stressed she was and walked over to join her, wrapping her up in his arms. \"Hey, take it easy, honey. It's just Jack and Mateo... they won't mind what you wear.\"\n\nThe Latina shook her head, her long dark mane brushing his cheek. \"No, this is important! The last time I saw my dad, we ended up arguing about you sleeping with all the girls, and I yelled at him about excluding me from sparring. Whatever I wear will change how he treats me... so it has to be perfect!\"\n\nHe kissed her cheek, then released her. \"Okay, what're your options? I'll help you choose.\"\n\nShe flashed him a grateful smile, then her hand darted across to several suit holders. \"They'll both be in uniform, so I could match and go with T-Fed greys, or wear my Lioness whites... what do you think?\"\n\n\"Won't that make him act more formally with you?\" John asked, running his fingers over the gold captain epaulets on her white jacket. \"Especially if you meet him wearing this... it'll be a reminder that his daughter is a Stellar-Cluster recipient who twice saved Terra from destruction.\"\n\n\"Damn... you're right,\" she said nervously. \"I'm already worried he might see me differently after I showed him my psychic powers.\"\n\nJohn nodded his agreement. \"So casual it is then. Anything in mind?\" \n\nCalara blew out her breath and waved a hand in helpless frustration at the long rail full of skirts, blouses, and dresses. \"I've got all this to choose from... but I'm hopeless at picking outfits that match. Maybe I should just wear my uniform after all?\" \n\n\"What did you usually wear at home?\" he asked, turning to look at the pensive brunette.\n\n\"What, on Jericho?\" she asked in surprise. When John nodded, she reached into the wardrobe and pulled out a pair of combat trousers and a t-shirt. \"Basically that...\"\n\n\"Perfect,\" he said with a smile. \n\nShe paused, touched by the sentiment behind his advice. \"Go back to being daddy's little girl?\" she asked, her eyes welling up. \"Won't that be weird for you? Seeing me so desperate for his approval?\"\n\n\"He's your father,\" John said, gently brushing away a tear from her cheek. \"I get it...\"\n\nCalara hugged him, resting her head against his chest. \"I love you so much, John.\"\n\nHe held her close. \"I feel the same way about you, honey.\" He glanced at his watch and frowned. \"8:53... we'll be dropping out of hyper-warp soon; you better get changed.\"\n\nThe bedroom door slid open and Alyssa strode inside, her expression filled with affection for her two lovers. \n\n\"I couldn't help overhearing,\" she said, walking over to join them and placing a garment bag on the bed. \"I think that was a lovely suggestion, handsome... but tonight won't be the right time for that conversation. Jack will be worrying about Maria and will need to unwind first. Why don't you wear your old style of clothing tomorrow, gorgeous? That's when you'll have a proper opportunity to talk with your father and then you can discuss everything that got dredged up the last time you met.\"",
        "Calara glanced up at John, seeking his approval. \n\nHe chuckled and patted her on the back. \"I wouldn't dare to disagree with our resident fashionista. Besides, Alyssa's right. Jack knows we were at war with another Progenitor; I think it's only fair to update him on recent events.\"\n\n\"Thanks... both of you,\" the Latina said quietly, embracing John and Alyssa.\n\nThey shared a smile, then Alyssa glanced at John's rumpled outfit. \"Don't worry, I picked out something for you too...\"\n\nJohn laughed and rolled his eyes, then left Alyssa to help Calara get ready. He returned to his old bedroom and spotted the clothes draped over Faye's leather chair in the corner. This was the first time he'd been near the high-backed seat since it had been rescued and he ran his hand over the leather, feeling the natural grain beneath his fingertips. \n\nThe leather chair had just been a comfortable piece of furniture until Faye made it her own, the purple sprite sitting there every evening to watch over the crew while they slept. It struck him as a perfect metaphor for Faye; the chair starting life as just a functional object, before being imbued with much greater significance and meaning after being cared for by the people around it. \n\n*We've dropped out of hyper-warp on the outskirts of Sigma Octantis,* Jade warned him. *We'll be docking with the Damocles in three minutes.*\n\n*Thanks, honey,* he replied, shaking off his maudlin thoughts.\n\nJohn quickly stripped off his clothes and dressed in the slacks and shirt that Alyssa had chosen. He smiled as he slipped on the shoes, appreciating the thought she had put into the selection of clothes. While the trousers were dark blue and the shirt white, the cut reminded him of Terran Federation military dress uniform. He'd look very similar to Jack and Mateo if they removed their formal jackets.\n\n*Well spotted, handsome,* Alyssa said, with a hint of satisfaction.\n\n*I'm on my way,* he told her, fastening up the last of his shirt buttons and striding out of the bedroom. \n\nThe girls were leaving Calara's quarters at the same time and he looked at the brunette in surprise. He wasn't sure how Alyssa had managed such a miraculous transformation in seven minutes, but Calara looked casually elegant in a mid-length skirt and blouse. There was no disguising the fact that the Latina was a stunningly attractive woman, but the clothes presented her beauty in an understated way. \n\n\"You look lovely,\" he said, lightly kissing Calara in greeting. \"Alyssa got it just right.\"\n\nShe blushed and looked down at her outfit. \"Really?\"\n\n\"When he sees you, Jack's first thought will be pride at having such a beautiful daughter,\" he replied with a smile. \"But you don't look intimidating, you just look naturally gorgeous.\"\n\n\"That's what I was aiming for and she made it easy,\" Alyssa said, winking at her girlfriend. She slipped her hand into John's. \"Come on, we don't want to be late.\"\n\nJohn offered his other hand to Calara, then they walked along the corridor to the grav-tube. \n\n\"Do you feel better after a rest?\" he asked the blonde beside him.\n\n\"Oh, so much better, thank you!\" she gushed, beaming brightly at him as they stepped into the red anti-gravity field.\n\n\"You were only out for two hours,\" he noted with a wry smile. \"If you oversell it, I'm really going to start worrying about you.\"\n\nAlyssa's melodic laughter echoed around the grav-tube. \"Alright, you got me. I admit, I was trying to reassure you that I'm okay... but I am fine, honestly.\" She made eye-contact with him and continued, \"I just don't want to go anywhere near that black metal.\"\n\n\"That's perfectly understandable,\" he said, giving her hand a gentle squeeze. \"Oh, you missed quite a bit of excitement while you were asleep. We found out a lot of new information.\"\n\n\"I know; the girls have been filling me in,\" she replied with a twinkle in her eyes. \"Knocked-up Maliri blue... how fascinating.\"\n\n\"What was that?\" Calara asked, darting an inquisitive glance at the blonde.\n\n\"The colour of John's aura,\" Alyssa explained. \"The closest Rachel could describe it was the blush in the Young Matriarchs' cheeks when John knocked them up.\"\n\nThe brunette smiled and bumped John with a hip. \"You've moved on from Terran girls now?\"\n\n\"It's not that... I just haven't got any pregnant yet,\" he replied, making Calara blush. \n\nAlyssa studied her girlfriend's rosy cheeks, then shook her head. \"You see that? I'm glad you went with the blue. Imagine if your aura had been knocked-up Terran pink? I think I'd have to find myself another Progenitor to serve.\"\n\n\"Pink hex shields, pink eldritch fire... you don't reckon I could pull that off?\" John asked, pretending to frown indignantly.\n\n\"She's right, that would be embarrassing,\" Calara said, before bursting out laughing. \"Can you imagine how Larn'kelnar would have reacted to that?\"\n\nJohn and Alyssa couldn't help laughing as they pictured it. \n\n\"Ah, thanks for the laugh, girls,\" John said as they reached Deck Nine. \"I needed that.\"\n\nThey grinned at him and the trio walked out into the corridor towards the airlock.\n\n*John, we're being hailed by the battleship Porphyrion,* Jade informed him. *Admiral Zelig wants to speak with you.*\n\n*It's not a good time, Jade,* he quickly replied. *Can you tell him that I'll call back in about ten minutes?*\n\n*Will do, Master!*\n\nThey reached the airlock and John glanced back down the corridor. \"Is it just us? Jack and Mateo have met Dana, Rachel, and Jade before... I'm surprised they're not here at least.\"\n\n\"We'll all get together in the Officers' Lounge for a drink in a few minutes,\" Calara explained. \"I thought it might be easier to settle my family in first, then we can do the introductions later.\"\n\n\"Fine by me,\" John agreed amiably.\n\nHe glanced through the airlock porthole and saw grey titanium hull outside, letting him know that they'd docked with the Damocles. Putting his hand on the DNA reader, he watched as it scanned his genetic code, the outer airlock door spiralling open a moment later. The Terran Federation cruiser opened its own airlock in response, revealing Calara's father and eldest brother, both men wearing their naval uniforms.\n\n\"Permission to come aboard, Admiral Blake?\" Jack asked, snapping a sharp salute.\n\nJohn saw the new rank insignia on his jacket and smiled as he returned the salute. \"On one condition, Commodore Fernandez; you're a guest in my home, so let's forget about rank while you're aboard the Invictus.\"\n\n\"Alright, I think we can do that,\" Jack said with a smile. He turned his attention to his daughter. \"Callie, it's wonderful to see you again!\"\n\nShe stepped forward and gave him a big hug. \"I love you dad... I really missed you.\"\n\n\"Hey... we only saw each other a week ago,\" he said, surprised by her emotional reaction. \n\n\"I know,\" she said, giving him a shy smile. \"Oh, congratulations on your promotion! I was thrilled for you when I heard the news!\"\n\nJack looked embarrassed. \"Thank you. The Fleet Admiral is convinced it was long overdue.\" \n\nJohn heard the flicker of doubt in his father-in-law's voice, but decided to speak to him about it later. Turning his attention to Mateo, he smiled when he saw the new rank insignia adorning the man's jacket. \"Congratulations to you too, Commander Fernandez.\"\n\nMateo saluted him and said formally, \"Thank you, Admiral Blake.\"\n\n\"The same applies to you, Mateo. It's just John while you're aboard my ship, alright?\"\n\n\"As long as you don't mind, that's fine by me,\" Mateo said, giving him a cautious smile.\n\n\"Hi big brother,\" Calara gushed, giving him an affectionate hug.\n\n\"Hey Callie.\"\n\nShe pulled back and looked at him askance. \"What's up with you? I thought you'd be over the moon about your promotion.\"\n\nHe sighed and picked up his kit bag. \"I am and I was offered an amazing new posting in the Terra defence fleet... but it was hard saying goodbye to Emily. She got really upset.\"\n\nAlyssa glanced at John and raised an eyebrow.\n\nJohn coughed to get Mateo's attention. \"Commander Fernandez, please can you inform Lieutenant Campbell that I'm temporarily reassigning her to the Invictus for the next 24 hours. I'm sure the Terra defence fleet can use a good medical officer; I'll speak to the Fleet Admiral and see if we can arrange a permanent transfer.\"\n\nMateo gaped at him in shock, unable to believe his ears.\n\nCalara laughed and poked him in the chest. \"You heard the Admiral... step lively, Commander!\"\n\nHe grinned and handed his kit bag to his sister. \"Just give me five minutes! I'll help her pack!\"\n\n\"That was kind, John, thank you,\" Jack said, clapping him on the shoulder as he watched his son sprint for the elevator.\n\n\"What good is being an Admiral if you can't throw your rank around to help your friends,\" he said, smiling back. He glanced at Calara and added, \"Can I leave you in your daughter's very capable hands? Admiral Zelig asked to speak to me, so I might as well get that over with while we're waiting for Mateo and Emily.\"\n\n\"Of course,\" Jack agreed.\n\n\"Hey, Jack,\" Alyssa said with a warm smile. She caught him by surprise with a very friendly hug. \"I'm so glad we were around to take you back to Jericho; it'll be wonderful having you stay with us.\"\n\nHe looked flustered and took off his peaked hat. \"Err thank you, Alyssa. It's lovely to see you too.\"\n\nThe blonde flashed a triumphant grin at her girlfriend when she saw his reaction, making Calara roll her eyes. \"Dad, I'll introduce you to the rest of the crew once we've got you settled in your quarters. Have you eaten? I can make you some supper if you're hungry.\"\n\n\"I'm fine thanks, Callie. The Damocles' senior officers held a farewell dinner for me just a few hours ago...\"\n\nJohn left Jack to catch up with his daughter and headed for the grav-tube, where he floated up to the Command Deck. Jade had moved here from the Combat Bridge and was now instructing Leylira as she had Betrixa. He didn't want to disturb the Nymphs while they were training, but Jade and her sisters all turned to greet him with friendly waves. \n\n\"Hey ladies,\" John said, acknowledging them with a smile. \"Just ignore me, I'll call Admiral Zelig from my Ready Room.\"\n\n\"Ignore you?\" Jade asked, raising an eyebrow and grinning. \"Surely you know us better than that, John.\"\n\n\"I love seeing you, Master,\" Marika agreed, her gentle brown eyes filled with warmth.\n\nLeylira nodded but remained silent, her predatory gaze watching his every move. John couldn't help feeling like the tigress was ready to pounce at any moment and when she saw him studying her warily, she smiled in triumph. Instead of going straight to his Ready Room, he decided to take the right ramp to pass the Tactical and Pilot's Stations, giving a quick kiss to each of the three Nymphs in turn. The detour earned him happy sigh from Marika, a throaty purr from Leylira, and an affectionate smile from Jade.\n\nJohn noticed that both catgirls' striped markings were hidden by new outfits. \"I don't think I've seen this dress before,\" he observed, run his hand over the material covering Leylira's back. \"Can you show me?\"\n\nThe tigress rose gracefully from her seat, then turned so that he could get a good look at the body suit. The material clung to her lovely curves, completely covering her upper body except for ovals cut in the shoulders that left them exposed. The outfit cinched at her trim waist with a belt, then ended mid-thigh, leaving a few inches of striped flesh before reaching her black knee-high boots. It was obvious the dress had been tailored with a catgirl in mind, as Leylira's tail fit through a neat hole in the back, the sinuous appendage flicking slowly back and forth.\n\n\"What do you think?\" Leylira asked, looking at him for a reaction.\n\n\"You look fantastic,\" he replied with a smile. \"Nothing beats seeing you in the nude, but when modesty calls for it, this is the next best thing.\" \n\nThe tigress rewarded him with a kiss, her amber eyes sparkling as she retook her seat. \"Good answer, Master.\"\n\nHeading over to his Ready Room, John opened the door and strode inside. *Jade, how's Leylira doing with her training? Is she a good student?*\n\n*She's very attentive and eager to learn, so she's progressing rapidly. I'm confident that it'll only be a matter of days before she'll be competent enough to be left in charge of the Invictus for non-combat manoeuvres.*\n\n*That's amazing, well done,* John said as he took a seat behind his desk. *It sounds like it won't be long before she can pilot the Invictus in battle.*\n\n*Leylira is very aggressive behind a flight stick and I think she'll make a great combat pilot... providing I can teach her to avoid being quite so reckless. The only problem I foresee in the future, is that she's as eager to accompany you on ground missions as me and Alyssa,* Jade said, sounding amused.\n\nJohn chuckled as he activated the comms interface. *I appreciate her enthusiasm, but she better get used to the pilot's chair. One wild Nymph running amok is trouble enough.*\n\n*I think the way you handle five wild Nymphs is very impressive, Master,* Jade said with a flirtatious lilt to her voice. *We certainly have no complaints.*\n\n*I'm glad I'm keeping you satisfied,* he replied, searching for the battleship Porphyrion among the list of Terran Federation warships in the vicinity.\n\nThe call went through and the star-struck communications officer stammered a greeting before transferring him to Admiral Zelig. The winged sword icon of the Terran Federation disappeared, to be replaced by the bearded face of the senior officer. \n\n\"It's good to see you again, Nathan,\" John said with a friendly smile. \n\n\"Likewise, John,\" Zelig replied, nodding to him respectfully. He hesitated for a moment, then continued, \"My Tactical Officer spotted you heading inbound on our long-range sensors, but she reported a glitch with our sensor array. The problem seemed to resolve itself and my Engineering team is performing a diagnostic... but the rest of the fleet encountered the same issue. I just thought I'd check if you have some form of signal disruption device installed on the Invictus?\"\n\nJohn shook his head. \"No, but we have upgraded our hyper-warp speed recently and your sensors will struggle to track anything that fast. The flickering and data glitches stopped because we slowed down when we got close to the fleet.\"\n\nThe admiral looked stunned. \"But that's not possible! I saw it myself... you'd have to be travelling 12 times our maximum hyper-warp velocity!\"\n\n\"Yet we always seem to be in a rush to get anywhere on time,\" John said with a wry smile. \"So, how's the relief effort going with the Tasmaris Prime colonists?\"\n\nZelig did an admirable job of recovering from his shock. \"It's going well. We've nearly finished treating all the colonists that were infested with Kirrix eggs and we've managed to drastically reduce the numbers of suicides. I allocated all the fleets' counsellors to assess and support the bereaved parents, and we've had the worst cases on suicide watch. What happened to those families is tragic; I've spoken to them personally to offer my condolences.\"\n\n\"That can't have been a pleasant conversation,\" John said, remembering how angry the Brecken's World colonists had been.\n\n\"High Command deliberately abandoned the Kirrix border. Those people are furious at Buckingham's betrayal and have every right to be,\" Zelig replied, his expression grim. \"I was told in no uncertain terms what they think of the Admiralty for leaving them exposed. They needed to vent their anger at somebody and if it helps distract them from their grief, I was happy to be their scapegoat.\"\n\nJohn gave him a respectful nod. \"You're a good man, Nathan. Not many senior officers would willingly endure that level of abuse.\"\n\nIt was plain to see that the admiral had been moved by their plight, and now that he let his guard down, it looked like he'd aged ten years. \"I just kept thinking about my own children; I can't even imagine the pain those parents must be feeling.\" \n\nPausing to consider the cost of a delay, John weighed it against the anguish the colonists were suffering and the decision was made for him. \"I'll send some of my Lionesses to help. Please could you arrange for all the grieving parents and all the wounded to be gathered in one location to speed things up; I need to depart as quickly as possible.\"\n\n*I'll get the girls ready, handsome,* Alyssa responded a moment later. \n\nZelig looked at him in surprise. \"John, I appreciate the desire to help, but those people have been severely traumatised. I've spoken to the medical staff and they said it'll take months of intensive counselling for those people to recover from their grief... maybe even years.\"\n\n\"One of the Lionesses is very sympathetic and will make a big difference,\" John explained, meeting the older man's startled gaze. \"She helped the colonists on the worlds we liberated.\"\n\n\"Alyssa...\" the admiral replied, sudden understanding appearing in his eyes. \n\n\"Actually, it's someone else you haven't met,\" John clarified. \"Her name's Helene and I think you'll be surprised how effective she can be.\"\n\n\"After we restored the local comms beacon, I spoke to the governors of Brecken's World and Valia Gate,\" Zelig said, looking thoughtful. \"They said you saved them and that the Lionesses were a big help, but were tight-lipped about exactly what happened. I warned them about the risk of suicides, but they said there hadn't been any.\" \n\n\"That's excellent news,\" John said, smiling inwardly at the governors' loyalty to his Lionesses. \"We also managed to rescue the colonists from Menganus IV and sent them back home in a captured hive ship. The nearest comms beacon in that sector has been destroyed though, along with the colony transmitter, so they won't be able to contact you until both are repaired.\"\n\nThe older officer listened with interest. \"If you can assist with the Tasmaris Prime colonists, then we'll depart as soon as the last of the egg infestations are treated. We urgently need to restore communications with Menganus IV and re-establish a border presence.\"\n\n\"Sounds like a good plan,\" John agreed.\n\nZelig paused and looked at him with concern. \"Devereux warned High Command that you weren't planning to return to Terran Federation territory for a month, but then she called yesterday to inform me of your imminent arrival. I assume you're aware of the Brimorian attack on the Callopean Shoals?\"\n\n\"I am,\" John replied, his eyes turning cold and hard. \"And the attack on Olympus.\"\n\nRaising an eyebrow, Zelig asked, \"Are you planning on dealing with both?\"\n\nKnowing how the admiral felt about vigilantism, John was reluctant to elaborate. \"Yes.\"\n\n\"I assume you have some unspeakable fate planned for them?\"\n\n\"Don't waste your pity on the Brimorians or the traitors... neither deserve it,\" John said defensively, feeling like he was being judged. \"You couldn't begin to imagine the horrific atrocities the Enclave have committed over the last century. As for the Terran traitors... they slaughtered thousands of marines in cold blood and tried to murder my friends. Damn right those bastards are going to pay!\"\n\n\"Shouldn't justice be impartial?\" Zelig asked quietly. \n\nJohn felt his temper flare, then took a deep breath to calm himself. \"If this was just about me seeking revenge, then I'd agree; the right thing to do would be to hand them over to the judicial system for punishment.\" He leaned forward and continued, \"But this isn't about revenge, it's about protecting the people I care about.\"\n\nThe older officer stayed silent for a long moment. \"By making a bloody example of anyone who dares to cross you?\"\n\n\"This has nothing to do with my ego,\" John replied, shaking his head.\n\n\"Are you sure?\" Zelig persisted. \"What about slaughtering all those assassins that attacked you and televising the Invictus levelling their secret base? Or recording Admiral Weber clawing his own eyes out?\"",
        "\"They were too gutless to come after me personally, so they tried to hurt me by going after my friends. Mikaboshi abducted Calara and was going to mutilate her into a cyborg. Weber kidnapped and tortured Jehanna Elani, then planned to conduct grotesque experiments on Jade's sisters. I'm sick of these pathetic cowards attacking the people closest to me... and it's long past time to put an end to it by showing everyone the consequences.\"\n\n\"I'm sorry, John... I didn't know the background to those incidents,\" Zelig admitted, looking contrite.\n\n\"You and I aren't that different, Nathan,\" John said, his tone conciliatory. \"When the ones we love are threatened, we take steps to protect them... that's all I'm doing here.\"\n\nThe older officer nodded and looked away, his face a mask of conflicting emotions.\n\n\"The Lionesses will be ready soon; let us know where the colonists will be,\" John requested, reaching out to end the awkward call. \"I don't think we'll be heading back this way any time soon, Admiral Zelig. Goodbye and good luck.\" \n\nZelig gave him a look filled with regret. \"The same to you, Admiral Blake. I am sorry if it sounded like I was condemning your actions; you've done a tremendous amount of good protecting millions of colonists on the Outer Rim.\" \n\n\"They needed my help, so I intervened to keep them safe,\" John replied, making eye contact with him. \"It's almost the exact same thing... just on a vast scale.\"\n\n\"I just don't want you to have to live with the guilt that's plagued me for over 20 years,\" Zelig said earnestly.\n\nJohn let out a weary sigh. \"I understand that... but I can't always be there to protect all my friends and family. I don't know of any other way to deter further attacks... do you?\"\n\nThe admiral hesitated then shook his head, looking lost in thought. \n\n\"Have a safe journey to the border, Nathan,\" John said, ending the call.\n\nHe leaned back in his chair, then turned to look out the window at the huge Terran Federation fleet that was gathered around Tasmaris Prime. As he watched the grey titanium vessels launch shuttles down to the planet below, he couldn't help wondering if the justifications he'd used to defend himself really did scale up. He believed passionately that killing someone to save an innocent was the right thing to do... but could you really apply the same argument at a civilisation level?\n\nJohn stared out into space, mulling over how far he should go to stop the Brimorians from killing the Abandoned.\n\n***\n\nThe imposing gilded doors slid open, admitting Queen Edraele Valaden and her retinue into the vast hangar. Dominating this area of Genthalas shipyard was the Ettrian Keyrie, the colossal flagship of House Perfaren, which would soon be departing for Kintark territory. Parked adjacent to it were over a dozen golden shuttles, each waiting to transport the gathering of senior officers to their capital ships. Those Maliri women were speaking to their matriarchs in the shadow of the sleek battleship, the leader of each House standing out in her distinctive matriarchal robes.\n\nLuna's yellow-eyed gaze swept over the crowd, picking out Tsarra Perfaren, Valani Naestina, and Nyrelle Aeberos amidst the naval officers. *Where are Leena and Kali?* \n\n*Their House fleets are engaged elsewhere and won't be taking part in this campaign,* Edraele explained as she glided towards the trio of Young Matriarchs. *Leena would have come to show solidarity, but I asked her to keep Kali company.*\n\nThe assassin darted a look of concern her way. *Is Kali alright?*\n\nEdraele hesitated before answering. *I was distracted during her last meeting with Sarinia, so I didn't know that they planned to meet again. Kali went to meet her in the arboretum earlier this evening, but as Sarinia is confined to quarters, obviously she didn't show up. Shortly afterwards, Kali stopped sharing her thoughts with me; I had intended to give her some privacy, but I started feeling some sadness across our empathic bond.*\n\n*Do you think she found out what happened to Gaenna Baelora and the rest of the older matriarchs?* Luna asked, raising an eyebrow.\n\n*I don't think so, otherwise she would have felt far stronger emotions. Leena spoke with Kali and confirmed what I've been feeling; that she isn't distraught, but there is something bothering her. I plan to speak with Kali about it as soon as we're finished here.*\n\nThe Maliri gathered by the battleship noticed Edraele's arrival and bowed to her respectfully as she approached.\n\n\"Good evening, ladies,\" Edraele said with a warm smile. \"I hope all is well?\"\n\n\"Very well, thank you.\" Tsarra Perfaren replied, before gesturing to the older naval officer standing at her side. \"I don't think you've met Aadya before. She's my House Fleet Commander... and a loyal friend.\"\n\nLike all the military personnel in attendance, Aadya had short white hair, having been inducted into Edraele's network of wards shortly after the rebellion was peacefully averted. She was an older woman and clearly a veteran officer, possessing a quiet but confident presence.\n\n\"It's a pleasure to meet you at last,\" Edraele said, inclining her head politely. \"I know Tsarra highly values your wisdom and experience.\"\n\nTsarra placed a hand on the Fleet Admirals shoulder. \"I owe her a great deal. Aadya convinced me to stop trying to fight John and talk to him instead... I dread to think what might have happened otherwise.\"\n\nAadya looked embarrassed at the effusive praise. \"You give me far too much credit, Matriarch; I seem to recall you were the first to discern the purpose of the holo-simulation.\" She turned and bowed respectfully to Edraele. \"It's an honour to meet you in person, my Queen. I've enjoyed hearing your lovely voice and had pictured how you must look, but your beauty far exceeds my feeble imagination.\"\n\n\"I think I need to have stern words with Lilyana and Amlaril; my Fleet Commanders never say such nice things to me,\" Edraele said with a disarming smile. \n\nThe assembled officers laughed, put at ease by her relaxed demeanour.\n\nEdraele turned to look at Nyrelle and Valani. \"May I ask who is leading your fleets, Matriarchs?\"\n\nValani gave the Maliri officer beside her a wry smile. \"This is Amalaeth. Our relationship had a somewhat rocky start, but she's an excellent Fleet Commander and I have every confidence in her abilities.\"\n\nNyrelle grinned at her own Fleet Commander. \"A rocky start? When I became matriarch, Kalmaera thought I was a foolish little girl, who was going to lead House Aeberos to disaster!\" \n\n\"I would never be so disrespectful, Matriarch!\" Kalmaera protested, looking abashed. \n\n\"I'm only teasing you,\" Nyrelle said, patting the officer on the arm. \"I just hope you don't still feel that way?\"\n\nKalmaera shook her head and replied earnestly, \"You've done nothing but impress me since you became leader of our House. You helped forge an incredibly powerful alliance, the likes of which I never dreamed possible, and managed to vastly upgrade the strength of our entire fleet. You've achieved more in two months than your mother accomplished in the last 50 years!\"\n\nTouched by her Fleet Commander's fervent praise, Nyrelle blushed a dark indigo. \"I'm just trying to do my best for our House and the Maliri Protectorate... but I appreciate what you said. Thank you, Kalmaera.\"\n\nEdraele was pleased to see the close relationships that had developed between the Young Matriarchs and their highest-ranking military officers. It was quite clear that the Fleet Commanders all held them in very high regard. *Well done, ladies... you've really won their respect.*\n\nThe Young Matriarchs beamed in delight, always ecstatic when they earned praise from the Maliri Queen.\n\nAddressing the group of officers, Edraele continued, \"We have no history of inter-House cooperation in a military campaign of this magnitude; have you established which Fleet Commander will have seniority?\"\n\nKalmaera and Amalaeth both glanced at Aadya, who replied, \"Perfaren is the highest ranked House, so it's been suggested that I lead our expeditionary force.\"\n\n\"Actually, you also have more combat experience than either of us,\" Amalaeth corrected her. \"My recommendation was based on merit rather than House ranking.\"\n\n\"Mine too,\" Kalmaera agreed. \"You're the logical choice to lead our battle group.\"\n\n\"I'm glad to hear you reached an amicable consensus,\" Edraele said, nodding her approval. \"You'll also be working closely with John's fleet commander, who will provide strategic guidance and tactical support in the upcoming battles. It's imperative that you maintain a chain of Comms Beacons when you enter Kintark territory, so that you can continue to receive updates from Calara.\"\n\nAadya's ears pricked up at that announcement. \"Is that the Calara who masterminded the tactical responses in the holo-simulation during the civil war?\" \n\n\"The very same,\" Edraele confirmed, noting the eager look of anticipation in the officer's eyes. \"Her primary objective will be to ensure that you don't lose any personnel in the conflict with the Brimorians, so listen closely to her advice, she's an extremely gifted tactician.\"\n\nThe Fleet Commanders shifted uncomfortably, darting glances at one another. \n\n\"That's an admirable goal, but it's extremely unlikely it can be achieved in a conflict of this scale,\" Aadya said with regret. \"We will do our best to minimise casualties, but I believe we're facing at least six Brimorian fleets?\"\n\n\"Which is why you must be cautious not to overexpose your forces. I fully intend to stop the Brimorians from conquering the Kintark, but I have no wish to see Maliri crew sacrificed because Emperor Baledranax was a reckless fool and left his empire exposed. What's left of the Kintark forces will be fighting with you under the command of High Prelate Zorlin, so coordinate your attacks with him.\"\n\nThe three Fleet Commanders nodded their understanding.\n\n\"As soon as the Brimorian threat is neutralised, I want you to hurry back to Genthalas,\" Edraele continued, looking at each of them in turn. \"We're planning a massive fleet operation and need all of you here for when it begins. I wish you good fortune on this campaign, ladies... it's an excellent opportunity for you to prove that the Maliri can fight at each other's side, united under one banner.\"\n\nTsarra slipped her arms around her fellow matriarchs' waists and hugged them affectionately. \"Valani and Nyrelle are my closest friends and there'll never again be another war waged between our Houses. Put those old House rivalries far behind you and think of yourselves as close allies, working together for the future of our people.\"\n\n\"Well said,\" Valani said turning to give her a warm smile. \"I feel exactly the same way about you.\"\n\nNyrelle gave Tsarra a chaste kiss on the cheek, then grinned at the stunned officers. \"You're all smart women... I'm sure you all sense the difference between this alliance and the temporary truces of the past. The Maliri are united now, all fighting alongside each other for Baen'thelas.\"\n\nKalmaera, and Amalaeth were accustomed to being on friendly terms, as House Aeberos and House Naestina had been allies even before the Young Matriarchs replaced their mothers. However, it was still a shock to see their leaders openly embrace the Perfaren Matriarch, whose House had been a bitter rival for over two centuries. \n\nEdraele smiled at the Young Matriarchs fondly, before facing the shocked fleet commanders. \"John will have returned to Genthalas by the time you've concluded this campaign, so do your best, and I'm quite certain he'll want to reward each of you personally.\"\n\nAstonishment turned to excitement and all the assembled Maliri officers looked thrilled at the prospect.\n\n\"I will eagerly await your triumphant return,\" Edraele said, concluding her parting words. \"Good bye and good luck, ladies.\" \n\nThe entire group of military personnel bowed to her, then the Young Matriarchs split up to convey their final instructions to their fleet commanders.\n\n*Well that was entertaining,* Luna said, falling into step beside Edraele as the Maliri Queen turned to leave. *I don't think they could believe their eyes when Nyrelle kissed Tsarra.*\n\n*Imagine how they'll react when they find out that their matriarchs are all lovers and pregnant with John's babies,* Edraele remarked, her purple eyes sparkling.\n\nLuna suppressed a chuckle then darted a curious glance at Edraele. *When they find out? So you do intend to tell them?*\n\n*Actually I doubt it'll be much of a shock by that point. When John returns, I need to get much closer to all the fleet commanders and build up the trust between us. If I can bond with them, we'll have instantaneous telepathic communication with all our fleets, no matter where they are in the galaxy. Once they make that connection with me, they'll be aware of just how close all of us are.*\n\n*I'll never forget what it was like, bonding with you,* Luna said softly, swinging her hands as she walked, so that she could innocuously brush the backs of her fingers against Edraele's.\n\nThe Maliri Queen flashed a furtive smile at her, then they left through the hangar doors.\n\n***\n\n*We're ready to go, John,* Alyssa informed him, her telepathic contact scattering his thoughts.\n\n*I'll come down and see you off,* he replied, rising from his chair.\n\n*Don't worry, we'll be back in a couple of hours. Why don't you go straight to the Officers' Lounge? Jack, Mateo, and Emily are with Calara and heading up there now.*\n\n*Alright, I'm on my way,* John said, leaving his Ready Room. When he walked onto the Bridge, he was surprised to find it deserted. *Are the Nymphs with you?*\n\n*They all volunteered to assist and I didn't have the heart to turn them down. It'll actually be helpful to have them along, they're really good at distracting crowds and keeping the queues moving. Jade's coming with us as well, so she'll keep an eye on her sisters, while I watch over Helene and Rachel.*\n\nThe Nymph Matriarch spoke up too. *Is that alright with you, Master? We can stay aboard if you prefer.*\n\nJohn walked up the ramp and entered the grav-tube. *No, it's okay; I'm pleased you all offered to help. I'll introduce our guests to Sakura and the twins first, then they can meet the rest of you later.*\n\n*I hope it goes well. See you soon!* Jade said cheerfully.\n\n*Take care both of you,* he said, stepping out of the gravity field on Deck Two.\n\n*Don't we always?* Alyssa asked, a playful lilt to her voice.\n\n*No, you really don't,* he replied with wry amusement. *So try not to get into trouble this time.*\n\nHis matriarchs shared their laughter with him, a lovely sound that brought a smile to his face as he entered the Officers' Lounge. Sakura was waiting alone by the bar and gave him a nervous wave as he entered the room.\n\nJohn walked over to join her and leaned in to kiss her cheek. \"Just relax, honey, you've got nothing to worry about. Jack's going to think you're lovely.\"\n\nShe blushed in embarrassment and gave him a grateful smile.\n\n\"How about a drink to calm you down?\" he suggested, walking over to the drinks cabinet. \"Any cocktails you like?\"\n\n\"Umm... can you make a Strawberry Daiquiri?\" she asked tentatively.\n\n\"Coming right up,\" John replied with a grin, reaching for a bottle of rum and a tray of ice.\n\nSakura watched him in fascination as he tipped the ingredients into a blender, adding a pack of the frozen fruit that gave the cocktail its name. The grating whir reverberated around the room, drowning out Calara's greeting as she arrived with her guests. \n\nJohn deactivated it to end the raucous grinding, then beckoned the new arrivals over. \"Hey everyone. What would you like to drink?\"\n\n\"I'll have whatever Sakura's having!\" Calara said enthusiastically, eyeing the bright red concoction in the jug.\n\n\"I'd like one as well please, John,\" the blonde accompanying her said, greeting him with a smile. She hesitated a moment later, suddenly looking unsure of herself. \"Is it alright if I call you by your first name? Mateo said it was okay...\"\n\n\"Of course,\" he said, pouring her drink into a glass. \"I'm very glad you could join us, Emily.\"\n\n\"I was ordered to by an Admiral... I could hardly refuse!\" she gushed, giving him a look filled with gratitude. \"Thank you so much, by the way. I couldn't believe it when Mateo told me you were transferring me so we could stay together.\"\n\n\"You're quite welcome,\" he said, returning her smile. \"You can thank Mateo for that. It looked like he was having second thoughts about the promotion and transfer if it meant being separated from you.\"\n\nShe turned to stare at her boyfriend in astonishment. \"Really?!\"\n\n\"I love you, Em,\" he replied diplomatically, opening his arms to her. As she rushed to hug him, Mateo mouthed \"Thank you!\" to John over her shoulder.\n\n\"What would my future brother-in-law like to drink?\" John asked, as he poured out Strawberry Daiquiries for Calara and Sakura.\n\n\"Just a beer would be great, thanks,\" Mateo replied gratefully.\n\n\"I've got lager, bitter, and Trankaran ale.\" When Mateo's eye lit up at the latter, John handed him a bottle. \"Here you go.\" \n\n\"Cheers!\" he said, raising the bottle and taking a big gulp.\n\n\"What can I get you, Jack?\" John asked, gesturing to the spirits in the well-stocked bar. \"I'm afraid I don't have any of that amazing Jericho beer...\"\n\n\"That's alright, I could use a stiffer drink,\" Calara's father said, smiling when he spotted the distinctive-shaped bottle of McGregor whiskey. \n\nJohn put two tumblers on the bar, added some ice, then poured out the rich amber liquid. \"There you go.\"\n\n\"Very nice,\" Jack said appreciatively after taking a sip. \n\nLeaving the bar to join them, John nodded towards the nervous raven-haired beauty standing beside him. \"I don't think you've met Sakura before. She joined us a couple of months after our visit to Jericho.\"\n\n\"We haven't met, but your reputation precedes you, Sakura,\" Jack said, looking at the Asian girl in admiration. \"I saw your interview on TFNN; what you accomplished in the Battle of Terra was truly remarkable.\"\n\n\"Thank you so much for rescuing Unity City,\" Emily said, reaching out to touch Sakura's hand in a simple gesture of gratitude. \"My uncle and aunt live there, and you saved their lives.\"\n\nMateo nodded, suitably awed. \"I watched that combat footage a dozen times and I still can't believe you stormed an entire fleet of Praetorian battleships single-handed... and wiped them all out! That was the bravest thing I've ever seen.\"\n\nSakura blushed and said shyly, \"When I saw that the Kintark were bombarding innocent civilians, I didn't really stop to evaluate the risks involved, I just acted.\" She smiled self-consciously at the Latina who was standing beside her father and continued, \"But Calara far eclipsed me in that battle.\"\n\nThe brunette waved away the attempt to redirect everyone's praise. \"You're far too modest. I had no spare fleet resources to engage the Praetorians, so if you hadn't intercepted them, they would've been free to level the capital. After they were finished with Terra, they would have rejoined the armada and hit the Federation battle lines; you made a huge difference eliminating that fleet and saved hundreds-of-thousands of people.\"\n\n\"Hey! Sorry I'm late!\" Dana blurted out, interrupting them when she rushed through the doors. \n\nSakura sighed with relief now that the attention had shifted away from her and firmly onto the exuberant redhead.\n\nJack leaned over to whisper, \"My son was right; you were incredibly brave. I know your parents would have been very proud of your actions that day... I certainly was.\" \n\n\"Thank you,\" she murmured, welling up at his kind words.\n\nDana gave their guests an embarrassed wave as she joined them. \"I was all ready to come and say hi, but Alyssa said to wait a few minutes because you were settling into your rooms, then I got distracted with a project I was working on and I forgot the time. I'm such a bonehead... sorry!\""
    ],
    "authorname": "Tefler",
    "tags": [
        "cum inflation",
        "psychic",
        "swallow",
        "teenager"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-129"
}