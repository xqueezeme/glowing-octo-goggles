{
    "title": "Carly's WMAF Fantasy Pt. 11",
    "pages": [
        "I hope everyone enjoys chapter. I'm working on something else that I hope everyone likes as well. Don't worry, I still have plenty planned for this story still, though. Thanks again for reading, voting and leaving comments and messages. It means the world to those of us that write.\n\n*****\n\nCarly just dropped quite the bombshell on me. My mind sort of locked up as I looked at her. I registered the emotional rainbow she traveled in front of me but wasn't really able to process much of anything. Carly was pregnant. Pregnant! I experienced a shameful flicker of anger followed by fear and panic. But when I saw my own terror mirrored in her face, not for the baby but for me, my emotional roller coaster settled down and I knew what I needed to do. \n\nI smiled and kissed her, \"It's mine, right?\"\n\nShe smiled and punched my shoulder, \"Of course it's yours, asshole... Master... Jay... Of course... I haven't slept with anyone else in almost six months.\"\n\nThere was a part of me that wanted to confirm that. I'd had girls cheat on me before... who hadn't? But something about the way Carly said it just seemed so sincere. I suppose there were other opportunities to worry about that problem, though. \"And do you want to keep it?\"\n\n\"Yes... yes I do... I want your baby and I've got your baby and please don't make me... \" she started crying again. \n\n\"Make you?\" I asked before realizing, \"Never... I'd never MAKE you... \" I stopped, unable to phrase the words I wanted to say. \"Were you worried I'd be angry?\"\n\n\"You were for a moment. I saw it,\" she said smiling through her tears.\n\n\"Only for the briefest of nano-seconds. But then I realized that I loved you and... \" I trailed off, realizing what I'd been about to say and stopping myself.\n\nCarly realized instantly, \"Oh my God... Jay... yes... Of course, I love you too. Absolutely. A hundred percent. A thousand percent. Every bit of me. Oh God... I'm sorry... \"\n\n\"I had Friends flashbacks for a moment, 'I said, 'I Love you...' \"\n\n\"And she said, 'Thank you',\" Carly finished and we laughed with each other, breaking the tension.\n\n\"I'm just glad to finally say it and hear it. And we'll figure out the baby thing. It'll change things though,\"\n\n\"No,\" she said firmly, tone shifting.\n\n\"What do you mean?\" I asked. I realized that she hardly ever said the word around me. I'd kind of gotten spoiled and didn't really like hearing it.\n\n\"You promised. Nothing changes.\"\n\n\"But...\"\n\n\"No... that's the condition. I love you, Jay. But I won't be happy with some vanilla, suburban sex life. I want this. Everything you've given me. And I want you to have more. More girlfriends. More conquests. Even more children... someday.\"\n\n\"But...\" I started again but she cut me off.\n\n\"And so help me if you start treating me like a respectable girl instead of a chink, slant, yellow asian fuckslut whore... Well... I'll be pissed and resentful.\" She was practically yelling at me as we sat there in her car. Her body quivering with rage.\n\n\"Are you sure?\"\n\nShe laughed, \"Yes. God you big dope. Yes! If anything, being pregnant is a reminder that I'm finally serving my purpose as a breeding fuckhole for a white man. You know what my reaction was to the positive test?\"\n\nI shook my head, \"I went and fucked myself with three dildos for about an hour, edging so hard that I thought I'd lose my mind. I nearly called you and begged permission to cum but I didn't want to bother you while you were fucking someone.\"\n\nIt was my turn to laugh, \"Giving my little bimbo girlfriend permission to cum is never a bother.\"\n\n\"Thank you, Master. So please. Please promise me that nothing changes.\"\n\n\"If that's what you want, slut. I'll prove it to you this weekend. Tell me about your roommates.\"\n\nShe shivered slightly in arousal, realizing why I was asking. \"I have two. Natalie and Alex. Natalie is about average height, athletic, nice tits, blonde and half-asian.\"\n\n\"Half-asian blonde?\" I asked.\n\nCarly nodded, \"Yeah. Japanese and black. She bleaches it platinum blonde. You'll love her. Very exotic. She works as a professor at Harvard.\"\n\n\"Oh yeah? What's she teach?\"\n\nCarly smirked, \"Gender studies. But don't worry, Master. She thinks it's all bullshit.\"\n\nI pondered that for a moment before pressing on, \"And the other one... uhh... Alex?\"\n\n\"Yeah... she's a little shorter. Kind of a goth look. She's great too. Really cute. Also an asian mutt.\"\n\n\"I'm sensing a theme.\"\n\n\"No. No theme, Master. Just girls I've been friends with a long time. Alex is actually part of the reason I have this fetish. Her dad is Norse-Irish and I always get a little turned on seeing her parents. He played rugby and he's a big guy. And he just towers over everyone. Always kind of turned me on.\"\n\n\"You have a crush on your friend's dad?\"\n\n\"Not really. He's kind of a dick. But the visual is... impressive.\"\n\n\"So is Alex like you?\"\n\n\"Maybe... \" she said coyly. \n\n\"What aren't you telling me?\" I asked. \n\n\"Let's just say that I've gotten drunk with these girls enough that I've heard a lot of true confessions. They're gonna be very receptive if you play your cards right. But I kind of want to watch you do it. Seduce them right in front of me. Please?\"\n\n\"I'm so hard right now,\" I said trying to adjust myself to be a little more comfortable. Carly simply smiled and licked her lips. I reached over and pressed my hands into her crotch, eliciting a gasp from her. \"You said you want nothing to change? You want me to keep treating you like a cheap fucktoy?\"\n\nShe nodded and moaned. \"Answer me you dumb bitch,\" I snarled into her ear as I pressed on her hot cunt.\n\n\"Yes, Master. Remind me everyday of my place. \" the mixture of fear, helplessness, submission and, above all, lust in her voice was intoxicating.\n\n\"What would be a wonderfully humiliating thing to do to you after not fucking you for a couple weeks and meeting your roommates for the first time?\" I asked sliding my fingers up and down the crease of her pants.\n\n\"Fuck me and make me scream humiliating things that they can hear? Make me show them what a pathetic little Asian tramp I am for my white God.\"\n\n\"MMmm... that's one way to go. But I was thinking the opposite.\"\n\n\"Opp... opposite, Master?\" she said in confusion. I continued working against her clothed cunt, enjoying her squirming thrusts of desperation.\n\n\"That's right, slut. I'm NOT going to fuck you tonight. I'm going to seduce them right in front of you. So they'll see EXACTLY how pathetic you are.\"\n\n\"Fuck yes... Master... do it... Oh God... I'm so close... Please, Master... Please...\" she begged. \n\n\"If you cum now, I won't be fucking you until Sunday slut. You won't get my cock tonight or tomorrow.\"\n\n\"Not tomorrow... either... Oh fuck... Master... but... but...\"\n\n\"Which is it now? Cum now or fuck tomorrow,\"\n\n\"Whatever you want, Master. I don't make choices. Only my Master makes choices. All of them. Forever.\"\n\n\"Good girl, then cum for me right fucking now, whore,\" I said and she exploded. Her screams filled the car and I had to clamp her mouth lest a nosy neighbor report the likely murder that seemed to be happening in the car. She came hard for a solid minute before finally coming down from it. \n\n\"That was so good, Master. Thank you for making that choice for me. My dumb little bimbo brain couldn't process it,\" she said with a smile. \n\n\"You're welcome, slut. Now, are you ready to come upstairs and help. You'll be my consolation prize if I strike out with your roommates tonight.\"\n\n\"Yes, Master. My pathetic cunt is definitely not as good as theirs. You should only have the best pussy. Please leave me empty tonight. I'll help make sure my roommates are submitting to your cock the way proper half-breed chinks should.\"\n\n\"You're fucking pitiful, bitch,\" I said to her as I took my hands away. \"I can't wait for them to see how pathetic you are. Do they know?\"\n\n\"No, Master. Nobody knows.\"\n\n\"They'll find out tonight when you're kneeling on the floor and they see all the things you've written on yourself this week.\"\n\n\"Yes, Master.\"\n\nCarly buttoned up her pants and we walked inside. My relatively small amount of luggage and backpack the only things in tow. We let ourselves in and I was greeted with the sound of music and laughter along with a faintly rhythmic thumping. Carly literally face palmed, \"They're doing it again?\" \n\n\"What?\"\n\n\"Just watch. Oh my God, they're dorks. And I say that knowing that I'm a dork who makes games for dorks and fucks a giant dork!\" she said with a snicker. I walked down the apartment hallway towards the noise. I started to make out singing and more laughter. Someone was singing the new Ariana Grande song. And singing it badly. \"Just remember, they're hot as fuck, Master,\" Carly whisper shouted over the noise. \n\nI glanced around the apartment. It looked like a typical college apartment. Sparse furniture. Limited pictures. Kept a lot cleaner than any of my places but really not very \"homey\" if you'd asked me. Generic beige carpet and beige walls. Carly took my bag from me and went into one of the bedrooms but gestured for me to continue on. As I walked further down the hallway, it opened up into a pretty spacious living room and I realized what was happening. \n\nI was greeted with the sight of a super hot blonde dancing on a Double Dancing Rotation dance pad. I could only see the back of her but her ass was mesmerizing as it swayed back and forth with the club dance moves. She was wearing a tight pair of white yoga shorts that hugged every curve and crevasse of her ass. They almost seemed semi-translucent from her sweat. Her athletic frame and mocha skin were smooth and flawless, glistening with the moisture of exertion.\n\nAs hot as she was, I managed to tear my eyes away and look at the other girl. A pink haired girl who was swaying her hips side to side while she played a guitar and caterwauling into a mic stand. They'd apparently synced up 2DR and Band Hero so they could play them together. Each TV streamed one of the games.\n\n\"Uhhmm... Hi... I'm Jay,\" I said. Natalie, the blonde, yelped with a startled jump while Alex simply turned around and walked towards me.\n\n\"Jay! It's so great to meet you!\" she said as she gave me a quick hug before looking back at me, \"Carly can't stop talking about you. Jay this... Jay that. All good, in fact... too good, frankly,\" she said with a wink. \n\nNow that I had a chance to look at her, I was able to take her in. A little shorter than Natalie and thinner, she had slightly bigger boobs and was quite proud of them. She had a whole, semi-goth thing going but more the vintage kind of goth than the \"I'm dark and foreboding\" type. She was wearing a short, flared black dress that contrasted markedly with her pale skin and pink hair. Her legs were encased in fishnets and the choker around her neck both immediately played to my personal fetishes. My eyes raked across her ample cleavage and I had to pull them back to her face. Her Asian features were subtle. She had large eyes that only hinted at her Asian heritage and a slightly daintier nose. But it was really subtle and I probably wouldn't have noticed if Carly hadn't mentioned it. The most striking thing about her was the pale white skin she had. I could already picture the contrast of my tanned skin against hers. Or, for that matter, Natalie's even darker complexion as they went down on each other. \n\nI had to work hard to suppress the growing erection. \"You must be, Alex?\" I said extending my hand. \n\nShe laughed and took it, \"What gave it away? Pink hair or black dress?\"\n\n\"Carly didn't mention the pink hair. Or how hot you are,\" I said with a smirk. I figured if I was going to execute on my threat to Carly, I should start now.\n\n\"Oooh... a player,\" Natalie said as she walked up to me. I noticed she swayed her hips more than was strictly necessary. The blonde's asian features were much more pronounced which was odd given her appreciably darker skin. The nearly white, platinum blonde hair was the icing on top of the most unique cake I'd ever seen. Where Alex was Asian only in the most subtle of ways, Natalie was doing everything she could to scream, \"Exotic woman!\"\n\n\"Nice to meet you Natalie. Carly's told me a little about both of you but I feel like you guys have me at a huge disadvantage.\"\n\n\"Well that's where we like our men. Disadvantaged,\" Natalie said with a smirk.\n\n\"Yeah? That seems like it would take all the fun out of things,\" I replied as I sat down in the middle of the couch. \n\n\"Been in our house two minutes and you're already manspreading on our couch?\" Natalie said but with less venom than I expected.\n\n\"You're not in class, Nat. Leave it be.\"\n\n\"Sorry... reflex... Being around all those entitled brats all day really affects your worldview sometimes. You want a drink, Jay?\" she said as she walked into the kitchen. \n\n\"Diet something if you don't mind,\" I said. Alex shot me a funny look, \"I don't drink.\"\n\n\"Mind if we do?\"\n\n\"I have no moral objection. Go ahead. I just like to be in control. But if you want to get drunk around a stranger... \" I said with a grin.\n\n\"Hey some of my best times have been getting drunk around strange men,\" Alex said as she popped open a beer and joined me on the couch, sitting just a little too close. Just then, Carly walked in and joined me on the couch, sitting on the other side from Alex. She was still wearing her hat, for obvious reasons and Alex commented, \"What's with that hat?\"\n\n\"Ohh...,\" she said, embarrassed, \"Just trying a new look.\"\n\n\"I think they're cute,\" I said and gave her a peck on the cheek. Natalie came back with a can of Diet Coke and a beer for Carly and Alex. I grabbed both of them and unscrewed the top, handing one to each of the beauties next to me. \"So, Natalie? Gender Studies but you don't believe it?\"\n\n\"No... I think Gender Studies is incredibly important. Just like studying race relations is. I just dislike a lot of the people the field attracts. I get to see a lot of people with a lot of axes to grind every day and it gets old real fast.\"\n\n\"What was your thesis on?\" I asked, genuinely curious. It wasn't often you talked to someone from this field with such an outside-of-the-box worldview.\n\n\"Historical gender relations in cross cultural settings. Power dynamics through history,\" she said, as she stared at me. I felt like she was studying me at the moment. Perhaps she just had an academic, curious mind. But I felt like there was more.\n\n\"So like... the historical relationships between black men and Asian women?\" I asked gesturing at her. \n\n\"Black woman and Asian man in my case... But yes.\"\n\n\"Interesting. Given my current relationship with Carly, I'd be really curious if your paper had any useful insights into the historical interactions between white men and Asian women.\"\n\n\"Well... It's historically been one of dominance,\" she said carefully. \"White men have historically dominated many of the world's races. Asians. Blacks.\"\n\n\"And has that persisted to present day? Do modern day relationships have this aspect of dominance?\" I probed. \"What do you think, Carly? Be truthful with your roommate.\"\n\nCarly's eyes were wide as she stared at me. She gulped and spoke with a waiver of trepidation and excitement, \"I think... some people... like those dynamics to be present in their relationships.\"\n\n\"Interesting. Carly, why don't you sit on the ground so that your roommate can sit on the couch. After all, it's your guest that's displacing her.\"\n\n\"No need...\" Natalie started but Carly was already moving wordlessly to sit at me feet. She sat on her heels and looked up at me obediently. \"Oh... thanks, Carly,\" she said as she sat her hot little ass down next to me. Her lithe, sweaty body was just inches from me.\n\n\"And Alex, what do you do?\" I asked, turning to her and letting my other arm down next to me resting against Natalie's knee. I felt her flinch but she didn't move to break the contact. That wa a good sign.\n\n\"Me? I'm a... uhh... I'm a dancer,\" she said with a bit of a blush. \n\n\"Like in movies? Ballet?\" I asked. \n\nShe shook her head and grinned. \"I'm a stripper,\" she said.\n\n\"Carly, your roommates are an anti-feminist gender studies professor and a stripper?\"\n\n\"Hey... I'm not anti-feminist,\" Natalie said feeling the need to defend herself.\n\nI turned to her, \"Oh, I think you are. Tell me... which power dynamics do you find the most interesting? Is it white men and black women? Or white men and asian women?\"\n\nShe gulped a little, \"Uhmm... Carly... your boyfriend is a little... uhh... aggressive, isn't he?\"\n\n\"Oh no... he's very aggressive,\" she said and nuzzled up against my leg. \n\n\"I'm gonna go get changed into something more comfortable,\" Alex said and excused herself. Her skin was flushed and I smiled at her retreat.\n\n\"You didn't answer the question though, Natalie,\" I turned back to her yet again, resting my hand lightly on her knee, \"The history of slavery in America is fascinating. And it was almost cliche for male slave owners to have affairs with their slaves. Even breeding with them. But something similar happened in parts of China and Japan too. It was a little different though, right? The Asians bred themselves into submission, encouraging docility as part of a quiet eugenics program to please their colonial masters.\"\n\nNatalie nodded and her eyes were a little distant. I flicked my sight down to Carly who was smiling happily and squirming on the floor. Natalie shook her head as if to clear her mind, \"I would hardly call the rapes of black women affairs. It was far less consensual than that in most cases.\"\n\n\"Most? But not all?\" I asked, leaning a little closer to her.\n\n\"Well... there were probably some relationships that had genuine feelings. But we don't know and the power differential made it impossible to tell. It's like saying that a female prisoner can fall in true love with a guard. Or a high school student with a teacher.\"\n\n\"Interesting... that makes sense. So there'd have to be no societal power dynamic at play. No legally enforced one. Just a consensual gift of... power... and dominance,\" I said, watching her intently. \"But isn't that what happened in Asia? Asians bred their girls to be gifts for the rich white traders. Exotic beauties became a natural resource.\"\n\nNatalie stopped herself from nodding and again tried to rally, \"Societally it was consensual but not for the individual women.\"\n\n\"Maybe. Maybe not. After all, if a woman is taught from birth to believe she's been bred for a certain purpose, then maybe the choice she's making is exactly what she wants to choose. Implying otherwise is like saying I was forced to go to college because my parents raised me with that goal in mind.\"\n\n\"Sure... I guess... I need to... uhmm... think about that more,\" she said as she took a sip of her beer.\n\n\"Bring me another Diet Coke,\" I said casually. She didn't even think twice about doing as I told her. She walked into the kitchen and I stared at her ass again. An ass that I knew I'd be fucking this weekend.\n\nCarly sat up onto her knees and gave me a thorough kiss. \"I'm so wet, Master. Watching you work gets me so hot. I hope you fuck them all weekend, Master. She was bred to submit, Master. She wants it. It's in her blood.\" She kissed me again and I stroked my fingers across her rock hard nipples causing her to gasp and squirm.\n\n\"Be good, slut.\"\n\n\"Yes, Master,\" she whispered as Natalie walked back in. She handed me the drink and I noticed she'd switched to water.\n\n\"Why'd you switch to water?\" I asked, genuinely curious.\n\nShe looked at me, her eyes raking across my body in a bit of a reverie before saying, \"I felt like the beer was going to my head a bit. If we're going to talk about this, I want to be clear headed.\" Her eyes twinkled mischievously. I really like smart women. \"I think I found the flaw in your argument though. By and large, neither the asian female/white male nor the black female/white male power dynamics were jointly consensual. There were grave consequences for the females almost always. Often literally.\"",
        "I put my hand on her knee again and looked her in the eye. \"I 100% agree with you.\"\n\n\"You do?\" she seemed surprised.\n\n\"Of course! I would never condone or approve of what happened it was horrible,\" I said, making my offense at both the act and her own assumption known. Perhaps I \"doth protested too much\" but I knew I was close. I squeezed my hand and worked it slightly up her thigh. \"But the damage was done in some cases. Natural selection took over. Black women were bred for strength, submission and ability to breed large families. Asian women were bred for submission, smaller stature and beauty. Those traits show up in their descendants. Particularly in Japanese women.\" \n\nShe swallowed and bit her lip slightly. In my peripheral vision, I saw Carly squirm some more and I knew she was thinking the same thing I was, \"Got her.\"\n\n\"I'm Japanese...\" she barely whispered.\n\n\"Are you descended from slaves?\" I asked as I rubbed her thigh. Higher and higher. She could only nod.\n\n\"Well then you must have seen it. Maybe you even see some of those traits in yourself? You're certainly strong and sexy,\" I told her in a matter-of-fact tone. \"And now you're born at a time when you don't have those legal requirements.\"\n\n\"That's what I tell my students. They're lucky to be born free,\" she said.\n\n\"But they also have the freedom to give into their urges. No coercion. No legal requirements. A perfect... free... submission if they want.\" Her eyes widened as she realized what I was saying but I continued, \"Isn't that right, Carly?\"\n\nCarly knew what I wanted, \"That's right, Master. I'm free to submit to you. To give in to the submissive asian I've been bred to be.\" \n\nNatalie gasped and I leaned forward, putting my lips to her ear and breathing into them while also stroking far enough up her thigh I could practically feel the burning heat radiating from the empty hole between her legs. \"You can give in too. You can choose to submit.\"\n\n\"I... oh... I... Uhmm...\" Natalie stammered, stood up and practically sprinted to her room.\n\n\"I hope I didn't push too far, babe,\" I said as Carly simply sat there and stared at me from her kneeling position.\n\n\"You were perfect, Master. She'll be pounding herself with her big white dildo she thinks we don't know about. I guarantee. And she clearly wants to submit. She's conflicted, but she'll come around. May I suck your cock, Master? It must be ready to burst. I promise to just keep it hard and ready for your new women.\" Carly looked up at me with dark, needful eyes. Her lips twitched and puckered involuntarily, almost as if she was already imagining my shaft penetrating her throat.\n\n\"You may, slut. But you better force my cock all the way down your pathetic throat. Choke and gag on it while I imagine fucking some nice mixed race pussy instead of your miserable mouth. Oh, and take your hat off. It will only get in your way.\"\n\nShe gave a whole body shudder of excited embarrassment then smiled as she pulled off her hat and tossed it, forgotten, across the room. She licked her lips and leaned forward, reaching for my pants to unzip them, \"Of course, Master. Feel free to hold me down and degrade me as you see fit, Master.\"\n\nShe quickly got to work and obediently began gagging herself on my cock. She made erotic little choking and gurgling sounds and every time, I could feel my hard dick surge and fill her throat. I placed a hand on her head and controlled the pace, basically using her mouth to jerk myself off. After a couple minutes, I heard a soft click of heels on hardwood and I opened my eyes. Alex was standing there watching us. She was wearing a slutty secretary outfit like you'd wear for halloween along with 6 inch white platform heels, fishnet stockings with obvious garters and her hair in double pony tails. \n\n\"You two are already busy, I see?\" she said.\n\nCarly was startled and began to pull off but I held her down. She moaned on the thick cock penetrating her mouth and filling her throat. \"I thought you were changing into something more comfortable?\" I asked, making no effort to hide Carly's ministrations. \n\n\"I wear stuff like this every day. Why wouldn't I be comfortable in it?\" she responded with a little shimmy of her hips.\n\n\"Your stripper roommate makes a good point, Carly. She seems like she knows herself pretty well,\" I said as I yanked Carly off my cock. Her mouth stayed in a \"O\" as drool and pre-cum stretched messily from my shaft to her lips. \"Do you think she's ready for your little secret?\"\n\nCarly's whole body shook with terrified arousal before she was able to compose herself just a little. She swallowed and nodded meekly, watching me with big doe eyes. I released my grip on her hair and she instantly plunged back onto my rock hard dick. \n\nAlex put on some music and started slowly swaying her hips, \"What's Carly's 'little secret'?\" she asked. Her voice was husky and full of arousal. I didn't answer right away, instead enjoying the show as she swayed absentmindedly to the music. Alex watched my eyes and began dancing more pronounced and sensually. Her fingers traced along her skin as she moved to the soft rhythm of the nameless R&B song playing in the background. I watched for a bit, maybe a minute or so, feeling Carly work my cock over as it stiffened in her mouth because of Alex's gyrations.\n\n\"Carly has... uhmm... let's say 'special requirements' when it comes to sex,\" I said. Carly simply moaned an affirmation while she continued to bob up and down on me as if her life depended on it. I felt her lips seal as she sucked me in, swirling her tongue around my shaft and engulfing the head before repeating the process with slavish devotion.\n\n\"Oh yeah?\" she said as she shook some more. She turned her back to me and started unbuttoning her blouse.\n\n\"Alex is taking her top off, slut,\" I told Carly and she moaned again, this time in pure lust. \"I think she's trying to seduce me. Can you imagine how pathetic she thinks you are that she thinks she can seduce a man away from a bimbo giving a blowjob?\"\n\nI was greeted by another moan and this time, I grabbed her head and yanked it up and down quickly three or four times on my cock. \n\nAlex turned around and her eyes were on fire with lust. Underneath her shirt she was wearing a sexy, strappy bikini looking ensemble that barely covered her nipples. Her breasts were those absurdly fake bolt ons that strippers have. But they were top quality, only their absolute defiance of gravity gave them away as anything other than real. The effect of everything was to give her an almost anime like quality to her look. I could see why she was a successful stripper. She ran her hands up her side and cupped those beautiful tits, almost displaying them for me before continuing with her increasingly erotic dance. \"So that's the little slut's kink? She likes being humiliated?\" she asked as her eyes bored into mine.\n\n\"Not just that. Carly believes that she is bred for sex.\" Alex paused in her dancing for a second, confusion written on her face. I paused for affect before continuing, \"The little slanty eyed chink thinks gooks, nips, and really all yellow cunts were bred for white cock.\"\n\nCarly's reaction was borderline orgasmic. She groaned loudly around my cock, filling the room with a lusty roar of affirmation. Her whole body quivered and I thought she might have actually achieved the rarest of feets. An orgasm without being touched even a little. I could see her face blushing from the humiliation. Knowing that she'd just crossed a line with her roommates and they'd never look at her the same. My eyes flicked back to Alex's face, trying to judge if I'd pushed too far with my comments. I was acutely aware of the absurdly racist characterization I'd just made. And while I could rationalize it in my mind that I was simply articulating Carly's fetish, I knew as I said it that I ran the risk of screwing things up with Alex and maybe even Natalie too. \n\nAlex's eyes flared and she spun around again, shaking her ass at me seductively. She knew she was able to tease a man well and she was doing just that. I was having to exert quite a bit of willpower because the combination of a fantastic deep throat fucking and the pink haired stripper's dancing was making an imminent orgasm pretty easy. Her thumbs hooked into her skirt and she started to pull it down, stopping before it cleared her tight little bubble butt. \"And what do you think?\"\n\n\"I think some girls think that. And it gets them hot. And if that means I can sink my cock into a tight, willing hole then I'm all for it.\"\n\nShe must have liked my words, at least a little, because she pulled on the skirt just a little more and it popped around her ass, revealing even more of her magnificent body. It was then that I realized she had a whole series of tattoos as well. I'd been too mesmerized by her perfectly formed tits and seductively swaying hips to take notice. Some of them were in Kanji, some in English, some just pictures. The most prominent one was something written up her spine in Kanji, but she also had a picture of a rose on one of her ass cheeks and a butterfly on the other. A pinup girl holding a dildo was on her left shoulder blade while the words, \"Not Cheap\" adorned her right. My eyes trailed down and the only other one I noticed was on her calves. It was upside down and I had to study it for a moment before I realized one said, \"Hold\" and the other said \"These\". \n\n\"And what do you think, Jay?\" She asked, shaking me from my revery. \"Are all Asian girls bred to be little fuck sluts for your big white dick?\" Her hips continued to sway but it was really hard to read this girl. Especially while she kept distracting me in my already slightly blood deprived state. \n\nI didn't say anything at first, trying to find the right angle. She was obviously communicating her desire and, I was pretty sure, that I couldn't screw it up at this point. After all, the girl was stripping for me while her roommate sucked my cock. The question was, what would get her hottest? What would push her buttons the most?\n\n\"Why do you strip, Alex?\" I said changing the subject abruptly, hoping to learn a little more. She spun around and I was greeted to the full view of her barely clothed body. The stringy outfit barely covered anything. Her obviously shaved cunt was fully revealed beneath the thin, tight, purple fabric. Alex continued to move her hips rhythmically as the song changed to a faster tune. As I watched, I realized that her nipples were definitely pierced. She had another tattoo along the outside of each of her big fake tits. \"Tight\" and \"Holes\". And another tattoo right below her belly button that said something in Kanji with an arrow to her cunt below it.\n\n\"I like watching men get hard for me. I like knowing that they're imagining fucking me and not their wife... or girlfriend,\" she said meaningfully. Her smile promised wicked naughtiness and once again my cock surged into Carly's mouth. \"I like being the person bringing them that pleasure. Knowing that all those men will get off to the image of my thrusting hips or gaping cunt,\" she said. She snaked a hand down her body and rubbed her cunt through the thin material. \n\n\"Untie it, Alex,\" I said simply to her. I saw her swallow slightly but she smiled and reached back to pull on the string. As she did, she stared me in the eyes. Her look smoldered and woke something deep in me. I felt a real need to make her mine in that moment. \"Do you ever do more than stripping? In the private rooms?\"\n\nHer outfit, having had the pivotal knot untie, fell around her, revealing her impossibly white, flawless, smooth skin in its entirety. I also saw her pierced clit sparkle. I could tell she was on fire. She responded, \"Only sometimes. My club is pretty good about not forcing it. Some places aren't so nice.\"\n\n\"So you get to pick and choose who you give pleasure to?\" she nodded, \"Who you blow?\" another nod. \"Who you fuck?\" another nod and this time she closed her eyes and really started dancing to the music in earnest. \"Do you like being a whore for them, Alex?\"\n\n\"Yessss,\" she moaned as her hands roamed across her body. \n\nI yanked Carly off of me and flung her away before reaching down to pull a twenty out of my wallet. \"I like cheap, trashy whores Alex. You can have this twenty if you give up your holes for me this weekend. All of them.\" \n\nShe nodded as if in a daze and walked towards me, oblivious to my panting girlfriend who was looking on with absolute reverence and adoration. \"To answer your question from earlier, I don't think all Asian girls are bred for white cock. I think all women just want to spread their legs and be whores though,\" I said and I pulled her to me.\n\nShe moaned, \"Yessss\" as my hands played with her ass and I flicked my tongue across her pierced nipples. Teasing them. \"I've had them a long time. You can be rough. I like it rough,\" she said as I let my teeth pinch the tiny bud, forcing a gasp from her. She straddled my hips, her blazing cunt rubbing against my cock as she humped it, getting her clit worked up even more as I felt the little ring grind against my shaft. When she leaned down and kissed me, yet another piercing was revealed in her tongue. I'd never kissed a girl with a pierced tongue before and it was... odd. Kind of distracting, frankly. She took the 20 from my hand and flung it to the ground before grabbing my cock. Alex turned her gaze over her shoulder, searching for Carly. Her eyes fell on my obediently kneeling girlfriend and she got her first glimpse of the words scrawled across her forehead. Her voice dripped with pitying disdain as she said, \"I can't believe you'd let someone else fuck this magnificent specimen.\".\n\n\"I don't let him. I encourage him. I want him to fuck other sluts. I trust him. He's my Master and deserves only the best,\" she said solemnly. As if to prove it, she scooted closer, giving my cock a slow lick of her tongue before guiding it into Alex's tight, wet cunt. \n\nI'm not sure whose groan was louder, mine or Alex's as we both exalted in the sensation of my cock forcing its way into her incredibly tight cunt. She lowered herself gingerly, taking every inch slowly and I could see the hot little stripper sweating from the effort. Finally, she let gravity take over and dropped the last inch, engulfing me fully with her slick, small hole. She screamed, \"Yes!\" in a triumphant shout and ground her hips into me, enjoying the sensation of complete fullness. \"Fuck. I haven't had a cock this good in so long.\" We fell into a rhythm, both of us leaning back as she supported herself with her hands on my knees and ground her hips into me. It was feverish but also indulgent knowing that she was getting close to getting herself off.\n\n\"If you cum before I do, you're nothing but a cheap, trashy slut, Alex. Is that what you want?\"\n\n\"Ungh... unghh... \" she grunted. \n\n\"Tell my Master, slut. Tell OUR Master,\" Carly said meaningfully. She had her hand between her legs and was playing with her own leaking cunt.\n\n\"Fuck yes... If that's all it takes I'm going to flood this big, thick, white cock with all the cum juice it wants. Make me a cheap whore. Make me a trashy little bimbo bitch for you. I'll fucking worship you if you fuck me like this. Call me whatever fucking names you want... Master!\" she shouted as she came hard, screaming out an orgasm that was likely to get a noise complaint from neighbors. I leaned forward with a snarl and wrapped my arms around her back, lifting her lithe dancer body I switched our positions so that I was kneeling in front of her as she spread her legs on the couch. Grabbing her ankles, I pushed them up above her head wide and far and started hammering her cunt harder and harder.\n\nI gripped her legs right where the tattoos told me too, \"You marked yourself this way, is this what you like? Forced to be spread and impaled on a big cock?\" I said taunting her as I slid my cock slowly inside her drenched cunt.\n\n\"Fuck yes. I love it. Just like this. Please pound me though... don't tease me. Take me,\" she said. I pulled out and didn't slide in again until she whimpered pitifully. Broken. I rewarded her by ramming my cock hard into her.\n\n\"You're mine now, cunt. This cunt. This mouth. This ass. You gave it all up for twenty dollars. Just like a cheap, gook, street walking, gutter slut,\" I punctuated each insult with a hard thrust into her gushing snatch. \n\n\"Yes, Master. Take her. Make her yours. Own her. Break her,\" Carly said behind me, chanting the words in an almost religious way. I could feel my own orgasm surge.\n\n\"Are you on the pill bitch?\"\n\n\"No Master,\" she said meekly but offered no more as her eyes rolled into the back of her head and she came again. I yanked my cock out and turned around to a surprised Carly who took the first blast of my cum to her forehead. I stroked out three more thick streams of spunk, coating her face. \n\n\"I may breed you some other time but not tonight, slut.\"\n\n\"Yes, Master,\" she said meekly. \n\n\"And you won't get my cock in your cunt the rest of the weekend.\"\n\n\"That's fine, Master. I love taking it in the ass even more. I'm weird that way.\"\n\n\"And how rough do you like it my new little toy?\" I asked as I pinched her nipples, giving them a little twist and pull as I did. \n\nShe responded by arching her back, thrusting her tits at me and making a high pitched squeal of pleasure. \"As rough as you want. I like it dirty. I like it rough. I like anything that gets your cock hard as steel, baby,\" she purred as she stroked my semi-hard cock. I reached out with my left hand and grabbed her throat, gently running my thumb along her skin. She lifted her chin, fully presenting her neck to me in an unmistakeable signal of complete surrender.\n\nI pushed her down into the couch again as I loomed over her. My free hand swatted at her big fake tits, smacking them back and forth, quickly turning them red. I slapped her inner thigh too, bringing red angry welts to the skin as I enjoyed the contact of my hand against her firm, well muscled legs. When she was practically panting with lust again, I gripped her hair tight and threw her to the ground with Carly. Picking up a pair of hair ties, I shoved both girls forward onto their knees and roughly yanked their hands behind their backs, tying them tightly with the hair ties. The gesture was more symbolic than functional but all three of us bought into the metaphorical nature of their surrender. I looked at them for a moment, face down on the ground facing each other with their asses sticking lewdly into the air. \"Who's got the wetter cunt? Who likes this most?\" I asked to the room in general. \n\nRegardless of the rhetorical nature of the question, both girls instantly piped up with, \"Me, Master!\" I reached down to feel and both girls were indeed profusely wet.\n\n\"I think Carly actually likes this a little bit more, Alex. I'm disappointed. You'll need to be punished.\"\n\n\"Thank you, Master. Please teach this dumb gook what she deserves, Master. Please train my cheap, fuck holes to respond to you without thought or reservation, my Lord.\"\n\nI slipped the belt from my jeans and, without warning, whipped it out against the stripper's already red ass. \"When do you perform next?\" I asked as I lashed at her again, causing her to gasp.\n\n\"Tomorrow night,\" she said, twitching and squirming from arousal.\n\n\"Good... everyone will see the obvious marks from tonight.\"\n\n\"Thank you, Master. It will probably make me even more money. Men like cheap, trashy girls the best.\"\n\n\"Well then my little twenty dollar whore might be the best one,\" I said as I rained blow after blow onto her ass. Carly inched her face closer to her roommate until they were nose to nose then began to kiss her. Alex was surprised at first but quickly returned the kiss as they tried to awkwardly make out. Each lash brought a little squeal to Alex which she transferred through her kiss. Eventually, her ass and upper thighs were criss crossed with the marks from the belt. \"Good. Now for the piece de resistance,\" I said. I grabbed Carly by the hair and pulled her up and around. She awkwardly shuffled across the floor on her knees, unable to keep up and falling forward, stopped only by the grip of my fist in her hair. I positioned her behind Alex and shoved her face into the stripper's red buttocks. \"Lick her ass, slut. Let's show Natalie what a couple pathetic, submissive bitches she lives with.\"",
        "\"Yes, Master,\" she managed before her face was engulfed in the petite ass of the exotic dancer. Alex groaned as Carly's tongue snaked across her ass and into her tight puckered hole. Carly's head was perfectly positioned so that anyone who walked down the hall would see what she was doing and clearly see the word \"CHINK\" written across her cum drenched forehead. \n\nI walked down the hall, enjoying the sounds of moaning from Alex that filled the dark passage. As I approached Natalie's room, I could hear the sound of Nine Inch Nails \"Closer\" playing through the door. I wrapped my knuckles on the door, \"Natalie?\"\n\n\"What?\" came a desperate sounding voice.\n\n\"I wanted to talk.\" I was greeted by a long silence. I stood there imagining what she might be doing before saying again, \"We should talk, Natalie.\" I reached down and noticed my hand trembling slightly. I was nearly certain how this was going to play out but as I stood in the hallway, completely naked, erect cock proudly sticking up, I had my worries. I slowly opened the door.\n\nThe room was dark but the light from the room reflected around just enough to illuminate the bed where Natalie was laying. She was sprawled on the mattress, knees up and legs wide, pumping a massive, white dildo into her smooth cunt effortlessly. I watched as she made the entire foot of fake cock disappear between her shiny, caramel colored thighs. Her moans were barely audible over the thumping music as she pounded herself to the beat of the Nine Inch Nails song. Her free hand was grabbing and twisting at her tit, kneading the soft flesh like dough.\n\nShe must have sensed something change in the room and her eyes snapped open. She locked eyes with me and yelped but made no move to hide herself. She slowed the pace for a second as I stepped closer. I could see her holding her breath as I placed my hand on the back of hers and rammed the dildo back into her, \"Don't stop. Be a good slut for me.\"\n\n\"Yes... sir,\" she said. I flicked her free nipple and she gasped. \n\nShaking my head, I told her in my best condescending voice, \"I think we both know that's not the title you should address me by.\"\n\n\"Yes... Master,\" she said. The words came through like a flood and she moaned again having broken a barrier within herself by saying the word that was so charged with history in her own mind.\n\n\"That's right. Doesn't it feel good to address me that way?\" I said as I teased her nipple. I studied the large, almost black areola with large, hard buds. \n\n\"Yes, Master,\" she said without hesitation this time. I rewarded her with a light pinch of her nipple.\n\n\"To finally address your better with those words you were bred to say,\" I said continuing to tease the nipple with light pinches and circles. \n\n\"Yes, Master. It feels... right.\" she said with a gasp as I pinched and twisted the proud, erect flesh. \n\n\"Of course it does, sweetie. You were bred from both halves to be a submissive pet for white cock. You knew it when you bought that dildo didn't you?\"\n\n\"Yes, Master,\" she said as she started slamming it into herself harder and faster.\n\n\"And you knew it when I walked in, didn't you?\"\n\n\"Yes, Master.\"\n\n\"And you thought it was wrong to picture yourself kneeling and subjugating yourself to a white cock didn't you?\"\n\nShe managed a slight blush but quietly managed another, \"Yes, Master.\"\n\n\"The thought feels humiliating, degrading and dehumanizing doesn't it?\"\n\n\"Yes, Master,\" she said. Her voice had adopted almost a desperate whine to it. \n\n\"But it also feels right doesn't it?\" I asked as I moved my hand to her clit and stroked it.\n\n\"Ahhhh,\" she screamed, \"YES! Master!\" she yelled. A tiny part of my mind wondered what affect that scream would have had on Carly. But the beauty before me distracted me before I could give it much thought.\n\n\"Good girl. Come here and let me show you something,\" I said as I grabbed her. \"Keep the dildo shoved up your fuckhole,\" I said before she could take it out. I led her back down the hall towards the living room. She walked slightly awkwardly beside me as she tried to keep the plastic cock inside her. When she saw Carly lapping away at Alex's ass and the words scrawled across her messy face. \"See. I dehumanize all my sluts, Natalie. All of them. Not just the asian ones or the black ones. Not just the chinks or the monkeys,\" I said as I snarled into her ear. I softened my tone a little and whispered, \"I don't say the N word and I don't expect you too... just not my thing.\"\n\n\"Thank you, Master,\" she managed as I leaned her up against the wall.\n\n\"Stay right there and fuck yourself,\" I told her. I walked over to Carly. She watched me but never stopped licking her roommates ass. I smacked her ass once and said simply, \"Spread your legs, you dumb chink. I need some lube so I don't tear that black ass apart.\" I heard Natalie gasp as my intent became clear. Positioning my cock at Carly's gaping, dripping cunt hole, I slid into her slowly. She groaned a long, satisfied sound as I filled up my girlfriend's denied gash. Wiggling my cock and flexing it inside her, I managed to tease her for a few moments, driving her lust even higher before quickly pulling out and leaving her wimpering on the floor, even more pathetic than she'd been moments before. I walked the few steps back to Natalie and pushed her face against the wall with one hand while I positioned her to the right height with the other. I forced her to look at her depraved roommates on the floor as I slowly began to invade her ass. \"See what dumb asian cunts get, bitch? They get dominated by white men. Strong white men with big, thick cocks. All of you whores were bred for this. The chink, the gook and the nip.\" I said and I slid into her plump ass fully.\n\nShe screamed out as I penetrated her backdoor, bottoming out as my hips made contact with her ass. \"Yes, Master. Yes. My body is yours. Fuck me. Break me. Breed me. Please. Please,\" she begged as I pounded her hard. The sounds of lust filled the room as all three women were panting and gasping. I didn't last long as Natalie's ass was tight and hot.\n\n\"I'm gonna fill your ass, bitch. Even your hot little ass was bred for me.\"\n\n\"Yes, Master. Fuck so fucking good. Fucking use me. Whip me. Make me your fucking slave. Fuck,\" she wailed as she continued to slam the plastic phallus in and out of herself in time with my thrusts. I gripped her hair firmly and gave her three last thrusts before I grunted out my second orgasm of the night, shooting deep into her. \n\nAs I leaned against her, I locked eyes with Carly and withdrew my slimy, cock from her roommate's still spasming ass. Natalie collapsed to the ground whispering, \"Thank you, Master. Thank you, Master,\" over and over as I softly walked into the bathroom to clean myself up. \n\nWhen I came back, I pulled Natalie's nearly limp body off the floor and laid her back on the couch before pulling the dildo out of her cunt and wiped off the spent woman's juices in Carly's hair. Then I tossed it on the floor and dove into Natalie's swollen cunt. I licked and sucked on her small, smooth cunt lips, teasing my tongue around the swollen clit as she gasped. \"Uhhh... fuck... guys don't usually do that,\" she said as she thrust her hips into me and spread herself wider. I slid a finger into her cunt. And then a second as I gauged her reaction. \n\n\"I don't usually lick Carly's pathetic yellow snatch but yours looked delicious,\" I said before diving back in. I heard Carly whimper behind me as my tongue made Natalie writhe in ecstasy on the couch.\n\n\"Fuck... you don't get this tongue, Carly? So fucking good. Fuck... \"\n\nI continued licking and sucking, teasing her more and more as I could tell she was getting closer. Her begging became more and more pathetic and degrading, \"Please, Master. Please let your pathetic slave girl cum. I'll do anything for an orgasm. Anything, Master. Anything... anything,\" she pled as I lashed at her clit. Without preamble, I started flicking the tip of my tongue rapidly across her clit and she shot off with a virtually instantaneous orgasm. \"FUckkk.. \" she screamed and clamped her strong thighs to my head. I kept working her clit, forcing her legs wide and her flailing hands away. \"Noo... Master... too much... fuck... yes... oh god... no... please... Master... it hurts... yes... no... yes... hurts so good... fuck,\" I continued working on her sensitive bud, not letting up as I forced her into a second orgasm that she nearly collapsed from. Finally taking mercy, I picked myself up and rolled over to Carly. I kissed her cheek sweetly as she continued to tongue Alex's ass. Alex wasn't making the task easy as the constant teasing sensation and the erotic air all around the apartment had her squirming and trying to get some kind of friction on her cunt with her thighs. \n\n\"Having fun, sweetie,\" I whispered into her ear. She shivered at my teasing, condescending words. The combination of words, tone and degrading circumstances were clearly pushing all of her buttons hard. Her eyes rolled and she nodded as she kept licking. \"Good girl,\" I told her as I stroked her back gently. I untwisted the hair tie from her hands and she quickly put her hands forward, taking some of the pressure off of her neck and face. I thought I saw a small smile creep across her face but she never stopped tonguing the dainty little ass of her roommate.\n\nI grabbed my belt off the ground and looped it around her neck, holding the end in my hand like a leash, \"Lead me to your bedroom, cunt. You two I expect to be cleaned up and dressed in your sexiest lingerie in the morning, understand?\"\n\n\"Yes, Master,\" Natalie and Alex managed with an exhausted tone. I walked with Carly down the hallway, enjoying the sway of her tight butt. When we got to her room, I opened the door. Inside was a spartan, almost college dorm room. A small twin bed with a night stand, a desk, a bookshelf and a dresser were the only furniture. I yanked her over to the bed and climbed into it, leaving her kneeling on the ground looking at me doe-eyed. \"Do you think I should let you sleep with me, slut? Or should I let you sleep on the floor?\"\n\nHer lip quivered and I could tell she was very close to her breaking point. She never stopped looking at me as she spoke with a wavering voice, \"I will always do whatever you desire, Master. If you believe I should sleep on the floor, cold and subhuman than that's obviously what I deserve. I'll be grateful that my perfect Master even permits me to sleep or be in his presence.\"\n\nI smiled and leaned down to kiss her, \"Good girl. Carly, the mother of my child and the love of my life will NEVER be made to sleep on the floor. Understand?\"\n\nShe laughed and nodded, allowing herself some small tears of relief, \"Thank you, Master. It's things like that that let me know I can trust you.\"\n\n\"Dumb cunt,\" I said with incongruous kindness, \"I'd sleep on the floor before I made you do that.\" I held my hand out and she took it, gliding elegantly into bed beside me. It was a tight fit. I'm not small and Carly isn't exactly petite but I enjoyed the closeness with her after so many nights away. \"I love you,\" I whispered.\n\n\"I love you too, Master.\"\n\nShe was laying on my left shoulder and I kissed her before reaching out to stroke her belly, \"This doesn't change anything between us. Understand?\" Carly bit her lip and nodded. \"It's you and I at the end of the day. All the other stuff doesn't matter to me. It's you and I.\" She smiled but I could see a worry in her eyes. \"Well you and I and all my other girlfriends...\" I said and she smiled and gave me a big nod.\n\n\"Perfect, Master.\"\n\n\"... and other wives?\"\n\nAnother nod\n\n\"... and other mothers?\"\n\n\"Abso-fucking-lutely, Master. Breed all the dumb Asian sluts you want to.\"\n\nI grabbed her tightly to me, kissing the top of her head and realizing that it still smelled like Natalie's cunt. \"You really need a shower,\" I said with a smile.\n\n\"Can I take it in the morning, Master? I like smelling used and pathetic when I sleep.\"\n\n\"Of course, sweetie,\" I told her.\n\n\"Thank you, Master. You're so good for me.\"\n\n\"I love how the more degrading I am, the more you seem to love me.\"\n\n\"It's the dichotomy. When you called me a dumb cunt in that sweet voice a moment ago, I promise you my cunt clenched involuntarily. Everything you do hits my buttons so perfectly. I love it.\"\n\n\"I'm glad, you pathetic bitch,\" I said with a smirk.\n\n\"You say the sweetest things, Master,\" she said and snuggled back into me as we both drifted off into an exhausted sleep."
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "interracial",
        "piercings",
        "raceplay",
        "seduction",
        "slut",
        "stripper",
        "submission",
        "submissive",
        "tattoos"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/carlys-wmaf-fantasy-pt-11"
}