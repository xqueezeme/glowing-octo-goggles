{
    "title": "Rag Doll Ch. 08.1 - Sherry Baby",
    "pages": [
        "This is the first part of the absolute finale of the entire 'Rag Doll' saga; this segment ties together the 'Rag Doll' and 'Nia' universes through Cherie Morrison, the daughter of Barbara's younger sister, Rosa. The second part (currently in prep) connects Bobby and Ricky to Nia, their 1st cousin through Barbara's older brother, Nia's father.\n\nHuge thanks to BlackrandI1958 for her meticulous editing and willingness to ask me WTF I'm talking about, then putting me straight, plus her lack of hesitation in curbing my wild, punctuation scattering excesses, somewhat elastic approach to tenses, and huge, oxygen-sucking sentences. Any mistakes that crop up are post-edit and entirely my fault.\n\nAs always, if you liked the story please comment or vote, and if you didn't please tell me why. I reply to all emails, just please don't forget to add a return address so I can reply if that's what you want. All comments are welcome, if you want to insult me be my guest, if it's funny enough I'll treasure it, otherwise I'll delete the insane, psychotic, unhinged, medically unfeasible, or just plain scary ones.\n\nThis is a work of fiction, in places that only have a vague connection to reality, and things happen the way they do because I want them to. Please read and enjoy, and remember, it's only a story.\n\nBB1958\n\n__________________________________________________\n\nI stood in the saloon bar of \"The Old Compass\" pub in Hamble-le-Rice, Southampton, trying to finish my beer, but Sam, my best friend and usual wingman wouldn't let me alone on the subject of Sherry, the gorgeous blue-eyed, black-haired barmaid.\n\n\"Dan, she's fucking hot, she makes those munters you grope in the Student's Union on Saturday nights look like blow-up dolls; she's practically panting over you!\" \n\nHe slapped me gently on the back of the head, a \"wake-up and get with-it!\" kind of slap.\n\n\"Everyone here, shit, everyone in Hamble knows she fancies the fuck out of you; what is wrong with you? Why not just go with the zeitgeist, mate, take her home and fuck her properly; that way she'll have had what she wants, and she'll be back in circulation, and we can all take a crack at her. You owe it to the men of Hamble, Danny-boy. It's your duty; you have to fuck that girl. It's the only way to cure the epidemic of Blue-Balls she's causing up and down the coast!\"\n\nSam was right about Sherry; she'd made it obvious from day one she wanted nothing more than an extended sweaty-session with me and ordinarily I'd have been up for it like a rat up a drainpipe, as my poor old dad would have said, and with good reason: Sherry was everything a man could have asked for in a girl: slightly over medium height, with a slender, shapely figure, beautiful heart shaped face with big, sexy cornflower-blue eyes under a glossy quiff of short, sculpted jet-black hair, clear pale skin with a spray of pale freckles dusting her cheeks and cute snub nose, and beautiful coral-pink lips, full and succulent; the kind made to form a seal around the head of a man's cock. \n\nThat night she was wearing a striped boat-necked top with nothing underneath, to judge by the lack of bra strap on her exposed shoulders and the tantalising jiggle coming from inside that top, and Jeggings: leggings printed to look like jeans, which showed every curve and ripple of her supple thighs and fabulous round little bubble-butt, and no VPL, which was causing no end of speculation and wistful staring in the crowded pub. \n\nAs I said, she was everything a guy could want, but for some reason she had made it clear she wanted me, and that was where it became a problem, a big one; one that prevented me from moving in for the kill, no matter how delectable I thought she was. I couldn't make that move on her, much as I might have wanted to, dreamed of doing, had to restrain myself from doing, because Sherry was my aunt: Cherie Morrison Young, to use her proper name, my mum's baby half-sister.\n\nI didn't know she worked there when I first went to the University of Southampton, where Sherry had also attended. She'd dropped out after the end of her second year, and I'd lost contact with her, presumably because she wanted it that way, as she had all my contact numbers and email addresses. For reasons of her own she'd decided to disappear, so imagine my shock when Sam and I'd wandered into the remote pub a few weeks previously to get away from the waterfront pubs and bars crowded with middle-aged rich yacht owners and their hot trophy wives talking about how much their yacht cost, how big their place in \"Sandbanks\" was, money, money blah, blah, blah and there she was, my hot young aunt, after almost two years with no sign or word of her, a former medical student, pulling pints and serving sandwiches.\n\nTo my surprise, she'd shown no trace of recognition, instead serving Sam and me, flashing Sam her professional smile, but then she'd reached out and stroked my face as she grinned at me.\n\n\"What's your name, handsome?\" she purred, kissing her fingertip and pressing it to my lips before winking, raking my hair back of my forehead with her fingertips and going off to serve some other customers at the bar.\n\n\"Well fuck me, that's a first, innit!\" said a voice behind me, and I turned to see one of the locals standing behind me. \"Sherry don't usually say nothing to no-one 'ceptin' what a barmaid should. You lucky barstard, oi think she loikes you!\"\n\nSam was looking at me in open-mouthed astonishment.\n\n\"You lucky, jammy fucker, how the fuck did you do that? She took one look and practically asked to have your babies! I'm definitely sticking with you; maybe some of it'll rub off on me!\"\n\nAt this point, I think a little background is necessary. Sherry was my mother's young half-sister. Mum's parents had split-up when she was in her early teens, and my grandfather had played the field for years, before finally settling down again with a new, much younger, as in younger than Mum, if you can believe it, partner. In the meantime, Mum and Dad had met and eventually married in their early twenties, at just about the time Sherry, Mum's half-sister, was born. Two years after Sherry was born, Mum had me. Predictably enough, my deadbeat grandfather got the wanderlust again just before Sherry was born and disappeared, leaving Sherry's mother, Rosa Morrison, literally holding the baby. \n\nRosa was killed when a car skidded and rolled into the bus queue she was waiting in with two year-old Sherry. It was a freak accident; Sherry in her stroller was miraculously unharmed, the car missing her completely, but Rosa and the two other people at that bus-stop were killed. Mum was Sherry's only known living relative (although Mum knew Rosa had had an older sister, Barbara, who'd dropped out of sight after Sherry was born, and an older brother, John or maybe James, but she didn't really know where he was, and Mum and Rosa had never really talked about her family) so she took her and brought her up with me. I grew up thinking Sherry was my sister, and Mum and Dad, bless them, never treated her any differently to me. I think for a long time Sherry was convinced my parents were her parents as well. \n\nTo me, though, she was always just Sherry, my big sister; I never knew she was my aunt until Mum told us, after Dad had passed away, what had happened, and who Sherry really was. I was in my teens by then, so it didn't make a lot of difference to me, and it didn't seem to make any difference to Sherry; she was still my beautiful big sister, still just \"Sherry\", Mum was still just \"Mum\", always and everywhere, for both of us, and Sherry's real relationship to me, whether sister or aunt, made no difference, for reasons that will become obvious. \n\nBack to the present day. I was at a loss to explain why she hadn't just greeted me as her younger brother, as had always been the case before, but I had to admit, the envious looks I was getting from the other occupants of the pub were really quite gratifying.\n\nThe rest of that evening was a haze of Sherry brushing past me, stroking my face, flicking my hair back out of my eyes, telling me how gorgeous I was, and at least twice brushing her fingers over my crotch. I decided I'd wait until closing time and ask her where she'd been, and just what the hell she thought she was doing, but try as I might, I wasn't able to catch her that night, or any other night that week; either I missed her, or she was staying behind to stock-take, or any one of a dozen assorted reasons, but the end result was the same. \n\nI'd spend the evening being flirted with by my big sister/aunt, brushed up against by her, teased and touched by her, and on several occasion being lightly kissed by her, but I was never able to get her alone and ask her why; why the hell she'd disappeared on me, to suddenly re-surface like some lovesick teenager obsessed with me, and why she was making it so obvious to every half-awake customer that she was ready, willing and eager to jump in the sack with me.\n\nI couldn't even understand why she'd singled me out for this whole \"throwing herself at a guy\" pantomime she seemed bent on playing out; I was no great shakes as a male specimen, tall, well-muscled, but not heavily built, from four years of Taekwondo and working at the speed bag, and playing rugby at school and now uni. \n\nI had nondescript unruly brown hair that seemed to be forever falling into my eyes, pale-grey eyes, regular, forgettable features, what my dad used to call a \"crowd face\" and certainly not one to set a girl's heart a-flutter. \n\nSam of course didn't get it; night after night he'd come back to the pub with me, and stand in a puddle of his own drool, stripping Sherry bare with his eyes; she never said a word to him other than to be professionally polite and friendly, and that was all, but she rolled innuendo-loaded comments around me, doing the touching thing again and again, and making me feel very singled-out.\n\n\"Go on, ask her!\" he'd hiss, nudging me as Sherry rubbed herself against me and grinned seductively, or put her arm around my waist and asked me if I was enjoying my evening as she rubbed her hip against mine, or backed into me with a handful of empty beer pots and wriggled slightly, just for a second, racking my internal temperature and pressure up several notches.\n\n\"She's practically handing you the key to her bedroom, Danny, what are you waiting for, boyo?\" he'd moan in frustration-by-proxy, and look sideways at me when I looked away and gave him my stock answer; \"I have my reasons, Sam, let it go!\" \n\nSam would then respond with his stock rejoinder.\n\n\"Danny, she's a stunner; what's not to like? I mean, really? Look, I know you're not gay, not after what I saw you doing with Michaela McGrath at the Fresher's Ball, so why so reluctant to knock-over Sherry? She's gagging for you, boyo! Look Danny-boy, all she wants to do is wrap those lovely long legs around you and crush the life out of you; there are worse fucking ways to go, believe me! You're turning my street-cred into thin runny shit here, boyo; go get her, Danny, for my sake!\"\n\nThis went on for days; I finally knew where Sherry was, and I wanted to talk to her, I wanted to know why she just dropped-out of uni and off my radar, where she'd been since, why she'd left me alone, but every night she managed to avoid me, while simultaneously flirting outrageously with me in public, until I began to think seriously about finding another pub; Sherry was too busy playing mind-games for me to take her seriously any more, and my studies were beginning to suffer. \n\nAfter another week of fruitlessly trying to intercept her, I decided to forego any further visits to \"The Old Compass\" the following week and catch up instead on some required reading, and so for the rest of that week, I immersed myself deeply in Essentials of Anatomy & Physiology. By Friday evening, I was, however, missing seeing her, so I thought \"why not?\" and before I knew it, I was once again standing at the bar, ordering a drink from my game-playing aunt-slash-sister. She tried her usual flirting gambits on me, but I just took my drink and my change and retreated to a corner, wondering why the hell I'd come; nothing had changed in the last few days, and it looked like nothing was going to change, either.\n\nI put down my beer and turned to leave, and suddenly she was there in front of me, her professional face gone, her flirty, come-hither expression gone; finally, it was just Sherry, my big sister. \n\nI think I should come clean about something. Since I was 10 years old, and Sherry was 12, I'd been in love with her; to me, she was always the most beautiful girl I'd ever seen, and I would have waded through molten lava for her. As we got older, my feelings intensified; she occupied my every waking thought, even as another part of me entirely kept telling me how wrong those feelings were. When I grew older still, I used to masturbate thinking of her, images of her dancing and cavorting naked through my mind feeding my feverish fantasies. \n\nWhen she went away to university I was crushed; suddenly all the beauty in my life was gone, the light that lit my days was extinguished. I knew she wouldn't come back, not for me, not for anything, so I made sure I was accepted at Southampton Medical School, just as she was, so I could be near her again, to learn as I arrived that she'd withdrawn from her third year and requested her transcript; she'd gone. After two years I'd banked heavily on seeing her again, but she was gone and I was devastated.\n\n\"Where've you been, Danny, I watched out for you all week, I missed you!\" she smiled, a normal, sisterly smile. \"I wanted to talk to you, baby-boy!\"\n\nI looked back at her warily.\n\n\"I've been trying to talk to you for days, Sherry, I waited for you outside night after night, but you always dodged me; you knew I was there but you just left me there, and you refused to talk to me inside this place; what could you possibly want to talk to me about now, after two years' silence, Sherry?\"\n\n\"Not here, Danny, later, I promise!\" She smiled, but I wasn't satisfied.\n\n\"No, Sherry, I'm sick to the back teeth with standing around like a lemon while you play mind-games. I'm staying in the student Halls of Residence on Bailey Street, Building A, Room 212; come and see me there if and when you decide to stop playing silly buggers. I don't have time to waste chasing around after you. Be there or not, I don't care anymore; after two years I'm used to not seeing or hearing from you!\"\n\nSherry looked shocked at my rejection of her, but I didn't care; she'd been bouncing me around like a kid's ball for weeks now and I'd had enough.\n\n\"Danny, I'm...\" she began, but I cut her short.\n\n\"Look, if you want to play more games, find someone else to wrap around your finger; I looked for you for years, Sherry. I thought I'd lost you forever, but you always knew how to reach me; you just never did. You left me behind without a word, and now you want to crawl all over me and play kiss-chase? I don't think so. When you're ready to act like an adult, I'll be there, for you I always was, but if you still want to play games, find someone else, I'm done with all these mind-games.\"\n\nI brushed past her and left the pub, walking out in the full glare of my burning bridges, yet feeling curiously light inside; I'd finally had my say, even if it wasn't exactly what I thought and rehearsed and wanted to say when I finally found her again. I arrived back at the Halls of Residence feeling calm and self-possessed; I felt I'd handled the thing with Sherry like an adult, and I was sure I'd done the right thing. She had no right to play with my emotions and family connections like that, not after two years silence.\n\nI took a shower, feeling emotionally at ease as well as physically relaxed for the first time in what felt like ages. I pulled on my sleeping t-shirt and sports shorts and settled down to catch-up a little further on the day's lectures. Eventually I looked up at the wall-clock; almost 12:30, so I guessed she wasn't going to show, then or ever, so I switched off my reading light, checked my alarm, as Sam and I were going for a run in the morning, and settled down for the night.\n\nI was just winging through that place between sleep and wakefulness when a tapping at my door dragged me back to full wakefulness again. I checked my clock; just after 1 AM. so I staggered out of bed and slipped the chain on, opening the door a crack to see who it could be. It was Sherry. I actually debated for a second whether or not to open the door, but good manners (and the need to see her, and have her to myself, if I'm honest) won out, so I unchained the door with a sigh more melodramatic than heartfelt, and opened it, gesturing her in and closing the door behind her.\n\nSherry looked, as always, absolutely stunning; she may have been working as a barmaid, but she carried herself like a top-flight fashion model, and whatever she wore, no matter how simple or cheap and off-the-peg, she always looked like she'd just stepped out of the pages of Vogue, Marie-Claire, Cosmo, or Paris-Match. That night was no exception; she was wearing a simple blue and white striped top with a wide scoop-neck, skin-tight glossy black pedal-pushers paired with black embroidered Harem slippers, and a navy-blue jacket that looked like a cut-down Burberry trench coat, complete with epaulettes, half-cape and belt. Together with her pale flawless complexion, coral-pink lips, and long, sooty eyelashes framing her large expressive eyes, soft and blue, and very beautiful, with her midnight-black hair roached back into a glossy boy-cut quiff, she looked like a sexy chic 1950's Parisian beatnik, and truly, deeply fuckable. \n\n\"Danny, I'm sorry it's so late, end of week stock-take and all that I didn't want to wake you...but I owe you an apology...and an explanation.\"\n\nI looked blearily at her.\n\n\"Sherry, it's one in the morning.\" I yawned involuntarily, \"I don't need any explanations, not now, I was angry earlier, and I'm sorry...\"\n\nSherry brushed my cheek lightly with her fingertips, even that light contact sending a quick 'zing' of pleasure rushing through me.\n\n\"Sit down, Danny, you look dead on your feet.\" she said, urging me toward my bed. I sat in the middle and Sherry sat on the end, one leg bent up under her, just as she used to do when we were younger and we'd sit up chatting late at night.\n\n\"I'm sorry, Danny, really, I thought you knew what I was doing. I thought you wanted to play, that's why I was playing with you, but I honestly thought that you'd...be into it, play along, the thrill of the chase, that sort of thing!\"\n\nI looked at her in puzzlement.\n\n\"Sherry, right now I have no bloody clue what you're on about. All I know is, my big sister, the only family I have left, the one person in the entire world who meant everything to me suddenly disappears for years, doesn't even come back for Mum's memorial service, falls back into my life by accident, and all she wants to do is flirt with me. Why, Shel? Why don't you explain, because, like always, you've managed to confuse the fuck out of me! Almost the last thing Mum said to me was that I should look out for you, that I needed to talk to you, but how could I when I didn't know where you were? I had to arrange the memorial service, go there alone, and stand there alone while everyone else had family around them, and I had to settle her estate, and I had to do it all alone. For God's sake, Sherry, I was only eighteen, I was a teenager and I needed you, I needed my big sister, but you weren't there. Where were you?\" \n\nSherry looked at me searchingly, her eyes boring into mine, although I don't know what she expected to see in there other than a complete failure to understand what she was going on about.\n\n\"You really don't know, do you, Danny?\" she murmured, and I shook my head again; know about what?",
        "Sherry reached out and took my hand, her fingertip lightly tracing a meandering path around my palm.\n\n\"Danny, I came to Southampton to...to be as far from you as I could get. I just couldn't be near you, not the way I was feeling, not then. Mum knew, she worked it out, but she chose not to make a big deal out of it; after all, nothing had happened, and if I went away, nothing would ever come of it. At least that was the plan, and then you turned up here and put the kibosh on it! I'm sorry about Mum, I...I couldn't be there, I just couldn't. It would have been too much, I'm sorry! I said goodbye in my own way, and I think Mum understood; she knew why I couldn't be there, she knew what it was doing to me, she understood...\"\n\nShe sighed, looked me in the eyes and I was shocked to see tears brimming and threatening to spill over from her glorious eyes. What was going on here, and why was she so close to tears? She wiped the backs of her hands across her eyes, and continued.\n\n\"It all worked so well; I was doing well, everything was fine and falling into place, and then I heard; Mum told me, you'd won a place at the med school in Southampton, and I couldn't have that, I couldn't be in the same place as you Danny, I just couldn't!\"\n\nI recoiled from her. How could she hate me so deeply: what had I ever done to hurt her that she should hate me with such intensity? My head was spinning with the enormity of it; my sister had thrown away her career in medicine rather than be in the same place as me: she'd dropped out and taken a low-paid job rather than share a university campus with me? Why? What had I done to deserve that kind of hatred?\n\nI cringed away from her as far as I could, my own loss and loneliness of the last two years suddenly compounded by the knowledge of why she'd deserted me. I had to ask her, just so I knew.\n\n\"Shel... Sherry, what... why... what did I do? Whatever it was, I didn't know; I'm sorry, I would never hurt you, you're my big sister, I...I love you, I didn't mean to hurt you, please don't hate me. Whatever I did, I didn't mean it, I'm sorry, I'm sorry... \"\n\nSherry stared at me in what I could have sworn was shock.\n\n\"What? No! No, Danny, you didn't do anything, Dan, I swear, you did nothing wrong, it was me, all me, I was the reason, not you! Oh baby, come here!\"\n\nSuddenly she was holding me, crying as she hugged me tight, and the feel of her arms around me again after so long was almost indescribably wonderful. I held her and soothed her as she cried, wondering what possible reason she could have for not wanting to be anywhere near me, but even to hold her again was, for me, a tiny slice of my own private paradise.\n\nSherry's sobs slowly turned to snuffles, then soft murmurs as she tried to speak, but I shushed her, instead handing her tissue after tissue and savouring the feeling of holding my lovely caring sweet wonderful big sister again after so long. \n\nAt last, she seemed in control of herself enough to let go of me, and sat back so she could look at me again.\n\n\"Every time I've seen you these last weeks, I just wanted to grab and hug you, Danny, and tell you how gorgeous you are, how tall you've grown, how proud I am of you, how much I missed you! The only reason I didn't was because I thought you knew what was going on with me, that Mum had told you before...y'know, we lost her, and you'd come to get me! I was waiting for you, but you never did...\"\n\nNow she was off in unknown territory again; just what in the hell was she talking about? Time to get to the bottom of this, it was late, and we were talking in circles here...\n\n\"Umm, Shel, why would I come and \"get\" you? What for? Three weeks ago I never even knew you were still in Southampton: you never told me, remember?\"\n\nSherry pulled me close again, hugging me tightly to her.\n\n\"Oh Danny, you're still so sweet, I never stopped thinking about you. That's why I dropped out when I found out you were coming here, you were coming to So'ton; I thought Mum might have told you, and I really, REALLY couldn't be anywhere near you!\"\n\nWe were back to that again. I pulled her off me and held her out so I could see her clearly.\n\n\"Sherry, will you just for Chrissake tell me what you're talking about? All this cryptic bullshit is giving me a severe pain in the arse; this is me, Danny, your brother, so just tell me what it is you're trying to tell me!\" \n\nSherry looked at me levelly.\n\n\"Daniel...Danny, I left home mostly because of you. I had to. I had no choice. Mum and me, we talked about it and talked it over and over, and we decided that the best thing I could do was leave, apply to a medical school as far away as I could get. Southampton accepted me; I couldn't get into Edinburgh, and even though I was accepted at Birmingham and Leicester, I couldn't go to either one, both of them would have been too close to home, too close...to you.\"\n\nI looked at her quizzically, but said nothing; she had some explaining to do, but now she'd piqued my curiosity; why did she think those places were \"too close\" to me? What did she think I had that she needed to quarantine herself away from me?\n\n\"Danny, I feel so bad saying this to you, and I know you'll hate me, but I want to be honest with you, the way you asked me, the way you've always been honest with me. I had to get away from home because of...of the way I felt about you, the way I've always felt about you. Danny, ever since we were young, I've been attracted to you, and as we got older, it just got stronger; I wanted you, I used to dream about you. Mum found me crying over you one time, and she got the whole sick story out of me.\"\n\nI was shocked to see two large tears roll down her cheeks, her beautiful eyes downcast as she refused to look me in the face. \n\n\"Oh Danny, I'm sorry, I know how disgusted you must feel, but I can't help how I feel; please don't think I'm some kind of pervert; it's just...it's not...I, I can't help it. I'm sorry, baby, please believe me, I know it's wrong, I never wanted to feel this way, but I do, and I don't know how to make it go away!\"\n\nI looked at her, hardly able to believe what I was hearing, unsure whether this wasn't all some obscure prank or put-on she'd cooked-up for my benefit.\n\n\"Sherry, are you telling me... you're in love with me?\" I asked her, half-way convinced it was a prank, yet hoping against hope she was telling me the truth; my heart leapt as she nodded.\n\n\"Danny, I'm sorry: I tried to not feel this way, really, but I can't help it. I'm sorry; every time I dated someone I compared them to you, how you ate, or talked, or walked, or laughed, and they never matched up.\"\n\nThe tears continued to roll down her cheeks as she rattled on, almost gabbling in her haste to say what she wanted to say.\n\n\"Oh God, I'm such a low-life, only sick twisted perverts think like that about their little brothers. I didn't want to tell you, I never thought I'd have to, and then you showed up, and you were all grown-up and just so tall, confident and handsome, even more than I remembered, and it all started over again, only now, now you were an adult, so big, so grown up, a grown man now, so I thought I could lead you on and see if you were interested and if you were we could have something, and you weren't, you ignored me. I'm so, so sorry I embarrassed you in front of everyone. I'm sorry, please don't hate me!\"\n\nShe was crying properly now, big, distressed sobs, and I hurriedly pulled her into me. My head was spinning, but my heart was singing; beautiful, sexy, desirable Sherry, my gorgeous young aunt, my beautiful big sister, the girl of my dreams, wanted me; she wanted me, oh yes, yes, Halle-fucking-luiah!\n\nI pulled her closer still as she cried, and she wrapped her arms around my neck, and suddenly she was sitting on my lap and hugging me like it was the most natural thing in the world. I stroked her hair and murmured in her perfect little ear as she cried, telling her it was OK, that I didn't hate her, that she didn't make me sick, and that I loved her. I told her that I'd always loved her, and I always would, no matter what, all the while breathing in the intoxicating scent of her, of her hair, her skin, her perfume, the undertones of shower soap and deodorant, being the happiest I'd ever been in my life.\n\nSherry calmed down as I hugged and caressed her, her lips resting in the crook of my neck as I rocked her gently on my lap, until two facts came to my attention. One, she was lightly kissing my neck, and two, I was getting an erection, and it felt like a good one too. I continued to hug and gently rock her, occasionally gently kissing her hair as I murmured soothing words to her, but I was also enjoying immensely the feel of her grazing on my neck. Sherry was also beginning to shift around on my lap as my erection made itself felt, until it must have become obvious to her what she was sitting on, at which point she began gently squirming, making sure I knew that she knew.\n\nSherry left off kissing my neck to lift up her head and look into my eyes, her beautiful blue eyes burning like lambent jewels.\n\n\"Do you like me, Danny? \"she asked, \"I mean, if I wasn't your aunt, sister, whatever it is I am, would you like me? Please, Danny, I have to know!\"\n\nWith my painfully erect cock poking her solidly in her delectable rump, something she couldn't have failed to notice, I decided that honesty was, right then, the best policy.\n\n\"Shel...Sherry, ever since I was ten years old, you've been the only girl I've ever dreamed of; I'm in love with you, and I always have been; how sick is that, eh? The most beautiful girl I've ever known is my big sister, who's also my aunt, and she's the only girl I ever wanted. What a pair we make; there's you crying over me, and all I've been doing for the last ten years is pining for you. I love you Sherry; I just never knew how to tell you, but I guess you had enough problems of your own!\"\n\nSherry's eyes widened as I made my confession, then she swiveled around to sit astride me, her fingers interlinked behind my neck, her pose bringing her lips level with mine.\n\n\"Danny, you've never lied to me, ever, so I have to believe you're not lying now. If you only knew how it feels to hear you say that...\"\n\nWith that, she leaped forward, her body weight bearing me over backwards, and kissed me, but not a sisterly kiss; this was the real thing, and it went through my head like a blowtorch through butter; the one thing I'd wanted since I was a boy, from the most beautiful girl in the world, and now it was really happening. \n\nMy hands automatically slid around her waist, holding her to me, then slipped down to cup and squeeze her lovely show-stopping little rump, pulling her belly to belly with me, something I'd wanted to do and fantasised about all my life. Sherry moaned into my mouth as she ground herself against me, her lips pressing even more tightly against mine, her tongue probing inside my mouth as she writhed and rubbed against me.\n\nMy cock was like a steel bar, and Sherry grinding against it wasn't helping matters. I tried to stop, and I did, for about 0.001 of a second, then pulled her in even closer; this was my perfect fantasy, my dream come true, and the fact she was my big sister/aunt/whatever made no difference at all; to me she'd always be Sherry Young; unattainable, shit-hot Dream-Girl first, and big sister/aunt/whatever a very poor and distant second. Kissing her was wonderful, but now that I'd got her here, and I was a big boy now, I wanted to do more and judging by the way she was squirming and moaning as she rubbed against my aching cock, so did she. \n\nI broke our kiss, Sherry staring into my eyes for a second, then a slow smile of understanding quirked-up the corners of her delectable lips.\n\n\"So Danny, it's finally come to this, baby-boy; I've been wanting and waiting for this seems like half my life, come here and help me, I want you to see me, what I have for you, if you want it...\"\n\nIf I wanted it? Was she crazy? Most of my life had been building towards this, now it was here I was going to enjoy every single split-second of it. She must have seen my intent in my eyes, because she smiled that smile, like honey pouring from a spoon, slow, rich and delicious, and I moved in for the kill, slipping my hands into the waistband of her stretchy glossy pedal-pushers. I slid them down and around to hold and squeeze her delectably firm buttocks, while a thousand adolescent fantasies raged through me, all of them centred around me doing exactly what I was doing right then.\n\nSherry grinned at me, catching her lip between her teeth in a way I found almost unbearably sexy, before cupping my face in both her hands and kissing me once again, letting me know that this was where she wanted to be, doing this with me. As she kissed me, she ground herself against me, confirming what she wanted, and I wanted to oblige her in any and every way; when your super-hot dream-girl lets you know what she wants you to do to her, you seriously have no choice but to do it; to hold back would mean a lifetime of regret at lost opportunities, and I wasn't made for regret. \n\nSherry hissed softly and grinned naughtily, grinding herself against me, obviously feeling me hard and unrelenting against her, not that I was complaining.\n\nI knew what I had and how to use it, had since I was in my teens, and that had stood me in good stead through my teens and early university social life. Knowing what I had, and how to use it meant I'd never had any complaints, and not a few return bouts. I didn't know exactly how long my cock was (because I stopped measuring it when I was 16 and realised the only people who were interested in things like that were the willy-watchers who looked over your shoulder when you took a piss in a public urinal) but I knew, without being arrogant about it, that I'd always delivered, and now the one girl in the entire world I'd always wanted to do it with was here, now, ready and wanting me. \n\nSherry teased me with her lips, kissing me with darting little pecks on my lips as she wriggled and writhed on top of me, driving me slowly and inexorably mad with lust for her, always ducking when I tried to capture her lips for some serious kissing, always coming back to dot my lips with more of those rapid-fire pecking kisses, soft as snowflakes, sweet as strawberries, while her eyes danced with glee as she played with me.\n\nShe should have remembered, two could play games, and I had my hands around her waist, holding her to me, so I slid my hands back inside the waist of her pedal-pushers to cup and squeeze, and fondle her perfect little bottom-globes, seeing her sexy little bite of her lip as I pulled those delectable globes apart just to hear her gasp and giggle.\n\n\"Danny, naughty...\" she breathed, wriggling even harder against me, feeling my size.\n\n\"Oh my, you really are a big boy now!\" she teased, kissing me more definitely, longer and more seriously now as my hands explored those tautly wondrous globes.\n\n\"Finish it Danny, please...\" she breathed, so I reluctantly let go of my two prized handfuls to slide my thumbs in the waistband of her jeggings and slid them down to mid-thigh, finally letting me see the perfection of her body, the alabaster translucence of her skin, and the trim, sleek curves of her body. Looking down at the two perfect globes of her naked bottom, I knew my dreams had come true, this was real, and she was mine.\n\nSherry kissed my chin and sat up, pulling her top off in one fluid movement, and I gazed in wonder at my dream vision, her two perfect, bite-sized breasts, her protruding, enticing nipples the exact same shade as her coral-pink lips.\n\n\"Your turn, baby boy!\" she smiled, and I hustled to obey her, tearing off my sleeping T-shirt. Sherry rove her eyes up and down my torso, taking me in.\n\n\"Wow, you filled-out nicely, Danny, whoo-wee! You were so slim and graceful when you were young; now look at you, girls must be queuing for this! Too bad it's mine now...\"\n\nShe slid off me and wriggled and shimmied out of her leggings, revealing the smallest, most minuscule thong I'd ever seen, basically just a pair of threads and a tiny triangle of material covering her modesty, more a cache-sexe than a true lingerie item. I whistled appreciatively; I hadn't seen anything like that since my holiday in Saint Tropez the summer before I started medical school. Sherry smiled cheekily and pirouetted daintily so I saw the whole thing, and my cock, already achingly erect, went to a whole new plateau of arousal at the sight of that slender thread bisecting her naked buttocks so sexily.\n\n\"You like, Dan-Dan?\" she flirted, winking at me. \"I wore it so no VPL with my leggings, and for you, too, in case we ever got...you know, here; maybe you can peel them off me in a bit, yes?\"\n\n'Maybe? Fucking definitely!' was my knee-jerk emotional response; Cherie Young, my Sherry baby, was burning hot and setting off all kinds of calls inside me. I went to slip my shorts off, and she stopped me.\n\n\"No baby, mine!\" she grinned, tugging at the waistband as I lifted my hips, hazed-out and horned-out to the max at what my dream girl was doing, but I focused like a laser when she gasped and stared at my midsection.\n\n\"Oh God, Danny, that's lovely, oh my God, oh yes!\" she murmured, so I took it she approved.\n\n\"Can I?\" she whispered, reaching out for me. Are you kidding me? Of course I agreed; this was the moment my life had been leading up to, like arse I was going to hum and haw now!\n\nThe feel of her warm little hand on me was indescribable, the sparkle in her eyes as she held and felt my size for the first time was an image I'd hold and keep for the rest of my life. She slid back onto the bed, kneeling next to me and kissing me, never once relinquishing her hold on me, and then she began slowly, gently, fisting me, holding the back of my head with the other hand so she could kiss me deeply, lustily. My arm went around her waist, holding her to me, my splayed hand pressed again her sleek flank as if I never meant to let her go, and I didn't; too much of my life was here, with her, to ever let go of her ever again.\n\nI groaned at her nearness, a soft, involuntary sound, yet another teenage fantasy coming true as she slid up against me. Her warm sweet-scented satin skin against mine set my senses aflame, and memories of her and memories of dreams of her rushed and tumbled though my scattered mind, soaking up the feel, the scent, the here and now of her, while all my days without her tormented my soul. That was the part of me that had always been in love with her, of course; it was the horny student in me that wanted to just fuck her as hard as possible.\n\nBut I knew I couldn't do that, not now, not ever, not to my Sherry, the only girl I'd ever loved. \n\nSherry bore me over backwards again, something she was getting good at, my head hitting the pillow as she kissed me as if it was her life's purpose, while her hand worked at me, keeping me aroused, although it wasn't necessary; just her presence was enough.\n\nSherry slid down next to me and I turned to her, my arm once again encircling her waist, pulling her close as we kissed endlessly, and I knew what I wanted to do next, what I'd always wanted to do to her. As she continued to fist me, I gently rolled her onto her back and kissed her throat, her shoulder, the hollow of her neck, while she murmured softly and squirmed gently, obviously liking what I was doing. I kissed lower, the notch at the hollow of her throat, and then the upper slope of her breast, but when I flicked her erect nipple with the tip of my tongue her breathing hitched and she gasped softly.\n\n\"Oh yes, like that...\" she murmured, the fingers of her free hand clutching my bed coverlet as I kissed her body. I played with her nipple, scraping it so, so gently with my teeth, and Sherry shuddered every time I did it, her eyes tight closed and her throat and neck flushing, while her lips parted like she was looking for another kiss. She made such an appealing picture, I was literally needing to pinch myself to check I was awake and this was really happening, but the subtle perfume of her skin, the sweet, heady scent of her arousal, the soft, breathy sighs as I worked her up, I couldn't have imagined those, ergo this really was real.",
        "Her eyes flew open as I kissed down her ribcage and her flat stomach, and her soft 'ah-ah' as I swirled my tongue in her navel told me how much she was into this, but when I began to slide off that meaningless scrap of satin that was all she was wearing she almost panicked.\n\n\"Danny, what are you doing? nNooo...\" she breathed, making me cock an eye on her face.\n\n\"I'm sorry, please baby, you scared me, that's all, I didn't mean...\" she murmured, \"it's just...I never...\" and I looked at her in frank surprise; a beauty like her, and she'd never...\n\n\"Never, Sherry, ever?\" I asked, and she turned her face away from me. I slid back up to her so I could gently take her chin between thumb and forefinger and just as gently turn her head so I could look into her glorious eyes.\n\n\"It's okay, there's no shame in it, no harm, no foul, I won't make you do anything you're not ready for, I promise; I love you, and I'll never hurt you!\"\n\nSherry pulled me in for a quick kiss, her eyes bright and sparkling with unshed tears.\n\n\"It's not that, Danny; I've never gone far enough with anyone to know what comes next; I told you, everyone I dated wasn't you, they didn't talk like you, walk like you, look like you, act like you, and I didn't want to do...that...with them just because I could; I wanted it to be you, and you never came to me, so I never did...\"\n\nNow I got it, but I wasn't hurt or disappointed, not in the slightest; when I finally made love to my Sherry, it would be because she wanted to, not because she thought it was what I wanted; she'd waited so could I after all. I had her now, we had all the time in the world...\n\n\"But now I want to, Danny, because it's you, because you're here...\" she whispered, her lip trembling.\n\nI touched my fingertip lightly to her eyelid, and she closed her eyes, making the silver tear trembling there run down my finger.\n\n\"We don't need that...\" I whispered and she smiled at me, and it was her 'Sherry' smile again, the one she'd always had for me. She lay back with a sigh when I kissed down her warm torso again, feeling with my lips what my hands had dreamed about for years, only this time, when my fingers danced over her tiny G-string she didn't flinch or draw away, nor did she flinch or become frightened when I hooked my finger in the waist and began sliding it off.\n\nSherry lifted her hips so I could tug that little scrap of satin and tangle of threads off her and down her satin thighs, and now she was as naked as I was, as glorious as the dawn and more beautiful by far. She had a small tuft of pubic hairs, trimmed neatly in a small heart-shape at the apex of her slit, otherwise she was waxed smooth, and while I wanted to lick and feel the texture of that smooth, glossy skin and her revealed labia with my tongue-tip, even more did I want to slip my tongue tip through that neat little tuft, to feel the texture of those silken hairs, to feel the curl and rustle of them against my tongue as I licked and tasted her.\n\nSherry gave a little twitch when I kissed that cute sculpted patch of hair, and a small sigh, and that was all as she accepted my attentions once again.\n\n\"Oooh Danneee...\" she sighed, and chuckled softly when I kissed her flat tummy.\n\n\"I won't hurt you, baby, I promise; as much or as little as you want, that's what we'll do.\" I whispered, as I stroked her sleek flanks, fingertips dancing now for real where imagination only always had. \"You tell me what you like, and that's what we'll do, that's all we'll do; I won't hurt you, not after a lifetime of wanting you...\"\n\nSherry stroked my hair, running her fingers through and through, combing my hair back so she could look at my face, look into my eyes. Whatever she saw there, she believed, because it was the God's honest truth. She smiled and nodded, swirling her finger through my hair and down my face to gently tap my lips.\n\n\"I know, darling, make me feel good; that's all I ever wanted from you...\"\n\nI kissed her tummy again as gently as I could, kissing closer and closer to her fragrant slit, before finally planting a kiss on her labia as her thighs drifted apart, inviting me in. Soft languid murmurs and sexy little \"oh, oh!\" noises the only clues she gave me that she was enjoying what I was doing as I slowly, gently, carefully ate her peach. I took my own sweet time about it; this was what I had dreamed about for years, there was no need to rush things, not now my that dreams had come true.\n\nWhen I pushed my tongue tip between her swelling labia she gasped and bucked, and suddenly her hands were on my head, holding me in place as she moaned softly.\n\n\"Like that, yes like that, oh yes, oh my God, yes, God... \" she chanted softly while her heels drummed on the bed, and when I flicked her clitoris with my tongue-tip she pulled me in tightly to her succulent peach, her thighs clamped around my head and the blood roared in my ears as she stiffened in orgasm, while a soft gush of her sweet tangy nectar filled my mouth and coated my lips. When I flicked my tongue over the tight little knot of her tense anus she jerked, her eyes flying open, and she trembled as I slowly, carefully licked that last secret place, probing gently with the tip of my tongue as she writhed and gasped softly. I could feel her tension rising as I licked her soft, tight, dewy flesh, feeling her on the brink, and when I pressed forward and pushed my tongue into that slick little crease, she groaned loudly, her heels drumming on the bed as orgasm once more swept through her, bathing my lips and filling my mouth with her sweet tangy essences.\n\nSherry collapsed limply on the bed, her heartbeat hammering in her thighs and filling my ears, and then her thighs released their hold on me, allowing me to rise up so I could look at her. Her face was flushed, but sweetly composed, the rose-pink flush suffusing her throat and chest. I slid back up next to her, obviously waking her from the trance she'd fallen into, and smiled at the smile she gave me.\n\n\"Danny, that was... incredible, oh my God, what you did to me... I never knew it could be so. .. oohh Danny, all this time, and we could have been...\"\n\nShe stroked my face, once again touching her fingertip to my lip, smiling happily at me.\n\n\"Now I know I was right about you, Danny, you ARE the one, you always were. And now there's more, isn't there? You make me feel so... so... wonderful inside, I'm so glad I waited for you, and now I want to make you feel just as wonderful; make love to me Danny, it's what I want, it's what we both want, it's why we're here. You're mine now. but I want to be yours, too, all that waiting and wondering's over; make love to me Danny, please, I want you in me, and with me, and to be part of me forever!\"\n\nShe looked so desirable, her pale flawless skin, her blue eyes huge and trusting, her parted lips like the most perfect pink rose petals, soft and delicate, and her short, glossy black hair still set in that perfectly sculpted quiff, and my need for her blew up and burned inside me. I still couldn't believe I was naked with my dream girl, both of us naked and free to do what we both wanted, and that she wanted me as much as I wanted her.\n\nI kissed her softly, and she kissed me back just as enthusiastically, then licked her lips and smiled sexily at me.\n\n\"Wow, I taste nice,\" she grinned, \"no wonder you like eating me!\"\n\nThat, and her hands on me, restlessly fondling and massaging me, told me all I needed to know, and as I kissed her and held her to me, I rolled onto my back, taking her with me so she was now on top of me. I smiled at her eyebrow cocked in query and slid my hands down from her waist to cup and squeeze her marvellously taut little bottom once more.\n\n\"Better for you this way, first time, you can set your pace, baby, I don't want to hurt you...\" I whispered, and she dipped her head down to kiss me.\n\n\"Thank you, Danny...\" she whispered, before kissing me some more, and more definitely, while she squirmed and rubbed herself against me. All I was conscious of was her damp pussy sliding against my aching cock, harder than I'd ever been in my life, and who could blame me? The girl of my dreams was working herself up against me, it was as if all my birthdays had come at once, so I let her do it her way; no way was I going to push her along.\n\nSherry's lips sealed to mine while her tongue danced in my mouth, and then her hand slipped between us, to encircle and hold my cock, and her weight shifted as she raised her pelvis, all the easier to engulf me. I felt her rubbing me against her hot wetness, and broke our kiss to look into her eyes.\n\n\"Slowly, sweetheart, do it slowly...\" I whispered, \"take your time, babe, get used to it...\" I urged as she slowly, agonisingly, pushed against me, her eyes mirroring her pain as she slowly, gingerly took me into herself, the heat of her surrounding me as I slipped further and further into her. I was all the way in, buried to the hilt in her hot velvety succulence, while her breathing hitched and she softly gasped above me.\n\n\"Oh Danny, we did...finally, oh my God...\" she chanted, and when I twitched inside her, her eyes flew open.\n\n\"No, please, don't move...gently, please go gently...\"\n\nI would have gladly held her like that all night; this was the girl of my every waking dream, whatever she wanted I'd gladly do, but I watched her carefully, seeing the pain slowly ebb as she got used to our joining, and the moment she moved and realised that it didn't hurt anymore, that something else was happening . \n\nI slid my hand s to her sides, holding her waist, gentle pressure urging her upright, until she realised what I wanted her to do. She pushed herself upright so she was straddling me, and then she began to move against me, slowly grinding down on me as she held my hands to hold herself upright. As she rode me, I moved in sync with her, pumping into her, seeing her flush as her movements became more definite, more pronounced. Her small, perfect breasts danced as her movements became more frantic, as she bore down on me harder and faster as I jammed myself into her ever faster, more powerfully until:\n\n\"Oooh Gooood... Jezuuuss, Dannneee, ooooh, ooohhh YEESSS, YESS, OH FUUUUCKK YESS, YEESSS, GOOOOODDDD!!\" she screamed as her orgasm powered through her, tightening around me almost unbearably. That was all I needed, and I clenched my teeth to hold back the roar as I came like lava, like a boiling torrent, my heart and life pouring into her in the most powerful climax I'd ever experienced, so powerful my jaws ached with the way I'd clamped my teeth together. My body shook as gigantic pleasure swept through me, blanking my sight and making my ears pop with its fury, wave after wave of sheer delight pulling me off this planet and hurtling me through limbo where all I felt was infinite pleasure and all I could hear was the scream of my heart's desire as she climaxed with me.\n\nSherry collapsed bonelessly on top of me, her heart thundering against mine as I surfed through the aftershock of such a gigantic climax, and her trembling and twitching on top of me brought me back to my senses, restarted my nervous system, and now I could feel her, her body trembling in her own aftershock as both of us slowly recovered our senses after such a huge adrenaline rush. Her closed eyelids fluttered, but she didn't open her eyes, she just mewed softly as I rolled sideways so she'd be more comfortable, but her eyes flew open as I slowly withdrew from her, and she smiled contentedly.\n\n\"Danny, I never guessed it would be like this, I just wish...\" as two large tears welled up in her perfect eyes and spilled down her satin cheek.\n\n\"You wish what, sweetheart?\" I whispered, mopping her tears with a corner of my coverlet, and she reached up to once again run the tip of her forefinger over my lip.\n\n\"I wish I'd been strong enough to do this with you years ago, baby; we've lost so much time, Danny, how do we make it up? I love you so much, for so long, all the time we've lost, when we could have...\"\n\nI stopped her with a kiss.\n\n\"We still have all the time in the world, Sherry, and we can do anything we want now; there are no rules anymore, no one sitting and judging us, just you and me. I love you Sherry, I have for years, I always will, so it's our time now, you and me and the life we choose.\" \n\nShe looked into my eyes, doing that thing she used to do when we were younger, checking my eyes to see if I was serious.\n\n\"So if we, I don't know, decided to get married, for instance, would you go along with that?\"\n\nI kissed her again, enjoying the look in her huge, beautiful eyes.\n\n\"In a heartbeat, Cherie, in a fucking New York second! There's nothing I'd want more than to be your husband, I dreamt of nothing else when I was a boy; nothing's changed, believe me!\"\n\n\"Then promise me one thing, Danny,\" she said; \"When you qualify, will you marry me?\"\n\nI kissed her as tenderly as I knew how, dragging out each kiss as long as I could.\n\n\"I'd marry you tomorrow, Sherry, you should know that by now, but yes, the day after I graduate, I'm making you Mrs. Daniel Forbes, so Sherry-baby, will you marry me?\"\n\nSherry grinned and stroked my lip with the tip of her finger.\n\n\"Yes Danny, I will, that's all I ever wanted!\" \n\n\"Wait there!\" I grinned, kissing her quickly, before jumping out of bed so I could rummage through my dresser drawer while Sherry watched in puzzlement. When I found what I wanted, I headed back to the bed, and as she watched with that irresistible 'lip-biting' grin of hers, I got down on one knee and offered her my great-grandmother's antique diamond, sapphire and ruby engagement ring.\n\n\"Mum told me to give this to the girl I married, to the girl of my dreams, so once again, Cherie Morrison Young, will you marry me?\"\n\nSherry giggled happily as she offered me her left hand so I could slide the ring on her finger, a perfect fit.\n\n\"Danny, of course I'll marry you, I dreamed about this moment so many times since I was a girl, I just never dreamed we'd be so naked when it happened!\"\n\n****\n\nWe made love again, and again, all though the night, as many ways as she wanted, in every position I could think of, slowly and gently, and banging her like a maddened machine, but always only the way we wanted, the way she was ready to explore, but always, in the back of my mind was the sheer thrill of knowing I was with the only girl I'd ever loved.\n\nI stirred sometime in the wee hours, a little disoriented at the feel of someone in bed with me, her arm thrown back and her beautiful face in cleat profile, her small, perfect breasts rising and falling as she slept so peacefully next to me. My heart swelled at the sight of her so innocently asleep, and memory flooded back, memories of making love with my beautiful lost sister just a few hours earlier, the girl I wanted and for whom I lusted. She'd left a huge hole in my heart when she'd disappeared, pain I thought I would never recover from, but the flip-side of that jumble of emotions was the fact that now I knew why she'd run from me, and now I had her back, my Sherry-baby, my dream girl, my sister.\n\nOkay, so she wasn't really my sister, she was my aunt, and I didn't know if that made what we had done better or worse, but I didn't care. The one girl in the world I'd idolised and wanted all my life had finally given me the one thing I'd always wanted: her love and commitment and the emotional groundswell inside me was impossible to ignore. It wasn't the sex so much as who it was I'd had sex with; Shel was my sister, but she was also my aunt, my mother's half-sister and family no matter which way you cut it; what did we do now that we'd crossed the Rubicon, taken that one, irrevocable step? \n\nPandora's Box was open, Humpty-Dumpty had fallen off his wall, and no amount of rationalisation was going to disguise the fact of what we'd just done.\n\nAnd yet, surprisingly, I couldn't care less. I had seen and remembered in my Sherry-girl's eyes the exact same resolve. Too much had happened, we'd already lost too much time together, life had made some serious choices for us, and what we'd done didn't matter now, because everything had changed; now we could take those choices back and make new ones, choices that made sense in our new reality, and that reality was that we were together, and we were staying together. \n\nI'd asked her to marry me, and I'd made that commitment not because she was hot, and naked, and with me; not because it was a spur of the moment thing driven by lust and the heat of the moment, but because I knew all the way through me that marrying her and pledging my life to her was what I wanted, that was all I wanted and she'd made the same commitment to me.\n\nSatisfied that I had no regrets, and only excitement for the life ahead for both of us, I settled down again, drawing Sherry closer to me. She turned to me in her sleep, her arm sliding across my chest to hold me, breathing \"Love you, Dannee...\" as she snuggled down against me. I kissed her forehead gently, revelling in the feel of her snuggled tightly against me and pulled the covers over both of us, happier than I'd ever been in my life before.\n\n*****\n\nThe sound of knocking finally roused me from the complicated dream I was having about Mum, school, Sherry when she was a teenager at home while rain drummed on the windows. I looked blearily at my bedside clock: 9:30 in the morning. Who the hell could that be? This was my only free Saturday; the one day of the month with no lab, no rounds, no lectures, no ICU, just me-time, and someone was disturbing it. At that, I suddenly realised I was in bed alone. For a single panicked second I thought she'd gone again, changed her mind or regretted what we'd done, and done a runner, but then I saw her clothes still slung carelessly over the back of my chair, and I slumped back in relief. So where was she? \n\nAs the knocking resumed, I finally clocked the sound I'd been hearing in my sleep: the shower was running, and had been for a while, judging by the humid feel of the room; obviously old habits die hard. I grinned as I recalled when the family was all still together, how we'd all be queuing outside the bathroom grumbling and complaining while Sherry took one of her epic eons-long showers. I clambered out of bed, reflecting that I needed a shower, too, and padded over to the door. I opened it on the chain, to see Sam waiting impatiently, dressed in shorts and a hooded top, with battered Converse trainers on his feet.\n\n\"Come on, Fatty!\" He grinned. \"Running time is here, you need to get some of that Lab-flab off your porky little belly, old son! Time's a-wastin', Danny-boy!\"\n\nI stared blankly at him, then memory crashed in; Saturday, I was supposed to be running a 10K with him! How the hell did I get out of this gracefully; Sam was a fitness fanatic, and we'd been planning this run for three weeks now, but I had my heart's desire taking a shower ten feet away, and right now I didn't want to run; I wanted climb in there with her.\n\nFortunately, Sherry made that decision for me, waltzing out of the en-suite shower wrapped in a brief bath-towel, with her naked shoulders and endless, flawless legs on display for all to see, only to pull-up short as she saw Sam standing in the doorway, a thunderstruck expression on his face.\n\nSam took his time looking away, I noted, not that I blamed him; in the morning light, Sherry looked even more delectable than she had the previous night. Her pale skin glowed in the golden-white morning sunshine, and she looked delicious, delightful and definitely more than I deserved.\n\nSam finally tore his eyes away from her to look at me, a rueful grin on his face, tinged with no small amount of envy, as Sherry smiled and slipped up behind me to slide her arms around me and kiss my neck before grinning at him and winking. I felt I owed him some kind of explanation, but when I tried, he waved it away with a good-natured grin.",
        "\"It's about fucking time, Danny-boy! Don't worry about running, I'll do it solo, I can see you're otherwise occupied! We can do this another time. And now, I have a 10K to run, so I'll see you at lunch tomorrow, usual table, yeah?\" \n\nI nodded and he grinned once more, shaking his head.\n\n\"You lucky fucker! I dunno, if you fell in a barrel of shit you'd come up with a gold sovereign between your teeth and a winning Lotto ticket in each hand! Don't do anything I wouldn't do, kids!\" \n\nWith that parting shot, he jogged down the corridor and disappeared around the corner.\n\nSherry rubbed her leg along mine, and danced her hands over my stomach, before nipping my ear and patting me on the backside.\n\n\"Come on Danny, it's my day off today, and yours; what shall we do? I know, why don't you take a girl out and show her a good time? You buy me brekkie and I'll...well, you'll see!\"\n\nAs I turned around, Sherry let the towel drop to the floor and I was treated to the glow of her full magnificence in the full light of a perfect day, and it was a heart-stopping sight, one I'll never forget. My hands went all by themselves to hold her by her waist before slipping down to cup and squeeze her perfect bottom. She was just as I had always pictured her, her flawless skin glowing with health and the taut firmness of youth, her eyes as bright, as alive as I remembered them, and her short boy-cut quiff, black and glossy as a raven's wing, emphasised how fair and flawless her features were. In every way I could imagine, she was utterly perfect, and I drank in the vision of her beauty, a thousand times more and better than memory had painted her.\n\n\"Never again, baby boy, I'll never let you go again! You're going to marry me, remember?\" she murmured as tears welled in her huge, perfect eyes. \"You're mine, Danny, you're my own Danny-boy, and I'll never leave your side again, I swear!\"\n\nKissing the tears from her eyes, and tasting the wine of her lips once more was all I wanted to do, forever, and I sensed the truth of her words all over again; she was there, with me, and this was it, we were us now, and it was forever.\n\nShe grinned, and gently tweaked my nipple.\n\n\"Go get your shower, baby, I need breakfast, and I want to be seen with you, so move it, soldier!\" \n\nI grinned back, and, as I wanted to be seen with her, I 'moved it,' dashing into the shower and shaving as I showered to save time. That done, I dressed as quickly as possible, scraped my fingers through my hair, the closest I was coming to combing it, and I was ready to rock and roll. Sherry was already dressed in the striped top and skin-tight leggings she'd showed up in, her hair was once more sculpted into the perfect quiff she always wore it in and her jacket was belted around her waist, showing the world what a tiny waist she really had.\n\n\"Where do you want to eat, baby?\" I asked her, and she grinned.\n\n\"The Piazza, they do a really nice breakfast, or they did, and there's a Starbuck's there, still need my coffee, Danny, some things never change!\"\n\nWe headed off to the Piazza; they did do a nice full English breakfast, and it was fresh, too, not the grease-soaked remnants I'd eaten elsewhere.\n\nWe were chatting quietly outside over a coffee when suddenly a group of students wandered up, and one huge guy, probably a 4th Year man judging by his age, came walking over to us and clamped hold of Sherry's shoulder.\n\n\"Hello babe, I was wondering where you'd gone, I see you came back to me, come on, let's go!\"\n\nSherry pushed his hand off her and took my hand. \n\n\"Go away Michael, Danny and I are busy!\" she flared, making the hulking lout grin nastily.\n\n\"I've got unfinished business with you, so come on, and you, feller, just piss off, me and my girlfriend are busy!\"\n\n\"I am not your girlfriend, I never was, so leave me alone or...\" said Sherry, and Michael grinned nastily.\n\n\"Or what, you're going to ask this wimp to help you? Yeah, right, just get moving, pal, I want to talk to my girlfriend!\"\n\nI stood up.\n\n\"You heard her, now piss off, we're busy, so get your meat-hooks off my fianc\u00e9e.\"\n\nMichael moved up close enough for me to smell his breath and stared in my face.\n\n\"Be smart, little boy,\" he sneered, reaching for me, \"this is between me and my girl; she's not your 'fianc\u00e9e', okay, so just fuck off, why don't you.\"\n\nI slapped his hand away as I stood up.\n\n\"Listen, fuck-nugget, my fianc\u00e9e told you to leave, I'm telling you to clear off, so why don't you just go swing your micro-dick somewhere else? Just piss off back to wherever it is you go to do whatever it is you do and quit pestering us, there's a good moron, eh?\" I said as insultingly as possible.\n\nI saw the rage rise in his eyes, and his hands reaching up to grab me, so I gave him the knee in his balls just as hard as I could, and I know how to deliver a proper, powerful Khao-Trong straight knee-strike, it was the first Muay Thai kick I'd ever mastered; it's normally a belly strike, but he was a good six inches taller than me, so he got it lower down and his eyes goggled as it mashed his balls. As he gasped in agony and hunched forward, the heel of my left hand came up as hard as I could under his chin and slammed his teeth together, scrambling what brains he had. As I spun away from him, he got a downward elbow strike from my right arm, my dominant arm, hard enough in his kidney area to hurt plenty and probably make him piss blood for the next few days. Michael hooted and dropped to his hands and knees, and I couldn't resist such an open target so I gave him an instep kick in the crotch like David Beckham taking a shot at goal.\n\nMichael screamed and folded over while his stunned posse of hangers-on watched their boss-man writhe in agony on the plaza floor, cradling his pulverised balls and vomiting while the front of his jeans darkened. I nudged him with my foot.\n\n\"What are you crying about? Big man like you wants to yank women around, should be able to take a big hit like a man. Come on boy, take it like a man. You know what they say, 'Go big or go home?' That's a really good idea.\"\n\nOne of his friends caught my eye, so I crooked a finger, beckoning him closer.\n\n\"Tell your girlfriend down there next time he talks to my fianc\u00e9e I'll put him in a wheelchair, understand? Now you'd better get him to Accident and Emergency, I think I turned his balls from outies to innies, they might need to yank them out again... if they can find them...\" \n\nWe walked away hand in hand as Michael's friends stared after us, while Sherry looked up at me in confusion, her mouth an 'O' of surprise.\n\n\"How did you do that Danny? Michael's huge; he's twice your size! I never saw anyone do that to him, that was... scary, but it felt good, I bet we never see him again! Really, Danny, how did you do that?\" \n\nI smiled right back at her.\n\n\"I've been doing this for years now, you must remember, surely? I started when I was still in school, Taekwondo, with some Mixed Martial Arts training, a little Muay Thai, Hapkido, Filipino escrima, anything that worked, all mixed in and shaken around. After you left it was all I had, so I just kept at it. My Sabum, my Taekwondo instructor, didn't believe in limiting us to any one rigid style, so we learned pieces of everything, and we were encouraged to put them together any way that worked. In a real street fight no one cares how you deliver a punch, nobody's taking notes or giving marks for style, all that matters is that you walk away in one piece and hopefully don't die.\"\n\nSherry frowned, and her fingers caressed my face...\n\n\"I never saw anything like that before, it was...amazing, but no-more, please? I don't want you to get hurt, not now I've finally got you...\" \n\nI squeezed her reassuringly.\n\n\"Don't worry, I won't; I was just showboating to make him and his friends think twice about coming back for seconds. If they'd all jumped me I would have been one dead chicken, believe me, which is why I took out that idiot first. My Sabum always tells us, if we're outnumbered, go for the leader, take him out of the game and his followers will hesitate. Then you run away before they catch on, just dig-up the Hell out of there! Michael's just a lumbering idiot; he's obviously only ever used his size, but bulk and muscle isn't enough, and he just found that out. Who knows, perhaps next time he'll keep his mouth shut, mind his manners, and keep his hands to himself. Are you going to be okay?\"\n\nSherry was still looking strangely at me, obviously still puzzled at what had just happened, and how fast, but then she smiled and nodded, so I pulled her closer and slipped my arm around her neck so I could look into her beautiful bright eyes, seeing the question there.\n\n\"Baby, don't worry, I'll be careful, really, I have to be; even though I've been doing this four years now, I'm still not good enough or stupid enough to take on half the guys and girls I train with. It takes a lot of time and discipline, and I just don't have enough of either; I just do this to keep fit and in trim. I can't smash bricks with my hands, or break boards with my feet, kick someone's kidneys out of their ears, or come off all athletic and leaping around like Jackie Chan or Jet Li. All that stuff's for show-offs, but I do know enough to take care of myself, and you too, and that's enough for me. I have some speed, I can take a hit and my Sabum says I have enough restraint to not kill someone or hurt myself. She says I have 'inner discipline,' which helps with my studies, too, and that's really all I wanted out of all this.\"\n\nSherry grinned and hugged herself closer to my side.\n\n\"I want you to know, Danny, I never went out with him. He just never let me alone. He's just a brainless thug, but at least I know my fianc\u00e9 can look after me!\" She laughed, and poked me in my side, in my ticklish spot, making me jump, the way she used to do when we were young. \"And I still know how to make you say 'Uncle,' Danny-Boy!\"\n\n*****\n\nWalking through the campus, I was gratified and more than a little jealous of the number of guys who checked-out Sherry, but she grinned and slipped her hand into my back pocket, squeezing and massaging my buttock.\n\n\"Calm down, Sir Galahad, I'm with you, and they're only looking. Besides, all those cute little freshers staring up a storm at you? You see me getting worked up over it? No, you don't, because I'm not. I KNOW you're with me, so chill, Danny-baby!\" \n\nI 'chilled,' because she was right, I was just being over-sensitive, after pining for her for so long, and finally having her to myself, and by the time we'd found a table at one of the little coffee shops I was back to just drinking her in and marvelling at how, just when I needed her most, she'd come back into my life.\n\n\"So now that we're 'us,' Sherry, what's next? Where do we go from here?\" I asked, anxious to find out what came next and how we got there.\n\nSherry tapped her coffee-stirrer against her bottom teeth, an unconscious mannerism of hers when she was thinking that I'd missed so very much.\n\n\"What are you asking, Danny?\" she murmured, so I took a deep breath and plunged in feet first.\n\n\"What I WANT is for us to run away, forget all this, just you and me, go somewhere and start a life that's just you and me.\"\n\nShe looked startled at that that.\n\n\"No Danny, this is what you want, you have to finish...\" she began, but I interrupted her\n\n\"What I actually think you should consider is coming back and finishing your MBBS; you already have two years, and you've been out for a year now. Pretty soon you'll have to make a decision to come back, re-instate your transcript and take up where you left off again, or let it all go. That would be a real waste. I remember how much you wanted to be a doctor; that's kind of what kick-started me as well.\"\n\nSherry nodded slowly, obviously thinking about what I was saying, so I finished unravelling my thread.\n\n\"Even if you decide not to come back and finish qualifying, I'm still going to be here. I'm not letting you out of my sight. I do plan on qualifying, but I'd drop that for you in a heartbeat, because I won't lose you again. I can drop out and find a job, we can get married now, today, if you wanted. You should have your mother's insurance payout by now, I know Mum set it up in a trust for you, and I still have Mum's life insurance money, the compensation from the airline, most of Dad's and the money from the sale of the house. We have a lot of money, Sherry, more than enough money to get married, buy our own home outright and start a family, anything else we want; we have options, Shel.\"\n\nSherry took my hand, squeezing it tenderly.\n\n\"Don't leave medical school, Danny, I know it's what you want; don't mess with your future, and I'd never ask you to. I can wait, baby-boy. I've waited half my life, a little while longer won't hurt, just please don't throw it all away because of me; be who you're supposed to be.\"\n\nSherry stood up, bent over, and planted a soft kiss on my lips.\n\n\"Okay, buster, now we've got your life sorted out, only one question remains: how long is it going to take you to get all your stuff and move it to my place?\"\n\nI goggled at her, and she smirked happily.\n\n\"You don't think I'm letting you out of my sight, do you, baby? Get your stuff together, Dan-Dan, we have things to do and we're wasting time talking. Chop-chop soldier, up and at 'em!\"\n\nSherry stepped away from the table and grinned at me lost in sudden contemplation of her perfect behind and long sleek thighs in her glossy leggings. She wiggled her lovely pert little apple bottom at me.\n\n\"If we hurry back to my place, sorry our place, you get to peel them off again, baby; you do know I'm 'commando' under here, right?\"\n\nThat did it; suddenly my jeans were far too tight, and thoughts of medical school, coffee shops, and hulking thugs all fled as thoughts of my sister/aunt/girlfriend naked rushed in to take up all my available head-space.\n\n\"Lead the way, Sherry-baby!\" I croaked, while her smile broadened and her eyes danced as I took her hand and let her lead me away from the table. This was just the best day of my life, and I wasn't going to waste a single second of it!\n\n****\n\nSherry's place was a rather swish two-bedroom apartment in an exclusive, newly-built and deceptively modest apartment block in Locks Heath, right next to the River Hamble and all the swish marinas and private super yacht moorings. I walked around in astonishment that a barmaid could afford a place like this; it must have run to at least \u00a32,000 a month, four or five times what my Student Halls accommodations cost. She noticed my expression and grinned.\n\n\"Don't worry, baby-boy, it's mine; if I had to live on what I earned at the pub I'd starve under an overpass. Mum arranged with my trustees to pay for this place when I first came down here. All my personal expenses are mine, but I still have the bulk of the insurance payout stashed away in the trust. It was the only way Mum could make sure my deadbeat father, wherever he is, couldn't get his grubby little mitts on it, and, because the trustees have invested wisely, I still have every penny I was paid out, and then some. The interest alone on that money pays for this place, my utilities and any other expenses.\"\n\nShe looked sad, and her lip quivered as her eyes welled up.\n\n\"Mum took good care of me, Danny; she may have been my half-sister, but really she was my mum, she loved me like a mum should, and she made sure I was properly taken care of. I miss her every single day, baby... \"\n\nI pulled her to me and hugged her as her arms went around my waist as she cried silently into my shoulder.\n\n\"I miss her, too, baby, every single day. I miss her nagging me to clean my room. I miss her doorstep cheese sandwiches and her threatening me if I leave any; I miss her laughing at my clothes, I miss her slapping me on the butt as she walked past and asking me when I got so tall. I miss her telling me to get a haircut, I look like a haystack. I miss the early morning cup of tea on my nightstand. Even though it pissed me off, I miss her telling me about all her friends' unattached daughters and all the big hints; I miss her sitting on the couch at night watching those garbage soaps, and I miss Sunday morning bacon sandwiches and a mug of tea with her after a Saturday night out with my friends, but most of all, I miss just seeing her smile and hearing her singing old pop songs while she cooked and cleaned. It's so hard not having her around; it's hard knowing I'll never see her or hear her voice ever again. She was yanked away from us; I never even got to see her off, and then she was gone. It's so wrong, so unfair...\"\n\nSherry hugged me, feeling the loss in me, and when she looked up at me her glorious eyes were two bright wells of loss and need.\n\n\"I'm sorry I never came to the service, Dan, I couldn't, it was too much to come and see for real that she was gone and you would have been there... I wasn't strong enough... it was all just too much for me. I mourned her in my heart, baby, and kept her here inside me, because she was my mum, too, and I loved her so much... \"\n\nI hugged her even closer, hoping like hell I didn't start blubbing, but then a thought struck me.\n\n\"Shel, I used to go see her every Sunday, and every once in a while I'd find a bunch of flowers on her grave, Chrysanthemums, her favourite; was that... \"\n\nSherry nodded, tears spilling down her perfect cheeks.\n\n\"I couldn't come while you were there, Danny, you know why, but I couldn't keep away. I wanted her to know... I had to do something... \"\n\nI kissed her forehead and held her to me.\n\n\"At least you were there for her, Shel, you came to see her, that's good enough, I just wish...\" I murmured, and she hugged me even tighter.\n\n\"I know, but...I just couldn't, it was too...I'm sorry, Danny, I wish... \" \n\nI held her to me.\n\n\"I know, but now it doesn't matter anymore, we're good now, yes?\" \n\nSherry looked up at me and blinked the tears from her eyes, swiping her eyes with her cuff before she grinned suddenly, and lightly punched me in the chest.\n\n\"Whoa, what was that for?\" I complained, and she grinned again as she punched me again.\n\n\"That's for making me teary, you rotten little piggy! This is our happy time. I've got you and you've got me, no more sadness, got it? Good, now come and help me work out how the closets are going to work. And Danny, there's a bedroom through there... \"\n\nShe grinned at me and darted away, squealing as I gave chase, cornering her in a bright, spacious, airy bedroom bigger than my whole student digs, with an enticingly spacious king-sized bed. Sherry squealed again as I tackled her onto the bed, rolling around with her until she ended up on top of me.\n\n\"Like it so far?\" She smiled, and I squeezed her bottom as I tried to kiss her, as she ducked and grinned while avoiding my attempts to kiss her.\n\n\"Nice pad, kiddo, you're doing well for yourself,\" I drawled rolling her under me with a surging heave so I could kiss her properly. After some long and thoroughly enjoyable kisses she stroked my hair out of my eyes.\n\n\"Do you like it here, Danny? We can get another place if you like...\" she began, but I kissed her to shut her up, before rolling off her to lie next to her, with my hands still clamped firmly around her lovely juicy little bottom.\n\n\"Nah, we'll stay here, it's a nice pad; I think I'm going like dating a rich chick... \" I grinned, waggling my eyebrows like Groucho Marx.\n\nSherry leaned up, smiled and did that sexy, lip-biting thing she did that always drove me crazy, before pecking me on the lips.\n\n\"So you're only interested in my money, then?\" she teased, and I squeezed her bottom, making her giggle.\n\n\"Nope, I kind of like your body, too,\" I leered, and she kissed me and squirmed sexily against me.",
        "\"Speaking of which, remember I told you I was 'commando', Danny? What are you going to do about it?\" she whispered, her beautiful eyes wide, innocent, teasing and wanton.\n\nThat was all I needed; my cock, already hard from all the horsing around, suddenly felt even more engorged and almost painfully constricted; I wanted her, now, and she was practically begging me to strip her and resume what we started the previous night.\n\n\"Commere, you,\" I growled, clasping her to me by grabbing her delicious bum and rolling sideways so we were lying face-to-face on that huge bed. Sherry sighed as I slipped my hands once more into the waistband of her legging and yes, she was definitely 'commando' under them.\n\n\"Love me Danny... \" she whispered, \"Make me naked... \" As that was what I intended anyway, I slid her leggings down so I could more easily grope and squeeze, and fondle and plunder her delicious bottom.\n\nSherry ground her crotch against me, her eyes glazing slightly as the sensitive flesh rubbed against the ridge in my jeans where my cock was trying to burst out.\n\n\"Ooohhh Dan, yess...\" she breathed, before suddenly sitting up to slip off her top and sling it across the room.\n\n\"Naked now!\" she sang. \"Your turn!\"\n\nI was a millisecond behind her, unzipping my fly and kicking off my sneakers while she tugged my polo shirt off, and now we were both naked again. Sherry pushed me back over onto my back, and slipped on top of me, kissing me hungrily as my hands roamed and fondled her delectable body. I tried to roll her off me; I wanted to taste her so badly, but she had other ideas.\n\n\"Nuh-uh, not now, later!\" she gasped, instead grasping my aching cock and aiming it, a brief second of hot wetness, and then she was groaning as she slid back down onto me, impaling herself on me in one long slow thrust.\n\nWe rode, and pounded and writhed and entangled with each other for Lord alone know how long, my world reduced down to glossy black hair, startling blue eyes, parted coral lips gasping my name and sweetly-scented pale sweaty skin rubbing against me, filling my head with her unique scent, the sweetest friction as she tightened and clasped around me again and again, the sound of her breath hissing between her clenched teeth, her entreaties as she sobbed and begged me to never stop, until finally, we could hold back no more and deny ourselves no longer. \n\nShe screamed my name piercingly and tightened around me in a death-grip, her muscles rigid and tendons taut as bow-stings as she pulsed around me again and again. It was too much for me, and I came like an avalanche, like a torrent in flood, my ears popping and my eyes bugging with the intensity of my climax as I literally turned inside out, giving every last drop of my essence, my life, my heart and soul to this beautiful girl who'd haunted my dreams and danced through my every waking fantasy my entire life.\n\nSherry slumped down on top of me, her entire body quivering with aftershocks as our gigantic mutual climax slowly ebbed and died away, leaving us limp as wrung-out dishcloths. Sherry finally stirred, planting a wet kiss on the tip of my nose.\n\n\"When we make our babies, Danny, that's how, got it?\" she murmured, the ghost of a mischievous smile on her lips showing through the mask of exhaustion. I was almost too tired for words, that volcanic eruption had floored me, but I kissed her cute little chin.\n\n\"No arguments here, Sherry-Baby.\" I grinned before pulling the coverlet over us and smiling at her contented purr.\n\n\"I'll make us a snack later, Danny, just lemme have li'l snooze...\" she tailed off, asleep before she finished her sentence, so I slipped my hands down to cup her gorgeous plush little bottom, and let myself drift off.\n\n*****\n\nNext day was a busy day; Sherry insisted on getting all my stuff from my room, rather than my plan, to move my stuff gradually as time and schedule allowed, but to be honest, the idea of living with my Sherry overrode everything, so we headed back over to the halls of residence. My stuff easily fit into her car, a rather nice, fully restored MGB GTV8 in British Racing Green, and in the laughably small boot of my classic Black over Silver 1984 Ford Tickford Capri with the Aston Martin Tickford engine upgrade. I was a student, it wasn't like I had a lot of stuff anyway, but Sherry still gave me a raised eyebrow 'really?' look when she saw my 80's 'hot-shot racer-boy' car, my one indulgence. Something told me that one day pretty soon I'd be trading my precious dream car for something a little more practical, but I didn't care; we still had Sherry's MGB, and I had my dream-girl.\n\n****\n\nLife for us settled into a pattern that worked for both of us; I usually had classes all day, and wards, and usually lab into the evening, so I didn't really see much of Sherry other than when I kissed her goodbye in the mornings (and you can't even begin to understand how difficult that was for me, but she kept me focused, she kept me on my toes, her presence in my life kept me striving when it got tough and I felt like I was going to fail) the thought of the life we'd have when I was done with medical school was what spurred me on and kept me going, and my dream-girl, my Sherry-Baby was there for me 100% of the time. My life was finally making sense, and it was all due to her.\n\nSome nights, if I managed to get off early, Sherry would meet me at my training site, a proper boxing gym down on Drivers Wharf, where they'd let me use the heavy bag and practice my various Taekwondo strikes and kicks safely in the ring; in return, I'd spar with some of the proper boxing enthusiasts, teaching kids who were coming up in the rankings how to punch, duck and cover, and guys my age who'd developed a love of the ring or were trying to regain a little fitness. It was a happy arrangement, it meant I got to develop my technique and try out kicks and punches safely on proper weight-bags, and no-one got hurt. Sherry loved to watch me train, and the guys loved to watch her, so we all got something out of it.\n\nThis became something of a routine for us; Sherry would meet me there, watch me, and wait while I showered, all the time being chatted-up by the kids who trained there, then we'd go grab a bite at some place we'd never tried and go home. That particular night, though, something was different; I was well into a kicking routine before I noticed the time, and that Sherry wasn't there. She was supposed to be, we were going to the cinema that evening, and I'd even started my training routine early so we'd have time to catch the movie. Something didn't feel right; if she was running late, she'd call the gym and the guy in the office would give me the high-sign, but he hadn't. \n\nWorried, I decided to take a peek outside, maybe she was held up, but what I saw drove all thoughts of cinema and movies out of my mind. Michael and his cronies had her, he had his big paw over her mouth and he was dragging her into the alley. Sherry was struggling and I'll never forget the leer on that hulking oaf's face. I lost it, and suddenly I was in among them, handing out disabling crotch kicks and kidney punches, getting those animals off my girl. \n\nMichael looked up at me, his grin of triumph disappearing in a welter of blood as he got a full-on, unrestrained forward axe-kick powered by all my rage and disgust in the middle of his face. I was wearing MMA shin, knee, and instep leg armour because I'd been practicing full-power belly kicks, and he got the full force of the kick, multiplied by the thick, hard polycarbonate of the shin armour. His face exploded into a bloody ruin, and he went down. His friends tried escaping, but they were going to be in the accident and emergency unit, the knee, hand, and elbow strikes to faces, kidneys, bellies, knees, collarbones, and crotches were going to make sure of that. \n\nSherry tried to speak to me, but I was still too furious to think straight as I grabbed Michael by his lank hair and dragged him into the gym, ignoring his screams and blubbering as I tossed him into the ring; he wanted to mess with me, now he was going to get his chance. I waited for him to stand and face me, watching the fear percolate through him.\n\n\"I warned you, you stupid fucker, I gave you fair warning, but you're too stupid to learn, so now I'm going to teach you a lesson,\" I gritted. \"Come on, dick-head, what are you waiting for, not man enough to take on a man?\"\n\nHe lumbered toward me, but a textbook karate dragon-stamp kick to the side of his knee left him staggering for balance, and a spinning back fist to the middle of his face spread his already pulped nose and shredded lips across his face and laid him out flat. I should have left him there, he was already crushed, but my blood was up, that fucker needed to learn a lesson, so I was lining up to deliver a highly illegal, very dangerous wrestling move, a single knee-drop with all my weight, bolstered by my padded rigid knee-armour and coming off the ropes for added momentum concentrated right on his sternum, a move guaranteed to snap his ribcage like a handful of pencils when I saw Sherry staring in shock at me. I saw the look in her eyes, and my anger drained away like water from an upturned cup.\n\nSuddenly, I felt ashamed of myself for what I'd done in my anger. I was training to be a doctor, for Chrissake; did I want to have something like that on my conscience? How could I be a healer and do that to someone? The answer was: I couldn't; fighting in the ring as a sport with rules and restraint and referees to stop things going too far was one thing, permanently disabling an injured man was something else, and it wasn't me. Michael wasn't worth what it would cost me to beat him any further, he was already injured. I knew if I stayed in that ring I'd lose Sherry forever; how could she ever be with someone who'd destroy a man he'd already beaten? \n\nI turned away and climbed out of the ring, sickened at what I'd done, but knowing I was done; there was nothing to prove and everything to lose if I stayed in there. I knew now that I would never step back in the ring, not now I knew what I was capable of. Sherry knew it was over for me, too; she'd seen my epiphany as clearly as I had so she didn't say a word, just kissed me gently as she took my hands and started unfastening my gloves.\n\nThe dead silence in the gym sawed at my nerves; you could have heard a pin drop, and then one of the kids working on the speed bag, one of the kids I coached, started clapping, followed by the others, one by one, until they were all clapping, and I knew they weren't applauding what I'd done to Michael; they were applauding me for what I hadn't done, for walking away and not injuring him further just because I could.\n\nThe gym manager looked at me strangely, and I readied myself for the outrage I knew was coming my way, but he called me into the office and showed me the video recording of Michael and his friends accosting and assaulting and groping Sherry, and her fighting back until he slapped her and dragged her to the alley. \n\n\"I think the police are going to want to see this. Now go shower and take your girl home.\" \n\nAs I turned to leave he clapped me on the shoulder.\n\n\"You're a good man, Danny, you made the right choice; maybe I'll see you around sometime, eh?\"\n\n*****\n\nThe police were indeed very pleased with the video; so much so, they were willing to call Michael's injuries a result of the scuffle in the alleyway, without looking too deeply into how a slight girl like Sherry could disable a hulking behemoth like Michael. Oddly enough, no one who was in the gym when Michael and I had our go-round in the ring remembered seeing him in there at all, no-one remembered a fight between him and anyone else on the date in question. In fact, the gym records showed a catalogue of sparring bouts taking place all through that evening, so no fight could possibly have happened then; the ring was constantly in use that entire evening. \n\nThe video did show \"someone\" wearing a head protector, a white singlet and boxing trunks and what looked like knee-length boots (my shin armour) wading into the gang who were clearly assaulting Sherry, but no-one could positively identify him, so Michael's claim was dismissed because the police had no inclination to search our home for the 'boots' his alleged assailant had been wearing (besides, they were safely hidden in the bottom of Sam's closet back in Bailey Street Student Halls, just in case... ) \n\nSherry's statement to the police and the video evidence from the gym's camera system was enough to have Michael arrested, charged, and finally sent to trial. His cronies all turned Queen's Evidence to avoid more serious charges when another eleven girls came forward to report a catalogue of serious sexual assaults perpetrated by Michael and his band of buddies over the previous three years. The case made the national newspapers, and the university showed up in a pretty piss-poor light because of it, either ignoring the complaints or sweeping them under the mat and hoping they'd go away; some pretty serious reorganisation went on at the top over this whole thing.\n\nMichael eventually went to trial at Southampton Crown Court. Predictably enough, he pleaded not guilty, so the trial proceeded. Many of the witnesses were still too traumatised to appear in court, so the judge allowed testimony over sealed video link, but Sherry wasn't afraid to testify in person. Her lucid testimony, about how he'd repeatedly pestered and intimidated her, and eventually attempted to violently abduct and rape her only put more meat on the prosecution's already solid case. The evidence from his cronies put the final nails in his coffin.\n\nMichael was found guilty of all charges, and sentenced to a 27-year minimum tariff on eleven counts of rape, eleven counts of aggravated sexual assault, twelve counts of indecent assault, and twelve counts of aggravated assault. He was classified as a Category A sex-offender, and sent to a prison especially set aside for dangerous and violent sex offenders, a grim place a long way from Southampton and his victims. He'd also be placed on the Sex Offender Register for an indefinite period once he'd served his full sentence. Sherry had no arguments with that; in her book he was a dangerous animal, one to be kept caged-up, and the fact he'd be a middle-aged man when he got out, if he ever got out, pleased her no end: you do the crime, you do the time.\n\nWe were in court for his sentencing, but he refused to even look at her, even though her gaze never left his features once all through the sentencing hearing; when his sentence was pronounced he started crying, but it was too late for that; any remorse he may have felt was too little, too late and didn't sway the judge noticeably.\n\nOutside the courthouse, Sherry was interviewed by a BBC News reporter as one of the few victims willing to disclose her identity in order to strengthen the prosecution's case and she told them what had happened to her, who she was, and how glad she was that such a prolific and dangerous predator had finally been caught, and that she was proud of her part in it, and how bad she felt for the other girls whose lives had been blighted by what he'd done to them. I was unbelievably proud of her, at her willingness to be identified as a victim and for her part in sending that animal to jail. The cameraman couldn't seem to keep the camera off her, the reporter had to keep signalling him to point it at her so she could deliver her report, but I didn't blame him; I couldn't stop looking at her either... \n\n*****\n\nAs in all things like this, Sherry was a nine-day wonder; with her chic, movie-star looks and effortlessly stylish elegance she was a TV natural and requests to appear on national morning TV, local news programmes, TV magazine shows and that kind of thing kept coming. Inevitably, though, interest ebbed and finally died away, culminating in a last appearance on BBC News when a segment aired about victims and witnesses and their treatment in the press. \n\nWith all that drama missing from our lives, my quest to convince Sherry to return to medical school resumed, and finally paid off. She submitted her transcript, and was accepted back to restart Year 2 in the autumn with full credit for Year 1. Of course, that meant she would be a year behind me, but on the plus side, she'd be covering ground I'd already passed over, so she had me as a ready-made tutor and mentor. All in all, things were finally looking good and falling into place for us; it was a good place to be.\n\nTo celebrate, I took her out to a snazzy Japanese restaurant, where we stuffed on Unagi, and Ika Nigri Sushi, Yari Ika Tempura squid, and Chicken Teriyaki Teishoku. Sherry had never eaten Japanese before, and she lapped it up; she even braved the Sushi, and loved it, actually pinching mine too, so I knew where to bring her again... \n\nWhile we were deep in discussions about us, a discreet cough made me aware of a man in a smart suit and carrying a document-size manila envelope standing at our table. I looked up at him quizzically, but he spoke to Sherry.\n\n\"I'm sorry, I apologise for disturbing you, but am I addressing Miss Cherie Morrison-Young?\"\n\nSherry looked at me; I didn't know what to say, so I nodded.\n\n\"Yes, that is I; what can I do for you?\" she answered.\n\nThe man held out the envelope. Sherry took it from him, but didn't open it.\n\n\"I was asked to deliver this to you in person Miss Young. Please, do carry on, I'm sorry to have interrupted your meal, please enjoy the rest of your evening.\"\n\nWith that he did a strange, formal little head-bow and turned and left.\n\nSherry stared at me, and I stared back. What the hell was that about?\n\n\"Danny?\" she murmured, holding the envelope gingerly.\n\n\"Open it, Sherry; let's see what was so important they had to delivery it at this time of night.\" \n\nHer hand crept across the table and I squeezed it reassuringly. Sherry grimaced and carefully slit the envelope. Inside was a buff document folder, Sherry looked apprehensively at me, opened it, and gasped. Alarmed, I slid out of my seat and went round to her side to see what had startled her. I found myself looking at a an 8x10 glossy of a girl who could have been Sherry: the same mischievous, happy smile, the same glossy raven-black hair, the same huge bright blue eyes, even the same dimple in her cheek, but this girl wasn't Sherry, I saw that immediately, but she came awfully close. \n\nThe girl in the picture's hair was like something off a 1980's \"New Romantic\" fashion magazine cover, short at the side and swept back, cascading diagonally across her face in a long fringe that swept over one eye. She looked to be about fourteen or fifteen years old. I looked at Sherry, at her puzzled expression, and turned the picture over, hoping for a clue. On the back, in the bottom right corner, was written \"Rosalie Jean Morrison 14 Aug 1989\", and scribbled across the back was \"Happy Birthday Jamesie, I'm broke so you get this! Luv you Bruv! Rosa.\"\n\nSherry locked gazes with me, her eyes welling up.\n\n\"Danny... look, it's Rose... it's my mother... how...?\"\n\n\"I don't know, babe. What else is in there; who sent you this stuff?\" I managed, fascinated at how much Sherry looked like her birth-mother; I remembered Sherry looking just like that when we were young. It was almost eerie how similar they were...\n\nSherry opened the folder fully and a whole sheaf of papers cascaded out; I picked up some at random: her mother Rosalie's birth certificate, a marriage licence, more photographs, and in the midst of it all, a sealed envelope addressed to \"Sherry-Baby.\" Only Mum, Dad, and I had ever called her that. It was the title of one of those old pop songs Mum used to sing as she cooked and cleaned. Where had this stuff come from? ",
        "\"Read it, baby, find out what's going on here,\" I murmured, sliding the sealed envelope across to her. Sherry tore her rapt gaze away from the photograph and reluctantly tore open the sealed envelope. Two pages of handwritten paper in a firm, masculine hand, were inside. Sherry picked up the letter and began to read.\n\n\"Cherie, \n\nMy name is James Blake Morrison, and first of all, let me apologise for contacting you this way; until we saw you on television we, your family, had no notion of where you were, or even what your name was now, nor did we even know how to begin tracking you down. \n\n\"Your mother, Rosalie, was my baby sister, our Rosa-girl. I was still a student when she married your father, Sidney Young. She was only 17 when she married Sidney, and not even 18 when you were born. After he absconded, you and your mother went to stay with your newlywed half-sister: Sidney's daughter from his first marriage; I was still just a student when Rosa-girl passed away. My other younger sister was in no position to be able to look after you, neither were my parents, your grandparents, so my mother and your sister agreed that, because you were so young, only four months or thereabouts, the best and safest place for you was with her, as part of her family, and so that was what happened. \n\n\"I should tell you that it was your sister who first suggested this solution; she was in no doubt that she wanted you from the outset, my mother often commented on how much she loved you, like you were her own daughter from the very beginning, and looking after you, bringing you up as her own daughter was all she wanted.\n\n\"My mother kept in close contact with your sister, since she and my father didn't want to lose track of their only granddaughter, but my mother passed away unexpectedly just a short while later, as did my father, and with their loss also came the loss of our only link and connection with you; I lost three of the closest, most important people in my life one after the other, and with their loss I lost my only link with you. I never knew your step-sister's name, my mother never really had time to settle that part of our family before she passed away, and with Dad following her so soon after, just a matter of weeks, we lost all trace of you, and I didn't know where to start looking for you. \n\n\"My father never got over the loss of your mother; Rosa was the apple of his eye, his baby girl and my perfect little sister, a fun, smart, mischievous, happy girl, and when we lost her, a bright light went out of our lives. I believed then, and I believe now that his loss of Rosa, followed so closely by the death of my mother, is what hastened my father's own passing. I tried to find you, I searched, if I had found you, I would have tried to be the family you needed; you were my own family, my baby sister's baby. But you were a minor child, and I was a single man, still only a student. The authorities never allowed me access to any information as to where you were or how you were. I didn't even know if you were going by your sister's name, nor did I know what her name was; Mum never shared it with me, she never had time to, and Social Services would never divulge that to me. \n\n\"The enclosed photographs are of Barbara, Rosa-Girl, and me with our parents, and your grandparents in our home in South London. Barbara was training to be a kindergarten teacher when she married and moved away, you would have been perhaps two at the time, and we've heard nothing of her since; as far as I know, apart from my children and now my grandchildren, you are the only family I have left, and all I have left of my dear, sweet, funny, cheeky baby sister. \n\n\"I have to say, when I saw you on the BBC News I was astonished at your resemblance to your mother, to how I remember your mother, how Rosa held her head, her voice, her smile; in a thousand ways you are your mother's daughter, and I'm so glad there's so much of her still here in you.\n\n\"My home telephone number is appended below. It would please my family and me greatly to at least speak with you and reassure myself that indeed my little sister's daughter is well and happy, so, if or when you are ready, I would deeply appreciate you making that call and giving me a lasting reminder that something of my Rosa-girl is still here. I would treasure that moment, no matter how brief or fleeting, believe me.\n\nWith all my heartfelt best wishes,\n\nJames Morrison\"\n\nSherry looked at me, her sooty lashes framing her big, beautiful eyes; normally they were so big and bright, now they were wells of sorrow, tears spilling unheeded down her cheeks as her lip trembled and a soft sob escaped her as she looked at the handful of photographs: three children posing together, a sandy-haired, blue-eyed little boy, a little blonde girl, and in the arms of her mother, a toddler with jet-black hair and a strong resemblance to her mother. There were more photos: the children growing older, the two girls now preteens, but still gazing adoringly at their older brother, and finally, the brother, now a handsome young man with arresting blue eyes, the blonde, grey-eyed girl with more than a hint of the teenage beauty she was going to be, and again the pretty black-haired girl with her devil-may-care dimpled grin just like how I remember Sherry, and her bright blue eyes, just like her brother. \n\nSherry stared fixedly at the photos, obviously comparing the children, seeing their likenesses and differences, but when I went to take them from her she tightened her grip on them.\n\n\"My family, Danny... look, it's my family, there's my mother, look... I mean look, I look just like her, Danny, look at this,\" she murmured distractedly, scanning the photographs with laser-beam intensity. When she looked at me, her eyes were lambent, a more intense blue than I'd ever seen; she finally had all the pieces of her jigsaw puzzle, the other side of her family, but the need to know, to put them all together was burning there too. She didn't need to say anything to me. I already knew where this was going; this was what my Sherry-Baby wanted, what she needed, I'll be damned if I wasn't going to help her get it.\n\n\"Give them a call, baby; let's go check this out. This is something you need to do. You know I'm right.\" I said, and her eyes crinkled in gratitude. \"You need to know, and so do they.\"\n\nSherry kissed me once, gratefully, and I gathered up the scattered papers and photographs and put them back in the folder, then slipped it back into the envelope.\n\n\"Let's finish our dinner, then we'll go home and talk some more, eh?\" \n\nSherry nodded gratefully and we resumed our meal, this time in silence; we both had too much to think about, although I had less than her. However this turned out, she was still going to be my girl, we were still going to be together, and nothing was going to change between us.\n\n*****\n\nMorning found us exhausted from lack of sleep, but finally decided on what we were going to do. Sherry was calm now, but she'd been an emotional mess most of the night. She'd known since we were teenagers that she wasn't really Mum's daughter, that her birth-mother had been killed in an accident, but emotionally, that was another story altogether; my Mother was her half-sister, but really she was her mum, too: the only mother she'd ever known. That was how she knew and loved her. Rosa was a dim figure from a past they'd never shared, and now these people were coming into her life and telling her she was part of them too, because Rosa was part of them, was raking all that up and turning her life on its head. \n\nSherry had cried for Mum a large part of the night, and I'd held her while she shook and cried, fearful that her mum, my mother, was somehow going to be taken away from her, that she'd never really been hers at all. Irrational, I know, but that was what her heart was feeling, and I got that. Now the morning had come, and we knew what we had to do. \n\nI handed her the phone.\n\n\"Call him, baby, you need to know,\" I said. She took the phone from me like it was red-hot, and dialled the number. Tried to, I should say, she was so nervous she fumbled it several times, until I took it from her and dialled. The number rang several times, and a girl answered.\n\n\"Hello, Morrison residence, may I help you?\"\n\nI flicked the phone to 'speaker' and nodded at Cherie.\n\n\"H...Hello, may I please speak with Mister James Morrison?\" stammered Cherie.\n\n\"He's not here at the moment,\" said the girl.\" Who shall I say called?\"\n\n\"Mm... my name is Cherie Young, Mister Morrison wrote to me, he sent me some photographs... \" stammered Shery, obviously still spooked and skittish.\n\nThere was a pause, and then the girl fairly erupted.\n\n\"OH MY GOD! You're the girl on TV. Sherry, my dad saw you and nearly had a heart attack. You're his sister's daughter, oh my God! Daddy's not here, he had to go into work for something, but my mum's here, I think she'd like to speak to you, if you don't mind? Please? Oh my God, he'll be so happy you called, he was so hoping for this!\" \n\nSherry froze, suddenly tangled-up in this girl's enthusiasm, her Uncle James' daughter, so I guess that made her and Sherry first-cousins, the first family she'd ever encountered apart from me. The phone went silent, or the girl put it down, and the vague sound of voices told me she was telling her mother that Sherry was on the phone. A new voice came on the line, older, softer and more measured.\n\n\"Hello? This James Morrison wife. You just speak to my daughter, Nia. My husband not here right now, I speak to you if you not mind? My husband have to go to work this morning. He be back soon. Can he call you when he come back? He be so pleased that you have called here, he been waiting for you for so long, his sisters so dear to him, he lose his baby sisters and it like a piece of him been taken away as well! You talk to him, please? It make him so happy, I promise you!\"\n\nThere was something lulling, relaxing, almost hypnotic in the way this obviously foreign lady spoke. I had heard her soft accent and almost musical speech patterns before, in my dojo, in London. My Sabun, my sensei was from Laos, and she'd sounded just like this lady.\n\nSherry looked helplessly at me, so I shrugged and gestured to her to keep talking.\n\n\"Can you...please...do you...did you know my...my mother?\" she faltered, and I heard the motherly, reassuring tone tinged with a hint of sadness as the woman spoke with her.\n\n\"So sorry, never meet Rosa. She married, gone before I meet James. I come visit here many time with my sister Laura. She meet James at university, she marry James, have little boy; never meet Rosa, only other sister, Barbara. When my sister... when she die, she give me her little boy to be my son, I marry your uncle James and have daughter, Nia, your cousin. We are your family, you are missing part of this family. It is a good thing that you find your way back, this family not complete as long as you not here. My husband need to speak with you, hear your voice, know you are real and you are safe, that is all, please help him.\" \n\nI watched Sherry visibly relax as this calm, motherly woman's soothing voice washed over her, easing her fears and calming her jitters. I was actually astonished at how positively Sherry was responding to her, as if she'd known her all her life; James Morrison had married a very special lady, I could tell. Her effect on Sherry was really quite remarkable. She had the kind of empathy most doctors, teachers, and counsellors wished they had, and sadly, so many didn't and never would. I could feel myself falling under her spell.\n\n\"Yes...yes, I would like Ja...my uncle to call me, please ask him to call me when he can, I'd like to hear his voice too. I read his letter to me, saw the photos he sent, I'm so...touched to know he's never forgotten me...\" said Sherry, smiling even as two big tears ran down her cheeks. I was so proud to hear her say that. It couldn't have been easy for her to accept all this, but that inner core of strength I knew so well did her proud that morning.\n\n\"I will tell him, he will be proud his sister little girl want to know him. It will ease pain in his heart, thank you.\" \n\nSherry ended the call and gazed at me, her cheeks wet but her mouth set and resolute.\n\n\"Tell me this is not a mistake, Danny, that I did the right thing...\" she murmured, and I smiled at her, letting my pride in her, and my agreement with her actions show. She was doing the right thing, I felt that most strongly.\n\n\"It's just, well, Mum and stuff. She was always my mum, she was all the family I needed, her and dad, you don't think...you don't think she'd mind, do you, baby?\" he whispered, and I gathered her in and hugged her.\n\n\"Mum loved you, baby. She never made a difference between you and me, and all she ever wanted was for you to be as happy as you could be. Even after she told us about your birth-mother nothing changed for her, you know that. Yes, she was your big sister, but the reality was that she was your mum first, and sister a very distant second. She loved you like a daughter because you were her daughter, nothing else. Mum was always your mum no matter what, absolutely nothing was going to change that, so no, I don't think she'd mind. She loved you, Cherie Young, remember that; she still does, you're her daughter and she'd want you to know who you are, where you're from, but most of all, that you're still, and always will be, her daughter, her \"Sherry Baby.\" That hasn't changed at all.\"\n\n\"Thank you Danny,\" she whispered into my neck, \"you always know how to say exactly the right thing.\"\n\nWith such an intense backwash of emotions swirling around us, we were both physically wiped out; I never knew one conversation could be such a strain. It didn't take much urging on my part to entice Sherry back into bed, we were both mentally drained by the dread and anticipation of what the afternoon might bring, and we both fell asleep almost as soon as our heads hit the pillows, no hanky-panky, we were far too emotionally tangled-up for that.\n\n*\n\nMy alarm beeping woke us, feeling, if not refreshed, at least calm and rested enough to wait and see what would happen. Sherry was enjoying her lie-in, her cheeky grin when she rolled all the covers around herself in a warm cocoon told me who was making the tea, and so we passed the morning in warm companionship, cuddling in bed and speculating, but not brooding, on what the afternoon and her talk with James Morrison would bring. When the phone finally rang Sherry had no hesitation in answering it, once again switching it to speaker mode.\n\n\"Hello, am I speaking to Cherie Young?\" asked a pleasant male voice.\n\n\"This is she. Good morning sir, I understand you've been looking for me,\" Sherry began, but the man on the other end of the phone interrupted her.\n\n\"Please, Cherie, don't be so formal; you can call me Uncle James, or just James; your mother is my little sister, I lost her a long time ago, and you're all I have left of her, so please, you don't Sir me and I won't Miss Young you, is that okay with you?\"\n\nI could hear the smile in his voice, and Sherry grinned at his gentle humour.\n\n\"Of course, and thank you for taking the trouble to contact me. I'm very glad to have this opportunity to speak with you. When I got your package last night I was more than a little shocked at what it contained. I didn't know I had any family. As far as I knew my entire family was just my boyfriend Danny and I, and to suddenly discover I had an aunt and uncle, and then to actually speak with your wife and daughter, it was more than stunning, I didn't know...\"\n\nJames chuckled, a warm, friendly sound.\n\n\"Believe me, when I saw you on the television I was absolutely stopped in my tracks. Your mother, my little sister, Rosalie, although everyone called her 'Rosa-Girl', was the spitting image of you; even the way you speak and your voice, all 100% Rosa, it's absolutely amazing. I still can't believe it! Your mother looked like my mother, same hair, same smile, my dad's eyes, to see them all again in you were truly amazing. When you come and visit us, and I hope that will be soon, you'll be able to see for yourself.\" \n\nSherry glanced over at me and for a second I saw hesitation, but she ploughed on regardless.\n\n\"Uncle James, can I ask you one thing? If you don't mind me asking, what happened, how did you lose touch with Mum?\" asked Sherry.\n\nJames sighed, obviously reluctant to pull up painful memories.\n\n\"When we lost Rosa I was still just a student. My other sister, your aunt Barbara, was even younger, and my mother was too frail to look after a newborn. The shock of losing Rosa like that was still so strong, so she and your sister agreed that her looking after you would be the best and safest place for you; Mum passing so suddenly cut that link. I didn't know your sister, or where she lived, I didn't even know her name, and I trusted Mum to keep that information safe and keep our family connected with your sister and you, and then...\"\n\nHis voiced sounded troubled, sad.\n\n\"I tried, but Dad was still so lost. He'd lost Rosa, and less than a month later Mum too. He was in no shape to help me, and the strain, everything, it caused a massive heart attack. Dad died without ever telling me what I needed to know: where my baby sister's baby was. I tried to find you, you were our Sherry-baby- \" Sherry started at that, -\"but I hit a brick wall with Social Services. I'm sorry, Cherie, I tried, but I was only twenty years old, single, a student, and your sister, my mum, and social services had already formalised your care arrangements.\" \n\nHe paused, framing what he was going to say next.\n\n\"They wouldn't tell me where you were, Cherie, or who you were with, only that you had been placed in care, and that your sister was your legal guardian. Please understand, you're my niece but I wasn't your guardian. I had no legal claim to you, I wasn't even your next of kin, that was your sister, and her identity was protected by confidentiality and child protection laws. I didn't know where she lived, only that Rosa was killed in that car accident in Lewisham, but I couldn't begin to look there, or if that was even where she lived, because I didn't know your sister's name...\"\n\nHis voice cracked with the strain of holding back his emotions.\n\n\"We looked for you, Cherie, Barbara and me. We looked high and low for you, we pestered anyone we thought knew your sister or her family, we harassed Social Services, we petitioned the courts, my girlfriend and I even talked about getting married just so we could petition the court for us to adopt you, but nothing doing. You were a minor child, legally placed in care, and we were both single; we had no legal right to know where you were, who you were with, or even whether we could get you back. The answer was always the same: we were not your legal next of kin, so we had no right to know, and no amount of legal manoeuvring or trickery was going to change that; the matter was closed. I'm so sorry, we tried...\"\n\nSherry stared at me, stricken, her emotions obviously running high at the story she'd just heard, how her family had been searching for her, and the fact social services had always known where she was, but had never passed on the information, either to her or Mum, that she had a whole other family who'd been trying to find her and had been butting their heads against wall after wall. She visibly calmed herself, and when she spoke her voice was almost normal.\n\n\"You called me Sherry-Baby... how did you know... \" she began, and James sighed, before giving a half-hearted chuckle, just as obviously glad to be changing tracks.\n\n\"I'm sorry, I wasn't trying to be over-familiar or anything, it just slipped out; Sherry-baby was your grandmother's name for you, it's the title of an old pop song, she used to sing it to you, with a name like 'Cherie' it was inevitable, I suppose; in my mind you've always been Sherry-baby. That's how Barbara and I knew and referred to you, please don't be offended, it was unintentional.\"",
        "Sherry smiled as her beautiful eyes welled-up.\n\n\"No, of course not. It's what Mum always called me, too; obviously great minds think alike!\"\n\nJames laughed, and it sounded relieved, a genuine, happy sound.\n\n\"Cherie, I know this is all happening really fast, and you probably need time to get this all straight, but I want you to know that when you're ready, we're here; your family is waiting for you. There's no pressure, and definitely no rush, so when, and if, you feel ready, we're here, my wife and I, my children, my daughter Nia, who you spoke with briefly, and my son Jamie, waiting to welcome you to your family.\"\n\nSherry rang off, and looked at me thoughtfully, her eyes no longer doubtful or questioning. There was definitely a sense of links falling into place and connections made, questions on the cusp of being answered. All in all I felt like we'd made a good and lasting family connection, and even if it wasn't with any family of mine, well, Sherry was my family, and they were her family, so now they were my family too. That pleased me; it gave Sherry that past and family history she'd always been lacking; now at least we knew the most important parts of her story.\n\nWith that in mind, I took Sherry back to bed once more, just to hold her and let her feel the love. Her life the last few months had been an emotional rollercoaster, with some shocks, and some incredible moments. She needed to calm down, cool-off, and chill out, and the way to start that process was to let her sleep it off. Sherry made noise about how I was just trying to get her back into bed, but she was just kidding around. We both knew if I truly had to convince her to climb in the sack with me then we weren't as tight as we thought we were, and that's not how it was with us. I slid her into bed, warmed her up, then tucked her in and let her sleep while I went and did a little grocery shopping. When my girl woke up, I wanted her favourite treats ready and waiting for her, and maybe plan a getaway somewhere for a few days, just to get all of this shaken off us for a while.\n\n*****\n\nWhen Sherry awoke she found me grinning at her, my own special \"I know something you don't know\" grin guaranteed to make her attack me until I gave in, so I moved out of range.\n\n\"What? What have you done?\" she smiled sleepily, while I reflected that, just awakened, eyes still blurry with sleep, and her customary elaborately styled and immaculately sleeked-back quiff a disorganised, \"bed-head\" haystack, she was still just about the most adorable, beautiful thing I'd ever seen. The 'Winnie the Pooh' pyjamas just added to the overall picture of hot adorableness. I wanted to leap frenziedly on her, but I damped that down. That could come later. Right then, I had a treat for my girl...\n\n\"Upsy-daisy sleepyhead, day's a-wasting! I grinned, holding out my hand, which she took, and I helped her out of bed. Sherry grabbed the quilt and rolled it around herself like Sitting Bull in an old western movie.\n\n\"What, it's nice and warm!\" she smiled at my look, letting me lead her into the lounge. Her eyes lit up at what she saw there. While she was sleeping I had been busy. I'd gone to our local Lidl supermarket and stocked up on all her favourite treats and wake-up snacks: platters of smoked salmon, prosciutto and Serrano ham sliced thin and delicate, just the way she liked it, sliced Danish salami, her favourite Valen\u00e7ay goat's cheese and mild Normandy butter, soft brioche fingers still warm from the oven, malty, crusty granary bread rolls, kibbled wheat crackers, rich, smooth Ardennes P\u00e2t\u00e9, and grapes, redcurrants, strawberries, and fresh raspberries, and, just to top her off, sweet little 'Pastel de Nata' tarts, churros, and a cherry Clafoutis tart, with a couple of chilled sparkling orange juices to wash it all down. When she was ready, I also had a secret weapon: a couple of bottles of Cr\u00e9mant de Limoux sparkling Languedoc wine chilling in the fridge in case she needed further persuasion.\n\n\"Danny!\" she breathed, \"oh you sweet guy, you remembered, thank you!\" \n\nAll conversation ceased as she tucked in; Sherry has never been one of those calorie-conscious girls, she'd never needed to be, her slim svelte elegant figure remained unchanged no matter what she ate, and it did me good to watch her put away any and everything she liked. I think she suspected I had an ulterior motive, and I did, sort of, but she didn't let that stop herself enjoying the treats I'd laid out for her. I wanted to see my girl enjoy herself, with the things she liked best in the world; if I could get away with it, I'd do this for her every day of my life just to see the light in her eyes and the smile on her lips. What I had in mind could wait.\n\nConversation kind of flagged for a while; Sherry was too busy exploring the table I'd laid for her, and I kept urging new and more interesting things on her, things she eagerly ate, closed her eyes and beamed in ecstasy, and went on to something else. It did my heart good to see her so happy. She'd had a rough time those last few weeks, what with all the publicity surrounding the trial, the trial itself, the TV appearances, all that must have made a difference to her. I needed to pull her back to a simpler place, just for an hour or two, and I thought it was working.\n\nEventually, she gave a satisfied sigh and leaned away from the table, relaxing with a J20 in her hand and a sweet smile on her face. Even with her hair in wild disarray, dressed in rumpled Winnie the Pooh pyjamas, with not a trace of makeup or lipstick, she was still the most ravishingly beautiful girl I'd ever seen, and my heart literally gave a little stumble at just the thought that she was my girl.\n\n\"Okay Danny, you win; why the big wine and dine seduction routine, although I see no sign of wine yet... \" She grinned, making me smile back. When Sherry smiled at me it was like the sun coming up, like dawn breaking through the clouds, it lit up the room and warmed me all the way through. \n\n\"What have you done that you need me mellowed-out, baby-boy?\"\n\nI grinned: busted. Sherry knew when I was up to something, she always had, she was just like Mum in that respect, I could never slip one past her.\n\n\"Okay, confession time. I made a couple of phone-calls while you were snoring -\" she threw a cushion at me at that \"-and made some arrangements, so, next weekend, starting Thursday, I took some of the Bank Holiday time in lieu I've accrued, and I have six days off, Thursday through Tuesday. I also spoke with your uncle again\"- her head snapped up at that, \"-and I told him we're coming to see him and his family on Friday.\"\n\nHer eyes got big at that but she didn't explode in outrage, so I ploughed on, on the basis that she hadn't gone off like a hand-grenade so she wasn't going to.\n\n\"I also had a chat with your cousin Jamie, who sounds like one of the nicest guys on the planet. I think you're going to like meeting him. I know he's going to love meeting you, he's enthralled with the idea of having a first cousin, there's always been just him and his sister, Nia, and she's jumping up and down too. Your family sounds like nice people, baby.\"\n\n\"I don't know...\" she hedged, but I could see she was intrigued by the idea, so I pushed a little harder.\n\n\"You know this needs to happen, baby; there's too much story here, things you need to know, about your family, about Rosa, your father. This is where it all comes together, and come on, aren't you in the least bit curious about your family?\"\n\nSherry stared at me, her glorious eyes hooded, pensive, then she brightened and her beautiful smile broke out.\n\n\"You're right, let's do this, let's go find out what happened and who my family are, correction, my other family; you're my only real family, Danny-boy, you and me first, always, everyone else second, always.\"\n\nI took her hand and kissed it while she fluttered her eyelids innocently and gasped, \"Why young sir, what are you doing, you are so forward!\" I looked up at her and she grinned.\n\n\"I didn't say you should stop, you know, maybe you can sort of work your way up?\"\n\nI don't need huge great big hints to leap frenziedly on my girl, a wink would do it, but just as I prepared to launch a frontal assault, she held up her hand.\n\n\"Uh, wine?\" she hinted, so I went charging into the kitchen to get the chilled bubbly, corkscrew and some wineglasses, but when I came back she was gone.\n\n\"In here, baby-boy!\" she called from the bedroom, so I made tracks in there, but when I got there I almost threw everything down and jumped on her.\n\nSherry was lying, posing, really, on top of the covers, her wild, jet-black hair smoothed back, absolutely stark naked; the sight of her, of her pale skin glowing in the golden afternoon sunshine, her naturally coral lips contrasting with her pale, smooth skin so vividly drove all thoughts of champagne out of my head.\n\n\"See anything you like, sailor?\" she purred, and I didn't throw the glasses and sparkly down, I didn't leap on her like a wolf on a lamb, and I didn't just grab her and have my way with her, much as I wanted to. No, I calmly and safely put the glassware down, pulled my polo shirt off and unzipped my jeans, slid them off and tossed them on the chair then I leaped on her, because human flesh can only take so much...\n\nSherry shrieked as I landed next to her, tickle-hands at the ready, and the next few moments were taken up with her laughing and giggling and rolling around as I tried out all her ticklish spots, until we ended-up with me on the bottom, with her face-to-face with me and her holding down my wrists with all her weight.\n\n\"Gotcha now, so quit tickling me!\" she ordered.\n\n\"Or what?\" I challenged, grinning cockily at her.\n\n\"Or I'll bite your nose off!\" She grinned, coming closer, so I kissed her, she was too close to not kiss, and she was very much worth kissing. Sherry didn't fight back, instead she relaxed, her full weight on me as our tongues fenced and our lips explored each other.\n\n\"I love you, baby-boy!\" she whispered, and gasped, her eyes widening as I pulled her buttocks apart just for a second. \"Naughty, Danny-Baby, very naughty,\" she purred.\n\n\"I love you too, Sherry-Baby, and I like being naughty with you.\" I grinned right back at her.\n\n\"Show me how naughty... \" she whispered, so I obliged, kissing her neck and shoulders, places that always made her mew happily when I kissed or even breathed hotly on them, slowly working my way down her lithe, perfect body with my lips and the tip of my tongue. Sherry writhed in delight and gasped softly as I kissed or gently licked somewhere new, but I really hit the jackpot when my probing tongue-tip danced through the trimmed patch of peach-fuzz decorating the apex of her slit.\n\n\"Oh yess, Danny, yess, just like that...\" she moaned, but when I pushed my pointed tongue between her fragrant labia, she almost convulsed with shock, grabbing my head reflexively before relaxing and instinctively opening her smooth elegant thighs to allow me even further access to her secret places. \n\n\"What are you doing to me...oh yess...\" she murmured, more a sigh than a vocalisation as I sank my tongue even further into her honey pot. \"You're so bad, Danneeee...\" she sighed, \"just don't stop, baby.\"\n\nAs I had no intention whatsoever of stopping, I just kept going, revelling instead in the litany of softly worded pleas and entreaties from my girl to keep doing what I was doing.\n\nSherry was gasping and hitching harder now, as I bored in, lapping at her softly fragrant pussy, feasting on the sweet spicy earthiness of her arousal until, when I lashed her clitoris with my probing tongue she gasped and sighed as her thighs clamped around my head. Her pulse drummed in my ears as orgasm swept through her, making her sweet pussy tremble and convulse under my lapping tongue, with each stroke of my tongue setting her off on another spate of trembling ecstasy.\n\n\"Stop, Danny please no more... please I can't, no more baby boy, please... \" she quavered, her skin sheened with fragrant summer sweat, the tang of her scent mingling with the sweet musk of her arousal into a heady cocktail, her own unique scent-complex.\n\n\"Fuck me Danny, please, let me give you this,\" she whispered, pulling me closer, and it was but a moment's work to slip between her thighs, to kiss her as she fumbled me into place, and her long, drawn-out sigh as I slipped into her tight hot succulence.\n\nI didn't pound her, I would never do that to her, I could never just fuck her. She was the girl of my dreams, the pinnacle of all my needs and fantasies, the most precious thing in my entire universe. No, I made love to my girl, to the girl I loved, had always loved, the only girl I would ever love. When I came, my heart and soul melded seamlessly into hers, our bodies in perfect harmony and counterpoint, our mutual orgasm fulfilling and ecstatic, familiar, yet brand new and glorious.\n\nWhen we fell away from each other such a feeling of fulfilment, of final connection swept over me, and, from the look in her eyes, I knew Sherry was feeling the same thing, the same understanding; it was our moment of mutual epiphany.\n\n\"I changed my mind, Danny; make babies in me that way, please.\" She smiled, and I smiled and kissed her, tasting her sweet lips.\n\n\"When you're ready, baby-girl, we'll make all the babies you want. I can't wait, Sherry, we'll make our babies and be happy forever, I promise!\" \n\nSherry smiled sleepily at me.\n\n\"That's all I wanted to hear, baby-boy,\" she murmured blurrily. \"Now that we've planned our own family, I think we should meet the rest of mine,\" she grinned, more asleep than awake. \"Let's make it happen, Danny, let them know, please. And now, warm me up, baby-boy, I want to snuggle... \" she yawned, falling asleep almost the second she stopped talking. I pulled the covers up over both of us and that's all I remember.\n\n*****\n\nFriday morning, and the moment of truth had arrived. I'd called and gotten the address, plugged it into the GPS in my Capri, and now we were there, in Streatham, South London, just off the South Circular road. The house itself was a large red-brick Victorian semi-detached house, four stories high, with tall windows and elaborate cornices, with a double garage built onto the open side, and a medium-sized mature front garden with a chequered tiled path leading to the front door. The large, imposing front door was itself a work of art, ornately decorated, fine-grained wood, dark-stained and waxed and polished, obviously original, with inset panes of stained leaded glass depicting fanciful maidens carrying ewers and shepherdess' crooks, high Art Nouveau and of the period. Sherry looked up at the house, then even further up, taking it all in.\n\n\"Maybe this wasn't such a good idea...\" she began, but I'd already rung the doorbell.\n\n\"We can't back out now. I told your cousin Nia we were coming, everyone's here just to meet you... \"\n\nThe door swung open, and there in the doorway was one of the most beautiful girls I'd ever seen, obviously Eurasian, and absolutely stunning, her beautiful almond eyes were the same intense blue as Sherry's and her tumbled hair the same deep, glossy black. Even her pale skin and the faint, faint spray of freckles across her cheekbones and the bridge of her nose echoed Sherry's. These girls were family, I could see that immediately.\n\n\"Sherry? Please, come in, come in!\" She smiled, even her voice beautiful, at once sweet and thrilling. \"And you must be Danny, hi, I'm Nia, we spoke earlier, welcome to our home, please come in and make yourselves comfortable. Everyone's here, we've been so looking forward to meeting you, you have no idea!\"\n\nWe followed her into a large, classically-proportioned sitting-room with several people rising to their feet as we came in. The first one I noticed must have been Nia's mother; they were almost identical, except she was tiny, but just as exquisite as her daughter. She had the same jet black hair, same almond eyes, only brown, same expression. She came toward us and took my hand in one hand and Sherry's in the other.\n\n\"So pleased to meet you, my name Anh, and you are welcome in my home, please to take a seat!\" She smiled, urging us into the centre of the group of people waiting for us, first introducing me to a tall young man with the same bright blue eyes as Nia, but with hair a dusty golden-brown rather than black. He was maybe the same age as Sherry, although it was hard to tell, especially when he grinned; when he did that he looked like a mischievous schoolboy.\n\n\"This my son, Jamie, and these my grandchildren. This Laura, and little Jamie, and little baby-girl Julie-Anh, my little princess-girl. They children of Nia, very pleased to meet you too!\"\n\nJamie was a very good looking, affable guy, who seemed to be taking all this in his stride by the way he grinned when we shook hands, and I decided I liked him; he seemed like a good sort. Sherry, though, seemed a little overwhelmed at meeting so many family members after thinking all her life that I was all she had, and Nia's mother picked up on that.\n\n\"Please, come, sit, you eat something, it not good travel so far on empty stomach, you wait, I get you something!\"\n\nSherry tried to protest but Nia's mother good-naturedly overrode her and bustled out.\n\n\"You may as well go with it.\" Jamie grinned. \"Mum won't give up until she's fed you, so just eat and enjoy, you'll like it, I promise!\"\n\nJamie introduced us to the other people in the room, a petite pretty little blonde girl by name of Julie, and her husband, Mark, a tall, blond man maybe the same age as Jamie, but who I didn't see was an older man, Sherry's Uncle James, the man we'd come here to see. Nia seemed to get this, because she smiled at us.\n\n\"Daddy was here just a second ago. I think there was something he forgot, something he wanted to show you. Ah, there he is!\"\n\nThe door swung open and there was the face I saw in the photograph, older, obviously, but still him, and those tell-tale trademark Morrison blue eyes. James was a tall man, almost the double of Jamie, and there was no mistaking the gust of pent-up emotion as he gazed at Sherry.\n\n\"Rosa...\" he murmured, patting Nia's hand as she slid her arm through his.\n\n\"I...I saw you on the news and I nearly choked, you were so much like your mother, but to see you here and now...\"\n\nTwo tears ran down his cheeks as he gazed at Sherry.\n\n\"So much like her... so much...\"\n\nBy now Sherry was welling-up as the man's emotions battered at her.\n\n\"U... Uncle James?\" she faltered, holding out her hands. James took her hands, and that broke the dam. Sherry's tears overflowed, running unheeded down her face as her only living relative found her and connected with her. Suddenly, she was enfolded in his arms as she wept in his shoulder. The girl Nia was also teary-eyed, huddled in the crook of her brother's arm as she watched her dad find his missing family.\n\nAfter what seemed an eternity, I felt an arm through mine, and looked down to see Nia's tiny mother smiling up at me.\n\n\"Come, you sit with me. It is good, much they must find out; James and his sisters very close, it hard for him to lose them, to lose Rosa. She just a girl when she taken from him, maybe now his heart will find peace, it has been too long for him. You come, sit with me, we wait, there much to talk about, much to say, much to learn, let them have time, yes?\" \n\nShe was so sweet, so persuasive, and so much like Mum I just couldn't resist her. Her voice was almost hypnotic, the cadence of her speech compelling, almost musical, and I found myself telling her about myself, about the events leading up to Sherry appearing on that news broadcast, our life together, and our life before, things I had had no intention of sharing with a stranger, who Sherry was and what she meant to me, but with her it seemed normal, natural to share it all with her.",
        "As we talked, I watched Sherry sink to a seat on the other couch, with her... uncle next to her, both of them conversing in low voices, but whatever they were saying, it was making Sherry smile and nod. The tears were gone now, although her eyes were still sparkling and bright, but James was smiling, too, and then he reached up and gently chucked her chin for just a moment. Again, I had that fleeting certainty of another milestone achieved, another connection made. I looked at Anh, and she smiled happily at me.\n\n\"It is good that Cherie find her way to our home, our family, her family; there are many empty places in this family, questions to be answered, slowly, slowly we will find answers, we will fill them again. Cherie mummy, not Rosa, her real mummy, you mummy, be very proud of her today, I can feel it, can you not? Please to tell me all about her mummy, how she bring you up, both of you. She have much to be proud of, please to tell me all about her, about you and you family.\"\n\nAnd so I did; from my earliest years, my earliest memories of Sherry, my thoughts and feelings, how Sherry and I had found out that she was not my sister, that she was Mum's baby step-sister, being kids together, university medical school, losing Mum in that package holiday airliner crash, the story of our lives. She listened, gave condolence and asked simple direct questions, didn't judge, and didn't condemn. \n\nWhen I eventually ran out of steam I realised Sherry and James had stopped talking and were watching us closely, small smiles on their faces. I felt my face heating as I blushed under their scrutiny\n\n\"What, what just happened?\" I asked, and Sherry stood up, walking over to kneel next to me.\n\n\"Nothing, baby, it's just... you looked just like when you and Mum used to sit and chat, that same expression; you looked like you were at home. It felt so good, Danny, it felt normal, everything feels normal again. Isn't that wonderful?\"\n\nI took her hand in mine.\n\n\"How did it go, baby, what did your uncle tell you?\" I asked, and she smiled that sweet happy \"Sherry\" smile she does when everything's fine in her world.\n\n\"Uncle James told me stuff about my... about Rosa, what she was like, the things she liked, her friends; she wasn't that different from me, maybe a little weirder than me-\" I nudged her at that, and she gently punched my leg and grinned, \"-but she never really got a chance to grow out of it, to grow up properly. Sidney, my deadbeat sperm donor, should have known better; he did know better, he was old enough to know she was just an impressionable girl and he didn't give a damn. He just played on that, he chased her and she fell for his bullshit, and then he dumped her and you know the rest. I'm just glad we came, I'm glad we know some of Rosa's story now. Thank you Danny, thank you for making it happen.\"\n\nAnh smiled, reached out and gently stroked Sherry's cheek, stroked her hair, and chucked her chin, her touch gentle and motherly, and Sherry actually closed her eyes and preened under her touch, enjoying the feel of the gentle hand on her.\n\n\"Look so much like Rosa, and like my Nia too,\" she murmured. \"That you find your family is good thing. I think Rosa and your mummy be happy with this, I think you have ease their hearts now you find your way back. You are part of my family, you are blood of my blood, and you are welcome here every day of your life. This is least I can offer you, offer your poor mummy. And now I think you will share with uncle who you and sweet boy are, and we will share in return. This must be; there are no secrets in this family, too much hidden too long, no more hiding.\" \n\nSherry stared at her wide-eyed, and slowly nodded. She didn't need to check with me, from talking with this lady I already knew we had to do the right thing. \n\nAnh was right: no more secrets. I took Sherry's hand in one hand, and Anh's in the other, and assisted them both to stand. Sherry hesitated, but Anh smiled encouragement, and my hand tightened around her, sharing my strength, letting her know I had had her. Jamie and Nia looked from their mother to Sherry to me, obviously sensing something about to occur, while a corner of my mind noted absently they were holding hands too. James could obviously sense something in the air too, from the way his eyebrow cocked in query. \n\nI gave Sherry's hand a little squeeze; it was now or never.\n\n\"Uncle James? There's one other thing I need to tell you.\" He looked interested, so she continued. \"It's about well, it's Danny and me, who we are. You told me how you knew my half-sister took me in after Rosa's... after Rosa was lost. My sister had just gotten married, and two years after Rosa died, Danny was born. I always thought he was my brother, turns out he's my nephew, but that doesn't matter, because we're together now. If that offends you I'm sorry, but Danny and I are all we have, I love him and he loves me, and we'll leave if you want, but we'll leave together. I'm sorry, but that's what we are, it's who we are, and it's what we want.\"\n\nJames looked bemused, but not particularly offended or shocked, and I wondered why that should be. Instead, he cocked an eyebrow at Nia and Jamie, and certain things began to come clear; they were holding hands, but not in any kind of way I would think a brother and sister would. Also, they were sitting a lot closer than I thought siblings might, and then what clinched it was when Jamie slipped his arm around Nia's shoulders, and she smiled up at him. \n\nIt was a smile freighted with meaning; what I saw first and foremost, clearly and most obviously, was adoration, plain and simple, compounded with love, attraction, and a sense of unity. Jamie and Nia were so obviously a couple. How could I not have seen it before?\n\nAnh stepped between Sherry and me and slipped her arms through ours.\n\n\"Let me tell story, then you understand why what you do not wrong, not shock your family, why we accept what you do. Please sit, we talk.\" \n\nI looked at Nia, seeing her connection with Jamie all over again, and returning her smile as Jamie bent his head to kiss her. She kissed him back almost playfully and smiled at me once more.\n\n\"Please, Danny, just listen, then I promise you'll understand,\" she said, while Jamie and their father nodded in agreement.\n\nWe sat down, Anh between us, and holding our hands.\n\n\"When I was young,\" she began, \"I live with husband, baby, in Vietnam. Husband killed, daughter taken, I was alone, I not know what to do, friend smuggle me to Vientiane in Laos. I meet English family, missionaries, they take me in, make me daughter, care for me. When come to England, they bring me. I still their daughter, have sister, Laura. When Laura parents, my parents, die, Laura and I stay together, we are sisters, love each other. Laura go to university, meet James, marry James, have little boy, but Laura very sick, my sister know she not live long. She give me little boy be my son, little boy is Jamie, Jamie Laura son, but he my son, too. I marry James, have baby, Nia. Jamie little boy, but he promise he do everything he can love and protect Nia, she precious, she his baby sister. Jamie love Nia all her life, Nia love her brother, when they are older, they are in love, love not forced, this what they want. Now they are together.\"\n\nSherry looked wide-eyed at Nia, suddenly seeing what I'd seen. She tried to cover her confusion with another question.\n\n\"What about the baby that was taken, do you know what happened to her?\"\n\nAnh smiled indulgently at Nia and Jamie.\n\n\"My children find her; they look and look around world, they go everywhere, they ask, they search, find police can help, they find my lost daughter, Nia big sister. They find bad men who steal her away, they meet her, meet her children, now she back with family too. Live in America but still one of this family. How I condemn what you do when it is what I did, what my children do? Love where you find it. Lord Buddha say \"love not need to be perfect, it just need to be true\". This what you have, and so I will not say anything. Be at peace, children, you have done nothing wrong.\" \n\nNia broke the silence by patting Jamie on the knee and standing up.\n\n\"Now that we've got all that out of the way, let's talk about what comes next; you guys, you're the first and only family I've ever met, and I guess you're probably feeling like I am, a little stunned, and a little shell-shocked, but we're family, and somewhere out there there's more of us. Daddy had two younger sisters, your mother, Cherie, and her older sister, Barbara. She disappeared after she got married, not long after Rosa passed away, and there's been no word of her since, at least we've never heard anything; have you?\" She cocked her head hopefully, but her smile faded when Sherry shook her head.\n\n\"I'm sorry, I didn't even know Rosa had a brother, let alone a sister. This is all so new to me, I'm still... getting my head around all this, telling you about us, finding out about you guys, it's a lot to take in...\"\n\nJames also stood up and fished inside his shirt pocket, pulling something out with a sad, wistful expression on his face. Whatever it was, he closed his hand around it and walked over to us, hunkering down in front of Sherry.\n\n\"I got Rosa a special gift for her eighteenth, but I never go to give it to her, so I kept it. I thought I'd give it to you on your eighteenth instead, but I lost you, so please, I know it's a little late, but happy eighteenth birthday, Cherie.\"\n\nSherry gasped in wonder at what he held in his hand, a gold pendant set with rubies in the shape of a rose, mounted with small, exquisite sapphires, obviously echoing her name and her blue eyes.\n\n\"I had it made especially for her, a rose for our Rosa, and a platinum charm bracelet for Barbara. I hope Barb had a daughter to give it to, it was one she'd always wanted.\"\n\nSherry hugged James, and turned so I could clip the pendant around her neck, then turned back to him and kissed his cheek.\n\n\"Thank you, Uncle James!\" she murmured. \"Now I know, maybe we can do something; you found me, you brought me back to my family, now we need to find out what happened to Barbara. We need to find her family, they belong here too. We have to look, it would be the right thing to do.\"\n\nJames kissed her gently on her forehead.\n\n\"Don't worry, Sherry-Baby, we will. We're family, and we all belong together.\"\n\n*\n\nSo this is where our story has come so far. Somewhere Sherry has more family, she and James are sure of it, her cousin Jamie is already searching and putting out feelers, because he thinks he might have a solid lead, and I know neither of them will rest now until they put their story back together. And me? I'll be there to support my beautiful girl and her caring family, who lost her but never gave up on her. We'll all keep looking, and one day we'll find the rest of her family and finally underline the story. It's the least I can do for my beautiful Sherry-Baby.\n\n Rag Doll Ch.08.2, the final part of this story, will see Bobby and Ricky finally unravel the mystery of Barbara's origins, her family, and where they are, how they reconnect with their Morrison family, and the significance of Barbara's charm bracelet"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "aunt",
        "barbara and rosa morison",
        "cherie",
        "danny",
        "incest",
        "jamie and nia",
        "nephew"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-08-1-sherry-baby"
}