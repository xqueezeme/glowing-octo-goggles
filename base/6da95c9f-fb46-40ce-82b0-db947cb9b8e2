{
    "title": "WICKed Hormones Ch. 09",
    "pages": [
        "****DISCLAIMER****\n\nThis is a complete work of fantasy. All sexual participants are 18-years of age or older.\n\n****AUTHORS NOTES****\n\nAfter several changes I finally finished the chapter. I must say this one gave me some fits. Thank you so much for taking time to read my work... I really hope you enjoy...\n\nCHAPTER 9\n\nSince Monday and the laundry room incident, Jacob had been receiving Karen's cold shoulder. She was not acting angrily in any particular way; however, the typically caring and loving mother was very standoffish and unaffectionate towards her son.\n\nMost days, Jacob could not leave the house without Karen insisting on a hug or a kiss on the cheek. Even on occasions when she would drop him off at school, the doting mother would demand a quick show of affection before letting her little man out of the vehicle. \n\nEmbarrassingly, Jacob would go along with it, praying that no one saw his mom kissing his forehead as if he were still in grade school. However, the past two mornings, she had asked for nothing of the sort and barely told him 'goodbye' or 'have a good day.' \n\nNormally, when Jacob would get home from school, Karen made it a priority to find out about his day. She would pepper him with questions for every detail, no matter how dull or insignificant. Now, if they conversed at all, it was usually him starting the conversation with his mother replying with short and direct answers.\n\nEven Robert noticed during dinner on Monday and Tuesday the strange rift between his wife and son. Usually, when Jacob excused himself from the table, he would thank his mom for a great meal and give her a quick peck on the cheek before disappearing upstairs. This night, like the night before, the two barely talked or even made eye contact.\n\nAfter dinner on Tuesday night, Robert helped Karen with the dishes and asked out of curiosity, \"Is everything okay with you and Jake?\"\n\n\"What do you mean?\" Karen replied while rinsing off a plate.\n\n\"I've noticed the last two nights you two have hardly spoken a word to each other.\" Robert took the rinsed plate from Karen and placed it into the dishwasher. He then asked, \"Did he get into trouble at school or something?\"\n\nKaren chuckled and shook her head, \"No... it's nothing like that.\" She then turned off the water faucet and continued, \"It's just a teenager thing.\" She then waved her hand, \"You know how boys can be.\"\n\nWith concern, Robert asked, \"Well, maybe I speak with him. You know... man to man?\"\n\n\"NO!\" Karen blurted out. Shocked from the outburst, Robert stepped back just a little giving his wife a confused look.\n\nCalming down a bit, Karen softened her voice and continued, \"I mean... no... sweetheart.\" The beautiful wife gave her husband a soft smile, \"This is more of a mother and son issue, and I just think it best if I handle it.\" \n\n\"Is everything alright?\" Robert asked with concern.\n\nAs Karen closed the dishwasher, she replied, \"He's just at that stage where he is going through some... stuff, and it has him a bit confused. Plus, he's testing my rules and trying to stretch boundaries.\" She then patted Robert's chest and said, \"But don't you worry... I have it all under control.\"\n\nRobert leaned against the counter and smiled. \"I bet it has to do with a girl... doesn't it?\"\n\nFrom the fact that she was the 'girl' in question, Karen could feel her pulse elevate, and her cheeks began to burn. Trying to act calmly, she nodded and replied, \"Ummmm... yes... I guess you could say that. He is at that age, after all.\" The sudden wave of guilt made the shameful wife look away from her husband.\n\n\"Well, if you need me to get involved...\" Robert said as he stepped closer. \"Just know I always have your back.\"\n\nKaren smiled and replied, \"Thank you, Sweetheart... I know you do.\" Desperately trying to find a way to change the subject, Karen said, \"Say... isn't your ballgame about to start?\"\n\nChecking his wristwatch, Robert replied, \"Oh, you're right... it is. I didn't realize it was getting this late.\" Looking back at Karen, he continued, \"I hope we win... I made a small wager with Tom from the office.\"\n\nNarrowing her eyes, Karen replied in a joking tone, \"Well, I hope you didn't bet the farm?\"\n\nRobert shook his head, \"Nah... just lunch.\" He then chuckled and added, \"I'm confident the Braves will win, but I'm not stupid.\"\n\nKaren put her hand on her husband's shoulder and said, \"How about this... why don't you go on into the den, and I will finish up in here?\"\n\n\"Are you sure?\" Robert asked with a smile, like a child asking for permission.\n\nSmiling back, Karen replied, \"Yes... I'm sure. We're just about done anyway. Once I finish, I'll come and join you.\"\n\nRobert then gave his wife a quick kiss on the lips and happily left for the den. Once he disappeared, Karen breathed a big sigh of relief.\n\n********************\n\nOn Wednesday afternoon, Jacob hurried home from school. Ms. Turner was due to arrive in less than fifteen minutes for a visit and 'check-up' on his condition. \n\nJacob entered the house through the garage with his book bag over his shoulder. He called out, \"Mom! I'm home!\", only to hear no response. The only sounds were the gentle hum of the refrigerator and the washing machine in the laundry room going through a spin cycle.\n\nThe teenager then made his way upstairs and yelled out again when he reached the landing. \"Mom?\"\n\n\"In here, Jake,\" Karen replied from down the hallway. Her voice was a bit flat and missing its usual sweet and pleasant tone.\n\nJacob made his way down the hall to find his mother in his bathroom spraying window cleaner on the large rectangular-shaped mirror. He leaned up against the door frame and gazed upon his gorgeous mom's side profile. She was wearing a black pair of skin-tight yoga pants and a form-fitting gray tank top. As always, he found her womanly curves to be simply mindblowing. After a few seconds, the gawking teenager finally spoke up, \"Just wanted to let you know I'm home.\" \n\nAs Karen began to wipe down the reflective surface, she replied, \"I can see that.\" The circular movement of her right arm made her lower body begin to shimmy. Jacob couldn't help but lock his eyes on his mother's juicy round ass as it slightly jiggled side to side. His mind drifted back to Monday when he had his mom bent over the laundry table, plowing into her pussy from behind and slamming his crotch into that big cushiony butt.\n\nJacob was suddenly brought back to the present when he heard Karen ask, \"Hello? Earth to Jacob... did you hear me?\"\n\n\"What? I'm sorry, Mom... did you say something?\" Jacob shook his head to gather his thoughts.\n\nResuming to clean the mirror, Karen replied, \"I said that Ms. Turner called, and unfortunately, she will have to cancel again today.\"\n\nBefore responding, Jacob decided to react to the disappointment with a bit more maturity this time... plus, he knew his mother was still pissed. He asked with concern, \"Is everything okay? I hope nothing is wrong.\"\n\nKaren shook her head and responded, \"No... everything is fine. She's just overwhelmed with work this week because of the Dr. Grant case.\" She then looked over at Jacob and continued, \"She did want me to tell you, however, that she apologizes and will do her best to come by next week.\" \n\nBefore Jacob could respond, Karen exclaimed, \"Jake... what in the world have you been doing in here?\"\n\nNot sure where this was heading, Jacob replied, \"What do you mean, Mom?\"\n\nPointing at the bottom portion of the mirror, Karen responded, \"This mirror is filthy. There are hand and fingerprints everywhere!!\" The tidy mom then resumed scrubbing away the dirty smudges.\n\nJacob felt his heart skip a beat in panic as he remembered back to last week. The prints on the mirror were not his but, in fact, his sister Rachel's. To steady herself, she had to place her hands on the reflective surface several times while bent over the countertop 'helping' her brother.\n\nJacob responded with, \"Sorry, Mom... I promise I'll do better.\" Hoping to get her mind off of the subject of the mirror, he then took a step inside the room and softly said, \"Mom... I want you to know that I am truly sorry and want to apologize.\"\n\nKaren continued to wipe the mirror without looking in his direction and replied, \"And what exactly are you apologizing for?\"\n\nTrying to sound as regretful as possible, Jacob answered, \"For what happened on Monday... you know...\" He then lowered his voice as if it were a secret, \"Finishing inside you when you told me not to.\" \n\nKaren stopped her work and added, \"And for breaking my rules and going against my wishes?\" She then looked over at her son and continued, \"Plus, the fact that you took advantage of the situation. When I gave an inch, you decided to take an entire foot.\" \n\nGiving her a pitiful look, Jacob nodded and mumbled, \"Yes, ma'am.\"\n\nKaren stopped wiping the mirror and replied in a softer tone, \"Jake... I'm not trying to be mean, but our situation is very delicate... almost like a house of cards. We make one wrong move, and the whole thing comes crashing down.\" The hard-working mother removed her rubber gloves and set them on the counter. \"I'm doing everything humanly possible to keep our secret from everyone... especially your dad.\"\n\nJacob nodded and replied, \"I get it, Mom... we have to be careful.\"\n\nKaren responded, \"Well, now we have to be even more careful since I am no longer taking birth control.\"\n\nJacob gave his mom a confused look and asked, \"Why not?\"\n\nLeaning back against the counter, Karen crossed her arms and replied, \"Dr. Taylor suggested I stop them for a while. It turns out during my last exam; she found that my estrogen levels were extremely high.\"\n\nWith concern, Jacob inquired, \"Are you worried that I may have gotten you pregnant the other day?\"\n\nKaren chuckled then replied, \"No... thank goodness. Luckily it was a safe time of the month, so I think we dodged that bullet.\" She then gave him a stern look, \"But that doesn't mean we can lower our guard because Lord forbid if I got pregnant and your father found out\u2014\"\n\nJacob jumped in, \"He would most likely kill us.\"\n\nNodding in agreement, Karen added, \"Yes... he probably would. It would destroy our family and the life we have built together. I love your father dearly, and I would rather die than see him hurt.\" \n\nSeeing signs of remorse on Jacob's face, Karen then took a step closer to him, \"But at the same time... I want to help you.\" Looking at her precious child, she couldn't help but smile just a bit. \"As a mother, it has always been my top priority to take care of you and your sister... no matter your age or the situation. So, I need you to understand... that's why we must have these rules and boundaries... they're to protect everyone.\"\n\nJacob nodded and smiled and then carefully asked, \"Sooooo... does this mean... you can forgive me?\"\n\n\"Come here, you goofball,\" Karen said while she outstretched her arms. After dropping his book bag to the floor, Jacob quickly closed the distance and rushed into his mother's loving arms. He wrapped his skinny limbs around her tapered waist and rested his head against the round globes of her soft bosom. The warmth of her curvy body and her sweet honeysuckle scent was absolute Heaven. With his face buried between his mom's boobs, he said, although muffled, \"I love you, Mom!\"\n\nWhile running her fingers through Jacob's messy brown hair, Karen sighed and responded, \"I love you too, Snuggle Bear.\" The teenager hated the childish nicknames his mother insisted on using. However, there would be no complaints as he was just happy to be back in her good graces.\n\nWhile they continued the warm embrace, Karen felt her son's hand slowly run down the small of her back to rest on the top swell of her juicy round butt. Along with that, she felt the bulge forming in Jacob's crotch pressing against her. With a laugh, she asked, \"I guess someone could use some help today?\"\n\nReluctantly pulling his face away from his mother's breast, Jacob stepped back and looked up into her beautiful face, and replied, \"Yes, ma'am... I really could.\" \n\nBrushing the hair from Jacob's forehead, Karen sighed and then said, \"Well, since Ms. Turner had to cancel, I guess I should fill in.\"\n\nJacob's face lit up, and he exclaimed, \"Awesome!!\" He then quickly added, \"Oh, and Mom... today I'd be okay with just hands and mouth.\" He figured it would make a good olive branch. \n\nWith a surprised expression, Karen responded, \"Really now?\"\n\n\"Well...\" Jacob said while staring at Karen's chest. His eyes locked in on the deep cleavage of his mother's jutting mounds of tit flesh concealed underneath the tight-fitting tank top, \"...maybe also your boobs.\"\n\nKaren giggled as she spun Jacob around by his shoulders and said, \"Okay, Boobie Monster... let's go to your bedroom.\"\n\nOnce they entered Jacob's room, he walked around the bed to his computer desk. While Karen closed and locked the door, she asked, \"How much homework do you have today?\"\n\nWhile setting his book bag down onto his computer chair, Jacob replied, \"None... I actually finished everything in study hall.\"\n\n\"Well, that's good,\" Karen replied. \"How about the condoms I gave you? Are they still hidden away?\"\n\n\"Oh yeah, don't worry, Mom,\" Jacob replied. \"They're safe. I hid them in the back of my closet... Dad will never-\" At that moment, he just happened to turn around and see his mom standing by his bed with her back to him. She had her tight yoga pants and panties pulled halfway down her shapely thighs. The sight of his mother's beautifully round naked backside made his jaw drop.\n\nIn her sweet motherly tone, Karen said, \"Jake, Honey... be a good boy... and fetch one for Mommy.\"\n\nA few minutes later, mother and son found themselves in very familiar territory. Jacob was in his bed lying on his back totally nude. Karen, naked from the waist down, straddled her second-born while holding onto the creaking headboard in a death grip with both hands. The groaning mother had already achieved one toe-curling orgasm and steadily rode her teenaged son in search of another.\n\nKaren looked down into the face of her handsome little man. Between the constant \"ohhh\"s and \"ahhh\"s she was able to ask, \"Jake? I don't understand... Ohhhh!! What happened... Ahhhh!! To hands and mouth... ooooh\u2014nly?\"\n\nA smile spread across Jacob's face as he watched his mother's massive boobs rhythmically bounce underneath her tank top. He then reached up and gently cupped both of her heavy meat melons. As he gave them a firm squeeze, he replied, \"I don't know, Mom, but remember... this was actually... your idea!\" \n\nKaren couldn't help but agree with Jacob... this was, in fact, her idea... her choice. \n\nEarlier, when they entered the room, for some reason, Karen's vagina immediately buzzed to life, and trickles of sweet pussy juice began to leak into her cotton panties. She felt an overwhelming desire to be fully stuffed once again with her son's enormous appendage. \n\nHer own words were coming back to haunt her. Just a couple of days ago, she scolded Jacob and told him just because something feels good does not make it right. In her heart, she knew it was her place to help her son. However, she knew it was wrong to enjoy it this much... so horribly wrong. However, that wicked thing of his just made her feel so good... so DAMN good. \n\nThe continued manipulation of Karen's sensitive breasts by Jacob's young hands amplified her arousal. With another orgasm on the horizon, the gorgeous mother quickened her pace of pursuit and rode harder on her son's throbbing penis. \"Ohhhh! Jake... Sweetie!! I'm almost!! Ohhh yesss!! Mommy's... almmooooosssst!!\"\n\nJacob was enthralled by what he witnessed. His sweet and reserved mother desperately bounced up and down on his raging cock like some dirty porn star. Her long braided ponytail flounced around as beads of sweat rolled down her neck and chest, only to disappear into the dark cavern of her deep cleavage. He'd jacked off to a lot of pornography over the past few years, but for him, nothing on the internet came close to this erotic vision.\n\nThe captivated teenager then noticed his mother's diamond-hard nipples trying to poke through her bra and tank top. Jacob tightly pinched the super-sensitive nubs with his thumbs and forefingers, sending an electrical charge straight down to Karen's pulsing vagina.\n\nThe sudden stimulation caused Karen's eyes to fly open, and she gasped. \"Ahhhhh!!\" She then threw her head back as the chase was finally coming to an end, \"Oh Yes! Jake!! Yes! Yes! I'm doing it!! Yes! Yes! Yes!... YEEESSSSSSS!!\"\n\nWith that, Karen slammed her bottom down onto Jacob's crotch and allowed the massive orgasm to take control. She stiffened and trembled as her nerve endings went haywire from trying to deal with the waves of ecstasy that flowed throughout her body. Her eyes scrunched closed, and her mouth opened as if trying to scream, but there was only silence.\n\nOnce able to breathe again, Karen found her voice. \"AAAAAAHHHHHHH!!\" The climaxing mother wailed as she placed her hands on top of her son's as a sign for him to squeeze her big tits even harder. Her breasts tingled with delightful sensation as tiny jets of milk ejected from her sensitive nipples into the sports bra's soft padding.\n\nJacob smiled as he tightened his grip. He could feel his mom's pussy spasm around his cock as the waves of pleasure rejuvenated, and Karen's body seized once more, and she called out, \"Yes... Jake!! Yes... Baby... Ohhhhh Yeeesssssss!!\" \n\nSomewhat exhausted, Karen leaned forward and grabbed hold of the headboard. She began to grind her hips and softly moan as her body would occasionally twitch from the pleasant aftershocks. Eventually, she looked down and asked her son, \"Are you... close?\" \n\nJacob nodded, then asked, \"Mom... can I finish inside? I'm wearing the condom.\"\n\nContinuing to rock her hips back and forth, Karen shook her head, \"No, Sweetie... remember what we talked about... the house of cards.\" Even though Jacob wore protection, the conservative mother still did not completely trust the condom's effectiveness. She couldn't help but feel bad when she saw the look of disappointment on Jacob's sweet face. \n\nKaren then stopped her movement and sat still. Reaching down, she grabbed hold of the bottom of her tank top and pulled it up and over her head. The loving mother then tossed the garment in the general direction where her discarded yoga pants and panties lay on the floor. \n\nNow naked except for her sports bra, Karen smiled down at her teenage boy and said, \"Besides... I think earlier you said something about these?\" She tried to entice her son by slightly squeezing her massive boobs together with her biceps... further accentuating the already obscene amount of deep cleavage that seemed to swallow up the gold locket that hung around Karen's neck.\n\nJacob's eyes bugged out as he gazed up at his mother and her huge knockers contained inside the flimsy sports bra. The black garment was doing all it could to hold in all that succulent breast meat, but it appeared to be having a tough go at it. As a goofy grin spread across his face, he replied, \"Oh yeah, Mom! Oh heck yeah!!\"\n\nSeconds later, Karen removed her bra and switched places with Jacob. Now she was lying on her back with her son straddling her soft tummy. Using her hands, the totally nude mother cupped her massive tits together to form a slippery smooth tunnel as Jacob slid his now-naked dick back and forth between her big mommy boobs.\n\nFor the next couple of minutes, Jacob got into a good rhythm of titty-fucking his mother. He couldn't help but continuously moan from the decadent pleasure. Karen thought her son looked so cute with the look of bewilderment on his face. He appeared as if he were eight years old again playing with a new toy.\n\nJacob could feel the familiar tingling in his bloated testicles. His end was near, and he was about to release the massive load that churned in his aching balls. Speeding up his hips, he muttered to Karen, \"Mom! I'm almost... there!!\" ",
        "Tightening the grip on her breasts, Karen whispered, \"It's okay, Honey... just let it out.\"\n\nSpeeding up, even more, he exclaimed, \"Oh, Mom!! Your tits are so awesome! They're gonna make me blow!!\"\n\nIt made Karen cringe to hear the word 'tits' come from Jacob's mouth. Any other time the virtuous mother would have rebuked her son for using such a filthy word; however, she decided to let it go this one time. So, she softly replied, \"Go ahead, Sweetie, shoot your stuff all over me.\"\n\nJacob reared back, took hold of his quivering cock, and yelled, \"AAAAAAAHHHHH MOOOMMMMM!!\" as he unloaded huge ribbons of sperm all over his naked mother. \n\nKaren couldn't help but mew in approval as the hot and creamy fluid splashed all over her mouthwatering body. It splattered from her freshly fucked boobs past her matronly hips down to her curvy thighs. Lost in the moment, the loving mom softly cooed, \"There you go, Baby... get it all out... good boy.\"\n\nShortly after, Karen lay propped on her elbow, facing Jacob, who now lay on his back, catching his breath. As her son's sticky man cream streamed down across her curvy body and onto the bed, she chuckled and said, \"Well, I guess I'll be washing another comforter.\"\n\nTurning his head towards Karen, \"Sorry, Mom... for making such a mess.\"\n\n\"It's okay, Sweetie.\" Karen smiled while patting his skinny chest, then added, \"As long as you feel better... that's what's important.\"\n\nNodding enthusiastically, Jacob replied, \"Oh yes, ma'am. You always make me feel better. Thank you so much for taking care of me.\"\n\nKaren's smile broadened, and she said, \"You're welcome, Sweetie.\" She leaned forward and kissed Jacob's forehead, and continued, \"I'm your mother... it's my job.\" After glancing at the clock, the helpful mother added, \"I better get cleaned up. I need to start dinner soon.\" \n\nJacob watched as Karen rolled away from him and walked over to the closet for a towel, trying as best she could not to drip semen all over the floor. He never got tired of seeing his mom's beautiful naked body. It was just so feminine, curvy, and it jiggled in just the right places.\n\nAfter grabbing two towels, Karen stepped back over to the bed, tossed one to Jacob, and said, \"Now, Jake, remember... tomorrow you have a doctor's appointment, so I'll pick you up after school.\"\n\nScooching over and sitting on the side of his bed, Jacob responded, \"Don't worry, Mom... I won't forget.\" As the teenager used the towel to wipe off his deflating cock he asked, \"However, I do have one question.\"\n\n\"What's that, Sweetie?\" Karen replied while wrapping the towel around her naked body.\n\n\"Well... no offense to Aunt Brenda, but she's a gynecologist. What does she know about...\" Jacob then pointed down at his crotch and finished, \"You know... man-land?\"\n\nKaren burst out with laughter and replied, \"Man Land??\" She then bent over to collect her clothes off the floor. \"You have an amusement park between your legs or something?\"\n\nShrugging his shoulders, Jacob responded jokingly, \"Well, maybe I do. You have to admit... you did seem to enjoy the ride earlier.\"\n\nStanding up straight, Karen retorted, \"Jacob! Don't be crass.\"\n\n\"Sorry, Mom,\" Jacob apologized as he stood up and tossed his towel into the hamper. \"But seriously, she's a lady-doctor... how can she help me?\"\n\nWith her clothes draped over her arm, Karen walked over to Jacob and said, \"My baby sister may be a 'lady' doctor, but she is still... a doctor.\" Giving him a warm smile, she continued, \"Sweetie, I don't expect her to cure you of that thing... I just want her to give you a quick check-up... that's all.\" The concerned mother then ruffled his brown hair, \"Need to make sure my little snuggle monster is good and healthy.\"\n\nJacob sighed and said, \"Mom... if Sara ever comes over here... you have to do me a favor and not call me those type of names in front of her!\"\n\nKaren smiled and replied, \"You're so cute\", as she turned to leave. As she unlocked and pulled open the bedroom door, she said matter of factly, \"Be a dear and change the comforter on your bed... you should find a clean one in the linen closet.\" \n\nJacob followed after her and pleaded, \"Mom... I'm serious... you have to promise me that you won't!\" He had many humiliating moments during his teenage years with his doting mother and her embarrassing nicknames. The last thing he wanted was Karen Mitchell going into 'mommy mode' around Sara Miller.\n\nBefore walking out, the playful mother turned back to her son and sweetly replied, \"I make... no promises.\" She then added, \"Boop!\" while she tapped him on the nose with her forefinger and walked out.\n\nJacob watched as his mother dressed in only a bath towel sashayed down the hallway. He then called out to her, \"Please, Mom? Moooommm!!\"\n\nNever looking back, Karen's only reply was, \"Don't forget to change the comforter!\"\n\n********************\n\nThe next day, Jacob walked out of the school building and found Karen's Jeep parked in the pick-up line. While tossing his book bag on the back seat, he greeted her. \"Hi, Mom.\"\n\nJacob then climbed into the front passenger seat, where his cheerful mother replied, \"Hi Sweetie... how was school?\"\n\nAfter pulling the door closed, Jacob began to fasten his seatbelt. He replied, \"It was pretty good, actually.\" He held his gaze on his mother while she steered her SUV out of the parking spot. She was wearing a summery cotton dress, dark sunglasses, and wedge sandals. Conservative and wholesome, but still sexy and beautiful.\n\nAs Karen pulled out of the parking lot and onto the highway, she asked, \"How did the history exam go?\"\n\nJacob smiled at her and answered, \"I think I aced it!\"\n\nKaren went, \"Woo Hoo!\" and held her hand up for a 'high five'. \n\nJacob slapped her palm with his and said, \"It was great, Mom... I felt like I knew every answer. Some of the stuff I didn't even remember studying.\" \n\n\"Wow...That's great, Honey.\" Karen then quickly followed up with, \"Did you talk to Sara today?\"\n\n\"Yes, ma'am... I sure did! In Chemistry class and at lunch.\"\n\nThe curious mom then asked, \"Is everything still a go for Saturday?\"\n\nJacob smiled and replied, \"Uh-huh! We're still trying to decide which movie to go see.\"\n\n\"How about dinner that evening?\" Karen added.\n\n\"Sara loves pizza, so we plan to hit the Mellow Mushroom next door to the theater after the movie ends.\"\n\nNodding her approval, Karen said, \"Sounds like a plan. How are you getting there and back? Y'all need a ride?\"\n\nShaking his head, Jacob responded, \"No ma'am... Mrs. Miller insisted on dropping us off and picking us up.\"\n\nKaren chuckled, then said, \"I'm surprised she's not going on the date with you.\" She glanced over at Jacob to find a curious look on his face. She then continued, \"Well, I mean Mrs. Miller can be quite the smother.\"\n\nJacob's brow furrowed, and he replied, \"A what?\"\n\nKaren glanced at Jacob, giggled, then said, \"It's when a mom constantly hovers over her kids and never gives them a minute's peace... we refer to her as a 'smother'.\" \n\nLooking back at the road, Karen continued, \"If you and Rachel think I'm bad... believe me... I'm no match for Donna Miller.\" Turning back to Jacob, she included, \"When her kids were growing up, that woman watched over them like a hawk. I'm shocked she actually let her two sons go away to college.\"\n\nJacob whispered, \"Now you have me worried.\"\n\nKaren giggled and reached over and patted Jacob's knee, \"Don't worry, Sweetie... you just be the young gentleman that your dad and I raised, and all will be fine.\" The smile on the loving mom's face faded, and she added, \"However, it goes without saying you must keep your... thing hidden and under control. If Donna Miller found out about your situation, she would probably freak out and want to have Pastor Miller perform some sort of exorcism on you.\" \n\nEven with the sunglasses covering his mother's eyes, Jacob could feel the seriousness of her stare. He replied, \"Don't worry, Mom... I think I can handle it. I've done a good job so far of hiding it from other people. Plus, I don't want to blow it with Sara... I really like her.\"\n\nThe smile returned to Karen's face. \"I know you do, Honey... I just want you to be careful and to be prepared if any problems should... arise.\"\n\nUnderstanding her meaning, Jacob nodded in agreement. After a few seconds, he asked, \"Speaking of my... problem... how much does Aunt Brenda know about my situation?\"\n\nStaring straight ahead, Karen replied, \"Well... she knows all about Dr. Grant and the WICK-Tropin program. She is also aware of the effect the hormones had on your penis.\"\n\nLowering his voice, Jacob asked, \"Have you told her about you having to... you know... help me?\"\n\nShaking her head, Karen replied, \"No... of course not... and I prefer to keep it that way.\" She then turned to look at Jacob and continued, \"I will only tell her if it is absolutely necessary.\"\n\nJacob asked, \"Well, can you trust her to keep everything secret?\"\n\nKaren resumed looking straight ahead. As she drove along the busy interstate highway, her mind suddenly drifted back to a horrible event that took place about five years ago. It was a secret she shared with her baby sister... a very dark secret that no one else in the family knew to this day.\n\nLike Karen, Brenda was tall, curvy, and gorgeous, but that is pretty much where the two sisters' similarities ended. In contrast to Karen, Brenda took after their mother and had honey blonde hair and bright blue eyes. \n\nUnlike her conservative, straight-laced older sister, Brenda liked to party and date many different guys. She wore her clothes too tight and her skirts too short. Growing up, she pretty much drove their mother insane. Because of their similar looks and personalities, Karen swore that her daughter Rachel was actually Brenda's younger clone.\n\nEven though Brenda was a bit promiscuous in her youth, she was very bright and an excellent student. She went on to get her medical degree and became a well-respected gynecologist. During that time, she met and fell deeply in love with Mark Sullivan, who works in international business. The two eventually married and settled into a comfortable life along with their preschool-aged son, Daniel.\n\nThe unspeakable occurrence took place during the annual Memorial Day family cookout. That particular year the event was held at the Mitchell home with Karen and Robert acting as hosts. Most family and close friends were in attendance except for Brenda's husband, Mark, who was overseas for an unexpected business conference.\n\nEven though Brenda was a faithful wife and loved her husband deeply, she never lost the flirtatious side of her personality. She had always enjoyed the attention of men and the off-color banter. Mark knew Brenda was sort of a tease and did not mind her innocently flirting as long as, at the end of the day, it was him that ended up balls deep inside her vexing body.\n\nEarlier that year, with her husband's support, Brenda underwent breast enhancement surgery. She had always been a little envious of her older sister and the attention Karen received from her busty rack. The lovely doctor had her breasts enlarged from a solid \"B\" up to a mouthwatering \"DD\" cup. Brenda was delighted with the results. Not only did she look like a Hollywood starlet, but her husband could not keep his hands off of her.\n\nFor the family cookout, Brenda purchased a new yellow string bikini. Her original plan was to surprise Mark with the new suit and flaunt her \"assets\" in front of the other men in attendance. Unfortunately, at the last minute, Mark was called away and had to travel overseas. However, Brenda decided to wear the new suit anyway.\n\nIt was a hot day, and Brenda probably drank more than she usually would have if Mark had been with her. Also, in her husband's absence, the half-naked bombshell received a lot of attention... especially from a certain twenty-one-year-old named Chris Thomas.\n\nChris was the son of Karen and Robert's friends from across the street and was home from college for the summer. He was fit, confident, and very handsome... a real smooth operator despite his youth. He spent most of his time hanging out with Brenda and making sure her red party cup never got empty. With the effects of the heat and the alcohol, Brenda's inhibitions were dramatically low, and her flirting with the young 'Adonis' was getting to the point of risqu\u00e9.\n\nA while later, Karen went into the house. She went upstairs, and as the lovely housewife walked past the guest bedroom, she heard noises coming from inside. As Karen stepped up closer to the closed door, she heard what sounded like grunting and moaning. \n\nAt first, Karen thought it was probably a couple of teenagers who had snuck their way upstairs. She was appalled at the lack of respect shown for her gracious hospitality and Christian home. The angered hostess then slowly turned the knob and slowly pushed the door open just a crack. Her eyes went wide with absolute horror as she gasped to herself, \"Oh my goodness!!\"\n\nThe dresser mirror reflection gave Karen a complete view of the evil taking place in her house. Brenda was on the bed on all fours with her hands tightly grasping at the light blue comforter. Her discarded bikini top was lying on the bed next to her and the skimpy bottoms dangled from her left ankle. \n\nStanding behind Brenda was the young stud, Chris Thomas, from across the street. His swimming trunks pulled down to around his knees, and his hands tightly held the rounded hips of the older woman. His eyes were closed as he continuously slammed his body into the married doctor's shapely upturned ass. He grunted between thrusts, \"Oh Doc!! You have... a great... pussy!!\"\n\nKaren was stunned and frozen in place as she watched the horrible scene of her sister committing the wicked sin of adultery. At first, she thought maybe Brenda was being forced to do this. She could not believe that her sister, a well-respected doctor, and wife, would willingly cheat on such a wonderful man as Mark. However, the look of utter euphoria written on Brenda's beautiful face told a completely different story.\n\nBrenda lowered her front and supported herself on her elbows. She arched her back and tugged harder on the comforter with both hands, and began a constant chant of \"Oh yes... Oh yes... Oh yes.\" Chris began to speed up, and he pushed the cheating wife closer and closer to the edge. \n\nChris snuck his right hand underneath Brenda and grabbed one of the luscious fruits hanging from her chest. When the handsome frat boy squeezed the enlarged juicy melon, a wave of delightful pleasure spread throughout the doctor's body. She closed her eyes and exclaimed, \"Oh Yes! Fuck Me!! That's it... Right there!! Don't you dare stop!!\" \n\nPutting both hands back onto Brenda's gyrating hips, Chris plowed into her dripping wet cunt with all his might. The intoxicated adulteress closed her eyes tighter and called out, \"Oh Yes!! Fuck Me!! I'm gonna cum!! Ohhh God!! FUCK ME!! OHHHH GODDDD!! I'M CUMMMINNNNNGGGG... YEESSSSSSSS!!\"\n\nThe constant clenching of Brenda's climaxing vagina around Chris's impressive manhood sent him over the edge. He threw his head back and yelled, \"OH FUCK YEAH!! TAKE IT... YOU SLUT!!\" \n\nAlthough horrified, Karen could not look away as she was captivated by the trainwreck taking place right before her eyes. She tried to comprehend how her married sister could do this... to cheat on Mark with this... boy. How could she allow him to degrade her in such a fashion and spill his potent seed into her unprotected vagina? \n\nThe two guilty parties remained coupled as they tried to get their breathing under control. Brenda had her head down with her forehead resting on the soft comforter. She all of a sudden felt her partner in crime tense up and gasp. \n\nInstinctively, Brenda looked up, and in the mirror, she saw Karen's reflection at the door. The unfaithful wife quickly sobered up and panicked, \"OH GOD!! GET OFF ME!! NOW!!\" Brenda grabbed her bikini top and scurried off the bed. Chris pulled up his swimming trunks and hurried out of the room... never looking Karen in the eyes as he ran past her.\n\nAfter walking into the room, Karen shut the door behind her. Brenda, sitting on the bed was trembling as she fumbled with her bikini top, trying to regain some sense of modesty. \"Oh God, Karen... I'm sorry... I don't know what happened!!\" \n\nKaren walked over and sat down on the bed beside her sister, still trying to cope with what she witnessed. After a few seconds, she asked, \"Oh my gosh... Brenda... what were you thinking? What if one of the children had walked in on you?\"\n\nBrenda began to sob, \"I-I don't know!! I just..\" She then looked at her sister with pleading eyes and added, \"Please, Karen... Please... don't tell Mark!\"\n\nGrabbing Brenda's hand, Karen replied, \"Speaking of Mark, how could you do this to your husband? Don't you love him?\"\n\nContinuing to cry, Brenda nodded then replied, \"Yes... Oh God, yes... more than anything! That's why I'm begging you not to tell him, Karen. He would never forgive me.\"\n\nKaren sighed and then said, \"Well, help me understand why you would do such a thing as to cheat on him with some frat boy.\"\n\nFor the next twenty minutes, Brenda relayed to Karen how lately she had been feeling quite lonely. Mark's business has required him to be out of town more and more. When he was home, he was exhausted, and the lack of bedroom activity had her frustrated. With Brenda's high libido, masturbation could only do so much.\n\nBrenda went on to explain how excited she was about this weekend. She was hoping to surprise Mark with her new sexy swimsuit in hopes it would be the spark needed to reignite her husband's desires. However, it all went down the tubes when he had to go out of town unexpectedly and left her to attend the family gathering alone.\n\n\"I know it's not Mark's fault that he had to go to London so unexpectedly,\" Brenda continued, \"I just felt angry and abandoned. Then you add in the alcohol and the attention of a young hunk like Chris...\" She then looked back to her big sister and continued, \"I don't know... it just spun out of control.\" The regretful wife began to cry again. \"Oh, Karen... what am I going to do?\"\n\nKaren couldn't help but feel bad for Brenda. She wrapped her arms around her distraught baby sister and pulled her in for a hug. After all was said and done, she agreed not to tell Mark or anyone for that matter... not ever her husband, Robert. Karen loved her sister and brother-in-law and decided best to keep the secret and not ruin their marriage because Brenda made one stupid mistake... although it was a big one.\n\nAfter Brenda calmed down and straightened herself up, she held Karen's hand and said, gratefully, \"Thank you, Karen... thank you so much. If you EVER find yourself in a desperate situation and need my help, I will be there for you... I swear!!\"\n\nKaren wiped a tear from Brenda's cheek and replied, \"Well, I appreciate the sentiment, but let's hope that time never comes.\" Little did she know back then that five years later, ironically, that day would finally arrive.\n\n\"Mom?\" Jacob's voice brought Karen back to the present. \"Mom... did you hear me?\"\n\nLooking over at her son, Karen replied, \"What? What was that, Sweetie? I'm sorry... I was thinking about something.\"\n\nJacob repeated his question, \"I said... do you think we can trust Aunt Brenda to keep all this a secret?\" \n\nA slight smile formed on Karen's face, and she replied, \"Yes, Baby... I think we can.\" She turned back to face forward then confirmed, \"We most definitely can.\"\n\nWith it being late in the afternoon, the gynecologist's office was almost deserted. Karen parked her vehicle in the back parking lot, then she and Jacob entered through the employee entrance. \n\nKnowing her way around the building, Karen led Jacob through the labyrinth of hallways down to Brenda's office. They arrived to find Dr. Sullivan sitting behind her large mahogany desk, typing on her computer. ",
        "At first, Karen almost didn't recognize her sister. Gone was the long mane of honey-blonde hair. Brenda had died it to a dark auburn and had it cut to shoulder length.\n\nAfter hearing a soft knock, Brenda looked up to find Karen and Jacob standing in the doorway. A big smile spread across her beautiful face as she took off her reading glasses. She then stood up and exclaimed joyfully, \"Hey, you two... come on in!\" After walking from behind her desk, the doting aunt held out her arms and said to Jacob, \"Get over here, you stud muffin!\"\n\nJacob smiled and replied, \"Hi Aunt Brenda!\" He then quickly closed the distance and walked into his beautiful aunt's warm embrace. Like her older sister, Brenda was tall, especially in heels, so Jacob's face rested perfectly against her big soft breasts. The feel of her curvy body and sweet scent caused the teenager's monster cock to stir awake.\n\nStepping back, Brenda held Jacob by his shoulders and said, \"I swear... you get more handsome every time I see you.\" She leaned in closer and teased, \"Lord knows... if I were not married to your Uncle Mark and you were not my nephew...\"\n\n\"He would still be way too young,\" Karen interrupted while she pulled Jacob away from the flirtatious doctor.\n\nBrenda gave Karen a disappointed look, then glanced back at Jacob, \"Your mom's always been a fuddy-duddy.\"\n\nJacob chuckled, and Karen quickly replied, \"Well... someone had to try and keep you out of trouble.\"\n\n\"Me? Trouble? I have no idea what you're talking about,\" Brenda responded while giving Karen a naughty grin. They both giggled, and the gorgeous sisters gave each other a big hug.\n\nOnce the sisters broke their embrace, Karen inquired, \"You changed your hairstyle?\" \n\nBrenda nodded, \" Uh-huh! I had it done yesterday... do you like it?\"\n\nKaren smiled and ran her finger through her sister's dark red locks and confirmed, \"I love it! It looks great! The color really accentuates the blue in your eyes.\"\n\nBrenda smiled and replied, \"Thanks! Mark hasn't seen it yet... I'm going to surprise him when he gets home later this evening.\"\n\nAfter a few more minutes of pleasantries, Brenda motioned for Karen and Jacob to sit down in the leather chairs facing her desk. As the statuesque doctor stood between them, she leaned back against the mahogany worktop. Jacob could not help but gaze upon the stunning vision of his aunt.\n\nBrenda's outfit consisted of a snug-fitting white sleeveless blouse and a black hip-hugging skirt that came down to about mid-thigh. She also wore black 3\" heeled pumps and nude thigh-high stockings. As Jacob's eyes traveled up and down the curvy figure of his smoking-hot relative, he could not help but think to himself that his Uncle Mark was a very lucky man.\n\n\"Now, Jake, your mom has told me all about the hormone test trials and the unfortunate effects you continue to suffer. If you approve, along with checking your vitals, I would like to get some blood and semen samples.\" Jacob looked over at Karen, who nodded her approval. \n\nBrenda continued, \"I took the liberty to speak with an old friend of mine. He is one of the top andrologists in the entire country and has extensive knowledge in dealing with abnormal male issues.\" She then leaned down towards Jacob and added, \"Or as your mom told me, you referred to it as... man land?\" The flirty doctor looked over at her sister and gave her a knowing grin. Jacob couldn't help but blush.\n\nKaren spoke up and asked, \"Can we trust this 'friend' of yours to keep everything confidential?\"\n\n\"Trust him?\" Brenda nodded, \"Yes, definitely.\" She then began walking around her desk and continued, \"We've known each other since college... plus he owes me a couple of favors.\" After taking a seat in her chair, the lovely doctor said, \"Don't worry, Sis... this is all being done anonymously. Jake's name will not be on any of the paperwork. I've made sure that nothing can be traced back to either of you.\"\n\nJacob then asked, \"Do you think he can find a cure?\"\n\nLooking over at her nephew, Brenda replied, \"I'm not sure about that, Stud... we'll just have to wait and see.\" She then sat back in her chair and continued, \"His main focus is to run various tests on the samples and ensure nothing adverse is going on.\"\n\nGrabbing Jacob's hand, Karen added in a concerned tone, \"Sweetie, I just want to make sure everything is okay and that you're healthy.\"\n\nTurning to his mother, Jacob replied, \"I'm fine, Mom... I'm sure of it.\" He saw the look in his mother's eyes and immediately knew that Karen Mitchell was not going to take 'no' for an answer. Glancing back to Brenda, he sighed, then added, \"Okay, Doc... where do we start?\"\n\nAs Brenda led them down to the examination room, Jacob noticed the office was now totally deserted. In the quiet, he could hear the phone at the receptionist area ringing. That, along with the darkened hallways, gave the place a kind of spooky feel.\n\nOnce inside the examination room, Brenda had Jacob sit on the exam table. Karen sat down on the extra chair in the corner. \n\nAs Dr. Sullivan rolled a tray of medical equipment up beside her patient, she sighed and said, \"I haven't taken anyone's blood in quite a long time... I only hope I remember how.\" She then glanced at her nephew to find a worried look on his face. The joking aunt then winked and gave him a sly smile. \n\nWhile Brenda continued with the exam, Karen's cell phone began to ring. After fishing the device out of her purse, she looked at the screen and said, \"Uh-oh... it's Rob.\" She then stood up and said, \"l better go take it out in the hallway.\" While closing the door behind her, Karen answered her phone and said, \"Hi Honey.. how's it going?\"\n\nLater on, and after drawing two vials of blood, Brenda patted Jacob on his thigh and said, \"Okay, Stud... worst parts over. Now all I need is that semen sample.\" While she rolled the equipment cart across the room, she commented, \"We don't see male patients here, and unlike a sperm bank, I don't have any porn on location.\"\n\nStill sitting on the exam table, Jacob watched as Brenda bent over, rummaging through a cabinet. The sight of her short skirt tightly stretched across her curvy backside caused him to rub the growing erection in his pants. He responded, \"That's okay, Aunt Brenda... Mom would just freak out if she found out I was looking at it anyhow.\"\n\nStanding up straight and turning back around, Brenda giggled. As she walked back over to Jacob, she said, \"You're probably right... she would freak out.\" At that moment, Brenda detected an unfamiliar fragrance. It was sweet and floral... it made her think of exotic flowers you might find on some South Pacific island. \n\n\"This is for you,\" Brenda stated while holding out a sample jar. When Jacob took the small container from his aunt, she could see a confused look on his face. Leaning in close to her nephew, she said, \"It's for you to ummm...\" She then made a jacking-off motion with her hand and whispered, \"You know.. do your business.\"\n\nJacob scoffed, \"No offense, Aunt Brenda...\" He then added while he handed the small jar back to her, \"But we're going to need a bigger boat.\" \n\nBrenda held up the container and, with a perplexed expression, asked, \"Bigger than this?\"\n\nJacob nodded. \n\nLowering her voice, Brenda questioned, \"Jake? How much semen do you ejaculate?\"\n\nMotioning his head towards the jar, Jacob replied, \"More than that... easily.\"\n\nThe doctor's eyes widened, then she stated, \"Your testicles must be absolutely huge in order to produce that much fluid!\"\n\nOnce again, Jacob sheepishly nodded in confirmation. He then looked down at his lap and said, \"They're swelling up now, and it's getting uncomfortable.\"\n\nSuddenly, the pleasant scent intensified. At first, Brenda wanted to blow it off as maybe some new air freshener... perhaps purchased by one of the staff. However, that theory was quickly negated when the doctor felt her pink nipples immediately harden and her body mysteriously inflamed with arousal.\n\nBrenda just happened to glance down at Jacob's crotch and was shocked to see a large bulge forming in her nephew's pants. She then asked, \"Jake... exactly how big is your... thing? I mean, your mom told me that you had increased in size, but she didn't give any real specifics.\"\n\nJacob began to rub the erection through his pants and replied, \"It's pretty big... Aunt Brenda.\" With a grimace, he continued, \"Plus, it hurts really bad when it gets like this.\"\n\nBrenda could feel the buzzing in her nipples intensify, and a warm, tingling sensation began deep inside her clean-shaven and suddenly wet pussy. Feeling a little lightheaded, the aroused doctor took a seat on the nearby rolling stool. Jacob couldn't help but stare at his aunt's stocking-clad legs as her short skirt rode up even higher on her shapely thighs.\n\n\"Aunt Brenda? Are you okay?\" Jacob asked with faux concern. He knew exactly what was happening to his smoking-hot married relative, and he hoped things would continue to progress.\n\nTaking off her reading glasses, Brenda replied, \"I don't know... It feels... like I'm having a hot flash.\" She then fanned her face with her hand, and her eyes automatically darted back to Jacob's lap. \n\nThe bulge now appeared even larger than before. Not sure why, but the gorgeous doctor now felt a strong desire to see what her nephew was hiding in those pants. She began to feel as if she were slightly intoxicated. \n\nIn a soft voice, Brenda said while staring at his crotch, \"Jake... I should probably leave you alone so you can... express your sample. But before I do, maybe I should... perform a quick examination first.\" Brenda then glanced up at Jacob... her eyes filled with curiosity. \n\nRaring back just a little, Jacob replied, \"You want to look at my penis?\"\n\nPutting up her hand, Brenda responded, \"Calm down, Sweetie. I just want to make sure everything appears normal... especially since you are in pain.\" \n\nBrenda rolled herself back a few feet from Jacob and added, \"Besides... your mom did say she wants to make sure that you are good and... healthy.\" A slight smile then appeared on the doctor's beautiful face. It was very similar to the devious grin Rachel gave him the other night while looking back at him in the bathroom mirror. The horny teenager could feel his pulse elevate and his cock twitch at the thought of his Aunt Brenda examining his 'medical condition.'\n\nJacob slid down off the examination table and kicked off his shoes. He then began to unbuckle his pants and said, \"Okay, Aunt Brenda... if you're sure this is best.\" \n\nWhile watching the teenager's hands with anticipation, the aroused doctor replied, \"Oh yes, Jake... I'm definitely sure.\"\n\nOnce he had them unfastened, Jacob pushed his pants and underwear down to his knees. Brenda's eyes shot wide like saucers when her nephew's giant cock sprung up into view, and then she gasped, \"Oh my... GOD!!\" The surprised doctor put a hand up to her mouth as she stared in total shock. \n\nKaren had told her that the hormones had caused Jacob's penis and testicles to grow substantially, but that was a huge understatement. This was unlike anything Brenda had ever seen or heard of before. Dr. Grant's experimental treatment had turned her sweet nephew's genitals into some ungodly abomination. \n\nBrenda rolled towards Jacob to get a closer look. The chemically enhanced penis jutted straight out at least twelve inches from his skinny body. She couldn't help but think how strange the humungous appendage looked attached to her nephew's underdeveloped physique. \n\nThe purplish-colored leviathan seemed to twitch along with Jacob's elevated heartbeat. A thick string of pre-cum hung from the slit of the bulbous mushroom-shaped head. The married doctor could not look away from the pulsing nightmarish creature just inches from her face. Strangely, she found it to be terrifyingly beautiful.\n\nNot even thinking about examination gloves, the aroused doctor gently grabbed hold of the thick vein-covered shaft. Instinctively, Brenda slowly stroked both hands up and down the boy's oversized manhood, causing her nephew to moan his approval.\n\nThe sight of her wedding ring quickly brought her husband to mind and, along with him, a wave of guilt. It was five years ago the last time she touched another man, other than Mark, in this fashion. She swore to herself that day it would never happen again, and up until now, she had lived up to that promise. However, little did she know back then that she would eventually come across something of such magnitude... a once-in-a-lifetime cock. And it would belong to a blood relative... her nephew... her sister's teenaged son.\n\nThe sweet-smelling vapors had now intensified and elevated Brenda's arousal. She had fulfilled her desire to see this otherworldly monster... now, she craved a bit more. The horny doctor looked up at Jacob and softly asked, \"Jake... does that feel better?\"  \n\nNodding his head, Jacob answered, \"Oh yes, ma'am... a lot better.\"\n\nBrenda bit her bottom lip while she sorted out the internal conflict taking place inside herself. She knew this was wrong on so many levels; however, the powerful pheromones had her mind clouded. \n\nBrenda's hardened pink nipples tingled insanely inside her bra, and her throbbing vagina constantly leaked her sweet essence into the gusset of her thong panties. The horny wife thought to herself, 'Mark had better buckle up, because later tonight he will be in for the ride of his life.'\n\nWhile Brenda slowly jacked off her nephew, she justified the means for her next action. She looked up and said, \"Jake... for today, you are technically my patient. As a physician, it is my duty to treat my patients so that they get the relief they need from whatever ailments they suffer... wouldn't you agree?\"\n\nLooking down at his beautiful aunt, Jacob nodded in affirmation.\n\nSmiling back at her nephew, Brenda continued, \"Well, I would like to administer a somewhat unorthodox treatment that I think will ease your suffering and at the same time express the sample we need for testing. That is, if you approve?\"\n\nJacob croaked out, \"Yes, ma'am!\"\n\nBrenda gave Jacob a stern glare, \"Now, Jake, this type of treatment must remain a secret. What happens in this room... must stay in this room. Can you agree to that?\"\n\nNodding enthusiastically, Jacob replied, \"Whatever you say, after all, you're the doctor.\"\n\nA smile spread across Brenda's beautiful face as she watched more slimy pre-cum dribble from the slit of Jacob's cock and trickle down onto her hand. She looked up at her nephew and said, \"Stud... I think you're right... we're gonna need a bigger boat.\"\n\nMeanwhile, out in the waiting room, Karen was finishing up her conversation with Robert. \"That's fine, Rob... I'm running a bit late myself. In fact, instead of cooking tonight after I pick up Jake, I'm going to stop at the sandwich shop and pick up dinner on the way home.\" After a few seconds, the loving wife giggled and replied, \"Of course, Sweetheart... I'll get you a barbecue brisket sub.\" \n\nThey chatted for another minute or so, and then Karen finished up with, \"Okay... I'll see you at home... I love you, too... bye.\" After ending the call, Karen began walking back to the examination room. The tired mother hoped Brenda was about done with the exam so she and Jacob could go home. Little did she know that her baby sister was just getting started.\n\nJacob leaned back, supporting himself with his elbows on the examination table. The teenager watched with a smile on his face while his super-hot aunt sucked and slurped on his throbbing manhood like a woman possessed. He could see the dangling combination of spit and pre-cum swinging from her chin as she bobbed her head back and forth.\n\nAfter a short while, Brenda pulled her head back and, with her hand, wiped the gooey string from her face. She then licked a dollop of delicious pre-cum that oozed from the slit. Whatever was in this boy's system made his seminal fluids taste unlike any she had ever had. Still stroking his cock, Brenda looked up at Jacob and asked, \"So... are you okay with your Aunt Brenda helping you?\n\nNodding, Jacob replied without thinking, \"Oh yes, Ma'am. Besides, most times, I have help with this anyway.\" Immediately he grimaced from his slip up.\n\nBrenda stopped stroking his aching shaft and furrowed her brow. She cocked her head to the side and asked, \"Help? Do you mean someone does this for you?\"\n\nJacob's facial expression was like a deer caught in the headlights; he could only respond with, \"Ummmmmmm.\"\n\nBrenda's eyes went wide with realization, \"Oh... my... God!! You mean to tell me...\"\n\nThe door to the examination room swung open at that exact moment, and Karen stopped in her tracks. She gasped out loud from what she walked in on. She found Jacob leaning back against the exam table naked from the waist down, and her sister was crouched on a stool holding onto her son's cock with both hands.\n\nAfter a few seconds of the trio staring at one another, Karen gathered her thoughts and shrieked, \"What in Sam Hill is going on here?\" She then walked on into the room and quickly closed the door.\n\nTrying to play it cool, Jacob smiled and replied, \"It's okay, Mom. Aunt Brenda is just giving me a thorough examination, just like you wanted.\"\n\nStepping up closer, Karen put her hands on her hips and scoffed, \"Oh really? Well, this is unlike any examination I've ever seen.\" Her body quickly reacted to Jacob's familiar and overpowering scent.\n\nJacob countered, \"Well, along with making sure I'm healthy... she's also helping me to extract the semen sample.\"\n\nCutting her eyes at Jacob, Karen responded, \"Oh, is she now?\" She then turned to her younger sister and asked, \"And what do you have to say for yourself? He's just a boy!!\"\n\nBrenda slowly stood up from the stool. She then looked Karen in the eyes and calmly responded, \"I should probably ask you the same question.\"\n\nScrunching her face, Karen replied, \"Excuse me? What do you mean?\"\n\nWalking past Karen, Brenda chuckled, then commented, \"It seems that my holier-than-thou sister has been a very... very naughty girl.\" \n\nQuickly turning back to Jacob, Karen asked with a stern tone, \"What... did you... tell her?\"\n\nTrying to act innocent, Jacob shrugged his shoulders and replied, \" Nothing, Mom... honest.\"\n\nBrenda collected a medium-sized beaker from a nearby cabinet and said, \"He let it slip that he has been getting help with... relieving himself.\" \n\nKaren glared at her son, \"Jake... how could you?\"\n\nAs Brenda walked over to Karen, she held out the glass container to her sister and continued, \"And since he has no girlfriend at this time... it just makes sense that the most logical candidate would be... you.\"\n\nA crestfallen Karen looked down and took the beaker from her sister. Continuing to stare at the glass jar, Karen said softly, \"It's just that... he has trouble ejaculating on his own, and he... needs my help.\"\n\nBrenda put her hands on Karen's shoulders and said, \"Hey Sis... I'm not judging you one bit. In fact, I'm quite impressed.\"\n\nLooking up into Brenda's eyes, Karen replied, \"You are?\" Feeling a little relieved, she then asked, \"So, you don't think I'm a horrible mother?\"\n\n\"Horrible??\" Brenda scoffed then said, \"To the contrary... I think it proves you're a great mother.\" The remark made Karen smile just a bit. \n\nBrenda then continued, \"You did what a lot of moms wouldn't have the guts to do. It just shows how much you love your son... you did what you felt like you had to do.\" She then looked over at Jacob and maintained, \"Believe me... if my Daniel is ever in a situation similar to this, you bet your bottom dollar, I would do whatever it took to ease his suffering.\"\n\nFeeling more at ease, Karen then said, \"Brenda, this has to be kept a secret... especially from Rob.\"\n\nPulling Karen to her for a hug, Brenda said softly, \"Don't worry, Sis... you were there for me, and you have faithfully kept my secret. The least I can do is keep yours.\" ",
        "Jacob overheard his aunt's statement and curiously wondered what dark secret the two sisters shared. He was interested in finding out, but that could wait for another day. For now, his only concern was that one of these two gorgeous women was going to help finish him off. Heck... a threesome would be even better... that would be like hitting the jackpot.\n\nAfter the sisters ended their embrace, Brenda turned back to Jacob and said with a smile, \"Now... I think I should finish my special treatment for my special patient.\"\n\nKaren grabbed Brenda's forearm, and they locked eyes. The older sister then said, \"You know you don't have to do this.\"\n\nBrenda glanced back over to find Jacob standing by the exam table, patiently waiting and slowly stroking his massive cock. \"What kind of physician would I be if I didn't follow through and help my patient?\" She then looked to Karen and added, \"Besides, he's also my godson... so as his godmother, I think it only proper that I help him if I can.\"\n\n\"Well, if you insist...\" Karen then alerted her sister, \"However, I feel I should caution you... it tends to make quite a mess.\"\n\nGiggling, Brenda pointed down at the beaker in Karen's hand. \"That's what this is for.\" She then motioned with her head towards Jacob, \"Stud over here already warned me.\"\n\nKaren added, \"I should also inform you if his stuff gets on your clothes... the stains won't come out.\" The embarrassed mother blushed and continued, \"I've had to throw away several good blouses.\"\n\nBrenda's eyes widened as she replied, \"Ohhhh... I see what you're saying.\" The horny physician reached back and began to unzip her short skirt. She then looked over to Jacob and said, \"I really like this outfit, Jake, so I hope you don't mind if I take it off.\"\n\nThe excited teenager shook his head and replied emphatically, \"No, Aunt Brenda... I don't mind one bit!!\" Jacob's excitement increased as he watched his aunt shimmy the tight skirt down over her wide and curvy hips. \n\nAfter Brenda stepped out of her skirt, she turned and placed the garment on the exam table. Jacob's eyes went wide with astonishment as he gazed upon his aunt's beautiful backside. Her skimpy thong panties left her round and juicy ass nearly naked.\n\nDr. Sullivan then unbuttoned and slipped her blouse from her delicate shoulders. Brenda was now down to her lacy bra, skimpy panties, thigh-high stockings, and heels. The respected physician and wife looked as if she had just stepped out of a lingerie catalog. \n\nJacob watched with anticipation as the walking wet dream he knew as Aunt Brenda stepped back over to the rolling stool. His eyes drank in the sight of her mostly naked body with its lightly tanned skin and ridiculous curves.\n\nBrenda sat back down on the stool, making her enormous tits jiggle around inside the white lacy bra. She then reached behind her back and began to unfasten the hooks on her bra and said softly, \"I just bought this the other day... I don't want to mess it up.\" \n\nFrom the chair across the room, Karen asked, \"What about Mark... are you going to be okay hiding this from him?\"\n\nBrenda looked back over her shoulder at her sister and replied, \"Don't worry, Sis... I'm a big believer in doctor/patient confidentiality. Besides, it's not like we're doing anything really bad like having intercourse.\" \n\nKaren couldn't help but feel her cheeks burn from embarrassment. She looked down, hoping her sister did not see her blush as that could give her away.\n\nBrenda removed her bra after releasing the final hook, exposing the big wobbling breasts to her teenaged nephew. \"Wow... nice ones, Aunt Brenda!\" Jacob commented softly. He wanted to touch them but decided it best to wait and see how things go before making such a bold move.\n\n\"Why, thank you, Jake. They better be nice... I spent enough money on these puppies,\" Brenda said while she tossed her bra onto the pile of clothes on the exam table. \n\n\"You mean they're fake?\" Jacob asked in surprise.\n\nBrenda replied, \"I had them enhanced years ago with the best plastic surgeon in the southeast.\" She then chuckled and nodded towards Karen and said, \"Not all of us were blessed with big naturals like your mom over there.\" The nearly naked doctor then took hold of Jacob's throbbing erection and whispered to the creature pulsing in her hands, \"Now, my new friend... where were we?\"\n\nKaren sat quietly as she once again played the part of a captive voyeur. On the one hand, she felt relieved that her younger sister was so accepting of her plight and was more than willing to help Jacob, and along with it, keep their secret. However, as she watched yet another woman giving sensual pleasure to her son, she could not help but once again feel slight pangs of envy.\n\nAfter a while, the chemicals in Jacob's pre-cum had increased Brenda's arousal to a fever pitch. Her nipples burned, and her thong panties saturated. The horny physician snaked her hand between her shapely legs and ran her fingers over the silky gusset, further torturing her already tingling clit. She now found herself desperate to finish up with Jacob and hurry home and take out her frustrations on her husband.\n\nPulling her head back, Brenda swallowed then said, slightly out of breath, \"Damn, Stud, what's it gonna take to make this thing blow?\" She then rubbed the side of her cheek and added with a chuckle, \"My jaw is killing me.\"\n\nJacob saw an opening and decided to take a chance. He reached down and took Brenda by her hand, and pulled her up from the stool, and said, \"I'm sorry, Aunt Brenda... let's try something different.\" \n\nLike with his mom the other day in the laundry room, Jacob guided his aunt to rest her hands on the exam table. With her mind clouded from the extreme arousal, Brenda gave him no resistance, but asked, \"What do you mean different?\" \n\nBrenda watched in the mirror on the wall as her nephew took up position behind her, and she spoke with slight panic, \"Jake... what are you doing?\" \n\nJacob placed his hands onto Brenda's fleshy hips and said, \"Aunt Brenda... I'm gonna need you to lower yourself a little more.\" He then tapped the inside of her foot with his.\n\nKaren instantly realized where this was heading. The memory of the laundry room incident caused her vagina to spasm involuntarily. She wondered if she should intervene, but for some reason, the concerned mother couldn't bring herself to speak up, so instead, she kept quiet and stayed seated. \n\nBrenda knew she should put a stop to this and quick, but her mind and body did not want to cooperate. Giving her nephew a blowjob in order to help extract a semen sample was one thing; however, full-blown sexual intercourse was a whole different level.\n\nAgainst her better judgment, Brenda stepped out her heels and widened her stance as Jacob instructed. Then, as if on autopilot, she bent over and lowered her naked torso down onto the exam table. The cool vinyl cushioning gave soothing relief to her sensitive burning nipples.\n\nThe confused wife battled with internal conflict. Her aroused body wanted nothing more than to experience Jacob's freak of nature. Her well-lubricated vagina awaited to be stuffed like never before. Yet, the sight of her wedding rings brought back the memory from five years ago. She couldn't allow herself to cheat on her husband a second time... but even worse than that... with her own nephew... could she? \n\nJacob took hold of Brenda's thong just where it disappeared into the deep cleft between the flawless globes of her beautiful backside. He then lifted it and pulled it to the side, out of the way. \n\nAt that moment, Karen noticed Brenda's vagina was totally bald, just like Melissa's. In her mind, she asked herself, \"What is it with women and shaving their pubes?\" She couldn't help but be intrigued by the sight of her sister's glistening clamshell. \n\nIn a final desperate act of keeping her fidelity intact, Brenda said softly, \"Jake, Honey... I don't think I can do this... I shouldn't cheat... on your uncle.\"\n\nAs Jacob slid the head of his enormous dick along his aunt's sopping wet gash, he replied, \"It's not cheating, Aunt Brenda... remember... you're just being a good doctor and helping your patient.\"\n\nThe feel of Jacob's gigantic cock sliding between Brenda's pussy lips felt so good she had to fight the urge to push her hips back against it. Looking into the mirror, the frantic wife locked eyes with her sister in search of help and blurted out, \"Karen... I'm not sure I should do this again!\" \n\nLooking back at Brenda's reflection, Karen could read the mixed signals in her sister's pleading eyes. There were emotions of confusion, anticipation, and fear, but primarily lust and desire. So instead of coming to her rescue, Karen tried to ease her guilt and said softly, \"Don't worry, Brenda... Mark will never find out.\"\n\nAt that moment, Brenda's eyes went wide with shock. \"Ahhhhh!!\" she gasped as the head of Jacob's cock penetrated her tight opening. As more and more of her nephew's thick phallus slowly burrowed its way deeper into her wet pussy she began to chant in quick succession, \"Oh my God! Oh my God! Oh my God!\" \n\nBrenda contemplated telling Jacob to stop. However, in an attempt to ease some of the intense pressure, she reached across and grabbed the far end of the exam table. This position caused her torso to lay flat against the vinyl cushion and allowed her to raise her butt higher and give Jacob a better entry angle.\n\nUnlike her older, more conservative, and straight-laced sister, Brenda dated a lot of different guys in high school and college. She even ended up having sex with quite a few of them. However, no one in her past, including her loving husband, had anything in size remotely close to preparing her for the onslaught her nephew was about to bring.\n\nJacob knew best to go extremely slow, with his gained experience, especially it being his first time fucking his Aunt Brenda. He wanted to do all he could to make it as pleasurable for her as possible because he hoped it would not be the last time.\n\nAfter feeding her clutching vagina the first couple of inches, Jacob slowly pulled back to where just the head was inside. He would then slowly push forward until Brenda's hungry pussy swallowed another inch or two. The patient teenager would repeat this move over and over until his crotch finally came to rest against his aunt's soft and curvy upturned ass. \n\nWhile Jacob paused to give Brenda's body time to adjust to his incredible size, he commented, \"Wow, Aunt Brenda... I'm all the way inside you... it feels awesome!\"\n\nTaking the opportunity, Brenda raised her head up off the examination table. Her only reply was constant moaning and gentle gyrations of her hips. She had never felt so full and could actually feel Jacob's monster cock pulsing deep inside her body. It gave her a weird sense of pride to know she was able to take his entire length. \n\nAs Brenda's pussy adjusted to her nephew's incredible girth, the agonizing pressure began mixing with feelings of intense pleasure. She still fought with herself over the guilt of having sex outside her marriage again; but, she remembered what Jacob said earlier and tried to use that as justification. This would not be cheating... this was only to help her nephew... her patient.\n\nWith her mind a bit more at ease, Brenda pushed back and ground her hips into Jacob's crotch. She moaned from the delicious sensations that continued to build deep inside her cunt. Looking back over her shoulder, the committed physician said to her patient in a heavy whisper, \"Okay, Jake... let's get that sample, but whatever you do... go slow.\"\n\nJacob nodded as he dug his fingers into Brenda's fleshy hips and pulled his cock almost out of her sopping wet pussy. He then sank all the way back in with one powerful stroke causing him to moan and his aunt to cry out from the overwhelming, painful pleasure, \"Oh my God!!\" The teenager then began a slow and steady rhythm of full in and out strokes setting Brenda on a path towards orgasm.\n\nFrom the chair in the corner, Karen watched the incestuous coupling like a captive audience of one. In an ordinary world, she would be furious and horrified to see such wickedness. After all, this was her teenage son and her married sister committing this salacious immorality. However, she once again reminded herself that until they find a cure for Jacob, their world would no longer be ordinary.\n\nKaren continued to witness the wildly sinful act... the constant groans and moans of her son and sister made her think of two rutting animals in the wild. However, the ordinarily demure housewife found herself somewhat envious of the improper pornographic scene taking place before her. \n\nThe jealous mother mindlessly squeezed her thighs together, trying to extinguish the severe tingling in her clit; however, her efforts seemed to have a reverse effect of fanning the flames of her desire and only heightening her frustration. Tonight, her husband Robert would be in for a surprise as his horny wife was going to put him to work.\n\n\"Ugh! Ughhh!! Ugghhhh!!\" Brenda's grunts grew more intense as Jacob continued to thrust away at her saturated pussy. Her nephew's fleshy spear violently pierced into new areas of her body and ignited nerve endings that, until now, lay dormant. \n\nThe new titillating sensations quickly spread throughout Brenda's curvy body, causing her to tense up as the first wave quickly approached. She called out, \"Ohhh!! It's cominnnngggg!! Yessss!! It... It's... COOOMIIINNNNNG!!\" Arching her back, the beautiful married physician loudly announced the arrival of her powerful climax. \"OHHHHH!! YEEESSSSSSS!!\"\n\nJacob continued to piston in and out of Brenda's well-lubricated tunnel as her body spasmed from the overwhelming ecstasy. The teenager once again felt a sense of pride, knowing he was able to bring another gorgeous married woman to climax on the end of his incredible manhood. He then paused for a few seconds as a litany of satisfied moans came from his aunt while she slowly recovered. \n\nWanting to bring Brenda off one more time before his own completion, Jacob began sliding his cock in and out of his aunt's delightful pussy once again. This time, however, he quickly built up speed and attacked her with more urgency.\n\n\"Holy... SHIIIIITTTTTT!!\" Brenda cried out. She had barely recovered from the first wave, and now her nephew, not wasting any time, was pounding into her like there was no tomorrow. \n\nBrenda could already feel the early warning signs of the impending second wave. Reaching across the examination table, she grabbed hold of the far end of the vinyl cushion, turning her knuckles white as she held on for dear life.\n\nA continuous stream of \"Ohhh... yes! Ohhh... yes!\" escaped Brenda's mouth as Jacob's thrusting appendage primed her pump. The tantalizing pressure continued to build deep in her core, and it became evident her next climax would be nothing short of epic. \n\nThe lovely physician still battled with a sense of guilt and reluctance. However, the sensations lighting up Brenda's nervous system were unlike anything she had ever felt, and her walls of defense were beginning to crumble. As Jacob continued his relentless attack, the reluctant wife saw no other viable option except... total surrender. \n\nRising from the cushion, Brenda waved a white flag to her nephew, \"Go Jake! Ughhh!! Faster! Ughhh!! Harrdderrrrr!!\" The teenager obliged by increasing his tempo and ferociously slamming into her round womanly backside. Each collision of flesh on flesh sent ripples coursing throughout the flawless globes of the cheating wife's big, juicy ass. A lewd 'slap slap slap' sound reverberated throughout the small room. \n\nThe extra stimulation caused Brenda to cry out, \"Ohhh, Yesss!! Yesss Jake!! Ohhh, Yessss!!\" She could feel the second wave hovering just above her, waiting to crash down at any second. Raising her head up, she locked eyes with Jacob's reflection in the mirror. \"Do it, Stud!! Fuck Me!! Fuck your Aunt Brenda!! Make me cuuuummmm!!\" At that moment, the incredible wave crashed, and Brenda drowned in a sea of ecstasy. \"OHHHH YESSSS!! OH MY FUCKING GOD!! YEEESSSSS!!\"\n\nKaren should have been appalled by the filthy language that spewed from her sister's mouth. But, she was so aroused from the immoral and vulgar scene that she mindlessly began pinching her hardened nipple through her cotton dress. \n\nThat, along with squeezing her thighs together, set off Karen's own mini-orgasm. Embarrassingly, she bit her bottom lip, hoping neither of them heard her shameful moans.\n\nWhile Brenda continued to ride out the last waves of her glorious orgasm, Jacob cried out to her, \"Aunt Brenda... I'm almost there... I can't hold it!!\"\n\nUntil now, Karen had not even noticed that Jacob was not using a condom. Jumping up from the chair, Karen rushed over and pulled Jacob by his shoulder, \"Don't finish inside her, Jake!\" She then held out the glass beaker and added, \" You need to use this!\"\n\nSurprisingly, Brenda turned around just in time to take the beaker in one hand and Jacob's throbbing cock in the other. She then aimed her nephew's dick at the open container and vigorously stroked his shaft. \"Okay, Jake... just let it out.\"\n\nIn just a few seconds, Jacob howled as torrential amounts of semen shot out of his cock. The first ribbon splashed out of the jar and onto Brenda's neck and chest, causing her to shriek, \"Oh my God!!\" She continued to jack off her nephew and commented in shock, \"It's just... so much!\"\n\nFinally, the flow ebbed, and Brenda was able to collect more than enough for the sample. After setting the beaker down, the gorgeous doctor watched as her nephew's semen streamed down across her boobs and stomach. The naked doctor ran a manicured finger through her impressive cleavage, scooped up some of the creamy liquid, and then popped it in her mouth. \n\nCatching his breath, Jacob apologized, \"Sorry, Aunt Brenda... like I said... it makes a mess.\"\n\nAfter sucking her digit clean, Brenda giggled then said, \"That's okay, Stud. But you best be careful with that thing, or you're gonna end up drowning some poor girl.\"\n\nA while later, after cleaning up and getting dressed, Brenda tightened the seals on the sample jars. She then said, \"Okay... I'll send the samples off tomorrow, and we should have the results back in a week or two.\" Looking at Karen, she continued, \"Want me to call you when I hear something?\"\n\nKaren nodded and said, \"Yes, please.\"\n\nAfter Jacob finished tying his shoes, he stepped up to Brenda and asked, \"Aunt Brenda? Would you happen to have anything to drink around here? I'm dying of thirst.\"\n\n\"Of course,\" Brenda replied with a smile. She pointed to her left and said, \"Just go down the hall, to your left, and you'll see the staff break room. In there, you'll find a refrigerator filled with all sorts of drinks and snacks... go help yourself.\"\n\nJacob returned her smile and replied, \"Cool, thanks!\"\n\n\"Buuuuut,\" Brenda said while holding up her index finger. \"Before you go, you have to pay your doctor's bill.\"\n\nJacob gave his aunt a confused look.\n\nTapping her cheek with her finger, Brenda said, \"My fee... you gotta plant one right here.\"\n\nJacob smiled and kissed his aunt's cheek. He then said, \"Thanks for everything, Aunt Brenda.\"\n\nBrenda replied, \"You're welcome, Stud. But remember...\" She then held Jacob by his shoulders, \"What happened here today... must stay here... understand??\"\n\nScrunching his brow, Jacob jerked her chain, \"I'm not sure I know what you mean.\" He then shrugged his shoulders and added, \"Nothing happened here today that I'm aware of.\" \n\nRuffling his hair, Brenda chuckled, \"Okay, smarty-pants.\"\n\nAfter Jacob left the room, Brenda sat down in the chair previously occupied by Karen. As she slipped her heels back onto her feet, she asked matter of factly, \"Sis... are you on birth control?\"",
        "\"What?\" Karen responded with a surprised expression. \n\nBrenda looked up and cut her eyes at her sister, \"You heard me! Are you... on birth control?\"\n\nShaking her head, Karen replied, \"No, not right now. Dr. Taylor wants me to take a break for a while... she said my estrogen levels are a bit on the high side... why?\"\n\nBrenda stood up from the chair and walked over to the small counter. There, she picked up one of the sample jars, held it up to Karen, and gently shook it while she asked, \"You see how much semen that kid is packing? I bet there's enough in this one jar to impregnate every girl in Jake's class.\"\n\nFurrowing her brow, Karen asked, \"What does that have to do with whether I'm on birth control or not?\"\n\nBrenda sighed then responded, \"Karen... it has a lot to do with it.\" She then stepped up closer to her sister and whispered, \"Especially if you and Jake are fucking.\"\n\nKaren's face turned red, and she scoffed, \"Brenda! Do you have to be so crude?\" Originally, the conservative mother held onto hope not to give her sister all the horrific details of her methods. However, after witnessing her sister give in so easily and betray her own marriage vows, she decided maybe confessing to someone she trusted would help lighten the load on her shoulders.\n\nWith a soft voice, Brenda asked her sister, \"Well, Sis? Am I wrong?\"\n\nKaren didn't deny the allegation, and Brenda saw the guilty look in her sister's eyes. She then gasped and put her hand up to her mouth, \"You are! You're having sex with him... aren't you?\"\n\nThe defeated mother sat down in the chair and nodded her head. Brenda quickly bent down in front of her sister and consoled her, \"Hey... don't you dare feel bad. Remember what we talked about earlier... a good mother does what's necessary to help her children.\"\n\nKaren looked up with tears in her beautiful brown eyes, \"But incest? Isn't that taking it way too far? Not to mention I'm cheating on my husband.\" She then added, \"I mean... I try to use just my hands or maybe my mouth, but most times, I end up slipping, and we... you know.\" The sheepish mother averted her eyes and whispered, \"It's just too difficult to resist.\"\n\nPutting her hand on Karen's shoulder, Brenda chuckled and said, \"Yeah... tell me about it.\" She then pointed towards the examination table and continued, \"You saw what happened to me... how quickly I gave in.\" She stood up straight and put her hands on her hips. \"I can only imagine what you go through every day living with the boy.\" The curious doctor's face took on a concerned look, and she asked, \"How are you doing this right under Rob's nose? Aren't you worried about getting caught?\"\n\nNodding her head, Karen replied, \"Yes, I worry a lot, but I'm very strict about not helping him when Rob is in the house.\" Her mind drifted back to the two times they almost got caught, but she decided not to volunteer that information at this time.\n\n\"Are you using any form of protection at all?\" Brenda asked with concern.\n\nKaren sighed, \"Yes... we're using protection. I bought Jake some condoms.\"\n\nBrenda laughed, \"Where on earth did you find condoms big enough to fit that thing?\"\n\n\"I found a pharmacy in Macon that carries them in special sizes.\"\n\nScrunching her face, Brenda asked, \"Macon? You mean you went all the way to Macon to buy condoms?\"\n\nKaren answered, \"Yes! First of all, I'm not going to buy anything like that in town... someone we know might see me. And second, I wanted it to be a cash transaction. If I bought them online, there's always a chance Rob could find out.\"\n\nBrenda nodded her head and said, \"Yeah... I see what you mean. That does make sense.\"\n\nFeeling much better, Karen stood up and hugged Brenda. While the relieved mother and her sister tightly embraced, she said, \"Thank you so much for understanding... and all your help!\"\n\nBrenda pulled back from Karen and said, \"Hey... we sisters have to stick together.\" She then brushed some of the loosened hair out of Karen's face and said, \"If you decide to get back on the birth control, just let me know. I have samples of a new version that shouldn't affect your estrogen levels.\"\n\nKaren replied, \"Thanks, Sis... I may take you up on that.\"\n\nThe two sisters walked down the hall back to Brenda's office. Once Karen sat down on the sofa, she asked, \"Can I ask you a somewhat weird question?\"\n\n\"Of course you can,\" Brenda replied. She sat down beside Karen, put a hand on her sister's knee, and continued, \"You can ask me anything... what's on your mind?\"\n\nSheepishly Karen asked, \"Do you find that a lot of your patients completely shave... down there?\"\n\nA smile broke out on Brenda's face. \"Oh... Is my big sister still going 'au natural' downstairs?\"\n\n\"I'll have you know that I keep it nicely trimmed,\" Karen replied with an aggravated tone. She quickly added, \"Especially in the bikini area.\"\n\nBrenda chuckled, \"Sorry, Sis... I didn't mean to offend.\" She then nodded her head and continued, \"But to answer your question... yes... I find a good many of them do... especially those under fifty. Are you thinking about taking the plunge?\"\n\nShrugging her shoulders, Karen replied, \"I don't know. I mean... Rachel has been trying to talk me into giving it a try. Plus today... I saw where you...\"\n\nLeaning back, Brenda gasped, \"Were you checking me out?\" She then cut her eyes while grinning, \"My... but you are turning into a dirty girl, aren't you?\"\n\n\"Don't say that!!\" Karen retorted with embarrassment. She could feel her cheeks begin to burn. Putting up her hand, she explained, \"For the record, I was not checking you out. But with the way you were bent over... it was... hard to miss.\"\n\nBrenda giggled, \"Sweetie... don't get upset... I'm just playing with you.\" She leaned in closer to Karen and said, \"Why not try it? I think you'll like it... I know I do.\" Lowering her voice, Brenda then added, \"And let me tell you... Mark LOVES it! I guarantee Rob will, too.\"\n\nArching her brow, Karen replied, \"Really?? You think??\"\n\nBrenda smiled and nodded emphatically. She then gasped and said, \"I have an idea! Why don't I come over to your house one day when the boys are gone, and I can help you do it? The first few times can be kind of tricky.\" With excitement, the younger sister continued, \"I'll clear my schedule, and we can spend the entire afternoon pampering ourselves in a bubble bath while sharing a big bottle of wine.\"\n\n\"Wouldn't that be kind of... weird? You know... helping another woman shave her privates?\" Karen asked with her face scrunched up.\n\nThrowing up her hands, Brenda responded, \"Weird?? Karen... you just witnessed a live porn show starring your married sister and your teenage son... how much more 'weird' can it get?\"\n\nAfter pondering it for a few seconds, Karen sighed and relented, \"I guess I see your point.\"\n\nBrenda continued, \"Besides, we used to bathe and shower together all the time growing up. I mean, it's not like we haven't seen each other naked. In fact, you saw me today.\" \n\nBrenda could tell Karen was contemplating her offer, so she leaned in closer and added, \"C'mon Sis... it'll be fun... I'll even bring the wine.\"\n\n********************\n\nLater that night, Karen walked into the family room to find Jacob on the couch with one of the Star Wars movies playing on the TV. With so many of them now, she wasn't sure which one he was watching.\n\nUsually, Karen would sit on the sofa and read a book while her 'boys' emersed themselves in the action-packed films. Afterward, she would listen to her lovable geeks argue and debate the characters and plot lines.\n\nThe room was mostly dark except for the glow from the eighty-inch flat screen mounted on the far wall\u2014a well-deserved splurge item for Robert after working so hard to get his promotion. \n\nKaren reached down and turned on the side table lamp, which emanated additional soft lighting into the room. Jacob quickly turned his head to the right and noticed his mother standing close by. She held one of her novels and what appeared to be a small bottle of some sort.\n\nKaren was wearing pajama shorts and an old gray 'Georgia Bulldogs' tee shirt. The outfit looked comfortable, but at the same time, form-fitting enough to accentuate her womanly curves. She also had her long brown hair tied up into a loose bun and reading glasses resting on her beautiful face. Jacob was amazed how this MILF could make even dull sleepwear look sexy. Hitting the pause button on the remote, he greeted his mother, \"Hi, Mom.\"\n\n\"Hi, Sweetie,\" Karen replied. As she walked around the couch, she inquired, \"I thought your dad was in here watching with you?\"\n\n\"He was supposed to be,\" Jacob replied. He then pointed with his thumb over his shoulder and continued, \"He's still in his office finishing up a report.\"\n\n\"Oh!\" Karen replied as she looked back down the hall to the closed office door. She sighed, then said, \"Well... mind if I join you?\"\n\nScooching over a bit, Jacob responded, \"No... please do.\" He then started the movie back but lowered the volume.\n\nKaren smiled and sat down at the end of the sofa. She turned to Jacob and asked, \"Would you do me a small favor?\"\n\nNodding his head, Jacob responded, \"Sure, Mom... what do you need?\"\n\n\"Well... I was going to ask your dad for a foot massage, but since he's not available... would you be willing?\" Without waiting for a reply, she swung her legs around and placed them in Jacob's lap. While smiling and wiggling her toes, she continued, \"You did such a good job last time.\" \n\nLooking down at his mother's cute little feet and long shapely legs, Jacob replied, \"Uhhh... yeah... sure!\"\n\n\"Great!\" Karen then held out the small bottle for Jacob to take. \"Here... you can use this. It's a new moisturizing lotion I picked up at the mall.\" She then opened her book and continued, \"They say it's really good, and I've been wanting to try it.\"\n\nOnce giving the container a few shakes, Jacob poured some of the creamy liquid into the palm of his hand. Karen immediately moaned with relief as her son began to massage her tired and achy foot. \"Mmmmm... that feels good, Sweetie.\" She then planted her right foot onto the couch, bending her leg at the knee.\n\nAfter a few minutes, Karen asked softly, \"So... are you okay with what happened today?\"\n\nJacob looked over to Karen to find her still looking at the pages of her book. He chuckled and replied, \"You mean with Aunt Brenda? Yeah, of course... why wouldn't I be?\"\n\nGlancing up from her book, Karen shook her head and said, \"I guess that was a dumb question.\" Looking back down, she continued, \"Well, after what took place today, I've been doing some thinking.\" She then pulled her left foot back, planted it on the couch, and then placed her right foot in Jacob's lap.\n\n\"Thinking about what?\" Jacob asked as he poured more lotion into his hand and began massaging her right foot. He then noticed his mom's left knee resting against the back of the couch, causing the leg of her shorts to gape open. The angle gave him a clear view of her panty-covered vagina. \n\nTurning a page in her book Karen replied, \"Well... I have concerns about your date with Sara on Saturday.\"\n\nLooking up from his mother's crotch, Jacob quickly asked, \"What kind of concerns?\" He stopped rubbing her foot and asked, \"Mom? You're not going to make me cancel, are you?\"\n\nShaking her head, Karen replied, \"No, Honey... I wouldn't ask you to do that.\" Glancing back down at her book, she added, \"But we don't need your hormones going haywire like they do when you get all worked up. If Sara or Mrs. Miller caught your scent... it could cause us serious problems.\" Turning another page, \"So to be safe, we better take some precautions.\"\n\nSliding his hand up from Karen's heel, Jacob began gently massaging his mother's shapely calf. He asked out of curiosity, \"What kind of precautions?\"\n\nBefore replying, Karen mewed, \"Mmmmm... that feels nice... can you squeeze just a.. little bit harder?\" She then took a quick glance over her shoulder to make sure Robert was nowhere around and then said softly, \"For starters... from now on, I want you to keep a condom with you at all times.\"\n\n\"Really?\" Jacob replied with surprise.\n\n\"Slow down, cowboy... I'm not giving you permission to go out sow your wild oats; it's just for emergency purposes only.\" She then added, \"But Jake... you have to be careful and not let your dad find you carrying it around... I mean it.\"\n\nNodding his head, Jacob replied, \"Don't worry, Mom... I understand. Anything else?\"\n\nReturning her attention to her book, Karen said, \"Yes... one more thing. Before your date with Sara on Saturday, I think I should help relieve you before you go. Hopefully, that way, you can keep things under control while you are around Sara and her mother.\" \n\nJacob could not believe his good fortune. Not only was he going on a date with one of the prettiest girls in his school, but before that takes place, he would be getting bonus time with his super-hot mom. Saturday was going to be awesome. The thought made his cock twitch.\n\n\"I felt that,\" Karen said matter of factly while continuing to read her book. \"Don't get any bright ideas, Mister. I said I would help you on Saturday... you know the rule.\"\n\nWith a sigh, Jacob replied, \"Yes, ma'am. I know the rule... no helping me when Dad is in the house.\"\n\n\"That's right!\" Karen replied with a quick nod. \n\nJacob then asked, \"Wait... with it being the weekend... won't Dad be here?\"\n\nShaking her head, Karen replied matter-of-factly, \"No... your father will not be here. He's going to play golf Saturday afternoon.\"\n\nKaren suddenly noticed that somehow Jacob's hands were now massaging her thigh just above the knee and inching higher. Not looking up from her book, the curious mother inquired, \"Young man... what do you think you're doing?\"\n\nWithout stopping, Jacob replied, \"What do you mean, Mom?\"\n\nWhile turning another page, Karen said, \"You're a long way from my feet... aren't you?\"\n\nTrying to sound innocent, Jacob responded, \"Well... I just figured if your feet and calves needed massaging that maybe it would help to do the rest of your legs also.\" He held hope she would buy his excuse.\n\nKaren looked up for the book and locked eyes with her son for a few seconds. \"Okay,\" she finally said in acceptance. \"I will admit, it does feel nice.\" Lowering her gaze back to her novel, she added, \"But if you're going to do it... use more of the moisturizer.\"\n\nFor the next few minutes, mother and son sat in silence. Karen dove back into her book while Jacob dutifully massaged her legs and watched television. However, the teenager only pretended to care about the fate of the rebel alliance. He focused primarily on the sensual feel of his mother's silky smooth legs and sneaking more glimpses of the moisture-stained gusset of her pink cotton panties. \n\nKaren was also finding it hard to concentrate. Her body still felt the warm embers of arousal from the earlier sex scene she witnessed starring Brenda and Jacob. She found her son's wondering hands to be not only therapeutic but also a catalyst that now transformed the glowing embers into a small flame. \n\nThe delightful tingling in Karen's vagina was becoming too much of a distraction to continue reading. After taking one last glance over her shoulder, Karen closed her book and set it down on the floor. She then scooched down just a bit to get more comfortable. This move inadvertently caused her long legs to widen even more, and Jacob couldn't help but notice the dark spot in her panties growing larger.\n\nKaren became more and more aroused as she waited for Robert to finish up with his reports. Therefore, the horny wife decided in the meantime to relax and let Jacob's youthful yet skillful hands continue with the excellent massage and, along with it, fan the flames that continued to grow. She tilted her head back slightly and closed her eyes, then softly said, \"That's doing wonders, Sweetie... keep doing it... just like that.\"\n\nJacob did as his mother asked and continued to gently knead the tender flesh of her inner thigh. His right hand was now dangerously close to the soft apex of his mother's long legs. So close, in fact, he could sense the body heat of her weeping vagina emanating through the thin gusset of her cotton panties.\n\nWhile squeezing Karen's thigh with his left hand, Jacob inched his right one closer to where his fingers were now touching her panties' lacy outer edges. He watched for any adverse reaction; however, all he witnessed was his mother's lips purse, and her big tits rise and fall underneath her tee shirt as her breathing became more shallow and rapid.\n\nWith the battle for Endor all but forgotten, Jacob now fought an internal war with himself. He wondered if he should try and push things further with his mother. If they were alone in the house, his chances would better; but tonight, his father was just a couple of rooms away and could quickly emerge at any moment. Then again, the thought of bringing his mom to orgasm while her oblivious husband worked away in his private office gave the teenager a slight thrill. \n\nAs Jacob continued the gentle manipulation of Karen's muscles with his hands and fingers, he glanced at her face. His mother's eyes were still closed, and he noticed that she now bit her bottom lip. Her breathing was more rapid, and he could now hear his mom's soft mewing sounds growing louder. \n\nDaring to be more aggressive, Jacob slid his hand over to where his middle finger now rested on the wet spot of Karen's panties. He then slowly dragged the digit up the center of the cotton gusset pressing the fabric in between the hungry lips of his mother's vagina. \n\nAs Jacob ran his finger along Karen's juicy slit, he noticed she stopped biting her lip and formed an \"O\" with her mouth and took a deep intake of breath. \"Ahhhhh!\" she gasped when her son found her blood-engorged clit hidden behind the sodden garment.\n\nAfter a few moments of sliding the single digit up and down the same path, Jacob joined his ring and forefinger along for the ride and applied more pressure. \"Ohhhhh!!\" Karen gasped once again... only this time a bit louder. She also dug her heel into the couch and mindlessly spread her legs a bit more to assist her son with his angle of attack.\n\nNow, instead of sliding his hand up and down the entire length of Karen's pussy, Jacob concentrated his efforts on her buzzing clitoris. The teenager began rubbing his trio of fingers in a small circle across his mother's tingling nub, which had an immediate positive effect.\n\nKaren threw her head back with her eyes still closed and, with her left hand, grabbed hold of the back of the couch. \"Nnnnggggghhhhhh,\" she groaned as the sudden surge of pleasure radiated from her magic button and all throughout her nervous system. \n\nIt was evident to Jacob his mother was nearing climax. He watched as she gently rolled her hips and curled and flexed her cute feet and painted toes. He could also see her hardened nipples tenting up through her bra and tee shirt.\n\nJacob knew time was of the essence and pondered to try another bold move in hopes of getting Karen across the finish line. He slid his hand from his mother's crotch and up to the waistband of her pajama shorts. His fingers now poised at the border where her tender skin met the cotton garment. He slowly pushed his wondering digits underneath the thin elastic band while watching his mother for any reactions.\n\nKaren had been pushed to the very edge of orgasm and only needed one final nudge in order to fall from the cliff and into the arms of sweet ecstasy. With her husband nearby, Karen knew she was playing with fire; however, the heat between her legs caused the highly aroused wife to throw caution to the wind. Knowing what her son intended to do, she gave her approval by nodding her head and by mouthing a barely audible, \"Yes!\" \n\nJacob slid his fingers underneath the fabric of Karen's shorts and panties and headed due south towards the promised land. Unfortunately, at that moment, they heard the 'click' sound of a doorknob turning. ",
        "\"Oh, crap!\" Karen whispered in panic and disappointment as she jerked her son's hand out of her panties, and they quickly scrambled to regain some sense of decency. The guilty mother hastily picked her book up from the floor and opened it to some random page. She then sat up a bit and laid her legs out straight across her son's knees.\n\nRobert announced as he entered the room, \"I'm sorry that took so long, y'all, but I had to get that done before tomorrow.\" He then quickly surveyed the wife and son duo on the couch. Karen was sitting sideways reading her book with her long bare legs draped over their son's lap. Jacob was watching the television while he dutifully massaged his mother's aching feet. He then commented with a laugh, \"Well... It's nice to see you two no longer ignoring each other.\"\n\nGlancing up from her novel, Karen trying to breathe normally, looked at Robert over her reading glasses and replied, \"Well, Sweetheart, you were understandably busy, but luckily Jake was willing to help his mother in need.\"\n\nSmiling down at Jacob, Robert said, \"Thanks, Pal, for filling in for me... I guess I owe you one.\"\n\nContinuing to gently squeeze his mother's foot, Jacob shrugged and replied, \"Nah... don't worry about it, Dad.\" He then glanced over at Karen and added, \"It's my pleasure to help Mom with any of her needs.\" \n\nKaren gazed over the top of her book and locked eyes with Jacob. She then scrunched her brow as a signal to her son as if to say, \"Don't push it.\"\n\nTurning back towards the television and noticing the movie was almost over, Robert said, \"Sorry, Jake... I know we were planning on watching this together.\" He then turned back to his son and offered, \"We can restart it if you like?\"\n\n\"Uh... Honey?\" Karen interrupted as she swung her legs around and stood up from the couch. She then stepped over to Robert and continued, \"I think it might be best if we go ahead and get you to bed.\" The lovely wife then laid her hand on her husband's shoulder and continued, \"After all, you do have that important meeting in the morning.\" Karen tilted her head and arched her brow to give Robert a knowing look. \n\nKaren's wet pussy still throbbed with desire for the orgasm Jacob was about to give her. Since her husband interrupted them and cheated her out of her climax... the horny mother figured the least he could do is take her to bed and finish what their son started.\n\n\"Oh!\" Robert responded while catching her hint. \"The meeting... yes, I do have... a meeting in the morning.\" Turning back to Jacob, he apologized, \"I'm sorry, Buddy... how about we watch it tomorrow night?\"\n\nJacob chuckled and waved him off, \"It's fine, Dad... no big deal... really.\"\n\nKaren stepped over to where Jacob still sat on the couch. The loving mother leaned over and kissed the top of her son's head and then said, \"You get to bed too, young man... you have school in the morning.\" She then took her husband by the hand and began leading him out of the room.\n\n\"Yes, Ma'am,\" Jacob replied as his parents walked out the door and towards the staircase.\n\nAfter the movie ended, Jacob walked up the stairs to go to his room. The incident on the couch with his mom had left him with a raging boner, and he planned to spank off to some porn before going to sleep.\n\nWhen Jacob reached the landing, he just happened to glance down the dark hallway towards his parent's bedroom. He then observed a faint glow emanating between the French style doors to their room. As he slowly crept for a closer look, he noticed that one of the doors was not entirely closed, explaining the escaping light.\n\nStepping up to the door, Jacob could hear the unmistakable sounds of sexual activity. He could easily make out the familiar sensual moans of pleasure escaping his mother's lips and, along with it, the soft rhythmic squeaking of bedsprings. \n\nJacob found the thought of secretly watching his beautiful mother have sex to be strangely exhilarating. However, he ran a considerable risk peeking in on his parents... especially if his father caught him.\n\nAs Jacob debated his decision, the erotic sounds coming from his mother grew louder. The nervous excitement made his pulse quicken and his mouth go dry. The aroused teenager finally decided against prudence and gave in to temptation.\n\nPutting his eye to the door crack, Jacob peeked inside. He found his parents' bed-chamber warmly lit by several candles strategically placed around the room. However, because of a less than perfect angle, he was unable to spy upon his main target... his super-hot mother. \n\nAgainst better judgment, Jacob pushed the door open just a bit more until the entire bed came into view. His eyes widened, and his cock twitched as he witnessed the erotic scene taking place across the room.\n\nKaren was facing the door straddling Robert's waist. Her long brown hair, no longer in a ponytail, flounced all around her face as she rode on her husband's cock in a steady rhythm, and her massive tits hypnotically bounced up and down on her chest. \n\nThe erotic vision of his mother enthralled Jacob. With the flickering candlelight dancing on her gyrating naked body, she looked less of a mom and more like some pornographic angel that had fallen to Earth. Dangerous as it may be, he couldn't help but pull his throbbing cock out of his pants and begin to slowly stroke the fully erect shaft.\n\n\"Ohhh!! Ohhh!! Ohhh!!\" Karen's sweet motherly voice called out each time she hit bottom. Robert's dick felt good in her dripping vagina, but it was definitely not the same as Jacob's monster cock. She could sense an impending orgasm on the horizon, but in the same amount of time, her son's pussy pleaser would have brought her off at least twice by now. Shamefully she had to admit the apparent truth... size does matter after all.\n\nFor the next few moments, Jacob secretly jacked off while spying on the live porn scene taking place in his parents' marital bed. His primary focus was the arousing beauty of his mother as she rode up and down on her husband as if she were on a mission. He intently watched her while she grabbed her bouncing milk jugs and pinched her diamond-hard nipples as she neared closer and closer to climax.\n\nJacob glanced up at Karen's face and noticed her looking in his direction. He locked eyes with her for a split second, then jerked his head back in fear. Before bolting down the hall, he listened for any clues that he had been caught. Luckily, it appeared not, because instead of stopping, it sounded like Karen quickened her pace. Taking this as a positive sign, Jacob resumed peeking through the crack.\n\n\"Ughh! Ughh! Ughh!\" Karen grunted louder and more frequently. \n\n\"Wow, Karen!\" Robert exclaimed while watching his wife act like a sex goddess. \"What has you so aggressive tonight? Not that I'm complaining!\" \n\nKnowing the true reason for her arousal, Jacob whispered sarcastically, \"You're welcome, Dad.\"\n\nBetween grunts, Karen replied, \"I just... Ughh!! Miss being... Ughh!! With you... Ughhh!!... Like this!!\"\n\nRobert reached up and cupped both of Karen's bouncing breasts and gave them a gentle squeeze. He then pinched her pink rubbery nubs, ratcheting his wife up to another gear.\n\n\"OOhhhhhh!!\" Karen gasped from the intense stimulation. \"Yes! Squeeze them!! Yes... Yes!!\" She then threw her head back and called out, \"AAAHHHHH!! YEEESSSSS!!\"\n\nFrom the other side of the door, Jacob furiously stroked his cock while watching his mother climax. He could see her trembling as the orgasm ripped through her body. Witnessing his conservative mother have sex was more thrilling than any porn Jacob could ever watch. In fact, the scene had him so excited he had to stop fapping so as not to ejaculate and make a mess in the hallway.\n\nFor the next few moments, it was mostly quiet. Jacob could see Karen still straddling Robert's waist while they whispered to one another and tried to catch their breath.\n\nOnce his parents began shifting around on the bed, Jacob slowly backed away from the door and headed down the hall. He decided best not to push his luck any further and risk getting caught. Plus, he was desperately ready to finish himself off watching some MILF porn in the safety of his room. \n\n********************\n\nOn Friday morning, the Mitchells were in the kitchen having breakfast. Robert and Jacob sat across from each other at the table, and both were dressed for work and school. As usual, the two spent the time debating over superheroes and comic books while eating their morning meal.\n\nKaren sat beside Jacob, drinking her coffee while listening to her 'nerds' go on and on about nonsense. She was still in her pink satin robe with only her bra and panties underneath. She had noticed Jacob taking several peeks at her exposed cleavage, but luckily Robert seemed oblivious to their son's wandering eyes.\n\n\"Thanks again, Jake, for helping your mom last night,\" Robert said after taking a sip of his coffee. \n\nJacob responded with, \"Huh?\" while giving his dad a confused look.\n\n\"The foot massage,\" Robert replied before taking a bite of pancakes.\n\nA relieved smile spread across Jacob's face. \"Oh... that!\" He then sat back in his chair and continued, \"No problem, Dad... as much as Mom does for me... I was glad to do it.\"\n\nKaren smiled and placed her hand on Jacob's shoulder, then said, \"You did an excellent job.\" She then looked over at Robert and added, \"It appears the acorn does not fall far from the tree.\"\n\nRobert chuckled and said, \"I guess it doesn't.\" He then asked Jacob, \"But tell me... did your hands get really tired after a while?\" He then held his hands up while opening and closing his fingers rapidly and added, \"I know mine do.\"\n\nShaking his head, Jacob replied, \"No, not really.\" While picking up a piece of the pancake with his fork, he added, \"I used what's called the 'finger tip' method. Mom seemed to really like it.\" As he shoved the food into his mouth, Karen kicked her son's foot and, along with it, gave him a disapproving stare.\n\n\"Fingertip method?\" Robert pondered while sitting back in his chair. \"I've never heard of it. How did you find out about that?\"\n\n\"Internet,\" Jacob replied nonchalantly. \"Nowadays, you can find just about anything on the web.\" The teenager then went back to shoving the delicious food into his mouth.\n\n\"Huh! I guess you can,\" Robert commented. At first, he thought it strange his son would be looking up massage techniques on the internet, but then the curious father asked, \"Do you happen to remember the website? Maybe I can read up on it and try it out myself the next time your mom wants a massage.\"\n\nThinking it best to squash this conversation, Karen quickly interrupted, \"Oh my goodness, Honey... look at the time!\" She then stood up from the table and continued, \"Sweetheart... you're going to be late for work!\"\n\nGlancing at the clock, Robert agreed, \"Oh, you're right... I better get going.\" He then took one last gulp of coffee and got up out of his chair. After picking up his briefcase, he said, \"See you later, Jake. Maybe tonight we can watch a movie.\"\n\n\"Sounds good, Dad!\" Jacob called out as his father and mother walked out the door and into the garage.\n\nAfter a few moments, Karen walked back into the kitchen to find Jacob still eating his breakfast. She then picked up her cup from the table and commented, \"Really, Jake? Fingertip method?\"\n\nShrugging his shoulders, Jacob replied, \"It could be a real thing... you never know.\"\n\nKaren sighed, rolled her eyes, and then walked over to the kitchen counter. While she poured herself another cup of coffee, she said, \"I think we need to talk about last night.\"\n\n\"You mean the foot massage?\" Jacob inquired. \"I thought you liked it... you said I did a good job.\"\n\nWalking back over to the table, Karen responded, \"I'm not talking about the massage, even though we should probably discuss that also.\" After sitting in Robert's chair, she continued, \"However, seeing that I could have put a stop to it, we'll have to blame me for that one.\"\n\nWhile stirring cream into her coffee, Karen said, \"I'm talking about what happened afterwards... your spying on your father and me.\" \n\nJacob's pulse quickened, and he thought, \"Crap! She did see me.\"\n\nKaren then picked up her cup to take a sip and added, \"And don't even try to deny it... I know you were there.\"\n\nKnowing he was trapped, Jacob softly replied, \"Sorry, Mom.\"\n\nPutting her cup down, Karen leaned forward and said, \"Sorry? Young man... I don't think 'sorry' would cut it if your dad had caught you.\" \n\nNodding in agreement, Jacob replied, \"Yes, Ma'am... I know.\" He then added, \"But the door was left cracked open.\"\n\nKaren huffed, then responded, \"I don't care... that does not give you the right to invade our privacy. That was highly improper.\"\n\n\"Well, you watched me... with Ms. Turner and then yesterday with Aunt Brenda,\" Jacob replied, trying to offer some justification.\n\n\"Jacob! I don't watch you because I get some perverted thrill out of it,\" Karen retorted. \"I'm doing it more as a chaperone. That is much different than peeking in on your parents during an intimate moment in their bedroom.\"\n\n\"But Mom... you're just so... beautiful. I couldn't help myself. I mean... watching you was so exciting, and you looked so dang sexy.\" Jacob was trying to steer this in a different direction by showering her with compliments. The softening of Karen's facial expression gave him hope that he was succeeding.\n\n\"You found that sexy?\" Karen asked in disbelief. \"Seeing your middle-aged parents do that got you excited?\"\n\nJacob nodded and said, \"Well, my focus was on you, Mom. But, yeah... in fact, after watching you I went back to my room, and I was able to finish on my own.\"\n\nKaren's eyes widened, and she responded, \"Really?\"\n\nJacob saw an opportunity and continued, \"Uh-huh! So it got me thinking about something.\" \n\n\"Oh goodness,\" Karen said with a sigh. \"I'm almost scared to ask, but what have you thought up now?\" She leaned forward and rested her chin on her hand.\n\nJacob replied with a sly smile, \"Well... maybe we could video record one of our sessions some time.\"\n\nSitting back in the chair and crossing her arms, Karen replied, \"Years ago, your father wanted to record him and me having sex. I'll give you the same answer I gave him then... No... No and... No!\" She shook her head for emphasis.\n\nLeaning forward, Jacob responded, \"Please, Mom?\"\n\nKaren huffed, then asked, \"Jacob... what part of 'no' do you not understand?\"\n\nJacob replied, \"C'mon, Mom... Just once? Besides, It might help me finish on my own more often if I had something to actually watch while doing it.\" After a few seconds and no reply from his mother, he added, \"We could always revisit the porn thing?\"\n\nLeaning forward, Karen responded with a severe tone, \"Jacob!! We've been down this road before. You know how I feel about that... filth!!\" She then pointed a finger in his direction, \"You best remember what I said about your computer.\"\n\n\"Yes, ma'am... I remember,\" Jacob replied solomnly while flicking his food with his fork. He then tried to get back on the right track, \"But I do think it would really help me if I had something like that.\"\n\nKaren sighed, \"Jake... I can't, in good conscience, allow you to record us that way. Not to mention the incredible risk of having something like that on your phone.\" She pointed towards the garage and continued, \"What would happen if your father were to see it by accident?\"\n\nJacob chuckled, \"No need to worry about that, Mom... Dad never looks at my phone.\" With no reply from Karen, he continued, \"I swear on my life... no one would ever see it.\"\n\nKaren scrunched her face and countered, \"I don't know, Jake... we would be going into some very dangerous territory.\" Glancing down at herself, she continued, \"Plus, I'm no spring chicken... I don't look like I used to when I was younger.\" The middle-aged mom looked up at her son, \"People look very different on film... you may not like what you see.\"\n\nJacob was pleasantly surprised by Karen's response. He was expecting a defiant refusal, but instead, she appeared to be wearing down. Trying to gently nudge her closer to a 'yes' he responded, \"Mom... believe me... you would look fabulous.\"\n\nKaren couldn't help but smile at her son's compliment. \"Thank you, Baby... that's very sweet for you to say. But... I still think it's a very bad idea.\"\n\nTrying to keep the negotiations going, Jacob replied, \"How about this, Mom... we try it once, and afterward, if you still have reservations, I will delete the video and never ask again?\" He watched as his mother took a sip of coffee, and then after a few seconds of silence; he asked, \"So... what do you think?\"\n\nKaren bit her bottom lip as if pondering how to reply. However, instead of giving Jacob an answer, she commented, \"You know what I think? I think you better get going, or you'll be late for school.\"\n\nJacob sighed then begged, \"C'mon, Mom... just one time? If not a video... how about maybe some pictures?\"\n\nStanding up out of her chair, Karen picked up her coffee cup and said sternly, \"School... now.\"\n\nBegrudgingly Jacob got up from the table and carried his dishes to the sink. He then threw his book bag over his shoulder and walked over to the back door with Karen following close behind. When he opened the door, he turned back to his mother and asked, \"Will you at least consider it?\"\n\nPutting a hand on her hip, Karen replied, \"I tell you what... if you get all A's on your upcoming report card... I'll think about it.\" Seeing a big smile appear on Jacob's face, she put up her index finger and added, \"I said... I'll 'think' about it... no promises.\" \n\nNodding his acceptance, Jacob said, \"Okay... okay, that sounds fair.\"\n\nKaren giggled and leaned over and kissed Jacob's forehead. She then gave him a quick swat on the butt and said, \"Now get out of here, or you're going to be late.\"\n\n******************\n\nOn Friday evening, the Mitchell family was having dinner, including Rachel, Scott, and Grandpa George. Karen had once again prepared another great meal, and everyone was in a festive mood.\n\nDuring the conversations, Robert said to Jacob, \"So Jake... just to let you know... I have a campus tour at Georgia Tech set up for you in a few weeks from now. I figured you, your mom, and I could go to Atlanta and make a weekend of it.\"\n\nNodding his head, Jacob replied, \"Sounds cool... thanks, Dad.\" He looked across the table at Rachel, and just as he expected, her expression was less than happy. \n\nRobert then added, \"Oh yeah... before I forget. Both of you pack something nice to wear for dinner. Jim told me he plans to take us to Bones on that Saturday night.\"\n\nKaren replied, \"Oh! That sounds lovely. That will allow me the opportunity to try out the new dress I've been dying to wear.\" \n\n\"What is 'Bones'?\" Jacob asked with curiosity.\n\n\"It's a steakhouse in Atlanta,\" Scott replied to his brother-in-law. \"Upscale and very pricey... but quite good.\"\n\nKaren then looked over at Jacob and said, \"So that means you'll need to pack something other than tee-shirts.\" After a quick pause she added, \"Better yet... I'll help you pick something out.\"\n\n\"Yes, Ma'am,\" Jacob replied before putting the fork in his mouth.\n\nKaren then asked her son, \"Are you looking forward to your date tomorrow night?\"\n\nWith his mouth full of food, Jacob replied by nodding his head emphatically.\n\nSomewhat shocked, Rachel asked, \"Wait a minute... the dweeb here has a date?\" \n\nRobert chuckled and replied, \"Yes, Rachel... your brother has a date.\"\n\nTurning to her father, Rachel asked with astonishment, \"With a girl? And it's not Mom?\"\n\n\"Yes, Rachel... she's a girl.. and no... it's not Mom,\" Jacob replied somewhat emphatically.\n\nLooking across the table at Jacob, she asked, \"Did she arrive in the mail and require an air pump to blow her up?\"\n",
        "\"Rachel!!\" Karen gasped. \"What a horrible thing to say. You apologize to your brother this instant!!\"\n\nAfter rolling her eyes, Rachel said half-heartedly, \"Sorry, Jake.\" \n\nKaren added, \"I will never understand why you two insist on torturing each other. You are brother and sister; you should love and support one another...\" While their mother continued her monologue, Rachel looked over at her brother and gave him a sneaky little wink. Jacob's mouth curled into a knowing smile.\n\n\"You're right, Mom, and I apologize... I should be more supportive,\" Rachel commented. She then looked to Jacob and asked, \"So, Squirt... who's the lucky girl?\"\n\n\"Sara Miller,\" Jacob replied before taking a bite of the delicious baked salmon.\n\n\"Wow!!\" Rachel replied. \"Sara Miller? How did a dork like you pull that off?\"\n\nShrugging his shoulders, Jacob swallowed and responded, \"I guess she's into dorks.\"\n\nRachel laughed, then said, \"Well, apparently she is.\"\n\nKaren interjected, \"Now Rachel... any girl should consider herself lucky to go out with our Jake.\" She then reached over and rubbed Jacob's shoulder. The proud mom then included, \"Evidentally, Sara finds your brother to be what we already know... a fine young gentleman.\" She then gave her son a warm, reassuring smile.\n\nGrandpa George chimed in, \"Isn't that Pastor Miller's daughter?\" He looked to his grandson in the chair beside him and said, \"Way to go, kiddo... she looks just like her mother. I've always thought Donna was a real hottie.\"\n\n\"Dad!!\" Karen exclaimed. \n\n\"What?\" George replied innocently.\n\nKaren calmed herself and said, \"I know that Mom is no longer with us, but Donna Miller is half your age... and married to our pastor, for goodness sake.\"\n\n\"Sweetheart,\" George replied with a smile. \"I may be old, but I'm certainly not blind.\"\n\n\"Dad... you're horrible,\" Karen retorted while shaking her head.\n\nThe other three men at the table laughed at George's response. Karen sighed, then sat back in her chair and said, \"Well, I'm glad you all think this is funny.\"\n\nLater that evening, Rachel was in the kitchen helping Karen with the cleanup. \"Are you excited to finally be moving into your new house?\" Karen asked while loading the dishwasher.\n\nRachel replied emphatically, \"Yes!\" As she rinsed off more dishes, she continued, \"Don't get me wrong... the rental place is nice, but Scott and I are so excited to get moved into what will be our forever home and start our family.\"\n\nLeaning in and lowering her voice, Karen asked, \"I know it's a little early, but uh... any luck yet?\" She looked at her daughter with hopeful eyes.\n\nRachel giggled and replied, \"No, Mom... not yet. I just recently stopped taking birth control.\" She then looked at her mother and asked, \"You haven't told anyone that Scott and I are trying, have you?\"\n\nShaking her head, Karen responded, \"No... I haven't told anyone.\" After starting up the dishwasher, the hopeful mother said, \"Forgive me for prying, Honey Bear; I'm just excited about the idea of my first grandbaby.\" Honey Bear is a nickname Karen gave to Rachel because of the color of her blonde hair.\n\nRachel chuckled, then rubbed Karen's shoulder and said, \"Well 'Grandma'... you're just gonna have to be patient. But I promise when it does happen... outside of Scott... you'll be the first to know.\"\n\n********************\n\nOn Saturday afternoon, Jacob arrived home after spending part of the day over at his best friend Matthew's house. The two teenagers spent the time trying to set a new personal best on Fortnite. \n\nAs Jacob came around the house to the backyard, he quickly noticed Robert on the patio on his hands and knees. He appeared to be doing something with the bricks that bordered the patio and flower bed.\n\nSeeing his father was home caused a wave of disappointment to wash over Jacob. He was really looking forward to some mother-son \"quality time\" before going on his date. However, this unexpected turn of events put a significant crimp in his plans.\n\nWalking up onto the patio, Jacob called out, \"Hi Dad!\"\n\nStopping his task, Robert took off his safety glasses and replied, \"Hey there, Jake. You just get home?\"\n\nNodding, Jacob answered, \"Yes sir... I've been over at Matt's house since lunch.\" In a confused tone, he asked, \"I thought you were playing golf today?\"\n\nRobert tittered then replied, \"That was the original plan, but something came up, and it got postponed.\" Picking up a decorative brick, he continued, \"Your mom's been after me to make these additions to the patio for a while now. Since golf got canceled... I figured today would be as good as any.\" Wiping his brow, the hard-working husband continued, \"I just didn't realize it would be this hot today.\" \n\nNodding, Jacob replied, \"Yeah, I agree with you, Dad... it is rather sticky out here.\"\n\nIt was indeed a very warm and humid autumn day, even for the state of Georgia. However, unbeknown to Jacob, the temperature was about to rise even higher.\n\n\"Hi Sweetie... you want something cold to drink?\"\n\nJacob turned to see Karen walking towards them carrying what looked like a glass of iced tea. His eyes almost popped out of their sockets when he saw what his reserved and conservative mother was wearing... or what little she was wearing, that is.\n\nKaren Mitchell strode across the patio that steamy afternoon in nothing but a string bikini. Jacob had seen his mother in bathing suits hundreds of times over the years; usually, she wore either a one-piece or a conservative two-piece. However, this get-up looked more like something his sister Rachel would be parading around in.\n\nThe top consisted of two baby pink triangle-shaped cups trimmed in white and showcased a generous amount of Karen's womanly charms. The white strings that held it together seemed to be struggling and could fail at any moment. The matching bottoms were medium coverage and a daring side-tie design. \n\nJacob couldn't help but gawk at his mother. It was like time slowed down, and Karen walked in slow motion as in some teenager's dream movie sequence. His cock instantly jerked to life as he watched the roll of her wide hips and the rippling of her breasts as they gently bounced in her bikini top. \n\nThe vision of Karen reminded Jacob of a photo saved on his computer. In that particular picture, Denise Milani donned a similar suit; only her bikini was blue with white polka dots and trimmed in pink. At that moment, his MILF of a mom greatly resembled a slightly older and thicker version of the gorgeous internet model.\n\n\"Jake, Honey? Did you hear me?\" Karen's sweet voice brought the teenager out of his daydream.\n\nTrying desperately to clear his mind, Jacob replied, \"I\u2014I'm sorry, Mom... did you ask me something?\"\n\nKaren giggled then repeated, \"I asked if you wanted anything to drink?\" She then handed the glass to her husband, in which Robert began to guzzle down the cold refreshment. The concerned mother then inquired, \"Jake, Honey? Are you feeling alright? You look a little flushed.\"\n\nBefore Jacob could answer, Robert chuckled then stated, \"It's quite obvious! We know what you're thinking about... don't we, Jake?\"\n\nAfraid his father knew of the unwholesome thoughts he had for is his wife, Jacob replied nervously, \"W-what do you mean, Dad?\"\n\nRobert responded, \"Well, clearly, your mind is elsewhere. I bet you're already thinking about your date with Sara.\" After taking another sip of his drink, he continued, \"It's just like when I was dating your mom... she was all I could think about day and night.\" \n\nJacob chuckled and replied, \"Yeah... you're right, Dad...\" Taking another quick glance at his bikini-clad mother he continued, \"My mind was definitely elsewhere.\" \n\nRobert continued, \"I used to get so nervous before going out with your mother.\" The reminiscing father laughed then added, \"In fact, one time I bought a new suit for a dance we were attending, and I forgot to take the tags off. Luckily your mom here discovered them before we went inside and saved me from a lot of embarrassment.\"\n\nKaren hooted, \"I remember that night.\" Looking at her husband, she continued, \"I thought you were so cute to get flustered over me like that.\"\n\nJacob then interjected, \"I don't mean to interrupt the trip down memory lane, but now that I think about it, I could use something to drink after all. Plus, I should probably go on inside and start getting ready to go to Sara's.\"\n\n\"Oh, it is getting late, isn't it.\" Karen noted. As she walked over to the lounge chair, Jacob couldn't help but once again stare at his mother's heavenly body. Her scent of coconut suntan lotion only spurred on his arousal.\n\nAfter Karen collected her swimsuit cover, book, and cell phone, she then walked over to Robert. While she slipped on the lightweight garment, she said, \"Honey, I'm going to go inside also so I can shower and get changed. I need to drop Jacob off at the Millers' before picking up Dad... he's coming over for dinner tonight.\"\n\nHanding the empty glass to Karen, Robert gave his wife a quick kiss and replied, \"That's fine. I'm going to keep working on the patio. If time permits, I plan to get it done today.\" As Karen and Jacob began walking towards the house, Robert called out, \"Good luck tonight, Jake... just be yourself and have fun.\"\n\nTurning back towards his father, Jacob answered, Thanks, Dad... I will.\"\n\nOnce they entered the kitchen, Jacob closed the back door. He then walked over and sat on one of the island stools and said, \"Holy smokes, Mom... when did you get that bikini?\"\n\nKaren giggled while she filled a glass with ice for Jacob. \"I have two actually... this one and a black one. Your sister talked me into getting them a while back.\"\n\n\"Well, that makes sense,\" Jacob commented. \"It looks like something Rachel would have picked out.\" He then asked, \"Is this your first time wearing it?\"\n\nShaking her head, Karen replied, \"No... I've worn the black one a few times, but only when I was alone here at the house.\" While getting the pitcher of lemonade out of the refrigerator, she continued, \"Today was the first time I actually had the confidence for anyone to see me wearing one of them.\" She originally wore it to try and seduce Robert. She hoped it might signal to her husband that she was good and ready to continue from the other night. \n\nEven though Karen was wearing the swimsuit cover, she left it undone in the front, giving Jacob a clear view of his mother's enticing cleavage. Reaching down to his crotch, Jacob grabbed hold of the erection growing inside his khaki shorts and commented, \"Dang, Mom... there's no need to worry about confidence... you look absolutely awesome!\"\n\nWhile pouring the lemonade, Karen replied sweetly, \"Well, thank you, Baby.\" She then turned and sat the glass down onto the island top in front of Jacob. As the sexy mom watched her son take several gulps of the cold drink, she chuckled, \"Your father seemed to like it also. However, I don't think it would be proper to wear something this revealing out in public or around anyone outside the family.\"\n\nJacob glanced out the window to find his father still working away on the patio. His dick was almost fully erect and getting very uncomfortable. Feeling it was safe enough, the horny teenager asked, \"So Mom... what do we do about you helping me before I go to Sara's?\"\n\nWhile placing the pitcher back into the refrigerator, Karen replied, \"Well, with your father here, I'm afraid that's now out of the question.\" After she had closed the door and turned back around, she maintained, \"You remember my rule, don't you?\"\n\nJacob got off of the stool and said with concern, \"But Mom, what am I supposed to do? You said yourself that I couldn't go over to the Millers with this!\" He then pointed down towards his crotch and added, \"You said you would help me.\"\n\nKaren couldn't help but glance down to find the huge bulge that had formed in Jacob's shorts. She crossed her arms, causing her massive twin globes to push up and further out from her chest, creating even more tantalizing cleavage. She shook her head, then said, \"I'm sorry, Jake. I admit... I did say I would help you, but that was before I knew your dad would be here.\"\n\n\"But Mom,\" Jacob said as he stepped closer to Karen. \"I think you can still help me, and it will not break your rule.\"\n\nKaren replied in an exasperated tone, \"Jake... what are you talking about?\" She then pointed towards the window and added, \"Your father is right out outside!\"\n\nJacob smiled and said, \"Yeah... I know.\" He then took hold of Karen's left hand, feeling the diamonds of her wedding rings pressing into the pad of his thumb. As he led his mother over to the kitchen sink, he added, \"Your rule states that we cannot do stuff whenever Dad is in the house.\"\n\nNodding in agreement, Karen replied, \"Yes... That is absolutely correct.\"\n\n\"Well, Mom,\" Jacob began as he pointed towards the backyard. \"Dad is not 'in' the house.\"\n\nKaren gazed out the window for a few seconds and watched as her husband tapped another brick into place with his rubber mallet. Looking back to Jacob, she huffed and said, \"Jake... I think you're trying to split hairs on me here.\"\n\nJacob shrugged his shoulders and said while unfastening his shorts, \"I'm following the rule as you stated, Mom.\" He then quickly pulled his throbbing cock out into the open air of the kitchen.\n\n\"Jake!!\" Karen gasped. \"Are you insane? Your father could walk in here at any moment.\" \n\nSliding his hand up and down the veiny shaft, Jacob replied, \"Sorry, but it's starting to hurt pretty bad. He then looked down at his throbbing dick and added, \"As you can see, Mom... I could really use your help.\"\n\nKaren automatically glanced down as well to find Jacob's cock throbbing with need. A long strand of pre-cum hung from the spongy purple tip. Her son's vibrant scent took immediate effect as her vagina began to moisten in quick response. She licked her top lip and said softly, \"Okay, but it's too dangerous here. Maybe we should go to your room and lock the door.\"\n\nJacob stepped closer to Karen and replied, \"Actually... it's probably safer if you do it here.\"\n\nGiving him a confused look, Karen responded, \"What? How so?\"\n\n\"Think about it, Mom.\" Jacob then glanced out the window and persisted, \"This way... I can keep an eye on Dad while you...\" He then turned back to Karen with a slight grin and added, \"Do your thing.\"\n\nThe hormones had now taken more effect as Karen's arousal continued to grow. Her hardened nipples pleasantly buzzed inside her bikini top. Taking one last glance outside at her husband, she fought with her internal conflict. \n\nKaren knew very well Jacob could not go on his date in this condition. And the thought of relieving her son with Robert just on the other side of the glass made her head spin. Begrudgingly, Karen turned back to Jacob and then, with a sigh, said, \"Fine... but we need to be quick.\"\n\n\"Sure, Mom,\" Jacob quickly replied. \"But first... could you ditch the swimsuit cover? You look insanely hot in that bikini!\"\n\nAs Karen slipped the thin garment off of her delicate shoulders, she cut her eyes at Jacob and asked, \"Answer me this, how are you going to keep an eye on your dad if you're busy looking at me?\"\n\nWith a smile, Jacob replied, \"Don't worry... I can do both.\" His smile broadened as his mother once again revealed her scantily clad MILF body. The pink and white bikini accentuated her womanly curves perfectly. \"Wow, Mom... you are so dang beautiful!!\"\n\nAs Karen tossed the swimsuit cover on the back of a kitchen chair, she said, \"As much as I appreciate the compliment, it's more important that you do not lose sight of your father. If he takes one step towards the house, I'm stopping immediately.\"\n\nNodding in agreement, Jacob replied, \"Understood.\"\n\nAfter Karen lowered down onto her knees, she took hold of Jacob's pulsing member with both hands and began stroking the long stiff shaft. She then licked the spongy head, collecting his pre-cum as it trickled out from the pee slit. \n\n\"Mmmmmm,\" automatically came from Karen's throat as she savored the sweet and creamy liquid. After swallowing and licking her lips, the increasingly aroused mother looked up at her son and whispered, \"Okay... let's hurry up and do this.\" \n\nA few minutes later, Karen fervently blew her son. While her hands tightly gripped and stroked the pulsating rod of flesh, her hot mouth and limber tongue double-teamed Jacob's sensitive cock head. Whether it was the sexual arousal or the dangerous situation, or maybe even a combination, the conservative mother attacked her little boy's man-stick with never-before-seen passion. Now, she definitely was going to need a replay with her husband tonight.\n\nThe kitchen was mainly quiet other than Karen's lewd slurping noises and Jacob's constant moans of pleasure. He would occasionally glance out the window to ensure their safety; however, his primary focus was on his nearly naked mother as she gave him a first-class blow job. \n\nWhile looking down, Jacob watched as Karen bobbed her head back and forth with a glob of drool running down her chin. The teenager found himself mesmerized by the gentle sway of her massive tits wobbling inside the bikini top. He then groaned, \"Wow, Mom... you're the best!\"\n\nPulling her head back, Karen gently cupped Jacob's enormously bloated testicles with her right hand while her left hand continued to slide up and down his lubricated pole. The diamonds in her wedding rings sparkled in the afternoon sun. She swallowed and said in a nervous tone, \"Jake, Honey... you really need to hurry up and finish. I'm worried your father may decide to come into the house.\"\n\nTaking a look out the window, Jacob noticed his father tediously measuring the ground for the placement of another decorative brick. He then turned back to Karen and replied, \"You're right, Mom... we need to hurry.\" The teenager then took his mother's left hand to help her up and said, \"I think this calls for plan B.\"\n\nStanding up, Karen asked out of curiosity, \"Plan B? What's Plan B?\"\n\nAs Jacob positioned Karen at the kitchen sink, she looked out the large picture window. About thirty feet away was Robert as he diligently worked on the patio. The teenager put both his hands on Karen's matronly hips and said, \"Plan B is where you keep an eye on Dad, and I'll do the work from back here.\"\n\nKaren's eyes went wide as she now realized what Jacob had intended for them to do. The panicked mother spat out, \"Jake... this is not a good plan... in fact, it's a terrible one! Your father can see me through the window.\"\n\n\"Don't worry, Mom,\" Jacob reassured her. \"With the sun's glare hitting the glass, he won't be able to see a thing... I promise.\"\n\nAt that moment, Karen heard the crinkling of plastic. She turned to look back over her shoulder and gasped when she saw Jacob holding a gold condom wrapper. \"Jake? Where on earth did you get that?\"\n\n\"My pocket,\" Jacob responded nonchalantly as he ripped open the small package. \"Remember, you told me to keep one with me at all times.\" He then chuckled and continued, \"That was good planning on your part, Mom.\" He then began to roll the condom down onto his raging boner.\n\n\"Ugghhh!\" Karen groaned as she remembered it was her idea for Jacob to carry one with him. She took some solace in the fact he actually listened to her for once.\n\nStanding directly behind Karen, Jacob could not see out the window. He asked, \"What's Dad doing, Mom?\" \n\nFeeling a bit lightheaded from arousal and anxiety, Karen replied softly, \"He's still working on the patio.\" Suddenly, she felt Jacob's hands on her hips and gasped with surprise as she felt the side knots of her bikini bottom come undone. The loosened garment then slid down her thighs and fluttered to the kitchen floor.\n\nInstead of rebuking Jacob, Karen acted on pure instinct. The aroused mother widened her stance while lowering herself down and resting her forearms on the kitchen counter. She broke out in goosebumps when the kitchen's cool air licked at her steaming hot pussy. It made her feel dirty to present herself in such a submissive position to her son, but in a way, it felt strangely natural.",
        "Karen continued to watch Robert as he contently proceeded to work on the project that she had requested. The conflicted wife sensed a pang of guilt as her loving husband was oblivious to the fact that she was about to give herself to their teenage son while he dutifully labored just a few feet away.\n\n\"Mmmmmm!!\" Karen closed her eyes and involuntarily moaned as the head of Jacob's cock slid up and down her juicy slit. Sparks of immense pleasure danced along her nerve endings each time the fat tip scraped across her throbbing clit. \n\nKaren opened her eyes and watched Robert out on the patio. She then noticed the stack of decorative bricks had dwindled to where there were only a few left. The horny mother began to feel more anxious, and in a heavy whisper, she said, \"Jake... we need to hurry.\" Looking over her shoulder, she added, \"Your father's getting close to being done.\"\n\nWearing the condom made it more difficult for Jacob to find the entrance to Karen's vagina. However, after another second or so of trial and error, the undaunted teenager located the gateway to paradise. \n\nWith the sheathed tip of his spear now poised and ready to penetrate the passageway, Jacob grabbed hold of his mother's wide, fleshy hips and told her, \"Okay, Mom... I'm going in.\" He then surged forward with his hips burying half of his massive cock inside her slick tunnel with a single stroke.\n\n\"AAAAAHHHHH!!\" Karen yelped in surprise as her eyes shot wide open. The intense mixture of pain and pleasure brought the shocked mother to rise onto her tiptoes. She then glared back at her son and scolded him, \"Jake!!\"\n\n\"Sorry, Mom,\" Jacob responded. \"But you said we need to hurry.\"\n\nAfter glancing out the window to ensure Robert did not hear anything, Karen turned back to Jacob. \"We're not in 'that' big of hurry... you have to take it easy.\" Jacob nodded in compliance.\n\nTurning back to face the window, Karen readjusted her position. She pushed the faucet head out of the way and placed her hands onto the backsplash. She then lowered her torso with her large tits bobbing down into the deep empty well of the kitchen sink. Her gold locket gently bouncing against her hanging breasts. \n\nOver time, with each small thrust, Karen's grunts turned into moans, as the painful fullness quickly faded and gave way to total pleasure.\n\n\"Ohhhhhhh!!\" Karen groaned as Jacob wasted no time and began a slow yet constant rhythm of pistoning his condom-covered phallus in and out of her overheated vagina. The half-naked mother's hanging jugs wildly swung back and forth inside the bikini top, causing her hardened nipples to scrape against the soft fabric. The slight friction enflamed the rubbery nubs sending pleasure signals from her jiggling globes directly to her overstuffed pussy.\n\n\"Ohhh! Ughhh! Ohhh! Ughhh!\" Karen grunted each time Jacob hit bottom. Every agonizing thrust was pushing the groaning mother closer and closer to climax. Like on Monday in the laundry room, this new position allowed her son's cock access to places that have never been touched. It was as if the beastly invader had gained entry into some secret chamber hidden deep inside her vagina.\n\nKaren so badly wanted to give herself over to the incredible sensations that flowed through her veins like an illicit drug, but she dare not. The cheating wife had to remain quiet and focus on monitoring her husband just on the other side of the window. However, her highly aroused body refused to cooperate, and her focus began to wane.\n\nJacob's monster cock was constantly battering Karen's new special place, causing her nerve endings to tingle with ecstasy. It was apparent that resisting would be futile, and her climax was inevitable. \n\nKaren raised her torso off the counter, grabbed hold of the faucet head, bracing herself for the oncoming storm. She muttered, \"Ohhhhh! It's... it's... almost! Oh Jake... yes... I'm almost... yes yes yes!!\"\n\nKaren then closed her eyes and bit down on her lip in an attempt to remain quiet as the euphoria took control. \"NNNNNNNNGGGGG!!\" the climaxing mother groaned as not just one, but multiple waves washed over her body. She instinctively grabbed one of her huge breasts as tantalizing pressure began to build inside the swinging orb.\n\nFeeling the spasms of Karen's vagina around his cock, Jacob chuckled and said, \"Wow, Mom! That must have been... a good one!\"\n\n\"Uuuuggggghhhhhh!\" was Karen's only reply as she lowered her head and tried to recover. She could already feel the next powerful wave beginning to swell.\n\nJacob tightened his grip on the pliable flesh of Karen's hips as he banged away at her steaming vagina. His eyes followed the tapering of her delicate back then along the extreme curvature of her flared hips to land on her round matronly bottom. He found it mesmerizing to watch the wicked undulations of his mother's butt cheeks each time he impaled her with his veiny shaft. \n\nSpreading Karen's delectable butt cheeks with his hands, Jacob caught sight of his mom's little pink star. He wondered if she would enjoy his finger exploring her 'final frontier' the same as his sister Rachel. The teenager was tempted to test the waters; but, he decided to play it safe and make that a goal for another day.\n\nInstead, Jacob asked his mother, \"Mom? What's Dad... doing now?\"\n\nKaren raised her head and tried to regain her focus on Robert. Between labored grunts, she replied, \"He's still... ughhh... on the patio... ughhh... hammering... the bricks.\"\n\nJacob grabbed hold of Karen's long ponytail and pulled so that her head tilted back. The teenager then asked, \"What would Dad say...uh... if he knew... while he was working in the yard... you were here in the kitchen... uh... letting your son... hammer your hot pussy?\" He then slapped his mother's magnificent butt with his right hand, causing her supple flesh to bounce and wobble. \n\n\"OHHHHH!!\" Karen squealed. She wanted to rebuke Jacob's crude and disrespectful language; except, her mouth could not form the words. Being manhandled in this fashion was totally out of character and had her dazed and confused. \n\nKaren was not used to being treated this way. Her husband, Robert, was always gentle and loving when it came to sex. Jacob, however, was tapping into something brand new... something basic and primal... and strangely, she kind of liked it.\n\nWith Jacob pulling on Karen's ponytail, she looked out the window. She saw her sweet husband continuing with his task in the backyard. As the housewife grew closer to another incredible orgasm, she reluctantly had to admit the obvious truth... her son may not be the official 'man' of the house, but he was definitely becoming the 'cock' of the house. \n\nThe debauchery and tormenting pleasure were taking their toll. Karen pulled the pink triangle of fabric down below her trembling breast and tightly clamped down onto the burning nipple with her right hand. \"Ohhhh... yeeessss!!\" she groaned from the delightful sensations brought on by her pinching fingers that would act as a spark and ignite the orgasmic flames. \"Ohhhh... Jake! You're gonna... make me... do it... aaaggaaiiinnnn!!\" \n\nDuring this whole time, Karen had been able to remain mostly quiet; however, things were about to change radically. As the raging fire spread throughout her body, the climaxing mother lost control and reared back and cried out, \"AAAAAAHHHHHHH!! YEEEESSSSSS!!\" \n\nWhile the orgasmic inferno raged on, jet after jet of breast milk shot out from Karen's pulsing nipples. The creamy liquid splashing onto the countertop and the glass of the double-pane window.\n\nRobert, at the time, was on hand and knee bent over, tapping another brick in place. He suddenly shot straight up when he heard what sounded like the scream of a female. He looked around for a few seconds trying to determine a location or direction from where it came.\n\nWhen Karen noticed Robert staring in their direction, she put her left hand over her mouth to stifle her cries of forbidden pleasure. It was as if they were staring into each other's eyes, yet because of the glare on the window, he could not see his wife or the sinful act she engaged in just on the other side of the glass.\n\nAfter a few more seconds, Robert shook his head and chuckled, \"Must be those darned Henderson kids again.\" He then returned to his former position and continued with his chore.\n\nBack in the kitchen, Jacob was quickly approaching his finale. He let go of Karen's beautiful brown hair and returned his hands to her curvy and meaty hips. Squeezing tightly on her soft flesh, he grunted, \"Mom... Mom!! I'm... gonna cum!!\"\n\nStill riding the high from her orgasm, Karen replied, \"You can... stay inside.\"\n\nWith surprise, Jacob responded, \"Really... you... you mean it?\"\n\nNodding her response, Karen then softly said while looking out the window, \"Yes... the condom... it's okay.\"\n\nJacob began slamming even harder into Karen as his cock swelled inside his mother's vagina. As his bloated testicles released their pent-up load, the excited teenager threw his head back and called out, \"Oh Mom.. here it comes! Oh yeah! You're the coolest, Mom!! OHHH YEEAHHHHH!!\"\n\nKaren watched her husband out in the yard while her son blew his massive load into the condom while balls deep in her cunt. The wickedness of it all unexpectedly pushed her over the edge once again. \n\nKaren frantically grabbed hold of the edge of the countertop and wailed, \"OOOOHHHHHHH!!\" as her overworked pussy spasmed through a third mind-wracking orgasm. She hoped Robert didn't hear, but the sublime pleasure she felt at that moment had her almost not caring if he did.\n\nAfter carefully pulling his condom-wrapped cock out of his mother's twitching vagina, an exhausted Jacob took a seat on a kitchen chair. Karen remained bent over the counter while catching her breath and keeping an eye on Robert.\n\nA few moments later, Karen stood up straight, readjusted her bikini top, and then grabbed her bathing suit cover from the back of the kitchen chair. While slipping on the garment, Jacob commented, \"Wow, Mom... that was awesome!!\"\n\nKaren giggled and grabbed a nearby kitchen towel. While the clean-freak mother wiped away the milky evidence from the window and countertop, she replied, \"I have to agree with you... that was pretty intense.\" She then turned to Jacob and asked, \"Where in the world did you get the idea of hair-pulling and spanking?\"\n\nJacob froze. He had seen that maneuver hundreds of times before in porn videos. However, that was not something he could ever admit to his squeaky, clean pornophobic mother. Luckily for him, his father of all people would save the day. \n\n\"Uh oh!\" Karen said in a slight panic. She then quickly collected her discarded bikini bottoms from the floor. While clutching her bathing suit cover closed, she added, \"Looks like your dad could be finishing up... we better hurry upstairs and get in the shower.\"\n\nWith an expression of excitement on his face, Jacob replied, \"You mean together?\"\n\nKaren furrowed her brow in confusion and replied, \"What?\" She then scoffed and continued as they walked out of the kitchen, \"No, goofball!! You in your bathroom... me in mine. I think we've pushed our luck way too much already today.\"\n\nWhile ascending the stairs, Jacob offered, \"Well, it was just an idea. I thought we could... you know... save on water usage.\"\n\nAfter they reached the landing, Karen stopped and asked with slight sarcasm, \"Oh really? Well, tell me, Mr. Greenpeace... since when did you start worrying so much about the environment?\" \n\nJacob replied, \"Need to start somewhere.\"\n\nKaren chuckled and responded, \"Well, Jake, I'm sure enviromnemtalists everywhere would be glad to hear that you are now so Earth-conscious. But how do you think your father would react if he caught us in the shower together?\"\n\nShrugging his shoulders, Jacob replied, \"We just tell him we're on a mission to save the planet... we all should do our part... right?\"\n\nKaren rolled her eyes and said, \"It's getting late... you should probably go and start getting ready.\"\n\n\"Soooo... how about it, Mom?\" Jacob asked with a smile. \"I'm willing to make the sacrifice if you are.\"\n\nKaren then shook her head while pointing towards his bathroom. With an exasperated tone, she said, \"Jake... you need to go take a shower... now!\"\n\nWith his smile now a frown, Jacob replied, \"Oh alright.\" He then begrudgingly walked down the hallway towards his bathroom to take a shower... alone.\n\n******************** \n\nEND CHAPTER 9\n\nSTORY CONTINUES IN CHAPTER 10"
    ],
    "authorname": "RTR9209",
    "tags": [
        "mother",
        "son",
        "big tits",
        "aunt-nephew",
        "family"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/wicked-hormones-ch-09"
}