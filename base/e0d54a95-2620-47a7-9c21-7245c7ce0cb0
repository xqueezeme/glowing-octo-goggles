{
    "title": "Guns and Dust Ch. 11",
    "pages": [
        "<p align=\"center\">**</p>\n\n<p align=\"center\">Hello fans of Guns and Dust! Thank you so much for all your well-wishes on chapter ten and my return to Literotica!</p>\n\n<p align=\"center\">And thanks to you, chapter ten won a Reader's Choice Award! I couldn't do this without your amazing support!</p>\n\n<p align=\"center\">Thank you! Thank you! Thank you!</p>\n\nAs many of you have probably realized by now, Guns and Dust is destined to become a book. This amazing journey would not have happened without you and your encouragement.\n\nFor updates on the journey from here to the book, follow me on Facebook and Instagram (Kieran Lancaster on Facebook and kieran_lancasterwriting on Instagram). I have also created an official Guns and Dust Facebook page. I hope to see you all there!\n\n<p align=\"center\">**</p>\n\n<p align=\"center\">Guns and Dust</p>\n\n<p align=\"center\">- chapter eleven-</p>\n\nAdina's heart felt like it struck rocky bottom as she listened to the Quarry council argue. Not so many minutes ago, she'd been filled with heady excitement. People had been cheering, crowding around the bearcat as she pulled in through the gates, celebrating her bringing Nat home safely. Now that excitement was gone, replaced by frustration, anger -- and fear.\n\nOmar, the thick-shouldered head of the Quarry's security leaned on the table in the center of the council house and shook his head. \"The risk is too high. I say no.\"\n\n\"You can't be serious!\" Adina snapped.\n\nOmar swiveled his head to her. His intense expression made his blue eyes stand out against his scruffy black hair and bushy beard. \"This isn't your decision. You...\"\n\n\"You need people here!\" Adina interrupted, jabbing a finger out at him. \"You said it yourself.\" Adina still wore her filthy clothes from the trek out into the wastes to find Nat, spattered with the remains of the battle with the slavers. She threw her arm out toward the empty desert beyond the camps makeshift walls. \"And they have nowhere else to go!\" A stone felt like it had formed in Adina's chest. Images of what might have to happen if she and Asher had to leave the survivors to fend for themselves in the desert flashed through her mind. She could feel the weight of her rifle in her hands like a premonition. She pushed the awful images aside.\n\nOmar turned to her, pulling himself up to his full height, half a foot taller than her. \"There are two hundred and eighty-four of us here. With fifty-two people, they could overthrow us.\" His words weren't harsh, or weary, or anything. They were just cold - a statement of facts. And they made Adina's heart grind against the sharpness inside her.\n\n\"They're mostly women, girls and boys like Nat! There are only a dozen men among them!\" Adina's mind was instantly filled with the striking image of Lew-Lew parading among the ruined camp and dead bodies like he was on stage. \"The slavers weren't interested in men!\" She stared defiantly back into his gruff, blue-eyed gaze. \"You do the math!\" The words struck her with comforting familiarity. It was Asher's figure of speech. And as she looked across the faces of the rest of the council, he filled her mind; so far away, alone, protecting the survivors.\n\nIn addition to Omar and Priav, Priav's husband Rafi sat silently on her left, his blind eyes staring into the center of the space, looking regal, serene, and wise, as always. He hadn't said anything. He just listened, his gnarled hands resting calmly on his walking stick. The other three people oversaw various elements of the camps operation. A rail thin woman sat back with her arms crossed, her hair pulled back tightly, making her already gaunt, burnt tan face look even more severe. Her hair was mostly hidden under a brightly colored, block-printed scarf that did nothing to ease her appearance. She oversaw the farming effort, or something to do with the water.\n\n\"And how are we supposed to feed them? Almost another fifth our number? We're only just keeping a surplus as it is.\"\n\nPriav held up a hand to quiet everyone and shifted the not quite red, not quite orange shawl around her shoulders, then stood up. The headwoman's face was the rich red brown of baked clay in the angled light of the large central meeting structure. Priav's neutral expression was framed by her gray mane of thick, ropey, dreadlocks. Priav stepped close and put a hand on Adina's arm.\n\n\"Omar is right, Adina. We need to decide this. \"They are not our people...\"\n\n\"But...\"\n\n\"We don't know them,\" Priav continued as if Adina hadn't interrupted her. Priav stuck her chin out at her and squeezed her arm. \"You... don't know them.\" The words hung in the air for a moment. \"You shared an experience which has made you close, but you don't know them.\"\n\n\"We didn't know you when we saved you either!\" Adina glared at her. Her heart was suddenly hammering in her ears. Behind Priav, Adina could see the unsettled shift in the rest of the council at her words.\n\nBut Priav didn't react to what she'd said, or her glare. Priav's tone and expression were conciliatory. \"You've done something wonderful for us, Adina.\" Priav nodded over her shoulder to the rest of the council. \"We have to talk about what you've told us.\" Priav patted her arm. \"Go and rest, get clean.\"\n\n\"But if...\"\n\nPriav raised her hand. \"We will celebrate you bringing Nat back to us tonight. But for now, let us talk.\"\n\nAdina still wanted to fight, but the way Priav held her eyes... the kindness and quiet power there stole the fire from her. Adina nodded and dropped her head. She was suddenly so tired. And her clothes itched. She just felt filthy.\n\nAdina felt Priav's wrinkled finger under her chin and lifted her head. Priav's eyes were filled with heartfelt intensity. \"Thank you for bringing Nat home to us, Adina.\" Priav tilted her head a few degrees. \"Few would be so brave for people they don't know.\" And as Priav held her gaze, Adina had to blink back tears. She turned and left. She didn't want to see the rest of the council to see her cry.\n\nThe sun was hot across Adina's shoulders and neck where her black ponytail didn't cover as she kicked off her boots and dropped down into the shallow bathing area of the quarry. Behind her breastbone, the stone that had formed after the council's cold response hung like a weight around her heart. But it was softened by Priav's gentle, powerful gratitude. Adina wasn't sure what she was feeling - anger, frustration, fear, betrayal? It was all just a confusing mess inside her.\n\nAnd further down in her belly, a knot of anxiety pulled. Every eye in camp had been on her since she arrived. And without Asher there, all the attention was overwhelming. After the initial rush of the congratulations for bringing Nat home, Priav had told everyone to give her space. They mostly did. But eyes followed her everywhere -- men's eyes. She could feel their interest like the heat of the sun on her skin. She squinted against the glare of the white stone walls as she squatted down in the water. A slick of dirt, sweat, and things she didn't want to think about expanded out from her. She watched the patterns it made in the water. Adina hadn't thought about how filthy she was until now. Or what all the filth meant. Not until the moment standing there with Priav. There were too many other thoughts, too many feelings. A little girl waved to her, a few yards from the edge of the water, grinning shyly. Adina's heart squeezed thinking about the girls among the survivors. What they'd been through in the slave camp... and what she and Asher might have to do if they couldn't bring them to the Quarry. She half walked; half paddled in the chest deep water to retrieve the soap from the rocks next to her boots. She gave the little girl a smile and waved back. Men watched her. Most were discrete about their interest. But a tall, red-haired man that had shown his interest when she and Asher first arrived, stood in the sun, just watching. His boldness was a statement.\n\nIt was intimidating... and amidst all her other confusion, it was exciting. She could feel their arousal everywhere. No man could measure up to Asher in her feelings for him, how unbelievably handsome he was, or the things he made her feel when they made love. But fantasies about those men watching her flooded in. She ached for Asher, but he wasn't here.\n\nAdina ran soap over her clothes and gave herself and her clothes an initial wash at the same time. She took off her shirt and washed it thoroughly, keeping in shoulder deep water so that her hard nipples weren't on display through her undershirt. Then she stripped off her undershirt, feeling eyes searching to see more of her. She scrubbed the light fabric between her hands, feeling it flow around them under the water, watching more dirt float away. Her nipples felt like they were being pinched in her anxiety and arousal. She waded to the edge and tossed her shirts up onto the rocks, careful to keep herself down in the water. She made sure her towel was there so she could cover up when she was done. She took off her pants and underwear, washed them and threw them up on the rocks too. Naked in the water, her heart pounded as she washed herself. Everything was wildly sensitive when she washed between her legs. She could almost feel the erect penises around her, see the images in the men's minds of her underneath them, or being behind her, thrusting into her. She dunked down and scrubbed her hair, scratching her scalp with her fingernails. She stayed down, letting her hair flow out around her and closed her eyes, trying to drive the images and imagined feeling of hands on her away. But they just crowded in, more detailed, more explicit. She waded to where the ramp dropped off into deeper water, took a breath, then plunged down. It was forty or so feet to the bottom of the next ramp. She kicked downward, the water pressing on her naked body, growing colder as she descended. She cleared her ears and kept kicking, willing the cold water and the pressure to dowse the fire in her. She reached the bottom and let out a stream of bubbles, watching them skitter and dash side to side on the way to the surface. Then she just let herself hover in the cool, blue dimness. She was alone, no eyes on her, the cold seeping in. But the ache only intensified. The blue reminded her of Asher's eyes, the pressure on her like his body weight. It was so quiet. Just her heartbeat and the sounds her body made in response to the pressure. Her lungs started to burn, the need to breathe nagging at the peace of just floating there. She kicked lightly off the bottom and let her buoyancy draw her upward trying to relax. When she broke the surface, all her senses felt like they'd been set on fire. The way her heart pounded had little to do with the cold water. She paddled to the white stone edge and pulled her towel around her as she lifted herself up out of the water. She couldn't help but glance around. And as she saw men watching her, more fantasies crashed in.\n\nAt least she could blame her bright blush on the cold water. She could feel eyes on her bare legs, shoulders, and neck as she stepped into her boots, gathered her things, and clutched them to her chest. She nodded to people who smiled at her, replied in single words to hellos as she made her way back to the bearcat, suppressing the urge to run. At the bearcat, she climbed inside, slammed the hatch, and dropped her things, falling onto the mattress. She put a hand on her mound. The touch made her curl up around her hand. She pressed. \"Ohhh... Asher... where are you when I need you?\" She pulled off her towel. Being naked in the safety of the bearcat eased some of the tension, but the feeling of all those men's eyes on her, their fantasies, burned in her. She looked for something to satisfy herself. The big rifle leaned up against the back of the driver's seat. She threw it onto the mattress and opened the bipod so it sat at an angle, stable. The smooth top of the shoulder stock called to her. She straddled it and lightly ran her sensitive labia over the smooth, hard surface. Adina hissed and squeezed her eyes shut as her ass clenched with excitement. She reached down and parted her lips, carefully touching her swollen clit to the hard surface. She was so sensitive she yelped and bit her lip at the first touch. She worked her hips carefully, lightly drawing her clit up and down, arousing her more and more. She grabbed the shelf above her to steady herself. One of the storage ties hung down, brushing her arms. She pushed herself down on the stock harder with a groan and wound the tie around her wrists. She kept winding until her wrists were pulled tightly together, trapped above her head. She pushed her breasts out and rolled her hips to brush her clit. Her hard nipples stood out erect. Adina groaned at the wild combination of feelings. Then she pushed down hard.\n\n\"Oh... fuck...\"\n\nHer belly spasmed and she grimaced at the pressure. Her hips pumped forward in response. Pain and arousal... so much... She heard another moan escape from someplace deep inside her. She didn't open her eyes. The fantasy of men from the village looking in through the windows watching her, her wrists tied over her head, fully exposed as she ground herself on the big gun was an image too exciting to break by opening her eyes. The rifle stock turned slippery with her wetness, and the smooth glide of it along her clit and lips was ecstatic. She didn't want it to end too soon. She rode the slippery stock letting herself come close to releasing, then backed away again and again until she was sweating and trembling with arousal. She wound her wrists tighter in the tie, forcing her to extend further, stretching her whole body to reach the fieriest spot. The eyes of the fantasy men watching her roved over her desperate, writhing body as she strained to pleasure herself. Then she was panting, her heart pounding, the sweat rolling down her naked skin as her hips and ass pushed and pulled instinctively. Her whole body suddenly stiffened, and she grabbed the ties, biting her arm to silence her ecstatic cry. Her hips crashed forward hard, and her tummy clenched as she drove her sensitive clit against the stock, her orgasm breaking through her. Spasm after spasm drove her against the stock, every sensation so overwhelming, her wet hair streaming over her back, breasts and nipples, the stretch of her core to stay on the spot, the itch of the blankets against her bare inner thighs.\n\nEverything was fuzzy when her orgasm finally eased. Her heartbeat thundered in her ears, and her whole body felt slack, even as she panted trying to catch her breath. The pain and arousal of being against the stock was too much. She grimaced, her muscles firing in uncoordinated protest as she tried to roll off. But her hands were caught in the ties, so she couldn't grab the shelf to steady herself. Easing up to move her sensitive button away from the stock, she shifted one unsteady leg. But her foot slipped, and she fell forward again, onto the stock. The blinding pain and stimulation were too much for her to even cry out. She slid down the length of the stock on her hypersensitive clit and everything went white. Every muscle in Adina's body clenched, and she came again, crying out loudly. The world spun. Adina's tied hands grasped and clawed for the shelves to try get her bodyweight off the gun. She bucked and struggled, biting her lip so she wouldn't scream. But she was helpless, her legs trembling and thrashing in uncontrolled spasms, as wave after wave of orgasms tore through her. They were merciless, painful, and so ecstatic in her total lack of control.\n\nHow long it lasted Adina had no idea, but when she finally sagged in the ties, her arms fully extended above her, she was utterly spent. She just hung there, her hips and tummy twitching. Her hands felt like balloons ready to pop. She took a deep breath and bit her lip, moving carefully to protect her burning clit. She lifted a leg and slid sideways off the rifle. It took several tries to free her numb hands from the twisted knots she'd created in the ties. Then she collapsed on the mattress, sweating, next to the rifle. Her limbs and body felt like they were made of lead. \"Asher... I need you.\"\n\nAdina woke up to banging on the side of the bearcat. She started up to sitting, and her belly immediately told her it was a bad idea. She cringed and sat forward to ease the tension on her overused muscles.\n\n\"Adina!\" someone yelled from outside.\n\n\"I'm here!\" she groaned. Her eyes were drawn to the big rifle. A shiny smear across the top of the stock shone in the sunlight that peeked around the curtains drawn over the windows. She grabbed her towel and scrubbed at it, her face suddenly feeling like it had caught fire.\n\nDid I really...? Then a grin pulled the corner of her mouth. That was amazing...\n\n\"What's wrong?\" she finally called back. She pulled on a dry pair of panties and an undershirt.\n\n\"Priav and Omar want you to come to the front gate, right now!\"\n\nAdina stopped with one leg in a fresh pair of pants. \"What?\"\n\n\"There's a storm coming. They want you at the front gate!\"\n\nAt the word storm and the tone of his voice, she was wriggling into her pants as fast as she could. \"What kind of storm?\" Storms in the open wastes could scour entire regions down to bare rock. She's seen the aftermath of a bad one when she was a girl. What had been dirt and scruffy green desert had been rendered into a lifeless rocky expanse for miles along the storm's path.\n\n\"A bad one!\"\n\nAdina yanked the door of the bearcat open pulling on her shirt and stuffing her feet into her boots. She didn't need to know anything more than what her senses told her as soon as she was outside. The sky had a weird greenish tinge, and she could smell the change in the air. Asher had said the smell of storms was ozone in the atmosphere from static electricity.\n\nIf this kind of storm hit the survivors camp out in the open... she didn't want to think about that. She yanked the laces on her second boot. Or it could permanently answer any question about the Quarry's survival. She threw her gun belt over her shoulder, slammed the door of the bearcat and followed him at a run. His name was Kerry, he was one of the men who worked on engineering around the camp. As Adina approached the gate, her run slowed. What looked like a massive black wall stretched from horizon to horizon. It looked like it was walking on legs of lightning, marching across the wastes toward them. All the tales the storiers told of the Lightning Men rolled up in the back of her mind.\n\nOh shit.\n\nShe finished buckling on her pistol belt and made for the crowd at the front gate.\n\n\"Get everything down that you can!\" Omar was shouting. \"Get everyone into rocks near the water and the wall. It's going to be safest!\"\n\n\"But stay away from the water!\" Priav hollered, standing right in the center of the churning crowd.\n\n\"What kind of storm is it?\" Adina asked as soon as she was next to Priav.\n\n\"We don't know. This is the first big one we've had since we've been here. We were hoping that maybe we didn't get them.\" Adina could see the disappointment and concern in Priav's eyes.\n\nAdina looked out into the oncoming monster. Big storms tore up the ground. And depending on where they'd been, they could pull radioactive particles or toxins up into them. The resulting toxic or radioactive rain could render areas barren for years if not lifetimes. Toxins or radioactivity falling into the quarry could spell as certain a death for the community as it being scoured away by the savage winds.\n\nPriav took her by the arm. \"Adina, I would like to put the youngest children into your vehicle. We have no storm shelters yet.\" She nodded in the direction Adina had come from. \"Your truck is the safest place I can think of.\"",
        "Adina squeezed her arm and nodded. \"Of course. As many as we can fit.\" She looked around. \"I'll bring the bearcat up and then once were loaded, I'll move us to the back side of the bluff.\" She pointed to the massive white slab of stone at the far end of the quarry. \"Putting the bluff between us and the storm seems like the best idea.\" She looked from Priav to Omar.\n\nOmar watched her for a moment then looked to the bluff. She could see the gears turning in his head. \"She's right. It's the safest place we can be.\" He raised his burly arm. \"Everyone! Move to the other side of the bluff. We will shelter there. Bring coverings and tarps to protect yourselves!\" He turned to Adina. \"Thank you. Thank you for helping us.\"\n\nAdina could feel Priav's smile without having to look at her.\n\n\"Of course. What else would I...\" She stopped herself. The Adina who stood here now, who could help them, was only able to for one reason. \"What do you think Asher would do?\"\n\nOmar nodded, then turned and boomed to the crowd. \"Bring the children! We're going to put them into Adina's truck!\"\n\nAdina sang along with Devon in the dimness of the bearcat's interior as the howling storm raged outside. What sounded like rocks pounded down on its metal skin as hailstones fell around them like artillery. She tried not to think about the people huddled against the stones outside with little more than tarps to protect them. Half a dozen women and older children were crammed under the bearcat for protection. Lightning crashed against the ground again, shuddering the entire truck and several of the eighteen children packed into every crevasse of the bearcat screamed. After a moment's interruption Devon just sung louder, encouraging all the children to join her. Nat sat in a corner with his arms around a brother and sister, holding onto them tightly as they cried. He was singing, but the flash of lightning showed his fearful expression as he sang.\n\nAdina pulled the little boy she was holding tighter against her and wrapped her coat more fully around them. It was cold. The inside of the bearcat was filled with mist from all the small lungs breathing in the closed space, and the windows were running with condensation.\n\n\"Shhh... It's going to be okay. You're safe here,\" she whispered into the little boy's ear.\n\n\"Where's my mom!\" he cried.\n\nAdina set her head on his hair. \"Shhh... She's alright,\" she lied. She couldn't imagine what it must be like outside in the torrential rain, with the hailstones raining down like gunfire, and winds that tore at the rocks and earth like claws. And she saw Asher, sheltering in the flashing darkness, trying to protect the survivors, but powerless to do more than she was. Only he didn't have the safety of the bearcat to protect him.\n\nThere was a blinding flash and Adina was instantly deafened. The lighting strike lifted the bearcat up on the shock absorbers and it abruptly settled again. She clamped the little boy against her again. \"It's going to be okay... We're going to be okay...\"\n\nAdina eyes popped open. I actually fell asleep? The back of her neck and chest burned with the intense feeling that someone was watching her. The storm still raged outside. As she carefully looked around, everyone else in the bearcat seemed to have fallen into exhausted sleep. Her heart hammered in her ears, loud even over the storm's vicious howl. There were stories... about things in storms. The storier's wild tales spoke of spirits that rode inside the storms or were awakened by their violence. Some people said they were spirits of the dead, left wandering somewhere after so many died in the ending of the world that used to be. Others said they were something else, birthed from the ruins afterward. But whatever they were, the stories said they stole people or tore them apart during storms. The rational part of Adina's mind told her they were just made up to try and make sense of the disappearances that happened in the wastes, not just during storms. But her body was shrieking that something wasn't right, that something was out there. She was trembling violently as she turned to the truck's armored window. Fear or adrenaline, whichever, made her breathing come fast and shallow. Lightning flashed and she could make out vague shapes in the tempest outside; lumps among the rocks where people huddled under whatever they had, pressed against the rocks, trying to survive.\n\nIt's just a dream. It's just a dream...\n\nThen she saw movement. A silhouette moved from one rock to another, then vanished when the light did. Adina's chest tightened like there was an iron band around it.\n\nIt's just someone moving to check on the others. Probably Omar.\n\nThe darkness seemed to stretch on and on as she waited for the next lightning flash so she could see. The feeling that a face would be right on the other side of the glass staring at her when it did stabbed her belly like a dull knife. She wanted to close her eyes, but she couldn't. Another flash came.\n\nThere was something out there.\n\nIt sidled low along the ground. It could have been part of a thick shelter cover caught in the wind. But it was dragging something behind it. Adina couldn't breathe, the air in her windpipe had turned to a solid object that wouldn't move. She felt her diaphragm push and pull, in rapid, panicked spasms, but no air moved. Tears ran down her cheeks as whatever it was slid along the ground in fitful motions, appearing to struggle against what it was dragging. She could hear the whimpers that escaped her terrified lips, but she couldn't make a sound. And she couldn't move. Her hands shook violently. Then it was black again. Her eyes hurt from the harsh transition and her terrified straining to see anything outside.\n\nAdina woke with a start, her heart feeling like it was in her throat, her breaths coming in ragged, painful drags. The boy in her lap moved to get more comfortable. Everyone in the bearcat was asleep. Adina turned over her shoulder and waited for the next flash. When it came, there was nothing there. It was just a nightmare. But even as she thought it, she knew it was a lie.\n\nIt was light outside when Adina finally clambered down from the driver's side door of the bearcat. She could still feel the terror from the night before like a shadowy hand gripping her shoulder. She'd told everyone to wait inside. All indications were that it was just a storm; no radiation registered on the bearcat's instruments, and there was no evidence of toxins. She didn't want the children to see the scene she saw in her mind's eye. Parents and people they knew scorched and bloody, scattered by the awful storm. Or evidence of what she'd seen the night before.\n\nIt was just a nightmare.\n\nAdina went to where she'd seen it. There were fading marks in the sodden ground. They could have been drag marks. Or they could have been from a hundred other things. She searched quickly to see if there was any other evidence of it. Anger had been brewing inside at her inability to move or do anything but sit there inside the bearcat like a terrified child.\n\nWhat if it was real? And you just sat there and let it take someone?\n\nShe closed her eyes. Asher's voice was in her ear. \"Don't put yourself between the hammer and stone because you're human. All of us fail sometimes. It's what happens after that matters.\"\n\nIt was just a nightmare, she tried to reassure herself again\n\nNot far off, she heard Omar shouting, \"Has anyone seen Fara!\" His voice was hoarse and tired. \"Everyone! Try to find Fara!\"\n\nAdina made her way to him and to her surprise, there were dozens of people starting to move. She didn't see the scorched and battered corpses everywhere that she'd seen so clearly in her mind. But many of them were obviously injured. But they were moving.\n\n\"Omar! How bad is it?\"\n\nHe leaned close to her and shouted, \"What!?\" She could see blood running from his right ear. \"I'm kinda deaf this morning.\" He staggered and caught himself on a rock. Adina grabbed his burly shoulder to steady him. \"Where are Priav and Rafi?\"\n\nHe nodded and slid down to the ground. His expression was pained, distant. \"They're okay. Just wet.\" He grabbed her arm. \"Thank you again for taking care of the children. It's... It was...\" And the big man started to cry. He dropped his head and hid his face between his arms.\n\nAdina fought to keep from crying herself as she watched him crumble before her eyes. She took a huge breath against the tearing pain in her chest and knelt, wrapping her arms around his burly shoulders, pulling herself against him. \"You did good, Omar.\" She put her mouth right next to his ear and spoke loudly to make sure he heard her. \"You did everything you could and probably saved a lot of lives last night.\" Omar just howled, his whole body shaking. Adina rocked him as best she could. \"Shhh... I'll start looking for people.\" He didn't uncover his face. He just shook his head.\n\nFara... Adina shuddered as the image of something dragging someone away into the storm rose in her again. She stood up and looked around in the new morning sun. That's when she saw the first body.\n\nAdina stood in the damaged remains of the camp, looking at the line of bodies covered by multi-colored, salvaged sheets, tarps and shelter covers. Most everyone who stood there was injured. She, Devin and the children who'd been crammed into the bearcat were the exception. Twenty people were too badly injured to walk. Five had died in the storm.\n\nAnd two were missing.\n\nThey were just swept away by the storm... That's what everyone was saying. It was just a nightmare. Adina clenched her fists, trying to force herself to believe it.\n\nThe camp had survived much better than she thought it would. Adina's mind fled to Asher and the survivors.\n\nDid the storm hit them?\n\n\"We have suffered a great loss,\" Priav called loudly in the bright, clean morning air. Adina pulled her jacket closer around her. It was cool and humid in the aftermath of the storm. The ground was still wet but would dry out quickly once the real heat of the day started. \"And we will grieve over it,\" Priav continued after letting her words hang for several long seconds. Rafi stood at her side, seeming as resolute as the white stone bluff above the quarry; serene and certain. Some people sobbed; others just stared vacantly into space. \"But we have also been given new possibilities. Adina and the Myrmidon have rescued fifty-two people from the Ghost Eyes. And I have decided that we will see if they can become part of our family here.\"\n\nThere was a murmur throughout the crowd, people who had been staring suddenly came to life, many who were crying sniffled to a stop.\n\n\"We do not know them,\" Priav went on. \"But we know her.\" Priav pointed to her, her eyes utterly certain. Adina blinked back sudden tears under her unwavering gaze. \"And the Myrmidon. We trust them. They brought me and many of you back after we were attacked. They brought Nat back to us.\" She looked to where Nat stood with Devon. \"And last night, she saved many of our children.\" Priav looked across all the faces. \"And what have they asked in return? Very little. And now, they ask us to help people we don't know. People who need help. Like we have needed help. Which they have always given.\" Tears rolled down Adina's cheeks as Priav gesture around the remains of the camp. \"People we need.\" Priav let her words hang for several breaths again. \"I will go with Adina and meet with the Myrmidon and the survivors. And we will see if we can give them a home here with us. Because what are we? One family. One family that can grow.\" Priav looked at her again. \"I do not know these people.\" Priav inclined her head to her. \"But I know Adina and Asher. And I trust them.\"\n\nAdina turned from the open side hatch of the bearcat at the sound of people approaching. She'd just finished stowing the last of the supplies for she and Priav's trip back to the survivors' camp.\n\nAdina nodded at Devon's bright, \"G'morning.\" Devon approached her, squinting in the sun, Nat at her side. \"I know you're busy, but...\" She ran a hand down Nat's back. \"He... wanted to say goodbye before you left. He...\" Devon's words seemed to run out and after a moment of obvious struggle, she stepped forward and threw her arms around her. \"Thank you,\" Devon breathed over her shoulder. Adina heard the quiver in her voice. \"Thank you so much for...\" Adina felt her gulp. \"Bringing him home to me.\" Devon squeezed her.\n\nAsher's words about contamination from close contact with others rattled through her mind with how nonsensical they felt after having been spattered in blood and bodily fluids from the Ghost Eye's. She returned Devon's hug. \"I'm just glad he's alright.\"\n\nDevon held on just long enough, her hippier, rounder frame and large breasts smashed against Adina, to make it awkward. Like the men's attention, Adina hadn't missed the interest from women as well. Devon particularly. Devon had been obvious about her interest in she and Asher from the first day. Now with Devon pressed against her, parts of Adina heated up. The image of Devon looking up at her from between her legs, her mouth on her mound flooded in. Devon's big breasts thrust out in Adina's fantasy as their fingers explored each other. Devon's soft ass and hips rolled lustily, and she shuddered as her swollen clit slipped between Adina's fingers. Adina could feel Asher's eyes on her as Devon tongued her clit, whimpering while Asher filled her from behind.\n\nWhen they stepped apart, Devon couldn't meet her eyes and she was flushed. Adina suppressed the urge to clear her throat at the fantasies, hoping she wasn't as red as Devon was. Devon wiped tears with the back of her hand. \"Thank you,\" she mouthed again, but no words came out. Devon coaxed Nat to her, and Adina felt the weight of his eyes as he watched her with an uncertain, shy expression.\n\nAdina's heart climbed into her throat. The erotic images of Devon were smashed away by the memory of Nat, filthy and terrified. There were still lingering shadows under his eyes and the bruises around his wrists had gone to yellow. \"I'm glad you're safe with your mom,\" she told him, everything inside her suddenly a storm. She pulled him into a hug and squeezed him reassuringly.\n\nThey just hugged for several long moments before Nat whispered quietly into her hair. \"When I grow up I want to be just like you and Asher.\"\n\nAdina swallowed hard, blinking back tears at his heartbreaking earnestness. She had no idea what to say. She couldn't say anything about the inoculant that made she and Asher so different from everyone else. Adina saw Devon's hand come to her mouth and she started to cry watching them.\n\n\"You just be brave and strong. You were that before we came after you.\" Adina pushed him back so she could look in his eyes. \"And be kind.\" She ran a hand over the side of his face. \"I've seen how kind you are with the other children. And remember, being kind isn't weakness. We came after you because we care, Nat. It's important that you care too. Be strong to protect the people you care about.\" Adina inclined her head a bit to him. \"Do you understand?\"\n\nNat searched her eyes and considered for several seconds. \"I think so.\"\n\nAdina nodded and hugged him again. \"Good.\"\n\nMile upon mile of empty wastes passed the windows as Adina drove the bearcat back along the course she'd taken from the survivor camp. Worry about what might be left after the storm pulled at her. And the image of the skittering shadow was there again. Her skin prickled, a chill running up her back.\n\n\"I... think I saw something in the storm,\" she finally said into the dusty air of the truck's cab. As soon as she'd said it, she wished she hadn't. Uncertainty climbed up her back.\n\nPriav had been staring out the passenger window, watching the wastes roll past, her usual, quiet contemplative self. Priav turned to her and watched her eyes. Adina's uncertainty balled into a tight knot in her belly.\n\n\"What did you see?\" Priav finally asked.\n\nAdina turned back to what was ahead of them. \"There are all those stories of things living in the storms, or out in the wastes...\" Adina shrugged, struggling to say what she really wanted to. \"And then two people were just gone after the storm...\"\n\nThere was a long quiet. Adina could feel Priav's eyes on her without looking at her.\n\n\"Derecho,\" Priav offered into the dusty rumble of the bearcat's cabin. \"I heard people call them a lot of things over the years. Ghasts, Windwalkers, Sand Devils and the like.\"\n\nAdina glanced back at her.\n\nPriav wasn't looking at her, but into empty space as if into the past. And when she continued it sounded like she was talking about a memory. \"People dragged away during storms or in the night. Or being found torn apart with no way to explain it.\" She shook her head. \"It's all bad business.\" When Priav finally turned back, her expression was intense. It was jarring compared to the easy, self-assurance that normally rested there. \"And you think you saw one of them?\" Priav's tone was neutral but struck Adina like an accusation.\n\n\"It was probably just a piece of tarp caught in the wind.\" But once again, as she said it, she didn't believe it. \"Or I could have just been dreaming. Storms like that can make you think all kinds of things.\"\n\n\"They can,\" Priav answered. \"But you don't believe it was a piece of cloth or a dream, do you?\" Priav paused. \"Adina, look at me.\" Her tone had become matronly again.\n\nWhen Adina turned back, she was shot through by sudden realization. This woman she barely knew had become more of a mother to her in a matter of days than any woman she'd known since her mother died when she was nine. She blinked against the burning in her eyes. Priav was the mother Adina wished was hers.\n\n\"What did you see?\" Priav asked, just watching her, so open, undemanding. Just there.\n\nAdina looked forward again, focusing on where she was driving, wrestling her suddenly churning emotions. A few steadying breaths passed before she could say anything.\n\n\"Something skittered along the ground, like a shadow, but it moved... weirdly. Sort of jerky and unnatural. Like I said, it was probably just a piece of one of the shade structures, caught in the wind.\"\n\nWhen she looked back, Priav's eyebrows were pinched together, her eyes narrowed slightly. \"Like it was crawling with legs that... didn't seem like legs?\"\n\nAdina stepped on the brakes at Priav's expression, tone and description, bringing the bearcat to a stop, so she could turn fully to her. \"You saw it.\" Adina just stared at her, relief unspooling the hard knot at her center.\n\nI'm not crazy and I wasn't dreaming!\n\nPriav nodded to her. \"I haven't told anyone. It would only create fear. I saw it take Fara away.\"\n\nAdina's heart hammered madly in her ears as new horror struck. Until now, it had been a fear of seeing something; something that may or may not have been there. But Fara's terror suddenly crashed into her. Adina's mind filled with how awful it must have been; screaming and struggling, fighting helplessly in the pitch-black storm as the creature dragged her away.\n\nAdina groaned, \"They're... real?\" through sudden nausea.\n\nPriav nodded again. \"You doubt yourself too often Adina.\" Priav leaned against the door and pulled a foot up onto the seat, staring out into the scorched landscape. \"Since I was a girl, people told the same stories you've probably heard. We once met a man once who said he knew for certain that they existed. He hunted them.\"\n\nAdina furrowed her eyebrows, the words jangling against each other inside her. They didn't make sense. \"What?\"\n\nPriav nodded, her expression like she was looking back across the years again. \"He had what he claimed were parts of ones he'd killed. And they were unlike anything I'd ever seen. The leather of the skin he showed us was like it was made of sand, it was scratchy and thick. And he had hooked claws and fangs he said he'd gathered from them.\"",
        "\"How could he hunt them?\"\n\n\"He said he could feel when storms were coming, they made his bones ache, he said.\" Priav shook her head. \"Everyone just thought he was a storier with a good act. But I don't think so anymore.\" Priav didn't look at her. She just gazed out the window.\n\nAdina couldn't think of anything to say. I'm not crazy. A few long, silent minutes passed before the feeling that she was going to throw up passed. Then she got them moving again. But the image of what she'd seen was now a constant companion in her mind. Derecho...\n\nAfternoon droned on into evening with little more to do that try and stay awake behind the wheel. Adina went over every detail of the story of the slave camp with Priav to try and uproot the horror of Fara and the derecho from her mind. Priav asked questions, clarified things, but other than that, Priav seemed as lost after talking about what had happened as she was.\n\nAdina's mind wandered to Asher and the survivors again.\n\nWill there even be anyone left to find? What if there was a Derecho? She pushed the thoughts aside, shook her head, and set her jaw. That's not helpful. She blew out a fierce breath. He's okay. They're okay...\n\nFamiliar rock formations suddenly peeked over the horizon and Adina's heart felt like it might leap out of her chest. The highest parts of the rise where the survivors' camp lay slowly came into view. She'd been following thin, whisping lines of smoke along the horizon, praying they were the right ones. Now that she could see the mesa, everything inside her wrapped tight again. It was too high for her to see if the smoke was from campfires or devastation. Please be okay... Please be alright...\n\nCircling the rise, she was rewarded by the silhouettes of people standing on the edge of the mesa. And they were waving.\n\nAdina turned at Priav's hand on her arm. Priav's old eyes were smiling. \"Breathe daughter...\" Priav grinned, and Adina couldn't help but do the same. But as they pulled up the incline onto the mesa Adina's heart seized. Asher walked forward naked to the waist. He was covered in blood.\n\nOh no...\n\nBut as she got closer, she could see he was smiling, his bright teeth standing out against his filthy face. He raised a burly arm, his tattoos showing from beneath all the red and brown as he waved to her. He wiped his hands on a cloth that was as filthy as he was.\n\nAdina was climbing out the door of the bearcat before the engine had finished chugging. She never got to the ground. Asher scooped her off the steps, clamping her in a fierce embrace.\n\nHe smelled. Old blood, sweat and machine oil combined in a musty stink that filled her nose. And she just didn't care.\n\n\"Earth and sky! I was so worried!\" Adina hadn't even realized she'd started to cry until she drew in a shuddering breath. He pulled her tight against him and she just let herself be squished.\n\nShe felt the pressure of him kissing her head, his words filtering through her dark hair. \"I was afraid you'd been caught in the storm.\"\n\nAdina shook her head. She couldn't say anything. She felt her feet touch down and lifted her face. His lips met hers and everything inside her felt like it caught fire. She wrapped her arms around his neck and kissed him urgently. She tasted the blood and finally pulled back, her eyes roving up and down him. It had only been a few days, but she was amazed by how big and handsome he was, even filthy.\n\n\"What happened? What's all the blood?\"\n\nHe smiled and nodded over his shoulder to the camp. \"The storm drove a whole herd of boar onto the mesa.\" He peaked an eyebrow at her, and she could nearly bathe in the fierce joy that poured off him. \"After the initial... surprise of their arrival.\" He grinned with the same manic energy he'd had during the hunt that felt so long ago. \"We were able to take most of the herd down.\" He stopped and just stared at her like he was drinking her in. Everything about him seemed to quiet as he stood there. Then it was like his brain restarted. \"The ones we didn't get, ran themselves right off the edge on the west side.\" He held up his arms, showing off his filthy torso. \"We've been making meat for two days.\" Then he glanced past her. Adina followed his gaze. Priav was coming around the front of the bearcat. Adina saw the corner of his mouth come up out of the corner of her eye. \"Nice to see you, Priav.\"\n\nPriav settled her lever action rifle in the crook of her arm squinting at the two of them, then nodded to Asher. \"You look... unsurprising, Myrmidon.\"\n\nHe chuckled. \"And you're a sight for sore eyes, Priav.\"\n\nPriav smiled, a wise and certain expression. \"I know. I am a vision. Radiant and irresistible.\"\n\nAsher's arm closed around Adina's ribs, and she looked up into his bright lapis-colored eyes. He smiled widely. \"I knew you could do it.\" Adina's chest felt like a balloon that inflated at his sincere, certain confidence in her. He flicked his eyes back toward camp. \"Lew-Lew thought fresh meat and hides might sweeten the deal with the Quarry.\" Then he stopped again, just watching her as if memorizing every detail. \"I've missed you.\"\n\nAdina's smile felt like it might break her face, the expression feeling lopsided and uncoordinated, like everything else inside her at that moment. \"Me too.\" She pulled him down for another kiss. Holding her lips against his, she smiled, trying to kiss him and talk at the same time. \"Really bad!\"\n\n<p align=\"center\">****</p>\n\nThank you for reading Guns and Dust Chapter 11! In case you are unaware, reader ratings drive everything for writers here on Literotica, so please rate my story (hopefully 5 stars!).\n\nThe amazing journey of Guns and Dust would not have happened without you and your encouragement. And all I can say is THANK YOU once again!\n\n<p align=\"center\">****</p>"
    ],
    "authorname": "Kieran_Lancaster",
    "tags": [
        "post-apocalyptic",
        "female orgasm",
        "multiple orgasm",
        "love",
        "younger woman",
        "exhibitionist",
        "older man",
        "fingering"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/guns-and-dust-ch-11"
}