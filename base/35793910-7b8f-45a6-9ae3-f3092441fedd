{
    "title": "Androshorts: The Village Witch",
    "pages": [
        "He wasn't actually told 'don't go near Ella' but it was pretty much as near to that as possible. His landlady had told the thirty three year old school teacher that 'her down Traitors Lane' with the emphasis on 'HER', was trouble and he could see his new neighbours and numerous other villagers looking down their noses at the beautiful woman when she, very occasionally, passed by.\n\nHe sat in the pub below his room on that Saturday morning eating a Full English Breakfast and sipping at the pint mug of tea they had given him to go with it. The TV was showing sports but with the volume turned down, but he could read the subtitles having the occasional grin when the robot doing them got the discussion wrong because of the pundits' broad accents and West Ham's new midfielder became the London teams new 'wildfowler'.\n\nHe finished his meal and took a long draught of his tea, this was a very nice way to spend a Saturday morning and no mistake. \n\nHe had been selected to come along to the tiny four class primary school in this remote Gloucestershire village by the county's education service seeing as he was a bit of a rising star and due a deputy head's job anyway, plus they liked that fact that he had previously been an auditor. Part of his job was to quietly crawl over the school's finances with a view to closure and bussing the seventy or so 4-11 year olds the five or six miles to the nearby town and the under-subscribed school there. \n\nHe had to consider the cost of buses, drivers and diesel in against the money the county could make selling the site for development.\n\n\"But surely,\" he said, \"You sell the school and build more houses and you'll need a school?\"\n\n\"You let me worry about that,\" said the interviewer.\n\nThe older lady that interviewed him was very specific about what was needed and no way was anything cut and dried and he would still need to do his sums, learn about the community and report on what he found and make his decision based on 'facts'. He'd never met her before which was strange', he'd met most of the senior managers and the top politico's; her manner, age and dress soon told him she was an elected councillor before he saw the gold edging to her name badge hidden under her scarf that announced she wasn't 'staff'.\n\nTo his shame though the thing that stood out most about that day was her broad rural Gloucestershire accent and the savage looking scar on her right cheek that he tried so hard not to look at. That and the foul tasting green tea she had made him; shit but it was nasty, \n\nShe saw him flinch after his first long sup, \"Get it down you,\" she said, \"it's great for getting rid of those bags under your eyes Mr Clements, and it'll make you a big strong boy, and that's something I need you to be for this job.\"\n\nAnd seeing as this weird looking woman was important in him getting the job, he gritted his teeth and finished it. \n\nHe was there to possibly close down the school, and while he wasn't looking forward to that bit, after his last three years in an urban war zone that survived on government grants and benefits payments, he decided that he would spend a good year or so enjoying the country life before making that particular decision. His interviewer had been very specific about that too.\n\nHe decided to buy a place in the village seeing as the pay was one and a half times what he was earning previously. His search had been unfruitful, but eventually he was approached by the local estate agent who discussed some large town houses that were unaffordable in the current market as they stood so were being split as upstairs and downstairs flats. He could buy one, live in one flat and rent out the other. He decided he would do just that, and would live in the upstairs flat with a converted loft, and view of the village green across to the pub he was currently lodging in and in the distance his school. He could sort the downstairs flat at his convenience.\n\nEven undecorated it looked like paradise compared to his flat in the city, with its two locks, chain and double locked windows even on the first floor.\n\nBefore house hunting he'd checked the police reports and other than the occasional speeding ticket, crime or any major disorder was pretty much unheard of in this village that seemed straight off of the front of a chocolate box.\n\nThe sale of his last flat had been really quick and meant that he could start at his new school much earlier than had been suggested, the county was even paying for his stay at the village pub until his new place was ready, after spare rooms and sofa surfing and the tiresome commutes had almost put an end to his desire to work there. \n\nWithin days of driving here with a rented box van full of his furniture and possessions currently packed into the completed loft room of his flat, he was completely under the spell of this funny little village and its funny people who seemed to go through life like the outside world (except for soaps, TOWIE, The Kardashians and Manchester United) didn't exist. For them the planet consisted of farmers, people that worked for farmers, people that looked after farming families and little else. The tiny children he taught all had a strange and slightly disbelieving look when he told them about his previous school in the big city,\n\n\"What?\" their cute little faces seemed to say, \"so you're saying there's... like... somewhere else?\"\n\nIt was a really great place and he figured his place would be a good investment even if he did end up shutting the school... eventually... there was no rush after all, the politician had been very clear about that and he was looking for ways to stretch his investigatory year out to eighteen months. \n\nAround the outskirts of the village were lots of barn and stable holiday home conversions that were opened up in time for Easter weekend and closed in October as this village was 'in the heart of the Cotswolds', and the outrageous weekly rents would pay the quite low mortgage easily if he had to move back to the city.\n\nHe sipped more of his tea and looked around him, he couldn't move in as the conversion was taking the local firm of builders much longer than they had quoted for to finish the work so was living in the pub weeks longer than he'd figured for and this was the end of his first month actually living in the village. \n\nThe great food here was making it so much easier to put up with the inconvenience mind you and this chilly Saturday was no exception.\n\n\"Good Morning Dan,\" said a female voice in the rich country tones the teacher was starting to get so used to, and there she was.\n\n\"Well Good Morning Ella!\" said the barman, \"usual Luvvie?\" She nodded and he continued his reach behind him for a long glass and pulled a half pint of the local strong beer. She paid him with a smile, took her drink and moved across the bar to the inglenook fireplace and sat, dipping into her large handbag and drawing out the local newspaper flicking it open to the first page. \n\nShe was dressed as she normally was, always in a long dress, sometimes with smocking, loose fitting, but still hinting at what lay beneath. He only saw her very occasionally and she always had what his father called the that slightly far away, incense burning, vegan, 'hippy' look. But then she did run the alternative lifestyle, health food shop in the village and always seemed to have either customers or the post office collecting or delivering.\n\nThe teacher looked across at her and smiled, raising his mug of tea. She raised her beer glass, and tilting her head slightly smiled back to him. She was stunning close up!\n\nHe guessed she was somewhere between mid-twentysomething verging on early thirty-something, her dark mahogany brown hair that looked just washed hung around her pretty heart shaped face framing it to perfection.\n\nHe tried to guess if she was older than him -- if so it was not by very much and the more he looked at her the harder it became for him to guess, but he just as quickly thought 'fuck it' and decided to find some way he could go across and make conversation with her. She smiled back at him and drowsily raised her eyelashes with some level of inquisition as if she had read his mind. \n\nHe saw she was working through the paper and her beer, and he went back to the erroneously dubbed BBC News 24 and his smart phone with occasional looks to see if she was looking to see if he was looking at her.\n\nAfter fifteen minutes she looked over her shoulder with a raised hand towards the barman.\n\n\"No, let me,\" he said. \"That's a half of Poachers isn't it.\"\n\n\"Yes,\" she beamed a smile to him, \"that would be very kind, thank you.\"\n\n\"Two halves of Poachers please,\" said the teacher walking to the bar with his now emptied plate and mug. He took the two glasses of beer back to the table by the fire, and sat across from the stunning brunette, close but not too close. \n\nDespite what the landlady had said about 'that woman' there just had to be a 'him' to 'her' as when he looked at her he saw the classic busty British country girl and he just knew that at home on the farm, smallholding at the very least, she had a couple of black Labradors, green Hunter wellies, a green Barbour jacket, a matched pair of Purdeys and was married to someone called Henry that had been to agricultural college.\n\nHe looked and thought that she was just perfect but the image of country beauty could only be improved by slightly more pouty lips.\n\n\"Hi, I'm Steve Clements. I'm the new deputy head at the primary school, you aren't one of the Mums are you.\"\n\n\"No,\" she said in the deep country girl voice of hers, \"I'm not married. I'm Ella by the way.\" She held out a hand. He took it.\n\nHe sipped some of the beer, \"This is a very nice village,\" he said.\n\n\"Yeah for some people,\" she replied, \"being the single thirty something that lives on her own I tend to be a bit of a black sheep.\"\n\nSo she was thirty something like him and there wasn't a big husband called Henry that had been to agricultural college at least.\n\n\"I'm sorry,\" he said and thought back to what the landlady of this very pub had said about the girl down in the village in Traitor's Lane.\n\n\"Small village,\" she said, \"you get used to these things after a while. I'm guessing that cow of a landlady of yours warned you about me?\"\n\nHe couldn't hold back his grin, \"How did you guess?\"\n\nShe grinned, \"It's a reeeeeeaally long story.\" She sipped some more of her beer and put down the glass. In doing so he saw her pretty face in profile. Yep, those lips could do with just the tiniest amount of pout, other than that...\n\n\"I guess you were born and raised here with an accent like yours Ella?\"\n\n\"Yes, lived here my whole life,\" she looked around the bar, \"know everyone and they know me, at least they all seem to think they do.\"\n\n\"It could be worse trust me,\" he said and waxed lyrically and with some self-deprecating humour about his former workplace and home and the number of times his car had been damaged or broken into, the threats on his life by his pupils and on occasions their parents.\n\n\"Well,\" she said with some surprise, \"at least we don't have that problem.\"\n\nThey sat and talked for half an hour having another beer and getting to know one another, throwing another log on the fire as they did do. The school teacher and his amateur psychology noticed that she had turned to face him, and had crossed her legs towards him, guarded but not overly so, her eyes were wide open and her smiles were big and genuine and she was completely focussed on him. A good sign. \n\nShe ran her shop and did quite well, took it over from her grandmother that had cared for her after her parents had passed away when she was young; mother from Cancer, father shortly afterwards but with no suggestion of a cause.\n\nHe was an urban schoolteacher and this was his first go and small village living. His parents still lived in his home town and were looking forward to coming to stay in his spare loft room should the builder ever get the bloody place finished.\n\nThey were clicking, no two ways about it. The bad sign was her looking at her watch every five minutes then staring over her shoulder as if she was waiting for someone. But no one came and she did seem to relax some more.\n\nShe grinned what must have been the hundredth real but guarded smile at him and played with her dark hair and he was about to suggest a date, when the door burst open and three big lads in shorts and rugby shirts under the green Barbour coats walked in, their studded boots clattering on the flagstones that must have been hundreds of years old. The woman's shoulders slumped in disappointment. Perhaps one of them was the person she was waiting for, but if she WAS waiting for him, she didn't seem that pleased about his arrival.\n\n\"Mornin' Dan!\" said the first resting his meaty forearms on the counter, \"Three pints of Poachers please!\"\n\n\"You boys ain't drinkin' 'fore the match are you?\" said Dan with a chirpy but still marginally admonishing tone.\n\n\"Oh come on Dan,\" said the second, \"just a couple to get us in the right mood!\" He slipped off his coat dropping it over an adjacent bar stool.\n\n\"Before a match?\" said Dan still in shocked confusion.\n\n\"Only playing some half-arsed bunch of pretty boys from the University,\" said the first, \"could kick their arses all over the field pissed as farts that's for fucking sure!\" He took a long pull from his pint almost sinking the whole thing in one go.\n\nHis two team mates laughed and did likewise. \"My round,\" said the second while the third belched loud, long and rich.\n\n\"Now then fellas,\" said Dan, \"let's behave like grown-ups shall we?\"\n\n\"Why?\" said the first clumping his glass before the Poachers pump and looking challengingly down the bar.\n\n\"Because you ain't my only bloody guests, that's why!\" He nodded towards the fireplace where the teacher was sat with his stunning companion, and another two couples around the corner.\n\n\"S'only Ella,\" said the second dropping a twenty pound note on the bar contemptuously.\n\n\"Ella and 'er latest screw!\" giggled the first. He turned, leant back against the bar resting his elbows on it.\n\n\"Drink your beer and bugger off,\" said Barman Dan sternly, \"that ain't funny!\"\n\n\"Awww you love it Dan,\" said the first again, then added, \"So does Ella!\"\n\nThe three friends all burst into gales of loud but clearly forced laughter.\n\n\"Beer! OUT!\" snapped Dan.\n\nThe three giants picked up their pints, raised them to each other then started to drain them as they had with their first.\n\nThe clumped the empty glasses down, the third giving a second, loud rip-snorting belch in contempt of the landlord and the other customers. The first looked down the bar to the seating area and the half dozen uncomfortable patrons sat there. He saw Ella and her male companion, stopped as if a sudden resolution had come to him, pushed himself up from the bar and walked towards them. He looked at Ella, and gave her an up and down appraisal that even the teacher could read as undressing the beauty with his lecherous piggy eyes. \n\n\"Ella,\" he said, changing his posture to look down his nose at the teacher.\n\n\"Henry,\" said Ella, a forced smile on her lips.\n\n\"Who's this?\"\n\n\"And what precisely does that have to do with you?\" said Ella challengingly.\n\n\"Just want to make sure that the interloper 'ere knows what he can and can't do in the village, and who he can do o'course...\" Henry the giant looked the teacher up and down with an air of contempt.\n\n\"Interloper Henry?\" said Ella, \"That's a very long word isn't it -- did someone you help learn that? Guess they didn't teach you that at agricultural college.\"\n\nThe teacher narrowed his eyes at his previous fortune telling -- fucking what?\n\n\"You got a problem new boy?\"\n\n\"No,\" said the teacher standing and extending a hand that the farmer ignored, \"I'm Steve...\" Now being stood up, Henry didn't look half as tall or imposing as he had at the bar. Not breaking eye contact he could hear Henry's mates' boot studs scratching the flagstones closer to him.\n\n\"We all know who you are,\" snarled Henry, \"you're the 'otshot pretty boy the county sent down 'ere to close our school ain't yer, we all went to that school...\" he indicated his mates behind him.\n\n\"Try Deputy Head, I'll wave my hand for that one.\"\n\nThe teacher had cut his teeth teaching the worst pupils in the worst inner city schools where many of the parents were more argumentative and way more confrontational than their pre-pubescent offspring and, even though he said so himself, he could stare down a fucking rattlesnake. \n\nShould it come to it he had more than half a dozen notches on his belt where it had come to fisticuffs and he'd needed to defend himself from idiot parents only marginally more literate than their idiot spawn who thought they'd 'have a go with that nice Mr Clements' -- mostly for not saying what they wanted to hear, even daring to suggest that they had a part to play in their childrens' lack of education as well as him. \n\nThere were always witnesses that saw him 'being attacked' of course and he'd never got in the shit for the four black eyes and one broken nose he'd inflicted on his attackers both male and female, and he'd gained quite a reputation which, on reflection, was probably why the county had sent him out here to the back of beyond -- but he wasn't complaining. The teacher sucked his teeth and for added impetus looked at his watch. Henry obviously wasn't used to this kind of confrontation and didn't like it one bit. Ella actually looked impressed for the first time.\n\n\"Well...\" he swallowed and caught his breath, \"we... we all fucking know about you, and our Ella's trying to get her slutty 'ands on yer... eat yer for fucking breakfast so she will.\"\n\n\"Now then Henry,\" said Dan the barman. Henry turned and there was Dan flanked by two Policemen. \n\nNone of the quaint, St Mary Mead village Bobby on a bicycle shit so redolent of Miss Marple episodes, these were giants with black 'police' wicking nylon clinging to their bulging arm muscles, their body armour dripping with the paramilitary affectations that even the most basic patrol officers needed to wear these days, both with bright yellow Tazers across their chests.\n\nSteve the teacher took one look and with his time in the big city knew that these were firearms officers and chances are they happened to be the closest team to the pub with the fastest car when the barman called in on the walkie talkie radio now peeking out of his pocket.\n\nHenry made a 't-ttth' sound and with a sneering upper lip turned and pushed between policemen and barman, grabbing his jacket from the bar stool.\n\n\"Off to the match lads,\" he said taking a sip from an empty glass to prove that it was because he could rather than needing to, \"lots of pretty college boys there we can play with; p'raps Ella might want to come over with her bandages and herbal shit and patch up after. She obviously likes pretty college boys.\"\n\n\"Bye Henry,\" said Teacher Steve, with just the faintest hint of a challenge.\n\nThe two other farm boys did likewise, grinning idiotically at the teacher and the beauty, flanked by Policemen as they now were. The door clunked behind them.\n\n\"Sorry about that ladies and gents,\" said Dan to the other guests, \"sniff of the barmaids apron and these bloody kids get all up themselves.\" The barman grinned, put a hand to each of the policemen's shoulders, \"tea or coffee for you boys?\"\n\nBoth men said 'coffee' specifying milk and/or sugar as they felt appropriate. \"Are you OK Miss?\" said the first policeman chatting to Ella. She nodded.\n\n\"Yeah,\" she said, \"Henry's a bit of a local knob, especially when he's had a pint or two.\"\n\n\"We'll just take some details then Miss,\" the first policeman couldn't seem to take his eyes off of her.\n\nBoth Policemen sat down and Steve realised that he was of no further interest to this discussion and stepped out of the way so the second policeman could sit and stretch his legs out on the seat that he had previously occupied. Taking his details seemed to slip their minds as that sat and chatted with Ella, notebooks totally absent.",
        "Ah well, perhaps not. The teacher took his glass and finished his beer, stepping up to the bar and looking back of his shoulder. He was taken aback for a moment when the look he got from Ella suggested that perhaps she didn't want him to leave.\n\n\"S'cuse me Mr Clements,\" said the barman moving through with a tray with two coffee's for the policemen and a small pot of tea for Ella.\n\nSteve placed his empty glass on the bar and checked back for 'the look' from Ella but she was now talking with both policemen. He thanked the returning barman for the excellent brunch and great beer and headed for the door and the small village he was still trying to get his head around.\n\n\"Sorry 'bout that Mr Clements,\" said Dan from the bar, \"I think there must be some sort of history between them two, whenever they are in a room together, bloody sparks fly, no two ways about it.\"\n\n\"Well if she didn't dress like a tart and make goo-goo eyes at every bloke that comes within sight of 'er, it wouldn't be so bad,\" came a grumbled comment from the kitchens. It was the lady of the house still warning the teacher about 'her'.\n\n\"Now then Dorothy,\" said Dan, \"there's no need for that kind of talk is there.\"\n\n\"T'choh,\" snapped Dorothy, \"bloody men.\" She breathed out with an over-loud exhalation designed to travel, \"someone else under her bloody spell no doubt.\"\n\nDan stepped behind the bar and into the kitchen to remonstrate with his wife and teacher Steve was sure he heard Dorothy suggest that 'She' should be banned as they didn't need her sort coming in here and starting fights. Concerned that it might have been for his benefit, the teacher opened the heavy door and stepped out into the chill of Autumn's slow handover to winter, his breath misting before him. \n\nStrange; as he pulled the door closed behind him looking at the still bitching Dorothy he looked down the exposed timbered bar towards the fireplace he reflected that Ella had hardly been dressed like a tart, quite the opposite in fact, and to his certain knowledge hadn't made goo-goo eyes at anyone, especially him.\n\nHe walked across the small square centred around the granite war memorial that held names of the village's menfolk that had left to fight for their King and Country and hadn't returned. The central cross had the names of those that had gone off to France and Belgium in the Great War, and a plinth had been added to record those that fought twenty years later in the Second. A brass plate beneath had names of two soldiers of the 'The Glorious Gloucesters' killed in Korea, another in Northern Ireland and a fourth in the Falklands. \n\nHe sat on a bench still surrounded with the red wreaths laid there almost a year before and the dozen or so small wooden poppy-surmounted crosses with sun faded writing on them stuck around the edges of the well managed flower bed, there for the purpose.\n\nHe thought of the gorgeous woman back in the bar and fought the urge to go back in and see her and ask her out to dinner. He thought about the warnings from his landlady, the derogatory words from the three rugby playing idiots and didn't -- there would be other Saturdays. Instead he decided to go into the local shop, buy another of their wonderful home baked fruit cakes and retire to his laptop, Netflix and several mugs of tea.\n\nIn the shop he found that they had 'just sold' the last fruitcake, so he took a pack of fruit shortcake biscuits, a pale imitation of the original but it would have to do. At the counter he met his boss, School headteacher Linda, corralling a group of young boys all wrapped against the cold and getting a selection of snacks to consume while watching the rugby match.\n\n\"You coming?\" said Linda.\n\n\"I wasn't planning to,\" he said, not wanting to say that a fifth of the team had just been ejected from the pub by the police because of his interest in the local 'good time girl'.\n\n\"Come, it'll be fun!\" she said, then she looked at him and whispered, \"Good chance to meet the community. My son is playing in the opposition, he's wing three quarter for University of Gloucester.\"\n\n\"I just heard some of the local boys in the pub boasting about what they were going to do to the opposition.\"\n\n\"Yeah, that's standard for the village; the Young Farmers Club are good against other young farmers clubs, but I think this might be a bit different. To be honest most of them aren't that young.\"\n\nSo Henry and his giant mates were going to get their arses kicked were they? Steve decided that he would go to the match, that would be good to watch. \n\n\"You all know Mr Clements don't you!\" said Linda to the boys. More than half of them nodded and he recognised them from school. Steve noted that Linda's children, two rather precocious boys, didn't attend the school she was in charge of.\n\nHe followed on, chatting with Linda who talked about her son studying International Politics at UoG and what he hoped to do thereafter. In the Young Farmers Club car park, was an 89 seater coach and it was obvious that the opposition had brought some support.\n\nThrough the gate and a two pound entrance fee, and there was the rugby pitch with several of the home team stretching and running on the spot, with more appearing from the changing rooms including the three from the pub not half an hour before. They were all big lads, perhaps slightly overweight and Steve did feel for the opposition as they trotted out of the 'away team' door and onto the pitch.\n\nThey had their own selection of big lads to be fair, but quite a few much smaller lighter lads that Henry and his mates were planning to take their revenge on. The crowd cheered for both teams and Steve hoped that this wasn't going to get unpleasant just because of him and his lunch companion.\n\nHe needn't have worried.\n\nWhat the University Students lacked in age, bulk and maturity they made up for in speed and agility. Within thirty minutes of the first whistle, the young farmers were working hard to catch up with their younger opponents and were three tries, two conversions and a drop goal behind, not having a single point on the score card yet. To make it worse eight very pretty, curvy, uniformed university cheerleaders were bouncing about on the touchline doing a victory dance for every score. The young farmers gave of their best and minutes before the half time whistle eventually made it onto the scorecard with an excellent drop goal from the village's full-back that had run forward with the ball like an angry express train, driven by his raging goal-line impotence at his colleagues lack of success.\n\nDuring half-time the teacher got teas for himself and Linda and chatted with more villagers and some of the University fans. It was extremely good natured and this continued into the second half and a couple more tries and conversions from the UoG and a further drop goal, then a try and conversion from the young farmers obviously re-invigorated by the fifteen minute break and, Steve guessed, an almighty bollocking from the team coach now running the touchline and howling advice at his big heavy lads, outclassed by their sprite, spirited 18 -- 22 year old opponents.\n\nThe final whistle blew and thirty men stopped running and watched as the referee pointed to University end indicating they had won. The applause was unanimous and big, tired but smiley faced players shook hands, patted backs and congratulated each other on a great match. The crowd moved onto the pitch to greet their own loved ones among the teams and this included Linda hugging her nineteen year old son Simon that had one try and one drop goal to his name.\n\nHe saw big Henry grinning and shaking hands with his opposite number and complemented him on his play. There was none of the aggression and 'they're gonna get it' the pre-drinks in the pub had suggested and it was a very pleasant, positive bonhomie that Steve had always associated with rugby over the stroppy, bad tempered, 'ungracious in defeat' soccer players he'd seen so many times.\n\nSo much so that when Henry appeared and took the slim Simon in his arms and gave him a bear hug, he thought he should step back in case there was bad feeling, but Linda wouldn't let him.\n\n\"This is Henry, he used to babysit Simon when he was younger!\" she said.\n\n\"Taught me everything I know!\" said Simon.\n\n\"And now you use it against me you little hooligan!\" he grinned, turning to take Steve's hand, \"I met Steve in the pub, not that he could see much of me over Dorothy's full English he was working his way through.\" They all laughed.\n\nNo mention of Ella, the two policemen and the words and the standoff that they'd shared, and not a suggestion of bad feeling. Ah well, just 'village life' he supposed.\n\nNext they were all into the Young Farmers Club and tea and sandwiches, except for many of the young girls who were outside on the field and an impromptu cheerleading lesson from all the highly animated young university women. The various players reappeared, showered and changed into more reasonable clothes and the party started and Steve was picked up and swept into it, the three men from this morning were more than nice but not overly so, and it was almost as if the events in the pub had never happened. He eventually made it to his bed slightly bleary eyed, for eleven thirty that night.\n\nHe slept well, his dreams disturbed by visions of the beauty he'd shared a beer with. When he woke he still had clear visions of her in his head dressed in black underwear - lacy, underwired, suspendered and he masturbated away his morning erection as he showered. He walked downstairs to the pub but was disappointed that his brunch guest from yesterday wasn't there. He had the huge Sunday dinner, piled high with roasted potatoes, veggies, three kinds of meat disappearing under the kind of gravy he had only previously dreamed of.\n\nSince living in the pub for four weeks, his work trousers and jeans had started to feel tighter so he decided that he should at least attempt to walk off his vast lunch, especially the two helpings of golden syrup sponge and custard he had demolished. He crossed the square and saw that all of the shops were closed except for the tiny grocery come newsagents that never seemed to close ever.\n\nHe struck out and decided he would follow the small stream and head out towards the long distance national footpath that the all local road signs seemed fixated with. He walked and came to the local park which an interpretation board announced was the site of Holborrow Hall, once home of the local gentry and destroyed by fire in the late 17th century. As he walked he saw the lumps of stone and wooden stakes that indicated where the boundaries and rooms of the structure that had stood there, with pictures showing what it would have looked like with the stream that was the building's water source and drove the next door mill, also now gone.\n\nThe stream carried on and he followed it, getting almost into the countryside proper. The views were exquisite as the rays of the autumnal sun fell across the landscape picking out the last yellows and browns of that dying season.\n\nHe followed another national trail sign knowing it would shortcut him back to his village and his bed, some more tea and the fruit shortcake biscuits he had bought the day before that sat untouched in his room.\n\nFortunately for him the very last sunrays clipped the sign that indicated the route back to his village, but in tiny words, as if the route signer really didn't want anyone to leave the national trail. He found the slightly overgrown track, which seriously needed someone with a brush cutter to pay a visit. Before him the lane opened out and there before him was a street name plate 'Traitors Lane'.\n\nThanks to his education and both of his professions he was a grammar Nazi, self-confessed, and watched the sign for a few moments mentally abhorring the lack of an apostrophe, debating with his inner vandal over whether he should return the next evening with a permanent marker and add one, but how many traitors and which side of the S?\n\nHe giggled but continued his walk just conscious of buildings to his left.\n\n\"Surely there's nothing that funny in my sleepy little drove Teacher Steve?\"\n\nHe looked to his left and there she was, the hot woman of the day before wrapped against the cold weather, the fur of the coat's collar brushing gently against her neck and pink cheeks. \n\n\"Ella!\" he said trying not to seem too over pleased to see the extremely attractive woman he had actually dreamed of the night before... and then some, \"it's the school teacher in me I'm afraid...\"\n\n\"Aah!\" she smiled back at him, \"this must be an apostrophe moment?\"\n\n\"Thank heavens it's not just me!\" he slowed his pace and dropped in next to her as she walked towards the village, \"I suppose that's a bit of a village talking point.\"\n\n\"You'd think so wouldn't you,\" she said with a hint of derision in her soft voice, \"but sadly no, you'll find you're among a tiny minority that could be counted on the fingers of one hand, a hand with two fingers missing; as we get closer to this end of the lane you'll see to add insult to injury, this sign has one.\"\n\nAnd so it did. He stopped and checked it out, running his finger over the shape so he could recreate it with his permanent marker one dark evening.\n\n\"Oooooookay...\" said the teacher, \"that's weird but this is a small village after all.\"\n\n\"The addition to our little trio is a weekender resident that teaches at the college and it drives him potty. He's been nagging the local council so much that the man from the highways department refuses to talk to him anymore. He's called 'the professor' and does actually look like one, completely potty of course but in a nice way.\"\n\n\"I was thinking about coming back with a marker pen...\"\n\n\"The man from the highways department has thought about that too; the countryside rangers that check the pathway every few months bring special wet wipes and take any little unauthorised additions off.\"\n\n\"But... I'm guessing that this is the lane of THE traitor... singular?\"\n\nElla looked thoughtful for a second, \"Indeed it is... or was I suppose,\" she forced a smile, \"I'm a socialist atheist with a streak of anti-monarchist, much like the former resident I suppose, but I deny that makes me ANOTHER traitor therefore making me and him plural.\"\n\n\"Absolutely,\" he said, \"so therefore it needs an apostrophe...\"\n\n\"The council have said that because of cutbacks they aren't going to replace an expensive sign for the want of a single dash.\"\n\n\"But they'll send a 23 year old environmental science graduate down here in a green Gortex coat and walking boots and on minimum wage, six times a year to make sure no one else does.\"\n\nElla beamed a smile at him, \"I see you've met the Enviro-Stasi!\"\n\n\"The type Ella, not the people in question,\" he returned her smile. This was nice. \"I'm heading back to the pub, care to join me?\"\n\nShe grimaced, \"Dorothy has a problem with me,\"\n\n\"So I saw, would you like to come up to my room?\" \n\nShe grinned. \"Why Steve, I hardly know you!\"\n\nHe gulped, hearing how he must have sounded, \"No!\" he spluttered, \"just for tea and biscuits! I didn't mean...\"\n\nShe put a hand to his shoulder laughing, \"I'm joking with you mate,\" she said, \"I guessed that's what you meant!\" For that briefest moment and through several layers of clothing her touch felt electric.\n\nHe wiped a hand across his face dramatically and breathed out. \"Phew!\"\n\nShe paused and seemed to come to a decision, \"I'm just heading to my shop, come in - I'm sure I've got a packet of biscuits somewhere!\"\n\n\"OK!\" he said and offered her his arm to take on the uneven surface, even though she had probably walked it every day for most of her life. She smiled and slipped a hand onto his arm; a simple thing but he was surprised by her response -- a beaming smile that altogether lit up her pretty face, already lit by the rising moon. She pushed up close to him, closer than he'd expected at least.\n\nThe second he felt the warmth of her body against his the silence was broken by the loud air-horn screeched honk and over-revved growl of a quadbike that appeared from behind them.\n\nBefore he knew it he felt something soft on the front of the bike gently pushing into his hip, Annoyed, he eased Ella to one side before turning back and blocking the pathway, the rider revved the engine, \"You got a licence for this?\"\n\n\"What's it gotta do wiv you?\"\n\n\"Because, my rather excitable friend, this is the public highway and for you to be on that -\" he pointed at the bike, \"on this path you need to be licensed and insured, and the quad needs an MoT test certificate, you got any of those?\"\n\nThe rider, his face hidden by the full face crash helmet, still managed to look confused.\n\n\"And you see that sign up there?\" The teacher pointed up to the end of the sign post and the circular sign outlined in red with a stylised motorcycle above a car, \"any ideas? No? Contrary to popular belief it isn't 'beware flying motorbikes' - it's 'no motor vehicles' my old mate and that includes this.\" He patted the handlebars, \"I'd hate for the police that were in town yesterday lunchtime to see you and impound this and crush it before your Dad even realises it's gone...\"\n\nThe teacher noticed a significant gulp in the faceless young man's throat and the quad had three-point turned and was off back along the track and gone from sight.\n\n\"The delights of working with the police on a regular basis!\" he grinned at her shocked and pleasantly surprised face. She slipped her hand back around his arm and carried on walking, close again.\n\nShe led him to the small parade of shops in what had to be a part of the original architecture and he saw one right in the middle -- Rosie's - and various adverts and slogans that indicated that her business was healthy lifestyle stuff and herbal remedies, vegetarian, vegan and gluten free foods and that sort of thing were available. She took a huge bunch of keys and unlocked the door. \n\nA step inside and his senses were struck by a myriad of different smells none of which he was able to identify.\n\n\"Wow!\" he said, \"that smell is amazing,\" he breathed in through his nose.\n\n\"I should hope so, people pay top dollar for it!\"\n\n\"What?\"\n\n\"Our little village is on several coach tour routes and I often get half a coach load of little old ladies and their suffering husbands in here buying something because the smell reminds them of their childhood.\" She stroked her hand down a shelf load of small brown bottles all with printed labels, 'Rosie's lotions and potions' with space under for the handwritten name of the concoction within. She took down one and handed it across to him; the label said simply 'Scented oil - Grandma's house' and he unscrewed the cap. He took a sniff.\n\n\"Well bugger me, it does smell like my Nan's house!\"\n\n\"Took me years to get it right and it only works with a certain age group, sell less of it each year.\"\n\n\"Target audience dying?\"\n\n\"Precisely,\" she grinned, \"I do get a bulk order each year for an aerosol version, it's one of those living history museum's with the recreated houses. Do two hundred bottles a year just from their museum shop,\" he sniffed again, closing his eyes in pleasant recollection, \"It's a blend of granny based floral perfume smells, some cooking ingredients.\" She folded her arms and leaned back against her counter, the edge pushing into a nicely shaped bottom made clear by the tightening of her dress, \"see if you can detect my secret ingredient!\"\n\n\"Challenge accepted!\" \n\nHe breathed in and closed his eyes again, there were the sorts of things she had already mentioned.\n\nSmells of perfume, baking, something else... he couldn't quite put his finger on it. He breathed out again taking a moment to think about the other sorts of things his Nan would get up to. \"You haven't put a Labrador Retriever through a blender have you?\" she giggled and shook her head, she really was quite gorgeous and her red, red lips parted slightly as she smiled at him and he had a sudden desire to kiss them. He snapped out of it though, \"No, not doggies...\" he thought about the other thing his wonderful grandmother would insist on because of her dog. He took a deep breath and there it was again, so he took a final sniff and opened his eyes \"got it.\"",
        "\"Really?\"\n\n\"Really,\" he said taking another reaffirming sniff. \"what do I get if I'm right first time?\"\n\n\"It depends on how confident you think you are?\"\n\n\"99.9%.\" he said.\n\n\"Suggest something,\"\n\n\"If I'm right you have to let me take you out to dinner.\"\n\n\"And if you're wrong?\"\n\n\"If I'm wrong? Simple, I have to take you out to dinner.\"\n\n\"So you taking me out to dinner is pretty much assured then?\"\n\n\"Yeah.\"\n\n\"OK then, try you luck.\"\n\n\"I think your secret ingredient is...\" he paused for dramatic effect, \"Jeyes Fluid...\" It was the dark pungent chemical his Gran used neat on spots in the garden her Labradors used as a toilet.\n\nElla folded her arms raising her great bust in the process exposing the top of a smooth cleavage, her mouth hanging open in shocked surprise and the corners of her lips raising in a smile. \"You're the first person that's EVER got that!\" she almost screeched and giggled just the tiniest bit, \"I suppose I'll have to allow you to take me out to dinner?\" She looked over her shoulder as if she was waiting for something or someone, the same going on he'd seen at the pub on that first Saturday. \n\n\"Yeah,\" he said simply, ignoring her disconcertion.\n\n\"Stevie,\" she said, \"this... look, there's a real chance that dinner out won't end well, perhaps...\"\n\n\"It'll be fine Ella, honestly. After all, we are only talking dinner here aren't we.\"\n\n\"Yes, well... you saw what Henry was like the other afternoon, it seems every time I sit down with someone to enjoy a meal or a drink, some bastard has to come along and mess it up.\"\n\n\"Perhaps we could go to a different pub?\"\n\nThe teacher noticed that she seemed distracted by that suggestion, \"Come to my place,\" she said, \"I'll cook you something.\" She grinned a little and it was almost like... like she didn't want him to come, or... or she didn't believe that he would turn up.\n\n\"OK Ella, when?\"\n\nShe thought for a moment, \"Wednesday?\"\n\n\"Excellent, what time?\"\n\n\"Eight?\" she grinned a sad grin, almost if she knew this dinner wasn't really going to happen. She looked over her shoulder again.\n\n\"Look Ella, are you really sure about this?\" he gave her his best 'feel sorry for me' smile and desperately hoped she would still say yes. She grinned back at him.\n\n\"Yes Stevie, I DO really want to have dinner with you but...\"\n\n\"But what? \"\n\n\"But...\" she took a deep breath, \"people listen to my neighbours and fellow villagers and my dinner dates get cancelled at the last minute or they just don't turn up... and I end up eating a rather large dinner on my own, or the same stuff for two nights in a row.\"\n\n\"But I won't do that to you Ella.\"\n\n\"No, you probably wouldn't - at the moment.\"\n\n\"Ella,\" he took both of her hands in his, \"I'm guessing that you've been let down before...\"\n\n\"Once or twice,\" she butted in.\n\n\"That's not the type of guy that I am.\"\n\nShe took a long disappointed sigh, \"OK Stevie, eight o'clock, my place, bring your spare apostrophe.\"\n\n\"I'll bring wine, what's your favourite?\" He looked at her with a hint of challenge to his voice.\n\n\"Surprise me,\" she had a look in her eye that said she accepted his challenge, whatever it might have been. \"Now, we were going to have coffee and biscuits weren't we.\"\n\nHe asked her about her other products, the ones that didn't include strong garden cleansers. \"I started making lotions and potions with my grandmother and I took over the business when she died. I can't really remember doing anything else. The shop has been here for donkeys years, and we always got a lot of local trade, neighbouring villages and across the county. I sold some bits and pieces through ladies magazines, recommendations and repeat business. Then the internet came along and the coachloads of tourists and wham-bam, I now have two Facebook pages, an excellent website a lad in London runs for me and now I send my lotions and potions across the world. I have some larger producers wanting to buy my recipes, but I'm holding out. I make more than I need so...\"\n\n\"The original Rosie was your grandmother?\"\n\n\"Nah!\" she said with a giggle, \"that's just a tenuous link to Rose the village witch! She's the one that disappeared the night before her execution!\" she waggled her fingers to suggest spell-casting, \"she's the reason the village is on the coach tour route. We started it in the seventies but changed it to Rosie's a few years back and I stuck with it when we got famous. Now it's the brand of course and I've copyrighted it.\"\n\n\"Wow, international success, world is your oyster.\"\n\n\"Yeah, kinda.\"\n\nShe handed him his coffee, it smelled really nice, he took his first sip and it tasted even better. She handed him a packet of Hobnob biscuits and he took two from the top. The moment he opened his mouth to take a bite, there was some commotion at the front of the store and they both walked back through to investigate.\n\n\"Ella the witch is a dirty ol' bitch! She'll fuck an old man in the back of a van, She'll open her gob and suck on his knob...\" it went quiet as he they thought about a next line, couldn't, and it just finished with an extended idiot laugh in childish male voices just shy of breaking, \"Nnnaaaaaaaaaaaaahahahahaha!\"\n\nSteve was no stranger to this kind of bad behaviour and was at the door and opening it, peering around seeing several faces he recognised from his classrooms and the backs of some heads he could only guess at by the outdoor coats and by their associates. \"Michael Smith, David Hollis, Colin McAdam!? I will be speaking to you and your parents about his tomorrow morning!\"\n\n\"Stevie please...\" she said, \"they didn't mean anything by it, leave them be, it's... nothing... just kids being kids...\" he saw her holding back her tears.\n\n\"Not my fucking pupils!\"\n\n\"Steve,\" she all but sobbed, \"it's fine... really...\"\n\n\"Ella?!\" he all but shouted at her, \"are you trying to tell me that you're OK with that?\"\n\n\"It's complicated...\" she said.\n\n\"No it isn't, some ignorant little shits abused you outside your own shop, and you seem happy to let it carry on. Look, if you don't stand up to...\"\n\n\"Steve, please...\"\n\n\"That idiot oaf Henry, and those nasty little hooligans just need to be told just where they stand...\"\n\n\"That's just how things work here Steve.\"\n\n\"No! This is the 21st century Ella, no one does that 'small village - don't rock the boat shit' anymore! You have to...\"\n\n\"STEVIE!\" she snapped, \"please, it's none of your business, just let it go...\"\n\n\"But...\"\n\n\"I said let it go,\" she pushed her face into her cup and continued to drink in silence.\n\nSteve had been involved in Police projects to reduce crime and had been well trained to spot children being abused and even their parents, and had used his training for real several times so couldn't let it go without a final fight. \"You can't solve a problem until you admit there is one.\"\n\n\"And sometimes not even then!\" she snapped back with a forced smile.\n\nHe raised his hands in surrender, \"Sorry, won't mention it again, promise.\"\n\n\"I'm sorry Stevie, I... I told you, it's complicated.\"\n\n\"Still up for dinner on Wednesday?\"\n\n\"Yeah, why not.\" She said with a deep breath.\n\n\"Are you sure?\"\n\n\"Of course,\" she said coming back to herself, \"bring wine.\" She gave him a big smile.\n\nHe downed the last of his excellent coffee, \"See you back to the Lane of one or more traitors?\"\n\nShe smiled that perfect smile back to him, \"That's fine Stevie,\" she said, \"I'll be here a while yet, but thank you.\"\n\n\"I'll wish you a very good night then Ella,\" he leaned in to touch his cheek to hers, but she turned her face and purposefully kissed him. Again, it felt electric and it took his breath away. Whatever his previous thoughts had been about Ella and how much she wanted a date with him, that kiss, wow!\n\n\"Goodnight Stevie,\" she grinned at him again, actually looking coy for once. He backed out, leaving with a bow; in response she gave a most modest curtsey then stopped, looking embarrassed but pleased. \"G'night Stevie!\" she blushed bright red, and he walked back to the pub with the tiniest spring in his step.\n\nIn school the very next morning he saw the three boys plus two more he figured to be the faster cyclists in the hallway as they headed into the school Monday morning assembly, and far from the embarrassed, slightly nervous looks his experience taught him to expect and was still wondering how he was going to handle it and the possible parental punch-ups, all four of them walked past him without a care in the world, as if they were completely innocent. \n\nHe looked at them all and shook his head; as Ella had stated the night before it really was none of his business. In response to his shaken head the for boys giggled and kept eye contact; sweetly, and without any form of malice or guilt. It was most unlike them, and the village to be honest. Strange. \n\nHe stepped forward to them with a smile himself. \"So what did you five little hooligans get up to last night? Mischief no doubt?\"\n\n\"No Mr Clements,\" said Gavin, the quietest and most believable of them, we were at David's house all day.\"\n\n\"Yeah,\" said David, \"My birthday, so we did back to back Star Wars, all eight films, all day!\"\n\n\"That good?\"\n\n\"Yeah!\" said David, \"it was brilliant!\"\n\n\"Thought you'd have all been out on your bikes on a nice evening like last night?\"\n\n\"Naaaaah!\" they all said at once. Strange again. It was definitely them, but now they had all become world class liars overnight as there was no hint of guilt or guile.\n\nOnce his charges were into the hall, he read the notices, led the prayers, sang the songs, then out to begin that days learning.\n\nThat afternoon there was David's Mum ready to collect her son, younger daughter plus one other friend's child she was looking after. Steve approached.\n\n\"Aah the Jedi's Mum!\" he said innocently.\n\n\"The boys told you did they?\" she said in a her best Gloucestershire, \"David's birthday treat, all I had to do was throw in pizza, Coke, Pringles, cake and let them have the run of the upstairs bathroom, and I never really knew I had six of your worst up there!\"\n\n\"Really, I must remember that!\" said the teacher with a smile.\n\n\"And,\" said the Mum conspiratorially, \"the other Mums are over the moon because the whole half dozen were out for the count and in bed and asleep by seven, Young Will over their by half six so Jackie his Mum told me this mornin'.\"\n\n\"I will definitely have to remember that!\" he grinned and waved them all off.\n\nHe remembered looking at his watch as Ella made coffee, it was seven twenty. Was the whole village in on it? HOW THE FUCK?\n\nAs he walked across the square back to the pub and his room for the night he was delighted to see Mr Sharpe the building contractor walking towards him with a big smile on his face holding high the silver keys to his flat and rattling them.\n\n\"All finished Mr Clements!\"\n\nSteve was about to say, 'and about fucking time...' but settled instead to shake the man's hand and smile and receive the keys gratefully. \n\n\"Thank you Mr Sharpe,\" he said with a real parents evening smile.\n\n\"Proper sorry about the delay, only you can't rush craftsmanship see.\" Then old man looked back over his shoulder proudly at his latest commission, \"I even switched the heating on, place will be toasty warm for you.\"\n\nThe made their farewells and Steve walked across to his new flat. The door opened perfectly which he was really pleased about. When he'd looked around the place the first time the door had stuck because of the damp. Walking up the stairs he could smell paint, not too strong but enough to be fresh. Into the living room and kitchen diner he saw that all of his furniture was out and in place, rugs laid and even his crockery and cutlery had been put into the appropriate drawers and cupboards.\n\nHe smiled at that, he really hadn't been looking forward to that bit. Into the bedroom, he saw that his bed had been made with new sheets, duvet and pillows and he had nothing else to do other than unpack his clothes bags still in the boot of his car.\n\nHe walked back to the pub happy that he would sleep in his own bed in his own house for the first time in almost two months after the quick sale of his place and some staying with friends while commuting. In the pub was Mr Sharpe chatting with the Dan the landlord and sipping on a pint of Poachers best bitter,\n\n\"And here's the man himself!\" called Dan raising a pint of the dark brown nutty beer that the teacher had become such a fan of. Steve got to the bar with lots of cheers and a couple of back slaps. \"Dorothy is in the office finishing off your bill as we speak Mr Clements!\"\n\n\"Dan, for heaven's sake call me Steve!\"\n\n\"Now you're no longer a guest, absolutely. Here you go Steve, first one on the house as a village resident!\"\n\nThere were a few more cheers at that, and cries of more free beer for the other village residents. Steve had the funniest feeling that chances are, seeing as the landlord knew that the bill was being picked up by the county anyway, he was getting charged for it in one way or another. \n\nAfter a few more pints, he drove his car across the square (hoping that the police were miles away considering the beer he'd drank!) and parked in his very own drive, a space that had previously had a skip or builders vans in it.\n\nHe carried his luggage upstairs and put it all away in no time. He unpacked his bags of toiletries into the bathroom, and found that the cleaning materials he'd left in a box ready for his moving in all in various cupboards as well. Many of them showed use and it was obvious that was part of the builders service.\n\nAfter his second pint he had been introduced to the founder of this particular feast one Elaine Sharpe the daughter of the builder who had been drafted in to arrange the property for him to move straight in. He told her how well it had been done and that he wouldn't change a thing. \n\nHe made himself a mug of tea from the items she had left in the food cupboard and fridge, turned on his TV, connected the Sky and finally felt at home.\n\nWednesday evening arrived and he had driven a few miles out of the village to the nearest town and bought new jeans and a shirt and a bottle of a very nice Caliterra Merlot and at just after half past seven set out for her place.\n\nWhen her arrived it was to an empty house in darkness and he knocked the door just a bit harder in case she had come home and fallen asleep, something he had done a few times before. He heard a loud meow and looked down to a large black cat that was rubbing itself around his lower leg and purring.\n\nHe knocked one more time, and bent down to stroke the cat. \"So where's the mistress of the house then puss?\" he said to the cat. It arched into his hand moving around so his hand was just were it was wanted.\n\nHe stopped stroking the cat and it meowed with some feline indignation. As he stood he saw the white socks and blaze on the cat as it walked off down the lane towards the village. \"Guess I'll follow you then puss.\" He said and walked back to the not terribly bright lights of town.\n\nHe saw the parade of shops and while the front of Rosie's was still in darkness there was an indication of light from the back so he walked along to a path that he hope led to a rear service area. It didn't.\n\nSo back to the front and another knocking session. As he raised his knuckle to knock he heard the strains of music through the glass. He listened and heard Stevie Nicks singing, \"...thunder only happens when it's raining, players only love you when they're playing...\"\n\nFleetwood Mac; she'd stood him up but a least she had taste.\n\nHe knocked the door sharply and within seconds of that the music became louder and Lindsey Buckingham was 'never going back again'.\n\nHe knocked louder and the music stopped and he knocked louder, \"Fuck off and leave me alone you little shits!\" he heard her shout, which was replaced with 'Don't stop' even louder and when he knocked again it went even louder still.\n\nBugger!\n\nPhone! He looked up and saw then phone number on the bottom corner of the shop sign and dialled it and halfway through the ring it stopped and went straight to answer machine. He spoke hoping it would play through to a speaker on top of the phone in the way that his did. All that happened was 'go your own way' sounded as if the band were in the shop with her.\n\n\"Hi Ella, I'm outside the shop listening to Rumours, and I mean by Fleetwood Mac not the landlady of the pub. I'm guessing you've already had someone knocking on the door tonight hence the din, but... well it's five past eight and I'm at the shop door with a particularly good Merlot.\" He paused, \"But hey, it'll keep, give me a call if we're still doing dinner. If I haven't heard from you after nine, I'll grab a bag of chips and... err... catch up with you... later. See you...\"\n\nHe waited a few minutes until he heard '...listen to the wind blow...' and figured he'd already waited too long already.\n\nHe walked straight to the chip shop and stepped in behind an older couple and ordered his usual, battered sausages and a large portion of chips with salt and vinegar (from the pickled onions -- a new favourite of his) and walked home eating it, an ear cocked for a phone call but to no avail.\n\nHe found nothing to interest him on the TV so turned on his laptop. He looked up the website she had told him of, and it showed the amount she charged and he understood how she was doing so well and all backed up by the reviews she had, one from a top flight fashion magazine that told him she was doing just as well as she had claimed. \n\nHe checked the pop-ups telling him he had mail, and was pleased to see that not only had his expenses for the pub been approved, he now had access to the council system to look at the school finances. \n\nHe logged in and started to investigate. His audit experience soon had him bouncing around the finance system and with the addition of the calculator he was doing sums on exactly how much each pupil cost. Expenses, salaries, utilities and then other forms of income such as the pupil premium; this small community had enough young families struggling to make ends meet and this reflected in the school bank balance.\n\nThis area seemed to give him access into other parts of the council system and pretty soon he was looking at details of parents getting benefits to pay rent and council tax; by accident he found himself looking at the council tax status of the entire village and there, hiding among the villagers 'Rosella Mary Pendall' of Vine Cottage, Traitor's Lane, with her national insurance number and while the 'date of birth' entry had '-error14934/73-' in it, the date she had commenced paying her rates was 1839...\n\n1839? Perhaps it was supposed to be 1989 and was just a keyboard error. He checked again, 1839, no two ways about it, and thought about reporting this fault and the date of birth error online but stopped himself. What was he thinking! He wasn't sure had the right to even be in that part of the system let alone call in error messages.\n\nHe clicked on the 'payment history' key and started to investigate that. He went back to 1989 and there it was, then 1988, 87, 86, 85, right back to scans of original parish ledgers back to the forties, thirties and then twenties where it stopped.\n\nRosella Mary Pendall, one and the same. \n\nShe must have had the same name as her grandmother, that would explain it of course; but the Rosella Pendall from the forties had been an adult and paying her parish rates long before the First World War which would have meant Grandma Pendall was in her one hundred and twenties when she died...\n\nWhat the actual Fuck?\n\nHe looked to his right and his now cold tea and thought of making another when he saw that it was gone midnight on the clock in the kitchen, so shut down the computer and went to bed.",
        "Again, he dreamed of Ella, dark hair, full lips, perfect figure and he saw her curtsey to him again, this time dressed as a maid from the 18th century.\n\nHe woke next morning, showered and after a great breakfast of 'overnight oats' denied him at the pub in favour of a full English or other cereal, he walked to school passing her shop, now dark and without 'Rumours' playing at full blast.\n\nThe day started as it normally did and he told the head he was now into the accounts system and wouldn't be falling over himself to start sounding the death knell of this great little school. At lunch he decided that he needed a walk to clear his head and found himself at Holborrow Park and walked to the stream.\n\n\"Aahah!\" said a loud strident voice, \"the new teacher!\"\n\nSteve looked around and saw a rather eccentrically dressed, Donnish looking individual in tweeds with a matching but battered flat cap and an even more battered notebook, 'the professor' that Ella had spoken of no doubt.\n\n\"Good afternoon,\" said Steve stepping across to him, \"guilty as charged. Steve Clements, the new deputy head.\"\n\n\"And as one of probably half dozen graduates between here and county hall I trust you have complained about that abomination at Traitor's Lane?\"\n\nSteve knew who he was talking to for sure now, \"Indeed I have sir,\" he said; this was an outright lie but promised himself he would do it on his return, \"at present I am unable to ascertain if it is the lane of one traitor, many traitors or lane for people to be traitorous in.\"\n\nThe man in tweed smiled and stepped forward, happy that he was in like-minded company at last, \"Professor William Proctor, charmed,\" he extended a hand and raised his mangled hat at the same time, \"in less difficult times I would prefer to reference my doctorate, but I work in a damned Further Educational college and 'Doctor Proctor' would be too hard to live with.\"\n\n\"Totally understand Professor,\" said Steve with a grin.\n\n\"So how do you find our adoptive village?\"\n\n\"It's eccentrically lovely...\" said Steve.\n\n\"Beautifully so!\" said the professor.\n\nSteve moved closer to the interpretation board, \"So you're interested in local history as well as English?\"\n\n\"Its intrigue and shame Steven,\" said the professor conspiratorially. He stepped closer, \"may I call you Steven?\" the teacher nodded, \"this village makes claims about the Holborrow tragedy and the death of the lamented Squire and his children,\" he swung his arm around dramatically to include the remnants of the building, \"murdered by the Vine Cottage Witch, daughter of the traitor our beloved lane commemorates, BUT!\" he all but spat, \"there is local word that the sainted squire buried in such Catholic grandeur within our local church was nothing but a rapist, thief and general vagabond!\"\n\n\"Really?\" said Steve intrigued at the professor's passion.\n\n\"Really;\" said the professor with raised eyebrows, \"there exists several Scripts that outline his misdeeds and blame him for FRAMING the alleged traitor to get his hands on Vine Cottage, one of the few houses he didn't own, and his having some part in the disappearance of the traitor's daughter Rose, after having her decried as a witch and trying to rape her!\"\n\n\"Rape?\" said Steve, further intrigued.\n\n\"Indeed,\" said the professor, \"she disappeared the night before her execution and his demise, fighting in vain to rescue his three daughters from the flames, flames set by the Witch herself! Legend has it the noise of the wind in the yew trees is the tortured souls of the traitor and Witch Rose trying to get back into the church for absolution to escape from the grasp of Satan himself!\"\n\n\"Bloody hell,\" said Steve.\n\n\"A fair surmise Steven,\" said the Professor. \"a long story no doubt, but I have found over many years of teaching and researching local histories, the longer they are the larger the grains of truth involved.\"\n\n\"I'll be sure to check out the grave yard next time I'm passing late one evening, when the forces of darkness are exalted.\"\n\n\"Precisely!\" said the professor, assured of their kindred spirit. \"Steven, I am on an short sabbatical break and should you wish to join me in yonder public house this very evening, I would be most pleased to buy you a pint or two of Dan's finest or partake of an exalted spirit as well.\"\n\n\"Professor, I would be pleased to and will extend the same compliment.\" They shook hands again, but in the distance Steve could hear the clanging of the lunchtime bell calling him back. \"I must back to the Treadmill but look forward to further discussion of local history!\" \n\nThe Professor raised his hat again, \"Until later Steven.\"\n\nSteve walked back to the square and saw her, kneeling by the war memorial now cleared of wreaths and poppies in time for the next Sunday`s remembrance parade and service. He stopped and watched as she dropped to one knee and withdrew a small poppy cross from her jacket. She held it close with closed eyes, kissed it and placed it to the rear of the small square of earth set aside for them. She stood, looked around and upon seeing no one bowed slightly and walked back to her shop. A parent lost in the military? Boyfriend? Despite his inquisitiveness the bell`s insistent clang drew him back to school and the day job.\n\nShe lived in the house of the witch the village cultivated, her included, her shop was 'Rosies', she was Ella, Rosella Mary in fact, same as the woman that had lived there since Victoria was on the throne.\n\nWhat the fuck?\n\nHe took a class for PT on the sports pitch and all thoughts of apostrophes, squires, traitors, witches paying their rates and fallen soldiers left him as he looked around, guessing that all of this land the children were racing across in such delight could soon have executive weekend homes built on it if he did shut the place down.\n\nHe went home at the end of the day, worked on a lesson plan, and checked his house phone, no message there either. He checked his recent calls log and rang the shop again, still to answer machine, and he spoke again.\n\n\"...Hi Ella... it's me... Steve,\" he added, almost for want of saying anything, \"guessing you deleted my first message about being outside your shop after waiting at your house... your cat is very sweet by the way... listen, if you did delete my call, then this is a chance to delete another one... call me... or not. Your life is very complicated I guess and with that I don't help. If you ever want to talk, you know where I'll be five days a week, thirty eight weeks of the year, bye...\"\n\nHe disconnected the call, put on his Barbour and headed for the pub to continue his education in local history. \n\nAs he came level with the war memorial he decided to check out the cross she had laid, now joined by two more. Hers was still at the back, so he reached down and pulled it from the ground turning it to catch the light from the church.\n\nIn dark blue pen it was inscribed, `to Davey, never forgotten, love from Rosie`. He bent and replaced it in the same divot and stood, checking the memorial for a recent Davey, or David, even Dave but there was nothing since the soldier killed during the Falklands War of the early eighties, and that lad (a sailor) was called Mark and would have been old enough to be her father... Perhaps that was it?\n\nHe saw the church, across the square from him and thought that might have more information about more recent losses. Lit as if for an evening service he walked across to it. There were the yew trees and they did look very old indeed as church yew trees so often do. \n\nHe stepped inside the empty entrance and there in the north transept was the large family tomb, with 'Holborrow' inscribed on the stone and a just less than life-sized statue of a seventeenth century gentleman holding a cross high as if to strike something down with it while holding a book, the bible he guessed, in defence.\n\nThere was nothing to suggest a more recent loss of life within the military or out of it so he left and headed for the pub and was greeted by the warm conviviality of the place and soon the strength and amount of beer drunk limited the historical conversation but he did remember the professor suggesting that the Devine Ella that currently lived in Vine Cottage and sold `all that holistic bollocks` was treated badly because of some 'overhanging papist resentment at any single woman living in the lane of the traitor'.\n\nHe left the Professor entertaining the rest of the pub after his fourth pint and walked unsteadily home, waking next morning with enough of a head to remind him not to do real ales on a school night in future, even if it was a Thursday. He had faint memories of a dream about Ella, this time back in the black lace and stripping out of her stockings.\n\nHe made it to school and drank enough fluids to steady his body and cure his mind and by mid-morning break was fighting fit again - mostly. At lunch he checked Twitter and his own non-work emails and saw he had missed calls from Ella from the night before and two messages, both when he was the worst for wear after his second pint of ale.\n\nHe listened to the first message, a simple, \"Hi Steve, really sorry, I'm at home, call me?\"\n\nThe second was a more worried voice, \"Oh Stevie, I... I'm so sorry... I... I didn't think y...\" she stopped talking and he could hear her breathing in the background as she tried to compose herself, \"I have no excuse Stevie, I promised you dinner and after suggesting that people always let me down and that's precisely what I did to you.\" Her laboured breathing now suggested tears but she fought them off. \"please, if you still have the tiniest amount of faith in me, come this evening, or tomorrow... I'll try and explain...\"\n\nSo at eight that night, Merlot in hand, he walked back to Vine Cottage; down the Lane of a singular or indeed a number of traitors he walked, stopping at the tall rough stone wall where he could see her cat. He reached up and stroked it and it jumped and landed on the shoulder of his waxed cotton jacket, just as his Granny's cat had, and it stayed perched there until he reached the house.\n\nHe knocked the door, and heard her voice, \"What's the secret ingredient?\"\n\n\"Jeyes fluid,\" he said quietly.\n\nThe door opened and their she was, dressed in her usual dark linens and cottons flowing around her, she had red eyes this time.\n\n\"Thanks for coming Stevie,\" she said, \"take your coat?\"\n\n\"Please,\" he said and they both laughed as he removed his rather old Barbour while trying not to dislodge the cat. She took it and hung it across the Newell post, \"seriously,\" she said brushing at the brown corduroy collar, \"thanks for my second chance.\" \n\n\"You're welcome, glass of wine perhaps?\" he waved the bottle as if it was the answer to all their problems. \n\n\"That would be nice,\" she said with a smile that eased the pain from her features for a time. He'd pulled a corkscrew from his pocket and she looked impressed.\n\n\"Just in case,\" he said pulling the cork free with a pop as she collected two glasses from the kitchen of the well decorated, homely house that had to be hundreds of years old. \"We should let it breath really but I reckon you could do with a slurp right now.\"\n\n\"Well spotted,\" she said holding out both glasses for him to fill.\n\nShe took a long draught of hers, \"Oh I say, that is nice, too nice to knock back at least. Thank you for your compliments about my cat,\" she pointed to the pet still curled around his shoulder, \"reckon he likes you as well.\" She put a hand on Steve's shoulder and stroked the cat, electric again, \"this is Charlie, my oldest friend...\" She looked at the cat wistfully and Steve guessed that she was holding back on something. She indicted he should sit down on the large leather sofa, taking a matching armchair directly opposite. He sipped his wine and felt the cat purr at his neck.\n\n\"So Ella,\"\n\n\"Stevie...\"\n\n\"You are a mystery wrapped up in an enigma with a suggestion of confusion, and at least two computer errors.\"\n\n\"I am? Do tell,\" she sipped more of her wine.\n\n\"I've researched you Ella, quite by accident I must say, and it seems that according to council records you are actually Rosella Mary Pendall and you have lived here in Vine Cottage in Traitor's Lane for nearly 150 years.\" He smiled, \"that or their records are all to shit, I know what my first suspicion would be.\" \n\nNow he was sat there mind you his brain suddenly considered that something untoward was going on that he should report; fraud, tax evasion, money laundering or some other associated wrong doing from the sexy shopkeeper. Suddenly the thought stuck him... Drug dealing? She had two Post Office vehicles per day at her place that was for sure, but he decided to park that thought for the time being.\n\n\"and besides extremely well-organised, organised crime, I absolutely cannot get my head around you. You run a successful business across the world but never seem to leave town or even own a car, you are without question the most beautiful woman in the county yet still single and it seems everyone dislikes you for it.\" He raised his wine glass for another sip, \"unless you have really lived here for one hundred and fifty years of course.\"\n\nElla stood up and moved to her fireplace, a fat tear running down her pretty face. She sniffed and tried to smile.\n\n\"You're wrong,\" she said with a chuckle, \"I've actually lived here in Vine Cottage in Traitor's Lane for almost three hundred and fifty years not one hundred and fifty.\"\n\n\"YOU'VE lived here for three hundred and fifty years?\" he looked almost disappointed at her response, \"not Rosella Mary...\"\n\n\"Yes; and I AM Rosella Mary.\"\n\n\"Really?\"\n\n\"Really...\"\n\n\"How... how?\" said Steve, after all, what else do you say to that kind of claim.\n\n\"This is rural Gloucestershire,\" she said with a grin, \"it's amazing what you can get away with - if you keep yourself to yourself of course.\" She stood, extended a hand and he stood and took it, and she pulled him towards the stairs. He wondered what was going to happen next. Not... not her bedroom surely. The house had exposed beams and white washed plaster that most of the older places did, even his.\n\nAt the top of the stairs she indicated a low crooked doorway with a matching off-shaped door, he stayed on the outside, just in case she actually was a drug dealer and was going to lock him in. Inside she opened a large wardrobe and there, neatly stacked on shelves were tall, thin books -- floor to ceiling, hundreds of them -- all the same size and similarly bound.\n\nShe took one seemingly at random from the second shelf, \"Look,\" she said, \"Read the date.\"\n\nHe looked; it was clear, well written manuscript in black ink on very old paper, with a quill pen he guessed. The first date he stopped at was May 1776 and the entry talked of problems in the American colonies. He flicked through to the end of the book where it talked of recent successes with steam engines.\n\n\"Interesting,\" he said simply, still at a loss as to its import.\n\n\"Now this one,\" she gave him another book, \"Check the hand writing and more importantly the date.\"\n\nHe flicked the book open, the paper was thinner but was now faintly lined, the smoother flow of ink suggesting a fountain pen. The author spoke of their joy that D-Day had finally taken place but sadness about many of the young American boys, especially 'Bill' the combat engineer, that had been camped around the village could have been among the many casualties. So interested was the teacher that he only just noticed the handwriting was the same.\n\n\"Here's my last one prior to going electronic,\" she said, and handed him a hardback journal that talked of ordering a new personal computer from a catalogue. \n\nAgain it was the same writing by ballpoint pen, dated eighteen years prior. He took a book at random and checked the writing, this time late eighteenth century and still the same, and then another before putting them on a drawn-out shelf.\n\n\"This is all you?\"\n\n\"Hard as that may be to believe, yes.\"\n\n\"Over three hundred years?\"\n\n\"Nearly three hundred and fifty,\" she said simply.\n\n\"When did you write them?\" he said, thinking this to be a historical record of the village that must have taken her several years of very hard work to complete. \n\n\"You read the dates. I learned to write in the late sixteen hundreds, my grandmother taught me.\" She smiled easily to him, \"didn't write a diary then of course, I could write but I couldn't afford pens and paper.\"\n\nHe looked really confused, and quite disbelieving. \"I can see that must have been a real problem.\"\n\n\"I was nursing and midwifing by then, and selling my lotions and potions, so could afford to buy it.\"\n\n\"So...\"\n\n\"Trust me Steve,\" she said.\n\n\"So... what you're saying is you are three hundred and fifty years old?\" She made to speak, \"NEARLY three hundred and fifty,\" he corrected himself.\n\n\"Yep, and I'm proud to say I don't look a day over two hundred.\" She was the one trying not to sound cross now.\n\nHis face was screwed up in disbelief. This was one hell of an excuse for a missed date, he would have been satisfied with 'I forgot'.\n\nWhat the Fuck?! \n\nBut she was so calm about it and believable, just like his four Star Wars pupils had b...\n\nWhat the Fuck?! He struggled for a reply so just went with the obvious. \"So you're immortal?\" \n\n\"I don't know, old definitely.\"\n\n\"But surely, most of the little old ladies will have watched you not change since they were babies!?\"\n\n\"It's all part of my curse,\" she said.\n\n\"Curse? Wha... Curse... What?\"\n\n\"Curse,\" she said, \"Like in the best horror stories. I go on while all of my neighbours live and work, marry, have families, grow up, grow old and go on their way.\" She wiped another tear, \"This is me.\"\n\n\"Three hundred and fifty years?\" he held back the laughter from his voice.\n\n\"Almost.\"\n\n\"What curse?\"\n\n\"Do you have a while, this is rather a long story. Let's go for a walk...\"\n\n\"Look, I'm not going to end up in the Wicker man here am I?\"\n\nElla grinned, \"Stick close to me Stevie, I'll look after you...\"\n\nShe took him through the quiet Friday night village and she pointed out the large Holborrow Park he'd chatted with the professor in the day before. She pointed out the stone ruins of the old house that had evidently been quite grand once. She stood still at one point where the road passed close by. She looked really upset by this so he walked her back to his place and his newly decorated flat suggesting tea. They walked up the stairs into his large sitting room, and she sat down.\n\nShe sat with a mug of tea staring at the rim and the steam tripping over it, her red eyes looking up at him.\n\n\"l was born in the year of the great fire of London, I remember the death of King Charles the Second when my father, who had been a drummer boy for Cromwell in the Second Civil War, raised a rather off-colour toast in that pub you bought me a drink in not two weeks ago. Squire Holborrow had him arrested for treason and because of his advancing years he died in prison after he was lashed for refusing to raise a toast to the new King James and to the Pope; all Romans in those days this little village.\" She took a deep breath.\n\n\"Our little Vine Lane became Traitor's Lane from that point on; so to answer your question the apostrophe at my end of the lane is the right one, one traitor, my father, Thomas Pendall.\" She drew a long breath against the memory, looking almost like she was stealing herself for the next amazing revelation, and she was.\n\n\"The Squire got drunk and thought he would come to my house and rape me seeing as my father was gone and I was a buxom attractive 20 year old protestant wench. I kicked him square in the balls for his trouble, pulled a knife on him and ran into the street screaming what he had tried to do to me.\n\nBut I was the traitor's daughter and he was Squire Holborrow so I had no friends to call upon. In revenge he had me accused and tried as a witch two days later, and I got the blame for everything from crop failure to my neighbours teenage acne. She already hated me because the local boys liked me better than her so he gave her a crown to denounce me. She even started a story that my Dad's soul was haunting the graveyard to try and get in and repent to the holy Catholic Church.\" She wiped a hand across her face, \"hard faced Protestant my Dad, would sooner have burned in hell.\"",
        "She wiped her face against the real tears coming down, \"I had someone go to the next village and contact my Grandmother, begging her to help me as I lay alone in my cell waiting to be taken out at dawn to be hanged the next morning, just out there.\" She pointed across the village green just across from his place, \"The villagers wanted to burn me but the squire said that he would be merciful. The village constable brought me my last meal and left my cell unlocked, it was just there,\" she pointed to some rough ground with a few stones protruding from the green carpet. \"I ate my bread and cheese and drank my beer then stood to watch the sun go down for the last time and saw that the door was open. I pushed it open a bit more - just to talk to my jailer, but there was no one there. \n\nThe door to the lock-up was unlocked so I walked out, taking my shawl from the pile of my possessions he would sell once I was dead. I walked further down through the village, the unseasonal rain keeping everyone indoors, or so I thought.\n\nI almost managed to get home but I was spotted by my spotty neighbour and she tried to raise a hue and cry after me but no one seemed interested. I got to my house and found her family moving in, the mother wearing my clothes, the father making ready to kill my brood sow. The Squire had already sold my house, the one we just drank a glass of wine in... my bloody house!\" she snarled at the injustice as if it was only the day before.\n\n\"The father saw me and came at me with his slaughtering knife, and was soon joined by the spotty daughter, still screaming that I was a condemned witch while her father said if I ever came back to 'his' house he would slaughter me and hang my traitorous witch's heart from the gate post...\" Her bottom lip trembled, \"I'd never known such hatred Stevie, not once. So I ran, ran for my life and ended up at the Holborrow house screaming for the squire that had tried to rape me and had sold my property before I was even dead. I screamed at him to come out. He didn't and I screamed that he should burn in hell and in my impotence threw a stone at his window. Just in time my Grandmother arrived on a horse she'd borrowed.\n\nWe went back to Vine Cottage and the other family had gone, and I waited; waited for the village men to come after me but they didn't. Grandmother had made something, one of her potions, and put in the well that afternoon that would make everyone forget, hence the constable leaving my cell door unlocked, no one wanting to be involved in the hue and cry -- except for my spotty neighbour, something to do with gold that had changed hands.\n\nGrandmother had planned it all and was coming at midnight to get me from my condemned cell and take me off to Oxford to work for a parson she knew there. I ruined it all by throwing that bloody stone \"\n\n\"How?\" he said, aware that he had sat transfixed through her story and wanting to get a word in, but to hear the next part.\n\n\"It knocked over a candle and set fire to the house. That damned squire died in his drunken stupor after fucking one of his equally drunken maidservants while the house burned around them. \n\nTo my shame his three children died in their beds as well. The squire's wife had been to a nearby friend's house, hadn't drunk the water from the well and got back in time to find her house well and truly ablaze, and her husband, children and two of her maids dead; it was smoke inhalation as they call it these days. They never rebuilt the house, you just saw the ruins.\" Ella walked across and stared out of the window to the village green again, visualising the tree whose shade she had rested in as a child and the rope that had been strung from its tallest limb an hour after the magistrate, the same squire, had condemned her to death.\n\n\"Grandmother tried to sneak me out of town on the horse but it wouldn't leave the confines of the village with me on its back.\" She walked back towards the sofa, \"Whatever happened I just ended up here again. The Squire's wife had cast a curse on whoever had killed her children... Never to know love but to be tortured by it, to stay in sight of the village church but not to enter it, to live 100 years for the life of each child and a few extra for her unfaithful rapist husband. If she threw in, 'and be scorned by the community for all that time', that bit worked too; and her curse was so powerful, here I stayed, Imprisoned in a peaceful country village. \n\nI've lived for three and a half centuries but have never gone more than a three hundred yards from the church where she cursed me. No matter how far I walk I always end up walking into the village from the other side.\" She broke down at last, \"I've been alone for so long Steve, it's been a living hell and I lose count of the number of times I've wished that I hadn't checked that damned door, wished that I'd let them take me out and hang me, just waited for Grandmother.\"\n\nHer delivery was perfect, Oscar winning in fact, and only the fact that it was all completely fucking impossible made him doubt her. \n\nPerhaps this was some kind of village plot to save their school by making everyone think the county's educational hit man was mad, or they could actually burn him in a giant wicker man, or someone would leap out with a camera and start laughing at him. After all mad Doctor Proctor just HAD to be made up.\n\n\"So in this story line you can't kill yourself?\"\n\n\"Nope, I just find myself back doing what I was doing before I thought of it, so after several painful attempts I stopped trying. Have you seen 'Groundhog Day?\"\n\n\"Right,\" he said picking up his tea mug, \"on the evidence of some beautifully written diaries and the ruins of any old building, I'm supposed to believe that you are 350 years old, and Witch Rose the traitor's daughter, the girl that killed Squire Holborrow that your mate the mad professor so very conveniently told me about yesterday?\"\n\n\"You've dreamt about me three times so far haven't you.\"\n\n\"What?\"\n\n\"You've dreamt about me, first time I was in black lacy underwear, this black lacy underwear in fact,\" she stood and undid the buttons on her dark blue cotton shift dress, shrugging it from her shoulders to rest on her forearms, and there she was in her gorgeous semi-naked perfection, just as he remembered her from his dream. \"Did you enjoy your wank Steve?\"\n\nHis mouth flapped open a few times, and she took a step towards him dropping at her knees to curtsey before him, her dress still hanging from her arms. \"I can't quite pull off that much of a quick change but the Jane Austen curtsey made you think twice about me again didn't it; no wanking that time though.\" She raised her shapely leg and placed her foot on his thigh and started to undo the suspender strap and roll her stocking down to her knee, \"Remember last night's pissed dream yet Stevie?\"\n\n\"How...\" he struggled to look the beautiful half naked woman in the eye and drag his eyes from her crotch eighteen inches from his face.\n\n\"l see men`s dreams when they dream of me, I see all of the things they want to do to me, you prefer shaven girls don't you?\" His mouth bobbed open again stupidly, \"DON'T YOU!\" she screamed at him.\n\n\"Yes,\" he nodded, \"yes, deep down I suppose I do.\"\n\nIn response she yanked the front of her black lace string briefs down to show a perfectly clean shaven groin with just the hint of the crest of her labia hidden below. \"I had a full growth of pubic hair there this morning,\" she sighed, \"My curse Stevie,\" she dropped her foot down, folded her arms and began to cry, \"my fucking curse...\"\n\nShe pulled her dress back over her, almost as if she suddenly felt shame for her situation, she slumped down on his sofa, completely distraught. He stood and walked across and put an arm around her.\n\nShe smiled, \"Thanks;\" he wiped her eyes with a tissue from an adjacent box, \"simple things Stevie, being able to sit and chat with another woman that isn't growling at me because her husband or son keeps looking at me; or the single ones and their jealously, lecturing me about looking like a slut when I was dressed in a shapeless mass like this!\" She pulled the dress over her and fastened a couple of the buttons, \"remember what Dorothy always used to say?\"\n\nThe landlady's statement about Ella's dressing like a tart and making goo-goo eyes came back to him. \n\n\"Just to sit and chat with a man for more than five minutes, to talk about everything and anything, without it ending with him wanting to run away from the big lad that just arrived to scare him off, just to walk out of this FUCKING VILLAGE,\" her eyes filled with tears and she squeezed her eyes shut against them, \"to sleep one night, ONE FUCKING NIGHT,\" she wailed, \"without nightmares of Henry beating me up then fucking me, Or nice old Pete from the 7/11 shop fucking me anally... raping me.\" She struggled to catch her breath, \"Father Donald making me blow him and... coming on face...\" she hugged herself, then ran a hand down her face as if she was trying to wipe away the memory of her regular dream, \"or any number of postmen, even local teenage boys fucking me!\" she cried out, \"one night Stevie, just one night!\" she broke down and collapsed against him, exhausted.\n\n\"Christ Ella,\" he said \"I...\" he stopped talking and just put both arms around her and held her until her breathing regulated.\n\n\"Don't worry Stevie,\" she said sitting up straight still in his arms, \"By tomorrow morning you'll have forgotten this entire conversation. You aren't my first!\"\n\n\"Like I was supposed to have forgotten our date?\"\n\n\"OK, I give you that one, you were the first in three hundred years don't forget.\"\n\n\"But... three hundred years?\"\n\n\"Yep, and then a few.\" She snuggled into his arms evidently enjoying the new feeling, touching her face to his, \"this is so lovely Stevie, do you mind if I sit here for a minute?\"\n\n\"Of course not,\" he looked at closed eyes and how comfortable she seemed, \"would you like another drink? Wine?\"\n\nShe grabbed him, \"No!\" she snapped, \"No, thank you, just hold me for a bit longer?\"\n\n\"Of course,\" after all, it wasn't that tough a job, \"so tell me about Grandmother.\"\n\n\"I lived with her for the first fifty years, she stayed with me until she was 100 and eventually said that she had to go, as her life force was almost done and her potion would eventually stop working. She gave me that bloody cat that likes you so much, he's a mere kitten at a little over 270. Grandmother was the local midwife, that's what I became and was on and off until after the war and the birth of the NHS, that stopped it of course and that particular torture ended.\"\n\n\"Torture?\" he looked confused, \"children?\"\n\n\"Never had sex, so never had a child, always wanted one though.\"\n\nSteve still didn't know what to think and clutched at straws, \"Why did you have to stop being a midwife? Was it because of...\"\n\n\"Certificates Steve? Had to be qualified and to get trained you have to go to a college or a school, not that I hadn't had plenty of experience. Hated as I was, for twenty five years between 1826 and 1851 I was the only person in the village I hadn't actually delivered.\" Again, she looked angered by this. \"Ain't no one in this village that gives away certificates for anything.\"\n\n\"You have collected some great antiques mind you.\"\n\n\"Do you include me in that list?\" She grinned at him letting him know it was OK, \"At home l have a copy of Shakespeare's works, given to me by David Garrick himself. He stopped in the pub on his way to Stratford from Oxford, slept in the room next to the one you had in fact. Fell in love with me of course, but left when half of the farm boys threatened to lynch him. Heartbroken when I wouldn't go with him, so left me his folio of the bard to remember him by.\"\n\nHer tears were still coursing down her pretty face now pressed against his, \"I've watched the world go by Steve, I remember boys leaving and going to fight the French and the Germans at Blenheim, the French during the Peninsula War, saw the boys come back after Waterloo -- not as many as left mind you, I saw everything. All of those names on the war memorial?\" he nodded, \"watched every single one of them grow up and leave. Like I said, I delivered most of them. I still have letters from young Davey Pullen at home somewhere.\"\n\n\"Never forgotten?\"\n\n\"You checked?\"\n\n\"Yeah, sorry. You were still an enigma wrapped in a mystery at that point.\"\n\n\"Hold me tight some more and I`ll forgive you,\" she smiled closing her eyes, \"Davey Pullen... wrote to me once a week from wherever he was, he had just the most massive crush on me.\" Her smile left her face for a moment, \"killed at the second battle of Ypres. I promised him that if he died I would go and lay flowers on his grave, thinking he'd be back by Christmas of course. I leave a poppy cross for him every November; I've since found out that he has no known grave and is inscribed on a big memorial over there.\"\n\nShe looked at his bookshelves and closed her eyes again. \n\n\"I read every book in the village library, and I mean EVERY BOOK. When it closed I read every book off of the mobile library. Tried the Open University, but the exams were always in neighbouring towns and I couldn't get to them. Hence I run a shop and don't teach history at your school.\"\n\n\"History?\"\n\n\"I've seen so much of it Stevie.\"\n\n\"And your shop?\"\n\n\"Signed the lease on that little place in 1874, and I ran it pretty well, bought it for twenty pounds and six shillings just before the great war, first mortgage in the village, back when we had a tiny bank. Had to stop the bush medicine when our doctor arrived a few years after. Kept delivering babies mind you. Old Mr Sharpe that did this place was my last home delivery, in the awful snow storms we had in the early fifties. \"\n\n\"How come the women didn't hate you when you were knelt between their legs telling them to push?\"\n\n\"Think it was just how the curse worked out. I got to hold hundreds and hundreds of new born babies until I handed them over to their real mothers.\" She grimaced, \"exquisite torture, like I said. It's what my life was for all those years. Hated by everyone until I had to deliver their children then we were best mates for a few hours. \n\nChild is born then twenty minutes later I'm getting the look when husband comes in to see the new-born. God forbid the baby died then I was back to being the witch AND a child murderer. Fortunately after so many births I was actually quite good at it.\"\n\n\"And no one ever noticed.\" She shook her head, \"and you run the same shop since the late nineteenth century, and has the tax man ever caught up with you?\"\n\n\"Most of the time he has,\" she said, \"always legit and above board. After all, my neighbours would dib me in pretty soon.\"\n\n\"And you've always made enough money to live on in three hundred years?\"\n\n\"Can say that I've never been hungry, but there's always been food in my cupboard, can't be tortured for three centuries if I starve to death now can I,\" she said, \"and I did try -- once -- fucking painful, especially when nothing happened except for the pain.\"\n\n\"I suppose not,\" he said, still struggling to believe what she was telling him, \"So you can't starve to death but you keep working.\"\n\n\"Still have to stay busy,\" she said, \"and I do enjoy being successful. Believe it or not, thanks to Rosie's lotions and potions I'm almost a millionaire, and that's just surplus.\"\n\n\"I suppose you built up quite the nest egg over three hundred years.\"\n\n\"Fuck no, this is all within the last ten years. Thank God for phones and the internet, I can buy different stock and have it delivered, paying by card, ONLINE BANKING! Thank you Bill Gates!\" She stirred a bit in his arms and became more animated. \"alternative therapies only really became funky in the sixties and all of the cures and lotions and potions my Grandmother taught me to make became eminently saleable. I supply several expensive London masseurs and therapists, I make herbal remedies for stop diarrhoea and laxatives for the bloated, syrups to stop and start flatulence, you name it, I've made it - all natural ingredients of course.\"\n\n\"And you are... three hundred and fifty years old?\"\n\n\"Yep.\" She looked closely at his face. \"Because by my angrily thrown stone three innocents died and their mother lost those she loved most of all, I would never know such love, a child.\"\n\n\"And every man falls in love with you?\" Steve looked confused.\n\n\"Yep, always do. I always become the girl they've always dreamed of.\"\n\n\"You look gorgeous, whoever looks at you?\"\n\n\"Only men that I might find attractive. That's why Dan in the pub is always so nice to me. He's actually a great-great-great nephew of mine quite a few times over and I remember him being born, he was a bit of an arsehole up until his forties now I come to think of it. And the mad professor of course, mind you he is as camp as a boy scout's rucksack.\n\nAny man will see what he wants to see; now if you fancied a girl in her twenties that's how old I would look to you.\" She looked at her reflection in the mirror over the fireplace, \"Mind you, this is how I look when I'm on my own,\" she turned her head to look in his mirror, \"I've had worse.\" She grinned. \"Again, I guess I must look like the kind of girl you like, am I your type?\"\n\n\"Don't know that I've ever had a type Ella,\" he said, \"If this is what you look like without some curse making you look like I think you should...\" he looked confused himself, even though he knew what he meant, \"well... lucky old me, that's all I can say.\"\n\n\"What have your previous girlfriends looked like?\"\n\n\"Last one was a skinny blonde, PE teacher I'd known since University. One before her was a blonde as well, nice boobs and a great arse, not a patch on yours mind.\"\n\n\"You like my arse?\"\n\n\"What I've seen of it. You are a classic English hourglass, you're only the second brunette I've ever dated.\" She grinned.\n\n\"You thought my lips should be a tiny bit more pouty though didn't you?\"\n\n\"Wow,\" he said, \"you noticed?\"\n\n\"After your third millennium you do become quite good at body language, but I actually just knew, the way I always do.\" She nodded her head, \"But I'm surprised they didn't change when you thought it, that's what normally happened. And as soon as a nice boy gets up the nerve to talk to me, the big brave boys would arrive and scare them off. Kind of what you had with Henry, then the two policemen.\" She wiped her face again, \"that's why I stopped talking to men altogether, only go to the pub when there's a match on, or a fete, or a fair -- but I have a curse, and men just keep appearing and falling in love with me.\"\n\n\"I see,\" said Steve, really not seeing at all. \"But... did NO ONE notice?\" he tried to hide his incredulity despite her mind reading.\n\n\"Nope,\" She stretched her legs out, \"It just kind of worked out that people would only ever remember me as they saw me that day, everyone... every day.\" She ran a hand through her lustrous brown hair, \"They always knew me, they just never remembered that they had known me their entire lives, and that I had often seen their christenings, their weddings and would go to their funerals, only from outside the church of course, can't get inside,\" she shuddered, \"when I tried I just felt an all over burning sensation and I just find myself at Holborrow Park, where I threw the stone.\" She moved closer to him and her held her tighter, \"and I have a horrible feeling that by tomorrow you'll have forgotten all this, like I said.\"\n\n\"But... pictures...\"\n\n\"Ah, the birth of the camera! I just never have my picture taken. When people try, and hundreds have, I am probably on the edge, or the camera doesn't work, or my face or sometimes the whole picture is out of focus...\"\n\n\"Yeah,\" he said with a grin, \"but no one disappears from finance records.\"\n\n\"I don't know,\" she said with a slight smile, \"you're the first that ever found me.\"",
        "\"Council tax and rates records,\" he said, \"you've been paying your rates here for 140 years.\"\n\n\"Yes, now you come to mention it I suppose I must have.\"\n\n\"Never changed your name?\" he struggled to hide his disbelief.\n\n\"Nope, Rosella Mary Pendall, always has been and always will be; it's been varied of course, Rose, Rosie then Ella, but that's only since the war.\" \n\n\"Which one?\"\n\nShe looked around, \n\n\"Last one, World War Two.\" She brushed her hair back from her face again, \"never had a need to change my name, I've always paid my way, no one ever looked at me twice, unless they fancied me of course which was reasonably regularly.\"\n\n\"Are you a witch?\"\n\n\"I make potions if that's what you mean.\"\n\n\"Did you slip one to me?\"\n\n\"No, that's precisely what I don't understand, you don't seem to be affected by the stuff that effects all of the other men. My look hasn't changed, you didn't run away from Henry, from young Andy on the quad, from all those little kids; in fact you stood up to them and no one ever has before, ever. Nor did you start to say horrible things about me or have a need to leave,\" she looked him in the eyes, \"You remembered our date...\"\n\n\"Why did I find you so attractive so quickly?\"\n\n\"Dunno\" she said, \"You know better than me why you feel about me the way you do but I promise you, it wasn't my doing.\" She looked away from him for a moment, \"You were such a nice man that the last thing I wanted to do was to... well, to fall in love with you; not when I would just have to get over you when moved on.\"\n\n\"So how I feel for you now isn't part of the curse? Not witchcraft?\"\n\n\"I don't know,\" she said looking quizzically at him, \"How do you feel about me?\"\n\n\"I'm crazy about you,\" he said as if he had only just realised it, \"you're all I think about.\"\n\n\"But I'm 348 years old.\"\n\nHe grinned, \"I've always had a thing for older women...\" He moved his face closer to hers, and kissed her. \n\nShe didn't object so he continued, going do far as to tangle tongues with her. Her eyes popped open when he did that and they both smiled. She let him continue and he stroked her cheek. \n\nThey broke for breath and he spoke again, \"and you've never made love?\"\n\n\"Not once, still the oldest virgin in town. You're only the third person that's ever kissed me, like this I mean.\"\n\nHe looked at her and kissed her again, \"David Garrick?\"\n\n\"He was the last one,\" she smiled and kissed him back, \"have rather avoided it since,\" she dropped her eyes but recovered putting a hand to his face, \"you don't have to stop though,\" she whispered.\n\nHe continued and they greatly enjoyed themselves, arms around each other and enjoying the closeness, her especially and she couldn't seem to get close enough to him. \n\n\"So where is Henry and the rest of the young farmers with their pitchforks?\"\n\n\"I don't know, I am rather expecting them,\" She looked towards the window. \n\n\"Let's keep going until they arrive then.\"\n\nShe smiled a tired, resigned smile. \"Stevie, I've no idea how this will turn out or what could happen to either of us. But...\" she paused, \"I would love to make love, and what's more, I would love to make love with you,\" She kissed him this time, \"right now.\"\n\n\"Wow,\" he said, looking at the honest look on her pretty face, \"of course.\" \n\nThey both stood and he walked her through to his bedroom staring deep into her brown eyes.\n\nSomeone that had never made love; an honest to goodness virgin, he wasn't convinced he'd ever met one before let alone gone to bed and introduced her to lovemaking and done that... that whole hymen-breaking first thrust, that dash of blood on the counterpane, her gasp as he takes her for the first time and her gradual rise to orgasm and their passionate joint climax. (Yeah like that was going to happen.)\n\nThey kissed again in each other's arms stood next to the bed, lips locked passionately.\n\n\"Well, perhaps we should take some clothes off?\" she said.\n\n\"Sorry,\" he said, \"Still trying to be romantic,\" he said with a smile, \"I've never done this with someone that's never done it before.\"\n\n\"Well I've read all of the best guidance at least,\" she said, \"Jane Austen, Keats, Pope, Bryon, Barbara Cartland, Mills and Boon.\"\n\n\"Well I'll bow to your superior knowledge then,\" he undid his shirt, \"let's get naked.\" He slipped out of his shirt and started on the belt on his jeans. Ella was showing slightly more reluctance even though he has already seen her sexy black lingerie beneath her boring dress, and he stopped. \"Ella, if you're not comfortable doing this then no problem...\"\n\nShe shook her head and smiled, \"I'm just a bit... shy, I've never been naked in front of... well... anyone really!\"\n\n\"Lovely Ella,\" said Steve, \"Why don't I go into the bathroom and, well, clean my teeth or something which will give you ample time to get undressed and climb into bed.\"\n\nShe thought about it and had a minor mental struggle, but just picked up his shirt and held it in front of her. \"Thanks Stevie,\" she said, blushing a gorgeous red colour.\n\nSteve stepped into his bathroom and actually did brush his teeth, peeking through the half open door for an indication she was in bed and he could go back in himself. He caught a glimpse of her as the dark blue dress came off again, but there was no sign of the hot black underwear she had shown off early! Instead she wore plain white panties and a matching bra and those came off. He heard some movement and the rustling of his king size duvet and guessed that she was safely under the covers.\n\nHe rinsed his toothbrush, washed his hands and stripped out of his trousers, leaving his stretchy boxer shorts pulling across his quite healthy erection.\n\nTurning off the bathroom light he stepped into the bedroom leaving his trousers on a chair, sitting on the bed moving the duvet just enough to give him room to get under it without embarrassing his soon to be lover.\n\nFrom his bed he turned off the main light leaving the two small lamps on each bedside to cast their gentle illumination across the room. One of the things that Ella had done had been to brush out her dark hair and she looked even more outrageously attractive.\n\n\"I... really don't know what we do next Stevie,\" she said.\n\n\"Well, let's just have a kiss and a cuddle and see how it goes.\"\n\nShe beamed a smile at him to let him know that would be fine by her. \"Stevie,\" she said, \"If we both disappear in a puff of nothing and wake up in our own beds tomorrow morning, I want you to know now that... that I love you. I loved you from that moment in Traitor's Lane and you gave me your arm, I wanted to tell you when you were in my shop, to tell you... l loved you more than anyone I've known in 350 years.\"\n\nHe looked at her as if in some kind of realisation. \"I love you too Ella,\" he said, feeling his erection stiffen even more if that was possible. She pulled him close and they kissed strongly and with great passion. He felt her moving her naked skin across his, obviously enjoying the intimate contact.\n\nHe put his hand to her face and stroked her cheek, then her hair, letting his hand move down to the soft skin of her neck, and the gentle curve of her shoulder and upper arm. His mouth followed the same trail and soon she was panting and gasping with the pleasure as he caressed her with fingers and lips.\n\nFinally his hand stopped at the hardness of her nipple and he gently stopped there, brushing it lightly with fingertips until his mouth could catch up and he could drop light kisses across her perfect breasts and finally settle on the hard red, slightly goose-pimpled nipple flesh that he sucked and suckled.\n\nBeneath him Ella was writhing in pleasure, her naked body pushing against him so he kissed across to its twin dropping his hand to her bare thigh to hold her, squeezing her bare flesh.\n\n\"Oooh Stevie,\" she hissed as he pushed his wrist down onto her groin and it was extremely evident that while Ella was very new to this kind of thing she was very keen to learn, and just the touch of his skin against hers 'down there' had her groaning into him. That was his cue and he kissed a line down from her perfect cleavage down her flat stomach pausing to poke his tongue into her navel until there was the start of dark pubic hair.\n\nHe sat up, baring her breasts and groin momentarily, \"It's... grown back!\" he saw what had previously been a groin and pubis 'fashion model bare' now covered with a dark short curly bush.\n\n\"Yeah,\" sighed Ella, \"and I've no idea why!\"\n\n\"And what happened to the black undies?\" he looked across to her pile of clothes and the white bra and panties on top of the dark blue dress.\n\n\"Again, it happens when I think about it,\" she looked up into his face, \"I wanted you to see the black lace so you did, I wanted you to see me shaved bare.\" She stroked his cheek again, \"but this time I want to be me, I want to be Rosella, not some wet-dream porn star in some sleeping wanker's fantasy dream shag,\" she kissed him, \"just me.\"\n\n\"You being you is perfect Ella.\"\n\nHe decided that tonight was strange enough so got on with what he had been doing before, and kissed around her vulva feeling her tremble the closer he got to the important bits. He stroked around her labia paying intimate attention to her inner thighs, popping his head up to look at her surprised face, getting a first look at her beautiful naked body, and it was well worth it.\n\n\"OK so far gorgeous?\" he said.\n\n\"Oh yeah,\" she replied looking down at him briefly. He kissed her puffy pussy lips flushing up to meet him.\n\n\"So have you ever had an orgasm Ella?\" he gently eased the lips apart with his thumbs and forefinger.\n\n\"Oh yes, many. But always on my own; discovered the orgasm when chatting with some women in the early twenties.\"\n\n\"In your twenties?\"\n\n\"THE twenties Stevie!\" she chuckled, and he could feel her relax even more, \"some very posh flapper girls weekending in the country and looking around my shop for contraception. I didn't have any sadly so they said they'd have to resort to their fingers. I didn't believe them when they told me about wanking at first of course, then the tallest told me what that little button of skin at the top of my pussy was for...\"\n\n\"This one?\" he said flicking it with his tongue.\n\n\"Oh hell yeah!\" she gasped, \"I'm extremely well acquainted with the female organs of course, what with being a mid... awwww shit...\" she gasped as he played around some more, \"just like you seem to be.\" She looked down her naked body at him again, \"masturbation made the depression that came after much more bearable; I guess that Mrs Holborrow didn't add me not being able to come to her curse, probably because she didn't know what an orgasm was.\"\n\nHe licked down her fleshy lips tasting woman for the first time since he'd split up with his last real PE teaching girlfriend in Tewkesbury, and she had been a real fan of oral. \n\nHe pushed his tongue into Ella only to find his way barred by a soft barrier, one he'd never encountered before and he guessed that was it. Her hymen, and much as he'd had his doubts over Ella's unbelievable story, there was no denying that whatever had happened to her, she was a virgin. With that in mind he decided to skip over that particular barrier and just went straight for her clitoris and the orgasm he really wanted her to have. And she did.\n\nAlmost without him noticing she rolled into her climax with a high whine, almost of shock, as she came into orgasm.\n\n\"Christ Stevie!\" she hissed as the spasms eased off, \"is it always as good as that?\"\n\n\"I'll certainly try my best honey.\"\n\n\"Suppose we should got rid of this darned virginity of mine,\" she said.\n\n\"Only if you're sure honey.\"\n\n\"I'm not going to come like that on my own too often that's for sure.\" She slipped her arms around his neck and kissed him, trembling as she felt his hardness at the lips of her vagina. \"To quote all of the best books I've ever read, take m... oooh shit!\" she hissed after a sharp intake of breath, \"I felt that!\"\n\nHe'd had something in the back of his mind telling him to just do it, to take her virginity, now; so he had.\n\n\"Sorry honey,\" he said, \"only I've been laying here for about five minutes thinking of the best way to do it and I figured, same as pulling off a sticky plaster, get it done quick.\"\n\n\"Well you certainly did that,\" she said slipping a hand down to her groin to rub where they were now joined.\n\n\"Sorry Ella, do you want me to pull out for a moment?\"\n\n\"Hell no,\" she said bringing her hand back up, \"just give me a second to get used to it and we can carry on.\"\n\n\"I suppose you don't have contraception?\"\n\n\"Hmm... the almost three hundred and fifty year old career virgin having a supply of condoms in her handbag... what do you think?\"\n\n\"I guess not, I'm afraid I haven't either, perhaps...\"\n\n\"Stevie,\" she whispered in his ear, \"I'll take the chance... lover.\"\n\n\"After all,\" he said with a sideways grin, \"what's the worst that can happen?\"\n\nHe pushed up and into her being as gentle as he could, conscious that his lover might have had some pain down there. Just as he started to get into it so did she, and their passion for each other began to rise.\n\n\"Oh Stevie!\" she hissed into his ear as he lay on her bringing his naked flesh into contact with hers, feeling her grip him with her thighs.\n\n\"Is it OK baby, I'm not hurting you too much?\"\n\n\"No,\" she sighed, \"it really is quite lovely and I'm almost sorry I never tried it before.\"\n\n\"Waiting for me?\"\n\n\"l guess I probably was Stevie,\" she said smiling at him, \"anyway don't stop what you're doing, I have a feeling that you're just getting to the good part.\"\n\nHe took that as a yes and started to fuck her even faster, listening to her gasps and groans to make sure that they were of pleasure and of nothing else.\n\n\"I'm going to come Ella, last chance to stop me!\"\n\nHer response was to grab his hips and pull him back and forth by them until she felt his final hard thrust and gasp as he lost himself inside her for the very first time. She squeezed him tight with her thighs, letting go of his hips to put her arms round his neck and hug him to her. The earth moved, or so it seemed to both of them. \n\n\"Ooooh Stevie! That was worth the wait, thank you,\" she took his face in her hands and kissed him, \"thank you for finally making a woman of me.\"\n\nHe rolled to one side pulling her naked form against his and exchanging the occasional kiss as they came down. They slept well.\n\nEven though the next morning was a Saturday he woke at his usual work o'clock at a shade before 0645 and felt warm, comfortable and refreshed, the reason being the gorgeous brunette in bed next to him naked, beautiful and as well sated by their nights exertions as he was. \n\nHe took a long look at her and saw that her chest was rising and falling, so nothing untoward had happened to her in the night whatever she'd feared.\n\nHe slipped out of bed and tiptoed to his adjacent bathroom, then the kitchen and made two mugs of tea getting back into the room and the bed without waking her. He checked out that morning's news on his smartphone as she too stirred. \n\nHe lay down on his pillow and made sure that the first thing she would see when she opened her eyes was his smiling face. Her eyes flickered open. \"Hey Ella,\" he said, \"remember me?\"\n\nShe had a momentary look of shocked puzzlement then her face erupted in the most wonderful smile and she put her arms around his neck again and pulled him into a most wonderful kiss. \n\n\"Oh Stevie!\" she cooed, \"you're still here,\" she kissed him, \"and I'm still here,\" she kissed him again, \"and... and...\"\n\n\"and I made tea,\" he said, and Ella whooped her delight, wrapping her arms around his neck and kissing him again.\n\n\"I slept all night Stevie... no nightmares!\" She said when they broke for breath.\n\n\"Well, sleep with me tonight and see if works again.\"\n\n\"Deal,\" and she kissed him again.\n\nThey drank their tea and chatted about the night before until Ella had to get up and head to the bathroom. He closed his eyes as she got up from the bed but he took a sneaky look at her back and shapely arse and she picked up his shirt from the night before and pulled it around her. On her return from the bathroom she had tied up her hair and buttoned his shirt cleavaging her beautiful breasts, and she looked even more perfect.\n\n\"Breakfast?\" he asked.\n\nThey spent the morning eating his great fried breakfast and drinking more tea and Ella complained of some minor tenderness around her pussy but was convinced that she just needed more practice. \n\nThey had a shower and while he was drying himself, she emerged looking wet, naked and wonderful and he pushed her back onto the bed and they kissed, cuddled and fondled, and before either really knew what was happening they were making love again. It was as nice as the previous evening only the newness of the act and the bightness of day made it all the more special.\n\nHe suggested going to the pub for one of their wonderful lunches but Ella said that on a day like this the last thing she wanted was for some big burly farm boy to appear and try and scare Steve off.\n\nSo between them they cooked a late lunch, hardly the size and quality of the meal they would have enjoyed across the village green but still nice. They sat in each other's arms watching the TV and both gave in to their carnal desire for the other person and were soon making love again. This time Steve introduced some different positions after his bout of oral sex and Ella's first multiple orgasm, and she discovered the delight of being taken from behind on her hands and knees. She had another great night of dreamless sleep waking in his arms and making love again. \n\nAt just before eleven they walked back towards Vine Cottage but via the war memorial and the remembrance parade standing close but not too close, just in case. She fed Charlie the cat, and showed Steve more of her historical artefacts including yellowing letters from Davey the fighting Tommy Atkins, some with his muddy thumb prints. Ella said that Davey's Mother had fumed once the postman told her he'd been writing to Rosie. Davey died weeks later, so of course that became her fault as well.\n\nHe read the inscription from Garrick to his 'Sweet Rosa' in the velum sheets of his Shakespeare Portfolio and he guessed it would be worth a fortune on EBay, but never said! She checked her mail, collected her laptop and walked back to his place again for the evening.\n\nThat third night in his bed he knew that something was not right when she woke with a temperature and a fit of coughing. \n\n\"Stevie,\" she gasped, \"Stevie...\"\n\nHe turned on his bedside lamp and got his glass of water, handing it to her so she could take a sip. \"Are you OK Baby?\"\n\n\"I feel terrible,\" she replied, her pale face full of shock, \"I think...\" she sat up her breathing laboured, \"I think this could be it!\"\n\n\"Could be what,\" he tried to shake the sleep from his head.\n\n\"The end,\" she gasped, \"I've fallen in love with you and you with me, I've known love. This is Mrs Holborrow's final revenge!\" She started to cry.\n\nHe put a hand to her head, she had a temperature. \"Do you have a sore throat?\" She nodded, \"headache?\" more nods, \"and a fever?\"\n\nShe stopped and thought about it, \"Yes!\" she said detecting he might not have been quite as worried as her.\n\n\"You, my Darling Ella, have a cold.\"\n\n\"What?\"\n\n\"You have a cold honey, nothing to worry about. You need to drink plenty of fluids, take vitamin C and aspirin and paracetamol.\"\n\n\"And then what happens?\"\n\n\"You get better,\" he said.\n\n\"But...\" She looked confused.\n\n\"It's a cold Baby.\"\n\nShe put a hand to her sweaty forehead. \"Stevie,\" she said, \"I'm nearly three hundred and fifty years old, I've never had a cold.\"\n\n\"Never?\"\n\n\"Not once.\"\n\n\"No flu?\"\n\n\"Nope,\"\n\n\"Upset stomachs, toothaches, headaches, bad back?\"",
        "\"No.\"\n\n\"You are the single most regular customer in the pub, since the seventeenth century no less, not one hangover in three hundred and fifty odd years?\"\n\n\"It was hell, but I managed it,\" she said with her very rude grin.\n\n\"You probably caught it from me, I have seventy little germ carriers I have to deal with five days a week but us teachers are virtually immune to them.\"\n\nHe went down to the kitchen and made her one of those hot lemon cold remedies he had so little faith in, and he often wondered why he wasted his money on them. He took it upstairs and handed it to Ella. She was sat up leaning back against the headboard, the bedclothes pulled across her fantastic bust, her face beaming at him\n\nHe returned her smile with one of his own, handing her the drink, plus a coffee that he'd made for her.\n\n\"Thank you Stevie,\" she said taking the cup from him and sipping at the edge of the coffee.\n\nThey drank their coffee and Steve turned on the TV with the remote control. It was a chick flick and Ella seemed very impressed and they snuggled back into the pile of pillows. They both fell asleep again. He woke at work o'clock, showered, and got dressed for his day at school.\n\nHe made her more tea, brought her a bowl of his overnight oats and another hot lemon and told her to make herself comfortable and he would be back at a bit after four. She kissed him and thanked him for his care of such an old lady.\n\nHe came home that night with fish and chips from the nearby shop, and they had their third night in front of the fire and the TV, Ella happy that despite her cold, her death might not actually be imminent.\n\nThat was very much the pattern for the next month, and he gave her a key so she could let herself in and come and go as she pleased seeing as Charlie the cat had never been in a cat carrier and showed no interest in leaving Traitor's lane or the surrounding woodland and fields so full of the wildlife he'd been chasing for two hundred and seventy years.\n\nShe still avoided other villagers and the grief that was bound to occur, meeting only the other shopkeepers, delivery people and the customers that came in to see her. Her internet and postal business was still going well and she was happier than she could remember being, and the sex was tremendous and so exciting!\n\nOne evening he woke in the night and it was to Ella moving from the spoons position to lay hard against him. They both opened their eyes. They kissed, gently passionately and it was a real moment for them both.\n\nElla had big tears running down her face.\n\n\"Whassup baby?\" said Steve.\n\nElla smiled at him, trying hard to control her lips. \"I'm waiting for it all to go wrong.\"\n\n\"What?\"\n\n\"I'm just waiting for you to get up and walk out, decide that you are going to close the school, and your new job is taking you outside of the village, only I can't go with you. Something like that.\" She took the edge of the duvet and wiped her eyes, \"I've been doing this for many, many years Stevie.\"\n\n\"Yeah well at least I know that now.\"\n\n\"Yeah, but will you still know that tomorrow?\"\n\n\"It is tomorrow Honey,\" he said, \"what I do know is, right now I'm in love with you Ella.\" \n\nHer pretty face burst into the largest grin. \"Aww thank you Steve!\" she giggled, \"you're the first person to say that to me since the industrial revolution!\"\n\n\"And what happened to him?\"\n\n\"Met another girl,\" she said quite matter of factly, \"one that could have children and could go to the summer fair two villages over and wouldn't result in him being tarred and feathered for being seen with me.\" She rolled to face him, \"his great-great-great granddaughter is married to the bank manager that gave you the mortgage for this flat who just happens to be his great-great-great grandson.\"\n\n\"Let's drive over there,\" he said.\n\n\"Where?\"\n\n\"The next village,\" he looked at her with a grin, \"when was the last time you went there?\"\n\n\"It was Michaelmas fair; was a Saturday. I was eight years old and it seemed like we had gone to the other side of the world not the other side of the forest.\"\n\n\"What year?\"\n\n\"1674,\" she said matter of factly, \"first time I'd ever eaten goose! I thought I was the Queen of England that day! Father carried me through the fair on his shoulders.\"\n\n\"Let's go there then!\"\n\nShe froze, \"I'm scared Stevie,\" she whispered, \"I so want to travel with you but things are going so well and I'm terrified that the curse will catch up with me and... well, we lose each other.\"\n\n\"OK baby we can go another day,\" he kissed her and all was well again, until the next morning.\n\nShe woke to a small splash of blood between her thighs, which had run onto the bed sheets. She jumped up with a start.\n\n\"Stevie!\" she gasped, \"blood!\" She gasped and Steve sat bolt upright, looking down between his lovers thighs.\n\nThere was a small amount of blood there and he recognized it.\n\n\"Ella honey,\" he said, \"When was the last time you had a period?\"\n\n\"During the rump parliament, only had a couple of dozen of them, why?\"\n\n\"Did it feel like this?\" He put a hand on her warm belly.\n\n\"How the fuck am I supposed to remember, rather a lot has happened in the meantime.\" She was staring down between her thighs. \n\n\"In my humble opinion, since we started making love your body has decided it's about time you suffered like us mortals. After all now you've suffered a common cold it's about time you suffered the other curse that all women get, you've come on!\"\n\nHe walked to the local shop and bought a pack of absorbent pads, he figured that they would be easier to explain than tampons to a woman that hadn't had a period since the restoration. 300 years was rather a long break.\n\nTo celebrate this momentous news he insisted that they went to the pub for Saturday lunch seeing as the Young Farmers were playing an away match to another village team, and Ella seemed restless. \"What's up baby?\"\n\n\"I'm waiting for the men to start either growling or hitting on me.\" She said sipping her usual half pint of Poachers. So did Steve but wouldn't admit it. \n\n\"This is normal life Baby,\" he said, \"Don't knock it.\"\n\nDorothy the pub landlady came over with their meals and placed them down, Ella's first and they both noticed the genuine smile from the older lady, not the usual glare that Ella normally had along with an almost thrown down plate like she'd had before from the older blonde, just for daring to be attractive in her pub. \"There you go lovelies!\" she said, giving both of them a very knowing 'I know what you're doing' smile.\n\n\"Thank you Dorothy!\" said Steve.\n\n\"You're most welcome Steve, pleased to see you two in here,\" she grinned at them both, \"Still I suppose you have other things to be doing on these chilly nights!?\"\n\nElla looked up at the totally transformed landlady and giggled with a hint of embarrassment, \"Me and Uncle Dan are right pleased for you darlin',\" she whispered to Ella and leaned down to give her a hug and kiss her cheek, standing for a moment with her hand on the shoulder of her 'niece'.\n\nElla pressed a hand on hers and blew a kiss, and the landlady ambled back to her bar and the empty glasses ready for refill. \"That's the first time she's every touched me.\" Said Ella touching her cheek where the kiss had been.\n\nSteve looked across to his beautiful girlfriend and shrugged his shoulders, Ella smiled.\n\nOther than the occasional look from the occasional man at the beautiful woman with the dark hair, the attentions of besotted men seemed to stop that day. She was still pleased that Steve was besotted with her though. \n\nThey were still sat in the pub when the Land Rovers and cars came back from the match and the team celebrated a draw in their usual style, and the bonhomie was as it normally was but with Ella being included. After the meal they walked back across the square hand in hand, acknowledging the occasional greeting from other villagers.\n\nAnd that was the way it continued. Sometimes they stayed at Vine Cottage and sometimes at his place, but they slept together each night. \n\nElla had finally discovered sex and was very impressed. She could just look at Steve and he would know she wanted to make love and he would begin, stroking her still lustrous hair and her skin, suckling on her fantastic breasts before feasting on her tight pussy bringing her to orgasm after perfect orgasm. She would then roll onto her hands and knees presenting her perfect arse to him, still her all time favourite position to 'get fucked'; she still loved it when he slid across her for missionary sex, but when it was two horny people getting it on she wanted doggie, every time.\n\nAs they approached their first Christmas together, she realised that after only a few periods they had stopped. She didn't tell Steve as she thought he would just worry. She hadn't had periods for 300 years and the two she'd had would be enough for her a no mistake. Right now she would enjoy whatever time she had with Steve to the fullest extent. \n\nHe apologised to his parents that he wasn't going to be able to come and stay for Christmas but did invite them to his village and they stayed at his place while he slept at Vine Cottage -- with Ella.\n\nHis parents loved Ella and she them and they had a great time, enjoying New Years Eve at the pub.\n\n\"You must come and stay with us!\" said his Mum. Ella smiled, it was still her one big fear, trying to leave the village was just pushing her luck.\n\nAfter a few months Steve noticed that she hadn't had a period, and asked about it. \"Weeeeell,\" she sidled up to her lover and stroked his chest, \"They just stopped Stevie, just as quickly as they had started.\"\n\nSteve laughed, \"Oh my lovely Ella, hadn't you considered the obvious?\"\n\n\"Obvious what?\"\n\n\"You could be pregnant Darling.\"\n\n\"Preg...\" she gulped, \"Pregnant? How?\" she said with some indignation.\n\n\"Coming from a former midwife, I'm a little concerned that you aren't sure.\"\n\n\"But... but I can't get pregnant!\"\n\nHe reached around her waist and pulled up her loose sweater, and stroked a hand across the small bulge at her midriff. \"I beg to differ...\"\n\nShe visited the doctor and she confirmed Steve's diagnosis, and Baby Pendall-Clements was due the following July. She walked across to the school, chatting nicely with the receptionist until Steve appeared from his office. They walked out into the street and she turned away from him briefly, \"You were right Stevie.\"\n\n\"About what? I'm so rarely right about anything that I need confirmation.\"\n\nShe smiled, \"I'm pregnant.\"\n\n\"Really? Oh Baby that's fantastic...\" he saw her face, \"what's up?\"\n\nShe came close to him, \"I'm scared Stevie,\" she said with a sniff. \"I've delivered hundreds and I mean hundreds of babies in this village and now it's my turn,\" she shuddered and put a hand to the sides of her tiny swollen pregnancy, \"Now it's my turn I'm fucking petrified.\"\n\n\"Why? It's just...\"\n\n\"I know what it is, more than most, but before when I knew it was never an option and I would live forever it was just something to be sad about, but now...\" she bit her bottom lip, \"but this! Shit! I've got to be someone's Mummy and do all of those things that Mummies do, and... shit!\"\n\nHe put his arm around her and beamed at her, \"You're in shock honey,\" he said, \"perfectly normal! We'll do fine Ella, both of us!\"\n\n\"But... but...\" she took a deep breath, \"You can never leave me Stevie Clements, you know that?\"\n\n\"And I never will, even if it takes another three hundred years.\"\n\nHer pregnancy passed normally and come the big day, much as she struggled not to talk the room through her very swift labour including the show and crowning, or correct the midwife she was still very well informed. The professional hinted that many of her nervous new mum's were 'YouTube midwives', but Baby Samantha (named for her Mum's brother Sam who had looked after her until he was apprenticed to a cobbler in London) was born on her due date in their bedroom at Steve's place, and the nursery established in the spare room there because of the convenience and nearness to the village, the shop, the pub, and also her unspoken desire to put some distance between the perfection of her new baby and the memories of Vine Cottage.\n\nTwo weeks later the blissfully happy parents were being nagged by the health visitor to drive to the nearest town and register Baby Sam. \"No problem,\" said Steve, \"I'll take a drive over an...\"\n\n\"And what if Ella wants to do it?\" said the health visitor watching for signs of over protection and wanting Mum to get back into the world.\n\n\"Oh I don't mind...\" said Ella. \n\n\"Well I do!\" snapped the business like health visitor, \"I want you out and about and buy a new pair of jeans to show off your great figure you've got back so quickly. Yes, a run into town and an expensive meal in a good restaurant will do you both the world of good. Tomorrow?\"\n\n\"Eerr...\" both new parents said.\n\n\"Yeah, tomorrow, Saturday will be murder with a pram.\" She leaned over the sleeping Baby Sam, \"Trust me, you'll do fine!\"\n\nThey both bathed their tiny baby and had an early night, and Steve drifted off quickly. He began to dream...\n\nHe was in the village, but his house wasn't there so he walked until he reached Vine cottage, there was no road sign to have an apostrophe or not, but there was the lady that had interviewed him, smoking a clay pipe and standing up from the laid and coppiced hedgerow she had been sat on.\n\n\"Ah'ternoon Cap'an Clements,\" she nodded, her accent as it had been the day she had interviewed him. She looked him up and down, \"So glad I gave you the job.\" She drew strongly on her pipe, \"you have to go into the village, The Squire is about to meet Miss Brewer from next door,\" she nodded towards a smaller more ramshackle cottage he'd never seen before.\n\n\"What's that to do with me?\"\n\n\"Aw, you might just be able to stop som'at bad happenin'!\" she said. She put her pipe back between her teeth and folded her arms in parenthesis.\n\nHe walked along the farm track and there was a man, the image of the bronze statue in the church stroking the cheek of a young girl in clothes much like the older lady's had been. The older man was obviously flirting with her, judging by her giggles.\n\nSteve stepped through a gap in the tall hedge and now unseen, was able to come level with the pair and listen. \"...and there'll be another crown in it for you my dear, just the second they string up that evil harlot from Vine cottage.\"\n\n\"And will I 'ave all 'er clothes master?\"\n\n\"Of course!\" he chirped and stroked her cheek again, \"And some more too!\"\n\n\"But what about my immortal soul Squire,\" she said, \"giving false testament is a mortal sin!\"\n\n\"But she's a witch my dear, you'll be hastening the death of an evil one and that will surely see you into heaven on that alone!\"\n\n\"Oh Squire!\" she said, \"I'll do that this very day!\"\n\nSteve burst through the hedge and emerged between them.\n\n\"I've heard everything you traitorous pair have plotted!\" he said.\n\n\"How dare you sir!\" said the Squire brandishing a stick and jabbing Steve's chest with it.\n\nA chest that Steve saw was covered by a fine and elegant uniform in red cloth and silver buttons, a fine yellow sash and tall black riding boots.\n\n\"I am a gentlemen sir,\" said Steve his hand resting on the hilt of a sword he hadn't noticed before, \"Captain Clements of the 28th of Foot and I would be failing in my duty unto the King if I allowed this travesty before the law and before God.\" The girl looked terrified, seeing the angry and armed army officer before her. \"Go back to your parents girl, give Squire Holborrow back his coin and confess your sin to the priest and no more will be said.\" The girl all but threw the gold crown back at the fuming little man across from her, then ran.\n\n\"Why...\" snarled Squire Holborrow.\n\n\"Draw your sword if you desire satisfaction sir,\" said Steve. \n\nThe little man raged, with pursed white bloodless lips flexing as he tried to work out if the thin rapier that hung fashionably from his hip could stand against the broad infantry officer's sword that, while lacking the glamour the Squire's had, carried enough wear and tear to suggest that the owner knew what he was doing with it. \"One word against Mistress Pendall sir, and I'll demand satisfaction of you.\" Steve leant forward, \"trust me you cowardly little arse.\"\n\nThe squire blanched, his bottom lip flapping, \"You stand there!?\" he snapped in a squeaking furious tone, \"That traitorous protestant whore! That bitch that kicked me in the vitals?\"\n\n\"Aye sir, fucking right I do...\"\n\n\"I'll have her house and her land, Captain, no question! Colonel Gibson's wife is a friend of my wife's; I'll have you posted to the colonies sir, sent to the sub-continent to die of malaria,\" he gave an overexcited squeak in his enthusiasm at the possibility \"and I won't give THAT-\" He snapped his fingers, \"-for your bullying threats!\"\n\n\"Try Sir,\" said Steve, \"I will be resigning my commission and taking a place locally, with a mind to becoming the school master.\"\n\n\"We have no school!\" snapped the squire.\n\n\"You have no school YET...\" said Steve. \"I'm bored with this now, draw your sword fuckface, let's get this over...\" he drew his sword and in doing so his would-be adversary was away on his high heels, running and stumbling with his dandy shoes putting him off balance. Steve laughed loudly and the squire turned in his flight, falling and landing flat on his face. Steve laughed even louder, seeing the ripped knees of the squire's trousers.\n\nSteve leant back, then decided that he would follow this man just in case he decided to take his revenge on the first young woman. He walked in the direction of the woods, back towards Vine Cottage. \n\nThere was a horse, packed for travel with a bag strapped to the cruppers in the same red material as his jacket, and the horse seemed animated at his approach so he undid the reins from the fence and walked with it.\n\nHe took the path that was now the national trail and led to the white horse carved in the hill some mile or so away. As he walked he was approached by an older man, whose dress led Steve to guess he was a farmer. \"Master, have you seen a young girl go by?\" said the Farmer, troubled; \"she was a'meeting the squire and while I trust her, I have no trust for that vagabond.\"\n\n\"In a blue dress?\"\n\n\"Yes sir.\"\n\n\"I saw her running this way, a few moments ago...\" from the distance they heard a scream and Steve and the man ran towards the noise and possibly his daughter in distress, the trotting horse between them.\n\nThey rounded a bend in the track and there was the blue dress, thrown over a stone wall above the buttocks of its wearer on display with flailing legs as another pair of buttocks appeared behind. \n\n\"Oii you!\" screamed the farmer, and the other person appeared, his diminutive size and bloody knees telling Steve who it was before the Squire turned and showed his face, his erection sinking as he saw the two men approaching, and the screams from the girl increased with her imminent rescue. The squire raised shocked hands the moment there was a loud single crack that had Steve's ears ringing.\n\nSteve saw the Squire clutch his chest, and the sudden flourish of red on the chest his white shirt. The Farmer was lowering a still smoking musket from his shoulder, evidently drawn from his side of the soldiers saddle. \n\nThe squire looked at the blood on his hand, spat some in surprise then slipped to his knees then his face.\n\n\"Bastard,\" said the Farmer running to his daughter, and taking hold of her bruised and bloodied face.\n\n\"Captain Clements sir!\" shouted another soldier running towards him, \"is everything alright? We heard a shot.\"\n\n\"Yes,\" said Steve seeing the younger and obviously junior officer running towards him with two ordinary soldiers, \"This gentleman has just shot and killed this man that we found attempting to rape his daughter,\" Steve looked down on the scrawny body before them, genitals still exposed and the still crying maid with blood coming from her mouth and nose, and eye beginning to darken.",
        "\"Bastard!\" said the first Private.\n\n\"Captain Clements sir,\" said the junior officer, \"That's... that's Squire Holborrow!\"\n\n\"That WAS Squire Holborrow, now he's just a dead rapist, to hell with him,\" spat out Steve, \"I will speak for this brave farmer, I witnessed the late squire's assault and attempt on this maid's virtue!\"\n\n\"Aye sir,\" said the junior officer, \"I'll arrange for men to come and...\"\n\n\"Leave 'im to the crows,\" said the farmer, turning and offering his hand to Steve, \"thank you Cap'n...\"\n\nAs Steve reached for his hand there was the sound of talking, and discussions about the critical state of the health service and Steve wondered where he was.\n\nHe came around and there was his gorgeous naked Ella handing him his baby daughter and a bottle of her expressed breast milk.\n\n\"Morning Darling!\" he said taking the baby, \"I've just had the strangest fucking dream...\"\n\nThey both showered, and Ella picked Sam from her cot, considering the task that the Health Visitor had given them and the reason for Steve's weird dream.\n\n\"Fuck it Stevie, let's drive to town.\"\n\nHe nodded and smiled, and opened the door down to the street and his car.\n\n\"I've never been to the big town,\" she grinned, \"coming to think of it, I've never done more than sit in a car,\" she said stroking her fingers across the door pillar, the dash and paying particular attention to the seat belt he pulled across her.\n\n\"You'll have to learn to drive! You'll love it,\" he said, \"I'll find a good driving instructor. Don't suppose you have a licence?\"\n\n\"No, although I have been entitled to one since 1903.\" She grinned at him.\n\nHe slowly pulled forward looking behind him to the baby seat and their child happily ensconced.\n\n\"Stevie,\" said Ella, \"Look, if something happens I just want you to know that this last year has been the happiest of my entire and very long life.\"\n\n\"Ella honey,\" he said stopping the car dead in his reversing manoeuvre, \"if you're worried we can go back. I want you and Baby Samantha here for the rest of my life and if that means ignoring the health visitor for a few years and just me driving out to nearby towns on my own then I can live with that.\"\n\n\"Stevie,\" she leaned over and kissed him, \"I've lived countless lifetimes and seen the world change, I've finally had the child I've always dreamed of and known the love of my life, you.\" She kissed him again, \"I hope that it's all going to be OK, but if it all comes to a grinding halt or I age 350 years in ten seconds like something out of an Indiana Jones movie, just keep going. Keep going and tell Baby Sam about her lovely Mum that died of a thousand cancers but loved her and her Daddy more than anything else in the known universe.\" She kissed him one more time. \"Just drive Stevie.\" She reached across and laid a hand on his on the gear stick. He drove forward. She closed her eyes. \n\nHe thought about the last year, this gorgeous woman, no HIS gorgeous woman with her outrageous story even he still wasn't sure he believed and what might happen to her, to their perfect child and even he had his doubts and dipped the clutch for a second. \n\nIf they both disappeared he hoped that he would remember none of it, not a thing and hoped he'd go back to that shitty school in that shitty town and not know about the village, his woman and his daughter. He couldn't live without them that was for sure.\n\n\"Love you Stevie,\" she said and lay back in the expensive leather upholstery of his expensive car.\n\nHe drove through the village, noticing the waves from the villagers seeing him, Ella and their baby out on their first road trip since the child was born a few weeks before.\n\nHe carried on driving, he passed the church with its red brick bus shelter still with the loopholes added by the Home Guard in 1940, and still bearing the signatures of the boys that had built them. He passed the rectory and looked to his left, Ella was comfortable and enjoying the sun on her face and closed eyes, content in her first drive. \n\nHe passed the old church and its cemetery and the ruins of the Holborrow house, Ella still looked fine. He came around a bend and saw an elderly lady at the junction waiting to cross. He slowed right down and waved to the lady to cross with a big smile, giving her plenty of room.\n\nThat was strange, he could have sworn it was the lady from County HR that had interviewed him for this job, dark hair, scar on her cheek -- the same woman he had dreamed about last night, it had to be her!\n\nThe lady stepped across the road with her dark walking stick, once she was more than half way across she stopped and picked up a cat, black with white socks and a white blaze on its chest, just like Ella's cat Charlie that he'd played with two nights before. The old lady waved to him holding out her arm indicating that he should drive on. He waved and returned her big smile.\n\nAs she bowed slightly Steve saw a scar on her right cheek clearly and knew it was his interviewer, and he could see her eyes on Ella, then with delight on Baby Sam in the back, then her huge smile and a blown kiss. He slowed down to pull over and say hello and thanks, but she and her cat had gone as fast as they had arrived. \n\nHe stopped at the T-junction checking his mirrors for her but she had definitely gone, so he turned right and headed for the large town and put his foot down, checking that his beautiful woman was still beside him and well. She evidently was. He put his foot down and moved up into third as the road straightened in front of him. \n\nHer face pulled into a grin and she screwed up her eyes, still not wanting to see what might be coming. \"Hell Stevie this is fucking torture, have we passed the Holborrow ruins yet?\"\n\n\"Yeah, about a mile or so ago.\"\n\n\"WHAT?!\" she snapped opening her eyes and looking at him and then the road in front.\n\n\"The ruins are back in that direction, about a mile and a half ago.\"\n\n\"The church?\"\n\n\"Was way back there!\"\n\nShe looked behind her, \"But...\" her pretty face flushed and she put a hand to Steve's wrist.\n\n\"But what?\"\n\n\"I've never been this far before.\" She looked from left to right and Steve slowed down to allow her to take in what was going on around her. He drove slowly and the surrounding trees gave way to fields of ripening crops, the golden corn weeks away from being ready and the bright yellow pungent flowers of oilseed rape. \"Does the road bend to the left here?\"\n\n\"Yes.\"\n\n\"The white horse,\" she said peaking up in her seat, \"is he still there?\"\n\n\"Of course,\" he said, remembering the running horse shape cut into the chalk by local men a thousand summers before.\n\n\"I used to play there when I was little, me and my big brother Sam would take bread and cheese and a jug of Dad's beer and walk there in the summer. Grandmother said that's where I got my power with potions from.\"\n\n\"Well, there he is look.\" He slowed right down and pulled into the small viewpoint car park.\n\n\"Can we go up and sit in his eye?\" She was almost bouncing in her seat now.\n\n\"Sorry lover,\" he said pointing up to the fence around the site, \"Horsey is a listed ancient monument look and you'd probably get arrested for breaking in.\"\n\n\"Ancient monument,\" she tutted, \"mind you Stevie,\" she leaned over and kissed him again, \"So am I.\"\n\nThey reached town, parked and Ella was all eyes for the business bustle going on around her almost hiding behind the pram, but to Steve's surprise she got used to it real quick, faster than seemed normal for that kind of culture shock. Again, Steve had that nagging doubt that all of this was just TOOOOO unbelievable.\n\nThey found the registrar and Samantha Eliza Clements was registered. They had lunch and a glass of wine to celebrate, and even went shopping and bought Ella her first pair of jeans to show the health visitor. Steve was impressed, she looked hot in them so she bought more clothes to update her wardrobe.\n\nThey headed home again with him taking a rather circuitous route to show her the nearby villages, and with them both tiring turned into the long road that would take them home, and all seemed well in the village, and Ella asked if she could go back to her place and check her post. \n\nHe slowed down and they entered Traitors Lane and it seemed very overgrown since they were there last just a few days before. So overgrown that he couldn't drive in to where he normally did and couldn't see the sign with the apostrophe. \n\n\"Stevie,\" she said climbing out of the car, \"There's something wrong.\" She got out, stopped and turned and unclipped baby Samantha and held her in her arms padding slowly down the lane towards her house.\n\nIt wasn't there.\n\nEverywhere was weeds and a few piles of brick, stone and a piece of tile. Ella was stunned. \"My house...\" she gasped, \"my things...\"\n\nHe walked across the site looking for signs of what might have happened.\n\nHe looked down at the brick path that he had trod so many times when coming to visit. There was no sign of it. The place where her front door had been was long grass that looked like it had been like this for many years, the place where the fireplace had been had a tall oak tree growing in it.\n\n\"It's not here,\" said Steve, \"and to be honest it looks like it hasn't been here for many years.\n\n\"But...\" she had tears in her eyes, \"where's Charlie!\"\n\nHe thought back to their journey out that morning. \"I thought I saw a cat like him with an old lady this morning.\" He stopped, \"funny thing, she had a big scar on her right cheek; I'm convinced she was the lady that interviewed me for this job.\"\n\nElla stopped, and turned back to him, stunned. \"Dark hair, darker than mine...\" he nodded, \"Did she walk with a black walking stick, a blackthorn?\"\n\n\"Yes, do you know her?\"\n\nElla turned to face him. \"Yeah,\" she said with a happy smile and tears in her eyes, \"I used to, that was my Grandmother.\" She hugged the baby to her in pure pleasure. \"She gave me Charlie just before she died, he was to keep me company and look after me and has done for two hundred and eighty years.\" She chuckled, \"I guess now the curse must be broken and after all, now I have you to look after me.\" She kissed Baby Sam who was starting to wake from her nap. \"She interviewed you?\"\n\n\"Yeah,\" he said recalling that afternoon, \"she had a really strong accent, very specific about what I was coming to do and how I had to be man enough for the job. I remember the green tea she made me, urrgh it was horrible!\"\n\nElla smiled, \"Tell me what it tasted like?\"\n\n\"What, other than horrible?\" she nodded, \"grass with a hint of petrol and garlic.\" He grinned at the recollection, \"said it would make me a big strong boy, and that I'd need to be.\"\n\n\"A petrol... spirit... fuel kind of smell?\"\n\n\"Yeah... is everything O...\"\n\n\"Grandmother Eliza,\" she closed her eyes, \"she chose you for me then she gave you a potion, it was one to protect you, to stop my curse affecting you the way it did other men.\" Ella's eyes filled with tears.\n\n\"If it's any consolation she blew both of you a kiss after she saw Sam.\"\n\n\"She saw Sam?\"\n\n\"Of course she did, and she saw you, her smile? Well when she saw Samantha there...\" he caught his breath with the realisation that all of the story he had been living with for a year was actually true, \"She looked so pleased honey, and proud.\"\n\n\"Thank you Stevie.\"\n\n\"So the protective green petroleum goop... love potion as well?\"\n\n\"No Darling Stevie, that was all you and me.\"\n\nThey went back to his place and even that looked different. His front door no longer opened straight onto a staircase but into a large sitting room with a mix of his furniture and hers, the same went for the dining room and kitchen. Only Baby Sam's nursery was as they had left it that morning. In the main bedroom all of Ella's personal things were there, with his.\n\nBack downstairs they continued their exploration, Ella looking worriedly for a missing item.\n\n\"My diaries,\" she said, \"I can't find my diaries!\" She pulled open cupboard after cupboard. They would be really hard to miss after all.\n\n\"I guess your Grandma figures you don't need them anymore.\"\n\n\"I suppose so,\" she said, \"after all,\" she moved closer to him with the baby held between them, \"I don't have to think about the past, I have a future now.\"\n\nAbove the fire place was a couple of new photos of them, a posed portrait and one that was clearly a wedding photograph with Ella looking wonderful with her dark hair and red lips contrasting beautifully with her white lace wedding dress and him in a grey morning suit, her veil pulled back showing her beautiful face, the happy and glowing bride on her big day. They both stared at the wedding photograph in amazement -- it was undoubtedly them!\n\n\"Bottom of my wardrobe, grandmother's box!\" back upstairs to their room and he pulled out an old beaten up oak documents box that he guessed she'd had for three hundred years. Under their still fresh looking marriage certificate from the local church they found her driving licence, her passport and her birth certificate -- she was thirty one - and assorted paperwork suggesting that Ella had lived in this house for many years inheriting it from her Grandmother on her death. He looked at the date on the marriage certificate, and they had been married shortly before the baby's conception. \n\n\"Grandmother,\" chuckled Ella, \"no out of wedlock children on her watch!\"\n\nOn her dressing table next to the open box was a small antique porcelain ring tree with three rings on it. She picked up two, a thin band of twisted yellow and white gold and a diamond clustered engagement ring and without thinking or particularly paying attention she slipped them onto the third finger of her left hand that was cradling Sam and they fitted perfectly.\n\n\"You forgot yours too...\" she said handing him his thicker wedding band with a slight shake of her head.\n\n\"Oh ye...\" by the time he'd slid his into the groove it had undoubtedly created in his skin over months. He looked at it and then her. \"Now they weren't there this morning Ella...\"\n\nShe stepped across to him, biting her bottom lip, \"I don't think they were, but then neither was all our stuff on the ground floor, but... I can remember... not putting them on when we got ready to go out... Mr Clements.\"\n\n\"Now you come to mention it, I do remember thinking I had forgotten it when we were driving to the registrar... Mrs Clements!\"\n\nJust on the top of the box, was an envelope addressed simply 'To be opened on the birth of my first great-grandchild'.\n\nRecognising the handwriting at least she quickly handed Sam to him and snatched up the envelope tearing it open, she read it aloud,\n\n\"My Darling Rosella,\n\nI trust this note finds you well, happily married and with my great-grandchild with you. Right now, life will extremely confusing for you and you will be struggling to understand just what is going on.\n\nBelieve me, everything sorts itself out in time, and in a short while it will seem like none of the bad stuff in your life ever happened as you both concentrate on Baby, and each other -- after all I just know you would have married a good one who is all that you want him to be, just like if I could have chosen him for you!\n\nLet life happen my dear, dear girl, forget the past and just enjoy the future and all of its blessings. I've found over the years that truth and justice just happen to have a way of working out. If ever I wanted for anything it was for you to be happy, as I just know you are now. The business we worked so hard for is all yours now and you owe it to yourself to put your feet up and enjoy the benefits after so many years of toil and heartache, so live long and live well my beautiful baby, I know your Mother and Father would have been so proud of you, as l still am.\" Ella's voice finally broke with the emotion, \"with enough love to cover hundreds of years, your loving Grandmother Eliza.\"\n\nShe slipped her arm around his neck and pulled him close, crying but with big smiles among the tears, \"I'm free Stevie!\" she wept, \"I'm finally free!\"\n\nThey went to the pub that night for a meal, and as they walked pushing the baby buggy before them there was a huge lump of architecture he'd never seen before.\n\n\"It's the Holborrow house!\" hissed Ella frozen to the spot, her mouth hanging open. As they got closer they saw that it was the Holborrow Hall Hotel and Conference Centre. She stopped and looked at a particular window, \"that window there,\" she said hugging herself against a particular memory, and looking through into a large room with tables and chairs, with happy diners, \"Remember it like I saw it yesterday.\" \n\n\"Things have changed Darling,\" said Steve, \"you probably did see it yesterday.\"\n\nSteve could remember what the park had looked like and taking his class there, he also thought about where she had stood to show him the point she had thrown the rock from; it was the same place without question. \"In her letter... she said it would be like the bad things had never happened. The house is still here.\" She looked shocked, stunned but he could detect and air of joy there too.\n\nThey walked on, he thought about mentioning his dream but decided against it.\n\nIn the pub that night all was bonhomie and almost everyone crooned over Sam in her pram gurgling quietly, Dorothy came from behind the bar to pick up her great niece Samantha and gave her a cuddle, kissing and clucking over the child's mother, the gorgeous brunette that she had spent all her years since puberty hating; not that she knew it now of course. \n\nIn his usual weekend corner waxing lyrically as he always did, was the Professor that Steve had talked to about the village and the academic's belief about what might have happened to the old squire and how Traitor's Lane had got its name, in this pub all those months ago and he greeted his friend Steven and offered beer. Tonight Steve asked him about 'the empty plot at the end of the Traitor's lane'.\n\n\"Vine Lane you mean?\"\n\n\"Yeah sorry, confusing it with a town I used to live in.\"\n\n\"Oh no, there hasn't been a building there since the 17th century. Was an old farm cottage, the last resident there was Rosie the midwife. She moved on to live with her grandma after the death of her father and it went to ruin. In fact many of the bricks were robbed out by the Holborrow Family and used to build that row of houses you live in!\" \n\nThe bespectacled man drank his strong ale and picked up the cheese and onion sandwich he was chomping through, \"not that Squire Holborrow lived to appreciate it mind you,\" he put down his thick crusty bread sandwich and looked conspiratorially at his audience. He dropped his voice to a whisper, \"according to the history books he died in a hunting accident, but local legend has it he was caught trying to rape a local maid by her yeoman father, who shot him where he stood still with his trousers round his ankles.\"\n\nSteve's dream of the night before came back to him, even the smell of the gunpowder. He smiled.\n\n\"Really?\" said Ella, happy at that tiny bit of restored family pride.\n\n\"Apparently,\" he said, \"again, legend has it that the Widow Holborrow knew he was a philandering wrong'un and after the local man and a passing gentleman confirmed the Squire's antics, she had him buried in the woods where he fell to keep his shame from his three children. It's said that on the coldest nights you can still hear him banging on the church door to get in and take his place in the Holborrow crypt.\"\n\n\"Any other local ghost stories? \" asked Steve looking at Ella.\n\n\"Not that I know of,\" said the man taking up his thick sandwich again. Ella smiled.\n\nGradually they got used to the fact that he had moved to the village eighteen months ago to be the new deputy head and had rented a room from the gorgeous lady that owned the big house across the green from his school with a view to eventually buying somewhere in the village. The gorgeous lady had inherited the big house from her late grandmother, and lived well running the thriving business they had both operated. ",
        "In the loft room he found pictures of Ella and her grandmother, and she was without doubt the woman that had interviewed him for his job, one picture even had her holding Charlie the cat, wearing the same waistcoat he'd seen her in that morning when she crossed in front of him. Next there was a picture of her at County Hall, as she had been a councillor for the village and then as she got older an Alderman. She was wearing the same suit that she'd interviewed him in.\n\nA search of her laptop showed Ella's diaries both electronic and scanned paper, and it was much like those she had written for three centuries. They both read with interest where It talked of the hot guy she'd been asked to put up in one of her many spare rooms. It went on to their night out at the pub quiz and obvious attraction, her purchase of condoms from the machine in the toilets, the slow walk back from the bar interrupted by frequent stops to kiss and caress, fumbling to open the door and falling on to the large couch. \n\nIt was there that he displayed his skill in foreplay and gave her the first of the many orgasms she was to enjoy that weekend, leading up to the wonderful loss of her virginity in her huge bed the next night and his sleeping there from then on. \n\nShe outlined their romance as well; the flowers, the bottles of wine, the candle lit baths and massages leading up his proposal at the white horse after a wonderful day walking in the hills.\n\nShe wrote about their beautiful wedding with her being given away by Uncle Dan while Aunt Dorothy wept, their honeymoon in Bali, their return home and discovery that they'd had a much better time than they at first realised and that she was pregnant. Sam came along nine months later to the delight of the village and as a perfect ending to her diary entries.\n\nAs Grandmother had predicted all had changed, and far from being the pariah she had been she was the village's favourite daughter, successful international business woman putting the place on the map and bringing the tourists and coach parties that supported the pub, the cafes, the B&B's, the gift shops, the holiday lets and of course Holborrow Hall. There was of course some minor rumblings that she hadn't fallen for a local lad, but her romance, wedding and pregnancy was well received, especially as many of the locals remembered her parents; Mother dying of cancer, Father dying of a broken heart soon after, grandmother stepping in and caring for the teenage Ella.\n\nHe was still deputy head at the school that was almost twice the size it had been before their drive out to register their daughter that day, so big in fact it had never been under investigation for closure. \n\nThe most amazing thing was that after checking their hard drive picture collection and their wedding album they could actually remember being there and doing those things, Steve stumbling over his pronunciation of 'Rosella Mary' during the ceremony. They even found a video.\n\nThey had Sam christened in the church, the same church that Ella's curse had seen her banned from for over three centuries. While they both had memories of their wedding and had seen the video, Steve now saw that the statue of cross and bible waving Squire Holborrow wasn't there on the Holborrow crypt and what's more never had been, and after a quiet walk around the churchyard they found the graves of her Father Thomas and her mother Rosemary Pendall, with Grandmother Eliza next to it.\n\nIn the same way they both had new memories, Ella's memories of the last three centuries began to fade, and while she could remember that she had lived that amount of time the actual detail, and the sadness and despair, were lost - just like Grandmother had promised. All memories save for her one act of remembrance each year for 100 years, and so she could finally keep her promise they drove southeast to the channel tunnel to get to the continent, specifically the huge war memorial in Belgium where her friend had been immortalised and she was finally able to lay flowers beneath his panel, to the memory of Private Pullen D and the rest of the pals from her village and her county that had fought and died in the mud, lost boys in the war to end all wars.\n\nShe now felt able to employ someone to work in her shop for two or three days a week; this meant she was able to enjoy motherhood and she delighted in taking Sam to the playgroup in the church hall twice a week and watching her grow and develop, and just enjoyed her new life. She could even drive a car and did so with ease, jumping in and driving towards the town before she realised that she could and was.\n\nParenthood took its toll though and a few weeks before the almost-five year old Sam, now a dark haired image of her mother, was due to start at the school her Daddy now ran, Ella found her first grey hair.\n\nWhen he came home from prepping the school for the new year, Ella sat on his lap and showed him her first grey hair with great pride.\n\n\"Isn't it wonderful?\" she said.\n\n\"You must be the only woman in the developed world that thinks that,\" he said kissing her and running his hands through her still dark and lustrous hair.\n\n\"Yeah,\" she kissed him back, \"But don't forget that I grew up in an undeveloped world where going grey meant you had survived to old age!\"\n\n\"Yeah, I keep forgetting that.\"\n\n\"Good,\" she said, \"let's forget all of it. Take me to bed and give me another baby.\"\n\n\"What a great idea,\" he said, and he did. "
    ],
    "authorname": "Androgynousother",
    "tags": [
        "magical mystery tour story",
        "first time",
        "romance novella",
        "curse",
        "virgin",
        "brunette"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/androshorts-the-village-witch"
}