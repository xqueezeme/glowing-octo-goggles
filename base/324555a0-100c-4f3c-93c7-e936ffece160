{
    "title": "There and Back Again Ch. 143",
    "pages": [
        "Chapter One Hundred Forty-Three: Cuddle Cleanse\n\nMy second effort at cleansing an area of magic went better. The tsunami Alistair set off was weaker than his previous attempt, but mine matched it. I crowed happily as I felt the magic around me recede.\n\nMy attention was drawn away from my pride when Alistair sagged in my arms. \"Alistair!\"\n\n\"M'fine,\" he mumbled. He hadn't actually fallen, but it was a close thing, from what I could tell. I shifted my grip from his neck to his waist, shoving my shoulder up into his armpit to brace him in case he went over. He grunted an objection, but it didn't stop him from resting his arm heavily across my shoulders. \"Just need a minute.\"\n\nWulf scampered back towards us, and together we helped Alistair ease to the ground, his dragon-bone armour creaking as he settled down, sitting with his legs extended, leaning back on his arms. I fussed over him, brushing his forehead with my hand and pressing a kiss to the crown of his head. Wulf offered him a water skin, and he drank deeply.\n\n\"Did we do it?\" he asked.\n\nI frowned, concentrating. The area around us was so devoid of magic that suddenly, when I paid attention, I could feel the tingling sensation -- the one I got in my hand when I touched the nearby ward -- without even reaching out my hand. It was as if that section of wall was glowing to my internal templar 'sight', the way a mage did when they gathered their mana to cast a spell.\n\n\"Not quite.\" I confirmed my impression with my hand, the tingling now muted again but still present. \"Almost, though.\"\n\n\"Well, I'm out,\" he informed me -- needlessly, as it was quite apparent by the pallor of his complexion.\n\n\"I'll try again. I'm not exhausted yet. Don't know if I can do it alone, though.\"\n\n\"You can. You're much stronger than I am at this. You can do it.\" He reached up and squeezed my hand encouragingly.\n\nI turned away, looking at the section of wall curiously, trying to 'examine' the magic holding the illusion. All I could sense was magic; I supposed it would take a mage -- the one who'd casted the ward, presumably -- to be able to sense the purpose of it.\n\nI could feel Wulf's and Alistair's gazes on my back, and sighed. I closed my eyes, concentrating on the magic around me one more time.\n\nOnly to frown. There wasn't enough magic left in the environment for me to feel like I had a good 'grip' in order to push it away. The repeated cleanses left me without anything to focus on. I tried, and tried again, with no results. I growled, and a hand grasped my own where I was clenching so hard my nails dug into my palm.\n\n\"Steady. Come here.\" Alistair tugged at my hand until I complied, kneeling at his side and allowing myself to be dragged into his lap. \"Relax. Breathe. You've got this.\"\n\n\"Cuddle cleanse?\" I asked, one eyebrow raised, and he nodded with a grin. He kissed my temple as I sighed and leaned against the hardness of his armour, closing my eyes again.\n\nAfter a moment of searching, the only thing I could feel was the ward -- and that gave me a thought. Instead of trying to grip all of the magic around me, I fixated on just that section -- the glowing magic embedded in the wall in front of me. I closed my eyes, took a deep breath, clenched, and shoved -- harder than I'd ever pushed before, the effort feeling like I was trying to bench-press a mountain, leaving me breathless.\n\nThe magic scattered, like leaves blown in hurricane-force winds. I could almost physically feel the shockwave of the magic failing, and heard Wulf yelp behind me. When I opened my eyes, the section of what had previously looked like blank wall was now discoloured and warped -- wood, I realised when I stood up and touched it with my hand, hastily nailed together and propped across the entrance to what was obviously a side tunnel.\n\nI heard Alistair lumber to his feet, and he enveloped me in a hug from behind, his arms wrapping around my waist and his chin resting awkwardly on my shoulder. I glanced over at him to see a huge, proud grin on his handsome face. \"Told you,\" he crowed. \"I knew you could do it. Good job, Love.\"\n\nI flushed. \"Now we get to find out whether this was worth all the effort.\"\n\nSeparating ourselves, Wulf and I drew our weapons as Alistair stepped up to the wooden covering. \"Are you sure...\" I asked.\n\n\"This I can do,\" he assured me. \"It's my mind -- my templar muscles -- that are tired, not my arms.\"\n\nI wasn't convinced -- it wasn't his mind that had needed to sit down, and I myself felt more than a little fatigued -- but his pallor had improved and he winked at me cheekily. I rolled my eyes and sighed.\n\nWulf stepped back, blurring into the shadows, and at my nod, Alistair grabbed the wooden plank and shoved. It slid aside with a scraping noise that made me wince, but after a moment, nothing happened -- no darkspawn appeared, no shouts or growls echoed from down the passageway -- and I let out the breath I hadn't even realised I'd held. I nodded at Alistair and slipped first through the opening, relieved to see it was a short hallway that opened into a larger, lit room -- no more wandering through pitch-dark corridors for me! I stepped as quietly as I could to the threshold and then peeked around the corner anxiously.\n\nAnd then I gasped, taking another step forward, mouth agape in complete shock.\n\n\"Trevian?\" My pitch rose with my surprise so I almost squeaked the last syllable.\n\nThe dwarf in question, sitting in the middle of a large room with a bandage wrapped around his head and one eye patched, was surrounded by a dozen or so of the missing Legionnaires. There were several with obvious injuries, from bruises and scrapes to bandaged extremities still oozing blood. Darkspawn corpses were piled against one wall, and a rough pile of rocks opposite indicated they'd returned at least one Legionnaire to the stone. Two relatively healthy-looking dwarves stood guard at the only other door, axes drawn, scowls directed at the wooden barrier between them and whatever lay beyond -- but they were leaning against the wall and talking quietly, clearly not really expecting anything to try to come through.\n\nThe leader staggered to his feet at my voice, his hand clutching his chest as he panted in shock, a stream of dwarven obscenities flowing out of his mouth. \"Sierra? Ancestor's sodding hairy arses, where the void did you come from?\"\n\nI gestured behind me, where Alistair and Wulf were emerging from the short corridor, obviously drawn by my exclamation. Their expressions were comical, eyes bugging out at the sight of our missing allies; Trevian's bafflement was no less expressive. I almost giggled.\n\n\"Commander! Where...that is, I mean...how?\" The poor dwarf appeared completely gobsmacked, and I didn't think he could get any paler; I took his arm and urged him to sit back down before the poor man fainted.\n\n\"How did you get here?\" I asked when his complexion returned to normal.\n\n\"No, no, you first. If you're not a mage, how did you create a passageway out of pure rock?\"\n\nI frowned, trying to understand what he meant. And then it occurred to me. \"Oh! The illusion worked on this side too!\" Trevian scowled in confusion, so I explained, \"There was a passage there hidden by magic. We didn't create the passage, we just found it by dispelling the magic.\"\n\n\"Well that would have been sodding nice to know!\" He almost growled with frustration. \"We followed a darkspawn patrol down a narrow passage, assuming we would find an emissary or one of those sentient darkspawn; we hit heavy resistance, and retreated slowly through that door,\" he nodded at the guarded exit, \"because we could bottleneck them and they couldn't overwhelm us. Only to find ourselves trapped with no way out. We held out for a while, hopeless, but then all of a sudden, the darkspawn...they stopped attacking. Started ignoring us entirely. Withdrew to where we can't see them anymore. They're still out there, but leaving us alone -- except we couldn't get out. We've been trapped down here for four days.\n\n\"Earlier today, with our water running out, we decided to try to escape. It didn't go well.\" He gestured to the bandages on his head and the grave against the far wall. \"I had hoped maybe they'd ignore us entirely, the way they've been doing for a while. No luck -- they fought us back, and we had to retreat. Now they've pulled back again. Apparently they'll ignore us unless we try to leave.\"\n\n\"Well, there's a way out now,\" Alistair informed them. \"The whole army is outside. It's no simple emissary down here -- unless I miss my guess, this is all the Architect's doing.\"\n\n\"He does seem to want to minimize bloodshed -- I could see him ordering the darkspawn not to attack -- but he couldn't let you leave to bring us warning either. So he had them back you into here and hid the backdoor,\" I agreed.\n\n\"It gives us an opportunity,\" Wulf suggested, his grin feral. \"You know the layout of this place? What's beyond that door?\"\n\nTrevian nodded. \"Not the whole section of Deep Roads, but the immediate area outside that door, sure.\"\n\n\"Then we have a way around that ambush. They're counting on us only being able to come through that main tunnel one at a time -- easy pickings. We could defend a retreat easily, sure, but we wouldn't be able to make much progress. But if we can come at them from behind, with a larger, organised front...\"\n\n\"Come,\" I urged Trevian, pulling gently on his arm. \"Nate and Aedan need to hear this. And we've got supplies outside.\"\n\n\"Someone's got to stay here, guard the door and the hallway,\" he objected.\n\n\"I'll stay in the hallway,\" Wulf offered. \"I see quite well in the dark, I won't need a torch. If two stay here, and one other with me, we have someone to defend each spot and someone to run for help.\"\n\nTrevian detailed three of the least injured Legionnaires to stay, two remaining at the wooden door and one joining Wulf out in the hall. We left our water skins and what little supplies we had -- healing poultices and rations -- with those remaining, knowing we could help the injured dwarves on the surface. Alistair and I escorted Trevian and the remainder of the dwarves up the long hallway, some of them being half-carried by less-injured colleagues. It was slow going, Alistair having to help Trevian when he flagged as I led the way with the torch. We finally emerged out into the bright midday sunlight, to the amazed and excited exclamations of those waiting for us outside.\n\nAedan's shocked face when I was followed first by one injured dwarf, and then another and another as we exited the tunnel was hilarious, and I wished I could have taken a picture. I giggled and went to him for a hug, while he just stared, speechless.\n\nFortunately the others, while also shocked, were a little less stunned about the whole thing, and soon all the dwarves had been given water, food, healing poultices, and the worst injuries had been attended to by Alim, whose healing wasn't epic but was improving almost daily since his Joining. Sigrun greeted each of the returning Legionnaires with glee, relief obvious in her sweet expression.\n\nFinally Aedan, Nate, Alistair and I crouched down together near Trevian, whose head had been healed, but who had apparently lost the eye. He looked rather pirate-like in the eye patch someone had scrabbled together from some dark fabric, and I told him so; he snickered, but his chest puffed out a little and he stopped fidgeting with the patch, to my amusement.\n\n\"We sent you with a vain hope you'd find a way around the ambush, and instead you came back with an entire Legion.\" Aedan smirked at me.\n\nAlistair and I laughed. \"We've done both, actually, brother.\"\n\nTrevian filled Aedan and Nate in how they'd become trapped with no way out until we managed to cleanse the illusion hiding the backdoor. And then he started to draw in the dirt with a twig he picked up from the ground.\n\n\"Here's the room we were in,\" he began, \"and outside the door...\"\n\nHe drew us a fairly detailed map of the warren of tunnels underneath the cliff, with one large room leading back to where the ambush waited for us at the bottom of the main passage.\n\n\"So we can assemble a larger group here,\" Aedan pointed, \"without being seen, we think.\" Trevian nodded. \"And then we can either draw some of them to us, if we get lucky, or if not, at least approach with larger numbers from here.\" He indicated the room adjacent to the large, dark hole I'd described from my view; I knew at least five soldiers could fit side by side in the opening, as opposed to the one or two in the main tunnel. Good for defending a retreat, that tunnel; not so good for springing a trap.\n\n\"'Spawn will probably think it's us again, trying another escape attempt. They'll send a small group in if we make noise,\" Trevian suggested.\n\n\"What's down that way?\" Alistair asked, pointing to the multiple guarded doors and the other opening I'd seen.\n\n\"No idea.\" Trevian grunted. \"Didn't get that far.\"\n\n\"Alright.\" Aedan nodded and turned to Nathaniel. \"We're going to need to defend the tunnel leading outside, and each room behind us in case there are more secret doors. Like with the Mother -- can you detail a small group of soldiers to stay in each room as we clear them? A small force should wait in the main tunnel until we attack and hit them from the side. The rest will move forward with us, Wardens first. No way to know how many rooms there are down there.\"\n\nNate nodded and began giving orders to his captains; Aedan pulled all the Wardens into a huddle and briefed them on what we'd found.\n\n\"You're not leaving us out,\" Trevian interjected as Aedan detailed his strategy. \"Most of us are healed up enough to fight.\" The dwarf's dark hair was still matted with his own blood, his eye still patched; the rest of the Legion stood behind him where he gazed at us, arms crossed obstinately, undamaged eye unblinking. No chance we're talking him out of that, obviously.\n\nAedan had clearly come to the same conclusion. He sighed, signalled Trevian to come closer, and detailed the Legionnaires to follow behind the Wardens as we began clearing tunnels.\n\nSoon, packs in place and weapons drawn, I led the way down the passageway to the side tunnel. A small group of soldiers replaced Wulf and the dwarf on watch with him, and they joined us in the room the Legion had been 'trapped' in. We waited there until everyone who could fit was assembled, the rest waiting out in the hallway behind, and then, expression serious, Alistair opened the heavy wooden door allowing Trevian and I to step through.\n\nI went first for obvious reasons -- I could scout the darkspawn without being seen -- but Trevian insisting on accompanying me made me nervous. I felt...exposed. If there are any darkspawn near here, we're toast. I'd tried to talk him out of it, but Aedan and Alistair were more than a little relieved I wouldn't be going alone -- traitors! -- and without support, there was no dissuading the grizzled dwarf. I wondered if he actually had some sort of death wish, but didn't want to deal with the outcome of that conversation if I was right, so I kept the question to myself.\n\nTrevian's drawing had been accurate; I slowly explored a small warren of rooms before coming to the one large chamber we'd planned to use to launch our offensive on the darkspawn. I trailed my hand along the walls as we walked, not really expecting anything but curious if there would be more secret passageways. I found nothing.\n\nI signalled to Trevian to stay, and went on alone around the corner into the wide, rough hole that led to the rear of the darkspawn ambush. The numbers of darkspawn were unchanged; I couldn't get all the way into the main room due to the five darkspawn blocking the entrance to the hallway I was in, but over their heads -- thank goodness genlocks are short! -- I quickly confirmed about three dozen darkspawn, most spread out through the room, but a large group in the middle all together. None of them were emissaries.\n\nI scooted back out before Trevian got impatient and came after me; he insisted upon staying there to guard the entrance while I went back to confirm for the others that the Wardens could assemble if we could do it quietly. And then, carefully, quietly, one or two at a time, the Wardens slipped into place, followed by the Legion, and then soldiers began assembling. We had ten Wardens -- including me! -- as well as ten Legionnaires and a handful soldiers in place before the combined noise was too much. We could hear the snarling of darkspawn as they started towards us; Zevran, Wulf, and I waited off to the sides while the rest of the group prepared for a frontal assault.\n\nThe opening of the combat was almost comical. A bare dozen darkspawn came careening around the corner, clearly expecting a small number of injured dwarves trying to escape; they screeched to a halt when they were confronted with a much larger force that was still growing. There was some shocked backpedaling as they tried to stay in the narrower tunnel opening to avoid being flanked, only to discover, as the Wardens bore down on them, that Zevran, Wulf, and I had slipped behind them. The assassin and former werewolf began disabling darkspawn with kidney shots and slices to the backs of the legs, while I reached around a genlock in front of me to slit its throat. The entire combat lasted mere moments, and only a small handful of us even got our blades dirty.\n\nWhat we couldn't prevent, however, were the screeches of the dying darkspawn as they fell. Knowing that the darkspawn in the next room would be preparing, Alistair ordered everyone to move forward en masse, shield-bearing warriors in front with the rest of us close on their heels as we progressed into the chamber where the ambush waited for us. Arrows began pinging off of shields the moment we were visible from the main room, but it was obvious that, as intended, we'd caught the darkspawn by surprise. The two dozen or so remaining darkspawn had been supplemented by a handful of others, presumably from adjacent rooms, but they hadn't completely reorganised to meet this new attack and we caught them somewhat flatfooted.\n\nThe warriors engaged, the soldiers and dwarves spilling out of the tunnel's mouth, and I scooted around the back of the room to start killing archers before they got in any lucky shots. With a roar another dozen soldiers came through the main tunnel to hit the disorganised flank of the 'spawn. Soon the room was full to bursting with our forces, and not a single genlock remained alive to oppose us.\n\nWe took a few minutes to regroup; there were a handful of wounded men, two of whom would need to be put through the Joining later, judging by the black ichor that had contaminated their wounds; Nate sent them up to the surface while his men secured every room we'd taken so far. We now had five doors and one conspicuous dark tunnel to search.\n\nThe Wardens split into five groups of two, each group assigned to a door with a group of eight soldiers; the Legion would defend the large unexplored tunnel while we cleared the side rooms and the rest of the soldiers would wait to be called if needed. Trevian objected to the Legion being made to guard, rather than allowing them to come with us, but Aedan and Alistair stood firm and he finally relented. Larger groups wouldn't be useful, they insisted, in the likely narrow, winding corridors we were likely to face.\n\nAlistair and I went together, and after a quick nod to the other Wardens, my husband kicked in a flimsy wooden door and stepped inside with his shield raised. Behind me I could hear other doors being opened, including two heavy stone doors slowly creaking open. I took a quick breath, closing my eyes and briefly praying for the safe return of everyone disappearing into dark corridors.\n\nI followed him into a small empty room; there were piles of refuse, half-burnt, and a second door leading further in. The precise corners and square rooms confirmed they were of dwarven origin, not darkspawn-dug. We went through that door into a hallway with what must have been a barracks of some sort, hundreds of years before, off to the left; there were the remains of what once were bunkbeds, and old destroyed crates that had been pushed to the walls. We continued down the hallway through another door, then another, through what I assumed had been a functional guard station at some point. There were storage closets, more barracks, and offices, all full of decayed or destroyed furniture. Alistair and I finally had to separate when we came to an intersection; half of the soldiers followed him to the right, and the others followed me to the left.",
        "I led my group past a few more abandoned rooms, finding nothing; we came to a dead end in a room with a large training arena, and turned to head back towards Alistair. I left half of my soldiers -- two of them -- in the hall where I'd last seen Alistair, and took the other two with me to find my husband.\n\nI wandered past a similar bunch of rooms, more offices and closets, and found a long hallway with what must have been private officer living quarters. The doors were open, the rooms empty, and we kept going. There was one larger chamber with fresh darkspawn corpses, and when I stepped into the next hallway, I could hear steel crashing against steel -- fighting! Worried about my husband with only two soldiers of his own, I rushed down the hallway, daggers in hands, ignoring the side rooms he had obviously cleared on his way.\n\nI ran through an open doorway just in time to see Alistair take a shield to the face; he rebounded away from a hurlock with a rather impressive tower shield, and fell to the floor. The soldiers with him were back to back desperately fighting a group of three genlocks. With a cry, I leapt over Alistair's prone form, ducking down and around the hurlock who was going in for the kill; I dug one of my daggers into his armpit and, when he reared back with a scream, I slashed at his exposed neck with the other. Black blood spurted out of the wound as I yanked my dagger back, and it sank to the ground clutching its ruined neck. I glanced at the soldiers -- who'd been rescued by the two following me, and were fine -- and then quickly dropped to the ground at Alistair's side.\n\nHe was conscious, his hands working to push off his dented helmet; his face bore an angry red patch on one cheek that would bruise impressively later. \"Void take it, I liked that helmet,\" he whined, and I laughed, wrapping my arms around him as he slowly sat up.\n\n\"Are you dizzy, Love?\"\n\n\"I'm okay. Skull's too thick to hurt me,\" he joked, and I giggled, the verging hysteria ebbing as it became clear he really was fine. \"Nice job, by the way, Lady Theirin.\" He nodded to the dead hurlock.\n\nI grinned. \"Knew those hours of training would be good for something.\" I scrambled to my feet and held out my hand. \"Need a hand up?\"\n\nWhen all of us were up, after a quick survey of the soldiers to make sure no one was too badly injured, we turned as a group to head further down the hallway. We turned a sharp corner to see a steep flight of steps leading down. I went first, Alistair and the four soldiers on my heels, but I'd gone only halfway down when I heard more sounds of fighting.\n\n\"Think this meets up with the door Alim and Justice went through?\" I wondered aloud as I signalled everyone to be careful, and then hurried down the rest of the stairs.\n\n\"Who knows?\" Alistair puffed as he rushed behind me. \"Honestly, I've lost my sense of direction -- we could be right outside Bownammar for all I could tell.\"\n\n\"At least you've still got your pants, dear,\" I laughed softly and turned at the bottom of the stairs, a thick wooden door in front of me blocking my progress. Making sure Alistair and the others were ready, I reached out and pulled the door open, allowing the seven men to precede me into the room beyond.\n\nI followed behind, and then stopped, stunned. There were probably a dozen darkspawn corpses, some still twitching, scattered around a room that held a couple of rough tables with chairs, some weapon racks, and little else. It was a blood bath. Black ichor dripped down the walls and off the chairs, entrails and other unidentified remains puddled under the tables, and in the middle of the mess stood two absolutely filthy, blood-spattered Wardens I wasn't sure I'd ever see again.\n\nConrad and Rolan."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-143"
}