{
    "title": "The Journey",
    "pages": [
        "Foreword.\n\nThis story has been brewing in my mind for a very long time, and I finally decided to go ahead, and actually write it. After some deliberation, I also decided to post it on this site. I've been a long time reader of Literotica, and found many very enjoyable stories. Fulfilling stories, satisfying st... Ok, you get the point.\n\nNow, it is entirely possible that I may be drawing from other stories, but please understand that it isn't intentional plagiarism. I respect other people and their work too much to do that, but when you've read as much fiction as I have, erotic or otherwise, some things are bound to influence you, without you necessarily realizing it.\n\nPlease note, that I use a bunch of names, that come from different sources, such as D&amp;D, but this story has nothing to do with any of them. It takes place on the fictional world I call the Continent, and shared its world with another story I wrote, called 'Mine'. \n\nAnyway, this story features dominant orc futanari (they don't have vaginas), and a submissive half-elf. There will be very little sexual humiliation, or degradation of any sort, however. I'm somewhat uncomfortable writing something like that. Having said that, I am, perhaps a little hypocritical, as there is a short instance of non-con, a bit of mind break, some dub-con, which leads to a full blown loving relationship between the main characters. I'm a huge sucker for romance.\n\nThis is a fantasy, and as such, a lot of what happens, is not necessarily physically probable, or possible, in the real world. There are a lot of very large cocks, excessive cum, cum bloating, and cum eating, cum addiction... Let's just say, that Futa cum is a very large part of this story.\n\nAs a kind of high fantasy epic (hopefully), there are some fights, but they're generally very short, and to the point. I hate long, drawn out fights. The last battle in Man of Steel, anyone? Or any mangas about martial arts, or sports... Do people actually enjoy reading a hundred pages of Ippo fighting against Sendo? Or Mashiba? I swear, there's no character progression. At all...\n\nSorry. I went off on a tangent, there. Moving on...\n\nThis is not a story for a quick wank. It's long. 84 word pages, to be exact. (I thought about breaking it up into chapters, but I felt it flowed much better this way.) I was trying to write a story with a little depth. A story where people care about the characters, so there's quite a long build up to any of the sexy stuff, but once they start, there's rather a lot of it, as they're quite insatiable.\n\nOne more thing. As a Wesfjordian, I am not a native English speaker, so there are most likely some grammatical errors present, as well as the occasional weird sentence structure, but I hope the story isn't wholly illegible, and I apologize for any errors I may have missed.\n\nAnd, of course, any who engage in anything sexual in this story, are adults. \n\nThe Journey\n\nJared walked through the halls of Castle Greyhawk at a brisk pace, ignoring the looks of disdain and disgust most of those he passed sent his way. It was easy for the young Half-Elf. After all, he'd been doing it, ever since he had been left on the doorstep of the castle, when he was five years old. Thirteen years, he'd dealt with their scorn, ridicule and animosity. Which was why he spent most of his time outside, in the forests surrounding the large castle he called home. Or in the stables with the animals.\n\nIt wasn't that he was ugly or deformed. On the contrary. He was quite good looking, of medium height, had blonde hair and emerald eyes, a delicate face and a lithe body, built for speed and agility. The reason for all the hatred? He was a Half-Breed. While there was some racial tension in all the kingdoms and territories of the Continent, the twenty or so years of peace and prosperity after the Last War had only strengthened the desire of the races to coexist in peace.\n\nElves, Men, Dwarves and Orcs generally treated each other with a grudging respect. (Though the orcs had maintained an isolationist mindset, for the most part). Except the Half-Breeds. They were considered anomalies at best and freaks at worst. And what made Jared's life even more difficult was the fact that he was a Royal Bastard. Literally.\n\nJared came under during a drunken night between his father, who was the current ruler of the Kingdom of Men and an elven serving girl during a diplomatic mission to the Elven Theocracy a couple of years after the end of the War. Jared's father hadn't been a king back then, of course, merely a third son, sent off into the world to gain some experience. Two years and a few 'unfortunate' deaths later, Marcin had been crowned king.\n\nKing Marcin had been a vain and arrogant man, but turned out to be a surprisingly capable king, mostly due to his intellect and excellent advisors. Three months after his inauguration, he had entered a pre arranged marriage with Gabrielle, a noble's daughter and nine months after that, a prince was born, William. And soon after that, Gabrielle was thick with child once more and after a full term, another prince was welcomed into the world and was named Tristan.\n\nThen, in what was generally thought of as the greatest scandal in the history of the Kingdom, a Half-Elven boy child appeared outside the gates of Castle Greyhawk. An elf had travelled with the child, carrying a letter stating the tyke was the son of the King, which the elf handed to the guards and quickly left without so much as a word to the boy. Apparently the boy's mother had died some time before, and the boy's grandfather had finally reached the end of his rope and figured he'd borne the shame long enough.\n\nAs the King read the letter, the hazy details of the night with the elven woman came back to him. He thought about rejecting this, certainly outlandish claim, but thought better of it. There could be no doubt he was the boy's father; Jared was the spitting image of him, aside from his smaller stature, pointed ears and emerald green eyes he'd inherited from his mother.\n\nPredictably, the Queen was absolutely livid and screamed at the king, demanding 'that thing' be sent away, or better yet, drowned along with the unwanted kittens the kitchen cat had had a few days earlier. The King understood her anger, of course. She'd done her duty and borne him two sons, and then came along this other boy. An older son, who would have a stronger claim to the throne than her own, when the time came.\n\nMarcin could do nothing about it, those were the laws. Unless he murdered the boy and he most certainly was not about to do that. Nor would he throw him out. The King regarded the child and recognised the intelligent look in the eyes and a hidden strength.\n\nA spark of affection formed in his chest, one that he would have to hide, but such was the world they lived in. The king decided he would take responsibility for his actions, as an adult should and take the Half-Breed in. He would feed him, clothe him and educate him the same way he would his other two boys.\n\nThe boy's life would be hard, but Marcin was certain the lad would have the strength to reach his majority. Eyeing his wife out of the corner of his eye, the king knew he would have to have a pair of his Shadows watch the boy at all times and thwart or prevent the assassination attempts he was sure Gabrielle would arrange in the coming months and years.\n\nAs time went on, it became clear that Jared was exceptionally bright and kind hearted and he showed he had a way with people, despite being painfully shy. He quickly endeared himself to most of the lowest serves in the castle and the Beastmaster and Groundskeeper as well. And he delighted in teasing and generally making life difficult for his two bodyguards, Jaspar and his student, Jackson. He had befriended both men, and the two quickly began training the young man. It was all done in secret, as the Queen could not catch wind of it.\n\nJared scoffed softly. It wasn't all roses. The Queen hated him with a passion. His two brothers, at her urging tried their best to make his life miserable and Jared quickly learned to spend most of his time outside of lessons, away from the castle.\n\nThe time spent with Groundskeeper Duncan had learned him a great deal of woodcraft; tracking, hunting and other such survival skills, and he became a master bowman under his tutelage. Similarly, he learned great many things from Kurgan, the orc Beastmaster, mostly how to treat animals and care for them. Treat your animals with care and respect and they would never let you down. That was an advise the young man applied to people as well.\n\nJared stepped up to the great double doors that led to the Great Hall, where his father had summoned him. The guards barely gave him the required salute and raised their halberds and through the open doors the young prince went. He strode along the carpet with confidence, and approached the dais, where his father sat on his throne. To his left sat his wife, who sneered disgustedly at her supposed nemesis. Jared suppressed a sigh. Would she never stop?\n\nHe got down on one knee and lowered his head. \"As you have summoned, so have I come, my King.\"\n\nThe King sighed at that. He had asked his son not to do that, when it was just him and his wife and their two sons in the Hall, but the boy persisted. Marcin strongly suspected Jared did this to make certain Gabrielle and the boys had less cause to trouble him. Oh, well, he could rile them up in his son's stead, then. In the grand scheme of things, it was only a small measure, but the king knew the lad would appreciate it.\n\n\"Rise, my son, and be at ease,\" Marcin said and had to tighten his stomach to hold in the laughter that threatened to escape when he saw the annoyed looks on the faces on the other three people present.\n\n\"Why have I been summoned, my lord?\" Jared asked as he stood and clasped his hands behind his back, the same way the soldiers did when they were told to 'be at ease'.\n\n\"Now that you've entered your eighteenth year, I have decided that you, as is custom for the royal family, shall go on a journey. Explore the world, as my father did before me and I did before you. Your brothers have both done so and acquitted themselves with honour.\"\n\n\"Yes, of course, my lord,\" Jared said and gave his brothers a respectful nod, ignoring their mocking smiles. \"And where shall I go?\"\n\nAt that, the King motioned for a previously unseen servant to step forward and bring a small, locked box with him. The servant handed Jared the box and a key, which the young man accepted before proceeding to open it up. Inside was an official looking letter, with his father's seal waxed on.\n\nThe young man was knowledgeable enough to understand what it was, when he recognised the other thing lying in the box. It was a ring. A ring that guaranteed the wearer safe passage through the lands it originated from. He looked at his father, who had an almost imperceptible smile on his lips. Oh, how the other three would react to this!\n\n\"I'm bound for the Hinterlands, then?\"\n\nThe King nodded. \"Yes. I want you to finalize the trade agreement with Queen T'alis of the orcs. Most of the work is already done, in all honesty. All it needs, is the blood of one of our line, for the signing. Of course, if you feel the need to change anything, you have my complete trust, and confidence.\"\n\nJared allowed himself an honest smile at the news and engraved into his mind, the outraged looks on the faces of the Queen and his brothers. This was fantastic for quite a few reasons. For one thing, it meant things were finally moving along between Men and orcs and it would truly benefit both races.\n\nJared hadn't read the contents of the deal yet, but assumed the orcs would receive the various foodstuffs in return for skins, furs and precious metals at a lower rate than otherwise. And to send a Half-Breed indicated an open mind, which was a must in this instance, since it was well known that Queen T'alis was personally quite accepting of Half-Breeds.\n\nOn a more personal note, it was great news for Jared himself. It would be a nice reprieve, since the trip was bound to take at least a year, since the Hinterlands lay beyond the Wall; a massive mountain range that separated the rest of the Continent from the extreme Far North.\n\nIt ran from coast to coast, from West to East, and the only way the enter the Hinterlands, was through the Dragon Pass to the North West, a gap high in the wall, that was only open for six weeks or so from the middle of July, through August.\n\n\"The orcs will not suffer a large group of foreigners to wander through their lands. Will I be travelling alone?\" Jared asked.\n\nThe king frowned at that. \"Naturally not. One of my Shadows shall accompany you to Crossroad Keep. There, you will meet an orc escort, provided by her Majesty T'alis.\"\n\nJared nodded along with his father's words. It was a good plan. A team of two could move quickly and would not arouse suspicion.\n\n\"Then, by your leave, your Highness, I shall set out at once,\" the young man announced and turned around sharply and strode out of the hall with a purpose.\n\n000000\n\nA knock on the door frame alerted Kurgan to the presence of the only person who ever bothered to knock and the only person the Beasmaster was ever actually glad to see, outside of his home country.\n\n\"So the time has come, has it?\" The old orc said as he turned around to regard the young prince who was carrying the saddle and bags the pair of them had built when the lad was fourteen. Kurgan walked to the back of the stable and brought with him the Prince's horse, Mist.\n\n\"She was put in new shoes last night, and her hooves inspected. She's quite ready for a long journey,\" The Beastmaster gave the young man a stern glare. \"You've not been by for a while and neglected your friend here, and she's been miserable for it.\"\n\nJared hung his head, properly chastised. He accepted the reins from his orc friend and cradled Mist's head to him, scratched her neck beneath her mane and whispered soothing things in her ear and the horse leaned into his touch.\n\n\"So. Where are you headed, brat?\"\n\nJared put the saddle on the horse and tightened the girth. \"The Hinterlands.\"\n\nThe young man was busy preparing the saddle and missed the widening of Kurgan's one good eye. This was unexpected, seeing as how the two pampered pansies had been sent on a pleasure cruise along the coast to meet distant cousin, who was stationed at the elven capital of Starling Cliffs as an ambassador to the elves.\n\n\"Trade agreement happening?\" the orc asked, as the two of them had often discussed the possibility of it.\n\nJared simply nodded in return.\n\nThe two of them then walked slowly outside and Kurgan turned and gazed wistfully at nothing. \"I envy you, lad. To see the Frozen Wastes as Lord Winter retreats, and Lady Summer embraces Karaduk. It is a beautiful place, this time of year.\"\n\n\"I've listened to your stories since I was five. I can't wait to see it, Kurgan.\"\n\nThe orc grinned at Jared and clasped him on the shoulder and the Prince felt as if he was a child again. Now, Jared wasn't that small at five seven and one hundred and thirty pounds but anyone would seem tiny compared to an orc who stood at well over seven feet and had to weigh in at at least three hundred and fifty pounds.\n\n\"So, I take it from the lack of activity, that you'll be travelling with a single Shadow?\"\n\n\"Yes. Jaspar, if I was to guess. We'll meet up with an orc at Crossroad Keep and that person will take me the rest of the way, and Jaspar will return home.\"\n\nKurgan rubbed his chin and frowned. \"The Queen will most likely send her best, given the importance of this treaty. And if she's sent her best, then that can only mean her sister, Za'ira. She is the greatest fighter among the orcs, or she was, back when I was among them, still. She'll be in her late forties by now, but do not doubt you'll be in good hands, boy. I'll bet she'll be surprised when she gets a demonstration of your own skills!\" Kurgan exclaimed and laughed uproariously.\n\n\"I'm not that good, old friend,\" Jared protested.\n\n\"Nonsense! The only reason those two Shadows keep defeating you, is because they have more experience. Once you've gotten a real fight or two under your belt, they won't be beating you any more, rest assured.\"\n\nJared smiled shyly at his friend, who got this weird look on his face. By the gods, if that boy did not get over himself, Za'ira would eat him alive. Well, she would most likely do that anyway, seeing as they would be travelling alone for weeks in the wilderness, and there were great stretches of nothing between villages in the sparsely populated North. And if the warrior did not claim the boy, her sister the Queen certainly would, once they reached the capital.\n\n\"Well, there's no time to lose, boy. Today is the twenty-fifth of April. If the weather remains favourable, and you do not encounter too much trouble, you should reach Stormhold by the end of July.\"\n\nJared nodded. The Continent was very large and it would take around six weeks to reach the border and Crossroad Keep, which was almost five hundred leagues from the capital of the Kingdom of Men. Once there, he would have to leave Mist behind, as the orcs did not ride and the terrain was reportedly so rough, you travelled almost as quickly on your own two feet anyway, so it was much less of a hassle, to simply leave the horse behind.\n\nJared took one last look at his equipment. Sturdy leather boots, protected by a pair of steel plated shin guards, a fine, ultra light Mithril chain mail and a reinforced leather jerkin, and finally, a pair arm braces that matched the guards on his shins.\n\nJared checked his bowstring and made sure he had all five of his spares and a bottle of wax. Once he'd done that, he properly secured his sword inside his bedroll which was fastened behind the saddle and made sure he had both of his long knives in their sheaths on his lower back.\n\n\"Well, I'm off. Take care of yourself, Kurgan.\"\n\n\"Aye, lad you too.\"\n\nThis would especially apply if he would be journeying with Za'ira. Then again, if she set her eyes on him, she would ensnare him and the man who emerged on the other side of that adventure would be very different from the one who'd left the Kingdom.\n\n000000\n\nJared had been travelling for half a day when, almost as out of thin air, a horse and rider appeared next to him on the road. It was a man wearing a black hood and cloak and a mask. Jared acknowledged his companion with a nod, and they rode together in silence for while.\n\n\"The weather is nice this morning, my Prince,\" Jaspar said.\n\nJared arched an eyebrow at Jaspar. Small talk? Really? They did not do that, preferring silence to speaking about nothing. Then, the Prince leaned his head backward quickly as a hand came flashing from the cloaked man, and Jared retaliated with a similar swipe of his own, which the older man had to block with his arm.\n\n\"Oooh! So the great, fancy diplomat still has his touch, then?\" Jaspar mocked and Jared could see the smile in the other man's eyes.\n\n\"Haa haa,\" the Prince said sarcastically and cuffed his friend upside the head. \"So. Six weeks to reach the border sound about right, to you?\"\n\nThe Shadow nodded. \"It should. I went to the Watch this morning and apparently, there have been some reports of bandits on the road in the provinces to the North and we were urged to proceed with caution.\"\n\nJared acknowledged his teacher's words and rode on for a while, keeping a vigilant eye on his surroundings. He would not be caught unawares and he knew he should expect an attack fairly soon.\n\n\"You expecting trouble, Jared?\"\n\nThe Prince eyed his bodyguard incredulously. \"You don't seriously believe the Queen is going to let this opportunity slip by, do you?\"",
        "The other man laughed softly and shook his head. \"No, of course not. But even she, with her limited mind is not so foolish as to have her assassins make their play so close to the capital. I don't think we'll have to worry until after midday tomorrow.\"\n\nAnd on the day went and the two men contented themselves with riding in silence. They made good time and set camp after sun down and rose at first light the next morning. It was early afternoon, about an hour after they'd passed through the village of Bywater when the attack came.\n\n\"You notice them yet, Jared?\" Jaspar leaned over and whispered to the Prince, taking care to shield the younger man from the side.\n\n\"Sure. Two hiding in the corn field to our left, and one archer in the treeline. And at least four, I'd imagine, hiding under the bridge,\" Jared said and discreetly took an arrow from the quiver strapped to the side of the saddle. \"Pretty standard.\"\n\n\"Good eye. And, yes, I agree with you about the bridge. Do you think you can take out the archer, if I jump down and rush into the field?\"\n\nJared nodded. \"Yes, I know exactly where he is and he's not doing a very good job of staying behind cover.\" Jared pulled back the bow. \"Go. NOW!\"\n\nAt the Prince's exclamation, the Shadow dropped from the saddle and with lightening speed, he raced into the field to take care of the two that lay in wait. As soon as Jaspar was clear, Jared brought the bow to bear, released an arrow and grinned in satisfaction as he saw the archer fall.\n\nThe Prince, knowing his companion would be fine, urged Mist into a full gallop and a few yards away from the bridge, he vaulted out of the saddle and drew his knives, before meeting the enemy as the group came rushing from beneath it.\n\nJared ducked under the swipe of the first assassin and raked one of his knives across the man's abdomen and the man fell with an agonized howl. Another tried and was pierced through the throat, and the third went down when a knife lodged itself in his heart. The fourth attacker seemed to rethink his involvement and started running away, only to be intercepted by Jaspar and that was it for him. The battle had taken less than ten minutes.\n\n\"Are you alright, my Prince?\"\n\n\"I'm fine, Jaspar. You?\"\n\nThe man grinned and wiped down his weapon. \"Never better.\"\n\n\"That's actually a little disturbing, Jas.\"\n\n\"Well, what can I say,\" came the reply. \"It's what I do, after all.\"\n\n\"Yes, well, let's hope we won't have to do much of it for the rest of the trip, shall we?\"\n\n000000\n\nUnfortunately, Jared was not granted his wish. The pair of them were forced to fight of a number outlaw bands and highwaymen, and two more assassination attempts, both more capable than the first one. Jared got injured in the last one, which delayed their travels for a week, despite his insistence that he was fine and that they should press on. Jaspar would not be budged, however and they rested at a small village until the Shadow deemed the prince fit for travel.\n\nOne day, when they were about a week out of Crossroad Keep, Jared realized he'd not once asked Jackson whether he'd ever heard of the woman Kurgan expected the Orc Queen had sent to escort him to Stormhold.\n\n\"Say, Jas. Have you ever heard of Za'ira?\"\n\nJaspar turned his head and regarded his friend with a curious expression. \"Yes, I have. Why do you ask?\"\n\n\"Kurgan seems to think Queen T'alis sent her to take over for you, once we reach the Keep.\"\n\nJaspar ran a hand through his hair and actually smiled a little. \"Well, that's a relief.\"\n\n\"Oh?\"\n\n\"She was the best warrior they had, Jared. She gave me this. Though, she didn't escape unscathed herself,\" the older man said and leaned over to show his friend a rather ghastly scar, on the side of his neck.\n\nJared stared at the other man. \"You seem awfully chipper when talking about someone who almost killed you.\"\n\nJaspar laughed at that. \"Well, how am I supposed to act? I don't bear any ill will toward her. She was just a soldier protecting her home and fighting a war instigated by your grandfather. It wasn't anything personal and I doubt she feels any different.\"\n\n\"What does she look like? You know, so that we can find her?\"\n\nJaspar shook his head. \"No idea.\"\n\n\"What? You said you fought her.\"\n\n\"Don't be foolish,\" Jaspar chided the younger man. \"Yes, I fought her, but that was over twenty years ago, Jared. Back then, she had a mohawk, dyed in indigo and a bunch of piercings all over. I highly doubt she looks like that now. I'm very certain she has risen through the ranks and even the orcs, brutish as they may be, have a very strict code of conduct when it comes to those who work at the top of their government.\"\n\nJared sighed in defeat and shrugged his shoulders. \"Alright, then.\"\n\n000000\n\nThe travelling pair stopped their horses at the staple outside the gates of Crossroad Keep, and the staple hand took the reins of both horses to lead them inside. Before they could approach the gate, a page came sprinting toward them with a sealed letter in his hands. Jared recognised the seal of the King.\n\n\"A letter for you, Sir. It arrived three days ago.\"\n\nJaspar nodded and handed the boy a single copper. The boy saluted them both and returned to the Keep. The Shadow opened the letter, read the contents and frowned as he tucked it into his cloak.\n\n\"Well, the good news is that you've been instructed to make your way to the Gilded Crown in the upper Keep and that Za'ira will indeed be waiting there for you.\"\n\nJared's eyebrow twitched annoyingly. \"So, I take it there's bad news?\"\n\nJaspar became grave. \"Quite. There's been some disturbance on our eastern border, a two week journey from here. Apparently, some elves have gone missing and all evidence points to Men kidnapping them. The King has ordered me to make my way there at once to learn what I can and deal with it, if possible.\" The Shadow called for a fresh horse, which was brought forth immediately. He climbed into the saddle, before he clasped his friend on the shoulder.\n\n\"You'll be fine, Jared. Stay vigilant and strong and I'll see you here in a year.\" And with that, he turned the horse sharply and tore off at a full gallop.\n\nJared turned around and stared at the gates for a while, chewing his lip. Oh, well there was nothing for it, and he started up the path with a steady step. He went through the gates and was greeted with the very dreary interior of the keep. Gray stone everywhere, square houses... Uninteresting, to say the least. The young Half-Elf could not imagine living there, but to each their own. Then again, this place would look very different once the trade agreement was finalized.\n\nWalking around the streets, he found that the keep was inhabited by all races, as he had been told. He saw quite a few elves, many orcs and humans, of course. He had to sigh unhappily, however, because the glares where just as bad here as they where back home. Somehow, he'd thought a multi cultural place such as this would be more tolerant, but it seemed not to be. Was there no place on the Continent where he'd be free of them? Accepted for who he was?\n\nAfter two hours or so of exploring, he found the Gilded Crown in an area that seemed a little better off than the rest of the Keep. The walls had paint on them, at least. Jared entered the inn, which was fairly crowded, given it was only early afternoon. He made his way over the the counter, but before he could say a single thing, the bald, fat barkeep, who looked a bit like a bulldog, slammed his palm down and glared at the young man.\n\n\"We don't serve your kind here, freak. I suggest you make yourself scarce, before someone does it for you,\" the man growled.\n\nJared raised an eyebrow, but ignored the outburst. \"Actually, I'm just here...\"\n\n\"Boys!\" the Bulldog barked and two men at the counter each took a hold on a shoulder of the young man. Jared rolled his eyes and in a flash, he had both men down on one knee, their wrists bent at an awkward angle.\n\n\"Are we going to have a problem? I'm just here to meet someone and once I've met her, I'll be on my way.\"\n\nA roar alerted Jared to another attacker, who was approaching from behind, a chair held in his hands, ready to be brought down on the young prince's head. The young man quickly let go of his earlier victims and quick as a flash, he elbowed the man in the throat just hard enough to make it hard to breathe. And the so battle was on...\n\n000000\n\nZa'ira took a long drink from her tankard, and shot another glance at the big clock mounted on the wall above the counter. She was wondering how much longer she'd have to wait for her charge in this cesspool of a... place. Those bastards were late! She'd been here for over a week already.\n\nShe glanced down into the tankard and snorted. At least they had proper orcish mead and it was actually very good, she was forced to admit. Too bad she couldn't get drunk. It would have made her stay a little more tolerable. A commotion downstairs caused her to rise from her chair and make her way to the railing to see what was going on.\n\nA Half-Elf had a pair of humans down on one knee as he held them by their index fingers. So he was here to meet with a woman? Could this be Prince Jared? A man came charging from behind and the newcomer dealt with him handily and the fight was on.\n\nZa'ira leaned lazily on the railing and enjoyed the show, which was extremely entertaining. The Half-Elf was dancing around with graceful movements, fluid and fast. He was using a fighting style favoured by the elves, which emphasized using the momentum of your enemies against them to throw them or if you were forced to punch them, to do so at the opportune moment, for maximum effect.\n\nThe heel of a hand slamming into the nose of someone coming at you at full speed could do a lot of damage. Oh and the style also had techniques to dislocate joints, which was extremely effective. By now, the young man had cleaned the floor and every assailant lay incapacitated on the floor. The rest had fled.\n\nZa'ira was impressed. For a little guy, he sure could dish out a lot of punishment. She bit her lip hard, and forced down her arousal. He was a foreign dignitary and it would not do for her to give in to her urges and take him.\n\nShe grabbed her cloak, greatsword and pack, before vaulting over the railing to drop onto the floor, using the body of an unconscious man to break her fall. She clapped her hands slowly and grinned at the young man as he spun around, ready to take on yet another attacker.\n\n\"Well done, Prince. Well done indeed.\"\n\nJared was struck speechless. She was his escort? She was the most beautiful woman he'd ever seen in his short life, despite clearly being much older than him, heavily muscled and very tall. But despite her muscles being a somewhat large for a woman, she wasn't bulky, boxy and ungainly like Kurgan. No, she was more like a... lioness. Graceful, sleek and powerful.\n\nFirst, he found her almond shaped eyes, which were a mesmerizing amber colour that seemed to glow in the gleam from the fireplace. He thought they matched her lightly green skin perfectly. Her pointy ears led him to her high cheek bones and a surprisingly delicate jaw that jutted forward a tiny bit and from her lovely, plush lips, he could see a pair of tusks rise about half an inch out of her mouth, which drew his attention to her delicate nose. Her jet-black hair was shaved on the sides and done in a braid that reached her buttocks, and he found himself wondering just how long it had to be when she allowed it to flow free.\n\nShe was wearing a fur lined leather armour, that left part of her midriff bare, showcasing her rock hard abs, but Jared was hard pushed not to drool at the sight of her large breasts, which were covered quite well by the armour.\n\nIt did amazing things to her cleavage, which he could see through the laces. His eyes went lower still and found she was wearing a heavy, fur lined hide loin cloth that was actually more of a skirt that reached about midway down her powerful thighs and lastly, she wore a pair of fur lined leather boots that looked well worn and extremely comfortable.\n\nA finger under his chin, raising his head startled him out of his reverie and he found himself staring into her amazing eyes. She was looking down on him, an amused glint in those amber eyes, complete with a mischievous, yet knowing smile.\n\n\"You can stare all you want, Kishi, and I know you will, but I suggest we depart quickly, before the Watch arrives. I don't think we'll be leaving this charming place today if we linger too long.\"\n\nJared shook his head. And smiled apologetically at Za'ira, who simply smiled at him once more. \"Let's go through the back. I know a shortcut to the back gate. If we hurry, we'll be out of reach, before they realize we've gone.\"\n\nJared nodded and grabbed his pack and rushed out after her. She moved fast and it was obvious she knew exactly where she was going and less than a quarter hour after leaving the inn, they were outside the gates and heading into the wilderness.\n\n\"Come, Prince. I wish to reach the other side of the Pass by nightfall. We'll make camp there. The Watch cannot do anything once we're in orc territory.\"\n\n\"Alright, lead on, then,\" Jared said and was rewarded with a smile and a nod.\n\nThey did not speak more that first day. Instead, they focused on saving their energy to be able to maintain speed up the valley that led to the Pass. Once they reached the crest, Jared stopped for a moment, and turned to gaze back at the Kingdom. A year, at least, until he'd see his home again.\n\n000000\n\nThey rose at first light, and quickly broke camp to set out into the day. What lay in store was a trek across an ancient lava field, along a rough path, which wound its way through the moss. Za'ira set a strong pace, but so far, Jared had not had any trouble keeping up.\n\nIt seemed the orc woman knew how to pace herself for those shorter than her. After two hours of walking, his guide slowed down a little and allowed her charge to walk beside her. She gave him a sidelong glance which prompted Jared to ask what the matter was.\n\nZa'ira shrugged her shoulders. \"You're not what I expected, Prince Jared.\"\n\nHer companion's eyebrows rose at that admission. \"Oh? And what were you expecting?\"\n\nZa'ira snorted at him and grinned impishly. \"A snot nosed brat, who I would have to babysit like a newborn, if I was to have any chance at bringing him safely to Stormhold.\"\n\nJared chuckled at that and gave her a grin. \"That's what you would've had if either of my two brothers had been sent here, instead of me. And for the record, I can't say you're what I thought, either.\"\n\nZa'ira tilted her head at him. \"How so?\"\n\n\"Well, you don't have an indigo coloured mohawk or a bunch of piercings. Seems you took them all out.\"\n\n\"Someone told you about that, did they?\" Her eyes became wistful. \"Aaah. Good times. Oh, and just so you know, I still have a pair of piercings,\" she said with a mischievous grin.\n\n\"Where? I don't see them?\" Jared asked as he studied her beautiful face.\n\nZa'ira waved a finger at him. \"Now, that would be telling, wouldn't it?\" she said and gave him a wink.\n\n\"Oh... Oh!\" Jared turned a beet red at the implication.\n\nThe orc woman let out a surprisingly lovely, velvety laugh that was irresistible to Jared and he started snickering, which became a kind of a laugh, and eventually turned into a bellow.\n\n\"Oh, thank you, Prince! It's been a while since I've had such a good laugh,\" Za'ira said and looked down at her companion with a twinkle in her eye.\n\n\"Likewise. By the way, could you please do away with that Prince crap? There's just the two of us here and I'm not really a fan of titles and such. In fact, I can't stand the fucking court or the castle, really. I much preferred to spend my time out in the forests with Groundkeeper Duncan or with Kurgan, in the stables.\"\n\n\"You know Kurgan?\" Za'ira asked in surprise.\n\n\"Sure. He's one of my best friends. He taught me all I know about animals and how to build a saddle and a few other things. He was one of very few who didn't see me as something more filthy than the mud under their boots.\"\n\nZa'ira suppressed a sigh. Of course his life had not been an easy one. Even all the way up here, in the Hinterlands, had they heard of the Half-Elf bastard son of King Marcin and Half-Breeds were treated the same everywhere. She felt a little happy with herself, seeing how she held no such prejudices. It would be rather hypocritical of her, considering her own secret.\n\nPutting that aside, she felt her opinion of the Prince take a sudden leap at the revelation that he was friends with her Great Uncle Kurgan. How exceptionally interesting. Very few ever managed to pierce that old orc's hide, and those who did were always worth knowing, in her experience.\n\n\"How do you know Kurgan?\" Jared asked with a curious expression.\n\n\"He's my Great Uncle.\"\n\nJared nodded and was about to say something, when suddenly Za'ira stopped and motioned for him to crouch low and an arrow sailed above their heads, coming from up the path.\n\n\"Shit!\" Jared swore as he and his orc guide scrambled behind a rock formation on the side of the path.\n\n\"You have a bow?\" Jared asked Za'ira, who shook her head.\n\n\"I don't use them,\" she said and produced a sling from somewhere. \"I use rocks, instead.\"\n\n\"Well, whatever works, I guess,\" the prince said, but had to gape at the size of the rock the orc put into the sling. It wasn't a rock. A boulder might've been a better word for it.\n\n\"Cover me!\" Za'ira shouted and rose from behind the rock, forcing the prince to curse at her recklessness and step out of cover and fire an arrow that hit one of the assailants in the thigh. That same person's head was then crushed by the rock Za'ira sent flying. That caused a bit of a panic in the attackers, who started firing arrows wildly.\n\n\"Who's trying to kill you?\" Za'ira asked in confusion.\n\n\"Me? Who says they're trying to kill me? Jared said in feigned ignorance.\n\n\"I am well known in the Hinterlands, and only the most insane of fools would ever try and kill the sister of the Queen,\" Za'ira said firmly.\n\nJared sighed. \"I never did tell you why I was so late, did I?\"\n\nThe orc nailed him with a stern look and he became a little sheepish. \"We had to fight off several assassination attempts and I got a little injured one time.\"\n\n\"You've got assassins on your tail? Why?\" the green skinned woman asked in an annoyed tone, before both she and Jared noticed a slight lull in the hail of arrows. The pair peeked out from cover and while Jared was unable to let loose an arrow, Za'ira decided not to use her sling and simply threw a stone, catching one of their enemies in the head. Needless to say, the enemy fell dead to the ground.\n\n\"Well?\"\n\nJared sighed, and gave her a flat look. \"I'm the Half-Elven bastard son of the King, his oldest son and the step brother of two younger brothers, he had with his wife.\"\n\nAn understanding dawned on her face and she gave him a look that was part pity, part sadness and then a whole lot of anger, not aimed at him, Jared noticed with relief. \"And I suppose the attempts on this trip aren't the first time this has happened?\" she growled.\n\nJared pulled back the bow and quickly sidestepped and let fly, catching one of the attackers in the chest. \"No. I've dealt with a few. Jaspar usually takes care of them even before they happen.\"\n\n\"And your father lets this go on?\" she asked incredulously, then leaned out and nailed a guy with another rock.\n\n\"What is he supposed to do? The Queen probably goes through so many different channels with her requests that it's impossible to trace it back to her. And besides, there could be any number of people who would want me dead. Hell, half of the attempts probably come at the behest of the Counsil. A Half-Breed prince? Scandalous!\"",
        "Za'ira frowned at that and studied his features and found in them a tired resignation, and she could understand why. She wondered why he hadn't left before now, but then again, where was he supposed to go? At least in Castle Greyhawk, he'd had a roof over his head, ample food and supposedly, a few friends. Well, there was not a thing they could do about that today and they had a battle to finish.\n\n000000\n\nWith gasping breath, Jared pulled the last orc corpse off the path, and Za'ira dumped it effortlessly into a crevice with the rest of the bodies, where they could not be seen, unless you looked for them specifically. Jared simply shook his head. Just how strong was his companion? He was pretty certain she was a fair bit stronger than Kurgan, despite being smaller.\n\n\"Damn it. This is bad,\" he heard Za'ira mutter as she read through a roll of parchment she'd dug out of one of the packs that lay on the ground. She handed Jared the roll and continued to rummage through 'the loot' as she called it.\n\nJared scanned the parchment and quickly realized he was reading a contract and the amount of gold that was on offer for his head was quite staggering. But that wasn't the worst part. It looked like the guys they'd just killed were a part of a large gang that roamed the wilderness in this part of the Hinterlands. At least that's what he surmised from his reading.\n\n\"So what do we do?\" Jared asked and tucked the contract into a pouch on his pack.\n\n\"Well,\" Za'ira said and tugged on her braid absent mindedly. \"The smart thing would be to turn back and try to reach Castle Greyhawk, but I'd wager there are even more people waiting for you back there and with Jaspar gone, there's no one to defend you. I would, but I don't know the land well enough and I have to get back to T'alis. The situation is very tense in Stormhold, now that my sister has decided to extend a proper hand in friendship to the humans. A few powerful clan chiefs where displeased. I didn't want to go on this trip, but she insisted.\"\n\n\"So we can assume there will be more attacks against us, both from my would be assassins and your own people?\"\n\n\"Yes, most likely.\" Za'ira said and took a deep breath and expelled it. She had to smile in satisfaction when she saw the Prince's eyes glued to her chest. Oh, this trip could be so much fun, despite everything.\n\n\"So, I would suggest an alternate route to reach Stormhold. I'd like to cross the Marshes and then cut through the Warm Lands. It will take at least two weeks longer but only a few people ever use it.\"\n\nJared gave her a questioning glance. \"I'm assuming there's a reason why people don't go there.\"\n\nZa'ira grinned at him and Jared instantly regretted asking. \"Well, yes. The Marshes are infested with the Undead and the Warm Lands are home to Drakes and other such beings. Fortunately for us, I've been there many times before.\"\n\n\"Well, let's go, then. There's no time to waste.\"\n\nAnd so they set out toward the Marshes. They travelled only for half a day or so on the path, before breaking off when the moss wasn't as wide spread and they would not be as easy to track. Za'ira did stress that the enemy would most likely realize what they'd done, once they did not arrive at the next ambush point, and that she wasn't too worried.\n\nOnly the craziest orcs would go where they were headed, so they'd not have to contend with too many attacks. In a rare bout of wisdom, Jared had refrained from pointing out the fact that she herself had suggested this route.\n\n000000\n\nIt took them four days to reach the edge of the Marsh and luckily, not much noteworthy had happened. Aside from Za'ira growing more and more restless from the looks the Prince sent her way. It wasn't that she disliked them. Quite the contrary; she revelled in them. She had always known she was exceptional and her beauty was just one part of it.\n\nShe had taken to occasionally cover the rear, under the guise that it was wise to switch positions every now and then, but really, it was just so that she could ogle Jared's delectable ass. She went over again and again in her mind, just what she wanted to do to him and with him, and she was in a near constant state of arousal.\n\nIt was only her masterful control of her body that allowed Za'ira to keep her secret from spilling out from beneath her loincloth. Oh, but it was hard! So very hard to resist impaling the young Half-Elf with her cock, and make him hers. Wait. Cock? Now, I'm assuming you're wondering just how a woman could have a cock. Well, let me tell you.\n\nYou see, the best kept secret among the orcs was the fact there were in actuality, three genders of their race. Males, females and the so called Fut'anari, or Futa for short. And while those of the third gender were indistinguishable from normal orc females, there were a few key differences. The Futa were stronger, faster and much more intelligent than their regular orcish kin, regardless of gender.\n\nThey also lived much longer. A healthy Futa should expect to see at least four hundred years, as opposed to a hundred and fifty, as was the case among their lesser brethren. Incidentally, Half-Elves would regularly see over four centuries as well. But the most significant difference was the fact that, instead of a vagina, the Futa were born with fully functional male genitalia.\n\nThe orc sages had researched the anomaly for a long time, but had been unable to ascertain just what caused it. They had been able to determine, however, that it seemed completely random. A female impregnated by a Futa was no more likely to give birth to a Fut'anari than a regular child and Futa were extremely rare.\n\n000000\n\nThe first day after they entered the Marsh, which would take them a week to cross, they did not encounter a single living being. Or dead one, either, much to Jared's relief. There was something he had started wondering about, though. Za'ira had been behaving a little strangely. He'd catch her staring at him. Almost as if she was sizing him up.\n\nNot that he could say anything, given how he let his own eyes roam over her whenever she was focused on something else. Unlike him however, Za'ira wasn't embarrassed at all, if he caught her. She would keep staring and wink at him and then play with her tusks with her tongue, something he found incredibly arousing. Still, nothing had happened yet and Jared doubted there ever would. He was a foreign diplomat and she was the queen's sister. It would not be proper.\n\nIn the afternoon of the second day in the Marsh, Jared witnessed his first undead creature. It had been an elven woman once, a warrior, judging by the tattered armour she wore. The creature wobbled toward them on unsteady legs and seemed to take a raspy breath. The prince readied his bow, but his hand was staid by his companion.\n\n\"Put away your bow, Jared. The only way to end an Undead is to sever the head from the body or completely crush its skull. And arrows cannot pierce the thick skin of drakes, so it's swords until we reach the other side of the Warm Lands. Jared nodded and turned his attention back to the slow moving creature, which had been joined by a few more, also clad in the remains of ancient armour.\n\n\"Who are they?\"\n\nZa'ira shook her head and readied her large sword, before giving her travel mate a sidelong glance. \"Does it matter?\"\n\n\"I suppose not.\" And into battle they went. Or rather, it was more of an extermination. The Undead approached the pair of them and they hacked their way through that part of the Marsh. Za'ira kept a vigilant eye on the sky as they worked and slowly, but surely kept them moving toward the north east.\n\n\"Why are people so afraid of this place?\" Jared asked as he hacked the head of yet another Undead. \"These things do not put up any kind of a fight.\"\n\nA head rolled by and Za'ira huffed at him. \"What did I tell you earlier? I've been here many times before and know where the worst of the monsters roam. A ways to the east, there's an area with a few ancient crypts and catacombs of some long forgotten civilization and over there, you can find all sorts of nasties. Ghouls, Ghasts, Spectres and there may even be a Mummy or two about. All of those things are quite the handful. So stay focused and don't get overconfident.\"\n\nAnd on they travelled with extreme care. When one would sleep, the other would keep watch, and since an open fire would attract all sorts of filth, they huddled together for warmth. And inevitably, they got closer. They shared stories of their lives, told each other jokes and generally had a good time.\n\nAnd of course, Za'ira would tease the young Half-Elf relentlessly, always enjoying how embarrassed she could make him with even the smallest things. A remark laced with innuendo, a hot whisper in his ear, the list was almost endless. But on their final day in the Marsh, something happened that would change their lives forever.\n\n000000\n\n\"Gaaah!\" Za'ira growled. \"I cannot wait until we're in the Warm Lands. At least there, we can take a bath and clean our clothes.\"\n\n\"Well, we'll be there before nightfall, won't we?\"\n\nThe Orc Futa grunted in reply. The truth was, she was finding it more and more difficult to focus on her job. She had enjoyed their trip immensely, despite the ever present dangers and less than ideal travelling conditions.\n\nShe especially liked the nights when they huddled together for warmth, which gave her an excuse to touch the Kishi. She had also come to realize what she was feeling toward her companion wasn't just lust. No, she was developing real, tangible feelings for the boy.\n\nHe was kind and honest. Mature for his age, strong, very intelligent and a man of his word, it seemed and she found, much to her surprise that she trusted him implicitly. In that respect, it certainly helped that her Great Uncle liked him. So intent was she in her musings, that she did not notice a ghoul waiting in ambush below the surface of the marsh.\n\n\"Za'ira!\" Jared shouted and rushed forward and slammed into the monster which had lunged out of the water. The Half-Elf's sword clattered to the ground along with his pack. His momentum carried both him and the creature into the water and the pair disappeared into the deep.\n\nZa'ira stared at the water, frozen in place. What had just happened? She shook her head and looked around frantically.\n\n\"Jared! JARED!\"\n\nShe dropped everything and was about to throw herself into the pool when someone's head broke the surface on the other side. She darted over and pulled Jared up onto the ground and he coughed up a bit of water, before rolling onto his back, his chest heaving. His right hand was clutching the hilt of one of his knives.\n\nJared coughed up a little bit of water. \"Been a while since I went for a swim. This was not the company I was hoping for, to be honest.\"\n\nZa'ira grabbed his tunic and yanked him onto his feet. \"What the bloody hell were you thinking?\"\n\nJared sat up and shivered a little, looking more than a little out of it. \"We look out for each other, right?\" he half slurred. \"That's what people who care about each other do.\"\n\nOh, no. Za'ira stared at the young prince wide eyed and was a little startled when she found her heart hammering in her chest. Yes, she was falling hard for the young man and no mistake. He even told her he cared about her. And he had looked so perfect on the ground, before her and it did some incredible things to her libido. She powered through her building arousal, forcing it to manageable levels and helped her companion up.\n\n\"Alright, Jared, we need to move quickly. You need to get warm and dry. If we move fast, we can reach the Warm lands in three hours. There's a hut close to where we will cross into the area, where we can light a fire and warm you right up.\"\n\n000000\n\nZa'ira leaned against the wall of the hut and kept watch, even though she knew there were no beasts in the immediate area. The cold blooded reptiles did not often come up here, preferring the warmth down in the basin that made up most of the Warm Lands.\n\nWell, she had told Jared that she'd keep watch the whole night and despite some protests, he'd finally given in once he realized he was basically dead on his feet. But Za'ira wasn't really keeping watch. No, she was staring at the young man with a slightly unnerving gaze, wondering what she was supposed to do with the feelings she had finally accepted had become too strong to ignore.\n\nShe wanted to make him hers, of that there was no doubt. But how? He cared for her and she was certain it was not platonic, so she could simply tell him the truth about how she felt, knowing it was reciprocated. It was the most honest thing to do, but there was always the very real and likely possibility he would reject her once he learned her secret. Then they'd drift apart and arrive in Stormhold and some floozy might claim him.\n\nUnacceptable.\n\nHe would be hers and that was that. Now, she could do this the normal way a Futa trained a pet; through intimidation, degradation and humiliation. She threw that option away almost as soon as she thought of it, however. For that to work, the pet in question would have to be accepting of such treatment on some level, and that wasn't Jared.\n\nHe'd been subjected to all of these things from an early age and they would not work. And he was stubborn. He'd fight her every step of the way and it would be completely exhausting and the anger and resentment would cause him to eventually run away.\n\nAnd besides, if you decided to go this route, you had to be willing to take the person and break them, strip away everything they were and remake them into what you wanted them to be.\n\nUsually that meant a mindless fuckslut, solely created to sate your lust, and while Za'ira had taken such pets in the past, that wasn't what she was looking for now. No, she was looking for a mate, a partner. Furthermore, she was not willing to tear away everything that made Jared into the wonderful person she had fallen for.\n\nWait, she could try that. Za'ira remembered Man'drin, a fellow Futa she'd met in an inn, once, who'd told her of an elven pet she'd had at one time, many years before. She'd mentioned a strange thing happening when the pet serviced her orally. Something about developing a need for her seed.\n\nThinking about it, Za'ira supposed it made sense. It was known to the Futas, that their seed had some very mild aphrodisiac properties. To orcs, at least. A little guy like Jared? Well, it would be rather interesting to see the results of a direct injection of her seed into his belly.\n\nAll this thinking had turned Za'ira on immensely and she could feel her cock stirring a great deal. Looking over at Jared, who was fast asleep, she carefully removed her loincloth and laced down the leather fur lined briefs she wore beneath it. All Futas did, a sort of double safety, to ensure the survival of the secret.\n\nShe took her cock in hand and gave it a couple of pumps, and she could feel it pulsing in the palm of her hand. She moaned almost inaudibly. Such a long time since she'd gotten any sort of release, and pretty soon, her long shaft and large testis were glistening, coated in a thick layer of juice. She threw out all of her normal fantasies, not needing them when the object of her immense desires was mere feet from her.\n\nHer hand moved up and down quickly, rapidly building her arousal, bringing her closer and closer to completion. It would not take long after all this time without any action, so she made her way to Jared and very carefully, straddled his waist, making certain to not touch him, so as to rouse him too early. This would have to be perfect, she would only get one chance at this.\n\nHer fist was now a blur and her breathing was growing heavier when she felt her balls starting to tighten up, a sign she was about to release. She began trembling and with one hand, she started shaking Jared out of his slumber. She backed away a little bit and shook him harder, desperately holding back the enormous orgasm that was threatening to overwhelm her. At long last, Jared shot upright and came face to face with her meat, which was pointing straight at him.\n\nThe young Prince stared at the impossibly large cock for a moment, before opening his mouth to ask Za'ira what the hell was going on. The person in question recognized her opportunity and brought one hand behind his head, gently, but firmly holding it in place. Then she slid her cock into his open mouth, to the back of his throat, where she stopped, careful not to go to far. She did not want to hurt him, after all.\n\nAnd then, with a lustful groan, she erupted.\n\nShot after shot, she spurted her seed down his throat and into his belly. Now, on average, Za'ira would give the person sucking her off at least a good dozen mouthfuls of her cum, but after all this time, she hesitated to guess just how much she was pumping into her friend. It had to be an awful lot, seeing how his belly looked like he'd just eaten an absolutely massive meal, which he had, of course.\n\nAt long last, she stopped and let go of Jared, who slumped onto the floor. Za'ira watched, eyes half lidded with lust as the Prince's pupils dilated. His breathing became ragged, his nipples hardened and he shuddered in pleasure. She could see his own cock bulging in his breeches and she gave a triumphant smile.\n\nSuccess!\n\nThis had gone perfectly; she had given him a taste of her cream, and the high he was experiencing now seemed similar to the one she'd seen people in when they'd taken a large dose of Dust. The high lasted for an hour and the person did not remember anything immediately before and during. The body remembered, though, remembered the pleasurable sensations.\n\nZa'ira could feel her cock hardening once more and she started stroking it again. She looked fondly down on the Prince, who was blissfully unaware of what was happening. The orc Futa made her way to her pack and extracted a glass jar, insulated with leather. She undid the lid, which had been carved with a preservation rune and with a few quick pumps, came a dozen spurts into it, before closing it again and securing the jar in her pack once more.\n\nAnd now for the rest of her plan. She would place herself in charge of meals for the next while, and she would lace his food with a bit of her cum every day, a little more each time. She would make him hopelessly addicted to her seed and then, after a week or so, she would stop. She suspected the need would have him crawling up the walls, in less than a day.\n\nThat night, she would reveal herself to him and make him realize she had what he needed, that she had an endless supply of it and that he was more than welcome to have as much of it he wanted, any time he liked.\n\nTomorrow, she would also start testing him with his weapons and start training him, and she would use that to assert her dominance over him. Oh, she was seriously planning on helping him better his already considerable skills.\n\nIt was the perfect way make him realize she was superior, that he was beneath her. And the best part was that she wouldn't have to resort to humiliation of any sort. He'd come to understand his position in their relationship on his own.\n\nZa'ira got dressed once more and after tucking in the prince, once more took her position by the window, either gazing out into the night, or looking with fondness at her future mate. Things were looking good. Very good indeed.\n\n000000\n\nJared woke up, feeling extremely refreshed and well rested. He smelled something cooking and looked up to find Za'ira walking over to him, carrying two bowls. She smiled at him and he smiled at her in return and accepted his stew with thanks. He ate like a man who'd gone hungry for days and he had to admit the food was fantastic and it made him feel incredible.\n\n\"I take it it's good?\" Za'ira asked with a fond grin.",
        "Jared nodded eagerly. \"Oh, it's great, Za'ira. I didn't know you could cook! Well, you learn something new every day, I suppose.\"\n\nHis orc companion nodded her accord. \"Indeed. I was thinking I would see to our meals for the next while. Speaking of learning, I was wondering if you'd like me to take a look at your swordplay and help you train? It's the least I can do after you saved my life.\"\n\nJared rubbed the back of his head and looked away shyly, telling her she did not need to do that, not noticing the needy look on Za'ira's face. Oh, how she wanted to cradle that head in her hand as he bobbed on her cock... Soon. Very soon. Good things came to those who were patient.\n\n\"I insist,\" she said sternly. She would not take no for an answer. \"I found a pair of tree branches last night and whittled them into the rough shapes of our swords, so we can start before dinner tonight. What do you say?\"\n\nHe gave her a smile that almost melted her onto the floor. \"That sounds great, Za'ira.\"\n\nThat night, the pair sparred for the first time. And predictably, it was not even a contest. Za'ira had started by having Jared go through the motions on his own, and she could find few faults in them.\n\nThen she had decided to spar with him and it had taken less than an minute for him to end up on his back with her sword at his throat. In all honesty, he was a fantastic fighter. All he lacked was experience, but this worked just fine for her plans.\n\n\"Looks like it's my victory, Kishi,\" she said. She was careful not to offer to help him to his feet.\n\nJared scrambled to his feet and rubbed a sore spot on his ass, which made Za'ira's cock twitch. Oh, this was pure torture, but she would endure, as the rewards were great.\n\n\"What does that word mean, Kishi?\" Jared asked as he went to grab his shirt from a nearby rock. \"You've called me that several times, now.\"\n\nThe orc smiled fondly at him at the question. \"It means 'Little One.'\"\n\nJared gave her a strange smile. \"I'm a Little One?\"\n\n\"Yes, of course, Little One,\" Za'ira answered as if it was obvious, which made Jared think and he had to admit she wasn't wrong. He was rather small, compared to her.\n\n\"Could you ready out our bedrolls while I get dinner going?\"\n\nThat night, the Half-Elf went to bed extremely satisfied and Za'ira had to wonder if she'd fed him too much of her cream, but decided it was fine. After all, it would only make him crave more.\n\nThe next day went much the same. They had breakfast, travelled through the day and before they set up camp in the evening, he was trashed by Za'ira and ended up on his back, looking up at her. This time, she stood over him with a foot on his chest.\n\n\"You must not leave your side open like that, Little One. Sure, you're fast, but you will come up against someone who's faster and they will take advantage.\" Jared tried to get up, but she stood fast.\n\n\"You know, in orc lands, the boys call their teacher 'Master'. Now, I'm a woman and I'm teaching you, so that would make me... 'Mistress', wouldn't it?\" she asked rhetorically as she stared into Jared's eyes and maintained pressure on his chest.\n\n\"I suppose... Mistress,\" Jared said, a little embarrassed.\n\nZa'ira gave him a lovely smile and released him, not bothering to offer him a hand up. \"That's good, Little One. A student should always remember his place beneath his Mistress. The bedrolls, please. I'll see to dinner.\"\n\nJared watched her go, then went to ready their bedrolls. He was finding that little conversation rather strange, but in a sense, it reminded him of the way Jaspar had sometimes been when he'd been training under him. He supposed some things worked the same, no matter where you went. When he was done with his task, he returned to the fire and Za'ira motioned for him to sit down as she brought him his food.\n\nThe Prince was a little embarrassed when he noticed he was a little too eager and he was staring at the food in her hands. He couldn't explain why, but the meals over the last two days had been utterly fantastic. He gratefully accepted the bowl and ate with a ravenous appetite, barely managing to suppress a pleasurable moan as he felt the pleasing sensations coarse through his body. This was simply sublime!\n\n\"Little One?\"\n\n\"Yes, what is it?\" Jared asked and with some difficulty, paused in his eating to look at his beautiful companion.\n\n\"Tomorrow, we will descend into the basin, where the beasts dwell, so we will have to remain vigilant. We cannot be distracted. We could skirt around and travel the upper reaches, but it will take much too long.\"\n\n\"Alright,\" Jared agreed. \"If you think it best. You're the guide, after all.\"\n\nZa'ira gave him a stern look. \"Have you forgotten how to address me, Little One?\"\n\nIt took Jared a moment to understand what she meant. \"No, of course not, Mistress. It will not happen again.\"\n\n\"Good. So long as I am your teacher, make sure to address me properly. Discipline is key for any student, wishing to learn from their Mistress,\" Za'ira said with a confidence she wasn't really feeling, but she had to maintain the facade, at least until she was ready to take Jared further.\n\n000000\n\nThat morning, the pair descended into the basin and Jared walked behind his Mistress, keeping a vigilant eye on the surroundings, while stealing an occasional glance at Za'ira's perfect ass. As he let his eyes wander, he had to marvel at the beauty of this rugged land and it was truly a land of contrasts.\n\nOn one hand, you had towering mountains, full of snow and ice and he'd seen more than one glacier capping those same mountains. And now, they were travelling among geysers and bubbling lava pits.\n\nA word from his Mistress as they travelled through a narrow, twisting gully brought him back to reality and Jared unsheathed his weapon when he saw Za'ira do the same. A slight tremor in the ground told Jared that something was coming. Something big. They both readied their swords and walked slowly forward.\n\nThen the beast came around the next bend and Jared almost dropped his sword. If there were such things as dragons, this creature had to be one of them. It had to be at least thirty feet long, ten feet high, and looked like it weighed at least a ton. It had grey, scaly skin and the claws on its feet looked sharp and deadly.\n\n\"Lucky for us, It's not an adult,\" Za'ira said as she charged forward and slashed at the beast, but her sword skid of the scales. She retreated and the beast slowed down and stared at them.\n\n\"The best way is to try and stab it where the legs meet the torso. We have the advantage in this cramped space, so it cannot swipe at us with its tail. And whatever you do, do not let it bite you. Its teeth are poisonous and it will kill you. Slowly.\"\n\n\"Alright, Mistress. Should we attack it from both ends? I think I can use the walls of the gully to get behind it.\"\n\n\"Good idea, Little One. Ready? Then let's go!\"\n\nJared nodded and when his Mistress charged the beast, he darted to the side and quickly climbed into the wall of the gully and raced along, and vaulted off once he was far enough. He rushed forward, and just managed to stab the animal in the right place. The beast screamed and turned its head, but it was attacked from the front as soon as it did and Za'ira thrust her blade to the hilt at an angle and the animal dropped dead.\n\n\"Well, that was quick,\" Jared said and stared at the monster with a shake of his head. \"Just how big do those bloody things get, Mistress?\"\n\nZa'ira walked over to her Little One and smiled. \"You did well for your first time. Now, to answer your question, Little One; they do not grow much larger, but their skin thickens and their scales grow harder. Had it been a mature den mother, we would have been eaten.\"\n\n\"Well, that's a grizzly fate, to be sure,\" Jared said.\n\n\"Yes, I'd say so. We will keep to these gullies as much as possible. The drakes do not often come here, and if they do, we have the advantage of the tight space.\"\n\nThat night, Za'ira decided to stop feeding her Little One her seed. It was a day earlier than she had planned, but she felt no more was needed and that he would be easily seduced the following night. There was another thing that played into her decision and that was a certain cave they would reach in the afternoon the following day. It was the perfect place for the next step in her plan. It was private, warm and they could take their time, as the entrance was too small for a drake to enter.\n\nAfter a rather fierce training session, which Jared did better than ever before, the pair of them sat down to eat and Jared dug into his food with gusto. It tasted as good as always, but something was different. It wasn't quite as satisfying. Jared decided against voicing his observations and simply ate his meal and thanked his Mistress for the food and went to bed.\n\n000000\n\nBolting up from his bedroll, Jared woke up in the night, sweating, and shivering after a nightmare. He found it odd that he would wake up from a dream, as he almost never remembered his dreams. It had been a strange dream. In it, he had been running from some unknown beast, cloaked in shadow and malice.\n\nHe had run and run, and yet, the beast had caught him and grabbed him, then swallowed him whole. He laid down again and tried to calm his nerves, but found himself unable to do so. He was restless and felt like he needed something. What it was, he did not know.\n\nUnknown to the Little One, his Mistress was watching the whole scene with satisfaction. While she detested the idea of him being in pain, it was necessary for her plan to come to a satisfying conclusion.\n\nIn the morning, Za'ira made breakfast and took a proper look at her companion. He was pale and restless and looked sick. She handed him his portion of the meal, and he ate with little appetite, wincing when the meal wasn't as pleasing as it had been for the previous mornings.\n\n\"Something wrong, Little One?\" Za'ira asked in faux concern.\n\n\"Just a little peaked., Mistress. Nothing to worry about. I'm certain I'll be fine after a while.\"\n\n\"If you say so, Little One.\"\n\nThey had travelled for a few hours and Jared was feeling worse and worse. Now, he was trembling and shaking and sweating. He was having trouble focusing and he could feel his Mistress' eyes on him, weighing and measuring and he felt as if he was letting her down and it gnawed at his soul. He did not have any appetite when midday arrived and told his Mistress as much and she gave him a disapproving look.\n\n\"You are clearly not alright, Little One. In around four hours, we will reach a cave I want us to spend the night and the next night as well, if you're still feeling under the weather, come the morrow. You will have to be on your toes when we reach Amber Rock, a village three days from here.\"\n\n\"As you will, Mistress.\"\n\nEventually, the pair reached the cave. By now, Jared felt as if he was being pricked by a thousand tiny needles. He was feverish and his head hurt. His Mistress led him inside, through a narrow opening, barely large enough for them to get through, and they found themselves in a small, warm space, large enough for two people to spread their bedrolls. Jared spied a narrow passage further in that led deeper into the cave.\n\n\"There is a hot spring in the chamber further in and I think I will go and bathe. Set up camp, please, then come join me. It will help. But take your time, I want to clean myself up, first. \"\n\nAnd with that, his Mistress dropped her things onto the floor of the cave and disappeared along the passage. Jared shook his head and grunted a little at the pain. He did as he was told and then removed most of his clothes, before he followed his Mistress further in.\n\nIt was a little steamy in this part of the cave. Jared could see a fairly large pool and hear water rushing into it from somewhere. He rounded a bend in the passage and froze. Standing in the middle of the pool, with her back to him, was his Mistress.\n\nThe water reached to her waist and she was busy washing her naked upper body. Her hands moved in slow, methodical patterns around her body and she obviously took great pleasure in finally being able to properly clean herself.\n\nShe was utterly perfect, Jared thought. Quite a few scars lined her toned back, but instead of detracting from her beauty, they only added to it, made her more mysterious and alluring, somehow. She had loosened her hair from her braid and tied it into a high ponytail, and Jared assumed she had washed it before he arrived.\n\n\"Are you enjoying the show, Little One?\" Mistress Za'ira asked as she turned around, seemingly unbothered by the fact that she was flashing her large, perfect breasts.\n\nJared blushed and turned on the spot. \"I am sorry, Mistress. I hope I have not offended you!\"\n\nA sensual, throaty laugh met his words. \"Oh, you silly Little One. What did I tell you the first day we met? That you could stare all you wanted. That hasn't changed, and I enjoy your eyes on me, Kishi. Now get naked, get in here and wash my back.\"\n\nWith a little hesitation, Jared took of the rest of his clothes and placed them next to his Mistress' clothes on the bank and quickly got into the water. He approached her and accepted the cloth she held out to him. They stood looking at each other for a moment, before he understood that she was not going to move. He stepped around her and dipped the cloth into the water and began washing her back. His Mistress let out a low moan at his touch. Finally, she had him touching her!\n\n\"How are you feeling, Kishi,\" she asked after a while.\n\n\"It's getting worse, Mistress. I don't know what it is. I've been sick before and had the flu often, but this is something else. I feel a craving for something, but for the life of me, I cannot imagine what for. I've never used anything stronger than ale, I do not drink coffee and I will never touch Dust so long as I live.\"\n\n\"Indeed,\" Za'ira said and took the cloth from his hands and threw it onto the bank, next to her clothes. \"I believe I know what is happening, and I know of a cure,\" she said and eyed him over her shoulder. \"Follow me and I will give it to you.\"\n\nThe two of them walked over to the other side of the pool and Jared noticed it was becoming shallower. Slowly, Jared was graced with the view of his orc companion's amazing figure and his eyes were glued to her ass, once it emerged from the water.\n\nThen he thought he saw something swinging between her legs, but decided it had merely been a trick of the light. His Mistress walked over to a rock formation that looked almost like a throne, where the water reached up the her calves, but came well up to his own thighs.\n\n\"This will do nicely. Little One, that craving you've been feeling? It's the need for my seed,\" she said and turned around slowly, and for the first time, the Little One saw his Mistress in all her glory.\n\nHis eyes landed on her large, wonderful breasts, and he idly noted he had discovered the two piercings she had mentioned, then he looked at her abs and finally found the massive cock, nestled in a large bush of curly hair that looked well maintained. His eyes nearly bugged out. He lifted his head and stared at Za'ira, who was looking at him with clear lust and desire.\n\n\"Sorry, what?\"\n\nHis Mistress sat down onto the rock, leaned back and spread her legs slowly, allowing her flaccid member to rest on the stone. A large drop of clear liquid formed on the slit and she collected it onto a finger and held it out to her Kishi.\n\n\"My seed, Little One. Come closer,\" she commanded and the Little One felt himself unconsciously doing as he was told. \"Open your mouth and stick out your tongue.\" He did and she let the drop fall onto his tongue. He swallowed and he shivered. And allowed his eyes to fall onto her cock, which was trickling more liquid.\n\n\"This taste... This feeling...\"\n\nZa'ira smiled. This was going better than she could have hoped for. \"That's right, Little One. Your Mistress has what you need right here. An endless supply. You can have as much as you like, whenever you want. I've been giving it to you without asking for anything in return, but this time, I'm afraid you're going to have to work for your prize. Now, get on your knees.\"\n\nIf the Little One's mind hadn't been so addled with need and lust, he'd have had a few questions for his Mistress, regarding this whole scenario, but as it was, his need was too great to even think about anything other than that wholesome treat that awaited him.\n\nThe Little One slowly sank to his knees in front of his Mistress, his eyes never leaving her cock. He reached out and lifted it from the stone and he was a bit surprised at how heavy it was. He gently fondled it and eyed his Mistress when she let out a pleased moan.\n\n\"That's it, Little One, play with it, explore it. Make it hard.\"\n\nThe Little One started stroking it slowly, getting used to the feeling of the cock in his hands and soon it started leaking even more, and the musky scent almost overwhelmed him. He leaned forward and very nearly engulfed the head of her cock with his mouth, but his Mistress stopped him with a hand on his head.\n\n\"Not yet, Little One,\" she said and scooted forward a bit, allowing her balls to hang freely. \"I want you to play with it some more and pay attention to my jewels down there as well. Give them some love. After all, that's where your medicine will come from. Move them around. Kiss them and suck them.\"\n\nThe Little One eyed his Mistress' balls, which were the size of large lime fruits. He was still a tad reluctant, but his Mistress raked her fingers through his short hair a few times and massaged his scalp in a soothing fashion.\n\nShe applied the faintest pressure on the back of his head and the young man cupped her balls in his palm, to roll them around gently. He even placed a kiss on one of them and he licked them and put them in his mouth. As much as he could, anyway.\n\nA moment later, the Mistress allowed her arousal to bloom and she felt her cock slowly begin to grow, and was soon at full mast. The Little One leaned back and stared at it in awe. It was absolutely massive, long and thick. It had to be fourteen inches, at the very least and it looked like he could barely grasp it fully with his fingers. His Mistress placed a finger under his chin and brought his eyes to hers, which were half lidded with lust.\n\n\"My balls are feeling lonely, Kishi. You should go back to loving them, don't you think?\"\n\nThe Little One nodded and resumed his duties and took the hanging orbs into his palm, rolled them around, earning a low moan from his Mistress. Then he leaned in and started licking them, at which point his Mistress relaxed a little and a steady stream of juice started flowing from the slit of her cock. It ran down her succulent shaft and onto the Kishi's tongue. She felt him shudder and become much more eager in his quest to please his Mistress.\n\nThe Mistress, still playing with her submissive's hair and massaging his scalp eventually tugged lightly on his hair and pulled him up a little. \"Lick your way to my tip. Swirl your tongue around it.\"\n\nThe Little One did as she commanded and played with her tip, which had a very pleasant, velvety texture. A slight push on his head by his Mistress prompted him to open his mouth and allow her head to slide in and was rewarded with an even larger stream of juice.\n\nThe Mistress moaned appreciatively. \"Suck, sweetie. Take my cock as far into your mouth as you can, stroke it with one hand and play with my girls with the other, but don't try to take too much of me; you're not ready.\"\n\nHer submissive sucked on the tip for a little while, then lowered his head further onto her cock and started bobbing his head slowly. He allowed some of her sweet precum to escape from his sealed lips and it trickled down the massive shaft, making it very slick. Perfect for sliding his hand up and down as he kept servicing her.",
        "Mistress Za'ira was barely able to focus through the pleasure now. His mouth and hands were working in a steady rhythm, and he was slowly, but surely bringing her to completion. Her Little One was amazingly skilled, especially considering this was his first time sucking a cock. In fact, Za'ira was certain this was the Half-Elf's first sexual experience, period.\n\nOh, how incredible it was going to feel to release in his mouth again. She'd have to be careful not to feed him too much. She wanted him to be there afterwards, so that he would understand what had transpired.\n\nThen, suddenly, she felt the stirrings of the end, deep down in her balls. Her breathing became erratic and she had to fight the urge to buck her hips, and jam her cock down the Little One's throat. Instead, she guided his head up, so that just her tip remained in his mouth and blasted a massive shot of seed into his mouth, which was just about swallowed. Once that was done, she drove her cock to the back of his throat and gave him a good blast into his tummy, for good measure.\n\nWith a gargantuan force of will, Za'ira pulled her Little One of her cock and eased him down into the water, where she practically bathed him in the rest of her seed. Jared barely reacted as he sat in water, feeling extremely good as the pleasure ran through him and his need was finally satisfied.\n\nZa'ira eventually finished cumming and slumped back onto the rock, panting heavily. By the gods, this had to be the greatest, most fulfilling thing she had ever done. She eventually rose and picked up her partner and carried him deeper into the water, where she proceeded with washing him and then brought him to the rock once more and laid him down. She laid down next to him and wrapped herself around her Little One. She let her breathing soothe him into sleep.\n\nShe lay there for a long time, thinking about what she had done. She knew what he was going to ask, once he woke up. Did she have an answer for him? How would he react? It was a long time, before she managed to sleep, her mind plagued with such questions...\n\n000000\n\nJared woke up feeling very good. In fact, he felt better than he had for a very long time. He felt safe and secure, somehow. Fulfilled. The arms that were wrapped around him didn't feel terrible, either. He felt a hot breath on his head, which trailed down his neck and he became aware of something soft pressing against his back. Then he felt something else, a ways down, something he was fairly sure wasn't supposed to be there.\n\nIt was then he remembered everything that had happened the night before and his eyes widened in shock. He started to move, but Za'ira's arms wrapped around him a little tighter.\n\n\"Shhh, Sweetie, relax. It's OK. You're safe. How are you feeling?\"\n\nDespite everything, Jared did relax into her embrace once more. How was he feeling? He wasn't sure how to approach the question. On one hand, he felt he should be angry with her. Livid, even. On the other, they had engaged in intimacy the night before, even if some parts hadn't been exactly how he'd envisioned them. Part of him was glad they had, but there was still the fact that she had, essentially, drugged him and made him susceptible to her... advances. So it left him with one question, at least to begin with.\n\n\"Why?\"\n\nZa'ira released a deep sigh and relaxed her grip a little, giving him a sign he could leave her embrace if he so desired. She'd known this would be his first question, and it was no wonder, but it was the hardest one.\n\n\"I did what I did because I'm a coward, Jared. I've been falling in love with you for a while now, but it wasn't until after that fucking ghoul pulled you under, that I realized what I was feeling wasn't just lust, but something far greater. Can you tell me you didn't feel the same?\"\n\nJared couldn't, of course. He turned around in her arms and stared searchingly into her amber eyes. \"If you knew how I felt, then why didn't you just tell me?\"\n\n\"Because I was deathly afraid you'd reject me once you learned my secret, and the very idea some other woman might claim you made me ill. I just...\" Za'ira paused then, looking for the words.\n\n\"Jared, we orcs are very dominant by nature, and Futan'ari, like me even more so, and we tend to take what we want. And so I did, knowing it wasn't right and I am truly sorry that I gave into my baser instincts. If you want nothing to do with me once we reach Stormhold, I'll understand, but I just want you to know I love you, and it's the first time I've ever felt that way, for someone like you.\"\n\nJared stared into her eyes once more and he could she the myriad of emotions flash through them; earnest hope, guilt, pain, sorrow and finally resignation. He frowned as he bore witness to her show of vulnerability, knowing in his heart, she absolutely never showed that side to anyone, that she was laying herself bare to him.\n\nHow could he not adore her? He loved everything about her. Her intellect, mischievous nature, humour, strength, and her body... Her body was absolutely perfect. Even that massive, utterly addictive cock of hers. It was strong, powerful and perfect, like her. He tilted his head to the side and smiled at her.\n\n\"You're silly, you know that?\" he said as he grabbed her and kissed her hard on the lips.\n\nZa'ira backed away in shock, before she lunged in and crushed her lips to his, in an even more forceful kiss that left them both breathless. She wasn't satisfied, though and she rolled on top of him and kissed him once more. This time, Jared parted her lips with his tongue and Za'ira opened her mouth to accept it.\n\nPredictably, her tongue overpowered his instantly, and thoroughly battered it into submission. Jared shuddered and moaned as he felt a buzz coming on, not unlike how he felt after he'd had an ale or two. He dimly realized if her saliva could do that, he was bound to become utterly addicted to all of her and quickly.\n\nSomething hard poked the Little One after a while and he felt the precum flow liberally from Mistress Za'ira's cock and onto his body. He slid his hand between them, grasped her hard cock and stroked it a few times, before settling in her thick bush of pubic hair. His fingers played with it and occasionally went lower, to fondle her balls, which he noticed were shaved clean.\n\n\"You want more, Little One? I've made more. So much more. It's hot and sweet, and it's all for you.\"\n\nThey broke apart, and the Mistress leaned against back the stone, in a similar way she had the night before. She slowly spread her legs and her Little One went to work on her tasty, thick cock. He immediately got it down as far as he could and ran his tongue in circles around the spongy head when he came back up, and dipped it into the slit on occasion, to be rewarded with a moan and a mouthful of juice.\n\nThere was something happening, though, something the Little One did not remember from before. He could feel his mouth going a little numb and his tongue felt a bit thick. Then he could feel his throat start to relax as well. The Little One slowly bobbed his head up and down, taking more and more of his Mistress' cock each time, and he found his throat relaxing even further as he was rewarded with a ceaseless stream of liquid.\n\nMistress Za'ira was very impressed. Her Little One was obviously quite taken with her cock and it was clear he wanted to do as good a job as he possibly could, which involved taking her as deep as possible. He wasn't doing too badly and it was very pleasurable, but perhaps she should help him along a bit.\n\nShe ran her fingers through his hair and cradled the back of his head in her large hand. Then, after he'd bobbed on her cock a few times, she gently, but firmly pressed down on his head, forcing her cock further into the Little One's mouth, than it had ever gone before.\n\nWhen the resistance was too much, the Mistress eased her hand up a little, to allow him a breath or two, but did not give him too much time to contemplate what she was doing, and pressed him down again. A little harder this time, and she held him longer, but her cock would not go any further. The angle was quite obviously not right. She had an idea of how to fix that, but she had to ask him if he willing to proceed.\n\n\"Are you alright, Little One?\" she asked her dazed companion, who was looking at her with a silly expression. He finally caught his breath and took her cock in hand and stroked it fondly.\n\nThe Little One nodded. \"Yes, Mistress. You took me by surprise, that's all. I'd like to try again.\"\n\nMistress Za'ira smiled happily at her Little One and caressed his cheek with one hand, before she scooped up a large drop of juice with her finger and presented it to him. It was greedily sucked off her finger. She played around in his mouth for a moment, then asked him to lie on his back on the stone.\n\n\"That's it, sweetie. Now, I'm going to have to ask. Do you trust me? I'm going to attempt something that requires trust between the two people doing it.\"\n\nThe Little One answered instantly. \"Yes, I trust you, Mistress. I know you won't do anything to hurt me.\"\n\nMistress Za'ira was extremely glad to hear that. \"Alright. Now, lean your head over the edge of the stone and open your mouth. Doing this will open up your throat. I'm going to insert my cock into your mouth to try and get it all the way in. If you do well, I will reward you with something that feels absolutely amazing. Now, are you ready?\"\n\nAt her Little One's mark of approval, she took up her position in front of his face and ran her cock along his open lips a few times. She then slid it in slowly, straight to the back of his throat and met very little resistance, but the Little One instinctively tried to close his throat in fear. She held her cock there, and maintained the pressure.\n\n\"Shhhh, darling. Relax your throat. Let me in. Remember; please your Mistress and you'll be rewarded.\"\n\nShe felt her Little One relax and before he could do anything about it, she thrust her hips forward. In she went and didn't stop until her balls tapped his forehead. She moaned in triumph. She was there! And it was unbelievable. Tight, warm and wet. She slowly slid out again, but was careful of not removing her cock from his mouth.\n\n\"Match your breathing with my thrusts, my love. I'm about to start properly fucking your throat, now.\"\n\nThere was a slight twitch of his arms, but he did not resist and she felt him take a deep breath through his nose. Once she felt him stop, she slowly thrust her cock forward and in one smooth movement, went all the way again.\n\nHer thrusts were gentle and she took her time, so that her Little One could breathe, and besides, this felt amazing and she wasn't in any hurry. They needed to rest and she had decided to spend two days here. She felt her partner relax more and more and eventually, he started moaning every time she extracted her cock from his throat. The vibrations they created were simply divine. Could it be that he was one of the lucky ones? If so, this boy was simply perfect in every respect.\n\nAfter quite some time of this new, pleasurable activity, she removed her cock from his throat and mouth completely, but was quite happy to hear him whine in protest. Swift as a shadow, his hand shot out and grabbed her cock in an attempt to put it back into his mouth. His Mistress smiled at him affectionately.\n\n\"Don't worry, Little One,\" she said, her voice husky with arousal. \"Your Mistress will feed you before we're done. Now, get on your hands and knees, your ass towards me.\"\n\nHis eyes went wide at that. \"Mistress, do you mean to...\"\n\nShe let out a needful moan. \"No, not this time. Your ass isn't ready. We need to train it before I do anything like that. I am very large, even among my own kind, and I will hurt and injure you if we rush into that. Make no mistake, however, my cock will claim your ass. After all, it's mine, is it not?\"\n\n\"Yes,\" was his instant reply.\n\nShe watched as her Little One took up the position she had asked him, and she brought her cock to his hole. She was very careful, not to penetrate it, but the temptation was almost too great to resist. She grabbed her cock and pumped it a few times. Quite a lot of liquid squirted out of it and onto his crack. She spread his cheeks and used her cock to lather it around, before leaving a puddle of it on his lower back.\n\nThe Little One felt as something wet and sticky landed on the top of his asscrack and slowly ran downwards. He was wondering what it was, when he felt his Mistress spread his cheeks and something incredibly hot came into contact with his asshole, then moved around slowly. He knew it was her cock, and he also knew it was very large, but feeling it against his ass put things into a certain perspective. That thing was going inside him? Would he die if it did?\n\nHis Mistress sat down on the rock, to his right. He felt her fingers scoop up some of the juice from his back and he felt a bit weird when she began fondling his hole with her fingers. She spent some time playing with it and he felt it relax, similar to the way his mouth and throat had done earlier. Then he felt one finger rest at the opening.\n\n\"I'm going to push my finger inside, Little One, but I want to make sure you want this. Please tell me if any of this is making you uncomfortable, and we'll stop. I do not want to do anything you're not willing to do.\"\n\nInstead of replying to her verbally, her Little One gazed into her eyes and backed into her finger and wiggled his ass a bit, while giving her a look full of lust and trust. Mistress Za'ira smiled at him and he felt pressure begin to mount on his little hole, and eventually, her finger popped into him, which caused him to gasp in surprise.\n\nHe had never had anything in his hole before, and while it didn't hurt, it felt... strange. And yet, he somehow felt it was only right that he give it to her. She slowly pushed her finger further in, making certain to take her time, so that he could properly process what she was doing. Then, when her finger had gone a ways in, she brushed across something that sent a jolt through him, making him gasp and his cock squirt out some juice.\n\nThere! Mistress Za'ira smiled softly as her Little One reacted to her touching his little magic button. She had never failed to find it in any of the few males she had taken thus far in her life, but in truth, those earlier times, she had only done so in order to turn them into obedient little slaves, but not this time.\n\nNo, this time, she was desperate to make sure he enjoyed himself, and it would also help him understand, come to terms with his role in their relationship, whenever they were being intimate. There was just one more thing that needed to happen. And she was certain it would happen any moment now.\n\nHer finger kept working its magic and eventually, it was all the way inside. She slowly fucked his ass with her finger and her Little One moaned in pleasure, barely coherent by that time. Then she saw her Little One put all his weight onto his left hand, so that he could lift his right, and grasp his cock with it. That was it. The moment she had been waiting for.\n\n\"No, Kishi,\" she whispered to him and nudged him a little, so that he had to use both hands to maintain his balance. \"There will be no more touching your cock for release,\" she continued and started to relentlessly rub that sweet spot.\n\n\"From now on, you will only reach completion through your asshole. Or, if you're lucky, as I suspect you are, you will be one of those few who can reach their release with a cock in their throat.\"\n\nMistress Za'ira was merciless in her efforts and her Little One could barely comprehend what she was saying, but somehow, it reached his mind, and he accepted it as law. He was hers, and she knew what was best for him.\n\n\"I know you feel good now, my love, but just imagine how good this will feel when it's my big, throbbing cock that's doing this,\" his Mistress whispered hoarsely and swept her finger across his button particularly hard.\n\nThat, coupled with the hazy image of her cock in his ass, sent her Little One over the edge. Mistress Za'ira felt as his ass clenched her finger hard, as he crested and shot his watery load onto the rock in a few, small bursts.\n\nHer Little One crumbled to the stone and lay there limply for a few breaths, but was barely given a moment to collect himself, before she had her cock at his lips. On reflex, he opened his mouth and began sucking on her meat, which was rock hard and leaking heavily.\n\nShe was so completely aroused, it would take mere moments for her to finish, and she had promised to feed him before they were done. She was a futa of her word, after all. And just then, she exploded into his mouth with a grunt and sent a pair of massive gushes of her seed into his mouth, which her Little One did his best to swallow.\n\nMindful of not feeding him too much of her seed, due to her wanting him to remember all of what had transpired, she pulled out and once again, bathed him in the rest of it. Eventually, the stream stopped and she collapsed onto the stone next to her lover with a contented sigh.\n\nOh, this had been utterly glorious, the best she'd ever had, by far. The Little One seemed to have her reaching new heights every time they were intimate. She turned her head toward her Kishi who was staring at the ceiling, with a silly grin on his face.\n\n\"Something funny, Jared?\" Za'ira asked and reached over to scoop up some of her seed and fed it to him with her finger.\n\n\"No, not really, Za'ira. I'm just happy, you know. To be here with you, like this. Who knows how long it will be until we can do something like this again. I mean, there is still a ways to go before we reach Stormhold.\"\n\n\"Hmmm, that's true. And I think we should keep this a secret, at least for the first while. You are a foreign diplomat, after all, and this is not really proper.\"\n\nJared snorted. \"I don't care about what's proper. I'm not ashamed of any of this.\" His face became a mask of concern. \"Are you?\"\n\nZa'ira stumbled into the water and pulled her lover with her, and started to clean him up. \"No, of course not,\" she said and kissed him on the top of his head. \"I just think we should wait to reveal our intimacy until after the treaty has been signed and sealed with the blood of both you and my sister. We do not want anyone to think there was something going on in the background which influenced your decisions.\"\n\nJared nodded along with her. It was solid reasoning, but then again, Za'ira wasn't stupid. \"You're right. Shall we to bed, then?\"\n\n000000\n\nIt was early in the morning when those unlikely lovers stood at the mouth of the cave, ready to set out on the the last leg of the journey. With a belly full of Za'ira's warm cream, Jared should be fine for at least a day, and the two jars of cream for his meals should see him out for the rest of the journey.\n\nTwo days later, they emerged from the Warm Lands, and the trip had been uneventful. There had been quite a bit of Drake activity, but they had managed to avoid a confrontation, mostly due to Za'ira's knowledge of the place.\n\nIt was around sundown when they arrived at Amber Rock, and Jared learned the reason for the name. The town was built on a rise, in front of a large, scythe like rock formation. The sun was hanging low on the horizon, and bathed the rock in a deep amber light, and it was cast back upon the town, in a splendid show.\n\n\"I've always liked Amber Rock, Jared,\" Za'ira said with a smile. \"It's a laid back place, and good for relaxing. The hot springs are spectacular.\"\n\nJared found that a bit hard to believe, this close to the Warm Lands. \"The Drakes don't cause them problems?\"\n\nZa'ira pursed her lips as they marched toward the town. \"Not too often, but when they do, it's always a hassle. It's worth it in the eyes of those who live here, though. The earth beneath Amber Rock, the actual rock, that is, is extremely rich in precious metals.\"",
        "\"So, I'd be right in assuming they are staunch supporters of the trade agreement, then?\"\n\n\"Yes, they've been pushing for it, for a long time now,\" the Futa replied and glanced down at her companion. \"I'd like to head to the Mayor's office first, to see if there's any news. I've been gone a long time and Ar'thas has always been one to have an ear to the ground.\"\n\n\"You want me to go with you, or should I go find us rooms?\"\n\nZa'ira shot her lover an incredulous look. \"There's not a chance I'll be letting you out of my sight. Besides, Ar'thas and I have been dear friends for many years, so I'm fairly certain she'll put us up in her home.\"\n\nA sudden thought entered Jared's mind. \"Is she a...\"\n\n\"A Fut'anari? Yes, she is,\" Za'ira confirmed. \"You will find that, in the Hinterlands, most towns of any real import will have a Futa ruler, Jared. We are stronger, faster and smarter, the pinnacle of orc evolution. It stands to reason we would lead, no?\"\n\n\"That's true, I suppose.\"\n\nThey walked the rest of the way in silence, with Jared turning his head this way and that, taking in the look of the town. It wasn't a large place, and the houses were low, made of stone. The masonry was excellent, and Jared could tell the orcs were very good craftsmen.\n\nEventually, they found themselves standing at the doors to the Mayor's manor, the two guards glaring at them suspiciously, especially Jared. Za'ira raised an eyebrow, and stared at them, until they opened the doors for them.\n\nOnce they were inside, and the doors closed again, Za'ira huffed in annoyance. \"Newbies. Always the same.\"\n\n\"Ain't that the truth!\" someone said in an amused voice at the end of the hall.\n\n\"Ar'thas!\" Za'ira, exclaimed, and the pair of them hugged each other affectionately. \"It's been far too long.\"\n\nThe mayor smiled, and released her friend with a laugh. She turned a critical look onto Jared, who blushed, and felt as if she was staring into his soul. He quickly allowed himself to take in her appearance.\n\nShe wasn't quite as muscular as Za'ira, nor as well endowed, but she was still amazingly beautiful. Her black hair was shaved on the sides, and part of her forehead was covered with her bangs, while the rest of her mop fell down the back of her neck. She also wore a pair of earrings, that were made from some kind of feathers. She wore a tight leather jerkin, and the same fur lined hide skirt as Za'ira did.\n\n\"So this is the Prince? He sure likes to stare, doesn't he?\" the mayor said suddenly.\n\n\"Oh, yes. That he does,\" Za'ira replied with a small laugh.\n\nJared was roused from his observations, and he blushed a deep red. \"I beg your pardon, Madame Mayor.\"\n\nAr'thas grinned at him, showing her pearly whites. \"Oh, don't be silly! Who wouldn't want to be admired by someone so fine as yourself. Makes a woman itchy in all the right places!\"\n\nNot knowing what to say, Jared looked at Za'ira, who was shaking with mirth. \"He's just so precious, and shy!\"\n\nThe pair of them broke out in bellows of laughter, and Za'ira put a hand on Jared's shoulder and followed her friend, as she motioned for them to come to her study. The room was very simple. One window, one desk with three chairs, and one bookshelf. Seemed the Mayor wasn't keen on gaudy things. They sat down, and began talking.\n\n\"So, what can you tell me, Art?\" Za'ira asked. \"I've been gone for far too long, and there were tensions when I left.\"\n\nAr'thas shook her head and an ugly frown found its way to her brow. \"War's brewing, Z. Kul'dak of Cold Rocks is putting together an army, and has brought into the fold, several of the smaller, more isolated clans.\"\n\n\"He's marching on Stormhold, then?\"\n\nArt nodded. \"He's about ready to head out, according to E'gwin. She's been monitoring the situation for me, and I've sent missives to your sister. Stormhold is quite ready.\"\n\n\"Why not move on them, since you know they're coming?\" Jared asked.\n\n\"T'alis wants them all where she can crush them under her heel. She's going to exterminate all the traitors at once, and feed them to the beasts of the Crystal Sea,\" Ar'thas said with a shudder, and a lazy smile.\n\nIt was shared with her by Za'ira. \"All the sisters are coming, then?\"\n\n\"Yes,\" Ar'thas confirmed. \"They have all pledged their loyalty to the Queen, and most will have arrived at Stormhold, by now.\"\n\n\"Ku'ldak, you idiot,\" Za'ira muttered. \"Did you not know this was bound to happen?\"\n\n\"Well, orc males aren't exactly known for their brains, Z. Now, how about you, boy? If it comes down to it, will you fight for T'alis?\"\n\nJared gave her a resolute nod. \"Yes, of course. If we are to have any hope of successful negotiations, Queen T'alis must sit the throne. I'll do my part.\"\n\nAr'thas gave him an appraising look, before she went on. \"You sure you can? Fighting orcs isn't the same as fighting puny elves, or stupid humans. Or stumpy dwarves.\"\n\n\"Well, I guess we'll have to see, won't we,\" Jared replied with a firm gaze.\n\nZa'ira couldn't stop herself, and put a hand on Jared's shoulder, and smiled at him, her eyes filled with affection. \"He'll be fine, Art. He took down a Drake on the way here.\"\n\nNoting the interplay Art's eyebrows rose a fraction, but she didn't comment on it at that moment. She'd have to have a moment with her friend, Z. \"Did he now? Impressive.\"\n\nShe rose from her chair. \"My servants have prepared a bath for you two in your rooms. Clean yourselves, and join me for dinner.\"\n\n000000\n\nThe travelling pair cleaned themselves thoroughly, and joined the mayor of Amber Rock for a great meal, where they told their host some of what had happened on their journey, and why they came this way, instead of the normal route.\n\nJared found Ar'thas to be very good company. She was articulate, and funny, and he had to admit he rather enjoyed when she flirted with him, but felt a little guilty when he noted the slight frown of his lover.\n\n\"Why don't you retire for the evening, Jared?\" Ar'thas proposed once the meal was over. \"Knowing my friend, Za'ira, she's going to want an early start in the morning.\"\n\nJared gave his companion a look, and she nodded at him in dismissal. Another instance Ar'thas noted with some unease, though she hid it well. Jared then excused himself, and retired to his room. The two orcs then made their way to Art's office, where the mayor closed the door, and locked it. Once that was done, she rounded on her friend.\n\n\"What the hell are you playing at, Z? Making him your slut... He's King Marcin's son, for fuck's sake! Do you honestly think this won't have any repercussions?\n\n\"Ar'thas-\" Za'ira began, but her friend was on a roll, pacing in front of the cold hearth.\n\n\"I just don't get it. You were never one to be controlled by your cock. Why now? You shouldn't have any problems finding willing cocksleeves, Z. Gods know there's more than enough of those sluts around.\"\n\n\"He's not my slut, Art,\" Za'ira said firmly.\n\n\"Oh? Then why does he defer to you so much, if he's not beholden to you?\"\n\nZa'ira took a deep breath, and released it slowly. \"We're in love, Art.\"\n\nThat admission stopped her friend in her tracks. \"What?\"\n\n\"I love him, Art. More than anything, or anyone, except perhaps my sister, and he loves me.\"\n\nAr'thas sank into her chair, staring at her friend. \"You're serious?\"\n\n\"Very.\"\n\n\"So, how did this happen?\"\n\n\"I'm not sure, Art,\" Za'ira began. \"All I know is that he saved my life, and that was it. I knew.\"\n\nAr'thas gave her friend a look. \"You didn't tell me that earlier.\"\n\nZa'ira shrugged. \"Yes, well. I got careless, and almost gutted by a damn ghoul. Jared saw it, and tackled it into the swamp, and somehow managed to kill it beneath the water. He almost died,\" she said in muted anguish. Still, the image of Jared plunging into the depths, haunted her.\n\nZa'ira's face became a mask of longing. \"He's just so strong, you know? Surely, you understand what his life's been like, Art. Being a Half-Breed. Even so, he's such a caring and honourable person. We seem to have just clicked together, somehow.\"\n\nAr'thas was silent for a good long while, before she let out a bark of laughter. \"Za'ira. The most fearsome fighter among the orcs, undone by a little slip of a Prince. Who would have thunk it!\"\n\nShe leaned forward, her expression sly and lewd. \"So, how far have you two gone, eh? I want details!\"\n\nZa'ira relaxed, and leaned back in her chair. \"I've taken his mouth and throat, and he's become completely addicted to me. It's really rather strange.\"\n\n\"Addicted?\" Art asked, puzzled. \"How so?\"\n\n\"Well, my bodily fluids seem to give him a sort of high, Art. My saliva gives him a kind of buzz, as if he's had an ale, or three, and he's taken a liking to licking my body. And my cum. My cum gives him a greater high than Dust. It's amazing, and I'm pretty sure he'll cum one of these days, just by swallowing my cum. I have to be careful, though. Whenever I feed him, I can't give him too much, or he won't remember any of it, and neither of us wants that.\"\n\n\"So you haven't taken his ass, then?\"\n\nZa'ira let out a moan of pure lust. \"No, not yet. I'll just hurt him, if I move to quick, and I can't do that, Art.\"\n\n\"You never cared about that in the past, Z,\" Art pointed out. \"Well, I suppose he's different, since he's burrowed himself into your heart.\"\n\nA devilish grin spread out on her face then. \"Perhaps I can help you a little,\" she said, and reached into a drawer in her desk, and extracted a wooden box. She placed it onto the desk, and opened it. Inside were few cylindrical and conical items, of varying length and width.\n\nButt plugs, used for the training of a slut. All of them had a gem fixed onto the end of them, and rune was etched into it. An oblong stone, carved with a series of runes, caught Za'ira's eye. She grabbed it, and touched one of the runes, and one of the plugs began vibrating.\n\n\"A gift from dear E'gwin. Her current slut is a mage, and rather inventive, I must say. Now, I've already trained my own sluts to the point where I can fuck them whenever I want, with minimal pain. Why don't you take this, and speed things along a bit?\"\n\n\"I've never seen plugs like that,\" Za'ira commented, and picked one of them up, to examine it closer.\n\n\"Nice, aren't they?\" Art said with a grin, before she became more serious. \"Now, one brilliant feature, and one I think will be very important when you reach Stormhold, since it'll be full of sexually frustrated sisters, is that you can tie the plug to your blood, and that of your partner.\"\n\n\"So, it can only be removed by me, or Jared himself?\"\n\nArt nodded. \"Yes, exactly. If you want to give him such liberties, that is. Now, why don't you go and put one in his ass right now?\"\n\nAr'thas noted the reluctance on her friend's face. \"My sluts won't tell anyone about your relationship. They know it'll cost them their tongue.\"\n\n000000\n\nJared woke with a start, when someone put a hand on his forehead, and gently ran their fingers through his hair. He almost panicked, but recognised Za'ira's voice.\n\n\"Shhh, Little One. It's alright. It's just your Mistress.\"\n\n\"Mistress, what's going on?\" The Little One asked groggily. \"I thought we weren't going to do anything, until after.\"\n\nThe Mistress smiled at her Little One, and leaned in for a kiss, which was readily reciprocated. They fell back onto the bedding, and let their hands explore each other as they kissed with deepening passion.\n\nAfter a while, and the Little One was suitably buzzed, the Mistress broke from him, and allowed him a moment to bask in the sensations. She then reached for the box, put it onto the bed, and opened it.\n\n\"What are these, Mistress?\" the Little One slurred, and managed to sit up.\n\n\"They'll help us make you ready for my cock, Little One.\"\n\nThe Little One immediately became more interested, and his own cock became even harder. \"And I suppose they go into my ass, Mistress?\"\n\n\"Yes. They'll stretch you, until you'll be able to reasonably accommodate my girth. The length of my cock will not be a problem, so long as we're careful. Now, lie on your stomach, Little One. I'm going to prepare you for the smallest one.\"\n\nThe Little One did as he was told, and almost instantly felt his Mistress start playing with his tight little ring. He felt as his Mistress applied some of her juices, and soon, his ass began relaxing, and he was enjoying himself immensely, and his pleasure became even greater when the Mistress finally pushed her finger inside.\n\n\"You like that, Little One?\"\n\n\"Yes, Mistress,\" he replied breathlessly.\n\n\"Good. Now, I'm going to insert the plug. Just breathe, Little One, and relax.\"\n\nMistress Za'ira coated the smallest plug liberally with her juices, and began pressing it into his hole causing her lover to whimper in need. She smiled, and applied more pressure, and eventually, it popped into his body. His tight ring clamped around the stem of the plug, leaving only the flat gem outside.\n\n\"Good boy!\" Za'ira gushed, feeling proud of her Little One. \"So determined to help his Mistress reach her goal.\"\n\nThe Little One took a few deep breaths, and focused on getting used to the plug in his ass.\n\n\"Get out of bed, and walk around, Little One. You must be able to move around with that thing up there. It'll help us even more.\"\n\nThe Little One did as he was told, as always. He began slowly pacing the room, while his Mistress reclined in the bedding, lazily stroking her massive cock, as she watched him. He kept stealing glances at her, and noticed her cock was leaking more and more juices. He almost felt like crying, when he saw how much of his favourite drink was being wasted, as it dripped onto the covers.\n\nThen, after an eternity. \"Come here, Little One. Love your Mistress,\" came the husky call.\n\nThe Little One practically leapt at her, and rubbed his face lovingly along her cock and purred in absolute contentment, as he began loving on her. If only he could spend an eternity worshipping this cock, and the Mistress, of course. His beautiful, strong and perfect Mistress.\n\nThe Mistress smiled in satisfaction. Such devotion! Such loyalty! And need! Her Little One was looking her in the eyes, the gratitude, love and desire evident. By the goddess, she loved him looking at her like that! A sudden thought entered her mind then.\n\n\"Little One, from now on, whenever you're on you knees in front of me, serving my cock, I want your eyes on mine. Whatever happens, whatever I do, you will maintain eye contact with your Mistress. Do you understand? No, do not remove my cock from your mouth. Blink twice, if you understand.\"\n\nThe Little One blinked twice, as she knew he would. But how tough was he? Perhaps this might be a good time to find out. She reached for the oblong rune stone, and pressed the correct rune. Her Little One let out a surprised moan, as the plug began vibrating. Despite the shock, however, and much to his Mistress' delight, the Little One's gaze never wavered.\n\nThe Mistress then gave herself to her pleasures, and it was utterly glorious. She felt her Little One moan more and more, as the vibrations of the plug brought him ever closer to his crescendo. The Mistress was writhing uncontrollably now, and her Little One had to use every ounce of discipline to maintain eye contact, despite the fact that the Mistress was no longer looking at him. She had thrown her head back, and was bucking her hips furiously.\n\nAnd then, the pair of them crested together. The Little One spurted his trickle onto the bedding, while the Mistress began shooting her torrents of cream into his mouth. He gleefully swallowed as much as he could, until the Mistress realized what he was doing. With some difficulty, she removed herself from his mouth, and shot the rest into the chamberpot.\n\nThe Mistress pulled her Little One to her, and wrapped herself around him protectively, while he soared through his high, her slowly softening cock nestled in his asscrack. \"Thank you, Little One. That was incredible,\" she whispered in his ear, even though she knew he wouldn't hear her, and that his memory of this would be hazy, at best. She pressed the rune on the stone, and the vibrations stopped, and once that was done, she pulled the covers over them, and promptly fell asleep.\n\n000000\n\nJared and Za'ira had woken early in the morning, and were ready to set out very soon afterwards. They bid Ar'thas good bye, and their host could not help herself and cupped Jared's ass firmly, and slapped it lightly as he turned away. The two Futas laughed merrily at him. Oh, he truly was precious.\n\nAfter they had travelled for a time, Za'ira gave Jared a side-along glance, and found her companion deep in thought. She couldn't be sure, but she had a feeling she knew what was bothering her friend and lover. And if she was right, then perhaps she might suggest he get to know her better.\n\n\"So, Ar'thas took quite a liking to you, Jared,\" she commented, as they rounded a bend in the road, and found themselves back in the wild.\n\nJared blushed slightly. \"She's an... interesting character, Za'ira.\"\n\n\"Her character's the only thing you're interested in, Jared?\" Za'ira asked slyly.\n\n\"Well-\" Jared began, but his companion pressed on.\n\n\"You know she has a cock. Not quite as large as mine, but it's hot, hard, and her balls are ever bursting with that delightful cream, you're so fond of, Little One. Perhaps we could invite her to our bedding, once I've taken you fully?\"\n\n\"I...\"\n\n\"You'd like that, wouldn't you, Little One? Two massive cocks to play with? To suck and stroke? To worship? I'm sure E'gwin would join us as well, should I broach the subject. Three cocks! How wonderful that must sound, my Sweet. Wonderful, wonderful cocks...\"\n\nThe Little One was a bit ashamed of himself, but he had to admit, that the thought had indeed crossed his mind, and he did want it. He imagined himself on the floor, kneeling in front of Mistress Za'ira, and Ar'thas, and this mystery woman -- Egwin, lavishing their cocks with his attention.\n\n\"Yes, Mistress, I would like that, if it pleases you.\"\n\nThe Mistress smiled gently at her Little One. \"Never be afraid to tell me your desires, Little One, and I, in turn, will tell you mine. I would much rather we discuss what we want, than say nothing and be miserable.\"\n\nZa'ira was silent for a while. Perhaps it was time to properly define their relationship, so as to prevent any misunderstandings. Once they reached the capital, it would not do for Jared to behave as he had, back at Amber Rock. No one could know, until after the treaty was signed and sealed.\n\n\"Jared, I think we need to talk about how we're going to proceed with our relationship.\"\n\nSlightly alarmed, Jared turned an eye onto his companion. \"How so?\"\n\n\"I immensely enjoy how readily you slip into your submissive mind scape, but you are starting to act like a mindless fuckslut, at inappropriate times. Now, I'm going to be hones with you, and tell you I have had such sluts in the past, but that will not be you. I forbid it. I will exert my dominance in the bedroom and in all things sexual, once the treaty has been signed, but aside from that, we will be equals in all things, my love.\"\n\nJared kept his eyes on the path as he pondered what she was saying, and he realized she was right. He had been deferring to Za'ira too much, asking her to make decisions he was perfectly capable of making himself. He had to be able to discern between their sexual relationship, and everyday lives.\n\n\"Yes, you're right, Za'ira,\" he said. \"I will try to keep those parts of our lives separate. I wouldn't want to endanger anything.\"\n\nZa'ira smiled at her lover, and placed a hand on his shoulder, and squeezed affectionately. \"We'll be fine, Jared. Once we reach the capital, a week from now, I suspect my sister will want to finish the treaty as soon as possible, and it shouldn't take long.\""
    ],
    "authorname": "Westfjordian",
    "tags": [
        "cumflation",
        "domination",
        "excessive cum",
        "fantasy",
        "fivesome",
        "futa",
        "futa on male",
        "incest",
        "massive cocks",
        "romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-journey-34"
}