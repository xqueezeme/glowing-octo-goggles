{
    "title": "Are We Who We Think We Are? Pt. 01",
    "pages": [
        "Huge thank you to AlanHomerJ for proof reading and editing. It got me over the line.\n\nThis is my first ever story, erotic or otherwise and so I would welcome any constructive criticism. Bear with the start, it's slow but it warms up. I was trying to set the stage and give the characters some depth but feel it might be a little windy.\n\nAnyway, I hope you enjoy...\n\nAre we who we think we are?\n\nIt had been a long day. In fact, recently most days were long days and probably would continue to be long days for a while. Add to this the grind and slog of commuting in and out of London 4 days a week, fighting through thousands of people none of whom want you or anyone else in their personal space, but again you don't want them in yours. I stood crowded into a tube carriage with one arm pinned by my side holding my rucksack and the other stuck above my head braced against the ceiling, a pose every commuter knew.\n\nI was looking forward to getting home, having a shower and then going out for a few drinks with my house mates and our small group of friends which happily also included Sarah, my girlfriend. As we stopped mid tunnel yet again, I closed my eyes let my imagination out to play a little. I thought about Sarah and where I'd like to take her and the things we could do. . .\n\nOkay, full disclosure here, I was not thinking a single fucking romantic thought at this point. My mind was firmly lodged in the gutter, and I liked it there, it was my home. My imagination was brim full of filth and kink. Deep down I believed that if you were doing something sexual that wouldn't make a whore blush then you probably weren't trying and certainly not having as much fun as you could be. This was all very much at odds with my people facing persona. I would never suggest I was prim and proper, definitely one of the boys but also very respectable and the kind of \"nice guy\" you can take home to meet the parents. I did fairly well as far as girlfriends went and at just over six feet tall (183cm) and around 14 stones (200 lbs) which was mainly fairly fit muscle from running and playing rugby and various other sports I wasn't too hard on the eye. I was fairly shy though and to this point I definitely hadn't managed to live out anything close to the fantasies that my imagination teased me with on a daily (sometimes hourly) basis.\n\nDespite knowing that I wanted fire and adventure in a girlfriend I always seemed to go for and attract \"good girls\". It was infuriating and Sarah was a prime example. She was from good stock, daddy ran his own very successful law firm, mummy stayed home to manage the house (yes, they even used to refer to each other with this names), good girls school, great degree, sporty and pretty. She was also almost as tall as me, slim with legs that made me look like a frigging dwarf from the waist down and long, thick dark brown hair that fell to the middle of her back and pert C-cups that almost needed a bra to hold them down rather than up. Sarah was very much a \"good girl\".\n\nWe first met when I moved in with my house mates Andy and Dom. She was the recent ex of one of them but still part of a close group of 5 or 6 friends that hung out often and helped us move into our place. For the first few months we didn't really have much to do with each other and then she needed somewhere to stay for a couple of weeks before she and another friend of ours moved into a new flat together. Sarah stayed over at ours in the spare room and over the course of those two weeks we slowly drifted further into each other's orbit. The combination of a \"good girl\" and a shy bloke isn't exactly conducive to a fast and furious relationship though so nothing much really happened for another few months despite seeing her with the group 3 or 4 times a week. It took a new year's celebration, a lot of fizz all around and a new year's kiss that got mugged by a pair of tongues.\n\nAs is proper for a good girl we dated for a while before actually doing the deed. It was, nice. I mean don't get me wrong the sex was good, as far as very vanilla sex goes but it was early days and I figured that things would loosen up a bit and I was more than willing to go along because I liked Sarah. I liked her a lot and so there were some things that I was willing, if not happy to overlook. For instance, good girls don't shave or wax even when they are hairy like bear's backside. Good girls also certainly do not talk dirty, go commando, sunbathe topless or any of that kind of carry on. Good girls would under no circumstances let you go south of Vagina Island to the puckered reef for even the briefest exploratory expedition and doing it doggy was just rude.\n\nNevertheless, the sex and fun that was available was very available and done with gusto. Also, thankfully, one thing that good girls were apparently very proud of was giving head and boy could Sarah ever give head. I am pleased to say that while not a porn star I am comfortably above average in length sporting just over eight inches (and I was later to discover eight and a half inches with a cock ring) but I am, apparently very big around with a large circumcised knob on the end that flares somewhat. This is a double-edged sword -- the good edge I am sure you can imagine; the bad edge is trying to pull it back into a zipper can frequently be quite painful if you get the \"barbs\" caught and squealing like a little girl having a tantrum is NOT COOL in a pub toilet for instance. I digress, so I was incredibly pleased when Sarah made it her mission to try and cram as much of my meat into her mouth as she could. Sadly, again this could only be done in certain positions (and never \"kneeling\" in front of me because that wouldn't be proper) and so she never managed to get more than a little of the head much further than the back of her mouth despite my helpful suggestions of better positions offering a more accessible approach.\n\nI loved going down on Sarah despite the unruly thatch she kept. She tasted amazing and boy did she get soaking wet when I had a couple of fingers inside her pussy and my lips wrapped round her clit. She even squirted a little on several occasions but blushed bright red and shut down completely if I ever commented on this. Fingers and tongue had to stay firmly above the equator though. I did, once, manage to sneak down there and slip just the end of my finger in just as she was about to cum and fuck me did she ever cum. As soon as I made contact it was like an electric shock went through her arse and out of her clit. She arched her back rigid and made a kind of strangled yelp then collapsed onto the bed her stomach muscle rippling out of control and she came and came and came. My face was a mess. It did however signal the end of the festivities that night and for several afterwards as she was too \"mortified\" by what I'd done to even see me.\n\nAnd those boobs. Man, they were just perfect. Probably too big on most girls for my liking but on her frame they were perfect. Big puffy nipples tipped the ends and point up about 45 degrees and they were sensitive, oh yes, they were soooo sensitive. However good girls don't have their \"breasts\" mauled like common tarts, and Sarah was a good girl who also had some serious hang ups about their size and way her nipples looked. For god sake the girl has nipples like Patsy Kensit but as far as I was concerned, I could look (sometimes) but not really touch. When I did manage to cop a feel though it was like turning on a tap between her legs.\n\nThings were going well for a while. We had sex. I met her friends. We had sex. I met her parents and family. We had sex. We went on holiday. We had sex. We went out with friends. We had sex. The problem though was the sex was all very samey and after several months predictable and, it kills me to say it, dull. Sarah was a good girl and I was too fucking shy and too stupid to say anything or push the boundaries.\n\nSo, there I was crammed into the tube carriage quietly fantasising about all the things I'd like to do to Sarah but would never get the chance to because she was a good girl and it slowly started to dawn on me most all of my relationships had been variations on this theme to greater or lesser extents. I was something of a blow to me when I realised that in fact, I was the common factor in all of these dull, vanilla relationships. At 26 years old, I realised that it was me that was keeping my love life (okay sex life) in neutral either by getting involved with girls that were only interested in vanilla or not having the bollocks to make my desires known and putting it out there.\n\nBy the time I got off the tube I'd realised that I needed to start fresh, new outlook, new resolve. Say what I meant and get what I wanted. I was all ready to get home and write my manifesto.\n\nI did in fact get home and write somethings down, not really a manifesto but more a wish list of kinks I wanted to explore and basic traits I wanted in a girlfriend. I did then try matching those traits against Sarah and it didn't look promising... so like a good boy I put a pin in it and thought about things a little more.\n\nOne week went by.........\n\nThen two weeks went by........\n\nBefore I even realised, it was a month.\n\nI was still seeing Sarah. We were still having vanilla sex. I hadn't even managed to push things to vanilla made with real vanilla pods, you know, the kinds with the little black seeds in. I'd initially tried in a somewhat pathetic semi non-verbal way to exert my will but predictably got shut down and so reverted to type.\n\n\"You're pathetic Jake\", Sam laughed as she almost doubled over in her seat. \"You are decent looking, fit, great job that earns you way more than anyone else our age that I know anyway and I know you are packing some heat down there as well,\" she gave me a knowing look, \"What the fuck is your problem. \"\n\nSam, one of my oldest school friends and a girl a crushed on for a while until we went out together for a while and then decided that actually we made far better drinking buddies than we did a couple. We were sat in a pub back in my hometown. I was visiting the folks for a long weekend while Sarah was off on a work trip in Singapore. Sam (Samaaaaarrrrntha) is possibly the only person I know that I can just unload on and not be judged and who will, after laughing in my face for a while, always offer sound advice. She is also a real looker and on a purely physical basis I would love to revisit past filth with her. However, we were very much \"friend zoned\" with all our history and that was fine with me.\n\n\"I dunno,\" I said, \"you're right, I am pathetic. The inside of my mind could make a porn star want to join a convent, but all my fucking mouth manages is 'Yes dear, that would be just lovely.'\" I took a long drink of my beer and looked at her. \"What do I do about Sarah?\"\n\n\"My advice has a price,\" Sam grinned, \"one that I will collect one day, or maybe never but remember that if I come and collect you will fucking owe me. Now listen up stud muffin.\"\n\nShe put down her glass and leaned back and looked at me then she leaned forward over the small table until she was right in my face and with a few words changed my life, \"you tell her that you are a dirty, kinky bastard and then let her go,\" she said smiling sweetly, paused, then added \"you fucking pussy.\"\n\nI obviously looked somewhat nonplussed as I just sat there gawping at her. \"Look,\" she said, \"once you have unloaded your dirty little boy thoughts on her and then dumped her she will either never speak to you again or she will.\"\n\n\"Well, gee, that's really fucking insightful,\" I snarked, \"She'll either speak to me or not.\"\n\n\"No, you fuckwit. Either it absolutely won't be anything she can ever be near and so frankly you are well rid because you would just make each other miserable in time or she might decide to give it a try, in which case you can enjoy and say, 'thank you Samantha, you are truly amazing.'\"\n\nShe sat back in her chair again and gave me a long hard look. \"From everything you have said and from what I have seen, Sarah has a couple of issues at the core of things.\" Sam paused to take a drink and then lifted her index finger, \"First of all she wants, or thinks she wants control all of the time and anything that distracts from that is bad. I am surprised she even gives in to an orgasm.\" Raising a second finger she continued, \"The other issue is she has been brought up as mummy and daddy's little girl, taught to please them and keep them happy. In order for you to get what you want you need to break through both those issues and, if you ask me, which you are doing, the surest way to do that is to tell her what you want and then walk away. Set her free and see if she comes back or however that stupid saying goes.\"\n\nI was at a loss for words. It was so obvious, how had I not seen it before! The thatch, the nipples, the restrictions on what was and was not allowed between the sheets the ritual cleaning and washing up, the... everything, the always visiting her parents when they called, the dressing appropriately when she was with them. It was all an almost total fucking reversion to childhood.\n\nI had a lot to think through and plans to make.\n\nBreaking up is hard to do\n\nI arrived back home a man with a mission. I was going to confront Sarah the next day (before I lost my nerve) and tell her about the things I wanted out of sex and a relationship. I went and made my \"manifesto\" and read through the things I had written down and decided what I was going to say.\n\n<ul type=\"disc\">\n\n<li>\n\nI wasn't satisfied with a vanilla sex life\n\n</li>\n\n<li>\n\nBeing restricted in what we did, touched, said was just not working for me anymore\n\n</li>\n\n<li>\n\nI wanted a relationship where I took a sexually dominant role\n\n</li>\n\n<li>\n\nI wanted a girlfriend that could accept this and was willing or better still eager to take a submissive position.\n\n</li>\n\n<li>\n\nI wanted \"dirty\" sex with toys and bondage and maybe some risk\n\n</li>\n\n<li>\n\nI wanted dirty sex talk, sexting and filthy letters\n\n</li>\n\n<li>\n\nI wanted to spend hours playing with my girlfriend's body, teasing it and denying it over and over again\n\n</li>\n\n<li>\n\nI wanted to make my girlfriend orgasm wherever and whenever I chose to do so, or deny that orgasm if I wished\n\n</li>\n\n<li>\n\nI loved anal sex and had given it up for too long\n\n</li>\n\n<li>\n\nI wanted a girlfriend that went out of her way to do things to please me rather than her parents (at least sometimes)\n\n</li>\n\n<li>\n\nI wanted a properly groomed pussy\n\n</li>\n\n</ul>\n\nI would then tell Sarah that I wished she could be this person with me, but I was concerned that I didn't think it was her. However much I liked or loved her, I thought that, if she couldn't be at least most or some of this then we were just going to ultimately fail, and better it is now rather than later.\n\nI met her in London at lunchtime the following day, sitting in the park I laid it all out for her. It did not go well, there were tears. Actually, lots and lots of tears. There was disbelief and suspicion, was I seeing someone else? There were more tears and then there was anger.\n\nI felt I was starting to get out of my depth and not knowing what else to do I just tried to finish the conversation by saying, \"look, I have spent a lot of time thinking about what it is I really want. What we have going just isn't even close. I want to be happy and fulfilled, I deserve to be and so do you.\"\n\nI paused for a breath, but restarted before she could interrupt, \"Neither of us are going to get that together like this. Do you really, deep down, want to be like this for the rest of your life? Do you want to stay \"safe\" and \"do the proper thing\" according to the book of mummy and daddy. Take some time and really think about.\"\n\nSarah glared at me like she'd never met me before but I pressed on, \"I really do honestly care about you and I think that you want to be more, to give more, the chance to live but you hold yourself back. I won't tell you it's not me it's you because it isn't. At least it isn't just me or just you.\"\n\nI confess that by this point I kind of felt I was on a role and basically did a mic drop and walked off back to work leaving Sarah sat on a park bench alone, processing and hopefully thinking about what might be, that was probably not my finest hour.\n\nBy the time I got back to the office I felt like utter shit. What had I done?\n\nI sat back at my desk, staring at my screen, staring at my phone wondering what the fuck I had just done. What had I done? Had I really just sat down a perfectly beautiful girl in a beautiful park on a lovely sunny afternoon and told her that I was basically breaking up with her because she what I wanted in bed? In my mind this is more or less what it amounted to.\n\nI picked up my phone to call her and changed my mind and opened an IM screen and then just sat looking at that. What could I possibly say? \"Sorry,\" I could start with that. I switched back to phone and started to find Sarah's contact but when I did, I just couldn't press the button my hand was shaking.\n\nThen, like a recovering alcoholic having a crisis, I called Sam, fled my desk and spilled my guts. She was silent throughout the whole delivery. Not a word or squeak out of her. When I was finished the silence continued for a few moments until I heard her laugh and say, \"You fucking legend. I never thought for a second you would do it. DO NOT call or message her, at least not yet.\"\n\n\"Well when?\" I asked, \"I can't handle this, I am an utter cunt.\"\n\n\"Well, yes. But no. Maybe you are, but at least you were, for once in your life, true to yourself. Be patient and give her time. Getting dumped by a lame pussy like you is going to be hard on any girl and it'll take a bit of getting over. Don't call! If you do, I'll tell the world what you did at your Uni graduation,\" and with that Sam put the phone down.\n\nShit!\n\nI got almost nothing done for the rest of the afternoon so I gave up early and left, planning to head out for a run to try and clear my head. I fought my way onto the tube again and found a comfortable spot with my face in someone's armpit and closed my eyes.\n\nI was single again. Maybe it would be okay. Sarah would be fine, I'd be fine. We were young and healthy and fairly successful. She would meet someone soon enough and I would too. On that note I opened my eyes and scanned the carriage, well what small portion of it I could see. Okay, so I wouldn't be hooking up in here, hah!\n\nWhen I got home I changed into my running togs and headed out and towards the river and the canals. It was a beautiful late May evening, not too warm with only a little breeze and I planned to put in a good few miles. A few miles in and as is always the case, my head started to clear, I relaxed letting my body work itself while my mind started to find some clarity and move beyond the pain of the day.\n\nI had done it. I had made a stand today. Not with Sarah but against myself. I had stood up for what I wanted to have from my love life. For the first time I could remember I hadn't just accepted and gone along and I was free. I was single. I could go find what I wanted now, or I could wait and see what Sarah did, or I could do both. The world was full of options and possibilities, some of those possibilities running along the path around me, all tight bodied in snug lycra.\n\nAnother mile and I had resolved to head home, the world might be full of possibility but that didn't mean I was anymore capable of talking to any of it. One victory was not a whole war. I needed some time alone I thought, decide how to take the next step.\n\nOne thing I had definitely found clarity on though was that I wouldn't get into another relationship unless it was mutually on the terms I wanted.",
        "I arrived home about twenty minutes later invigorated in body and mind and as I closed the door to my room and pulled my top off I grabbed my phone to check for messages. I had five, all from Sarah:\n\n18:01 Sarah: Hi, can we please talk?\n\n18:06 Sarah: Hey, please can we talk? Please answer me.\n\n18:16 Sarah: Why won't you answer me. I really need to speak to you. I don't think you are being fair to me.\n\n18:20 Sarah: Oy!\n\n18:22 Sarah: Call me, please.\n\nI flopped onto my bed and stared at my phone. I don't honestly know why I didn't anticipate this. Of course, she was going to try and resolve things and make it right, like a good girl should. I needed to be strong and fair. I couldn't call her, there is no way I was ready to revisit this verbally.\n\n19:12 Me: Hi, sorry. I was out running.\n\n19:12 Me: I am not sure we have anything more to discuss. I do care for you S. but I have realised what it is I want and unless you think that you can be that person I don't think it is fair on either of us to keep going.\n\n19:13 Me: Tell me I'm wrong!\n\n19:15 Sarah: \ud83d\ude41\n\n19:15 Sarah: Where has all of this come from? I think we are good together and you always seem to enjoy it when we, you know....\n\nI read that last message, the very fact that she couldn't even bring herself to write, \"have sex,\" said it all.\n\n19:16 Me: You can't even say it can you? HAVE SEX! If you can't even get past that then we really aren't going to find a way through. \n\n19:16 Sarah: What do you want Jake? I just don't get it, I don't get you!!!!\n\n19:18 Me: I want life and love and sex to be no holds barred. I don't want to be the safe, nice boy you can take home to mummy and daddy. \n\n19:18 Sarah: What does that mean?\n\n19:20 Me: Well for a start I want sex to be wild and dirty. I want you bent over a table while I fuck you from behind and pull your hair and spank your arse. I want you on your knees in front of me while I hold your head and fuck your mouth. I want you tied spread eagle on my bed while I tease and torment your body and mind, not letting you cum until you beg me using all the words you can't let yourself say to plead for an orgasm.\n\n19:21 Me: I want take you to a restaurant and make you take off your knickers while we sit at the table and pass them to me. I want you to shave your pussy, your cunt because I tell you it's what I want.\n\n19:22 Me: I want you to let me take you on a journey with me to explore these things. I am pretty sure you are a submissive S. and I know I am dominant deep down and I know I want to find it and bring it to the surface. If you aren't up for that journey, then we really aren't going anywhere.\n\n19:34 Sarah: I don't know what to say. Why would you say these things?\n\n19:36 Me: Because it is what I want and believe. Don't say anything, go think about it and be honest with yourself. Bye S. x x\n\nSarah sent me a few more messages, but I didn't reply. I went for a shower and resolved to move on. I was pretty sure that she wouldn't get it. I wasn't sure what this was going to do to our group dynamic though as she was a part of our close circle. It was likely I was going to have to broaden my horizons and find a new group. I'd cross that bridge another day. I had something of a reprieve coming in a few days as I was travelling to the US and South America for work trip that would last 3 weeks.\n\nThe next few days I just operated on autopilot. Andy and Dom had both been brought up to speed by Sarah about the breakup but apparently not the details. I fielded the questions about why and was I seeing someone else? I gave vague excuses and reasons. Sunday, and my flight out to Chicago couldn't come fast enough. At home I more or less exiled myself to my room rather than try and navigate being sociable and risking more questions.\n\nI used my self-imposed exile to do some research about submissive and dominant relationships. I'd long ago discovered BDSM porn and literature. I thought about it now and although very tempted every day to load up a movie and get down to some serious self-abuse I'd decided to keep it in my trousers for a while, an exercise in control. If I couldn't control myself what hope did I have for being able to exert control on someone else?\n\nMy trip to the Americas went well and put some welcome distance between my \"life\" and the real me. Sarah had gone radio silent, Andy and Dom stopped asking about it and things seemed to be settling down in my head. I spent a little time during my last week away planning social activity for my first week or so home.\n\nI didn't want to go back and start hiding out in my room again. On the plus side the day after I was due home I would be seeing my sister, Hannah for our monthly catch up. It was always a good evening and wouldn't pose any issue with the breakup, Han couldn't give a flying fuck about my dating life.\n\nSo I strolled into the pub in central London where Han and I met on the 2<sup>nd</sup> Thursday of every month, ordered a couple of drinks and waited for her to show up. Sure enough, 15 minutes late, as is usual, Han arrives in a flurry of black coat and scarves and we settle in for an evening of talking crap and drinking.\n\nIt was pushing towards 10:30 when I would have to leave to get my train home when I felt a tap on my shoulder. \"Hi,\" said Sarah quietly. \"Can I sit down with you guys?\" she asked.\n\nSlightly tipsy and caught completely off-guard I pulled out a seat and offered it to Sarah. Han looked at me and raised an eyebrow in my direction. I shrugged as I turned to Sarah, \"How have you been? Umm, who are you hear with?\" I asked.\n\nSarah looked a bit sheepish and replied \"Good. Good thanks. I was with some work friends just down the road but thought I might find you in here tonight so I thought I would pop in and say hello. How was the trip?\"\n\n\"Yeah good, fine,\" I said. \"You guys are a little far afield tonight. You don't usually venture outside of the west end. Anything special happening,\" I asked.\n\n\"No. Well. Yes I guess,\" she fumbled for words.\n\n\"Okay, well I need to go to the ladies,\" Han declared as she stood up and swished off towards the back of the pub.\n\nAs soon as the door to the toilets closed Sarah leaned, reached for my hand and pleaded, \"Jake, please can we go back together. It isn't right how things ended and I want us to have another chance.\"\n\nI had been expecting this as soon as she said she was here with friends. There was no way her crowd would be seen dead in the city on a Thursday night. \"I'm sorry Sarah,\" I said, \"Everything I said before is still true. Let's just enjoy the last of the evening.\" I looked meaningfully at the big clock above the bar, \"I need to go soon anyway to get the last train.\"\n\nHan arrived back at the table then, sat down and started chatting aimlessly with Sarah about nothing much, while I watched the clock waiting to get away. Then, in a brief lapse in conversation Sarah leaned over and said quietly \"I.....I want to try. You know. That stuff you said. I want to give it a go. Will, umm, do you still?\"\n\nI just laughed, I had not expected that at all. I didn't know what to say right there, right then. So to give myself some breathing space I said \"Crap, we'll miss the train if we don't get a move on. Do you want to share a cab to the station, Sarah?\"\n\nIn something of a frantic bustle we said our goodbye's to Han and headed out into the street and into a cab. As we sat there silently side by side I addressed the elephant in the cab, \"Are you serious, Sarah?\"\n\n\"Umm. Y-yes I think so,\" she replied quietly.\n\n\"You do understand what it means, what I want from you, for us?\" I asked, sure that she was going to cave and clam up again. \"If you are then I want you to tell me what it is that you think I want?\"\n\nSarah went bright red and looked down, fidgeting with her hands for a while before looking out of the cab window away from me. I sighed and shook my head, my chest filling with disappointment. Sarah took her phone out and started tapping away then so I looked out of my window and waited to get to the station.\n\nBZZZT!\n\nMy phone vibrated with a message. I figured it would be Han asking what the fuck was going on so I opened it up.\n\n10:39 Sarah: You want to bend me over the table and fuck me from behind while you pull my hair and spank me. You want me to kneel while you fuck my face and I think you probably would like to bugger me as well. You want to tell me what to do and for me to do it even if I find it embarrassing. You want me to be your sub. I want to try and I will get braver and better so I don't have to type like this. At least I'll try.\n\nI stared at my phone for several minutes in silence reading and re-reading that single text. Before I could reply or even thought to look at Sarah we pulled into the station and I had to focus on paying and getting out and so on.\n\nThat done, we walked silently through Waterloo station side by side and stopped under the big clock. \"Come on,\" I said, \"let's go get the 10:50.\" I grabbed her hand and we ran to the platform, heading towards the very front where it would be quieter.\n\nWe got on board and sat at the very end of the carriage. There were maybe 10 other people in the carriage with us but no one else in our little pod as the doors closed and the train pulled out. I got up and swapped seats so I was sat facing Sarah with my back to the wall looking down the carriage.\n\n\"Are you sure you want to do this?\" I whispered to her. \"I totally understand if you don't really and the last thing I want is for you to do this and go down this path just in an attempt to not break up.\"\n\nSarah looked at me and then down at the floor between her feet and mumbled \"I am sure. I want you to be my teacher, please.\"\n\nI reached over and took her hands, pulling her slightly forward in her seat so our heads were closer together. \"We will learn together sweetheart,\" I whispered into her ear, \"but if we are going to do this, we are going to start right now. Do you understand?\"\n\nSarah nodded her head but didn't look up. \"Sarah,\" I said, \"look at my eyes please.\"\n\nShe looked up and almost like it was the hardest thing she'd ever done looked me in the eyes, her cheeks fighting to decide if they wanted to be sheet white or rose red. I looked back at her, \"Tell me what underwear you have on please, without breaking eye contact,\" I asked quietly\n\nShe was silent for a few moments and then she half whispered half croaked, \"Umm, my err, my black lacey knickers and bra and hold ups.\" The rose won out and her face flamed crimson.\n\n\"Really!\" I laughed, \"you came tooled up for action then?\" This underwear was her I want to get laid go to set. If it was possible Sarah managed to go a shade or two redder.\n\nI slipped the smile off my face and as seriously as I could manage said quietly but clearly, \"Sarah, please pass me your knickers.\"\n\nShe squeaked. Sarah actually squeaked and frantically looked around. \"Now!\" I said more firmly, \"Show me you are serious about this and please pass me your knickers.\"\n\nSarah didn't move, just looked at me, all deer in the headlights. Honestly, I felt kind of like that myself at this point. We were both in uncharted territory but I knew I was doing the right thing, for me at least. Using my cock as a barometer the swelling was definitely telling me that I liked this. I waited looking at her.\n\nSlowly at first and then faster, moving with nervous energy Sarah fidgeted and slid her just above the knee length skirt up her legs a little. Leaning back in my seat I could just make out her toned creamy thighs above the top of her black hold ups. Quickly looking around she leaned forward a little and reached under her skirt with both hands and pulled then sat down again. I could see the black lace of her knickers pulled tight part way down her thighs.\n\nMoving quickly once more she shuffled them down to her knees, then onto the floor bending to scoop them up in a flash and balling them up in her hands before looking around again to see if anyone was watching this wanton act of sluttery.\n\nI put my hand out to her and she leaned over and dropped them into my hand. Still looking right at her I brought them up to my face and inhaled deeply, holding the crumpled up little ball of lace against my nose. Then I slipped them into my jacket pocket and leaned forwards again, taking Sarah's hands in mine and pulling her forward so we were both on the edge of our seats, facing each other, knees almost touching. I moved my feet inside of hers and pushed outwards gentle parting her knees and thighs a little. Placing her hands on my knees a leaned in a little more and slowly slid my hands up her silk clad legs under the hem of her skirt until I found her soft warm thighs. There I stopped my upwards journey and slowly, lightly stroked the insides of her legs as I started whispering in her ear.\n\n\"You are going to go home tonight, alone. I'm not going to come with you this time. I want you to think about all of this and what I am about to tell you. About what I am going to do to you. I'm going to have you stand while I take your clothes off and touch your body however I like. I'm going to pull your tits, not breast, tits out of the top of your bra then I'm going to stand behind you and reach around and play with them.\"\n\nI paused for breath, excited that I was finally saying this, \"I'm going to stroke them and squeeze them. I'm going to run my fingertips around and around the edge of your nipples and torment them, until you beg me to touch them. Then I'm going to squeeze both of those gorgeous, full, puffy little nubs until you squeal.\" Sarah actually moaned at that and I felt her head move very slightly against mine.\n\nI went on, \"Once I have your nipples nice and hard and sensitive, I'll pull down your skirt. I'll have you take your knickers off though. I want to stand behind you as you pull them down your straight legs until they're round your ankles and you are bent over double. I'll make you stay like that while I stroke your arse and slide a finger between your legs. Do you think you'll be wet for me, Sarah?\" I ask.\n\n\"Yes,\" she croaked.\n\n\"Are you wet for me now Sarah?\" I asked her quietly, \"is your bad girl little pussy all wet for me?\"\n\nShe nodded into my shoulder.\n\n\"Show me,\" I told her, \"use your fingers and show me how wet you are.\"\n\nSarah's head shook, no but her hands were moving almost of their own accord as one held her skirt out of the way and the other slid up her thighs and into darkness. I few moments later the hand emerged, and she looked at me unsure what to do next.\n\n\"Show me,\" I said, \"hold your fingers in front of me so I can see, so I can smell and so I can taste just what a dirty little girl you really are, Sarah.\"\n\nWith a genuine whimper she lifted a shaking hand to hold in about six inches from my face. I looked at it and I confess I was somewhat shocked, but certainly no more shocked I think than Sarah was. Her first two fingers were coated in her sticky drool, webbing slightly between them. I took hold of her hand and with the other lifted her chin so she was looking right at me as I pulled it closer inhaled deeply and then sucked those fingers into my mouth.\n\nI don't think I had ever been more turned on in my life than I was right then. I was so fucking hard, I could have cut glass with my cock. Stealing myself I finished the job at hand and leaned in again to whisper to her some more.\n\n\"By Monday the following will be true. You will have been tied up and you will have begged me to do all kinds of things to you. I will have fucked you hard, doggy style. I will have fucked you bent over a table. I will have fucked you with your legs bend back over your head.\" I took a moment to steal myself for the next part, \"By Monday you will never be able to truthfully claim that you've never had anal sex because I am going to have tied you bent face down over the edge of a table, knees tied to the table legs and I am going to tease your cunt until you beg me and then I am going to bugger you. I am going to fuck your arse and cum deep inside you.\"\n\nSarah was breathing heavily and at that last she let out a groan. I sat back and said \"I think you need another moisture check Sarah. This time though I think you should have a taste yourself. Make the most of it though because it will be the last time you are allowed to touch yourself sexually until I say otherwise.\"\n\nHands shaking a little, Sarah repeated her earlier collection process hesitantly lifting her fingers up to her lips then obviously deciding to get it over with slipped them straight into her mouth and sucked them clean quickly before sitting back on the seat and putting her hands in her lap, like a good girl would sit.\n\nI moved back next to her and slipped my arm around her feeling such overwhelming affection for her that I was rendered speechless for a while. What must it have taken, have cost her to do this tonight? To not just step but jump with both feet so far outside what I know her comfort zone to be.\n\nFor me!\n\n\"Good Girl,\" I whispered in her ear as I moved to gently, lovingly kiss her cheek, \"this is your stop coming up. Message me when you get home, and remember, no touching.\"\n\nAs she stepped out onto the platform I gave her a small wave through the window and sat back. I was only one short stop further on but Sarah would be home before I got off the train most likely. Almost before the train was moving though my phone lit up with an incoming message.\n\n23:18 Sarah: Umm, forgot to mention that I am heading up to mum and dad's tomorrow lunchtime. I have a long weekend so I had planned to be up there. They are expecting me. I am so sorry.\n\n23:19 Sarah: I so want to try and do this though.\n\n23:19 Sarah: The breeze is making my dirty wet pussy all cold \ud83d\ude41\n\n23:21 Me: I am really pleased you want to try this. But I meant everything I said and either I will do all of those things with you before Monday or this is over before it has begun.\n\n23:22 Me: I guess I'll pack a weekend bag and book Monday off work. It's been a while since I played golf with your dad. \ud83d\ude0a\n\n23:23 Sarah: Oh God! Okay.\n\n23:24 Sarah: Thank you for giving me another chance...\n\n23:24 Sarah: Sir (?)\n\nLogistics the next day didn't favour me and I found myself pulled into a number of late meetings which meant that traveling with Sarah to her parents wasn't going to happen which was a shame as I'd planned some fun for the trip. So now, I was going to travel up by train and catch up with her later that evening.\n\nDespite being pulled into unwanted meetings I had spent another somewhat unproductive day in the office mulling over the night before and constantly fighting down a recurrent hard on. I would normally cum at least three times a day either from sex or self-abuse and since I had been holding back I was starting to get a bit antsy.\n\n14:50 Me: Hey S. My train is due to get at 19:28. I'll see you at the station. J. x",
        "15:00 Sarah: \ud83d\ude0a Can't wait.\n\n15:01 Me: When you pick me up I will expect you to be there in a summer dress, no knickers and a bald pussy. Okay.\n\n15:15 Sarah: Hahaha. Christ! Mum nearly read that when it came through.\n\n15:17 Me: Nice. That would make an interesting first conversation. Catch you later, meetings now.\n\nThe next two and a half hours lasted for days. I'm not sure if I managed to say anything sensible as my attention was almost entirely dedicated to thinking about Sarah and the weekend. All sex aside it would be a great time anyway, her mum and dad are great and I was booked to play a round of gold with Martin (her dad) at 7am the next day. I would be using his cast-off set of clubs. It was my standing joke with him that he managed to provide worse clubs every time I visited and I still gave him a run for his money. One time I arrived to play and my bag had a putter, a wedge and a 4 wood in it, bastard.\n\nFriday night tube ride to the station was hideous as ever and the train pulled out of Euston crammed tight like we were a refugee freight leaving a warzone. Actually, not a bad description of escaping London on a Friday evening. After a few stops though the crowd thinned out and I found a seat for the almost hour long journey.\n\n18:50 Me: I should be more or less right on time. Hope you have remembered your instructions.\n\n18:52 Sarah: Sure thing. See you there.\n\nWe pulled into the station right on time, which in and of itself is something of a small miracle. Sarah was there waiting on the platform, gorgeous in a billowy cream summer dress looking every inch the well healed good girl. She ran to me and threw her arms round my neck in a big hug like we hadn't seen each other in months and soundly kissed me.\n\nAs we settled into her car I instructed, \"Show me your handiwork please, Sarah.\" She stopped dead and flushed, looking awkward.\n\n\"I couldn't do it. Mum was with me the whole time and I felt weird about walking round there with no underwear on\". Sarah looked like she might cry. I wasn't going to make this easy though. I'd been clear and she had done nothing to proactively let me know there was a problem.\n\n\"So what you are telling me is that you failed to do two of the three simple things I asked of you?\"\n\n\"Sorry....... Sir?\" she whispered, \"I really am.\"\n\n\"Give me your knickers now and pull your dress skirts up round your hips for the drive back. Since you still have that forest down there we might as well let it get some sun,\" I used a stern voice, that conveyed my displeasure.\n\nSarah looked mortified but nevertheless she scooched in her seat and pulled down her plain white cotton pants and struggled out of them. She passed them over to me, pulled on her seatbelt and just before pulling away from the station pulled her dress up round her hips. Her legs were naturally slightly parted by her driving position and the thick unruly bush was in full view.\n\nAs we drove along in comfortable silence for a few minutes I put my hand gently on her bare knee and slowly stroked my way up her leg. As I neared her thighs I spoke, breaking the silence, \"You realise of course that I am going to have to punish you for failing to follow instructions. I'll decide what it will be later. Come to my room at midnight.\"\n\nYes, you heard that right. At her parents place we were very much in our own rooms with half a house between us. I had already decided that I was going to make this part of my game plan for the weekend though and was looking forward to it no end. We'd never, ever had sex in Sarah's childhood room. We wouldn't be able to say that for much longer.\n\n\"I'm sorry,\" she said again, \"I'll do better!\"\n\nI stroked further up her leg reaching the forest and slipped my fingers into its dense foliage. I was a little surprised at how wet she was but not one to look a gift horse in the mouth and slid my finger through the middle of it and dug down looking for the source of the moisture and slipping inside.\n\nSarah gasped, her knuckles turning white on the steering wheel as I slowly finger fucked her. I didn't do it for too long or too hard, after all I had no desire to die in a car crash now! When I pulled my finger out of her I lifted it to her face and carefully wiped it clean along her top lip then slipped it into her mouth which I was delighted to find opened without prompting.\n\nAs the last of the evening sun poured in through the window I could see my good girl was bright red from the top of her forehead right the way down to the top of her chest. I think you could have cooked eggs in the heat coming from her.\n\n\"You're wet,\" I stated simply, \"tell me what you are thinking about.\"\n\n\"No, I can't,\" she whimpered quietly, \"it's too embarrassing and it is hard enough dealing with the thoughts I've been having the last weeks.\"\n\n\"Sarah,\" I said sternly, \"I wasn't asking. It was an order. If you can't learn to talk about this then we are going to struggle. Now, tell me.\"\n\n\"Umm, well. Mmmm..... When you made me take off my knickers it made me think about the stuff you said you were going to do to me this weekend and it's all so dirty and, well I don't know.\" She glanced at me clearly flustered and struggling to find words to articulate her thoughts and feelings.\n\n\"It's scary. I never really thought about stuff like this before. I mean, I have seen it in some porn on the internet and stuff before but never thought about it in relation to me. Well.... and now you are going to do these things to me and it's scary because when I think about it happening to me, think about you touching me and..... and well using me like that..... I get really .... horny. I mean, oh God! I get change my knickers horny.\"\n\nI could see her breathing getting faster, her knuckles still bone white despite me keeping my hands very much to myself. I was so hard right now I was almost in two minds as to whether I should have us pull over and make her blow me but this breakthrough was just too good, so I decided to push it.\n\n\"Wow, well good girl, Sarah. You see you can say it if you try. Now, I want you to tell me specifically what you were thinking about this evening that made you so wet.\"\n\nSarah looked at me with pleading eyes then back at the road, \"I was thinking about when you said you would tie me up over a table and bugger me.\" She said it is quickly, obviously to get it over with. I didn't care, these were all victories. All great steps forward.\n\nFurther torment would have to wait as we arrived at her parent's long drive, Sarah turned the car onto the gravel path and we parked up.\n\nThe evening was like all the others I remembered there. G&amp;T's, lovely food, nice wine and wonderful company. If they could just not refer to each other as mummy and daddy..... I took every opportunity to keep Sarah on edge and wound up, either with a look, a quiet whispered suggestion of things to come or when I could manage it, a hand sliding up her leg to cup her arse under the dress and slide my fingers into her wet cleft.\n\nMartin and Anthea headed off to bed about 10pm while we cleaned up the sitting room and kitchen. Sarah was clearly expecting something to happen and looked shocked and more than a little put out when I announced I was going to head off to bed.\n\nBefore we parted ways at the top of the stairs, I gathered Sarah into a hug and a long, lingering, suggestive kiss full of filth and promise.\n\n\"Midnight,\" I reminded her as I turned to go to my room. I was at one end of the hallway and Sarah's room was down at the other with her parent's room part way down closer to mine than Sarah's.\n\nI washed and cleaned my teeth before pulling on some cotton sleep shorts and settled down to do a little research. Tomorrow we needed to go shopping for what appeared to be a number of kink essentials and I needed to find a shop. It took a little while, but it looked like there was just what we needed about 20 miles away. Next, I looked up a selection of other establishments that Sarah would be needing.\n\n23:45 Me: Be here in 15 mins. Only wear your silk robe. NOTHING else.\n\n23:45 Sarah: Yes Sir.\n\nAt literally 12am on the dot my door quietly opened and Sarah stepped in freshly scrubbed and in her robe, hair tied back in a ponytail as she always does for bed.\n\n\"Hi,\" she said simply and came over to sit, legs curled under her on the end of my single bed.\n\nI smiled and reached out to pull her in for a kiss. \"Hey you,\" I breathed in her ear. We enjoyed the closeness for a few moments then I straightened up and got down to business, speaking in low tones so as not to disturb her parents.\n\n\"We have a few things to discuss,\" I started, \"first of all, you need a safe word. Do you know what that is?\"\n\n\"Yes,\" she replied, \"I found it when I was looking up about all this stuff. I think I would like it to be 'Pineapples.'\" She was grinning as she said this. it was our little in joke, The rough end of a pineapple, our standard response to anybody that overheard was, 'Don't ask.'\n\n\"Okay,\" I laughed, \"good. Do you understand what it means and when to use it?\" Sarah nodded affirmative.\n\n\"No, you need to tell me in words, I have to be sure you understand,\" I pressed.\n\n\"It is for if I really want to stop whatever it is we are doing because you might thing that me pleading or saying no is not really what I want or mean. When I say it you will stop everything and if I am tied up or something you will free me and we will find a space to talk,\" this ran from her mouth like she had learned it for a test.\n\n\"Okaaay. And you are positive you really understand the implications of that?\" I am not sure why I was pressing her on this because honestly I think I had as little idea as she did.\n\n\"Yes, Sir. I have read all about it.\"\n\n\"Good, so the next thing is tomorrow we need to go out and do some stuff. While I am playing golf with your dad you have a task. I want you to find a salon with availability and get a full Brazilian wax. I don't want to see a single hair on you below the waist. Do you understand?\"\n\nSarah's mouth hung open, \"Noooo, I can't do that,\" she gasped.\n\n\"You can and you will. You have already shown me that you have this in you. That you have it in you to enjoy this. You will go out tomorrow and you will get every single hair below your waist removed. When you are there, in the salon you will follow their instructions exactly. Do you understand?\"\n\n\"Yes, sir.\"\n\n\"Good. After I have finished the game with your dad, we need to go for a drive to do some specialist shopping. We need toys. Okay?\"\n\n\"Yes, sir.\"\n\n\"Now, we need to talk about your punishment for failing to follow directions today. I was going to spank you.\" Sarah blushed bright red. I don't think she has ever been spanked in her life. In fact, I don't think she ever did anything wrong as a child to warrant a punishment. Good girl, remember.\n\nI continued, \"but your mum and dad's room is a little close so we'll have to be more creative. So, please stand in front of me and take off your robe. Then I want you to take the cord from it, pass it to me and turn around facing the wall with your hands behind your back.\"\n\nI could see the battle of conflicting emotions all over her face. She was a good girl, but she already knew that she must be a bad girl because I would bet my last penny that this last demand just made her pussy flood. Slowly and with awkward movements Sarah stood up and turned to face me, reaching in front of her to untie the bow holding her robe closed. It dropped open as she pulled the cord all the way out with one hand as the garment slipped off her shoulders onto the floor. Bunching the cord up she held it out to me, unable or unwilling to look me in the eyes.\n\nI looked over her body. God she was something. Standing there in the dim lamp light looking half like she wanted to run and half like she wanted to hump. Her boobs stood proud on her chest the full C-cups almost defying gravity with their beautiful pink puffs of delight on the end pointing up to the corner of the ceiling. As my eyes roamed down over her tight, flat stomach that still seemed to convey curves that only a woman can ever have, and past her little innie belly button I reached her forest. Man that had to go. It was so thick that despite having spent a considerable time with my face pressed into it I had very little idea as to the topology of that area. I was very excited to see it tomorrow, after.\n\nI took the cord and Sarah quickly turned around to face the wall by the door and put her hands behind her as instructed. She was probably relieved that from this position she didn't have to worry about looking at me, which would change.\n\nI leaned forward and took her wrists in my hands and passed the cord round them, looping it and threading it through to tie her hands securely behind her back. I stood close behind her and leaned in to gently kiss her neck from her shoulder towards her ear, lightly biting the lobe before moving round to the other side and repeating the journey. As I was doing this, I slid my hands around her sides and onto her tight flat stomach stroking slowly up and down getting closer with each pass to both her pussy and her tits.\n\nAs I bit her on the nape of her neck I brought my hands to her breasts and lightly ran my fingers along her under-boob, up the sides and circled her wonderful nipples. As a stray finger grazed across one of those perfectly puffy circles of sensation her hips jerked forward and she groaned.\n\n\"Tell me,\" I whispered, \"tell me what you are feeling and tell me what you want.\"\n\n\"Needy,\" she gasped, \"I feel so damn needy. I am so wet right now. I want you. I want you to make lo... to fuck me,\" she quickly corrected.\n\nI rewarded her by taking both nipples between my thumbs and forefingers and squeezing. Sarah gasped and whimpered as her hips lost all control and started jerking. I squeezed harder and pulled outwards a little, Sarah moved her feet farther apart her hips grinding at the air looking for some friction.\n\n\"Beg me to finger your sloppy wet dirty girl pussy,\" I whispered into her ear as I bit down again on her lobe.\n\nSarah grunted, bucking her hips but said nothing. I pinched harder, pulling a little more and twisted slightly, this elicited a quiet moan.\n\n\"Do it,\" I pressed.\n\n\"Please,\" she groaned, \"please will you finger my wet, sloppy dirty girl pussy? Please sir.\"\n\nI released her nipples and she sagged against me her breathing speeding up as my hands slid south. I stepped to the side of her and moved one had to her back, mirroring the movement of the one on her belly, slowly tracing down. As my right hand found the top of her bush my left trailed into her arse crack both moving slowly towards Sarah's core, she was shaking now. I think a strong breeze on her clit at this stage would have sent her over the edge.\n\nI would have to go carefully.\n\nI moved my left hand further down along her arse scooping down underneath that hard, tight bubble to tickle the soaking wet mess that was her pussy. As those fingers found her opening my right-hand fingers split either side of clit and pressed in on her mons forcing the little nub to pop out but offering it no friction.\n\nStanding to her side I started to slowly frig her wet hole with two fingers, pushing in just an inch or so, twisting and pulling out again.\n\n\"Stand still and don't make a sound,\" I hissed in her ear, \"if you bend your knees, even a little bit, I'll make an unholy racket in here and then kick you naked out of this room for your parents to find.\"\n\nSarah was a mess.\n\nTrying to stand stiff legged, hips shaking while I toyed with her pussy and denied her clit. It was getting to the point where she was going to come anyway so taking advantage of my soaking fingers, I slid them backwards slightly to graze over her tight virgin arsehole. I pressed slightly and rubbed tight fast circles and Sarah let out a despairing, \"OH! Oh God!\" as I let go completely and stepped back leaving her hips jerking and knees shaking in the middle of the room right on the edge of probably the biggest, wettest orgasm of her life but denied at the last breath.\n\n\"No, please. Please sir. Please finish me off,\" she begged, her voice begged, she could have said any words she wanted. Her voice conveyed those last four words.\n\n\"Sorry gorgeous,\" I chuckled, \"this is your punishment. Maybe after you have sucked the cum out of my balls I'll let you have some relief.\" I paused for effect, then concluded, \"We'll see\".\n\n\"Pleeeeaaase, please don't leave me like this. It's not fair. Please!\" she was almost in tears.\n\nI stepped in front of her, maybe a foot away and dropped my shorts to the floor and kicked them to one side. My raging hard on straining forward, long thick and angry looking with its flared mushroom head and veins.\n\n\"Kneel down Sarah and ask me for permission to suck my cock. If you do a good enough job I might, maybe, possibly, let you cum.\"\n\nLike her legs had been chopped out from under her Sarah dropped to her knees, the words pouring from her mouth before her knees had settled on this thick pile carpet, \"please sir. May I suck your big, beautiful cock?\"\n\nI moved forward a half step and brushed my cock against her lips as Sarah opened her mouth trying to suck it in. I teased her with it for a moment longer, unfortunately I was just too horny to wait, to tease her more, and I pushed my hips forward, popping the head into her warm, wet mouth.\n\nSarah has always been a very accomplished cock sucker but doing it with her hands tied and kneeling in front of someone was a new experience for her. It honestly didn't matter though, I was too far gone to care about great technique. The very fact that my good girl was kneeling in front of me, tied up and sucking my cock was almost enough on its own to have be blow a load, in fact it was a challenge not to.\n\nAs Sarah bobbed her head, working my cock into her mouth, swirling her tongue around the head and slowly taking a little more each time.\n\nI just wasn't going to last.\n\nLooking down I could see her hips still thrusting, looking for relief. That was going to be a real shame for her. I couldn't just see her need now, I could smell it filling the room around us.\n\nIt was no good, the time I'd spent denying myself coupled with the shear eroticism of this scene was too much for me and I grabbed the back of Sarah's head by the pony tail and pushed my cock into her mouth until I felt it hit the back of her throat then pulled back and started fucking her mouth.\n\nShe was whimpering around my cock as I fucked her mouth, drool running out around me and with a knee shaking groan I started cumming hard. I had to use Sarah's head to hold myself up and my hips jerked spastically into her face as I unloaded pulse after pulse of cum.\n\nIn all my life I had never felt anything like this.\n\nIt didn't seem like I could stop cumming, I've had smaller pisses, I think. The stress and tension as my body shook even started to make my back hurt. I had just the presence of mind to pull out and spray the last 3 or four squirts in her face and down her chest before collapsing backwards into a dressing chair.\n\nSarah was a picture of erotic perfection kneeling there naked, drool-soaked chin, teary eyed and covered in cum.\n\n\"Please,\" she begged looking at me with pleading wet eyes, \"please finish me off.\" You could feel the plead hanging in the air, it was almost a taste.\n\nI sat for a few more moments just looking at her before getting slowly to my feet. I stepped behind her and using one foot between her shoulders I pushed her forward until her chest and face were on the floor, her ass high in the air.",
        "I knelt down behind her and took in the soaking wet, wide open mess in front of me. Using two fingers I pushed them straight into her wet hole, hooked them slightly and started to frig her off hard and fast, but only for a few seconds before I stopped, rubbed her arsehole for a few moments and then repeated the process. It was driving Sarah out of her mind, pushing her almost over the edge then stopping and then back up again.\n\nShe was constantly grunting now and her arse was pushing back trying to find what it needed. I gave her one last hard and fast finger blast before ripping my fingers out, leaning forward and swiping my tongue from the middle of her pussy right up and over her arsehole, pressing teasingly as it passed.\n\nThen I stood and pulled Sarah to her feet and untied her hands.\n\n\"Bed time, babygirl,\" I said as if everything that had just happened, had not happened at all.\n\n\"What? Nooo! Finish me off, please,\" she was looking at me aghast, almost in tears now.\n\n\"No, this is your punishment. Under no circumstances are you to touch you tits or your pussy without my permission and you are not to EVER cum with my permission either. Right now you most definitely DO NOT have permission.\"\n\nI passed her the robe from the floor and with a peck on her cheek pushed her to the door and out of my room. \"You DO NOT have permission to clean any cum off of you tonight. See you at six for breakfast gorgeous,\" I closed the door quietly behind her.\n\nI needed to sleep. I would be playing golf in a few hours and knowing Martin I would be playing with half a broken driver and an umbrella. On top of that, I was definitely going to need energy for what I planned for tomorrow night.\n\nI was woken the next morning at 6am to the smell of tea and warm, delicate fingers running through my hair. \"Morning beautiful,\" I mumbled, still mostly asleep.\n\n\"Hey handsome, you need to get up. If you are quick enough you might manage to pack your clubs into the car yourself,\" I pushed myself into a sitting position and pulled Sarah in for a hug, then pulled back a little to eye her face and chest.\n\n\"Show me that you did as you were told,\" I said, looking her in the eyes.\n\nSarah turned her face to the side slightly and I could just make out the flaky tried remains of last night excitement. Then she pulled open her robe and pulled down the top of her silk slip to show the same on the top of her chest.\n\n\"Good, dirty girl,\" I told her leaning back in for a lingering kiss.\n\n\"You are a mean prick, by the way,\" Sarah said, \"I was a flipping mess last night. It took me ages to calm down and get to sleep and I woke up this morning and everything was soaked again. When are you going to get me off you teasing arse.\"\n\nI laughed. \"Today sweetheart. I promise you that today you will have an orgasm like no other. For now though show me how wet you are.\"\n\nShe turned to check the door was closed then knelt either side of my hips and opened her robe fully, lifting the hem of her slip so I could see her bush. I could clearly make out the wet folds of her labia even through the thick hair.\n\nI reached down with one hand and carefully hooked two fingers inside her pussy. Christ, she seemed to be wet almost all the time. I fucked them in and out a few times before her hips started to grind with my movements and I added my thumb to her clit. I sped up my movements, scraping my fingers over her G-spot as I pressed in with my thumb. This caused Sarah to grunt a little, her arms sort of uselessly flapping at her sides.\n\n\"Pinch your nipples,\" I commanded her, \"like I was doing yesterday. Pinch them until you don't think you can stand any more pain. Then tell me what I am doing to you.\"\n\n\"Please no. You know I don't like my nipples touched,\" Sarah pleaded.\n\n\"Sarah,\" I said, \"You know as well as I do that is bullshit.\" I decided a run of flat truth was in order. \"You run like a tap whenever they are played with and last night when I pinched them you practically tried to fuck the air in the room. You have the most amazing looking tits I have ever seen, never mind have the privilege to touch and kiss. Your nipples are even more perfect that your boobs, I could spend all day just playing with them, looking at them and teasing them. In fact one day soon, I might do just that.\"\n\n\"Now,\" I continued, \"Do as you are told and let's see what happens.\"\n\nSarah slowly put her hands up over her tits and moved her fingers to lightly grip her nipples.\n\n\"The harder it looks like you are pinching them,\" I said, \"the more I'll do this,\" and I started to wank her clit and g-spot again but more slowly than before.\n\nThis seemed to give her a little more resolve and I saw her nipples bulge slightly from between her fingers. I rewarded her with a little more speed and accuracy. As Sarah tightened her grip further I could literally feel the pussy start to weep in delight. Within moments my fingers, which I had sped up again, were making sloshing noises in her wet twat.\n\nSarah's eyes were closed and as her hips bucked against my fingers I watched as she squeezed and pulled those nipples harder, starting to twist them a little as I had done yesterday. Again I rewarded her as promised and my fingers were now hammering her twat and her slippery pussy juice was splashing out around them.\n\nI could feel her start to tighten up and the grunting moans she was making changed in pitch to become more of a whine. I pulled my fingers out and without missing a beat pushed them into Sarah's half open mouth.\n\nHer eyes shot wide open in both shock and indignation. In one move I just denied her another orgasm and filled her mouth with her own drool.\n\n\"Baftad,\" she said around my fingers. \"Wu fuffin baftad.\"\n\nHer hands dropped from her tits and onto my shoulders, her chest heaving, trying to calm down from her near miss with that elusive relief.\n\n\"I said I would give you an orgasm to remember to day darling,\" I smirked up at her scowling face, \"but the day is still young and I really need to get a move on.\"\n\nI pushed Sarah gently away and climbed out of bed leaving her kneeling on it glowering at me. \"Come on,\" I said, \"or I won't let you have a shower before your appointment this morning and I'm sure you don't want you spread your legs for the nice lady with dried up pussy juice all over you.\"\n\nThis spurred her to action and she flounced out of the room and down the hall without a backwards glance. Chuckling to myself I grabbed a towel and headed for the bathroom.\n\nSadly our morning adventure in the bedroom delayed me enough that Martin had the car packed ready to go before I had a chance to see what he had in store for me and we set off. We made companionable small talk and shot the shit until we arrived and he unloaded my clubs.\n\nI was honoured this time. I had woods, irons, putters and everything. A full set. It wasn't until the first tee and I pulled the 3 wood out of the bag I realised what the catch was. I had Anthea's set and Anthea is only five feet tall. I am just over a foot taller than she is.\n\nAs I bent low to make my first swing I heard Martin chuckling behind me. \"You'll still lose, you know,\" I told him as I swung for the ball. It wasn't my best opener but it would do. I was on the fairway at least.\n\nWe stopped in for a coffee and croissant after the ninth hole and I took a moment to text Sarah.\n\n9:05 Me: Have you made your appointment yet?\n\n9:07 Sarah: I am just ringing around now. A lot of places are full \ud83d\ude0a\n\n9:07 Me: Keep trying. Maybe you should give you mum's club a try. I bet they have can fit you in.\n\n9:08 Me: In fact do try there. You can use my credit card, it's in my backpack pocket. Feel free to book yourself (and your mum if she fancies getting spoilt for the morning) anything you fancy.... as long as you do what I asked. \ud83d\ude09\n\n9:09 Sarah: Ass. I can't take my mum with me to get my vag waxed.\n\n9:10 Me: I wasn't suggesting she go in to hold your frigging hand. She doesn't need to know what you are getting waxed. Go on, if there is availability take her and you two have a girly morning.\n\n9:16 Sarah: Booked it. Oh god what am I doing?\n\n9:17 Sarah: Mum coming along as well. She said you're a true gentleman.\n\n9:17 Sarah: Personally, right now I think you are a bastard son of a bitch but hey \ud83d\ude0a\n\n9:18 Me: Enjoy. Just heading out for the back nine and finish teaching your dad how to play.\n\nThe remainder of the round was fun and relaxing. Martin elected to call it a draw as we tallied up the score in the clubhouse bar. It was around 11:30 and a few of his pals were filtering in and as he started his second drink he passed me his keys and told me to head off whenever I wanted to, he'd get Anthea to pick him up later.\n\nI finished up a second coffee, clapped him on the back collected our clubs and drove home. When I arrived there the place was empty. I let myself in with the house keys attached to the car keyring, put away the clubs and headed up to my room.\n\n12:15 Me: How is it going? You and mummy having a nice time?\n\n12:20 Sarah: Hey. Ooooh yes. Nothing I enjoy more than spreading my legs so a stranger can rip the hairs off my minge.\n\n12:20 Me: hahahaha. I can't wait to see it.\n\n12:21 Me: ... and touch it\n\n12:21 Me: ...... and lick it\n\n12:21 Me: ..... and spank it.\n\n12:22 Sarah: Stooop! My phone keeps pinging and my mum is trying to see what's happening.\n\n12:23 Sarah: Aside from feeling a little underdressed down there we've had a lovely morning. Thank you. Your card has taken a bit of a beating though, but my skin has never felt so soft and that massage has probably done wonders for my flexibility \ud83d\ude09\n\n12:24 Sarah: We'll be back about 1pm.\n\n12:25 Me: Can't wait.\n\nI really couldn't wait. I was looking forward to seeing Sarah in all her depilated glory. I didn't really need to, but I went for another shower and was just making a cup of tea when they got back. I put two more cups out and poured as I watched them walk in from the garage. They both looked happy, laughing and smiling together.\n\nAs they came through the door Anthea hurried over and gave me a huge hug. \"Thank you, Jake. That was a lovely gesture this morning I feel twenty years younger.\"\n\n\"No problemo,\" I said as I looked over her head and winked at Sarah, who flipped me the finger and smiled sweetly.\n\nWe sat around the kitchen table for maybe 20 mins chatting away but I was ready to get cracking with the rest of the day so I looked meaningfully at Sarah and said, \"Hey, we really need to get a move on if we are going to go shopping.\"\n\nTaking my unsubtle hint she got up and started organising herself ready to go. I went up to my room to grab my rucksack and messaged Sarah.\n\n13:31 Me: Come here now.\n\nWithin moments my door opened and closed and Sarah was stood in front of me, beautiful in a knee length red summer dress the spaghetti straps over her shoulders leading to a shallow V above her breasts.\n\n\"If you are wearing knickers, take them off,\" I said, \"then I want you to bend over the back of the chair and hold onto the arms. You are not to let go. Do you understand?\"\n\n\"Yes, sir,\" she said as her hands slid up under the dress and pulled down a little black cotton thong. Without speaking again Sarah walked around behind the chair and gracefully leaned forward over the low back to rest her forearms on the chair's armrests.\n\n\"Move your feet out wider than the chair legs and flatten your back to your bum sticks up more please, Sarah,\" I told her as I walked around to kneel behind her. She did as she was told leaving her feet maybe two and a half feet apart. I put my hands on her calves and slowly slid my hands on those beautiful long, strong legs.\n\nBy the time I was just above her knees Sarah's legs were starting to shake a little. I slip my hands all the way up the back of her legs right to her bum. I took a moment to squeeze the silky soft skin on those firm buns and then brought my hands back down and gripped the bottom of the dress and lifted it up her legs.\n\nAs I reached the bottom of her bottom I closed my eyes and pushed the dress up and over her back then sat back on my heels, hands resting on each cheek and opened my eyes. There wasn't a single hair in sight. Gone was the huge unruly bush that extended from her mons, round her ass and even to the top edged of her thighs. In its place was smooth, milky white skin. It looked a little red in places but whatever creams, lotions and treatments they had used had done an amazing job. Truth be told I was expecting it to be bright red and raw looking.\n\nMy eyes soaked in the tight little brown pucker, stark between her creamy white cheeks and travelled down to her pussy, poking out behind her in all of its bald glory. It was already juicing up a little and I could see her labia parting slightly and her pussy engorged with blood.\n\nTaking a deep breath, I leaned forward and ran my tongue along the centre of her slit from bottom right up to her little star where I circled a few times. Sarah moaned and her knees bent a little pushing her ass back towards me. I made my way back down again and pushed in with my tongue, opening up her pussy and giving her a tongue fuck.\n\nStopping to take a breath I slid one finger into her pussy and masturbated her with it briefly before slipping it out and teasing her clit. I bent lower to get my face more underneath her and wrapped my lips around that little nub of pleasure. It was sooo much easier to find and latch onto now and as I increased suction my tongue flicked back and forth over it hard and fast.\n\nSarah let out a wail and it was all I could do to hang onto her ass and keep myself locked in place as she bounced around against my face making very unladylike \"Ugh ugh,\" noise.\n\nThe strength seemed to suddenly get sucked out of her legs as they shook and bent.\n\n\"Mmmmm very nice. You look and taste absolutely amazing, Sarah\". I said as she straightened a little and pushed her arse back at me. \"But I think we should get going.\"\n\nI stood up, tried as best I could to adjust my cock and decided I would need to carry a jacket out in front of me. \"You can put your knickers back on again, you are going to need them.\"\n\nSarah hadn't moved so I gently took her arm and lifted her back up off the chair, turning her to stand facing me.\n\nI gave her a deep slow kiss, sharing the taste of her pussy with her, took her hand, \"Come on, the day's awaiting\".\n\n\"I. Hate. You,\" she muttered as we left the room and headed downstairs and out to the car.\n\nThe car ride out to the shop that I had researched didn't take too long, maybe a half an hour and we listened to the radio and chatted about stuff.\n\n\"How much did it hurt?\" I asked as we drove along.\n\nSarah gave me a dirty look and replied, \"It felt, I guess, a lot like someone grabbing hold of hands full of your pubic hair and ripping it the fuck out! How much to you think it hurt you prick.\"\n\nIt was wrong I know but I simply couldn't help but laugh a lot.\n\n\"I hope you didn't squeal too much,\" I laughed again, \"on a positive note though it looks and feels amazing. I promise you that I will make the pain and humiliation well worth your while.\"\n\n\"Eventually,\" I added.\n\n\"God! I am so horny all the time now,\" Sarah told me, \"Even now I haven't stopped. I mean I was soaked when you had me pull my knickers back on but it isn't getting any damn better. I need an orgasm, or ten. You have me so on edge now I think I might cum if you shout a bit loud.\"\n\nWe laughed at that together for a moment and I said, \"Honestly, I promise I'll make it worth it for you. I'm not completely heartless though so I'll set your expectations. You aren't going to be cumming until after we have been out for drinks with your school friends this evening.\"\n\nI looked away from the road quickly to look right at her, \"I'll come to your room tonight. It's is further away from your parents, the door locks and your bed is bigger and has head and foot board posts,\" I winked then looked back at the road.\n\nThe shop \"Delicate pleasures\" was bizarrely situated on the side of a main road in the middle of the countryside right next to a petrol station and caf\u00e9. I decided not to try and figure out the rationale for that and turned to Sarah, reaching into my jacket pocket to pull out a slip of paper which I handed over to my partner in kink.\n\n\"This is a shopping list for you. Let's have a walk around the place to have a look and assuming it isn't too seedy I want you to go off and get everything on that list. You still have my card, you can use that.\"\n\nSarah glowered at me and started to open the folded paper. \"Wait until we are in there before you read it,\" I smirked.\n\nThe shop was actually very nicely laid out with wide, bright isles and was huge. We walked through, hand in hand. Sarah's eyes were wide and wild, her mouth dropping open every so often as something outside of her imagination caught her eye.\n\n\"Okay,\" I said, \"you can open your list.\" I had written this last night while browsing the shop's online store so I knew they should have everything. On the one hand I wanted to stalk along behind Sarah to watch her go pick the stuff up and pay for it but on the other I wanted to get a few surprises for her myself. On the upside for Sarah all of the staff appeared to be female and young.\n\nThe List:\n\n1 large bottle of organic anal lube\n\n1 large bottle of grape seed massage oil\n\n1 long feather\n\n1 black silk blindfold strip\n\n1 ball gag (You might need help with sizing so feel free to ask an assistant)\n\n1 high quality pair of clover clamps with joining chain\n\n1 high quality pair of leather wrist cuffs (ask an assistant for help choosing and trying them on)\n\n1 high quality pair of leather ankle cuffs (ask an assistant for help choosing and trying them on)\n\n1 ankle and wrist hard leather spreader bar\n\n6 adjustable nylon restraint straps with clips and rings (you might need help finding these)\n\n20 meters of bondage rope\n\n1 Wattenberg wheel\n\n1 high quality leather flogger with a thick ribbed dildo handle (ask the assistant to help you find this)\n\n1 high quality leather paddle\n\n1 small butt plug\n\n1 medium butt plug\n\n1 vibrating butt plug\n\n1 large flexible vibrating dildo (at least 9\" long and thicker than me)\n\n1 pocket rocker clitoral vibrator\n\nLots of anti-bacterial wipes\n\n1 Sexy bunny costume\n\n1 fluffy white rabbit tail butt plug\n\nAnything else you fancy \ud83d\ude0a\n\nSarah's eyes went wide and her mouth dropped open, \"I can't buy all that and ask them to help me. They'll think I am some kind of slut,\" she gasped.\n\n\"You are some kind of slut,\" I answered. \"You are my kind of slut and they work in the shop selling this stuff to people just like you and I. I doubt very much if they are going to judge you so don't be so daft. Have fun with it. Pretend you are being someone else and roleplay it,\" I was trying hard not to laugh now. \"I'll tell you what, if you go up to the pretty assistant over there at the end of the isle and ask her to put a lead and collar on you and lead you round to collect all your stuff, then I'll let you have an orgasm as soon as you want one.\"\n\nSarah turned and stalked away with a partly, \"Fuck off,\" and a finger behind her back.\n\nI watched Sarah round the end of the isle and then made my way back to the doors to get a basket and headed over to the remote-controlled toy section. I had a few very specific ideas about our evening out, just for starters. I found a phone app-controlled model that hooked inside the vagina, presumably against the g-spot and then pressed up on the outside against the clit. It was an expensive model but well worth it I figured as it was also designed so that it could be used while inserted at the same time as a cock. I had definite plans for that. I also picked up a cordless Hitachi wand but having briefly turned on a display model realised we wouldn't be using that until we have some real privacy.",
        "I also found a clever little leather \"X\" with rings on each end that you could use to hog tie and some door jams that would allow me to tie Sarah upright against a door.\n\nI decided that with everything Sarah was picking up we had more than enough for the short time we were going to be up here. There was one other thing I wanted to pick up and headed over the show case near the back of the store and picked out a leather collar with a small silver pendant hanging from the front.\n\nAs I was walking back towards the checkout I saw Sarah stood with the pretty assistant who was fastening a pair of leather cuffs around her outstretched hands. I walked over and stage whispered \"I hope you are being a good girl for this nice lady,\" to Sarah. She flushed a deep red as I walked off to the check out.\n\nI paid for my stuff and went to drop it into the car. I was tempted to go back in again but decided to give Sarah some space. This would be probably the most embarrassing thing she had ever done.\n\nI got in the car and pulled out my phone\n\n15:01 Me: Hey you\n\n15:02 Sarah: What?\n\n15:03 Me: I've realised something the last few days\n\n15:03 Sarah: What? That you are a mean asshole?\n\n15:04 Me: Not quite.\n\n15:04 Me: It's that I think I am really in love with you. You are just amazing.\n\n15:05 Sarah: OMG! You pick your moments. I am being shown a dildo floggers by a 20yr old ffs.\n\n15:05 Sarah: I really love you too, but I knew that ages ago.\n\n15:06 Me: Hurry up. I want to kiss you.\n\n15:06 Sarah: Hurrying, there is a lot of stuff on this list and I am horny of hell\n\nTo this day I am still sure the only thing that got Sarah through that ordeal was how keyed up and desperate for relief she was.\n\nI took the opportunity while I waited to download the app for the vibrator and then plugged it into the USB charger in the car. It already looked about 50% charged but figured I didn't want to take the chance that it would run out tonight.\n\nI glanced in the mirror and had to laugh again. Sarah was coming out of the store, assistant in tow carrying about a dozen large bags between them. I got out to open the boot of the car and help them.\n\nAs we finished loading the boot I tipped the assistant a tenner and she winked at Sarah and shouted, \"Have fun,\" over her shoulder as she skipped back into the store.\n\nI turned to get into the car and almost bumped into Sarah as she flung her arms around my neck and stuck a kiss on my face. It was passionate and needy and long and my cock sprang to life and nearly climbed out to join in. That kiss was full of so much promise I nearly had to fuck Sarah in the car park.\n\n\"I love you too, you filthy, dirty bastard,\" Sarah said as she pulled away and got into the car.\n\nAs we were buckling up Sarah started talking, \"I am a mess. You have to let me cum. I know for sure I am leaving a wet patch on my dress. How am I feeling like this? It isn't me. I have never even thought about doing any of this stuff and never in a million years dreamed I would be in a shop like that having a girl try cuffs on my ankles and explain the merits and problems with the size of the ridges on a dildo flogger. I feel like I am a different person or something. One moment I feel so ashamed and guilty and dirty and the next I feel... I feel almost fizzy inside like I am going to burst any second and every time you say something dirty to me a swear to god, I gush a little. I feel like I am losing control of myself and I don't know how to stop it. I don't know if I could stop it even if I wanted to.\" She paused for a second to draw breath and then more slowly and more seriously she added \"...and I don't think I do want to stop it. I feel alive.\"\n\nI sat quietly waiting to see if she had anything else or if she was all talked out for a minute and then said simply, \"I know, I am a bit the same with all of this. But like you said earlier to me I knew this about myself ages ago, I just never acted on it. I eventually came to see that, at least I thought that, you might like a bit less control just from some of the things you never let me do but when I got away with them it always had a very profound impact on you.\"\n\n\"I think I might wish you had done something sooner.\" she sighed. Her face screwed up a bit then and she looked at me, \"WHAT things wouldn't I let you do?\"\n\n\"Oh, you know, there is quite a long list,\" I smiled, \"but I think it is fair to say that we will be saying goodbye to most if not all of those fairly soon, I mean some have gone already\".\n\n\"Come on, like what? I mean I know you clearly wanted my pubes gone but what else?\"\n\n\"Okay\", I said, \"let's start with those. You groom every inch of your body every day. You wax your legs, armpits, you cream and lotion you scrub and all manner of crap, but you refused to trim that forest even a little bit. Why?\" I asked.\n\n\"Well because. I..... umm. I just always had it like that and why would I cut it, no one can see it.\"\n\n\"I can,\" I replied quickly, \"you can as well. That is no excuse. In the winter no one generally sees your armpits but they get tended to on a regular basis. So, what was the deal with the pubes?\"\n\n\"God, I dunno okay. I just heard my mum talking to her friends one day about girls that shave down there and they were saying it was disgusting and why did men want women to look like little girls. Then one of them said that she knew someone that did it and she was a real slut. Well she didn't say slut but words to that effect. I just didn't ever want my mum to think that about me.\"\n\n\"That's crazy,\" I said, \"loads of women, possibly most women trim and tidy down there and a lot trim the bikini lines well in at the least. How long ago was this?\"\n\nSarah blushed, \"I don't exactly. I think was about 14 or 15.\"\n\n\"Ooookay then. So, let's just go ahead and move on with the times maybe. A bunch of women that were middle aged over 10 years ago thought that grooming your clout was dirty and you have hung onto that ever since?\"\n\nSarah nodded her head.\n\n\"Now you are bald and smooth down there, I am assuming you have taken a good look at it and felt it. What do you think honestly about it?\" I asked.\n\n\"It's a bit like everything I said before. When I looked at it first, I just felt like a bit of a whore and then a bit stupid. I mean I hadn't looked like that since I was little. But then when I thought about why I had done it I felt a bit giddy and when I touched down there, I felt so sensitive and smooth. Then I pulled my knickers on and it is so much more comfortable. I bet running will be more comfortable as well, no little hairs pulling at the edges and stuff.\"\n\nI was still marvelling at how much Sarah had opened up over the last few days. I don't know if this was just her making a herculean effort to make things work or if she really had a life defining revelation. Either way I was loving the openness of the talk.\n\n\"So, do you prefer it like this?\" I probed, \"all smooth........ and slutty?\"\n\n\"I think I do. Well I like how it looks the more I look at it and it feels really nice to touch. I kind of like being slutty for you as well.\"\n\nShe smiled and reached over and put her hand in my lap giving me a squeeze. My semi quickly upgraded to a fully.\n\n\"So what else then?\" Sarah asked me. \"What else was I doing 'wrong'?\" She made that annoying inverted comma sign in the air.\n\n\"You weren't doing anything wrong, just things that I wanted or didn't that were different and I couldn't really understand or get you to explain why. Okay, so how about having sex doggy style then?\"\n\n\"Well it is kinda dirty and impersonal and you'd be able to see my bum hole.\"\n\n\"Okay, what about kneeling down to give a blow job?\"\n\n\"It's degrading and something a whore would do.\"\n\nI laughed, \"Okay, what about having your nipples played with? You never used to let me touch them but last night you all but fell to pieces and came just from me playing with them.\"\n\nShe blushed again, a deep scarlet and I actually saw her nipples pop up to attention, \"I hate my nipples. They are weird. You know I hate them and I was only letting you touch them because I was trying to be a good girl for you.\"\n\n\"Whaaat? Why are they weird? I have told you before I think they are the most beautiful nipples I've ever seen. What has made you think there is anything wrong with them?\"\n\n\"You just say that because you want to maul them though. Everyone else's are sort of flat with a definite nub in the middle. Mine are just a big bulgy puffy lump with another puffy lump in the middle. I used to get teased and bullied about them at school and the first boyfriend I had that saw them laughed when he saw them.\"\n\nI took a breath, then replied to what was, really the child coming out, \"first of all, you need to take a close look at them when they are aroused. They look nothing like you just described. Aside from that, I honestly don't know a single guy (or a married one for that matter) that wouldn't love everything about your boobs. They are fucking majestic and your nips are the crowns on top. Second, that boyfriend was clearly a wanker and I hope you laughed when you saw his cock. Third, I am going to make it my mission to make you cum from just having your nipples teased.\"\n\nShe laughed at this, \"God you are such a dirty bastard.\"\n\n\"Guilty as charged it would appear ma'am. You know what though, I always have been, but kept it all inside and it was making me miserable. I have been happier in the last 2 days than I have in years and that is all because of you ... and your nipples.\"\n\n\"Now,\" I carried on, \"more importantly I think we need to take your mind off what you think is wrong with you. I want you to lean back in your seat and pull your thong down to your knees, spread your legs as wide you can and bunch that dress up round your waist. I want you to play with yourself all the way home. Obviously though, no cumming.\"\n\nIt was a real indication of where Sarah's head was now at that she didn't even question the command and within 30 seconds she was leaning back in her seat with her thong stretched tight between her knees, legs jammed against the sides of the footwell and her dress flowing down the sides of the seat as she teased her clit.\n\n\"You know,\" she sighed, \"I almost never masturbate. I never have done, it always seems wrong. Even when I did I just kind of humped a pillow or something and I only did that if I was really desperate.\"\n\nShe was silent for a few moments before continuing, \"I can't fucking believe what I've been missing.\"\n\nLaughing I said, \"yeah, I am kind of the same. I have hardly ever wanked.\"\n\nHer eyes opened wide to look at me, \"really?\" she asked.\n\nI laughed harder, \"of course not. I'm a bloke. I wank every chance I get!\"\n\n\"Prick\"\n\n\"For that you get another task,\" I said, \"wet the fingers on your other hand. Then I want you to tease your arse with them. Keep wetting them and then push one inside to your first knuckle and fuck yourself with it.\"\n\nThis time she did blush, but like a good girl she did as she was told and within 5 minutes her hips were jerking, \"Please, Jake, Sir, can I cum?\"\n\n\"No,\" I said simply. Sarah started to pull her hands away from between her legs but I stopped her short.\n\n\"I didn't tell you to stop what you were doing. Carry on and tell me what it is you are doing. No cumming though.\"\n\n\"Fucking seriously,\" she moaned as her fingers started up again.\n\nWithin about thirty seconds she was almost wailing in the seat next to me. It was very distracting, \"Please sir. Please sir.\"\n\n\"Do you want to cum?\" I asked mildly.\n\n\"Oh yes. Yes please, yes please.\"\n\n\"Oh look at that. We're almost home. Sit up and clean those fingers up. You don't want to walk in with cummy smelly fingers, do you?\"\n\n\"Arsehole,\" Sarah spat at me but she stopped and sat up. My eyes nearly popped out when she sucked her fingers clean. All her fingers. I decided to say nothing as she fussed about pulling her thong up and fixing her dress.\n\nShe still looked like she's been ridden hard and put away wet though when we finally got out of the car. I went around to the boot to consolidate our purchases into what I wanted for tonight and what could wait. I didn't really want all that hardware sitting around in the house in shopping bags and it wouldn't all fit in my backpack.\n\nI picked it up, surprised by the weight, quickly grabbed the receipt and headed in, following Sarah. Normally I wouldn't be that enthused about an evening out with her old school friends but tonight I was both looking forward to it and also knew that we wouldn't be out too long.\n\nWe had caught a lucky break and Anthea was out picking up Martin from the golf club so Sarah could go freshen up and I could get the toys through the house. I decided to take most straight to Sarah's room and was sat sifting through them when she came in.\n\n\"You clearly have an eye for quality,\" I commented as she sat on the double bed opposite me and the stash. \"Did you make a point of picking the most expensive option of everything on the list?\" I laughed.\n\nSarah fluttered her eye lashes at me and smiled sweetly, \"Would you expect anything less? If I am going to get tied up with something then I can at least be comfortable and if something is going to be poked inside me then it damn well better be the best quality something available.\"\n\nShe stuck her tongue out at me, \"Do you not think I am worth it?\"\n\n\"Oh, quite the contrary and I look forward to poking you with everything we have here.\"\n\nI dived across the bed and grabbed her, rolling over and pulled Sarah into a hug with her laying on top of me. Laying like that, faces nearly touching I whispered, \"I love you Sarah, more each minute but that doesn't mean that I am any less of a dirty minded fucker. I don't think I can ever put this genie back in the bottle again. Are you okay with that?\"\n\nShe looked at me for a little while, noses a few inches apart and then leaned in for a long soft kiss, her tongue tracing the inside of my lips and then finding mine. When she pulled away she looked back into my eyes, \"I won't pretend this is coming easily for me... in fact I won't pretend I am cumming at all, YET! But you have made me think about a lot of things over the last few weeks and especially this weekend.\" She paused to kiss me some more while grinding her hips against me.\n\n\"You have made me realise that I have been trying to live my life in a vision of what I think my parents think I should live like. Doing things I think they consider right for a girl to do and think..... for me to do and think,\" she paused for a moment then added, \"I don't even know if they think or feel any of that.\"\n\nShe stopped to kiss me again and then with her mouth only an inch from mine continued \"I am trying to stop thinking and acting like that and trying everything out for me now..... and trying it out for you. If I am going to please anyone it is going to be you and me!\"\n\nI leaned up then and kissed her, sliding my hands into her hair and holding her close, \"good,\" I whispered as I pulled back again. \"That's good because for the rest of this weekend I am going to start reclaiming you and reclaiming every room in this house so when you are in it, you have thoughts and memories of what has made you happy for yourself..... or at least horny,\" I laughed.\n\n\"Starting tonight when I am going to strip you naked and tie you spreadeagle to your bed in your childhood bedroom. Then I am going to tease and torment your mind and body until you hardly know who you are and then I am going to make you cum. Then I am going to fuck you and make you cum again and then again.\"\n\n\"Eeek! I don't think I will be able to stay quiet enough. I've seen what's on the bed and I was frigging soaking just buying half of them.\"\n\n\"You'd best learn a little control then. You keep saying you want to cum and when I tell you when, where and how that will happen you want to throw issues in the way?\" I looked at her, \"Maybe you just don't want it enough and we should wait until we get back home?\" I gave her a wide shit eating grin.\n\n\"I want to cum soo bad,\" Sarah groaned, slowly dry humping herself against me. My cock was way beyond hard but I knew we had no time for getting into that right now but I starting pushing back against her. \"Do you promise to make me cum tonight, Sir? I have been a good girl.\"\n\n\"You have indeed been a very good girl, but that is what you do. What I want is for you to be a very bad, very dirty girl for me. Can you do that?\"\n\n\"I can try my best, sir,\" Sarah moaned grinding down hard against me. \"What do I need to do to be a bad enough girl?\"\n\nI looked at my watch, it was getting on towards five-thirty and we were meeting her friends at 7pm for drinks and food in a local gastro-pub. \"Okay, you can start by getting naked right now and then unpacking all the stuff on the bed and cleaning it as needed and putting batteries in. You should lay a towel on the floor under your bed and lay it all out on there, one piece at a time.\"\n\nSarah started to get up and I added \"But at no point are you allowed to bend your knees when putting stuff on the floor, or under the bed or bending to get things on or off the bed.\" She frowned at this, obviously trying to assess how she could do this. Touching the floor would be easy but being able to put things on the floor far enough under the bed to hide them from easy sight would be more of a challenge.\n\nEasing gracefully to the floor Sarah reached behind her to unfasten her dress as I got up and went to sit at her dressing table to watch and stay out of the way. The dress fell in a puddle around her feet and her knickers followed a moment later. I sat soaking in the sight of her body as she reached back again to unclip her bra. Looking down I could see her pussy was red and wet, her labia pushing their way through, begging for attention.\n\nWithout looking at me Sarah turned to the bed and bent slightly at the waste to start sorting things through. She was trying hard to keep her legs tight together but as she had to move around a little it was either becoming too difficult or she just forgot and they drift apart about shoulder width and this afforded a most beautiful view as she bent to the bed.\n\nSarah was working fast and within a few minutes the wrist and ankle cuffs were unpacked and unbuckled, the nylon straps were laid out next to them and the blindfold, ball gag, paddle and Wattenberg wheel were all done. Clearly, she had been building up the courage to tackle the butt plugs, dildo and clit vibe. As she was unpacking one of the plugs I asked her, \"Where am I going to put that Sarah?\"\n\nI couldn't see because she had her back to me but I knew she was blushing now. \"In my bottom, sir and you are probably going to make me beg you to put it there as well.\"\n\nWell, she wasn't wrong but where had that come from. I smiled to myself. \"Keep talking like that sweety and I might just have you wear it out tonight.\" He arse visibly clenched and her knees gave a little at this causing her pussy lips to pop apart fully showing the full extent of her arousal.\n\nOnce she was done with the plugs and the clit vibe, Sarah unpacked the dildo and started to wipe it down and put in the batteries. \"Tell me what made you pick that one\" I asked. I was honestly curious because while I had given basic guidelines she had picked something well beyond what I thought she would be comfortable even being seen to consider.\n\n\"You said to get something bigger than you sir. Well you already fill me up and I love the feeling when you first stretch me so I thought it might be nice to have something that could stretch me a bit more after you have finished fucking me.\"",
        "\"I see,\" I said, \"and how big is that one. Tell me all about it.\"\n\nTurning to look at me, holding it in both hands she said \"It's about ten inches long and says it is about seven inches around at its widest point. It vibrates really hard and I can't wait to know what it feels like to have something vibrate against and in my pussy. It also has a suction thing at the bottom so you could make me stick it to a chair and...\" at this point her embarrassment caught up with her and she went scarlet again, probably realising what it was she was saying to me.\n\nStanding there not really knowing where to look, feet apart, holding a huge dildo and sporting a wet and wide bald pussy Sarah had literally never looked sexier or more fuckable. Her nipples were hard little pebbles atop their puffy nest. I couldn't resist. I got up and said \"Don't move an inch,\" as I stepped past her to the bed and picked up the clover clamps. I squeezed the mechanism a couple of times to try them out and tested one on my finger. I gave quite a hard pinch. This should be an experience...\n\nI walked back in front of Sarah and told her what I was about to do. \"I am going to put these on your nipples now, just to try them out before tonight. Do not move. Do not make a sound unless it is your safeword. Once I have put them on I want you to finish putting your toys away under the bed. Straight legs remember. Do you understand?\"\n\nShe gulped, her eyes like saucers, \"yes sir.\"\n\nI reached out and took a nipple between my fingers gave it a squeeze and pulled it away from her body slightly and with the other hand I opened the jaws of the clamp and slid it around the nipple and slowly eased off the mechanism, closing the jaws on that sensitive bud.\n\nAs the tension increased Sarah grunted and made a desperate little whine but otherwise managed to stay silent. She was breathing fast now though, and her legs were shaking a little. I repeated the process on the other nipple. Sarah's eyes were closed now, her hands gripping the dildo tight enough that her hands were starting to go white.\n\nI gave the chain between the clamps a pull and Sarah almost fell into me, like she had forgotten how to use her legs. I put one hand down and ran it between her legs, brushing lightly along her pussy. To suggest that it was wet simply didn't do it justice. I actually had to take a step back and kneel down to see.\n\nSarah pussy was soaked to the point of running. Her thighs were glistening, and she had a little tendril of grool hanging down.\n\n\"Okay, put your toys away\" I said, and sat back up on the chair.\n\nSarah picked up a towel from the chest at the end of her bed and bent down to lay it on the floor. With her legs straight and together she was able to lay the towel down but not put it under the bed. Straightening up she gathered up the toys and laid them on the towel and folded the ends up to cover them in a towelling pouch.\n\nThe view I was getting was lovely, let me just say that right now. Her feet were maybe two feet apart and bent over like she was, her pussy was poking out at me all red and wet and openly inviting, not to mention her little brown star all tight and shy above it.\n\nI had already figured that Sarah could follow my instructions by lying flat on her bed with her arms hanging down to pull the towel underneath, but I was wondering and fervently hoping that Sarah's orgasm hungry mind would not figure this out.\n\nThen with practiced grace she started to step and slide her feet out sideways, keeping her legs straight, three feet apart and then four feet apart until her arse maybe two feet off the floor. Using one hand to steady herself on the bed Sarah pulled at each corner of the towel parcel and pulled and pushed it under the bed.\n\nAs she finished, I spoke, \"don't move, stay right there, both hands on the floor.\"\n\nI dropped to my knees and crawled up behind her my head level with her pussy. This was simply too tempting to resist and I leaned in and swiped my tongue all the way from her clit to her pucker where I concentrated my efforts and gave her what was in all likelihood her very first full on rim job.\n\nSarah gasped out loud and groaned, \"Oh fuck me!\" as my tongue circled and prodded at her arsehole. When I closed my lips around it and sucked lightly while flicking it with my tongue she cried out and fell forward onto the bed.\n\nMoving quickly I was up and held a hand down firmly on her lower back as I used my other hand to slip two fingers into her soaking twat and fingered her g-spot hard and fast until I felt her start to tighten up.\n\n\"Oh, you fucker! \" She shouted as I pulled my fingers out and wiped them on her arse cheeks, \"please for fuck sake let me cum.\"\n\n\"I will, I promised didn't I,\" I replied, \"Go get ready. Your mum and dad will be home soon and we need to get going if we are going to be on time and you know, the sooner we get there the sooner we can head back again and finish what I know you wanna finish.\"\n\nI got up and offered my hand to Sarah but she ignored me, looking defiant as she took a few moments to climb back to her feet. \"Piss off so I can get ready then you teasing prick,\" she said.\n\nI blew her a kiss as I left the room and went to shower and get ready. I was maybe two steps outside the door when I heard her shout, \"OW, FUCK MEEEEE,\" I quickly turned and poked my head back in and saw her holding one of the clamps in her hand, the other still attached to her nipple.\n\n\"Oh,\" I said deadpan, \"I had heard they hurt more coming off than going on. Would you like a hand with the other one?\" I got the finger so I turned and left again making it as far as my bedroom door before I heard, \"FUCK! FUCK! FUCK!\" Perhaps I should give the clamps a miss tonight both because her nips were probably going to be sore and because the neighbours, who are about a quarter mile away probably heard that.\n\nBy the time we were both dressed and ready to go Martin and Anthea were back. Anthea offered to drive us over to the pub but I didn't plan on drinking because I wanted to be fully in control of myself later, so I drove us.\n\nAs we drove along the quiet lanes to the nearby village, I passed Sarah the little velvet bag with my remote-control purchase in it. \"I want you to wear this tonight, Sarah,\" I said.\n\nShe had elected to wear black jeans tonight which were a bit of a blessing and a curse. On the one hand they would both help to hold the vibrator firmly in place and the black material would probably hide any pussy run off. However this next part was going to prove a challenge; getting it in while wearing them.\n\nTaking one look at the device she pulled out of the bag Sarah said, \"there is no way, if this is what I think it is, that I can wear this tonight and not orgasm. I saw these in the shop, in fact I nearly bought one but decided you were too evil!\"\n\nI laughed and then said as seriously as I could, \"you had better not have an orgasm. If you do I'll turn it up to full and leave it there while you turn into a puddle.\"\n\n\"Jake..umm... sir! I have never even used a vibrator before, I am not sure I can handle this.\"\n\nI considered this for a moment \"Okay, but look, put it in for now and you can try it out before you get out of the car. If you honestly think it will be too much, then fine.\"\n\n\"Okay sir. I'll try it.\"\n\n\"There is some lube in the glove box. You should use plenty on it I guess.\"\n\nSarah just laughed, \"well okay, but really, I am still a swamp down there. I mean I showered and dried and everything and I was doing okay until we got in the car. I am just a walking wide on,\" she laughed again.\n\nIn a lot of ways, it was like spending time with a completely different person but at the same time it was still all very Sarah. Her new openness and use of language was probably as liberating for me as it was for her despite her 'liberation' taking the form of sexual subservience. Ironic, right!\n\nLifting her arse up Sarah undid her belt and popped the buttons of her Levi's then shucked them down her legs and over her knees along with her thong. Then after dumping lube all around the toy and turning it on, she lifted her hips again she pushed it between her legs and pushed up, sucking in a breath I assume from a combination of the cold lube and the penetration.\n\nIt took her a little time to get it seated properly and she pulled up her clothes and sat down again. The whole episode was done so 'matter of fact' and quickly I felt somewhat cheated out of my natural voyeuristic delight.\n\n\"Okay,\" she said, \"fire me up then cowboy.\"\n\n\"We are nearly there, you'll have to wait until I park the car.\"\n\nThe pub was only about thirty seconds away and we were soon parked up at the far end away from everything. I pulled out my phone and opened the app. I selected the internal vibrator, set it to low and waited.\n\nI didn't have to wait long. The effect was immediate and profound. One of Sarah's hands grabbed the door handle and the other just kind of waved in the air, \"Ooooh shiiiit!\"\n\n\"Oh shit.\"\n\n\"Oh shit, oh shit, oh shit, oh shit, ugh!\"\n\nHer head dropped onto her chest and then back to press against the head rest, her mouth open.\n\n\"Feel good?\" I asked.\n\n\"Oooooh Shiiiit!\"\n\n\"Okay, I am going to turn on the clit vibe now, okay?\"\n\n\"Mmmhmm.\"\n\nAs I pressed my phone to fire up the clit vibe Sarah shouted, \"NOOO, FUCK NOOO,\" as she doubled over with her hands pressed between her legs. I killed both vibes immediately and watched Sarah heaving for breath almost sobbing.\n\n\"I really want to orgasm Jake. I am always just so close, and I don't think I can handle this.\"\n\nI was just about to tell her that she could take it out, that it was okay when there was a tapping on the window and Theresa, one of 'the friends' was waving at us. Oh well!\n\n\"Heeeey\" Theresa smiled through the window, \"Great to see you guys. You coming?\"\n\nI laughed and Sarah muttered, \"I bloody wish,\" before smiling and opening the door. \"Yeah, just on our way, I just needed a moment, not feeling great.\"\n\nDid she just lie to her friend? Was this a promise of a quick escape I wondered, I hoped.\n\nI jumped out of my side of the car and adjusted myself as best I could as I walked around to Sarah's side quickly to open the door and help her out, deciding to up-play the, 'Not feeling great' angle.\n\nI offered my hand and Sarah pulled herself from the car on shaky legs, putting my arm around her as we walked in alongside Theresa who was probing Sarah about how she felt and what was wrong. Sarah, apparently, felt a bit fluey and sick. Hahaha!\n\nIt was a nice enough couple of hours sat around chatting and nibbling. Neither Sarah nor I ate or drank very much and for the most part I was well behaved, keeping my hands away from my phone and the controls to \"her heart\" as it were. Although, I did let the devil take me a couple of times, just to make sure the pot stayed bubbling, although I gathered that was unnecessary.\n\nThe evening would have been much more tolerable if not for Theresa's boyfriend. Sarah, being a good girl, wouldn't say anything negative about him but I honestly couldn't stand the guy. He is utterly full of himself and always seems at odds with anyone and anything. He is the kind of guy that, as you're standing at the bar waiting for service will break into a conversation about how his girlfriend, Theresa in this case, likes to be fucked and the many and various ways he makes her orgasm on his obviously big cock.... I dunno, maybe it is just me that doesn't get off on talking about sex with another guy or maybe it's just because I want to punch him.\n\nEither way, the guy is a douche and treats Theresa like he owns her, and not is a good way if you know what I mean. I know Sarah sees it and I can see it in Theresa's eyes that she feels it as well as he tears her down one subtle piece at a time in front of everyone. I had mentioned it to Sarah a couple of times but always got a, \"He's not that bad and Tess likes him.\"\n\nFortunately, he spent most of the evening talking to a couple of the other guys and I sat quietly soaking up the general chatter and trying hard not to mess with Sarah too much.\n\nI was tempted to play when Sarah and Tess got up to go the ladies and the bar together, but Tess looked like she was in full flow on a deep and meaningful conversation, so I let her be. They stayed at the bar for quite a while, Tess talking quietly enough that Sarah had to lean in. It ended with the two of them giving each a tight and somewhat fierce looking hug then they came back to the table, Sarah squeezing Tess's hand gently.\n\nAt one point we were left alone at the table for a few minutes as people went to the bar or the toilets. I looked meaningfully at Sarah and picked up my phone. She was sat opposite me and scowled, shaking her head. I smiled sweetly and turned both parts of the vibrator on at about thirty percent and watched with delight as Sarah nearly jumped clear of her seat and the table.\n\n\"Nooooo,\" she gasped, \"please. It is hard enough just sitting here with this inside me, pressing against all the right places.\"\n\nHer nipples, which had been slightly visible before were suddenly overtly protuberant through her bra and shirt. I saw a couple of people walking back and with the devil in my passenger seat I flicked everything to full power for about five or six seconds, turning it all off as the group reformed at the table.\n\nSarah was breathing heavily, her face flushed and hands a little shaky as everyone sat down again, asking if she was ok, and that all was well. We used this as our excuse to make our departure and as we got up to leave, I turned it on again to its lowest setting. Sarah groaned and stumbled against me as I helped her out on shaking legs.\n\nBy the time we reached the car my plaything was grunting with almost every step and I was taking a lot of her weight on my arm, so I turned it off again as we got in.\n\n\"You bastard, you nearly made me have an orgasm in a pub in front of my friends,\" she looked at me as she rested her head back against the seat, \"I had to fight to hold it back, my stomach muscles feel like I just did two hundred crunches.\"\n\n\"Good girl,\" I said simply, \"well done for holding back.\"\n\n\"I didn't fucking do it for you, you arse. I just didn't want to roll on the floor cumming all over the damn pub.\"\n\n\"God, I love you,\" I laughed, \"I promise you will get your jollies really soon. Any requests?\"\n\n\"Yes,\" she replied, \"get us home soon\".\n\nSarah sat looking out the window, watching the journey home go by slower than it ever had before. These last few days had been an honest to god revelation to me. All my life, expending so much time, energy and emotion trying to be who I thought my parents thought I should be. Trying to be a 'good girl' as Jake calls me. All prim and proper. Right now, though I thought to myself I would fuck my bedpost if it meant I got to orgasm.\n\nIt's a strange thing. I mean I know I could easily have made myself cum anytime over the last few days. It's not like I didn't know how to masturbate, it's just something I didn't do unless I REALLY felt the need for it. I really did feel the need for it though, like never before. I actually, physically ached between my legs and my nipples felt like corks on a champagne bottle, ready to bust off. So why hadn't I?\n\nI know I wanted to please Jake and I know he wanted me to wait until it was on his terms but was it just because I didn't want to lose him? That would make me a bit pathetic and desperate I thought. No. It wasn't only that, and I did have to admit that this was part of it. Jake had told me that I needed to start being honest with myself and right now, if I was absolutely honest then I wasn't going to just give myself relief because I was getting a huge kick out of giving up that option and giving the control to Jake.\n\nEven just thinking that caused a spasm to run through my body, finishing in my clenching vagina. No not vagina. It was a pussy. Vaginas go get checked by the gynaecologist. Pussies are for fucking. For really dirty fucking there was also cunts. To my own intense internal shame, I realized that tonight I desperately wanted to have a cunt, not a pussy and definitely not a vagina.\n\nI hadn't really thought about it any conscious way before now, riding home in the car knowing what Jake had planned for me tonight and tomorrow. It screamed against everything I had been. He was going to strip me naked and tie me up in the bedroom I grew up in. The room my dad used to read me bedtime stories in. He was going to tie me up and then he was going to do things to me that I never thought I would ever let anyone do to me, never mind the fact that as the time grew closer I knew that I was not only looking forward to it but that I almost needed it. He had somehow managed to tap into something inside me that I never even suspected was there and had made me look it in the face and start to think about and accept it.\n\nGod would this journey ever end. This damn toy inside me, although still right now, thank the gods was still putting pressure in all the wrong, or right places depending on your point of view. I was a veritable swamp between my legs, my jeans were soaked through all round between my legs and the tops of my thighs and to be perfectly blunt, the smell in the car was unmistakably that of a very, very horny woman. I glanced over at Jake, looking at his lap and I could clearly see his erection straining against his jeans. Oh how I wanted that in me right this second. So big and thick and hard and mine.\n\nI'd had plenty of boyfriends before Jake and most of them had been fairly decent in the sack but none had quite had either his package nor had they ever even tried to stray beyond the straight path down the middle of 'normal'. For sure, none of them had ever gotten me into this gut clenching state of need and desire. If Jake pulled over now and told me to get out and go hump a lamp post I wouldn't even think once about it.\n\nWe were nearly home. This was a good thing as I was having to clutch the sides of the seat to stop myself from touching. Oh Jesus Christ my nipples ached for some stimulation, I wanted them sucked and stroked so bad. No, I realized blushing a little. I wanted them pinched and bitten. I wanted those horrible clamps on them, to feel the electric burning sensation spark from my nipples to my clit. God help me I think I even wanted Jake to put me over his knee and spank me while he fingered my pussy, my cunt.\n\nBy the time we pulled up outside the house I was squirming in my seat and it was taking every bit of self-control I could muster not to pull my jeans down and finish myself off. I was so horny, like nothing else I have every experienced. It almost hurt I wanted something, anything inside me right now, and then out, and then in fast and deep.\n\nI ran out of the car and into the house, tearing up the stairs to the bathroom to get ready. As I closed the door behind me my phone buzzed:\n\n10:35 Jake: Do not touch your knickers or anything in them. Leave it all alone.\n\nOh fuck! I was a soaking, mushy mess down there. I'd planned to clean up and freshen things. God, what was he going to think of me?\n\n 10:36 Me: Okay Sir. If you say so.\n\n10:36 Jake: Good Girl. Now be quiet and hurry up. I am waiting in your room.\n\nMy pussy clenched sympathetically as I read, \"Good Girl.\" What the hell was he turning me into? I quickly tied back my hair into a pony tail and brushed my teeth then stripped to my knickers and looked at myself. My nipples were big and bulging lumps on the ends of my breasts with hard, sensitive points on the end aching for attention. Looking down, my thong was a soaking wet mess as were my inner thighs. I could even feel wetness seeping back into my bum crack. I pulled my robe on and quietly opened the door and headed into my room and what was facing me there.",
        "Jake was sat at my dressing table waiting, stripped down already to his tight boxer shorts and a T-shirt. I saw on the table surface the towel, opened out again and displaying our new toys. \"Close the door and lock it please,\" he told me quietly. It was barely more than a whisper but the words shouted in my mind.\n\n\"Yes, sir,\" I did as I was told. My hands were shaking a little, full of nervous energy.\n\n\"Take off your robe and come and stand in front of me, hands in front of you,\" he continued as I turned the lock on the door.\n\n\"I am going to cuff you and then blindfold you. Once I put on the blindfold the only way I will stop doing whatever I want to you will be if you use your safeword. Do you understand?\"\n\nI pulled the cord on my robe, the one he had used to tie my hands with last night and slipped the robe from my shoulders, standing there all but naked, my thong was shear and soaking so it hardly protected any dignity I might have had. \"Yes, sir. If I want you to stop I will say 'pineapple'.\" Plucking up courage I took my first step and went to stand before my Jake, sir.\n\nHe just sat there staring at me, looking up and down my body from my eyes to my boobs, down to between my legs and below then back again. \"Hands out in front please,\" he commanded as he reached to the dresser and picked up one of the cuffs. My arms moved of their own accord and offered my hands up to him, almost out of my conscious control. Gently he wrapped a cuff around my right hand, closing it and then threading the buckle and cinching it snugly around my wrist.\n\n\"Is that okay, not too tight?\" he asked, reaching for the next cuff.\n\n\"Yes, it feels fine,\" I croaked, my voice hardly working now. Without missing a beat, he wrapped up my left wrist in the other cuff and fastened me in.\n\nHaving done this, he dropped his hands and stroked my legs up and down from knees to thighs lightly at first and then changing the angle of his fingers slightly to scrape my skin as he slowly moved his hands up from my knees along the insides of my thighs. The feeling was like getting electric shocks all the way along my legs. His hands met at the apex of my legs and then ran his thumbs together across the top of my pussy. I grunted and jerked my hips at him. I fucking grunted like an animal. Fuck. What was he doing to me? I was reduced to base noises and uncontrolled movement.\n\nThen he took his hands away and touched his phone and that damn vibrator started again on both my clit and inside of me. I had to reach out and use Jake's shoulders to steady myself. I dropped my head and moaned as I felt the fire between my legs take on new life, burning hotter and hotter. My clit felt like it was the size of a golf ball and had never been touched before and the pressure from the inside whirring away against my g-spot left me utterly unable to think. I was going to cum and nothing was going to stop it. My knees shook and bent pushing my bum out behind me as I tried to grab onto Jake to support me. The climax that I could feel about the crash into me, to crush me as almost scary in its intensity and I wasn't even there yet. Already my body was telling me this was better than anything it had felt before.\n\nI was there, this was it. After all the waiting and teasing I was about to get my orgasm. I could feel a tear starting to escape, my mind and body literally sobbed in relief and anticipated pleasure as I lost control of my hips, and then it stopped. Just stopped.\n\nI felt a sharp stinging slap on the inside of my thigh.\n\n\"I told you there were no orgasms for you until I said so,\" he told be sternly. With that he pushed me upright and leaned into me, taking hold of my thong. I couldn't hold myself up now and pushed on his shoulders as he slid the wet scrap of fabric down my legs to my ankles and then slipped the vibrator out of my pussy. For a brief moment it felt like he was pulling my heart out through my vagina as I felt a hollow emptiness. Then I was all focused on him moving my legs where he wanted them. I wasn't concentrating on that. I was still in shock and bewildered at how I could have felt so much, been slow close and still had it denied me.\n\nMercifully he made short work of cuffing my ankles. I think he realized that I couldn't take much more without losing all control, if I was honest with myself I had already. He stood and stepped behind me, wrapping his arms around me in a gentle hug. I felt his warm breath on the back of my neck, making the little hairs there stand up, as on edge as the rest of me.\n\n\"Are you ready?\" he breathed into my ear, \"unless you say stop right now I am going to blindfold you and then you are mine and the only word you are allowed to say will be your safeword. Your parents are only down the hall so I suggest you stay as silent as you can. Okay?\"\n\nI nodded. I don't think I could have spoken then even if I had wanted it to stop. He slipped the black silk around my head and over my eyes, its soft slippery folds caressing my cheeks and eyelids as it pulled tighter and the world slipped away from me, leaving me only able to hear our shaking breaths and standing there a bundle of raw nerves. He took my hand and led me slowly to the bed and laid me down, carefully moving me to the centre.\n\n\"Spread your arms and legs out towards the corners and don't move,\" he told me. I did exactly that, like a good girl, or was I now a bad girl? I heard him moving around for a minute, my heart beating so hard, so loud in my chest it was hard to make out his footsteps. Then I felt a tug on my right wrist. I instinctively pulled back to find I couldn't move it more than maybe in inch. A few moments later I felt a similar sensation on the left side, with the same effect. I groaned. It was really happening. Jake was going to do it. He was going to turn my childhood bedroom, my safe haven and sanctuary, the place my dad read me stories into somewhere that he owned, at least in my mind. Somewhere where I would be made to please him, be what he pleased. No, that was wrong. He was turning it into somewhere where I could please myself, be myself, this real me, not the twenty something year act, which I now know I had put on.\n\nMy left ankle tugged and was pulled further out to the side, a lot further. I gasped, imagining how open and vulnerable I must look all pink and open. I secretly loved how my pussy looked and felt since it was so thoroughly depilated, I might eventually tell Jake that but it would always be secret from the rest of the world. I imagined it now plump and engorged and open. My labia pushing my outer lips apart, my clit straining out looking for attention.\n\nThe right legs followed a polar opposite path to my left and I was tied to the bed at four points, lewdly spread wide open. My legs pulled wide enough that my feet were at each edge of the double bed, just a tiny little bit of strain evident in the top of my legs. I silently thanked god for sport and Pilates.\n\nThen he did something I hadn't anticipated, and I felt my Bose noise cancelling headphones being closed around my ears, I lost another sense, gone, isolated. I felt nothing after that for what felt like an hour but was probably only moments. I felt it first on my foot, a slight prickling sensation that started to slowly move towards my ankle and then along my calf, setting fire to the nerves as it passed. It was such a small, delicately intense feeling. Not quite pain, not quite pleasure but, in my current state, all consuming.\n\nThe prickle travelling up my calf and around my knee and then continued up my thigh towards my dripping snatch. My hips raised up, trying to find my sensitive clit some friction but finding nothing.\n\nThe prickling got closer to my pussy, right at the top of my thigh and into the joint as a lust filled gasp tore itself from my throat. The prickles continued their tortuous journey along my lust filled plump mound towards my clit, closer and closer and then it was gone, only to reappear on my other foot, making the same agonizing journey up that leg. Despite having been told I wasn't allowed to speak, by the time the prickles had reached my mons this time I was quietly and desperately chanting.\n\n\"Please, sir, please, yes please.\"\n\nSkirting around my pulsing clit again the tiny prickles moved directly up my body, dipping into my belly button which caused me to squeak and then reached the bottom of my boobs where it started to circle them both in a loose figure eight contracted on each pass getting closer and closer to my throbbing nipples. Jake was ready for me though and as the pins on the Wattenberg wheel dug into the flesh of my first nipple he clamped his hand down over my mouth as I tried to scream, sensation overloading my tortured body and the prickling intensified, Jake pressing slightly harder moving it towards my other nipple. I screamed again and I could feel the wet of tears starting to wet and then soak the silk over my eyes.\n\n\"Oh God, please. Please I am begging you, please let me cum.\"\n\nI was almost incoherent now. My entire body a raw aching nerve my hips out of control, writhing around. Jake had stepped away, I felt his presence around the room as my pathetic plea for orgasm continued. Then I felt something soft fall across my hips and again across my thighs and then my stomach. It felt like soft rope.\n\nWhat was he doing? Why wouldn't he let me cum? Hadn't I suffered enough?\n\nThe ropes all moved then, slithering across my body in different directions until suddenly I felt them tighten and pull my body tight against the bed. Jake re-positioned them slightly and the tightening continued until I could no longer move my hips, thighs or stomach off the bed at all.\n\nThis was even worse. Not being able to move was a sexual torture all of its own. I could feel myself running between the legs, juice oozing out and down my arse. The headphones left my ears and I heard Jake's whispered breath next to me, \"you really need to be silent now, do you understand?\"\n\nI nodded, unable to speak. I waited. Nothing. I started begging again.\n\nNothing, then a light stroke along my pussy and I cried out.\n\n\"Shhhh shhh shhh,\" Jake said, \"you need to be quiet Sarah.\" His fingers kept up their light stroking, infuriatingly gentle and never touching the right spots.\n\n\"What is your orgasm worth to you? What will you give me for it?\" he asked, \"you may speak.\"\n\n\"Anything, anything, please just make me cum,\" I gasped.\n\n\"No, no. That isn't good enough. Anything is a cop out,\" there was a pause, my mind raced, what did he want, the thought of 'anything' not being good enough, was torture. Just as I was about to sob from not knowing what he wanted, he continued, \"tell me what you will give me. What do you think I would most like? Use your words Sarah, the ones you know I want you to use.\"\n\nOh god, was he really going to make me say this. I knew I was going to do it. I couldn't conceive of not cumming soon. \"My bum,\" I whispered hoarsely, \"you can fuck my bottom. I want you to bugger me, however and wherever you want to,\" I sobbed, shame filling me.\n\nMy tears were running free now and my mind was washing out everything other than my need to cum and my need to be his.\n\n\"Good girl,\" Jake whispered to me, \"tomorrow. Tomorrow I am going to claim another room in this house and I am going to claim your arse. Maybe over the dining table where we will eat dinner later on. I'll open you up and bugger that tight little hole until you are screaming and spraying your orgasm down your legs.\"\n\nThe words alone were nearly my undoing sending a jolt down through my cunt. It had happened. It was no longer even a pussy to me.\n\n\"Please, please,\" I begged again.\n\nNothing.\n\nAnd then by clit exploded with sensation as he pressed a vibrator against it and pushed two fingers deep inside my pussy, curling them and fucking my g-spot hard and fast the knuckles of those fingers pressing against the other wall stretching me open.\n\nI can't rightly describe what happened then. There was an explosion of pure euphoric sensation between my legs as my cunt literally exploded. I know I must have squirted because my bedding was soaked.\n\nI was trying to writhe around and hump my hips, but the ropes and restraints made almost any movement impossible and the restriction just seemed to cause all the tension that was pouring out of me bounce back in again and multiply.\n\nMy mouth opened in a silent scream, the feelings in my body simply too big for my voice to deal with.\n\nI came and came, my sanity pouring out of my cunt as I started beating my head back against the pillows as my feet beat a staccato rhythm on the bed.\n\nBut Jake wasn't stopping and then added a third finger and I think I gushed some more. My tear-soaked face shaking side to side, desperate gasps wracking my throat as I came and sobbed and came some more.\n\nAfter 'hours' of this Jake pulled his fingers out and removed the vibe. I still felt like I was cumming, my cunt awash with sensation.\n\n\"Sarah,\" Jake said, \"you spoke without permission, all that begging. I have to punish you.\"\n\nMy cunt exploded all over again as his open palm crashed down on my hypersensitive, engorged pussy and clit. I was just coming down from that when he did it again and again, each strike making my cunt splash and another orgasm crush my soul a little more.\n\nEventually he stopped and I felt him unclip my left leg and then fasten my ankles together on the right of the bed. Reaching over me he unfastened my right wrist and pulled it over clipping it alongside my left.\n\nThen he was straddling my hips and holding himself above my face with one hand he pulled off the soaked blindfold with the other, his face a few inches from mine as he leaned in, kissing away my tears.\n\n\"Now,\" he said as he kissed my lips, \"I'm going to turn you over, roll up a pillow under your hips and then I am going to fuck the shit out you.\n\nOh God! He wasn't done and as wrung out as I was starting to feel I knew I would cum again and the thought terrified me....\n\nLooking down at Sarah I couldn't quite believe this was the same lovely but desperately uptight girl I knew just a few days ago. Granted I had made her orgasm before but tonight, after everything she had been through think it may have just redefined orgasm for her. I smiled to myself and thought, \"I hope I haven't just set her expectation bar too high.\n\nI gently put my hands under Sarah and encouraged her to roll over onto her front. She was a little dazed so I was doing most of that work but I was most definitely not done with her yet. As I turned and positioned her, lifted her hips slightly to push a pillow under, I smiled, just taking a moment to try and relive the last few minutes...\n\nI mean wow! I couldn't have imagined Sarah's response to what I had done to her tonight. I knew she was very on edge and sensitive, but wow! I had made her squirt a little before a couple of times and almost made her have back to back orgasms before she stopped me because she, 'needed to go to the loo.' But wow!\n\nWhen Sarah started to cum, she went rigid, her mouth opened and I was all ready to dive up and clamp my hand over it but no sound came out. What did come out though as an absolute deluge of juice, squirting out of her sodden, wide pussy.\n\nIt splashed up my arm, pulsing out with every contraction. I wanted to stick my face down there to wrap my lips around her, but I didn't want to stop what I was doing and risk stopping the sensations and wave of orgasms she was apparently having.\n\nHer orgasm(s) went on and on as I pumped my fingers in and out of her pussy, which was now making a delightful sloshing noise as it wept in delight. I pushed another finger into her as she seemed to start to come down a little and her body re-energized her head whipping from side to side and feet shaking against the bed.\n\nMy mind came back into focus at the insistence of my straining erection. I had been hard to varying degrees all day and constantly since we got in the car to come home. My cock was actually aching now, and I was slightly concerned. The problem is that when I have been hard like this for too long, I bizarrely find it hard to orgasm. I had never told anybody this, they would laugh, but this is a definite double-edged sword and not as much fun as you might think.\n\nImagine almost reaching orgasm but something is just stopping you. It isn't like an edge, more like you reach a level of stimulation and suddenly it won't go any higher and you are kind of left hanging there. It makes your cock ache and irrespective of how good whatever you are doing still feels it is almost like the ache is stopping you getting any further.\n\nGiven how long I had been hard now, I suspected this might be the case and I badly wanted, no needed, to cum. Oh well, I guess we would see.\n\nI got off the bed and pulled down my underwear my cock bouncing up in front of me like an iron pry-bar. I'd honestly never seen it looking so damn hard or big. I looked down at Sarah laid face down on the bed her feet in one corner and her arms stretch over her head to the opposite corner.\n\nSarah was looking at me. Well she was looking at my tool, truth be told with a look somewhere between salacious hunger and fear. I leaned down to kiss her and whispered, \"my turn now.\"\n\nI straightened up a little and pushed my cock towards her mouth. It was a little awkward from this position, but I was only looking to get the end a little lube and Sarah obliged, sucking my big mushroom head into her mouth, flicking her tongue around.\n\n\"No condoms tonight,\" I told Sarah, \"I want to feel you for once.\"\n\nI knew Sarah was on the pill but she had always insisted on a condom as well... Good girl and all that.\n\n\"I want to feel your wet cunt against my cock as I fuck you. Then I am going to cum as deep inside you as I can manage.\"\n\nThat was enough, I stepped back and onto the bed quickly stationing my knees either side of Sarah's thighs and pulled her hips up and back slightly making her cheeks part causing her little pucker to wink up at me and her soaked twat to open in a very inviting manner.\n\nNot wanting to turn down that kind of opportunity I leaned forward and used one hand to steady myself and the other to guide the tip of my cock into her boiling cauldron of lust. Sarah grunted as the flared head of my cock pressed against her hole and then suddenly slipped inside about two inches. I had always had to take this next part very steady, letting Sarah (or any girlfriend for that matter) adjust to my size. I gently pumped my hips back and forth a few times and found myself sliding further in with seemingly little effort.\n\nI looked down at my cock slowly sinking into and pulling out of Sarah's pussy. I'd never fucked her from behind before and my god it was a sight to behold. I suddenly had a whole new appreciation for that hard ass of hers. \"I might never want to fuck her any other way,\" I thought to myself with a smile.\n\nTaking a bit of a chance I braced myself and then in one firm, hard push I sank all eight inches of my cock into her and pressed myself against her ass. Fuck me that felt deep and hot and wet and tight. I made little fucking motions with my hips and felt my balls getting bathed in the juice slushing out of Sarah's pussy.\n\nI leaned forward and grabbed her ponytail in one hand and growled in her ear, \"hold tight, I am going to fuck the shit out of you now and it's not going to stop until my cum is oozing out of your cunt.\"\n\nI pulled back on Sarah's hair, lifting her head up and back as I started fucking. No fucking wasn't right. Pounding! I was pounding her for all I was worth, alternating between laying on top and pinning her to the bed and kneeling up and driving into her as I watched the action below me.",
        "\"Tell me what I am going to do to you,\" I demanded.\n\n\"Ugh! You're going to fuck the shit out of me until your cum is oozing out of my cunt,\" she gasped.\n\n\"And tomorrow?\" I asked.\n\n\"No, please,\" she begged, \"please don't make me say that as well...Nnnnng argh!\" I pushed as deep as I could into her wet hole and hauled back on her hair, bending her head and neck back sharply.\n\n\"Say it,\" I demanded, \"Or I'll make you shout it before I am done.\"\n\nI started making hard, full length thrusts into her as I let go of her hair and leaned forward to angle my cock down to push against her front wall dragging back and forth across her now sensitive G-spot.\n\n\"Oh fuck meeeee!\" Sarah pleaded.\n\n\"SAY. IT.\" I demanded again, speeding up a little, \"don't make me punish you some more.\"\n\n\"No, enough. Please!\" she begged, \"I don't want to say it.\"\n\nI didn't know if she was really sincere, pushing my buttons or just playing the part, either way I wasn't going to accept that and since she didn't use her safeword I figured anything was fair game.\n\n\"Fine!\" I stated as I pulled my cock out of her now gaping, wet cunt, \"let's see if we can't change your mind.\"\n\nI walked over to the dresser and picked up the remote vibrator again and laid it on the bed by her face. Then I slipped the blindfold back over her eyes and plugged up her ears with the headphones.\n\n\"Nooo, what are you doing. I can't cum anymore!\" she whined.\n\n\"We'll see,\" I thought.\n\nJake slipped the blindfold back over my eyes and sat the headphones around my ears. As my sight and hearing were once again taken away, my mind awash with emotions and thoughts I couldn't process at the moment I felt the bed move again as Jake got up. I didn't know why I couldn't bring myself to say what he asked, I mean surely I had already said as much and worse tonight. Maybe it was because saying it, in detail, in a setting I knew I would be in tomorrow made it all very real. It DID scare me after all. I mean Jake isn't exactly small down there. Even my pussy is stretched a lot when he fucks me and tonight when he was just pounding into me there, wet as I was and wide as I felt I could still feel him pressing every part of my insides.\n\nI wanted him to take me there, in the bum. To bugger me. God that word. Bugger! Just thinking it in terms of my bum made my cunt clench in excitement and fear.\n\nThen I felt him on the bed again kneeling either side of my legs, sitting on my calves and the backs of my knees and one of the headphones was removed.\n\n\"Maybe a little warming up and practice is in order for you,\" he whispered in my ear, \"give you an idea of what REALLY FULL feels like.\"\n\nThe headphone was replaced and I felt his hands slide down my back and onto my bum, rubbing each cheek firmly in circles pulling them apart and exposing, lewdly exposing me. What did he mean, really full? I WAS really full.\n\nMy answer came in three parts I was to find out as his hands left me for a moment before I left the cool drip of something oily running directly onto my bum hole shortly followed by a gentle pressure from his finger circling around and around it, teasing.\n\nI didn't know what to feel. I mean fuck, if felt good but did I really want it. I clenched on his finger and was quickly rewarded with a sharp slap on my ass.\n\nThe lube I had bought was the best on the market according to the all too fucking helpful girl in the shop. I figured I might as well do myself a favour and only buy the best. Now I was in two minds because his finger was now sliding easily in and out of my bum a couple of inches and there seemed to be nothing I could do to stop it.\n\nIt didn't feel awful. It didn't even feel bad but I am not sure if it would ever get me off and then he slid his thumb into my pussy at the same time and lightly pinched the two digits together and he slid them in and out and I started to come undone, once again starting to crest into an orgasm.\n\nThe cruel bastard wasn't going to let that happen though and out slipped the fingers to be replaced by what I assumed must be one of the butt plugs he made me buy. I wasn't sure which but it certainly didn't fucking feel like the smallest one. So, with his thumb stroking my slippery cunt and clit he worked the plug into my bum a little at a time.\n\nIt is funny the effect having something push in up there has on so many levels. I felt cheap and dirty while at the same time feeling free and excited. I wanted to tell him to stop all the while knowing that the last thing I wanted him to do was stop. I was breathing in short shallow gasps as the plug widened out and then yelped as it passed the widest point and shot inside. Fuck, it felt like I had an arm up there.\n\nBefore I was even used to that feeling Jake started to gently push and pull it a fraction of an inch. Not content with that though I suddenly felt something slipping into my pussy and as it too widened out and slid into place neatly against my clit and g-spot I realised he had just put the remote vibe back in me.\n\nThe bed moved again and I felt Jake climb off me and the bed. A few seconds later I knew why.\n\n\"Oooooooooh fuck meeeee, nooooo,\" I gasped and the vibe sprang to life against my g-spot and clit. I couldn't help starting a kind of spastic clenching against it which in turn did indescribable things to the inside of my arse, still impaled on the plug.\n\nMy hips were churning now as Jake pressed down on my ass to hold me still for a second before another explosion of feeling hit me and the plug started to vibrate as well.\n\n\"Do you know why this remote vibrator was so expensive, why I wanted it in-particular?\" Jake asked as he removed a headphone again.\n\nI couldn't answer him, even if I knew the answer and my life depending on giving it. My brain had been shaken loose by the vibrators attacking me between my legs. I knew I was going to cum and I knew it was going to be a big one. This had all been too much today. Too much sensation and too much emotion and too much Jake.\n\nI was coming undone.\n\nJake climbed back on the bed kneeling either side of my legs again and leaned down to my ear. \"I wanted it because as well as vibrating inside and outside, as well as being remote controlled, it is designed specifically so that it can be used at the same time as your loving partner fucks the shit out of your pussy.\"\n\nWith that I felt him position the head of his cock between my lips and slowly ease forward. I opened my mouth but no sound came out. He had obviously lubed up his cock because it slid against the toy without effort as it pried apart my cunt.\n\nI had too many feelings. His huge cock was trying to share space inside me with a vibrator and a butt plug both of which were completely unknown to me before today. I didn't think it was possible to feel this full and the pressure seemed to fill every part of my being. As he pushed deeper into me I could feel the tension building all over my body.\n\nIt felt like he was never going to stop going in. He felt truly massive now and the sensation beyond description. As I felt his pelvis finally press against my ass I swear I saw stars, or it might have been God I'm not sure but then the headphones came off again and he rasped \"Fucking say it\", as he pulled back and slammed into me again hard as he set about destroying my cunt with his cock and the last vestiges of my defiance with his repeated demand, \"Fucking say it!\".\n\nMy answer though was to crash head first into the biggest orgasm ever, dwarfing even the ones I had earlier. My voice tore free of my control and I howled like an injured animal, wailing incoherent sounds before Jake clamped his hand over my nose and mouth muffling the sound and cutting off my air.\n\nI learned something else new about myself just then, laying there prone and tied to the bed, filled up and cumming. When Jakes hand stopped my means of breathing it was like a bomb went off in my pussy and my clit caught fire as my whole body went rigid. Every muscle straining and flexing hard as I actually felt my cum squirting out of me and around Jake. I heard Jake gasp and groan loudly as my cunt clamped down around him as he slammed balls deep inside and came far up inside me.\n\nHis hand was still over my mouth and pinching my nose trying to quiet me but it was just making it worse and when he pulled himself out of my pussy that slight release in pressure finally, irrevocably undid me and as I came I peed. I gushed and came and shook and howled into Jake's hand with what little air I had left.\n\nWith his other hand he grabbed the plug and fucked me with it a few times before pulling it from my ass and then grabbed the vibe in my pussy and pulled it out while I was still helplessly pissing on my own bed.\n\nHe let me have some air, removing his hand from my nose but kept it firmly clamped over my mouth as I came down. I was beyond any form of thought at that moment as he leaned in and whispered gently into my ear, \"Now, be a good little girl and fucking say it or we start all over again!\"\n\n\"Yes sir,\" I breathed. It took me a while to gain enough focus to formulate any other words.\n\n\"You are going to tie me to the dining room table and then bugger me until I squirt all over,\" I whispered and then added, \"...please!\"\n\nJake\n\nWow! Just Wow. I looked down at Sarah like I had never seen her before. Maybe I hadn't because the beautiful mess tied to the bed below me was nothing like the Sarah of the past. There she laid, eyes open but unfocused, the blindfold having slipped off in her orgasmic thrashing, taking slow deep breaths.\n\nHer eyes were red and wet, the little makeup she had on was smudged all over and her nose had clearly also run. Sarah's beautifully kept hair was a complete mess, half in a ponytail and half everywhere. She had never looked more beautiful and I have never loved her or anyone or anything more.\n\nI reached down and unclipped her ankles, leaving the cuffs on there for now then did the same with her wrists. She didn't move, still laying there stretched out prone. I laid down next to her along the length of her body, ignoring the wet mess that Sarah had made of the sheets.\n\n\"I love you,\" I whispered to her, \"I love you so much. Thank you so much for trusting me and taking this chance.\"\n\n\"Hmmmm!\" she hummed into the bed. \"I never knew. Never imagined.\"\n\nSarah was quiet then for a short while as we just laid together. Then she turned to look right into my eyes and said, \"If you promise to make this kind of mess of me again, then I am yours. Forever. I want to be your good girl but I also REALLY want to be your bad girl as well. I need you to help me find my bad girl side though.\"\n\nLooking right back at her, into those big beautiful eyes that were offering me her heart and soul my own heart nearly burst.\n\n\"If you promise to always be honest with me so I never do anything you don't want, if you promise to be open and to tell me your darkest desires then my heart will always belong to you,\" I paused and then added, \"actually, I think it already does belong to you forever,\" I smiled, \"but it would be nice to get those promises out of you anyway my dirty little girl.\"\n\n\"I do,\" Sarah grinned at me and then continued, \"it feels like getting married. I just said 'I do' and I'll soon be giving you my ring.\"\n\nI had no answer to that and anyway I was laughing too much.\n\n\"Let's get you cleaned up and fix this mess,\" I suggested as I stood up. Sarah started to try and stand but dropped heavily back to a sitting position on the edge of the bed.\n\n\"My legs are like jelly. You have properly broken me,\" she groaned. Then she blushed suddenly a deep scarlet colour as she looked back at the destroyed bed.\n\n\"Oh my God, what did I do? What did YOU do to me?\"\n\n\"Well, as for what you did, you certainly squirted a fair bit but I think it is also fair to say that you pissed yourself like the dirty girl that you are. As for what I did to you, if you don't know then I guess we'll have to do it again to see if you can figure it out,\" I laughed.\n\n\"Fuck it, we can't sleep in here. Let's clear up and then sleep in your room,\" she said.\n\n\"Really?\" I asked, \"are you sure... your mum and dad....\"\n\n\"..are going to have to deal with it. Aside from the fact that there is no way they didn't hear me wailing when I came that last time, they need to understand that we are going to be together for the long haul.\"\n\n\"Oh!\" hearing those last words, like that were something of a shock to the system.\n\n\"Well, when you put it like that then I guess so. Not sure how I will be able to look your mum in the eye again though if she heard that,\" there was definitely going to be a few awkward looks!\n\n\"I know,\" she said, renewing her blush, \"at least I know they won't say anything about it. I think they'll just try and pretend nothing was heard. I am just pleased Emma isn't home this weekend.\"\n\nI looked at her and grinned my best dirty grin. Emma is Sarah's slightly younger sister. I didn't see her that often and we got on well enough but Sarah had a real stick up her arse about any kind of flirting or chat between us. I had no idea if there was history between the two of them and boys or if something had been said between them about me but suddenly the idea of making Sarah scream in passion when her pretty sibling could hear was high on my list of punishments to mete out in the future.\n\n\"Whatever you are thinking, stop it. You'll have to make do with one dirty girl from this family,\" Sarah stated tartly, \"come on, help me up\".\n\nI pulled Sarah up from the bed pulling her in close for a hug as I turned her and then sat her down on the chair by her dressing table.\n\n\"You take it easy gorgeous, the least I can do is clean up.\"\n\nI set about clearing up the room, throwing the toys in a bag before stripping the bedding off. Fortunately, Sarah has a mattress comforter over the mattress itself and this appeared to have taken the brunt of the damage so I stripped that as well and turned back to Sarah.\n\nShe was sat slumped in the chair with her legs wide apart gently and carefully touching around her pussy and arse. She saw me looking at her and smiled, \"you really did a job on me. I'm so sensitive that it feels like I might still come if a stiff breeze hits me but it's so intense, I can hardly bear to touch it.\"\n\n\"Well if you keep doing that in front of me there is every chance I'll take that choice away from you,\" I said deliberately looking down at my slowly enlarging cock.\n\n\"Stay away, this pussy is out of service for the rest of tonight,\" she laughed.\n\n\"Maybe I'll make use of that pretty mouth of yours then. Come on, let's get you into bed. You are going to need some rest before tomorrow.\" I moved over and picked up Sarah out of the chair, holding her laid in my arms.\n\n\"Get the door\" I said as we left her room and the smell of sex and what not behind us for the night.\n\nI started to wake slowly pressed against Jake with my head nestled into his shoulder and my arm draped across his chest and one leg over his thigh. I was naked, and I was gently grinding my hips against that leg. My eyes shot open in realisation. Shit! We were at my parents and I was in his bed and... Oh God! My room. Shit. Shit. Shit.\n\nI looked up and saw Jake looking down at me, smiling slightly as he lifted a finger to brush a few stray hairs out of my face.\n\n\"Calm down,\" he whispered, \"I fixed your room last night after you fell asleep while I was still carrying you in here. The toys are put away and the bedding is already through the laundry.\"\n\n\"Fuck!\" I said out loud, \"what did you do to me last night?\"\n\n\"Well, WE did many things but mainly I think you learned a few new things that you might like,\" he laughed, \"and, judging by the way that you are still rubbing my leg down there you might be looking for more perhaps?\"\n\nI went rigid and I swear I could actually feel my face, neck and chest going scarlet as I realised I was still slowly humping his leg like some kind of a bitch in heat. What was happening to me?\n\n\"Look at me, Sarah,\" he said quietly but firmly. It took every ounce of control I could muster to drag my eyes up to meet his.\n\n\"Last night was the most amazing experience of my life. It was like the universe suddenly coming together and making sense to me and it did that through you. I can't say for sure what you are thinking or how you really feel about it and about us and this path we are going down but I think it did for you as well. I want........, no I need you to know though that nothing you did last night changes who you really are, the kind of person you really are. I think you just got to see what has been hiding inside, not allowed out because you have been trained to be something else.\"\n\nI couldn't look away now and I could feel tears welling up in my eyes. I tried to speak but my throat was too tight to form sounds. Jake smiled and used the arm I was lying on to pull me up a little so our faces were only an inch or so apart then he leaned in and kissed me and it felt like the first kiss I'd ever had all over again.\n\nWith his arms wrapped round me we kissed and I cried and poured all my love and life and lust into him. As he squeezed me tighter to the side of his hard chest I realised that my traitorous hips had started grinding again, having found the very useful ridges of Jake's hip bones.\n\nWithout saying anything I swung my leg fully over him and positioned myself over his erection and slowly sank down, never once breaking the soul expending kiss we were sharing. Fuck, my pussy was still so sensitive I thought I might cum before I bottomed out. Our hips moved slowly together, synchronous and sinuous as he shared ourselves with each other through our open mouths.\n\nI was close to cumming when we started and soon felt myself reaching the point of no return. I was perhaps a few seconds away when I remembered, \"Please, sir. May I cum?\"\n\nJake looked me right in the eyes and just said, \"No\".\n\nHe grabbed me round the waist with one arm and used the other to flip us over with him on top as he drove down into me. \"You don't cum until I do.\" With that he leaned down again and captured my mouth as his hips worked hard, pounding into me, making embarrassing, wet sploshy sounds and my pussy, with a mind of its own, wept for joy.\n\nI was clutching the sheets at my sides now, desperately fighting back an orgasm when he undid me completely. Pushing himself up on his arms and pulling away from me Jake drew his knees under him and wide apart. Then sitting upright he pulled my hips up onto him leaving my back arched down onto the bed as he sped up his thrusting. Only now, the angle had changed and the head of his big cock was dragging back and forth across my G-spot.\n\nLooking right into my eyes he said, \"no cumming without permission,\" as he pressed a thumb against my clit and rubbed it hard and fast.\n\nI didn't even have time to ask. I was cumming and I was cumming hard and I was gushing again. Where did I even have this much liquid to spare? Then as I was starting to come down I felt him swell inside me and he started to grunt, breaking his rhythm as his hips jerked. For the second time in my life the inside of my pussy was painted white and the thought of it along with everything else kicking me back over the edge.\n\n \n"
    ],
    "authorname": "diusfidus",
    "tags": [
        "bdsm",
        "denial",
        "edging",
        "first times",
        "love",
        "reluctance",
        "squirting",
        "tease",
        "toys"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/are-we-who-we-think-we-are-pt-01"
}