{
    "title": "The Choosing Ch. 03",
    "pages": [
        "Hatha looked down at me and shook her head. \"Dry your eyes Mistress. He has returned.\n\nRoth.\n\nMy heart both sang and sank with that one word.\n\n* * * * *\n\nHatha bathed me with special intent. This time with helpers. I sat in the copper tub surrounded by a cloud of black gowns. There were only four but it felt like so many more, their presence darkly omnipresent. With their starched winged caps and wide inky skirts they moved like a flock.\n\nOf bats, not birds.\n\nThey washed me, my hair and my body. Working as a team they held my legs and shaved them of all hair, as they did my underarms. After I had been bathed, shaved, scrubbed and scented I was pulled from the bath to stand. Foolishly I had thought the process over and that I would be clothed, but of course there was more to come. Hatha approached me with a straight edged razor and an evil gleam in her pinched eyes. I flinched, attempted to step back but was held by three sets of hands.\n\n\"What are you doing?\" I gasped as I watched the silver gleam of the blade edge.\n\n\"What the Master requires.\"\n\n\"What does he require with that?\" I asked pointing at the razor.\n\nShe spoke not to me but the other women, \"Spread her legs.\"\n\nTwo went down to hold my legs, rough fingers biting into my thigh and calves. The other woman, a brutish beast at least twice the size of Hatha came behind and wrapped her ham hock arms around my body, holding me in a vice like grip. My arms trapped I gave a futile attempt at freeing myself. The more I struggled the harder she gripped.\n\nMy heart raced, thumping hard against my chest. Though my soul screamed out to struggle, to escape instead I submitted. I stood mute and still. I was trapped. I had no choice. Logic had to prevail.\n\nHatha went down on her knees. She threaded her fingers through the thatch of golden curls between my legs and pulled hard. I bit back a gasp, a flush of shame rolled across me as I felt my sex become wet at the painful tug.\n\nShe knew. Even without a gasp or moan to betray my want. Hatha knew. She tugged again and I heard her murmured chuckle.\n\nShe grasped the hair tight and ran the razor under her grip cutting off clumps of hair. Pulling on each lip she repeated the process until all that remained on my sex was a spiky fuzz. Then she reached into the tub and pulled out the soap. Lathering my mound, she dug her fingers into the pubic bone, rough circles at the root of my pleasure until I moaned. When what remained of my hair was soaped into a thick lather she started to scrape the sharp blade across my skin. The feeling of the metal edge shaving over my taut flesh was enough to make my knees fail.\n\n\"Hold her tighter,\" came Hatha's command and the beast that held me gripped tighter, her meaty fists wrapping around my wrists. I moaned at the brute force. I pressed back into it. To my shame the constriction was exciting. The binding added to the wanting. I struggled again just to feel the tight press of her hold. Hatha worked in slow devastating strokes over my mound and across the slippery lips of my sex. When she finished she wiped the exposed skin with a hot cloth. I was relieved until I heard Hatha's barked order, \"Turn her over.\"\n\nThe brute twisted me around and forcibly bent me at the waist. The two at my legs spread me wider. One of them stood and placed her fingers wide on my buttocks.\n\n\"No,\" I said, even as I knew I could not stop what was to come.\n\n\"Yes,\" Hatha said and I did not have to see her face to know her glee. I heard the evil smirk in her tone. The hands at my arse spread me wide. The brute held me tight around my bent waist, holding almost all my weight. Hatha lathered between my arse, soft slippery fingers probing at my most private place. She worked the razor quickly, scraping the hair with intent. Water washed over the bare skin, but she was not done. After the lather was gone in its place came warm oil. First dripped down the darkened crevice and then massaged on the puckered opening that nestled between. Fingers slipped in circles and then dipped in the softened hole. I didn't want to, but I rocked back into those fingers. Slick with warm oil they worked deep inside a place I did not know they could. Dark pleasure surged through me; my nipples beaded hard, my sex\n\nclenched as did my arsehole around those wicked fingers. I was close, so achingly close to release...when she stopped.\n\nThe brute helped me to stand. My legs shook with unspent release. I ached. The hands that came to rub across my body with glittering oil did not help with the wanting. Four sets rubbed, teased, tweaked and played bronze oil across the canvas of my skin.\n\nAfter I was oiled Hatha dressed me. A sheer black chemise inlaid with silver thread. I waited for the dress to cover me, but it did not come, only a silver corset that was bound tight to plump out my breasts.\n\nShe did not bind my hair this time but instead worked it with scented oils and hot tongs until it curled with wild abandon. Fine curled silver ribbon was fixed into the curls, so sheer it seemed as if it could be my own hair. The silver made me think of him. The Silver Master. Lust, guilt, longing and fear threaded through my very soul at the thought of him.\n\nHow could I think of him when finally my Master had returned?\n\nHatha came before me to paint my face. I closed my eyes as she swept deep black kohl across the lids. She worked for some time on my eyes and brows, with many different colors and brushes. My lips she left unpainted, just covered with a quick swipe of scented oil.\n\nShe had not touched me for a moment, but I could feel her breath close on my skin so I opened my eyes to see what she was doing. She was staring intently at the small round mark at the base of my neck.\n\nWhere the Silver Master had pierced my skin.\n\nShe placed a finger at the mark and pressed hard until it hurt.\n\n\"Have you been cutting yourself Mistress Chosen?\" she asked.\n\n\"Yes,\" I lied, \"I have missed his bite.\"\n\nHatha looked deep in my eyes. I drew on every trick I had ever known to keep my face calm. She nodded as if accepting my answer.\n\n\"Do not do it again. You skin is his alone to mark.\"\n\nI felt a flash of anger at her words. I looked away so as not to show any emotion.\n\n\"Come now,\" Hatha said, holding out her hand, \"He will be waiting.\"\n\nAnother surge of anger rushed hot at her words. He waited? What about how I had waited?\n\nMy anger kept up hot and hard as I stalked through the halls with my bat-like entourage. It built with each click of Hatha's boot heel in front of mine. I did not even know where I was going. I was just a pet to be dragged around at his whim.\n\nHatha stopped at red lacquered doors. Impressively large they were easily wide enough for us to enter four abreast. Four guards were stationed at the entrance. Two opened the doors and the others announced our entrance with a volley of sound from long trumpets.\n\nI stepped inside, nudged from behind by Hatha's hand at the small of my back. The room was a suite. Like my own but much larger, much grander. Five of my own generous room could've easily fit into the chamber. At a brief glance I saw four couples, one I knew straight off, the brother and sister that had been at my Choosing. The brother did not meet my eyes, instead raked a hot look across my body settling at the juncture of my legs.\n\nI fought the urge to cover myself. Instead fueled with righteous anger I pulled my shoulders back and my chin up. I heard a laugh. His laugh. I turned and all melted away. All anger, all the other people. Everything.\n\nRoth. Roth. Roth. The name pounded through my veins.\n\nHe came forward. Arm outstretched. I swayed. Hands came to my waist. Hatha? They pushed at my hips forcing me down, but I did not succumb. I would not meet him on my knees. I did not know why it mattered. But it did.\n\nI will not meet him on my knees.\n\nI took a step forward. Out of Hatha's grasp. I stood tall. I did not hold out my hands to him, I did not take his offered hand.\n\nHe laughed again. The sound rippled through to my very bones made me liquid but still I refused to kneel.\n\n\"My Chosen,\" he said and went down to his knees before me, \"How I have missed you.\"\n\nHis mouth nestled at my sex, his arms around my knees, hands on my buttocks. He kissed my newly shaved mound through the sheer fabric and I moaned. A keening sound of desperate need, it started at the base of my spine and rolled up my body to issue from my mouth almost in song.\n\n\"Yes,\" he murmured. His tongue came forward to lick through the chemise. To taste. I pushed my mound into his mouth, struggling to spread my legs and mount his face.\n\nHe laughed again. His hands left my arse and slid down my ankles. He stroked up the sides of my legs, drawing up the silver shot fabric up as he did. I closed my eyes and reveled at the rightness of his touch. The silky chemise dragged across newly shaved sensitive skin, cool air brushed my bare sex as it reached my hips exposing me. His big hands held me tight at the hips, crumpling the chemise in his fingers.\n\nI spread my legs wider for him. Hot and wet his tongue came, first to sweep along the shaved seam and then up to my clitoris. I sang out in pleasure as his lips pursed to suck at my center. I rocked into his mouth, my hand coming down to fist fingers in his dark hair. Fingers woven tight in his hair I pushed him at my mound. He sucked me to my release and as I knew he would, the moment my clenching spurts came he bit down, piercing the skin with a growl. My blood and cum ran hot gushing into his sucking mouth. I threw back my head unable to contain the surge of pleasure that rocked through me at the feel of his bite. I cried out. Loud wails that seemed to bounce off the walls and echo through the room.\n\nAs the waves subsided I opened my eyes, first looking down to watch his lapping tongue clean my bitten mound and then up to gaze blurry eyed across the room. Through the fog of pleasure a flash of silver caught my eye. Shocked I opened my eyes wide and focused. He was here. Against the wall. Body slumped in a deceptively easy pose he watched me, but his eyes, his eyes burned black and silver. Hot and angry. I gasped.\n\nAt the sound Roth released me, I fell back against rough hands. I knew at once they were Hatha's, her spiteful voice murmured in my ear, \"You should have just knelt.\" I struggled out of her grasp. I pulled my chemise down, not that it covered much. My hands shook.\n\nThe sister who had been at The Choosing came forward; she bowed low and then reached up to kiss Roth, first on each cheek and finally deep on the mouth. I watched her tongue sweep across the seam of his lips licking at the remnants of my blood.\n\nRoth laughed at the moan she gave at my taste and pushed her away gently, \"Astrid,\" he chastised without any heat in his voice, \"that's enough.\"\n\n\"Yes my Prince,\" Astrid said without contrition, bowing once more.\n\nHe swept a heated gaze across the assembled crowd. With deliberate slowness he met each face. It came to me as I watched him what Hatha's poisoned murmur had meant. Triumph shone in his eyes as did a challenge, see, this is mine it seemed to say. For all my protestations at not wanting to kneel I had done it anyway. My submission riding his face like a wanton was far more complete than if I had knelt and kissed his feet.\n\nShame coursed through me at my weakness. I hung my head and closed my eyes as Hatha's soft laugh echoed from behind. My realization had not gone unnoticed by the malicious crone.\n\nAfter he had completed his triumphant viewing of the assembled group Roth turned back to me, he held out his arm and this time I did not protest, I took the offered hand. He pulled me close his arm clasping tight around my waist.\n\n\"My Prince, what news?\" The brother of Astrid, the one who had been at my Choosing asked of the Prince after an elaborate bow.\n\n\"Outlying unrest continues,\" he said quietly scanning the room as if concerned who was listening, \"now is not the time Valco. We'll discuss this later.\"\n\n\"We did not expect you for some time Sire,\" Astrid said, \"until the Claiming. Did Queen Beatrix call you back?\"\n\n\"Yes,\" Roth answered first looking pointedly at me and then back at both siblings, \"Again we shall discuss this later.\"\n\nHe did not wish to speak in front of me. It was obvious and humiliating. I was to be fed information in child sized bites. Not to be trusted, like an infant or a servant. I opened my mouth to speak but saw Hatha shake her head and mouth an angry, \"No!\"\n\nQuestions I had not even the right to ask burned within me. What was the Claiming he spoke of? Was Roth to claim a wife? If so then what would become of me?\n\nIf under the evil eye of Hatha I would not have the opportunity to ask I decided to gather information the best way I knew how. I pretended passive disinterest in their conversation. It took some time for Hatha and the others to forget I was there. They spoke of trivial social gossip, scandals of names I did not know. People came forward to be presented to the Dark Prince. Curiosity itched within me but I did not even make eye contact. I stayed snuggled into Roth's side as if simply content with him.\n\nI knew when I heard Roth dismiss Hatha that the time had come to listen.\n\nThey spoke of regions of Vandarra I had not heard of, newly acquired provinces that were under marshal rule. Roth was unhappy with the unrest; while he did not speak poorly of the Queen it was clear that he was concerned with the current direction of the Crown.\n\nTheir conversation was political and complex. I had some difficulty following and after a while my disinterest was no longer practiced but real. I was bored. None of it seemed to pertain to me or The Claiming they had spoken of until Valco said, \"I should warn you Sire that there has been some talk of The Vessel.\"\n\nI did not know what Valco spoke of but I realized it was important when Roth jerked to attention. He tensed and brought me tight against his body. Perhaps I would have dismissed the comment as yet another political thing I did not understand if they had not all turned their eyes to me.\n\nThe look was brief, but it was loaded. The Vessel had something to do with me. I was sure of it.\n\n\"Who?\" Roth asked his voice low and vibrating with dark emotion.\n\n\"Lord Malchard.\"\n\nI knew that name, he was Queen Beatrix' Chosen advisor. I had heard my uncle mention him.\n\n\"I do not believe they know much yet but they are asking,\" Valco said, leaning in closer.\n\n\"I will see what I can find out. We will meet at the usual time.\" Roth released me, his arm sliding from my waist. He brought my hand up to his lips but did not meet my eyes.\n\nAstrid and Valco bowed low as he departed.\n\nI felt the loss of his touch like a physical blow. My chest hurt, I was momentarily winded. Astrid took my arm as if she knew what I was feeling, I looked up at her in question. \"The Master has things to attend to. You will stay with me.\"\n\nIf I had been able to breathe easily I would have protested. Why did it hurt so that he left?\n\n\"Beatrix wants The Vessel,\" Astrid whispered to her brother.\n\n\"Not Beatrix. Malchard.\"\n\n\"He is mere Chosen he cannot take from The Vessel...\"\n\n\"But Beatrix can,\" Valco interrupted his sister, \"And Malchard controls Beatrix. We know that Astrid.\"\n\nWith Roth gone and me so obviously dazed Astrid and Valco were no longer so circumspect in their conversation. I remained limp in Astrid's arms even after the pain of Roth's loss had subsided.\n\n\"Is he sure that she is...\"\n\nValco reached out and clamped his hand across his sister's mouth. He smiled but it was all for show, there was no humor in his voice. \"Do not question him sister. And...\" he gave a pointed look at me before finishing his sentence, \"watch your words.\"\n\nHe slipped his hand from Astrid's mouth and stroked his fingers across my cheek. The touch revolted me. His eyes rimmed black as he spoke, \"Aaah, Mistress Chosen. What I would do for just a little taste.\"\n\nAstrid chuckled, the sound vibrated against my side where she held me tight to her body. \"The time will come brother. Be patient.\"\n\nValco leaned in and breathed deep into my hair. I flinched. He laughed. I did not want his touch. Astrid spoke of him tasting me as if it were pre ordained. Was that at Roth's order? Was I to service his followers? Anger ripped through me, flashing hot under my skin.\n\nAstrid released me so she could lean in and clasp her brother. He kissed her deeply, more deeply than I thought a brother should. She stroked a hand over his hair and said softly, \"Be careful my brother. I will see you at the meeting.\"\n\nValco nodded. \"At the break of dawn.\"\n\nAfter Valco had gone Astrid turned to me. \"Mistress Chosen you must be parched.\" She raised a hand and in moments a servant appeared with a goblet. I took it from the server brought it to my lips but did not drink. I did not trust her. Trust anyone.\n\nExcept...\n\nAs I pretended to drink I searched the room for him. He had moved from the wall. He was standing with a woman, his arm around her waist. I hated her touching him. What right did I have to that feeling?\n\nHe met my eyes. A silver brow raised. I noticed then how he stood out from the others. How his silver hair shone bright amongst the shades of black.\n\n\"Who is that?\" I asked Astrid, confident that she would just think I had noticed the difference.\n\nAstrid sneered, \"That is of no consequence.\"\n\n\"Who is he? Is he a Master?\"\n\n\"He thinks he is. He's half-caste. A pretender.\"\n\n\"Half? \" I wanted to know more but Astrid raised her hand and I knew she would share no more. I gripped the wine goblet. It sloshed in my hand. Spilling red wine on my hand staining the skin red.\n\nThe Silver Master approached. My heart kicked like it had for Roth. A dark seductive tug as if he'd leashed me and pulled hard. What was this connection? The first time I felt the pull I figured it was because he was a Master, but here now I was in a room full of Masters none of them pulled at me like Roth or Silver Master.\n\n\"Astrid,\" his dark honey voice made me want to taste him.\n\n\"Nadar,\" she sneered in return.\n\nI could not help the smile.\n\nI knew his name.\n\nFinally.\n\n\"Nadar,\" I laughed softly and they both turned to me. Affection in his eyes, questions in her.\n\n\"Roth's Chosen,\" he said, bowing low, \"I am honored to meet you.\"\n\n\"And I you Nadar,\" I said offering him my hand. Still bent in a bow he took my offered hand turned it over pressing a kiss to the inside of my wrist. I shuddered as he flicked his tongue across my pulse point.\n\nAstrid grasped my elbow and pulled my hand from him. \"That's enough Nadar,\" she hissed, \"It is time for her to leave.\" Astrid turned away and bellowed, \"Hatha!\" In the moment she was turned I leaned into him and whispered, \"What is The Vessel?\" His eyes widened at the question. Before he could answer Hatha was at my side, taking my arm from Astrid.\n\nI still gripped the near full wine goblet. Nadar eased it from my clenched fingers. He turned it in his hand, rotating the goblet he brought it up to his mouth. He did not drink as I expected instead he breathed deep inhaling the bouquet. His eyes faded to black and he deliberately licked the rim where my mouth had been.\n\nThe sight shot hot pleasure to my core. I wanted that mouth on me.\n\nHatha pulled on my arm, I resisted, stumbled and fell to my knees. Nadar was the first to help me up, \"Read The Key,\" he murmured in my ear.\n\nThe Key. The book I had thrown under my bed.\n\nI had forgotten. I would read The Key. Find The Vessel. Find my own answers.\n\n* * * * *\n\nLove the comments and feedback. (And the votes, I'm a shallow and vain creature who desires proof of your affection) I'd love to hear what you think, please let me know how Talia and I are going with the tale. Thanks again to Pacofear for saving Talia from a seires of random gropings and keeping her 'real' and Gatorhermit for his readings and advice. Those boys are very cool.",
        "Sorry it took so long to post this chapter. I was a big doofus who twice submitted it formatted incorrectly. (sorry editor people) If you'd like to be kept informed of when the next chapter appears you can contact me via feedback with your email and I'll put you on the list.\n\nxxx "
    ],
    "authorname": "darcysweet",
    "tags": [
        "horror novella",
        "supernatural novella",
        "supernatural"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-03"
}