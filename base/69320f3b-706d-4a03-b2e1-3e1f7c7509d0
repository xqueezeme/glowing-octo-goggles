{
    "title": "Incubus Pupa Ch. 09",
    "pages": [
        "Disclaimer: All character engaging in sexual activity in this work of fiction are 18 years of age or older.\n\n**************************\n\n\"Master, why do my character's breasts bounce for so long when I jump like that?\"\n\nIanthe was lying nude across my lap, her luscious chest squished into my thighs while we played a friendly game of Street Fighter on the game system I had brought over. I needed practice if I wanted to have any shot at competing with Ella this weekend, and I figured it'd be a good bonding experience for us, regardless. \n\nHer character did little more than jump repeatedly and throw out some ill-timed jabs, none of which connected. She was trying to make an effort to listen as I explained the controls, but she didn't have the knack for it. Her dark, silky hair spilled out across my bare legs, tickling me while fluids from our recent sexual encounter dried on her back. \n\n\"That, my lovely Pet, is the video game magic of 'breast physics', and it is a critical part of all Asian game design,\" I said very seriously. \"In fact, many games have been known to make it a central part of their art direction.\n\n\"The good ones do, at any rate,\" I said under my breath, focused again on the game.\n\n\"Oh, Master, you joke with me,\" Ianthe scoffed.\n\n\"Happily, I do not.\"\n\n\"Truly? Hmm, I wonder if they could use a model with large breasts to more accurately simulate motion physics. You seem to like my breasts; maybe I could be their model. It would please me greatly to know you're playing with my body each time you enjoy this game.\"\n\nI chuckled, giving her a light swat on the rump.\n\n\"Now, now, Pet. You know how jealous I would be if you ever let another man see you naked. You are mine and mine only. Only I may see these lovely tits,\" I said, caressing the soft bulge where her chest squished into my legs. \"Don't forget it.\"\n\nShe beamed up at me. \"Mmmm, Master. You say the sweetest things.\"\n\nTruthfully, being her master was thrilling, but it was a responsibility that I took very seriously, and I was learning that it could be a demanding job. She'd given herself to me, and I was determined to be the person she needed; as I'd promised. Simultaneously, I wanted to have true intimacy with Ianthe, and I questioned my ability to get it with our roles so defined. It'd been almost two weeks since I'd bonded her, and we'd fallen into a nice rhythm as master and slave since then, so I deemed us ready to add a new layer to our relationship.\n\n\"Ianthe.\"\n\nShe looked up at me with concern, obviously puzzled at hearing her name.\n\n\"Y-yes, Master?\"\n\n\"Don't worry,\" I soothed, \"you're still my sweet girl, but I want to know the other part of Ianthe as well. The one up here.\" I tapped her forehead. \"The woman that graduated from the Ivy League ahead of her class. \n\n\"When we're relaxing like this, you may call me Adam, and I will call you Ianthe. But when I address this part of you,\" I tapped her breastbone, \"you know how you must act. You'll feel the difference.\"\n\nShe returned a radiant smile. \"OK, Adam. But, if it pleases you, call me Ia.\"\n\n\"Hmm...Ia,\" I mused. \"How lovely. A fitting name for my pretty Adriatic flower.\"\n\nShe mewled at my praise, nuzzling my thigh in pleasure. \n\nIanthe's character finally managed to walk across the screen to mine, but I sent her sprawling before she had a chance to get in more than a light kick.\n\nShe laughed at herself. \"I'm horrible at this game!\"\n\n\"Nonsense! You just started playing! I bet you've never played up a video game in your life. With a little practice, I'm sure you could pick it up.\"\n\n\"Oh, don't misunderstand; I don't care if I win! But this game is a part of your childhood, so it's important to me. I want to know everything about you.\"\n\nI smiled indulgently, giving her a squeeze on the back of the leg. \"Pet, I'm feeling a bit parched. Grab me something cold.\"\n\n\"Of course!\" She scrambled to comply, running to the fridge to grab me my favorite frosty microbrew. At her request, Ianthe's admin had called me to inquire about my preferences when it came to foods and beverages. She'd informed me that her boss would be picking them up personally on her way home from work in preparation for my visit that evening. I tried to imagine how the folks at 'Jimmy's Discount Liquors and Sundries' had reacted to my Greek goddess gracing their aisles.\n\nI was still turning off the part of me that felt shitty about acting like a chauvinist pig, knowing the truth: she lived for this. To please me brought her joy, and I wanted that just as much as my own happiness.\n\nIa's nude form strolled through the doorway, a dark brew with thick head in hand. I watched as her sinuous form swayed in, hips rolling. I was one lucky S-O-B.\n\n\"Thank you, Pet. Truly, you are a prize without measure.\"\n\nIa beamed, handing me the drink and sitting down next to me to snuggle up to my seated form, worming her way into my embrace.\n\n\"I have to admit, it's hard to imagine the person I'm speaking with now as the same woman I saw yelling at her team on the phone a couple of weeks ago.\"\n\nLaughing nervously, her eyes drew downward. \"I'm getting that under control...thanks to you.\n\n\"I feel like I'm addicted to you, Master. With you around, I can finally be...free. Myself. I'm grateful for you...Adam.\" She said tentatively, glancing at my face to see if she'd been too bold with the use of my name.\n\n\"And I'm thankful for your devotion, my sweet Ia.\" I responded, smiling warmly before continuing, \"As long as we're chatting like this, I want to discuss the situation with my other ladies. I've intimated before that I want them to come live with me here, so I'd like to continue speaking with Ia for a moment. I want to know how you feel about your bond sisters coming into your home. Certainly, that must be a lot to process.\"\n\nI had told Ianthe about my nature as an Incubus. As well-read as she was, she seemed to understand intuitively that it meant I would not be exclusive with her. That didn't mean that she had truly internalized it, however, so I was anxious to turn over the rock and discover what lay beneath without our roles getting in the way.\n\nShe looked pensive, gazing deeply into my eyes as if to reaffirm that I wanted unvarnished sincerity. \"Truthfully, Adam, of course I'm not thrilled with the idea of having other ladies around the house I've worked hard to obtain, vying for your attention. But you're my master, and I take that very seriously. I have complete faith in your decisions. I'm not lying when I say that I want to make all your wishes come true. If this is something that you need, then I want to make it a reality, for your sake, if not my own.\"\n\nI had been carefully monitoring her life pattern as a form of makeshift lie detector. Ia radiated nothing but honesty, so I supposed I could be satisfied with that. Even with my Incubus nature smoothing things over for me by making her more amenable to my demands, what I was asking of her was a tall order, so I was expecting pretty much what I got. Essentially, \"of course I'll comply, but don't ask me to love it.\" Something inside still made me think that this wasn't going to go quite as smoothly as advertised, however.\n\n\"I'm glad to hear that, Ia. Don't worry, my Treasure, we'll go slowly. I don't want this to be a hardship for you. After all...\" I said, looking down at her, \"I can't have my good girl acting badly with her new sister bonds. I'd be very displeased if you make them feel less than welcome.\"\n\nThe dark-haired woman's head tilted downward, her puppy dog eyes regarding me.\n\nIa properly warned, I continued. \"I'd like to pick your brain about how to handle a situation with one of my ladies.\" \n\n\"Oh?\"\n\n\"Well, to be fair, she's not technically mine yet, but she's...special to me. We've been close a long time.\"\n\nIa slowly nodded in understanding. The little vixen smirked. \"Let me guess; Master is in the friend zone with someone he'd like to become more with. Perhaps even...\" her eyebrows rose \"make into one of my bond sisters?\"\n\nI was too distracted by my thoughts to take the bait, so I simply nodded.\n\n\"Well then, it's simple. Invite yourself over for a chat, use some of those magic powers you have, unzip your fly, and tell her to get on her knees and suck. She'll be begging for more in no time, just like I was.\"\n\n\"No!\" I said, smacking her ass. Hard. Man, did I love to watch those tight cheeks jiggle. A waft of her scent followed as she gasped, turning sharply to look at me, pink-faced with a spike of desire in her eyes. \n\n\"Master, your slave begs forgiveness. Please punish her to show her how she's wronged you.\" Lifting her back end from my legs, she brought that shapely peach within convenient striking distance. \n\n\"You'd only enjoy it...\" I murmured, still thinking about the topic of Ella, but giving Ia a couple more firm swats on the rump to appease her. She panted, but I had moved on. \n\n\"No, I won't use my powers on her. I need her to come to me of her own accord. To be honest...\" I paused, realizing that, despite how new our relationship was, I felt I could trust Ia deeply. Maybe this bond acted both ways.\n\n\"I'm not a hundred percent comfortable with this mind control thing. I'm able to admit now that it was an early fixation of mine, and certainly a way to satisfy my needs, but it still doesn't sit right. Especially with Ella.\"\n\nIdly, I stroked my chin as I considered. \n\n\"That's because you're a good soul, Adam.\" \n\nThat drew my attention. She sat up and riveted her gaze upon me. \"You care about us. I know it sounds trite, but it's not. Don't get me wrong, I fully recognize the absurdity of receiving reassurance from someone subconsciously devoted to your will regarding their willingness to be devoted to your will, but chew on it for yourself for a moment. \n\n\"You've said it before; the bond isn't slavery. It won't make us love you if you were to mistreat or abuse us. Rather, it seems to take your regard for us, amplifies it, and instills those feelings in each of us, reflecting them back upon you.\n\n\"When you made me yours in your bedroom that night not long ago, what did you desire?\" She paused to let it marinate.\n\n\"I suppose, if I'm completely truthful, I thought you were one of the most beautiful creatures I'd ever beheld, and I wanted to make you mine. ...aaaand now that I say that out loud, it sounds pretty fucking horrible.\" \n\nShe smiled, stroking my calf, \"And the fact that you can recognize that, at least in terms of the moral dogma of the society in which you've been raised, is laudable, but there's more here that I don't think you're seeing.\"\n\n\"Well, what do you mean? You mentioned mirroring emotions; unless you desired to possess me in return, I'm pretty sure we've found the flaw in your theory.\"\n\n\"Ahh, but not necessarily.\" Ia retorted, finger raised. \"To possess something is an act, not an emotion, is it not?\n\n\"Just think of all the ways one might feel about possessing something... Covetously, jealously, sure; but what about lovingly? Devotedly? Can't one cherish a possession? Value it? Want for its wellbeing?\n\n\"These are the emotions I believe you felt that night as you took me...\"\n\n\"You feel guilt at the notion, but I'm trying to make you see that this is nothing more than your due. That my bond sisters and I are happy to be possessed by you.\"\n\nThe olive-skinned beauty sat up to take my hand in hers, placing my palm on her breastbone.\n\n\"I feel your regard for me here. As a wife might feel a devoted husband's care, I know beyond doubt that you will never hurt me. Not because you can't, but because it's not in your nature. I've seen that your powers help you parse out what I'm feeling, but the bond works both ways, because it's also given me a sense of the person you are. \n\n\"But it's this devoted care, not possession, that I feel for you in return, and why I feel only confidence and safety in giving myself to you without reservation, my Adam.\" Her verdant eyes sparkled, making plain the truth of her words. \n\nI decided then that I loved the sound of my name on her tongue, and would encourage it whenever circumstances allowed.\n\n\"Hmm, you've given me a lot to think about. Thank you, Ia.\n\n\"But about the topic at hand -- Ella. Truth to say, we used to be best friends. At least, that was how it was growing up, but now... Things have been...off, for some time.\"\n\nFor the next twenty minutes, I laid out in detail how Ella and I had come to have a falling out, how much she meant to me, and even how I resented myself about pushing her away over the last several years. Ia just absorbed it all.\n\n\"...so that pretty much brings us to this weekend,\" I concluded, bringing my account of our relationship into the present. \n\n\"So. What do you think? Any advice?\"\n\n\"Well...personally, I think you should let go of this silly, stubborn reservation about using your power on her and just make her yours. Take her now and end her suffering, or don't, and prolong it. In the end, the result will be the same.\n\n\"But if you insist on 'playing it straight', then this could take some time. Based on what you say of your recent chat, you need to work on restoring good faith with her.\" Ia chewed on her lip and stared absently in the direction of the extravagant home theater setup in front of us, absorbed with her thoughts.\n\n\"So that rules out any kind of overt gesture. Flowers, gifts, things like that. Anything that could be perceived sexually or romantically.\"\n\n\"Hmm, good point.\" I tapped my lip with a fingertip.\n\n\"To truly desire a romantic relationship with a man, a woman's needs are non-trivial. It's more than just chemistry and social compatibility; we need to respect and trust as well.\n\n\"What you've told me of Ella shows me that compatibility has never been an issue, and unless she's a closet lesbian, your overwhelming machismo should take care of the chemistry, too.\" Her lips curled into a smirk, and I laughed.\n\n\"So that leaves respect -- and by that, I mean respect for you as a man -- and trust. Given how you conquered me, I do not believe respect will be an issue,\" she winked, \"So focus on trust.\n\n\"It sounds likely that she experienced some abuse in her past, so part of building that trust could mean downplaying your sexual...magnetism.\" Her fingertips kissed the defined ridges of my abs, trailing lower.\n\n\"I think you did well in asking for a wager for your upcoming competition. Bets can force certain outcomes that would otherwise look suspicious.\"\n\nIa pulled away from me to ponder the issue, pausing for a solid thirty seconds or more. I busied myself with admiring the long, ebony waves of hair that draped her chest, covering each breast. Quelling an instinct to touch her, I waited quietly.\n\nIa enthralled me with how quickly and analytically she dissected this problem, and I was intensely curious about what she would come up with. It was like reading an action/adventure novel wherein the hero is facing insurmountable odds. Hemmed in and countered at every turn, one wondered how the writer would get themself out of the impossible scenario. Only later realizing that, of course, it was one of their own manufacture, and that the solution was usually quite unclever.\n\nFinally, she nodded thoughtfully, signaling her arrival at a possible solution.\n\n\"Okay, so here's what you do: go to her place as planned this weekend. You want to look casual, not sexual. It's cooler out now so this should be easy. Wear a sweatshirt -- none of those fitted ones -- and the baggiest pair of jeans you own. \n\n\"Since this guy...\" she squeezed my package lightly with soft fingers \"...will make most pants you may wear look fitted, this is the tough part, but do your best to downplay it. That means any adjustments you make down there will need to be discreet and think unsexy thoughts when you feel yourself getting aroused.\n\n\"When you arrive, be easygoing. It's difficult to say what her frame of mind will be this weekend. Some women are fickle -- it could be that your little chat about wanting her friendship back has put you well on the path to redemption already. Or, she could be even more upset. You'll have to feel out the situation and adapt. \n\n\"Either way, your first order of business is to get her guard down so she can open up with you. She has some emotional issues in her past that she'd like to talk to you about, but feels that she can't. This is your goal for the evening; win back the closeness you used to share and be her shoulder to cry on.\n\n\"And you have an opportunity with the bet, as long as you don't overplay your hand. Ask for what you want, but again, avoid making it related to romance or sex. Focus on something that will build her trust. Maybe even something friendly, like reliving some experience from when you were close, especially if it includes some of your mutual male friends. Something that says 'I miss the good times we used to have, and getting them back is important enough for me to make it a wager'. Something like that.\n\n\"If you lose, your progress could depend on what she wagers. If my guess is correct, this will likely be something friendly like what you're wagering, only winning you additional points.\"\n\nHer green eyes flashed.\n\n\"Tell me, Master, is this how you would have her look at the end of the night?\"\n\nBending over my lap while keeping her gaze locked to mine, she demurely picked up my soft cock with one hand. The tip of her pink tongue emerged, and slowly licked the crinkled skin of my penis from root to tip, the distance traveled rapidly expanding.\n\nI grinned, raising my head to look down my nose at her.\n\n\"Or...\" she paused, reorienting her body to drop her soft tits in my lap alongside my growing cock, \"...maybe you'd prefer her like this?\" \n\nMaking sure to maintain eye contact and command, I savored the feel of her bosom in my lap. The bottoms of her large breasts spread like well-moistened dough across the tops of my thighs and testicles.\n\n\"Or maybe even...\" she lifted herself, turning around and lowering her steamy entrance to just above my tip, hovering in place with toned thighs.\n\n\"This?\"\n\nWith a wicked gleam in her eye, she looked over her shoulder and lifted a pinky to her lips, biting her manicured nail lightly.\n\n\"That is unless everything I've told you has been intended to mislead you? \n\n\"After all, maybe I like Master in the friend zone with this hussy. Free him up to spend more time with his favorite.\"\n\nHer sultry eyes glared challenge at me.\n\nNostrils flaring, I reached for our mental connection and snapped taught the reins I held on her. What she suggested was obviously nonsense intended to bait me into dominating her, but we were still establishing boundaries, and I needed to reinforce them now.\n\n\"I think someone needs a little reminder on...who toys with whom.\" Punctuating my words, I firmly grabbed her wide hips from atop my lap, pushing her forward onto all fours as I got up behind her.\n\n\"Yesssssss, Master, your slave nee-\"\n\n\"Sssst!\" I cut her off, \"Eyes down!\" My voice was a flog. Standing, I inspected her superlative curves, closely eying each detail of her as I would a prized steer. Plush, flaring hips, a trim stomach with just the barest hint of flab, luscious milkers that hung heavily from her chest.\n\nHer Avatar told me she desperately wanted exactly what I did right then: for me to put my baby into that fertile womb.\n\nShe'd needed to learn that she couldn't get her way with me by acting cheeky, but I felt a pang of sympathy for my Mediterranean beauty.\n\n\"Soon, my Pet, soon. I promise: I'll see this trim little tummy bulging with my child before long. But not yet.\" Using a trickle of essence, I laced my words with the feeling of security. Her Avatar folded into itself, calmed and contented.",
        "I was tired of concocting 'punishments' that did nothing but reinforce her behavior. I brainstormed. \n\nKneeling next to her head, I ran my fingers over her hair, petting her gently. Her delicate fragrance was thick in the air as I stroked her. Abruptly, I grabbed her hair at the nape and jerked her head to face me. \"But for now, my naughty girl needs a lesson.\n\n\"Stand up. \"\n\nShe complied.\n\n\"Lay that blanket on the floor next to the couch\"\n\nAgain, my instructions were followed, her eyes never leaving the floor, as she'd been trained to do. Her delicious hip cleavage appeared each time she knelt, making me eager for what I was about to do.\n\n\"Now, lay down on your back with your head up against the couch, facing me.\"\n\nReclining, she held her legs together.\n\n\"Present yourself.\"\n\nIa's face colored, but she did as I bade, opening wide her legs and peeling back plump, flushed lips with her fingers. Her juicy cunt was a sight to behold.\n\n\"Look at you....how filthy your leaky little cunt is,\" I sneered, \"Dripping filthy cream all over the blanket like a slut. Soooo eager for it; it's a wonder you ever get any work done at all with a horny little mind like yours.\"\n\nI paced, clasping hands behind my back and letting my proud cock bounce lewdly with each step.\n\n\"Tell me, Slave, it's on your mind all the time, isn't it!?\"\n\n\"Yessss, Master. Your cock is in my every thought!\"\n\n\"And what does that make you?\"\n\n\"A whore, Master! Your little whore!\"\n\n\"That's right.\" I nodded. \"Think you can fuck with me? Outsmart me? You're nothing compared to me, cunt!\" I spat. \n\n\"I am your Master! And you... You're just a set of disgusting holes. Places for me to deposit all this cum.\n\n\"My little cum dumpster.\"\n\nI switched off the mental block that suppressed my pre-cum, flinging streams of the clear liquid as I walked, cock bobbing with each step. The potent aphrodisiac would make what was coming twice as difficult.\n\nIa closed her eyes, her expression rapturous, as though I were anointing her with holy water.\n\n\"Yes!! Master, please use me! Dump your blessed sperm in your slave!\"\n\n\"Quiet!\" Her mouth snapped shut. \"Now, look at me.\" The eyes that met mine were so intense I almost lost focus on my goal, but I marshaled myself and continued.\n\n\"Now, Pet, I'm going to achieve satisfaction upon this beautiful body. You've got me worked up, and these heavy eggs need release, again. Because of your temerity, you are forbidden from gratifying yourself as I do so. You will lie there and watch me closely.\"\n\nShe said nothing, knowing perhaps that it would only make things worse. She was right -- I planned to let her join me in ecstasy if she followed my instructions to the letter.\n\nI started slowly, massaging some of the slippery pre along the expanse of turgid flesh with a firm grip. Working it up and down, twirling it around my broad circumference, needing both hands to fully encompass it. \n\n\"This, my naughty girl, is justice for your impishness. Imagine this prick set to your tight little slit, ready to thrust...\" saying this, I thrust with my pelvis to drive my cock through the circle of my grip obscenely, \"...into you. Your wanton mind hardly able to stand the pleasure, you wrap legs around me, pulling me into you further. Mad with ecstasy as you fulfill your only purpose in this world.\"\n\nMy pre continued to issue, thick globs of fluid gathered by my strokes raining down on her hair and skin. Inside, I dammed the river of her fulfillment, keeping it at bay. Just in case her imagination was enough to do the job without my touch.\n\nGrunting in pleasure, I continued to thrust into my own hands. Stepping forward between her legs, I loomed over her, pleasure from my manual stimulation combining with the debased form of my sweet girl pulling me rapidly toward my peak.\n\n\"Sliding...ugh...with such wonderful friction...into your tiny, hungry pussy. Our eyes meeting as I...stretch you...again...and again...and again.\" Her gaze finally left my cock and locked onto mine.\n\nHer nipples were thick points standing tall on a landscape of scrunched areola, all of it piling up to lift her nubs as far as they could rise as if offering them up to me. Those magnificent breasts surged in time with her labored breathing.\n\n\"Waiting for the moment my spend pours into you. Thick...creamy...spunk...gushing into your womb. Invading it with...countless millions of my sperm, each...frantically seeking out the...ultimate prize.\"\n\n\"And finally...finding it.\"\n\nHer tits quaked, amplifying muscle tremors as she feverishly bucked into the air that separated us. I didn't need to spy on her pattern to see that Ia was in agony. The humiliation and lurid fantasy I painted for her had her thrumming with need. Delicate hands sought release to replicate her imagination. Her golden collar slowly materialized as she focused on our bond. How hard she worked to observe my will!\n\nIt was a little cruel to use the impregnation imagery, but I found it too hot not to share and knew it would be effective. She'd been a good girl though, so as I crested the final wave into bliss of my own making, aiming to fire a titanic blast of cum at her chest, I removed the block on her, nodding my assent.\n\nAs the first rope of cum painted her left nipple, she immediately went to work on her deprived slit. Right thumb a blur, she frigged her swollen nub while three fingers of her left hand squished into her burning slot.\n\n\"Uggghhhhh, Master,\" she groaned, \"Your little whore needs you inside of her. I feel it, I can feel it! Cover me in your babies. My lonely womb wants them all. She's so empty without you.\"\n\nMy swollen cock sustained its efforts to empty my balls, repeatedly bombarding the bronzed beauty in front of me. Pools of cum on her chest dribbled down her sides while my orgasm persisted.\n\nSeconds later, her fingers must have hit just the right spot as she held them, wiggling vigorously to gain maximum stimulation.\n\nIa screamed as she closed her eyes, focusing on the sensation while spraying fluid onto the floor in front of her. The disappointment of not being mated with her to feel it wash over me was offset by how fully I could witness the spectacle from a distance.\n\nOkay, that was pretty much the hottest thing ever. New personal goal: make all my women squirt.\n\nAs my penis deflated slightly and Ia calmed, I laid down next to her, cradling her sated body. My slurry coated her thoroughly, but she registered only unadulterated contentment. \n\nAs discipline went, it wasn't much, but the punishment had to fit the crime -- five to ten minutes of torture was no more than justice for a cheeky remark. I always relished the opportunity to cement my commitment to serve her needs as her master.\n\n\"Pet.\"\n\n\"Yes, Master?\"\n\n\"Do we understand each other?\"\n\nIa snuggled up against me even tighter, rolling onto her side and pulling my arm between her breasts. Their weighty softness felt like heaven sandwiching me.\n\n\"Yes, Master.\"\n\n\"Mmm, that makes me happy.\"\n\n\"Master?\"\n\n\"Hmm?\" I murmured, close to drifting off while the game system sat in the background, forgotten.\n\n\"I'm sorry I teased you. You know that I would never do something like that. Right?\"\n\n\"Yes, Pet, I know.\"\n\n***********************\n\nThe rest of the week went swiftly, though Friday night at Ella's was looming larger in my mind as time went on.\n\nI gave Sandy space, knowing that she needed to come to terms with living with my other women. Bringing them all together was almost as high as the Ella issue on my list of shit to worry about.\n\nChristine was out of town visiting her parents for several days. She was excited to tell them about me, but the real reason was that her lease agreement had her dad's name on it as primary, and she needed him to sign some paperwork that would release her from it. I wanted her to be the first to move in with Ia and me since I didn't anticipate any issues between the two of them. My cute little brunette didn't have a rebellious bone in her body; she'd happily take her cues from Ia if I asked her to.\n\nIf there was anything to worry about there, it was how Ia would deal with Christine. I'd need to be strong to keep her in line.\n\nA thought about telling my parents that I would be moving in with Mom's boss this weekend had occurred to me, but since my Dad was going to the Malcolm's place too, I figured it should wait. Dad would almost surely share that little bit of info with Ella's dad, and there was no way Mr. Malcolm would hide this news from his daughter. If we worked out the way I was hoping, it was inevitable that she would find out, but right now, my new housing plans and roommate choices were sure to drive an irrevocable wedge between us.\n\nFor some time, I had been searching my Fae about a means of implanting a suggestion in my parents to accept my living arrangements as normal and proper. They needed to know certain details of my life, but I didn't need those shared around.\n\nFinally, Friday night came. My thoughts focused on the situation with my statuesque best friend as I drove to her house. \n\nOstensibly, the plan was to reprise the good times of our youth, slowly building her trust while laying a foundational belief that I could be something other than her best buddy. \n\nIt wasn't entirely clear to me whether it was better to enemies or friends in this particular situation, but I felt happier knowing that she didn't hate me. Still, the gulf between where I stood and where I was trying to get felt vast. All week I had brainstormed various ideas of how I could seduce her without looking like I was seducing her, but I felt like a meteorologist without a computer model: dealing with a million and one inputs and nothing but random guesses as to the outcome. Ia had given me some solid advice, but the execution would be up to me. \n\nDespite the challenge, we had a special relationship rooted in a lot of history, and I resolved that I would do this without my powers, or not at all. I'd just have to select another queen if I couldn't make it happen. The thought of that possibility made my blood run cold. \n\nEven worse, though, was the thought of Ella with another man. \n\nPulling up to her home, I heard the guffaws of my Dad, Mr. Malcolm, and the rest of the poker crew coming from their backyard gazebo. \n\nI checked myself once more, making sure that I looked sufficiently nondescript in the outfit. I missed my more overtly buff look, but Ia was probably right -- that was not what I needed tonight. I still filled out the sweatshirt pleasantly enough to satisfy my newfound pride.\n\nI rang the bell, surprised when Ella opened it within seconds.\n\n\"You made it! I'm so glad!\" she beamed, bending down a few inches to give me one of those ass-out hugs. Yeah, fuck those. She wasn't wearing perfume or makeup, but I guessed that would be too much to hope for. The natural scent of her hair was enough.\n\nElla seemed to be in a great mood, so we were off to a good start.\n\nWe matched: sweatshirt and jeans; though you couldn't see the sexy bulge of my calves like you could hers. Or the twin melons that were impossible to hide in any clothing this side of a large tarp. Her legs were incredible -- I doubted there was a woman on the planet that could compete with the long-and-graceful-yet-aggressive curves in her calves. Add model-worthy knees and long, firm thighs and you had Ella. Pure and simple -- she was perfection. \n\n\"Answered the door pretty fast there, quick draw.... You been looking out for me or something? Huh, Ella?\" I said, narrowing my eyes in mock suspicion.\n\nShe chuckled uncomfortably for a second, rolling her eyes, \"Yeah, right. No, it was...it was just that one of my dad's friends just came in a minute before you showed up, so...\"\n\nI had told myself that reading her Avatar was off-limits, but I was weak; I cheated. It was okay as long as I didn't mess with it, right? \n\nStrangely, her Avatar wasn't giving me much.\n\nShe ushered me in along our previous route to the basement while I tried to break the ice.\n\n\"So, I'm kinda surprised you're not busy tonight. What about volleyball? Don't you usually have matches on Friday nights?\"\n\nLooking back over her shoulder, she rolled her eyes. \"Not that you'd know though, right? I mean, seeing how many of those you've been to.\"\n\nOuch. Still some resentment there... A long arm elbowed my ribs as she backpedaled at my wounded look.\n\n\"Sorry. We have the night off. Southwestern had to forfeit due to sick players.\"\n\n\"Oh, well...nice, I guess. Right?\"\n\n\"Yeah. Well, we woulda crushed them either way, but I'm not gonna complain about getting to spend a night with my oldest buddy!\" Her long arms put me in a playful chokehold, ruffling my hair. This woman and her height; sometimes... But the heavy press of a huge, firm tit into my shoulder was decent enough compensation for the humiliation.\n\nI swatted her away, retreating the rest of the way to the basement, where I found a familiar scene. \n\nTwo ratty old couches formed a loose 'L' shape, one directly across from a TV that sat on a board spanning two old floor standing speakers. An ancient HiFi receiver sat on the floor in the middle. Steel-plated and monolithic, it looked heavy enough to double as a boat anchor. Psychedelic cotton wall hangings surrounded the room, softening the cold cinderblock foundation while telling of her parents' hippy roots.\n\nThe coffee table we used to put our feet on was showing its age. A frosty can of Cherry Vanilla Coke waited for me, right next to her Lipton 'Brisk'.\n\nMy favorite. Typical Ella - always so considerate.\n\n\"Damn, you remembered.\" \n\n\"'Course I remembered, dummy. You've only had about a million of those things down here.\" Ella needled as I took in the rest of the room.\n\n\"Wow, this takes me back. Lots of good times in here.\" I checked out the ancient mini-fridge and small microwave we used to use for our late nights. Chiefly Ella's dad's beer fridge, we used it for our drinks in a pinch. Ella had never been much into drinking.\n\n\"I'm almost surprised this thing is still working.\" I chuckled.\n\n\"Right? The thing probably draws more electricity than a modern full-sized fridge, but it's still kicking.\"\n\nParking myself on the side couch, I slouched into it, sinking into the well-worn cushions to a ridiculous extent.\n\n\"Oh, yeah,\" I said wistfully. Ella seemed content to let me take it in as she flounced into the opposite couch. Pulling a hair clip seemingly out of nowhere, she gathered rich auburn waves to pin them up. Her neck begged me to lay kisses upon it. Damnit, no. Game face.\n\nI snorted, thinking of something to say to break the bit of tension that had crept back into the room. \"Remember that time we got Jordan to eat a cotton ball?\"\n\n\"Oh my God, that's right!\" she chuckled, \"He was so into that game, he couldn't be bothered to look at the popcorn bowl to grab another handful.\" \n\nWatching her laugh was magical. That broad, full-lipped, slightly crooked smile. Those hazel green eyes. That cute little dimple on her left cheek. The way it just lit up her whole face. She was the most beautiful creature I'd ever seen.\n\nI came back to earth, reaching for my Coke and cracking it open. \n\nTaking a sip, I smacked my lips, giving an exaggerated \"aahhhh\" in satisfaction. \n\n\"Thanks for this, by the way.\"\n\n\"Of course! Hey, let's toast!\" Cracking open her can, she raised it, saying, \"To a great friendship.\" The muted 'cluck' of her aluminum can tapping mine accompanied my mild disappointment at precisely what we were toasting. What should I have expected, though? \n\nShe gave me a warm smile.\n\n\"So, should we get right to our match, or you wanna chill a little bit first?\" I asked.\n\n\"Nah, there's plenty of time for that. Let's catch up some.\"\n\nI kicked my feet up, getting comfortable. \"Aiight,\" I drawled, \"So, what's good with you, Malcolm? Jack treating you well?\"\n\nElla's eyes tightened slightly. \"Can we not talk about him?\"\n\nWell, that was interesting.\n\n\"Sure, whatever you want, buddy. Then how about colleges? You got all your applications in?\"\n\n\"Well, yeah, I applied early admission to State, but... oh, c'mon, you don't really wanna talk about that boring stuff, do you? Why don't you catch me up on you and Sandy Mathers?\" she grinned, rubbing her hands together in anticipation.\n\nMy grin answered hers. \"Oh, I see. Same old Ella...\" I shook my head in mock disappointment, \"Can't get enough lurid gossip.\"\n\n\"Shut up!\" She reached for a pillow and chucked it at me. I was too busy watching her chest jump six inches when she threw it to dodge, so it hit me square in the shoulder.\n\n\"Alright, alright! Well, what do you want to know?\" I recalled my encounter with Sandy at the park last weekend and smiled. It was probably best to skip that one... \"I mean, after our last chat, I didn't think you wanted to hear about the juicy details.\"\n\n\"Is it...serious?\" She asked, almost...anxiously? \"I've heard about her dating a lot of guys, most of whom get tossed pretty quickly. I'd just hate to see that happen-\"\n\nRaising a hand, I cut her off \"Can we not? Please? I thought we've been through this. I can take care of myself.\" My irritation bled through my voice.\n\nHer hands went up in surrender. \"You're right, I'll move on, but I want you to know that I actually do care what happens to you, Adam. If you're telling me this is the real deal, I'll believe you.\"\n\n\"Well, it is real. Er, at least as 'real' as high school romance gets. It's not like we're talking about a wedding and kids here.\" That was a little disingenuous, given the reality, but there was no win scenario with Ella in which I played up the depth of my relationship with Sandy.\n\n\"Well, yeah. I certainly hope not.\" Hmm, what did that mean? \"But come on, how did it happen? How'd you ask her out? Has she met your parents?\"\n\n\"That the weird thing -- she asked me out. It was that time we went to Smoke. I'm sure you remember. I was pretty shocked, to say the least. She's way out of my league. But she's fun, and seems to like me, though I'm not sure why.\" In truth, I wasn't that insecure anymore, but I couldn't resist a little harmless baiting.\n\nOne of those puppy-dog looks came over her. \"C'mon, you're a great guy. Stop being so hard on yourself; you have a lot going for you.\" She consoled. \n\nSeriously? Yeah, not at all what I was hoping for. It was like she was quoting line-for-line from the pick-me-up chapter in 'How to Talk to Guys in the Friend Zone'.\n\nI let her know what I thought of her platitudes with a look.\n\n\"But don't you think she's a little too...'Like, Amy, doesn't my hair look fab today? Ohhh ma God!'\" Ella channeled her best valley girl. \"I mean, would you honestly consider her wife material?\"\n\nWoah... Cattiness? Ella? \n\n\"That's not fair. She's got a lot of depth to her that most people don't see. She's sweet, and the cheerleader persona disappears when she's not around her airhead friends.\"\n\nShe looked skeptical. \"Seriously? This is Sandy Mathers we're talking about, right? Sure, she's gorgeous, no doubt about that. That perfect cheerleader body of hers -- blonde hair, perfect smile, great figure... Perfect height... But 'sweet' is never a word I've heard people use when describing her.\"\n\nPoor Ella, still insecure about her height. Everyone had their demons, it seemed.\n\n\"Yes, she's beautiful, but don't act like every guy at Fairfield wouldn't trade his left nut to be in Jack Winston's shoes.\"\n\nJust gonna lay that out there. Not me, though; every guy.\n\nShe grabbed another pillow and threw it at me. \"Gimme a break, you perv! That's not even close to true. Alright...so maybe some guys like these,\" she hefted her boobs, giving them a bounce. I admit it, I stared for a second, but quickly looked back at her face. ",
        "Under my breath, I muttered, \"Some guys, she says...\"\n\n\"Quiet you.\" Her eyes narrowed dangerously.\n\n\"But seriously, you know most guys can't handle my height.\"\n\nI threw my arms up in frustration.\n\n\"Dammit, woman! How many times do I have to tell you: that is all in your head. Don't you know it's a fantasy of every red-blooded straight male to have an Amazon girlfriend? Just explain the popularity of that Snu Snu episode of Futurama to me otherwise. Go ahead, I'll wait.\" An impatiently tapping foot completed the bit of theater.\n\nHer eyes rolled, but she laughed, having watched almost every episode with me back in the day. Still, I was pretty sure there would have been another pillow thrown at me if she hadn't thrown them both.\n\n\"Hornball...\"\n\n\"Hell, I'd date you in a second...it's just too bad I'm off the market,\" I said wistfully.\n\nShit, this was coming off the rails. Stick to the script, dumbass! No talking about the romance between the two of you. Remember?\n\n\"Uh-huh.\" She deadpanned.\n\n\"Well, you have Jack anyway, right? I know you don't want to talk about the details, but that's going good?\"\n\n\"Ugh, Jack.\" Ella deflated a bit. \"No, it's not like I mind talking about us, but Jack is...Jack. I dunno.\"\n\n\"...kinda inconsiderate, you mean?\" I finished her thought.\n\nShe glared at me.\n\n\"Well, now that you've said it, yeah, kinda inconsiderate.\"\n\nI gave her a moment to continue. She did.\n\n\"Kind of a fucking prick.\"\n\nMy eyes widened.\n\n\"Woah, look at you! Harsh language?! This isn't the Ells I remember.\" I felt like we were starting to get a bit of our groove back, so I pulled out the old nickname.\n\nShe returned a sheepish glance, then it all started pouring out. About Jack. How he neglects her and ignores what she wants, always putting himself first. How consumed he is with his appearance. How abrasive and rude he could be with everyone he didn't respect -- which happened to be pretty much everyone. How they never seemed to have anything to talk about.\n\nNaturally, none of this shocked me in the least, but I tried to act as a sympathetic friend. I listened patiently while she vented.\n\n\"It doesn't sound like he's a bad guy, per se,\" I died a little saying that, \"he's just self-centered. And...I don't think I'm the only person that sees that.\n\n\"But the real question is: what do you want to do about it? Let's ask it this way: what attracted you to Jack in the first place?\"\n\nShe gave me a sharp look, and I raised my hands, shaking my head. \"Not trying to be snarky there, Ells, but it's an important question for you to figure out if you think he's worth your time. You've told me a lot of the bad parts, what are some of the good ones?\"\n\nI hated asking the woman of my dreams to tell me what, specifically, she liked about another man, but I conceded that this was essentially 'girl talk', and I needed to at least look like the neutral party.\n\n\"Well, he can be thoughtful with me, sometimes. Like when he buys me gifts or flowers for no reason. And, well...I feel weird saying this to you, but let's face it, he's pretty hot, and he's my height, so I don't have to feel like a freak around him.\"\n\nDouble ouch. Especially the part about his height. How could I compete with that? I knew the doctors had said that Ella might not even be done growing, so I could have challenged how long that last point would be valid, but I wasn't that cruel. Rather, I needed her to see her height as an advantage, not something she needed a guy to match to make her feel normal.\n\n\"Ok, so that's something. Right? I'm not sure I want to ask this, but have you two been...physical?\"\n\nI rushed on before she could answer, \"Don't tell me if it makes you uncomfortable! I just thought, you know, if you want to talk about it... It's even been said by some that I'm a better sounding board than a concrete wall.\"\n\nElla gave me an obligatory chuffing noise to recognize my attempt at levity, but her eyes were on the coffee table. After a moment of silence, I decided to move the conservation on.\n\n\"Alright, so, about this bet-\"\n\nBefore I could finish, she continued. \"We've tried, a little. I don't know... I just can't. It's just not... right. I know that sounds like a bunch of bull -- which is what Jack told me, of course -- but it's true, Adam.\"\n\nSuddenly, my mind was filled with images of Jack trying to get intimate with Ella.\n\nWait, she talked about some kind of bad experience last time we spoke. I hopped over to her couch, putting my arm around her broad shoulders as she drew into herself. She didn't pull into my embrace, but she didn't shrink from it either.\n\n\"Wanna talk about it? I assume you're referring to what happened before when I wasn't there for you. I'm sorry about that, by the way, but I'm here now. It might help.\"\n\nHer bright eyes regarded me, obviously confused. Then recognition dawned.\n\n\"What, you mean what I said about 'bad stuff happening'?\"\n\nI nodded. Ella covered her mouth with a hand.\n\n\"Oh, God, you thought?... I am sooo sorry. I realize now how it came across. I mean, it wasn't a good time for me, but I was never forced if that's what you're thinking. Charley was a good guy. We just weren't meant to be, not to mention my parents disliked him.\"\n\nHer brief dating experience with that freshman college student last year came back to me. I winced at the thought of yet another man that could say they knew my Ella in ways I didn't, but overall I was relieved that she was never hurt as I'd feared.\n\n\"Look, can we just forget about my crappy love life and talk about something else? Liiiike, what about this medical thing you mentioned? Can you tell me about it?\"\n\n\"Truthfully? I'd prefer not. It's pretty embarrassing. I'll, uh...tell you another time.\"\n\n\"Okay, okay, just trying to be a good friend. But tell me this: does it have anything to do with how you've gotten so buff?\" \n\nMy eyebrows shot up. \n\n\"Come on, don't deny it! If I didn't know better, I'd say you were hitting the roids pretty hard. What gives? I know you, Adam Connor, and you did not look like this a couple of months ago.\"\n\n\"I didn't realize you were keeping tabs on me.\"\n\nShe looked away. At least this didn't feel like a battle, unlike last time.\n\nShe gave me a look that told me exactly how stupid she thought that was. \"Adam, you wear nothing but T-shirts most of the time. I'm kind of surprised you're not wearing one now. It's hard to miss.\"\n\nA fading part of me said 'downplay', 'equivocate'; but that wasn't me anymore. Ella expected me to, but I didn't. I only shrugged, as if to say 'don't ask me', while putting my arms up on the back of the couch. I looked steadily into her hazel eyes. \n\nThe air in the room was still. Something subtle had changed, but I perceived it. Just a slight tilt of her head, but my instincts told me that I had passed some kind of subconscious test. One continuously broadcast by Ella's inner female. She knew what to look for, even if thinking Ella didn't. Regardless, it immediately flipped me into 'prospective partner' mode.\n\n\"Can... Can I see?\" she said\n\nWell now...\n\n\"See what? Just normal old Adam here.\" It was pretty thrilling that she wanted to see my body, but I had a vague concern about how she would react if I showed her. If she got worked up, I didn't want to go full-on incubus and bond her. The guy riding shotgun knew my intense desire to have Ella and didn't have my scruples in doing it the way I wanted it done.\n\n\"C'mon, Adam, just gimme a peek. I bet you got a nice little six-pack under there, huh?\" Those flecks of green in her eyes twinkled at me.\n\n\"What, like, pull my shirt off? What would Jack think about that? Thought we were just friends...\" I goaded.\n\n\"Oh, don't be such a baby. It's just a shirt. You're a guy; I'm not seeing anything you wouldn't show everyone on the beach.\"\n\nSuddenly, she lunged for the hem of my shirt, jerking it upwards. With my arms on the back of the couch, I was too slow in trying to prevent it, and she got it pulled up to my pecs, revealing my cut abs and obliques. Naturally, I flexed a bit to make them pop even more. Couldn't help myself.\n\nElla stared, her face turning pink just a shade. Then she really surprised me when she tried to pull the shirt the rest of the way off.\n\nWhat had come over her? This...didn't seem like normal Ella. Then again, maybe she had an aggressive side that I didn't know about. As awesome as it felt to have her leering at me and wanting to see more, I had to stop this before it got to the point where I couldn't help myself. \n\n\"Hey!\" I fought her, pulling the outer edges of the hem down while she lifted at the center, shocked at my friend's actions. \"Ella, what the hell?\"\n\n\"You big baby, I've seen you strutting around school, showing off. Why so bashful all of a sudden?\" she teased as we continued to struggle. \n\nShe'd moved to the floor to get better leverage, kneeling right in front of my legs. Her huge tits bludgeoned my legs repeatedly while we struggled. It was sublime, but I needed control!\n\n\"Come...on!\" each word was punctuated with a jerk on my shirt. This girl was strong! \"You...tease! Just...give...me...one...look.\"\n\nI could have overpowered her despite her size advantage, but I let her win, putting my arms up as she slid it off the rest of the way.\n\n\"Fine!\"\n\n\"Daaaaaaammn, boy! Look at you!\"\n\nHer pink face turned three shades darker as she fanned herself with a hand, wolf-whistling. \n\n\"Did...you just wolf-whistle me?\" My eyes narrowed suspiciously. \"Ok, who are you, and what have you done with my friend?\"\n\n\"Oh, gimme a break. You're hot! I dunno how you did this in such a short time, but I can certainly see why Sandy and Amy were all over you at that club.\" \n\nI'd never seen Ella act like such a lech, and it worried me. Was I doing this to her without realizing it? Concerned, I checked her life pattern and worried even more when I couldn't see any changes at all. It was just the same as earlier -- nothing useful.\n\n\"Do you mind?\" I held a hand out for my shirt. \"I'm starting to feel like a piece of meat here.\" All theater, of course. 'Mental me' had a shit-eating grin on his face.\n\n\"Man, you are like a work of art or something. Jack's not nearly this cut.\"\n\nNot gonna lie, that felt good to hear. A big part of me wanted to tease her and encourage this. Turn the tables on her and push for quid pro quo. Maybe even a little game of 'doctor'? \n\nBut was that me? Or was it my Fae? The one who hadn't been fed since I saw Ia a few days ago...\n\nNo, I needed to play it straight, for now. I needed her thinking of the me with the chiseled bod as the kid she grew up with, and right now I didn't believe that was the case. I still had a plan.\n\n\"Alright, alright, you've seen enough. Can I have my shirt back, please?\"\n\n\"Really shouldn't...could look at that all day.\" I thought I heard her mumble, \"Here.\" \n\nQuickly pulling it back on and straightening my mussed hair, I tried to deflect.\n\n\"So, how about that game?\" I said with a confident smirk on my face.\n\n\"Let's do it!\" Ella grinned. \"You've gotten too cocky without our regular games. To think you could beat me...\" she scoffed.\n\n\"So. As I recall, you agreed to make it interesting-\"\n\n\"-and I'm a woman of her word.\" She continued smoothly. \"Name your terms, Connor.\"\n\n\"Okay. If I win...you have to commit to a trust exercise with me.\" \n\nWhen she looked puzzled, I said, \"What? You said you didn't trust me, remember? Losing that really bothered me. \n\n\"I want it back.\"\n\nI had thought about what Ia had said -- that I needed to build trust, and figured I could go for the direct approach...and if it involved a little innocent touching, what's the harm? Now though, I wasn't sure.\n\nShe looked a little guilty, but all she said was, \"Okay, deal. Now, for what I want... If I win...\" she mused, tapping her lip in thought, \"you and Sandy have to go on a double date with Jack and me.\"\n\nWell, that was unexpected. I wasn't sure what she hoped to get out of that exchange, but why not?\n\n\"Deal.\"\n\nFor the next twenty minutes, we both prepared in our usual positions: her in a beanbag chair on the floor, I on the couch behind. The game was best three out of five matches, and each of us got three warm-up matches with PC-controlled players. I played well, but Ella dominated those comps. It was equally intimidating and sexy how skilled she was. Her movements were so sure and focused.\n\nI must have missed half of her warm-up matches though; I was too busy staring at her luscious body. Seated behind her, I had a nice view without the risk of being caught. The curves of her breasts extending past the sides of her torso were magnets for my eyes.\n\nFinally, the time came for our first match. I picked my old, fireball-flinging, tornado-uppercutting favorite, unsurprised when she picked the thick Chinese girl with the insanely toned thighs.\n\nI'd like to say the first match was close, but it wasn't. She kicked my ass just about as fast as the character she played 'lightning kicked' mine into oblivion. It was 0-2 for the match. \n\n\"Oh man, this is just too easy. I almost feel bad. I am gonna sweep you like the floor of a salon.\" Ella taunted.\n\nI said nothing.\n\nThe second round went differently. I played a character I felt was more powerful but found less familiar. Ella switched up her character in some overt attempt to give me a handicap. \n\nFortunately, my gambit won out, and I was able to capture the second match; 2-1.\n\nElla considered me, again giving me that appraising look. \n\n\"Got lucky that time, Connor.\"\n\n\"Uh-huh. Next match, let's go.\"\n\nShe stepped up her game again, obviously seeing me as more of a threat. She won the third match, 1-2, but the fourth was dragging out. She had taken me down in the first round already, putting the current match score at 0-1. If she won this round, she'd win the match, game, and the whole deal. \n\nI conceded that the double date with her and Jack could be used for my purposes too. Frankly, though, I didn't want to go on any kind of date where Jack held Ella while I tried to downplay the passion that Sandy and I had for each other in front of Ella's appraising glares. So, I needed to win this thing.\n\nFocusing on my movements, I was able to eke out a win for the next round with just a sliver of health left. 1-1. \n\n\"I'm thinking next Saturday for dinner.\" She goaded, confident as ever. \"You have something besides a t-shirt and jeans ensemble to wear, right?\"\n\n\"Yeah, yeah.\"\n\nThe next round went quickly. I don't know if she let me win, but I had switched back to my Gi-wearing favorite, and landed a couple of solid special moves right out of the gate, cementing my lead and winning the round. That was the match for me, putting the overall standing of our game at 2-2. Now it was sudden death.\n\n\"I'm sorry, what was that about sweeping me, again?\"\n\n\"Whatever. You're still going down.\"\n\nThe next match started, and I stuck with my reliable pick. She went back to hers as well. The first round was pretty white-knuckle, but I eventually took it down. 1-0. The second round I bungled pretty badly, walking right into one of her fireballs, which she adroitly followed up with a flurry of combos, taking me down with her health bar untouched. \n\nIn the third round, I came out swinging hard, taking her all the way down to a sliver of health within the first ten seconds, but I couldn't seem to seal the deal. She blocked everything and evaded all my specials. Ella was on fire. It made me wonder if she had been toying with me till now. \n\nIt was looking like it would be death by a thousand paper cuts as she light-jabbed and kicked me with incredible precision. Just when I thought I was done, though, she made a mistake in her timing, and my slow fireball connected. \n\nThat was it, I had won. 2-1 for the match, 3-2 for the game. \n\n\"Did you do that on purpose?\" I asked.\n\n\"Huh?\"\n\n\"At the end there, when you mistimed your jump.\"\n\n\"You're suggesting that I threw the game for you?\"\n\n\"Well, it just looked like-\"\n\n\"-Adam,\" she cut me off, \"This is me we're talking about. You ever known me to throw a game? Ever?\"\n\nShe had a point. Ella was fiercely competitive and hated losing.\n\nI nodded, conceding her point.\n\n\"Well, good game, Ells.\" I extended my hand and she stood up to shake, rising above me. Her head looked like it was only inches from the drop ceiling.\n\n\"Good game.\"\n\nWe shook, and I lost myself for a moment in the feel of her cool hand. Her long, graceful fingers felt sublime. I can't remember if I rubbed the back of her hand with my thumb for just a second, but if I did, she didn't react.\n\nWhen we separated, she flicked my forehead with her finger.\n\n\"And that's for thinking I would ever sandbag you.\"\n\n\"Alright, alright. I got it.\" I whined.\n\nShe went to sit down on the other couch. \n\n\"So? I suppose you'll be wanting to collect on your bet now?\"\n\nShrugging, I said, \"Sure, if you're good with that. It won't take long.\"\n\nNodding, she got up, towering over me once more. \"So, is this gonna be one of those, 'I fall back and you catch me' deals? Or did you have something else in mind?\"\n\nSuddenly, she winced, putting a hand to her back immediately as she stumbled toward the wall, holding herself very still. \n\n\"Oh, God! Ella!\" I ran to her, having seen this before, as she very slowly lowered herself to the floor. \"Your back?\"\n\nShe nodded.\n\n\"Here, lean on me.\" I put her arm around my back and supported her as she stood again. Trying to accept as much of her weight as she would give me, I helped her to the couch.\n\n\"What was I thinking, sitting in that stupid beanbag chair?\" I carefully laid her down on her back, enjoying the view as parts of her bounced and swayed when she finally got horizontal.\n\n\"I hoped you'd grown out of these.\"\n\n\"Pshh,\" she said between labored breaths, \"The growing is exactly the problem. It seems like I'm not done yet.\"\n\nGrabbing a pillow from the other couch, I slipped it under her head when she lifted it.\n\n\"I thought you looked a bit taller. What are you now? Six-four?\"\n\nShe shook her head, \"Not since this spring. I'm pushing six-five now.\"\n\nIt was odd, how much taller she was than both of her parents. Especially unusual as a female. I had seen that before when there are very tall men on the mother's side, but I'd met a good number of her relatives at her family holiday parties, and they were all pretty average. Her Dad was tall, but not exceptionally so. Certainly, nothing that would have led to this kind of height.\n\n\"Can I get you anything to help?\"\n\n\"Do you mind? I'd love a couple of Ibuprofen and a glass of water.\"\n\n\"You got it.\"\n\nHurrying upstairs to her parent's kitchen, I knew right where the pills were. I returned and she quickly popped both of them.\n\n\"I'm sorry Adam, this was fun, but I think that's probably it for me for the night. I guess you'll just have to collect on the bet another time.\" She looked genuinely disappointed, which I took as a good sign.\n\n\"It's okay, I understand. Wait... What about a different kind of trust exercise? How about I give you a back massage to help with the pain?\"\n\nElla was already shaking her head as I was saying it.\n\n\"No way, Adam. A back massage? How would that look to Jack or Sandy?\"\n\nI chuffed a laugh, \"What would Jack say about you ogling me without my shirt? Who cares what they would say. The question is: do you trust me? That's the whole point of this, right?\"\n\nThe irony of extorting an exercise intended to prove that trust already existed to gain her trust wasn't lost on me, but she didn't seem to be unpacking that one, so I left it alone.\n\n\"Yeah.\" She conceded.",
        "\"So, this is the exercise. Look, I can help you with this, remember? I'm pretty damned good with these babies.\" Cracking my knuckles, I looked at her confidently.\n\n\"Adam, we're not in middle school anymore. A massage is... kind of a girlfriend/boyfriend thing.\"\n\n\"Bah! Who says? It's just you and me here. You've got my word...no funny business,\" I held my hand up, \"...these hands will stay right where they belong. Okay? Now flip!\" \n\n\"Oh, fine,\" She sighed, \"I admit I could use those magic fingers of yours. The problem is, this couch isn't going to work. I can't lie flat on this thing; I'm too tall.\"\n\nImmediately, my mind went to a place where I knew she could lie flat. But I wasn't about to suggest that.\n\n\"Well...how about the floor?\" I offered, \"I can go grab some blankets to make you comfortable.\"\n\n\"Nah, let's just use my bed like we used to...but don't get any ideas.\" Her finger went up. \"This is not some kind of lewd rub down, it's nothing more than a massage. Got it!?\" Her expression told me she meant business.\n\nRaising my hands defensively, I said, \"Hey, the bed was your idea, not mine. I'm just trying to be a good friend, and maybe collect on my bet while I'm at it.\" I was grateful she hadn't called attention to the fact that I told her I had previously had a crush on her. I wasn't sure if she thought that I was over her, but that definitely could have made this awkward. Then again, Ella was nothing if not thoughtful, so she probably would have kept quiet about it even if she had suspected. \n\nShe nodded, \"Honestly, by the time you're done I'll probably just want to get some sleep, so this is easier.\"\n\n\"Makes sense.\"\n\nI helped her up the stairs, concerned about how much more difficult the physical contact would make resisting my incubus nature. Earlier, when she was ogling my chest, I was a little suspicious that I might have influenced her already, but at this point, I was pretty familiar with how it felt when I used my power, and I had felt nothing. \n\nElla quietly opened the door to her room and entered. It was largely the same as ever, save the bigger bed to accommodate her height. I checked out some of the photo collages of younger Ella and her friends as she turned on the lights and made herself comfortable on the bed. The lights stayed on; nice and safe.\n\n\"Okay, I'm ready.\" Her muffled voice came through her pillow.\n\nTurning around, I was able to scrutinize Ella's Brobdingnagian form for the first time all night with impunity. Even her baggy gray sweatshirt didn't take away from her perfect curves. Being six-foot-five, her legs seemed a mile long, and her well-worn jeans hugged her everywhere. \n\nHer ass was divine. Wider than me, it was a classical heart shape, dense muscle curving her rounded glutes high above the plateau of her lower back, only to dive precipitously to the fields of her thighs. She had the perfect bubble butt; each cheek was more than a handful for both hands. I traced the heavenly curves with my gaze, inch by inch, leering as it jiggled and shimmied with her movements on the bed.\n\n\"Adam?\"\n\nStop. Think unsexy thoughts, you idiot. She feels your anaconda slithering between the thick globes of her ass and you're really in trouble.\n\nMentally, I slapped myself, hurrying over to the bed to avoid suspicion. \n\n\"Sorry, had something in my eye.\"\n\n\"Oh, okay.\" That seemed to satisfy her suspicion. \"Well, you coming? This is pretty painful.\"\n\n\"Okay, but, seriously?\" I prompted.\n\n\"What?\"\n\n\"Ells, you know I can't do this with that sweatshirt on.\"\n\n\"Uh-huh.\" She said dubiously.\n\n\"Look, I'm not about to pull your shirt off -- like I seem to recall someone else doing earlier -- without your permission, but you know I can't do this with it on. I'm not asking you to get down to your bra. Wear another shirt if you like, but it needs to be thinner.\n\n\"I'll leave if you want to change-\" I made to go.\n\n\"Okay, okay.\" She huffed, sitting up briefly to comply. \"No need to leave -- I've got an undershirt on.\"\n\nAs the sweatshirt came off, she revealed a ribbed green and white tank top that bulged obscenely with the huge bra under it. The top was so filled with tit that the fabric showed not just the outline of the bra beneath, but the lace pattern on the cups as well. My eyes nearly popped out of my head. \n\nElla clearly needed to go shopping for new bras too, because this one was too small. She had that quad-boob thing going when a huge part of the breast overflowed the upper limit of the bra.\n\nShe looked a little embarrassed about the shirt, quickly laying back down on her front. Sensing her discomfort, I kept my comments to myself.\n\nChafing my hands on my jeans to warm them, I sat down next to her hip on the side of the bed. It would be much more difficult to do this without sitting on her, but I wasn't going there.\n\n\"Is it the same area?\" I asked, trying to work out where to focus.\n\n\"Yeah, it's always the same; still down here.\" She pulled a hand behind her, indicating the spot where her back arched into the shelf of her glutes. Why was every inch of this woman so damned sexy?\n\nLaying the sides of my thumbs at the center of her lower back, I started to work. Our proximity gave me a startling reminder as to just how big this woman was -- it was difficult to even reach to the other side of her back without laying across her body. \n\nMy touch stayed in the safe zone at the center of her back, though my hands badly desired to stray. The temptation was immense to caress the curve of her tiny little waist where it flowed into her broad hips. Drag my hands softly upward along her sides until they met those succulent bulges of fatty tissue that protruded where her breasts pancaked into the bed. Her arms were above her head on her pillow, so I could see the edge of her lacy blue bra in the armholes of her tank top. The bra vainly attempted to contain the breastflesh that poured out of it everywhere. They defied containment. Seemingly ever-growing in all the right ways, she defied containment.\n\nAs minutes wore on, her muscles started to loosen to my skilled touch. Smiling at the recollection that I was in a similar position with a very naked Sandy not even a week prior, I felt Ella start to relax, paying my efforts with throaty feminine groans. Not like my other women at all; Ella was special. \n\n\"That feels sooo good. Thank you, Adam.\"\n\n\"Happy to do it, Ells. Anytime.\"\n\n\"And I appreciate that, but still...I feel guilty.\"\n\n\"About what?\"\n\nShe scoffed. \"Well, from where I'm laying, it's kinda hard to tell who won the bet, and who had to pay up. Your reward is to do me a favor? That's not right.\"\n\n\"Ells, I like helping you. It was just a stupid bet. Told you already -- all I wanted was your trust back.\"\n\n\"Hey,\" she said, peering over her shoulder. \"Adam, I do trust you. Obviously, or I wouldn't be letting you rub my back two inches north of my enormous ass.\" Her tone was self-deprecating.\n\nHoly shit, why was it so much sexier when she talked about her body parts herself?\n\n\"This ass?\" I asked. Her head bobbed. \"Ohhhh, no.\" I shook my head adamantly, \"You did not just call this ass enormous.\"\n\n\"I most certainly did!\"\n\n\"Then you're freakin loony, because from where I'm sitting, this ass is just fiiine.\"\n\nRealizing that sounded a little skeezy and that she hadn't responded to our little back and forth, I had to bail out.\n\n\"Seriously Ella, you have nothing to worry about with your size. You're stunning. Most women your height look like...uhh...well, they look like WNBA players. But you don't! You look like a normal, attractive woman with beautiful curves. Just taller, that's all.\"\n\nShe lifted a shoulder to look back at me with the most radiant smile I'd seen her wear all night.\n\n\"Thanks, Adam. I can't tell you how much that means. Hey, I'm sorry I doubted you before. Maybe I was PMSing or something. It's just that you were acting so differently.\"\n\nMy eyes locked on hers, I replied evenly. \"But that's just it, Ells, I am different. I'm not the same kid that used to play video games and home run derby with you. And you're not that girl, either. We've both changed. \n\n\"That doesn't mean I'm not trustworthy, though. Yes, I'm enjoying having a girlfriend, and maybe I've been a little blatant about some of our PDA, but I'm learning as I go. In fact, if you knew...\" Though severely tempted to tell her more, I stopped myself.\n\nShe smiled, thankfully not prying on what I had started to say. Somehow it felt like I had won another point with something inside of her that was tracking some kind of 'confidence quotient'.\n\n\"No, I see that, and you deserve to be happy.\"\n\nMaking a rolling gesture with my hand, she got the hint and turned back onto her stomach so I could go on.\n\n\"So, you and Jack. Sounds like you're pretty committed there.\"\n\n\"Why do you say that?\"\n\n\"The double date? 'What would Jack say?' All that? Just sounds like you want to try and make it work.\"\n\n\"Honestly, Adam, I've been thinking of breaking things off with him for a while.\" She said resignedly. \"I didn't have any intention of holding you to that date. I just wanted to see how you'd react.\"\n\nHel-loooo! I fought an exclamation of happiness from escaping.\n\n\"Oh?\" I murmured, trying to downplay my interest.\n\n\"We talked about it earlier, but all this, tonight, reconnecting with you. It just made me see that he's not the one for me. He's just not a nice guy like you are.\"\n\nMy emotions were on doing somersaults. Holy hell, did I have a legit chance with Ella Malcolm? Okay, I had to dangle the bait out there to see what would happen.\n\n\"Well,\" I said wistfully, \"I do have Sandy now, but then again you did know me first, so if you want to call dibs...?\"\n\nShe reached behind her to swat my leg blindly. \"Shut up you dummy, you know I didn't mean it like that.\"\n\nYeah, figured.\n\n\"You could never do something like that to Sandy.\"\n\nWait, what? Heart...ready to explode. Gotta keep this going.\n\n\"Yeah, I'm just joking. But you really think you're going to break it off?\"\n\n\"I think so, I dunno. It's stuff like this; what you're doing now. It's hard for me to even imagine Jack doing something like this unless he was trying to get laid.\" \n\n\"That's...pretty sad.\" I needed to be careful here, I didn't want to poison the well. She needed to dump the jerk on her own.\n\n\"And realizing that the stuff you say makes me feel better about myself instead of worse... You say the nicest things about my size, and all he says is how I'm not allowed to wear heels because we'll look stupid together if I'm taller.\"\n\nMan, what a moron. I continued the massage.\n\n\"Well, you can call me anytime,\" I said.\n\n\"Except when you're with Sandy, you mean.\"\n\n\"Well, I mean... I'm sure she wouldn't mind me helping you out if it's an emergency.\"\n\nElla barked a laugh. \"Right! By giving me a massage on my bed. Oh, my sweet, simple Adam. You have no idea, do you?\"\n\nOpting to play dumb, I kept going. \"What? So, she would?\"\n\n\"You're kidding with me, right?\" she chuckled again. \"I know she would. I certainly would if I were your girlfriend.\" My brain was jumping for joy at hearing Ella talk about being my girlfriend. The first step in making it a reality was the ability to conceptualize it, right?\n\n\"If I didn't know better, I'd say you're trying to guilt me out of doing this right now. I can stop anytime if you want.\" Please don't say stop. Please!\n\n\"Mmm, no, keep going. I need more of your magic fingers. It might look suspect, but you're keeping it above the belt, and I trust you.\" \n\nYeah, I wouldn't mind keeping it far above the belt, if you rolled over...\n\nI carried on with the massage but soon started to tire from leaning over her. Eventually, I gave up and laid my forearm on her butt to take some of my weight. \n\n\"You don't mind, do you? It's getting a bit tiring bent over like this.\"\n\n\"It's fine.\"\n\nThe warm cushion of her spongy cheek was incredible on my forearm. As she shifted momentarily, I witnessed the strength in that immense muscle when it clenched, pushing me up a good two inches.\n\n\"You can sit on me if that makes it easier. Like you used to.\"\n\n\"You're sure?\"\n\n\"Yeah.\"\n\n\"Well, if you don't mind... It would help me do this a bit more evenly.\"\n\nClimbing on the bed fully, I straddled her broad hips, sitting on her thighs. She was so wide I felt like I was almost doing a split to straddle her.\n\nOkay, now I was in trouble. The heat from her skin bled through the thin denim and warmed me, starting to give me very lurid notions of what else we could be doing in this position. I continued rubbing, attempting vainly to not think about the insanely sexy woman between my legs.\n\nTry as I might, my eyes kept dragging themselves back to her lush curves. My mind was flooded with images of sucking on large, pouting nipples while kneading that mouthwatering butt. Running my hands all over her acres of silky-smooth skin. Pulse quickening, my breathing deepened.\n\nAny second now my power would come flooding out as it had so many times before, scouring her with arousal that she would never be able to deny. Frantically, I cast my mind to other thoughts -- baseball, algebra, college applications. Nothing worked. They always went home to the many, many erogenous parts of the lush female laying within striking distance of my now expanding cock. Parts I wanted more than anything to lick, suck, caress, squeeze, and kiss. \n\nNoticing the rise and fall of Ella's back become more pronounced, I started to panic. Oh, no! It was happening! I was corrupting my best friend, and I couldn't stop it. Why was this even happening? I felt like we had a spark now.\n\nThis was the work of my Fae. It was clear now that he had sat idly by all night, content to let me lay the groundwork that would tee him up to take over and win her for us. Ella shifted her legs, subtly parting them. Probably not even noticing her contribution to fuel my desire.\n\nI wanted to jump off her and put a stop to this. Run and get a cold glass of water to calm us down, but I couldn't. Truth was, I didn't want to. My power poured forth, showering my unsuspecting friend with my undeniable lure. \n\nIf I could only control my Fae... I focused on the construct, feeding those stray thoughts into it. My hands continued upon her back. Feeling her shift, I sat up, taking some of my weight off. \n\nShe rolled over onto her back, looking at me with an expression I knew all too well...\n\nThe deep blush on her face bled onto her chest, leading my eyes toward the huge mounds that quivered in front of me.\n\n\"Adam.\" She said softly, her voice hitched.\n\nI said nothing, but was unable to move as I redoubled my effort to deny my Fae his meal. Strengthening my mental defenses, I used the technique I'd been honing over the last weeks and pulled deeply upon my Vitae to assist.\n\nThe outside world faded away as I fought a battle of wills. My mind was a featureless field of war upon which only myself and the avatar I had manifested for my Fae would fight. Seeing me, he smirked, confident in his ability.\n\n\"Give in, Adam, you can't win this. We'll take the woman and make her ours. She'll bear our children and love us always. Why do you deny us that?\"\n\n\"Because it's not...real!\"\n\n\"Have you learned nothing!? It very much is real. Every bit as real as what we have with Sandy, or Christine, or our new Pet.\"\n\n\"You lie! I've worked hard to build those relationships. Been the kind of man that those women can love. Your power was just the start of what has developed with them.\"\n\n\"Hey, I'm on your side here, Adam. Why not do the same with Ella?\"\n\n\"No! I want to know for sure! She'll love me for me, not because of you.\"\n\nReasoning that he couldn't use what power I took, I started drawing upon my stores of Vitae. My opponent did also, matching me beat for beat in drawing it in.\n\nLaughing, he said, \"You think to beat me with my own power? Fool...\" he chuckled. \"I am the power! Any power you have now is what part of myself that I've given to you.\"\n\n\"More lies. This power came from them, not you.\" \n\nThinking of my bonds, I focused on my connection to Christine, Sandy, and golden-collared Ianthe, who, seen through my mind's eye, appeared on the field around me. I could feel their support as I struggled to siphon more power away from my enemy. They couldn't give me essence, but through our connections, their love fueled me just as strongly, giving me the will to do what was needed.\n\nThe Fae tried a new tactic, using his ability to insinuate imagery within my mind. Doubt overwhelmed me. In defeating him, I'd be nothing again. Just another normal kid idling through life. No wonderful women to care for. No mysteries of life beyond this realm to discover. To once more become the bumbling loser unable to string together a coherent sentence for the woman that lay beneath me right now.\n\nDespair at the prospective loss nearly brought me out of the fight, but it was the unwavering support of steadfast Sandy, sweet Christine, and confident Ianthe that bolstered me. They shared the truth with me, dispelling the false voice of skepticism in my head. \n\nThe Fae knowledge I would live without was only a tool. My will was that which bound us together, and it wouldn't waver. For Ella, I continued to fight; I wouldn't allow this creature to co-opt my friend's mind. Never again would someone other than me control this body.\n\nSoon I realized that the two of us had exhausted our Vitae reserves we had, having drawn it all into ourselves, each now holding roughly half. Facing off, each of us put all our will into siphoning the life essence from the other. Thinking of Ella, I mustered the strength for one final surge.\n\nThe Fae exploded in a coruscation of energy; the life essence he held now drawn to me like a magnet, suffusing every part of my being. A new awareness and understanding fell upon me, and I saw what I had done.\n\nI had absorbed him right along with the essence. His knowledge was mine now right along with his power. Was this the attunement that Elias had referenced? I had to assume...\n\nWhat surprised me the most was the fact that he was an adolescent, of a kind, much like I was. I'm not sure why, but all this time I'd assumed he was some timeless, all-knowing cosmic entity. The reality was that he was figuring things out as he went, just like I was. However, he did know much, and I'd gained that knowledge for my own. But along with that came a terrible realization: I'd bonded Ella.\n\nReflecting on his memories leading to our battle, he had been bathing her in our power most of the evening. Using just a trickle to avoid my detection, I had been deceived into thinking I was making genuine progress with Ella. I reeled from the reality of why she had acted so brazenly. \n\nReturning to the present, I noticed that only moments had passed as the Fae and I warred for dominance. The signs of her bondage were clear now as I took in Ella's glassy-eyed stare, looking up at me with what she no doubt thought was genuine admiration.\n\nDespairing, I cast within my mind for any way I might undo what had been done. To give Ella her life back so she could live it as she willed, not eternally wishing for my favor. The truth was bittersweet: there was indeed a way, but one that came at a dreadful cost. To undo the binding, our connection must be severed completely. \n\nInside, I wailed in sorrow at what I'd done but faced the implacable truth: the only way to take back the binding was to make my best friend forget she ever knew me."
    ],
    "authorname": "Nexte100",
    "tags": [
        "best friend",
        "female submissive",
        "harem",
        "humiliation",
        "incubus",
        "male dominant",
        "masturbation",
        "mind control",
        "romantic",
        "teenager"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/incubus-pupa-ch-09"
}