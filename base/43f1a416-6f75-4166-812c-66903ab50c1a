{
    "title": "Family Issues Ch. 10",
    "pages": [
        "Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nAs always, I need to thank, Stylus and Madison (The girl from down under) my cool tough editors. How tough you ask? This chapter I've added a whole new word to the Queen's Language and Stylus killed it. Bare hands, people. \n\n$$$$$$$$$$$$\n\n--\n\nI don't believe in an interventionist God\nBut I know, darling, that you do\nBut if I did, I would kneel down and ask Him\nNot to intervene when it came to you\nOh, not to touch a hair on your head\nLeave you as you are\nIf he felt he had to direct you\nThen direct you into my arms.\n--Nick Cave and the Bad Seeds\n\n--\n\nHappiness is rare. It's a delicate, golden string that shimmers at the corner of your eye. One wrong move, one wrong touch, and it can slip through your fingers. Sometimes happiness is a nightmare-free sleep, waking without a single scream. \n\nA small bird wearing a red apron jumped on the open windowsill and woke Helen with its happy twittering staccato. She felt rested, calm. There were no dreams about Iraq. No inferno, no burning tires, and no young men staring at her with dead, accusing eyes. It was just like that time in the hospital when Kevin slept on the couch and held her hand through the night. \n\nFor a minute Helen wondered where the hell she was. Why was she naked, and why the hell was there a warm, naked body snuggled against her? Then she remembered, and happiness was not rare anymore. It hit her like a river of honey, beginning inside her stomach and flowing through her veins. \n\nIt was inconceivable, yet there he was\u2014she hadn't dreamed or imagined it. His blond spikes were tickling her neck, and his warm back was pressing against her stomach. Kevin sighed in his sleep and mumbled. Helen leaned closer and inhaled, allowing his pleasant scent to pour into her sense of being. She gave him a tiny peck on his cheek because she couldn't help it, and then another just because. \n\nKevin. Beautiful, funny, sexy, smart, loving, wonderful Kevin. Her Kevin. She said my Kevin several times in her head because it felt super-awesome. \n\nShe smiled each time she thought of the night before. \n\nHe stirred and then sniffed, but like her, he froze, probably experiencing the same 'what the fuck?' moment, just as she had. Every small, big, and terrible lie was outed last night. They left him exposed and vulnerable. What remained was his love, and she basked in it, even if she still had a hard time understanding it.\n\n\"Did you wake up, Kev?\" \n\n\"Yeah, what a horrible way to start the day.\" He sneezed. \"What time is it?\" \n\n\"Quarter past seven; it's an amazing day. No rain. The sun is up.\" \n\n\"All that is left is to close the shades. I'm on vacation.\" He yawned in three different tones. He always thought yawns were boring, and it was best if one could add a plot. \"Whose bright idea was it to open the window?\" \n\n\"There's a nice breeze.\"\n\nHe sneezed again. \"Excellent. Now I know why I dreamt I was Naomi Campbell doing a shampoo commercial.\" \n\n\"Grumpy.\" She wanted to nuzzle his cheek but was too shy to do so now that he was awake. \"Did you sleep well?\" \n\n\"Dunno. I was asleep when it happened.\" He rolled onto his side, facing her, and sneezed again. \n\n\"At least cover it when you sneeze like that. Cover the mouth, you moron, not the... Your mouth, not mine,\" she said when he covered her mouth and sneezed again. \"Jesus, if you were a little less mature right now, you'd be a sperm.\" \n\nKevin let go of her mouth and reached for her body under the blanket. \"I wonder what this button does.\"\n\n\"It's a nipple.\"\n\n\"Let's push and find out.\" \n\n\"Kevin, stop!\" She slapped his hand when he tried to lift the blanket. \n\n\"Come on.\" \n\n\"No!\" \n\nHe sneezed. \"This is stupid. I will have to see eventually.\" \n\nShe held the blanket to her body like a shield. \"Sure. Two thousand and eighty you get to see me naked. Mark the date.\" \n\n\"Come on, Helen, what is your worst-case scenario?\"\n\n\"You'll gross out because they're super ugly. Next thing you don't answer my calls, don't text me back, and voila. I'm ghosted.\" \n\n\"Now who's childish? Jesus, I suddenly realized that you slept with your eyepatch on?\"\n\n\"Yeah.\"\n\n\"Comfy?\"\n\n\"No.\" She straightened her eyepatch. It was itchy, and she never slept with it, but she was terrified that Kevin might wake up before her and see her without it. \n\n\"Fuck that, I'm going in.\"\n\n\"Please, don't.\"\n\n\"I'm crazy about you, Helen. I don't want stupid stuff like that to ever stand between us.\" He pulled the blanket, and she didn't resist this time. She froze, hardly breathing, waiting to be judged.\n\n\"That's it? I don't get what the fuss was all about.\"\n\n\"Yeah, right.\"\n\nHe'd felt them last night in the dark, but seeing something in the bright morning light was different. The IED shrapnel scars covered the left side of her body, running under her armpit all the way to her buttocks, like a map of angry snakes, a reminder that war has its price, and someone has to pay. It looked like some cruel painter had raked her perfect skin with multiple knives. Some were small, some were bigger, and one ran like a long, crazy spiral around her left breast. Kevin kissed it.\n\n\"Happy, Kev?\"\n\nHe wasn't happy. He wanted to hurt the person responsible for cutting her like that, but he knew that if he showed anything but restraint, she'd probably freak out. He began kissing them.\n\n\"What are you doing?\"\n\n\"This one looks like an 'infinity' tattoo, kind of clich\u00e9.\" He kissed it gently. \"And this one has a message. Don't move, what's that? Oh, it's upside down. It says, 'Helen loves Kevin because he's cooler than Peter Dinklage, and he makes her laugh and have awesome multiple orgasms, sometimes at the same time.'\" \n\n\"It's true. Minus the multiple orgasms.\"\n\nHe dropped the blanket. \"I love them. I love your scars; they're part of you, and I love you, so I love them too.\" He dived back in and went for another round of kissing, making sure not to neglect a single scar. After he was done, he gave her cock a cheeky lick, from her sack to the tip, and kissed the bulbous head.\n\nHelen moaned. \n\n\"Someone has morning wood. I'm glad it's pointing up, otherwise I would have fallen off the bed.\" \n\n\"Hey, I'm not that big,\" she growled. \n\n\"That thing has its own swimming pool and garage. Not big my ass.\" \n\n\"Stop it, you're not funny.\" \n\nKevin pulled himself up and kissed her lips. Then he totally freaked her out as his hand went for her eyepatch.\n\n\"What? Don't!\" \n\n\"I wanna see you, Helen.\" \n\n\"Not now, not in a million years.\" \n\n\"Please.\" He caressed her cheek and nose gently. \"I just want to see.\" \n\n\"What for?\" \n\n\"No lies, no secrets.\" \n\n\"Are you one of the weird people who get off on ugly?\"\n\n\"It's not for me, silly girl, it's for you.\"\n\n\"Kevin, stop trying to solve my body issues. You're not my psychologist.\" \n\n\"I see. And how does that make you feel?\" \n\n\"So funny. Not!\"\n\nHe kissed her forehead then slowly peeled the eyepatch off, and Helen froze again. \n\nHe thought there would be dead skin underneath, but instead, Helen had an almost normal eye. It was damaged, milky white, with flakes of black, red, and green. The red scar ran from her eyebrow down to her nose. But it was far less terrifying than he thought it would be. He kissed it three times for good luck.\n\n\"Can you see anything with it?\" he said. \n\n\"Just light and darkness.\" \n\nHe kissed her eye again. \"If the eyepatch bothers you so much, why don't you put on contact lenses?\"\n\n\"The lens won't cover the ugly scar. Do you want me to start wearing contacts instead?\" \n\n\"Whatever works for you. I just want you to be happy, that's all. You don't need to sleep with an eyepatch or turn off the light whenever you take your top off.\" He kissed her eye area three more times before covering it up again. \"And now, since you've been such a brave girl, I think you deserve a treat.\" \n\n\"Coffee and a mushroom bruschetta?\"\n\n\"Almost as good.\" He swiped the blanket off her and dived. She felt his soft lips on her abs. He then traveled lower, kissing her inner thigh. \n\nHe reached forward, wrapped his hand around the hot, thick shaft, and pulled her rigid member away from her body. Helen gasped, and her cock jumped in his palm. He licked the bulbous head and felt it against his lips. Helen closed her eyes, then changed her mind and propped herself up on her elbows. \n\nShe blushed as Kevin looked up at her. \n\n\"Is, is it okay if I watch?\" she said quietly.\n\nKevin nodded and pulled back, smiling, and she stared enthralled as the shiny web of pre-cum stretched and grew thinner, from the head of her cock to his chin. It snapped in the middle and dropped, some of it stuck to his lower lip. \n\n\"That's obscene,\" she said. \n\n\"Huh?\" \n\nHe started at the base of her thick shaft and slowly licked his way up. When he got near the top, his tongue circled the spongy membranes of Helen's glans. He rolled his tongue slowly over her sensitive, hot flesh, watching it flex and grow under his touch. He stopped to watch the pulsing veins on her throbbing shaft. It was standing perfectly upright, thrusting up powerfully and heaving with each of her heartbeats.\n\nHelen wanted desperately to feel his tongue on her shaft again but was too shy to say anything. She bit her lower lip and blushed as Kevin blew her an air kiss. He extended his tongue and licked up the underside of her rigid shaft. \n\nKevin started to lick her cock feverishly, his slurping tongue rolling and licking at the upright shaft. His tongue slalomed over her smooth skin. Helen's cock's head was shaped like a lemon, the inverted 'V' on the underside of the crown pointing in an invitation to the gaping slit. Kevin zeroed in on the pulsing cock, with a beautiful tracery of blue veins winding their way up. His tongue tasted the gaping hole and the shiny drop that formed in it. He gave an audible \"Mmmm...\"\n\nHelen moaned. The electricity that ran from her shaft to her pleasure center were like nothing she had ever experienced before. Watching his lips touch her hard, pulsing rod was a sexual fantasy come true. She blushed deeply as she reached to caress his cheek. Kevin encouraged her with a smile and a wink. \n\nHe took a tender bite, gently scraping her soft skin with his teeth. Helen's cock jumped and sprayed pre-cum. \n\nKeven went down and licked her smooth ball sack. He had to open his mouth wide to let each nut slip inside. Once he had it within his mouth, he rolled it gingerly around, his tongue bathing the big, swollen ball in a warm bath of saliva. He moved from one rubbery ball to the other, the delicious flavor of Helen filling his mouth.\n\nBeats coffee and mushroom bruschetta by a million miles, she thought. Her hands trembled as she shyly outstretched them to touch his hair. In the daylight with nowhere to hide, she was too afraid to 'explore.' Kevin must have sensed her hesitance because he took her palm and placed it on his head. She ran her fingers through his locks while watching his lips stretch and feeling his tongue caress her delicate sack inside his mouth. \n\n\"Kev!\"\n\nHer ball popped out of his mouth. \"What?\"\n\n\"I'm...\" She blushed. \n\n\"Like?\"\n\nShe nodded quickly. \n\nHe pressed his lips to her balls and offered a slow, wet kiss. \n\nHe gave her cock a bite, sinking his teeth into the soft skin, and Helen cried. Her balls clenched, and she had to use every ounce of willpower to avoid discharging into the air. \n\n\"Wait.\" Kevin kissed her rod lovingly. \"Make it last.\" \n\n\"It's...\" she gasped. \"Yeah.\" \n\nHis nimble fingers searched and found her crevice. She was soaking wet. He gently pressed in with his index finger and hooked it inside her folds. His fingertip sifted through the damp wall, pushing like Nadine taught him. He listened to her heaves and gasps and tremors, noting what made her squirm. Helen opened onto a new realm of sensations coursing through her body. Her fingers clenched and unclenched in his blond hair. \n\nKevin parted his lips and pressed them against the hot, spongy head of her cock. His lips felt incredibly warm and delicious as he slid them all around the surface of her inflamed flesh. She let out a purr of satisfaction as Kevin dropped his head and let the stretching lips follow the sloping of her glans. He spread them over the massive knob until his teeth gently slipped over the thick, rope-like ridge of her corona and clamped down on the shaft below. Helen clasped his hair as she felt sealed inside the soft mouth. \n\nThey made eye contact, and Kevin smiled around her. Helen almost discharged again inside him. She loved those purple orbs. She stared at him, blinking, and Kevin gave her a wink and started vacuuming around the head. He lapped up the oozing pre-cum and drew it deep into his mouth before letting it slide down his throat.\n\n\"Oh my god, this is so good,\" Helen huffed. \"I can't...I can't...\" \n\nKevin pulled up. \"You ain't seen nothing yet.\" His finger kept caressing her insides, and Helen had her first vaginal orgasm. Her body convulsed, and her legs started to tremble, before it hit her in waves of electricity.\n\n\"Huh, huh, huh.\" She exhaled. \n\nKevin let her rest for a minute or so, occupying himself by gently blowing air on her shaft. Her cock jumped up each time his warm breath hit her. \n\nDazed, she stared at him. This morning was all about her, and it made her feel pampered and loved. \n\nHer legs were still shaking when he pulled her into his soft mouth. There was no foreplay, and his head started bobbing on her shaft. She watched him, amazed, as he busily bobbed his head up and down and side to side. His mouth made a symphony of slurping and cock-sucking sounds. \n\nHe rose once to the top, his tongue swirling around the purple head. He then gave her a wink and dived right in. His lips enveloped Helen's shaft, and he kept going until the massive head bumped into the opening of his throat. He swallowed. Being deep-throated was one of Diana's favorite pastimes, so he had months of practice. His throat contracted a few times, then Helen felt him stretch to accommodate her invading monster. He didn't slow down. His throat muscles worked like an obscene machine, swallowing millimeter after millimeter of her in that hot wet pressure sleeve. She watched amazed, as if by a magic trick. His lips, slick and stretched around her shaft, descended as more and more of her cock disappeared inside his mouth.\n\nShe gasped as his reddened lips kissed her pubes. She was entirely inside his warm mouth and throat. Kevin rested for a few seconds, pulled out completely, took a gulp of air, and started the process all over again. When his lips touched her pubes again, he started humming, sending tiny vibrations all over her hard member. \n\n\"I can't,\" she huffed. \n\nKevin swallowed again, and the massaging ripples of his throat muscles sent delightful tremors along the full length of her buried cock. He could free dive for almost full five minutes; air supply wasn't an issue. \n\nKevin's finger slid into her folds again. He started massaging her G spot, and his thumb joined the dance, circling slowly the engorged clitoris that was craving some attention too. \n\nHelen closed her eye and came. Her vagina clenched around Kevin's buried finger.\n\n\"Oh, fuck,\" she moaned as she exploded down his throat at the same time. Kevin pulled back and felt the next blast paste itself against the lining of his mouth. He tasted Helen's juices on his taste buds. Another powerful shot followed, and it gathered with the first into an increasing pool deep in his mouth. He kept sucking. One hand pumped her cock, and the other continued its light caress of her clit. Her powerful body squirmed, but Diana had taught him how to be a good boy and to never allow the throes of passion to make him lose contact. He rolled with her and kept his mouth on her cock and his fingers in the wetness of her vagina. Helen continued to unload inside his wet, loving grasp. A few more blasts had his mouth overflowing with seed, and he felt trickles of her warm semen oozing from the corners of his lips. He swallowed, the thick fluid sliding smoothly down his throat. \n\nIt took her two minutes to climb down from the cloud. When she did, she could feel Kevin still messing downstairs, his nimble tongue lapping her cock and mons like a very diligent kitten. \n\n\"What are you doing?\" \n\n\"Diana always says that a good boy cleans up after he makes a mess.\"\n\n\"Gross, stop it!\" \n\n\"Gross?\" \n\nShe pulled him to her. \"And kinda sexy. Your turn.\" \n\n\"I already came.\" \n\n\"When?\"\n\n\"Somewhere in all the excitement. Seeing the face you make when you pop, Helen. Pure bliss.\" \n\n\"Shut up! I don't make faces.\" \n\n\"Sure. Breakfast?\"\n\n\"Shower?\" \n\n\"You go ahead,\" Kevin said. \"I'll fix us something.\" \n\n\"One treat after another; I feel blessed.\" \n\n\"You are. I'm super awesome.\" He jumped off her and ran to the kitchen.\n\nHer legs were still shaking hard, and Helen took her time, turning the water on high, and letting it beat over her head in steamy rivulets. She needed the break to work things through, without his bewitching purple eyes, which made it hard to think straight. She recalled every small detail from last night. Kevin's outburst, the secrets he told her, the intimacy they shared with words and sweat. He placed his heart on a plate and offered everything, showing the ultimate trust. \n\nThe future was suddenly wide open, and her heart was beating much faster as she thought of the possibilities. Prior to last night, she was certain that her love was one-sided. That Kevin would want her seemed just a childish fantasy of hers. Today she wanted everything. It felt like greed, but she had never wanted something so badly. \n\nThe small kitchen was permeated with the scent of omelets. Kevin didn't even bother putting anything on. He was a naked busy bee, already feeling at home between the getaway's pots, stove, and oven. \n\n\"We had some eggs and vegetables left from yesterday. I'll drive to the bakery down the street and get us fresh bread.\"\n\n\"I love you,\" she said.\n\n\"Works for me. Look, we need to hurry. We've still got that six-hour drive to Venice.\"\n\n\"I was wondering,\" Helen said, \"if we should stay here for another day.\" \n\n\"I'm okay with you wondering.\"\n\n\"And?\" \n\n\"You want me to wonder for you, Helen?\" \n\n\"You're not helping.\" \n\n\"Be decisive. If you feel that the right thing is to wonder, then don't hesitate for a moment. Just wonder straight away.\" \n\n\"You're exhausting, Kev. Listen, it's an amazing location, and there is a lot to see around here.\"\n\n\"The only attraction this place has to offer is the road sign saying Venice is that way,\" he said.\n\n\"Maybe we can postpone Venice until tomorrow? Rest here a bit. We're on vacation, after all.\"\n\n\"That old thief charges a hundred and forty euro per night.\"\n\n\"Please?\"\n\n\"What's the big deal, Helen?\"\n\n\"I want more.\"\n\n\"More?\"\n\n\"Of what we did last night and just now. It's...I don't want to drive for six hours. I want to snuggle with you in bed for six hours. Just one more day.\" \n\nHe squinted his eyes. \"Snuggle or sex?\" \n\n\"Both?\"\n\n\"I'm trying to think of a counter-argument.\"\n\n\"And?\"\n\n\"You know how it is when you can't think of a decent counter-argument, so you offer to snuggle and have sex instead?\" \n\n\"Story of my life.\" Helen did the single bravest thing she ever did. She let go of the big white towel enveloping her body and let it slide to the floor. She stood naked in the bright morning light emanating from the balcony. No secrets left, fully exposed. \n\nBeauty is in the eye of the beholder. Helen had a delicate grace, a hot body, round chest, and the long legs of a model. But if you had mean eyes, she was, after all, a woman with a penis, nasty scars across her left side, and an eyepatch. If you were indeed a bastard, you could even pity her\u2014those are even greater sons of bitches than the haters.",
        "But Kevin was neither, and he could see only the beautiful woman he'd fallen in love with. He smiled and enveloped her in his arms. \n\n--- \n\nSuzan Owens didn't make her vast fortune selling drugs, guns, or human organs, or on the backs of abused sex workers. She let other people dirty their hands. Suzan liked working behind a desk in an office with climate control, and she found out very early that the cleaning business can be just as gratifying as selling cocaine. She had built a vast machine over the years. The money came in from one end, bloody and dirty from drug deals, human trafficking, harvesting organs, selling illegal arms, and tears of families ruined by gambling. When it came out on the other end (minus Suzan's fifteen to twenty-five percent), it was white as snow. \n\nShe was ruthless in her own 'master villain on a spinning chair with a cat' way. And she thought that she understood people better than anyone else. Her kink, after all, was observing. As she regarded Diana through the CCTV camera, she couldn't help but feel a pang of admiration. The girl was ruthless in her own way. \n\nOne of the club's back rooms served as a bedroom with several beds and a small shower attached. It was used by employees on some weekends. Diana had a better use for it. \n\n\"Get over on your hands and knees, Agent. I want to feel you again around my cock.\"\n\nAgent Brian Thompson crawled on all fours to the center of the bed. \n\n\"I want that tight ass again,\" Diana said, her majestic hard cock rearing up before her. \"Fold your knees under your stomach. I want that little hole gaping at me. That's right.\" \n\nThe FBI agent quickly brought his knees up beneath him; his crevice split open and warm cum drizzled out onto his penis and stomach. It was their second round tonight and his second visit to the club. \n\n\"What a gorgeous little ass you've got there, Agent,\" Diana said as the bed creaked under her. Brian moaned as he felt her long fingers rubbing soothingly over his round bum-cheeks. \n\n\"Please, Diana,\" he gasped. He left his wedding ring in the car, but Diana forced him to go back and get it. She liked to look at it during sex. It was a constant reminder for both that he was married, and still, he couldn't help crawling to her. \n\n\"You want my cock?\" \n\n\"Yes.\" \n\n\"No, you need to say it, Brian.\" She patted his ass cheek. \n\n\"I want your cock. Fill me with your cock.\" \n\n\"Why?\"\n\n\"Because I love it.\" \n\n\"Why?\"\n\n\"Because it's so big and hard, and it feels amazing inside me.\"\n\n\"That's better,\" Diana said and took a firm grip on his hips. Her massive cock started to stretch his tight little hole. \n\nBrian began panting, and his whole body started pouring sweat on the mattress. His crevice resisted, twitched, and fought the massive invader. Diana was relentless. She pressed the plum head against his puckered hole, and each time he moved she locked her hands around his hips, forcing him to stay. \n\n\"Oh, baby, you're still fucking tight. Relax.\" \n\n\"It's not easy.\" He gasped from pain.\n\n\"But you want me in, don't you? That's what you came here for, no?\"\n\nHe nodded and then cried in pain as her bulbous head tore through the clenched muscle. He gave a series of short breaths, like a woman going through labor. \n\n\"Relax, baby; the worst part is over.\" \n\nHe clenched around her girth involuntarily. \n\n\"Well, look at that,\" she said, looking down on their joined bodies. \"Looks like your hole is hungry. It's trying to eat me. Should we feed it?\" \n\nBrian moaned. \n\nShe adjusted herself behind him until she was in the position she wanted. Once she was set, she pulled a little backward, the big head again stretching the hole that was clinging to it wantonly. \n\n\"Arch your back, baby.\" \n\n\"Huh?\" he panted.\n\nDiana pressed her palm against his back, lowering the midsection. It made his hole flex and open up more for her. When she was satisfied with the arch, Diana slid all the way back into him in one long deep stroke. \n\n\"Ooooooooohhh, God...\" His entire body tingled, a full feeling spreading through his midsection. His body heated and his heart accelerated as the warmth of the blood-engorged cock hit his insides. \n\n\"Feels good?\" She drew back and then fed it back into him with a slow roll of her hips. \n\n\"Oh God, yes,\" he said. His head dropped onto the bed. \n\n\"How does it feel?\" she asked as she drew back. On the next forward thrust, she angled herself downward slightly, so the bulbous head pressed forcefully on Brian's sensitive prostate.\n\n\"Ohhhh fuck!!\" His cock lurched and slapped against his toned stomach as she started moving faster inside him.\n\nShe alternated between short, fast jabs, pulling a little and then hammering inside, and long deep strokes, pulling almost all the way out and sliding all the way in. \n\n\"That's it, you're mine now.\" \n\n\"Ohh fuck!\" His body trembled and shook at the strange feeling that he was fast becoming addicted to. \n\n\"I'm gonna fill your tight hole again, baby.\" She kept driving inch after thick, hard inch in and out of him. \n\nHis cock was as hard as titanium, and he felt like the tip was about to explode right off. \n\nDiana drew back all the way out of his tight pink opening. She watched the little cave struggling to close its gate and jammed her cock head back in. She then thrust hard. As the thick, rope-like ridge of her corona tore across his prostate, his climax hit.\n\n\"Ahhhh,\" he moaned. Brian's semen sped up his shaft. A long rope of the milky fluid shot forth from the engorged tip to splash onto the sheets beneath him. Diana continued fucking him, and her next forward stroke brought forth the second rope of creamy seed.\n\n\"Ahhhh...Ahhhh...Ahhhh,\" he groaned as each penetrating thrust of her huge cock caused a delightful contraction in his groin and another bubbling wad of cum to spew forth. The sheets beneath them were spattered with gobs of his semen. She continued to pound him deep and fast, each thrust causing his cock to twitch and spew forth more and more cum. \n\n\"Oh God!\" His legs slipped out from under him. As she drove deep into his tingling bum, his knees slid out all the way to the back, and his body collapsed onto the bed. He lay there, utterly spent, breathing hard, in sticky puddles of his own cum.\n\n\"Baby, you need to have more stamina.\" \n\nHe moaned, lying with his face to one side. Diana grabbed the top of the headboard above him. She took a firm hold and then flexed her hips backward. She pulled back to the tight opening of his anal ring and then slammed her hips forward. \n\n\"Oh, God.\" \n\n\"Oh yeah,\" she said with a groan as her rigid cock drove deep into him. \"I like your tight hole, baby.\" She started moving fast, using the headboard as leverage to pound his ass like a jackhammer. \n\n\"Oh, ah, ah, ah!\" Each one of her thrusts elicited another cry from him. He felt as if she was trying to nail him to the bed. \n\nThe bed creaked with each thrust. Anyone passing in the hallway would have little trouble guessing what was going on inside the room. Diana's groin slapped his bare ass each time her cock dived into his clenching ass. \n\n\"Get ready!\" \n\nHer cock conquered every inch of his exhausted tunnel. The slippery python slithered and bit his prostate on every thrust, and Brian came again. It was nothing like the first explosion, more of an emotional wave of satisfaction. He added more baby milk onto the bed. His tunnel, already wet with cum, squelched and flexed around her. \n\n\"I'm coming!\" she roared. \"Here it comes, here it comes.\" She drove deep and hard, not withdrawing but staying as deep inside him as was possible. He felt her cock pulse, and she exploded like a fireball in his bowels, drenching his insides with futanari semen. \n\n\"Oh, fuck, yeah,\" she moaned deeply and continued to unload high up into his guts. She stayed buried inside him for a long time, flooding him with cum. \n\n\"Clench your ass, baby.\"\n\n\"Huh?\"\n\nShe slapped his ass playfully. \"Clench your ass, baby. As hard as you can.\"\n\nHe clenched, and she pulled out. That final act milked the last drops from her softening cock. She gave him a hard slap on his ass and jumped up. \"That was good. You remember where the shower is?\"\n\n\"I...wait? Are you going?\"\n\n\"I have a club that needs running.\"\n\n\"Stay a bit longer, okay?\" \n\n\"What for?\" \n\nHe rolled onto his back. \"Come on, Diana. Can't we talk a little? Maybe grab something to eat together?\" \n\n\"What do you think this is, Agent Brian? An affair? It's a hookup.\"\n\n\"I...I wanna take you out to dinner sometime.\"\n\n\"I have a boyfriend.\" \n\nBrian's eyes became round. \n\n\"Shocked? You've got a wife, and still you have two of my loads inside your ass.\" \n\n\"He doesn't satisfy you in bed?\"\n\n\"What?\" Diana laughed. \"Kevin? Baby, my sex life can be divided into before I met Kevin, and after I met Kevin. No one can even come close. I get hard just thinking about him.\"\n\n\"Then why the hell are you in bed with me?\"\n\nDiana shrugged. \"Even the most amazing, juicy steak can be a bore if you eat it every night. Sometimes you just wanna nibble on chicken wings.\" She playfully slapped his soft member. \"Plus, he's abroad, so...\" \n\n\"I've got to see you again, Diana.\" \n\n\"Maybe.\" \n\n\"Don't say maybe, say yes.\" \n\n\"I'll think about it.\" \n\n\"Diana!\" \n\n\"I told you I'll think about it. Less pressure will help my decision go the right way.\" \n\nSuzan Owens waited for her in her office. The elder futanari sat in Diana's executive chair, her legs on the table. She was smoking a cigar. \n\n\"Hi, boss. Did you enjoy the show?\" Diana asked.\n\nSuzan arched a groomed eyebrow.\n\n\"I know what the CCTV cameras in that room are for.\" \n\n\"I liked how you are willing to grab an opportunity by the throat, girl. I liked the courage. Gives a whole new meaning to 'fuck the system.'\"\n\n\"And the fact that I have a federal agent eating from my palm?\"\n\n\"I liked that too.\" \n\n\"Then why the hell did you ask Ethan to try and fuck me? I know it was you who ordered him to deposit the money.\"\n\nSuzan arched her eyebrow again. \"You're continuing to impress me.\"\n\nDiana placed her hands on her hips.\n\n\"I told you that we're not really in the clubbing business, little girl.\"\n\n\"My club will pull out $3.2 million this year. $3.5 maybe, into your bank account, boss. Clean money. Me, I did it.\" \n\n\"Very much appreciated. But the consequences of not handling our partners' money can be dire.\" \n\n\"I don't get it, boss. What if I hadn't handled Brian?\"\n\nSuzan blew a cloud of stinking smoke into the air and took her legs off Diana's desk. \"I have my own leverage in the FBI, a bit subtler than you, but just as effective.\" \n\n\"So this was what? A test? A punishment?\" \n\n\"Curiosity. You've handled the situation well. Beyond well.\" \n\n\"Admit it, Suzan, you thought I'd fail.\" \n\nSuzan smiled. \"What I still don't understand is how the hell you are making so much money when Ethan told me you've sliced the price of drinks in half. I thought most of the club revenues came from drinks.\" \n\n\"They do come from drinks,\" Diana smiled right back. \n\n\"You haven't gone and done anything stupid, have you?\" \n\n\"I have a friend in the liquor import business. He imports from Mexico, mostly counterfeit brands. They look exactly like the real deal, and they cost a fifth. They don't taste exactly like the real thing, but no one coming to the club is a certified Johnny Walker taster. A cocktail is just a cocktail.\" \n\n\"Nice. Is he reliable, that friend of yours?\" \n\n\"He is, but it's irrelevant,\" Diana said. \"He won't be the owner of his business soon.\" \n\n\"What do you mean?\" \n\n\"You're going to join as a senior partner of Brown Bag Liquor, Suzan. I'll seal the deal in a week.\" Diana pulled a briefcase out of her closet. \"You'll find the details here. It's super cheap, a steal.\" \n\n\"You cheeky little\u2014\"\n\n\"I can keep depositing some of our associates' money through Brown Bag Liquor if it's ours.\"\n\n\"You mean mine,\" Suzan smiled.\n\n\"The club has become too profitable, and we need a better balance before we can use it again. Everyone profits. I can get cheap drinks for the club, people think this place is the shit, you get to keep $3.2 million. You're happy, our associates are happy, I'm happy.\" \n\n\"How much potential does this Brown Bag have?\" \n\n\"It's small, but it has potential.\" \n\n\"And what will be your cut from this Brown Bag Liquor purchase, girl?\" \n\nDiana shrugged, practicing her poker face. She was going to cut sixty thousand dollars on this deal, maybe more if she played her cards right. \n\nSuzan was quiet for a while. She gave Diana a thorough scan, reassessing. \"To be honest, little girl, I never thought you had it in you.\" \n\n\"You thought I would fall on my ass the first chance I'd get, didn't you?\" \n\nSuzan took the briefcase from Diana's hands, lifted a duffel bag onto the table, and unzipped it. \n\nDiana counted the stacks of money inside and gave a sharp intake of breath. \"That's way too much, boss. I can't handle that even if I use the club and Brown Bag Liquor.\" \n\n\"You won't have to. I'm thinking of investing more in the clubbing industry. I'm about to buy eight more shitty nightclubs in this area, and I think I know who I want to manage them. What do you say, girl? Are you up for the job?\" \n\n---\n\nIn the end, they never got to see Venice. The day before their flight back from Ljubljana, they were still in the cabin, enjoying each other's bodies and the beautiful treks Triglav Park had to offer. Most of the treks ended in bed, and one of them ended in the shower together. There was a lot of lovemaking, sometimes tender, sometimes wild as they tried to compensate for the lost time. There were also naked breakfasts, a ton of laughter, cooking together, music, and even Krav Maga sessions. Kevin once managed to flip Helen on her back, though he suspected she let him do it. \n\n\"Kevin, I'm in the pool, come quick!\" she shouted as she heard him entering the cabin.\n\n\"What's the rush?\" \n\n\"I've found a channel that's about to broadcast the Game of Thrones season final. It's about to start.\" \n\n\"Kickass!\" \n\nThe cabin had a small, temperature-controlled plunge pool that was facing the river. You could relax while watching the happy dash of the water below and experience dipping without risking pneumonia. Helen dragged the big flat screen from the living room, so it faced the terrace. \n\n\"Numberrrrr sixty-five!\" she hollered as Kevin stepped outside the room and onto the parquet surrounding the pool.\n\n\"It's thirty-five. Jesus, I've told you whenever I go on the parquet you shout 'Number thirty-five.' Thirty-five. Kevin Durant\u2014who the hell is sixty-five?\" \n\n\"What do I know about football?\" \n\n\"Football? Really?\" \n\nShe poked her tongue at him.\n\n\"Oh, you're naked.\" He placed the bags from the cafe at the edge of the pool. \n\n\"Yeah, I used to be ashamed of my body, but now I have you ashamed of my body as well. It sort of distributes the burden. If we can find three more people who can be ashamed of my body, I'll probably start wearing bikinis.\" \n\nHe kneeled and kissed her lips. She almost pulled him into the pool, but he managed to escape. \"What's the lube doing here?\" He pointed at the white tube sitting not so innocently on a towel at the pool's rim.\n\nHelen opened her mouth, faking surprise. \"What the hell? How did this thing get here?\"\n\n\"I wonder.\" \n\n\"I'm okay with you wondering. Did you get my coffee exactly right?\" \n\n\"Relax, precision is my middle and a half name, though the guy at Starbucks said the Mars Rover probably has a less complex instruction set than your coffee.\" \n\nHelen gave a Bronx cheer. \"Simple coffee is for pussies. What the hell is that?\" She picked up from the bag a large cup containing a festival of black and brown, ending with a frosty top. \n\n\"That's my pussies' coffee; it's local,\" Kevin said. \"Latte Submarine. They dunk balls of Swiss chocolate, and they slowly dissolve at the bottom. See all the happy chocolate bubbles? It's dissolving.\" He clapped like a child who's about to get his first puppy. \n\n\"Are you sure this is safe, Kev?\" She took a sip and giggled. \n\n\"Hey!\"\n\n\"Looks dangerous. It has too many calories I don't want you to get hurt.\" She took a bigger sip and painted herself a dark mustache. \n\n\"Tom Selleck, I presume?\"\n\nShe licked her upper lip, aiming for Scarlett Johansson sensual, sensual but it came out more like Amy Schumer awkward. \n\n\"Give me back my coffee, you thief!\" \n\n\"Can't help it. The heart wants what the heart wants.\" \n\n\"If the heart wants the heart can go fetch. It's my coffee.\"\n\n\"Why are you still dressed?\"\n\nKevin took his shirt off and twirled it around before tossing it with great showmanship. He kicked off a shoe next, his body moving to the Game of Thrones opening theme's cello and violin playing on the screen, while he hummed with the music. He twisted his lithe body and teased with each item like a stripper on a sleazy stage. Helen laughed, clapped, and catcalled. \n\n\"If you wanna burn calories, I have the perfect solution for you,\" he said. \"Dracarys!\"\n\n\"Haha. Shorts off! This is an underwear-free pool.\" \n\n\"Give me back my coffee, Helen.\"\n\n\"I think I'm beginning to develop feelings for it.\"\n\nHe grumbled but let her have it because loving someone meant you sometimes sacrificed your coffee. He took her cup of coffee instead and snuggled against her. \n\nHelen always thought that watching Game of Thrones with Kevin was one of the best experiences life had to offer. It turned out that watching Game of Thrones in a warm pool with a naked Kevin was way better. It was distracting, in a good way. On the commercial breaks, Helen insisted on giving Kevin a body massage. She was pretty terrible at it, but she was just looking for excuses to touch him. \n\n\"HBO drifted so far away from Martin's books.\" She kneaded his ass cheek. \n\n\"I'm willing to bet that even if it were a movie about earwax, some nerd is gonna stand up and say, 'Hey! That's not how it happened in the book,'\" Kevin said. \n\n\"I'm not a nerd.\" \n\n\"You're a dork in denial.\" Her index finger pressed and slipped inside his ass, and he clenched. \"Ouch!\"\n\n\"Sorry.\" \n\n\"Are you certain this is a legit ancient Chinese body massage technique?\" he said.\n\n\"I told you already. It's called Ho Chi Wa and it's from the third dynasty.\" \n\n\"You're making shit up as we speak, aren't you?\" \n\nIt was the season finale, and they both had a moment of 'Oh, finally!' as 'You know nothing, Jon Snow!' gave his King in the North Pole to 'Where are my dragons?' Daenerys. Helen was already hard, and the erotic scene was just an excuse. She pulled Kevin into her lap and nibbled on his ear. \"You thinking what I'm thinking, Kev?\"\n\n\"Daenerys Storm Born, Targaryen, Khaleesi, Breaker of Chains, Mother of Dragons, Snow?\" \n\n\"I was thinking something else.\"\n\n\"That if she gets pregnant, he'll say 'He knows nothing!'?\"\n\n\"Nope.\"\n\n\"But I'm getting warmer, right?\" \n\n\"Remind me to never ask you what you're thinking.\" Helen's arms encircled him, and she pulled him closer. Her cock snuggled between his ass cheeks. \"Relax, I need to finish your Chinese body massage.\"\n\nShe leaned forward, and Kevin could feel her large balls against his backside as the massage worked upwards, the smooth orbs raking across his rear end. She didn't know her own strength, and the body massage was quite horrible, but she also peppered the back of his neck with small kisses, and who can say no to that? \n\nShe lifted him and carried him to the pool's edge, setting him down on his stomach on the soft towel. She positioned herself between his legs and spread his buttocks. His small, tightly drawn scrotum became fully displayed. She leaned in and tenderly kissed it. Kevin shivered. \n\n\"It's like a little dancing button.\" Helen giggled.\n\n\"Shut up!\"\n\nShe buried her chin in his cleft and pressed her lips to his starfish in a passionate kiss. His sphincter launched into a flurry of spasms. ",
        "\"Fuck! Where did you learn to do that?\" \n\n\"All part of the Ho Chi Wa technique. They were pretty wild back in the second dynasty.\"\n\n\"The third, Pinocchio.\" \n\nFor the last days, whenever Kevin fell asleep, Helen stayed an hour longer online and consumed everything she could about improving sex. She really wanted to be his best. A site she'd opened yesterday (and cleaned the history frantically afterward), suggested ass play. \n\nShe began teasing the tender, sensitive skin that surrounded his orifice with the tip of her tongue. Kevin gave squeals of delight whenever she touched a sensitive spot. \n\nHe tried to clench his butt, but she held his cheeks pried apart. She began licking the inviting target in long slow strokes, beginning with his balls and going all the way to the top of his cleft. It felt like winning a gold medal when he pressed his butt back against her tongue.\n\nHe relaxed against her, and his little hole opened, welcoming. She licked the rim with the tip of her tongue, and it clamped shut. She pressed the tip of her tongue into the muscle, and the starfish parted for her. Kevin let out a deep moan. \n\nShe forcefully darted her tongue in and out. Once Kevin relaxed and was fully open, she started running her tongue in circles around his opened rim.\n\n\"Oh my God, Helen.\" \n\nShe mashed her face deep between his cheeks and pushed her velvety tongue in and out of his sphincter. He groaned and pulled his legs back even farther. She slurped all around his ring, then with the tip worked his muscular butt. \n\nShe pulled off and opened her mouth wide, then locked back down on his ring, sucking it into her mouth, nibbling very gently. It drove Kevin crazy, and his legs started kicking uselessly. She pulled back and grabbed his cock, milking the tip. \"Will you do the same to me tonight?\" \n\n\"Sure. Jesus. Don't stop!\" \n\n\"I'll let you go to fifth base on me if you will. We haven't done that.\" She pressed again and wiggled her tongue inside him. \n\n\"Ohhh.\" Kevin moaned into the towel, the image of him penetrating her butt and her tongue inside, plus her hand on his cock sent him over the edge. He started spurting in short bursts into the towel. His body heaved, but she didn't let go of his cock, and her tongue remained buried inside him and wiggling the whole time as he came. \n\n\"I'm going to wash my mouth, because I feel like kissing you. And, well...\"\n\nWhen she came back and collapsed on the towel beside him, he was still dizzy and breathing hard. She snuggled close, giving him time to recover. Her lips brushed the tip of his ear, and her hands rubbed his ass cheeks. \n\n\"I love you,\" she said. \"I should have told you a long time ago.\" \n\nHe turned his head to her and smiled tiredly. His smile ignited hers, and she pressed her lips against his. Then she ran her tongue over his lips, tracing their outline with her tip. It made him laugh. \n\nShe pulled to her knees, and he felt her frantically messing behind him. Then he heard the sound of the tube squeezed. He felt her draw back slightly, and then the pressure as she lined up the head of her cock with his wet hole. \n\n\"Ah, Helen, I\u2014\"\n\nHe didn't get to finish the sentence as she collapsed against him, burying her cock inside him in one smooth stroke. \n\n\"Aaaah,\" he let out a gasp that echoed her own as she filled him. He jolted as the big head stretched his tunnel as it penetrated. His fingers clenched the towel, and he collapsed under Helen's weight. She was big, and it still took some time to adjust. Plus, he was a bit sore. But it was a small price compared to the feeling of her naked body pressing against his back, her nipples raking his shoulders, her lips kissing the back of his neck, and her heavy balls resting up against his. \n\n\"Mmmmm,\" she hummed. \"That's the best, Kev. Feels amazing being inside you like that.\" \n\n\"I love you loving me loving that you're loving, loving...wait, where was I?\" \n\n\"Loving.\" \n\nFor a time, they just lay there, bodies melded together. Helen lay on top of him, taking deep breaths, murmuring nothings and kissing him slowly. Her cock flexed every now and then, inside him, each time causing him to emit a surprised cry. Helen was happy just to relax and enjoy his body and welcoming warmth. The feeling of him wrapped around her as her body and arms were wrapped around him was the best feeling in the world, and she wanted to memorize it. She pressed her taller body down on his, and she closed her eyes and concentrated on every sensation, trying to sync her breaths with his, like a single body made of two people. \n\n\"Did you fall asleep back there?\" he said.\n\nShe sank gently, all the way to the root of her cock until her mons pressed to his butt. Kevin clenched around her, his hole milking her, and Helen gasped her approval. His impaled body adjusted to her cock. He was full, but now he wanted more. He still had a hard time admitting to himself that he loved being penetrated. It went against everything he was raised to be. Back home, they had terrible names for people like him. But the sinful shame also provided the excitement of the forbidden fruit. He clenched around her and had goosebumps when he felt the resistance of her big head somewhere deep inside him. It started a warmth that traveled from his butt all the way to his cock as it hardened again. The sensation was addictive, and he did it again and again. \n\nShe started to gently rock against him, her cock filling him completely, with just the slightest of movements enough to set him off. \n\n\"Ohhh.\" He closed his eyes and succumbed to the emotional high of being bred by her. \n\nShe stepped up a notch and begun a slow humping rhythm. He gasped each time she raised her hips up and crashed back into him. With her body still pressed tightly against him, she worked her hips back and forth. She lifted them as much as she could manage, then dove inside him with a satisfying slap. \n\nBuilding up into a rhythm, she fucked him with long, even strokes. The sound of skin clapping together mixed in with his pants and her satisfied sighs. It was a concerto for Helen and Kevin. \n\nOne, two. Up, down. In, out. His dick twitched with each pump of her hips, his ass quailed and clenched, the breath was driven from his lungs. \n\nOne, two. Up, down. In, out. Kevin clawed at the towel, his toes curled. Helen kept fucking him, eyes fixed on the back of his head, her powerful muscles flexing on her back. She looked like a lithe predator above her pray. \n\n\"Fuuuuck,\" he groaned. \n\nShe rose off him and pulled him into a more traditional doggy style position. His tiny ass was raised high like a flag that was begging for her. Helen placed both hands on his hips and started to pump slowly. She watched with satisfaction as his hole swallowed her wet cock. His ring stretched and hugged her pole lovingly. His insides welcomed her. She bottomed inside him, and grabbed his bottom, squeezing it around her shaft. \n\nKevin moaned, and it made her proud. She was getting better at this. \n\n\"Like it?\"\n\n\"Ahhh. Yeah, yeah.\" \n\nShe grabbed his hips again and started pumping harder. She pushed deeper. Each time she bottomed inside him, her large smooth sack swung and hit his own. His ass quivered, and he gave a small, wanton 'ah' with each satisfying slap. She picked up the pace quickly, driving into him with long, fast strokes that jolted him forward each time her mons bounced against his ass. \n\n\"That's it, Kev, moan for me,\" Helen said, her voice breathy. \"I want to know that you're enjoying this too.\"\n\n\"It's so good. It's...ohhh fuuck!\" He started spraying the towel with his seed again. Slim ropes of white liquid created another painting of lust on the fabric. \n\nTightening her grip on his hips, Helen upped the tempo once again. Each thrust slammed into his cheeks, her cock conquering his wet tunnel, enjoying the immense tightness as her corona scraped his insides. His body clenched around her and milked her. As she drove her hips into him, she pulled back on his waist, pulling him onto her cock with each thrust. \n\nHer thick length jerked and throbbed inside him, pulsing against his abused ass. She felt her ass tighten and knew the cliff was in sight, so she stopped. Her cock disappeared inside him, all the way, throbbing. She dug her fingers in his ass cheeks and panted hard, fighting her orgasm. She stared at his back, which was glistening with sweat. Her fingers painted circles on his tiny ass that was mashed against her mons, lovingly massaging her twitching cock. She grabbed his shoulders and pulled him up on his knees. Still etched deep inside him, she turned his head and sought his lips. \n\nKevin pushed her back and collapsed forward. Her cock almost came out of him so he slowly rolled backward on his hands and knees. It was a sinful delight to feel her gliding back into his anal passage, filling every inch within. He rocked back into her toned hips. Slowly, he found his rhythm, but soon he shifted gear and was slamming into her. Helen held his hips but allowed him to take control. \n\n\"Oh, god, Kev, slow, slower. I'm...\" \n\nHe pushed himself wildly into her, not heeding her pleas. His need to feel her cum pour inside him made him go faster.\n\nHer cock twitched hard inside him, once, twice. Her ass clenched hard. She tried to hold the dam like that Dutch kid from the story but was too late. \n\n\"Ahhhh!\" Helen shouted and shot her viscous cum into him. He could physically feel the pressure build within himself as her warm load flooded his insides. She thrust hard, meeting his backward thrusts. She felt like her body poured into his as shot after shot of her fluids filled his clenching tunnel. \n\n\"Ah, ah, ah.\" Her ass clenched with each thrust and her toes curled. \"Ahhh!\" \n\nShe thrust a few more times, sending more ropes of cum inside him. Then with a long, satisfied sigh, Helen flopped down, wrapping her arms around his chest and clinging tightly. Her full breasts pressed flush against his back, while her panting breaths synched with his own. \n\nEven as her own orgasm started to subside, she humped him a little more, grinding her hips, the small movement still enough to churn her cock inside him. She wanted to wring out the last drop of pleasure from their lovemaking. \n\n\"I'm getting better at this!\" she huffed. She didn't ask, she stated a fact. \"Am I now the best of the best?\"\n\n\"You were always the best.\"\n\n\"I love you.\" Helen tugged on his earlobes with her teeth, then she licked inside his ear. It tickled, and Kevin tried getting away. She buried her nose at the back of his neck, and even though she was soft, she begun gyrating inside him once more. \n\n\"Jesus, again?\"\n\n\"I didn't cum yet.\"\n\n\"Helen, you just had\u2014\" \n\n\"I faked my orgasm,\" she giggled. \"Yep.\" \n\n\"Right! Okay, just let me take down a note.\"\n\n\"To whom?\" \n\n\"I'll send it in a bottle down the river. 'To whom it may concern. She wants sex again. I'm holed up in the bedroom, door's locked. Water's running low, and I'm not sure the food will last. Send help!'\" \n\n\"Hey!\" \n\nHe swiveled his head backward and won a torrent of kisses on his lips and ear. \"I'm only human. We did it twice this morning and four times last night. I'm a bit raw. Aren't you?\"\n\n\"I have twenty-nine years of repressed sexual needs inside me, Kev.\"\n\n\"And I'm the one who's supposed to compensate for that?\"\n\n\"Yes?\" Her smile was butterflies, sunshine, and pigtails' innocence. \"It's a dirty job, but someone gotta do it.\"\n\n\"I'm not sure you'd want me to, once you've read my CV.\" \n\n\"Huh?\" \n\nHe sighed. \"I need to come clean about a few things, Helen. Fuck that, about a ton of things.\" \n\nShe finally let go of his body and nodded, pulling out of him. Her soft cock left his hole, and a stream of futanari goo started streaming down his legs. He dunked himself in the pool. \n\n\"I'm missing some parts, right? Like the night you came home at five thirty after you called me from who knows where?\" \n\nKevin nodded. \"Will you promise to still love me once I tell you everything?\"\n\nShe took his hand and kissed it gently, then pressed it against her cheek. \"You're the one who said you don't want secrets between us.\"\n\nHe sighed. \"Much easier when they're your secrets. Between you and me, Helen, you're a much better human being.\"\n\n\"Bullshit!\"\n\nKevin pulled himself to the edge of the pool and told her everything, or almost everything. He told her about the time Diana took him to the club, forced him to humiliate himself in public, and then half raped him when she was high on something. Kevin told her how they visited Nadine's mansion, about the illegal wrestling match and the Lace Boys. He told her about the time Diana got home drunk and how he ran away. Kevin told her about Ginger and the twins, and finally about the crazy angels-and-devils sex party at the mansion. He kept only the most embarrassing parts to himself, like sex with Sin and the twins or the details of his trysts with Nadine. \n\nHelen listened intently. She didn't judge or say anything. If some of the things he said shocked her, she kept it hidden. \n\n\"Wow.\" She said when he was done. \"Simply wow.\" \n\n\"And then some.\" \n\n\"I know Diana hangs around a wild bunch, but this is...wow. Illegal wrestling and illegal gambling. Prostitutes. Drugs? Sex trafficking. And you say she works for these people? Who are they exactly?\"\n\n\"I'm not sure. Nadine is one of them. I saw that big lady who came to the penthouse a couple of times...Leanne?\"\n\n\"Who?\"\n\n\"She's your colleague. You know, a little on the heavy side, twelve-year-old level of sophistication kind of innuendo.\" \n\n\"Marianne?\"\n\n\"Yeah. I saw Marianne once at Nadine's mansion at the wrestling arena. And I think I saw her at the sex party too.\"\n\n\"Are you certain?\"\n\nKevin nodded.\n\n\"What the hell was she doing there?\"\n\nKevin shrugged. \"Fucking Lace Boys?\"\n\n\"That I can believe.\" Helen nodded. \"She gave me a Lace Boys card once, told me I should give it a try.\"\n\n\"There was someone else too. That older lady, Suzan Owens\u2014you talked with her at the fundraising event. I'm pretty sure that she was there too. I didn't see her properly, but you can't mistake that southern drawl of hers. It's like a female Tommy Lee Jones on steroids.\" \n\n\"It makes no sense, Kev.\"\n\n\"I know what I saw.\" \n\n\"Marianne is our Bay Area Acquisitions Manager, and Suzan is a new board member and a respectable businesswoman.\"\n\nKevin shrugged. \n\n\"Weird and scary. About this Nadine\u2014\"\n\n\"Shit.\"\n\n\"You've slept with her?\" \n\nKevin took a deep breath. \"Your sister fucks whomever she wants, wherever she wants, and whenever she wants. Diana doesn't even bother to hide it. Plus, she's not really my girlfriend. It's more of an 'If you break up with me I'll screw your dad,' sort of relationship.\"\n\n\"That was kind of a twisted way of saying yes.\" \n\n\"Yeah.\"\n\n\"I'm not judging.\"\n\n\"Sounds like you do.\" \n\n\"I'm just a...little jealous.\" Helen squinted her eyes. \"Is she...? Is she beautiful?\" \n\n\"She's exotic.\"\n\n\"So is an anteater.\" \n\n\"She looks like Salma Hayek if Salma Hayek were younger, taller, had perfect caramel skin and darker hair.\"\n\n\"You're not helping, Kev.\" \n\n\"I don't love her. I love you.\" \n\n\"What?\" She lay down her long naked body on the wooden parquet and closed her eyes, letting the last rays of the day sink into her golden skin.\n\n\"I said, I don't love her. I love you.\"\n\n\"You what?\"\n\n\"Something wrong with your ears?\"\n\n\"I just love hearing you say that.\" \n\n\"Well, my mom used to say...\" He paused, then looked to the clear sky, then back at Helen. \"Fuck it! Doesn't matter what she used to say.\"\n\n\"Hey!\" Helen's eye snapped open. \"Don't do that!\"\n\nKevin shrugged. \n\n\"We are what we are, Kev. Part of that is our parents, the good and the bad. She did a lot of good raising you up the way you are.\"\n\nThere was a massive hole inside Kevin left by his mother's death. Despite her choices and the way she had destroyed their family, his mother was always his moral compass. She was also the only person he ever confided in about everything. His mother had all the answers, and her absence was a wound that never stopped bleeding. But as he looked inward to that hole, he saw the shy smile of a girl with an eyepatch. Yes, she was more than a bit of a dork, very insecure, and she never could offer any advice about people, because she didn't really understand them. But her love was real, and it filled him and soothed all the rough edges. \n\nHe snuggled close to her and kissed her lips, watching her eye slowly close again. \n\n---\n\nHelen yawned and stretched on the uncomfortable plane seat. Her hand rested on Kevin's chest, under his shirt. She'd slept the entire time, and her head nestled against his shoulder. She remembered all the times she wanted to touch him and couldn't, so she kissed his neck and thought happy thoughts. \"Was I out for long?\" \n\nKevin nodded. \"We've got less than two hours to landing.\" \n\n\"Fuck! Did I miss Antman?\"\n\n\"Meh, you didn't miss much. It was about a man stung by a radioactive aunt. His superpower was telling how your mom was just like you when she was young.\" \n\n\"Why didn't you wake me up? You know how I like sci-fi.\"\n\nKevin's finger trailed the elegant curve of her mouth. Helen's lips were one of her best features; they reminded him of rose petals. When she pouted, it actually took some effort not to kiss them. \"I figured you needed the sleep after keeping us busy till one a.m.\"\n\n\"Actually, we kept at it until two a.m.,\" Helen said. \n\n\"Where was I?\"\n\n\"Asleep.\" Helen giggled. \"I was very gentle.\" \n\n\"You're beginning to scare me, you insatiable woman. No, like really.\"\n\nHer palm clenched around his nipple. She tried stretching her long legs. \"Boy, I hate flying.\" \n\n\"Kinda boring,\" Kevin said. \"I thought it would be super-awesome, but it's as fun as a never-ending bus ride.\" \n\n\"Planes don't bore me, they stress me. Especially when the pilot speaks a foreign language, I'm always thinking he's saying that we're about to crash, and we should kiss our loved ones goodbye.\"\n\nKevin's hand under the blanket that covered both of them traveled down between her legs and lifted her skirt. His fingers found her bulge, gently lifted the elastic band and fished out her cock. He started kneading her soft member. \n\nThere was no one in the seat next to them, and across the aisle the passengers were asleep. Plus he did it very gently, not disturbing the blanket. Helen closed her eye and snuggled closer, her head resting in the crook of his neck. \"I suddenly like flying,\" she whispered. \"Very much. It's a miracle.\"\n\nHe played with her member for an hour. Each time her breath quickened, he pulled his hand off. At last, frustrated, she closed her hand on his. Her fingers were long and delicate, but they were deceiving. Like many futanari, she was much stronger than most men. She pumped herself using his hand until she came, her fluids running down her cock.\n\n\"Oops, I obviously didn't think this one through,\" she huffed. Kevin thought he should offer his mouth as that was massive wicked, but then the pre-landing seatbelts sign popped on. He offered her a tissue instead.\n\n\"Are we going to talk about the elephant on the plane?\" Helen suddenly said. \"I didn't feel like bringing it up because I didn't want to ruin the good vibes. But we need to wake up.\" \n\n\"An elephant on the plane sounds like a crappy idea.\" \n\n\"I was talking about Diana.\"\n\n\"Oh.\"\n\nHelen twisted her mouth. \"Yeah. I know you think I don't have it in me to stand up to her. But I did it before. Anyway, we don't have a choice.\" \n\n\"What are you talking about?\" \n\n\"We'll do it like taking off a band-aid. The best method is a single hard pull. I'll explain to her how things are between us and...she'll have to understand.\" Helen puffed her cheeks. She was sure the confrontation would be nothing like removing a band-aid. More like defusing an IED by banging it with a hammer. ",
        "\"Helen, which part of Diana holding my dad's promissory note didn't you get? You don't know her if you think she won't take it out on him.\" \n\n\"I'll buy the promissory note. 125 K, right? No biggie.\" \n\n\"She won't sell.\" \n\n\"I'll give your dad the money, then. It's just a promissory note. If the indebted wants to pay, the person owning the debt must accept.\" \n\n\"First, my dad would never agree to that, and second, do you really wanna buy me?\"\n\n\"What?\" She pulled her hand out of his shirt and straightened in her seat. \"What?\"\n\n\"You're just like Nadine. She offered much more money, by the way.\" \n\n\"What? I'm...I want to be with you.\"\n\n\"And when people ask how we've met you'll say you bought me for the bargain price of 125K?\" \n\n\"What? Jesus, Kev, I don't care about the stupid money. It's a gift.\"\n\n\"No one gives 125K as a gift.\" \n\nShe smirked. \"Let me guess, your mom used to say that?\"\n\n\"Stop it! Don't be mean. I want this just as bad as you do. But I want to come into this relationship with a clean slate. On equal terms. I don't want something like money to sit there between us.\" \n\nShe stared at him, her face was a mask of confusion and shock. \"You can't be her boyfriend anymore, Kevin.\" \n\n\"Why not? I've faked it for six months. I can keep doing it.\"\n\n\"That's insane, Kev. You can't.\"\n\n\"And whose fault is that?\"\n\n\"What?\"\n\n\"Diana wasn't alone on this, she had an accomplice.\"\n\nHelen thought at first that he was talking about Nadine, but then she remembered, and it felt like a fist to the gut. \n\n\"The night we met? Almost six months ago, I begged you to cut me some slack. Not metaphorically, I actually begged. I told you that you're not really leaving me any choice, and you told me to grow up.\"\n\n\"So this is what? Payback time? You're punishing me now?\" Her voice trembled. \n\n\"Hell, no! I forgave you a long time ago when I understood how things worked between you and Diana. But you said something important that night. That adults need to own their shit. We'll own it, eventually. But you don't get to buy me, because I'm not for sale. I really love you, and I want to be someone you love, not a product you bought. Shit! Oh!\" He cursed when he saw the first tear running down her cheek. He pulled her head towards his body. Helen pushed him away at first, but he started kissing her, and she was always desperate for his touch. \"Hey. Hey. Don't.\" He wiped the tear; more were coming forth. \"It's just a setback. I'll find a solution\u2014I always do.\"\n\n\"How the hell are you supposed to come up with 125K?\" she sobbed. \n\n\"I'm not sitting on my ass, Helen. You know me, I never quit. I'm like a little rhinoceros.\"\n\n\"How?\"\n\n\"I'm attacking it from several angles. My dad's business' biggest problem is that he still thinks he's in the eighties. People don't visit electronic shops today when they can buy cheaper without taking their ass off the couch. I took a web-design course last semester. The project I've delivered was an e-commerce site for my dad. It's been running for four weeks, and already my dad's revenues have picked up.\" He stopped to wipe another tear. \"I won't be working as a part-time diving instructor for the rest of my life either. I have only three courses left in this semester to finish my degree, and I have already sent my CV out. Got an interview next week with a company that does 3D gem simulations for the diamond industry in India. They've got an opening for a beginner software engineer.\" He wiped her tears again and kissed her. \"It's a 75K salary; a nice start. I'll keep working on the weekends at the diving club. I also plan on taking gigs using platforms like Freelancer, offering my budding web skills.\" He tried to smile, hoping to lighten the mood. \"I'm not lazy. I'll do what it takes.\"\n\n\"So when?\"\n\n\"If I'm able to take out a loan, then in a year maybe? Probably less?\" \n\n\"What? No! No way!\" \n\n\"A year is a long time, Helen. My dad's business can pick up; Diana might be fed up with me. A ton of things can happen.\"\n\n\"You're proud, Kevin.\"\n\n\"Huh?\" \n\n\"A seventy-year-old ex-landlord needs her washing machine fixed, and immediately you drop by her place, even though you owe her nothing. But God forbid anyone ever offers you help. You're proud and stubborn.\" She wiped her tear with her hand. \"I'm not giving you up!\"\n\n\"No one is giving anyone up. It's just a setback. Hey. Don't break my heart like that, Helen,\" he said tenderly. \"Be a Valkyrie. I've got to do it my way or... You'll see, we'll be together. We just need a little patience.\"\n\n\"I'm not waiting a year or a month!\"\n\nThere was stressed silence in the cab on their way home. Kevin tried hugging her and soothing with kisses, but she went back into that sad cave she sometimes holed up in. Her stress only grew once she shut off the flight mode on her smartphone and started getting emails and messages. \n\n\"What the...?\"\n\n\"What happened?\" Kevin placed a hand on her leg and rubbed it.\n\n\"This can't be right. Something...I gotta go to the office.\" \n\n\"Now?\" \n\n\"Something doesn't add up.\" \n\n\"But you're officially on vacation until tomorrow. Diana is at the club today, so we have the entire house to ourselves till at least eleven. We can, you know...\" He kissed her neck, and Helen closed her eye and breathed deeply. There was nothing she wanted more right now than diving under the sheets with Kevin in her big lonely bed.\n\n\"I gotta go to work, Kev.\" \n\n---\n\nThe house was quiet, but his mind was a buzzing hive. Kevin almost caved in when Helen began crying, and he picked up his phone several times after they parted ways, to tell her he had changed his mind. Should he let her pay his father's debt? His father would never agree to take money from a stranger, but he wouldn't have to know the money came from Helen. Kevin could lie and invent a story. There were so many lies circling his life already; would another small one make such a difference?\n\nHe didn't want to wait a year, either, and he suspected that it might take longer. His credit score still sucked ass. There was little chance of getting a loan anytime soon. \n\nFor the millionth time since his mother's death, he wanted to call her and ask her what to do.\n\nWhen in doubt, get busy. That was Kevin's modus operandi. He loaded the machine with the last batch of their vacation's laundry, shoved the previous batch into the dryer, and started folding dried shirts from the first batch. There was a knock on the penthouse door. \n\n\"Hi, Purple Eyes.\" \n\nHe stared at her, blinking stupidly. She was the last person he expected to see on his doorstep. She wore a long, slim, elegant purple overcoat, buttoned up to her neck. Hot, effortlessly. \n\n\"If the mountain won't come to Nadine, then Nadine will swallow her pride and come to visit Kevin. How was your vacation?\" \n\n\"Super.\"\n\nNadine pulled out her cigarette pack. Despite the calm, predatory demeanor which was her modus operandi, her fingers shook, and she tucked the pack right in without extracting a cigarette. \"You're planning on letting me stand here for long?\" \n\n\"I...no, sure. Come in. Want something to drink?\" \n\n\"I'm hungry.\" She wetted her lips.\n\n\"Diana is still at the club.\"\n\n\"Who gives a fuck?\" \n\nHe coughed. \"I can fix you something to eat.\" \n\n\"I'm not hungry for food.\" She entered the penthouse, scanning her surroundings. \"So this is the Brion palace. Nice.\" \n\n\"Nadine, there is something\u2014\"\n\n\"It never happened to me before.\" Nadine stopped in the middle of the living room, hands on her hips. She looked around her, her face contorted into a snarl, like a lioness sniffing out another lioness' hunting grounds. Kevin wondered if she'd pee on the TV to establish dominance. \"There's always a first, I guess.\" \n\n\"First what?\"\n\n\"Men chase me; it's not the other way around, Kevin. I'm hot. This ain't right.\"\n\nHe nodded.\n\n\"I've been waiting for you to call. And waiting and waiting. Like a fucking deluded girl who waits for the guy to send her a message the day after he fucked her. I'm too old for these kinds of games.\"\n\n\"Nadine\u2014\"\n\n\"Tell your mom there is no heaven or hell, only the here and the now.\"\n\n\"My mom is dead.\"\n\nHer hand went down and pulled out her pack again, then returned it to her pocket without extracting a cigarette. It was just a nervous tick. \"It's a man-eat-man world. You gotta have the biggest teeth to take what you want; otherwise, you're screwed.\"\n\n\"It's not a man-eat-man world, Nadine, and you never took anything I didn't want to give.\" \n\n\"Because you like to take on your terms only. When you're fed up with that psychotic bitch who calls herself your girlfriend.\"\n\n\"I've been fed up with her from day one, and the only reason I'm with Diana is that you enabled her.\"\n\n\"You're an asshole, Kev.\"\n\nHe nodded. \n\n\"Nodding like a fucking garden gnome. Did you hear what I said?\" \n\n\"What do you want, Nadine?\" \n\nShe crossed the distance between them and grabbed his shirt. \"Fuck you! You know exactly what I want.\" \n\n\"Nadine, things have\u2014\"\n\n\"I get it! Your parents fucked you up good.\" Her fingers trailed the curve of his neck. \"You were raised by crazy religious care-bears. You're not special, Kev. We were all fucked up by our parents. Mine wanted to operate on my little sister and make her a woman. You're not special.\" \n\n\"I never said I was.\"'\n\n\"You can't be mine because of what I do. I get it. It's probably half the excitement. The fact that you're nothing like anyone I know.\" She sought his lips, but he turned his head away. \"So here I am, on your terms. Again! Tell me what you want, Kev. Want me to beg? Is that what makes you hard?\"\n\n\"Nadine,\" he said tenderly.\n\nShe opened the first button of her trench coat, then the next. They popped one after another, the little guardians of her caramel skin. Kevin gasped. Underneath she wore a see-through crochet beach dress and nothing else. \n\n\"Nadine.\" \n\n\"I'm crazy about you, Kevin. I'm in\u2014\" She caressed his cheek.\n\n\"Nadine, I'm so sorry.\" \n\n\"Don't get sorry, get naked.\"\n\nHe shook his head. \n\n\"Want me to help you?\" She smiled and started lifting his shirt. \n\n\"Nadine, stop!\" He raised his voice, and at last, she registered that something wasn't the same between them. Her smile froze, and her eyes squinted to slits. \n\n\"Things have changed,\" he said tenderly.\n\n\"Changed? Changed how? Ooh.\" Nadine's smile had nails, whips, and fire in it. \"Helen?\"\n\nKevin didn't answer; he didn't have to. She could read the answer in his blush.\n\n\"Just a friend, eh?\" She smirked.\n\n\"I'm sorry.\"\n\n\"Diana knows?\"\n\nKevin shook his head.\n\n\"Stupid me. Coming here, blabbering about... Did you enjoy the show?\" \n\nHe tried to touch her cheek, but she slapped his hand, almost brutally. \n\n\"It makes sense. Helen's not a pimp like me. She's a decorated ex-marine, morally superior. Pure and brave with a conscience as spotless as Bill Clinton not having sexual relation with that woman. She just fucks her sister's boyfriend behind her sister's back.\" \n\n\"Nadine.\" \n\n\"She's not what you think she is, Kevin.\" \n\n\"I'm sorry.\"\n\n\"Me too.\" She buttoned her coat. \"Marianne gave her my Lace Boys' card a few months ago. She's been a regular client since.\" \n\n\"That's a lie, Nadine.\" \n\n\"Is it?\" \n\n\"Trashing her is beneath you. You have a beef with me; please don't take it out on her. \" \n\n\"I don't have any beef with you, Kevin. In fact, I don't have anything with you. Have a nice life with your morally superior cyclops.\" \n\n---\n\nIt took Helen one call to Ms. Lewinski to get the number. However, once she had it, she was reluctant to use it. She pressed all the digits but didn't touch 'Dial.' Her Samsung had hung like a failed exam in her car mount during the entire ride to her office. Once she'd parked, she picked up the phone and accidentally dialed. \n\n\"Hello?\"\n\n\"S-sorry,\" she mumbled. \"Wrong number.\" \n\n\"Helen?\"\n\nShe hung up, heart pounding. Five seconds later, her phone rang. She stared at it like it was an IED with an itch. The concept of a relationship was new to her, but talking to Kevin's dad behind Kevin's back suddenly didn't seem so hot. What she had with Kevin was too precious to risk. \n\nThe phone went quiet, then started ringing again. Helen took a deep breath.\n\n\"Helen?\"\n\n\"Who is this?\"\n\n\"This is Finn O'Brien, you just called me.\" He had a tenor voice that was pleasant on the ears. He sounded nothing like Kevin. \n\n\"It's, it was a mistake.\"\n\n\"This is Helen Brion, right? I have a True Call application.\" \n\nCrap. Technology bested her. \"It was a mistake; I shouldn't have called.\" \n\n\"Helen, please don't hang up. Please.\" There was genuine urgency in his voice.\n\n\"Okay.\"\n\n\"Is everything okay with Kevin?\"\n\n\"Sure. Kevin's...we've just returned home.\" \n\nThere was silence on the other end of the line. Finn was processing. Helen wondered how much he knew about the nature of Kevin's relationship with Diana. Kevin never spoke about his dad, and all she knew about him was that he owned an electronics shop and lived in a region that wasn't futanari-tolerant. \n\n\"Helen, is everything really okay with Kevin?\" \n\n\"I...\"\n\n\"Please. I won't judge, and I won't blame. I need to know the truth.\" \n\nIt was her turn to be quiet.\n\n\"It's just that he's become a professional in compartmentalizing. I never seem to get an honest answer from him these days. It's always, 'everything is okay, don't worry.' But I know him; I feel that something isn't right. Please, Helen, I promise I'll never say anything to him. I just need to know that everything is okay.\" \n\nShe took a deep breath. How could she tell Kevin's dad that nothing was okay? That Kevin has been forced into a relationship with Diana that he hated because he wanted to protect his father. That it was her fault. That she loved his son so much it hurt. \n\n\"Kevin speaks very highly of you, Helen. I think he admires you.\"\n\n\"I think he's...I admire him too.\" \n\n\"I've made some terrible mistakes with him in the past. Kevin used to hang with a bunch of people I didn't approve of. They were a bad influence. Instead of trying to understand and be supportive, I...my anger pushed him away. Since then he's learned not to trust me...\" His voice broke, and he took some time to start talking again. \"Sorry for being so emotional, but I'm worried about him. Is, is there a possibility to meet with you face to face, Helen? Just to talk. I'll come over; you say when and where.\"\n\n\"I...\"\n\n\"Helen, please. Kevin is my only son. The only family I have left.\" \n\n----\n\nIt was almost surreal entering the Richardson & Williams office after her vacation. It had been only two and a half weeks, but she felt like a stranger. Helen was in a good mood, though. The phone call with Kevin's father lifted her spirits. Finn O'Brien sounded like someone who was desperate to help his son. She already believed there might be a way out of their predicament. \n\n\"Oh my God, Helen? You look amazing.\" Jessica Bell, the senior analyst, intercepted her at the door. The older woman changed her attitude towards Helen after she had helped Jessica with the loan. Helen used to be excluded, by default, from any office social activities. Nowadays Jessica made sure to invite her whenever everyone at the office went for a drink. She kept her updated about her granddaughter's new shenanigans. She was almost motherly now, where once she'd maintained a professional distance, mirroring Helen's coldness. \n\n\"Oh my God, Helen. I didn't recognize you. Seriously! I asked myself who is this blond model, and what the hell is she doing here?\" \n\n\"Worked on my tan.\" Helen smiled. \"I have a hard time recognizing myself in the mirror too.\" \n\nJessica scanned her. \"It's not just the tan.\"\n\n\"Huh?\"\n\n\"Yeah. There's definitely an aura.\" \n\nHelen laughed \"Say what now?\" \n\n\"An aura, girl. You're glowing,\" she gave her a conspiratorial wink and a tiny nod. \n\n\"What on earth are you on about?\" \n\n\"Sure. Deny. You go, girl; seems like he was a mind-blowing experience.\" \n\nHe sure was, Helen thought. The office used to be her safest place. She felt appreciated and valued here. The reason she always burned the midnight oil and never took a vacation was that she loved being in this place. But she had been here for five minutes, and already she was thinking about Kevin and how she needed his presence. Helen felt like a stranger in her office, not because the place had changed in her absence, but because she had. \n\nHer excellent mood took a deep dive when she scouted Suzan Owens in Marianne's office. The elder futanari and the Bay Area Purchase Manager were sharing a joke or something similar. Both looked smug. When Helen went past Marianne's office, Suzan lifted her head and gave her a tiny nod. \n\n\"What the hell is she doing here? The board meeting is in a month.\"\n\nJessica shrugged. \"She's a shareholder, too, so I guess she can come whenever she likes. I've seen her a lot lately.\" \n\n\"And what business does she have with Marianne, anyway?\" \n\nJessica shrugged again. \"Dunno. I think they know each other personally.\" \n\n\"What makes you say that?\" Helen remembered everything Kevin said about both Suzan and Marianne. \n\n\"Kind of obvious.\" \n\nThe shades to William's private office were down, and that was strange because she never remembered seeing them like that. William believed in transparency, literally. Helen was surprised to see a new face sitting at the secretary's desk in front of his office. A young black male. \n\n\"Hi, I'm Helen.\" \n\nThe young man nodded quickly. \"Yes, Ms. Brion, of course. I know who you are.\" \n\nWell, she guessed that was unavoidable. Just like they were given a crash course in operating the broken coffee machine on the third floor, new employees were probably briefed by their colleagues about the one-eyed Ice Queen. It never bothered her before, but now it stung. Another change.\n\n\"Is Tina not feeling well?\" \n\n\"Tina doesn't work here anymore as far as I know.\" He smiled weakly. \"I'm replacing her.\" \n\nHelen didn't like changes. \"William is in a meeting?\" she asked \n\nThe young man shook his head. \"Been like that since morning.\" \n\n\"Can I\u2014?\" \n\n\"He asked not to be disturbed.\" \n\n\"Tell him it's me and that's it's important.\" \n\n\"He asked not to be disturbed.\" \n\nShe didn't have the patience to argue. She merely knocked on William's door and entered when he answered. William Richardson, her boss, fifty years old, grey-haired but still very handsome, was staring idly out the window. He played with his Ka-Bar, his Marine combat knife from his service during operation Desert Storm in '91, flipping it in the air and whirling it around his right hand absent-mindedly. \n\n\"Hey, you look different.\" He smiled warmly when he turned and saw her.\n\n\"It's the tan.\" \n\n\"Sit down, sit down.\" He sheathed the knife, placed it in its rightful place on the desk, and pressed the intercom. \"David, please bring two coffees, one for me, one for Helen. Three-quarter decaf extra hot soy latte with two equals.\" He looked at her. \"Yes. You look...you look amazing. And all it took was two and a half weeks of a well-deserved vacation.\" \n\nShe nodded, smiling. Somehow everyone could see Kevin's kisses on her face. She liked it. \"How are things around here?\"\n\n\"Busy.\" \n\n\"Tina quit?\" \n\nHe sighed. There were black circles under William's eyes. \"I had to let her go.\" \n\n\"Why? What did she do?\"\n\n\"Absolutely nothing. Don't ask. By the way, weren't you supposed to come back tomorrow?\"\n\n\"I opened my inbox on the way home from the airport. Well, I read some updates that didn't make sense. I thought I'd just drop by to clear things up.\"\n\n\"What didn't make sense?\" William's iPhone chimed, and he checked it. It was uncharacteristic of her boss. He took anyone engaged in a conversation with him and checking their smartphone as a personal affront. He once publicly shamed an employee who did it in a meeting. ",
        "\"Destiny Mall on the table again?\" Helen said. \"Not just on the table. Marianne's team is working on a deal. I killed that stinker four months ago, that and the Fairmount Park project. Both have miraculously risen from the dead while I was gone.\" \n\n\"Stinker?\" He absentmindedly rechecked his messages. \"I remember you said it was an opportunity.\"\n\n\"What? I would never.\"\n\n\"Really? I'm certain there was an email from you several weeks ago that supported Destiny Mall.\"\n\nHelen's lips pursed like she just chewed on a lemon. \"Impossible!\" \n\n\"I'm...\" He checked his email, but then he had a phone call. \n\n\"What?\" He sounded angry. \"Carmela, we've been through that\u2014 No. No. I'm with Helen. Christ! Stop it! I'm not, I'm not even going to discuss it, Carmela!\" \n\nHelen pointed at the door. \"Do you want me to...?\" \n\nWilliam ended the call and shook his head. \"I'm...wow.\" He rubbed his face. \"My wife and I, we're having difficulties right now. Hell, that's the understatement of the century.\" \n\nHelen nodded. She was never sure how to react in intimate situations. \n\n\"I know I can trust your discretion, Helen. The truth is that my marriage is... The ugly truth is that the only reason I fired Tina is that Carmela insisted that I sack her.\"\n\n\"What?\"\n\n\"She thought I was having an affair with her. Don't ask. She thought I might be having an affair with you, too, Helen.\"\n\n\"What? Why, why would she think something like that?\" \n\n\"It's nothing rational.\" He sighed deeply. \"She wanted me to fire you too.\" \n\n\"What?\" Helen's heart skipped several beats. Her job as a vice-president of Richardson & Williams defined her. At least until recently, it served as the main reason to wake up every morning, knowing that there was a place in her life where she was appreciated and valued. \n\n\"It has nothing to do with you. It's about Carmela and me and what we are going through right now. Don't be alarmed. I've only told you in case the two of you meet, and she acts funny towards you. It isn't rational, I know. But that's the ugly truth right now.\" \n\n\"Maybe I should talk to her?\" \n\nHe shook his head. \"It's best if you don't. I can't find the email, by the way, but I'm not senile. I'm sure Destiny Mall had your blessing.\" \n\n\"No way, William! Marianne's team is running Fairmount Park deal too?\" \n\n\"Marianne's team? I think.\" That also was weird. William micro-managed. It seemed like his personal life deeply affected his ability to run his firm. \"Yes, that's Marianne too.\" \n\n\"That weasel. First, Marianne wanted me on-board, then when she didn't get that, she went behind my back. I'll have a lot to say in the next CEO meeting.\" \n\n\"It's not as simple as it was, Helen. The board has been giving me a rough time lately.\" \n\nAnother scary change. William was always the navigator, and the board was happy to follow the routes he marked, relying on his instincts and experience to choose the profitable pass. \"Let me guess. Suzan Owens?\" \n\n\"Oh, that terrible woman. Sometimes I think she's bought the shares just so she can be a pain in my ass.\" \n\n\"Well, she doesn't run this company. You do. By the way, did you inquire about the ElasticDatica's invoices?\" \n\nHis brow furrowed as he tried to remember. \n\n\"The MS Word invoices. Marianne's team issued the job.\" \n\n\"I'm sorry. I probably should have, but it had completely slipped my mind.\" He ruffled his hair. \"I haven't been myself lately, Helen. This thing with my wife... I'll throw the ball back to you on the matter of Marianne and her team.\" \n\n\"My forte is an analysis based on accurate data, not people, William.\" \n\nAbsent-minded again, he took out his Ka-Bar knife and started playing with it. \"You're my Valkyrie, Helen, there is nothing you can't do.\" \n\n--- \n\nHelen was terrible with people, but numbers were her buddies. Numbers didn't lie, they didn't manipulate, and they never made her feel small or freakish. Numbers talked to her. Spreadsheets and dry figures and charts turned into live, breathing creatures in her head. Trends, loans, credits, leases, mortgages, portfolios, market performance, and research were her best friends. She could spot opportunities where others saw risk and sniff out the danger where others would tread unaware. William spotted her fantastic skill early on. Maybe because his three daughters manifested the futanari gene, William approached her with none of the regular prejudice. He became her mentor and protector. She rewarded him with absolute loyalty.\n\nNumbers didn't lie, and Marianne's investment offer on her desk stunk to high heaven. Destiny Mall was supposedly a vast new complex of malls in the area of the demolished city high-rises north of the river. The numbers were excellent, beyond excellent. The high rates of return were impossible. The only reason for something to look so good was if someone had cooked the numbers. When she looked deeper, it didn't even appear like a bad investment\u2014it looked more like a real-estate Ponzi scheme. \n\nBut why the hell would Marianne want to hurt her own company? Maybe Suzan had shares in Destiny Mall? She wouldn't be the first board member not to give full disclosure about a conflict of interest. On the other hand, Destiny Mall was an enormous investment, and its failure could cause a massive dent in Richardson & Williams' shares. Suzan Owens was a shareholder. Why would she want her own shares to plummet? \n\nShe searched and found more of ElasticDatica's bogus MS Word invoices. Not all of them came from Marianne's team. Some of them were issued for Alan Mason, the new CFO who replaced Sarah Flores two months ago. Not a small number of them were issued by her office, by her own team. She stared at those, perplexed. What the hell was going on? She asked Jessica, but the analyst had no idea who issued the requests to ElasticDatica. Helen wasn't so sure now that ElasticDatica and Destiny Mall were even connected.  \n\nShe knew she was missing something.\n\nMaybe this was all about a hostile takeover? Maybe Suzan wanted the shares to drop so she could buy cheap? She stared at the numbers, but they for once remained mute. When she remembered to look up at the clock, she shuddered. Night had fallen. \n\nHer head was buzzing with dark thoughts as she hurried back home. She was desperate to get there before Diana, to sit down with Kevin and convince him to change his mind. The image in her mind of her empty bed filled her heart with a void. She'd tell Kevin that she needed him more than he needed to keep his pride intact. \n\nThe penthouse was silent. Helen called his name a few times. Kevin wasn't in the kitchen or in the living room. She knocked on Diana's door, received no answer, so she opened the door just to make sure.\n\nIt took her time to register what she saw on the bed, and when she did her heart shattered into a million little pieces. \n\nDiana's lithe body was a rolling wave, on top of the man Helen fell in love with. Her sister's fingers clasped the blond spikes Helen loved to run her hand through. Diana pulled Kevin's head backward and pounded his ass, hard. As Helen stared, shocked, Diana sunk her teeth into the back of his neck, the same neck Helen learned to kiss and snuggle into. \n\nKevin told her that kindness comes before everything else, but he would have been kinder had he stabbed her with a knife.\n\nDiana stopped moving and, face flushed, turned her way. \"What the fuck are you doing, perv? Get the fuck out!\" \n\nShe needed to get away. To be anywhere else, just not here where her heart was breaking. \n\nHelen somehow found the strength to activate her muscles again. She ran back to the hallway, ran past her room, and kept running into the stairwell and down the stairs all the way to the street. She kept on running, aimless, through the dark alleys and into the quiet park. \n\nIt's a well-known fact that if you want tornados to stop, you should kill all the annoying butterflies. It's like good old David Hume used to say, causation is defined in terms of a counterfactual relation. It's true. Our actions in the past echo in the future. Tom Murphy, a drunk from Kevin's former hometown, threw a firebomb during an LGBTF march in Phoenix. It started a chain of events that had yet to be resolved. Helen had once made a decision and caved in to Diana's pleas. She forced a purple-eyed stranger she believed was a lazy, spoilt gold-digger into a relationship with her sister. She never dreamed that her decision would haunt her six months later. \n\nHelen found herself in the dark, empty park, sitting on a swing, wondering what the hell she should do next. She couldn't confront Diana, and she didn't know what she could say to Kevin. Hell, she couldn't even crawl back into the penthouse again. The image of them in the other room was too much. In the end, she decided to cry. Someone really should do something about those damn butterflies. \n\nHappiness is rare. It's a delicate golden string that shimmers at the corner of your eye. One wrong move, one wrong touch, and it can slip through your fingers. Once you hold it in your palm against all odds, and suddenly you feel it slipping away, that's the cruelest thing there is. \n\n---\n\nTo be continued... \n\n*****\n\nDon't fret, it gets worse before it gets better. \n\nYou know the drill. I write the sexy stuff, you press the stars to fight off the haters and to make me want to keep on writing. Leave me a note too, they always make me happy, even if they say parts of the story sucked ass. \n\nI'm still holding on to my original plan so 3 more chapters to go. Chapter 11 is a work in progress (3/4 done). \n\nSee ya soon."
    ],
    "authorname": "allthatisfuta",
    "tags": [
        "dickgirl",
        "dickgirl on male",
        "futa",
        "futa on male",
        "futanari",
        "futanari on male",
        "shemale",
        "shemale on male",
        "romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/family-issues-ch-10"
}