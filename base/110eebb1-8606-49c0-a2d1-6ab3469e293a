{
    "title": "Wine and Spirits",
    "pages": [
        "<center>++++++++++</center>\n\n\"What's his deal?\" Eddie asked from behind the bar. He gave a suspicious nod toward the man seating himself at the table in the far corner.\n\n\"He's harmless, Eddie. Just leave him be,\" Lily replied, not even looking up to see who he was talking about. She tried to act nonchalant, hoping he'd drop the subject but suspecting he wouldn't.\n\nEddie could be a pompous blowhard when sober and an insufferable jackass with even a little bit of alcohol in him. The latter seemed to be the case most of the time, though, and even tonight, she'd noticed him imbibing while on the clock. \n\nUnfortunately, keeping Eddie on staff was a stipulation Doc insisted on before gifting the bar to her. He had others, too\u2014'provisos' he called them\u2014provisions that would have seemed strange if they'd come from anyone else. No advertising\u2014No decorating for holidays\u2014No televisions\u2014No karaoke (or any music, for that matter, besides the jukebox, but even that could only be used by customers if the bar was open). But this proviso\u2014seemingly the most benign of them all\u2014confounded her the most.\n\n\"He has no people-skills, Doc,\" she argued. \"And he isn't just awkward, either. I could work with that. He's downright rude sometimes and not only to me but to the customers! Please, cut me some slack on this. I've agreed to everything else!\"\n\n\"Non-negotiable,\" was his staunch reply.\n\nNormally, Lily was a tenacious optimist, always looking for and finding the good in people. But Eddie was a tough case even for her\u2014a really tough case\u2014and under any other management, he wouldn't have lasted half this long. But she intended to keep her word, not only because Doc still liked to drop in every once in a while, but because it was the right thing to do.\n\n\"This place can't afford customers hogging tables all night, Lily. I'm going to go take care of this.\" Eddie threw a towel onto the bar and puffed out his chest as if he was about to bounce the man out of the place.\n\n\"Whoa, whoa whoa! Hold on there just a minute! If there's anything this place can't afford, Eddie, its employees drinking the profits. And I already told you to leave him be. That's not how we do things here and you should know that by now. Not to mention, he's one of my regulars.\"\n\n\"That doesn't mean he can...\"\n\n\"Aww,\" she interrupted quickly with an insincerely sweet tone. \"You thought I was asking for your opinion, didn't you? That would explain why we're still talking about this, wouldn't it?\" Her words dripped with sarcasm. Then, just as quickly, she ditched the fake sweetness in her voice. \"I'm not asking, Edward.\"\n\n\"Fine...But so help me, if he's still here at closing time...\"\n\n\"Dammit, Eddie!\" she snapped, reaching the limit of tolerating his incessant posturing. \"He will still be here and you already know it. And you will still leave him alone! Just like you'll do when he shows up next Friday and the Friday after that and the Friday after that! Got it? Good!\"\n\nHe was never going to win\u2014even if she wasn't his boss. The only thing he was actually succeeding at was pissing her off.\n\n\"Well...I guess I can give him a pass. This place is half-dead anyway.\"\n\nShe rolled her eyes. \"Whatever you have to tell yourself.\"\n\n\"For the record, Lily, there's nothing worse than a half-dead bar, especially on a Friday night. I don't know how this place stays open.\"\n\n\"Listen, Mister Know-it-all. I know what Doc built here and money was never the point\u2014or even big crowds. We're here for those souls who do show up\u2014no matter who or how many of them there are or how many drinks they buy. And in case you didn't notice, we're still here, you haven't missed a paycheck and we're doing just fine. So, we're not a typical bar\u2014I'm glad we're not. Have you still not figured anything out?\" She paused to gauge his reaction. It was blank.\n\n\"Well, either way, you need to get on board. I agreed to keep you on for no other reason than Doc made me. But you're under no obligation to stay if you're as miserable as you make it sound. You can leave any time you want and I certainly won't stop you. Now would you mind too terribly much doing your job and getting this paying customer his drinks? Or would you rather whine some more?\"\n\n\"Damn, Lily. You're like the annoying big sister I never wanted.\" He stuck his tongue out at her. \"By the way, he hasn't ordered yet so I can't make his drinks, now can I? Hell, you haven't even gone over there yet.\"\n\n\"Seriously, Eddie? How long has Doc been training you? And you still don't pay attention to your customers? Not even the regulars?!\"\n\nHe had no answer. Sure, he knew this guy was a regular. He'd been coming in every Friday night since before he'd started working at Doc's Place. But the truth was, he knew next to nothing about the man. All he knew was that he sat at that same table every Friday night and then camped there for way too long. Oh, and he was weird\u2014like most of the other folks who came here. Then again, if it weren't for the weird customers, this place might not have any at all.\n\n\"Do you at least know one of the drinks he always gets?\"\n\nAgain, silence\u2014but this time coupled with a strained expression on his face. He was trying to preserve some measure of dignity by recalling even one of the drinks. Instead, he just looked an uncomfortable kind of constipated\u2014losing even more dignity in Lily's eyes.\n\n\"Wow, Eddie. Just wow.\" She seemed surprised and, at the same time, not surprised at all. \"Red...\" she coaxed.\n\n\"Red wine!\" he interrupted her abruptly, as if it had been on the tip of his tongue already.\n\n\"And a Fu...\"\n\n\"Funky Monkey,\" again, he interrupted quickly\u2014too quickly, this time.\n\n\"No!\" she said sharply. \"A red wine, a Fuzzy Navel, and a water.\"\n\nShe waited while he made the drinks for her. At least he'd paid attention to Doc about that part of the job\u2014'consistent pours' had been drilled into his head and she'd never heard even a single complaint about his drinks. It was only the 'everything else' about Eddie that drove her nuts. She shook her head in frustration and wondered what Doc saw in him.\n\n\"For the record, Eddie, you're like the stinky, snotty, obnoxious, little brother that I never wanted but my parents adopted anyway.\" She stuck her tongue out at him as she grabbed the drinks and headed to the corner table.\n\n<center>++++++++++</center>\n\n\"Hiya Nick, I assumed you'd want your Friday night usual?\"\n\n\"Yeah, thanks, Lily.\" The man looked up, feeling both welcomed and embarrassed at the same time.\n\nHe knew people talked. He knew they thought he'd lost his mind\u2014in particular, the bartender who always seemed to be glowering at him. He tried not to let it bother him, but it was more than a little unnerving.\n\nNick first showed up here the night his fianc\u00e9 left him. And now, like clockwork, he came back every Friday night\u2014hoping she'd meet him so he could try again to convince her not to leave him. Against all hope, he still held on desperately to the chance she might change her mind and they could resume their romance\u2014as if nothing had happened.\n\n\"Lily? Did I do something to piss off the bartender? Did I forget to tip or something?\"\n\n\"No,\" she rolled her eyes as she glanced back at Eddie and tried to throw him a glare that said knock-it-off! \"Unfortunately, that's just him, Nick. I'm sorry. We're still trying to train him. But hey, at least he doesn't pee on the carpet anymore.\"\n\nNick chuckled\u2014not quite a full laugh. \"Okay. I thought for sure I'd done something wrong.\"\n\n\"No, not at all...But hey, Nick\" Lily started cautiously, \"if you ever need to talk...\"\n\n\"Yeah, I know...\" he cut her off abruptly. \"Thank you, though.\"\n\n\"Yeah.\" Her face wore the disappointment she felt. He'd rejected her offer yet again. \"Well...okay. Do you think she'll show up tonight?\"\n\n\"I really don't know...Sometimes she does; sometimes she doesn't...You know how it goes.\"\n\n\"Well, I'm just saying...\" she tried again, \"...if she doesn't...and you wouldn't mind the company...I'm here.\"\n\n\"Thanks, Lily. I really do appreciate it. But...would you mind leaving me now? I mean, no offense, but she might get the wrong idea if she walks in and finds me talking to a pretty woman.\"\n\nShe chuckled quietly. \"Why would I be offended by that, Nick? You just said I was pretty.\"\n\nHe fumbled for a response. \"Uh, that's not the point I was trying to make.\"\n\n\"Yeah, yeah, I know. I'm just teasing. But still, thank you.\" She thought it was cute how easily he embarrassed. \"Well...If you need a refill or anything, just let me know.\"\n\nShe knew he wouldn't need a refill. He never did\u2014just the two drinks and, in all likelihood, the wine would be left untouched.\n\nShe returned to her usual position near the front door, in case another customer showed up. But she kept her eye on him. A few minutes later, she watched as his eyes grew wide and a smile swept across his face as he stood from his seat. Oh, Nick. I hope it goes better this time.\n\nShe silently agonized from her perch across the room\u2014like a mother nervously watching her child recite their lines in a play. His fianc\u00e9 didn't often show up, but when she did, she usually left him in short order and an emotional mess.\n\nFor a brief moment, he smiled, as he always did at first. She loved his full smile, though she rarely got to see it, especially on nights when his fianc\u00e9 didn't show. The most she could usually get from him then was a half smile. But even on those nights, he never gave up\u2014staying until they closed down for the night. She admired that about him. He was the very definition of a hopeless romantic.\n\nEddie finished cleaning some glasses, then moved to stand next to Lily. \"Who's he talking to?\"\n\n\"Hmm?\" She'd barely noticed Eddie or heard his question.\n\n\"I asked who he's talking to.\"\n\n\"Oh, his fianc\u00e9...Sarah.\"\n\n\"Really? How do you know that?\"\n\n\"Easy. I talk to my customers, Eddie. You should try it sometime.\" She wasn't actually angry with him anymore\u2014only ribbing him, now.\n\n\"Yeah...yeah...So, I guess you've known what's-his-face a long time now?\"\n\n\"His name is Nick, and yeah, I've known him since he started coming here...not quite a year ago.\"\n\n\"Damn! He's been coming here like this a whole year?\"\n\n\"Not a full year, no. They were supposed to be meeting for a Friday night date but got into a huge fight. He ended up here, I don't know how, and started waiting for her.\"\n\n\"Let me guess, she didn't show?\"\n\n\"Not that first time, no. But he kept coming back...every Friday night. Always ordered her a drink, just in case. And then, one night, I couldn't believe it...she actually showed up.\"\n\n\"Hey, this will sound weird maybe...but...have you ever talked to her?\"\n\n\"Well...I've tried.\"\n\n\"And?\"\n\n\"I don't know. I guess she doesn't want to talk to me. Who knows. Maybe she thinks I'm a threat.\" She looked back at Eddie and shrugged her shoulders.\n\n\"Are you?\"\n\n\"Excuse me?\"\n\n\"Hey, don't get defensive. I'm just saying...\"\n\n\"Saying what, exactly?\"\n\n\"Well...I've seen how you look at him...just seems like maybe you have a thing for him.\"\n\n\"I think we're done here, Edward. Don't you have some glasses to wash?\"\n\n\"Oh yeah,\" he cracked. \"We're just flying through them glasses tonight.\"\n\n\"Go wash some glasses, Eddie!\" She couldn't help but smirk after he turned away; he was right, after all.\n\n<center>++++++++++</center>\n\nAfter hearing some of Nick's story, Eddie started to wonder about the other customers. How each of them found themselves at Doc's Place was wide and varied and he knew none of their stories. He was convinced, of course, that Lily knew them all.\n\nPerhaps some were drawn in by the lighted neon sign that read 'The Doctor is In.' Maybe others stumbled in having suddenly noticed the place, even though they had to have walked past it a hundred times. And still others, he figured, wouldn't even be able to tell you themselves.\n\nHow so many misfits found Doc's place was a mystery to him. From the outside, it seemed odd and out of place\u2014a neon oasis in the middle of an industrial district. Yet, on the inside, it was somehow welcoming in a very unassuming way\u2014like a stone-hearth fireplace is, even when there's no fire in it. Some might call it 'ambience' but it felt a little more spiritual than that.\n\nHe glanced over at Nick, still the only one doing any talking at his table and only occasionally sipping his drink. The fact that he would only buy the one drink the entire night simply meant he fit in with the other customers.\n\nAnd that was another thing these customers all seemed to have in common. They clearly didn't come to this bar for the drinking which only underscored what aggravated Eddie the most about working here\u2014the customers were just plain weird. But then, who was he to talk? After all, he was once a customer here, himself.\n\nHe recalled the night he first showed up at Doc's Place with a group of so-called friends. 'So-called' because before the night was through, they had all ditched him, sneaking out while he'd gone to the restroom so they could continue their partying somewhere else without him.\n\nHe'd always been the awkward fringe guy in the group. The guy who always laughed last to a joke after everyone else was winding it down. The guy who seemed to be out of sync with his surroundings. The guy who always lurked just outside the circle, instead of being in it.\n\nHe also remembered that Doc was behind the bar that night. Somehow, Doc caught his attention and pointed to a seat at the bar. Before he knew it, Doc was introducing himself and sliding a glass of whiskey in front of him.\n\n\"On the house, son,\" Doc told him.\n\n\"Uh, thanks. I'm not usually a whiskey guy, but, uh...maybe I need this.\" He placed his nose above the glass and opened his mouth slightly, then inhaled a few quick sniffs.\n\n\"Not a whiskey guy?\"\n\nEddie snickered. \"Actually, no. I've just seen my friends do this right before they start talking about 'palates' and 'polite greetings.' Honestly, I was faking it. I know nothing about whiskey except I like it okay.\" He slowly stopped laughing at himself. \"Hmm...I guess I'm always trying to impress people...\" He took a small swig and set the glass down. \"So, old timer, how'd I do? Did I screw up drinking whiskey, too?\"\n\nDoc chuckled. \"There's no right or wrong, son. But, if that's what you need to hear, you did just fine.\"\n\nEddie smiled. For some reason, he felt comfortable here, like he could let his guard down with the gentle old man. Being in Doc's company felt natural and free, even though those kinds of feelings were mostly foreign to him.\n\nEddie and Doc talked for over an hour, mostly about nothing, though Eddie somehow sensed some purpose behind the seeming randomness of their conversation.\n\n\"I'm glad you found your way to my bar, son. This is a pretty special place, even if I am a bit partial. We tend to get two types of people here: folks with unfinished business and folks who are\u2014how can I put it?\u2014 stuck, I guess.\"\n\n\"Stuck?\"\n\n\"Yeah, you know, lost their way maybe, trying to find it again, that sort of thing. Anyway, you land in either one of those groups?\"\n\n\"I guess I'm the latter, Doc, except...well, I don't know. Can you lose your way if you never had one to begin with?\"\n\n\"Hmm.\" He seemed to mulling something over. \"I'm going to level with you, son, if that's okay. I'm in the 'unfinished business' camp myself. I bought this place a long time ago, been tending bar ever since. But it's just about 'last call' for me. And since I'm here tonight...and so are you...maybe we can help each other out.\"\n\n\"I'm not following.\"\n\n\"Well, how 'bout I just keep it simple. How'd you like a job bartending? Now, before you say 'no', there's more to it than just making drinks, but I'll teach you everything you need to know and then some. If it works out, you might find that direction you're looking for and I might be able to rest knowing I've passed on the torch, so to speak.\"\n\n\"Well, Doc. Can I think about it? I mean, maybe it's the whiskey talking, but it does sound intriguing. I just think I should probably decide when I know for sure I'm sober.\"\n\n\"By all means. Maybe you can stop by tomorrow with your decision.\"\n\nThe next day, he did return and immediately started learning under Doc's direction, much to the chagrin of Lily. Every new hair-brain idea Doc came up with from then on would be something she'd have to deal with later, once he officially turned the reigns over to her.\n\nNow, nearly six months later, even Eddie wondered if Doc was wrong about him. Maybe I can't do this job. Maybe I can't even pour liquids into glasses without messing things up. He glanced back at Lily, who was still leaning on the end of the bar, still watching the man at the corner table. Then he scanned the bar; most of the place was empty. The few tables that were occupied only had one person at them or, at the most, two.\n\nHe leaned beneath the counter to sneak another sip.  Well, Eddie, if you're going to be a bad bartender, it might as well be here. Cheers to the shitty bartender.\n\n<center>++++++++++</center>\n\nIt had been just over a month and Lily figured Sarah was about due to make another appearance. But she had her back turned to the door momentarily and missed it when she did. She didn't see Sarah peering in through the window nor did she hear the bell above the door ring out when she entered. She did feel a slight breeze, though, as Sarah made her way past, heading straight away to the back where Nick was waiting.\n\nShe watched him rise to greet her with a huge cheesy smile plastered across his face.\n\n\"Please, don't look at me that way, Nick.\" Sarah pleaded.\n\n\"Look at you how? I'm glad to see you. I'm glad you came.\"\n\n\"That doesn't mean I've changed my mind. This can't happen. I think you know that. You do know that, right?\" She hadn't even sat down and was already getting straight to the point.\n\n\"Sarah, why? How many times do I have to say I'm sorry? I never should have said those things to you. There's not a day goes by I don't wish I could take them back. And maybe then, you wouldn't have stormed off and maybe then...\"\n\n\"But you did say them. You can't take back things like 'maybe we're not meant to be together.' And the truth is, you were right.\"\n\n\"No...but, I wasn't. I was completely wrong.\"\n\n\"Please stop this, Nick. Just because you feel guilty doesn't mean you were wrong. For whatever reasons, this is just how things were meant to be. And you shouldn't feel guilty\u2014not for being honest with someone.\"\n\n\"No, Sarah. Please don't say things like that.\"\n\n\"But it's true. Don't you understand? It's true. You did nothing wrong. And trying to hold on to this idea of 'us' isn't right. It's actually quite dishonest.\"\n\nNick's face suddenly looked heartsick. He knew what she was about to say; she said it nearly every time she visited.\n\n\"Nick, I was never your true love. And you weren't mine...I don't love you.\"\n\nHis eyes were already wet, pregnant with tears that woudn't fall.\n\n\"That doesn't mean I don't still care about you, though. I only want to know you'll be okay. I need to know that. But...I can see you're not there yet and that makes me sad.\"\n\n\"Oh god, Sarah, please don't leave...you're about to leave, aren't you?\"\n\nFrom Lily's vantage point at the bar, it looked like he was begging. Oh, Nick, no...not again... She longed to reach out to him, to tell him he wasn't alone. She wanted to be the one to be there for him. And yet, she knew, he'd have to open up to her in his own time. As the scene continued to unfold in front of her, the tears that refused to land on his cheek, somehow landed on hers instead.",
        "\"Sarah...look...\" he implored, pointing at the table. \"I bought some red wine for you. Won't you please just stay long enough for one drink?\"\n\n\"I'm sorry, Nick. I don't drink when I'm sad\u2014you know that. The day you tell me you're moving on...maybe I'll have that drink then.\"\n\n\"Don't go, Sarah. Please don't.\"\n\n\"Good night, Nick.\"\n\nShe was halfway to the door before he'd even pulled himself away from the table. He chased after her, calling her name. \"Sarah...stop...please\"\n\nLily stepped slightly in his path as he approached. \"Nick, I'm so sorry...\"\n\nHe paused, but only for a second. \"I can't talk right now, Lily. I just...I can't talk...\" Then he hurried to the front door, pushed it open and looked both ways up and down the street for Sarah\u2014but she was already gone.\n\nLily watched him leave the bar, helpless to stop him, and didn't hear Eddie come up behind her.\n\n\"Still say you don't have a thing for him?\" he teased.\n\n\"Oh, fuck off, Eddie!\" She snapped, watching Nick disappear into the night as the door closed behind him. Then she wiped her tears as she spun around to face Eddie. \"And you need to stop drinking on the clock if you want to continue working here. Maybe then you won't be such an ass to me all the time.\"\n\n\"Oh, come on. You know you won't fire me,\" he spouted callously. \"Doc's proviso, remember?\"\n\n\"Oh god, I so can't deal with you right now. Just...fuck you, Eddie...you insensitive shit...\"\n\nLily almost ran to the back, then unlocked the back door that led to her loft above the bar. She knew she'd overreacted to Eddie's ribbing and part of her regretted it already. But he didn't need to play the whole 'I told you so' game with her, especially with such terrible timing. And he really did need to stop with the drinking, too, though she knew that wasn't the right way or time to address that either.\n\nEddie watched Lily run off, unsure what to do. He felt he should do something, but felt even stronger that he'd just screw it up if he tried. Even when he was only trying to kid a little bit, to lighten the mood, he still managed to blow things up. He leaned against the back wall and cursed himself for being so...himself.\n\nHe looked across the bar at the remaining guests; only a couple of them seemed to have even noticed the scene they'd made.\n\nDamn, this is a strange place.\n\n<center>++++++++++</center>\n\nThe following Friday, Lily waited in anticipation for Nick to arrive. She wrung her hands together nervously and jumped every time the bell hanging above the door rang out to announce someone arriving.\n\nEddie noticed, but didn't say anything. Even if he wanted to, he wouldn't know what to say. Besides, they'd barely spoken all week; now seemed like a bad time to try.\n\nStill, he felt bad for her. Lily always seemed so all-together. But she was falling apart over the man at the corner table. He started to wonder if this Nick character was really so messed up that he didn't notice her, or maybe, he was just an idiot.\n\nLily popped up from behind the bar, just in time to see Doc walking in. \"Oh, Doc. I didn't hear you come in, but hey, I'm so glad to see you.\" She rushed to meet him. \"Do you have a minute? I could really use some time with you.\" She spoke quickly and sounded a little bit desperate.\n\nHe shrugged and waved his hand apologetically. \"I'm so sorry, Lily-bug. I really wish I could. But I'm actually here for someone else.\"\n\n\"Oh...yeah...I understand...provisos...\" Her heart sank.\n\nDoc had told her this would happen and that it would be hard, but this was one of those things she'd agreed to that she didn't think would be a problem, until now.\n\nDoc made his way to the bar and waved Eddie over to him with a single flick of a finger.\n\nEddie wiped his hands with a towel and headed over. From the look on Doc's face, he fully expected a lecture was awaiting him. He hadn't seen Doc for a couple of weeks. Still, he wondered if someone had told him about the previous Friday night's events.\n\n\"Hi, Doc,\" he offered tentatively. \"You look upset.\"\n\n\"Disappointed, son. Just disappointed.\"\n\nEddie lowered his head in shame. \"So, I guess you know about last Friday?\"\n\n\"Yeah, I heard.\"\n\n\"Did Lily tell you about it?\"\n\n\"No, not Lily. One of our regulars. A few of us run in the same circles these days.\"\n\n\"I see.\" He didn't actually see anything. He felt like the same wayward idiot in that moment as he'd been that first night he'd met Doc and nearly every day since.\n\n\"I need you to do something for me, Eddie.\"\n\n\"Sure, anything,\" he promised before even hearing what it was. Anything to get back in Doc's good graces and hopefully, eventually, Lily's.\n\n\"I need you to lay off the juice.\"\n\n\"Oh.\" He wasn't expecting that, though it had actually been a long time coming. In fact, once it sunk in, he was partly surprised Doc hadn't brought it up until now. He mulled it over a few seconds. \"Doc, I don't want you to think I don't want to...but I'm not sure I can.\"\n\n\"Non-negotiable.\"\n\n\"Doc, I'm sorry about upsetting Lily last Friday, but...\"\n\n\"No, son. This isn't about Lily\u2014not completely, anyway. Listen, people drink for lots of reasons, but most of the time it's because they want to forget something\u2014a long week at work, bad finances, a mountain of stress, a loss. Countless reasons, right? But haven't you noticed there's never any drunks in my bar?\"\n\n\"Actually, yeah. It's weird.\"\n\n\"Oh, I know it's not typical. Trust me. The point is people don't come to my place because they want to forget, Eddie. Don't you see? They come here because they don't want to. Alcohol gets in the way, son. That's why I said no karaoke machine, no decorations, no televisions playing sports twenty-four seven. All that stuff, it all gets in the way.\"\n\n\"Gets in the way of what? I'm sorry, Doc, I'm trying...I really am...but I just don't understand. I mean, I hear you saying I need to lay off the drinking and I get that, but the rest of the stuff you said...\"\n\n\"I'm not sure how to explain it, but it's whatever they're trying to work through. Maybe it's something keeping them back, some unfinished business they're trying to settle. Maybe they just need a nudge\u2014some encouragement or something. I really don't know. Everyone's different, right?\"\n\n\"The point is, what we do here is almost like a ministry to the folks who find us. This place helps people and you get to be a part of it. Not to mention, you even make a livable wage doing it. But, Eddie, just...trust me, okay? The drinking is getting in the way. It messes with your perception, your ability to make right decisions and good judgement calls. Like last week when you apparently picked the worst possible time to take some jabs at Lily.\"\n\n\"But Doc, I'm really sorry about that...\"\n\n\"No. just...stop. Don't be sorry, son\u2014be better.\"\n\n\"Yessir.\"\n\n\"No more drinking on the clock. Got it? If you can stop the drinking, you just might perceive better. And maybe then, what we do here will start to make some sense to you. And perhaps, you'll also be able to find your way.\"\n\n\"Yessir.\"\n\n\"Good, now the other thing...\"\n\n\"There's more?\"\n\n\"Just one more thing and I promise, it's simple.\"\n\n\"Okay?\" He only sounded nervous because he was.\n\n\"You need to apologize to Lily.\"\n\nShit! Eddie's face went pale. \"Doc, I can't.\"\n\n\"What do you mean you can't? Do you regret what you did?\"\n\n\"Well, yeah.\"\n\n\"Do you wish you hadn't done it?\"\n\n\"Of course I do.\"\n\n\"And do you want to make things right, as much as you can, anyway?\"\n\n\"Yes, sir.\" He could see where this was heading, but it still scared him. It really wasn't a question of his desire.\n\n\"Then what's the problem?\"\n\n\"I...I'm just so stupid...\" He grabbed at his hair. \"Doc...I don't know how. Whatever I do or say, I'm going to mess it up, I'll make it worse. I just know I will. I'm such an idiot.\"\n\n\"Well, first of all, you're not an idiot; you just keep getting in your own way. Second, you need to do this and my advice is you should say exactly what you just said to me.\"\n\n\"What? That I'm stupid?\"\n\n\"Actually that might help, now that you mention it.\" He smiled. \"Just keep it simple, son. Tell her you're sorry. Tell her you feel stupid, if you want. Tell her you're afraid you'll make things worse if you say anything more. Then walk away.\"\n\n\"Just like that?\"\n\n\"Just like that.\"\n\n\"Okay, Doc...I will.\" Eddie looked around for Lily, finding her standing at the corner table. Nick apparently snuck in while he'd been talking with Doc.\n\nShe was about to start talking to Nick, keeping her hands at her side and rubbing her legs as she tried to muster some courage.\n\nEddie knew his apology would have to wait.\n\n<center>++++++++++</center>\n\n\"Hey Nick, can I talk to you a minute?\" she asked timidly.\n\n\"Sure, but I'm not mad, if that's what you're wondering.\"\n\n\"You're not?\"\n\n\"No. it's just...it was a rough night, last Friday.\"\n\n\"Yeah, I know. I wish I could make it better.\"\n\n\"Yeah, well, me too.\"\n\n\"I think I can help, though...maybe...if you'll let me.\"\n\n\"If you think you can get her to come back to me, I highly doubt it. So, what do you mean, Lily? Help me, how?\"\n\n\"Well, for starters, I thought we could just talk a little bit. It doesn't have to be about anything specific, just...anything. The weather even...or sports...so long as you don't mind that I know, like, nothing about sports. Or if you don't want to talk, we could just sit together...play a board game...do a jigsaw puzzle...like old people. Anything, really. I just don't want you to sit here all by yourself. It's not good to be alone. Besides, you'd be helping me, too.\"\n\n\"Well, that's nice of you, Lily. It is. But I'm on thin ice with Sarah already. Not to be rude, but would you mind...\"\n\n\"Right...don't want to be seen with a pretty girl, still?\" she managed to tease, even though she felt overwhelmingly dejected. \"You know most guys would never say something like that even once their entire lives.\"\n\n\"Yeah...I suppose not...I guess I'm not exactly normal, am I?\"\n\n\"I didn't mean it in a bad way. It's actually one of the reasons I like you.\" She waited to see if he'd give her even a tiny indication that he'd heard her say she liked him, but he didn't. \"Well...I'll go get your usual, then, okay?\"\n\nHe nodded without saying anything.\n\nEddie was waiting for her when she finally reached the bar. \"Hey, Lily?\"\n\n\"Yeah?\"\n\n\"Um, I have something to say...but...\" he stopped speaking, as if he'd completely forgotten how to talk.\n\n\"Well, can you make Nick's drinks while you're thinking about it?\"\n\n\"Huh? Oh, yeah...Red wine and...dammit, what's the other one? No, don't tell me...\"\n\nEven if he got it wrong, she was impressed. He was at least trying\u2014something she hadn't really seen him do before.\n\n\"Okay, can you help me?\"\n\n\"Fuzzy Navel,\" she said flatly.\n\n\"Dammit, yeah, that was it. And a water.\"\n\nHe made short work of the drinks but didn't want her to leave quite yet. \"Hold up, Lily. Listen...you know how I'm always an idiot?\"\n\n\"Excuse me?\"\n\n\"That came out wrong. What I'm trying to say is...I'm sorry...about last Friday...I really am...and if I try to say anything else, I'll screw it up.\" He looked over at her. \"And that's it.\"\n\n\"Okay? I'm not sure what to make of this, but...okay.\"\n\n\"Okay?...Really?\"\n\n\"Yeah...\" She gave him a reassuring smile. \"Okay.\"\n\n<center>++++++++++</center>\n\nFrom that night on, Lily noticed Eddie slowly changing\u2014bearing the marks of his mentor, Doc. She no longer worried so much about his interactions with customers, though to be fair, that might have been because every time she looked back at the bar, she saw Doc right there coaching him.\n\nIt reminded her of the times Doc had spent with her, too, doing much the same thing. I wonder if I was as tough a project as Eddie. God, I hope not.\n\nIt was another Friday night, and Lily had made up her mind to do something about 'the Nick situation.' She just hoped it would work.\n\nRight on time, he showed up. It had been two weeks since Sarah had visited. By her own unscientific estimates, it might be another month before she showed up again. She'd be shocked if she made another appearance so quickly from the last time\u2014It just wouldn't match her pattern.\n\nNick had barely situated himself when Lily arrived with his usual drinks. This time she didn't say anything to him. Not a word. She simply set the drinks on the table, then walked back to the bar.\n\n\"Are you okay?\" Eddie asked, having noticed her return so quickly.\n\n\"What do you mean?\n\n\"Well, you normally stay there and try to chat him up. Is something wrong?\"\n\n\"Well, I'm impressed that you noticed. I can tell you've been paying attention to Doc. Seems like he's starting to rub off on you.\"\n\nHe looked blankly at her, still waiting for her to answer his question.\n\n\"That was a compliment, by the way.\"\n\n\"Oh...uh, thanks...but seriously, is something wrong?\"\n\n\"Okay, fine.\" Her attempt to distract him and not actually answer his question failed. \"Yes, everything's okay. I'm just trying something new with Nick tonight.\"\n\n\"What? The silent treatment? I had to break it to you, Lily, but that's been around awhile.\"\n\n\"Well, no. Not exactly. But I figure he should make the first move this time. I'm just going to make him a little uncomfortable until he does.\"\n\n\"What if...\" he hesitated, \"...never mind.\"\n\n\"What if what, Eddie?\"\n\n\"Well, what if he doesn't...make the first move?\"\n\n\"Yeah. I thought about that...If he doesn't...well, I guess that tells me what I need to know, right? That he really isn't interested.\"\n\n\"Yeah...well...I hope he's not that stupid.\"\n\n\"What do you mean?\"\n\n\"I just mean, I hope it works.\"\n\n\"Yeah, me too...and thanks. Here goes nothin'.\"\n\nShe made her way back toward Nick's table, but detoured at the last second to take a seat at the table next to him. She had already planted a pile of paperwork there, along with some headphones to plug into her phone. She sat in the chair nearest to him, but facing away. Then she put her headphones on and pretended to be listening to some music.\n\nNick had watched her walking back from the bar. He was expecting her to at least say 'Hi' and offer a listening ear which, of course, he would then graciously turn down. It was their thing, after all, so it threw him off that she'd said literally nothing at all.\n\nEye contact was never a thing between them either. He typically wouldn't even look up at her when she spoke. He now realized how rude that was. He wondered if she'd tried to make eye contact with him tonight because he wouldn't have known it if she had.\n\nHe had a look of bewilderment on his face, as if maybe he'd walked into the wrong bar. Everything felt different, unfamiliar, without Lily's usual attempts at conversation.\n\nEddie watched from the bar, barely containing his laughter. He thought it was comical, absurd really, that Nick looked so confused...so surprised.  Of all the things to find strange in this place, this guy only notices that she didn't say 'Hi'? I'd say it's working, Lily. Way to go!  He smiled, then grabbed a clean glass and started rewashing it, just so it looked like he was busy. Doc was indeed rubbing off on him.\n\nNick started to turn around, to face Lily, but stopped. A minute later, he did it again. Finally, without turning at all, he tried talking to her.\n\n\"Umm...Lily?\"\n\nShe heard him clearly, but didn't answer\u2014pretending to be listening to music on her phone when, in reality, they weren't even plugged in. She smiled.\n\nNick wasn't even monitoring the door, like he normally did. Instead, he was still looking around the bar, as if trying to get his bearings. He noticed Eddie behind the bar and even that caused him to feel uncomfortable because, instead of the glare he was used to seeing from the bartender, he thought he caught Eddie smiling.\n\n\"What's going on?...Um...Lily?...\" He tried again. \n\nStill no response. \n\n\"What's happening?\"\n\nShe almost giggled out loud.\n\nFinally, he rotated around in his seat\u2014still not actually facing her\u2014just enough to be able to see her with his peripheral vision. He noticed her headphones and the pile of paperwork.\n\n\"Hey, Lily?...Can you hear me?\"\n\nShe grabbed an envelope and ripped it open, pulling out the letter from inside it, still pretending to be in her own world. She started wondering how long to keep the ruse going. She'd already felt like it was a success, but she wanted more. Perhaps she wanted him to squirm a little...maybe let it sink in that he'd been taking her for granted.\n\n\"Lily?...Lily! Lily! Lily!...Abracadabra!...Boo!\"\n\nStill no reaction.\n\n\"Tickle, tickle, tickle...Coochie coo...\" \n\nNothing at all, though hearing him speak with a baby-talk voice nearly caused her to snort.\n\n\"Watermelon...Cantaloupe...\"\n\nShe felt like a pressure cooker about to explode with laughter. What in the world is he doing?! What's with all the word salad?\n\n\"You really can't hear me?\"\n\nPart of her wanted to say \"Nope\" out loud, just to bring it all to an end and in a funny way. But she somehow resisted the urge.\n\n\"Well, in that case...\" he paused, as if gathering some courage. \"I really have wanted to talk to you.\"\n\nYou have? she silently replied.\n\n\"Truth is...I've wanted to...to see you, too\"\n\nLily was ecstatic that she hadn't blown her cover yet. This was going better than she could have ever planned.\n\n\"I just...I feel like I'm cheating, just talking to you or...or...when I look at you.\"\n\nYou look at me?\n\n\"You're funny...and kind...and pretty...and...se...\" he stopped in mid-word.\n\nWhat?! Keep going, you jerk. Don't stop THERE!\n\n\"Pomegranate!\" he nearly shouted.\n\nA woman at another table looked over at him and shot him a scowl.\n\n\"Sorry, ma'am,\" he apologized.\n\nThe woman turned back around and resumed mumbling something to herself.\n\nLily was almost crying. She felt like a little girl sitting in church, being told to be quiet while trying to hold in the giggles which, of course, only made things worse. But she also felt her internal laughter starting to mix with something else. Acceptance? Happiness? RELIEF?\n\n\"Lily?\" his whisper seemed to pierce the room louder than his near-shout did just a moment earlier. \"I also think...I think you're sexy.\"\n\nHer jaw dropped, and so did the ink pen she had in her hand\u2014banging loudly on her table, then quickly rolling to the edge and onto the floor, where it bounced loudly again.\n\nNick whipped around in his seat and faced the door. Shit! Did she hear me that time?!\n\nShe used her feet to drag the pen closer to her, then leaned over to pick it up\u2014successfully maintaining the ruse that her headphones were plugged into her phone. To reinforce the deception, she started humming as if she liked the song that was playing. She heard him exhale a deep breath. Oh, good. I think he bought it.\n\nShe waited several minutes, occasionally humming along to music that wasn't even playing, until she finally finished opening all the envelopes she'd dumped on the table. Then she leaned back in her chair and made a show of taking off her headphones and tossing them on her table.\n\n\"Hey, Lily?\" he called to her quietly, almost as if they were sitting in a library.\n\n\"Oh hey, Nick,\" she answered quietly, matching his volume and tone and acting as if this was the first thing she'd heard him say to her.\n\n\"Um...I'm sorry...\"\n\n\"Sorry?...What for?\"\n\n\"Well, I know you've been trying to be my friend and...I've not been letting you.\"\n\n\"Yeah,\" she didn't know what else to say. Besides, she agreed with him.\n\n\"I think...I'd like to talk to you...if your offer still stands, anyway.\"",
        "\"Of course, it does, but...will we have to do it like this? With our backs to each other? At different tables?\"\n\nHe didn't answer.\n\nShe imagined he must be really thinking it over. \"I mean, I guess I don't mind pretending we're spies trading secrets in public. It could be fun, I suppose.\" She heard him chuckle.\n\n\"I don't want Sarah to see...\"\n\nUgh! Sarah.\n\n\"But...it seems like...well...could we wait? Til like ten, just in case she decides to show up...would that be okay?\"\n\n\"Sure, Nick...It's a date.\" She bit her lip to contain some more laughter.\n\n\"What?\"\n\n\"I'm just kidding. See you at ten...you know the place...oh, and Nick?\"\n\n\"Yeah?\"\n\n\"The red fox trots quietly at midnight.\" She heard him chuckle again.\n\nLily was nearly walking on clouds. She gathered up the piles of envelopes\u2014all just junk mail from the previous week\u2014and carried it with her back to the bar. She made eye contact with Eddie who gave her a \"Well?\" kind of look. She returned it with a subtle nod of her head. \"Meet me in Doc's office in a minute,\" she told him as she walked past him and opened the door to the office.\n\nShe had just finished tossing all the junk mail into the trash can when Eddie entered the room behind her.\n\n\"Well? How'd it go? I take it went okay?\" he sounded excited, genuinely interested and hopeful.\n\n\"Aaah!\" she nearly screamed. \"It actually worked, Eddie! He started talking to me, but he thought I couldn't hear because of the headphones. But I didn't even have them plugged in! He said I was pretty and that he's been wanting to talk to me. He even said he thought I was sexy! And then I took off the headphones and he talked to me for real. He said we could sit together even, but only after ten, just in case, well, you know...Oh my gosh, I can't believe it worked!\"\n\nShe jumped up and gave Eddie a hug, which he returned. \"I'm glad, sis. I really am.\"\n\nShe was beaming. \"Thanks, Eddie. Oh my...okay...\" She took a breath. \"I've got to pull it together. You go back out there. I'll come back out in a few.\"\n\nEddie head back to his post, hoping no one noticed them both disappear for a couple of minutes.\n\n<center>++++++++++</center>\n\nDoc was waiting when Eddie returned to the bar. \"What was that all about?\" he asked.\n\n\"Oh, nothing. Just Lily finally made a breakthrough with Nick. I hope he doesn't break her heart, though. He still seems all kind of messed up and she deserves...\"\n\n\"What?\"\n\n\"What what?\"\n\n\"You said 'she deserves' but didn't finish your sentence.\"\n\n\"Oh...uh...love I suppose. She deserves it. Don't you think, Doc?\"\n\n\"I do, son. I sure do. And what about you?\"\n\n\"What about me?\"\n\n\"Don't you deserve love, too?\"\n\n\"Oh, well, I don't know, Doc. I mean, come on, I feel like I'm just now starting to be a real person for the first time in my life. Maybe I should just be content with that for now.\"\n\n\"Yeah, maybe...or maybe you shouldn't short-change yourself.\"\n\n\"Yeah, okay, Doc. Sure. Whatever you say.\"\n\n\"Okay, fine. I'll change the subject. I can tell you're getting uncomfortable. Tell me what you see out here tonight.\" He nodded out toward the bar room.\n\n\"Well,\" he felt like he was being tested. \"I see a larger crowd than normal.\"\n\n\"Good. That's good.\"\n\n\"Yeah, like Miss Lindsey over there. Looks like she actually has a date tonight. Good for her.\"\n\nDoc smiled.\n\n\"And Mr. and Mrs. Whitley's daughter, Anna, is here, too. She's back in town to help with some family stuff I think.\"\n\n\"Well done, Eddie. You must be talking to folks, more...and I take it you've been laying off the booze?\"\n\n\"Yeah, I still get the urge to sip...I'm in a bar, after all. But not too often, really, and I can always wait til we're closed. It's actually kinda nice to just sit in here after hours sometimes. You know, there's some good tunes on that jukebox of yours.\"\n\n\"Yep, I do know that. I'm proud of you, son. You still have a little ways to go, but you're on your way for sure. I hope you'll considering staying on here. I'd be honored if you did.\"\n\n\"Wow, Doc. Thanks. That means a lot coming from you.\"\n\n\"Well, I mean it. And I think even Lily's starting to warm up to you.\"\n\n\"Yeah, who'd a thunk that would ever happen, right?\" he said with a chuckle.\n\n\"Well, speak of the devil,\" Doc boomed as Lily approached them.\n\n\"Uh-oh. I'm afraid to even ask...\" Lily grumbled suspiciously. \n\n\"Eddie just told me you had a sort of break-through with our friend, Nick.\"\n\n\"Yeah, I think I have. But we'll see. I'm a little afraid he's gonna get scared and backtrack on me. I guess I'll find out later tonight.\"\n\n\"Well, I'm going to go visit the Whitley's and see how they're getting along. I've got something I want to run past them.\" Doc walked over and in short order was invited to pull up a chair to join them.\n\nEddie scanned the crowd, trying to recite the names of each person he saw from memory. When he got stuck, he asked Lily for help. His skills as a bartender had always been decent, but the improvement in his personal perception and social skills was nothing short of dramatic.\n\nLily couldn't help but be impressed and told him as much. \"You're like a different person, Eddie, except I know it's still you, at the same time.\"\n\n\"Well, Doc's pretty amazing.\"\n\n\"Of course, he is. But you can take some of the credit, too, you know. You're allowed.\"\n\n\"Actually, I probably shouldn't. That's what kept getting me in trouble, it turns out. Doc kept saying I was getting in my own way and I've been thinking about that a lot. And, of course, he's right. So, I've been trying to stop thinking about me so much. Honestly, it's been really hard to do. I still think about myself a lot\u2014what do people think, do they like me, do I fit in. But if I can stop it right away, I don't end up doing all those stupid things I normally do. Anyway, it's been pretty crazy, but my life feels so different now...thanks to Doc.\"\n\n\"Yeah, he's a special man, for sure.\"\n\nThey chatted some more, taking turns talking about Doc or some of the customers' stories, though as the time drew closer and closer to ten, Lily started acting more nervous.\n\n\"You're going to do fine, Lily,\" Eddie told her, completely out of the blue.\n\nShe looked over to him. \"You really are changing, aren't you? You would've never done that six months ago...And thank you.\" She then looked over to Nick. Was he just looking at the clock, too? She couldn't stand the wait any longer and decided to go for it.\n\n<center>++++++++++</center>\n\nShe'd made it about halfway before Nick noticed her approaching. He caught her eye and, once he realized she was coming to visit him, he smiled.\n\n\"Do you mind if I'm a little early? I'm kind of going crazy waiting...but I'll come back later if...\"\n\n\"No, no,\" he interrupted while standing up from his seat to welcome her. \"It's totally fine...I was getting a little restless, too, actually.\"\n\n\"You were?\"\n\n\"Yeah.\" He came around to pull out a chair for her and scooted it in behind her as she sat.\n\n He might not want to think it, but he's acting like this is a date. Okay by me!  She looked back to the bar where both Eddie and Doc were now watching and giving her the thumbs up. She blushed again.\n\n\"So...\" he started. \"what do we do now?\" His nervousness was apparent but so was his enthusiasm. He seemed to really want her to be there.\n\nShe laughed. \"Well, I don't know. Is pulling out the chair your only move?\"\n\nHe laughed in return. \"Actually, you're lucky. I literally just thought of that one. Before then, I had nothing.\"\n\n\"Well, it was still a good start, so thank you.\" She reached out her hand. \"I'm Lily. Lily O'Connor. Pleasure to meet you.\"\n\n\"Very nice to meet you, Miss O'Connor...Nick Jennings.\" He took her hand in his and immediately noticed its softness and warmth. He didn't want to let go, but it would be awkward if he didn't. Reluctantly, he released his grasp and sat back down in his seat.\n\n\"So what brings you to a place like this?\"\n\n\"Ha! Nice try, Lily. But sorry, that's a story I'm not ready to tell...not yet, anyway.\"\n\n\"Okay, can't blame me for trying.\"\n\n\"No, I suppose not. It's a fair question, by the way. I'm just not ready. I hope you understand.\"\n\n\"Yeah, I get it. Things like that take time.\"\n\n\"What about you? How'd you end up here?\"\n\n\"Oh, well that's a funny story most people don't know...I actually work here.\"\n\n\"You don't say. Really?\"\n\n\"It's true.\" She grinned.\n\n\"And all this time, I just thought you were, I don't know, a volunteer or something.\" He liked her sense of humor. He liked her smile, too, which he'd never really seen much of\u2014his own fault since he always looked away whenever he thought she was going to look towards him. And he liked her face, too\u2014especially, up close.\n\nShe was pretty. Her hair matched her brown eyes, which themselves were vibrant and deep. Her lips\u2014up close\u2014looked luscious and succulent. He was about to study her cheeks next, when...\n\n\"Hey, did I lose you?\" Her voice broke through his reverie.\n\n\"Huh?...Oh, sorry...um...I think I was asking how you ended up here. Everyone in a bar has a story, right?\"\n\n\"Well, yeah, that's certainly true. Where do you want me to start exactly?\"\n\n\"I don't know...tell me about your family.\"\n\n\"Family, hmm, that's a loaded word. Okay, my father left when I was young. Mom died when I was twelve. Lived with an aunt for a while then ran away. Spent some time just kind of wandering until I was unofficially adopted by a really nice couple. They wanted to adopt me for real, but I told them 'no.' I guess I figured if they didn't adopt me, I wouldn't run the risk of losing another set of parents. Sounds silly, I know.\"\n\n\"No. Not silly at all. So where are they now? Do they live around here?\"\n\n\"Hmm, yeah. Here's some irony for ya\u2014they died on me anyway. She went first, almost three years ago and he just passed away this past May. Cancer.\"\n\n\"Oh, I'm so sorry.\"\n\n\"Nah...it's okay...I mean it's not, but...it is what it is, right?\" She tried to put on a brave face. \"I miss them a lot, actually. I feel like I was orphaned twice.\" She wasn't sure how strong her defenses were with the subject of her 'adopted' parents, since she'd always avoided talking about them. She now realized those defenses were weak, as she started tearing up. \"Okay...can we talk about something else?\"\n\n\"Sure, of course...Um, how about your last name...Irish?\"\n\n\"Oh god, you're killing me.\" She half-laughed, rolling her eyes.\n\n\"Oh, sorry. I thought that might be safe...um...let me think of something else...\"\n\n\"No, it's okay. Really.\" She collected herself before proceeding. \"So, I didn't want them to adopt me, right? But they were also the only real 'parents' I ever knew. After they died, I legally changed my last name...to honor them.\"\n\n\"That's really sweet, Lily.\"\n\n\"I wish I'd done it while they were still alive, though. It probably would've meant more\u2014especially to her. But I know they still appreciated it...yeah...\" She felt herself starting to shrink into her safe place where she hid her feelings to protect herself. She didn't want to go there, so she quickly changed the subject. \"Okay, my turn. Do you have any pets?\"\n\n\"Nope.\"\n\n\"Not even a fish?\"\n\n\"Nope. Why? Does that surprise you? And do I look like a fish person or something? Do you have a fish?\"\n\n\"Hell, no, I'd kill a fish.\"\n\n\"How about a cat?\"\n\n\"Oh, Nick. I just got here. Are you really trying to run me off already?\" she joked. \"A dog, sure, that'd be nice\u2014I always wanted a golden retriever when I was a kid\u2014but as you can see, this isn't the kind of place for a dog.\"\n\n\"Well, no, I suppose not, but you don't live here. You could still have a dog at home.\"\n\n\"Actually, I do live here.\" She pointed to the ceiling. \"Loft apartment upstairs.\"\n\n\"No kidding? Well, that's convenient, I guess. Short commute.\" he joked.\n\nShe laughed. \"Yeah, the only time there's a problem is when someone blocks up my back entrance.\" She turned and pointed to the door that led to her place. \"But that only happens when someone has a pretty big package for me. Usually, the UPS man. Eddie keeps the small stuff behind the bar for me. He says he has a bad back and can't lift anything heavy, but I think he's just...\" She turned back around and the smirk on his face made her stop mid-sentence. \"What?...What's so funny?\"\n\n\"Nothing...\" was all he could muster without bursting into laughter.\n\n\"Why are you...\" she looked perplexed\u2014and then it hit her. \"Oh my god! You are such a man! That is so childish!\"\n\nHe exploded with laughter. \"You're the one who was saying it!\" His laughter could be heard across the room.\n\nLily, just shook her head. \"How old are you?\"\n\n\"I'm sorry,\" he tried to calm himself as quickly as possible. He seemed to be pulling himself together until a new thought entered his mind making him burst into laughter again.\n\nLily rolled her eyes. \"What now?\"\n\n\"I'm sorry...but, does the UPS man bring you big packages often?\" he grunted, then started laughing again.\n\n\"Har har.\"\n\nHe finally calmed down.\n\n\"Oh god, I'm so sorry, Lily. I promise, I'm not normally this juvenile.\"\n\n\"Fine...I guess it was a little funny, but I'm still not going to laugh with you.\" For the most part, her resistance held firm, though she couldn't help showing a little bit of a smirk.\n\nTheir conversation flowed\u2014filled with laughter, occasionally thoughtful and serious but, even then, comfortable. Time seemed to speed up and, before they knew it, it was two in the morning\u2014closing time for Doc's Place on Friday nights.\n\n\"Well...\" she started, not wanting to say it. \"I guess I should help Eddie shut things down.\"\n\nEddie yelled from across the bar, \"I'm doing fine! You two just keep talking! I'll let you know when I'm ready to lock up!\"\n\nLily bowed her head and blushed deeply.\n\n\"Hey, Lily?...Thanks...this was really nice.\"\n\n\"You're welcome, Nick. It was good for me, too. I hope we can do it again sometime.\"\n\n\"Yeah?\" he seemed to be considering it, as if it were a much harder decision to make than it should have been. \"Yeah,\" he finally said a little more firmly, as if trying to convince himself that it would be okay. \"Ten o'clock next Friday?...Tentatively, I mean?\"\n\nShe knew what he meant. She was disappointed, but understood. \"Sure. It's a...\" she caught herself. \"I mean, I look forward to it.\"\n\nHe stood up, and leaned over, giving her a polite kiss on the top of her head. He immediately regretted it as he'd not only just felt the softness of her hair, he smelled her shampoo and perfume, too. It smelled...delicious\u2014if hair could be delicious. And he felt a stirring. It was sudden...unexpected...electric.\n\nHe leaned back down the two inches he'd managed to rise to and kissed her hair again. Oh god! He hovered, savoring the moment, until he realized it might seem creepy if he lingered any longer.\n\nHe pulled himself away, then started acting unexpectedly skittish, as he collected his things. He bid her good night, holding his jacket in front of him as he walked away.\n\n\"Good night, Niiiick!\" Eddie yelled in a slightly teasing tone from the back corner where he'd been sweeping. \"Sweet dreams!\" he added, provocatively. As soon as the door closed, he exploded with laughter.\n\n\"What's wrong with you, Eddie?! Why did you do that?! \"\n\nEddie saw her looking daggers at him, but he couldn't help himself. He roared again with even more laughter. He maneuvered the broom in front of him, suggestively, then pretended to be Nick. \"Oh, Lily, I had a very pleasant time tonight...You're a really good...friend...\"\n\nDaggers were no longer enough. Now she was throwing knives, arrows and even armor-piercing bullets at him with her eyes. \"How dare you! He wasn't...He didn't have a...It wasn't like that!\"\n\n\"AH HAAAAA HAAAAA!\" Eddie was almost crying now. \"He did SO!!! He grabbed his own jacket off a hook behind the bar, and threw it over the broom handle. \"Does this look more familiar, Lily?!\"\n\n\"Edward! He did NOT!\" she yelled, as a sly grin tickled her mouth. Then the realization hit her. \"OH MY GOD!!!....He DID!!!\"\n\nEddie started hopping around the bar room, riding the broom like a horse, singing \"Nicky had a woody...Nicky had a woody...\"\n\nLily was now laughing along with him, though feeling guilty and embarrassed about it. She covered her smile with her hand, as if that made it any better. She could feel the heat radiating from her face like a preheated oven.\n\nEddie started changing his song...\"Lily made a woody!...Lily made a woody!\"\n\nShe suddenly sprinted across the bar, as if, without any warning, she had to go to the bathroom or something, giggling the whole way. \"Lock up, Eddie!\" she shouted, right before she slammed the door to her loft and ran up the stairs.\n\nEddie stopped singing long enough to listen to her uphill stampede, cringing when she apparently missed one of the steps and tumbled, but recovered quickly. Then he burst into laughter again. \"Oh man...good for you, Lily...good for you...\"\n\n<center>++++++++++</center>\n\nLily collapsed on her bed, out of breath from her sprint up the stairs. Her whole body was tingling at the thought that she'd not only connected with him emotionally with over four hours of conversation, but that she'd also managed to arouse him...and she wasn't even trying.\n\nShe stretched for her nightstand, trying to reach the drawer. She couldn't quite reach it, but there was something in there she wanted right now. She lunged, but still couldn't get there. \"Fine!\" she griped. I guess I'll have to do it the old-fashioned way.\n\nShe slid her hands down and quickly unbuttoned her jeans. She detoured briefly to rub her mound firmly through her jeans, before fumbling with the zipper and sliding it down.\n\nAny other time, she would have taken her time and completely undressed. But then, any other time, she probably would have worked a little harder to get her friend from the nightstand, too. Tonight, though, she simply wanted release...immediately.\n\nShe lifted her hips and inched her jeans down, just enough to shove one hand into her panties while the other slid under her shirt and bra to play with her breasts, frantically pinching her nipples to the height of pleasure and the brink of pain. She moaned.\n\nHer other hand slipped lower, finding her button, then slipping even lower until it was drowning in her juices, already flowing hot like lava from her core. Her finger snaked back to play with her clit but only momentarily, before diving back into her essence.\n\nShe pulled her other hand away from her breasts, and frantically grabbed a pillow to cover her face. She held it tightly as her orgasm raced to meet her. Her entire body shook as she screamed into her pillow. Her climax overwhelmed her, leaving her still quivering on her bed even after it had subsided.\n\n<center>++++++++++</center>\n\nThe following morning, Lily rose early with an energy she hadn't felt before. She'd already inventoried the stock and even sanitized the ice bin before Eddie showed up.\n\n\"Oh my god, Lily. Did you really clean the ice bin? On a Saturday?\"\n\nThe early wake up had caught up to her though. She was now sitting flopped on a chair behind the bar, her hair frazzled and her skin clammy from a morning of hard work.\n\n\"If I didn't know better, I'd say you had a good night last night, if you know what I mean.\"\n\n\"Shut up, Eddie.\"\n\n\"Ooh, touchy subject?\" He grinned after saying it. \"Get it? touchy?\"\n\nShe smirked. \"Yes, you pervert. I got it.\"\n\n\"Actually, now I'm thinkin' you didn't get it. You sound a little cranky.\"",
        "\"Oh god, just stop already.\"\n\n\"Fine. But seriously, I'm really happy for you. I hope it all works out and stuff. But last night seemed pretty special, so good for you.\"\n\n\"Thanks, Eddie. Do you mind opening? I probably should go clean up. I'll be down in a little bit.\"\n\n\"Sure, no problem.\"\n\nEddie pulled all the chairs off the tables and wiped them down again. He was pretty much done prepping for opening when the bar's phone rang, which it rarely ever did. It took him by surprise.\n\n\"Doc's Place,\" he answered, but no one spoke. \"Hello? This is Doc's Place.\"\n\n\"Um...\" It was a man's voice.\n\n\"Hello?\" Eddie asked again, then it hit him. It was only one syllable but he thought he might have recognized the voice. \"Nick?\"\n\nCLICK\u2014The line went dead.\n\nHe second-guessed himself a few times, but eventually made up his mind\u2014it was mosty definitely, probably, Nick. But he wasn't sure what to make of Nick trying to call and then hanging up. Perhaps it was his own past still haunting him, but Eddie was suddenly feeling wary again of the man at the corner table. Still, he decided not to mention it to Lily.\n\nThe rest of the week was uneventful\u2014just a typical week at Doc's Place.\n\nBut leading into Friday, both Eddie and Lily were on edge. Lily was hopeful\u2014Eddie, concerned. He really didn't want Lily to get hurt, but even though he didn't want to witness it, he pledged himself to be there for her no matter what.\n\nAnd when Friday finally arrived, he went out of his way to make it an easy night for her, just in case things went sour later.\n\nNick showed up on time, as if a customer had an assigned work shift. He made his way to the back, avoiding eye contact with Eddie as he walked past.\n\nWell, something's up. Eddie's concern increased. Maybe he's just embarrassed. I mean, he WAS sporting a boner the last time he was here. He hoped for Lily's sake that's all it was.\n\nLily saw him come in and tried to contain her enthusiasm. She walked over to Eddie, who was already getting Nick's drinks ready.\n\n\"Hey, Lily...maybe take things slow with him today, okay?\"\n\n\"Okay...wait...why?\" She instantly grew concerned. \"Why did you say that?\"\n\n\"Nothing, no reason in particular.\" He lied. \"I'm sure everything's fine.\" He lied again. \"But, just in case, you know. Don't rush him. He's still hung up on Sarah, or he might be, I don't know. Anyway, I don't want you to get hurt, okay. So just...take it slow, that's all.\"\n\n\"Yeah,\" she calmed herself down again. He made sense, she decided. \"Okay, you're right.\" She took a deep breath and let it out, then collected his drinks and headed over to see him.\n\n\"Hey Nick. Got your usual.\"\n\nHe didn't look up at first, which concerned her. Then he peeked up at her, tentatively. \"Thanks, Lily...How have you been?...Did you have a good week?\"\n\nShe smiled in relief. \"Yeah, it was a pretty good week.\" She reminded herself not to rush things. The night was still young, and the first part of it was likely still off-limits. \"Well, I'll leave you alone, but...would it be okay to visit you later...if you don't mind, I mean?\"\n\n\"Yeah, Lily. That would be good.\"\n\n\"Okay, good...Well, I'll be over there.\" She turned clumsily and returned to the bar.\n\n\"Well?\" Eddie asked.\n\n\"He said we could talk again later. So, that's good, right?\"\n\nHe wasn't sure if it was or not. \"Sure. I mean it's definitely not a bad sign, right?\"\n\n\"Yeah. I'll take it.\" She let out a pensive breath before heading out to welcome a few customers entering the bar.\n\nEddie looked over at Nick. So help me, if that guy breaks her heart... And this time, he wasn't posturing. Nick would be in serious peril if he hurt Lily. Eddie really had started thinking of her as a sister\u2014sometimes annoying as all hell, but someone he still cared about very deeply.\n\nDoc arrived a few minutes later, looking for Eddie. \"There you are!\"\n\nEddie looked a little confused. \"Where else would I be, Doc?\"\n\n\"Oh...right...never mind that. Listen, a couple of our regulars have been asking me about Halloween.\"\n\n\"What about it? We're not doing anything, right? Besides, it's still a couple weeks away.\"\n\n\"Yeah, good. That's exactly right. I just wanted to make sure you remembered we don't do anything different for Halloween. They were worried you might, since you're new.\"\n\n\"Oh, no, definitely not. I wouldn't go and do something you clearly don't want. You know that, don't you?\" He seemed a little hurt that Doc might question that.\n\n\"Of course, I do. I know that, Eddie. I just wanted to remind you and to let you know a couple of them might try to interrogate you a little, just to ease their worry. It's just a heads up, okay?\"\n\n\"Yeah, sure, Doc. No worries.\"\n\nDoc left the bar as quickly as he'd arrived.\n\nThat was weird. \"Hey, Lily!\" he yelled to her from behind the bar. \"I've got a question for ya whenever you're free. No rush!\"\n\n\"Yeah, okay,\" she called back and a few minutes later visited him between helping customers. \"Hey, what's up?\"\n\n\"So, Doc zipped in here earlier.\"\n\n\"Yeah, I saw him.\"\n\n\"All he wanted to do was remind me we don't do anything for Halloween.\"\n\n\"Yeah?\"\n\n\"Well...isn't that weird?\"\n\n\"That's weird?\" she joked. \"Did you forget where you work?\"\n\n\"Seriously, Lily. Do you think he still worries about me? Do you think he's afraid I'll mess something up? Lily, why would he do that?\"\n\n\"Hey, hey,\" her face turned serious. \"Don't do this. Remember what you said to me about getting in your own way? That's what this sounds like, right now. Don't go there, okay?\"\n\n\"I don't want to, Lily. It just, I don't know, it caught me off-guard.\"\n\n\"Listen, can I tell you what I know?\"\n\n\"Sure.\"\n\n\"Okay, I know Doc thinks the world of you. I know Doc hand-picked you to be his bartender. I know he saw the promise of something really special in you. And I also know that he was right. I didn't see it at first; you know that. I wouldn't have batted an eye if you'd quit that first week. But, I'm glad I was wrong.\"\n\n\"You mean that?\"\n\n\"I wouldn't have said it...\" she patted him on his back, looking out toward the bar room. Only a few customers, but the night was young.\n\n\"Thanks, for saying all that.\" He soaked up the feeling of acceptance she gave him, simply with a few kind words and some pats on the back. It felt like family. \"Hey Lily, I have one more question. If Halloween is no big deal, doesn't it seem weird that he'd make a point to not make it a big deal?\"\n\nShe chuckled. \"I don't know if that question even made sense, Eddie, but I think I know what you're getting at. So, Halloween actually is a big deal around here. It's just really important that we don't do anything to draw attention to it. I know it sounds crazy, but it would be a catastrophe if our customers came in on Halloween and saw ghosts and black cats and cheesy decorations all over the place. And god only knows what would happen if they walked in and heard the Monster Mash playing on the jukebox.\" She joked.\n\n\"We don't have that song,\" he said flatly.\n\n\"That was a joke, silly. I know we don't have that song. We don't have any holiday songs. And that's on purpose. So yeah, Halloween is still a big deal. It's just incredibly important that we don't act any different than we would any other night.\"\n\n\"Okay, I guess that makes sense. I think. Only using Doc's Place logic, though.\"\n\n\"Yeah, that's probably true. Also, do me a favor and don't do any drinking that day either. Not that I think you were going to, but I'm just saying...not even one drink, okay? We need you to be on the top of your game. We'll probably have a pretty big crowd that night.\"\n\n\"For a holiday we're not even going to acknowledge? Yeah, that makes perfect sense...again, only at Doc's Place.\"\n\nShe chuckled. \"Now you're getting it!\"\n\n<center>++++++++++</center>\n\nLily kept herself busy most of the night, only occasionally checking on Nick. There were no signs of Sarah, just as she expected. She tried to decipher his expression. Was he maybe a little less upset than normal that she hadn't showed? Was that just wishful thinking on her part? And had he been sneaking peeks at her throughout the night, like he unwittingly confessed to her a week prior?\n\nShe glanced at the clock: 9:30 p.m. I wonder if it's too soon...no, don't rush things...don't rush him. She dutifully waited until the clock struck ten before pouring herself a glass of water and heading over to the corner table.\n\n\"Hey Nick...do you mind?\"\n\n\"No, not at all.\" He stood from his seat.\n\n\"I've got it, thanks. That's really sweet, though.\"\n\n\"Oh...sure.\" He sat back down.\n\n\"So, I see she didn't show again. I'm sorry. Are you okay?\"\n\n\"Yeah, I guess so. I, uh...I tried to call you last Saturday.\"\n\n\"You did?\"\n\n\"Yeah, Eddie answered the phone.\"\n\nShe turned quickly, catching Eddie watching them intently from behind the bar. She shot him a glare before turning around again. \"Hmmph. He didn't tell me.\"\n\n\"Well, no. I mean, don't be mad at him. He didn't know it was me, not for sure, anyway. All I said was 'Um' and then I hung up.\"\n\n\"Why?\"\n\n\"I don't know. I just wanted to hear your voice...make sure you were real.\"\n\n\"Make sure I'm real?\"\n\n\"I...I don't know. I'm so confused.\"\n\n\"Well, I can assure you, I'm real. And I'm right here.\" She reached out and placed her hand on top of his. \"So...if I had answered instead of Eddie...what would you have said?\"\n\n\"Hopefully, more than um.\"\n\n\"Nick,\" she spoke reassuringly, \"was there something you wanted to say?\"\n\n\"I don't know...I've spent the last year trying to get something back that, at one point, I didn't even want. But then after I destroyed it, I thought maybe I did want it. By then it was too late. So, now she doesn't want me back and I'm just not even sure what I want anymore. I'm so confused.\"\n\n\"Nick...what happened that night?\"\n\n\"I can't, Lily...I can't...but it was my fault...If I hadn't said those things...\" He pulled his hand out from underneath Lily's, as if he didn't deserve to be comforted. \"And I know she keeps saying she wants me to move on...that things worked out the way they were supposed to. But that doesn't make me feel any better. So, on top of feeling guilty for all that...now, I'm feeling guilty for...\"\n\n\"For what?\"\n\n\"well...for you.\"\n\n\"Nick...don't say 'no' right away, but I want to ask you something, okay?\"\n\n\"Okay.\"\n\n\"Do you think Sarah might consider talking to me? If you asked her to, I mean?\"\n\n\"Oh,\" he wasn't sure what to expect, but it wasn't that. \"I don't know, Lily. I don't know if she would.\"\n\n\"I know it's really hard for you to talk about what happened. And I'm not trying to pressure you about it. I wouldn't want to do that to you. But I thought, maybe, you'd let her tell me...if that's okay, I mean.\"\n\nHe nodded tentatively. \"I can ask...if I ever see her again.\"\n\n\"It would mean a lot to me, if you did. And I have a feeling she'll come back in a couple of weeks.\"\n\n\"Why's that?\"\n\n\"Well, just a hunch, I suppose.\"\n\n\"Okay, we'll see, I guess. In the meantime, I have a question for you.\"\n\n\"Sure. Ask away.\"\n\n\"Does that jukebox over there work?\"\n\nShe smiled. \"Are you tired of talking?\"\n\n\"Just for now.\"\n\n\"Yes. It works. Every song in there was hand-picked by Doc. So, if you don't find what you're looking for...\"\n\n\"It's there. I just didn't know if it worked. I've never heard anyone use it.\"\n\n\"Ha! You should be here after-hours. Eddie over there loves this thing.\" She reached out her hand and he took it. \"So, should I try to guess the song? Is it 'Love Shack' by the B-52's? 'Eye of the Tiger', maybe?\" she joked.\n\n\"Stuck in the eighties, much?\" he chuckled. \"No, I'd be embarrassed to tell you, actually. Why don't you pick something?\"\n\n\"Oh...I'm not allowed to, sorry.\"\n\n\"What? No, really, pick a song.\"\n\nShe looked back at him with a squeamish expression.\n\n\"Wait, you're serious? You're really not allowed?\"\n\n\"Sorry. House rules. Only customers can pick songs from the jukebox while the bar is open.\"\n\n\"Hmm, interesting. I guess it's back on me, then.\" He studied the list of songs available\u2014a surprisingly wide variety considering only one person picked them all. \"Sorry, Lily, I don't see 'Eye of the Tiger.' I guess that's not the vibe he was going for here.\"\n\n\"Why don't you just play the song you wanted?\"\n\n\"Um...are you sure? Are you going to laugh at me? I mean, it's a great song, but you might think it's kinda cheesy, too.\"\n\n\"I won't laugh at you. I promise.\"\n\n\"Okay, but...only if you dance with me. You still sure?\"\n\n\"I was actually hoping. But god help me, I hope you didn't find 'Love Shack.' I wouldn't want to break a promise.\"\n\nHe started the song and led her out to the 'dance floor'\u2014a six foot square area that just happened to not have a table in it.\n\nShe recognized the song right away\u2014Unchained Melody by The Righteous Brothers. \"Well, it's not the Love Shack.\" She grinned as she reached up and placed her hands on his shoulders.\n\nHe settled his hands on her waist as they swayed.\n\nShe loved this song and knew it by heart. It was one of her dad's favorites. Oh, I miss him, so much. She lowered her head and leaned in closer.\n\nHer favorite line was coming up. She closed her eyes and leaned even closer, until her head was nestling into his chest. He felt warm and soft, yet strong. She felt safe. But she still felt tears forming in her eyes. Why the hell am I crying?\n\nShe wasn't sure if she was just overwhelmed by the moment, slow dancing to a beautiful song with Nick, or maybe, she just desperately missed her family. Even though she knew they'd always be near, she also knew it would never be the same. Sure, she might hear their voices or even see their faces. But they could no longer wipe away her tears, or stroke her hair, or hold her\u2014the way that Nick was now. Or maybe it was all of those things combining.\n\nThe song ended too soon and at just the right time.\n\nShe raised her head and took a half step back. Cooler air breezed between them, reminding her of the warmth they'd just shared. She looked up at him, through tear-blurred eyes and saw him reaching to her face. She closed her eyes, just in time to feel him gently wipe away the tears in her eyes.\n\n\"Why are you crying, Lily?\" he asked softly.\n\n\"I was just thinking about my dad. I miss him. I still see him sometimes, you know...here and there. But I know, someday, I won't see him like that anymore...or hear him speaking to me still. I don't know what I'll do then. I barely know what to do now.\"\n\n\"Yeah, I think I understand that. If it's any consolation, I think he did a great job. I'm sure he's incredibly proud of you.\"\n\n\"Yeah, I know he is. He's told me so. But it's still hard to move on without feeling like I'm leaving him behind, you know?\"\n\n\"Yeah, I do know.\" \n\n\"And...my god, I'm so lonely...\"\n\nHe pulled her back close to himself and again started swaying with her\u2014as if the jukebox had started again on its own, though it hadn't.\n\nShe swayed with him, silent dancing in an empty bar room full of strangers, letting his warmth ease her pain.\n\n<center>++++++++++</center>\n\nEddie watched from the bar, as Nick and Lily danced. He smiled. There would be no ass-kicking needed tonight, no reason to 'have a conversation' with him in the back alley. Maybe this Nick guy was the real-deal after all\u2014just a little bit stuck as Doc would say. And maybe Lily was the right person\u2014the only person\u2014to help him get unstuck.\n\nEddie was lost in thought and didn't notice the customer at the bar trying to get his attention.\n\n\"Excuse me, young man...hello?\"\n\n\"Oh!\" he startled. \"I'm so sorry. Hi Mrs. Whitley. Your usual Gin and Tonic?\"\n\n\"Yes, please.\" She grinned a little before asking him what he'd been so distracted by.\n\n\"Oh, yeah. That's my sis over there...I mean, technically, we're just...well, we're kind of like family. Anyway, she's happy right now. She hasn't been that way much since I've known her. It's just nice to see...really nice to see.\"\n\n\"Hmm. So you're the kind of man who finds his own joy in the happiness of others?\"\n\n\"Wow.\"\n\n\"What?\"\n\n\"Well, you made me sound like a pretty swell guy, just there.\"\n\n\"And you're not?\"\n\n\"Oh, no, I'm not perfect\u2014not by any stretch. But I am getting better...becoming a better man. And that's not just wishful thinking. I really am. Thanks to Doc...and my currently giggly 'sister' over there.\"\n\n\"So, you're also honest and dare I say, a family man?\" She smiled at him.\n\n\"Oh my, you're really laying it on thick, aren't you?\" He smiled back at her. \"No ma'am. I've not been in a family long enough to say something like that. I am hooked though, on the family part. I can honestly say that.\"\n\n\"And humble.\"\n\n\"Okay, now you're embarrassing me. Do you mind if we change the subject?\" He set a cocktail napkin on the bar and placed her drink on it.\n\n\"Actually, I do kind of mind. But that's okay. I've already learned quite a bit about you and we've only talked a couple of minutes.\"\n\nDoc somehow snuck up behind him and settled into a spot just to his right. \"I see you've met Mrs. Whitley.\" he whispered just loud enough that only Eddie could hear him.\n\n\"Yeah, Doc. Good to see you,\" he whispered back. \"She's nice, but she keeps asking about me. It's kinda freaking me out. I'm gonna say something stupid if I keep talking about myself. I always do, you know.\"\n\n\"You're doing fine, son. Just be yourself, not a made-up version to try to impress her, okay?\"\n\nHe nodded.\n\n\"Why don't you ask her about her daughter? Tell her you saw her visiting the other night.\"\n\nHe nodded again. \"So, Mrs. Whitley, I saw your daughter with you the last time. Is she all done with school now?\"\n\n\"Good job, Eddie. That was good.\" Doc encouraged.\n\n\"No, she's only in town for another couple of weeks. She had to come back home to help with some legal stuff. She's the executor on an estate and needed some help getting through it all.\"\n\n\"Oh, yeah? I imagine that would be difficult.\"\n\n\"Indeed. It's been very emotional and taken a real toll on her.\"\n\n\"You're doing great, son!\" Doc whispered again. \"Keep asking about her daughter. Don't talk about yourself unless asked and you'll keep doing great, I just know it.\"\n\n\"So she still has some school left then?\"\n\n\"Yes. She took a short leave from classes, but she's already a senior. She'll be graduating in the spring.\"\n\n\"You must be proud.\"\n\n\"Oh we are. She'll be the first person in our family to get a college degree, you know. But even if she didn't, we're still proud of her. She's become a fine young woman, you know\u2014smart, funny...\"\n\n\"Pretty,\" he added. Oh, shit!\n\n\"Yes.\" She laughed. \"She's pretty, too.\"\n\n\"I'm sorry, Mrs. Whitley. I didn't mean to say that out loud.\" He was blushing from embarrassment.\n\n\"Oh, it's alright, Eddie,\" she said reassuringly. \"It's quite alright.\"\n\n\"Eddie, come over here a minute.\" Doc whispered again.\n\n\"Excuse me just a minute, Mrs. Whitley.\" He grabbed a couple of glasses that weren't even dirtied and carried them to the sink where Doc was waiting for him. Then he started washing them, as he spoke with Doc. \"Well, I just screwed up again.\"\n\n\"No, you didn't! I just wanted to tell you how incredible you're doing. Making mistakes isn't screwing up. They're not the same thing. So long as you concentrate on those around you and not yourself, you'll always be successful, even if you do take a few missteps here and there. Just remember that, okay? You'll be a better man for it. Always think of others first. And that's exactly what you're doing, son. I'm so proud of you.\"\n\n\"Thanks, Doc. I really appreciate that.\"\n",
        "\"Okay, now get back over there. I think these glasses are pretty damn clean.\"\n\n\"Sure, Doc.\" He returned to the other end of the bar. \"Sorry, Mrs. Whitley. Where were we?\" Eddie restarted their conversation.\n\n\"Oh, we were talking about my pretty daughter.\"\n\nHe blushed again.\n\n\"Unfortunately, I need to go for now, but I'll be back in a couple of weeks. I assume you'll be tending bar?\"\n\n\"Yes, ma'am. I almost live here anymore so I'll definitely be here.\"\n\n\"Okay, very good, then. Thanks for the talk. Good night, Eddie.\"\n\n\"Good night, Mrs. Whitley.\"\n\n<center>++++++++++</center>\n\nSarah still didn't make an appearance the following Friday. But even though Lily hadn't really expected her to, she still felt nervous for the first few hours of the evening. Would Nick remember to ask Sarah about talking to her? Would Sarah even agree to do it? What would Sarah say if she did? And was she ready to hear it?\n\nShe would relive all of her fretting again the following week. But tonight, ten o'clock finally arrived. She made her way to Nick's table. He stood to greet her.\n\n\"You'll never stop doing that, will you?\" she teased.\n\n\"Force of habit, I guess.\"\n\n\"It's okay. I don't mind. I think it's nice.\"\n\n\"I'm glad to see you again.\"\n\n\"You are?\"\n\n\"Yeah. And I brought you something. Actually, two things.\"\n\n\"Hmm, okay?\"\n\nHe pulled two gift-wrapped boxes from a shopping bag and set them on the table. \"Pick one.\"\n\n\"Pick one?\" she acted confused. \"Do I only get to keep one? Are you just going to return the other one? Or are you going to give it someone else? Who is she, Nick?\" She gave him a pretend accusatory look.\n\n\"Oh yeah, that's how I operate, Lily. I'm definitely going to take the other gift back. I just hope you don't pick the used tube socks. I'd hate to have to return the diamond bracelet, or worse, give it to Eddie over there.\" He said it straight-faced until he couldn't keep from smiling. \"Of course, you get to keep both gifts, Lily! But we won't have enough time for both of them in one night.\"\n\n\"Okay, for real, I have no idea what's happening here.\"\n\n\"It's not a trick, Lily. Just open a present. But whichever one you open first, is what we'll do tonight. We'll do the other another time.\"\n\n\"Do you even hear yourself? You're not making any sense.\"\n\n\"Please, just trust me...pick one.\"\n\n\"Fine, this one.\"\n\n\"Okay. open it.\"\n\nShe tore into the wrapping paper, immediately seeing '550 Pieces' printed on the side of the box. \"Is this what I think it is?\"\n\n\"Probably.\"\n\nShe finished unwrapping it. \"It's a puzzle.\"\n\n\"Yep. I figured we could do it together\u2014like old people,\" he chuckled. \"Five-hundred-fifty pieces isn't too much is it?\"\n\n\"No, I'm sure it's fine.\" She flipped the box over to see what the picture was and covered her mouth in surprise. \"Are you serious?\" She almost started crying.\n\n\"You said you always wanted one...I know it's not the same as a real one. But maybe you can frame it or something. I mean, if you like it, of course.\"\n\nShe dropped the box on the table and threw her arms around him in a big hug. \"Oh, I do, Nick. I love it! Thank you! I've always wanted a Golden Retriever!\" She leaned up and kissed him on the lips.\n\nIt happened so fast that she hadn't even processed what she'd done or considered whether she should have. Once she pulled back and it dawned on her what she'd just done, her face went pale and she started stammering. \"Oh, Nick...I'm sorry...I didn't mean to...I...\" She was struggling to complete even half of an intelligible sentence.\n\n\"Shh!\" he placed a finger on her lips. \"It's okay.\"\n\nShe immediately quieted, gazing into his eyes, looking for some assurance that she hadn't just messed everything up. She found it when he removed his finger from her lips, leaned down, and planted a kiss of his own on her lips.\n\nShe closed her eyes. The kiss was gentle...soft...tender. She felt his fingertips touching her cheeks\u2014first on one side, then also on the other\u2014so light that it felt like a butterfly landing. She wanted to stay there forever, but the kiss only lasted a few seconds before he pulled back, still caressing her cheeks with his fingertips.\n\nShe opened her eyes and found his eyes already gazing back at her. \"Oh, Nick.\"\n\n\"Ahem...\" he croaked, as his senses suddenly returned. He pulled his hands back as if he was about to put them on a hot burner plate. \"Oh, Lily. I'm...I got carried away...I...I didn't mean to.\"\n\nA quickly rising crescendo of emotions mixed and churned within her, causing her ears to ring and sending her into a sudden panic. \"I'll be right back,\" she yelped, already out of breath before she ran off, leaving him speechless as she scurried to the bar.\n\nAs soon as she got behind the bar, she slid down and sat on the ground, out of sight and leaning against the back of the bar. She fanned her face and reached over to a glass of water and splashed some on her cheeks, then patted them dry with a towel. Oh god. What was THAT? She wanted to start crying from an overdose of longing and desire. She felt like a powder keg and he'd just lit the fuse. It was INCREDIBLE, that's what it was! She gasped for air while taking a small swallow of water.\n\n\"Um, dare I ask?\" Eddie inquired with a subdued voice, just above a whisper.\n\nShe looked up, not even remembering if Eddie had been there all along or if he'd just arrived. She reached up and grabbed his arm sleeve, yanking him down until he was at eye level with her. \"Did you see what just happened?\" she asked, still in a near-panic.\n\n\"Well, I'm not sure what you're referring to exactly, but I saw him give you a couple of presents, but you only opened one. Looked like a jigsaw puzzle, maybe?\"\n\n\"Not that, you idiot! The kiss...did you see the kiss?\"\n\n\"Oh, yeah, I saw that too. See, I told you I wasn't sure what you were referring to.\" He gave her a Cheshire cat grin.\n\n\"Oh my god, so it really did happen. What should I do now, Eddie?! What do I do? It was wonderful...it was...but, oh god, I hope I haven't ruined everything!\"\n\n\"You haven't ruined anything, Lily.\"\n\n\"What...?\" She looked above her head to find Nick looking down at her. He was leaning across the bar top, no doubt his feet weren't touching the ground on the other side.\n\n\"Are...are you sure?\" she asked from her squatted position on the floor, her breathing finally calming down.\n\n\"I'm positive. Come on. Don't we have a puzzle to figure out?\"\n\nBoy, if that isn't the truth.\n\n\"Sorry to interrupt here, but this guy's dangerously close to breaking the 'No customers behind the bar' rule. Will you please just go with him, so I don't have to get physical with him?\"\n\nShe looked over at Eddie and the serious look on her face gave way to a mischievous grin as she reached up and smacked him on his butt\u2014not playfully, even, but with her full force behind it.\n\n\"OUCH!\" he screeched.\n\n\"Like that?\"\n\n\"Damn, that hurt, Lily! And no! I wasn't going to slap his ass!\" Eddie started rubbing his butt as he looked over to Nick. \"Okay, mister, I'm giving you ten seconds to get back here and remove this troublemaker from behind my bar.\"\n\nNick hesitated.\n\n\"I'm not kidding!! Snap, snap! Get her out of here!\"\n\nNick hurried around the bar and pull her to her feet. Then drug her by the hands away from the bar and back to his table in the corner.\n\nShe giggled the whole way.\n\n<center>++++++++++</center>\n\nLily eventually calmed down\u2014apparently doing a jigsaw puzzle is an anti-aphrodisiac, even if it is with someone you're passionate about. It was still highly affectionate, though.\n\nThere was something deeply intimate about sharing the table space, intertwining arms to reach here and there to set the border pieces first, then searching for specific shapes and shades after that.\n\nMore than once, she would intentionally lean close to him and hover a few extra seconds, hoping to make some sort of physical contact with him. And he obliged, meeting her with a soft, grazing caress.\n\nAnd he wasn't above fabricating a reason to get close to her either. He sometimes would hold out a piece and ask her if she knew where it went, simply in the hopes that she would take the piece from his hand and feel her fingers touch his in the process.\n\nBut her favorite move was when he'd lean forward to set a piece and she would quickly move over him, as if she was trying to fetch a piece from the other side of the table. She would then lower herself until her breasts swept across his back. Then she would place one hand on his shoulders, presumably for balance, as she lifted herself back up to her side of the table.\n\nEvery touch was meant to appear innocent and yet, in reality, was anything but. They both played the game and, as they neared finishing the puzzle around two in the morning, they dispensed with the pretense\u2014freely touching and intertwining fingers with one hand while testing puzzle pieces with the other.\n\n\"I'm outta here, you two!\" Eddie yelled from the bar. \"I'll lock up on my way out!\"\n\nThey didn't respond to him, preoccupied with finishing the puzzle and engrossed in each other.\n\n\"Yeah, Okay, Eddie.\" he pretended to be speaking their side of the conversation now, since they weren't. \"Thanks, Eddie. Thanks for doing all the cleanup, Eddie. Thanks for closing, Eddie. You're a great guy, Eddie.\"\n\n\"You're a great guy, Eddie!\" Lily finally called out.\n\n\"You're a great guy, Eddie!\" Nick repeated.\n\nEddie laughed. \"Okay, okay. Good nite, you two.\" He shut the door behind him and locked it.\n\nThey thought they'd be able to finish the puzzle by two-thirty, but didn't actually finish it until just after three and then they spent another fifteen minutes trying to find the lone single piece that somehow went missing. They crawled under the table, checked inside the box\u2014multiple times, even\u2014to no avail.\n\n\"Well, I guess that's that.\" Nick said, as he slowly stood upright, cursing his aching back and giving up the hunt for the missing puzzle piece.\n\n\"Ow, ow, ow,\" Lily whined as she, too, tried to stand up after having been in various leaning positions most of the night.\n\n\"So, I was thinking...\" he started, \"now that Eddie's gone...\" he reached out to hold one of her hands.\n\nWhere is he going with this?\n\n\"...and the bar is officially closed, right?\"\n\n\"Um, yeah?\" she asked nervously.\n\n\"Okay, good. So, I'm thinking there's one more thing we should do before I leave. And I don't even think it's breaking any rules.\"\n\nOh god, what is happening?\n\n\"What's that look for?\" he asked, seeing the look of trepidation on her face. \"Don't you trust me?\"\n\n\"Not even a little. Not right now, I don't.\"\n\nHe smirked, then reached out to hold her other hand. He pulled her closer to him and started walking backward, pulling her with him. Then he spun her around so that she was now facing the jukebox. \"Pick a song, Lily.\"\n\nShe snickered. \"Oh my god, you're such a tease.\"\n\n\"Who, me? What on earth are you talking about? I just wanted one more dance with you.\"\n\n\"Uh-huh.\"\n\n\"What were you thinking, Miss Lily O'Connor?\" Then he gasped\u2014a loud fake gasp. \"Oh my gosh, did you think...\" he didn't finish the sentence.\n\nHer cheeks became flush and hot and he could tell she was feeling embarrassed, so he stopped the teasing. \n\n\"Ok, seriously, I'm about to pass out, Lily, but I really do want you to pick a song.\"\n\n\"Okay, this will be easy...if we have it.\" She flipped through the pages of songs, searching single-mindedly for a specific song. \"No way!\"\n\n\"What?\"\n\n\"Doc just never ceases to amaze me, that's all.\" She queued up the song, then turned to face him. She reached her hands up to his shoulders again, as he slunk his hands down to her waist. She was already leading him in a slow sway before the music even started.\n\nThen she giggled quietly.\n\n\"Oh no. What did you...\"\n\nThe music started. It was the B-52s' Love Shack.\n\nShe snorted, then started openly laughing as she looked up at him, still keeping him wrapped in her draped arms.\n\n\"You're incredible, you know that, Lily?\"\n\n\"Yeah...I am pretty awesome.\" She leaned in against him and slow-danced to the ninety-three beats per minute song.\n\nShe lowered her hands until they were pressing against his chest. They were growing uncomfortable hanging from his shoulders\u2014at least, that's what she said. She massaged his chest through his shirt, slowly, firmly. Then she scraped across one of his nipples with her fingertips\u2014quite by accident, of course\u2014and heard him gasp.\n\nHe couldn't see it, but he felt her cheeks rise against his chest as she smiled. He wrapped his arms further behind her waist, then pulled her tighter against him. He stroked her back, up and down, as they continued to sway, reaching further with each movement, until his hands reached her belt-line.\n\nHe paused there, only for a moment, before reaching further down, as far as he could reach, fondling her butt through her jeans.\n\nShe responded by pressing herself, pelvis first, as closed and tight against him as she could. She felt his manhood restrained by his pants, but rebelling angrily against the confinement. She heard him moan, a deep, guttural sound emanating from his core. And she felt it in his chest, still pressed against her cheek.\n\nThe song ended, but they continued swaying.\n\n\"Lily?\"\n\n\"Yeah?\"\n\n\"I probably ought to get. I'm glad it's a short drive, but still...\" He didn't want to leave. He wanted to spend the night in her loft...in her bed...in her. \"I'm about ready to pass out, I'm so tired...\"\n\n\"Yeah...me, too.\"\n\n\"Are you okay? Are you upset?\"\n\n\"Why would I be?\"\n\n\"Well, I mean...it feels like we were about to...\"\n\n\"You don't have to say it...I understand.\" She snaked her hands around to his back and rubbed up and down like he'd been doing to her only a couple of minutes prior. \"No, I'm not upset.\" They were still swaying, even though they seemingly agreed he should leave. \"This feels so nice.\"\n\n\"Yeah, it is nice...Thank you.\"\n\n\"Nick?\" she asked while still in his embrace, her head pressed against his chest again, her cheek against his breast pocket.\n\n\"Yeah, Lily?\"\n\n\"I have a small confession to make.\"\n\n\"Um...you do?\"\n\n\"Yes...I might know where the missing puzzle piece is.\" She swallowed a giggle.\n\n\"Excuse me?\" He paused as the realization took a couple of seconds to sink in. \"Excuse me?\" he said again, taking her by the shoulders and pushing her body away from him. \"Where's the missing piece, Lily?!\"\n\nShe smiled up at him, biting her bottom lip.\n\n\"Where, Lily?\" he insisted. \"I demand to know where that piece is right now!\"\n\n\"Sorry,\" she said calmly, \"but you're going to have to find it yourself...if you want it that bad.\"\n\n\"What?\" his face displayed a tired confusion still swirling in his weary brain. \"Well...but...do I get any hints, at least?\"\n\n\"Hmmm,\" she was thinking it over in her mind. \"Your first clue is: It's less than three feet away from you.\"\n\nHis confused look only deepened.\n\nThen she moved away from him a few paces and leaned back against the jukebox. \"But now, it's more like...ten feet away from you.\"\n\n\"Huh?\" he whispered. \"Oh...oh my,\" he then groaned as his brain finally awakened from its dullness. He walked over to her, placing his hands on her waist.\n\n\"Back to three feet,\" she uttered quietly. \"Your second clue is...\" she continued, \"it isn't exactly in plain sight.\"\n\n\"What's that supposed to mean...exactly?\"\n\nShe bit her bottom lip again. \"It means...you're probably going to have to hunt for it and maybe...remove some things...that is, if you want to find it.\"\n\n\"Oh, I do, Lily...I do want to find it...\"\n\n\"Then why don't you start looking for it?\"\n\nNick moved his hand to her hair. Why he started there, she didn't know, but she reveled in the feel of his fingers combing her hair, teasing the back of her ears, playing with the tresses that fell as he removed the single clip she always wore to keep her hair out of her face while working.\n\n\"Not there,\" he announced.\n\n\"Shocking, I thought for sure...maybe you should look further...down?\"\n\nHe gave her a smirk then knelt down in front of her and started untying her sneakers.\n\n\"Oh!\" she giggled in complete surprise, as he removed a shoe from one foot, then lifted the other to do the same. \"I wasn't thinking quite that far down, but okay...\" she teased.\n\nHe held her foot up and made a show of shaking out her tennies and tossing them aside before slowly teasing his fingers into her no-show sock, feeling her skin as he slipped the sock off. Then he turned the sock inside out and shook again, before pronouncing, \"Not here either.\"\n\nLily had to lean back, holding herself up with her hands firmly grasping the jukebox, lest her legs give out completely\u2014she feared they might.\n\nHe lowered her foot, then did the same with the other. \"I guess it's somewhere between here...\" he lightly tickled the bottom of her sole, \"...and the top of your head?\" He flung the socks away.\n\nShe wiggled but somehow remained upright. \"You're really good at this, mister...Have you frisked a lot of girls?\"\n\nHe chuckled, \"Hardly, Lily.\"\n\nShe wondered if she shouldn't have asked that.\n\n\"But I've watched a lot of cop shows,\" he joked as he slid his fingers into one of her front pockets, teasing her leg as he thoroughly inspected it, then did the same with her other front pocket. \"Not here either,\" he showed a quizzical expression, \"where could it possibly be?\"\n\nShe rolled both of her lips into her mouth, then zipped them shut with her fingers.\n\n\"Oh, I see, lady\u2014not cooperating, eh? Well, I'll get to the bottom of this, one way or the other...\" he withdrew his fingers, then grasped her by her waist and spun her around quickly until she was facing the jukebox.\n\nLily yelped in surprise.\n\n\"Hands against the wall, lady, and spread your feet,\" he commanded as he wrapped his hands around her right ankle and frisked her all the way up to her butt then did the same with her left leg except, this time he paused at her inseam and massaged her inner thigh, as if he'd found something suspicious there. \"Hmm, doesn't seem to be here...unless you're hiding it really well.\"\n\nHe turned her back around to face him. \"Um, can I get another clue, please?\" He knew without a doubt that she was willingly playing along, but he wasn't entirely sure just how far he should go.\n\n\"It's hidden by at least one more layer.\"\n\n\"Hmm,\" he looked down to the pocket on the front of her shirt. Flannel never looked so sexy. He slowly slipped his fingers into the pocket, caressing her breast through the fabric and her bra. He found no puzzle piece, but he did manage to extract a moan from her lips.\n\nHe pulled his fingers out, then hesitantly reached for the top-most button of her shirt. He gazed at her with questioning eyes. \n\nShe nodded encouragingly.\n\nHe unfastened the first button...then the second...continuing until they were all unfastened. The fabric opened only slightly, gaping just enough for him to see that her bra was black contrasting her lighter colored skin. He had to forcibly yank up on the shirt to get the lower hems out of her jeans, then reached behind her to finish extracting it. He slid the shirt off of her shoulders, revealing more and more and more of her skin. He leaned in...and kissed the top of her shoulder. \"Not here.\" He kissed lower over her collar bone. \"Not here either.\" He kissed even lower, just above the cup of her bra. \"And not here...where could it possibly be?\"\n\n\"Maybe...\" she barely managed to breathe, \"...maybe...it's still just a little lower...\"\n\nHe released the front clasp of her bra, staring into her eyes as he freed her breasts from their confines and into the open air. Goosebumps covered her skin. He slid her bra off of her shoulders and behind her back, letting it fall onto the jukebox. Then he looked down, taking in the sight of her breasts for the first time. \"Oh, Lily...they're beautiful...\"",
        "She nearly whimpered at his words, then actually did when she felt warm kisses just above her areola, first on one breast, then the other, and back again. His tongue followed soon after, tracing the darker skin as if circling its prey, waiting for the right moment to attack. And then...it did\u2014a flick of the tongue against her already hardened nipple, then another, then a full-on assault. \n\nShe started sliding down against the jukebox, barely able to hold herself up. Then, just as quickly, the attack relented leaving her out of breath, panting.\n\nHe lifted her breasts, inspecting the crease beneath them, and using the opportunity to grasp them and squeeze them, groaning his appreciation.\n\n\"Oh my...\" she blubbered, nearly swooning as he massaged her breasts.\n\n\"Ahem...\" he seemed to be trying to collect himself again, \"right...well...it's not there either...is it?\" He helped her straighten up and wrapped his hands around her waist. \"I'm starting to wonder if you've been lying to me, Miss Lily O'Connor. Maybe you don't have the missing puzzle piece at all.\"\n\n\"Or maybe...\" she countered, still having a hard time breathing as her breasts heaved and her heart beat pulsed visibly against her skin, \"...maybe just haven't finished your investigation yet.\"\n\nHe looked down at her\u2014at her hair tangled and mussed, at her breasts heaving, her nipples brazenly extended toward him, at her bare feet. There was only so much uncharted territory left to expose. His already hardened manhood lurched in his pants with new fury. \"Lily...are you sure?\" He looked back up to her, searching her eyes for confirmation...and finding it.\n\nHe lowered himself until he was at eye level with her waist, then released the button to her jeans and pulled back the flap so he could slide down the zipper, revealing black panties that matched her bra. He reached up and snuck his fingers into her belt loops and slowly, deliberately, pulled her jeans down to her ankles. He lifted each leg, one at time, then threw her jeans unceremoniously to the floor behind him.\n\n\"Well, detective,\" she purred, \"are you going to see this through?\"\n\nHe answered by reaching up and cupping her mound with his hand over her panties, feeling the dampness and heat escaping through the fabric. She gasped then moaned, her pelvis reeling back away from him momentarily, then pressed urgently forward against the palm of his hand.\n\nHe bent his fingers behind the sides of her panties and slid them down, staring at the neatly trimmed dark patch of hair revealing itself to him. \"Oh Lily...\" He was mesmerized, transfixed, paralyzed...until she grabbed the back of his head and pulled it fervently forward to her sex.\n\nInstincts overwhelmed him as he kissed her skin and lapped her arousal, slurping it into his mouth, tasting it, swallowing it. He explored her labia with his tongue, first the outer lips, then the inner folds, drinking her in but unable to keep up with her mounting arousal. His nose pressed against her button as he snaked his tongue into her, eliciting more moans, more writhing, more wetness. He flicked her clit with his tongue, once, and again, before wrapping it between his lips and clamping onto it, while his tongue continued to flit against the sensitive nub with a feverish pace.\n\n\"Aah! AAH! No more!\" Lily cried, yanking him off of her forcibly by his hair, then pulling him up in front of her. \"I need you...naked...now...\"\n\nTogether, they stripped off his clothes\u2014his shirt flying through the air, while his pants collapsed around his ankles, his boxers following soon after, as they also flew across the room in a different direction. His shoes landed in opposite directions and his socks would have been left on, if he'd been wearing any.\n\n\"Now, Nick, please! I need you now!\"\n\nHe leaned her against their table and she hopped up. Then he laid her back atop the puzzle they'd worked so hard to assemble. He stepped forward, aligning himself to her body as he guided his shaft to her awaiting lips, gliding it up and down her slit, transferring her juices and covering himself with her slippery essence. It felt like fire...wet fire.\n\nShe slapped his chest, demanding that he wait no longer, leaving red marks with each slap until he finally plunged, diving into her. \"AAAAH!\" she screamed in rapture. \"Oh, Nick!...Yes!...\"\n\nHe drove into her forcefully, his full length enveloped in her folds...in her core. Then he pulled back to the brink of withdrawal before plunging again\u2014over...and over...and over again. Puzzle pieces clung to her back, while others disjoined and fell to the floor. Tears escaped and wetted her face, tears of immeasurable joy, until beautifully\u2014completely\u2014he came deep inside her, matching her climax and fulfilling their love. Their rhythm was frantic, their passion unbridled, as they surrendered everything to the other, until there was nothing left to give\u2014until he could hardly stand and she could barely breathe.\n\n<center>++++++++++</center>\n\nAfter several minutes basking in the afterglow and regaining just enough energy to move again, Nick slowly pulled himself away, seating himself in a chair next to her. He laid a hand on her tummy and let it idly explore her tenderly, from her belly button to her mound, gently caressing until both were nearly falling asleep. \n\n\"It's almost five, Nick,\" she finally whispered.\n\nHe groaned, but somehow found enough energy to raise himself up.\n\nSlowly, they began the search for all of their clothing, strewn seemingly across half the bar room. They dressed themselves as they found each item until they were fully dressed, though thoroughly disheveled.\n\n\"Can I walk you out?\" she asked.\n\n\"Only to the door, okay? I don't want you to go outside this late...or early, whatever it is.\"\n\n\"Okay.\"\n\nHe grabbed his jacket, made sure his keys were in the pocket, and turned to face her. \"I'd say I had a good time, Lily, but that seems so...obvious.\" He grinned. \"Thanks for listening and doing old people stuff with me. I never knew it could be like that.\"\n\n\"I love doing old people stuff with you.\" She reached around him and slid a hand into one of his rear pockets, teasing his ass with a very subtle squeeze.\n\nThey walked together to the door, where she unlocked it but then leaned against it, standing between him and the door like a barricade.\n\n\"I'm afraid this is a toll-door, mister.\" she teased.\n\n\"Well, joke's on you, then. I don't have any cash. Do you take debit cards?\"\n\n\"Nope. But I do accept other forms of payment.\"\n\nHe leaned down. \"Like this, maybe?\"\n\n\"Mm-hm,\" she responded, as she raised herself on her tip toes to meet him in a gentle, luxurious kiss.\n\nHe reached his hands behind her head and intertwined her hair with his fingers, and gently pulled them out as if they were a comb. So soft.\n\nShe pressed her hands against the door, pushing herself away from it. Then moved her hands back to him. She slid her fingers down from his chest to his belt and grabbed it as she slowly turned him around, still maintaining their kiss the whole time.\n\nShe pulled back from their kiss and slid her hand down from his belt to his crotch. At first, she lightly traced the outline of his shaft through his pants, then she grasped it firmly and stroked it, as best she could, from one end to the other and back again. MMmmmm\n\n\"Your toll is paid...for now...but you'd better get.\"\n\n\"Oh god, Lily.\"\n\n\"I know...but I mean it. Please go before we...please go.\"\n\n\"Okay.\" he reluctantly pulled away, her hand giving chase as he retreated. He opened the door, the cold autumn air immediately sending chills through his bones. \"Good night, Lily.\"\n\n\"Good night, Nick.\"\n\nLily spent the next hour cleaning up the bar room, careful to leave no trace of their lovemaking. She smiled and planted a tiny kiss on the missing puzzle piece as she put it back into the box with the others. Apparently doing a jigsaw puzzle could be an aphrodisiac, after all. \n\n<center>++++++++++</center>\n\nIt was Friday night again and a very special one at that. It was also Halloween. Doc's Place would commemorate and celebrate it by doing absolutely nothing out of the ordinary.\n\nMrs. Whitley had returned to the bar and was engaging Eddie in easy conversation. It had to be small talk because, unlike any other night, the place was packed\u2014every table, every bar stool, even a few people standing in open spaces.\n\nNick had called the bar several more times throughout the week, stealing way too much of Lily's time when she ought to have been working. She had warned him that this Friday night would be busy, so he arrived earlier than usual to make sure he got his usual table. And Lily had joined him, trusting Eddie to handle service, for the most part, on his own.\n\n\"Nick, are you sure you want me to be here already when Sarah shows up?\"\n\n\"Lily, you don't even know that she will.\"\n\n\"Actually, Nick, I guarantee she will. It's Halloween, she has too. It's the end of the fiscal year, so to speak, for people with unfinished business. Accounts have to be settled.\"\n\nIt was the first time she'd been so forward with him about how she knew Sarah would show. Had it been the first time he'd heard such a thing, he wouldn't have believed it. Even now, he couldn't explain it and would never repeat such an idea to anyone outside of Doc's Place. No one would believe him anyway. Just beneath the surface, he sensed she was right\u2014that she indeed knew that Sarah would appear.\n\n\"Lily? I believe she'll show up, too. And yes, I still want you here.\"\n\n\"Okay, then. I won't go anywhere.\"\n\n<center>++++++++++</center>\n\nEven though the place was busy, which seemed highly unusual to Eddie, it also still seemed much like every other night. There would only be an initial rush of drinks being ordered and then, only occasional orders after that. Sure, a few stragglers would come in late and maybe a few folks might actually request a second or third drink. But as the initial rush calmed down, Eddie found himself with more and more free time behind the bar. Mrs. Whitley seemed keen on taking most of it for herself.\n\n\"So, the last time we talked, Eddie, I was about to tell you you're ready,\" she announced.\n\n\"Excuse me, Mrs. Whitley? Ready for what, exactly?\"\n\nIn the background, the bell above the door rang out. In walked a familiar face\u2014a pretty face.\n\n\"Ready to meet my daughter, of course!\"\n\n\"Wait. What?\"\n\n\"I've been promising her since she was five that she would someday meet her prince charming.\"\n\n\"Mrs. Whitley...Me?...I'm no prince...Are you really trying to set me up with your daughter?!\" he started to object, feeling unsteady, embarrassed and more than a bit frightened.\n\n\"I already know that. We established you're not perfect the last time we talked. But that's part of your charm, my boy. You see, when I told her she'd meet a prince charming someday, she said she didn't want one. She only wanted a good, honest man\u2014a man who was humble, who wouldn't be reluctant to tell her she's beautiful. A family man who finds his own joy in the happiness of others.\" She turned to face the door and waved her daughter over.\n\n\"I think I've been set up, Mrs. Whitley.\"\n\n\"You don't have to thank me. But I do feel I should be thanking you.\"\n\n\"Thanking me? For what? I haven't done anything. And there's a decent chance I'm going to disappoint you. It's the one thing I have a strong track record of.\"\n\n\"No, that's not likely. I've seen how Doc took you under his wing and you've been an exceptional student. I fully expect you to make mistakes, though. You're a man after all. But making mistakes isn't the same thing as failing.\"\n\n\"Hmm, Doc just told me something surprisingly similar the other day. Now, I really feel set up.\"\n\n\"Well, thanks again.\"\n\n\"I'm sorry, Mrs. Whitley but seriously, what for?\"\n\n\"For helping me with my unfinished business, of course.\" Mrs. Whitley turned just in time to give her daughter a hug as she approached the bar.\n\nEddie was able to hear their conversation, just a few feet from the bar.\n\n\"Hey, mom...are you really leaving now?\"\n\n\"Yes, dear. It's time. I was blessed to be able to see you these last few weeks. I'll be forever grateful for them.\"\n\n\"I know, me too. But this is so hard.\"\n\n\"Yes, baby. I know it is. But we'll get together again someday soon. I'm sure of it.\"\n\n\"But you can't know it, right?\"\n\n\"No, dear. I wish I could. And now...I really do have to go.\"\n\nShe hugged her mom one last time, then leaned against the bar, almost to steady herself, as she watched her leave.\n\nWell, here goes nothing, I guess. Eddie slid a cocktail napkin in front of her. \"Hi, I'm Eddie. Anything I can fix for you?\"\n\nNot likely. she thought silently. She continued staring at the door a couple more minutes, until it was clear that her mother would not be returning. Then, she turned to the bar and took a seat, looking dejected and sad.\n\n\"Hey there,\" he quietly offered again, \"I'm Eddie. I'm not pressuring you at all, okay, but if you decide you want something to drink, just let me know okay?\" He spoke with compassion and tenderness and sensitivity.\n\n\"Thank you...Eddie, was it? I'll have a Gin and Tonic, please.\"\n\n\"Ah, just like your mom.\" He smiled reassuringly.\n\n\"What?\" she replied, with an air of surprise in her voice. \"What did you just say?\"\n\n\"I just said you're getting a Gin and Tonic, just like your mom. That's her favorite drink, too. Though, I've never liked the taste of gin myself.\"\n\n\"You knew my mom?\"\n\n\"Well, sure. I mean, not super-personally. But we've talked quite a lot lately. And not to sound creepy, but she talks about you quite a bit.\"\n\n\"Eddie? Are you sure you were talking to...my mom?\"\n\n\"Of course, Mrs. Whitley, and you're Anna, right?\"\n\nShe looked like she was about to pass out.\n\n\"Whoa, whoa, whoa!\" He ran around the bar and braced her from behind, just in case. \"Hey, Anna? Are you okay?\"\n\n\"Yeah, I think so. I just feel a little light-headed.\"\n\n\"Come sit over here.\" He helped her over to a settee at the back wall near the bar. He cleared off a couple of supply boxes that had been stacked on it and gave her his jacket as a blanket and some bar towels as a makeshift pillow in case she wanted to lie down.\n\n\"Oh my god, this can't actually be happening.\" she murmured. \"This can't be real.\"\n\n\"Do you want to just rest a few minutes?\"\n\nShe nodded.\n\n\"Okay, I'll be right over here if you need anything? I'll come back and check on you. Just rest, okay?\"\n\nShe nodded again and Eddie returned to the bar.\n\n<center>++++++++++</center>\n\nHe'd no sooner returned to the bar when he looked over to see a woman peering into the bar through the front door. She appeared to be debating whether to come in or not. When she noticed Eddie looking back at her, she disappeared. That's strange.\n\nHe shrugged his shoulders, then scanned the crowd. There were a lot of familiar faces. In fact, at nearly every table or group of standing people, he recognized and knew at least one person. But each party seemed to have one, sometimes two, additional people with them.\n\nIn the back of his mind, he felt an idea starting to come together\u2014an understanding, perhaps, that he'd never had before\u2014an awareness, or perception as Doc called it. Have some of these people been here all along?\n\nHe continued scanning the crowd, finding Nick sitting at the table in the corner, where he always sat. A glass of red wine was set at the unattended seat to his right; to his left sat Lily. She was beaming. For that matter, so was he.\n\nThey were engaged in effortless conversation, occasionally exchanging meaningful touches with their hands, smiling almost the entire time. Lily had a divided attention all night\u2014longing to be in the moment with Nick, but also keeping a keen eye on the door. Surprisingly, he wasn't nearly so diligent, his eyes transfixed solely on Lily.\n\nFor some reason, Eddie looked back at the door, catching the woman peeking in, yet again. She appeared to be looking toward the back of the room. Could that be Sarah? He waved at her with a friendly face, inviting her to come in. This time, she obliged.\n\nAs she walked near the bar, Eddie came around to greet her. \"Hi there. Would you like to sit at the bar? We're pretty packed tonight.\"\n\n\"No, that's okay. My...uh...my party...is already here.\"\n\n\"Oh, okay, sure. By all means, come on in.\" I think it IS. He returned to the bar, but watched as she meandered between tables and small stands of people, heading toward the back corner. Well, I'll be...\n\nEddie was hoping to watch the scene unfold, but caught something stirring out of the corner of his eye. Anna was sitting up, still wrapped up in his jacket. He went to check on her.\n\n<center>++++++++++</center>\n\nLily saw Sarah walking toward them and nudged Nick's leg under the table. \"Hey, do you want me to leave?\"\n\n\"No, Lily. I already told you. Please stay.\" He rose from his seat to greet Sarah.\n\nLily looked down as Sarah approached, as if deferring to her as Nick's first love.\n\n\"Hi, Sarah,\" he started. \"How are you?\"\n\n\"I'll let you know soon, Nick.\" She looked down at Lily, then back at him. \"Well, are you going to introduce me?\"\n\n\"Oh! I'm sorry, this is Lily.\"\n\nLily looked up at Sarah, unsure what to expect\u2014a glare? a welcoming smile? It was the latter. She immediately felt relieved and stood as well, extending her hand. \"Hi, like he said, I'm Lily.\"\n\nSarah accepted her hand and smiled. \"Very nice to meet you, Lily.\"\n\n\"Um, you too, Sarah. I've been wanting to talk to you for a long time, actually.\"\n\n\"Oh?\" Sarah seemed honestly surprised.\n\nLily looked over to Nick, seeking a little bit of help.\n\n\"Sarah,\" Nick started. \"Lily's been wanting me to explain what happened...that night...and I couldn't do it. So she was wondering if...\"\n\n\"If I would tell her?\"\n\n\"Right, yes...so, would you?\"\n\n\"I don't mind, Nick, so long as you tell me you really want me to.\"\n\n\"Yeah, I do, Sarah. She deserves to know. I'm just too ashamed to tell her.\"\n\n\"Oh, there you go again. Yes, I'll definitely tell her. But you know my version won't sound quite the same as yours, not with that whole guilty conscience thing you've got going on.\"\n\n\"Yeah, I know. But she'll understand. Do you mind if I'm not here for this though?\"\n\nBoth Lily and Sarah nodded. He left them and headed out the front door for a few minutes of fresh, though unseasonably cold, air.\n\n\"So, Lily, where do you want me to start?\"\n\n\"I don't even know. He won't tell me anything.\"\n\n\"Good, then you'll hear the straight dope the first time then. But I'll have to give you the short version, okay? I don't have much time.\"\n\n\"Yeah, I understand.\"\n\nSarah wiggled in her seat a little bit to get comfortable, then proceeded. \"Nick and I met in college. He studied and I mostly partied. Somehow our paths met and we fell in love. Mind you, it wasn't really love. We just got along well and enjoyed spending time together. Except, that didn't last. It turned out we're quite different and we started fighting, like all the time. He wanted to settle down, get married, have kids, the whole thing. But I wasn't ready for that\u2014wasn't sure I would ever want that.\"\n\n\"Was that all you fought about?\"\n\n\"No, of course, not. Our personalities were just so different. I was carefree; he was responsible. I wanted to travel; he wanted to nest. But even that wasn't the biggest thing.\"\n\n\"Those are all pretty big.\"\n\n\"I guess. But I'm pretty sure I was Nick's first girlfriend, the first person he said 'I love you' too. The first person he kissed and had...well...you understand.\"\n\n\"Yes.\"",
        "\"I honestly never felt that way about him. Sure, I liked him okay enough, and he's a terrific guy. He just wasn't ever meant to be my guy. I tried to tell him that so many times, but he always shut me down. Until one night, he wanted to visit me at my place, but I was out drinking with friends. He found me at a bar, dancing with a stranger.\"\n\n\"Oh, so he thought you were cheating?\"\n\n\"Well, I wasn't. But in his mind, I might as well have been. Anyway, he made a huge scene at the bar\u2014embarrassed the hell out of me, yelling, 'Maybe we're really not meant to be together!' And I mean he was really yelling it.\"\n\n\"Oh.\" Lily recalled him mentioning that line before, without all the context, though.\n\n\"So, I left in a huff. He humiliated me in front of all my friends and a bar full of strangers. But here's where his version of the story is just plain wrong. He thinks I left because I was upset about what he said. That isn't true. I had been trying to tell him that very thing for months, but he didn't want to believe it. I stormed out of there because he embarrassed me and that's the only reason.\"\n\n\"So that explains a lot...but not the guilt.\"\n\n\"Yeah, so here's the kicker. I said I'd been drinking, right?\"\n\nLily nodded.\n\n\"I'd been drinking a lot. And...well, I didn't exactly make it home that night.\"\n\n\"Oh.\" It all made sense, now. Everything came together in Lily's mind.\n\n\"I'd like to say a part of me died that night...you know, the clich\u00e9?...but all of me died that night, Lily.\"\n\n\"I understand, Sarah.\"\n\n\"Do you?\"\n\n\"Are you kidding? Look at this place. You think this many people would come to this place if there wasn't something else going on? Half the people here have unfinished business, just like you.\"\n\nSarah looked around. \"Okay, so I only see about a dozen people in here, but whatever.\"\n\n\"Huh?\" Lily scanned the room again. There were easily fifty people who hadn't left yet.\n\n\"Anyway, I don't have unfinished business. Not really. I'm only here because of Nick. He's, like, stuck. I've been trying to get him unstuck for almost a year.\"\n\n\"And your time runs out tonight.\"\n\n\"So you do understand.\"\n\nLily nodded again.\n\n\"Lily, I don't love him. And I never did. But he's a good guy, and he took on guilt for something that wasn't his fault...Anyway, that's the story.\"\n\n\"Thank you for sharing it with me.\"\n\n\"Sure, and thank you. The real tragedy would be if two people died that night, instead of just one.\" Sarah rose and gestured to Nick to come back in. He quickly reentered, looking forward to the warmth inside if not the conversation.\n\nSarah had some final words she wanted to share to both of them. \"Lily, I've seen how you light up. And Nick, I see how you are around her. Those gifts you bought her were sweet, by the way.\"\n\n\"You saw that?\"\n\n\"Yeah, sometimes I just looked through the window but didn't come in. Anyway, what you guys have is real. What we had...well, it was fun for a while, and then it wasn't. But it was never love. Nick, I'm leaving tonight and I don't think you'll ever see me again. You need to know that Lily is your love...not me. Do you finally understand?\"\n\n\"I do, Sarah. Yeah, I do.\" Then he turned to Lily and took her hand, gazing into her eyes for a moment before speaking. \"Lily? I'm sorry I put you through so much this past year. Thank you for helping me.\"\n\n\"You're welcome, Nick. You're very welcome.\"\n\nWhen they both turned around, Sarah was gone\u2014the wine glass, empty.\n\n<center>++++++++++</center>\n\n\"Hey, Anna. Are you feeling any better?\" Eddie reached up and held the back of his hand to her forehead, as if to check for a fever. Why he thought to do that, even he didn't know. It just seemed like something to do.\n\n\"I think I might already know the answer,\" Anna started, \"but how did you know my name, Eddie?\"\n\n\"I already told you.\"\n\n\"Tell me again.\"\n\n\"Sure, your mom told me.\"\n\n\"And how did you know my mom?\"\n\n\"Well, she's a customer here. Her and your dad, both.\"\n\n\"Right...right...And when did you first see them here?\"\n\n\"I don't know, I guess it was around the middle of September, maybe?\"\n\n\"I have one more question. Can you tell me something that only my mom would know? Anything at all?\"\n\n\"Like what?\"\n\n\"Anything, Eddie...that only my mom or dad would know...please?\"\n\n\"Okay, uh, well, she said that when you were five, she said you'd someday meet prince charming and you said you didn't want one. Does that count?\"\n\n\"Wow...\" she looked down at her arm and pinched it, then winced in pain.\n\n\"Anna, why are you asking all these questions?\"\n\n\"Because I've been visiting my parents these last few weeks, Eddie.\"\n\n\"Yeah, I know. I've seen you.\"\n\n\"And now, you're saying you've been talking with my mom, too.\"\n\n\"Sure, tonight even.\"\n\n\"Eddie...I only came here tonight because my mom told me I should. She said there'd be someone here I'm supposed to meet. Not my 'Prince Charming'...but my honest man. I don't know why...or how...but I think that's you...But Eddie...\" She paused before proceeding. \"I'm the executor on my parents' estate....that's why I came home from school...over a month ago.\"\n\nEddie was still trying to comprehend what Anna was telling him when he felt warmth on his shoulder. He turned to find Doc patting him\u2014partly to give him an encouraging 'attaboy' and half to ask him for a moment of his time.\n\nDoc nodded toward the bar, indicating further that he wanted to talk with him privately.\n\n\"Anna, I'll be right back, okay?\" He rose and followed Doc back to the bar.\n\n\"Hey Eddie, listen. I'm just about out of time but I wanted to ask you something.\"\n\n\"Sure, Doc, anything.\"\n\n\"Well, I'm hoping you'll take over tending the bar in my absence.\"\n\n\"Okay, sure. For how long?\"\n\n\"From now on, Eddie. I won't be coming back.\"\n\n\"Doc, where are you going? I don't understand.\"\n\n\"Yes, you do, Eddie. You do understand. I just know it. You see all the souls here tonight, right?\"\n\n\"Yessir.\"\n\n\"Then, you know. As to where I'm going, I'm really not sure. But, back to my question; will you take over behind the bar?\"\n\n\"Of course, Doc. Of course...and I don't want to, but...well, I do understand.\"\n\n\"Good. Very good.\" He smiled contentedly. \"Then my soul is at rest now. I know I'll be fine and so will you.\"\n\n\"Thank you, Doc. For everything. You have no idea...\"\n\n\"It was my pleasure, son,\" Doc said as he pulled Eddie into a warm, fatherly embrace. \"It was truly my pleasure. I'm so very proud of you.\"\n\n\"I love you, Doc.\"\n\n\"I love you too, son. Now, I have one more person to say good bye to.\" He turned to go find Lily, but paused. \"One more thing, Eddie. That young woman over there needs you. And you need her. She can help you find your way. Love her.\"\n\n\"Yes, sir.\"\n\n<center>++++++++++</center>\n\nDoc downed one last swig of whiskey before heading toward the table in the corner. Nick was holding Lily tightly, rubbing her arm, in silence. Each lost in deep thought.\n\n\"Hey, Lily-bug.\"\n\nShe looked up to Doc and sensed what was coming. Tears immediately flooded into her eyes.\n\n\"It's time for me to go.\"\n\nShe stood and came around to him, snuggling up to the old man, like she used to when she'd first met him, when he'd taken her in off the streets, gave her a warm home, and his heart. A tear fell to her cheek.\n\n\"Thank you for being patient with Eddie. I know you didn't want to.\"\n\nShe snickered despite her sadness. \"I understand what you saw in him now. You always did have that special gift of seeing the good in people. I didn't see Eddie like you did, not at first. But I do now.\"\n\n\"Oh, you've got the eye, too, Lily. I know you do. This man you're with is proof of it.\" Doc continued to hold Lily in a tight embrace as he reached out his hand to introduce himself. \"And you must be Nick.\"\n\n\"I am. You're Doc, right? This is your place?\"\n\n\"Well, it used to be. It's Lily's now.\" He paused. \"I know we've just met, Nick. And you won't be seeing me again. But I have a request of you\u2014only one request.\n\n\"Yes, sir. Anything.\"\n\n\"I only ask that you'll take care of...and love...my precious daughter...with all your heart.\" Tears were flowing down his cheeks and his words were choppy, broken, uneven. \"Leave no unfinished business...Can you do that for me, son?\"\n\n\"Yes, sir. I believe I can.\"\n\nDoc released his hand and nodded\u2014a gentleman's agreement, sealed with a handshake, that he knew Nick would honor.\n\nLily moved to Doc's side, still clinging tightly to him, as they walked toward the door. She resisted the pace, hoping to prolong the moment as long as she could. \"Doc?\"\n\n\"Yes, Lily-bug.\"\n\n\"I want to do something to the bar.\"\n\n\"You what?\"\n\n\"Don't worry, I've honored all of your provisos and always will. But what I want to do, you didn't have a provision for.\"\n\nDoc seemed a little bit concerned, but said nothing.\n\n\"I want to rename it.\"\n\n\"Oh, Lily, I don't know. Everyone knows it as Doc's Place.\"\n\n\"I understand that, but it's nothing major\u2014not to anyone else anyway. But it would mean the world to me if I had my name on it with yours.\"\n\nHe pulled her in tight.\n\n\"I was thinking Doc O'Connor's Place. Doc is your name. O'Connor is mine...and yours.'\n\n\"Lily, I think it's perfect\u2014just like you.\"\n\nThey reached the door and Doc reached for the handle. Lily clutched to him as tightly as she could, not wanting to see him leave, for good.\n\n\"I wish you didn't have to go.\"\n\n\"I wish I didn't either, Lily-bug.\" He managed to face her and held her face in his hands. \"Know this...\"\n\nShe looked into his eyes, blinking repeatedly so she could see him clearly through her tears.\n\n\"...I will always love you...and I'll never be far.\"\n\n\"I love you, too, Dad.\"\n\nHe kissed her forehead, then released her. This time, she let him go. He walked through the door and disappeared.\n\nThere was a hole in Lily's heart, that only Doc had filled for most of her life, and once again it felt desperately empty...but only for a moment. As she stared out the door, into the cold darkness, she felt a warmth from behind her. And then that warmth enveloped her as Nick wrapped his arms around her from behind. And then she felt a hand...a warm hand...on her shoulder. She turned to see Eddie, looking down at her and smiling; his other arm was holding Anna close to his side.\n\n\"We're going to be okay, Lily.\" Eddie reassured her. \"You know why?\"\n\n\"Tell me, Eddie.\"\n\n\"Because we're family.\"\n\nShe smiled back at him and nodded. She knew he was right.\n\n\"Better than okay, in fact,\" he continued. \"You know what I always say...there's nothing better than a half-dead bar...especially on a Friday night.\"\n\n<center>++++++++++</center>"
    ],
    "authorname": "joeyjax",
    "tags": [
        "haunt",
        "lost love",
        "love",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/wine-and-spirits"
}