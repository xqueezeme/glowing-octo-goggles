{
    "title": "An Unexpected Reunion Ch. 04",
    "pages": [
        "Thank you for your patience, this is going to be the last chapter in Callie and Lexie's story. At least for the moment anyway as I have other ideas flying around my head that I want to get on paper before I completely forget them. \n\nAs always please comment/get in touch with thoughts, concerns or feedback. I love reading what you all think and it really does make this worth-while! \n\nFebruary 2007 -- Callie\n\nClosing the door to my studio flat I lean against it and stay silent for a moment, my whole body is stiff from the cold outside. But worse than that, I can feel my heart breaking and I can feel my body overcome with loneliness and hurt. I'd stood at the train platform for two hours waiting for her. She wasn't on the train. She wasn't coming. It shouldn't be a surprise seeing as I haven't heard from her in two weeks but despite that a small part of me hoped that she hadn't given up on us yet. Hadn't given up on me. How fucking wrong I was.\n\nBefore I can give rational thought a chance I'm throwing the mother of all tantrums, plates and cups go flying across the room to smash against the wall opposite. The small table I have in the kitchen area is flipped over, I'm punching walls, doors, cupboards. I don't know how long this goes on for, but eventually I stop and curl up in a ball on my bed and cry. I cry until I have no tears left to shed, even then I sob loudly. Wailing long into the night until I eventually fall asleep hurt, alone and sore.\n\nThis was the start of my slippery slope the next few days pass in an alcohol fueled blur, I vaguely remember going to the shop and picking up a bottle of scotch. When I woke this morning I realised I must've returned as there's three empty scotch bottles on my kitchen surface joined by several empty beer cans. My head feels foggy, and I have a taste in my mouth that I can only imagine is what you get if you've been chewing sawdust for three days.\n\nI lie on my back in bed, dressed just in my underwear staring at the blank ceiling above. My head pounds as the same thoughts repeat in my head, making me feel worse and more rejected with each passing second. She left me, she just gave up and cut me out of her life without so much as a word. All that talk about loving me no matter what happens, that she'll fight to be with me and she wasn't going to give up. For what? For her to give up anyway and without so much as a fucking word? Did I mean that little to her? You know what? Fuck this. Fuck her. I hate her. I literally feel my body ache at that thought as I reject the thought. No, I don't hate her. Even now, even after everything, I don't think I'll ever hate her.\n\nBut I'm angry at her, angry that she didn't think I deserved an explanation. I can feel my eyes burning with unshed tears \"no.\" I say out loud to myself. \"No more tears Jenkins. Get up, get dressed and go to work.\"\n\nI go through the whole rigmarole of getting up, getting showered, getting dressed in my customary dress shirt and black jeans for work. Since starting university I work as a part time supervisor in a local bar during term times. I don't really need the money, but it keeps me busy and right now I'm pleased for the distraction. Once I'm dressed I pull my hair back into a loose braid and tidy the flat quickly before leaving and heading down to the tube. Usually I'd listen to music but my iPod is full of songs that remind me of the love I've lost and I don't want to be reminded of that right now.\n\nThe tube journey is short and brief and before I can think much more about the woman I'm pining for I'm making my way through the crowds of commuters to work until I'm standing in front of the heavy front doors. With an audible sigh I fish my keys out of my messenger bag and push open the doors and lock them behind me.\n\nSetting up the bar is easy enough, I've done it so many times I fly through it quickly. Following the steps, not allowing myself to think of... her. I can't even bear to think of her name. No, if this is how she wants it I'll just forget all about it, move on, and there's one way I know how. After all, they do say the best way to get over one woman is to get under another and I never had any issues with getting girls before. That's exactly what I need to get past this whole Lexie debacle, some meaningless sex. In fact lots of it, and I know just where I can start.\n\nBy the time we've opened my team for the day have arrived, Gary and Mel. Both of them are students like me, except they're in their first year where I'm in my second. Both of them work hard and both have expressed an interest in me. I've made it clear from the beginning that I wasn't interested, that I had an amazing girl back at home and she was all I could ever want. I wince inwardly at that thought, forget it Callie, she isn't coming back. I'm leaning against the back of the bar watching the news on one of the T.V's on the wall opposite. My arms crossed across my chest, I need to get this frustration out before I drive myself mad. At that thought I let my eyes leave the screen in front of me and they find Mel bent down at one of the shelves picking a glass to pour a beer for the customer she's serving. I can't deny the fact that the girls got a fabulous arse, in fact she's got a lot of features that are incredible. Curves in all the ways a girl should have, long, lithe legs, thick blonde hair and clear blue eyes. She's the opposite of Lexie in every way, yeah she's exactly what I need to get past her and move on.\n\nI wait until she's finished with the guy she's serving before making my move, I step so I'm close but not touching, but close enough that I can smell her perfume. It's sweet, sickly almost but not unpleasant. \"Hey, so I have some stuff I need to go over with you in the office at some point today. Is that ok?\" I catch her eyes as they meet mine and I quirk an eyebrow, I watch as her breath catches in her throat and she breathes a little quicker. It's not the first time she's reacted to me like this but it's the first time I'm going to do something about it.\n\n\"Er yeah sure. Is everything ok Callie?\" I flash her one of my best smiles, one I know a lot of women love and it has the desired effect, her face flushes and the speed of her breathing increases. Holy shit, this is too easy. I feel bad for a moment, but that moments short lived when my eyes dart down to her cleavage and I grin.\n\n\"Oh everything's great Mel. Come with me.\" I touch the small of her back and guide her towards the end of the bar, pausing only long enough to tell Gary we're going to be gone for a few minutes so he needs to watch the bar. I don't wait for her to catch up as I walk quickly through the bar, I know if I slow down or stop now I'm going to change my mind about this and I can't do that.\n\nWhen we finally reach the office she pauses just inside the doorway, I glance up at her and notice the slightly nervous expression she has on her face. I can't help but roll my eyes before grabbing her wrist and pulling her towards me, I pull her body flush against mine as I reach around her to close the door. \"Callie, what are you doing?\"\n\nI don't say anything, I have nothing to say so I do something I know is stupid and reckless and feels all kinds of wrong. I kiss her. There's nothing romantic in this kiss, nothing special, no magical connection. It's just a way to get her to stop talking, to stop thinking about anything but what we're about to do.\n\nOur lips move together for a while, I slide my tongue into her mouth and she reciprocates with a surprising fearlessness that's a little hot. Eventually though I pull away and look at her \"you want this don't you? You've wanted this for a while.\" She doesn't respond, she just nods. I can't fight the little grin that forms on my face when I see how breathless she is, shit. If she's like that after a kiss what's she going to be like after I've fucked her senseless? \"Good, I want you to turn around and face the door.\"\n\nI watch as she hesitates for a moment but she does as she's told and turns away from me slowly. \"Good girl, hands against the door and move your legs apart.\" She follows my instruction and I just stand and watch for a moment, this is too easy. A few words, a look and she's putty in my hands.\n\nI close the distance to her and rest one hand on her hip, my other moves up and cups her chin, tilting it so her neck is exposed to me. I plant soft kisses along the length, nipping and licking as I go. I watch her as she draws in a short sharp breath when my teeth close around her neck. \"You need to be quiet Mel, or Gary's going to hear and we wouldn't want that... would we?\" My mouth is resting against her ear as I speak, her back is flush against my front and I can feel the shiver run through her.\n\nThe hand that's on her hip snakes around the length of her jeans until I reach her button which quickly becomes unfastened. My mouth is still working its way up and down the soft skin on her neck as I let my hand move beneath the layers of denim and lace \"if you don't want this now's the time to say, because I'm going to fuck you till you come and then we're going to go back to work. Understood?\"\n\n\"Yes...\" comes her breathless reply, that's all the approval I need to continue my journey south. My fingers quickly move through the short, curly hair just above her sex. I can feel her breath come in quicker the further down my fingers travel. I'm quickly met by a gathering of moisture between her lips, a small moan escapes Mel's throat and I smile at the back of her head.\n\n\"You're going to need to be quiet\" I repeat despite a part of me that didn't care if she screamed the building down, but another part didn't want to hear her. I make quick work of her clit, trapping it underneath my thumb as I massage it with tiny circles whilst two of my fingers dive into her tight opening.\n\nMel's hips are writhing at a quick pace, I'm finding it hard to keep up with what I'm doing with the way she's thrashing around but I'll take it as a compliment. Shit, she must be really hard up. I manage to find a rhythm between my thumb and fingers and eventually I have her a panting, trembling mess \"are you close?\" I whisper in her ear.\n\n\"Mmmhmm...\" is all she replies, I can't help the shit eating grin that creeps across my features. It seems I haven't lost it despite my brief encounter with monogamy. That thought brings a creeping ache into my chest and I have to squeeze my eyes shut tight to try and quash it quickly. I don't want to think about her and what I've lost, I just want to focus on getting as much pussy as I possibly can.\n\nI'm so lost in my own thoughts that it takes a moment for me to realise Mel's coming, I don't feel her tightening or stiffening beneath me straight away. When I notice I pull my hand away from her quickly and take a step back and turn away. I don't want to look at her and be reminded of the person I am, I wanted to change and be someone better for Lexie but she doesn't want me. I was just kidding myself, I clear my throat and speak \"you'd better sort yourself out and get back downstairs, we'll be getting the lunch time rush soon.\" My arms are folded around myself as I speak at her.\n\n\"Oh, ok. Sure thing.\" I can hear her fix her clothing, my eyes are squeezed shut as I try and fight the urge to cry. I feel dirty and guilty and wrong. Just so wrong. \"Do you want to get a drink or something after work Cal? We could go back to mine and you know...\" as she trails off I feel her place a hand on my shoulder. In a flash my eyes fly open and I turn around to stare down at her with a steely gaze, a look which makes her visibly recoil from me.\n\nI shove my hands in my pockets and clear my throat \"let's get some things straight here Mel this only happened today because I wanted it to happen. I wanted to fuck you so I did. This isn't the start of some beautiful relationship, this was just me getting something out of my system. If I want it to happen again, I'll let you know and despite how sad or hurt your feelings are you'll say yes because I know you want this to happen again.\" I pause as I watch the hurt flash on her face \"go sort yourself out and go back downstairs, tell Gary to go on his break. I'll be down in a few.\"\n\nI'm a bastard, I'm well aware of that and I hate myself for making such a sweet girl look the way she did just then but I stop myself from worrying about it too much. I watch as she leaves and slams the door behind her before I sink into the office chair and hold my head in my hands. Maybe that wasn't the best thought out idea I've ever had but it helped forget Lexie for a second before I was filled with a fresh bout of hurt and anger.\n\nI refuse to let myself sink into that hole and I know what I need to do, without much more thought I pull out my mobile phone and dial the number of the one person I know can help get me out of this funk \"Hey, Bobs it's me. We're drinking tonight...\"\n\nSeptember 2014 -- Lexie\n\n\"Jesus fucking Christ, this fucking alarm!\" I curse as I walk into the house, kicking the heavy front door closed behind me I punch in the deactivation code and wait patiently for it to stop sounding. Callie insisted on getting a new security system installed in the house along with new locks after we'd come back from visiting her sister and found that someone had broken into the house. I detest this alarm with a burning passion.\n\nWalking through the home I share with my fianc\u00e9 I'm struck with a sense of loneliness as I discard my coat, shoes and briefcase. Callie's in New York working with the publishers there on a second American release for some novel or something, I wanted to go with her but as I'm no longer her assistant it didn't seem appropriate.\n\nI now work as a Junior Non-Fiction Editor at a rival publishing company, I love it. The money could be better and ideally I want to work with fiction, but it's a step in the right direction and it gives me the opportunity to make some contacts and gain some invaluable experience. But now as I move around the kitchen aimlessly I miss Callie desperately, I don't think we've spent a night apart since I moved in and this last week has been hell. The house is too big and empty without her and going to bed at night is when the longing hits me the hardest.\n\nWith a loud sigh I resign myself to making dinner for one and opening a bottle of red, I have pasta boiling and I'm sitting at the breakfast bar in the kitchen when my phone ringing pulls me away from the manuscript I'm reading. My heart literally skips a beat when I see Callie's name flash on my phone and I hit the screen quickly to answer it.\n\n\"I was just thinking about you.\" I murmur into the handset, goosebumps flash on my skin when I hear her throaty chuckle through the speaker.\n\n\"Good things only I hope?\" I can almost hear her smirk and I roll my eyes despite the grin that's firmly plastered on my face.\n\n\"Always babe. How are things over there? When will you be home?\"\n\nI listen as Callie goes on a tangent about how the yanks couldn't, and I quote, \"organise a piss up in a brewery\" before I eventually interject her rant \"baby, as much as I love listening to you vent. I miss you, can you not fix this mess from here so you can come home? I'll make it worth your while...\" I sing song to her and relish in the clench I feel in my stomach at all the delicious ways I plan on welcoming her home.\n\n\"Elaborate...\" is all she replies, I grin as I move from the kitchen and into the living room to sprawl on the sofa.\n\n\"Well, I may or may not have bought some very sexy lingerie that I know you'll love on me.\" I purr at her.\n\nI listen as she takes a deep breath \"you're fucking killing me Lex, what colour?\"\n\n\"Black, I know what black underwear does for you. Yeah they're a nice pair of lacy briefs and the bra does amazing things to my boobs. But I'd be disappointed if it stayed on for too long because there are a lot of ways I plan on showing you just how much I hate it when you go away.\"\n\n\"Are you going to keep me guessing or are you going to share?\" I know what she's fishing for and I won't be pulled into it. Phone sex isn't my cup of tea, never has been. But I can't fight the grin that pulls onto my lips and I giggle quietly.\n\n\"I'm going to keep you guessing Cal, you know I don't do phone sex.\"\n\n\"You're a fucking tease.\" She growls which makes me laugh louder.\n\n\"Yup, but I'm your tease and you love me.\" She sighs and I can just picture her running her hands through her hair.\n\n\"I do, rather a lot might I add. I need to go baby, I'll be flying home Friday morning what are the chances of you calling in sick to pick me up?\"\n\nI sigh and pull out my diary \"well I have a department meeting in the morning that I can't miss but I could take a half day? Oh that reminds me...\" I have no idea how this next sentence is going to go down with her but I can't not tell her \"mum's coming to visit this weekend. Her train comes in at lunch time on Saturday, she's asked if she can stay with us.\"\n\nCallie stays silent for a while and I can just imagine her rolling her eyes and cursing inwardly \"she knows she can stay whenever she likes, but could she not put it off until next week? I've missed you so much I want to be incredibly selfish and have you all to myself for three days of extremely hot sex.\" I laugh at her and shake my head.\n\n\"Can't babe sorry, but how about on Friday you can do whatever you want to me all night then once Mum's gone you can resume where you left off?\"\n\n\"Deal.\" She replies without any hesitation and I can only laugh at her \"laugh whilst you can Ms. Osbourne, you won't be laughing when I get back.\" I can recognise that tone of voice and all of a sudden I don't find it funny anymore, instead I can feel arousal course through my veins like wildfire as all the muscles south of my waist clench deliciously. The way this woman makes me feel, there's no comparison for it, she makes me feel alive and desired and sexy. \"I really do need to go now Lex.\" She whispers but doesn't make an effort to hang up.\n\n\"I love you Cal\" I say simply, as though it's the easiest truth in the world.\n\nI can hear her smile before she speaks and I find myself grinning like a loon \"I love you too Lexie. I'll text you my flight details.\" Another long silence, neither one of us hanging up I sigh loudly \"hanging up now.\" She says.\n\n\"Go on then...\" I murmur.\n\n\"I mean it, I'm going Lex. I love you...\" and with that she actually hangs up leaving me clutching my phone to my chest like a love sick teenager.\n\nSeptember 2014 -- Callie\n\nWalking through the arrivals lounge at Heathrow airport knowing Lexie would be waiting for me is like nothing I've felt before. This last week has been terrible, not just because I've been apart from my woman, but because I've been scared to leave her. After everything that's been happening I'm scared somethings going to happen to her. She refuses to believe that Torie is behind all of this, the car, the post cards (which I eventually had to admit too), the house, the phone calls to my sister and I. She's adamant Torie wouldn't do this. The police have been no use, they couldn't find any finger prints or evidence to prove this was a break in as the person who entered appeared to have a key and just let themselves in through the front fucking door. So I've decided to take matters into my own hands, I've hired a private investigator to look into who's behind this once and for all and I've spent an obscene amount of money turning my home into a fucking fortress to keep Lexie safe.\n\nI shake my head of these unpleasant thoughts \"just a few more minutes...\" I kept muttering to myself, repeating it like a mantra. Just one more set of doors and I'll be back with her. My feet keep moving forward as if on autopilot as I carry my luggage, dodging other travelers as they weave through the crowds. As I walk through the automatic doors my eyes are instantly darting around the room looking for her.",
        "It doesn't take me long to find her, she's stood a little way apart from others in the lounge looking glorious in skinny jeans and one of my old sweatshirts. Her thick chestnut hair pulled back into a high pony tail and a megawatt grin plastered across her face. My heart stops in my chest as I take in the sight of the woman I'm going to marry, how the fuck did I get so lucky? Every cell in my body reacts to the sight of her as my feet carry me forwards, I let my body fall trap to the pull I always feel towards Lexie. The raw magnetism and want leading the way. It feels like an age before I'm stood in front of her and pulling her into my arms and pressing my lips to hers firmly, laying claim to her. I feel her arms snake around my waist and she grips my backside firmly, when I pull away I quirk an eyebrow and I'm rewarded with a wry smile and a wink that makes me want to melt into a puddle.\n\n\"I've missed you...\" I murmur as I run my nose along the length of hers before resting my forehead against hers. I feel the expel of her breath warm against my face as she sighs in what sounds like contentment.\n\n\"Not nearly as much as I've missed you, come on let's get you home and out of these clothes. I've made stew and I imagine you want a bath?\" My heart beats double time as I look at the woman in front of me, her soft smile and gentle eyes filling me with a warmth I've only ever felt around her. She wants to take care of me, as much as I want to strip her naked and ravish her I want to let her take care of me.\n\n\"That sounds perfect.\"\n\nSitting in the passenger seat of Lexie's car I'm listening to her tell me about her morning at work, offering bits of advice where due but mostly I'm just loving the way it feels to have her close to me. To listen to her voice and watch her facial expressions, the way her smell fills the car. Home. This is home, she is home.\n\nShe pulls into the driveway next to my Range Rover and helps me with my luggage, I laugh as she struggles with the alarm and curses profusely at it. \"I fucking hate this alarm Callie.\" I'm barely over the threshold when she makes this remark and I roll my eyes.\n\n\"Lexie, we're not having this argument again. The alarm stays.\" I walk up behind her and wrap my arms around her waist, my lips press against the soft skin below her ear and I feel her relax \"now, I believe there was a promise of bath and food and lingerie?\" I feel her laughter through my embrace and kiss her hair before releasing her.\n\n\"One track mind, sit. I'll go run you a bath.\" I pat her arse as she walks off and move to the drinks cabinet to open a bottle of red before pouring myself a glass and throwing myself down on the sofa. Just as I begin getting comfortable my mobile phone begins to chime and I groan loudly. I half-heartedly contemplate ignoring it, it's probably the office and there's nothing there that won't wait until Monday. But a piece of me feels inclined to check it and I'm glad I did, it's Ben, my PI.\n\nI click answer quickly and hold it to my ear \"one moment Ben\" I poke my head out of the living room door to make sure Lexie isn't around before walking into my home office quickly and locking the door shut, I sit in the chair at the desk and continue talking \"what's up?\"\n\n\"Ms. Jenkins I have some information on the subject I thought you might want to hear.\" I roll my eyes at his formalities before picking up a pen and twirling it around my fingers.\n\n\"Go on...\" I urge impatiently, my stomach's in a knot as I wait for him to impart this information.\n\n\"Well, does the name Melissa Fletcher mean anything to you?\" I frown at the name as I try and cast my memory back.\n\n\"No, should it?\"\n\n\"Well she's the subjects half-sister. I saw the two of them meet in a bar in Soho last night, they traded envelopes and sat talking for a while. I did some background checks, found out who she was and discovered you used to work with her. Does \"the Black Bull Inn\" ring a bell?\"\n\n\"Yeah. I worked there when I was at university.\" Neither of us speak for a moment and that's when the penny finally drops \"holy shit, Mel. I know her. I need to know what was in those envelopes Ben.\"\n\n\"I know Ms. Jenkins but it's not going to be easy...\" I'm pretty sure he means to say that it's not going to be cheap.\n\nI take a calming breath and sit up straight, I try to give my voice a strong edge as I utter the next sentence \"I don't care what it costs Ben, get me those envelopes by any means necessary am I making myself clear?\"\n\n\"Crystal Ma'am.\"\n\n\"Good, call me when you have more.\" I hang up before he can reply and move back into the living room where I'm greeted by Lexie. I can feel my whole body relax when I see her standing there waiting for me, she's here with me and she's safe.\n\n\"Everything ok love?\" She asks in concern, her eyebrows are furrowed as she watches me walk back into the room. I choose not to answer her straight away, instead I walk to the table where my neglected wine glass is set down and I pick it up to drain the glass quickly.\n\n\"Everything's fine Lex.\" I answer quietly before I turn to pull her to me and capture her lips with mine. I kiss her hard and furiously, pouring evert ounce of anxiety, need, desire and love I have for this woman into the meeting of our lips. I feel her tangle her fingers into my hair and hold my face to hers as she reciprocates the kiss with an equal fervor.\n\nWhen I pull away we're both breathless and grinning at each other \"your baths ready\" she whispers to me as I run my nose along the length of hers before placing a soft kiss on its tip. \"Go get in and have a soak, dinner will be ready when you get out. Let me look after you tonight baby.\" She murmurs, my heart swells at her words as I close my eyes and take a deep breath.\n\n\"Yes boss.\" She kisses my chin and untangles herself from me and takes my hand to lead me out of the room. In the hallway she turns me to face the stairs and give my backside a good whack as a hint to get moving.\n\nThe bath is hot and filled with bubbles, sliding into the tub I relish the way the hot water hits all my tightened muscles caused by a long haul flight. The water feels hydrating and relaxing and if I wasn't so damn distracted I could probably fall asleep. Images of crazy ex-girlfriends haunt my mind as I soak, I need Lexie to see my perspective. To understand that everything that's been happening isn't just one great big fucked up coincidence. Let's reflect; I hit her ex and then suddenly hours later my car gets trashed, we run into her at a Gala, get engaged and then a month later our home gets broken into where every single photo of me is destroyed? It's all too coincidental and there are times when I feel like I'm going insane from paranoia.\n\nTry as I might to push these thoughts from my mind they're never far away, I've tried to immerse myself with wedding planning and work and well Lexie. She's the best distraction I could possibly want, but no matter what I do I'm plagued by these thoughts. \"Stop it...\" I mutter to myself, I need to let myself relax for the night. Tomorrow Lexie's Mum will be here, and that's terrifying in itself. I haven't seen her mother since I was nineteen and I was getting choked by her ham handed ex-husband.\n\nFuck it, I'll worry about that tomorrow, for now I'm going to get out of this bath. Eat dinner and ravish my girlfriend until she can't walk straight.\n\nBy the time I get out of the bath and wrap myself in a silk robe to go downstairs the house is filled with the smells of home cooking. It's something I still find myself struggling to get used to, learning to share my space with Lexie has been one of the easiest changes I've ever had to make. Getting used to having someone want to take care of me is something I haven't had since before my mother died. As much as it's a welcome change, it's one I still have to adjust too having been self-sufficient for most of my life. Learning to let go of that stubborn independence has been difficult but I'm getting there slowly.\n\nAs I walk into the kitchen I flop into one of the chairs at the table and watch as Lexie moves around effortlessly. I've always admired her easy grace in each of her movements, she catches me watching her and flashes me a winning smile and it takes everything I have not to melt into a puddle there and then. \"I trust you had a nice bath?\" She asks whilst she plates up two steaming bowls of stew and places on in front of me. It smells amazing and my stomach growls in response.\n\nI take a mouthful whilst she pours us both a glass of wine and takes the seat next to me \"yeah it was great, I always forget how dehydrating flying can be.\" I take a mouthful of wine to clear my mouth \"what time is your mother arriving tomorrow?\"\n\nI watch as her body stiffens at my question and she glances over at me sheepishly \"her train gets in after lunch time, I said I'd pick her up.\" I peak over her shoulder at the clock behind her and grin widely.\n\n\"Well my love, that gives you nineteen hours to show me just how much you missed me.\" I love watching the slow blush that creeps across her cheeks when I drop my voice to a sultry whisper, her eyes flash up and she meets my gaze. Her pupils dilate and I watch as her teeth close around her bottom lip.\n\nI drop my eyes to the food in front of me and continue eating in an attempt to remain nonchalant, however the look she's currently giving me is making me squeeze my thighs together under the table.\n\nWe continue to eat in a charged silence, our eyes meeting sporadically throughout. She'll flash me a shy smile or chew her lip all I can focus on is fighting the urge to lift from that chair and throw her across this table. Time drags on and eventually plates are clear and we stay in that same charged silence we had been all evening just watching each other, our eyes meet and it's as though we're communicating exactly what we want to happen next just through that one look.\n\nWithout a word passing between us I push my chair out from the table at the same moment Lexie moves from her seat to straddle my lap, her hands twist into my hair and I grip her hips tightly holding her to me. Our lips meet almost instantly, I kiss the woman in my lap with nothing but sheer passion. Our mouths move against each other hungrily, I feel her trace her tongue across my bottom lip, asking for entry. With a groan I open my mouth to her and meet her tongue halfway with my own, the way she feels in my arms, the way she tastes. It sets every single one of my nerve endings on fire.\n\nShe breaks away from me long enough to stare into my eyes with a quirked brow and ask \"here or the bedroom?\" Her voice is breathless and I can't help the grin that breaks out on my face.\n\n\"Bedroom. Now.\"\n\nSeptember 2014 -- Lexie.\n\nCallie practically chases me into the bedroom, somewhere between there and here my clothes come off and I'm left sprawled across the bed in the underwear I purchased a few days ago.\n\nPropping myself up on my elbows I watch her stand in front of the bed staring down at me, it's not very often I see my fianc\u00e9 speechless. This is one of those rare occasions that I relish, her mouth is opened slightly, her chest rises and falls quickly as her breaths come in quicker. I feel as breathless as she looks but I have the control at the moment it seems and I'm refusing to be quick in relinquishing it. So with all the sexy I can muster, I pout my lips at her and motion for her to come to me with the index finger on my left hand.\n\nI watch as she quickly regains composure and chews her bottom lip, her hands move to the tie on the silk robe she has on and she quickly unfastens it and drops it to the floor revealing her nakedness underneath.\n\nI draw my breath in with a hiss as my eyes roam over the naked woman before me, if my underwear was damp before, it's fucking drenched now. I'm sure she got sexier over time, she has perfect curves and a tone stomach. Her breasts are high and firm, just the perfect size for my hands, her nipples are taut and clenched tightly from the cool air in the room. \"Holy shit.\" I whisper, a predatory grin stretches over her perfect features as she crawls up the bed to part my thighs and settles her hips between them. Her hands rest on the mattress on each side of my head as she stares down at me.\n\n\"You are so beautiful...\" she murmurs, I can't help but quirk a brow and grin dopily at her. I trace my hands up her sides slowly and cup her breasts in my hands.\n\n\"I love you, and I love it when you get cutesy. But right now Cal, I need you to make me forget my own name.\" I watch as her expression changes and she looks down at me amused.\n\n\"Forget your name? I think I can do that...\" I close my eyes and wait for her lips to meet mine, but it doesn't happen. In fact they flutter open when I feel her weight shift off of the bed. \"Keep them shut Lex...\" She wants to play? My stomach tightens at the thought of whatever sexy game she's thinking up.\n\nI can hear my heart begin to race, my skin heats at the thought of what's about to happen. Butterflies in my stomach feel as though they're performing their own air show just for her, I can hear her rustling around in our closet as I lie there silently with my eyes closed. The only other sound in the room is my panting breath.\n\nIt feels as though I'm laid there for an age before I feel her weight move back on the bed, I feel something silky against my hand \"head up baby...\" I hesitate before doing as she asks, my eyes stay closed tight all the while. I feel her slip something that feels like a sleep mask over my eyes, I almost open my mouth to object but she stops that notion when she presses her lips to mine \"trust me Lex...\" I can only nod, words don't make sense to my dopamine addled brain right now.\n\nI squirm when I feel her trail her fingertips up along my arms, such a simple touch but yet it sets each and every one of my nerves on fire. No one's ever had the reaction on me that Callie has and still does. \"Lift your arms up baby\" her voice is barely above a whisper but I do as she asks and raise my arms above my head. I almost jump when I feel her tie something soft around both my wrists, I'm not frightened of being left helpless to her whim. In fact something about relenting all control to the glorious woman above me makes me wetter than I've ever been. So when I can hear her fasten the other end of whatever it is she's using to restrain me to the headboard above me and pull up until my arms are stretched out I can't hide the small moan that escapes my lips.\n\nEverything goes still and silent for a moment and I can just picture her eyes traveling over the length of my body. Her hands trail down my taut stomach and my breath catches momentarily \"do you have any idea how much I love you Alexa?\" Callie's voice is nothing more than a husky whisper as she speaks out loud breaking this static filled silence that's surrounding us.\n\nI want to answer her, I really do. But words seem to fail me so instead I just nod my head in reply. This obviously amuses the woman between my legs because I can hear her utter a dry laugh \"I want to tell you all the things I love most about you...\" Her hands move from my stomach and hook into the waist band of the panties I have on. \"I love your body, you have the most delicate curves\" her hands move from my hips causing my underwear to snap against my skin as she walks her fingers up my abdomen and over my sides \"even though your curvy in all the best ways, you have a figure to die for. Toned stomach, strong arms I like knowing I can take care of you. But when you hold me... I feel safe. It's like coming home when I'm wrapped up in your arms.\"\n\nI can feel the smile on my lips, I can't see her but I can almost picture her face, her perfect face. Callie's hands skim down my legs to my knees and she pushes them further apart \"I love your legs, when they're wrapped around my waist or parted like this. You have the sexiest legs Lexie...\" She pauses as her head moves down and she plants hot kisses up the insides of each of my thighs, each time she stops at the crook of my legs. Just where my thigh meets the line of my underwear and I groan in frustration \"patience baby, you won't be disappointed I promise.\" Her fingers begin pulling my underwear down, I lift my hips to make the job easier for her and soon enough I'm naked from the waist down.\n\n\"I love you face the best though, your lips, your cheeks bones. How perfect and expressive your eyes are. I could look at your eyes all day...\" She dips her fingers into my sex and I groan loudly \"I don't need to see your eyes though to see how turned on you are.\" Her fingers pull out and she plunges them back in a little rougher than before \"you're so fucking wet baby. I wonder if you taste as good as you feel?\" I can't say anything before I feel her mouth on me. Her tongue is lapping away voraciously, all I can do is move my hips against her mouth eagerly. I pull at my restraints hard, I've never wanted to touch her so bad but knowing I can't, It's maddening. My head is thrashing back and forth as I relish the way her mouth on me is making me feel, I can feel the familiar build up as Callie takes me to the precipice quickly, I'm close to the edge when she stops.\n\n\"You've got to be fucking kidding me?\" My voice is low and whiny as I protest, Calle says nothing. She only laughs at me, she doesn't need to say anything because I can feel something probing at my slick entrance.\n\n\"I told you it would be worth it\" is all she says before she plunges into me.\n\n\"Oh fuck...\" instinctively I wrap my legs around her waist, thrusting my hips up higher forcing the toy further into me. Callie stills for a moment, her hands are shaking on the mattress next to me. I want to ask her if she's ok, ask her to keep going but I don't get chance before she starts thrusting into me, her hips moving fast and furiously.\n\nI can hear her panting above me, my moans sound like they're coming from someone else. My voice is almost unrecognizable as she pushes me to that edge again \"come on baby...\" Callie pants at me as she thrusts into me hard and fast \"come for me.\"\n\nI clench my fists hard and grit my teeth as I crash into that wall, my orgasm rips through me like a tidal wave and Callie slows down. When she stops she falls on top of me and reaches out to unfasten whatever it is she has me tied up with. Silently I throw my arms around her neck and hold her to me, I can feel the dildo in me still and every time Callie moves it shifts inside of me causing a delicious friction. \"Oh Christ.\" I murmur.\n\nWith those two simple words I feel Callie push the mask off of my eyes and she looks down at me, her hair is stuck to her forehead in sweaty tresses, her cheeks are stained pink and her lips are parted as she gathers her breath. She's fucking perfect, and she's mine. She says nothing as she sits up and pulls me with her, my legs straddle hers as she kneels on the bed. Her hands cup my backside as I twist and wrap my legs around her hips. The way the cock is buried in me at this angle is incredible, I throw my head back and moan loudly as she pulls my hips in a rocking motion. \"Look at me Lex...\" my eyes snap open at her request and we watch each other as I rock my hips against her each time she tilts hers up.\n\n\"Fuck...\" I moan, she's going to make me come again and I'm helpless to stop it. Every time she thrusts up she's hitting the bundle of nerves inside of me, her eyes never leave mine. My finger nails dig into the soft skin on her back and I press my lips firmly against hers capturing the moan that escapes her mouth.\n\nI ride her lap for all it's worth, lifting my lips from hers to close my teeth around the soft skin on her neck. She pushes into me deeply forcing me down harder with every move, when I eventually climax it hits me hard. My entire body stiffens when the orgasm passes through me, my nails dig harder into her back and I can feel my jaw clench. My breath is coming in quickly and I can feel sweat bloom on my chest. I feel Callie unclasp my bra and toss it to the side before she lies me back flat against the mattress, I can feel her pull the strap on off and hear the soft thud as it hits the floor. When she's next to me I gather her in my arms and kiss her entire face. \"That. Was. Fantastic\" I manage to say between kisses.",
        "\"I could tell, I think you've scratched the shit out of my back.\" I can tell she's trying to scold me but her voice is too full of humour for it to stick.\n\nI look at her and quirk an eyebrow at the cocky grin she's wearing \"well, if you weren't such an over achiever...\" she quickly silences me with a long kiss that I'm all too happy to surrender to. When she pulls away I push her hair away from her face and smile across at her \"don't go away for so long next time. I hate being apart from you.\" She sighs loudly and runs her nose along the length of mine.\n\n\"You have no idea how good it is to hear you say that. When you didn't show up that day, I waited on that platform for two hours just hoping that you'd missed your train or whatever. I felt like a piece of me died...\"\n\nA fresh wave of guilt takes over the post coital glow and I feel ashamed for my past behavior all over again \"Callie, I...\" She places her fingers over my lips and smiles warmly at me.\n\n\"Let me finish Lex.\" I nod against her hand and she kisses the tip of my nose \"I drank for three solid days and over the next however many years I was without you I slept with countless women all to try and fill the void you left when you disappeared from my life. I don't like talking about what happened because I don't like to be reminded of how weak I was when I didn't have you. I'm a proud person... that goes without saying. But, nine months ago you walked back into my life and it was as if fate, God or just divine intervention sent you to me to help me become the person I was always meant to be. I thank whoever it was that sent you back into my life because I finally feel complete again.\" She runs her fingers across my jaw and her thumb brushes away the tear that's falling down my cheek \"don't cry baby.\" She murmurs before laying soft kisses over both of my cheeks.\n\n\"I will live with the guilt for the rest of my life Callie... I never wanted to hurt you but...\" I pause and worry my bottom lip with my teeth as I try and find the words to say \"my dad was getting suspicious, my mum found out where I was sneaking off to and she was covering for me and getting beatings for it from him. Do you know how hard it was for me to come home after seeing you to see fresh bruises on her face or arms? I hate myself for hurting you but I figured you'd move on and forget me eventually.\" I look down to avoid her eyes but I should've guessed she wouldn't grant me that one small mercy, her fingers curl around my chin and she forces my eyes back up to hers.\n\nHer perfect blue eyes hold my gaze and I take a moment to look at them, the shape, the colour, the crinkles in the corner that deepen when she smiles or laughs. The way they've aged in the last eight years but are still the same ones I fell in love with when I was just eighteen \"I never forgot you, not a day went by when I didn't think about you, or hurt for you. I ached over you for eight long years. But I never stopped loving you. I get why you did what you did now. There are a thousand what ifs or things I can tell you that you could've done but everything happens for a reason. All that matters is you're here with me now and in six short weeks you're going to be my wife and then nothing\" she pauses as she rests her forehead against mine \"nothing will ever force us apart again. I mean it, I've got you back and I sure as shit won't be losing you again.\"\n\nI roll on the bed so I'm laid on top of her, a small grin plays on my lips as I watch her cock an eyebrow at my bold move \"have I told you recently just how much I love you Clarissa?\" I murmur as I run my nose along the length of hers.\n\nShe looks thoughtful for a moment before shrugging beneath me \"I could stand to hear it again\" my lips run the length of her jaw to her ear where I plant kisses before whispering in it, her whole body tenses and shivers beneath me.\n\n\"I love you\" I close my lips around her earlobe and tug it gently with my teeth, Callie groans out loud and I can't help the little smile that forms. I kiss my way down her throat and across her chest towards her other ear \"I'd really like to show you just how much I love you if you think you're up for it\" I can feel her breath catch before I pull back and gaze down at her. I can see she's trying to appear nonchalant but the way her breathings coming in and the blush that's spread across her cheeks gives her away.\n\nI don't give her chance to come out with whatever sarcastic reply I'm sure was about to come out of her mouth, I cover her lips with mine and kiss her hard. I move a hand between us and let it roam down her stomach towards her sex and let it slide between her slick folds to press firmly on her swollen clit. \"You're so wet for me Callie\" I feel so brazen with her, no one's ever made me feel this confident or sexy. She doesn't reply, she only moans aloud as my fingers slip inside of her, her hips moving in time with my hands ministrations.\n\nI move my mouth away from hers and begin a slow, arduous trail down her body. Pausing briefly at each of her perfect breasts, I have one destination in mind and I'm feeling impatient to get there. It's been a long week and I'm eager to taste my woman again. My tongue trails the length of her taut stomach dipping into her navel briefly before roaming over her mound and finally I flick the tip against her clit, replacing my thumb.\n\nHer hips jerk up violently at that sensation and I grin into her folds, she tastes sweet and perfect, I cover her with my mouth as my fingers thrust in and out of her quickly. \"Jesus fucking Christ Lexie\" the way her voice curls around my name makes me lose control and I pick up the pace.\n\nWith my free hand I grip her hips tightly in an attempt to slow them down and hold her firmly to my lips, my tongue is thrashing against her clit quickly and my arm is moving so fast and so hard I can feel the burn begin to build. But I don't stop, I don't slow down. I need to feel her fall off the edge and come undone around me.\n\nIt feels like an eternity passes when I finally feel her clamp down on my fingers \"I'm coming, holy shit I'm coming for you\" she calls out loudly, just those words are enough to feel myself flood between my thighs again. I taste her orgasm on my tongue and it's like an exotic delicacy, something to be treasured and savored.\n\nHer fingers tangle in my hair and she pulls me away from her pussy and forces me up her body where her lips meet mine in a hard and passionate kiss. I'm breathless when she pushes me away and sets me with a sultry smile \"I love tasting myself on you\" I can't give her any kind of reply before she's pushing me back on the bed, she turns quickly and straddles my face to lower her pussy onto my lips again before her head dips and she begins tonguing away at mine. This sneak attack has me climbing high again and it takes no time at all before I'm flooding her mouth with my climax.\n\nJust as I come I pull her up by her hips and forcing her into a sitting position so I can pour all of my focus onto making her come again. My fingers bite into the flesh on her thighs, Callie is rocking against my tongue, riding it wildly. Her entire body freezes when her orgasm hits and she lets out a deep moan that sets my pulse racing.\n\nShe pulls off of me and I clamber into her arms panting, sweaty and spent. \"I should go away more often if this is the kind of welcome home I get\" she utters breathlessly.\n\nI laugh dryly and shake my head against her shoulder \"I thought we'd covered that I don't want you leaving me again woman\" I mutter as I prod her chest.\n\nHer lips press against my temple and I feel her pull the covers over us, we lie in a comfortable silence and I can feel my body begin to lull into a content sleep for the first time since she went away when Callie breaks it with a quiet question \"I have no issues with your mum coming to stay baby, but why is she visiting out of the blue after all this time?\"\n\nI don't have the energy to look up at her, all my limbs feel like lead but I take a deep breath and pull her tighter to me \"she wanted to come for my final dress fitting. She hasn't seen me in it yet.\"\n\n\"Shit, is that this weekend?\" I nod into her shoulder and sigh when I feel her lips press against my hair.\n\n\"Yep, which reminds me. Lana rang, she wants to be there for yours and she'll be bringing Becca to try on her flower girl dress.\"\n\n\"Excellent...\"\n\n\"Go to sleep Cal, we can worry about it in the morning.\"\n\nShe sighs in what sounds like contentment before intertwining her legs in mine and pulling me closer \"goodnight beautiful\" she murmurs sleepily. I snuggle into her arms and kiss her throat before lying there and listening to her fall into slumber. I know I'll be asleep soon, I want to fall asleep. But I want to take a moment to take in Callie's sleeping features, this woman does not sleep enough.\n\nThere are many nights I wake up in an empty bed because she's either woken up and gone to work in her study, or is sat reading in the living room. She thinks I'm unaware of her late night rituals, but I'm not. I just choose not to pry, she's a creature of habit and that's one of the many things I love about her. I trace her features with my fingertips in feather light caresses, I touch her lips, her nose, her chin, her closed eyelids. Every inch of her silk like skin and I smile at her as my heart swells for a moment.\n\nEventually sheer exhaustion wins and I settle back down on the pillow and close my eyes and surrender to slumber.\n\nWaking up in the morning I instantly know somethings missing, stretching out in the bed makes me realise that it's more of a who is missing opposed to a what is missing. Callie is up and by the smell that's seeping in through the partially opened door she's making breakfast. That's all the invitation I need to get my arse out of bed, throwing on the robe she was wearing last night I trudge down the stairs to the kitchen.\n\nCallie's at the stove frying what smells like bacon dressed in jeans and a rugby shirt, on the table there's a full pot of freshly brewed coffee and pastries. She must've been to the shops because I'm sure we didn't have the ingredients for this. I walk up behind her and wrap my arms around her waist and plant a kiss at the bottom of her neck \"morning baby\" I whisper in her ear.\n\nShe turns her face to the side and I kiss her cheek \"good morning sleepy\" she returns with a smile \"sit down, I'm making bacon sandwiches. There's coffee ready and pastries on the table.\" With a squeeze I let her go and take a seat at the kitchen table and pour myself a coffee.\n\n\"As much as I love you for making breakfast Cal, I have a dress fitting today and I don't really want to go bloated.\" I watch as she shrugs and slides the bacon from the pan into some waiting slices of bread on the counter next to the stove.\n\n\"You'll be fine\" she walks over to me with a plate in each hand and sets one in front of me before sitting across from me with the other \"besides, this is my way of saying 'I'm sorry but I need to go into work today' food is usually a good distraction when I have to give you some bad news.\" I roll my eyes at her and shake my head, I knew the woman was a workaholic but this is ridiculous.\n\n\"Callie, you've just been in America for a whole week. Is there nothing there that can't wait till Monday?\" I know I sound like a petulant child but I want her to myself.\n\nShe sets me with an exasperated look and takes a sip of the coffee in front of her \"yes and no, you're going to be at the dress place most of the afternoon and we've agreed to not see each-other's dresses until we actually get married yes?\" I nod silently and take a bite of my sandwich \"I have some emails I need to send and a few appointments to set up, we'll be closer to the office than here so I'm going in to kill time more than anything else. I won't miss dinner I promise. You'll have me all day tomorrow, so stop pouting. It's unbecoming\" she winks and begins eating her breakfast.\n\nI roll my eyes at her and pick up the paper that's on the table next to her \"you know, I've been thinking...\" I say out loud, avoiding her stare as I keep my eyes on the paper in my hands.\n\n\"That's dangerous\" I scoff at her dig and lay the paper back down on the table to set her with an unamused glare.\n\n\"Hilarious\" my eyes roll and I shake my head slightly \"are you still getting those weird phone calls and post cards?\" Her whole body stiffens and her eyes flicker up to my face and I feel as though she scrutinizing me slightly.\n\n\"I haven't had one since someone broke in here, neither's Lana. Pretty strange coincidence right?\"\n\n\"You're still convinced it's Torie aren't you?\" I watch as she pales slightly and looks away from my gaze. I can't help but sigh in frustration \"Callie, it's just not her style. There is something I need to tell you though. But\" I hold my hand up to stop her interruption \"I need you to swear you won't get mad or worried. Please?\"\n\nCallie's hands clench into fists on the table, her jaw clenches and I can feel the anxiety radiate off of her. She stays still for what feels like an age but eventually she nods curtly and I sigh \"I've been getting strange phone calls, they started when you went away. They never speak when I answer, it's just a lot of heavy breathing. Always from an unknown number so I can't even try and find out who it is.\"\n\nCallie reaches out and takes my hand in hers and squeezes it \"I'll call the phone company and get you a new number.\" She pauses for a moment before letting go of my hand and turning back to her breakfast.\n\nShe doesn't bring up my mystery calls again, in fact she studiously changes the subject completely. Talking about her trip, asking about my work, how my mum is. She speaks about everything and anything that isn't the fact that someone out there has it in for us and broke into the home we share. I admire her for her strength, but she's so infuriating sometimes. Her constant desire to shelter me from the whole truth in order to \"protect me\" is maddening.\n\nI eventually leave her alone in the kitchen to shower and get dressed, when I return she's settled in the living room with a book in her lap. I can't resist the urge to lean against the doorframe and watch her. I clear my throat and her head snaps up and she flashes me a dazzling smile, wordlessly she stretches her arm out invitingly and I sink into the sofa curled up next to her. With her arm wrapped around my waist and my head resting on her shoulder she continues reading whatever novel it is that's captured her attention.\n\nWe sit there in silence for a while, Callie's hand traces circles over my waist lazily. I feel such contentment I almost feel guilty when I tell her that we need to go and pick my mother up from the station.\n\nPiling into her car she sets off towards the station \"when was the last time you saw your mum?\"\n\n\"Christmas. She had me and Torie there.\" I glance over almost nervously at Callie, she doesn't like talking about my ex \"before you say anything, mum couldn't stand her either.\"\n\n\"I wasn't going to say anything.\" I roll my eyes at her and shake my head, she's such an arse sometimes.\n\nWaiting at the station my stomach does flips in nervous anticipation, mum hasn't seen me since I got back with Callie. She was pleased for us when I explained how we'd bumped into each other after so many years and decided to have another go at things. When I told her we were getting married, well she said she was happy for us but I can just tell she has her doubts. She was always fond of Callie when we first met but worries we're rushing things, I've told her in the politest way possible to mind her damn business and just let me be happy.\n\nIt takes me no time at all to spot her as she moves through the crowd, I'm pleased I got most of my features from my mother and not my dad. The only thing that holds any resemblance to the man that I inherited half my DNA from is the colour of my eyes. \"Alexa!\" I hear her call out, with a quick side glance at my fianc\u00e9 I separate from her and move forward to greet my mother.\n\n\"Hi Mum\" as soon as she's in front of me her arms are thrown around me and she pulls me to her in a firm embrace. The overwhelming sense of nostalgia hits me like a freight train, from the familiar warmth and comfort I always found in her hugs to the perfume she wore. It felt good to see her again. \"You look well, how was the train?\" I ask as I pull away and regard her carefully, her rich brown eyes search my face as I ask her the question and a small smile plays on her lips.\n\n\"Tsk, the train was fine Lex. Where is she?\" Her eyes dart around the platform looking for Callie and I can't resist the urge to roll my eyes.\n\n\"Over here, come on.\" Linking our arms together I lead her back to where I'd left Callie standing \"Mum, please be nice to her. I think she's freaking out enough about seeing you after so long without you making it any worse.\" My mum nudges me slightly with her hip and squeezes tighter on my arm.\n\nBefore she can come out with what would no doubt be a hilarious response to my angst we're standing in front of a very sheepish looking Callie, she smiles widely at us but it doesn't reach her eyes as she holds her hand out to my mother in a very stiff, formal greeting \"Ms. Osbourne, it's so nice to see you again. You're looking well.\" It's not very often I get the pleasure of seeing Callie's stoic fa\u00e7ade slip ever so slightly, and as much as I would usually tease her discomfort this one time I feel for her.\n\nI watch my mother take her hand and squeeze gently \"please Callie, you know to call me Alice. It's been a while and you're so grown up now.\" Callie's cheeks flush a little and she looks at the floor for a moment.\n\n\"Thank you, shall we get going?\"\n\nSeptember 2014 -- Callie\n\nLexie is sprawled across my naked chest snoring gently as I lay back and stare up at the ceiling through the darkness. My fingers are trailing lazy patterns across her back as I contemplate the events of the last few months, meeting Lexie again and practically picking up where we left off is more than I could ever have hoped.\n\nI'd be able to enjoy this feeling of contentment if I could just shift the feeling that somethings off somewhere, I find myself constantly looking over my should whenever I'm alone. I have pretty good instincts and right now each and every one of those instincts is telling me to take Lexie and run somewhere. I love her for her optimism and her strength, she's stronger than I ever could be but, this constant state of fear I find myself in is eating me up from the inside. I'd sooner die than see anything happen to her, and I'd kill anyone who tried to hurt her with my bare hands.\n\nLying here, in this still silence, watching her sleep. I can't help but feel a little envious at her ability to forget about all the unpleasant shit that seems to be going on around us and focus on the more important, more pleasant things. Most of all I'm jealous of her ability to fall asleep on fucking request. With a small laugh and a shake of my head I plant a kiss on her temple and carefully extricate myself from her embrace. As I sit on the edge of the bed I can hear her stir slightly \"where are you going baby?\"\n\n\"Shush\" I reach behind me and stroke her hair behind her ears \"I can't settle, I'll be back soon. Go back to sleep.\" She doesn't need much convincing to roll over and pull the covers up to her chin, I stay still until I can hear her breathing become deep and even again and then I move through the bedroom to the dresser to pull out a pair of pyjamas.\n\nI creep through the house quietly, months of sneaking around in an attempt to not wake Lexie up when I'm having a bad bout of insomnia has taught me to keep quiet. In the kitchen I go through the process of making a cup of tea, strong, black and sweet before carrying it through to the living room where I choose to sit in the corner of the sofa curled up under a blanket with a copy of 'A Tale of Two Cities.' I'm barely able to break through the first three chapters before I'm disturbed by the living room door opening.",
        "My head whips round to see who the intruder is and I feel a little flustered when I see Alice walk in, her eyes go wide almost as though she's as shocked to see me awake as I am to see her up. \"I didn't wake you did I?\" I ask in a small voice that I barely recognise to be my own.\n\n\"No, not at all. I just couldn't sleep.\" She hovers in the doorway as she speaks, and I get the impression that she's waiting for me to invite her in. I gesture to the sofa silently and she makes her way to sit at the other end. \"What are you reading?\" She nods to the book in my lap and I hold it up for her to inspect the cover \"I remember reading that at school.\"\n\nI can't help the grin that forms on my lips as I toss the book onto the coffee table across from the sofa \"it's strange, you'd think that with all the crap I have to read that falls on my desk day in day out I'd get sick of reading. But here I am, after two in the morning and I'm sat reading voluntarily.\" Alice laughs quietly at my admission and an awkward silence settles over us for a moment, spreading out into what feels like an eternity before she speaks again\n\n\"Callie, I just want to say how sorry I am about what happened the last time we saw each other...\" I wave her apology away with my hand and shake my head.\n\n\"I don't want to hear it Alice. It was a long time ago, you couldn't control it, you couldn't of done anything to stop it. I'm just glad you and Lex got out when you did.\" I crease my eyebrows and look down at the frayed edge of the blanket I have set across my lap before I speak again \"I'm sorry I couldn't of done more for you both, I wanted to help. I knew what was happening and I did nothing...\"\n\nWe sit in a heavy silence for a moment, I watch as she looks at me thoughtfully and opens her mouth to say something, only to snap it shut a second later. I can't count how often she does this before I roll my eyes and let out an exasperated sigh \"oh for heaven's sake Alice, just say what you want to say already.\"\n\n\"I just...\" she pauses and fidgets slightly before meeting my eyes \"I just want to be sure you and Alexa know what you're getting yourselves into.\" She shakes her head when I begin to interrupt her, stopping me in my tracks \"I have no doubts that you love each other, I see it every time you look at her, and I know you'll take care of her. But I need you to be sure that you're both ready for what comes with marriage.\"\n\nI look at her sternly for a moment, my heart thumping heavily in my chest as I try and gather the words to say \"did Lexie ever tell you anything about me, about what I was like when we first met?\" I ask, Alice shakes her head to confirm a negative response and I smile wryly at her before running my hand through my hair and shift on the sofa to tuck my legs underneath me. \"Ok, I'll start from the beginning. As a teenager I was... how do I word this?\" I scratch my chin thoughtfully and reach out for my mug of tepid tea and take a sip \"a worldly young lady. I knew I was gay from a young age, I always had a natural charm that drew people to me and as soon as I learnt how to use that to my advantage I never went short of bed partners.\" I watch as this revelation settles in before continuing \"I didn't know what I was looking for when I went from girl to girl, fling to fling. Picking women up and dropping them the minute I saw someone else I wanted. This went on until I met your daughter. The way we met, Jesus. It's so clich\u00e9 I find it hard to believe myself.\"\n\n\"How did you meet?\"\n\nI smile shyly at her, feeling a warm blush spread across my cheeks as I think back to that night \"I was playing a gig one night, earning some extra cash to bring back to uni with me and as stupid as it sounds I literally saw her across a crowded room and it was like time stood still. I stalked her outside during the break and we spoke briefly, I convinced her to let me take her out on a date and that was all she wrote really. I fell in love with her there and then. Mainly because she took none of my bullshit. But, once I got to know her and the more time I spent with her it was like this part of me, this void if you will, suddenly didn't feel empty anymore? For the first time ever I was complete and I knew she was the one, my one. The person I was born to share my life with. Shit, I sound like the idiot protagonist of one of those stupid Rom-Coms she watches but it's true.\" I take another mouthful of tea and watch Alice's face change slightly as she takes in what I've said.\n\n\"Why did you break up?\" That, I wasn't expecting. My eyes widen and I grit my teeth in frustration, why would Lexie not tell her mum about that?\n\n\"She didn't tell you?\"\n\n\"Tell me what?\"\n\nI scoff slightly and shift uncomfortably in my seat \"she just stopped talking to me, it was as if she never existed. Turns out she came home from visiting me one weekend and saw you with fresh bruises, the guilt of hiding this just got to her I think. She's a good person your daughter. The day she walked out of my life... I can't even describe how broke I was. I went back to my old ways, drank my way through university. Got my job at the firm and worked my way up into the position I'm in now. But luckily, nine months ago your daughter stumbled into my office looking for a job and my life changed again. Alice, I more than understand what marriage means. I'm not marrying your daughter because I'm scared she'll walk out again, I know she won't. I know she'll never forgive herself completely for what happened and as stupid as it sounds I know now that it wasn't our time then. This is our time, now. I'm marrying your daughter because she's the person I want to share my future with, the person I want to wake up next to every day until I have no breath left in body. I want to share my best moments and my worst nightmares with her, she's the person that encourages me to follow my dreams and I'm going to try my best to be all that and more for her... does that make sense?\"\n\nIt feels like an eternity passes before she talks again, her eyes just watch me carefully, almost as though she expects me to run away or grow an extra head. \"My ex-husband is an awful man, he'd never forgive Lexie for marrying a woman. Me, I'm just glad she's found someone who loves her. I should've made her fight harder back then, she was an adult.\" I reach out and take her hand in mine and squeeze it tightly.\n\n\"There's a whole host of shoulda, woulda, couldas to be said about what happened back then. I don't want to dwell on the past, not when we have such a beautiful future on the horizon together.\" This seems to appease her because she reaches out across the sofa and wraps her arms awkwardly around my neck and places a soft kiss on my cheek.\n\nWe don't talk about anything deep or heavy after that, she asks about my family and offers condolences when I explain both my parents are dead. Eventually she excuses herself and goes back up to the guest room and leaves me alone for a while, sitting on the sofa I take stock of the room around me. Thinking about how it looks the same as it always has but for the first time ever, really taking in the changes that have taken place since Lexie moved in. This place never felt like a home until I started sharing it with her, all the broken picture frames were replaced and were now the new home of all the precious memories we have hanging on the walls.\n\nI sit alone for a little while longer before heading back up to bed and climbing back in with Lex, she hasn't moved from where I left her so I spoon in behind her and wrap my arms around her to hold her close. She stirs slightly to push herself back against me but doesn't wake, placing a soft kiss below her ear I nuzzle into her smooth skin and close my eyes. Listening to her steady, even breathing. Letting the comfort and her warmth lull me into sleep.\n\nNovember 2014 - Callie\n\nThe next few weeks pass in a blur of hectic work schedules, various wedding planning appointments and at least two arguments followed by incredible make up sex. Four days before the wedding my sister and her family arrive at my house to set up home until after the ceremony and to put it politely, it's complete and utter chaos.\n\nLexie is already on annual leave, we each have three weeks off for the wedding and our honeymoon where we're going on an all-inclusive cruise around the Mediterranean. Sitting in my office, I'm working through my last day before I'm officially off work mode and it's been a busy day. I have three manuscripts to sign off on, various contracts to read over and have faxed out to new authors, an editor's meeting, conference calls... the list is endless and it's safe to say that I'm feeling the pressure. My scalp tingles and I feel the skin at the back of my neck bristle in frustration as I glance at the clock on my desk and realise that despite it being almost five o'clock I'm nowhere near finished.\n\nLexie calls somewhere around six to ask where I am, when I tell her I'm still at the office that leads to another argument. \"You said you'd be done on time. Why aren't you finished yet?\" her constant barrage of questions and demands made me lose my shit a little and I shouted, she shouted and after a few minutes of us yelling at each other one of us hung up. By the time I'm happy everything is done and I'm in a good place to leave it's almost nine.\n\nWalking through the office car park I get an overwhelming sense that I'm being followed, call it woman's intuition, a keen sense of hearing or a sixth sense. I just knew something bad was about to happen. Goosebumps formed on my skin as I looked around the empty lot, I thought I could see something shuffle in the shadows to my right. I stop in my tracks to peer in the direction of the movement and almost jump out of my skin when a common rat scurries out and run off in the opposite direction. Pausing for a moment to run my fingers through my hair and allow myself a short laugh at my skittishness I continue towards my car.\n\nI'm around ten yards away from my vehicle when I'm struck from behind, the force of the blow causes me to topple to the ground and fall to my knees. I don't get chance to look back at my attacker when I'm struck again to my side, a boot clad foot kicking me directly in my ribs knocks the wind out of me and I lurch forward towards the concrete.\n\n\"Not so fucking clever now are you bitch?\" A woman sneers at me before striking out at me again. A laugh, different from the voice that sounds comes out of the darkness and I see a mess of blonde hair before everything goes dark.\n\nNovember 2014 -- Lexie\n\nWhere the fuck is she? I'm sat at the kitchen table alone and fuming as I glare at the wall clock in front of me. Despising it's existence with every second that passes, it's almost midnight and there's still no sign of Callie. I've tried calling her and it goes straight to voicemail, I'm confident she's stayed out to spite me. She promised me she'd be home on time, I know that woman's lives for her job but Christ, we're meant to be getting married on Saturday and there's a thousand things left to do and she decides now is the perfect time to do a disappearing act.\n\n\"Still no sign?\" Lana asks from the doorway of the kitchen, I turn my glare from the clock to her and shake my head silently \"I'm sure there's a reason for her to be working so late...\" she tries to reason but I shoot her a look that stops her in her tracks.\n\n\"She promised she'd be home on time...\" I say weakly before draining my whisky glass \"I know her workload, I know how busy it can get but... she promised?\" I sound so pathetic but at this point I don't care. Lana moves into the kitchen and slouches into the chair next to me and takes my hand in one of hers before gesturing to my glass, I nod and she quickly moves to get herself a glass and pours us both a drink.\n\nWe sit in silence for a few seconds as we drink, the slow burn of the liquid in my throat is a small comfort as I seethe quietly \"you know, when she was younger she had shitty time keeping too. It's nice to see old habits die hard.\" I take no comfort in her words, instead I scowl down at the counter and pick at my fingernails. \"She's different you know\" her words catch my attention and I look up at her questioningly.\n\n\"How so?\" Lana reaches out for the crumpled cigarette packet on the table and pulls one out and rests it between her lips, I hand her my lighter and she sparks up and takes a long drag.\n\n\"Well,\" she starts as she exhales a plume of smoke which circles the room \"she's happy. She actually calls me because she wants to see how I'm doing instead of calling because she feels she has too.\" I watch as she takes another drag and exhales it out of her nose before speaking again \"the last time I saw her this... alive was when she first met you. She really does love you Lex, so... don't be too mad at her.\"\n\n\"I'll try not to. It's just\" I take a moment to take a steady breath, unfallen tears threatening to fall from the corners of my eyes \"it's stupid, but sometimes I feel Callie puts her job before anything else.\" Lana smiles weakly at me and shrugs her shoulders.\n\n\"I know how it seems, but Clarissa has always had her priorities in the wrong order. But, when it comes to family and those she loves, she always puts them first.\" Her words are almost soothing, a small part of my anger is distinguished as I think about what she's said. It's true Callie can be unreliable and she works too hard but whenever I've needed her she's been there.\n\nA small smile plays on my lips \"fine, but it doesn't mean I'm letting her off lightly.\" Lana laughs loudly and winks at me.\n\n\"Oh god no. Making up is always half the fun.\" I open my mouth to reply but before I can speak the landline ringing stops me. My stomach drops, I look at the offending phone startled for a moment before exchanging a nervous glance with Lana. Nothing good ever comes from a phone ringing this late at night.\n\nI almost don't want to answer, but my instincts tell me better \"hello?\"\n\n\"Am I speaking to Clarissa Jenkins next of kin?\" my mouth goes dry and my stomach roils with nervous trepidation.\n\n\"I'm her partner, can I ask who's calling?\" I look at Lana who's mouthing 'who is it?' at me. I hold my finger up to stop her and turn away so I'm facing the wall.\n\n\"My name is Nurse Celia, I'm at the Royal London Hospital. You're partner has been in an accident. I suggest you get here as soon as possible.\" My blood turns to ice in my veins as he words make circles in my head, my first thought is to call her out and tell her to stop being so bloody stupid. A part of me wants to vomit, another part wants to collapse on the ground and curl in a ball. But the part that reacts is a part of me I don't think I've ever seen before, out of nowhere a sense of calm surrounds me and I begin reacting.\n\n\"What do you mean she's been in an accident? What's wrong with her? Is she ok?\" The questions tumble out of me quickly, I feel Lana standing beside me but I pay her no attention. The nurse on the other end of the phone sighs deeply, as though she's already grown tired of this conversation.\n\n\"She was found unconscious, she's suffered massive trauma and is in surgery as we speak. The doctor will be able to tell you more when you get here.\"\n\nI say no more to the nurse I simply end the call and move from the room, Lana is hot on my heels throwing a million questions at me \"what the fuck Lexie? What's happened?\" I turn on my heel abruptly and blink away hot tears.\n\n\"She's in surgery, I don't know what happened. Get your stuff together, we need to leave. Now.\" I don't hear anything else she says, everything that happened after that instance is a blur because the next cognitive memory I have is sitting in a plastic chair in a hospital waiting room being spoken at by a doctor.\n\n\"Clarissa has suffered extensive trauma, we're working on repairing her lung and reducing a bleed on her brain. At the moment her vitals are stable, we'll have to keep her sedated for the next 48 hours whilst we monitor her brain activity but we're optimistic.\" Lana's hands are tightly gripped around mine as I stare blankly at a wall and nod.\n\n\"What happened doctor? Do you know?\" Her voice sounds a million miles away, the calm that surrounded me earlier has gone. Right now all I feel is a deep dread filling me, consuming my entire being. My Callie, my beautiful, perfect Callie. In surgery? With a brain bleed? What the fuck is going on?\n\n\"Well, all we know is she was found unconscious by a car park attendant. It's clear she was attacked, the attendant notified the police at the scene and they'll be by to take statements and give you more information then. I'm really sorry I can't tell you anything more.\"\n\n\"We're meant to be getting married in three days...\" that's all I can say, I look up at the doctor who's looking at me with pity. I think Lana say's thank you to him or something else because he leaves moments later. I rest my head in my hands, and that's when the sobs come. Small at first but when I feel Lana's arm drape around my shoulder I stop holding back.\n\n\"My Callie...\"\n\nNovember 2014 -- Callie\n\nI feel like I'm floating, my limbs feel disengaged from body as I lie floating in this grey area between being awake and being asleep. I will my eyes to open, to take in my surroundings but my lids won't budge. I can hear voices and noises around me. Hushed whispers and the quiet whirring of machines, somethings not quite right with this picture but I'm powerless to do anything about it.\n\n\"Why isn't she waking up?\" Lexie? Lexie's here. I can feel her hand on mine, her voice sounds pained. Almost as though she's been crying, memories of our last conversation hit me full force and I want so bad to wake up and hold her. Tell her I'm sorry for being such an arse, tell her I love her and she'll always come before anything else.\n\n\"She will soon Lex, be patient.\" Lana? My baby sister sounds wise beyond her years as she reassures my fianc\u00e9.\n\nI fight with my body to wake up, if I could just squeeze the hand that's holding mine to show her that I'm fighting whatever this is, I'm fighting to stay with her. To show her that everything will be ok.\n\n\"I'll kill them. She told me so many times she thought Torie was behind everything. But I didn't believe her, I didn't want to believe her.\" I can hear Lexie's voice break as she begins crying and I yearn to be able to comfort her, but my body is against me. \"How could I be so fucking stupid?\" Oh baby, don't think that. I can feel myself slip away from whatever warped version of consciousness I'm in and darkness surrounds me once again.\n\nLexie stands at the end of the aisle, a vision in white, beaming down at me. Flower petals fall around my feet as I glide down in her direction, she's so beautiful in a fitted white gown. The way she's looking at me can only be seen as pure adoration as I move closer to her. I'm standing in front of her, her glorious green eyes look deep into mine as I reach out with a trembling hand and brush my knuckles down her cheek \"my Lexie...\" I hear myself murmur. \n\nI feel a hand tight in the back of my hair pulling me back, pulling me away from the woman standing in front of me. I reach out for Lexie but she's gone. Replaced by a faceless figure, the laugh that surrounds me makes my skin crawl. \n\nIn the distance I can hear a blood curdling scream, I'm running away from it. Away from the figure behind me with no face, I need to get away. I need to be safe. \n\nI don't know how but I'm falling, spiraling down into a vast, deep hole of darkness. I see my Mum's face in the distance smiling at me, she holds out a hand and I can hear her voice clearer than I have in years \"not yet Rissy.\" \n\n\"Ma?\" I call out, she's fading away again and I'm still falling, tumbling into nothing. \n\nWhen my eyes open I don't recognise my surroundings and panic sets in, I want to move but I'm aware of a dull throb in my chest, limbs and head and it's debilitating. I turn my head to my right and it's worth every second of discomfort I experience. Lexie has her head resting on her arms propped on the bed, her hair is fanned out around her as she sleeps and for a moment, just one moment I watch her sleep.",
        "My throat is dry and scratchy, I try to speak out and wake her but I can't talk through the thickness there. I run my tongue across my lips in a vain attempt to moisten them and take a quick glance down to my left to see the IV line in the back of my hand, the dull ache in my chest makes me think about heavy shoes kicking me repeatedly. The throbbing in my head bring back memories of sneers \"not so fucking clever now are you bitch.\" \n\nSlowly, I lift a hand to her hair and let my fingers run through her silky tendrils. My fingers touch her scalp and she leans into my caress, and for just a moment she stays peaceful. That is until her eyes snap open and she sits up abruptly, blinking at me dumbly.\n\n\"You're awake!\"\n\nI smile at her and nod gently, I cough and immediately regret it. \"I'll fetch a doctor.\" I grab her hand to stop her sudden movements, shaking my head I point to my throat \"do you need a drink?\" I try my best to grin at her but I think it came off a little feeble. She lifts my hand to her mouth and skates her lips across the cool skin \"I'll be back baby.\" Again she tries to leave but I hold her tighter and point to my lips, I'm hit by her luscious smell as she leans across and places a soft, tender kiss to my bruised lips before resting her forehead against mine briefly. \"I thought I'd lost you...\" her voice is hoarse and I can feel a hot tear fall on my cheek. I want to tell her I'm going nowhere, but I can't seem to make any sound so instead I just shake my head and kiss the tip of her nose.\n\nLexie leaves soon after composing herself and quickly returns with the doctor, nurse and water. I satisfy my thirst and go through the motions of being checked over, having vitals taken, bloods drawn. It's all very tedious, but they eventually leave having given me the all clear and mentioning that all being well I should be home by the end of the week.\n\nAnd that's when it hits me, because I was in the wrong place at the wrong time I'd royally fucked up. When Lexie and I are alone I look at her apologetically \"I'm sorry...\" the first words I say to her is the apology she should've had from me days ago \"I fucked up...\" I can feel tears burning a trail down my cheek as I bury my head in my hands and sob.\n\nI'm vaguely aware of the bed shifting as Lexie sits down next to me and gathers me in her arms. She doesn't speak, she just holds me fast to her as I sob and mutter apology after apology. My mind flits to the two dress bags in our closet, the venue we'd chosen, the music and the flowers we'd spent days discussing. \"Why are you crying love?\" her voice is soft as she cradles my head against her breast, her fingers tracing delicate patterns over my tearstained cheeks.\n\n\"I missed our wedding. I was late home. I was hot headed and stubborn and I hid things from you. I'm sorry for everything.\" I barely recognise my own voice as the words spill from my lips, I tell Lexie about the private investigator, about how I couldn't get rid of this nagging feeling in my gut that something was going on. She doesn't interrupt me, she just listens and smooths my hair down, planting soft kisses against my temple sporadically.\n\nOnly when I'd finished did she speak again \"do you want to know how I see it Cal?\" I nod and she tips my face up so I'm looking at her \"I've spent the last three days waiting for you to wake up, and in that time I've gone through every single of my worst nightmares. I don't care if I marry you today, tomorrow, next week or in ten years from now. A wedding is just a day, I want a life with you. And for a moment I thought I'd had that taken away from me. Stop apologizing.\"\n\n\"I love you...\" is all I say before we fall into a content silence, comforted by the weight of Lexie next to me in the bed. The familiar warmth of her body next to mine, the soothing rhythm of her fingers in my hair makes me doze off.\n\nI was kept in hospital for a further five days, subjected to regular checks and scans and confined to bedrest. By the time I left I felt like I was losing my mind, Lexie barely left my side. I eventually had to send her home to shower and change on the promise that I'd call if they took me anywhere or if I needed anything, my sister brought the children by one day to see me. They came in full of life, with homemade cards in their hands and a million and one questions.\n\nThe police came by to take my statement and deliver an update regarding what had happened. Turns out Torie and her sister Mel had waited for me to leave work that evening, they'd gotten wind that Lexie and I were due to get married and had chosen that day to act. They were well and truly kicking the shit out of me when something caused them to flee the scene, thankfully they didn't take note of the CCTV in the parking garage at work so the whole thing was caught on camera making prosecution a lot easier.\n\nI figured once I was home things would get a little easier, how wrong I was. Lexie all but confined me to bed to rest and would hear no arguments about how I was fine. As much as I love that woman, I sure as shit hate being coddled and it was only a matter of time before I lost my temper and snapped.\n\nI had gotten out of bed to run a bath, I'd finally gone the allotted amount of days for keeping my stitches dry and the only thought keeping me going was that of a long hot soak in the tub. I figured Lexie had either gone out to run errands or was downstairs doing whatever she'd been keeping herself busy with whilst I'd been under bed arrest. What I wasn't expecting was her reaction when she walked in the door and saw me walking out of our bathroom \"what are you doing out of bed?\" was her first question.\n\nBy this point I'd had enough of doing as I was told so I rolled my eyes at her and chose to ignore her question as I moved to the ottoman to take out one of my favourite bath towels. Bending down made me wince slightly and as I clutched my side I heard her tut and mutter something under her breath \"what was that?\" I moved a little too quickly when I spun round to glare at her.\n\nWith her hands on her hips she glared right back, her mouth in a tight unattractive line as she watched me \"I said, why do you always have to be so fucking stubborn?\"\n\n\"Why do you always have to be so fucking annoying?\" In hindsight probably wasn't the most intelligent thing to say, but I was pissed off and tired and all I wanted was a fucking bath.\n\n\"So because I don't want to see you hurt I'm annoying? You know what Callie... fuck you.\" As she turned on her heel and stormed out the room I abandoned my plans of a bath to follow her.\n\n\"Don't walk away from me Alexa, this conversation isn't over.\"\n\nShe walks away quickly and storms down the stairs at a pace I'm sure she knows is too quick for me but I follow anyway to find her pacing back and forth in the living room. \"What's your problem?\" I ask as I run my fingers through my hair in frustration.\n\nShe stops and eyes me carefully \"you, you're so fucking stubborn. Why won't you let me help you?\"\n\n\"Lex, all you've done for the last week or whatever is take care of me. I'm sick and tired of being coddled. I love you and I'm thankful for what you've done, but... I've taken care of myself for a long time...\" I try to take a softer tone and it obviously hasn't worked because the expression on her usually kind face is cold and stoic. \"I just wanted a bath babe...\" I take a step forward and take her fingers in mine, lacing them together. \"You've done enough...\" I squeeze her fingers with mine and risk a small smile when I feel her reciprocate.\n\nHer eyes dart up to meet mine and that warmth, the kindness, the way she looks at me then makes my heart flutter. \"I want to take care of you.\"\n\n\"You have forever to do that...\" I promise, stepping closer to her my free hand cups her cheek and I bring her lips to mine. Sealing the promise, showing her that no matter what happens there will always be me, there will always be an us.\n\nWhen we part she leans her forehead against mine for a fleeting moment before pulling back and quirking one of her perfect brows \"go get your bath, I'll make you some breakfast.\"\n\nI smile dopily at her and leave one last lingering kiss on her lips. Before I leave the room I pause in the doorway and look back at her \"Lexie...\"\n\n\"Yeah?\"\n\n\"I'm still going to marry you, you know.\"\n\nThe smile she gives me makes me melt on the spot and leaves me breathless \"Good, you'd better.\"\n\nEpilogue - 1\n\n \n\nJanuary 2016 -- Lexie\n\nWalking in the door of the new home Callie and I share I toss my keys onto the hallway cabinet and pick up the mail \"babe?\" I call out loudly as I shrug out of my coat and kick off my shoes.\n\n\"In here Lex.\" I hear her reply from the living room. Walking in I stop and take in the scene before me, my very pregnant wife sprawled on the sofa with her e-reader in her lap smiling goofily as I walk through the door. I never thought I'd witness the day Callie not only brought up having children, but volunteered herself to carry our first of what is hopefully many.\n\nI quickly take a seat next to her and lift her feet into my lap, leaning over I brush her lips softly with mine and rest my hand on her stomach \"how are my girls today?\"\n\nShe groans and rolls her eyes at the question \"if she hasn't been performing her own Olympic standard gymnastic routine, she's been tap dancing on my bladder. I cannot wait to give her her eviction notice.\"\n\nI chuckle at her response and rub her stomach feeling the small flutter of my daughter pressing against my hand \"have you been a monkey for your mama baby girl?\" I cooed before dipping my head and placing a kiss on her swollen stomach. When I look back up I meet the adoring gaze of my wife \"how are you feeling?\"\n\n\"Fat. I've been thinking...\"\n\n\"That's a dangerous pass time if I've ever heard one...\" that remark gets me a sharp nudge in the ribs and I can't help the loud laugh that comes out when I see her give me a look that tells me how much she tolerates me sometimes \"go on...\"\n\n\"Well, if you're quite finished being a dick, I'd like to discuss potential names for our darling daughter.\" I nod and encourage her to go on as I take one of her feet in my hands and begin rubbing it. Callie's eyes leave my face and she looks down at her stomach rubs lazy circles over it \"I can't seem to get the name Lily out of my head. Lily Maria... Maria after my mother? If that's ok...\"\n\nI don't have the words to express the love I have for her in that moment \"Lily Maria Jenkins... I love it babe.\" Callie just beams at me beaming at her. \"We're still pretty hopeless aren't we?\"\n\nCallie just laughs at me and nods \"completely pathetic.\"\n\nMarch 2016 -- Callie\n\n\"Get this fucking thing out of me!\" I scream as another contraction wracks through my body, every nerve ending my body feels as though it's on fire. Everything south of my waist clenches as my muscles tighten and expand, I would literally give my left leg away if I thought it would stop this pain.\n\n\"It's nearly over baby, you're doing so well.\" My eyes snap up to my wife's face, and I glare at her. My frosty look doesn't stop her from pushing away the sweaty hair from my forehead as I grit my teeth and push my way through the pain. Lexie grips my hand and I squeeze on tight, relishing when she winces slightly. That's it bitch, if I'm hurting you are too!\n\n\"One more big push Mrs. Jenkins, baby's almost with us.\" My breath comes in in short sharp pants as I ride the ebbing tide of my contractions. I savor the momentary rest bite before I feel as though I'm being ripped in two. I scream myself hoarse, it's as though I'm being repeatedly beaten with a white hot fire poker. I'm convinced there's no end to this pain, this awful feeling of being torn apart from the inside. Between the pain and the sheer physical and mental exhaustion I'm on the edge of giving up.\n\nI feel a strange sensation between my legs and the pain has gone, and I'm replaced by an overwhelming sense of emptiness. A loud wail fills the room and I crane my neck to the end of the bed and focus on the area between my sheet draped thighs as they're still propped up and open by stirrups. If you're familiar with the act of child birth, you're probably well aware of how dignified it is!\n\nThe sound around me almost sounds as though its coming from underwater. My whole focus is on the pink swaddled bundle in the nurses arm as she says something to me and hands me my baby. The sense of love and pride that fills me in the instance she hands me that child is like nothing I ever imagined possible. As I gaze down at my daughter, all pink and wrinkly as she screams her tiny but perfect little lungs down, I realise that I will love no one the way I love this sweet little girl. I'm overwhelmed by the surge of protectiveness that runs through me as I smile down at my baby. I'm distracted by a hand on my arm and I look up at my perfect wife as she stares down at us with tear filled eyes brimming with love.\n\nWe exchange no words, we don't need to, everything we want to say and everything we're feeling is communicated through that one look we share. She leans down and kisses my lips, my nose, my forehead before her delicate fingers run over the dark hair of our baby. \"Our baby...\" She murmurs. I simply nod and press my lips to her head before looking back up at Lexie.\n\n\"Our Lily... I love you so much Lex...\" Her lips press into my sweaty hair again.\n\n\"I love you...\" Her voice is thick with raw emotion \"I love you, and I love our daughter.\"\n\nEpilogue -- 3 \n\n \n\nFebruary 2017 -- Lexie\n\n\"I'm telling you Callie, she isn't about to start walking.\" I call to my wife over my shoulder as I leave the front room. Lily is one next month and Callie is obsessing over how close our baby is to taking her first steps, I however am not convinced. Even though she hasn't got my DNA, she certainly shares my lazy streak.\n\n\"Babe, you said that about her first word...\" her voice gets louder as she gets closer walking into the kitchen behind me with Lily on her hip \"and we both know how wrong you were about that, isn't that right Lilypad. Mummy needs to learn that Mama's never wrong.\" She coo's as she tickles Lily's belly causing an eruption of girlish giggles that never fails to make my heart flutter.\n\nI fuss at the kitchen sink for a moment before turning back to her and quirking an eyebrow \"she's not even one yet, stop forcing her to grow up so fast. Before you know it she'll be bringing home boyfriends and/or girlfriends and you'll be begging for the day that we were back changing her nappy and watching her take her first steps, just enjoy it darling.\" I dry my hands on the kitchen towel and toss it onto the work surface, stepping towards Callie she opens her free arm out and I gladly step into it. Lily is the image of Cal, auburn hair, blue eyes and is going to be clever like her Mama too if Cal's got anything to do with it.\n\nI kiss my wife, and pull back laughing when Lily starts clapping her hand and gurgling loudly at us. We've learnt to interpret that this is her telling us off for not giving her our undivided attention twenty four hours in the day. I feign shock and purse my lips \"sorry baby, did I forget you too?\" I close the distance and pepper her chubby little face in kisses, when I lean back I look up at Cal and back at our daughter \"Mama's turn to kiss Lily now\" Callie just grins at me goofily and blows a raspberry on her cheek causing another fit of giggles.\n\nFebruary 2017 -- Callie\n\n\"Well she's down for the night\" I sigh before falling onto the sofa next to Lexie, I place the baby monitor that's in my hand on the end table and rest my head on the love of my life's shoulder. \"I love her, but she's exhausting.\"\n\nThis causes Lexie to giggle before she places a kiss on my temple \"it was your idea to procreate dear\" this makes me laugh and I nod in agreement \"I want another one though\" my head snaps up and I look at her pointedly. I'm a little shocked, we hadn't talked about having more than one and I didn't know how to bring it up with her without her looking at me like I'd lost the plot.\n\nWe sit in silence looking at one another, our eyes meet and there's a sudden flash of desire in hers that I react to instantly. Before she can stop me I lunge at her and knock her backwards onto the sofa, propping myself above her with my hands. She snakes her arms over my shoulders and her legs instantly wrap themselves around my waist \"so you want another baby?\" I ask softly, running my nose up and down the length of hers.\n\nMy hair falls down in wavy tresses around our faces and I watch as she nods slowly \"I want lots of babies...\" she murmurs against my lips.\n\n\"Define lots love?\" I press my lips to hers a little firmer and break off to wait for her answer.\n\n\"Oh... at least three more...\" My eyes widen and I think my jaw falls a little slack, clearly the sight amused my wife because she starts laughing beneath me \"I'm kidding! One more... I don't want Lily to be an only child like me and I want to carry this time.\" I just look down at the woman below me in equal parts love, awe and adoration as I listen to her speak.\n\n\"Ok, but before we begin reproducing again why don't we make the most of our child sleeping and have a little grown up time?\" I ask as I wiggle my eyebrows suggestively at her and arch my hips to rub against her in a delicious way.\n\nShe kisses me hungrily and tangles her fingers in my hair \"it's hard to resist when you put it like that, fucking romantic you...\" my laughter is cut short when she pulls my lips back to hers hard.\n\nChristmas 2017 -- Lana\n\nSeeing my sister with her family is something I never thought I'd see. She's grown into a person she never thought she'd become and in the process has become and outstanding mother and wife. I never had my doubts that if she ever found that one person that would make her want to settle down, she'd throw herself into it whole heartedly. Naturally I had my reservations about Alexa given the way she just disappeared and broke my sisters heart so many years ago. But she has more than proven me wrong over the last few years, she dotes on Callie and their daughter and I can tell she'll dote on their new addition when she drops in a few months.\n\n\"Venite a sedere sorella\" Callie calls out to me and gestures to a seat at the table next to her and my husband, who's sat grinning dopily at me.\n\n\"What are you saying Aunty Callie?\" Becca says earning me a disapproving stare from my sister.\n\n\"I'm telling your mummy to sit down baby, you want to learn how to say it?\" I've been trying to teach Rebecca how to speak Italian but it's harder than I ever thought it would be. Robert places his hand on my thigh and gives it a warm squeeze, instilling a sense of calming reassurance before chaos reigns over the table. Between Callie winding all three children up and Lexie telling Callie off for being worse than the kids, it's by far one of my favourite Christmas's.\n\nNew year 2017/18 -- Callie\n\n\"Come to bed Lex, Lily's fine. You however look exhausted.\" I pull the covers back for my beautiful, pregnant wife before taking off my glasses and putting my book on the bedside table. We'd just gotten home after spending Christmas with my sister and her family it but as much as I loved every second of it, it was fucking exhausting.\n\nLexie looks almost dead on her feet, waddling around in one of my old oversized t-shirts. She leans over to put her moisturizer away and I take note that she's wearing no underwear, a familiar desire spikes in my groin and I have to look away for a moment. \"That's a very safe way of saying I look like shit\" she points out and I roll my eyes at her.\n\nWhen she climbs into bed I scoop her in up in my arms and kiss her entire face before taking her ear lobe in between my teeth and tugging gently on it. I enjoy the way she draws her breath in through her teeth and I allow myself a little grin before leaning in and pressing my mouth back against her ear \"you my darling are the most beautiful woman in the world, in fact...\" I trail off as my fingers trace up and down the inside of her thighs \"I might just have to show you how beautiful you are...\" I kiss the length of her jaw and the corner of her mouth before claiming her lips with mine in a hungry kiss.",
        "\"Even though I'm big and fat and extremely pregnant?\" I push away from her and maneuver myself so I'm hovering above her, my legs straddling one of her thighs I push my knee against her sex and she moans quietly.\n\n\"Listen to me Mrs. Jenkins, apart from myself obviously,\" I bite my lip to stop the laughter threatening to escape when she raises an eyebrow questioningly at me and continue speaking \"you're the best looking pregnant woman I've ever met and I'm glad I get the pleasure to do this to you\" I trail my lips down the smooth column of her neck to the crook where it meets her shoulder and I bite down gently, she moans and a shiver runs through my body at the sound. \"I also get to do this...\" I take one of her swollen breasts in my hand and squeeze softly, pushing my knee harder against her, her hips rock against it and I smile down at her thoroughly pleased with myself.\n\n\"Callie?\"\n\n\"Yes my love...\"\n\n\"Will you stop looking so fucking pleased with yourself and touch me?\" Her cheeks are flushed, her hair fans out across the pillows and I don't think she's ever looked more beautiful.\n\n\"It'd be my pleasure baby...\" together we slip into our own corner of perfection, things won't always be easy and things won't always be smooth sailing. But I know that as long as we have each other, I know we'll make it."
    ],
    "authorname": "Han_cg",
    "tags": [
        "lesbian romance",
        "lesbian reunion",
        "reunited lovers",
        "reunited lesbian lovers",
        "two women kissing",
        "women in love",
        "two women in love",
        "lesbian romantic",
        "drama",
        "lesbian love story"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/an-unexpected-reunion-ch-04"
}