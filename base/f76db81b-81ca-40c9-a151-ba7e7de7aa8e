{
    "title": "Little Pink and The Wolf",
    "pages": [
        "\"Where ya off to Red?\" Pink asked her half sister.\n\n\"I'm off to Grandma's house with a basket of goodies for her,\" Red replied and smiled her beauty pageant winning smile, striking that perfect pose for the cameras.\n\nKiss ass bitch, \"Oh how nice of you.\" Pink replied dripping with false admiration.\n\n\"Yes, it is isn't it?\" Red got a wistful look on her face. \"I just hope the big bad wolf doesn't catch me and eat me up.\"\n\nPink perked up. Eat her up? Okay. . .there was some interesting possibilities here. \"Big bad wolf you say?\"\n\n\"Oh yes. . .the big bad wolf that eats yummy little girls like me up.\" Red took on a scared look and shuddered. \"And keeps us from getting to Grandma's house.\"\n\nFuckin A \"Cool,\" Pink smiled.\n\n\"Cool?\" Red asked, giving her a stern look.\n\n\"Chill bitch.\" Oh shit that was out loud. \"I mean. . .I imagine it will be chilly out there. . .switch your clothes so you don't catch cold.\"\n\nRed thought for a second and nodded. \"Good advice. I'll wear my red riding hood.\" Oh how sweet. . .puke. . . \"And that will keep me warm.\"\n\nPink smiled and nodded and tried not to vomit as Red dressed and then skipped out the door. She always loved watching her leave, and was always tempted to bar the door to keep her from coming back but that would just not be polite.\n\nNow, this big bad wolf sounded sorta interesting. Had potential for sure. She hated all the Prince Charming types around. She needed someone with a little more of an edge to him, a little danger. She grabbed her pink riding hood and ran out the door after Red. Hey . . . the goody goody bitch wasn't getting to have all the fun.\n\nThey walked along...or. . .more honestly. . .Pink walked along and Red skipped along like a helmet wearing retard. Pink hated to be seen in public with her but she tolerated it just for the thought of that big bad wolf. Her mouth almost watered.\n\nThey entered the woods and Red grew a little less poofy. Pink noticed with a certain amount of joy that Red was a little scared here. To make sure to savor it longer, she began to tell Red horror stories of people being hacked to pieces by hockey mask wearing madmen. Red was nearly peeing her little perfect panties by the time Pink was done. She felt better about life then.\n\nThey didn't really have far to go; Grandma's house was just through the woods. Red of course always made it sound like she was hiking to Tibet but, it was just a couple miles really. Pink was beginning to think it was gonna be a bust and she was going to end up having to spend the day with Red and her grandma being the happy dysfunctional family they were when he appeared out of nowhere. Big and lean and hard and dangerous, just like she imagined. The big bad wolf jumped from the bushes in front of them.\n\n\"Hey ladies. . .where you running off to in such a hurry?\" He said, his voice deep and rough. He straightened the collar on his leather jacket and brushed the leaves from his tight blue jeans.\n\n\"We. . .we . . . we're going to Grandma's house you big bad wolf!\" Red called out defiantly.\n\n\"Big bad? What's that all about?\" He asked trying to look innocent but his leering grin gave him away.\n\n\"And you can't stop us!\" Red called and grabbed Pink by the arm, pulling her to run.\n\n\"Chill the fuck out Red. Jesus. . .he just wanted to say hi . . . what's the harm in that?\" Pink pulled her arm free of Red's death grip.\n\n\"But. . .but . . . but Pink. . .he's the big bad wolf!\"\n\n\"Mmmmmhmmmm he sure is.\"\n\n\"Pink! The big bad wolf!\" Red screamed at her.\n\nThen an idea came to Pink's mind, it was too good not to give it a shot. \"Run Red!\" she screamed and threw herself on the big bad wolf, catching him off guard and knocking him down. \"Run . . hurry. . .get to Grandma's!\"\n\nRed was confused but then grabbed the basket of goodies and took off running. \"I'll send help. . .I promise!\" she screamed back at Pink. \"Policemen!\"\n\nPolice? Hmmmm. \"And a fireman too!\" she called.\n\n\"Yes, yes, a fireman too!\" Red yelled as she sprinted out of sight.\n\nPink watched her go and then turned to look at this big bad wolf she was laying on. He was smiling at her and enjoying the feeling of her body on his. \"Hmmmmm. . . .somehow I don't think you and miss goody two shoes are thinking the same thing here.\" He grinned at her.\n\nPink rolled off him and lay next to him on the ground. \"Well,. . . .\" She smiled. \"Mmmmm Big Daddy Wolf. . . I heard you could eat a girl all up in one big gobble.\" She winked. He grinned back at her.\n\n\"You heard that shit too huh?\"\n\n\"Mmmmhmmm.\" She nodded, her golden curls bouncing around her face. \"And I was sorta wondering. . .\"\n\nHe leaned in closer and pushed her pink cape back, revealing her lil pink top that showed off her belly button ring. \"What were you wondering Boo?\"\n\nShe grinned. \"I was wondering if you might wanna eat me all up?\" She bit her lip and flashed him her best innocent girlie look.\n\nHe leaned over and kissed her in response, taking her hair in his hands and pulling her into a hard, passionate kiss. She felt her knees go weak as his tongue slid into her mouth and he seemed about to eat her up just in one kiss.\n\nHe shifted and his weight pushed her onto her back and he slid over on top of her. His hand sliding up her pretty pink top and grabbing her sweet tit and squeezing it hard. His fingers finding her nipple and playing with it. Pink moaned and reached down to pull her top all the way up for him to grab the other boob too.\n\nAs she pulled up her top, he pushed up to get a good look at her and smiled. She put a finger to her lips for a sweet innocent \"Who me?\" sort of look and he laughed. Ya, this one was far from innocent.\n\nHe buried his face into her tits, licking and sucking her nipples as his hands pushed her skirt over her hips. She wasn't wearing any panties so her shaved pussy was totally bare, the wetness already apparent on the lips. His fingers played with her clit as he bit her nipples and she groaned and ran her fingers through his hair in response.\n\nHe growled and pulled up quickly. She was surprised with his speed and grace. Before she knew what was happening, he had picked her up and spun her over and put her on her hands and knees. His big hand slapped her bar ass cheek hard enough to make her cry out.\n\n\"Daddy likes wolfie style fucking.\" His hand slapped her ass again and the other grabbed her hair and pulled hard.\n\nOh God yes, she cried out in her mind as the sting from the spanking rippled through her. He unzipped his pants and took out his cock, nice and big and thick. He pressed the head against her pussy and she pushed back onto him, her lips spreading wide and sucking him in.\n\nHe filled her so full she felt like she would split in two but she took him all in and felt his balls slap against her clit. He pulled hard on her hair and she arched her back, his other hand slapping her ass again.\n\nThen he started to fuck her. She was screaming immediately as his cock slammed in and out of her tight little pussy so fast and hard, she couldn't even breath. He was like an engine, never missing a beat. He fucked her hard and fast and slapped her ass in-between. She was unable to slump down cause he had her hair, she had to stay upright and take it full force.\n\nHer whole body shook with the impact of each thrust, her tits bouncing around from the force. She still was only able to get tiny gasps of breath, his cock felt so good. She was moaning and shaking already.\n\nShe felt herself have several small climaxes . . . more cum making her even wetter and easier to slam fuck for him. But there was a big one building inside her. It was like a tickle just below the skin and slowly growing and growing. She was begging him to fuck her now, pleading with him not to stop. Each time she did, he spanked her ass harder, her sweet white cheeks now bright red.\n\nShe felt her pussy clenching around his cock hard and knew she was starting to cum. She begged him to cum with her, to fill her pussy up. He growled and fell on her, pushing her to the ground and biting her neck. She screamed as the pain brought her orgasm to a fevered explosion inside her.\n\nHe was fucking down into her and biting her, a deep dangerous growl that slowly became a howl as he exploded into her. His cock pumped load after load of hot cum in her pussy, as he kept fucking her, it oozed out of her onto the ground. Still he kept fucking her. Her orgasm was raging out of control. She was frozen, every muscle flexed and tight, unable to move.\n\nThen she felt air rushing back into her lungs and she began to wail as fire ripped through her body and she came harder then she ever had. She felt her entire body flex, spasm, jump, twitch . . . she was shaking out of control and crying. The intensity even greater as he kept fucking her through it. Finally she screamed and went limp and he lay down on her at last, his weight feeling so comforting pressing on her.\n\nShe was sobbing in pure release and he was kissing her. His muscular body covering her as she lay there in the dirt. She pressed up against him and shuddered, twisting her face around to kiss him.\n\nThat's when she heard the policeman and the fireman coming to save her. The big bad wolf started cussing up a storm and jumped up, putting his cock away and zipping up his pants. He looked over his shoulder and could just make them out running down the road from Grandma's house.\n\n\"That fuckin bitch sent the cops!\" he yelled.\n\n\"Mmmm and a fireman.\" Pink responded and winked.\n\n\"Girlie girl. . .you are one wild trip.\" He said and leaned down and kissed her. In a flash he was gone, loping off into the deep woods were wolves are safe.\n\nPink rolled over, and lay there, her skirt still over her hips, cum still dripping from her pussy. She started to giggle and then stopped herself and yelled in her best poor little girl in trouble voice. \"Over here . . . over here! help me . . . help me!\"\n\n\nFuck living happily ever after she thought . . . she wants to live happy now.\n\nThe End"
    ],
    "authorname": "StoneAngel",
    "tags": [
        "red screamed",
        "wolf red",
        "bad wolf",
        "grandma house",
        "half sister",
        "big bad",
        "pink top",
        "rolled lay",
        "hand slapped",
        "riding hood"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/little-pink-and-the-wolf"
}