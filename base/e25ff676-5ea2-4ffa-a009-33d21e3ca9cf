{
    "title": "Second-Hand Barbie",
    "pages": [
        "Again, I would like to thank blackrandl1958 for the invitation to participate in , and her help with this story. I hope you enjoy.\n\nIn real life, calling a woman a bimbo is NEVER a compliment. The term is used for an attractive but stupid woman. A bimbo is great for dating, but most men don't want one for a wife.\n\nApparently, I am not most men. I married one... and I couldn't be happier.\n\nShe is actually my second wife. I tried conventional for my first wife, finding a beautiful, smart woman who was also sexy. That worked for seven years, until I found out she had been cheating on me for a year. A little over a year later, I was a divorced guy just looking for a new start...\n\nI watched her unnoticed from my spot at the end of the bar.\n\nThis was the first time I had ever been in that particular establishment, and I was slowly getting the lay of the land, so to speak, figuring out who were the regulars, who was there to drink and who was there to party.\n\nMost of the time she was sitting at a table with five other women, but she would occasionally leave the safety of the table to dance with one of the young men milling around the bar, laughing and drinking. She caught my eye because she looked out of place. She looked to be about 15 years older than the others at her table, and her partners on the dance floor as well. They appeared to be in their middle to late 20s; she looked like she was about 40. She looked good for 40, very good actually, but she was still noticeably older than her acquaintances, despite the fact that she was dressed in the same style as her younger friends.\n\nHer little black dress was mid-thigh length, perhaps a touch or two short for someone of her age, but she had the legs to back it up. It was also cut perhaps a bit too low in the front for someone of her age, showing off a generous amount of what looked like sizable boobs. Her long blonde hair was done up in a high ponytail and hung down to the middle of her back.\n\nUpon further inspection, she looked like someone's older sister trying to blend in with the crowd. She was just barely pulling it off thanks to her killer body, but I've seen much worse results.\n\nI watched as some dark-haired youngster approached her at the table, obviously asking her to dance. A slow song was playing, and I saw the youngster pull the women close to him and gently run his hands up and down her sides, occasionally detouring to rub her ass or the side of a breast.\n\nShe didn't try to stop his roving hands and the smile never left her face. It appeared like this had happened before, she expected it and was used to it. As I looked around, I noticed the same thing was happening with her younger friends. Maybe this was a common occurrence these days. I have been out of the game for 10 years.\n\nReflexively, I glanced at my left hand, for the thousandth time seeing the barren spot on my ring finger, the spot previously occupied by a wedding ring. The spot had been bare for the past year, my divorce becoming official six months previously. Since then, I had been making the rounds of various bars in the city, having a few drinks and listening to those around me living their lives. I wasn't trawling for female companionship, it was way to soon for that, but it was a way for me to avoid the emptiness of my small apartment.\n\nGod, I missed having the life of a married man with two young kids. I loved coming home from work every day to the hustle and bustle of my household: my wife, Traci, preparing dinner and my children, Stevie, 5, and Wanda, 3, charging toward me at the door. I hated being a part-time dad, seeing my kids every other weekend.\n\nI looked up from my shot of Angel's Envy rye to see the youngster grab a full handful of the blonde's ass as the song ended. He whispered something in her ear. I saw her gently shake her head, although the smile never left her face. I wondered how many times she nodded yes to the same question from other men. I noticed she wasn't wearing a wedding ring either, so I figured she was free to nod yes whenever she wanted.\n\nNodding yes, or at least saying so, was the reason I was sitting in this bar in the first place. My then-wife apparently had no problem saying yes, repeatedly, to her lover of more than a year. I didn't find out for almost a year, then it took me some time to figure out what I needed to do. I didn't want to become a part-time dad to my munchkins, but I knew that staying in my marriage would probably be worse for my kids because I wouldn't be able to hold back on my anger for what would be more than 10 years until the youngest was out of the house. I knew that being the responsible parent would hurt me beyond belief, but you make sacrifices for the ones you love. My wife apparently didn't understand that concept.\n\nI never questioned Traci for a minute... until I questioned her. We dated for almost two years and had been married for seven and I never had a clue we weren't in it for the long haul. When I finally had my suspicions, it didn't take long to confirm. She really wasn't trying to hide her affair, apparently figuring that I couldn't keep up with her superior intelligence.\n\nI'm not sure why the older blonde with the younger women intrigued me. Yes, she was a very good-looking woman, beautiful even, but she gave off the vibe of being a \"veteran\" bimbo, not something you see every day. Think about it. The two things you never see: baby pigeons and older bimbos.\n\nI stayed around long enough to see the blonde and her younger friends leave all together. That pleased me, although I wasn't sure why.\n\nAlthough I was mixing it up among the city's many bars, I went back to the same place the very next week, honestly hoping to see the older blonde and her younger friends. An hour after taking the same seat I did the week previous, the same six women came in and grabbed a table. \"Blondie\" had her long blonde hair in a couple of high ponytails and was again dressed on the edge of too young for her age, wearing a tight red velour dress, maybe just barely reaching mid-thigh, and unbuttoned enough that her frilly red pushup bra and her large boobs were peeking into view on a regular basis. I know my eyes almost popped out of my head when I saw that look, and I could see that I was not the only one who noticed. The dance floor was going to be slick with drool.\n\nI'm not much of a dancer, but I yearned to be closer, so after a while I worked up the guts to ask her to dance. I'm pretty sure I embarrassed myself on the fast dance as I had a tough time keeping my eyes off of her bouncing tits, but the second dance was a slow one and I got to pull her luxuriant body into mine. Unlike the young guys last week, I kept my hands where they belonged. Blame my mother for bringing me up with manners.\n\nI invited her back to sit with me at the bar and she agreed. I was drinking Eagle Rare bourbon and she was drinking a mojito. I did my very best to look at her vibrant blue eyes as much as possible, although she did catch me peeking at her twin peaks several times. She sort of blushed but continued smiling. I guessed she was used to being ogled, especially when she was dressed to impressed as she was.\n\nI found out her name was Jessica Arnold, and while she looked 35 and I had guessed 40, she was actually 45, making her 13 years my senior. She was the trophy wife of a rich business executive until he died four years ago, leaving most of his estate to his two children from his first marriage. After being a kept woman for 18 years, her art degree wasn't very useful and she wound up working in the office of one of the nation's biggest sanitary chemicals companies, along with her friends at the table.\n\nFrom talking with her, I don't think she realized her personal style was both sexy and perhaps a little young for her. I got the feeling that her late husband enjoyed showing her off. After all, why have a trophy wife if you can't show her off.\n\nI also got the impression that while she seemed to be an incredibly nice person, she wasn't necessarily the brightest candle in the pack. That actually worked for me, because I had seen enough supposed brains in the time I was married.\n\nTraci and I both had college educations and good jobs. I always figured we were probably a good match in terms of intelligence, but when Traci got two advanced degrees online, I started to detect an air of superiority coming from her. Although I actually made more money than she did as an IT director for a defense contractor, she practically threw her doctorate into any room before she entered, expecting everyone to ooh and ahh over Dr. Traci Elliott. That probably worked in her world, as she served as a professor of philosophy at the local college, but it didn't carry an extra ounce in my world, which was based on the ability to do, not theorize.\n\nI loved my wife, but a doctorate in philosophy? All it meant for me was that I had to do more around the house and with the children while she was earning her master's and doctorate.\n\nForgive me if I seem a little dubious about her degrees. Looking back on it, I can see that her realizing her goal was also the beginning of our marriage unraveling. In her mind, that doctor title made her more important--pronouncing both \"Ts\"--than anyone in the room who didn't have that title.\n\nJessica and I talked for about an hour before she figured she should go back to her friends' table, at least for a while. She was back there for about five minutes when a young blond guy asked her to dance. She hesitated but finally said yes and went to dance. I'll admit to suddenly feeling jealous, even though neither of us had made any kind of commitment to each other.\n\nShe never came back to my corner of the bar because she spent the rest of the night on the dance floor with various partners. I wasn't alone in spending the rest of my night watching her shake what God gave her on the dance floor. I was nonplussed when she allowed dance partners to rub various parts of her body on the slow songs.\n\nI showed up at the same place the next week, knowing this time I wasn't going to let Jessica get away from me. The six women showed up about 30 minutes after I did, and as usual, Jessica was dressed in what I was now calling in my mind \"sexy questionable.\" Her dark blue dress was even an inch or so shorter than last week's dress, and I figured that her panties would be visible to a lot of the club almost any time she moved. The top was unbuttoned to the middle of her big wonderful boobs.\n\nJessica and her friends were at a table for maybe five minutes before I walked over, said hello and started to take her to the dance floor.\n\n\"Wait a second, buster!\" chirped one of her friends, a tall brunette called Phyllis. \"What the hell? Are the rest of us just chopped liver? You've never asked any of the rest of us to dance yet!\"\n\nI pulled up short. I never really thought about any of the younger women wanting to dance with me. I was flattered, but I was still concerned with Jessica getting away from me. She giggled, and when I looked at her, she kind of nodded toward Phyllis. I took the hint, and in my best courtly manner I asked Phyllis if she would like to dance.\n\n\"Mmm. Well, okay,\" she said in a faux exasperated tone.\n\nIt's not that Phyllis wasn't a beauty in her own right. She had curves galore and legs all the way up to the plumbing. We danced a fast song and then a slow one. I didn't start out holding her too close on the slow song, but she pushed her way right up against my body, getting an immediate rise out of my dick. She stayed right there throughout the dance, giving me an evil grin.\n\n\"You do realize that Jess is almost old enough to be your mom, right?\" Phyllis questioned. \"We all love her to death. She's had kind of a rough go these last few years. Try not to be a jerk with her, okay?\"\n\nI nodded as I brought her back to the table, where Jessica was waiting for me. When we got out on the dance floor, she pushed her body hard against me, obviously feeling the erection that I had gotten with Phyllis. She gave me a smile and off we went.\n\nWe danced several songs, then I invited her back to my corner. My hard-on was obvious through my pants as we sat and talked for a few minutes before I leaned in and gave her a sensuous kiss on her lips. One led to two and two led to many more. I finally asked her if she would like to finish the evening at my apartment, and she agreed.\n\nTo make a long story short, her naked body was every bit as good as I imagined it would be. Her big boobs had very little sag for her age, and felt both soft as well as firm, if you can imagine that. She was aggressive, yet demure, as a lover, and her oral skills were incomparable. I always thought Traci was a good sex partner. This woman recalibrated my scale and gave new meaning to the term \"great.\"\n\nI've always been proud of my skill with my mouth and tongue, but I didn't get a chance to demonstrate that skill to her until our second go-round of the night. I made her shake, shimmy, scream, wiggle, wriggle and finally orgasm, multiple times. I was pretty sure she even levitated off the bed once before I finally climbed up her body and sunk my hard-as-brick dick inside of her pussy. She screamed out one final orgasm before I filled a second condom.\n\n\"Wow. Somebody actually let you get away? Unbelievable,\" she rasped.\n\nWe kissed deeply several times and I gently licked various spots on her body, like the insides of both collarbones, her neck and her belly button, drawing squeals and aftershocks. I wrapped myself around her and snuggled her securely. Maybe a minute later I heard her even breathing and knew she was asleep. Feeling pretty smug with myself, I drifted off as well.\n\nAs it was a Friday night, I didn't set an alarm, and I didn't wake until I felt Jessica stir. My heart fluttered when I opened my eyes and was face-to-face with gorgeous bright blue eyes. It had been some time since I had a reaction like that upon waking.\n\nTo be more exact, it had been about two years since I had that kind of reaction upon waking. Traci was my wife then, and this was before I realized that things were already going south.\n\nTraci and I had been up late making love. Things had been a little off between us for the previous two weeks. Looking back now, the lovemaking session was probably to ease my mind so I wouldn't realize we had a problem. Anyway, we went at it twice and she came at least a dozen times. I always considered cuddling and snuggling as part of the process, and we fell asleep in each other's arms. We woke up the next morning still entwined, and my heart leaped upon seeing my beautiful wife. We made love one more time before we got up that morning. If I'd only known...\n\nI fixed brunch. I was wearing a pair of gym shorts. I gave her a long-sleeve dress shirt of mine, which she put on over her white bikini panties. She only buttoned the bottom two buttons on the shirt. The shirt thing was kind of like a fantasy of mine. Damn, she looked hot.\n\nAfter breakfast, I took her back to her apartment. I figured she would put her dress back on before we left, but she just slipped on her heels, gathered her things in her arms and walked out with me wearing the half-open shirt and her panties. Fuck, that was even hotter. We kissed deeply at her door. I had already lined up a date for the next Friday night.\n\nI took Jess to a good Italian restaurant. We talked a lot and laughed a lot. On the way back to my apartment, we stopped off at her place so she could grab some clothes, but not too many. We spent Saturday at an art museum and I spent as much time looking at her braless tits and exposed legs as I did looking at the art. She was very knowledgeable about a lot of the art and spent a lot of time telling me little facts about what we were viewing, even though she knew I was only half listening. She knew my brain was having trouble keeping up when much of my blood was in my engorged dick. She made sure to brush her hand up against my erection several times at the museum, giggling each time she did it. It was a great giggle.\n\nWe started to date on a regular basis. We never discussed being exclusive, though, which I realized when I stopped by the usual place she and her friends went to on Friday nights to dance. We hadn't made plans for that particular night, and I didn't have a problem with her being out with her friends. I did have a problem when her dance partners took liberties with their hands and she didn't stop them. I guess I considered her mine, and since I don't willingly share my toys, I was more than a little upset with others pawing at her. After her third partner put his hands on her, I stepped in and asked her if I could break in. She didn't know I was in the bar, but she smiled and agreed, although her partner was not exactly happy with me. We finished out the song, then I took her outside to my car.\n\n\"Maybe I haven't made my intentions clear enough, so I'll just say it, Jess,\" I began. \"I want us to be exclusive. Just you and me. That means all the time. Nobody gets to put their hands on you, even when you're dancing. Can you go with that?\"\n\nShe blushed and dropped her eyes.\n\n\"I'm sorry for that, Jake,\" she said quietly. \"My late husband never minded it and I don't mind it. It's been happening to me my whole life.\"\n\n\"Can't happen anymore, Jess. I don't share and I'm a one-woman man.\"\n\nShe pushed her hair back over her shoulder with her right hand; her signature move when she was thinking. She lit me up with her smile.\n\n******\n\nDr. Tillman Kincaid was perhaps the most respected ophthalmologist in the tri-state area. I didn't realize Traci was having eye issues beyond the ordinary. She had worn contact lenses for years, but Kincaid was well beyond her nearsightedness, and she had been seeing the same optometrist for years. She never mentioned having any eye problems, but there it was, on her iPhone calendar for the next Thursday at 1 PM.\n\nI knew I was invading Traci's privacy and also violating her trust when I took her phone from her purse while she showered one evening. She had breezed in at 8, after supposedly attending a late department meeting and immediately hit the shower, not evening stopping to kiss me or check in on the sleeping kids. This was the second or third time in recent weeks that she practically ran to the shower without first stopping to acknowledge me or the children, and together with the other little things I had been noticing, I figured it was time to get proactive.\n\nShe had rarely let her phone out of her sight in the previous few months, but in this case, she had left it zipped securely inside her purse, probably feeling like it was safe. The first thing that surprised me was that she had it password protected; the last time I had used it there was no password. Being an IT geek, it didn't take me long to figure out her password, and when I opened the phone her calendar came up right away. Unfortunately, I heard the shower stop running, so I had to put the phone back before I could check her texts.\n\nTraci never said a word to me about her eye appointment, so I called over to Dr. Roy Pomerantz, our family optometrist, and asked if Traci had any eye problems beyond the ordinary. He hesitated a moment, then answered, probably not worrying about the privacy issue because there was no issue, he assured me. He started to say something, then hesitated again, and finally just asked me if I needed anything else. I said thanks and ended the call.\n\nI took the afternoon off from work, and at noon I was sitting in the back of the parking lot of Traci's building at the college. Thirty minutes later, she came bopping out of the building, got into her car and started to drive. I didn't have a hard time following her because after the first two turns I knew she was driving home. She pulled into the garage and left the door up as I parked down the block. Sure enough, a brand new Cadillac Escalade pulled into my empty spot five minutes later and the door on my marriage went down.",
        "Shit!\n\n******\n\nJessica and I were at my favorite Mexican restaurant one Saturday night when a couple of my former neighbors were seated a few tables away. I waved at Don and Bonnie Mast and didn't give it another thought at first. Then I noticed the two of them looking over occasionally before I figured it out. The Masts knew that Traci and I were divorced, but I'm sure that seeing me with another woman was disturbing, especially a pretty one wearing a black leather bustier and a very short black leather skirt. I had gotten used to Jessica dressing like a hot 25-year-old, but this was the first time anybody from my previous life had ever seen me with her. I suddenly got very self-conscious being seen with an underdressed 45-year-old... bimbo.\n\nI was incredibly uncomfortable, and I know Jessica picked up on it. Several times she turned to the table where my old neighbors sat. She got very quiet and the two of us ate mostly in silence. She didn't want dessert and we finished eating quickly. To be polite, we stopped at the Masts' table and said hello. I introduced Jessica as my girlfriend and felt really self-conscious when Bonnie eyed Jess up and down, practically looking up her short skirt.\n\nJessica and I drove towards my apartment in silence for about five minutes, then she whispered to me that I should take her home to her apartment as she was ready to call it a night. I took the hint and dropped her in front of her apartment, knowing I wasn't being invited up.\n\nShe didn't even wait for me to go to her side of the car and open the door as I always did; she just popped the door open and started to get out. She stopped, looked back at me and shook her head sadly.\n\n\"I thought you were a better man than that, Jake. In fact, up until tonight I thought you were the best man I had ever met,\" she said almost in a whisper. \"I know I'm not the smartest woman you've ever dated. I know I'm not nearly as smart as your ex-wife. I've heard the whispers that I'm nothing but a bimbo. But I'm not pretending to be anything I'm not. I know I'm sexy and I like dressing sexy. You seemed to be very embarrassed to be seen with me tonight, around your old neighbors. I've been disrespected a lot in my lifetime, and after a while you get kind of used to it, but up until tonight you've never done that to me.\"\n\nShe shut the door and walked into her apartment. I sat stunned.\n\nI didn't sleep worth a shit that night. I knew Jessica was right. I was an asshole.\n\nThe question I had to come to grips with was whether I could admit to myself that I was in love with a bimbo. If I truly was, than how could I be embarrassed about that? Love doesn't ask you to take an IQ test.\n\nI had been married to an intelligent woman for seven years, and all that got me was heartache and a divorce. Jessica might not have been smart, but she was kind and gentle and seemed to love me unequivocally, in addition to being very sexy. How could I be embarrassed about that?\n\nI sent over an enormous bouquet to her place of business on Monday, with a card begging for forgiveness. I asked her to meet me at our favorite restaurant Wednesday night at 6. I told her that I would understand if she didn't and I wouldn't bother her ever again.\n\nIt was 6:10 and I started to get up to leave, figuring that I really had blown it and she wasn't showing. Just then I saw her heading my way right behind the maitre d. My spirit soared, and I knew then that what I felt was real.\n\nWe ordered a bottle of wine and appetizers.\n\n\"I've just spent two days kicking myself for the way I treated you the other night,\" I said. \"You are a beautiful, sexy woman, and I love that, but I honestly got uncomfortable with you showing so much skin and being so sexy in front of my old friends. I hadn't had a problem with any of that before, but this time there you were, in front of our old friends, and I guess my insecurity showed. I kind of felt like I was a perv, exposing you in front of them.\"\n\nShe watched me hard for about a minute. I was blushing profusely.\n\n\"I guess some of the blame might be mine,\" she responded. \"I like showing off my body, and my late husband always encouraged it. Maybe I could tone it down a bit?\"\n\n\"Maybe you could, but then you wouldn't be yourself, the woman I fell in love with. I admit I love looking at your body, so I guess that means others get to see, too. As long as I'm the only one who gets to touch...\"\n\n\"Believe me, you're the only one, until you tell me that you no longer want me,\" she said.\n\n\"Haven't I already used up my stupid quota?\" I asked.\n\n\"Jake, I also know that I'm not valedictorian material. I'll get it if you don't want to keep seeing me.\"\n\n\"Now I'm the one who should be insulted,\" I said. \"You're beautiful. You make me happy. You love me... I hope.\n\n\"I was married to a smart woman for seven years. Smart's not all it's cracked up to be.\"\n\nBoth Traci and Dr. Kincaid looked shocked when I walked into the master bedroom about 20 minutes after the pair got together. I had given them enough time to get going because I wanted the shock factor on my side, and I definitely had it. Two heads turned and two pairs of eyeballs about bugged out of two skulls when I opened the door, walked in and fired off two photos with my iPhone.\n\n\"Surprise!\" I yelled cheerfully and very loudly.\n\nTraci pushed Kincaid off of her and immediately tried to shrink into the bed, while Kincaid just froze in place. I calmly walked up to him and clocked him with my absolute best shot, connecting with his chiseled nose and splattering blood everywhere as he fell back on the bed.\n\nI considered clubbing him into unconsciousness, but I knew the police wouldn't give me any slack beyond my initial shot. Traci started to yell something, maybe an apology, I couldn't be sure. I didn't want to hear it.\n\n\"Shut the fuck up, you stupid cunt!\"\n\nInstant silence from her. Much better. I got a suitcase out of our closet and proceeded to load about a week's worth of clothes. I went into the master bath and got my toiletries.\n\nI left the house in silence... well, except for dickhead's constant moaning.\n\nDickhead actually threatened to have me charged with assault. My attorney told his attorney that considering the circumstances, the one shot showed great restraint, and a jury would probably agree. Or else he could show Mrs. Kincaid the two photos I had taken with my phone. The good doctor decided discretion truly was the better part of valor.\n\nTurns out the affair had been ongoing for more than a year. They met when the college art gallery had an art exhibit featuring works by area doctors. Apparently the good doctor enjoyed putting acrylics on canvas.\n\nThe good doctor was about 45, handsome and obviously a smart man. As a physician, he was obviously much smarter than I was, and smart enough to charm his way into my wife's panties.\n\nNot only didn't Traci apologize for cheating on me, she didn't even apologize for hurting me. I had no choice but to divorce her, even though I didn't want to be a part-time dad. She didn't put up any kind of a fight, really, beyond making sure she got to be the custodial parent. I was pretty sure that was just vindictiveness on her part, because if she would have thought it out better, me having the kids more would have given her more time alone with her doctor.\n\nMy kids, now 6 and 4, absolutely loved Jessica when I got the three of them together. Jessica told me she always wanted children, but her late husband wasn't a fan. She felt she was too old at 45 to have any of her own, but she was like a mother hen to my two, and they took to her big-time. We did plenty of child-friendly events when we had the two, and honestly, it was almost like I had three kids as Jessica displayed as much enthusiasm as Stevie and Wanda. I found out that Jessica didn't have a good childhood and a lot of the stuff that we did as a family was her first experience doing the activities.\n\nNeedless to say, Traci wasn't thrilled when the kids told her I had a girlfriend. I guess she'd thought I'd pine for her until the end of time. The kids said she made several disparaging remarks about my \"big-boobed bimbo,\" but my kids, despite their young age, seemed to be smart enough not to let Traci's actions or her ravings determine their level of ease with Jess.\n\nAs Dr. Wonderful had a wife and two children of his own, he and Traci weren't really at liberty to bounce around town as a couple. The kids didn't indicate that any man spent time with them when they were at home, although they did know she went out on dates occasionally.\n\nJessica and I married a year later. We moved into a small home, which had rooms for both kids. To Traci's credit, she started letting them spend more time with Jessica and me as time went on. Of course, part of that could have been to give her more time alone with her doctor. I really didn't care about the latter, because we both loved having the kids with us.\n\nAccording to my children, Traci and the good doctor ended their relationship about a year after Jessica and I married. She didn't date again for a good while afterward, but when she started again it was with a mathematician from the college. Dr. Matthew Brickley was a 50-ish math nerd who looked like someone's grandfather, my kids opined. I saw the two at one of the kids' events. While he was supposedly just a few years older than my Jess, he looked more like her father. I was unimpressed.\n\nWhile Jessica always dressed conservatively when she attended the kids' events, she kept to her usual style when we went out together as a couple. I had accepted her style as her own, and even my friends began to get more comfortable with my sexy and somewhat underdressed wife. Yes, I was aware that some of my guy friends had to try extra hard not to stare open-mouthed, and some of my women friends had to try extra-hard not to frown the evening away, but I think they all eventually realized that Jess was such a nice person that they could forgive her for what they saw as questionable style.\n\nShe no longer went out with her friends by herself on Friday nights, though. When she felt the urge to get out, we went out as a couple. We usually danced as a couple, but when I got tired, I would let her dance with a few other men, if they showed me proper respect and asked me first. Every now and then one would get a little adventurous with his hands, but Jessica quickly moved them off the unacceptable setting, and she never went off with any man if I was in the restroom or at the bar. She was mine and never for a minute forgot that. Of course, I was hers, and didn't forget that either.\n\nJessica and I were out at one of our city's nicer steakhouses about a year later when things got out of hand one night. She was wearing that little black dress that I've mentioned before, and toward the end of the meal she needed to use the ladies' room. I helped her out of her seat, and I was returning to my seat when I heard a slight commotion behind me. I turned around to see Traci, her math professor and another couple jawing at my wife. As I headed over to their table I heard Traci mutter, \"Jesus, bimbo, how about wearing a dress that actually covers your tits and ass!\" The four exploded in laughter as Jessica burst into tears and practically ran into the restroom.\n\nI'm not exactly a hulk, nor do I have martial arts training, but some things you just can't ignore. The foursome didn't see me until I was right up to their table, then they got silent.\n\n\"Really, Traci? You're going to be a piece of shit to my wife in public, just because she's prettier than you?\" I hissed, not exactly quietly.\n\nTraci's face went from a derisive smile to flushed with anger in a millisecond as half the restaurant patrons turned toward us.\n\n\"If you were a man, I would kick the shit out of you right now. But since you're a woman, I guess I'll just have to beat the fuck out of your date here. Stand up and get ready to take an ass-whipping, grandpa!\"\n\nI glared at her math professor, hoping he would get out of his seat. He looked terrified, and was shaking his head rapidly side-to-side. By this time, Jessica had returned from the restroom and was trying to get me to return to our table, but I was practically snorting from my nostrils and was running on adrenalin. I wasn't moving, and I glowered at all four, practically daring any of them to say anything.\n\n\"Sir, I'm going to have to ask you to leave,\" the maitre d' said from somewhere behind me.\n\nI ignored him a second time before I picked up math prof's plate of food and crushed it into his chest from alongside him. He jumped back and made an unintelligible noise before someone grabbed me from behind. I started to shake off the hold until I heard Jess's soft voice trying to calm me down.\n\n\"Excuse me, sir, but you're throwing out the wrong party,\" said a man's voice from the table next to where I was standing. \"These people insulted the lady in the black dress, and her husband was coming to her defense.\"\n\nOther people in the area started to voice agreement. The maitre d' looked around before coming to a decision.\n\n\"I'm sorry sir,\" he said to me. \"I didn't realize you were the offended party. We would be more than pleased if you would stay and enjoy your meal on us.\"\n\nI nodded wordlessly because I was breathing like an enraged bull. Jessica gently led me back to our table. I nodded a thanks at the man who first stood up for me.\n\nAccompanied by what looked to be a manager, the maitre d' quietly asked Traci and her companions to pay their bill and leave immediately, and never return. Traci's face was blood red, and I heard her mutter something to the maitre d. He shook his head negatively. The others got up, red-faced, and they left quietly.\n\n\"Wow, I had never been treated that badly by anyone in public before,\" Jessica said to me as we sat at the table \"What the hell does your ex care what I wear? She gave you up, you married me. You like what I wear, right?\"\n\n\"Yes, I love the way you dress. You are a sexy beast, and I'm okay with it. I just assume she's jealous,\" I answered.\n\n\"But she's got so much going for her. She's smart and beautiful and I'm... just a bimbo.\"\n\n\"No, you're not,\" I said harshly. \"You are an amazing woman, the love of my life. You are kind, courteous, sweet and loving, in addition to being beautiful and sexy. And you understand the concept of us. It's a concept that Dr. Bitch didn't seem to understand, despite her three degrees and all of her brains.\"\n\nJessica's sexy style and her sexuality were almost always on display, but because she lacked the intelligence of a woman like Traci, it was easy to tell she didn't have an agenda, other than trying her best to be the partner I most wanted. She was an excellent cook and housekeeper and was also a gym rat, which helped explain how she still looked so good in her late 40s.\n\nTen years later, my kids came to live with us full time, and life got even better. Seven more years passed, and I was proudly walking my daughter down the aisle at her wedding. I had tears in my eyes as I remembered Wanda as a toddler, climbing up on top of me on the sofa as I tried to nap. I finally got her up to the altar, gave her a soft kiss on the cheek and took my seat next to Jessica on the wife's side. Traci and her husband, Dr. Brickley, sat next to me in the aisle.\n\nJessica looked absolutely stunning in a frilly, dark blue mother of the bride gown that was open to the middle of her big boobs. Her hair was swept up in a tight, high ponytail that was professionally curled into what looked to me like a long roll hanging down her back. Although she was 12 years older than Traci, she looked to be that much younger than my ex-wife.\n\nFor her part, my ex wore an off-the shoulder red gown. I will admit she looked good, despite the extra 20 or so pounds she had gained in the last few years. She had chopped her dark brown hair into what I'm told was a stylish pixie cut. I'm a long-hair freak, so I wasn't too thrilled with the look, but it didn't matter to me as she wasn't my wife.\n\nI could see she wasn't pleased with Jessica's gown as she spent much of the ceremony looking down my wife's cleavage and grimacing. I know that Jessica made an effort to sit up straighter and breathe well.\n\nThe wedding was a group effort between my daughter, my wife and my ex-wife. Jessica had to convince Wanda to let Traci be a part of things as my kids and their mother had drifted apart in the last few years. I happily paid for the affair, but stayed far away from the plans of the three women. I wasn't born yesterday.\n\nAs the evening went on, it was easy to see that Jessica was definitely the hostess of the event, moving from table to table and going around the room happily chatting with our guests. Wanda's friends especially seemed to get along with my wife. Traci, on the other hand, seemed to be out of the loop, occasionally chatting with some of our old friends and family, and spending much of the night watching my wife. I almost, almost, felt sorry for my ex-wife.\n\nGrandma Jess was probably the favorite among all the grandparents for our three grandchildren. Little kids can just sense good, and my Jess would crawl around on the floor, do tea parties and make special cookies at a moment's notice. I did my best to keep up with my wife, and we were definitely the grandparents of choice.\n\nWe were having our annual Christmas party, an event we had held for the past several years since we moved into a bigger house that Jessica had to have. The woman absolutely loved to entertain, especially family gatherings. Our Christmas party, held on Christmas Eve, included our kids and their families, the kids' in-laws, several friends and their children and even Traci and whoever the hell she was with that year.\n\nTraci had divorced Dr. Brickley a few years back, and since then had a string of boyfriends, according to information provided me by my kids. I couldn't have cared less what she did with her life, but we did share great children.\n\nAbout midday, I was making the rounds with refills of both alcoholic and non-alcoholic eggnog. I was moving down a hallway when I caught an exchange between Wanda and Traci in the restroom. I probably should have just kept going, but I have to admit to stopping to listen.\n\n\"The woman's a Barbie doll. In fact, a second-hand Barbie. She doesn't have a brain in her head, yet you and everybody else seem to love her like Mother Teresa. Your father looks at her like some lovestruck teenager, for God's sake. He never used to look at me like that,\" Traci complained.\n\n\"Yes, he did look at you like that. You just choose not to remember,\" Wanda said.\n\n\"And Mom, Jess might not have a doctorate like you do, but she's smart enough to know things that you don't have a clue about. She doesn't give a shit about Jean-Paul Sartre, but she has a Ph.D. in Dad.\"\n\n\"Whatever!\" Traci replied angrily.\n\nI was incredibly proud of my daughter for seeing the important things. I stifled back a tear, and went back to my appointed rounds of refills.\n\nHours later, Jess and I were lying in bed, me on my back and Jess half on top of me after a very satisfying but quiet lovemaking session, as we had a houseful of guests staying over. I love the whole process of lovemaking, from foreplay to cuddling after the act. I loved having Jess in my arms during our afterglow, my mind pretty much a blank but my heart absolutely filled with love.\n\n\"I'm smart enough, you know,\" she whispered unprovoked.\n\n\"I know. That's why I love you,\" I whispered in return.\n\n\"I'm smart enough to hold on tight to a man I love and who loves me back. Smart enough.\""
    ],
    "authorname": "Hooked1957",
    "tags": [
        "the art of falling"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/second-hand-barbie"
}