{
    "title": "No More Beautiful Words",
    "pages": [
        "Although ratings are nice, nothing beats a comment or two about what you liked or disliked about a story. Please take a moment to leave one. Thank you.\n\n********\n\nJune 1978\n\nThe incessant ringing of the phone on the small night stand was just annoying enough to make Scott Riley regret ever having gotten his own number. If he hadn't, his mother would've answered the call out in the living room and he'd still be fast asleep. After nearly a dozen rings, you would think that the caller would've gotten the message, but whoever it was, they continued to let it ring until the brown haired twenty-year-old tossed aside the sheet he'd wrapped around himself during the night and rolled over to the opposite side of the bed to answer it. As he reached for the handset, the hands on the wind-up clock next to the phone came into focus.\n\n'Fuck,' Scott thought as he lifted the receiver off its cradle, 'it's not even seven-thirty yet.'\n\nIt had been a long hard week at Clarke's Hardware, the Park Slope fixture where Scott had worked the past two years, and he'd been looking forward to spending his day doing not much of anything. More so since his date with Wendy Hayes last night had gone so terribly wrong. After dinner and a movie, they'd gone to see 'Grease', and afterwards, Wendy announced that she had a headache and wanted to be taken home. He hadn't even gotten a goodnight kiss at the door, despite it having been their second date. It was pretty clear that there wouldn't be a third.\n\n\"Hello?\" Scott said after lifting the receiver to his ear, trying to shake the last vestiges of sleep from his head.\n\nThe voice that answered was one Scott quickly recognized, even through the fading fog. One of the last people he wanted disturbing his weekend, he seriously considered just hanging up on him, but he was sure that if he did, he'd only call right back. Mark Harris was a professional photographer for whom Scott occasionally did scut work. The thirty-year old's business covered weddings, family portraits, and the occasional personal photo session. The last divided between respectable and not so much so.\n\n\"Do you have any idea what time it is?\" Scott asked as he drew a deep breath, having no doubt that Mark did.\n\n\"Yeah, I know it's early, Scott, but I needed to catch you before you went out for the day,\" Mark replied, quickly adding before Scott could say anything else, \"How would you like to work for me today and make an easy fifty dollars?\"\n\nThat cleared Scott's head immediately. Fifty dollars was more than he made in a day at the hardware store, especially since Mark paid in cash.\n\n\"What kind of work are we talking about?\" the dark-haired teen asked warily, having worked for Mark before, but never for that much money.\n\n\"Don't worry, it's nothing illegal,\" Mark assured him. \"I need an assistant for the day, that's all. Normally I'd call Keith, but he's sick and can't do it.\"\n\nKeith Lawrence, who was a few years older than Scott, worked part time for Mark and full time at Giordano's Pizzeria. When he wasn't available, Scott sometimes filled in for him.\n\n\"I don't know Mark, I was really planning to just take it easy today,\" Scott said after a long moment's deliberation, having considered that, based on past experience, Mark would make him earn every dollar the hard way.\n\n\"Scott,\" Mark said in a slow and deliberate tone, \"it's a special shoot, one of the really special ones.\"\n\nScott's interest suddenly perked up at that. Under a pseudonym, Mark occasionally did some work for various adult magazines. He had a cousin in the business who occasionally threw some work his way when he could. Scott had never worked one of those sessions, they usually fell to Keith, but had seen some of the photos taken during them.\n\n\"And that's fifty dollars for two hours?\" Scott asked, recalling that was the average time a photo shoot usually took.\n\n\"More like four or five hours,\" Mark replied.\n\n\"Five hours,\" Scott repeated as the idea of earning some extra money and a chance to see some naked flesh lost some of its appeal. \"I don't want to spend my whole day off working.\"\n\n\"It's not the whole day,\" the photographer insisted. \"If we start by nine, and everything goes right, we should be done by two o'clock and you'll still have plenty of time to do whatever you planned to do and extra money in your pocket to do it with. It's really not a long time when you consider that I have six models to shoot.\"\n\n\"Six?\" Scott said, the number echoing in his head, adding to himself that Mark might have led with that.\n\nBefore Scott had a chance to say anything else, Mark quickly explained that the magazine that he was shooting for had to go to press Monday morning and the layouts for it had been destroyed in a fire in the developing lab. That was why all six needed to be redone in a day. The photographer who had done the original work had burned his hand in the fire and Mark's cousin had offered the job to him. He ended his narrative by again asking Scott if he would do it.\n\nSix naked models and fifty dollars to boot, Scott thought; he'd have to be a real idiot to turn that down. He was about to say yes when he recalled another set of photos from one of those special shoots that he'd seen in Mark's lab. One that had involved only men, most of them in an aroused state -- not his thing at all.\n\n\"Mark, these models, they're women, right?\" he asked.\n\n\"Of course they're women, why would you ask...\" Mark started to say, then recalled that Scott had seen the photos from \"All-Male\" that he had done. As far as he was concerned, it was just another job and all that really mattered was that he had gotten paid and it had led to other work. \"Look, Scott, if you don't want to do it, let me know so I can call someone else. I only started with you because you'd told me that you'd love to work one of these sessions.\"\n\nMark was laying it on pretty thick, Scott thought, so much so that he was pretty sure there wasn't anyone else available. If that was the case, then he might be selling himself short by jumping at the first offer, as good as it sounded. He knew that he might be risking losing that if he pressed too hard and was wrong, but then again, all he'd really be losing was the chance to make extra money, not money he already had.\n\n\"I'll tell you what,\" he finally answered. \"I'll do it, but I want a hundred dollars if it's going to be an all-day thing.\"\n\nScott expected Mark to again stress that it wasn't an all-day thing, but instead all he got was a sudden silence that filled the receiver. A pause that told him that he'd read the situation correctly and that, since he hadn't immediately said no, the older man was now considering a counter offer. Scott hoped Mark would go for another twenty-five dollars, but was willing to settle for half that. So, he was totally taken back when, a long moment later, the photographer said that a hundred it was.\n\n\"But you have to help me pack everything up when we're done,\" Mark added, a condition Scott understood was intended to salvage his wounded pride.\n\n\"No problem,\" Scott replied, certain that Mark could see the satisfied smile on his face even over the phone.\n\nThey spoke for a few more minutes as Mark gave him all the pertinent details, telling Scott to meet him at a warehouse down in Red Hook. A friend, who rented office space there, let Mark use it for photo shoots like this. After all, it certainly wasn't something he could do at his normal family-oriented storefront.\n\n\"I'll be there by nine,\" Scott promised as Mark brought the conversation to a close.\n\nAs he hung up the phone, Scott realized he'd never asked what magazine the photo shoot was for. It didn't really matter, but he was hoping it was for one of the really raunchy ones.\n\n\"I better get going then,\" Scott said to himself as he jumped up from the bed and wrapped his robe around him, before heading down the hall to the bathroom he shared with his younger brother, hoping as he did, that he'd find it empty.\n\n-=-=-=-\n\nThe bathroom had indeed been empty and Scott showered and dressed in near record time, quickly throwing on a t-shirt and a pair of jeans. His only delay, it turned out, was some difficulty in dampening his enthusiasm for the unexpected spectacle he was about to enjoy. Not even turning the water to a colder flow was able to fully diminish his rising excitement. Hopefully, he thought as he dried himself off afterwards, he'd be able to keep it under better control once he was on the job.\n\nBefore stepping out the door, he took a moment to check his appearance in the large, floor to ceiling mirror in the hall. He smiled as he looked at his reflection, seeing a reasonably built, dark haired young man who stood five seven and weighed a solid hundred and sixty pounds. Girls found him attractive and while he knew it was a forlorn hope, he wondered if any of the models might think so too.\n\nThe warehouse Mark had given him the address of had seen better days, Scott thought as he parked his old AMC Rambler a few blocks from it, but then again, that was pretty much true for most of the buildings in the area south of the Gowanus Canal. It was years since Brooklyn had been a major shipping port. They were always talking about building the area up, but so far talk had been all they'd done. So, for now, it was just mostly cheap storage space.\n\nTaking the freight elevator up to the third floor, Scott found the offices of Mark's friend, and on stepping inside, discovered that it had indeed been converted into a makeshift photo studio. A large mobile backdrop had been set up in front of a row of filing cabinets, and on the other side of the room the receptionist's desk had been cleared to allow the various cameras and lenses that Mark might need to be spread across it. In between stood a tripod and a pair of free-standing photography lights.\n\nThe smaller inner office, from which Mark emerged barely a minute later, had been temporarily converted into a combination makeup and changing area -- the latter seeming slightly incongruous given the nature of the photos they were going to be taking. A flash of movement behind the photographer told Scott that the models had already arrived, causing a stirring both in his heart and between his legs.\n\n\"Nine o'clock, as I promised,\" Scott said, catching the bearded man's attention.\n\n\"Great, you can finish laying this stuff out while I go over the lineup,\" Mark said, raising the clipboard in his hand and using it to gesture toward the collection of lenses and camera bodies on the desk.\n\nIt only took Scott a few minutes to lay out the equipment, positioning it so that he could easily reach anything Mark might ask for. As he laid the last piece in place, his attention was diverted by the appearance of a twenty-something redhead in a green blouse stepping out of the inner office. She had a pleasant face and a small but nicely shaped bust. She stepped over to Mark for just a moment, whispering something too low for Scott to hear. Then she disappeared back into the other room.\n\n\"Is she one of the models?\" he asked Mark as the photographer came over to the desk to inspect the arrangement.\n\n\"What, who, Melissa?\" Mark replied, seemingly surprised by the question. \"No, she's here to do makeup. Cute as she is, she's not quite what the magazine's readership is looking for.\"\n\nMark's last comment made the hairs stand up on Scott's neck, prompting him to ask the photographer what magazine they were working for.\n\n\"I doubt you've ever heard of it,\" Mark laughed, \"but there's a copy over there on the desk.\"\n\nNow hesitantly curious, Scott moved to where the magazine sat and turned it over, exposing the title and cover photo. His face turned blank for a second, then shifted to a bright red with anger.\n\n\"What the fuck!\" he said, not loudly, but with enough behind it for Mark to hear.\n\nThe title of the magazine was 'Sensational Sixties,' and it was immediately obvious that it didn't refer to the previous decade. If the partially naked woman on the cover was indicative of those inside, it might just as well have been called 'Naked Grannies.'\n\n\"Something wrong?\" Mark inquired, his tone steady as he tried to project an aura of innocence.\n\nScott was about to say there certainly was, with a few well-chosen expletives tossed in for emphasis, but before even the first of those could come out, he paused. There was no doubt that Mark had pulled a fast one on him, but he hadn't actually lied in doing so. He simply hadn't volunteered any information that the younger man hadn't asked for. Scott had simply assumed that the women would be what he expected them to be.\n\n\"Hey, it's a paying gig,\" Mark said in response to the look on Scott's face.\"\n\nThe reminder that he was indeed being more than well paid for the afternoon caused Scott's hostile expression to fade. Next time, if there was a next time, he'd know enough to ask more questions.\n\n\"Can we get started?\" Mark finally asked. \"You did want to get out of here as early as possible, right?\"\n\nScott merely nodded his head in agreement, reaching for the camera that he knew Mark liked to start with.\n\n-=-=-=-\n\nThe first woman in front of Mark's camera was Asian, or more specifically a mix of Spanish and Filipino according to the fact sheet on the clipboard on the desk. Her name was Tala and she was sixty-four. Heavy set with large breasts, she had dark olive skin and short black hair. The absence of any grey made Scott doubt it was natural, especially as the thick bush between her legs definitely didn't match.\n\nNext came Carmella, a sixty-one-year-old Italian with just enough grey in her curly hair to attest that it was her real color. She had distinctive Mediterranean features and a robust body, one that made Scott think of those old paintings they used to study in art class. The hair between her legs was just as thick as the first woman's had been, but it was the oversized nipples capping her breasts that quickly drew most of the younger man's attention, especially when Mark instructed her to play with them a little to make them more prominent.\n\nThe last model before the lunch break was Sharon, a slim woman with midnight skin and small rounded breasts. Taller than the first two, she was the first black woman Scott had ever seen nude. She had, in his opinion, really nice boobs, and he watched captivated as she assumed various positions at Mark's direction. A condition that exploded into utter amazement as Sharon finally slid off her nondescript panties to reveal a totally bare mound -- the absence of hair allowing her sex to be seen in intricate detail.\n\nAs they sat down to eat the sandwiches that had been brought in from a local deli, Scott watched as, one by one, the women they had just photographed re-emerged from the improvised dressing room fully dressed. They wasted no time in picking up the small letter sized manilla envelopes that contained their pay from where they had been laid out on the desk and just as quickly heading out the door.\n\nWith Mark eating with Melissa in the inner office, Scott found himself leafing through the copy of 'Sensational Sixties.' The women in the old issue were similar to those who had just left, all early to mid-sixties, according to the accompanying text, and, as he looked at them, strangely familiar. It took a long minute for him to realize, but once he did, it caused him to pale. If he just looked at the photos in which they were clothed, they could've been women he saw every day. Friends of his parents, store clerks, even teachers in schools he'd attended. In short -- everyday people.\n\nNot that he'd ever seen any of them naked, well, at least not totally so. There had been the time, back when he was thirteen, when he'd walked in on Mrs. Petroski down in the laundry room early one morning. The sixty-year-old had just tossed on a thin house dress to run down and put the wash in and, as she stood in the light of the rising sun through the basement window, her gown had become translucent enough for Scott to have seen her breasts, nipples and all. Not that he'd ever admit it to any of his friends, but he had masturbated with that image in his head countless times. They had been the first set of breasts he had ever seen.\n\nWas that the appeal of older women in these magazines, he wondered. That they were everyday people?\n\nAs Scott was replacing the film magazines in the camera, taking care to store the exposed rolls safely, three more women came into the room and headed into the inner office. He only got brief glimpses of them before they disappeared, but now found himself filled with a bit of excitement that he would shortly be seeing much more of them.\n\nCurious as to who might be next, Scott checked the clipboard and read the details for the next model. Her name, or at least the one they had down on the form, was Lana, and according to the fact sheet she was sixty-three years old, five foot seven, and weighed a hundred and fifty pounds. Her hair color was listed as grey, which Scott thought had to be a mistake, because it had been his experience that most women raced out to buy a bottle of Lady Clairol at the first sign of grey, desperate to deny any sign of aging. That was one thing that both his mother and aunts had in common with the women he'd help photograph earlier. Reading further, he saw that her measurements had been put down as 37-25-36 and she had a 34C bust.\n\nWhen Lana emerged from the inner office a few minutes later, Scott was surprised to see that not only had the woman embraced her natural hair color, she looked damn good in it, wearing it in a short but flattering style. Rather than make her look old, it instead made her look a bit exotic. He tried to imagine what she might have looked like when her hair had been its original color, but had to toss that effort aside as Mark called for him to get a move on and hang the backdrop for the next shoot.\n\nHe finished doing so just in time to catch Lana as she slipped out of her robe and draped it over a folding chair. Scott would be ashamed to admit it, but the first thing his eyes focused on was her breasts, full and remarkably firm, given her age. Then his gaze dropped to between her legs, where a thick salt and pepper bush obscured her sex. It was only then that he finally shifted his attention to her face, there to find a visage startlingly familiar.\n\n\"Holy shit!\" he said.\n\nMark shot him a disapproving look, while Lana seemed indifferent to his outburst. Scott mumbled a weak apology, quickly moving back over to the desk. As he did so, he found himself unable to take his eyes off the woman standing naked only a few feet away.\n\nFor what had seemed like one long endless moment, Scott would've bet every dollar of what Mark was paying him for the day that the woman before him was someone he knew. That impression didn't survive a second look, but it had lasted long enough to shake him to the core.\n\nIt was uncanny, he told himself, but the woman looked enough like Dorothy Fisher to have been her sister -- that was if she had a sister, which Scott knew she didn't. Dorothy was the mother of Stephanie Fisher, who had been Scott's girlfriend his last two years of high school. A late in life baby, her unexpected arrival had come when Dorothy was almost forty and certain her child bearing days were over. Despite that, the new arrival became the great joy in her life.\n\nEven though he knew she wasn't the woman he knew, Scott was finding it hard not to look at her and still see Dorothy in his head. So much so that Mark had to ask twice for a change of camera. He had never seen Mrs. Fisher naked of course, not even in a bathing suit, but he had certainly seen Stephanie and she greatly resembled her mother.\n\nThat had been, of course, in those now seemingly long ago days when sex was something new and he believed he and Stephanie would go on forever, only to have that dream cut short when the bodacious blonde moved across the country to attend college. Scott had had four girlfriends since then, two of whom he'd been intimate with, but none had lasted beyond a few months.",
        "Even after Lana had been replaced by Rayanne, the oldest of the group with streaming red hair that flowed across alabaster breasts, Scott found himself constantly glancing toward the inner office door in hope of again catching another look at the woman who had so captured his attention. In fact, he almost totally ignored the redhead, despite her enthusiasm in showing off her naked body, happily assuming any pose Mark requested.\n\nThe final set of the day featured Rachel, a buxom Latina who also proudly paraded her assets before the camera, going far beyond any of the previous models. Despite their unsuitability, Mark made no attempt to discourage her, leading Scott to believe that, if the shots proved too raunchy for the magazine, the photographer would just save them for his private collection.\n\nThen, just as Mark was finishing up the last few shots, one which had included Rachel squeezing her left breast while she placed the fingers of her other hand in her pussy, Lana reappeared. She paused for a second to glance at the display being put on by the olive-skinned woman in front of the camera, registering a look of disapproval. Then she quickly headed for the door, reaching it just as Scott finally noticed her -- too late to get more than a glance of his own.\n\nRachel finally finished up her set and, after quickly tossing on her clothes, left as well, leaving Scott and Mark to the task of restoring the offices to their original appearances. They had already taken down and packed up the lights and backdrops when Melissa emerged from the inner room, a large suitcase sized carryall with all her wares in her hands.\n\n\"You can finish up here, can't you, Scott?\" Mark said as he first looked at his assistant, then shifted his attention to Melissa, who seemed to be waiting for him.\n\n\"I guess so,\" Scott replied, making the connection and realizing that Mark had never intended to stay and help.\n\n\"Great, I really appreciate it,\" Mark said as he flashed a smile in the make-up artist's direction.\n\nMark started to step away when Scott made a loud coughing sound, a reminder that the older man was forgetting something.\n\n\"Oh yeah,\" he said as he reached into his pocket and pulled out his wallet. \"How much did we say again?\"\n\n\"A hundred dollars,\" Scott replied in a clear voice.\n\n\"Right,\" Mark acknowledged, pausing for a moment as if he wanted to question the amount.\n\nA thought that quickly faded as, glancing again at Melissa, he noted the look of impatience on her face. Quickly taking five twenty dollar bills out of the billfold, he handed them to Scott.\n\n\"Just leave everything up by the door when you're done,\" he quickly said. \"I'll swing by later and pick it all up.\"\n\nHe was already halfway across the room, his mind now totally focused on Melissa, when Scott called his name, prompting him to pause.\n\n\"Maybe you want to take these with you now,\" Scott said, holding out a small clear zippered bag that contained the film canisters with the day's efforts.\n\n\"Oh yeah, I guess I should,\" Mark awkwardly agreed.\n\nSecuring the canisters in his small carry bag, Mark stepped over to Melissa and slipped his arm around her, leading her toward the door. Once they had exited into the corridor, a curious Scott stuck his head out into the hall and watched as they approached the freight elevator. As they waited for the door to open, he could see Mark's hand drop down to the cheeks of Melissa's ass, squeezing them softly. The redhead giggled at his touch, tilting her head toward his until, just before they stepped into the lift, their lips connected.\n\n'God, Mark is really an asshole,' Scott thought as he stepped back into the office to complete the packing, 'but then again, he's an asshole that's probably getting laid tonight -- which is more than I can say.'\n\n-=-=-=-\n\nIt only took another twenty minutes for Scott to finish, but even so, it was closer to three than the two o'clock finishing time that he'd been promised. He checked one last time to be sure he hadn't missed anything, then closed the self-locking door behind him. As he waited for the freight elevator to come back up to his level -- they were notoriously slow due to the heavy loads they were designed to carry -- he thought about what an interesting day it had been.\n\nIf nothing else, he would never look at older women again in quite the same manner. It was one thing to see girls his age, or even a bit older, as sexual beings, but until today he never imagined doing so with women his mother's age -- Mrs. Petroski notwithstanding.\n\nAs the elevator finally arrived, Scott's thoughts shifted to a more practical consideration, what to do with his new found windfall. Somehow, it didn't seem right to spend it on something practical like paying bills -- at least not all of it. By the time he stepped inside and the elevator began to drop, he'd decided to only put half of it towards that. That would still leave fifty dollars to have fun with.\n\n'A pity that Wendy dumped me last night,' he thought as he walked out of the warehouse and onto the empty street. 'I could've taken her somewhere really nice.'\n\nAs he started in the direction where he'd parked his car, Scott further considered that if he went to his favorite dance club with that much money in his pocket, he certainly wouldn't lack for female companionship. But then, just as quickly, he dismissed that thought. It was one thing to spend money on someone you brought there, but quite another to use it to try and buy someone's attention. That was too much like simply paying for sex for his taste.\n\nLost in thought, he didn't notice the figure stepping out of the bodega a few stores down until he'd almost collided with her, avoiding doing so at the last second only by pivoting so hard that he nearly lost his balance. Even so, it took a few seconds for his head to stop spinning.\n\n\"Well, hello there,\" the woman said as she also recognized the young man who had almost knocked her over. \"We meet again.\"\n\n\"What?\" Scott said as he turned to see the grey-haired woman from before standing just a few feet away, now wearing a dark blue skirt and a short-sleeved beige top.\n\n\"Please tell me that Mark is still upstairs,\" Lana said, glancing past Scott in the direction of the warehouse offices.\n\n\"No, I'm afraid he left about a half-hour ago,\" a still slightly stunned Scott replied.\n\n\"Damn, I was so hoping that he was still around,\" she said.\n\n\"Is something wrong?\" Scott asked, picking up on a slight tremble in her voice.\n\n\"I was hoping that he might be able to give me a ride home,\" Lana said, \"or at least to someplace where I could get a cab or something.\"\n\n\"He left with Melissa,\" Scott said, wondering why even as he did so, he felt the need to say it.\n\n\"Ah, the little redhead,\" the older woman grinned, \"I thought there was something going on there.\"\n\nShe paused for a breath, then explained her predicament. Her neighbor, Peggy, had dropped her off earlier and was supposed to come back around two and pick her up. But two o'clock came and went, but no Peggy, leaving her stranded. She had used the pay phone in the small convenience store to try and call her to see what happened, but hadn't gotten through until just a few minutes ago. Peggy, it turned out, had car trouble, serious enough to need to have it towed to a nearby repair shop. They said it would only be a minor repair, but they couldn't get the part it needed until Monday.\n\n\"I tried the car services in the area, but most of them are only interested in local runs,\" she concluded. \"The only one that said they could take me home also said they'd have to charge me for the return trip as well.\"\n\nCar services were a great asset in areas where yellow cabs didn't venture, Scott knew, especially since that meant just about anywhere outside of Manhattan. But they did have their limitations, as Lana had just stated. It also didn't help that Red Hook was a transit desert, containing few options and those only after a long walk.\n\n\"Where do you have to go?\" Scott asked.\n\n\"Ocean Parkway and Quentin Road,\" she replied.\n\nScott had a friend who lived only a few blocks from there, over on Kings Highway, so he was pretty familiar with the area. If Lana caught the F train up on Smith and Ninth Street, he thought, it would get her home in less than an hour. Of course, that wasn't counting the half hour it would take to get to the station on foot.\n\n\"I could drop you off by the F train,\" he heard himself say. \"That stops a couple of blocks from where you want to go.\"\n\n\"That would definitely make you my hero of the day,\" Lana quickly replied, flashing him a broad smile as she did.\n\n\"It's no problem,\" Scott said as she returned the smile.\n\nIt took longer to walk to where he'd left the car than it did to drive to the train station. Aside from a further thank you once they'd arrived, nothing had passed between them during the short five-minute drive. At least not until they saw the large makeshift sign in front of the subway stop that stated that the F train was temporarily out of service due to signal problems.\n\n\"Fuck, what do I do now?\" Lana asked, more to herself than to Scott.\n\nScott thought about it a few moments and remembered that the BMT lines ran parallel to the IND, so he could just as easily put her on the N train as the F. The only problem with that was that he'd have to go downtown to DeKalb Avenue to reach the closest connection. That would take at least fifteen minutes under ideal conditions, which, this being Saturday afternoon traffic, he doubted he'd find.\n\n\"I supposed the easiest thing for me to do is just drive you all the way,\" Scott said, a slight exasperation in his voice. He'd already gone this far, so he'd have to see it through.\n\n\"Oh, I couldn't ask you to do that,\" Lana said.\n\n\"You didn't ask, I offered,\" Scott clarified, adding to himself that he really didn't have anything else to do at the moment.\n\n-=-=-=-\n\nThe traffic heading up toward Ocean Parkway proved just as substantial as what he had envisioned if he'd headed downtown, making the trip much longer than he'd hoped. Even if it hadn't, it was quickly clear that he couldn't spend the entire six miles ignoring his passenger. The thing was, what did he say to a woman he'd seen totally naked only a few hours before?\n\nA few years back, Scott had seen a funny movie on cable called \"What do you say to a naked lady?\" It had been made by the man who did Candid Camera and explored situations where people were confronted by a nude woman in everyday situations. Lana wasn't naked now, of course, but each time Scott looked at her, he couldn't help but remember how she had looked when she was. He just couldn't think what to say. Thankfully, Lana didn't have the same problem as she broke the silence once they were halfway to Prospect Park.\n\n\"So, seen any good movies lately?\" she unexpectedly asked Scott.\n\n\"Excuse me?\" he replied.\n\n\"I asked if you've seen any good movies,\" Lana repeated. \"It's a safe enough question to break the ice and get a conversation started, or at least better than, what did you think of my boobs?\"\n\nLana's easygoing candor took Scott by surprise, causing him to need a few moments to answer her question.\n\n\"I actually saw Grease last night,\" he finally replied.\n\n\"On a date?\" she asked.\n\n\"What makes you ask that?\" he inquired.\n\n\"Well, it's not really a guy film, so I can't imagine you going to see it with a bunch of your buddies,\" she explained. \"So...\"\n\n\"Yeah, it was a date,\" Scott admitted.\n\n\"You get lucky afterwards?\" Lana asked.\n\nScott didn't give an answer.\n\n\"I'm going to take that as a no,\" she smiled. \"Not really any of my business, but I was just curious. I saw Grease the week it came out with one of my neighbors. I didn't really like it.\"\n\n\"Really, why not?\" Scott asked, thinking it hadn't been bad.\n\n\"I just thought most of the actors looked too old to be playing high school students,\" Lana explained. \"Oh, I know it's common to use performers older than the roles they play, but just about everyone in that movie looked to be pushing thirty. I did enjoy the music though.\"\n\nScott hadn't really given any thought to the ages of the actors; all of his attention had been focused on Wendy, rather than what was going on up on the screen. But now that he did think about it, they really hadn't looked like real high schoolers and he had to agree with Lana.\n\nThe conversation paused as Scott made the turn onto Ninth Avenue where he would run along the length of the park to Prospect Park Southwest. But Lana started it back up again once that had been made, and with a question he wasn't prepared for.\n\n\"Well, now that the ice is broken,\" she said, \"what did you think of my boobs? Not bad for an old lady, right?\"\n\n\"I... I guess I thought they were pretty nice,\" Scott finally said after careful consideration.\n\n\"Only nice?\" Lana inquired with a grin. \"Did you think that any of the other women at the shoot had better ones?\"\n\n\"No, I thought yours were the best,\" Scott said, thinking there was no other answer that he could give that she wouldn't be insulted by.\n\n\"Damn straight,\" Lana laughed. \"I've still got great tits!\"\n\nFrom Prospect Park Southwest they made their way onto Ocean Parkway, where the traffic again began to bog down. Much to Scott's relief, more innocuous topics dominated their chat, although Lana still managed to slip in a few personal questions that he only felt comfortable answering because he was never going to see her again. Anonymity, it seemed, bred honesty.\n\nThey were nearing the point where Scott needed to move over to the service road so he could turn off the Parkway, when he decided to ask a personal question of his own. Yet, even though he had already shared some of his own secrets, Scott felt the need to ask her if it was okay to ask.\n\n\"Lana, can I ask you a question?\" he said. \"It's a bit personal.\"\n\n\"Honey, considering that you've seen all of me that there is to see,\" she laughed, \"I think we're long past personal. Fire away.\"\n\nScott paused as he made the lane change, then, without taking his eyes off the road, he asked what made her decide to pose in the nude.\n\n\"Hmm, that is a good question,\" Lana replied, taking a breath to consider her response. \"I guess I could just say the money. It's not a lot, but it's a hell of a lot more than I'd make with a part time job at McDonald's.\"\n\nScott didn't have any idea what the models had been paid, but he'd assumed that it was a lot, based on what Mark had paid him -- and he hadn't taken his clothes off. Then again, if the photographer hadn't been in dire straits as far as getting an assistant for the day, it was doubtful he'd have been so generous.\n\n\"But it wasn't just the money,\" Lana continued after taking another breath. \"Having men still look at my body is, well, a bit of a turn on.\"\n\n\"And you don't feel self-conscious about it?\" Scott asked.\n\n\"Sugar, I didn't feel self-conscious about it when I was not much older than you,\" she grinned. \"So, I'm hardly going to feel that way now that I'm three times that.\"\n\nLana went on to explain that, back in the forties, she'd posed in a few of what were euphemistically called, 'pin-up magazines,' -- the more daring of which had included semi or total nudity. Some of the models in those books also posed for private photographs that depicted sexual activity, she added, but she had never been one of those women.\n\n\"Showing off the body God gave me was one thing,\" Lana expounded, \"but getting paid to have sex would've made me something other than just a model. Not that I've ever minded giving it away -- to the right guy, of course.\"\n\nScott wasn't sure how to respond to that, and thankfully he didn't have to as the traffic light turned green and he was able to make the right-hand turn onto Quentin Road. The house that Lana had given him the address of was actually on East 7th Street and, following her instructions, he pulled his car into the empty driveway.\n\nThe two-story brick house was similar to others on the block, semi-attached with a single driveway separating it from the next building. It was simple in design, but to someone who had lived in apartments all his life as Scott had, it might as well have been a mansion.\n\n\"Now it's time for us to say goodbye to all our company,\" Lana remarked as Scott put the car in park and turned off the ignition.\n\n\"What?\" he said, not understanding the reference.\n\n\"I guess that was a bit before your time,\" Lana smiled before again saying that she wished he'd let her compensate him for his trouble.\n\n\"That's not necessary,\" Scott insisted.\n\n\"Well, at least I hope that I didn't embarrass you too much with my questions,\" Lana said. \"My husband used to say that I had been born without a filter and...\"\n\n\"You're married?\" Scott interrupted, not having seen a ring on her hand.\n\n\"My late husband,\" Lana corrected herself. \"He's been gone almost twelve years now, but sometimes I talk about him as if he's still here.\"\n\nScott nodded his head in understanding; his grandmother constantly referenced his grandfather the same way.\n\nLana reached for the door handle, then paused, turning her head back toward Scott. Saying it was going to be just as long a ride back, she asked if he needed to use the bathroom before he started.\n\nA moment ago, that would've been the furthest thing from Scott's mind, but once the question had been asked, it would prey on his mind all the way home, until he would actually have to go. He had been that way almost his whole life, as his mother was wont to ask every time they left the house, no matter how short the trip.\n\nSeemingly pleased that she was at least able to offer him that, Lana led Scott down the driveway and through the side door of the first-floor kitchen, directing him to a phone booth sized half-bathroom just off it. When he emerged a few minutes later, however, she was nowhere to be seen.\n\nHe was about to call out her name, but then hesitated because he didn't know if they were alone in the house. All things considered, calling attention to his presence might not be the best thing. So, he simply waited there until, a few minutes later, Lana appeared from behind the door which he later learned led down to the basement. In her hand were two old magazines which she laid down on the Formica kitchen table.\n\n\"I suddenly remembered that I still had these down in the basement and thought you might find them interesting,\" Lana said to explain her absence, inviting Scott to sit down and take a look at them. \"My husband spent quite an amount of time tracking these down years ago, and it was pretty amazing that he found even one of them, much less two.\"\n\nCurious, Scott accepted the invitation and once he'd slid into the chair, examined the magazines. One was called \"Gentleman's Delight\" and the other \"Summer Nights,\" neither of which he'd ever heard of. Still, their format and the photos of the women within them bore a striking resemblance to an old copy of Playboy that his uncle once gave him as a sixteenth-birthday present. It had been the issue from the month he'd been born. He'd misplaced it somewhere over the last few years, but if he closed his eyes, he could still see the centerfold in his memory.\n\nScott had a pretty good idea why Lana had thought he might be interested in the old magazines, an assumption that was confirmed when he came to the pictorial on page nine of \"Summer Nights.\" There, wearing nothing that she hadn't come into the world with, was a younger version of Lana. The hair was much darker and done up in a long-outdated hairstyle, plus she'd gained some weight over the decades, but it was unmistakably her.\n\nThe photographs were mostly black and white and of mixed quality, nothing like what one might expect to see in even the cheapest magazines today. Still, they were riveting, and Scott couldn't take his eyes off of them.",
        "Backtracking to the start of the set, he saw Lana dressed as if for church, in an outfit strikingly similar to one his grandmother wore in the portrait his mother kept on the living room mantle. The second photo showed her in undergarments, of a kind that Scott assumed were quite racy for the time. The final shot was the antithesis of the first, with Lana stretched out on a couch wearing only a smile. An image clear enough for him to make out both her nipples and the outline of her bush -- the latter of which was just as full as it had seemed when he'd seen it live.\n\nIgnoring the rest of the magazine's content, Scott moved to the second magazine, noting as he flipped the pages that it was of higher quality and included some color shots as well. This time Lana had a more prominent place in the journal, with twice as many photographs as the first. In them, she looked to be in a park by a lake, dressed, at least initially, for a picnic with all of the traditional accouterments spread out on the grass. It didn't take many successive images for that not to be all that was spread out, as in them the long-haired brunette made herself increasingly more comfortable in the summer sun, working her way down along the shoreline, there to cavort in the water's edge in her birthday suit.\n\n\"I think I've aged pretty well, don't you?\" Lana said, leaning over his shoulder so closely that her right breast was stroking his shoulder.\n\nScott took the question to be rhetorical and didn't respond. Instead, he focused his attention on taking a second look at the photos of young Lana, as well as a few of the other models. None of the pictures were anywhere near as explicit as what you'd find on any newsstand today, but there was something about them. Thinking about it, he finally realized that it was that they weren't overly explicit that made them so interesting. They depicted what his uncle liked to call 'good clean naked fun.'\n\n\"I guess I can take that as a yes,\" Scott heard Lana suddenly say, causing him to lift his head up from the magazine to face her, confusion on his face.\n\nIt wasn't until Scott realized that Lana wasn't looking at the expression on his face, but at the bulge in his pants, that he understood her comment. The photos of her, and the others, had given him a first-class hard-on.\n\n'No need to be embarrassed, love,\" Lana said as she watched his face become flushed. \"If anything, I take that as a compliment.\"\n\nThen, before Scott could react, Lana leaned further over, far enough to reach down with her hand and lay her palm directly on his hardness. An even broader smile filled her face as she used her outstretched fingers to gauge the length and width of his manhood.\n\n\"Definitely nothing to be embarrassed about,\" she repeated as she gave his cock a gentle squeeze.\n\n-=-=-=-\n\nMuch later, when Scott would try and recall what exactly happened next, the best he would be able to come up with was a blurred memory. All he could be sure of was that one minute he was looking at the thirty-year-old nudes and the next he had his pants down around his ankles and in the next the woman in those photographs had his cock in her mouth. Between the two events was a vague recollection of Lana saying something to the effect that he had seen hers, so it was only fair that she now saw his, but that was it.\n\nBefore Scott even knew what was happening, Lana dropped to her knees and, with quick motions, undid the military style buckle of his belt and deftly slid down both his jeans and the boxer shorts beneath them. Without hesitation, the sexagenarian laid both hands on his cock, one cupping his balls and the other sliding up and down its length, her fingers stroking the sensitive skin. Then, in another quick movement, she took hold of his hardness and guided it into her mouth.\n\nScott let out a loud sigh as he felt the wetness of her lips wrap around his cock, her tongue sliding back and forth as she took him deeper into her mouth. The fingers of her left hand continued to grip the base of his hardness as her other hand slid down across his bare leg and then back up to the base of his balls.\n\nIt took a few long moments for the younger man's initial shock to fade, but once it did he was quick to react, tossing aside any thought as to the how or why any of this was happening. Lifting himself out of the metal chair, Scott braced himself against the edge of the table, making both himself and Lana more comfortable. As they shifted their bodies, she was reluctantly forced to release her hold on his maleness, but it was a prize she quickly reclaimed as she turned her attention to his ball sac, licking each small globe before taking them into her mouth, sucking each profusely.\n\n'Oh God, that feels good,' Scott thought as he arched his body backward, the delights of her mouth coupled with the press of her thumb against the underside of his crown.\n\nReleasing his balls, Lana again worked her tongue up along his cock, flicking the tip against soft flesh until, reaching the top, she again swallowed his length. It didn't take long for her to bring Scott to the edge of the precipice and, as he felt a familiar eruption building deep inside him, he began to pump his cock in and out of her mouth to speed up the process.\n\nUsually somewhere along the way, the girls he'd been with warned him against coming in their mouths. The exception had been Kari Farina who had practically drained him of every drop. Evidently, she really got off on it, as was confirmed by one of his friends who had also dated her. It stood to reason, Scott decided, that if Lana wanted him to pull out, she'd say so, or at least give him some kind of indication. Neither of which had been forthcoming.\n\nThe question proved academic as, a short time later, Scott climaxed like it'd been months since he'd done so, rather than less than a day, having taken matters in hand after Wendy had left him with blue balls. He exploded with orgasmic force, filling Lana's mouth with the fruits of her efforts, a treat she swallowed with a gusto that put Kari to shame. She continued to suck on his cock long after there was no more to give, only releasing it from her mouth when it began to soften and finally go limp.\n\nLana slowly rose to her feet, taking a large step back in the process. A broad smile filled her face as she reached up with her left hand and used its fingers to brush away a small spot of white from the corner of her mouth.\n\n\"I think I might owe you an apology,\" she said unexpectedly. \"Normally, I never get carried away like that.\"\n\n'You think,' Scott thought as, now that the excitement of the moment began to pass, he tried to come to grips with what had just happened.\n\nIt had been like a scene from that porn film he and his friends had seen in one of those sleazy theaters in Times Square, the night they went out to celebrate their collective eighteenth birthdays. But things like that didn't happen in real life, did they? Yesterday, he would've had a different answer than today, because obviously they did -- and just had.\n\n\"It certainly was the last thing on my mind when I accepted your offer of a ride to the train station,\" Lana added, \"but things just seemed to fall into place after that and, well, sometimes life presents you with opportunities that you just can't let pass by.\"\n\nEven as Scott listened to Lana's words, part of him wondered, at what point did she decide to act on that opportunity? It had to be when she'd invited him in to use the bathroom, he told himself; everything before that had been too random to have been part of a plan. Curious as to whether he was right, he was about to ask when an unexpected noise from behind them caused both to turn in the direction of the side door.\n\n\"Holy shit!\" Scott exclaimed under his breath, in a voice barely audible.\n\nStanding there by the side door was a slim woman in a light blue dress. Five six with curly grey hair, although the color didn't look as flattering on her as it did on Lana, the sixty-something years old wore a look of both shock and embarrassment. In her hands was a set of keys.\n\n\"Peggy,\" Lana said, her tone conveying recognition and surprise.\n\nThe unexpected guest didn't respond at first; her attention was still too fixed on the partially disrobed young man in her neighbor's kitchen. Or, more explicitly, on the now flaccid cock hanging free between his legs. The question remained, how long had she been standing there and how much had she seen? Then again, even if she had just walked through the door, she had certainly seen more than enough.\n\n\"I... I saw a strange car in the driveway and I just wanted to make sure you'd gotten home okay,\" Peggy managed to stammer as she finally pulled her eyes away from Scott and directed her attention to the woman of the house.\n\n\"Well, as you can see, I did,\" Lana replied in a calm, nonchalant tone, \"and as you can also see, I have company. So, why don't I talk to you tomorrow, okay?\"\n\nPeggy merely nodded her acknowledgement, as she was still having a hard time finding her words. She took one last look at the half naked man standing by the table, then quickly turned and rushed out the door, closing it tightly behind her as the self-locking latch slid into place.\n\nFollowing Peggy to the door, Lana reached up and slipped the deadbolt into place as well, apologizing to Scott as she did so for not having taken that extra step earlier.\n\n\"Was that the friend that was supposed to pick you up?\" Scott asked as he tried to compose himself.\n\n\"Yes, she lives in the house on the other side of the driveway,\" Lana replied. \"I hope her showing up didn't make you too uncomfortable.\"\n\n'Make me uncomfortable?' Scott thought, thinking that if anything, Lana was the one that might feel that way. After all, it was unlikely that he would ever see Peggy again, while it was obvious that she and Lana were friends.\n\nLana read the expression on his face and was quick to assure him that his presence in her home, even in the state he was in, wasn't a problem.\n\n\"She knows I have guests at times,\" she shared, \"some who even stay overnight. Like I said, it's not a problem.\"\n\n'Still,' Scott thought, 'how many of them were less than half your age, much less standing in your kitchen with their cock hanging out?'\n\n\"Well, as they say, no sense worrying about spilled milk,\" Lana smiled as she stepped back to the table. \"Peggy will get over it, or she won't. Nothing I can do about it now.\"\n\n\"I guess not,\" Scott agreed.\n\n\"You know, there's another old adage that I've always been kind of fond of,\" Lana said, seemingly changing the subject.\n\nScott merely replied with a quizzical look, having no idea where the conversation was going.\n\n\"In for a penny, in for a pound,\" Lana said, answering his unspoken question.\n\nScott still didn't seem to understand, so Lana clarified her statement most crystally.\n\n\"Or, since the damage, if there actually is any, is already done, why stop with just a blow job?\" she asked.\n\nLeaning inward, she kissed Scott, her tongue pressing against his lips until it slid them apart, allowing her to seek out his own tongue as she explored his mouth. Strange as it might sound, doing so felt far more intimate than having had his cock in it.\n\nScott had a similar thought. It was one thing to have an older woman give him head -- hell, given the right circumstances, he sometimes even thought he might let a guy do it -- but this, this was something he never imagined. The woman was older than his mother, and while this afternoon had taught him that women her age could still be seen as sexually desirable, that didn't mean he wanted to sleep with one -- did it?\n\nThe kiss went on for nearly a full minute as Lana glided her tongue deep into the recesses of his mouth, brushing it across the inner walls. As it did, Scott found himself responding to her entr\u00e9e and the difference in their ages began to fade from his mind, replaced by a more dominating thought -- damn, this woman could kiss.\n\n\"So, what's it going to be, tiger?\" she asked as she broke the kiss. \"Do you want to call it a day, or shall we see what other trouble we might get into?\"\n\nThere are questions in life that have really simple answers; this however wasn't one of them, Scott thought. Part of him said yes, while another cried hell no. The deciding factor finally proved to be advice his father had given him long ago, that it was far easier to look back on something and say it was a mistake than to do nothing and later wish you had.\n\n\"Trouble sounds like fun,\" he finally replied.\n\n-=-=-=-\n\nLana quickly took his hand and led him from the kitchen into the living room. From there they continued up the staircase to the second floor and the guest bedroom. It was simple in design, with the sort of furniture that you put together yourself. Not that Scott took much notice of any of it other than the small twin bed pressed up against the far wall. It looked to be a tight fit for two people, but then again, they weren't going to actually sleep in it.\n\nTurning back to Lana, he saw that she wasn't wasting any time, having already pulled up her top and now reaching for the clasp holding her bra in place. He began to undo the belt he had just refastened, but did so without taking his eyes off Lana as the plain white undergarment gave way, releasing her rounded mounds. That he had already seen them a few hours before barely lessened his excitement, as now he was going to do much more than just look.\n\nAs his pants dropped to the floor, Lana, having already divested herself of her skirt, slipped out of her shoes. Her panties followed just as casually and once they too were gone, she stepped over to the bed and pulled down the sheet. Scott meanwhile rid himself of what clothing he had left. Turning back to face him, Lana displayed a broad smile when she saw that his youthful cock had already regained some of its vigor.\n\nClimbing onto the small bed, Lana stretched out along its length and assumed an inviting pose. Scott took a moment to stand at the bottom of the bed, admiring a beauty he might not have even noticed only a day before. Then he followed her onto the narrow span, slipping in behind her as he reached out with his right hand and placed it on her left breast.\n\nThe warmth of her flesh was only exceeded by its softness as he squeezed it gently. Pressing his fingers against her nipple, Scott felt a shiver of excitement fill his body, one Lana seemed to feel as well. She reached up and, sliding her arm around Scott's neck, pulled him close enough to share a kiss. One filled with all the fire of the moment.\n\nOnce their lips parted, Scott laid a second kiss on the side of her neck, followed by a third and fourth as he continued to massage her breast. By the time he returned his attention to her mouth, his hand had worked its way across her stomach before sliding back upward to just under the folds of her breast, there to lift it high enough to reach his mouth.\n\n\"Oh yes, I like that,\" Lana said as Scott's lips closed around her thick tip, drawing it deep inside his mouth.\n\nScott suckled at her breast for long minutes, his tongue swirling back and forth as her nipple grew even harder. Lana ran her hand down his back, caressing his flesh and murmuring further encouragement. She twisted her body to give him access to her other breast, an invitation Scott eagerly accepted. He ran his tongue across the deep fold between her mounds, working its way to her other nipple, there to repeat his performance on its twin.\n\nLeaning back against the pillows, Lana allowed him to take his time as Scott briefly returned to the first breast, kissing it softly before taking hold of both of them and pressing them against the sides of his face. Slowly moving downward, he left a trail of kisses across her torso, preceded by the touch of his fingers as they danced ahead of his lips.\n\nAs his hand reached the gap between her legs, it came to rest against her hair-covered mound, where it applied just enough pressure for his thumb to lift the small hood covering her clitoris and for two of his fingers to part the folds beneath.\n\n\"Oh God, yes, that's good,\" Lana exclaimed, her tone reflecting her delight that she had definitely made the right decision in inviting the younger man into her bed. \"Just keep doing what you're doing.\"\n\nScott felt a surge of confidence that he normally didn't feel when he was with a woman. One that made him want to step outside of his comfort zone in pleasing the woman before him. Sometimes when he was with a girl, he felt like he was traversing a minefield and had to be extra careful to avoid any tripwires. Do the wrong thing, and what was expected to be a pleasurable experience might very quickly become a disaster instead. With Lana, however, he had the feeling that there wasn't any wrong move, or if there was, it wouldn't be a game killer.\n\nHe began to play with her pussy more forcibly, his hand rubbing hard against it, his thumb caressing her clit. Lana continued to moan softly, again letting him proceed at his own pace. Encouraged, Scott lifted his body and shifted to the bottom of the bed, there to place himself between the older woman's legs.\n\nOf the three girls Scott had been intimate with, he'd performed cunnilingus on two, finding he enjoyed it greatly. There had been Stephanie, of course, with whom he'd also traded virginities, and his second real girlfriend, Maureen Borelli, although she hadn't seemed too pleased with his efforts in that regard. The third, Diane Rogers, who he'd dated a few months ago, turned out to be more than willing to spread her legs after only a few dates, but, much to his disappointment, she had an aversion to any form of oral sex, describing it as repulsive.\n\nAs he spread Lana's legs, bringing his head in closer, Scott carefully examined her sex. More specifically, he was looking for differences between it and those of the much younger versions he had seen before. He didn't know why he expected it to be different, but he did. Yet, aside from the color of her pubic hair, and the greater abundance of it, it really didn't look any different than Stephanie's or Maureen's. And as he pressed his mouth against it and reached out with his tongue, he found that it really didn't taste any different either. At least no more so than Maureen had differed from Stephanie. For the briefest of moments, Scott had hesitated, recalling the often-heard adage about older women being nasty down there. He was delighted to discover that, in Lana's case at least, that was far from true.\n\nAs he continued to probe her inner reaches, adding his fingers to the efforts of his tongue, Scott could feel Lana's body quiver with delight. She lifted her right leg and laid it across his back, allowing him to assume both a more comfortable position as well as increase the frequency of his oral penetrations. A steady stream of soft moans spilled from her lips as she slowly rocked side to side, one arm cushioning the back of her neck and the other gently stroking her breasts.\n\n\"Oh yeah, right there,\" she called out as Scott happened upon a particularly sensitive spot, \"just keep doing it right there.\"\n\nShe reached down with the hand that had been playing with her breast and placed it against the back of his head, keeping it from moving away from where she had directed him. The action proved superfluous, as the young man was so thrilled by her reaction that he had no thought of moving, or even slowing down. If anything, he nearly doubled his efforts, alternating the motions of his hand with that of his mouth.\n\n\"God, you are good at this,\" Lana echoed softly as waves of joy danced across her excited flesh.\n\nWaves that continued to build until, in a sudden surge of pleasure, her body exploded as a highly pleasing orgasm washed over her that caused her to quake so forcefully that Scott was momentarily taken aback. None of the women he'd been with before had ever climaxed so forcefully.",
        "He recovered quickly, though, climbing out from between her legs and lifting himself back upward to where their mouths could again meet. Lips locked together and tongues once more intertwined as Lana expressed her appreciation of his gift. Her hands closed around his upper arms, pulling him even closer to her as one kiss became two, then three, until they quickly became too many to count.\n\n-=-=-=-\n\nAfter laying together for a few minutes while each of them regained their breath, Lana shifted her body until she was perpendicular to Scott and, lowering her mouth around his cock, engulfed him once more. Her motions were slower now as she took her time exploring his cock, running her tongue around and across its crown before sliding it again down her throat. This time her objective was not to make him come, but simply to bring him pleasure as a prelude of what was to follow.\n\nLeaning across his body, Lana took hold of the base of his cock and began to gently pump it in and out of her mouth. At the same time, Scott reached over her hip and placed his hand against her mound, easily slipping the tips of his fingers past the still wet folds to stroke the sugar walls beyond. They went on that way for what seemed the longest time, each doing just enough to keep the pot simmering, but not letting it come to a boil.\n\nWith one long last lick, Lana let Scott's cock slip out of her mouth and, after tilting her head back to share another deep kiss, again shifted their positions, causing him to withdraw his hand as well. Lifting her leg high with her arm, she made it possible for Scott to take his cock and guide it to the entrance of her sex. He rubbed the tip against the well saturated mound a few times, covering the head with her nectar until, with a soft push, he pressed it inside of her.\n\nAn entry heralded by a long, loud moan from Lana as she savored the press of his hardness as it filled her. It took little effort for Scott to become completely buried within her, and even less to slide back out, or at least half way, at which point he pushed forward again. An effort he repeated until he'd built up a rhythm that quickly became automatic.\n\nLana again urged him on with a series of soft moans and gentle encouragements, alternating both with quick kisses as she rocked back and forth, her body keeping time with his. Scott's cock was far from the biggest she'd ever had in herself, but it was certainly enough to get the job done.\n\nAs Scott laid his own hand against Lana's on her raised leg, the older woman removed hers and moved it to where she could take hold of his ass cheek, adding her strength to his, increasing the force of his thrusts. She did that for a while, then again moved her hand, sliding it over her thigh until it came to rest against her clitoris. There she followed a well-trodden path along the road to paradise, ensuring that her journey would be short indeed.\n\nEven though he lacked the experience of her previous lovers, Scott could tell that Lana was close to climax. Determined that his would be the hand that took her there, he climbed off of her, withdrawing his cock in the process, then moved behind her to again slide his cock deep within. He took hold of both of her legs and began to furiously slam his cock in and out of her, the motions of his body quickly becoming a blur.\n\nHis renewed effort proved effective as Lana again felt her body rock again and fill with an even greater burst of passion than before. One that caused every part of her to explode with orgasmic delight. Scott responded as well, pulling out of her even before the force of her climax began to subside, flipping her over to kiss her once more.\n\nIt wasn't until long moments later, once she'd regained her composure, that Lana realized that Scott hadn't had his own orgasm yet. Normally, it was all she could do to make the man she was with last until she also reached the finish line, so, the younger man's failure to finish came as quite a surprise.\n\n\"Sometimes it takes a lot for me to get there,\" Scott said, his tone almost remorseful.\n\n\"You say that like it's a bad thing,\" Lana laughed, her expression displaying the opposite as she reached down and gently ran the tips of her fingers down the length of his cock, finding it still quite hard. \"Trust me, it's not.\"\n\nFilled with an excitement she hadn't felt in years, Lana pressed Scott down on the bed and kissed him fiercely on the mouth, quickly working her way down across his chest, taking the time to tease each of his nipples with her tongue. At the same time, she reached down with one hand and took hold of his cock, holding it straight up until her mouth could again swallow it whole. She only sucked it for a minute or so, then swung her body around until she could squat above him, his hardness still in her hand as she slowly lowered herself on top of it.\n\nScott's previous experience with intercourse had been confined to either the missionary position or doggy style; the latter, he'd learned, most girls hated the name of, but loved how it made them feel. What Lana was now demonstrating, she explained, was called 'cowgirl style,' and she got so into it that any moment Scott half expected her to cry out 'yippee ki yay.'\n\nHis cock moved in and out of her like a well-oiled machine, which in a way was exactly what it had become. It became so automatic that she was able to split her attention and, leaning forward, again bring her breasts within reach of Scott's mouth, pressing the hard nipples against his lips.\n\nA loud sigh passed from her mouth as Scott sucked and teased her areolae with the attentiveness of a hungry newborn. Back and forth he moved between her large breasts, covering them with tiny kisses and playful bites, both of which added to the pleasures radiating from within her core.\n\n\"Oh yeah, baby, suck my tits,\" Lana cried out as she arched her back to give him better access.\n\nAs Scott continued to suckle at her mounds, Lana reached down with her hand and again found her clit, adding the press of her fingers to that of the young man's cock. She knew that he was so very close, and wanted his impending orgasm to be one that he would remember for a very long time. Pulling herself back out of his reach, she began to slam against his hardness with ever increasing ferocity, her body thrashing about in uncontrolled gyrations that sent her breasts bouncing in every direction.\n\nThen, at what seemed the last moment, she cried out one last instruction to Scott, in a voice forceful and determined enough to cut right through the pre-orgasmic fog.\n\n\"... my ass,\" Lana cried as she disengaged herself. \"I want you to fuck me in the ass!\"\n\nIt was something that Lana hadn't done since her husband had passed away, but had been part of their sexual repertoire for years. She had never shared it with anyone since, but felt that now was the time to do so.\n\nIf there was one act that every girl Scott knew still considered taboo, it was anal sex. It was the one barrier that none of them were willing to cross. That idea was so ingrained in Scott's consciousness that it took him what seemed like a very long moment to comprehend what Lana had said.\n\nBy the time he did start to react, Lana had already lifted herself off of him and, leaning forward, was redirecting his cock along the forbidden path, pressing the head of it against and then past the tightness of her sphincter. Normally, she would've spent a bit of time preparing herself before doing this, especially with someone inexperienced. But what was life without a bit of adventure, she told herself, or a bit of pain in search of a greater pleasure.\n\nWith only the remnants of his previous efforts to help smooth the way, Scott began moving his cock in and out of Lana's ass with increasing speed, feeling an excitement he hadn't felt since his first time with Stephanie. It didn't take long for the woman now beneath him to make the transition from pain to pleasure, a change signified by the return of loud and repeated enticements -- all urging him to bring it home.\n\nAnd barely a dozen breaths later, Scott did just that, his body thundering with the force of a heart shattering orgasm more forceful than he'd ever experienced. One that left him so drained that he literally collapsed from exhaustion, even as the last of his climax exploded into her.\n\n-=-=-=-\n\n\"Hey Scott, you still alive?\" he heard Lana say as he finally opened his eyes a short time later.\n\n\"I think so,\" he replied, taking a deep breath as if to assure himself that he indeed was.\n\n\"Good -- you had me worried there for a second,\" she laughed as she climbed up next to him and planted a soft kiss on his lips.\n\n\"That was... amazing,\" he said as he drew himself up into a sitting position after the kiss.\n\n\"I'm glad you liked it,\" she replied with a grin. \"I know I certainly did.\"\n\nSlipping off the bed, Lana picked an old robe from out of the closet and wrapped it around herself. She suggested that Scott might like to use the shower; if so, he could find a bath towel in the linen closet down the hall. Glancing down his sweat covered body, the younger man decided that might not be a bad idea.\n\nBy the time he'd cleaned up and dressed again, Lana had already done the same and was back down in the kitchen. He had half hoped that she might surprise him in the shower, but to his disappointment that didn't happen. Still, today had been a day he wouldn't soon forget -- if ever.\n\nHe had also wished that they might have a chance to talk a little about what had happened, but Lana practically rushed him out the door, saying that her daughter was going to stop by with the grandkids in an hour and he had to be long gone by then. That more than anything else reminded him of the difference in their worlds and also made him realize that he had to accept what had happened today as just an incredible adventure, one not to be repeated.\n\nAs he stepped out the door, Lana told him to wait a moment and for a second, he thought she might kiss him goodbye. In anticipation, he glanced up and down the driveway to see if anyone could see. Remembering her neighbor on the other side of the driveway, he checked the windows facing it as well.\n\nBut no kiss was to be had, as instead Lana simply pressed a thin paper bag into his hands, saying it was a little souvenir that he could take with him. Glancing inside as she closed the door, Scott saw it was one of the magazines she had appeared in, the one with the picnic.\n\nThe ride home was just as long as the one getting there, leaving him so tired that when his buddies called to ask if he was going to the club with them, he decided to pass and turn in early.\n\nIt wasn't until the middle of the night when he woke up that he decided to take a better look at the magazine she had given him. Picking it off the table where he'd tossed it, Scott almost missed the small piece of personalized stationery that fell out of it onto the floor. As he picked it up, he noticed that it was also scented.\n\nThe note was short and simply read, \"Sorry we couldn't share the shower, maybe next time,\" and at the bottom was a phone number.\n\n'Next time' - words that echoed over and over in Scott's head.\n\nWere there any more beautiful words in any language? he thought.\n\nEND"
    ],
    "authorname": "Ann Douglas",
    "tags": [
        "intergenerational"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/no-more-beautiful-words"
}