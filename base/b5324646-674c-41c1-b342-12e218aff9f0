{
    "title": "A Big Shiny Blue Marble Ch. 31",
    "pages": [
        "***Cha'Khah's life has taken an upswing and, being the Drowess that she is, she never forgets to show her thankfulness to her goddess.\n\nShe's just not prepared for the other things that come with it all. 0_o\n\n---------------\n\nBook of the Mountain Clan Part 8\n\nThe morning was one of many surprises for Cha'Khah as she learned more about Barrett. He found out in their conversations that she didn't really have much more than what she wore to come to see him, and it was obviously suited more to combat. \"If I have a little money, I seem to buy weapons or what I need to keep mine in good repair,\" she shrugged.\n\nHe looked at her with a smile, and led her upstairs to the loft where she stared and laughed, \"I could have been lying with you in a fine featherbed instead of rolling in front of the hearth with you? Cha'Khah is still a fool, but now she is a happy fool. And where we were last night was where I have always wanted to be.\" \n\nIn a closed section at the back, he dragged out a trunk.\n\n\"My mother never threw out a thing,\" he smiled, \"and you might find something that'll fit you. Take a look, and if you still love me by the spring, we'll go into town and buy you something new when the passes are clear and we can get there.\"\n\nHis world spun then and he found himself under her on the bed, and she was serious as she glared at him. \n\n\"You have done it again,\" she said, \"and I wish for you to stop it. If we are not together by the spring, it will be because I have killed you by accident in my rage over how you speak about yourself. \n\nYou are mine, Barrett, and I keep what is mine. \n\nI know that you meant what you said to me last night, but I meant it too and you need to know it. I listened as you spoke of what happened to you. I thought about what I found in my arms after so long with no hope of ever finding something so much less than you are in your heart. I made my choice then.\n\nI will never leave you, never. From last night, I am Cha'Khah Dreile no longer. I am Cha'Khah Ransom and you are my man. Tell me that you understand me. I wish for no mistake over this.\n\nYou are mine, yes?\"\n\nHe nodded, \"Yes, Cha'Khah. I didn't mean to make you angry. I'm sorry.\"\n\n\"I am not angry, Barrett, I am annoyed, but it passes now. I am sorry if I sound hard to you, but it is important to me. Think a moment. We are our own now. When you lower yourself, you lower me as well.\"\n\nHe was a little shocked, but he saw it now, \"You're right.\"\n\n\"I know that I am,\" she smiled, \"and if we are to quarrel and bicker, then I want a better fight from you than this the next time,\" she chuckled, \"or I will never be able to stay angry for very long and what is the good of that? I am yours just as much, and you are the only one that I will ever take hard words from, because we love each other and I am your female. I would kill anyone else.\"\n\nHe looked as though he was in a trance then.\n\n\"Are you alright?\" she asked, \"What have I said?\"\n\nHe shook his head, \"I just felt funny right then, I don't know what it was. And I also realized that you're right again,\" he said as he threw his arms around her and pulled her down to kiss her. \"How do we do this?\" he asked seriously, \"How do Drow people get married? Or do you want to get married in town? I don't care, I'll do whatever you want.\"\n\n\"Then do nothing,\" she smiled, \"but begin to think of me as your wife, since I took you as my husband from last night. I did say that I had decided.\n\nDrow give each other rings, but I think it is more of a show than anything. I knew a girl who married a boy, and the wedding helped them both in their positions and how they were seen afterwards. It was a fine show to watch, and by the next afternoon, they were each back in the arms of their lovers again. \n\nWhen they wished for it, they fucked together, and they made drowlings, but he had already fathered at least two with his lover, who was married to another, and of course, he had to try not to look at his own drowlings too hard, in case he saw who the father might be, since she fucked with his brother most often as well.\n\nI need no ring from you, Barrett, if a ring buys me something like that.\"\n\n\"I have my mother's rings,\" he said, \"You can have anything that you want, but if there is one that fits you and you like it, then take it and wear it for me until I can get you a good one. The box with her rings is over there.\"\n\nCha'Khah saw that he was serious, so she got up to look. As she looked, she found several which appealed to her. \"I can have any one of them?\" she asked.\n\n\"Are you my wife?\" he smiled, \"Then they already belong to you, all of them.\" He began to look through the chest, wanting to find something for her to wear. He didn't think anything there was good enough to offer her, but they were here in the mountains, and as far as he knew, she needed clothes.\n\n\"Which of them are suitable as a wedding ring?\" she asked, \"I do not know the custom here, and do not wish to embarrass you.\"\n\n\"How would that embarrass me?\" He asked. \"Try to narrow it down to what will fit on the third finger of your left hand,\" he said, \"and it can be anything from simple to fancy. My mom and dad weren't rich, but I think there ought to be several. Pick one if you like it, and you won't embarrass me. I'd be proud to be with you anywhere. It's only until I can get you one that you'd want.\"\n\n\"Then if these have no meaning to you, I would sell them in the spring and buy something practical. I have a ring that I would want as my wedding ring. I've had it from when I was a maiden, just as I came into my own as a fighter. It is what I always wanted as a wedding ring. Would that be alright?\" She asked, \"I do not wish to insult you either.\"\n\n\"I'm sure that it'll do fine, then,\" he smiled, \"I'd just like to have my wife wear a ring, but only if you want to.\"\n\n\"What ring will you wear for me?\" she asked, taking the pendant from her neck that he'd seen in the light of the fire the night before and that she'd known that he'd wanted to ask her about. It was a silver one which bore a nude dancer with a sword on it. The motif was set above two circles in the background. She found the tiny catch that she sought and pulled the rings free. \"Would this one be alright?\"\n\nHe'd watched her and now he understood a little better. He supposed that he'd better get used to being amazed. \"This person here,\" he pointed to the pendant, \"This is the Dark Maiden, isn't she?\"\n\nCha'Kha said nothing, she only nodded a little hopefully.\n\n\"And the ring that you spoke of is here, isn't it?\"\n\nWhen she nodded, he said, \"Then these are the rings we'll use. You should have just told me. I know that you're probably going to want to teach me about this, and I'd love to learn, Cha'Khah. You should have said something. Don't always let me stumble to things. I know that I'm not supposed to say that I'm not very bright around you. Sometimes things take me awhile, that's all.\"\n\n\"Sometimes one's slow thought brings out a deeper meaning than what a quick thought shows,\" she smiled as she looked at him softly -- just before she pushed him down.\n\nHe was back on the bed again, laughing with her in his arms. Before long, she was on top of him, but she didn't want anything but slowness from him now. They didn't notice the passage of time very much. The previous night, Cha'Khah had found that if she was careful, they could copulate very slowly with her on his chest, and she could put her head down. It was amazing.\n\nBarrett found that he liked it when she sucked his nipples then.\n\nHe didn't know when it happened, but the rings were on their fingers then, and he was amazed to find that the one on his hand fit perfectly.\n\n\"How do you feel now?\" she asked him.\n\n\"Uh, married,\" he smiled, \"I feel married, pretty much.\"\n\n\"No,\" she said, \"I meant what you said that you felt earlier.\"\n\nHe shrugged, \"I feel a little odd, but in a nice way. Why?\"\n\n\"Nothing, Barrett,\" she smiled, \"just as you are often a little obvious, I am a little hidden. I seek to solve a problem for us before it begins, and I believe that I know the way. I will not tell you, so you will have to guess,\" she grinned, \"but I can say that it is not bad thing.\"\n\n\"I'm gonna have a headache over all this deep thought,\" he said, \"that's what usually happens. Can I at least have a clue?\"\n\nShe thought about it coyly and then she nodded, \"When a Rivvil is most of the way to becoming an adult, but is not quite there yet, it can be a time of trouble, no? The body of an almost adult and the mind can still be prone to making childish decisions. Mistakes can be made then which might take a lifetime to undo -- if they even can be at all. You know the time of which I speak? How is this called for Rivvin?\"\n\n\"I think that what you're talking about is what we call being a teenager,\" he nodded.\n\n\"And how old would a young Rivvil be then,\" she asked, \"in years?\"\n\n\"Let's say from fourteen to eighteen,\" he said.\n\n\"How old do I look to you, husband?\" she smiled.\n\nHe thought that he was a dead man, but she laughed at him when he said, \"Twenty-five at the outside.\"\n\nCha'Khah began to look through the trunk of clothes, \"We grow slower than Rivvin,\" she said, \"The troublesome years to you, we do not reach until we are well-past forty. I am over a hundred years old,\" she smiled, \"yet by the length of our lives, I am your twenty-five year old wife. There lies the trouble for us. We will have to see, but it is my hope that what I give will keep you young.\"\n\nShe shrugged, \"We will have to see.\"\n\nShe found many articles of clothing which would fit her and were still in good shape. \"I like so many of these things,\" she sighed, \"but I do not know how to wear them -- what goes with which. Can I bring my friend Rachel to help me one day?\"\n\nSure,\" he smiled as he led her to a door off to the side, \"Open this and take a look. I'm a little proud of this.\"\n\nCha'Khah opened the door and gasped as she walked inside. At the rear of the house was a greenhouse which flourished all year round. She wandered through slowly and looked around in wonder, \"It is so warm here, \"she said,\" How cold does it get at night?\"\n\n\"At this time of year, it cools off a lot,\" he said, \"but it's still well above freezing in here every night. In the summer, it's like being in a jungle late at night.\n\nBut the two main surprises came to Cha'Khah later on in the day, after he'd spent some time checking on his herd. The first thing was his knowledge of electricity and electronics, something that he'd taught himself from books out of his fascination with the subject. It didn't serve much of a practical function, but it was his passion. By then, to a world which had forgotten its own technology, this was arcane wisdom, to know of such things.\n\nThe second thing was his collection of old firearms. It wasn't extensive, but he had a few. \"Why, Barrett?\" she asked as she looked at them.\n\n\"It's a bit of a look back at the way that things used to be for people, I guess, just like electronics. I had a business once, fixing things for people, but there isn't a way for a lot of things to be used anymore and it turned onto something where folks would just bring things in to me to ask me what they were used for. Of course, none of them wanted to pay for that, so I went out of business. These old guns, I don't keep one if I can't keep it in good shape and if there's nothing useful about it. Also, I need to be able to get a mold to cast the right size bullets so I can load ammunition for it.\"\n\nHe picked up a slightly chipped box and handed it to her. It looked well-made and it had been polished and it was a bit heavy, but it had once seen a less proud day, she thought. She wondered what was in it, so of course, she asked.\n\n\"A wedding present to the only woman who would likely appreciate it -- I hope. Don't open it yet. Let's bring it back to the front room. I want to see your face when you open it there.\"\n\nCha'Khah wanted to rattle it, but thought it best that she didn't. When they got to the table, she set it down and asked if she could open it. He nodded.\n\nShe clicked open the old latches, and slowly lifted the oiled walnut lid, lowering her head to peek a little as she went. The smell of ancient velvet and oil came to her nose, but she gasped when she had it open enough to know what was in it.\n\nIt was two sets of small pistols, one gleaming and reflecting the light, and the other absorbing it. They carried a lot of fine filigree work on them and were inlaid here and there with gold. The grips were ebony wood. A girl like she was knew that they were weapons and the work that they carried on them told her of their worth, but as she lifted one, she wondered about their practical value.\n\n\"These are Derringers,\" he said, \"they were valued because they're the smallest practical weapon. This design is the most famous. They were favored by women and gamblers because they're easily concealed. Women called them muff guns because they could be kept hidden in a muff if one was out walking on a cold night, but they could also be carried about anywhere.\"\n\n\"What is a muff?\" she asked.\n\n\"It's a tube of fur,\" he smiled, \"You carry it in front of you and you stick one hand into each end to keep them warm.\"\n\nHe pointed to the pistol which she held, \"each of them holds two shots, but they're not the same. That one holds two small calibre cartridges. They don't make much noise, and they were used by some assassins. They work best if you hold them up against someone's head, just behind and a little under the ear. It leaves a small hole and the bullet doesn't usually leave the skull -- though I can't say as I've ever tried it.\n\nThe other one carries the surprise. One barrel holds a good-sized pistol cartridge, enough to kill like a regular pistol, and the other barrel holds a small shotgun shell. Small package, big surprise.\"\n\n\"They are all lovely,\" she said, \"You will teach me to use them, yes? Why is one set shining and one dark?\"\n\n\"A matter of personal choice for where the gambler or the lady was going to be spending the evening, I'd guess. Maybe it was to match the choice of clothing, I sure don't know, but I thought you'd like them. I have ammunition for them so you can practise if you think that they'd be of value to you, otherwise, I'd suggest that you just have fun with the small-barreled ones,\" he shrugged with a smile.\n\nCha'Khah's violet eyes shone as she grinned, \"Show me.\"\n\nHe took her outside and taught her how to load and select the barrel that she wanted to use. Afterwards, he showed her a small board that he'd set up, and it took her no time to become proficient, since they felt like her crossbows in her hands and were even smaller.\n\n\"You'll have to make sure that you're holding on well when you use this one,\" he said as he handed her the other one of the set that she'd chosen for this, \"and you can forget all about being quiet too.\"\n\nShe smiled as the bullet from the first barrel left a large hole in the board. When she used the other barrel, the board disappeared and her hand stung. She smiled and took his arm as they walked back to the house, \"Cha'Khah is a very happy girl. Thank you, Barrett. I have seen Shaevre fight and it makes me feel a little old-fashioned with my weapons, though they are not for the same purpose. These are not either, but now I also have weapons which spit death and mine are so beautiful.\"\n\nHe showed her how to clean them and after cleaning her hands, she made love to him all afternoon. Barrett made the dinner that evening and she sat nearby, looking at each of the four little pistols, one after the other and admiring the beautiful workmanship in each one of them. She'd never been given anything so wonderful as a gift.\n\n------------------\n\nTheir visit to the mountain went a little strangely at first, but Barrett found himself welcomed and Cha'Khah's fears turned out to be unfounded since she'd prepared him for it. Vadren took him aside for a few minutes and the conversation surprised Barrett a little, but the Drow mage smiled, \"My cousin and I are close and we have both always wanted and hoped to find a mate for ourselves here on the surface. That she has found love with you gives me much hope for myself.\"\n\nAfter talking with Vadren for a time, Barrett looked for Cha'Khah and found her with Rachel and Selena. All that he knew was that Cha'Khah had asked a question but he hadn't heard what it was. Rachel was nodding with a grin as she answered, \"Oh, he's a cutie, all right.\" The rest had been lost in their laughter.\n\nAs he was shown around the complex, Barrett grew a little excited after getting over his initial awe of it, and he asked for some portable source of light which didn't involve an open flame. Vadren provided a shining jewel and Barrett was off with the pair of Drow and Azrael behind him as he walked quickly looking at the overhead conduits and following them until they stood in a large room which had been largely ignored by them all. Barrett went to one of the large object which sat in the middle of the floor and followed a set of tubes from there elsewhere. \n\nFinally, he turned and grinned at them as the others caught up, \"Those two large tanks are full to the brim with diesel fuel,\" he said, \"and I don't know why, but it still smells good. I've never smelled any that was this fresh-smelling. Maybe it's the air here, I don't know. Over here,\" he said, leading them back to the objects, \"These are diesel engines. Attached to each one is a generator to make electricity. Once the engines are running, they turn the generators and the electricity powers this whole place for as long as the fuel lasts.\n\nYou might want to decide if there's anything here that you want powered up. You give me a day or two, and I can give you some light. I'd suggest only using a very few things. Out of that bank of motor generator sets, using the small one there, you could have power for a long, long time, if you were careful. The small one was put here to be started first if everything failed. The power from that one would be used to start the others. I might need to re-route some cables, that's all. I'd need some help with that - it's a bit of work.\"\n\n\"Why would we need it?\" Azrael asked, \"We've been here over a year, half of us, and Cha'Khah, Vadren and I have been here for years before that. We've never needed it.\"\n\n\"I've only been here maybe an hour,\" Barrett said, \"but I've seen a lot. How would you like to be able to cook a single meal with no fire in a few minutes? There are microwave ovens here. I'm sure most of them would still work.\" \n\nHe turned to the females, \"I'm sure that every single one of those living quarters has a hot water tank.\" He turned to Azrael and smiled, \"How much would it be worth to you to be able to have a hot bath or a shower?\"\n\nThe look on only the women decided it for Azrael, \"How long would the fuel last?\"\n\n\"I don't know,\" he said, \"but I think this place was built with the idea of being able to be lived in by everyone who was inside when it was closed up for at least a month, at some reduced level. If I can get everything working for you, and everyone is careful and only uses what they need when they need it, I'd say it would last you years. There aren't a couple of thousand people here. You'd never have much power, because the small generator wasn't made for running the place, but it's what you'd want to do. I could use it to start one of the big units, but these things use fuel even if no electrical things are on. I'd suggest just the small one, and shut it off every night.\"\n\nThey went back to the bar to eat, and it was decided to try, with all of them helping with the cattle if they were successful. \"If this all works, you could keep a smaller herd, only what we'd want, and we'd provide you with whatever you'd need. Arrax needs help to maintain his skiff, someone who understands technical things as he does. With that, we've already made ourselves a lot of gold.\"",
        "Barrett grinned, \"With power, I'm sure that I can get at least one old computer to run, though I might have to build several to get one that runs for a while. If I can find the server room for this place, I'll be able to get to some records someplace. The old internet might still be up. It's an ancient legend, but I'll bet it's still there, just not used much -- it all depends on power. If I can find what I have in the back of my mind, I'll be able to tell you where to look for one of the old mints -- where they stored gold. That's all a really big 'if' though.\"\n\nAzrael looked at Vadren and then at Dahlgren and the others. \"Welcome to Cheyenne Mountain,\" he laughed, \"I think that we need Cha'Khah's husband here with us.\"\n\n-------------------\n\nBarrett amazed them all, even Arrax, as he slowly worked to bring the old mountain to life on a very limited scale. But it did all work as he'd said that it might and after only one 'job' at a gold depository, they had enough to live far better than comfortably.\n\nLate one morning, Cha'Khah was walking to her 'other ' home to see Barrett and bring him a midday meal of a few sandwiches, since he was busy harvesting in his greenhouse so that they'd all have vegetables for the week. They lived together with the others inside the mountain, but his old home was another place for them when they wanted to be alone. \n\nHer life had turned into a happy existence with her husband. They'd had a few fights, the same as any couple might, and she laughed as she remembered the last one. She didn't mind fighting with Barrett. It always made them even closer and the sex began between them before it was even settled.\n\nThe late winter had brought some unsettled weather and the spring melt would come soon. She was thinking about that and all of the mud that would come into the house when she heard it -- the snarling and the cries. She was running the next second, flying over the snow.\n\nShe found a young female wild elf trying to hold off a pack of a dozen wild dogs. One look told her that this was almost over, or would be soon. The elf fought feebly, badly torn as she was, though out of the dozen, three lay dead and another four were well out of the fight. \n\nWhat she saw drove Cha'Khah to fury in an instant, but she knew that she was far too late. The elf girl sagged to the snow as Cha'Khah sprang to her defense, throwing faerie fireballs to light up the dogs farther away, and slashing the nearer ones to pieces in her wrath. She could admire the wolves, and she could even abide the coyotes, not caring for those ones especially, but wild dogs were things which she now had a reason to hate. \n\nWolves kill by going for the throat most often. It was very much their trademark way. Coyotes tended to tear their prey apart, but at least it was a little honest as well. Dogs did the same thing, but to Cha'Khah's mind, from what she'd seen even before this, they tended to enjoy it far more.\n\nBut the snow was already red, and the smell of blood drove the pack crazily. The slaughter took her less than two minutes, but that wasn't the issue for Cha'Khah. It was that she'd heard them a little too late to be able to do much more good than to get them off of their victim. The conclusion to this was sadly obvious to her as she came closer. She was troubled as to why the girl had been losing this fight, but she saw that she was very weak as well.\n\nLanguage was not an issue, they found that they could understand each other easily, \"I am sorry, I only just heard your cries,\" Cha'Khah said as she knelt to see what she might be able to do.\n\nThe elf stared a moment. \"I thank you for your aid, \"she gasped, as she tried to hold what she could of her insides, while trying to ignore what lay around her. \"I pass soon. I would be glad, but, ... help me in a different way, sister,\" she gasped through her teeth as she tried to move a little. \n\nCha'Khah stared at the tiny bundle a little under the elf in the snow. Now she had a clue as to how the dogs had managed to run her down as they'd done. The girl had been driven to make a hopeless stand.\n\n\"Where is the father?\" she asked as she lifted the infant to give it to the girl, \"Tell me where I must take the child and I will do it.\"\n\nThe elf smiled through her pain, \"My great luck to find a Drow who I can see is different from the rest on my last day. The father was human, a young and learned mage that I loved, but our families, ... \n\nMy brother killed him and I was cast out. I sought to find work in the towns but none trust us. It must be the same for you sister. I have been growing weaker trying to keep us both alive in these strange woods. I still have one good teat, help me please. The other one is ruined now.\"\n\nCha'Khah nodded trying to look past the inevitable as she placed the mother's tattered arms around her child, \"I cannot do much to help,\" she said very sadly, \"other than to ease your passing if you have need. This is foul to see, an end such as this for one of us, and a mother with child as well.\"\n\n\"An end of some sort comes to us all,\" the girl sniffled, \"I think that mine has been coming to me for a time. I have done my best but we are starving. I barely make any milk at all. Please, ... I do not know how to ask it and I mean no insult, ... please do not sell her. If you would, ...\"\n\n\"Never,\" Cha'Khah replied, as she reached to hold the girl's hair back for her, \"I will do what I can for her, I promise it. Only give me names for you both, my sister, so that I might tell her of her brave mother one day.\" \n\nShe found herself meaning her words very much as she looked on with regret. Given what was spreading through the dirty snow around them and the torn flesh which was everywhere on the mother, Cha'Khah knew that the babe was likely only a few minutes from being orphaned.\n\nThe elf girl bent her head to kiss her child's head and then gasped her way through a spasm of pain, \"Xunafae I am, and Mo-Wenn she is. Tell her for me that I loved her. Where we came from does not matter. There are none there who are worth the knowing that I pass. \n\nShe took a few labored breaths to speak and she looked down at her babe, \"Her father was Aldred. I have been seeking a mighty mage of your kind who is said to have perished down below. But I feel that he lives on the surface. Vadren his name is and he was a friend to Aldred and me. I knew him first and took him to my bed whenever he came, but he disappeared and then Aldred was my male. I have been searching with a hope that he might want an elf girl.\"\n\nAs she spoke, Cha'Khah's mouth fell open, remembering the way that her cousin would drift away sometimes when they were exploring the surface with Azrael to meet them later when they returned to go below again.\n\nXunafae looked up searchingly, \"Who are you, sister? I feel that you are a mother yourself.\"\n\n\"I was,\" Cha'Khah said quietly, \"for a few moments before the matron of my house took my girl from me to sell her. I do not live in the underground, Xunafae. My name is Cha'Khah, and my man is a human. \n\nVadren is my cousin.\"\n\n\"My luck has not failed me then,\" the girl whispered as her tears began, \"It has only grown more unkind. I am close, but I surely will not live to see him again. Take Mo-Wenn with you, Cha'Khah,\" the dying one sobbed, \"Do what you can for her and help me in my end.\" Her chest heaved as she fought to hang onto her life for a moment longer and Cha'Khah drew her blade to make this easy for her. \n\nCha'Khah held her hand to the girl's torn cheek for a moment and they looked at each other, \"I swear to you that she will know of you. I will raise her as my own. Only nod to me when you are ready, Xunafae.\"\n\nThe girl gasped as her world turned darker, but she didn't nod yet, \"The moon and the stars bless you friend, may they watch over you both. I wish that I could have known you more ... Tell her ... that I loved ... tell her ... -\"\n\nCha'Khah sheathed her blade with one hand and reached as the poor mother passed so that the infant wouldn't roll further into her mother's gore as her arms relaxed in death. She set the child across her knees a little as she closed dead girl's eyelids. \"I will also tell her that her fine mother passed with no aid from another in the passing, as befits the wild courage of her kind -- and my own.\"\n\nAfter a thought, she reached and removed the string of wooden beads from the girl's neck and she saw the one that had been worn on her wrist lying in the snow nearby, its thin leather thong torn. She picked it up as well and looked from the baby to the mother, \"I swear to you that I will do what I can, and first I must keep this little one's life inside of her. Seek your rest, sister. I know nothing of mothering, but I know one who does and I will do as I am able.\"\n\nShe stood up and looked at the tiny face and the huge green eyes which looked back at her, \"I wish that I had known more of your mother than only her name and yours. Only do not cry out in fear of me. That would be a little unkind, but I would understand.\"\n\nAs she hunted for anything that she might be able to use, she cursed to herself, \"Such a foul thing. Who would turn from their sister and daughter in her need?\" \n\nShe had her answer, of course. Many of her own kind weren't much better, and a whole lot of them were far worse. \n\nShe found little, other than the girl's blades and some swaddling rags, but they were clean and dry, so she did her best to change the infant, wiping away the bit of her mother's blood which had seeped through. The child didn't cry or fuss, but only looked at her as though in wonder as Cha'Khah sheathed the elf's long knives and pushed them into her belt so that she could give them to her daughter one day. \n\nCha'Khah smirked, \"I wait here as I look, as though expecting you to pronounce some bit of wisdom to me. It would be a help, for I have none to give you.\"\n\nWith a wave and a few whispered prayers, she cast the body of the unfortunate mother into flame and commended her spirit to her deity. As she watched, holding the child, she suddenly burst into tears, remembering the daughter who had been taken from her almost as soon as the cord had been cut. \n\nShe'd had one look, only one look.\n\nChak'Khah raised her head and loudly asked for help from her goddess. \"If this one is for me, then I need a little aid myself. Please do not allow this one to fall through my fingers as well before I learn what I must know to care for her.\"\n\nShe struggled a little to open her armor so that she infant could stay warm against her and then she pulled her cloak close as she looked down. Her tears fell on the little girl's cheek and she brushed them off quickly, \"Your life has not been very long and you have already come to your worst day. I will do what I can to see that it is not your last.\"\n\nHolding the child to her, Cha'Khah made her way as quickly as she could to see her husband. She felt tiny movements against her breasts and she heard the little one's cooing and when she'd heard the first little giggle, Cha'Khah stopped and they looked at each other for a moment before it came to the Drow that the little thing enjoyed the bouncing of the ride. \n\nCha'Khah laughed softly and wiped new tears from her face, \"Then let us begin, Mo-Wenn,\" she said, \"at least I am given a drowling dalharil who likes a little adventure. If you had a say in the choosing of me, little one, then I can say that you have chosen well for a mother to raise you. You will not pass from boredom.\"\n\nAs she walked up the slope to their home, she caught sight of Barrett and called out to him to come quickly. By the time that he reached the house, he found his bride sitting on the couch with the infant on her bare front where she still held the child inside her armor as they giggled at each other.\n\nWhen she'd finished telling of what had happened, she nodded toward the tiny girl, \"She is a Tu'rilthiir, half-Rivvil and half-Wild Elf. So far, she is such a happy little thing, but soon she will miss her mother.\" \n\nHer smile vanished then as she grew serious. \"I need to ask you something, Barrett. You are my husband.\"\n\nHe sat down next to them, \"I don't even want to hear it,\" he smiled to her, \"I already know what you'd say.\"\n\nShe shook her head, \"I must ask my husband. I wish to keep her and raise her as our dalharil -- daughter, sorry. I had a daughter born to me long ago and she was taken from me to be sold or worse. I never knew her, and it has been my pain for a long time. Today, I find this lost little one in the arms of her poor dying mother and I gave my word. \n\nI will keep her, Barrett. I ask that you help me to raise her. I know that I ask much from you, since we are not long in our own beginning and I will need your help to even keep her alive at the start. I have no milk to give her. Will you take her as your own with me? Will you be her father? I should have said it in there, but, ... \n\nPlease husband, I ask this.\"\n\nBarrett's expression didn't change, \"I guess I understand why it's such a big deal to you to ask, Cha'Khah, but you know that you didn't need to. I'll help, you know I will.\"\n\nHe watched as the Cha'Khah made the infant laugh a little. They both looked so happy for the moment.\n\n\"We have only spoken once of making little ones,\" she said, \"I know you would wish for this with me, but I did not expect one to land in my arms. Is there room for her with us, you and I?\"\n\n\"Yeah,\" he nodded, \"You're making too much out of it. Sometimes you just have to accept and go on. Today I have a new daughter, and a lot more to do. We love each other, she'll have all that she'll need.\" \n\n\"Thank you, Barrett, \"Cha'Khah smiled through her new tears, \"Each day, you show me more wonders of you. Thank you.\"\n\nHe smiled in wonder, \"She's such a little doll.\"\n\nCha'Khah nodded and then she smirked, \"A little doll who thinks that my breasts are the best things in the world to play with. It reminds me of someone. She is half Rivvil. Are you missing any male relations? She might be related to you, the way that she enjoys herself here.\"\n\n\"No,\" he said after pretending to think on it. \"I was thinking that she might be related to you somehow, Cha'Khah. She's got your ears, you know.\"\n\nHis wife glowered a little at him, \"I know that I must learn to live without my famous withering curses, which can sour milk by themselves. Our girl disarms me. That is all that saves you now.\"\n\nHer comment caused his eyes to open and a smile crossed his face, \"As it happens, I even have a way to help you begin,\" he laughed as he thought of it, jabbing his finger into the air, \"I've got Nancy.\"\n\n\"Nancy?\" she asked, \"You mean the goat?\"\n\nBarrett nodded, \"The one whose milk I use to make the cheese that you love so much, but soon, you'll get less cheese, I'm afraid.\"\n\n\"What are you talking about?\" Cha'Khah asked, \"The drowling is no goat.\"\n\n\"I've got a half a pail of milk,\" he said, \"I was just finished milking Nancy when I heard you. Look, one of us is a warrior and one of us is a farmer. Just sit and keep her amused. I'll be right back. And then you wrap her up and we'll go see the others. You need to show off your uh, dalharil, I think you said, and I need Arrax' mind. I've got an idea. On the way, I'll tell you what's what and what we can do for, ...\"\n\nHe looked at her blankly, \"Does she have a name? She must, I think.\"\n\n\"Mo-Wenn, the mother told me,\" Cha'Khah said, \"a pretty name for a pretty dalharil -- and since you have shown yourself to be such a fine male to me yet again, Barrett, I wish to consider her our dalharil. \n\nFine,\" she said, pretending to scowl, \"I must trust my farmer husband. Hurry.\"\n\nAs they walked, Cha'Khah's mouth fell open, \"Really? This is no time to make fun at me, Barrett. Mo-Wenn will need to eat soon. I do not know why she is not screaming for her mother's breast now.\"\n\n\"I'm serious,\" Barrett said, \"I know it'll work, I just need the way to deliver it, that's all. People have always used goat's milk. You'll have to decide what you want, but that ought to work too, unless Drow women are really different from humans -- I mean in more ways than their sweet dispositions to their husbands.\"\n\n\"Put your arm around me,\" she smiled, \"I must think on it, but first, I will be amazed at my wonderful man again. You say that you have no power, and then you work magic and make everything work for us all. I trust you and I wish to believe you, it is just not something that I would have thought of. I never had the chance to think like a mother before.\"\n\n\"I'm telling you, it was done long ago every day. I read about places for foundlings -- babies who had been abandoned or left alone in the world because their mothers had died from one thing or another. Those places hired nursing women to feed the children, but there were always problems, because well, women can talk and ask for more money, can't they? Places like that ran on good will and shoestrings.\n\nSo a lot of those places used goats and donkeys. Hell, I'm sure that if I cleaned Nancy's udder really well, I could just hold Mo-Wenn there and she'd get all that she needs -- well, if Nancy wasn't such a nervous girl. She's too fast to kick before she figures out that she likes to give milk. She settles down then, but at first, she's just nasty.\"\n\n-------------------------\n\nThe others gathered around to see Mo-Wenn, who was still a happy little thing, staring and laughing at them all, though she looked a little nervously at Arrax for a moment until he stepped away. Whatever had made her uneasy did not apply to Shaevre though. She reached out for her and stared at the pawed hand that held hers for a minute.\n\n\"We can get her started on a little milk right now,\" Rachel said as she took a clean dishtowel out of her laundry hamper. She washed a small saucepan carefully and poured a little of the goat milk into it. She twisted one corner of the towel into a little cone and then she dipped it into the milk and touched it to Mo-Wenn's lips. The baby remembered her appetite then and plainly wanted more.\n\n\"Here,\" Rachel said to Cha'Khah, \"You're her mother now. Hold her like this and you feed her. What do you know of her? I don't know anything about elf girls, but if she was human, I'd say that she's about three and a half to four months old -- maybe a little more, since she's got such a sense of humor, laughing and giggling the way that she does. If I'm right, then she's gone hungry a lot. She's a little small for that age, but like I said, I don't know spit about elves.\"\n\nShe moved the rags aside and looked at Mo-Wenn's body for a moment, \"Yeah, I'm right. Time for you to make up what she's missed. Are you going to only feed her goat milk? I mean you can, there's nothing wrong with that, but, \"she pointed, \"what about those?\"\n\nCha'Khah stared, \"I have no milk for her, Rachel. I yearn to be able to feed her like that. I would never need to worry then, would I? But I cannot make milk with a wave of my hand.\"\n\nShe looked down and dipped the towel again, \"I fear to lose her. She is like a chance for me to do this rightly at last. I bless her poor mother for the gift and I already love her.\"\n\nRachel smiled as she put her hand on Mo-Wenn's head to caress her of a second, \"You won't lose her,\" she grinned, \"I won't let you lose her. \n\nLook, you've got a goat, so you've got something good for her to eat. I'm sure that one of us will come up with something better than a dishtowel for her. But you can make your own milk, Cha'Khah, any woman can -- and you gave birth once. Even a woman who hasn't given birth can make milk. It just takes a little while to get started. All you need is a hungry mouth working them for about twenty minutes each, maybe six times a day, just as though she was on them. She can help herself, but she'll get frustrated at first, since nothing will come.",
        "Even so, you should let her suck sometimes. It's good for both of you and she needs to know that you're her mom. That'll bond you two. You've got everything that you need to start making milk for your uh, little drowling there.\"\n\n\"Everything I need?\" Cha'Khah asked, \"How? You said that it takes a little time and she will grow frustrated.\"\n\n\"Uh-huh,\" Rachel chuckled, pointing at Barrett who came walking toward them with Arrax, \"but he won't, will he? Let him do the work. He'd love it, and you'll be Mo-Wenn's real mother in no time.\"\n\n\"This is so?\" she asked, looking at them all.\n\n\"Pft --don't look at me,\" Selena grinned, \"I still haven't figured out everything that I can do with my hands, never mind my tits. But if any of us knows, it's Rachel.\"\n\n\"I do not know of it personally, \"Shaevre said, \"but I know that it can be done by Xer as well. If a childless pair seeks to adopt a very small whelp, the workers at the home who care for orphans tell the bitch to do the same as Rachel has said, before they take the little one home, so that there will be milk in her teats.\"\n\n\"This is something strange,\" Cha'Khah said as she held the full cloth to Mo-Wenn again, \"See the thong on her wrist. Sheavre, could you please go and ask Vadren to come? I have something to tell him.\" Sheavre nodded and walked off to find the mage.\n\n\"There is something on the beads,\" Cha'Khah said, \"but I cannot see it from here. The mother was a wild elf, but I did not recognize her tribe from her face markings. Of all of the Darthiir, they are the least liked by the other kinds, though they do not seek to kill them as they do us. They are also the most like us in their ways -- at least a little, in how they hold themselves apart and do not trust outsiders. \n\nXunafae was the mother's name, and it is a name that Drow use as well. Mo-Wenn is also a name known to us, though we write it a little differently. We would tie two names together over it and craft the one from them, like my own name.\n\nFor this little one, we would likely name her Moniriel Rah-Wenn in our way of complicating things which are simple and a girl's mother would call her Mo-Wenn.\"\n\nBarrett and Arrax held out a strange looking bag. \"What is that?\" Cha'Khah asked.\n\n\"It is a water bag, from one of the emergency packages on the skiff. If one is down on a world with no water, it can be used to draw water from the ground as long as water exists there. A tube runs out so that one may drink without disturbing the arrangement. For this, I removed the long tube and kept the short, soft one. The collecting bag came off and the smaller carrying bag went on so that it is more easily managed. There is a valve inside and she will have to suck, just as she would at her mother's teats. The bag is cleaned and we can try a little milk to see if it will work for her.\"\n\nCha'Khah and the other females looked at the thing a little skeptically, but as soon as the tube was against the infant's lips, she began to suck at it happily, making busy little sighs as she went.\n\n\"So the first crisis has passed,\" smiled Cha'Khah.\" My thanks to the two inventors.\"\n\n\"It'll need to be cleaned after every use,\" Barrett said, \"but I guess a mother would know that, huh?\"\n\n\"A father as well,\" she smiled, \"you can feed her this way just as I can. I am a little overwhelmed at being given a girl to raise. That does not mean that I have become stupid, Barrett.\"\n\nLittle Mo-Wenn stopped sucking for a moment as she looked at Barrett. She pushed the nipple away a little and reached out with both of her little hands. As soon as Barrett brought his face close to her, she stared and touched his cheek. It brought a lot of giggles from her for the way that his beard felt to her, and satisfied after a moment, she remembered the makeshift nipple again and Cha'Khah got it to her mouth. As she sucked, she looked back at them, a tiny elf girl with very dark red hair and large, bright green eyes.\n\nVadren approached, laughing a little, \"I knew that Barrett was unusual from the first moment, but I must bow to the ability of a mighty mage, if he can give you a drowling and with none of the pain of the birthing -- all over the hours of a morning!\"\n\nCha'Khah told him about what had happened, and he examined the beaded strings. \"The mother's name is close to our way, no?\" he asked as he reached to gently turn the beads on the thong which the infant wore, \"Even stranger, cousin. Her name is written here in their way, and it is written as you or I would have written it: 'Mo-Wenn'. There is a bead on the other side with the whole and proper name: Moniriel Rah-Wenn.\"\n\nThe others stared, but Cha'Khah smiled, \"As I have said.\"\n\n\"How did you know?\" Selena asked.\n\n\"I have a feeling that it wasn't just a lucky guess,\" Rachel smiled.\n\n\"Perhaps it was, I do not know.\" Cha'Khah smiled as she bent down to kiss the little head, \"But that is what I would have named her. Well met we are, little Moniriel.\"\n\nVadren looked again at the child, seeing features and thinking over what came to him from the beaded charms. \"The beads are common for their kind, and are used to make their charms. All of these are the same in the way that they ask for the same things -- a little protection and a hope to be loved.\"\n\n\"I do not know what she was doing here, but the mother was far from her tribe. They are the one tribe closest to ourselves of the Wild Ones. How did she speak?\"\n\n\"She spoke almost as we do between us, Vadren,\" Cha'Khah said, \"We had no trouble between us with it.\" She looked at Mo-Wenn, \"I think that we have missed finding a friend by only minutes. I wish that I could have come in time. We called each other 'sister' as though it was the truth.\"\n\n\"I knew a Xunafae once, before we left with Azrael,\" Vadren said quietly as he looked from the infant to his cousin. He looked down and Cha'Khah knew what he was sensing. \n\nShe reached for Vadren's arm, \"This has been an evil day, cousin. She mentioned you to me by your name. The father was Aldred, but he was killed by her brother and they cast her out of her tribe. Xunafae said that she came seeking you. That is perhaps the reason for the hope that you feel in the enchantment on the beads. She came all of this way alone hoping that you might want her. I cannot think of where she must have been all alone to birth her daughter when her time came to her. If it were not for the pack of dogs and her weakness, this day might have brought you happiness.\"\n\nVadren nodded, \"Who can say? Xunafae was not what I would have wanted for myself, but that was there and then. Today, I think that I have missed helping a friend and it might have turned into more than we had.\"\n\nHe sighed heavily, \"Instead, two of my friends are dead, and here is a little one who needs much. I would say this to you anyway, Cha'Khah, but this girl will have my love as well, whatever I can give is hers for her, for you, and for the memory of her parents.\" \n\nHe smiled a little then, \"I rejoice anyway for what has been saved and has come to you.\"\n\nMo-Wenn stopped nursing, and Rachel showed Cha'Khah how to burp her. With that done, Mo-Wenn became sleepy in a couple of minutes and Cha'Khah held her as she sucked at her nipple a little half-heartedly and placed her hand on her adopted mother's breast and fell asleep.\n\n\"Will you keep the name?\" Selena asked, \"I like it.\"\n\n\"I must,\" Cha'Khah said, \"I have been given a gift from a mother's failing hands. Knowing her name and taking it from her to give her another would shame me. Keeping the name honors us both.\" \n\nShe looked at Barrett and he smiled, \"Why do you keep looking at me? These complicated things are no business of mine. All I know is that I have a daughter. I couldn't think of a nicer name for her to save my life. I'm over the moon with her, and I can already see that you love her. Mo-Wenn is her name, and it stays.\"\n\n\"You have fallen in with a pair of fools, Mo-Wenn,\" Cha'Khah smiled quietly as she looked down, \"but you have gained a wonderful male for a father, and come into a fine family.\"\n\nShe looked at her husband, \"I hope that you are ready for what comes with this one if she got even a little from her mother, besides her fine looks.\"\n\n\"Uh, what do you mean?\" Barrett asked, a little uncertainly.\n\nMo-Wenn opened her eyes and gave a satisfied little grunt, as she filled her swaddling rags with a rather wet-sounding noise. \"You see?\" Cha'Khah chuckled, \"She makes sounds like you already.\"\n\nAs they looked at her, Mo-Wenn squinted a bit and her tiny hand waved a little in space, as though she was reaching for something. The shadows shifted around them, and as they looked for the cause, they saw one of the two florescent fixtures looking as though it was being pulled toward them on its chains slightly. It hung there, quivering a little for a moment, before the tubes shattered and broken glass rained down next to them all.\n\nWith the harsh light out of her eyes now, Mo-Wenn moved her little hand and took hold of a bit of Cha'Khah's long white hair and held it against her new mother's breast. She closed her eyes and after a few more sucks, she fell back asleep in an instant.\n\nVadren laughed quietly, \"We had all better be ready, and Cha'Khah and I will need to teach her how to be a Drow, though that is not far from what she is anyway. You will have to teach her how to be at least a little human, my friend, and we will all need to learn patience,\" he chuckled. \n\nHe pointed with a soft smile, \"Enjoy this while it may last. They are not called Wild Ones for nothing.\""
    ],
    "authorname": "TaLtos6",
    "tags": [
        "drow",
        "demon",
        "ranch",
        "farmer",
        "orphan",
        "foundling"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-31"
}