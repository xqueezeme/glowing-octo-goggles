{
    "title": "The Pirate King Ch. 07",
    "pages": [
        "This is part of an ongoing series - if you find yourself here without reading the others, I highly recommend going back and starting at the beginning! We'll still be here when you get back ;)\n\nAlternate title: Falling for you\n\nThe closer the separation gets, the harder it gets to write. We'll get there, and then we'll get over it, but they're just so happy right now that they deserve their time. So a happy fun chapter of just being with the person you love and not thinking too, too much about how you're leaving them the next day. \n\nHave fun, stay safe, peace and love to everyone reading this, etc. As always, comments and suggestions greatly appreciated.\n\n***\n\nI found the hallway leading up to the Captain's room frustratingly occupied. Wicky slouched next to the door, his face sour, his teeth bared. \"You're not to go in.\"\n\n\"He said to meet me here.\" The blade Finn had given me was hidden at my side; I shifted it further out of view. It would be best if he would just let me in. I didn't want to have to kill Wicky.\n\nNo, of course that was a lie. I wanted to kill Wicky. I wanted him to suffer for his actions, his part in keeping the Captain from me, from causing the Captain pain when I could have kept him safe. Seeing him there, seeing him try to keep me from the Captain, again, seeing him between my body and my love (my love! Those words echoed in my ears, in my soul, in the deepest chambers of the sea, there were whales that learned the meaning of love that day, there were creatures of the deep that had never seen sun but knew what it meant to be loved by the Captain) again, it pulled at the anger that sat so close to my chest and pulsed in my ears with my heartbeat. \n\nSo yes, I wanted to kill Wicky. But this, this was not the way. This was not the place. There are a thousand ways to kill a man, a million ways to make him suffer. I had not decided which way Wicky would go yet, but I knew it would not be quick, and I did not want it to be so public. I wanted my time with him; I wanted space. \n\nAnd so I did not move, instead waiting to see what would happen.\n\n\"The Captain ain't in,\" he lied. I raised an eyebrow. \"And you're to go back to your cell.\"\n\nBack to my cell, he said. The memory of irons tickled at my wrists, tugged at my mind. I looked around. It wasn't really that public. And how long would it be before someone else came up to try and see the Captain?\n\n\"Are you even fucking listening to me?\"\n\nI didn't bother to respond, instead calculating exactly how much time I had, exactly what I could do with him in those moments. If that would be enough. My hand began tightening on the knife. The sea began quickening in my soul.\n\n\"Fuck you, just run along, you fucking mutt, before I -\"\n\nFuck it, I thought. It's going to have to be. \n\nHe was up against the wall, my knife at his throat, before he could say another word. I quickly found the knife he wore at his side and pulled it away, sticking it in the wall above his head and therefore putting it out of his reach. I knew it was too deeply embedded for him to pull out without great effort. Wicky was weak. Wicky was nothing. \n\nHis eyes flicked up at the blade, more frightened than I had expected, and I took a closer look. Well shit, I thought. It was the Captain's from the night before. The sea pressed against my eyes at the theft, whispering, crashing. \"You,\" I told him evenly, the edge of my knife pressed dangerously against his skin, \"were supposed to give this back.\" \n\nWicky could only squeak. I smiled at the sound, the way it slipped against the waves and was lost inside of me. I was going to enjoy this; I was going to enjoy this a lot. \n\n\"Sailor?\" The Captain's voice caught me by surprise; he must have come out from his room at the sound of Wicky's body slamming into the wall. I wasn't really sure what to do. The Captain had never seen me violent like this, had no true concept of the things I held just under my skin. In any other moment I might have been worried about how this might have looked; with any other man I might have been concerned about the blood I knew that dripped from my body, metaphorically, and from Wicky's neck, literally. But this was the Captain, and he had felt the ocean broiling within me so many times, had seen it in my eyes and, instead of running, instead of bowing to my power, he had smiled and made me beg for him more. \n\nAt his voice a pit of desire opened up within me, and the sea crashed into it eternal, insatiable. I should have pulled the ocean back, not allowed it to sit the way it say, right under the thin membrane of skin that kept it barely at bay, but I found myself unwilling to let myself return to the nobody I had been pretending to be. I was not a nobody, had never been one to start with. I had no reason to pretend. \n\nNot with him. \n\nI cast my eyes over my shoulder slowly and found him leaning in the doorway, clothes clinging in all the right places to make my body scream for him. The sea was churning, my body become something more and to be so near him like that was divine, was torture. My hands tightened on Wicky, squeezing out another of his pathetic squeaks. As the noise reached the Captain's ears I saw the him smile, and felt the sea crash again. \"My love,\" he said quietly, that same prickly voice he had used earlier, but now I was more, and now it was so much. It took everything in me to keep from moaning at the sensation his voice raised against my soul. \"Put him down. I have bigger plans for him.\" \n\nI heard his words, took them in, but the oceans I contained within were not calmed so easily. The lines of my wrist and hand that held the knife sharpened in defiance even as I knew that my body would do as he commanded. I sighed, letting Wicky slide down the wall. My eyes never left the Captain. \n\nHe walked up to us, his hand trickling across the back of my shirt as if it was nothing, as if he did not set my entire world on fire with his fingers. I shuddered, and Wicky twitched in fear in my grasp. I heard myself growl even as my fingers released his shirt. The knife still was tight against his throat, controlled by the sea. \n\nThe Captain was right behind me. I watched his eyes flick to the knife, his knife, buried in the wall.\n\n\"Huh,\" he said, turning his gaze back to mine. \"Thank you for finding this, my love. Would hate to have to hunt down whoever had kept it from me.\" \n\nThe sea within me acknowledged the thinly disguised desire in his voice, the careful threat. His eyes churned in response. He leaned forward, pressing himself up against my body as he reached forward and took the hilt of his knife in his hand. His eyes were still on mine, my head turned away from Wicky to track this man, this perfect man, to let him see all the things I carried in my eyes. \n\nHe saw them all, I know he did. His expression never wavered, looking cool and calm and collected, and behind all of that so fucking hungry I couldn't believe he didn't take me right there, right in front of Wicky. Instead he braced himself against my body and yanked the knife from the wall. I reminded myself to breathe, and tried vaguely not to slice up Wicky too bad in the intense feelings that came with having the Captain tense against my back, his lips so close to mine.\n\n\"Careful,\" he murmured. \"I think you're hurting him.\" \n\nI didn't move. I wanted him to hurt. I thought I saw a smile flit across the Captain's lips. \n\n\"Captain,\" the man beneath me pleaded. Boring, I thought. Boring and pathetic. I should have let him go, would have if I were alone, but I wanted to see what the Captain would do. Wanted to see how far this would go. I think my eyes flared at the thought; I know something in the Captain's did in response. \n\nHe hooked his hand, still holding the knife, around my neck. I felt the cool metal resting against my chest and held very still, biting back the shudders that danced within my spine. The Captain shifted his weight behind me, coming over to the side on which I held Wicky. I let my head turn slowly as he moved, following his motions by touch and sound, and when my head had fully twisted there he was, waiting for me, and I nearly lost myself in the depths of his gaze. \n\nHis free hand danced down my arm until he reached the knife I held against Wicky's neck. \"Mine,\" he told me, and of course it was and I handed it to him without another thought. Wicky broke away from me immediately, but what was Wicky to me? I had the Captain. And I would like to see him try to take that away.\n\nI would love to see him try.\n\n\"Captain,\" Wicky rasped, but we were both distracted by more important things, like breath, and the way it could pool against skin so delicately and yet so intensely, or eyes, and the way they could say so much without the need for words. \n\n\"CAPTAIN.\" He was a fool for repeating it; a fool for drawing our attention to him. I was the sea, and the Captain was the sky, and our full attention crashed on this mortal and I don't know how he wasn't pressed flat. \n\n\"He,\" he managed to gasp, \"is dangerous.\"\n\n\"Yes,\" the Captain responded slowly. He wasn't so much responding to Wicky as making his own statement, surprise and hunger hanging in the air in a physical way. The tip of the knife tapped my chest and I felt my body shake beneath it; not from fear, but from anticipation. \"He is, isn't he?\"\n\nI turned my head and kissed the Captain's forearm, letting my lips brush drily against his skin. The tapping immediately stilled. I watched the Captain's hand tighten around the blade, felt his breath quickening behind me. \n\n\"Quite dangerous,\" he repeated quietly, and then he shoved me up against the wall. My surprised cheek pressed against the wood panel with more force than I had expected, my hands too slow or too unwilling to stop my forward motion. I wasn't ready yet to parse out which it was, just let myself enjoy the sensation of the Captain's arms tight around my shoulders and waist. I felt his lips against my ear. \n\n\"Makes me dangerous,\" he whispered, pressed up against my back. I moaned to feel how hard he was against me, and he rewarded me with a quick bite to my earlobe. \n\n\"Captain,\" Wicky all but wailed. I felt the moment as the Captain must have, so close to his body. The moment where the Captain let himself think about his response the man, or ignore him completely, just pressing against me closer, listening to the moan that slipped from my throat. The moment after that where he sighed, knowing that he would have to deal with the large-foreheaded nuisance that was keeping us from bliss. The gentle kiss he placed on my neck as he prepared for his movement. \n\n\"Wicky.\" His voice was dark, a different sort of darkness than what I was used to. When he used darkness against me, when he invited me into his dark, it was dangerous, yes, it was cold, but it was from a place of love, from a place of pleasure. This?  \n\nThis was a vacuum. There was nothing there. It was past dark, it was pure emptiness. His hand slithered from my chest, pulling his knife with it. I shivered as the cool metal moved past my skin, slipping over my shoulder, sighed as the Captain pulled away from my body. Waited patiently as he did what he needed to do. \n\n\"If you don't like what you see, then I suggest that you leave.\" It was not a suggestion. Wicky left. \n\nMy body was shaking, waiting for my Captain to return. I knew that he was taking his time, enjoying the things his absence was doing to me. I heard him toss the knife into the open door behind us, heard it skitter across the floor of his room. Wanted my body to do the same. \n\nHis lips found their way back to my ear. \"And you,\" he whispered. His hand, now free of the knife, made its way to my hair and I groaned even before he yanked my body back by my short tresses. He drug me into the room that way, and I would have it no other way; the roughness shook the pieces of me that had been hidden for so long, brought them screaming to the surface. I wanted him to see me like this, dangerous and everything that I was supposed to be, everything that I would become. And then I wanted him to make me submit before him, to show him that I was his, no matter who I was or had been or would be. \n\nHe had barely shut the door when he began pushing me down. \"Knees,\" he commanded, panting, not bothering to mask the need that pulsed just under his skin. I dropped before him and he moaned. I had an idea of what he had in mind. If it wasn't in his mind yet, I wanted it to be, and so I looked up at him with eyes that would have scared any man, should have scared any man, and opened my mouth. \n\nHe looked down at me there, the sea incarnate, ungovernable, eternal, infinite and impossible and on my knees for him and cursed so long and low I thought hell would rise up and swallow us both. \n\nThen his hands were at his waist, fumbling with his pants. He was shaking so badly I thought I would have to help him, but then his pants dropped and his cock was there. I made a noise of glee and lunged for it, but his hand was immediately back in my hair, holding me at bay.\n\n\"My pace,\" he commanded me, his voice raw and ragged. He reached down to touch my face and found he was still holding Finn's knife. \"Shit,\" he muttered, throwing it across the room. It landed somewhere with a clank and then his hand was on my chin, pinching my cheeks. \"My pace,\" he said again, his eyes so intense. I nodded against his hand. He watched me for a moment, his eyes fluttering, his breath hitching to see me there, so helpless in his hands. Then he released my chin and pulled me towards his cock.\n\nI took him in my mouth. He was so hard already, so large and stiff and my mouth had to stretch to accommodate him. He didn't give me a chance to get used to him, pulling my head down on his shaft, his eyes locked on my face. \n\nAs soon as I gagged he let me back up, then pulled me back down again, stopping just before the point I had stopped at before. I felt his care in his trembling hands, in his careful control, and reciprocated with moans and a rolling tongue that caused him to tighten his hand in my hair and quicken his pace. \n\nI knew he didn't want my hands near his cock; I knew that this would violate his 'my pace' command. But his balls, I thought. I could touch those and not distract him from his pace. I carefully lifted my hand and took his sack in the palm of my hand.  \n\nHe moaned and drug my mouth further down his cock than it had ever been. My eyes rolled in my head at the sensation of his cock in my throat even as I gagged, choking. I was so full with him, so filled with need and his cock and I pulled to go even deeper even as he yanked me back and set me to a faster pace. \n\nBefore long I could feel his muscles straining against my hand, his balls drawing up under my palm. \"Fuck!\" I heard him cry, and he pulled my head back off his cock just as his body came to climax. I felt the warm cum splash across my face and opened my mouth to catch a taste.\n\nHe stood there for a moment, panting. Then; \"Up.\" I stood, feeling his voice slip under my skin and raise goosebumps. He shoved me to the bed and I let him push me onto it, falling backwards onto the sheets. His breathing was ragged as he climbed up next to me, and I wrapped my arms around his shoulders, drawing him close.\n\n\"Mine,\" he whispered with determination and I couldn't help but smile. \n\nWe laid there so long that I imagined that he might have fallen asleep. That was fine with me; his breathing was even and soft against me, slipping into the rhythm of the the waves that crashed forever under my skin, and I was happy with that. If this was all we ever did, I would have still come back for him, still ripped apart worlds for him, calmed the ocean and slammed it back to storms, for him.\n\n\"Sailor,\" he murmured. I kissed the top of his head gently. His hand began to trace circles on my stomach. I smiled at his affection, trying to hide the shudders that his fingers brought to my spine. \"My love,\" he continued, whispering the words against my chest, and there was no hiding the things those words did to me. I moved to kiss his head again, then froze as his hand slipped down to my waistline. \"Pants.\"\n\nI lent my hands to his crusade, unbinding the laces and slipping them over my waist. As my cock sprung up for him, already hard and ready, he sighed in content. \"Wanna make you feel good,\" he whispered, fingers tracing the length. I shuddered beneath him. \"Gonna make you feel so good.\"\n\nHis hand wrapped around my girth and I gasped, warm pits of pleasure spreading up through my body. With his other hand he drew up my shirt even as his mouth found his way to my neck, nipping and kissing the sensitive skin he had laid there earlier. I moaned and writhed beneath him. Then, suddenly, I felt his hand rub against my nipple.\n\nI cursed and jerked, my body lighting up with sensations I had never felt before. I was still too much, the sea so close, and my skin felt stretched somehow, like the nerves were already on high alert. And those nerves, and there... \"Captain,\" I begged, although I wasn't sure what I was begging for, \"sir.\" He responded by closing his fingers against the sensitive flesh and pinching hard, and whatever words I would have given up were lost in a sudden stream of curses and moans. \n\nI felt him smile against my neck and then his mouth was gone, moving down my body. His lips kissed their way over my chest, teeth scraping whenever he wanted a reaction, until suddenly they were on my nipple. \n\nMy back arched, my entire body twisting. How could one small bit of skin be so sensitive? I moaned and bucked beneath him as he licked and kissed. I couldn't help it, my hand came to his hair and grabbed hold of his head. I needed to touch him, needed to hold what he was doing to me. He let me press my hand against him, slipping his other hand over my chest and thumbing my other nipple. All the while he never stopped working my cock, his hand working the shaft, fingers coming up to rub the tip. It was entirely too much, and I was lost to him, lost all sense of what I was supposed to be doing, and when he took my nipple between his teeth and bit my body practically shook apart. \n\n\"Make you feel so good,\" I heard him mumble, his lips moving down my stomach, then across my hipbone. Teeth nipped at my skin and I gasped. His mouth moved and then he bit again, harder, and I cursed. \n\nHe made me ride the line between pleasure and pain, pushing the limits that I had never known could be tested, seeming to know exactly what should be pressed and what should be left alone. I teetered there; no, I had nothing to do with it, I was under his control and he kept me there, the sensations so strong they were practically overwhelming. I had no thoughts but the feel of his teeth, no way of existing but the things his hands were doing to me. Storms rose up and were quelled in a moment under his touch, maelstroms calmed and reopened at his whim. It was nearly terrifying how greatly I felt for him, how much he made me, and then he bit lightly just at the base of my cock and I couldn't help it, I came. \n\nIt was such a violent and surprising pleasure that I shouted. My eyes squeezed shut in the face of it, unable and unwilling to take any more stimulus in, just wanting dark and warm and but he didn't let me go through it gently, instead reaching up and finding my nipple and twisting and I shouted again as another wave of sensation crashed through my overly stimulated body.\n\nAs the last of my shakes shook my core, he lifted his head to my neck, then my lips. I kissed him gently, still lost within myself in the face of what he had done to me. He brought his cum-covered fingers up to my lips and let me lick them clean, catching up some of the cum that he had left on my face along the way. He smiled hungrily down at me. ",
        "\"Feel good?\" he murmured. I nodded.\n\n\"Sorry,\" I said, taking deep breaths around his fingers, trying to bring myself back. \"Forgot to ask.\" \n\nForgot was putting it mildly. I had been lost, past words, unable to think past the things the Captain's hands had been doing to me. But I didn't think he would be interested in excuses, so I didn't try and explain. Besides, words were still hard. Breathing was still hard. \n\nHe tilted his head and watched me struggle to exist. \"I'll think up a punishment later.\"\n\nAt his words an electric shock passed through my body, starting at the very tip of my head and settling at the base of my spine. He smiled to see the way I shook, the way my eyes fuzzed out in hazy anticipation, and leaned down to kiss my nose. \n\nI pulled him back down to me, letting out a sigh, and he collapsed against my body. He lay there, feeling me shake beneath him. \"Too much?\"\n\n\"Stop asking me that,\" I grumbled.\n\nI felt him chuckle. \"I'll always ask you that, so long as you keep shaking so bad.\"\n\n\"And the answer will always be no.\" My hands traced over his back, slipping under his shirt to capture the warmth of his skin. \"You'd have to try hard to be too much for me.\"\n\n\"Guess I have to try hard, then,\" his voice came back, dangerously, and my body shivered without me. \n\nWe lay like that for some time, my hand tracing his back, his breath slipping over my chest. \n\n\"Left some marks,\" I heard him say quietly, sounding smugly satisfied. I looked down to see what he was referring to and found the trail he had left, his teeth stamping impressions on my skin. I couldn't help myself; I began to laugh.\n\nHe lifted his head up to look at my face. \"What?\"\n\nI traced a finger over one of the bite marks. I still remembered so clearly when the Captain had been convinced that these small welts were enough to hurt me, were something to be ashamed of. The frustration that had raised seemed so petty now, so distant. \"Happy these are back,\" I told him finally, aware he was still looking for an answer. \"When do I get more hand prints?\"\n\nHe looked confused for a moment, then comprehension flashed over his face and he sucked in his breath as those eyes went dark with hunger. In the next instant all of that was gone again, replaced with the most beautiful version of sheepishness the world had ever bothered to create.\n\nI laughed again and lifted my head to kiss him. When I let my head rest back on the bed, smiling, he was grinning too, although he still looked sheepish. \n\n\"You weren't like this before,\" he tried.\n\nGods all, he looked so beautiful when he was embarrassed. \"I've always been like this,\" I told him firmly, watching him squirm, \"you just couldn't see.\"\n\n\"Yeah, well -\" I kissed him again, laughing against his lips. \"You were hiding,\" he muttered against mine, and I laughed all the more and kissed him until he stopped trying and forgot to think of anything but me.\n\nTo be with him, here. To exist with the Captain, to truly exist as I was meant to, with the sea pressing just under my skin and the waves crashing softly in my soul, it was making me believe that I had never truly existed before. That even when I lived as the sea, when all around me knew who I was and held all my names in their mouth with fear and respect, I wasn't living as me, as the fullest version of me that could exist. That perhaps that life had not been the peak, the highest point from which I had fallen, from where I had been pushed, shoved down, tied, and drowned, but instead just a step. A leg on my journey to be here. Here, and happy, with him. \n\nI had thought I was going back to where I belonged. That was my plan, what I needed to do, and I had been functioning under the assumption that the place of my belonging was somewhere far and dangerous and attainable only through planning and violence and revenge. But I realized, laying there with the Captain, that if I were given the chance to go back to that world, to go back to being named, to having my command, my friends, my world, my life, I wouldn't do it. I couldn't do it. \n\nNot without the Captain.\n\nRight here, right now. The Captain in my arms and pleasure slowly seeping into the bed beneath us. This, this is where I belong. That knowledge hit me with a strength that stunned me, a surety that dug into my bones and made me wonder how I had ever managed to believe I was happy before this. Before him. \n\nFor a moment that worried me. Did that mean I didn't have to leave after all? I had been operating under the idea that I had to get back, had to become the thing that I had left behind. But I had died; I was no longer that thing, and never would be, and I had the Captain and wasn't that enough?\n\nBut no; I still had to kill the man who had killed me. And besides, I had already promised the Captain a ship. \n\nI kissed the top of the Captain's head. A new plan began to form. It was simple; it was easy. \n\n\"Is it the sea?\" he suddenly asked me. \n\nI looked down at him. It was hard to bring my mind back from the dreams of the future, back to conversation and words. \"What?\"\n\n\"In your eyes. Sometimes, I think. I've seen it, the way you make men afraid of you. The way that men are afraid of you, like you carry something you shouldn't just under your skin.\" He traced his fingers over my shoulder and I shuddered, fully back now, fully present under his touch. \"I thought I tasted it, too, but.\" He looked up at me. \"It sounds ridiculous.\"\n\nI smiled, lifting his lips to mine. In that kiss I let the sea pour out, let oceans rise and fall, their relentless crash and hungry depths pressing up against him with abandon. He could take it, I knew. He could handle everything that I was. \n\nWhen I pulled back, his lips followed me, wanting more. Those dark eyes blinked up and met mine, where the sea still swept and pulled.\n\n\"Oh,\" he breathed. I nodded, slowly, and he reached up and brought me down to kiss him again. \n\nAt the end of it we were both breathless. I leaned my forehead against his, my gazed locked with his. I don't just hold the sea, I wanted to tell him. The sea does not just live under my skin, it does not just dance in my eyes, I am the sea, the within me the oceans come to life and death and so much more than all of that. I wanted to say it, wanted to tell him, but he knew. He saw. He watched my soul pulse and dance just behind the thin protection of my skin and he didn't run, or blanch, or frown. He smiled. \n\n\"And you're mine,\" he told me. His voice was braided with just the right mix incredulity and confidence, and I smiled back, and the sea rose for him, and the world was perfect. \n\nIt was really too bad, I thought as we kissed again, that we only had a few hours for us to celebrate this discovery before they would dump me back on land.\n\n***\n\nI moved around the room, gathering clothes in preparation to head back to Cookie. I had ended up naked with the Captain, again. Somehow, I had the feeling that was not going to be an isolated incident, even in the few hours we had left; not with the way he was looking at me, hunger barely hidden behind those dark eyes, hardly sated by the hours we had already spent in bed. \n\nOf course he wouldn't be. You couldn't fill the sky. And I didn't want to; I had much, much more to give. \n\nHe watched me as I gathered up the clothes, slipping them on my body despite his protests. He only stopped making frustrated noises as I made my way over to the corner of the room he had chucked Finn's knife into and began searching for the blade. \n\n\"You shouldn't carry that. It's dangerous.\"\n\nI ignored him. He should know exactly how much danger men posed to me; he knew what I was. \n\n\"Who gave it to you, anyway?\"\n\nI didn't want to give up Finn, so I just shrugged. \"A friend.\" \n\nHe frowned at that. \"You have a lot of friends.\"\n\nI smiled, thinking about the men that rose up against Wicky. The Captain had not yet begun to learn of all the friends that I had. I found the blade and took it up. It was a good blade, well made. I would have been sad to have lost it for Finn.\n\n\"Sailor.\" The Captain rose from his bed. I took the moment to enjoy the view as he walked away from me, the perfect muscles of his legs, his incredible ass leading up to a back that would look so perfect covered in lines from my passion, not, I thought not without some pleasure, that he would ever give me the use of my hands to give those lines to him, up to that neck still marked with the clear message of mine, mine, mine, up to the head that - oops. \n\nHe was staring back at me, amused, and I did not bother to look away. The time for not allowing my feelings for him to shine through was gone, any inhibitions shattered by his kisses, his touch, the way he looked at me in this very instant, so open and happy and here. Instead, I blew him a gentle kiss. He laughed and came towards me, giving me the front view that I had been missing before. \n\nI lifted an eyebrow. If it was possible, I liked this view even better.\n\n\"Found something for you,\" he told me, his face so close his words got lost in my clothes. I sighed at the barriers between his breath and my skin, then tensed as his fingers worked around my waistline. I heard a latch snap, then felt his fingers skim back to my stomach. \n\nHe rested one hand on my stomach, feeling my breaths, and reached over to take the blade from me. I surrendered my weapon without another thought. He brought it to my navel, then slid it over my stomach as I shuddered until it reached my hip, where he sheathed it in the belt he had looped around his waist. \"There,\" he said. His fingers were hooked around the belt; I wanted them hooked around me. \"Now you don't have to carry it in your hand.\"\n\nI looked down at him and found his face one big smirk. \"I thought it was too dangerous,\" I mocked gently.\n\n\"Oh,\" he returned, smirk growing. \"It is.\" His arms wrapped around me, hands spidering across skin to rest just above my ass, fingers twirling at the sensitive divot that marked the base of my spine. I shuddered into his arms as electricity shot through my entire body. Lips pressed to my neck and I almost swooned. \n\nA knock sounded at the door.\n\n\"Don't get it,\" I whispered.\n\n\"It might be important.\" But he didn't move, just kept twisting his fingers through the nerves that made up my entire world. \n\nWhoever it was knocked again, and I felt him pull away. My hands reached out to keep him, but it was too late, his body already moving towards the door.\n\nCompletely naked.\n\n\"Captain?\" I called out, not sure if he had forgotten his state in the comfort of our afternoon. \"Sir?\" \n\nHe turned to me, eyebrow raised. I made a gesture at his body, his undressed body, even as the knock came a third time. \n\nHe shrugged, turned to the door, and opened it wide. \n\nPoor Natch.\n\nI struggled not to laugh as he covered his eyes, yelped, and tried to turn all in the same motion. The Captain leaned on the doorframe casually, giving me a wonderful view of his bare ass and Natch what must have been a wonderful view of his front, if he hadn't been hiding so effectively. \n\n\"You wanted something?\" the Captain prompted. I could hear the amusement in his voice. I walked up behind him, shaking my head at the way the man I loved moved through the world. \n\n\"Cookie requests Ghost in the kitchen, says he needs him.\"\n\n\"Ah, Cookie.\" I slipped my arms under the Captain's, wrapping them around his chest. He leaned against my large frame and I kissed the back of his head. \"He just doesn't like that I'm spending so much time with you.\"\n\n\"Cookie?\" He rested his head on my shoulder and looked up at me. \"I thought he liked you.\"\n\n\"He does. He's just a little.\" I thought about it for a moment. \"A little protective.\" \n\n\"Of me?\"\n\nI smiled at his presumptiveness. I supposed it made sense; he still did believe it was his ship. \"Of me, I think.\" I kissed his forehead. \"Now, go put clothes on, you're scaring poor Natch.\"\n\n\"You're the one holding me here,\" he said primly, making no attempt to move whatsoever. \"Besides, I thought you said he wouldn't mind.\" \n\n\"That -\" I started, but he was laughing and also already gone, moving from my limbs when I least expected it. \n\n\"Go,\" he said, pulling on a shirt. \"Before Cookie thinks I've eaten you.\"\n\nI pointed at my stomach, where we both knew bitemarks blossomed and bruised. \"I thought you did.\"\n\nHe laughed and waved his hand, and I smiled back and put my hand on Natch, making him jump. \"Sorry, lad.\"\n\n\"Just. Jesus, all the gods, any god at all.\" He walked with me briskly down the hall towards the kitchen. \"It is one thing to see a man naked, but this is the Captain, he's like a fucking father to me Ghost. He's like. Fuck, it's too weird.\" He looked at me sidelong. \"Saw Wicky just a moment ago.\"\n\nI shrugged. \n\nDinner went by in a strange but acceptable fashion. The men were wide eyed and silent, taking their dinner as it was served and being thankful for that. A few of those wide eyes caught on the belt the Captain had given me, the knife that it held, and got a little wider, but no one said anything\n\nWicky showed up just as I was planning on leaving the kitchen to take my own meal. I paused, unsure of his intentions. He didn't seem interested in entering the mess, instead planting his feet and crossing his arms just on the other side of the threshold.\n\nI turned and pulled a bowl down. \"Lad,\" Cookie hissed, but I ignored him. I filled the bowl, watching Wicky watch me. When it was ready for him, I turned and held it out. \n\nHe hesitated. I knew he must have thought it was some kind of trap, me, serving him in front of all of these men, and maybe it was. I hadn't really gotten that far yet, instead working without a plan. If being with the Captain had taught me one thing, if finding the Captain had shown me only one trick, it was that plans were not the only way that good things came about. \n\nSo I held out the bowl and decided to see what happened. Wicky watched me, trying to decide what I was planning, but I had no plans and so he saw nothing and came forward, step by careful step until he was right before me. \n\nHis bruises were still dark, fingermarks that would fit well under my hands. Perfectly, in fact. I noticed they were marred slightly by small nicks that I must have pressed against his skin while tangling with him outside of the Captain's door.\n\nTwice now I had almost killed him. I wondered why he wasn't more afraid of me; perhaps he believed his position would keep him safe. Perhaps he had more courage than I gave him credit for. \n\nAs he reached out and took the bowl, I tightened my grip and pulled back. Just for a moment. He felt the power behind the motion and I saw the flash of fear in his eyes, the total panic.\n\nI smiled. I think I gave him just as much credit as he was worth. \n\nI released the bowl, knowing I didn't have to do anything more. He knew what I could do. Any threats beyond this point were posturing; I did not posture. I didn't need to. \n\nHe grasped the bowl tightly and stumbled back a step before he managed to collect himself. I smiled into the expression on his face, fear and surprise and anger all mixed up in his lips and eyes. I smiled and turned to pour myself a bowl.\n\n\"Slut,\" I heard Wicky hiss. My head turned to watch him stalk out of the mess, trying to find whatever shreds of control he thought he could pick up. \n\nI let out a small huff of amusement and brought my bowl into the silent mess. All eyes were on me as I sat across from Natch.\n\n\"So,\" Thron said, \"Wicky.\" \n\nI shrugged. \n\n\"What good is a knife if you're not gonna use it,\" muttered Finn, and I gave him a look. He scowled. \n\nWe ate in silence for a moment, the only sound the munching of hard bread and the scrape of spoons against bowls. Then Thron sighed. \"You'll be missed at training today, Ghost. Especially as it's your last day and such.\"\n\nI looked up at him. \"I did not realize that I would be missing training.\" \n\n\"You're to take the Captain his dinner, aren't you?\"\n\nI shrugged. What of it? I could still make training afterwards. \n\nThree sets of unconvinced eyes met me with more truth than I was giving myself. I took another bite of my bread. \"Yes, I see your point.\" \n\n\"It's too bad you can't get Cap to come to training.\" Natch leaned on his fist, looking contemplative. \"He's a good fighter, might even give you a run for your money.\" \n\nOh, I suddenly thought. The Captain fighting. I had never seen him fight; I didn't know his ability. \"He's better than Thron?\"\n\nThron nodded. \"By a long shot.\" \n\nI let myself think about that, imagining the Captain with knives in hand, and found myself smiling. Then I imagined what type of situation he would need to be in for that to occur and the smile dropped from my face. \n\nI couldn't stop thinking about that for the rest of the meal. If others spoke to me, it was not heard, not over the sounds of the Captain fighting for his life in my mind, enemies from my past and my future coming for him again and again. When the meal was over, I scooped up my bowl and returned to the kitchen, filling a fresh bowl and grabbing some bread. I arranged it on a tray, then returned to my seat. The room was empty, the men moving towards their evening duties. Only Natch and Finn had waited for me.\n\n\"Finn,\" I said. The steward looked up. \"Take this to the Captain while I go up and train with the men.\"\n\nThere was a silence as the two men me took this in. Then they both spoke at once.\n\n\"Ghost -\" Natch started, \"I really don't think -\" while Finn voiced a much more concise, \"Oh, fuck no.\" \n\nI raised a brow at the usually mild steward. He crossed his arms. \"Him, expectin' you, and getting me? I'm like to end up dead.\" \n\n\"Tell him I had to go to training.\"\n\n\"He'll just come and find you.\"\n\n\"That's the idea.\" I held the tray out and leveled Finn with a careful look. He took the food with a sigh.\n\n\"Bury me with enough silver, lads, that's all I ask of you.\" He shook his head as he headed off down the hall. \n\n\"This,\" Natch said, \"was not what I meant when I said I thought Cap should come to training.\" But I noticed that he sounded more excited than worried. I clapped him on the shoulder and headed up towards the deck. \n\nThron looked shocked to see me; he looked to Natch for some explanation, and I saw the small man just shrug. I smiled at the training master. \"The Captain will be joining us later.\"\n\n\"Oh,\" Thron said, slight panic building on his face. Natch took him aside as I removed my knife belt and gathered my practice blades. I saw him trying to hide a grin as Thron looked like he wanted to jump over the edge of the ship.\n\n\"Having fun?\" I asked when he made his way back to me.\n\n\"I like being around you when you're not trying to kill people ranked higher than you,\" he laughed. \"So long as Cap doesn't get mad at me, and Wicky doesn't show, I'm good.\" \n\n\"Good,\" I said, tossing him a knife, \"then you can spar me first.\"\n\nThe smile disappeared from his face. \"Oh, goddamnit Ghost.\"\n\n***\n\nThe Captain took longer than I expected to show; perhaps he was waiting on me to cave and return to him, or giving me a chance to obey him without him having to come get me. But that wasn't the plan. As the minutes ticked by I apologized to him internally; if this were not so important, I would not be so insistent.\n\nMy back was to the door when he finally appeared, but it didn't make any difference. I knew instantly that he had arrived. The man I was sparing glanced up, just for a second at first, then his eyes locking onto something behind me. You don't ignore the fighter before you unless there is a greater threat; the hunch that this threat might be the Captain was all but confirmed when he immediately dropped his blade and backed away from me slowly.\n\nI turned, smiling, to find the Captain striding towards us, brows bundled together with force, jaw clenched. He looked pissed.",
        "But not at me, I realized. His gaze was steadily boring into the man who had been sparring with me seconds before. When he reached me, he turned those eyes to me, giving me a thorough look-over. \"Did he hurt you?\" he asked, poking and prodding at my chest, my stomach, those eyebrows so close together I thought they would fuse.\n\n\"Captain,\" I said, amused. He didn't stop so I captured his wrists gently. \n\nHe gave a sigh. \"He didn't, then.\"\n\nI gave a quick puff of laughter. \"Sir.\" He looked up at me, smiling down at him, and sighed again. \n\n\"I know,\" he told me, and I believed that he might, \"I know, I just don't like seeing you -\" he waved a hand towards the still mass of men, watching us with fascination that bordered on terror. Or perhaps terror that bordered on fascination. The Captain let out his breath in a huff. \"Why didn't you come to see me, like I asked?\"\n\nIt had not been a request, and we both knew it. \"I want to spar you.\"\n\n\"Why?\"\n\n\"I need to know you can take care of yourself when I leave.\"\n\nHe stared at me. \"I can take care of myself.\"\n\n\"I know,\" I told him, pulling his wrists to my hips and hoping he would hold me. His hands rested lazy on my hip bones and I felt a calm pass through my body. \"But I still want to see.\"\n\nHe took that in, fingers tapping on my bones, sending ripples through the calm waters he had created. \"You could have asked.\" \n\nI shrugged, smiling. \"I could have.\" \n\nI almost got a smile for that. \"Okay.\" He broke from me then, moving away towards the practice blades, and a part of me tried to follow him. But when I recognized his trajectory I shook my head. \n\n\"No,\" I said quietly. I tossed Natch my wooden blade, walking over to retrieve the belt the Captain had given me. His eyes followed me, confused, a little worried. \"Not wood.\"\n\nHe crossed his arms. Around us, the men began to murmur. \n\nI didn't care what the men had to say. I needed to know that the Captain could fight. I needed to know that, when I left, he would be capable of taking care of himself. Not with wood, against wood; against steel, against a real fighter. Men fight differently when they're faced with a true edge, as much as they deny it, they fight more true. And that truth was what I wanted to get at tonight. \n\n\"Ghost.\" Natch came up behind me as I collected my blade. \"The men -\"\n\n\"Are nobodies,\" I reminded him. \"Captain?\"\n\nHe shrugged, but I could see the concern he carried on his body. He would fight; I knew he would.\n\n\"Still having fun?\" I asked Natch quietly. \n\n\"Just don't want you to get hurt,\" he replied, just as quiet.\n\n\"I won't let him hurt me.\"\n\n\"That's not -\" Natch shook his head. \"Ghost, if you hurt him.\" \n\nI looked over at the man waiting for me, surrounded by men that might be mine or might be his, but were probably ours, waiting under the lowering sun. The red light was catching in his curls, tangling up and forgetting which way it had been trying to go. It gave him the appearance of a halo of blood.\n\nI smiled. \"I don't think I can.\"\n\nI heard Natch sigh behind me as I made my way over to the Captain. \n\nHe stood easy there in the sun, waiting for me. Waiting for the motions my body would bring to him. This was so different than the motions we usually used with each other, and yet felt so familiar, felt so right. I suddenly realized that this was a long time coming, we'd been working towards this ever since we'd first laid eyes on each other, even if neither of us knew it. \"I won't let you hurt me,\" I promised him again. \"And I won't hurt you either.\"\n\n\"I trust you,\" he said quietly, crouching down, blade held loose in his hand. He held it well, properly. I smiled to see how easy it sat in his hand, and at the words that came from his chest so easily. \n\n\"Good,\" I said, and launched my body at his. \n\nI took him down only three moves in. He pulled an attack halfway through, and I used the vacuum that created to hook his arm and increase his momentum over my hip, slamming him into the deck. \n\nThere was a collective gasp, then a moment of silence. I collected his blade from where it had been sent skittering, then crouched beside him, smiling gently. \"I thought you trusted me.\"\n\n\"Holy shit,\" he breathed.\n\nI waited until he seemed to find the wind that I had knocked from his core before standing up. \"Come on.\" I reached a hand down to help him up. \"And try this time.\"\n\nThis time, he didn't hold back. We were two brilliant things, or maybe two dark things sucking up all the brilliance in the world around us, masked and cloaked in light with the weighted crushing all-ness of eternity sitting in our cores. That's how it felt like, our two weights somehow greater than our mass, and yet we were so light and ephemeral and nothing could stop us except maybe each other. \n\nThe men got out of our way quickly. I think they didn't know what to expect; no one lasted long fighting me, but this was their Captain. And he could last, I knew he could last, how many times had he lasted against me? I had learned from him that I had no need to hold back, not like with the rest of these land boys, and so I didn't and they ran to be free of me but the Captain, I heard the Captain laugh even as my knife narrowly missed his cheek. \n\nI immediately understood his patterns, his body, the way he would turn and push and become light only to switch into complete darkness, and I danced with him through all of that and let waves crash against my ears, let my hands become storms, let my stomach carry the entirety of the crushing polar ice fields and he took it all and came back with the permanence of the stars. \n\nI nicked him on the shoulder at one point; he got me back on the chest when I didn't pull back fast enough. Then I landed a blow with the hilt of my blade on his hip, and another glanced past his neck, but that had been a trap and he very nearly threw me.\n\nBut in the end, he was still a land boy, and could not keep up with me. He began to tire and made three mistakes in quick succession, one at my expense and very nearly dangerous. When I next had an opportunity, I decided to end it before he hurt himself or me.\n\nThe opportunity came quickly. I offered him a good shot at my chest, and he lunged for it, overextending. I quickly dropped my knife to grab his hand, pressing hard into sensitive tendons and continuing his poor momentum choice at the same time, twisting his body so that he would trip over his own stepping foot. He gasped, and I saw shock on his face as he began to go down. It would have been an awkward and painful fall, but I dropped beneath him and caught his torso before it hit the deck.\n\nThere was sudden stillness as he just lay in my arms, breathing heavily. I leaned over, my own breath shaky from exertion and excitement, and gently laid a kiss on his forehead. \n\nHe suddenly started laughing. I looked at him, concerned, but he just reached up and sunk his hand into my hair, pulling my lips to his for a kiss, and I knew that he had felt all the same things that I had, had seen all the same things that I had, and he loved me and I loved him and we held it all under our skin like the end of the world. \n\n\"Holy shit,\" I heard from somewhere above us. I pulled away from the Captain to find Natch skidding to a stop next to our bodies. We'd somehow ended up nearly across the deck from where we'd started. \"You were - and then - holy fucking shit, can you teach me how to do that?\" \n\nI laughed until the Captain pulled me back down for another kiss. \n\n***\n\nThe Captain didn't let go of me until we were back in his room, keeping at least one finger on me at any time as we found the knives that had been dropped. There was a brief examination of wounds, but the Captain brushed it off. \"We're fine,\" he said forcefully, his eyes never leaving mine. I nodded, knowing he wanted me all to himself. I grinned as he snapped at the man trying to look at the small cut on my chest and gently guided the man away. \n\nThe minute we were alone in his room the Captain turned and grabbed me, kissing me hungrily. I responded, my hands reaching for his body, but he grabbed my wrists and shoved me up against the wall, pinning my hands at my sides. I let him move my body as he wanted; I was his to command.\n\n\"Fuck,\" he muttered, breaking the kiss. \"Need my hands, need yours here.\" \n\n\"I'll stay,\" I assured him, but he shook his head. \n\n\"Not good enough,\" he whispered against my lips, tightening his hands around my wrists. I moaned into his breath, and he took my lips between his teeth.\n\n\"Rope,\" he finally panted when we broke again. I nodded, and he pulled me towards the chair where the rope still sat, coiled. As we approached the chair a wicked expression passed over his face. \n\n\"Down,\" he commanded. I started to go to my knees but he shook his head, letting go of one wrist to grab my hair. \"Get in the the chair.\" \n\nI didn't move as quickly as I could, letting him drag me to the chair bodily. Once I was seated he began working on tying me up. It was a strange mirror of so many nights we had spent together, but his hands were much rougher, his fingers taking trips to places they would have never dared before. In those nights we were both restrained; now, I was the only one tied down and it was torture. \"Sir,\" I begged him, already vocal with need, but he just yanked my head back forcefully and kissed me into silence, then tied my feet to the chair legs. \n\nI was crazy with the sight of him there between my legs, so close and yet there was nothing I could do to reach him. As he finished, he ran his hand up my pant leg, fingers so light that I cursed and he smiled a smile so dangerous, so hungry, that for the first time I almost felt nervous.\n\nI couldn't remember ever being nervous before, not ever in my life.\n\nThat moment of nervousness somehow kicked my need into overdrive, opening up doors inside of me that had until then been closed. My body leaned against the ropes that bound me, sounds slipping from my lips without me having remembered creating them. \n\nHe grinned up at me, then stepped away. I cursed, then cursed again, then fell silent as he began to strip. All I could do was stare as his clothes fell to the floor, as his perfect body was revealed to me. No matter how many times I saw him like this, I didn't think I would ever be used to it. I waited, nearly breathless, for him to come to me. \n\nBut he didn't. He just stood there, too far away, un-fucking-touchable, perfect, and all the things building up against my skin were threatening to burst and then I would be nothing, nothing left but splashes of desire over the floor. \"Sir,\" I begged him, \"please, sir.\"\n\n\"What?\" He pretended to be surprised, smiling that dangerous smile. \"Is there something you need?\"\n\n\"Sir, please, you sir.\" I couldn't stop to think about if that made sense or not; those were the words that had come, and so those were the words that were said. \n\n\"Oh, do you?\" He walked behind me, trailing fire with his fingers across my shoulders. He dropped his lips to my ear. \"Hard to tell,\" he whispered, his breath sending me into rhapsodic throes against the ropes. \n\n\"Shit,\" I heard him mutter as he played with the collar of my shirt. \"Didn't think about this.\"\n\n\"Fucking cut it,\" I said desperately, needed to feel his skin against mine, then quickly added, \"please, sir,\" just in case. I was rewarded with a kiss against my neck. I twisted my head to try and find him, but he was already gone. \n\n\"Shit, sir. Sir!\" But he was walking away from me. I groaned and collapsed back against the chair, unable to do anything but wait. \n\nWhen he came back he held a knife. \n\nI sucked in my breath, suddenly aware of how compromised my position was. He met my eyes and grinned, and I felt every nerve in my body sharpened by that smile. He put his knee next to my leg, pressed against me dangerously close. \"Stay very still,\" he whispered in my ear, and I almost fell into shudders right then and there. He drew the sharp edge down my chest until it met cloth, raising goosebumps in its wake. I listened to the cloth ripping, muttering quiet curses and pleas to myself and any gods I could think of at the time that my body wouldn't pick this moment to twitch. \n\nHe made it the whole length, pulling the two halves of my shirt open to bare my chest. \"Good enough, I'd say.\" Then he got that look on his face again, and he brought the blade back to the cloth. I heard ripping again, and then he held a swath of the fabric in his hand. \n\nHe tossed the knife away not bothering to see where it landed. His eyes were on my face, that wicked grin slowly eating its way across his muscles. My eyes were on the cloth in his hand, anticipation building within me at what he intended to do with it. \n\nHe put his other knee up on the other side of my lap so that he was straddling me. I gasped, feeling his chest press against mine, his cock slide across my pants, over my own incredibly sensitive member, so hard, so close, so far, to come to a rest against my stomach. He wrapped one arm around his shoulder and used the other to smooth back my hair.\n\nHe leaned down and kissed me gently. \"Close your eyes for me, love,\" he whispered. I complied and immediately felt the cloth pass over my lids. \"Gonna make things dark, okay?\" He kissed each eyelid from behind the safety of the the cloth, then stood. I whimpered to feel his warmth leave me. For a moment his fingers lingered on my shoulders, and then he was gone. \n\nI sat still for a moment, plunged into total darkness and complete isolation. I was no longer in a room, but instead in the sea; I floated in cold currents of control and warm waves of desire, the only things I was able to know the things I could feel, the ropes on my skin, the sea beneath it, the screaming need beneath that, and I sat there and felt my heart race as I wondered -\n\nHe bit me so suddenly on my shoulder that I shouted, all my attention suddenly crashing in on that one spot, the sensations he brought down on me, and I tried to lean into him but he was gone as quickly as he had been there and I was back in my cold and warm sea of desire, waiting, waiting, and then his fingers gently landing on my hip on the other side and I gasped, but he was kissing my wrist and I cursed and then he was gone again. \n\nHe kept this up, lighting up my body and then sending me back into the dark, using teeth, fingers, differing pressures, never setting a rhythm that I could find and it was driving me mad. At some point his fingers hooked under my waistband, toying with the laces, and I tried to lift my hips toward him. His fingers immediately dug hard into my skin, shoving me back into the seat with force. I whimpered and let him do what he would, taking his time with the laces until I felt the waistband loose against my skin.\n\n\"Now lift,\" he told me. I lifted my hips and he slipped my pants down to my knees, exposing my rigid cock to the cold air of the room. \"Lift those again,\" he whispered into my thigh, kissing the bare skin and sending awful shivers of intense pleasure up my spine, \"and I will leave you here like this. Understand?\"\n\nI nodded furiously.\n\n\"I asked, my love.\" He bit the same spot and I heard a choked noise get mangled up in my throat. \"Do you understand?\"\n\n\"Yes, sir,\" I somehow managed, my voice pieced together from all the bits he had left me. Immediately after I said the words, he was gone again. \n\n\"Sir?\" I called, unwilling to wait. My body felt so tender; fuck, my soul felt tender. Somehow I was so much more exposed this way, unable to see. I needed him there with me, needed his touch, needed his smell and his lips and his -\n\n\"Shh, shh, I'm right here.\" He pressed his lips to my neck and felt me shudder. \"Now, I need you to listen to me, okay? This is very important.\" \n\nI nodded. I would do anything that he said. I was his, so completely his. If it kept him touching me, anchored to me, then I would do anything.\n\n\"Earlier today,\" he muttered into my neck, kissing me lightly, \"you didn't ask to come. Isn't that right?\"\n\nMy body froze. Ice particles slipped into my spine and spread out into every single one of my nerves at once; I felt like someone had filled my veins with something colder than snow, and yet hotter than the sun.\n\n\"I asked, isn't that right?\" He bit my neck with considerable force and I sucked in my breath. \n\n\"Yes, sir,\" I managed in that same cobbled-together voice. \n\n\"And you need to learn that that isn't okay, don't you?\"\n\n\"Yes,\" I barely breathed, feeling his teeth move to my collarbone, \"sir.\" He bit and ice reacted with fire reacted with water and I thought I might fly apart.\n\n\"Then here is what you're going to do. You're only going to come when I say you can this time; don't even bother asking. Your body is mine today, and I am in control. You will come when I tell you.\" Another bite, this time just under my ear, and more bits of me were lost to the sea and the fire, but he was still talking and I struggled to listen. \"Do you understand?\"\n\nI had to breathe for a bit before I could make the words. \"Yes, sir.\"\n\nI felt him smile against my skin. \"Good. Then we can finally get started.\"\n\nShit, I thought. What had this been, then? I had almost come undone at only this, if there was more...\n\nBut my attention was suddenly demanded by the fact that he had disappeared. \n\n\"Sir?\" I called out, desperate for him. Terrified of the spaces that existed without him, the possibilities they carried. When he didn't respond, I turned my head, trying to listen for him. \"Sir?\" \n\nThen suddenly his mouth was around my cock.\n\nIt took literally everything within my body not to lift my hips to him. My body should have been doubled over, my chest heaving, eyes wide, but my eyes were covered and my body was restrained and the Captain slowly moved his mouth down my shaft and I cursed and felt like begging, although I wasn't sure what I was supposed to be begging for. \n\nHe worked my shaft for what felt like eternity and also no time at all, his mouth a terrible and perfect extension to the warm dark that was my everything, his tongue torture against my head and shaft. It was so much that I came very close to coming. \n\n\"Sir!\" I called out, panicked. He lifted his head; I could feel his fingers digging into my thighs. \n\n\"I know,\" he told me from somewhere in the darkness. His voice was husky, roughened by the things he was doing to me. \"I know, but you won't.\" His tongue licked lightly against the head of my cock and it was close, so fucking close. \"Will you?\"\n\nI cursed and tilted my head back, trying to find some oxygen that hadn't already been sucked out of the space around my nose and mouth by my greedy lungs. \n\n\"Collect yourself, my love,\" and his words were not unkind, but instead a serious suggestion, \"because we're going to do something fun, and I really, really don't want to have to think up another punishment.\"\n\n\"Yes, sir,\" I whispered around all the fire his words had slipped into my soul.\n\nHe stood and kissed me, a soft teasing press of lips and tongue that was gone as soon as it had landed. I tried to follow him as he left, but of course I didn't know where he went, and of course the ropes kept me still, and he was out of reach and out of the world of darkness that he had put me into. I heard him moving around the room and tried to wait patiently, but it was so hard, so difficult. I was about to call out for him again when I heard him put something down at the desk next to me. \n\n\"Love,\" he said, and his voice was close and dangerous and I gasped to hear the chords of my own feelings mirrored in that single word, that powerful word. I expected him to say more, but instead he climbed onto my lap and slid his ass over my cock.\n\n\"Oh shit,\" I voice as I realized what was happening, \"oh shit, oh fuck.\" ",
        "His fingers lightly traced my face, listening to my curses. \"Wanna fuck you,\" he told me, his voice quiet, too light, all the strings that had tied him down gone, gone, gone, \"want you inside of me.\" His fingers squeezed for a second on my jawline. I could feel his need, feel the way he wanted this. There was a moment of hesitation. \"Okay?\" he asked me, and this wasn't a command but instead making sure, and I nodded. \n\n\"Just tell me what to do,\" I whispered, and his grip tightened again. \n\n\"Oh, I will.\" He kissed me gently, then let his teeth scrape against my lips. \"And you will do exactly what I say.\"\n\n\"Yes, sir,\" I breathed against his lips. I felt him smile, and then his hand was on my cock, slick with lube. \n\n\"Ready?\" he asked, and I nodded. He shifted on my lap, then the head of my cock was pressed against his hole. I gasped at the sensation. \n\nThen he lowered himself onto me.\n\nMy world exploded. I had thought I was in darkness; what a falsehood. I had simply not had my eyes opened, my world expanded, to experience the sudden brightness, electricity, everything out of nothing. The Captain was around me, to be so close to him, to exist with him like this, such a tightness and warmth and god he wasn't even moving yet. \n\nA kiss to my lips brought me back. \"Love,\" the Captain was saying in between kisses, his voice strained but amused, \"sailor, come back to me.\"\n\n\"Yes, sir,\" my voice replied, but I was still gone and he laughed as he planted more kisses on my chin and neck, watching me groan and twitch. \n\n\"Gonna move now,\" he finally said, his face buried in my neck, \"and you're not.\"\n\nIt was all I could do to nod. I guess that was good enough, because suddenly he was moving, and my world was exploding into edges of light again.\n\nHe started slowly, maybe thinking he was getting me used to the sensations, maybe getting used to them himself, but there was no getting used to this. Every motion brought a new sharp light, a new brightness into my dark world, and I cursed and tried not to writhe beneath him as my body moved on it's own. \n\nAt some point I heard him curse loudly, his fingers tightening on my shoulders where they had landed. He began to increase his rhythm, and I cursed with him.\n\n\"Love,\" he said, his voice desperate and somehow still commanding, \"need you to see me.\"\n\nI nodded, unable to voice anything other than the moans and curses he was pushing from my soul.\n\n\"Careful,\" he told me, panting, \"brightness.\" \n\nHe pulled the blindfold off, and I regretted the loss of the darkness for a moment, hated the way the light pushed away the most intense edges of the sensations in the face of vision, but then I saw him there, his face flushed just on the lines of those cheekbones, his pupils ragged in their search of my face, lips parted in gasps and breaths and I looked further down and found his hand stroking his hard cock and the entire view was so fucking perfect that I almost forgot to breathe.\n\nThe Captain didn't help that by lunging forward and greedily kissing me, his passion and enjoyment dripping into my mouth with a ferocity and deliciousness that was paralyzing. I moaned into the kiss and he bit on my lip hard, then moved his mouth down my jawline, then to my neck.\n\nWe existed only in curses and moans for some time. There was no other way we could have existed, no other way I wanted to exist. Everything I wanted to say to the Captain was expressed in my body in the way I breathed for him, gasped for him, didn't move for him, and he spoke back in the bites on my neck, the fingers he pressed to my throat then danced to my collarbone, the curses he dropped onto my skin, the way he did move for us both, riding me hard and fast. Then, suddenly he snapped his head next to mine. His hand buried in my hair, keeping my head forcibly in place. \n\n\"I'm going to count down,\" he whispered harshly in my ear. \"At zero, you can come. Understand?\"\n\n\"Yes, sir,\" I gasped.\n\nHe pulled back and I saw his face, still flushed, still beautiful, hair bouncing with the force of his movements. His grin was as ragged as his voice, and I loved every inch of it, every millimeter of him, every bit of his soul that he was spilling over into me. \"If you can untie your hands by then, you can touch me when you do.\"\n\nI immediately set to working on the knots he had left me in, my mind completely unable to focus on them for long enough to make any real progress, my hands slipping as badly as my thoughts. \n\n\"Three,\" he whispered, and I worked harder. \"Two,\" and his eyes were fluttering, oh god why wouldn't my fingers work but they were catching, I shook as I slipped again, \"one,\" but this time they held and the knots gave and my hands were almost free, just the tension of the ropes now, just the tension of that last command, and his voice was almost gone and his eyes closed, his head thrown back, and he told me in a whisper that shot through my entire body;\n\n\"Come.\"\n\nThe part of my mind that had been working so hard on keeping myself together let everything fly apart, even as my hands flew to his body. And god, oh god, he had come with me and I felt it, could feel his body coming with me, seizing and collapsing and the intensity of the moment was so great that I pulled his body to mine and sunk my teeth into his neck so that I would have something solid to feel, so that I wouldn't simply fly to pieces.\n\nWe sat there, breathing heavily, my face buried into his neck, his hand tight in my hair. I readjusted and simply pressed my face to him, breathed him in again and again until it felt like there was no oxygen left in my lungs, only him. That was how I wanted to exist; nothing but him. Every part of me, his. I tightened my arms around him and breathed again.\n\nIn time, he stirred above me, around me I realized, for I was still deep within him. He kissed the top of my head, his fingers tracing down to find my cheeks. I let them just flutter over my skin for a bit, but soon they became more insistent, hooking beneath my chin and trying to lift my face. I resisted, wanting to stay where I was, breathing him, but he kept pulling and so I let myself be guided up, resting my chin on his chest.\n\nThe expression I found on his face chased whatever oxygen was left in my lungs out, and then all that was left was him. \n\nHe looked at me with such tenderness, such love, those dark eyes warm and soft and melting all over my face with things I hadn't even known I'd needed until I'd met him, and I reached up and brought his lips down to mine so that he could taste the way my breath had become his, the way I existed for him, and so I could taste the drippings of those eyes closer, and because I needed to fucking kiss him when he looked like that. \n\n\"I love you,\" he whispered into our kiss. The last remnants of those bright edges flared within me, cutting into my stomach and twining around my soul. I pulled him back and kissed him more deeply, but he pushed away. \"Fuck, sailor, I just said -\"\n\n\"I know,\" I told him, because I did. \"And you know that I love you, too.\" Because he should, because he had to know. Because I did. \n\nHe stared down at me, those eyes dripping, those lips open just the slightest bit, and there was no frown in sight, no furrowed brow, because he did know. He'd known ever since he saw me, I think, the same way I had known in my body the moment I had seen him across the ships, even if it had taken me days to admit it in my words. \"Now kiss me,\" I plead quietly, and pulled him back to me. \n\nWhen he pulled away again, the only things I could find on his face was happiness and content. He sighed and rested his head against my shoulder. I ran my fingers up and down his spine slowly, feeling the warmth of his skin under the rough pads. \n\n\"It's late,\" I said, \"We should think about getting to sleep.\"\n\n\"You don't want to sleep in the chair again?\" he asked with a smile. \n\nI thought about the cricks in my back, the way my neck had been stiff for hours every morning, not to mention the emotional pain, and winced. \"Bed,\" I said decisively. \n\nHe kissed my neck. \"I'll get up.\" It didn't sound very convincing. \n\n\"Captain.\" \n\nHe sighed. \"Okay, okay.\" he shifted, then lifted off of me. I saw him wince as my cock slid from within him, and I tightened my hands for a moment on his back. He smiled at me and kissed my forehead, then stepped down to the floor. \"Bed, I guess.\" He gave a strange smirking smile as he made his way towards the bed.\n\nI watched him go, giving myself a moment to just look at him, to take him in. God, he was perfect. How was I going to live without him for three months?\n\nHe reached the bed and looked back to see me. \"You coming, or what?\" he asked, that same smile on his face. I shook my head at him, at the way he was, and stood to join him in bed.\n\nAs I stood, I suddenly remembered that we had never untied my legs from the chair. I felt my weight begin to topple over and cursed, windmilling my arms, but it was too late; my momentum and fate were sealed. I hit the floor with a bang, the chair smacking into the back of my legs as it followed me in my trajectory.\n\n\"Shit,\" I muttered to the floor. \n\nI heard laughter and lifted my head to find the Captain all but doubled over in the bed, his hands pushing back his hair. I propped my head up in my hand and watched him, smiling.\n\n\"Sorry,\" he gasped, \"oh my god I just, and then you, oh my god I didn't really think you'd -\"\n\nHe collapsed back into laughter and I just sat there, smiling, watching him.\n\nThree months was going to be a very, very long time."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay male",
        "gay bdsm",
        "orgasm control",
        "blindfolds",
        "gay romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-07"
}